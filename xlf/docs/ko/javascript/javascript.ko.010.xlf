<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="javascript">
    <body>
      <group id="javascript">
        <trans-unit id="d7274e5e97e51f89dcc992f63e442d7583589718" translate="yes" xml:space="preserve">
          <source>Left shift assignment</source>
          <target state="translated">왼쪽 교대 할당</target>
        </trans-unit>
        <trans-unit id="39d5c755451f34abdf8a7a8468ab7b426868dc27" translate="yes" xml:space="preserve">
          <source>Left shift assignment (&lt;code&gt;x &amp;lt;&amp;lt;= y&lt;/code&gt;)</source>
          <target state="translated">왼쪽 시프트 할당 ( &lt;code&gt;x &amp;lt;&amp;lt;= y&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="7276b916e8106868ad200ee044fe6213e9913225" translate="yes" xml:space="preserve">
          <source>Left shift assignment operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10260cd617377a3686a745d1ef1f4a169149adf4" translate="yes" xml:space="preserve">
          <source>Left shift assignment.</source>
          <target state="translated">왼쪽 교대 할당.</target>
        </trans-unit>
        <trans-unit id="7a86ed2dcab0bdf22a0d1e692c281b56aaf7a7cf" translate="yes" xml:space="preserve">
          <source>Left shift operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea928326b4adac815fd38c1db5569eadf2096576" translate="yes" xml:space="preserve">
          <source>Left values are the destination of an assignment.</source>
          <target state="translated">왼쪽 값은 과제의 대상입니다.</target>
        </trans-unit>
        <trans-unit id="d44ab597e37bc45df68eb94fbe2d47be14440f3f" translate="yes" xml:space="preserve">
          <source>Left-associativity (left-to-right) means that it is processed as &lt;code&gt;(a OP b) OP c&lt;/code&gt;, while right-associativity (right-to-left) means it is interpreted as &lt;code&gt;a OP (b OP c)&lt;/code&gt;. Assignment operators are right-associative, so you can write:</source>
          <target state="translated">왼쪽 연관 (왼쪽에서 오른쪽으로)은 &lt;code&gt;(a OP b) OP c&lt;/code&gt; 로 처리되고 오른쪽 연관 (오른쪽에서 왼쪽으로)은 &lt;code&gt;a OP (b OP c)&lt;/code&gt; 로 해석됨을 의미합니다 . 대입 연산자는 오른쪽 연관이므로 다음과 같이 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="58e547eac6fd0cb111e95248a40a03f759cf2091" translate="yes" xml:space="preserve">
          <source>Left-associativity (left-to-right) means that it is processed as &lt;code&gt;(a OP&lt;sub&gt;1&lt;/sub&gt; b) OP&lt;sub&gt;2&lt;/sub&gt; c&lt;/code&gt;, while right-associativity (right-to-left) means it is interpreted as &lt;code&gt;a OP&lt;sub&gt;1&lt;/sub&gt; (b OP&lt;sub&gt;2&lt;/sub&gt; c)&lt;/code&gt;. Assignment operators are right-associative, so you can write:</source>
          <target state="translated">Left-associativity (left-to-right) means that it is processed as &lt;code&gt;(a OP&lt;sub&gt;1&lt;/sub&gt; b) OP&lt;sub&gt;2&lt;/sub&gt; c&lt;/code&gt; , while right-associativity (right-to-left) means it is interpreted as &lt;code&gt;a OP&lt;sub&gt;1&lt;/sub&gt; (b OP&lt;sub&gt;2&lt;/sub&gt; c)&lt;/code&gt; . Assignment operators are right-associative, so you can write:</target>
        </trans-unit>
        <trans-unit id="8a0ac8d169f689f3a2cbd1f0c5a1ee04afb63d6f" translate="yes" xml:space="preserve">
          <source>Left-hand-side expressions</source>
          <target state="translated">왼쪽 표현</target>
        </trans-unit>
        <trans-unit id="409d87dc7d998ac0f7a9190903f0c9124a62aac7" translate="yes" xml:space="preserve">
          <source>Legacy RegExp features in JavaScript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602f77beb646fe8826dc6d59330122f698aa5b2e" translate="yes" xml:space="preserve">
          <source>Legacy generator example</source>
          <target state="translated">레거시 생성기 예</target>
        </trans-unit>
        <trans-unit id="eb1a6ef6b2d5a96b637c6e2bd94b083c753413f8" translate="yes" xml:space="preserve">
          <source>Legacy generator methods</source>
          <target state="translated">레거시 생성기 방법</target>
        </trans-unit>
        <trans-unit id="8af3ba8c920b432b9c13eb766c3f0c0bf790a870" translate="yes" xml:space="preserve">
          <source>Legacy generator objects</source>
          <target state="translated">레거시 생성기 개체</target>
        </trans-unit>
        <trans-unit id="1b8061cca5a68493c20cda07ce8f656eb979a139" translate="yes" xml:space="preserve">
          <source>Legacy generators</source>
          <target state="translated">레거시 생성기</target>
        </trans-unit>
        <trans-unit id="0f9e45be357f889577f439ce926c901f589cb3af" translate="yes" xml:space="preserve">
          <source>Length property whose value is 0.</source>
          <target state="translated">값이 0 인 길이 속성</target>
        </trans-unit>
        <trans-unit id="8b0e154f6fbf4b8216767e2eb6b9ecd7e1492256" translate="yes" xml:space="preserve">
          <source>Length property whose value is 1.</source>
          <target state="translated">값이 1 인 길이 속성</target>
        </trans-unit>
        <trans-unit id="4d0a93ec5c62c053a0e24faecae6b5343849485f" translate="yes" xml:space="preserve">
          <source>Length property whose value is always 1 (number of constructor arguments).</source>
          <target state="translated">값이 항상 1 인 길이 속성 (생성자 인수 수).</target>
        </trans-unit>
        <trans-unit id="71efd53431a883c9a10358eb8e474cf25231c4c0" translate="yes" xml:space="preserve">
          <source>Lepcha digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9f32c700bfddfe21bbb527814fc47e1731c5d0" translate="yes" xml:space="preserve">
          <source>Less Than</source>
          <target state="translated">보다 작음</target>
        </trans-unit>
        <trans-unit id="32df0a960ce3356d1cfe450da55371bc7bcb69d0" translate="yes" xml:space="preserve">
          <source>Less Than Or Equal</source>
          <target state="translated">작거나 같음</target>
        </trans-unit>
        <trans-unit id="1d3d412a0852cc56c28ad0c2a1153229aa365b43" translate="yes" xml:space="preserve">
          <source>Less than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40dc2ee0e264136024068cd0794698032c7ad458" translate="yes" xml:space="preserve">
          <source>Less than (&lt;code&gt;a &amp;lt; b&lt;/code&gt;)</source>
          <target state="translated">보다 작음 ( &lt;code&gt;a &amp;lt; b&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a2afdfdb4961753b03915ca0efee1a3193a47917" translate="yes" xml:space="preserve">
          <source>Less than operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c66b888888499ad1dfb866fdff6519b6d2ce5f" translate="yes" xml:space="preserve">
          <source>Less than operator (&amp;lt;)</source>
          <target state="translated">연산자 미만 (&amp;lt;)</target>
        </trans-unit>
        <trans-unit id="2f0d73ebb0c45ad4a8dbee6c9fcfbabbb55b0f89" translate="yes" xml:space="preserve">
          <source>Less than operator.</source>
          <target state="translated">운영자 미만.</target>
        </trans-unit>
        <trans-unit id="3e9c284c3d11aa9519ca4d354497c27984f386ca" translate="yes" xml:space="preserve">
          <source>Less than or equal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a302a77ca46cc23064776fa25ec403984a286bf0" translate="yes" xml:space="preserve">
          <source>Less than or equal (&lt;code&gt;a &amp;lt;= b&lt;/code&gt;)</source>
          <target state="translated">작거나 같음 ( &lt;code&gt;a &amp;lt;= b&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="2ae09069558c0fae23948793b9a224a8e610e4a4" translate="yes" xml:space="preserve">
          <source>Less than or equal operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9f58eec281d9c0ba0a0607187b98b54044cfec" translate="yes" xml:space="preserve">
          <source>Less than or equal operator (&amp;lt;=)</source>
          <target state="translated">작거나 같은 연산자 (&amp;lt;=)</target>
        </trans-unit>
        <trans-unit id="3179bc9de0a9648440c95b1257803b6f4aa7b760" translate="yes" xml:space="preserve">
          <source>Less than or equal operator.</source>
          <target state="translated">작거나 같은 연산자</target>
        </trans-unit>
        <trans-unit id="75dec6da0b5023d14b33a11fe322c77f47c4e401" translate="yes" xml:space="preserve">
          <source>Let us look into the above code step by step.</source>
          <target state="translated">위의 코드를 단계별로 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="e61c0d9498d37365ae7a501fc96cdef6330c51ff" translate="yes" xml:space="preserve">
          <source>Let's checkout below how to delete an Object from a Set.</source>
          <target state="translated">세트에서 객체를 삭제하는 방법을 아래에서 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a256335e0c569736a039cec7785923ac4619bbef" translate="yes" xml:space="preserve">
          <source>Let's consider one more case.</source>
          <target state="translated">하나 더 생각해 봅시다.</target>
        </trans-unit>
        <trans-unit id="097fb1a76af3f7fa494599f7ef1303e112e2e8bf" translate="yes" xml:space="preserve">
          <source>Let's decompose a &quot;traditional function&quot; down to the simplest &quot;arrow function&quot; step-by-step:</source>
          <target state="translated">Let's decompose a &quot;traditional function&quot; down to the simplest &quot;arrow function&quot; step-by-step:</target>
        </trans-unit>
        <trans-unit id="6e77fa97f0c24aa56b75afd6280462dad845bf54" translate="yes" xml:space="preserve">
          <source>Let's generate a list of words from a list of sentences.</source>
          <target state="translated">문장 목록에서 단어 목록을 생성 해 봅시다.</target>
        </trans-unit>
        <trans-unit id="b9a168e2d3e45553b7bda64e54155b467277f279" translate="yes" xml:space="preserve">
          <source>Let's see how the same code behaves in strict mode. Instead of returning &lt;code&gt;false&lt;/code&gt;, the statement raises a &lt;code&gt;SyntaxError&lt;/code&gt;.</source>
          <target state="translated">엄격한 모드에서 동일한 코드가 어떻게 작동하는지 봅시다. 이 문은 &lt;code&gt;false&lt;/code&gt; 를 반환하는 대신 &lt;code&gt;SyntaxError&lt;/code&gt; 를 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="ce461e8eb1b6590d9c10317362f43850ac28b48e" translate="yes" xml:space="preserve">
          <source>Let's take an example where we have the following hierarchy:</source>
          <target state="translated">Let's take an example where we have the following hierarchy:</target>
        </trans-unit>
        <trans-unit id="f6b1bf22849af13b2f0efc6a4a757f7779cdff64" translate="yes" xml:space="preserve">
          <source>Let's try to define the cases in which re-assignment of the original constructor will play a major role and when it will be one extra unused line of code.</source>
          <target state="translated">원래 생성자의 재 할당이 중요한 역할을 수행하는 경우와 사용되지 않는 추가 코드 행이되는 경우를 정의 해 봅시다.</target>
        </trans-unit>
        <trans-unit id="15c29f1b1524edd0f78d1dfc4229f770d1697d80" translate="yes" xml:space="preserve">
          <source>Let's try to define the cases in which re-assignment of the original constructor will play a major role, and when it will be one superfluous line of code.</source>
          <target state="translated">Let's try to define the cases in which re-assignment of the original constructor will play a major role, and when it will be one superfluous line of code.</target>
        </trans-unit>
        <trans-unit id="2a3d90294e5a1e21d9e3e9d1fe99e3e1da56c584" translate="yes" xml:space="preserve">
          <source>Lexical grammar</source>
          <target state="translated">어휘 문법</target>
        </trans-unit>
        <trans-unit id="76d8e88746aed29c5732084d86f85c42f51868b5" translate="yes" xml:space="preserve">
          <source>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.</source>
          <target state="translated">Creative Commons Attribution-ShareAlike License v2.5 이상에 따라 라이센스가 부여되었습니다.</target>
        </trans-unit>
        <trans-unit id="ecb8ea108e7fb941470afc0e3af1ac1baf6a1e0e" translate="yes" xml:space="preserve">
          <source>Licensing note</source>
          <target state="translated">라이센싱 노트</target>
        </trans-unit>
        <trans-unit id="f6f2202db3f4a1940d24c96390a31d6eb9b3efc4" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;casefirst&quot;&gt;&lt;code&gt;Intl.Locale.caseFirst&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;numeric&lt;/code&gt; represents a modification to the collation rules utilized by the locale. &lt;code&gt;numeric&lt;/code&gt; is a &lt;a href=&quot;../../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; value, which means that it can be either &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. If &lt;code&gt;numeric&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;, there will be no special handling of numeric values in strings. If &lt;code&gt;numeric&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, then the locale will take numeric characters into account when collating strings. This special numeric handling means that sequences of decimal digits will be compared as numbers. For example, the string &quot;A-21&quot; will be considered less than &quot;A-123&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a0f18556d58aa462214ef7d2cbef4151ed526a" translate="yes" xml:space="preserve">
          <source>Like other locale subtags, the collation type can be added to the &lt;a href=&quot;../locale&quot;&gt;&lt;code&gt;Intl.Locale&lt;/code&gt;&lt;/a&gt; object via the locale string, or a configuration object argument to the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c594adfd01f1f5ba77e852e64e58fa94195076" translate="yes" xml:space="preserve">
          <source>Like properties, field names may be computed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2547adb84f5a1797842e48834e0968b78669a451" translate="yes" xml:space="preserve">
          <source>Like the &lt;code&gt;&lt;var&gt;initialization&lt;/var&gt;&lt;/code&gt; block, the &lt;code&gt;&lt;var&gt;condition&lt;/var&gt;&lt;/code&gt; block is also optional. If you are omitting this expression, you must make sure to break the loop in the body in order to not create an infinite loop.</source>
          <target state="translated">Like the &lt;code&gt;&lt;var&gt;initialization&lt;/var&gt;&lt;/code&gt; block, the &lt;code&gt;&lt;var&gt;condition&lt;/var&gt;&lt;/code&gt; block is also optional. If you are omitting this expression, you must make sure to break the loop in the body in order to not create an infinite loop.</target>
        </trans-unit>
        <trans-unit id="db7db35c4dbf8be45e2b497be99beed0bbb897fe" translate="yes" xml:space="preserve">
          <source>Like the &lt;em&gt;initialization&lt;/em&gt; block, the &lt;em&gt;condition&lt;/em&gt; block is also optional. If you are omitting this expression, you must make sure to break the loop in the body in order to not create an infinite loop.</source>
          <target state="translated">&lt;em&gt;초기화&lt;/em&gt; 블록 과 마찬가지로 &lt;em&gt;조건&lt;/em&gt; 블록도 옵션입니다. 이 표현식을 생략하는 경우 무한 루프를 작성하지 않으려면 본문에서 루프를 끊어야합니다.</target>
        </trans-unit>
        <trans-unit id="8375c426f4751b4105feba4dfff4470beae815d2" translate="yes" xml:space="preserve">
          <source>Like the OR and AND logical operators, the right-hand side expression is not evaluated if the left-hand side proves to be neither &lt;code&gt;null&lt;/code&gt; nor &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd669e63e74c8dd2da1b753a89389bda8688ab49" translate="yes" xml:space="preserve">
          <source>Like the equality operator, the inequality operator will attempt to convert and compare operands of different types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00b3a385dedf4a0216051e47390ca93717f0e8e3" translate="yes" xml:space="preserve">
          <source>Like the strict equality operator, the strict inequality operator will always consider operands of different types to be different:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b24978f15c1990284bdfda88cc584f231a438a0" translate="yes" xml:space="preserve">
          <source>Like their public equivalent, private static methods are called on the class itself, not instances of the class. Like private static fields, they are only accessible from inside the class declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b6e5620970fc24f2fc3597154381f339b82c1d8" translate="yes" xml:space="preserve">
          <source>Likewise, &lt;code&gt;-9 &amp;gt;&amp;gt; 2&lt;/code&gt; yields &lt;code&gt;-3&lt;/code&gt;, because the sign is preserved:</source>
          <target state="translated">마찬가지로 부호가 유지되기 때문에 &lt;code&gt;-9 &amp;gt;&amp;gt; 2&lt;/code&gt; &lt;code&gt;-3&lt;/code&gt; 을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="aedf2b5b9df70af978abb98ed16901998bfa00a8" translate="yes" xml:space="preserve">
          <source>Likewise, if the body requires&lt;strong&gt; additional lines&lt;/strong&gt; of processing, you'll need to re-introduce brackets &lt;strong&gt;PLUS the &quot;return&quot;&lt;/strong&gt; (arrow functions do not magically guess what or when you want to &quot;return&quot;):</source>
          <target state="translated">Likewise, if the body requires&lt;strong&gt; additional lines&lt;/strong&gt; of processing, you'll need to re-introduce brackets &lt;strong&gt;PLUS the &quot;return&quot;&lt;/strong&gt; (arrow functions do not magically guess what or when you want to &quot;return&quot;):</target>
        </trans-unit>
        <trans-unit id="83d037e7f68258c3071cb41e229a9addf7ab1b28" translate="yes" xml:space="preserve">
          <source>Likewise, to invoke strict mode for a function, put the &lt;em&gt;exact&lt;/em&gt; statement &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; (or &lt;code&gt;'use strict';&lt;/code&gt;) in the function's body before any other statements.</source>
          <target state="translated">마찬가지로 함수에 대해 엄격 모드를 호출 &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; 이라는 &lt;em&gt;정확한&lt;/em&gt; 문장을 넣으십시오 . (또는 &lt;code&gt;'use strict';&lt;/code&gt; )는 다른 문장보다 먼저 함수 본문에 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ae93f84c79de1472ad2305dcbc2b4511db702ea" translate="yes" xml:space="preserve">
          <source>Limbu digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a31dca72ac86af075288f93494ce671cfae7b44" translate="yes" xml:space="preserve">
          <source>Limin Zhu, Brian Terlson and Microsoft Edge Team: &lt;a href=&quot;https://blogs.windows.com/msedgedev/2016/05/17/es6-modules-and-beyond/&quot;&gt;Previewing ES6 Modules and more from ES2015, ES2016 and beyond&lt;/a&gt;</source>
          <target state="translated">Limin Zhu, Brian Terlson and Microsoft Edge Team: &lt;a href=&quot;https://blogs.windows.com/msedgedev/2016/05/17/es6-modules-and-beyond/&quot;&gt;Previewing ES6 Modules and more from ES2015, ES2016 and beyond&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2abd199292d800fa3a80bd3c37bdfccc94f580e6" translate="yes" xml:space="preserve">
          <source>Line Feed</source>
          <target state="translated">줄 바꿈</target>
        </trans-unit>
        <trans-unit id="8063848dd725bd56f98d4d78213b9bcdc4a7dc13" translate="yes" xml:space="preserve">
          <source>Line Separator</source>
          <target state="translated">선 구분자</target>
        </trans-unit>
        <trans-unit id="416c5c2bab7e468b1cc70ef96bfcfdf5d2ae4c96" translate="yes" xml:space="preserve">
          <source>Line breaks</source>
          <target state="translated">줄 바꿈</target>
        </trans-unit>
        <trans-unit id="02790dc9cfdfc267dabc9ecbdafb6cb09aa3210b" translate="yes" xml:space="preserve">
          <source>Line number in file that raised this error.</source>
          <target state="translated">이 오류가 발생한 파일의 줄 번호입니다.</target>
        </trans-unit>
        <trans-unit id="e1c65d1701b98a1496e34b62a1d5a4eb0a8dbabf" translate="yes" xml:space="preserve">
          <source>Line number in file that raised this error. Inherited from &lt;a href=&quot;../error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 오류가 발생한 파일의 줄 번호입니다. &lt;a href=&quot;../error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 에서 상속되었습니다 .</target>
        </trans-unit>
        <trans-unit id="1717aa35763a62c52c6cb8ab288a48bcaa9cb242" translate="yes" xml:space="preserve">
          <source>Line number in file that raised this error. Inherited from &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 오류가 발생한 파일의 줄 번호입니다. &lt;a href=&quot;error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 에서 상속되었습니다 .</target>
        </trans-unit>
        <trans-unit id="353341e850ac457bc0d81c175649fba5a8d94e0f" translate="yes" xml:space="preserve">
          <source>Line tabulation</source>
          <target state="translated">선 도표</target>
        </trans-unit>
        <trans-unit id="c5b93f1599cfea8a5bf1876a65571fc997066bd9" translate="yes" xml:space="preserve">
          <source>Line terminator characters</source>
          <target state="translated">줄 종결 자 문자</target>
        </trans-unit>
        <trans-unit id="aa3ba830ebf0f8ac5651680deb0ea80de3efc5f2" translate="yes" xml:space="preserve">
          <source>Line terminators</source>
          <target state="translated">줄 종결 자</target>
        </trans-unit>
        <trans-unit id="b2a2f02d4365575afb9208fc575114b2157b9bb8" translate="yes" xml:space="preserve">
          <source>Links (sets the constructor of) the newly created object to another object by setting the other object as its parent prototype;</source>
          <target state="translated">Links (sets the constructor of) the newly created object to another object by setting the other object as its parent prototype;</target>
        </trans-unit>
        <trans-unit id="d1b0d288e4a7ac8ca8db710117e546db4b95c92e" translate="yes" xml:space="preserve">
          <source>Links created with the &lt;code&gt;link()&lt;/code&gt; method become elements in the &lt;code&gt;links&lt;/code&gt; array of the &lt;code&gt;document&lt;/code&gt; object. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/links&quot;&gt;&lt;code&gt;document.links&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;link()&lt;/code&gt; 메소드로 작성된 링크 는 &lt;code&gt;document&lt;/code&gt; 오브젝트 의 &lt;code&gt;links&lt;/code&gt; 배열 에서 요소가됩니다 . &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/links&quot;&gt; &lt;code&gt;document.links&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1c3a042898163bd32ec015d60ede23b01d0751fd" translate="yes" xml:space="preserve">
          <source>Links created with the &lt;code&gt;link()&lt;/code&gt; method become elements in the &lt;code&gt;links&lt;/code&gt; array of the &lt;code&gt;document&lt;/code&gt; object. See &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Document/links&quot;&gt;&lt;code&gt;document.links&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Links created with the &lt;code&gt;link()&lt;/code&gt; method become elements in the &lt;code&gt;links&lt;/code&gt; array of the &lt;code&gt;document&lt;/code&gt; object. See &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Document/links&quot;&gt; &lt;code&gt;document.links&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="fa6e00a67dfa744b3fd8a96d04fc716d5fb177de" translate="yes" xml:space="preserve">
          <source>List of errors</source>
          <target state="translated">오류 목록</target>
        </trans-unit>
        <trans-unit id="6e9f153c19568b783feed4f41257792e54a52509" translate="yes" xml:space="preserve">
          <source>Literal notation and constructor</source>
          <target state="translated">Literal notation and constructor</target>
        </trans-unit>
        <trans-unit id="df09025c15b71245a7836ec9ea8cd72c09fd934a" translate="yes" xml:space="preserve">
          <source>Literal syntax</source>
          <target state="translated">Literal syntax</target>
        </trans-unit>
        <trans-unit id="6f3870dfe8c8aad7b4dc942acda1bb8b9c1e8958" translate="yes" xml:space="preserve">
          <source>Literal, constructor, and factory notations are possible:</source>
          <target state="translated">리터럴, 생성자 및 팩토리 표기법이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="c7ba7dcf662374aafe652b03d75cb8f6024519d9" translate="yes" xml:space="preserve">
          <source>Literals</source>
          <target state="translated">Literals</target>
        </trans-unit>
        <trans-unit id="c165a985fde914a6d808548fe0ff08989ad3a241" translate="yes" xml:space="preserve">
          <source>Little known fact: &lt;code&gt;Array.prototype&lt;/code&gt; itself is an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">알려진 사실 : &lt;code&gt;Array.prototype&lt;/code&gt; 자체는 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; 입니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d81b072a609cb829f45333cb83e086a659ba9738" translate="yes" xml:space="preserve">
          <source>Living Standard</source>
          <target state="translated">생활 수준</target>
        </trans-unit>
        <trans-unit id="c91f6a1a8d1cf38d8d158fef6da1fe8a36f5eb93" translate="yes" xml:space="preserve">
          <source>Loading WebAssembly code, using the &lt;a href=&quot;webassembly/instantiate&quot;&gt;&lt;code&gt;WebAssembly.instantiate()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;webassembly/instantiate&quot;&gt; &lt;code&gt;WebAssembly.instantiate()&lt;/code&gt; &lt;/a&gt; 함수를 사용하여 WebAssembly 코드로드</target>
        </trans-unit>
        <trans-unit id="3e6a247fd789a5192828663a4d93e87c54002101" translate="yes" xml:space="preserve">
          <source>Loading an image with XHR</source>
          <target state="translated">XHR로 이미지 불러 오기</target>
        </trans-unit>
        <trans-unit id="3493471d212e62809e63296faf35533fc451d338" translate="yes" xml:space="preserve">
          <source>Locale identification and negotiation</source>
          <target state="translated">로캘 식별 및 협상</target>
        </trans-unit>
        <trans-unit id="2dbe8d7c8898fa5020ae2221efb3961dc068f159" translate="yes" xml:space="preserve">
          <source>Locale negotiation</source>
          <target state="translated">로케일 협상</target>
        </trans-unit>
        <trans-unit id="2bc25af59d1441fccaa49517d3f4e24b6b3a2775" translate="yes" xml:space="preserve">
          <source>Log text</source>
          <target state="translated">로그 텍스트</target>
        </trans-unit>
        <trans-unit id="eb0246ab597f101100cd98bf79e39c235710b3bd" translate="yes" xml:space="preserve">
          <source>Logging the contents of a &lt;code&gt;Set&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; 객체 의 내용 로깅</target>
        </trans-unit>
        <trans-unit id="fe7acd4756c808c0546f76c1d0e556f665dfedcb" translate="yes" xml:space="preserve">
          <source>Logging the contents of a Set object</source>
          <target state="translated">Logging the contents of a Set object</target>
        </trans-unit>
        <trans-unit id="ba8b87ccf6093ed4cdf22d73250f879496fe82c1" translate="yes" xml:space="preserve">
          <source>Logging the contents of a typed array</source>
          <target state="translated">형식화 된 배열의 내용 로깅</target>
        </trans-unit>
        <trans-unit id="c5d5c5fb2a8798e4f962780fba63386de96b07b6" translate="yes" xml:space="preserve">
          <source>Logical AND</source>
          <target state="translated">논리 AND</target>
        </trans-unit>
        <trans-unit id="71cf2f6080983225905de36905505154a820ef28" translate="yes" xml:space="preserve">
          <source>Logical AND (&amp;amp;&amp;amp;)</source>
          <target state="translated">논리 AND (&amp;amp;&amp;amp;)</target>
        </trans-unit>
        <trans-unit id="c682b147edc0ff986803f250255168d7cc20e0f9" translate="yes" xml:space="preserve">
          <source>Logical AND (&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;)</source>
          <target state="translated">논리 AND ( &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="9ee940889c13036a3afb655d024f3b4ec393695f" translate="yes" xml:space="preserve">
          <source>Logical AND assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdfdfa5bfa02cac3661523897949a918f687f565" translate="yes" xml:space="preserve">
          <source>Logical AND assignment (&lt;code&gt;x &amp;amp;&amp;amp;= y&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca640b53436d6f6194c7f0b4aee20b058252397f" translate="yes" xml:space="preserve">
          <source>Logical AND assignment short-circuits as well meaning that &lt;code&gt;x &amp;amp;&amp;amp;= y&lt;/code&gt; is equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="109b4017ee11f0a03112a188ef1036525a53b900" translate="yes" xml:space="preserve">
          <source>Logical AND.</source>
          <target state="translated">논리 AND.</target>
        </trans-unit>
        <trans-unit id="986b1c0ebbf6c87bfbad17a715534898d4620969" translate="yes" xml:space="preserve">
          <source>Logical Assignment Operators&lt;br/&gt;&lt;small&gt;The definition of 'Assignment operators' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e803ba6df9ebf5f542bc2b7ce91db2dc559f7e" translate="yes" xml:space="preserve">
          <source>Logical NOT</source>
          <target state="translated">논리 NOT</target>
        </trans-unit>
        <trans-unit id="d2374f9ccca8d3bbbfdb8c395f8771438da0f191" translate="yes" xml:space="preserve">
          <source>Logical NOT (!)</source>
          <target state="translated">논리 NOT (!)</target>
        </trans-unit>
        <trans-unit id="6d19dfcd9f3d114d74ecfa9d75fca8de01c9fbea" translate="yes" xml:space="preserve">
          <source>Logical NOT (&lt;code&gt;!&lt;/code&gt;)</source>
          <target state="translated">논리 NOT ( &lt;code&gt;!&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="474ac7621d0c9fac077b4360d120fcec72cfee3e" translate="yes" xml:space="preserve">
          <source>Logical NOT operator.</source>
          <target state="translated">논리 NOT 연산자</target>
        </trans-unit>
        <trans-unit id="e9b0aefdf7ed2c67abbfc572bbc5743979450674" translate="yes" xml:space="preserve">
          <source>Logical OR</source>
          <target state="translated">논리 OR</target>
        </trans-unit>
        <trans-unit id="b4cc4ec7b525ae12e6d3ec39068869ce695094b8" translate="yes" xml:space="preserve">
          <source>Logical OR (&lt;code&gt;||&lt;/code&gt;)</source>
          <target state="translated">논리 OR ( &lt;code&gt;||&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3c2b7ba8c479287d3a4eec45ee8b468ffed65e9a" translate="yes" xml:space="preserve">
          <source>Logical OR (||)</source>
          <target state="translated">논리 OR (||)</target>
        </trans-unit>
        <trans-unit id="ddec767a545ea699a2149006f3fe5a26b6f74b9d" translate="yes" xml:space="preserve">
          <source>Logical OR assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d91e430eaed5ab4b1ce6c6f890a0b3a9c63b893" translate="yes" xml:space="preserve">
          <source>Logical OR assignment (&lt;code&gt;x ||= y&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd652096e33632e38cfb2edec3c4f931a4a3e36c" translate="yes" xml:space="preserve">
          <source>Logical OR assignment (&lt;code&gt;||=&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ace0bee30311dd13986b5eae39ed940509ec3c" translate="yes" xml:space="preserve">
          <source>Logical OR assignment short-circuits as well, meaning it only performs an assignment if the logical operation would evaluate the right-hand side. In other words, &lt;code&gt;x ||= y&lt;/code&gt; is equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07dfdb18def1b141fb32dd8352fb998a138625d3" translate="yes" xml:space="preserve">
          <source>Logical OR.</source>
          <target state="translated">논리 OR.</target>
        </trans-unit>
        <trans-unit id="65eac6118ebdd55aa38b41f70efdf532e567ffd8" translate="yes" xml:space="preserve">
          <source>Logical Operators</source>
          <target state="translated">논리 연산자</target>
        </trans-unit>
        <trans-unit id="1f69f5197977e2d081a7fb63c5a451824b372362" translate="yes" xml:space="preserve">
          <source>Logical nullish assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af6bf7ffdc3db620b0aa76cb54f786a8708ac3d" translate="yes" xml:space="preserve">
          <source>Logical nullish assignment (&lt;code&gt;x ??= y&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47a334f81a949d5bce96605c47be4cc46f5a2f3c" translate="yes" xml:space="preserve">
          <source>Logical nullish assignment short-circuits as well meaning that &lt;code&gt;x ??= y&lt;/code&gt; is equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5da835bb3de6e8855950138a28dea23921e5aaa" translate="yes" xml:space="preserve">
          <source>Logical operators</source>
          <target state="translated">논리 연산자</target>
        </trans-unit>
        <trans-unit id="6202ce53795218c63434b0f094e3fb5b2ca0c343" translate="yes" xml:space="preserve">
          <source>Logical operators are typically used with &lt;a href=&quot;../global_objects/boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; (logical) values. When they are, they return a Boolean value. However, the &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt; operators actually return the value of one of the specified operands, so if these operators are used with non-Boolean values, they may return a non-Boolean value.</source>
          <target state="translated">논리 연산자는 일반적으로 &lt;a href=&quot;../global_objects/boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; (논리) 값 과 함께 사용 됩니다. 있으면 부울 값을 반환합니다. 그러나 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 및 &lt;code&gt;||&lt;/code&gt; 연산자는 실제로 지정된 피연산자 중 하나의 값을 반환하므로 이러한 연산자를 부울이 아닌 값과 함께 사용하면 부울이 아닌 값을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7cb3dab21dceb50db9b6bd20053a72d2499ed94d" translate="yes" xml:space="preserve">
          <source>Logical operators are typically used with boolean (logical) values, and when they are, they return a boolean value.</source>
          <target state="translated">논리 연산자는 일반적으로 부울 (논리) 값과 함께 사용되며 값이 있으면 부울 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1de39c4c352bfa494121c02e60c85c0710d936cc" translate="yes" xml:space="preserve">
          <source>Long literal strings</source>
          <target state="translated">긴 리터럴 문자열</target>
        </trans-unit>
        <trans-unit id="aaed96df1d8ac53a4a5e240799bfbd3615c200b1" translate="yes" xml:space="preserve">
          <source>Looking at the code snippets above, &lt;code&gt;6 / 3 / 2&lt;/code&gt; is the same as &lt;code&gt;(6 / 3) / 2&lt;/code&gt; because division is left-associative. Exponentiation, on the other hand, is right-associative, so &lt;code&gt;2 ** 3 ** 2&lt;/code&gt; is the same as &lt;code&gt;2 ** (3 ** 2)&lt;/code&gt;. Thus, doing &lt;code&gt;(2 ** 3) ** 2&lt;/code&gt; changes the order and results in the 64 seen in the table above.</source>
          <target state="translated">Looking at the code snippets above, &lt;code&gt;6 / 3 / 2&lt;/code&gt; is the same as &lt;code&gt;(6 / 3) / 2&lt;/code&gt; because division is left-associative. Exponentiation, on the other hand, is right-associative, so &lt;code&gt;2 ** 3 ** 2&lt;/code&gt; is the same as &lt;code&gt;2 ** (3 ** 2)&lt;/code&gt; . Thus, doing &lt;code&gt;(2 ** 3) ** 2&lt;/code&gt; changes the order and results in the 64 seen in the table above.</target>
        </trans-unit>
        <trans-unit id="5550ed243d079c4325b071fff5ddc848497a48b3" translate="yes" xml:space="preserve">
          <source>Looping with &lt;code&gt;codePointAt()&lt;/code&gt;</source>
          <target state="translated">Looping with &lt;code&gt;codePointAt()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aadfe4027db5e6ea30c8be7afe78315b4ae2afa3" translate="yes" xml:space="preserve">
          <source>Lower case to be sorted before upper case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63ae6dd4fc9f9dda66970e827d13f7c73fe841c" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>
        </trans-unit>
        <trans-unit id="47f92b0f2157d1bcafd77ad8eaac1469b67f6377" translate="yes" xml:space="preserve">
          <source>Make sure the object you are inspecting isn't actually &lt;a href=&quot;../global_objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">검사하는 객체가 실제로 &lt;a href=&quot;../global_objects/null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../global_objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; 가 아닌지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="d3e8923256c2075fcd48662465eb7bd4338549a6" translate="yes" xml:space="preserve">
          <source>Make these helper functions into ASM.JS module; then, you have a true performance masterpiece. Situations like these are exactly what ASM.JS was designed for.</source>
          <target state="translated">이 헬퍼 기능을 ASM.JS 모듈로 작성하십시오. 그렇다면 당신은 진정한 성능의 걸작품입니다. 이와 같은 상황은 정확히 ASM.JS를 위해 설계된 것입니다.</target>
        </trans-unit>
        <trans-unit id="10e006600917ceb77cac8d44689476f5a602046a" translate="yes" xml:space="preserve">
          <source>Making &lt;code&gt;eval&lt;/code&gt; and &lt;code&gt;arguments&lt;/code&gt; simpler</source>
          <target state="translated">&lt;code&gt;eval&lt;/code&gt; 와 &lt;code&gt;arguments&lt;/code&gt; 더 단순하게 만들기</target>
        </trans-unit>
        <trans-unit id="94f25c4bd4be3a85e0ccc787dbddec0f1b6ad397" translate="yes" xml:space="preserve">
          <source>Making decisions in your code &amp;mdash; conditionals</source>
          <target state="translated">코드에서 의사 결정 &amp;mdash; 조건부</target>
        </trans-unit>
        <trans-unit id="e1644e9966d4a257b9dfa8e99d06aa3cb7f5e76a" translate="yes" xml:space="preserve">
          <source>Making functions return a Promise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6b407799457ac11728769dcd29c5c5b5b74ed6" translate="yes" xml:space="preserve">
          <source>Malayalam digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec214fd963d6f6503131ec2d3759b6aa9845b31" translate="yes" xml:space="preserve">
          <source>Malformed URI</source>
          <target state="translated">잘못된 URI</target>
        </trans-unit>
        <trans-unit id="364ca1cca718a82b0e8b9aba612af2221c8197a7" translate="yes" xml:space="preserve">
          <source>Malformed formal parameter</source>
          <target state="translated">잘못된 형식 매개 변수</target>
        </trans-unit>
        <trans-unit id="9793cecc7913a283a6412227868c14a226159013" translate="yes" xml:space="preserve">
          <source>Manipulating DOM nodes</source>
          <target state="translated">DOM 노드 조작</target>
        </trans-unit>
        <trans-unit id="2a984b00528b674a36d1093b08804d2f9cf3dfb7" translate="yes" xml:space="preserve">
          <source>Many JavaScript types have tags by default:</source>
          <target state="translated">많은 JavaScript 유형에는 기본적으로 태그가 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee6228db5716ce834618968b5075dfb7ddf8790b" translate="yes" xml:space="preserve">
          <source>Many implementations have not adopted this behavior as of 2013, and because older browsers must be supported, &lt;strong&gt;always specify a radix&lt;/strong&gt;.</source>
          <target state="translated">많은 구현에서 2013 년 현재이 동작을 채택하지 않았으며 이전 브라우저를 지원해야하므로 &lt;strong&gt;항상 기수를 지정하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="b42254898bdd2749657b580d6eaad096204e2f1f" translate="yes" xml:space="preserve">
          <source>Many implementations have not adopted this behavior as of 2013. And, because older browsers must be supported, &lt;strong&gt;always specify a radix&lt;/strong&gt;.</source>
          <target state="translated">Many implementations have not adopted this behavior as of 2013. And, because older browsers must be supported, &lt;strong&gt;always specify a radix&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="38074f184337e8c0f2b5e1282b3fa754c19a65e5" translate="yes" xml:space="preserve">
          <source>Many methods on the JavaScript Array object are designed to be generally applied to all objects which &amp;ldquo;look like&amp;rdquo; Arrays. That is, they can be used on any object which has a &lt;code&gt;length&lt;/code&gt; property, and which can usefully be accessed using numeric property names (as with &lt;code&gt;array[5]&lt;/code&gt; indexing). Some methods, such as &lt;a href=&quot;join&quot;&gt;&lt;code&gt;join&lt;/code&gt;&lt;/a&gt;, only read the &lt;code&gt;length&lt;/code&gt; and numeric properties of the object they are called on. Others, like &lt;a href=&quot;reverse&quot;&gt;&lt;code&gt;reverse&lt;/code&gt;&lt;/a&gt;, require that the object's numeric properties and &lt;code&gt;length&lt;/code&gt; be mutable; these methods can therefore not be called on objects like &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, which does not permit its &lt;code&gt;length&lt;/code&gt; property or synthesized numeric properties to be set.</source>
          <target state="translated">JavaScript Array 객체의 많은 메소드는 일반적으로 Array와 같이 보이는 모든 객체에 적용되도록 설계되었습니다. 즉, &lt;code&gt;length&lt;/code&gt; 속성이 있고 숫자 속성 이름을 사용하여 유용하게 액세스 할 수 있는 모든 객체에 사용할 수 있습니다 ( &lt;code&gt;array[5]&lt;/code&gt; 인덱싱에서 와 같이 ). &lt;a href=&quot;join&quot;&gt; &lt;code&gt;join&lt;/code&gt; &lt;/a&gt; 과 같은 일부 메소드 는 호출 된 오브젝트 의 &lt;code&gt;length&lt;/code&gt; 및 숫자 특성 만 읽습니다 . &lt;a href=&quot;reverse&quot;&gt; &lt;code&gt;reverse&lt;/code&gt; &lt;/a&gt; 와 같은 다른 객체는 객체의 숫자 속성과 &lt;code&gt;length&lt;/code&gt; 를 변경할 수 있어야합니다. 따라서 &lt;code&gt;length&lt;/code&gt; 속성이나 합성 숫자 속성을 설정할 수 없는 &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 과 같은 객체에서는 이러한 메서드를 호출 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="d58dcdbca1db135797115b71ecb2bbc85c55cb09" translate="yes" xml:space="preserve">
          <source>Many of the methods used in Typed Arrays can be polyfilled using the methods present in regular Javascript Arrays. The following snippet of JavaScript demonstrates how you might polyfill any missing Typed Array methods.</source>
          <target state="translated">Typed Array에 사용되는 많은 메소드는 일반 Javascript Array에있는 메소드를 사용하여 폴리 필 할 수 있습니다. 다음 JavaScript 스 니펫은 누락 된 Typed Array 메소드를 polyfill하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="ab478f3efc840eebab919dff1b9512286f70c10c" translate="yes" xml:space="preserve">
          <source>Map</source>
          <target state="translated">Map</target>
        </trans-unit>
        <trans-unit id="81cc26193b1e4336b0213cd69657b3adaf553a80" translate="yes" xml:space="preserve">
          <source>Map and Set bug at Mozilla</source>
          <target state="translated">Mozilla의 맵 및 설정 버그</target>
        </trans-unit>
        <trans-unit id="0c7c901071b1c00f4611079f4bbd2fd7999ef857" translate="yes" xml:space="preserve">
          <source>Map function to call on every element of the array.</source>
          <target state="translated">배열의 모든 요소를 ​​호출하는 맵 함수</target>
        </trans-unit>
        <trans-unit id="b87f9f33dc8f896320771530ffe039e26cf001d2" translate="yes" xml:space="preserve">
          <source>Map function to call on every element of the typed array.</source>
          <target state="translated">Map function to call on every element of the typed array.</target>
        </trans-unit>
        <trans-unit id="30333d96616fc331544ac0dc8f16d0a1ecc2201f" translate="yes" xml:space="preserve">
          <source>Map.@@species</source>
          <target state="translated">Map.@@species</target>
        </trans-unit>
        <trans-unit id="52f6ea22c872c5c30581a31c012f22f8898f3bf4" translate="yes" xml:space="preserve">
          <source>Map.map</source>
          <target state="translated">Map.map</target>
        </trans-unit>
        <trans-unit id="f7784cb6fc12c06b4f6d131ad6c04f7c4c5df907" translate="yes" xml:space="preserve">
          <source>Map.prototype</source>
          <target state="translated">Map.prototype</target>
        </trans-unit>
        <trans-unit id="c8b79d82821254b74dc67b71d6b561469594cfc4" translate="yes" xml:space="preserve">
          <source>Mapped array contains undefined</source>
          <target state="translated">Mapped array contains undefined</target>
        </trans-unit>
        <trans-unit id="66f9585dae47b28dfd292e935863e699966c0911" translate="yes" xml:space="preserve">
          <source>Mapping a typed array of numbers using a function containing an argument</source>
          <target state="translated">인수를 포함하는 함수를 사용하여 유형이 지정된 숫자 배열 맵핑</target>
        </trans-unit>
        <trans-unit id="ffa60dcf6a3fb79d04c4e1c419c7b4dc4b1e51a9" translate="yes" xml:space="preserve">
          <source>Mapping a typed array to a typed array of square roots</source>
          <target state="translated">유형이 지정된 배열을 제곱근의 유형이 지정된 배열에 매핑</target>
        </trans-unit>
        <trans-unit id="7f4b091aae29ef01ed046161cdb2a58dcf35fbda" translate="yes" xml:space="preserve">
          <source>Mapping an array of numbers to an array of square roots</source>
          <target state="translated">숫자 배열을 제곱근 배열에 매핑</target>
        </trans-unit>
        <trans-unit id="9ddd45553e91cc7f306d0482f6ea3dea6fe4cbf8" translate="yes" xml:space="preserve">
          <source>Mapping an array of numbers using a function containing an argument</source>
          <target state="translated">인수를 포함하는 함수를 사용하여 숫자 배열 매핑</target>
        </trans-unit>
        <trans-unit id="f00191feebbe32a730ad9b1ef766f519bdbeae2d" translate="yes" xml:space="preserve">
          <source>Maps can be iterated using a &lt;code&gt;for..of&lt;/code&gt; loop:</source>
          <target state="translated">&lt;code&gt;for..of&lt;/code&gt; 루프를 사용하여 맵을 반복 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9df8b64c06d326e3b7f8204bcb4211e4e9a17aa5" translate="yes" xml:space="preserve">
          <source>Maps can be iterated using the &lt;a href=&quot;map/foreach&quot;&gt;&lt;code&gt;forEach()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">Maps can be iterated using the &lt;a href=&quot;map/foreach&quot;&gt; &lt;code&gt;forEach()&lt;/code&gt; &lt;/a&gt; method:</target>
        </trans-unit>
        <trans-unit id="af817d8d64732af5aca786014389609694f431c2" translate="yes" xml:space="preserve">
          <source>Maps can be iterated using the &lt;code&gt;forEach()&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;forEach()&lt;/code&gt; 메소드를 사용하여 맵을 반복 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bee40c7f75aa75e13050db8184766163cdd58c7f" translate="yes" xml:space="preserve">
          <source>Maps can be merged with Arrays, too:</source>
          <target state="translated">지도를 배열과 병합 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="27b76325198b0619788fc18c507dc9775f9e9fab" translate="yes" xml:space="preserve">
          <source>Maps can be merged, maintaining key uniqueness:</source>
          <target state="translated">키 고유성을 유지하면서 맵을 병합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="10af6decdf3b20f0fe89ccdf948ecd7e269a58f0" translate="yes" xml:space="preserve">
          <source>Marks a block of statements to try, and specifies a response, should an exception be thrown.</source>
          <target state="translated">시도 할 문장 블록을 표시하고 예외가 발생할 경우 응답을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="9958dc5ccb24adfb5bdac137b5903c64f7dac48d" translate="yes" xml:space="preserve">
          <source>Masaram Gondi digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d264222cc33aa1835f889940932a3f65dd5adbd8" translate="yes" xml:space="preserve">
          <source>Matches &lt;code&gt;&lt;em&gt;x&lt;/em&gt;&lt;/code&gt; and remembers the match. These are called capturing groups.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;x&lt;/em&gt;&lt;/code&gt; 와 일치 하고 일치를 기억합니다. 이것을 캡처 그룹이라고합니다.</target>
        </trans-unit>
        <trans-unit id="3a39d7d32c27c77551e70ff0b897043f37cf59f2" translate="yes" xml:space="preserve">
          <source>Matches &lt;code&gt;&lt;em&gt;x&lt;/em&gt;&lt;/code&gt; but does not remember the match. These are called non-capturing groups. The matched substring cannot be recalled from the resulting array's elements &lt;code&gt;[1], ..., [n]&lt;/code&gt; or from the predefined &lt;code&gt;RegExp&lt;/code&gt; object's properties &lt;code&gt;$1, ..., $9&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;x&lt;/em&gt;&lt;/code&gt; 와 일치 하지만 일치를 기억하지 않습니다. 이것을 비 캡처 그룹이라고합니다. 일치하는 부분 문자열은 결과 배열의 요소 &lt;code&gt;[1], ..., [n]&lt;/code&gt; 또는 사전 정의 된 &lt;code&gt;RegExp&lt;/code&gt; 객체의 속성 &lt;code&gt;$1, ..., $9&lt;/code&gt; 에서 불러올 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="02752d003d228562b52e2e7337da295d18ad82a5" translate="yes" xml:space="preserve">
          <source>Matches &lt;code&gt;&lt;em&gt;x&lt;/em&gt;&lt;/code&gt; only if &lt;code&gt;&lt;em&gt;x&lt;/em&gt;&lt;/code&gt; is followed by &lt;code&gt;&lt;em&gt;y&lt;/em&gt;&lt;/code&gt;.</source>
          <target state="translated">매치 &lt;code&gt;&lt;em&gt;x&lt;/em&gt;&lt;/code&gt; 경우에만 &lt;code&gt;&lt;em&gt;x&lt;/em&gt;&lt;/code&gt; 뒤에 &lt;code&gt;&lt;em&gt;y&lt;/em&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5cfd3ad68268178822ae001e4225881ffac2642" translate="yes" xml:space="preserve">
          <source>Matches &lt;code&gt;&lt;em&gt;x&lt;/em&gt;&lt;/code&gt; only if &lt;code&gt;&lt;em&gt;x&lt;/em&gt;&lt;/code&gt; is not followed by &lt;code&gt;&lt;em&gt;y&lt;/em&gt;&lt;/code&gt;.</source>
          <target state="translated">매치 &lt;code&gt;&lt;em&gt;x&lt;/em&gt;&lt;/code&gt; 경우에만 &lt;code&gt;&lt;em&gt;x&lt;/em&gt;&lt;/code&gt; 다음되지 &lt;code&gt;&lt;em&gt;y&lt;/em&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="882c3cff02bb35ee36343298ae6d099fc6597a04" translate="yes" xml:space="preserve">
          <source>Matches a NUL character. Do not follow this with another digit.</source>
          <target state="translated">NUL 문자와 일치합니다. 다른 숫자를 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="2d04bf3b98eaa77becf0235f31cc7fff43422512" translate="yes" xml:space="preserve">
          <source>Matches a UTF-16 code-unit with the value &lt;code&gt;&lt;em&gt;hhhh&lt;/em&gt;&lt;/code&gt; (four hexadecimal digits).</source>
          <target state="translated">UTF-16 코드 단위를 &lt;code&gt;&lt;em&gt;hhhh&lt;/em&gt;&lt;/code&gt; 값 (4 개의 16 진 숫자) 과 일치 &lt;em&gt;시킵니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="677951f08a30895e333e144f8f2aa3ee0fb36fdc" translate="yes" xml:space="preserve">
          <source>Matches a backspace. (Not to be confused with &lt;code&gt;\b&lt;/code&gt;)</source>
          <target state="translated">백 스페이스와 일치합니다. ( &lt;code&gt;\b&lt;/code&gt; 와 혼동하지 마십시오 )</target>
        </trans-unit>
        <trans-unit id="f606b656f572127873723194c4af191001b29421" translate="yes" xml:space="preserve">
          <source>Matches a carriage return.</source>
          <target state="translated">캐리지 리턴과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="7eee8a35d88ea2079f897c4d9fccc9516205df99" translate="yes" xml:space="preserve">
          <source>Matches a form-feed.</source>
          <target state="translated">용지 공급과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="e5e37526dbc01c7df974ad8c00aece75ebbe5ece" translate="yes" xml:space="preserve">
          <source>Matches a horizontal tab.</source>
          <target state="translated">가로 탭과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="5f878421637bc44a5e4a958f398922458fb5196a" translate="yes" xml:space="preserve">
          <source>Matches a linefeed.</source>
          <target state="translated">줄 바꿈과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="fbf62b81f5e775f13b2fb7c11d37b8412e8bbf21" translate="yes" xml:space="preserve">
          <source>Matches a non-word boundary. This is a position where the previous and next character are of the same type: Either both must be words, or both must be non-words. Such as between two letters or between two spaces. The beginning and end of a string are considered non-words. Same as the matched word boundary, the matched non-word boundary is also not included in the match.</source>
          <target state="translated">단어가 아닌 경계와 일치합니다. 이것은 이전 및 다음 문자가 동일한 유형 인 위치입니다. 둘 다 단어이거나 둘 다 단어가 아니어야합니다. 예를 들어 두 글자 사이 또는 두 공백 사이입니다. 문자열의 시작과 끝은 단어가 아닌 것으로 간주됩니다. 일치하는 단어 경계와 마찬가지로 일치하는 비 단어 경계도 일치에 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6f79164c6630d0b348e21e6d5ec6763effa0ad9b" translate="yes" xml:space="preserve">
          <source>Matches a single character other than white space. Equivalent to &lt;code&gt;[^ \f\n\r\t\v\u00a0\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]&lt;/code&gt;.</source>
          <target state="translated">공백 이외의 단일 문자와 일치합니다. 상당 &lt;code&gt;[^ \f\n\r\t\v\u00a0\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dff84fbbda1445f3d4c5b23de3dc4f936e12a3b2" translate="yes" xml:space="preserve">
          <source>Matches a single white space character, including space, tab, form feed, line feed and other Unicode spaces. Equivalent to &lt;code&gt;[ \f\n\r\t\v\u00a0\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]&lt;/code&gt;.</source>
          <target state="translated">공백, 탭, 용지 공급, 줄 바꿈 및 기타 유니 코드 공백을 포함하여 단일 공백 ​​문자와 일치합니다. 상당 &lt;code&gt;[ \f\n\r\t\v\u00a0\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="275f3cb4cec8658e784822d5f8a92328f35d78ad" translate="yes" xml:space="preserve">
          <source>Matches a vertical tab.</source>
          <target state="translated">세로 탭과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="cd214ac0fe5a25154504c9308341c0218ab9da82" translate="yes" xml:space="preserve">
          <source>Matches a word boundary. This is the position where a word character is not followed or preceded by another word-character, such as between a letter and a space. Note that a matched word boundary is not included in the match. In other words, the length of a matched word boundary is zero.</source>
          <target state="translated">단어 경계와 일치합니다. 이것은 문자와 공백 사이와 같이 단어 문자 뒤에 다른 단어 문자가 오지 않거나 앞에 오는 위치입니다. 일치하는 단어 경계는 일치에 포함되지 않습니다. 즉, 일치하는 단어 경계의 길이는 0입니다.</target>
        </trans-unit>
        <trans-unit id="706f47a724a320aa7ab0991783efd83c2c0cba82" translate="yes" xml:space="preserve">
          <source>Matches any alphanumeric character from the basic Latin alphabet, including the underscore. Equivalent to &lt;code&gt;[A-Za-z0-9_]&lt;/code&gt;.</source>
          <target state="translated">밑줄을 포함하여 기본 라틴 알파벳의 모든 영숫자 문자와 일치합니다. &lt;code&gt;[A-Za-z0-9_]&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="db4d522e556952f55bb330b53cf71ea46aabf1bf" translate="yes" xml:space="preserve">
          <source>Matches any character that is not a digit (Arabic numeral). Equivalent to &lt;code&gt;[^0-9]&lt;/code&gt;.</source>
          <target state="translated">숫자가 아닌 모든 문자 (아라비아 숫자)와 일치합니다. &lt;code&gt;[^0-9]&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="461869738b8fea1b2e7dcf73f45e158dd567dc2d" translate="yes" xml:space="preserve">
          <source>Matches any character that is not a word character from the basic Latin alphabet. Equivalent to &lt;code&gt;[^A-Za-z0-9_]&lt;/code&gt;.</source>
          <target state="translated">기본 라틴 알파벳의 단어 문자가 아닌 문자를 찾습니다. 상당 &lt;code&gt;[^A-Za-z0-9_]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b7209b1e156931d2dfec61e32b7d52ed1957b712" translate="yes" xml:space="preserve">
          <source>Matches any digit (Arabic numeral). Equivalent to &lt;code&gt;[0-9]&lt;/code&gt;.</source>
          <target state="translated">모든 숫자 (아라비아 숫자)와 일치합니다. &lt;code&gt;[0-9]&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="36334364f2cde2d3ffa40c0972e032b1a3da425d" translate="yes" xml:space="preserve">
          <source>Matches beginning of input. If the multiline flag is set to true, also matches immediately after a line break character.</source>
          <target state="translated">입력 시작과 일치합니다. 여러 줄 플래그가 true로 설정되면 줄 바꿈 문자 바로 다음에도 일치합니다.</target>
        </trans-unit>
        <trans-unit id="4ad1a96a3ac8220ac602d1ba742feafad7f0d4de" translate="yes" xml:space="preserve">
          <source>Matches either &lt;code&gt;&lt;em&gt;x&lt;/em&gt;&lt;/code&gt; or &lt;code&gt;&lt;em&gt;y&lt;/em&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;x&lt;/em&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;em&gt;y&lt;/em&gt;&lt;/code&gt; 와 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="984bc93b36041e96833cae9e316372a771950cf1" translate="yes" xml:space="preserve">
          <source>Matches end of input. If the multiline flag is set to true, also matches immediately before a line break character.</source>
          <target state="translated">입력 끝과 일치합니다. 여러 줄 플래그가 true로 설정되면 줄 바꿈 문자 바로 앞에도 일치합니다.</target>
        </trans-unit>
        <trans-unit id="47997d3afd1dbc6bbfff46598072bf7861808eb9" translate="yes" xml:space="preserve">
          <source>Matches only from the index indicated by the &lt;code&gt;lastIndex&lt;/code&gt; property of this regular expression in the target string. Does not attempt to match from any later indexes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="341133b0694b32d586c145d99c70f768bf2f3db0" translate="yes" xml:space="preserve">
          <source>Matches the character with the code &lt;code&gt;&lt;em&gt;hh&lt;/em&gt;&lt;/code&gt; (two hexadecimal digits).</source>
          <target state="translated">문자를 코드 &lt;code&gt;&lt;em&gt;hh&lt;/em&gt;&lt;/code&gt; (16 진수 두 자리) 와 일치시킵니다 .</target>
        </trans-unit>
        <trans-unit id="05a7a82d3242b3b2590c83b726cd9db95ee63b59" translate="yes" xml:space="preserve">
          <source>Matches the empty string.</source>
          <target state="translated">빈 문자열과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="2623b390765c0915cee5bac65340abea9e1fd88d" translate="yes" xml:space="preserve">
          <source>Matches the preceding item &lt;em&gt;x&lt;/em&gt; 0 or 1 time.</source>
          <target state="translated">앞의 항목 &lt;em&gt;x&lt;/em&gt; 0 또는 1 번 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="b4acd595190ac3a2215603081ec97cddc00bf0fb" translate="yes" xml:space="preserve">
          <source>Matches the preceding item &lt;em&gt;x&lt;/em&gt; 0 or more times.</source>
          <target state="translated">앞의 항목 &lt;em&gt;x&lt;/em&gt; 0 번 이상 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="8c24693910a66b00b9cf18bbfb1b1b36d727fee2" translate="yes" xml:space="preserve">
          <source>Matches the preceding item &lt;em&gt;x&lt;/em&gt; 1 or more times. Equivalent to &lt;code&gt;{1,}&lt;/code&gt;.</source>
          <target state="translated">이전 항목 &lt;em&gt;x&lt;/em&gt; 1 번 이상 일치합니다 . 당량 &lt;code&gt;{1,}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a6a6af3e46e0d425931e30d7f768b51f72779fa1" translate="yes" xml:space="preserve">
          <source>Matches the preceding item &lt;em&gt;x&lt;/em&gt; like &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, and &lt;code&gt;{...}&lt;/code&gt; from above, however the match is the smallest possible match.</source>
          <target state="translated">위의 항목과 일치 &lt;em&gt;X를&lt;/em&gt; 같이 &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;?&lt;/code&gt; 및 &lt;code&gt;{...}&lt;/code&gt; 상기에서하지만 경기는 가능한 최소 매치이다.</target>
        </trans-unit>
        <trans-unit id="3edf0df49942da6d11a1a217e4d3af4a5a8e64f2" translate="yes" xml:space="preserve">
          <source>Math</source>
          <target state="translated">Math</target>
        </trans-unit>
        <trans-unit id="d72f155a984110e5b00cb0082167ebecfcd895f4" translate="yes" xml:space="preserve">
          <source>Math operation where the result is not a real number (e.g. &lt;code&gt;Math.sqrt(-1)&lt;/code&gt;)</source>
          <target state="translated">Math operation where the result is not a real number (e.g. &lt;code&gt;Math.sqrt(-1)&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="7994c7a96c8e9eb563679f8e889cf1da5b7ce6ab" translate="yes" xml:space="preserve">
          <source>Math.E</source>
          <target state="translated">Math.E</target>
        </trans-unit>
        <trans-unit id="3329f1c1c01ec614d01bdfb5ae9916fe6732a48f" translate="yes" xml:space="preserve">
          <source>Math.LN10</source>
          <target state="translated">Math.LN10</target>
        </trans-unit>
        <trans-unit id="58d87221f24496309d86a226ff38e6aaf78b5121" translate="yes" xml:space="preserve">
          <source>Math.LN2</source>
          <target state="translated">Math.LN2</target>
        </trans-unit>
        <trans-unit id="ab0180df6c538e83c2d1b2f3cfb30d85ea7d44b9" translate="yes" xml:space="preserve">
          <source>Math.LOG10E</source>
          <target state="translated">Math.LOG10E</target>
        </trans-unit>
        <trans-unit id="6bb5f08d86e8e83095df2cf99cb36a4a7c2608a7" translate="yes" xml:space="preserve">
          <source>Math.LOG2E</source>
          <target state="translated">Math.LOG2E</target>
        </trans-unit>
        <trans-unit id="8eb0aa2e2eaf6d220ee9aa91dbaaef38886bc084" translate="yes" xml:space="preserve">
          <source>Math.PI</source>
          <target state="translated">Math.PI</target>
        </trans-unit>
        <trans-unit id="e2f0869dcdb5e6a8adb783f5b8df7a3a76f3537d" translate="yes" xml:space="preserve">
          <source>Math.SQRT1_2</source>
          <target state="translated">Math.SQRT1_2</target>
        </trans-unit>
        <trans-unit id="8021dd2c05a86100b105340a694c5ba94f5f3d1a" translate="yes" xml:space="preserve">
          <source>Math.SQRT2</source>
          <target state="translated">Math.SQRT2</target>
        </trans-unit>
        <trans-unit id="ccaf3c604e96d65af03cf144ac3b2fdfe947d37d" translate="yes" xml:space="preserve">
          <source>Math.abs</source>
          <target state="translated">Math.abs</target>
        </trans-unit>
        <trans-unit id="bf30426297e443ad214b75ffa63c60a0c51744a6" translate="yes" xml:space="preserve">
          <source>Math.acos</source>
          <target state="translated">Math.acos</target>
        </trans-unit>
        <trans-unit id="73ede0e1482c1dca7aafcc20a87fd42c47a67f89" translate="yes" xml:space="preserve">
          <source>Math.acosh</source>
          <target state="translated">Math.acosh</target>
        </trans-unit>
        <trans-unit id="4ee0bdc5e316c2ab5aa7db588a1df601b2e5dd9c" translate="yes" xml:space="preserve">
          <source>Math.asin</source>
          <target state="translated">Math.asin</target>
        </trans-unit>
        <trans-unit id="395f3f4b141d2b6d04e929068a1c70fd1616b3a1" translate="yes" xml:space="preserve">
          <source>Math.asinh</source>
          <target state="translated">Math.asinh</target>
        </trans-unit>
        <trans-unit id="12ecbeaab69e4b10ae7c40f197f232197812550b" translate="yes" xml:space="preserve">
          <source>Math.atan</source>
          <target state="translated">Math.atan</target>
        </trans-unit>
        <trans-unit id="08e87074500ab227a328f82b1273dcfd2af9ccd0" translate="yes" xml:space="preserve">
          <source>Math.atan2</source>
          <target state="translated">Math.atan2</target>
        </trans-unit>
        <trans-unit id="dc13d4d9d7004fb4e2fd670171f998f176b742cd" translate="yes" xml:space="preserve">
          <source>Math.atanh</source>
          <target state="translated">Math.atanh</target>
        </trans-unit>
        <trans-unit id="38014a25a7ef241042705c1d5d010fd7b07f4cac" translate="yes" xml:space="preserve">
          <source>Math.cbrt</source>
          <target state="translated">Math.cbrt</target>
        </trans-unit>
        <trans-unit id="6b88077501ed020eb50cbf92b4eb7be814327411" translate="yes" xml:space="preserve">
          <source>Math.ceil</source>
          <target state="translated">Math.ceil</target>
        </trans-unit>
        <trans-unit id="d2df401562726cd4f0b6f77ab50e9869fa157ca2" translate="yes" xml:space="preserve">
          <source>Math.clz32</source>
          <target state="translated">Math.clz32</target>
        </trans-unit>
        <trans-unit id="83c367edc6747170c3dd924e0b1c94ee7c534c6a" translate="yes" xml:space="preserve">
          <source>Math.cos</source>
          <target state="translated">Math.cos</target>
        </trans-unit>
        <trans-unit id="5fba06c01708d531f89a5a919162c8eaad11789c" translate="yes" xml:space="preserve">
          <source>Math.cosh</source>
          <target state="translated">Math.cosh</target>
        </trans-unit>
        <trans-unit id="cd019e0a3f2d4673e1ca84e37eee7806ba23d800" translate="yes" xml:space="preserve">
          <source>Math.cosh(x)</source>
          <target state="translated">Math.cosh(x)</target>
        </trans-unit>
        <trans-unit id="289886e5f4a5e09e3a8ea7b58c14923b5d7af813" translate="yes" xml:space="preserve">
          <source>Math.exp</source>
          <target state="translated">Math.exp</target>
        </trans-unit>
        <trans-unit id="1797030f80e695456a7defdcdb108d73d5dcc0d5" translate="yes" xml:space="preserve">
          <source>Math.expm1</source>
          <target state="translated">Math.expm1</target>
        </trans-unit>
        <trans-unit id="865fc1bcd6df2e104eb5c7bfd8120936a8c1bfeb" translate="yes" xml:space="preserve">
          <source>Math.floor</source>
          <target state="translated">Math.floor</target>
        </trans-unit>
        <trans-unit id="57e4cd797cadb515da1abcd4091980daa38684f9" translate="yes" xml:space="preserve">
          <source>Math.fround</source>
          <target state="translated">Math.fround</target>
        </trans-unit>
        <trans-unit id="1d8b270f895f71f29abb73e144cf17129c8271a4" translate="yes" xml:space="preserve">
          <source>Math.hypot</source>
          <target state="translated">Math.hypot</target>
        </trans-unit>
        <trans-unit id="c0b10bb3b45541494f26d88ecf007443214833eb" translate="yes" xml:space="preserve">
          <source>Math.imul</source>
          <target state="translated">Math.imul</target>
        </trans-unit>
        <trans-unit id="e034f41ee44dab7149a91243dffc9e21bf4b2095" translate="yes" xml:space="preserve">
          <source>Math.log</source>
          <target state="translated">Math.log</target>
        </trans-unit>
        <trans-unit id="7c734a40be828c8a4ecafa04fc2c1f8957d2fbf0" translate="yes" xml:space="preserve">
          <source>Math.log10</source>
          <target state="translated">Math.log10</target>
        </trans-unit>
        <trans-unit id="758b15de2192a0b9c46c75974f5554be5b604f8d" translate="yes" xml:space="preserve">
          <source>Math.log1p</source>
          <target state="translated">Math.log1p</target>
        </trans-unit>
        <trans-unit id="cdc100f4e47ac71eb8ae32aec95efcba018bdccf" translate="yes" xml:space="preserve">
          <source>Math.log2</source>
          <target state="translated">Math.log2</target>
        </trans-unit>
        <trans-unit id="b216579b22c2ed4608a4910fc3fe70bd8acfcadb" translate="yes" xml:space="preserve">
          <source>Math.max</source>
          <target state="translated">Math.max</target>
        </trans-unit>
        <trans-unit id="00d7002122bd56440e59d99bba0a589df36d459b" translate="yes" xml:space="preserve">
          <source>Math.min</source>
          <target state="translated">Math.min</target>
        </trans-unit>
        <trans-unit id="bf6a0d2b8e5fb86891642a01dd99e9fb72bd31c3" translate="yes" xml:space="preserve">
          <source>Math.pow</source>
          <target state="translated">Math.pow</target>
        </trans-unit>
        <trans-unit id="37ca7979cb602f81b3d7ebb70a93be5dd8d7a2a9" translate="yes" xml:space="preserve">
          <source>Math.random</source>
          <target state="translated">Math.random</target>
        </trans-unit>
        <trans-unit id="6622fa4403e7083f92f6d3144102c7594827772b" translate="yes" xml:space="preserve">
          <source>Math.round</source>
          <target state="translated">Math.round</target>
        </trans-unit>
        <trans-unit id="aa1bec0001e22985568738bbe08a00d4cc48adca" translate="yes" xml:space="preserve">
          <source>Math.sign</source>
          <target state="translated">Math.sign</target>
        </trans-unit>
        <trans-unit id="e9ccf88318dbfe9c07069bd649419105083fef7b" translate="yes" xml:space="preserve">
          <source>Math.sin</source>
          <target state="translated">Math.sin</target>
        </trans-unit>
        <trans-unit id="d1fb3dfbd5676124d51e030bb987b4141bfbe1d4" translate="yes" xml:space="preserve">
          <source>Math.sinh</source>
          <target state="translated">Math.sinh</target>
        </trans-unit>
        <trans-unit id="9edd2550c136c21e14adc217c873ee328e7d3996" translate="yes" xml:space="preserve">
          <source>Math.sinh(x)</source>
          <target state="translated">Math.sinh(x)</target>
        </trans-unit>
        <trans-unit id="74a1f5c85920fe3af7e569916321e3757879b3f0" translate="yes" xml:space="preserve">
          <source>Math.sqrt</source>
          <target state="translated">Math.sqrt</target>
        </trans-unit>
        <trans-unit id="616dcd98536f46efa5c47eacf4b4c0a589c1ceeb" translate="yes" xml:space="preserve">
          <source>Math.tan</source>
          <target state="translated">Math.tan</target>
        </trans-unit>
        <trans-unit id="ca6e85a6fbd385970d7a551f18e54ed955aeb147" translate="yes" xml:space="preserve">
          <source>Math.tanh</source>
          <target state="translated">Math.tanh</target>
        </trans-unit>
        <trans-unit id="dcb60e2fd35aa0d4dc6d9b49810ec7daa4a9833a" translate="yes" xml:space="preserve">
          <source>Math.trunc</source>
          <target state="translated">Math.trunc</target>
        </trans-unit>
        <trans-unit id="6db06ec94ca15f7fe1473fc17cf57b55cb973eb6" translate="yes" xml:space="preserve">
          <source>Mathematical bold digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c398188ace39f850f25906f2b309caf1e52c9d3d" translate="yes" xml:space="preserve">
          <source>Mathematical double-struck digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af2c71e9e698f0dab4f0671fc7b7fa8915e3170" translate="yes" xml:space="preserve">
          <source>Mathematical monospace digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7143181b6405e2944b53d147179026b1d8729737" translate="yes" xml:space="preserve">
          <source>Mathematical sans-serif bold digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac66c4c7400e1c646ea64d5c171e260067050e3c" translate="yes" xml:space="preserve">
          <source>Mathematical sans-serif digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c367514aaba6e4eae54e7d73df11299e0f818c" translate="yes" xml:space="preserve">
          <source>Mathias Bynens: JavaScript character escape sequences</source>
          <target state="translated">Mathias Bynens : JavaScript 문자 이스케이프 시퀀스</target>
        </trans-unit>
        <trans-unit id="2cdcd95c7caa6d5c68c3de40d4c1478f3f02b5b4" translate="yes" xml:space="preserve">
          <source>Matt Greer: JavaScript Promises ... In Wicked Detail</source>
          <target state="translated">Matt Greer : JavaScript 약속 ... 악한 세부 사항</target>
        </trans-unit>
        <trans-unit id="d8837a214b2d2aba85c9dfeec20020f4b5391a13" translate="yes" xml:space="preserve">
          <source>Maybe there is a typo in the function name? Maybe the object you are calling the method on does not have this function? For example, JavaScript &lt;code&gt;Objects&lt;/code&gt; have no &lt;code&gt;map&lt;/code&gt; function, but the JavaScript &lt;code&gt;Array&lt;/code&gt; object does.</source>
          <target state="translated">Maybe there is a typo in the function name? Maybe the object you are calling the method on does not have this function? For example, JavaScript &lt;code&gt;Objects&lt;/code&gt; have no &lt;code&gt;map&lt;/code&gt; function, but the JavaScript &lt;code&gt;Array&lt;/code&gt; object does.</target>
        </trans-unit>
        <trans-unit id="c0c8f30fb77ef491692bfbd045ee339a2c727093" translate="yes" xml:space="preserve">
          <source>Maybe there is a typo in the function name? Maybe the object you are calling the method on does not have this function? For example, JavaScript objects have no &lt;code&gt;map&lt;/code&gt; function, but the JavaScript Array object does.</source>
          <target state="translated">함수 이름에 오타가있을 수 있습니까? 메소드를 호출하는 객체 에이 기능이 없을 수도 있습니다. 예를 들어 JavaScript 객체에는 &lt;code&gt;map&lt;/code&gt; 기능이 없지만 JavaScript Array 객체에는 없습니다.</target>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="32ae4044a6d91b84c5cdd36108e37461759dc667" translate="yes" xml:space="preserve">
          <source>Measuring execution time</source>
          <target state="translated">실행 시간 측정</target>
        </trans-unit>
        <trans-unit id="648d398226320941711d982b2b76256a1ccfe9eb" translate="yes" xml:space="preserve">
          <source>Meetei Mayek digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42082a8a3faf95f5906cc2f31bd2cfd4c7a0812d" translate="yes" xml:space="preserve">
          <source>Member Access</source>
          <target state="translated">Member Access</target>
        </trans-unit>
        <trans-unit id="2742f92a05251bd8b22357a6f3aa482165c782ff" translate="yes" xml:space="preserve">
          <source>Member operators provide access to a property or method of an object</source>
          <target state="translated">멤버 연산자는 객체의 속성 또는 메서드에 대한 액세스를 제공합니다</target>
        </trans-unit>
        <trans-unit id="1c5536b98ab016fe61807564b4a34c80211a7613" translate="yes" xml:space="preserve">
          <source>Memory management</source>
          <target state="translated">메모리 관리</target>
        </trans-unit>
        <trans-unit id="4772d95ba29a640d30f48c96b8012773ec532d09" translate="yes" xml:space="preserve">
          <source>Merging objects</source>
          <target state="translated">객체 병합</target>
        </trans-unit>
        <trans-unit id="e783d9e184edce4feef4a8eb1755f904a63cb09b" translate="yes" xml:space="preserve">
          <source>Merging objects with same properties</source>
          <target state="translated">동일한 속성을 가진 객체 병합</target>
        </trans-unit>
        <trans-unit id="2845fa81e4300423540d076289e4fd24a72818af" translate="yes" xml:space="preserve">
          <source>Merging two arrays</source>
          <target state="translated">두 배열 병합</target>
        </trans-unit>
        <trans-unit id="68f4145fee7dde76afceb910165924ad14cf0d00" translate="yes" xml:space="preserve">
          <source>Message</source>
          <target state="translated">Message</target>
        </trans-unit>
        <trans-unit id="88306943fea7e76f9cd57cae0ea6d8b32d2e8434" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">Method</target>
        </trans-unit>
        <trans-unit id="69730e09bf114397207217d4dd78cb352a89fea2" translate="yes" xml:space="preserve">
          <source>Method 1</source>
          <target state="translated">방법 1</target>
        </trans-unit>
        <trans-unit id="4e8e7e0c1c80c3593b440e52c45595d6ab2c65cd" translate="yes" xml:space="preserve">
          <source>Method 2</source>
          <target state="translated">방법 2</target>
        </trans-unit>
        <trans-unit id="4ea2cafd85e43a11661c43bb857632229ca3d1a5" translate="yes" xml:space="preserve">
          <source>Method binding</source>
          <target state="translated">메소드 바인딩</target>
        </trans-unit>
        <trans-unit id="b1e0dda9d554b5de0e97cc3a8969aa82ad2fefd3" translate="yes" xml:space="preserve">
          <source>Method definition syntax</source>
          <target state="translated">메소드 정의 구문</target>
        </trans-unit>
        <trans-unit id="24cdd80596e8be69a291a0a93b2ea86ebd106c75" translate="yes" xml:space="preserve">
          <source>Method definitions</source>
          <target state="translated">메소드 정의</target>
        </trans-unit>
        <trans-unit id="f1899ae00e7005fc77e7252da2c5abf4de986cfd" translate="yes" xml:space="preserve">
          <source>Method definitions are not constructable</source>
          <target state="translated">메소드 정의는 구성 할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="bf07858e8e01fe9e63025918e30c022de5a77784" translate="yes" xml:space="preserve">
          <source>Methods Polyfill</source>
          <target state="translated">폴리 필 방법</target>
        </trans-unit>
        <trans-unit id="0d27c5a84cad43ef5b9a24d2835dc3459a51998b" translate="yes" xml:space="preserve">
          <source>Methods cannot be constructors! They will throw a &lt;a href=&quot;../global_objects/typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if you try to instantiate them.</source>
          <target state="translated">Methods cannot be constructors! They will throw a &lt;a href=&quot;../global_objects/typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; if you try to instantiate them.</target>
        </trans-unit>
        <trans-unit id="eac8f58d20eac05c92a6b45131ab7d8bfa374e92" translate="yes" xml:space="preserve">
          <source>Methods for multi-criteria &lt;code&gt;case&lt;/code&gt;</source>
          <target state="translated">Methods for multi-criteria &lt;code&gt;case&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b359fc4b992b5310b06b482980bb86d89888ad6e" translate="yes" xml:space="preserve">
          <source>Methods for multi-criteria case</source>
          <target state="translated">다중 기준 사례에 대한 방법</target>
        </trans-unit>
        <trans-unit id="2d4d7d3afb6b465b7aa978719f97d97dccf47dc7" translate="yes" xml:space="preserve">
          <source>Methods of the &lt;code&gt;Object&lt;/code&gt; constructor</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 생성자의 메소드</target>
        </trans-unit>
        <trans-unit id="0a86e9fa10a6a2ce2b664df6d172d8e0f8956e92" translate="yes" xml:space="preserve">
          <source>Methods of the handler object</source>
          <target state="translated">핸들러 객체의 메소드</target>
        </trans-unit>
        <trans-unit id="f37dcf12f5cad1a913f85812dde02569c1b39d40" translate="yes" xml:space="preserve">
          <source>Methods unrelated to HTML</source>
          <target state="translated">HTML과 관련이없는 메소드</target>
        </trans-unit>
        <trans-unit id="11f3242118ff2add5d117cbf216f29ac578f6ba6" translate="yes" xml:space="preserve">
          <source>Microsoft</source>
          <target state="translated">Microsoft</target>
        </trans-unit>
        <trans-unit id="0c91f8d2134260edcad24e279bbffab045533a57" translate="yes" xml:space="preserve">
          <source>Microsoft's JScript does not support negative values for the start index. To use this feature in JScript, you can use the following code:</source>
          <target state="translated">Microsoft의 JScript는 시작 색인에 음수 값을 지원하지 않습니다. JScript에서이 기능을 사용하려면 다음 코드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8cae20a09f5616b19c8bedcef2530776075b3b37" translate="yes" xml:space="preserve">
          <source>Minute, as two digits with leading zero if required</source>
          <target state="translated">Minute, as two digits with leading zero if required</target>
        </trans-unit>
        <trans-unit id="8798ceea0a11a821b057036790a060751fe0c64b" translate="yes" xml:space="preserve">
          <source>Minute: 2 digit minute of hour, e.g. &quot;53&quot;</source>
          <target state="translated">분 : 2 자리 분, 예 : &quot;53&quot;</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="ead045fe948be7ea5e008222b76ccb12a9d6157b" translate="yes" xml:space="preserve">
          <source>Mismatched characters</source>
          <target state="translated">일치하지 않는 문자</target>
        </trans-unit>
        <trans-unit id="c6bfe8d08ac1cce3691b75142d66869195854fb0" translate="yes" xml:space="preserve">
          <source>Missing a variable name</source>
          <target state="translated">변수 이름이 없습니다</target>
        </trans-unit>
        <trans-unit id="04710d9e33ca854dbc5582dadebf3a2ed0d86d85" translate="yes" xml:space="preserve">
          <source>Missing bracket after list</source>
          <target state="translated">목록 뒤에 괄호가 없습니다</target>
        </trans-unit>
        <trans-unit id="2d235bf30599bfae84517e6baa48ea80693db0f9" translate="yes" xml:space="preserve">
          <source>Missing colon after property id</source>
          <target state="translated">속성 ID 뒤에 콜론이 없습니다</target>
        </trans-unit>
        <trans-unit id="c701593900706845ea863233742bef73a7cd1a04" translate="yes" xml:space="preserve">
          <source>Missing const initializer</source>
          <target state="translated">const 이니셜 라이저가 없습니다.</target>
        </trans-unit>
        <trans-unit id="547f619525c0e588e2b518b330b32b0247bd210a" translate="yes" xml:space="preserve">
          <source>Missing curly after function body</source>
          <target state="translated">함수 본문 뒤에 곱슬이 없습니다.</target>
        </trans-unit>
        <trans-unit id="783a307c1b40aa2740e7254efc8b761ef0e85383" translate="yes" xml:space="preserve">
          <source>Missing curly after property list</source>
          <target state="translated">속성 목록 뒤에 곱슬이 없습니다.</target>
        </trans-unit>
        <trans-unit id="9b23bbabd7eacca3ec302aa8bc8449e153c54e50" translate="yes" xml:space="preserve">
          <source>Missing curly brackets</source>
          <target state="translated">Missing curly brackets</target>
        </trans-unit>
        <trans-unit id="6946cb63d867319ad149c8b2f398588b3314bebc" translate="yes" xml:space="preserve">
          <source>Missing formal parameter</source>
          <target state="translated">공식 매개 변수 누락</target>
        </trans-unit>
        <trans-unit id="247fd0b519669b01bb1cc69237c31a3238d029f1" translate="yes" xml:space="preserve">
          <source>Missing initializer in const</source>
          <target state="translated">const에 이니셜 라이저가 없습니다.</target>
        </trans-unit>
        <trans-unit id="d7f3d50032b13610b1dbb5cfb4b08df2568a9127" translate="yes" xml:space="preserve">
          <source>Missing name after dot operator</source>
          <target state="translated">도트 연산자 뒤에 이름이 없습니다</target>
        </trans-unit>
        <trans-unit id="2838fb66f2dec82d59af8cbc966a3b7ec248a85c" translate="yes" xml:space="preserve">
          <source>Missing parenthesis</source>
          <target state="translated">Missing parenthesis</target>
        </trans-unit>
        <trans-unit id="d014a511124a2115e517ff56af6ec509f65c8273" translate="yes" xml:space="preserve">
          <source>Missing parenthesis after argument list</source>
          <target state="translated">인수 목록 뒤에 괄호가 없습니다</target>
        </trans-unit>
        <trans-unit id="0c1fcc141f82962c593952eb0fd54e85112e0397" translate="yes" xml:space="preserve">
          <source>Missing parenthesis after condition</source>
          <target state="translated">조건 후 괄호 누락</target>
        </trans-unit>
        <trans-unit id="45ae0e646985e28013fcc87e3832ddfca290f7df" translate="yes" xml:space="preserve">
          <source>Missing semicolon before statement</source>
          <target state="translated">명령문 앞에 세미콜론이 누락되었습니다.</target>
        </trans-unit>
        <trans-unit id="57c52a3af366d2e07ca9554b312e3549c086f958" translate="yes" xml:space="preserve">
          <source>Misused &lt;code&gt;is&lt;/code&gt; keyword</source>
          <target state="translated">Misused &lt;code&gt;is&lt;/code&gt; keyword</target>
        </trans-unit>
        <trans-unit id="1c9abcc122dbc35a590dfaf5d43ef774f845114f" translate="yes" xml:space="preserve">
          <source>Mix-ins</source>
          <target state="translated">Mix-ins</target>
        </trans-unit>
        <trans-unit id="b1d702459399a2512fba5a402d4d5f26aee34693" translate="yes" xml:space="preserve">
          <source>Mobile</source>
          <target state="translated">Mobile</target>
        </trans-unit>
        <trans-unit id="6b39a3a892a111c63276ccdc1ab5cf08195a6eb5" translate="yes" xml:space="preserve">
          <source>Modern Tamil decimal digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413da28ddf6ead7ad4abf1cbe0903b5c24c3b0ce" translate="yes" xml:space="preserve">
          <source>Modi digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0930fef9d0d06ade78d378fb148192665a750e" translate="yes" xml:space="preserve">
          <source>Modifying a property</source>
          <target state="translated">속성 수정</target>
        </trans-unit>
        <trans-unit id="c976dba6b6e708992c2ddfcadf73c9463035f94f" translate="yes" xml:space="preserve">
          <source>Modifying primitive values converted from an object</source>
          <target state="translated">Modifying primitive values converted from an object</target>
        </trans-unit>
        <trans-unit id="37d3b69ea59a760f27c71afa3054744f36af1c54" translate="yes" xml:space="preserve">
          <source>Modifying the array during iteration</source>
          <target state="translated">Modifying the array during iteration</target>
        </trans-unit>
        <trans-unit id="782ee845b12862b0a1ee347599d483a23aa49179" translate="yes" xml:space="preserve">
          <source>Module Redirects</source>
          <target state="translated">모듈 리디렉션</target>
        </trans-unit>
        <trans-unit id="723cd98652954fa92f791cdd9a53e5365e8ad7c8" translate="yes" xml:space="preserve">
          <source>Module filenames must end with &lt;code&gt;.mjs&lt;/code&gt;, not .js. See Node's &lt;a href=&quot;https://nodejs.org/docs/latest-v8.x/api/esm.html#esm_enabling&quot;&gt;ECMAScript Modules documentation&lt;/a&gt; for more details.</source>
          <target state="translated">Module filenames must end with &lt;code&gt;.mjs&lt;/code&gt; , not .js. See Node's &lt;a href=&quot;https://nodejs.org/docs/latest-v8.x/api/esm.html#esm_enabling&quot;&gt;ECMAScript Modules documentation&lt;/a&gt; for more details.</target>
        </trans-unit>
        <trans-unit id="dd4cf8174821e8e1880a8119fc1df052768998ed" translate="yes" xml:space="preserve">
          <source>Module instances have no default methods of their own.</source>
          <target state="translated">모듈 인스턴스에는 기본 메소드가 없습니다.</target>
        </trans-unit>
        <trans-unit id="0eae6de93412c2a354d2415155e4cc8664ec45d6" translate="yes" xml:space="preserve">
          <source>Modules must either have a filename ending in &lt;code&gt;.mjs&lt;/code&gt;, or the nearest parent &lt;code&gt;package.json&lt;/code&gt; file must contain &lt;code&gt;&quot;type&quot;: &quot;module&quot;&lt;/code&gt;. See Node's &lt;a href=&quot;https://nodejs.org/api/esm.html#esm_enabling&quot;&gt;ECMAScript Modules documentation&lt;/a&gt; for more details.</source>
          <target state="translated">Modules must either have a filename ending in &lt;code&gt;.mjs&lt;/code&gt; , or the nearest parent &lt;code&gt;package.json&lt;/code&gt; file must contain &lt;code&gt;&quot;type&quot;: &quot;module&quot;&lt;/code&gt; . See Node's &lt;a href=&quot;https://nodejs.org/api/esm.html#esm_enabling&quot;&gt;ECMAScript Modules documentation&lt;/a&gt; for more details.</target>
        </trans-unit>
        <trans-unit id="a3ef99944dbf668cacf3d1ea1d23e04b75bf464a" translate="yes" xml:space="preserve">
          <source>Modules must either have a filename ending in &lt;code&gt;.mjs&lt;/code&gt;, or the nearest parent &lt;code&gt;package.json&lt;/code&gt; file must contain &lt;code&gt;&quot;type&quot;: &quot;module&quot;&lt;/code&gt;. See Node's &lt;a href=&quot;https://nodejs.org/docs/latest-v12.x/api/esm.html#esm_enabling&quot;&gt;ECMAScript Modules documentation&lt;/a&gt; for more details.</source>
          <target state="translated">모듈에는 &lt;code&gt;.mjs&lt;/code&gt; 로 끝나는 파일 이름이 있거나 가장 가까운 상위 &lt;code&gt;package.json&lt;/code&gt; 파일에 &lt;code&gt;&quot;type&quot;: &quot;module&quot;&lt;/code&gt; 포함되어야합니다 . 자세한 내용은 Node의 &lt;a href=&quot;https://nodejs.org/docs/latest-v12.x/api/esm.html#esm_enabling&quot;&gt;ECMAScript 모듈 문서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0a2e6c32991be5913d07b7095fb008d3b362e203" translate="yes" xml:space="preserve">
          <source>Mongolian digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6805e32bd4de5f6b98d1ecbb9dcc1d711cd6047" translate="yes" xml:space="preserve">
          <source>Month name: 3 letter English month name, e.g. &quot;Sep&quot;</source>
          <target state="translated">월 이름 : 3 자 영어 월 이름 (예 : &quot;Sep&quot;)</target>
        </trans-unit>
        <trans-unit id="1e4467487b5fd600a383ac15a3689e13aa06f5b4" translate="yes" xml:space="preserve">
          <source>Month, as three letters (e.g. Jan, Feb, ...)</source>
          <target state="translated">월, 세 글자 (예 : Jan, Feb, ...)</target>
        </trans-unit>
        <trans-unit id="6f490c1d3478719a7601cdceff98808d64b9a639" translate="yes" xml:space="preserve">
          <source>MooTools 1.3 forces its own version of &lt;code&gt;String.prototype.contains()&lt;/code&gt;, so websites relying on it should not break. However, you should note that &lt;a href=&quot;http://mootools.net/core/docs/1.3.2/Types/String#String-method:-contains&quot;&gt;MooTools 1.3 signature&lt;/a&gt; and ECMAScript 2015 signatures for this method differ (on the second argument). Later, &lt;a href=&quot;https://github.com/mootools/mootools-core/blob/master/Docs/Types/String.md#note&quot;&gt;MooTools 1.5+ changed the signature to match the ES2015 standard.&lt;/a&gt;</source>
          <target state="translated">MooTools 1.3은 자체 버전의 &lt;code&gt;String.prototype.contains()&lt;/code&gt; 강제 실행 하므로 이에 의존하는 웹 사이트가 중단되지 않아야합니다. 그러나이 방법에 대한 &lt;a href=&quot;http://mootools.net/core/docs/1.3.2/Types/String#String-method:-contains&quot;&gt;MooTools 1.3 서명&lt;/a&gt; 과 ECMAScript 2015 서명이 다릅니다 (두 번째 인수에서). 나중에 &lt;a href=&quot;https://github.com/mootools/mootools-core/blob/master/Docs/Types/String.md#note&quot;&gt;MooTools 1.5+는 ES2015 표준과 일치하도록 서명을 변경했습니다.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b3ded464d1cda2b83720aa7ad9ebdd057d4b481d" translate="yes" xml:space="preserve">
          <source>More arguments needed</source>
          <target state="translated">더 많은 논쟁이 필요하다</target>
        </trans-unit>
        <trans-unit id="77fbec4f373601c736da69a3f7d1674ce9a4d7a8" translate="yes" xml:space="preserve">
          <source>More clearly, &lt;code&gt;Array.from(&lt;var&gt;obj&lt;/var&gt;, &lt;var&gt;mapFn&lt;/var&gt;, &lt;var&gt;thisArg&lt;/var&gt;)&lt;/code&gt;</source>
          <target state="translated">보다 명확하게 &lt;code&gt;Array.from(&lt;var&gt;obj&lt;/var&gt;, &lt;var&gt;mapFn&lt;/var&gt;, &lt;var&gt;thisArg&lt;/var&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3cb592c1fecdda2623e47d9a1d833c325e8fa130" translate="yes" xml:space="preserve">
          <source>More commonly it is used as a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Callback_function&quot;&gt;callback&lt;/a&gt;:</source>
          <target state="translated">더 일반적으로 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Callback_function&quot;&gt;콜백으로&lt;/a&gt; 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="383f0e0e882a4dc2683b66372e6aa52e3a75f04b" translate="yes" xml:space="preserve">
          <source>More examples</source>
          <target state="translated">더 많은 예</target>
        </trans-unit>
        <trans-unit id="ed41998e464737eacfb99f7081e8a44457a2ab7f" translate="yes" xml:space="preserve">
          <source>More reference pages</source>
          <target state="translated">더 많은 참조 페이지</target>
        </trans-unit>
        <trans-unit id="066a5d8297a8393089fee30dde3f38c9d1c771d7" translate="yes" xml:space="preserve">
          <source>Most browsers, including Chrome 14 and Internet Explorer 9, still do not accept array-like objects and will throw an exception.</source>
          <target state="translated">Chrome 14 및 Internet Explorer 9를 포함한 대부분의 브라우저는 여전히 배열과 유사한 객체를 허용하지 않으므로 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4e0f814ffe3f71013e8a719b05efd84610af4b45" translate="yes" xml:space="preserve">
          <source>Most notably, the IE and Edge browsers insert bidirectional control characters around dates, so the output text will flow properly when concatenated with other text.</source>
          <target state="translated">특히 IE 및 Edge 브라우저는 날짜 주위에 양방향 제어 문자를 삽입하므로 출력 텍스트가 다른 텍스트와 연결될 때 제대로 흐르게됩니다.</target>
        </trans-unit>
        <trans-unit id="929051093eae9425be654f23f00384703653072b" translate="yes" xml:space="preserve">
          <source>Most of the time, the formatting returned by &lt;code&gt;format()&lt;/code&gt; is consistent. However, this might change in the future and isn't guaranteed for all the languages &amp;mdash; output variations are by design and allowed by the specification. Most notably, the IE and Edge browsers insert bidirectional control characters around dates, so the output text will flow properly when concatenated with other text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f86a473ded932a55f38d4c49de5de87e948487" translate="yes" xml:space="preserve">
          <source>Most of the time, the formatting returned by &lt;code&gt;toLocaleString()&lt;/code&gt; is consistent. However, this might change in the future, and isn't guaranteed for all languages; output variations are by design, and allowed by the specification.</source>
          <target state="translated">대부분의 경우 &lt;code&gt;toLocaleString()&lt;/code&gt; 반환하는 형식 은 일관됩니다. 그러나 이는 향후 변경 될 수 있으며 모든 언어에 대해 보장되지는 않습니다. 출력 변형은 설계에 따른 것이며 사양에 따라 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="e6a1387912e988056d5a48e5ac571fccd3f059c6" translate="yes" xml:space="preserve">
          <source>Mostly this property is used for defining a function as a &lt;strong&gt;function-constructor&lt;/strong&gt; with further calling it with &lt;strong&gt;new&lt;/strong&gt; and prototype-inherits chain.</source>
          <target state="translated">구름이 속성은로서의 기능을 정의하는데 사용되는 &lt;strong&gt;함수 생성자&lt;/strong&gt; 와 상기 호출을 가진 &lt;strong&gt;새로운&lt;/strong&gt; 및 프로토 타입 상속 체인.</target>
        </trans-unit>
        <trans-unit id="d83016dd56e9bf9199d175870ff56ee77659cfb7" translate="yes" xml:space="preserve">
          <source>Mozilla</source>
          <target state="translated">Mozilla</target>
        </trans-unit>
        <trans-unit id="6ace0df1d409efd3258bb3a47b8e2590e9dd3837" translate="yes" xml:space="preserve">
          <source>Mro digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c93153393268b494f055cab19336758fe3931a8" translate="yes" xml:space="preserve">
          <source>Much like a &lt;code&gt;return&lt;/code&gt; statement, an error is thrown inside the generator will make the generator finished -- unless caught within the generator's body.</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; 문과 매우 유사 하게 생성기 내부에서 오류가 발생하면 생성기 본문에 걸리지 않는 한 생성기가 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="3a0e03621e1caeb4567a4ba39b0fdfe4e3f43f34" translate="yes" xml:space="preserve">
          <source>Much like a &lt;code&gt;return&lt;/code&gt; statement, an error thrown inside the generator will make the generator finished -- unless caught within the generator's body.</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; 문과 마찬가지로 생성기 내부에 오류가 발생하면 생성기 본체에 걸리지 않는 한 생성기가 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="a939914e8ecd5bf65dbb056793ae66e7d5180066" translate="yes" xml:space="preserve">
          <source>Multi-&lt;code&gt;case&lt;/code&gt; : chained operations</source>
          <target state="translated">다중 &lt;code&gt;case&lt;/code&gt; : 연결 작업</target>
        </trans-unit>
        <trans-unit id="51a45f4926969f00c882096d5de562c734085843" translate="yes" xml:space="preserve">
          <source>Multi-&lt;code&gt;case&lt;/code&gt; : single operation</source>
          <target state="translated">다중 &lt;code&gt;case&lt;/code&gt; : 단일 작동</target>
        </trans-unit>
        <trans-unit id="4c738c6d3d74233783f7b96060bfeed7b0c3abd2" translate="yes" xml:space="preserve">
          <source>Multi-byte number formats are represented in memory differently depending on machine architecture &amp;mdash; see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;Endianness&lt;/a&gt; for an explanation. &lt;code&gt;DataView&lt;/code&gt; accessors provide explicit control of how data is accessed, regardless of the executing computer's endianness.</source>
          <target state="translated">멀티 바이트 숫자 형식은 머신 아키텍처에 따라 메모리에 다르게 표시됩니다 . 자세한 내용은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;엔디안&lt;/a&gt; 을 참조하십시오 . &lt;code&gt;DataView&lt;/code&gt; 접근자는 실행중인 컴퓨터의 엔디안과 상관없이 데이터에 액세스하는 방법을 명시 적으로 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45547c82b3d107dd68f9daa0979f6f8524d8fe41" translate="yes" xml:space="preserve">
          <source>Multi-case - chained operations</source>
          <target state="translated">다중 사례-체인 작업</target>
        </trans-unit>
        <trans-unit id="187bc476b097eb708e54a90b80a07a1474e02b36" translate="yes" xml:space="preserve">
          <source>Multi-case - single operation</source>
          <target state="translated">다중 사례-단일 작업</target>
        </trans-unit>
        <trans-unit id="d7e7c012f74a51c913dc1473b49e5ff251e92948" translate="yes" xml:space="preserve">
          <source>Multi-line search.</source>
          <target state="translated">여러 줄 검색.</target>
        </trans-unit>
        <trans-unit id="04001df0dbe7d02ecc4231f228169387b546cfd8" translate="yes" xml:space="preserve">
          <source>Multi-line strings</source>
          <target state="translated">여러 줄 문자열</target>
        </trans-unit>
        <trans-unit id="f2c9c22d2f5040152bcd029d261ed3e7bd2eaf4a" translate="yes" xml:space="preserve">
          <source>Multiline statements require body brackets and return:</source>
          <target state="translated">여러 줄 문에는 본문 대괄호가 필요하고 다음을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c70668a80f6e27483a35c68555c2dbd8aa226406" translate="yes" xml:space="preserve">
          <source>Multiple &lt;code&gt;if...else&lt;/code&gt; statements can be nested to create an &lt;code&gt;else if&lt;/code&gt; clause. Note that there is no &lt;code&gt;elseif&lt;/code&gt; (in one word) keyword in JavaScript.</source>
          <target state="translated">&lt;code&gt;else if&lt;/code&gt; 절 을 만들기 위해 여러 &lt;code&gt;if...else&lt;/code&gt; 문을 중첩 할 수 있습니다 . JavaScript 에는 &lt;code&gt;elseif&lt;/code&gt; (한 단어로) 키워드 가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="91f980bf5c98e13d46d6f51ec9d1c716af220ca8" translate="yes" xml:space="preserve">
          <source>Multiple lines</source>
          <target state="translated">여러 줄</target>
        </trans-unit>
        <trans-unit id="6076e7744e9e036fd469fa2af1c56a1db3661014" translate="yes" xml:space="preserve">
          <source>Multiple params require parentheses. Multiline statements require body brackets and return:</source>
          <target state="translated">여러 매개 변수에는 괄호가 필요합니다. 여러 줄 문에는 본문 대괄호가 필요하고 다음을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="59f68135f0f65227d2630a74da6704c058ee0d14" translate="yes" xml:space="preserve">
          <source>Multiple params require parentheses. With simple expression return is not needed:</source>
          <target state="translated">여러 매개 변수에는 괄호가 필요합니다. 간단한 표현식 반환이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cf527f48ca51801e8fc83e714aca36e495d12a76" translate="yes" xml:space="preserve">
          <source>Multiple statements need to be enclosed in brackets. A single expression requires no brackets. The expression is also the implicit return value of the function.</source>
          <target state="translated">여러 문장은 괄호로 묶어야합니다. 단일 표현식에는 대괄호가 필요하지 않습니다. 또한 표현식은 함수의 암시 적 반환 값입니다.</target>
        </trans-unit>
        <trans-unit id="2b9ee6e2b5fcdbd970e8f069acf17877e49e0441" translate="yes" xml:space="preserve">
          <source>Multiplication</source>
          <target state="translated">Multiplication</target>
        </trans-unit>
        <trans-unit id="29bec0c4ea1142a32691ebfb61cdb6560525eb20" translate="yes" xml:space="preserve">
          <source>Multiplication (*)</source>
          <target state="translated">곱셈 (*)</target>
        </trans-unit>
        <trans-unit id="c41e6546f2f09c72f9c4264b134a64d1e3f0725d" translate="yes" xml:space="preserve">
          <source>Multiplication (&lt;code&gt;*&lt;/code&gt;)</source>
          <target state="translated">곱셈 ( &lt;code&gt;*&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="bc5f7a8e3f6c574a340d00ceb468d9ad4997d1a2" translate="yes" xml:space="preserve">
          <source>Multiplication assignment</source>
          <target state="translated">곱셈 대입</target>
        </trans-unit>
        <trans-unit id="68c5526133ad24050eb09725afae35a9f3f94b08" translate="yes" xml:space="preserve">
          <source>Multiplication assignment (&lt;code&gt;x *= y&lt;/code&gt;)</source>
          <target state="translated">곱셈 대입 ( &lt;code&gt;x *= y&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="07d8af07b89b3cd3cdcde482fe72b5eef9743367" translate="yes" xml:space="preserve">
          <source>Multiplication assignment.</source>
          <target state="translated">곱셈 대입.</target>
        </trans-unit>
        <trans-unit id="1abcf55f0c2f209aa7c482a054988e70bce884b6" translate="yes" xml:space="preserve">
          <source>Multiplication operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2268b7ba08eaa2111a987e683d3af8c78d7134c2" translate="yes" xml:space="preserve">
          <source>Multiplication operator.</source>
          <target state="translated">곱셈 연산자.</target>
        </trans-unit>
        <trans-unit id="c0bc3c08709625c52315969733566b14fd45e7f5" translate="yes" xml:space="preserve">
          <source>Multiplication using numbers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="762b4737e2172fe5003481a1c9efa426faf10757" translate="yes" xml:space="preserve">
          <source>Multiplication with Infinity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e05cac9e388da381cc5ebc758048dc8fd589f3c" translate="yes" xml:space="preserve">
          <source>Multiplication with non-numbers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54694fff9fa76306fe7c989ccae1434b6f8e4db4" translate="yes" xml:space="preserve">
          <source>Mutates a reference stored at a given index to a different value.</source>
          <target state="translated">주어진 색인에 저장된 참조를 다른 값으로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="660ecb8914204527375df5f117ea5a25cb860eab" translate="yes" xml:space="preserve">
          <source>Mutator methods</source>
          <target state="translated">뮤 테이터 방법</target>
        </trans-unit>
        <trans-unit id="44384b596daffb3278fe1a14c782a5e6791cf6cc" translate="yes" xml:space="preserve">
          <source>Myanmar Shan digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50f3dcd9a738f5edd03343372e12bd99f7e61804" translate="yes" xml:space="preserve">
          <source>Myanmar Tai Laing digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6366d2bb64ef7ea9d0f884e82207585bf8ff09f1" translate="yes" xml:space="preserve">
          <source>Myanmar digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b07822bda9e8edd43986c6814afd84f1a049dbc" translate="yes" xml:space="preserve">
          <source>N'Ko digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="984ac544f1d0a5036cc20ca285334515bae3fc49" translate="yes" xml:space="preserve">
          <source>NOT a</source>
          <target state="translated">아닙니다</target>
        </trans-unit>
        <trans-unit id="f13d35bf57a61f13a731200b8d4c90b8437c1b01" translate="yes" xml:space="preserve">
          <source>NOTE: Each step along the way is a valid &quot;arrow function&quot;</source>
          <target state="translated">참고 : 각 단계는 유효한 &quot;화살표 기능&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="550e6ece1caf9469f8690661e9844c32af056bbe" translate="yes" xml:space="preserve">
          <source>NOTE: Please fact-check notes on &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;.</source>
          <target state="translated">참고 : &lt;a href=&quot;../strict_mode&quot;&gt;엄격 모드&lt;/a&gt; 에 대한 사실을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="f7fd9c68f804acda665d2ab082217bb1583318f2" translate="yes" xml:space="preserve">
          <source>NaN</source>
          <target state="translated">NaN</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="1507b9e9bcd5de9387013d4f48b50175dd0b65f4" translate="yes" xml:space="preserve">
          <source>Name of the exports to be imported.</source>
          <target state="translated">가져올 내보내기의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="50ae1009f3fe21ff378ffa746e9b63e39211a8ee" translate="yes" xml:space="preserve">
          <source>Name of the module object that will be used as a kind of namespace when referring to the imports.</source>
          <target state="translated">가져 오기를 참조 할 때 일종의 네임 스페이스로 사용될 모듈 객체의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="c21b0a75b8bc8ff270a0e74bfc6ecdc3a207997f" translate="yes" xml:space="preserve">
          <source>Name that will refer to the default export from the module.</source>
          <target state="translated">모듈에서 기본 내보내기를 참조 할 이름입니다.</target>
        </trans-unit>
        <trans-unit id="c3ce1731f86264702a939e414faf66cc9a6463dc" translate="yes" xml:space="preserve">
          <source>Named Exports (Zero or more exports per module)</source>
          <target state="translated">명명 된 내보내기 (모듈 당 0 개 이상의 내보내기)</target>
        </trans-unit>
        <trans-unit id="47528165793437db5026d340a58e893a92e77c58" translate="yes" xml:space="preserve">
          <source>Named Years and Mixed calendars</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae448f887cd5d248e74aca3dcecc82fa17f1c45" translate="yes" xml:space="preserve">
          <source>Named capture groups</source>
          <target state="translated">명명 된 캡처 그룹</target>
        </trans-unit>
        <trans-unit id="c35ea6f71982fb5e872a4f834ec738eede19541e" translate="yes" xml:space="preserve">
          <source>Named class expressions</source>
          <target state="translated">명명 된 클래스 표현식</target>
        </trans-unit>
        <trans-unit id="8bb303667ef4ac79882b9d41b44e8be3358ba3e0" translate="yes" xml:space="preserve">
          <source>Named exports are useful to export several values. During the import, it is mandatory to use the same name of the corresponding object.</source>
          <target state="translated">명명 된 내보내기는 여러 값을 내보내는 데 유용합니다. 가져 오는 동안 해당 오브젝트의 동일한 이름을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="04d7093c70a1108e9c5984ef06cece016f4a560b" translate="yes" xml:space="preserve">
          <source>Named exports:</source>
          <target state="translated">명명 된 수출 :</target>
        </trans-unit>
        <trans-unit id="26061f731614204dbc36682a9e1cecacb17c8ee9" translate="yes" xml:space="preserve">
          <source>Named function expression</source>
          <target state="translated">명명 된 함수 표현식</target>
        </trans-unit>
        <trans-unit id="0d4f1a679b799c296d44bb53786ee4ff92fd1297" translate="yes" xml:space="preserve">
          <source>Named properties</source>
          <target state="translated">명명 된 속성</target>
        </trans-unit>
        <trans-unit id="59d20556f999c9717011dce6c0590115f3714407" translate="yes" xml:space="preserve">
          <source>Names for functions defined in a dictionary are properly assigned; however, anonymous functions defined on a var/let variable assignment have blank names.</source>
          <target state="translated">사전에 정의 된 기능의 이름이 올바르게 지정되었습니다. 그러나 var / let 변수 할당에 정의 된 익명 함수에는 빈 이름이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a16d9fe91bcd8d71db33de2fdb78e09ec94c9758" translate="yes" xml:space="preserve">
          <source>Names that will refer to the named imports.</source>
          <target state="translated">명명 된 가져 오기를 나타내는 이름입니다.</target>
        </trans-unit>
        <trans-unit id="07a58dec630a2094f2bac8489ef1376195b50ea3" translate="yes" xml:space="preserve">
          <source>Names to be used by the function as formal argument names. Each must be a string that corresponds to a valid JavaScript identifier or a list of such strings separated with a comma; for example &quot;&lt;code&gt;x&lt;/code&gt;&quot;, &quot;&lt;code&gt;theValue&lt;/code&gt;&quot;, or &quot;&lt;code&gt;a,b&lt;/code&gt;&quot;.</source>
          <target state="translated">함수가 형식 인수 이름으로 사용할 이름입니다. 각각은 유효한 JavaScript 식별자 또는 쉼표로 구분 된 이러한 문자열 목록에 해당하는 문자열이어야합니다. 예를 들어 &quot; &lt;code&gt;x&lt;/code&gt; &quot;, &quot; &lt;code&gt;theValue&lt;/code&gt; &quot;또는 &quot; &lt;code&gt;a,b&lt;/code&gt; &quot;입니다.</target>
        </trans-unit>
        <trans-unit id="c771db37d75a7a25aaf5323af9b33306aae40957" translate="yes" xml:space="preserve">
          <source>Names to be used by the function as formal argument names. Each must be a string that corresponds to a valid JavaScript identifier, or a list of such strings separated with a comma. For example: &quot;&lt;code&gt;x&lt;/code&gt;&quot;, &quot;&lt;code&gt;theValue&lt;/code&gt;&quot;&amp;mdash;or &quot;&lt;code&gt;x,theValue&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b4617b659a51d0b5756991a46730570511eef04" translate="yes" xml:space="preserve">
          <source>Naming</source>
          <target state="translated">Naming</target>
        </trans-unit>
        <trans-unit id="678a76b54fa7a748aeb0ebcdf417ba9aba926bd5" translate="yes" xml:space="preserve">
          <source>Native digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed1c8dd7972a58d00463e8e1a107d29a25e5246" translate="yes" xml:space="preserve">
          <source>Natural logarithm of 10, approximately 2.303.</source>
          <target state="translated">10의 자연 로그, 약 2.303</target>
        </trans-unit>
        <trans-unit id="416cfbf01ae8c7bc29a905c8714c433900c2ffbe" translate="yes" xml:space="preserve">
          <source>Natural logarithm of 2, approximately 0.693.</source>
          <target state="translated">2의 자연 로그, 약 0.693.</target>
        </trans-unit>
        <trans-unit id="2bbec62b2cab2e5c0780d4a309ceea4010f76deb" translate="yes" xml:space="preserve">
          <source>Natural logarithm of &lt;code&gt;10&lt;/code&gt;; approximately &lt;code&gt;2.303&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;10&lt;/code&gt; 의 자연 로그 ; 약 &lt;code&gt;2.303&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c50c2a3bf15ea7909c8288b52ab930b4fcc17970" translate="yes" xml:space="preserve">
          <source>Natural logarithm of &lt;code&gt;2&lt;/code&gt;; approximately &lt;code&gt;0.693&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;2&lt;/code&gt; 의 자연 로그 ; 약 &lt;code&gt;0.693&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fedf02a1f3fea92069599c49ef4d87f7675ed222" translate="yes" xml:space="preserve">
          <source>Nearly all objects in JavaScript are instances of &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;; a typical object inherits properties (including methods) from &lt;code&gt;Object.prototype&lt;/code&gt;, although these properties may be shadowed (a.k.a. overridden). However, an &lt;code&gt;Object&lt;/code&gt; may be deliberately created for which this is not true (e.g. by &lt;a href=&quot;create&quot;&gt;&lt;code&gt;Object.create(null)&lt;/code&gt;&lt;/a&gt;), or it may be altered so that this is no longer true (e.g. with &lt;a href=&quot;setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">JavaScript의 거의 모든 객체는 &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; 의&lt;/a&gt; 인스턴스입니다 . 일반적인 객체는 &lt;code&gt;Object.prototype&lt;/code&gt; 에서 속성 (메소드 포함)을 상속 하지만 이러한 속성은 음영 처리 될 수 있습니다 (일명 재정의 됨). 그러나 이것이 사실이 아닌 &lt;code&gt;Object&lt;/code&gt; 의도적으로 작성 하거나 (예 : &lt;a href=&quot;create&quot;&gt; &lt;code&gt;Object.create(null)&lt;/code&gt; &lt;/a&gt; 의해 ) 더 이상 참이 아닌 &lt;a href=&quot;setprototypeof&quot;&gt; &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; &lt;/a&gt; 변경할 수 있습니다 (예 : Object.setPrototypeOf ).</target>
        </trans-unit>
        <trans-unit id="a18d4c9d8ff748382d33866061124fa9bb7c3f09" translate="yes" xml:space="preserve">
          <source>Nearly all objects in JavaScript are instances of &lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;; a typical object inherits properties (including methods) from &lt;code&gt;Object.prototype&lt;/code&gt;, although these properties may be shadowed (a.k.a. overridden). However, an &lt;code&gt;Object&lt;/code&gt; may be deliberately created for which this is not true (e.g. by &lt;a href=&quot;object/create&quot;&gt;&lt;code&gt;Object.create(null)&lt;/code&gt;&lt;/a&gt;), or it may be altered so that this is no longer true (e.g. with &lt;a href=&quot;object/setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">JavaScript의 거의 모든 객체는 &lt;a href=&quot;object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; 의&lt;/a&gt; 인스턴스입니다 . 일반적인 객체는 &lt;code&gt;Object.prototype&lt;/code&gt; 에서 속성 (메서드 포함)을 상속 하지만 이러한 속성은 음영 처리 될 수 있습니다 (일명 재정의 됨). 그러나 이것이 사실이 아닌 &lt;code&gt;Object&lt;/code&gt; 가 의도적으로 생성 되거나 (예 : &lt;a href=&quot;object/create&quot;&gt; &lt;code&gt;Object.create(null)&lt;/code&gt; &lt;/a&gt; 의해 ) 더 이상 참이되지 않도록 변경 될 수 있습니다 (예 : &lt;a href=&quot;object/setprototypeof&quot;&gt; &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="65a1aa90e5ce901372e65e7efce50772db151276" translate="yes" xml:space="preserve">
          <source>Need for parentheses in Syntax</source>
          <target state="translated">구문에서 괄호 필요</target>
        </trans-unit>
        <trans-unit id="e71dfa9fc72cb878d4974b9f7162935e23e6f1b4" translate="yes" xml:space="preserve">
          <source>Need to set the flag on the commandline via --js-flags</source>
          <target state="translated">--js-flags를 통해 명령 줄에서 플래그를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="5cc00b205acea951c1daf5a7f74220bf5582fccc" translate="yes" xml:space="preserve">
          <source>Negating non-numbers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e1dedc58c4db13b00f7d571344c347b1fa4b647" translate="yes" xml:space="preserve">
          <source>Negating numbers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79852cc4ee6f56327d71481d7eb09ce7d2cceff" translate="yes" xml:space="preserve">
          <source>Negative and positive integer results vary between browsers (as well as between browser versions) because the W3C specification only mandates negative and positive values. Some browsers may return &lt;code&gt;-2&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt;, or even some other negative or positive value.</source>
          <target state="translated">W3C 사양은 음수 값과 양수 값만 요구하므로 음수 및 양의 정수 결과는 브라우저마다 (브라우저 버전마다) 다릅니다. 일부 브라우저는 &lt;code&gt;-2&lt;/code&gt; 또는 &lt;code&gt;2&lt;/code&gt; 또는 다른 음수 또는 양수 값을 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="97fab52ebdfb8cddfb5bb0866105e44e9f3b81bf" translate="yes" xml:space="preserve">
          <source>Negative integers are not considered as indexed properties and therefore return the value of the prototype property.</source>
          <target state="translated">음의 정수는 인덱싱 된 속성으로 간주되지 않으므로 프로토 타입 속성의 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f114d13af557871750ae927f40c08a0ebae2fb93" translate="yes" xml:space="preserve">
          <source>Negative repetition count</source>
          <target state="translated">음의 반복 횟수</target>
        </trans-unit>
        <trans-unit id="9b14ab55114bbc6fb96f09c2412bfc4016ec9326" translate="yes" xml:space="preserve">
          <source>Negative when the &lt;code&gt;&lt;var&gt;referenceStr&lt;/var&gt;&lt;/code&gt; occurs before &lt;code&gt;&lt;var&gt;compareString&lt;/var&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;referenceStr&lt;/var&gt;&lt;/code&gt; 이 &lt;code&gt;&lt;var&gt;compareString&lt;/var&gt;&lt;/code&gt; 전에 발생 하면 음수</target>
        </trans-unit>
        <trans-unit id="833ed969d2a6a2fad3f87bda88773f90f927ac90" translate="yes" xml:space="preserve">
          <source>Negative when the &lt;strong&gt;referenceStr&lt;/strong&gt; occurs before &lt;strong&gt;compareStr&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;compareStr&lt;/strong&gt; 전에 &lt;strong&gt;referenceStr이&lt;/strong&gt; 발생 하면 음수&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80e1c82e04fc5d043d1496ef47adcebc3cb13557" translate="yes" xml:space="preserve">
          <source>Negative-zero &lt;code&gt;BigInt&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb513cee5cc44f63996a673134bc8a274312488f" translate="yes" xml:space="preserve">
          <source>Nested documents and dedicated workers will need to set the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Embedder-Policy&quot;&gt;&lt;code&gt;Cross-Origin-Embedder-Policy&lt;/code&gt;&lt;/a&gt; header as well with the same value. No further changes are needed for same-origin nested documents and subresources. Same-site (but cross-origin) nested documents and subresources will need to set the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Resource-Policy&quot;&gt;&lt;code&gt;Cross-Origin-Resource-Policy&lt;/code&gt;&lt;/a&gt; header with &lt;code&gt;same-site&lt;/code&gt; as value. And their cross-origin (and cross-site) counterparts need to set the same header with &lt;code&gt;cross-origin&lt;/code&gt; as value. Note that setting the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Resource-Policy&quot;&gt;&lt;code&gt;Cross-Origin-Resource-Policy&lt;/code&gt;&lt;/a&gt; header to any other value than &lt;code&gt;same-origin&lt;/code&gt; opens up the resource to potential attacks, such as &lt;a href=&quot;https://en.wikipedia.org/wiki/Spectre_(security_vulnerability)&quot;&gt;Spectre&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b51ed36ac23c16ba1d7fe422d4192c3d86f082d" translate="yes" xml:space="preserve">
          <source>Nested object and array destructuring</source>
          <target state="translated">중첩 된 객체 및 배열 파괴</target>
        </trans-unit>
        <trans-unit id="69a930784cc1871541d6c9f52e4b4b51f9c36379" translate="yes" xml:space="preserve">
          <source>Nested try-blocks</source>
          <target state="translated">중첩 된 시험 블록</target>
        </trans-unit>
        <trans-unit id="c5f7b13e5df2686661ca169a8a315cd0e531d609" translate="yes" xml:space="preserve">
          <source>Nesting templates</source>
          <target state="translated">중첩 템플릿</target>
        </trans-unit>
        <trans-unit id="81ecc659e169041f8098c285a1f2e9acfb98e818" translate="yes" xml:space="preserve">
          <source>Never use eval()!</source>
          <target state="translated">eval ()을 사용하지 마십시오!</target>
        </trans-unit>
        <trans-unit id="cabdef3dd9fde9deee23f63e708337c3643195e6" translate="yes" xml:space="preserve">
          <source>New HTTP header bonanza</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966963cf44aeb10d6f7ac5a18e41066a81b0c629" translate="yes" xml:space="preserve">
          <source>New Tai Lue digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d61c228244e80a827e26b1ede04cfbb5a1305a" translate="yes" xml:space="preserve">
          <source>New bitmasks can be created by using the bitwise logical operators on these primitive bitmasks. For example, the bitmask 1011 can be created by ORing FLAG_A, FLAG_B, and FLAG_D:</source>
          <target state="translated">이러한 기본 비트 마스크에서 비트 논리 연산자를 사용하여 새 비트 마스크를 작성할 수 있습니다. 예를 들어, 비트 마스크 (1011)는 ORAG FLAG_A, FLAG_B 및 FLAG_D에 의해 생성 될 수있다 :</target>
        </trans-unit>
        <trans-unit id="a78ae48a655c194ce9f25de48a7386849ea9f568" translate="yes" xml:space="preserve">
          <source>New in JavaScript</source>
          <target state="translated">JavaScript의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="30e6678037330cdad4610515a7015b892755bce2" translate="yes" xml:space="preserve">
          <source>New is required</source>
          <target state="translated">새 항목이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="f1deedbf18333a7029cfa84cdcc491aed511a3e1" translate="yes" xml:space="preserve">
          <source>New line character in Commodore and early Mac systems.</source>
          <target state="translated">Commodore 및 초기 Mac 시스템의 줄 바꿈 문자</target>
        </trans-unit>
        <trans-unit id="32190972ea93208b4c44876f3c7240a3b836fa02" translate="yes" xml:space="preserve">
          <source>New line character in UNIX systems.</source>
          <target state="translated">UNIX 시스템의 줄 바꾸기 문자</target>
        </trans-unit>
        <trans-unit id="35efbc72fabdb55c68f4edabf07f195df0056401" translate="yes" xml:space="preserve">
          <source>New method added: &lt;a href=&quot;array/includes&quot;&gt;&lt;code&gt;Array.prototype.includes()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">새로운 메소드 추가 : &lt;a href=&quot;array/includes&quot;&gt; &lt;code&gt;Array.prototype.includes()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="22da9740a337ab48e0f49b7d058507681ec7d15a" translate="yes" xml:space="preserve">
          <source>New methods &lt;a href=&quot;math/log10&quot;&gt;&lt;code&gt;log10()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/log2&quot;&gt;&lt;code&gt;log2()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/log1p&quot;&gt;&lt;code&gt;log1p()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/expm1&quot;&gt;&lt;code&gt;expm1()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/cosh&quot;&gt;&lt;code&gt;cosh()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/sinh&quot;&gt;&lt;code&gt;sinh()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/tanh&quot;&gt;&lt;code&gt;tanh()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/acosh&quot;&gt;&lt;code&gt;acosh()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/asinh&quot;&gt;&lt;code&gt;asinh()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/atanh&quot;&gt;&lt;code&gt;atanh()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/hypot&quot;&gt;&lt;code&gt;hypot()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/trunc&quot;&gt;&lt;code&gt;trunc()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/sign&quot;&gt;&lt;code&gt;sign()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/imul&quot;&gt;&lt;code&gt;imul()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/fround&quot;&gt;&lt;code&gt;fround()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/cbrt&quot;&gt;&lt;code&gt;cbrt()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;math/clz32&quot;&gt;&lt;code&gt;clz32()&lt;/code&gt;&lt;/a&gt; added.</source>
          <target state="translated">새로운 메소드 &lt;a href=&quot;math/log10&quot;&gt; &lt;code&gt;log10()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/log2&quot;&gt; &lt;code&gt;log2()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/log1p&quot;&gt; &lt;code&gt;log1p()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/expm1&quot;&gt; &lt;code&gt;expm1()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/cosh&quot;&gt; &lt;code&gt;cosh()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/sinh&quot;&gt; &lt;code&gt;sinh()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/tanh&quot;&gt; &lt;code&gt;tanh()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/acosh&quot;&gt; &lt;code&gt;acosh()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/asinh&quot;&gt; &lt;code&gt;asinh()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/atanh&quot;&gt; &lt;code&gt;atanh()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/hypot&quot;&gt; &lt;code&gt;hypot()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/trunc&quot;&gt; &lt;code&gt;trunc()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/sign&quot;&gt; &lt;code&gt;sign()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/imul&quot;&gt; &lt;code&gt;imul()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/fround&quot;&gt; &lt;code&gt;fround()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/cbrt&quot;&gt; &lt;code&gt;cbrt()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;math/clz32&quot;&gt; &lt;code&gt;clz32()&lt;/code&gt; &lt;/a&gt; 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="4576b1cdd1a75ff690a3d4c2e228c09d191ca7b7" translate="yes" xml:space="preserve">
          <source>New methods added: &lt;a href=&quot;array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/of&quot;&gt;&lt;code&gt;Array.of&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/find&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/findindex&quot;&gt;&lt;code&gt;findIndex&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/fill&quot;&gt;&lt;code&gt;fill&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/copywithin&quot;&gt;&lt;code&gt;copyWithin&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">새로운 메소드 추가 : &lt;a href=&quot;array/from&quot;&gt; &lt;code&gt;Array.from&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/of&quot;&gt; &lt;code&gt;Array.of&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/find&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/findindex&quot;&gt; &lt;code&gt;findIndex&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/fill&quot;&gt; &lt;code&gt;fill&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/copywithin&quot;&gt; &lt;code&gt;copyWithin&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c5d3d80d6e6b23f9c9c31132f3f8ac1135c271c" translate="yes" xml:space="preserve">
          <source>New methods added: &lt;a href=&quot;array/isarray&quot;&gt;&lt;code&gt;Array.isArray&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/indexof&quot;&gt;&lt;code&gt;indexOf&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/lastindexof&quot;&gt;&lt;code&gt;lastIndexOf&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/every&quot;&gt;&lt;code&gt;every&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/some&quot;&gt;&lt;code&gt;some&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/foreach&quot;&gt;&lt;code&gt;forEach&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/filter&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/reduce&quot;&gt;&lt;code&gt;reduce&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/reduceright&quot;&gt;&lt;code&gt;reduceRight&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">새로운 메소드 추가 : &lt;a href=&quot;array/isarray&quot;&gt; &lt;code&gt;Array.isArray&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/indexof&quot;&gt; &lt;code&gt;indexOf&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/lastindexof&quot;&gt; &lt;code&gt;lastIndexOf&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/every&quot;&gt; &lt;code&gt;every&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/some&quot;&gt; &lt;code&gt;some&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/foreach&quot;&gt; &lt;code&gt;forEach&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/map&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/filter&quot;&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/reduce&quot;&gt; &lt;code&gt;reduce&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/reduceright&quot;&gt; &lt;code&gt;reduceRight&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a012fda7a04adcf12c5afca05aadad805a2c8321" translate="yes" xml:space="preserve">
          <source>New methods and properties added: &lt;a href=&quot;number/epsilon&quot;&gt;&lt;code&gt;EPSILON&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;number/isfinite&quot;&gt;&lt;code&gt;isFinite&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;number/isinteger&quot;&gt;&lt;code&gt;isInteger&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;number/isnan&quot;&gt;&lt;code&gt;isNaN&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;number/parsefloat&quot;&gt;&lt;code&gt;parseFloat&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;number/parseint&quot;&gt;&lt;code&gt;parseInt&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;number/epsilon&quot;&gt; &lt;code&gt;EPSILON&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;number/isfinite&quot;&gt; &lt;code&gt;isFinite&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;number/isinteger&quot;&gt; &lt;code&gt;isInteger&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;number/isnan&quot;&gt; &lt;code&gt;isNaN&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;number/parsefloat&quot;&gt; &lt;code&gt;parseFloat&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;number/parseint&quot;&gt; &lt;code&gt;parseInt&lt;/code&gt; 가&lt;/a&gt; 추가 된 새로운 메소드 및 특성</target>
        </trans-unit>
        <trans-unit id="6e062df5eb2babfba09feb7f8ce039eda0edaffa" translate="yes" xml:space="preserve">
          <source>New notations in ECMAScript 2015</source>
          <target state="translated">ECMAScript 2015의 새로운 표기법</target>
        </trans-unit>
        <trans-unit id="9cd201883d862a52b0be469a4df5110e0199e682" translate="yes" xml:space="preserve">
          <source>New runtime errors</source>
          <target state="translated">새로운 런타임 오류</target>
        </trans-unit>
        <trans-unit id="f5fc78d78a498ec3ad24279fd81c75260eb84035" translate="yes" xml:space="preserve">
          <source>New: &lt;code&gt;[for (i of numbers) i * 2]&lt;/code&gt;</source>
          <target state="translated">신규 : &lt;code&gt;[for (i of numbers) i * 2]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc04f1621f986e31a64bebcec4c536c6670bfcb8" translate="yes" xml:space="preserve">
          <source>New: &lt;code&gt;[for (x of [0, 1, 2]) ()=&amp;gt;x][1]() // 1, each iteration creates a fresh binding for x. &lt;/code&gt;</source>
          <target state="translated">신규 : &lt;code&gt;[for (x of [0, 1, 2]) ()=&amp;gt;x][1]() // 1, each iteration creates a fresh binding for x. &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e47e20caa1fc9b842eb6aad6b5043454041447f2" translate="yes" xml:space="preserve">
          <source>New: Arrow functions, Generator functions, default parameters, rest parameters.</source>
          <target state="translated">신규 : 화살표 기능, 생성기 기능, 기본 매개 변수, 나머지 매개 변수.</target>
        </trans-unit>
        <trans-unit id="c5bf3132e8479a044a9d48319c4dbad4aa6cafa5" translate="yes" xml:space="preserve">
          <source>Newa digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="816c52fd2bdd94a63cd0944823a6c0aa9384c103" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">No</target>
        </trans-unit>
        <trans-unit id="bedd4ab5dc06f676dac6118d694e9cae3887b0d2" translate="yes" xml:space="preserve">
          <source>No binding of &lt;code&gt;arguments&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;arguments&lt;/code&gt; 바인딩 없음</target>
        </trans-unit>
        <trans-unit id="1fdfe9751023922bd47950a6aaa6a6980e5ecb37" translate="yes" xml:space="preserve">
          <source>No chaining with AND or OR operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea00acbd49f88aab365d53c50e9542039bde2547" translate="yes" xml:space="preserve">
          <source>No change.</source>
          <target state="translated">변경 없음.</target>
        </trans-unit>
        <trans-unit id="9b1fcbda693f085c4d6d33acbf333e420ba23fca" translate="yes" xml:space="preserve">
          <source>No changes.</source>
          <target state="translated">변경 사항 없음.</target>
        </trans-unit>
        <trans-unit id="99d07fe9e437e67fac02eb30ab57840edfc9ec5e" translate="yes" xml:space="preserve">
          <source>No compatibility data found. Please contribute data for &quot;javascript.builtins.WebAssembly.Global.prototype&quot; (depth: 1) to the &lt;a href=&quot;https://github.com/mdn/browser-compat-data&quot;&gt;MDN compatibility data repository&lt;/a&gt;.</source>
          <target state="translated">호환성 데이터가 없습니다. &quot;javascript.builtins.WebAssembly.Global.prototype&quot;(깊이 : 1)에 대한 &lt;a href=&quot;https://github.com/mdn/browser-compat-data&quot;&gt;데이터를 MDN 호환성 데이터 저장소에 제공하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7df7b630f10a7dc76618b36dee9e79837a53b0e4" translate="yes" xml:space="preserve">
          <source>No compatibility data found. Please contribute data for &quot;javascript.operators.subtraction_assignment&quot; (depth: 1) to the &lt;a href=&quot;https://github.com/mdn/browser-compat-data&quot;&gt;MDN compatibility data repository&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a97d87364553370d0a46bcf5e2bf283e8c7b6493" translate="yes" xml:space="preserve">
          <source>No matter what, &lt;code&gt;foo&lt;/code&gt;'s &lt;code&gt;this&lt;/code&gt; is set to what it was when it was created (in the example above, the global object). The same applies to arrow functions created inside other functions: their &lt;code&gt;this&lt;/code&gt; remains that of the enclosing lexical context.</source>
          <target state="translated">아니, 어떤 문제가 &lt;code&gt;foo&lt;/code&gt; 의 &lt;code&gt;this&lt;/code&gt; 가 (전역 객체, 위의 예에서) 만들 때 사용했던 설정됩니다. 다른 함수 내에서 생성 된 화살표 함수에도 동일하게 적용됩니다. &lt;code&gt;this&lt;/code&gt; 함수 는 둘러싸는 어휘 컨텍스트의 화살표 함수로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="9b0dfa57d315daee94b26c05846cfc9279894f61" translate="yes" xml:space="preserve">
          <source>No non-null object</source>
          <target state="translated">널이 아닌 객체 없음</target>
        </trans-unit>
        <trans-unit id="0cf351c6879d24ab2313e5015e7fda03e5918ed2" translate="yes" xml:space="preserve">
          <source>No operation for uninitialized values (sparse arrays)</source>
          <target state="translated">초기화되지 않은 값 (희소 배열)에 대한 작업 없음</target>
        </trans-unit>
        <trans-unit id="44896465cd24f958ce56114cd847b2238c9920dd" translate="yes" xml:space="preserve">
          <source>No parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7124c63029b1f42ee5194f7a0bf73f8290447e26" translate="yes" xml:space="preserve">
          <source>No permission to access document</source>
          <target state="translated">문서에 액세스 할 수있는 권한이 없습니다.</target>
        </trans-unit>
        <trans-unit id="7418c52ec0ed46f6dd897d5e8cf3a1bce3ecae63" translate="yes" xml:space="preserve">
          <source>No properties</source>
          <target state="translated">속성이 없습니다</target>
        </trans-unit>
        <trans-unit id="85e4f309cabe48b9aa4e70f7d02f76fc70cb154c" translate="yes" xml:space="preserve">
          <source>No separate &lt;code&gt;this&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 아니야</target>
        </trans-unit>
        <trans-unit id="df96d3bc4e3189de83780d1fc057710661bb1339" translate="yes" xml:space="preserve">
          <source>No special case ordering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b723811bbcd29fcd775259110211c736e6cc5d" translate="yes" xml:space="preserve">
          <source>No string concatenation</source>
          <target state="translated">문자열 연결 없음</target>
        </trans-unit>
        <trans-unit id="783029fd374c4e3a3bb6b14f4cbbab0aec2672a5" translate="yes" xml:space="preserve">
          <source>No strings in typed arrays</source>
          <target state="translated">형식화 된 배열에 문자열이 없습니다.</target>
        </trans-unit>
        <trans-unit id="a29be68055fcd821421daceb3b0a89ab3ff31d3c" translate="yes" xml:space="preserve">
          <source>No support for an undefined description.</source>
          <target state="translated">정의되지 않은 설명에 대한 지원이 없습니다.</target>
        </trans-unit>
        <trans-unit id="de908e478c03080cf2e59dc459f7282c468d397a" translate="yes" xml:space="preserve">
          <source>No variable name</source>
          <target state="translated">변수 이름이 없습니다</target>
        </trans-unit>
        <trans-unit id="f5804885b58e4e8d3f8f18966a078c574a206330" translate="yes" xml:space="preserve">
          <source>No-break space</source>
          <target state="translated">휴식 공간</target>
        </trans-unit>
        <trans-unit id="3cede159aa73f967896140194ccc2a5a57d4e5f1" translate="yes" xml:space="preserve">
          <source>No-op forwarding proxy</source>
          <target state="translated">무 전송 전달 프록시</target>
        </trans-unit>
        <trans-unit id="10b3493287f831e81a438811a1ffba01f8cec4b7" translate="yes" xml:space="preserve">
          <source>Node.js</source>
          <target state="translated">Node.js</target>
        </trans-unit>
        <trans-unit id="cd162c52c98aae8684633d7b414ed89b23a893c3" translate="yes" xml:space="preserve">
          <source>Non configurable array element</source>
          <target state="translated">구성 할 수없는 배열 요소</target>
        </trans-unit>
        <trans-unit id="31b9f8e707060fb606f21a05f7411d3493f064b0" translate="yes" xml:space="preserve">
          <source>Non-configurable properties</source>
          <target state="translated">구성 할 수없는 속성</target>
        </trans-unit>
        <trans-unit id="21a990941d2a774733cf199d891e684299b3742a" translate="yes" xml:space="preserve">
          <source>Non-configurable properties are not super common, but they can be created using &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/object/freeze&quot;&gt;&lt;code&gt;Object.freeze()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">구성 할 수없는 속성은 일반적이지 않지만 &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../global_objects/object/freeze&quot;&gt; &lt;code&gt;Object.freeze()&lt;/code&gt; &lt;/a&gt; 사용하여 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d5d4f4e574e4cd7702ef26d6b39b3ab8a2813078" translate="yes" xml:space="preserve">
          <source>Non-configurable properties cannot be removed. This includes properties of built-in objects like &lt;a href=&quot;../global_objects/math&quot;&gt;&lt;code&gt;Math&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; and properties that are created as non-configurable with methods like &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">구성 할 수없는 속성은 제거 할 수 없습니다. 여기에는 &lt;a href=&quot;../global_objects/math&quot;&gt; &lt;code&gt;Math&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../global_objects/object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; 와 같은 내장 객체의 속성과 &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; 와 같은 메서드로 구성 할 수없는 속성이 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="3b3f72a04edeed6042a629bb543c4d10ed5a1ad3" translate="yes" xml:space="preserve">
          <source>Non-configurable properties created by &lt;code&gt;Object.defineProperty&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Object.defineProperty&lt;/code&gt; 로 작성된 구성 불가능 특성</target>
        </trans-unit>
        <trans-unit id="21e70857a3796b6611a87ec74b6287d45ad26d67" translate="yes" xml:space="preserve">
          <source>Non-generator method definitions cannot contain the &lt;code&gt;yield&lt;/code&gt; keyword. This means that &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/Legacy_generator_function&quot;&gt;legacy generator functions&lt;/a&gt; won't work either, and will throw a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;. Always use &lt;code&gt;yield&lt;/code&gt; in conjunction with the asterisk (&lt;code&gt;*&lt;/code&gt;).</source>
          <target state="translated">비 생성자 메서드 정의에는 &lt;code&gt;yield&lt;/code&gt; 키워드가 포함될 수 없습니다 . 즉, &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/Legacy_generator_function&quot;&gt;레거시 생성기 함수&lt;/a&gt; 도 작동하지 않고 &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; 를 발생&lt;/a&gt; 시킵니다. 항상 별표 ( &lt;code&gt;*&lt;/code&gt; ) 와 함께 &lt;code&gt;yield&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5c95be1882625a2f717972dc4dafab406b2d5885" translate="yes" xml:space="preserve">
          <source>Non-global regex throws</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e6b7d2f8f23f5f5b0b3185cfe061f28315b226" translate="yes" xml:space="preserve">
          <source>Non-identity (&lt;code&gt;a !== b&lt;/code&gt;)</source>
          <target state="translated">비 식별성 ( &lt;code&gt;a !== b&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="08276813a3ca6c55a0fe8a87f813f3801c43a5d5" translate="yes" xml:space="preserve">
          <source>Non-identity / strict inequality (!==)</source>
          <target state="translated">비 식별 / 엄격한 불평등 (! ==)</target>
        </trans-unit>
        <trans-unit id="14f08c6d0fe3dec0ebf55de6f111c257d895f76f" translate="yes" xml:space="preserve">
          <source>Non-leaking Arrow Functions</source>
          <target state="translated">비누 수 화살표 기능</target>
        </trans-unit>
        <trans-unit id="f3d2dc263f87c0d2d84c2bc6289ee1e6dbe46903" translate="yes" xml:space="preserve">
          <source>Non-object coercion</source>
          <target state="translated">비 객체 강제</target>
        </trans-unit>
        <trans-unit id="26ff9dec765c27e6a61475bc905c65f18baf9b53" translate="yes" xml:space="preserve">
          <source>Non-standard and deprecated way</source>
          <target state="translated">비표준 및 더 이상 사용되지 않는 방법</target>
        </trans-unit>
        <trans-unit id="adaa1c47c48625a937afbb12fd85f832796659ae" translate="yes" xml:space="preserve">
          <source>Non-standard date strings</source>
          <target state="translated">비표준 날짜 문자열</target>
        </trans-unit>
        <trans-unit id="ca5c3b035aa809710c6689b77ab9cb8d9228893c" translate="yes" xml:space="preserve">
          <source>Non-standard features</source>
          <target state="translated">비표준 기능</target>
        </trans-unit>
        <trans-unit id="1ad79462eb26236358dd06be87b70b091edb4c28" translate="yes" xml:space="preserve">
          <source>Non-strict functions that are passed only simple parameters (that is, not rest, default, or restructured parameters) will sync the value of variables new values in the body of the function with the &lt;code&gt;arguments&lt;/code&gt; object, and vice versa:</source>
          <target state="translated">단순 매개 변수 (즉, rest, default 또는 재구성 된 매개 변수가 아님) 만 전달되는 엄격하지 않은 함수는 함수 본문의 변수 새 값을 &lt;code&gt;arguments&lt;/code&gt; 객체 와 동기화 하며 그 반대의 경우도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="f6f0ec38f327f319b4bcd574b6192c8978dca32b" translate="yes" xml:space="preserve">
          <source>Non-well-formed iterables</source>
          <target state="translated">잘 형성되지 않은 이터 러블</target>
        </trans-unit>
        <trans-unit id="9a9707be07da6862114abd49d2570046d4810ca5" translate="yes" xml:space="preserve">
          <source>None.</source>
          <target state="translated">None.</target>
        </trans-unit>
        <trans-unit id="7161bb4b99446fa501c3ceb7aedb6a85e373f596" translate="yes" xml:space="preserve">
          <source>Nonidentity operator.</source>
          <target state="translated">비 식별 연산자.</target>
        </trans-unit>
        <trans-unit id="14656ed74ab77f997a9626a118a0b93f88217ad2" translate="yes" xml:space="preserve">
          <source>Normal space</source>
          <target state="translated">일반 공간</target>
        </trans-unit>
        <trans-unit id="cb7726a2d816826dddce80338e1e351235034774" translate="yes" xml:space="preserve">
          <source>Normal space, but no point at which a line may break</source>
          <target state="translated">일반 공간이지만 선이 끊길 수있는 지점이 없습니다.</target>
        </trans-unit>
        <trans-unit id="2f1583623455f8243b26ee06713b7076b1d7169a" translate="yes" xml:space="preserve">
          <source>Normal variables in JavaScript can't be deleted using the &lt;code&gt;&lt;a href=&quot;../operators/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; operator. In strict mode, an attempt to delete a variable will throw an error and is not allowed.</source>
          <target state="translated">JavaScript의 일반 변수는 &lt;code&gt;&lt;a href=&quot;../operators/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; 연산자를 사용하여 삭제할 수 없습니다 . 엄격 모드에서는 변수를 삭제하려고하면 오류가 발생하고 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="40982f925ee19769c42f549717d8ee70798c4b05" translate="yes" xml:space="preserve">
          <source>Not a codepoint</source>
          <target state="translated">코드 포인트가 아님</target>
        </trans-unit>
        <trans-unit id="33f2c395db1e1eb4df8474dbb567f9bd66711316" translate="yes" xml:space="preserve">
          <source>Not a constructor</source>
          <target state="translated">생성자가 아님</target>
        </trans-unit>
        <trans-unit id="6d358abaff1485fb49d572a68e47b82b693e6145" translate="yes" xml:space="preserve">
          <source>Not a function</source>
          <target state="translated">기능이 아님</target>
        </trans-unit>
        <trans-unit id="3cde9b1853c037e517613f587ee3bd3ce085f2f8" translate="yes" xml:space="preserve">
          <source>Not an instanceof</source>
          <target state="translated">인스턴스가 아님</target>
        </trans-unit>
        <trans-unit id="1290581ef5b7b0f1183c494b6d4b0e171acf60ca" translate="yes" xml:space="preserve">
          <source>Not constructable with &lt;code&gt;new&lt;/code&gt; (ES2016)</source>
          <target state="translated">하지 constructable &lt;code&gt;new&lt;/code&gt; (ES2016)</target>
        </trans-unit>
        <trans-unit id="815f1f0049cf798fb57acca1d98e1ff9f708e142" translate="yes" xml:space="preserve">
          <source>Not defined</source>
          <target state="translated">미정</target>
        </trans-unit>
        <trans-unit id="fd4dd0b6bb7f1cc7b045b70a26b58a50488d5a30" translate="yes" xml:space="preserve">
          <source>Not enough brackets</source>
          <target state="translated">괄호가 충분하지 않습니다</target>
        </trans-unit>
        <trans-unit id="e13c21189af563620a26d251453f525698f9fcdd" translate="yes" xml:space="preserve">
          <source>Not optimized for frequent additions and removals of key-value pairs.</source>
          <target state="translated">키-값 쌍의 빈번한 추가 및 제거에 최적화되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="7e7edabbe7fee71cefbeceec9a9266fb61cd2bbe" translate="yes" xml:space="preserve">
          <source>Not part of a current ECMA-262 specification. Implemented in JavaScript 1.6 and deprecated.</source>
          <target state="translated">현재 ECMA-262 사양의 일부가 아닙니다. JavaScript 1.6에서 구현되어 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ec60a5240ccc0e46f9df830b76490450a0a060d0" translate="yes" xml:space="preserve">
          <source>Not part of any specifications.</source>
          <target state="translated">사양의 일부가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="67eb3c8bee76aa560a2df9bc1902473ce47e9b0c" translate="yes" xml:space="preserve">
          <source>Not part of any specifications. Implemented in JavaScript 1.2.</source>
          <target state="translated">사양의 일부가 아닙니다. JavaScript 1.2에서 구현되었습니다.</target>
        </trans-unit>
        <trans-unit id="ae69d93e82d302fc99008a6b56e794d7c106997d" translate="yes" xml:space="preserve">
          <source>Not part of any standard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9727767999f6f49b96e43b9df9cdab3894078e4b" translate="yes" xml:space="preserve">
          <source>Not part of any standard. Deprecated in favor of &lt;a href=&quot;../../functions/arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; in ECMAScript 3.</source>
          <target state="translated">표준의 일부가 아닙니다. ECMAScript 3 의 &lt;a href=&quot;../../functions/arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt; 대신 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="0751ffe6a171fa0caec8d2cb58f80c7e4e56c4c5" translate="yes" xml:space="preserve">
          <source>Not part of any standard. Implemented in JavaScript 1.1 and removed in &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=7224&quot;&gt;bug 7224&lt;/a&gt; due to potentially vulnerable for security.</source>
          <target state="translated">표준의 일부가 아닙니다. JavaScript 1.1에서 구현되었으며 보안에 취약 할 수 있으므로 &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=7224&quot;&gt;버그 7224&lt;/a&gt; 에서 제거되었습니다 .</target>
        </trans-unit>
        <trans-unit id="8b41cea1251aee48872864ecdcbb33b5e062c34f" translate="yes" xml:space="preserve">
          <source>Not part of the ECMAScript specification yet.</source>
          <target state="translated">아직 ECMAScript 사양의 일부가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="f76f2339b380c09635f034929c4240ec42e159c1" translate="yes" xml:space="preserve">
          <source>Not part of the current ECMA-262 standard: Multiple catch clauses and conditional clauses (SpiderMonkey extension, JavaScript 1.5).</source>
          <target state="translated">현재 ECMA-262 표준의 일부가 아님 : 여러 catch 절 및 조건 절 (SpiderMonkey 확장, JavaScript 1.5).</target>
        </trans-unit>
        <trans-unit id="138ecf7d5bb8c24b6f6caef459f68a61b8e2abba" translate="yes" xml:space="preserve">
          <source>Not suitable for &lt;code&gt;&lt;a href=&quot;../global_objects/function/call&quot;&gt;call&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../global_objects/function/apply&quot;&gt;apply&lt;/a&gt;&lt;/code&gt; and &lt;a href=&quot;../global_objects/function/bind&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; methods, which generally rely on establishing a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Scope&quot;&gt;&lt;code&gt;scope&lt;/code&gt;.&lt;/a&gt;</source>
          <target state="translated">일반적으로 &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Scope&quot;&gt; &lt;code&gt;scope&lt;/code&gt; &lt;/a&gt; 설정에 의존하는 &lt;code&gt;&lt;a href=&quot;../global_objects/function/call&quot;&gt;call&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../global_objects/function/apply&quot;&gt;apply&lt;/a&gt;&lt;/code&gt; 및 &lt;a href=&quot;../global_objects/function/bind&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 메소드에는 적합하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="cefb01124c75c1f4210a425aeab4be2e09cee2b3" translate="yes" xml:space="preserve">
          <source>Not to be confused with Unix epoch time. To get total milliseconds since 1970/01/01, use the method &quot;.getTime()&quot;.</source>
          <target state="translated">Unix epoch 시간과 혼동하지 마십시오. 1970/01/01 이후의 총 밀리 초를 얻으려면 &quot;.getTime ()&quot;메소드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e1a3c34afaca2db48ad204740e08882a029318c0" translate="yes" xml:space="preserve">
          <source>Not used in this specification. Present for backward compatibility.</source>
          <target state="translated">이 사양에서는 사용되지 않습니다. 이전 버전과의 호환성을 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="798e4fecd1999107e0319bcedac748873330c2d0" translate="yes" xml:space="preserve">
          <source>Note how the promise chain is not built-up in one go. Instead, the promise chain is constructed in stages as control is successively yielded from and returned to the async function. As a result, we must be mindful of error handling behavior when dealing with concurrent asynchronous operations.</source>
          <target state="translated">프라 미스 체인이 한 번에 구축되지 않는 방법에 유의하십시오. 대신, 제어가 비동기 함수에서 연속적으로 양보되고 반환됨에 따라 프로 미스 체인이 단계적으로 구성됩니다. 따라서 동시 비동기 작업을 처리 할 때 오류 처리 동작을 염두에 두어야합니다.</target>
        </trans-unit>
        <trans-unit id="123f29f42750e7479b6ec012a3080d44aeab4c94" translate="yes" xml:space="preserve">
          <source>Note how you've got to include a second function invocation operator at the end of the accessor to actually invoke the referenced function and log the value stored inside it (e.g. &lt;code&gt;get(0)()&lt;/code&gt; rather than &lt;code&gt;get(0)&lt;/code&gt;) .</source>
          <target state="translated">접근 자의 끝에 두 번째 함수 호출 연산자를 포함시켜 참조 된 함수를 실제로 호출하고 그 안에 저장된 값을 기록하는 방법에 주목하십시오 (예 : &lt;code&gt;get(0)()&lt;/code&gt; 대신 &lt;code&gt;get(0)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="cec81496111d3c9b16de005cfdcd4162f96e81e7" translate="yes" xml:space="preserve">
          <source>Note how you've got to include a second function invocation operator at the end of the accessor to actually retrieve the value stored inside the reference (e.g. &lt;code&gt;get(0)()&lt;/code&gt; rather than &lt;code&gt;get(0)&lt;/code&gt;) &amp;mdash; it is a function rather than a simple value.</source>
          <target state="translated">접근 자 끝에 두 번째 함수 호출 연산자를 포함시켜 실제로 참조 내에 저장된 값을 실제로 검색하는 방법에 주목하십시오 (예 : &lt;code&gt;get(0)()&lt;/code&gt; 대신 &lt;code&gt;get(0)&lt;/code&gt; ) &amp;mdash; 이것이 아니라 함수입니다 단순한 가치.</target>
        </trans-unit>
        <trans-unit id="7821d32b61e2829f2bb6f9992ba1b10e2f290582" translate="yes" xml:space="preserve">
          <source>Note on &lt;code&gt;eval&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;eval&lt;/code&gt; 에 대한 참고 사항</target>
        </trans-unit>
        <trans-unit id="91f2222a22cf66e18967a6a7643eef0c67ae4c10" translate="yes" xml:space="preserve">
          <source>Note on grouping and short-circuiting</source>
          <target state="translated">그룹화 및 단락에 대한 참고 사항</target>
        </trans-unit>
        <trans-unit id="4f2354437178298c0bfbb8f9801162f7d09646b4" translate="yes" xml:space="preserve">
          <source>Note that '0' doesn't evaluate to &lt;code&gt;true&lt;/code&gt; and '-1' doesn't evaluate to &lt;code&gt;false&lt;/code&gt;. Therefore, when checking if a specific string exists within another string the correct way to check would be:</source>
          <target state="translated">'0'은 &lt;code&gt;true&lt;/code&gt; 로 평가되지 않고 '-1'은 &lt;code&gt;false&lt;/code&gt; 로 평가되지 않습니다 . 따라서 특정 문자열이 다른 문자열 내에 존재하는지 확인할 때 올바른 확인 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="05c62717d2905ca58c36719673c46c2cffc2308e" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../global_objects/object/assign&quot;&gt;&lt;code&gt;Object.assign()&lt;/code&gt;&lt;/a&gt; triggers &lt;a href=&quot;../functions/set&quot;&gt;&lt;code&gt;setters&lt;/code&gt;&lt;/a&gt;, whereas spread syntax doesn't.</source>
          <target state="translated">참고 &lt;a href=&quot;../global_objects/object/assign&quot;&gt; &lt;code&gt;Object.assign()&lt;/code&gt; &lt;/a&gt; 트리거의 &lt;a href=&quot;../functions/set&quot;&gt; &lt;code&gt;setters&lt;/code&gt; &lt;/a&gt; , 확산 구문은하지 않는 반면.</target>
        </trans-unit>
        <trans-unit id="1fc16af7f3c4f29b3893170e08c41b87a2f2ae51" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../global_objects/object/assign&quot;&gt;&lt;code&gt;Object.assign()&lt;/code&gt;&lt;/a&gt; triggers &lt;a href=&quot;../functions/set&quot;&gt;setters&lt;/a&gt; whereas spread syntax doesn't.</source>
          <target state="translated">참고 것을 &lt;a href=&quot;../global_objects/object/assign&quot;&gt; &lt;code&gt;Object.assign()&lt;/code&gt; &lt;/a&gt; 트리거의 &lt;a href=&quot;../functions/set&quot;&gt;세터&lt;/a&gt; 확산 구문 반면하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c503f3ee902f80a6d403b329a9d641000167a462" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../global_objects/object/assign&quot;&gt;&lt;code&gt;Object.assign()&lt;/code&gt;&lt;/a&gt; triggers &lt;a href=&quot;../functions/set&quot;&gt;setters&lt;/a&gt; whereas the spread operator doesn't.</source>
          <target state="translated">참고 것을 &lt;a href=&quot;../global_objects/object/assign&quot;&gt; &lt;code&gt;Object.assign()&lt;/code&gt; &lt;/a&gt; 트리거의 &lt;a href=&quot;../functions/set&quot;&gt;세터&lt;/a&gt; 확산 운영자 반면하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6a4b5ca2ea9d446cc06836ef404a3a1534eda9d8" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../global_objects/object/assign&quot;&gt;&lt;code&gt;Object.assign()&lt;/code&gt;&lt;/a&gt; triggers &lt;a href=&quot;../functions/set&quot;&gt;setters&lt;/a&gt;, whereas the spread operator doesn't!</source>
          <target state="translated">참고 &lt;a href=&quot;../global_objects/object/assign&quot;&gt; &lt;code&gt;Object.assign()&lt;/code&gt; &lt;/a&gt; 트리거 &lt;a href=&quot;../functions/set&quot;&gt;세터를&lt;/a&gt; 확산 운영자하지 않는 반면,!</target>
        </trans-unit>
        <trans-unit id="1b70c98d89c4a1fcc093b0a11f289e920b83fbda" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../operators/function&quot;&gt;&lt;code&gt;function expressions&lt;/code&gt;&lt;/a&gt; are not hoisted:</source>
          <target state="translated">참고 &lt;a href=&quot;../operators/function&quot;&gt; &lt;code&gt;function expressions&lt;/code&gt; &lt;/a&gt; 게양되지 않습니다 :</target>
        </trans-unit>
        <trans-unit id="b88db6585eaabb2baa0140a46d7528f3c6545a6f" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../operators/function&quot;&gt;function expressions&lt;/a&gt; are not hoisted:</source>
          <target state="translated">참고 &lt;a href=&quot;../operators/function&quot;&gt;함수 표현식가&lt;/a&gt; 게양되지 않습니다 :</target>
        </trans-unit>
        <trans-unit id="440057b7d3a2ffc307e2446c1b3cd38a75a30d82" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;0&lt;/code&gt; doesn't evaluate to &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;-1&lt;/code&gt; doesn't evaluate to &lt;code&gt;false&lt;/code&gt;. Therefore, when checking if a specific string exists within another string, the correct way to check would be:</source>
          <target state="translated">참고 &lt;code&gt;0&lt;/code&gt; 으로 평가하지 않습니다 &lt;code&gt;true&lt;/code&gt; 과는 &lt;code&gt;-1&lt;/code&gt; 로 평가하지 않는 &lt;code&gt;false&lt;/code&gt; . 따라서 특정 문자열이 다른 문자열 내에 있는지 확인할 때 올바른 확인 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="71c833a03feec21442aaed0cd1c213bed5ed6688" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;AsyncFunction&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; a global object. It can be obtained with the following code:</source>
          <target state="translated">참고 &lt;code&gt;AsyncFunction&lt;/code&gt; 가 있다 &lt;em&gt;하지&lt;/em&gt; 전역 객체입니다. 다음 코드로 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d8672f6336abf908b6aeb3e67aaa07fb51f16c9" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;AsyncFunction&lt;/code&gt; is not a global object. It could be obtained by evaluating the following code.</source>
          <target state="translated">참고 &lt;code&gt;AsyncFunction&lt;/code&gt; 가 글로벌 개체가 아닙니다. 다음 코드를 평가하여 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7616c0d37ddf092b2eb710f1c15781d6e517e96f" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;GeneratorFunction&lt;/code&gt; is not a global object. It could be obtained by evaluating the following code.</source>
          <target state="translated">참고 &lt;code&gt;GeneratorFunction&lt;/code&gt; 가 글로벌 개체가 아닙니다. 다음 코드를 평가하여 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="703d6dd9a1dbdd799c913401132dd49ea394dd4e" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Object.assign()&lt;/code&gt; does not throw on &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; source values.</source>
          <target state="translated">참고 &lt;code&gt;Object.assign()&lt;/code&gt; 에 던져하지 않습니다 &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; 소스 값.</target>
        </trans-unit>
        <trans-unit id="8248ec8d3d8f4add68617faa6dc73848c5e46fc8" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;SharedArrayBuffer&lt;/code&gt; was disabled by default in all major browsers on 5 January, 2018 in response to &lt;a href=&quot;https://meltdownattack.com/&quot;&gt;Spectre&lt;/a&gt;. Chrome &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=821270&quot;&gt;re-enabled it in v67&lt;/a&gt; on platforms where its site-isolation feature is enabled to protect against Spectre-style vulnerabilities.</source>
          <target state="translated">참고 &lt;code&gt;SharedArrayBuffer&lt;/code&gt; 가 에 대한 응답으로 2018년 1월 5일에 모든 주요 브라우저에서 기본적으로 비활성화되었습니다 &lt;a href=&quot;https://meltdownattack.com/&quot;&gt;유령&lt;/a&gt; . Chrome 은 사이트 격리 기능이 스펙터 스타일 취약점으로부터 보호 할 수있는 플랫폼의 &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=821270&quot;&gt;v67&lt;/a&gt; 에서 다시 활성화했습니다 .</target>
        </trans-unit>
        <trans-unit id="34137566e555cddb0451d1ebd70b3d07566b3b8f" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;a == b&lt;/code&gt; compares the strings in &lt;code&gt;&lt;var&gt;a&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;b&lt;/var&gt;&lt;/code&gt; for being equal in the usual case-sensitive way. If you wish to compare without regard to upper or lower case characters, use a function similar to this:</source>
          <target state="translated">참고 것을 &lt;code&gt;a == b&lt;/code&gt; 상기 문자열을 비교 및 &lt;code&gt;&lt;var&gt;b&lt;/var&gt;&lt;/code&gt; 일반적인 경우에 민감한 방식으로 동일한 것에 대한. 대문자 나 소문자에 관계없이 비교하려면 다음과 유사한 함수를 사용하십시오. &lt;code&gt;&lt;var&gt;a&lt;/var&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a52db76f66ad2b8ed108c4e3fd51f3f26f49622" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;charCodeAt()&lt;/code&gt; will always return a value that is less than 65536. This is because the higher code points are represented by a pair of (lower valued) &quot;surrogate&quot; pseudo-characters which are used to comprise the real character. Because of this, in order to examine or reproduce the full character for individual characters of value 65536 and above, for such characters, it is necessary to retrieve not only &lt;code&gt;charCodeAt(i)&lt;/code&gt;, but also &lt;code&gt;charCodeAt(i+1)&lt;/code&gt; (as if examining/reproducing a string with two letters), or to use codePointAt(i) instead. See example 2 and 3 below.</source>
          <target state="translated">참고 &lt;code&gt;charCodeAt()&lt;/code&gt; 항상 더 높은 코드 포인트는 한 쌍의 실제 문자를 포함하는 데 사용됩니다 &quot;대리&quot;의사 자 (가치를 낮출)로 표시되기 때문이다 미만 65536 인 값을 반환합니다. 이 때문에 값이 65536 이상인 개별 문자의 전체 문자를 검사하거나 재생하려면 이러한 문자에 대해 &lt;code&gt;charCodeAt(i)&lt;/code&gt; 뿐만 아니라 &lt;code&gt;charCodeAt(i+1)&lt;/code&gt; 도 검색해야합니다 (검사하는 것처럼 ) / 문자가 두 개인 문자열을 재생성)하거나 codePointAt (i)를 대신 사용합니다. 아래 예 2와 3을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b985d870c9381c700fdbf978594067a12ee80692" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;current&lt;/code&gt; is not defined and any attempts to access it will result in &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">참고 &lt;code&gt;current&lt;/code&gt; 정의되지 않은 액세스에 대한 시도가 발생합니다 &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="49c3dcd2bd0600d948bf89a0714f591f8231af4c" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;current&lt;/code&gt; is not defined, and any attempts to access it will result in &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">참고 &lt;code&gt;current&lt;/code&gt; 정의되지 않으며,이 발생합니다 액세스하려는 시도 &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86e08bc52996718f4a1e153291b4081b8f7bc7f8" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;encodeURI()&lt;/code&gt; by itself &lt;em&gt;cannot&lt;/em&gt; form proper HTTP &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt; requests, such as for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt;, because &quot;&lt;code&gt;&amp;amp;&lt;/code&gt;&quot;, &quot;&lt;code&gt;+&lt;/code&gt;&quot;, and &quot;&lt;code&gt;=&lt;/code&gt;&quot; are not encoded, which are treated as special characters in &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;POST&lt;/code&gt; requests. &lt;code&gt;encodeURIComponent()&lt;/code&gt;, however, does encode these characters.</source>
          <target state="translated">주의 &lt;code&gt;encodeURI()&lt;/code&gt; 자체가 &lt;em&gt;없는&lt;/em&gt; 적절한 HTTP 형성 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET&quot;&gt; &lt;code&gt;GET&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST&quot;&gt; &lt;code&gt;POST&lt;/code&gt; &lt;/a&gt; 같은 경우와 요청, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; 의&lt;/a&gt; 때문에 &quot; &lt;code&gt;&amp;amp;&lt;/code&gt; &quot;, &quot; &lt;code&gt;+&lt;/code&gt; &quot;및 &quot; &lt;code&gt;=&lt;/code&gt; &quot;특수 문자로 취급되는, 인코딩되지 않은 &lt;code&gt;GET&lt;/code&gt; 및 &lt;code&gt;POST&lt;/code&gt; 요청. 그러나 &lt;code&gt;encodeURIComponent()&lt;/code&gt; 는 이러한 문자를 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="97875263007a8b2dfaac16dc4378638ebbbd5f21" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;encodeURI&lt;/code&gt; by itself &lt;em&gt;cannot&lt;/em&gt; form proper HTTP GET and POST requests, such as for XMLHTTPRequests, because &quot;&amp;amp;&quot;, &quot;+&quot;, and &quot;=&quot; are not encoded, which are treated as special characters in GET and POST requests. &lt;a href=&quot;encodeuricomponent&quot;&gt;&lt;code&gt;encodeURIComponent&lt;/code&gt;&lt;/a&gt;, however, does encode these characters.</source>
          <target state="translated">주의 &lt;code&gt;encodeURI&lt;/code&gt; 그 자체로는 &lt;em&gt;할 수없는&lt;/em&gt; , 같은 XMLHttpRequests를위한 같은 적절한 HTTP GET 및 POST 요청을 형성하기 때문에 &quot;&amp;amp;&quot;, &quot;+&quot;및 &quot;=&quot;GET 및 POST 요청에 특수 문자로 취급되는, 인코딩되지 않습니다. 그러나 &lt;a href=&quot;encodeuricomponent&quot;&gt; &lt;code&gt;encodeURIComponent&lt;/code&gt; &lt;/a&gt; 는 이러한 문자를 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="199ad16d3ea7734573ad0b58572230c80f2ba315" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;foo !== bar&lt;/code&gt;. While they are similar objects, &lt;em&gt;they are not &lt;strong&gt;the same object&lt;/strong&gt;&lt;/em&gt;. And so they are both added to the set.</source>
          <target state="translated">참고 &lt;code&gt;foo !== bar&lt;/code&gt; . 그것들은 비슷한 객체이지만 &lt;em&gt;&lt;strong&gt;같은 객체&lt;/strong&gt;&lt;/em&gt;&lt;em&gt; 는 아닙니다&lt;strong&gt;&lt;/strong&gt;&lt;/em&gt; . 그래서 둘 다 세트에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="e332343050d1b8bf3c9fdcfc19bf67233d83f5b0" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;super()&lt;/code&gt;, used in the &lt;code&gt;constructor&lt;/code&gt;, can only be used in constructors, and &lt;em&gt;must&lt;/em&gt; be called &lt;em&gt;before&lt;/em&gt; the &lt;code&gt;this&lt;/code&gt; keyword can be used.</source>
          <target state="translated">그 주 &lt;code&gt;super()&lt;/code&gt; 에 사용, &lt;code&gt;constructor&lt;/code&gt; , 생성자에서만 사용할 수 있고, &lt;em&gt;해야한다&lt;/em&gt; 라고 &lt;em&gt;하기 전에 &lt;/em&gt; &lt;code&gt;this&lt;/code&gt; 키워드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aac73adc8944242ac788dd2a391f317e1c98aef8" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;this&lt;/code&gt; may not be the actual value seen by the method: if the method is a function in &lt;a href=&quot;../../strict_mode&quot;&gt;non-strict mode&lt;/a&gt; code, &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; will be replaced with the global object, and primitive values will be boxed. This argument is required.</source>
          <target state="translated">참고 &lt;code&gt;this&lt;/code&gt; 방법은의 함수 인 경우 상기 방법에 의해 나타나는 실제 값하지 않을 &lt;a href=&quot;../../strict_mode&quot;&gt;비 엄격 모드&lt;/a&gt; 코드 &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; 전역 객체로 대체 될 것이며, 프리미티브 값 박스형한다. 이 인수는 필수입니다.</target>
        </trans-unit>
        <trans-unit id="e30ea4aaaa255e9f899ce8ad6a7352f078bc72cf" translate="yes" xml:space="preserve">
          <source>Note that JSON is &lt;a href=&quot;http://timelessrepo.com/json-isnt-a-javascript-subset&quot;&gt;not a completely strict subset of JavaScript&lt;/a&gt;, with two line terminators (Line separator and Paragraph separator) which do not require escaping in JSON, but do require escaping in JavaScript.</source>
          <target state="translated">JSON은 JSON에서 이스케이프 할 필요가 없지만 JavaScript에서 이스케이프해야하는 두 개의 줄 종결 자 (줄 구분 기호 및 단락 구분 기호)가 &lt;a href=&quot;http://timelessrepo.com/json-isnt-a-javascript-subset&quot;&gt;있는 완전히 엄격한 JavaScript 하위 집합&lt;/a&gt; 이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="90c3c7efcf67749c1fad716b1e7c0b167da9b811" translate="yes" xml:space="preserve">
          <source>Note that JavaScript distinguishes between &lt;code&gt;String&lt;/code&gt; objects and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;primitive string&lt;/a&gt; values. (The same is true of &lt;a href=&quot;boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;number&quot;&gt;&lt;code&gt;Numbers&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">JavaScript는 &lt;code&gt;String&lt;/code&gt; 개체와 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;기본 문자열&lt;/a&gt; 값을 구분 합니다. ( &lt;a href=&quot;boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;number&quot;&gt; &lt;code&gt;Numbers&lt;/code&gt; 도&lt;/a&gt; 마찬가지입니다 .)</target>
        </trans-unit>
        <trans-unit id="a13fe16a54826d75af85c1c096f948fc8b696190" translate="yes" xml:space="preserve">
          <source>Note that JavaScript distinguishes between &lt;code&gt;String&lt;/code&gt; objects and primitive string values. (The same is true of &lt;a href=&quot;boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;number&quot;&gt;&lt;code&gt;Numbers&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">JavaScript는 &lt;code&gt;String&lt;/code&gt; 객체와 기본 문자열 값을 구분 합니다. &lt;a href=&quot;boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;number&quot;&gt; &lt;code&gt;Numbers&lt;/code&gt; 도&lt;/a&gt; 마찬가지입니다 .</target>
        </trans-unit>
        <trans-unit id="eb48903ad147295aa7c801ec2e07a5a15a2436ea" translate="yes" xml:space="preserve">
          <source>Note that JavaScript has &lt;em&gt;no&lt;/em&gt;&lt;code&gt;goto&lt;/code&gt; statement, you can only use labels with &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt;.</source>
          <target state="translated">JavaScript에는 &lt;code&gt;goto&lt;/code&gt; 문 이 &lt;em&gt;없으므로 &lt;/em&gt; &lt;code&gt;break&lt;/code&gt; 또는 &lt;code&gt;continue&lt;/code&gt; 레이블 만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5c118cf7d8001c1d337ddff2a3172e652fd77ab5" translate="yes" xml:space="preserve">
          <source>Note that a &lt;a href=&quot;urierror&quot;&gt;&lt;code&gt;URIError&lt;/code&gt;&lt;/a&gt; will be thrown if one attempts to encode a surrogate which is not part of a high-low pair, e.g.,</source>
          <target state="translated">&amp;bull; 그래도 참고 &lt;a href=&quot;urierror&quot;&gt; &lt;code&gt;URIError&lt;/code&gt; 의는&lt;/a&gt; 하나 개의 시도가 높은 낮은 쌍 일부가 아닌 대리를 인코딩하는 경우 예를 들어, 발생합니다,</target>
        </trans-unit>
        <trans-unit id="717a2256e06329faee97dd6ef93c798877eceeb0" translate="yes" xml:space="preserve">
          <source>Note that although &lt;code&gt;obj&lt;/code&gt; is not an array, the method &lt;code&gt;push&lt;/code&gt; successfully incremented &lt;code&gt;obj&lt;/code&gt;'s &lt;code&gt;length&lt;/code&gt; property just like if we were dealing with an actual array.</source>
          <target state="translated">참고 있지만 것을 &lt;code&gt;obj&lt;/code&gt; 가 배열이 아닌, 메소드 &lt;code&gt;push&lt;/code&gt; 성공적으로 증가 &lt;code&gt;obj&lt;/code&gt; 의 &lt;code&gt;length&lt;/code&gt; 단지 우리가 실제 배열을 처리 한 경우와 같은 속성을.</target>
        </trans-unit>
        <trans-unit id="12781aabcdb157ccee4b475e9f2e3a084ff89617" translate="yes" xml:space="preserve">
          <source>Note that an &lt;a href=&quot;urierror&quot;&gt;&lt;code&gt;URIError&lt;/code&gt;&lt;/a&gt; will be thrown if one attempts to encode a surrogate which is not part of a high-low pair, e.g.,</source>
          <target state="translated">있습니다 &lt;a href=&quot;urierror&quot;&gt; &lt;code&gt;URIError&lt;/code&gt; 의는&lt;/a&gt; 하나 개의 시도가 높은 낮은 쌍 일부가 아닌 대리를 인코딩하는 경우 예를 들어, 발생합니다,</target>
        </trans-unit>
        <trans-unit id="f5229ea194f37e9b69f3ed460ca84c75624d7fc9" translate="yes" xml:space="preserve">
          <source>Note that an object is converted into a primitive if, and only if, its comparand is a primitive. If both operands are objects, they're compared as objects, and the equality test is true only if both refer the same object.</source>
          <target state="translated">객체의 비교가 기본 인 경우에만 객체가 기본으로 변환됩니다. 두 피연산자가 모두 객체 인 경우 객체로 비교되며 동일한 테스트를 수행하는 경우에만 동등성 테스트가 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="6c04dbd2e7e6b4c6469af154ed10997d74e6810b" translate="yes" xml:space="preserve">
          <source>Note that as numbers in JavaScript are IEEE 754 floating point numbers with round-to-nearest-even behavior, the ranges claimed for the functions below (excluding the one for &lt;code&gt;Math.random()&lt;/code&gt; itself) aren't exact. If extremely large bounds are chosen (2&lt;sup&gt;53&lt;/sup&gt; or higher), it's possible in &lt;em&gt;extremely&lt;/em&gt; rare cases to calculate the usually-excluded upper bound.</source>
          <target state="translated">JavaScript의 숫자는 가장 가까운 반올림 동작을 갖는 IEEE 754 부동 소수점 숫자이므로 아래 함수 ( &lt;code&gt;Math.random()&lt;/code&gt; 자체 제외)에 대해 주장 된 범위는 정확하지 않습니다. 매우 큰 범위 (2 &lt;sup&gt;53&lt;/sup&gt; 이상)를 선택하면 &lt;em&gt;매우&lt;/em&gt; 드물게 일반적으로 제외되는 상한을 계산할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="96f1469c96baa69bfacf344ea851b7a69278b710" translate="yes" xml:space="preserve">
          <source>Note that attempting to assign a value to &lt;code&gt;latest&lt;/code&gt; will not change it.</source>
          <target state="translated">&lt;code&gt;latest&lt;/code&gt; 값을 할당하려고 해도 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ef7ec2027dc9a730bc7cb60ab5e986dd0b83d018" translate="yes" xml:space="preserve">
          <source>Note that classes cannot extend regular (non-constructible) objects. If you want to inherit from a regular object, you can instead use &lt;a href=&quot;global_objects/object/setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">클래스는 일반 (구성 할 수없는) 객체를 확장 할 수 없습니다. 일반 객체에서 상속하려면 &lt;a href=&quot;global_objects/object/setprototypeof&quot;&gt; &lt;code&gt;Object.setPrototypeOf()&lt;/code&gt; &lt;/a&gt; 대신 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="61e326e969b89f7812e4d51570d12a2d17235ba8" translate="yes" xml:space="preserve">
          <source>Note that comparisons with &lt;code&gt;Object&lt;/code&gt;-wrapped &lt;code&gt;BigInt&lt;/code&gt;s act as with other objects, only indicating equality when the same object instance is compared:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc0096a6458a183b831ed11cda6111da13e9cc10" translate="yes" xml:space="preserve">
          <source>Note that decimal literals can start with a zero (&lt;code&gt;0&lt;/code&gt;) followed by another decimal digit, but If all digits after the leading &lt;code&gt;0&lt;/code&gt; are smaller than 8, the number is interpreted as an octal number. This won't throw in JavaScript, see &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=957513&quot;&gt;bug 957513&lt;/a&gt;. See also the page about &lt;a href=&quot;global_objects/parseint&quot;&gt;&lt;code&gt;parseInt()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">10 진수 리터럴은 0 ( &lt;code&gt;0&lt;/code&gt; )과 다른 10 진수로 시작할 수 있지만 선행 &lt;code&gt;0&lt;/code&gt; 뒤의 모든 숫자 가 8보다 작은 경우 숫자는 8 진수로 해석됩니다. 이것은 JavaScript에서 발생하지 않습니다 . &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=957513&quot;&gt;bug 957513을&lt;/a&gt; 참조하십시오 . &lt;a href=&quot;global_objects/parseint&quot;&gt; &lt;code&gt;parseInt()&lt;/code&gt; &lt;/a&gt; 에 대한 페이지도 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="85435900a96627fdadbecca322dbd9df4f462217" translate="yes" xml:space="preserve">
          <source>Note that decimal literals can start with a zero (&lt;code&gt;0&lt;/code&gt;) followed by another decimal digit, but If all digits after the leading &lt;code&gt;0&lt;/code&gt; are smaller than 8, the number is interpreted as an octal number. This won't throw in JavaScript, see &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=957513&quot;&gt;bug 957513&lt;/a&gt;. See also the page about &lt;a href=&quot;global_objects/parseint#Octal_interpretations_with_no_radix&quot;&gt;&lt;code&gt;parseInt()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">10 진수 리터럴은 0 ( &lt;code&gt;0&lt;/code&gt; )으로 시작하고 그 뒤에 다른 10 진수가 올 수 있지만 선행 &lt;code&gt;0&lt;/code&gt; 뒤의 모든 숫자 가 8보다 작 으면 숫자는 8 진수로 해석됩니다. 이것은 JavaScript에서 발생하지 않습니다 . &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=957513&quot;&gt;버그 957513을&lt;/a&gt; 참조하십시오 . &lt;a href=&quot;global_objects/parseint#Octal_interpretations_with_no_radix&quot;&gt; &lt;code&gt;parseInt()&lt;/code&gt; &lt;/a&gt; 에 대한 페이지도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9f35339e11014ced44afa24edd50182aea869370" translate="yes" xml:space="preserve">
          <source>Note that due to using 32-bit representation for numbers both &lt;code&gt;~-1&lt;/code&gt; and &lt;code&gt;~4294967295&lt;/code&gt; (2&lt;sup&gt;32&lt;/sup&gt;-1) results in &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;~-1&lt;/code&gt; 및 &lt;code&gt;~4294967295&lt;/code&gt; (2 &lt;sup&gt;32&lt;/sup&gt; -1)의 숫자에 대해 32 비트 표현을 사용 하면 &lt;code&gt;0&lt;/code&gt; 이 됩니다.</target>
        </trans-unit>
        <trans-unit id="568aee6056dc72c380bd4726d1404da50d8c5439" translate="yes" xml:space="preserve">
          <source>Note that due to web compatibility, &lt;code&gt;RegExp.$N&lt;/code&gt; will still return an empty string instead of &lt;code&gt;undefined&lt;/code&gt; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1053944&quot;&gt;bug 1053944&lt;/a&gt;).</source>
          <target state="translated">웹 호환성으로 인해 &lt;code&gt;RegExp.$N&lt;/code&gt; 은 &lt;code&gt;undefined&lt;/code&gt; 빈 문자열을 계속 반환합니다 ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1053944&quot;&gt;버그 1053944&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c509c9b9a38352dd5249555889e83bafbdf6d977" translate="yes" xml:space="preserve">
          <source>Note that due to web compatibility, &lt;code&gt;RegExp.&lt;var&gt;$N&lt;/var&gt;&lt;/code&gt; will still return an empty string instead of &lt;code&gt;undefined&lt;/code&gt; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1053944&quot;&gt;bug 1053944&lt;/a&gt;).</source>
          <target state="translated">웹 호환성으로 인해 &lt;code&gt;RegExp.&lt;var&gt;$N&lt;/var&gt;&lt;/code&gt; 은 &lt;code&gt;undefined&lt;/code&gt; 대신 빈 문자열을 반환합니다 ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1053944&quot;&gt;bug 1053944&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b9b82040c06715267dc842bb40776915884ffbd2" translate="yes" xml:space="preserve">
          <source>Note that functions &lt;code&gt;concurrentStart&lt;/code&gt; and &lt;code&gt;concurrentPromise&lt;/code&gt; are not functionally equivalent.</source>
          <target state="translated">기능이 있습니다 &lt;code&gt;concurrentStart&lt;/code&gt; 및 &lt;code&gt;concurrentPromise&lt;/code&gt; 는 기능적으로 동일하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7cdd0462ef84b181b460e37aeb92c8933e6f33f5" translate="yes" xml:space="preserve">
          <source>Note that getters are not &amp;ldquo;lazy&amp;rdquo; or &amp;ldquo;memozied&amp;rdquo; by nature; you must implement this technique if you desire this behavior.</source>
          <target state="translated">게터는 본질적으로 &quot;게 으르거나&quot; &quot;기억&quot;되지 않습니다. 이 동작을 원하면이 기술을 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="e1e6d60f1a1e4fdec1c9ed2c97ceec4319a62e8f" translate="yes" xml:space="preserve">
          <source>Note that in both NodeJS &lt;a href=&quot;http://www.commonjs.org/&quot;&gt;CommonJS&lt;/a&gt; modules and native &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules&quot;&gt;ECMAScript modules&lt;/a&gt;, top-level variable declarations are scoped to the module, and are not, therefore added as properties to the global object.</source>
          <target state="translated">NodeJS &lt;a href=&quot;http://www.commonjs.org/&quot;&gt;CommonJS&lt;/a&gt; 모듈과 네이티브 &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules&quot;&gt;ECMAScript 모듈 모두&lt;/a&gt; 에서 최상위 수준 변수 선언은 모듈로 범위가 지정되므로 전역 개체에 속성으로 추가되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2f57c75e041b4a2423c1802032b1be98cb73c4c8" translate="yes" xml:space="preserve">
          <source>Note that in case of recursion, you can't reconstruct the call stack using this property. Consider:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c265acc06135cb9b4f9bf1a1d3c8a588f9da028f" translate="yes" xml:space="preserve">
          <source>Note that in non&amp;ndash;strict mode, with &lt;code&gt;call&lt;/code&gt; and &lt;code&gt;apply&lt;/code&gt;, if the value passed as &lt;code&gt;this&lt;/code&gt; is not an object, an attempt will be made to convert it to an object. Values &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; become the global object. Primitives like &lt;code&gt;7&lt;/code&gt; or &lt;code&gt;'foo'&lt;/code&gt; will be converted to an Object using the related constructor, so the primitive number &lt;code&gt;7&lt;/code&gt; is converted to an object as if by &lt;code&gt;new Number(7)&lt;/code&gt; and the string &lt;code&gt;'foo'&lt;/code&gt; to an object as if by &lt;code&gt;new String('foo')&lt;/code&gt;, e.g.</source>
          <target state="translated">엄격하지 않은 모드에서 &lt;code&gt;call&lt;/code&gt; 및 &lt;code&gt;apply&lt;/code&gt; 를 사용하면 전달 된 값 &lt;code&gt;this&lt;/code&gt; 객체가 아닌 경우 객체로 변환하려고 시도합니다. &lt;code&gt;null&lt;/code&gt; 및 &lt;code&gt;undefined&lt;/code&gt; 값 은 전역 개체가됩니다. &lt;code&gt;7&lt;/code&gt; 또는 &lt;code&gt;'foo'&lt;/code&gt; 와 같은 프리미티브 는 관련 생성자를 사용하여 Object로 변환되므로, 프리미티브 숫자 &lt;code&gt;7&lt;/code&gt; 은 &lt;code&gt;new Number(7)&lt;/code&gt; 의해 객체로 변환되고 문자열 &lt;code&gt;'foo'&lt;/code&gt; 는 &lt;code&gt;new String('foo')&lt;/code&gt; 의해 객체로 변환됩니다. ( 'foo') , 예</target>
        </trans-unit>
        <trans-unit id="6a50780aeb7a827d28054dd1260fddffa7beb516" translate="yes" xml:space="preserve">
          <source>Note that in non-standard, pre-ES2015 implementations the &lt;code&gt;configurable&lt;/code&gt; attribute was &lt;code&gt;false&lt;/code&gt; as well.</source>
          <target state="translated">ES2015 이전의 비표준 구현에서는 &lt;code&gt;configurable&lt;/code&gt; 속성도 &lt;code&gt;false&lt;/code&gt; 였습니다 .</target>
        </trans-unit>
        <trans-unit id="18152720c80dbf06834c6e40dd6c2a4141fa617a" translate="yes" xml:space="preserve">
          <source>Note that in the &lt;code&gt;3d&lt;/code&gt; example, &lt;code&gt;'3d'&lt;/code&gt; had to be quoted. It's possible to quote the JavaScript array indexes as well (e.g., &lt;code&gt;years['2']&lt;/code&gt; instead of &lt;code&gt;years[2]&lt;/code&gt;), although it's not necessary. The 2 in &lt;code&gt;years[2]&lt;/code&gt; is coerced into a string by the JavaScript engine through an implicit &lt;code&gt;toString&lt;/code&gt; conversion. It is, for this reason, that &lt;code&gt;'2'&lt;/code&gt; and &lt;code&gt;'02'&lt;/code&gt; would refer to two different slots on the &lt;code&gt;years&lt;/code&gt; object and the following example could be &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">에주의 &lt;code&gt;3d&lt;/code&gt; 예를 들어, &lt;code&gt;'3d'&lt;/code&gt; 했다가 인용된다. 필요하지는 않지만 JavaScript 배열 인덱스도 인용 할 수 있습니다 (예 : &lt;code&gt;years['2']&lt;/code&gt; 대신 years [ '2' &lt;code&gt;years[2]&lt;/code&gt; ). 2 &lt;code&gt;years[2]&lt;/code&gt; 은 암시적인 &lt;code&gt;toString&lt;/code&gt; 변환을 통해 JavaScript 엔진에 의해 문자열로 강제 변환됩니다. 이러한 이유로 &lt;code&gt;'2'&lt;/code&gt; 와 &lt;code&gt;'02'&lt;/code&gt; 는 &lt;code&gt;years&lt;/code&gt; 객체 에서 서로 다른 두 개의 슬롯을 나타내며 다음 예는 &lt;code&gt;true&lt;/code&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e0a0c0b10e66ec37f22c79ff0342f1476fb36d18" translate="yes" xml:space="preserve">
          <source>Note that in the &lt;code&gt;if&lt;/code&gt; test, a reference to &lt;code&gt;noFunc&lt;/code&gt; is used&amp;mdash;there are no brackets &quot;()&quot; after the function name so the actual function is not called.</source>
          <target state="translated">에 유의 &lt;code&gt;if&lt;/code&gt; 테스트 참조 &lt;code&gt;noFunc&lt;/code&gt; 가 사용-가 아니 브래킷이없는 &quot;()&quot;는 실제 함수가 호출되지 않도록 함수명 후.</target>
        </trans-unit>
        <trans-unit id="6f286f755a65bf78c08beee0b946804e45a58f54" translate="yes" xml:space="preserve">
          <source>Note that in the above example, there is no &lt;code&gt;await&lt;/code&gt; statement on the &lt;code&gt;return&lt;/code&gt; statement, because the return value of an &lt;code&gt;async function&lt;/code&gt; is implicitly wrapped in &lt;a href=&quot;../global_objects/promise/resolve&quot;&gt;&lt;code&gt;Promise.resolve&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">위 예제에서는 &lt;code&gt;async function&lt;/code&gt; 의 반환 값 이 암시 적으로 &lt;a href=&quot;../global_objects/promise/resolve&quot;&gt; &lt;code&gt;Promise.resolve&lt;/code&gt; 에&lt;/a&gt; 래핑 되므로 &lt;code&gt;return&lt;/code&gt; 문 에 &lt;code&gt;await&lt;/code&gt; 문 이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="dae5ea370e118e8b1c249dfd5e9cce3d31256d24" translate="yes" xml:space="preserve">
          <source>Note that in the last case there are no newly created objects.</source>
          <target state="translated">마지막 경우 새로 만든 객체가 없습니다.</target>
        </trans-unit>
        <trans-unit id="05422b1cceaa80609cd6103fbfcbcbcddbc158b9" translate="yes" xml:space="preserve">
          <source>Note that it is not possible to use &lt;code&gt;var&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt; or &lt;code&gt;const&lt;/code&gt; with &lt;code&gt;export default&lt;/code&gt;.</source>
          <target state="translated">는 사용할 수 없습니다 것을 참고 &lt;code&gt;var&lt;/code&gt; , &lt;code&gt;let&lt;/code&gt; 또는 &lt;code&gt;const&lt;/code&gt; 로 &lt;code&gt;export default&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="afc211002dbae03e352470035a8ca856a0b4971a" translate="yes" xml:space="preserve">
          <source>Note that legacy octal numbers with just a leading zero won't work for &lt;code&gt;BigInt&lt;/code&gt;:</source>
          <target state="translated">선행 0 만있는 레거시 8 진수는 &lt;code&gt;BigInt&lt;/code&gt; 에서 작동하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="2d1be0a0947bb569147f37a17d68d634a985473c" translate="yes" xml:space="preserve">
          <source>Note that many math functions have a precision that's implementation-dependent. This means that different browsers can give a different result, and even the same JS engine on a different OS or architecture can give different results.</source>
          <target state="translated">많은 수학 함수는 구현에 따라 정밀도가 다릅니다. 이것은 다른 브라우저가 다른 결과를 낼 수 있으며 다른 OS 또는 아키텍처의 동일한 JS 엔진조차도 다른 결과를 줄 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="a86b42f5282d2c308201cc21e1596a62c4c59e64" translate="yes" xml:space="preserve">
          <source>Note that octal literals and octal escape sequences are deprecated and will present an additional deprecation warning. With ECMAScript 6 and later, the syntax uses a leading zero followed by a lowercase or uppercase Latin letter &quot;O&quot; (&lt;code&gt;0o&lt;/code&gt; or &lt;code&gt;0O)&lt;/code&gt;. See the page about &lt;a href=&quot;../lexical_grammar#Octal&quot;&gt;lexical grammar&lt;/a&gt; for more information.</source>
          <target state="translated">8 진 리터럴 및 8 진 이스케이프 시퀀스는 더 이상 사용되지 않으며 추가 지원 중단 경고가 표시됩니다. ECMAScript 6 이상에서 구문은 앞에 0을 사용하고 소문자 또는 대문자 라틴 문자 &quot;O&quot;( &lt;code&gt;0o&lt;/code&gt; 또는 &lt;code&gt;0O)&lt;/code&gt; 를 사용 합니다. 자세한 내용은 &lt;a href=&quot;../lexical_grammar#Octal&quot;&gt;어휘 문법에&lt;/a&gt; 대한 페이지 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9e676081ef51333515ce7ebefaa059e7feaad4af" translate="yes" xml:space="preserve">
          <source>Note that several of the &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; properties have both long and short (Perl-like) names. Both names always refer to the same value. Perl is the programming language from which JavaScript modeled its regular expressions.</source>
          <target state="translated">몇몇 &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; 속성은 길고 짧은 (Perl-like) 이름을 모두 가지고 있습니다. 두 이름은 항상 같은 값을 나타냅니다. Perl은 JavaScript가 정규 표현식을 모델링 한 프로그래밍 언어입니다.</target>
        </trans-unit>
        <trans-unit id="7250f720fc2801000726463639bc2f11eb988451" translate="yes" xml:space="preserve">
          <source>Note that several of the &lt;a href=&quot;regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; properties have both long and short (Perl-like) names. Both names always refer to the same value. (Perl is the programming language from which JavaScript modeled its regular expressions.). See also &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features#RegExp_Properties&quot;&gt;deprecated &lt;code&gt;RegExp&lt;/code&gt; properties.&lt;/a&gt;</source>
          <target state="translated">몇 가지 &lt;a href=&quot;regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; 속성에는 길고 짧은 (Perl과 유사한) 이름이 모두 있습니다. 두 이름 모두 항상 동일한 값을 참조합니다. (Perl은 JavaScript가 정규 표현식을 모델링 한 프로그래밍 언어입니다.) &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features#RegExp_Properties&quot;&gt;더 이상 사용되지 않는 &lt;/a&gt; &lt;code&gt;RegExp&lt;/code&gt; 속성 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ad096e10b1e6dceefdb3deef7e4896ced4ca2671" translate="yes" xml:space="preserve">
          <source>Note that several of the &lt;a href=&quot;regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; properties have both long and short (Perl-like) names. Both names always refer to the same value. Perl is the programming language from which JavaScript modeled its regular expressions.</source>
          <target state="translated">몇몇 &lt;a href=&quot;regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; 속성은 길고 짧은 (Perl-like) 이름을 모두 가지고 있습니다. 두 이름은 항상 같은 값을 나타냅니다. Perl은 JavaScript가 정규 표현식을 모델링 한 프로그래밍 언어입니다.</target>
        </trans-unit>
        <trans-unit id="ab0095e429e239e576b1ecad43494b38716172fb" translate="yes" xml:space="preserve">
          <source>Note that since JSON syntax is limited compared to JavaScript syntax, many valid JavaScript literals will not parse as JSON. For example, trailing commas are not allowed in JSON, and property names (keys) in object literals must be enclosed in quotes. Be sure to use a JSON serializer to generate strings that will be later parsed as JSON.</source>
          <target state="translated">JSON 구문은 JavaScript 구문에 비해 제한되므로 많은 유효한 JavaScript 리터럴이 JSON으로 구문 분석되지 않습니다. 예를 들어 JSON에서는 후행 쉼표를 사용할 수 없으며 객체 리터럴의 속성 이름 (키)은 따옴표로 묶어야합니다. 나중에 JSON으로 구문 분석 될 문자열을 생성하려면 JSON 직렬 변환기를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="6cb2dd8155033be17a80dfdf575de5da54b4a738" translate="yes" xml:space="preserve">
          <source>Note that since the &lt;a href=&quot;https://www.json.org/&quot;&gt;JSON format&lt;/a&gt; doesn't support object references (although an &lt;a href=&quot;http://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03&quot;&gt;IETF draft exists&lt;/a&gt;), a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; will be thrown if one attempts to encode an object with circular references.</source>
          <target state="translated">&lt;a href=&quot;https://www.json.org/&quot;&gt;JSON 형식&lt;/a&gt; 은 객체 참조를 지원하지 않기 때문에 ( &lt;a href=&quot;http://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03&quot;&gt;IETF 초안이 존재하지만&lt;/a&gt; ) 순환 참조로 객체를 인코딩하려고 시도하면 &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1a6e3dfe2c3b0452fec3823d807b8327a55d2d91" translate="yes" xml:space="preserve">
          <source>Note that some programming languages use the caret symbol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdb44af1c693c887020bbf8a2fc5648df606197a" translate="yes" xml:space="preserve">
          <source>Note that strings constructed using &lt;code&gt;new String()&lt;/code&gt; are objects. If you compare one of these with a string literal, the &lt;code&gt;String&lt;/code&gt; object will be converted to a string literal and the contents will be compared. However, if both operands are &lt;code&gt;String&lt;/code&gt; objects, then they are compared as objects and must reference the same object for comparison to succeed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8bbbc78361c9c3e3dc8e93f7bc2a908fb0e834e" translate="yes" xml:space="preserve">
          <source>Note that such a different order may arise statically via disparate fixed codings such as here, but also dynamically via whatever the order any such property-adding code-branches actually get executed at runtime as depends on inputs and/or random-variables. Then again, the actual iteration order is not guaranteed no matter what the order members are added.</source>
          <target state="translated">이러한 다른 순서는 여기와 같은 이종 고정 코딩을 통해 정적으로 발생할 수 있지만, 입력 및 / 또는 임의 변수에 따라 런타임에 이러한 속성 추가 코드 분기가 실제로 실행되는 순서를 통해 동적으로 발생할 수도 있습니다. 그런 다음 주문 멤버를 추가해도 실제 반복 순서는 보장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ce1718ede9337dadfd199c5c0aa72fe13f53cd24" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Opener-Policy&quot;&gt;&lt;code&gt;Cross-Origin-Opener-Policy&lt;/code&gt;&lt;/a&gt; header limits your ability to retain a reference to popups. Direct access between two top-level window contexts will essentially only work if they are same-origin and carry the same two headers with the same two values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7302b0a2c1178c71e82f3bf364ff7bf84b19f475" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;m&lt;/code&gt; multiline flag doesn't change the dot behavior. So to match a pattern across multiple lines, the character set &lt;code&gt;[^]&lt;/code&gt; can be used (if you don't mean an old version of IE, of course), it will match any character including newlines.</source>
          <target state="translated">점을 유의 &lt;code&gt;m&lt;/code&gt; 의 여러 플래그는 점 동작을 변경하지 않습니다. 따라서 여러 줄의 패턴을 일치시키기 위해 문자 집합 &lt;code&gt;[^]&lt;/code&gt; 을 사용할 수 있습니다 (물론 이전 버전의 IE를 의미하지 않는 경우), 개행을 포함한 모든 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="9317ca9043fffb5f4b1c4f38d18a8afc42ff0c84" translate="yes" xml:space="preserve">
          <source>Note that the WebAssembly text format currently doesn't have a syntax specified for adding new custom sections; you can however add a name section to your wasm during conversion from text format over to .wasm. The wast2wasm command available as part of the &lt;a href=&quot;https://github.com/webassembly/wabt&quot;&gt;wabt tool&lt;/a&gt; has a &lt;code&gt;--debug-names&lt;/code&gt; option &amp;mdash; specify this during conversion to get a .wasm with a names custom section, for example:</source>
          <target state="translated">웹 어셈블리 텍스트 형식에는 현재 새 사용자 정의 섹션을 추가하기 위해 지정된 구문이 없습니다. 그러나 텍스트 형식에서 .wasm으로 변환하는 동안 wasm에 이름 섹션을 추가 할 수 있습니다. &lt;a href=&quot;https://github.com/webassembly/wabt&quot;&gt;wabt 도구의&lt;/a&gt; 일부로 사용 가능한 wast2wasm 명령 에는 &lt;code&gt;--debug-names&lt;/code&gt; 옵션이 있습니다. 변환 중에이를 지정하여 이름 사용자 정의 섹션이있는 .wasm을 가져옵니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3e5bcd29eb044f930530fd1a51d6198733929f6f" translate="yes" xml:space="preserve">
          <source>Note that the block-scoped &lt;code&gt;const c = 2&lt;/code&gt;&lt;em&gt;does not&lt;/em&gt; throw a &lt;code&gt;SyntaxError: Identifier 'c' has already been declared&lt;/code&gt; because it can be declared uniquely within the block.</source>
          <target state="translated">블록 범위의 것을 참고 &lt;code&gt;const c = 2&lt;/code&gt; &lt;em&gt;되지 않습니다&lt;/em&gt; 던져 &lt;code&gt;SyntaxError: Identifier 'c' has already been declared&lt;/code&gt; 이 블록 내에서 유일하게 선언 할 수 있기 때문이다.</target>
        </trans-unit>
        <trans-unit id="f0c421b852d51df9ce972cd296b6e3206ff56369" translate="yes" xml:space="preserve">
          <source>Note that the comma in assignments such as the &lt;code&gt;var&lt;/code&gt; statement may appear not to have the normal effect of comma operators because they don't exist within an expression. In the following example, &lt;code&gt;a&lt;/code&gt; is set to the value of &lt;code&gt;b = 3&lt;/code&gt; (which is 3), but the &lt;code&gt;c = 4&lt;/code&gt; expression still evaluates and its result returned to console (i.e., 4). This is due to &lt;a href=&quot;operator_precedence&quot;&gt;operator precedence and associativity&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;var&lt;/code&gt; 문과 같은 할당에서 쉼표 는 쉼표 연산자가 식 내에 존재하지 않기 때문에 정상적인 영향을 미치지 않는 것처럼 보일 수 있습니다. 다음 예에서 &lt;code&gt;a&lt;/code&gt; 는 &lt;code&gt;b = 3&lt;/code&gt; (3) 의 값으로 설정 되지만 &lt;code&gt;c = 4&lt;/code&gt; 표현식은 여전히 ​​평가되며 결과는 콘솔 (예 : 4)로 반환됩니다. 이것은 &lt;a href=&quot;operator_precedence&quot;&gt;연산자 우선 순위와 연관성 때문&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e47b72d8b6b4d9dd804fdc19bc24e16cbe4f69b3" translate="yes" xml:space="preserve">
          <source>Note that the comma operators in assignments may appear not to have the normal effect of comma operators because they don't exist within an expression. In the following example, &lt;code&gt;a&lt;/code&gt; is set to the value of &lt;code&gt;b = 3&lt;/code&gt; (which is 3), but the &lt;code&gt;c = 4&lt;/code&gt; expression still evaluates and its result returned to console (i.e., 4). This is due to &lt;a href=&quot;operator_precedence&quot;&gt;operator precedence and associativity&lt;/a&gt;.</source>
          <target state="translated">할당의 쉼표 연산자는 식 내에 존재하지 않기 때문에 쉼표 연산자의 정상적인 효과가없는 것처럼 보일 수 있습니다. 다음 예에서 &lt;code&gt;a&lt;/code&gt; 는 &lt;code&gt;b = 3&lt;/code&gt; (3) 의 값으로 설정 되지만 &lt;code&gt;c = 4&lt;/code&gt; 표현식은 여전히 ​​평가되고 그 결과는 콘솔에 반환됩니다 (예 : 4). 이는 &lt;a href=&quot;operator_precedence&quot;&gt;연산자 우선 순위 및 연관성 때문&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8fb0b31cc07e11285eaab2f90031b0e91ac70257" translate="yes" xml:space="preserve">
          <source>Note that the escape sequence restriction is only dropped from &lt;em&gt;tagged&lt;/em&gt; templates and not from &lt;em&gt;untagged&lt;/em&gt; template literals:</source>
          <target state="translated">이스케이프 시퀀스 제한은 &lt;em&gt;태그가 지정 &lt;/em&gt;&lt;em&gt;되지 않은&lt;/em&gt; 템플릿 리터럴 이 아니라 &lt;em&gt;태그가 지정된&lt;/em&gt; 템플릿 에서만 삭제됩니다 .</target>
        </trans-unit>
        <trans-unit id="9c1867f83bc77a17f2eb2250a8efe39fbbd4494d" translate="yes" xml:space="preserve">
          <source>Note that the escape sequence restriction is only dropped from &lt;em&gt;tagged&lt;/em&gt; templates&amp;mdash;not from &lt;em&gt;untagged&lt;/em&gt; template literals:</source>
          <target state="translated">이스케이프 시퀀스 제한은 &lt;em&gt;태그&lt;/em&gt; 가 &lt;em&gt;없는&lt;/em&gt; 템플릿 리터럴 이 아니라 &lt;em&gt;태그가 지정된&lt;/em&gt; 템플릿 에서만 삭제됩니다 .</target>
        </trans-unit>
        <trans-unit id="7c511ada476755a85f915c2a5e613e8478ccb322" translate="yes" xml:space="preserve">
          <source>Note that the first call does not log anything, because the generator was not yielding anything initially.</source>
          <target state="translated">생성기가 처음에 아무것도 산출하지 않았기 때문에 첫 번째 호출은 아무것도 기록하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="11e8fd41ba6325108248c738202ab2c77a7f287a" translate="yes" xml:space="preserve">
          <source>Note that the function &lt;code&gt;troubleWithGetNumber()&lt;/code&gt; ends with a &lt;code&gt;throw()&lt;/code&gt;. That is forced because an ES6 promise chain goes through all the &lt;code&gt;.then()&lt;/code&gt; promises, even after an error, and without the &quot;throw()&quot;, the error would seem &quot;fixed&quot;. This is a hassle, and for this reason, it is common to omit &lt;code&gt;rejectionFunc&lt;/code&gt; throughout the chain of &lt;code&gt;.then()&lt;/code&gt; promises, and just have a single &lt;code&gt;rejectionFunc&lt;/code&gt; in the final &lt;code&gt;catch()&lt;/code&gt;. The alternative is to throw a special value (in this case &quot;-999&quot;, but a custom Error type would be more appropriate).</source>
          <target state="translated">&lt;code&gt;troubleWithGetNumber()&lt;/code&gt; 함수 는 &lt;code&gt;throw()&lt;/code&gt; 끝납니다 . 이는 ES6 promise 체인이 모든 &lt;code&gt;.then()&lt;/code&gt; promise를 통과하기 때문에 강제됩니다 . 오류 후에도 &quot;throw ()&quot;가 없으면 오류가 &quot;수정 된&quot;것처럼 보입니다. 이것은 &lt;code&gt;.then()&lt;/code&gt; 이러한 이유로 .then () 프라 미스 체인 전체에서 &lt;code&gt;rejectionFunc&lt;/code&gt; 를 생략 하고 최종 &lt;code&gt;catch()&lt;/code&gt; 에 하나의 &lt;code&gt;rejectionFunc&lt;/code&gt; 를 갖는 것이 일반적 입니다. 대안은 특수 값을 던지는 것입니다 (이 경우 &quot;-999&quot;이지만 사용자 정의 오류 유형이 더 적합합니다).</target>
        </trans-unit>
        <trans-unit id="e909cd5cd3d9b43912251e495f43e29393aa2014" translate="yes" xml:space="preserve">
          <source>Note that the function will be invoked multiple times for each full match to be replaced if the regular expression in the first parameter is global.</source>
          <target state="translated">첫 번째 매개 변수의 정규식이 전역 인 경우 대체 될 각 전체 일치에 대해 함수가 여러 번 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="6a4a9de02107e4ee576341cfaddb1b9c0f9ed4a8" translate="yes" xml:space="preserve">
          <source>Note that the implication of the above, is that, contrary to popular misinformation, JavaScript does not have implicit or undeclared variables, it merely has a syntax that looks like it does.</source>
          <target state="translated">위의 함축 된 의미는 대중적인 잘못된 정보와는 달리 JavaScript에는 암시 적 또는 선언되지 않은 변수가 없으며 마치있는 것처럼 보이는 구문 만 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd2bf18a565e9aee768496bddd1900a93572ab34" translate="yes" xml:space="preserve">
          <source>Note that the length of the normalized form under &lt;code&gt;&quot;NFD&quot;&lt;/code&gt; is &lt;code&gt;2&lt;/code&gt;. That's because &lt;code&gt;&quot;NFD&quot;&lt;/code&gt; gives you the &lt;strong&gt;decomposed&lt;/strong&gt; version of the canonical form, in which single code points are split into multiple combining ones. The decomposed canonical form for &lt;code&gt;&quot;&amp;ntilde;&quot;&lt;/code&gt; is &lt;code&gt;&quot;\u006E\u0303&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;NFD&quot;&lt;/code&gt; 에서 정규화 된 형식의 길이 는 &lt;code&gt;2&lt;/code&gt; 입니다. 이는 &lt;code&gt;&quot;NFD&quot;&lt;/code&gt; 가 단일 코드 포인트가 여러 결합 코드 포인트로 분할되는 표준 형식 의 &lt;strong&gt;분해 된&lt;/strong&gt; 버전을 제공 하기 때문 입니다. &lt;code&gt;&quot;&amp;ntilde;&quot;&lt;/code&gt; 의 분해 된 표준 형식 은 &lt;code&gt;&quot;\u006E\u0303&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="61b22e5e94655c56be6f44302671658a96e6c0b2" translate="yes" xml:space="preserve">
          <source>Note that the order of the patterns in the regular expression matters.</source>
          <target state="translated">정규식에서 패턴의 순서가 중요합니다.</target>
        </trans-unit>
        <trans-unit id="9dd7be5f05359fb27023d87fd24b57d610b2c7f7" translate="yes" xml:space="preserve">
          <source>Note that the results shown in the code above can vary between browsers and browser versions. This is because the values are implementation-specific. That is, the specification requires only that the before and after values are negative and positive.</source>
          <target state="translated">위 코드에 표시된 결과는 브라우저와 브라우저 버전에 따라 다를 수 있습니다. 이는 값이 구현별로 다르기 때문입니다. 즉, 사양에서는 이전 및 이후 값이 음수이고 양수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="b9da1c1db86dd393891044a482bf172e36da757d" translate="yes" xml:space="preserve">
          <source>Note that the trigonometric functions (&lt;code&gt;sin()&lt;/code&gt;, &lt;code&gt;cos()&lt;/code&gt;, &lt;code&gt;tan()&lt;/code&gt;, &lt;code&gt;asin()&lt;/code&gt;, &lt;code&gt;acos()&lt;/code&gt;, &lt;code&gt;atan()&lt;/code&gt;, &lt;code&gt;atan2()&lt;/code&gt;) expect or return angles in radians. To convert radians to degrees, divide by &lt;code&gt;(Math.PI / 180)&lt;/code&gt;, and multiply by this to convert the other way.</source>
          <target state="translated">삼각 함수 ( &lt;code&gt;sin()&lt;/code&gt; , &lt;code&gt;cos()&lt;/code&gt; , &lt;code&gt;tan()&lt;/code&gt; , &lt;code&gt;asin()&lt;/code&gt; , &lt;code&gt;acos()&lt;/code&gt; , &lt;code&gt;atan()&lt;/code&gt; , &lt;code&gt;atan2()&lt;/code&gt; )는 각도를 라디안으로 예상하거나 반환합니다. 라디안을도 단위로 변환하려면 &lt;code&gt;(Math.PI / 180)&lt;/code&gt; 나누고 다른 방법으로 변환하려면이 값을 곱하십시오.</target>
        </trans-unit>
        <trans-unit id="05d9f4c62248b1aeb8a356a6df2d135c0cd0b559" translate="yes" xml:space="preserve">
          <source>Note that the value of an &lt;code&gt;instanceof&lt;/code&gt; test can change based on changes to the &lt;code&gt;prototype&lt;/code&gt; property of constructors, and it can also be changed by changing an object prototype using &lt;code&gt;Object.setPrototypeOf&lt;/code&gt;. It is also possible using the non-standard &lt;code&gt;__proto__&lt;/code&gt; pseudo-property.</source>
          <target state="translated">테스트 &lt;code&gt;instanceof&lt;/code&gt; 의 값은 생성자 의 &lt;code&gt;prototype&lt;/code&gt; 속성 변경에 따라 변경 될 수 있으며 &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; 를 사용하여 객체 프로토 타입을 변경하여 변경할 수도 있습니다 . 비표준 &lt;code&gt;__proto__&lt;/code&gt; 의사 속성을 사용하는 것도 가능 합니다.</target>
        </trans-unit>
        <trans-unit id="2ff4210942bac732b642ed4df56d4be6b7be8132" translate="yes" xml:space="preserve">
          <source>Note that the value of an &lt;code&gt;instanceof&lt;/code&gt; test can change based on changes to the &lt;code&gt;prototype&lt;/code&gt; property of constructors. It can also be changed by changing an object's prototype using &lt;code&gt;Object.setPrototypeOf&lt;/code&gt;. It is also possible using the non-standard &lt;code&gt;__proto__&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;instanceof&lt;/code&gt; 테스트 의 값 은 생성자 의 &lt;code&gt;prototype&lt;/code&gt; 속성 변경에 따라 변경 될 수 있습니다 . &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; 를 사용하여 객체의 프로토 타입을 변경하여 변경할 수도 있습니다 . 비표준 &lt;code&gt;__proto__&lt;/code&gt; 속성을 사용하는 것도 가능 합니다.</target>
        </trans-unit>
        <trans-unit id="7741c61e8b49d3e2e383a1abacaa777a126edbdd" translate="yes" xml:space="preserve">
          <source>Note that there is no &lt;code&gt;elseif&lt;/code&gt; syntax in JavaScript. However, you can write it with a space between &lt;code&gt;else&lt;/code&gt; and &lt;code&gt;if&lt;/code&gt;:</source>
          <target state="translated">JavaScript 에는 &lt;code&gt;elseif&lt;/code&gt; 구문 이 없습니다 . 그러나 &lt;code&gt;else&lt;/code&gt; 와 &lt;code&gt;if&lt;/code&gt; 사이에 공백으로 쓸 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7f59a04833c2e45f7e5afac64857c9edc5602ac4" translate="yes" xml:space="preserve">
          <source>Note that this behavior is different to mathematical and bitwise assignment operators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8db8f294dbcfb4632044ee8283f40c3eee6b7d4" translate="yes" xml:space="preserve">
          <source>Note that this behavior is not at all affected by how or where the function was defined. In the previous example, we defined the function inline as the &lt;code&gt;f&lt;/code&gt; member during the definition of &lt;code&gt;o&lt;/code&gt;. However, we could have just as easily defined the function first and later attached it to &lt;code&gt;o.f&lt;/code&gt;. Doing so results in the same behavior:</source>
          <target state="translated">이 동작은 함수의 정의 방법이나 위치에 전혀 영향을받지 않습니다. 이전 예제에서, &lt;code&gt;o&lt;/code&gt; 를 정의하는 동안 함수 인라인을 &lt;code&gt;f&lt;/code&gt; 멤버로 정의했습니다 . 그러나, 우리는 쉽게 첫번째 기능을 정의하고 나중에에 부착하는 것처럼 할 수 &lt;code&gt;o.f&lt;/code&gt; . 그렇게하면 동일한 동작이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9faaea4291e65f8d479e5e16bc12586950295dae" translate="yes" xml:space="preserve">
          <source>Note that this can result in an infinite loop if &lt;code&gt;oldS&lt;/code&gt; is itself a substring of &lt;code&gt;newS&lt;/code&gt; &amp;mdash; for example, if you attempted to replace 'World' with 'OtherWorld' here. A better method for replacing strings is as follows:</source>
          <target state="translated">경우이 무한 루프가 발생할 수 있음을 참고 &lt;code&gt;oldS&lt;/code&gt; 자신의 서브 스트링 &lt;code&gt;newS&lt;/code&gt; 예를 들어 당신이 여기에서 '내세'와 '세계'를 대체하려고 시도하는 경우 -. 문자열을 바꾸는 더 좋은 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dd0a572649142c3f55682e7ae85af6476b39cbda" translate="yes" xml:space="preserve">
          <source>Note that this can result in an infinite loop if &lt;code&gt;oldS&lt;/code&gt; is itself a substring of &lt;code&gt;newS&lt;/code&gt; &amp;mdash; for example, if you attempted to replace &lt;code&gt;'World'&lt;/code&gt; with &lt;code&gt;'OtherWorld'&lt;/code&gt; here.</source>
          <target state="translated">경우이 무한 루프가 발생할 수 있음을 참고 &lt;code&gt;oldS&lt;/code&gt; 자신의 서브 스트링 &lt;code&gt;newS&lt;/code&gt; 예를 들어 당신이 교체하려고 시도하는 경우 - &lt;code&gt;'World'&lt;/code&gt; 와 &lt;code&gt;'OtherWorld'&lt;/code&gt; 여기에.</target>
        </trans-unit>
        <trans-unit id="3a00b9df89e778c37409fcfac8a650745361a6d2" translate="yes" xml:space="preserve">
          <source>Note that this code is an example only; it does not accept valid numbers such as &lt;code&gt;1.&lt;/code&gt; or &lt;code&gt;.5&lt;/code&gt;.</source>
          <target state="translated">이 코드는 예제 일뿐입니다. &lt;code&gt;1.&lt;/code&gt; 또는 &lt;code&gt;.5&lt;/code&gt; 와 같은 유효한 숫자는 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="f16fa41c0a4ab1894fce44a1d291e186bc98c8c5" translate="yes" xml:space="preserve">
          <source>Note that this means that the offset is positive if the local timezone is behind UTC, and negative if it is ahead. For example, for time zone UTC+10:00 (Australian Eastern Standard Time, Vladivostok Time, Chamorro Standard Time), &lt;code&gt;-600&lt;/code&gt; will be returned.</source>
          <target state="translated">이는 현지 시간대가 UTC보다 뒤처지면 오프셋이 양수이고 앞면 오프셋이 음수임을 의미합니다. 예를 들어 UTC + 10 : 00 (호주 동부 표준시, 블라디보스토크 표준시, 차모로 표준시) 표준 시간대의 경우 &lt;code&gt;-600&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="eb548cf218257a148693e07ddf6949ae0bc2499a" translate="yes" xml:space="preserve">
          <source>Note that this will include query parameters and/or hash (i.e., following the &lt;code&gt;?&lt;/code&gt; or &lt;code&gt;#&lt;/code&gt;).</source>
          <target state="translated">여기에는 쿼리 매개 변수 및 / 또는 해시 (즉, &lt;code&gt;?&lt;/code&gt; 또는 &lt;code&gt;#&lt;/code&gt; 다음에 오는 )가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="bfc23f6245430295e921350aae3669ec1d95f7a6" translate="yes" xml:space="preserve">
          <source>Note that we don't create an array to store a collection of objects. Instead, we store the collection on the object itself and use &lt;code&gt;call&lt;/code&gt; on &lt;code&gt;Array.prototype.push&lt;/code&gt; to trick the method into thinking we are dealing with an array&amp;mdash;and it just works, thanks to the way JavaScript allows us to establish the execution context in any way we want.</source>
          <target state="translated">객체 컬렉션을 저장하기 위해 배열을 생성하지 않습니다. 대신 객체 자체에 컬렉션을 저장하고 &lt;code&gt;Array.prototype.push&lt;/code&gt; 에 대한 &lt;code&gt;call&lt;/code&gt; 을 사용 하여 메서드가 배열을 다루고 있다고 생각하도록 속이고, JavaScript를 통해 실행 컨텍스트를 설정할 수있는 방식 덕분에 작동합니다. 우리가 원하는대로.</target>
        </trans-unit>
        <trans-unit id="eb8aa2e7d13b4fcf561acadb5cc068b976b71b73" translate="yes" xml:space="preserve">
          <source>Note that we have to handle the case &lt;code&gt;idx == 0&lt;/code&gt; separately here because the element will always be found regardless of the &lt;code&gt;fromIndex&lt;/code&gt; parameter if it is the first element of the array. This is different from the &lt;a href=&quot;indexof&quot;&gt;&lt;code&gt;indexOf&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">배열의 첫 번째 요소 인 경우 &lt;code&gt;fromIndex&lt;/code&gt; 매개 변수에 관계없이 요소를 항상 찾을 수 있으므로 여기서는 &lt;code&gt;idx == 0&lt;/code&gt; 경우를 별도로 처리해야합니다 . 이것은 &lt;a href=&quot;indexof&quot;&gt; &lt;code&gt;indexOf&lt;/code&gt; &lt;/a&gt; 메소드 와 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="54765f08a475e922c31819f2f554237efe5c5b0b" translate="yes" xml:space="preserve">
          <source>Note that when the currency sign is &quot;accounting&quot;, parentheses might be used instead of a minus sign:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eae75098f2a74b2ca3277efcfd90d5b54f284a4" translate="yes" xml:space="preserve">
          <source>Note that when this zero-argument function is called, it is invoked as a method on the iterable object. Therefore inside of the function, the &lt;code&gt;this&lt;/code&gt; keyword can be used to access the properties of the iterable object, to decide what to provide during the iteration.</source>
          <target state="translated">인수가없는이 함수가 호출되면 반복 가능한 객체에 대한 메서드로 호출됩니다. 따라서 함수 내에서 &lt;code&gt;this&lt;/code&gt; 키워드를 사용하여 반복 가능한 객체의 속성에 액세스하고 반복 중에 제공 할 항목을 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="da7456a5cba24d32b09c867d6c49b0a632f46bae" translate="yes" xml:space="preserve">
          <source>Note that while Node.js will pass on query parameters (or the hash) as in the latter example, as of Node 14.1.0, a URL with query parameters will err when loading in the form &lt;code&gt;node --experimental-modules index.mjs?someURLInfo=5&lt;/code&gt; (it is treated as a file rather than a URL in this context).</source>
          <target state="translated">Node.js는 Node 14.1.0부터 Node.js가 쿼리 매개 변수 (또는 해시)를 전달하지만 Node 14.1.0부터 쿼리 매개 변수가있는 URL은 &lt;code&gt;node --experimental-modules index.mjs?someURLInfo=5&lt;/code&gt; 형식으로로드 할 때 오류가 발생 합니다. ? someURLInfo = 5 (이 컨텍스트에서 URL이 아닌 파일로 처리됨).</target>
        </trans-unit>
        <trans-unit id="2cd056223da6b26488af579a222da7618608194b" translate="yes" xml:space="preserve">
          <source>Note that while in most languages, &amp;lsquo;%&amp;rsquo; is a remainder operator, in some (e.g. &lt;a href=&quot;https://en.wikipedia.org/wiki/Modulo_operation#In_programming_languages&quot;&gt;Python, Perl&lt;/a&gt;) it is a modulo operator. For positive values, the two are equivalent, but when the dividend and divisor are of different signs, they give different results. To obtain a modulo in JavaScript, in place of &lt;code&gt;a % n&lt;/code&gt;, use &lt;code&gt;((a % n ) + n ) % n&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c2ae3bb9aea4cccee37b2f148e59d95d86693f" translate="yes" xml:space="preserve">
          <source>Note that while the setting of &lt;code&gt;null&lt;/code&gt; as &lt;code&gt;[[Prototype]]&lt;/code&gt; is supported in the real ES5 &lt;code&gt;Object.create&lt;/code&gt;, this polyfill cannot support it due to a limitation inherent in versions of ECMAScript lower than 5.</source>
          <target state="translated">실제 ES5 &lt;code&gt;Object.create&lt;/code&gt; 에서 &lt;code&gt;[[Prototype]]&lt;/code&gt; 으로 &lt;code&gt;null&lt;/code&gt; 을 설정하는 동안 이 폴리 필은 ECMAScript 버전 5보다 고유 한 제한으로 인해이를 지원할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="29d2f36187f315e0e6ae89d658ad3563914fde02" translate="yes" xml:space="preserve">
          <source>Note that while this &quot;no-op&quot; works for JavaScript objects it does not work for native browser objects like DOM Elements. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/&quot;&gt;See this for one solution&lt;/a&gt;.</source>
          <target state="translated">이 &quot;no-op&quot;는 JavaScript 객체에는 작동하지만 DOM Elements와 같은 기본 브라우저 객체에는 작동하지 않습니다. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/&quot;&gt;하나의 솔루션에 대해서는 이것을 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="42a5d0d6cae56586efb992e7ad3a75023edfc3f8" translate="yes" xml:space="preserve">
          <source>Note that while this &quot;no-op&quot; works for JavaScript objects, it does not work for native browser objects like DOM Elements.</source>
          <target state="translated">이 &quot;no-op&quot;은 JavaScript 객체에 대해서는 작동하지만 DOM Elements와 같은 기본 브라우저 객체에는 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8c471aa0dff39ec2f99de8a999d955158a4e06a8" translate="yes" xml:space="preserve">
          <source>Note that with &lt;code&gt;call&lt;/code&gt; and &lt;code&gt;apply&lt;/code&gt;, if the value passed as &lt;code&gt;this&lt;/code&gt; is not an object, an attempt will be made to convert it to an object using the internal &lt;code&gt;ToObject&lt;/code&gt; operation. So if the value passed is a primitive like &lt;code&gt;7&lt;/code&gt; or &lt;code&gt;'foo'&lt;/code&gt;, it will be converted to an Object using the related constructor, so the primitive number &lt;code&gt;7&lt;/code&gt; is converted to an object as if by &lt;code&gt;new Number(7)&lt;/code&gt; and the string &lt;code&gt;'foo'&lt;/code&gt; to an object as if by &lt;code&gt;new String('foo')&lt;/code&gt;, e.g.</source>
          <target state="translated">와 있습니다 &lt;code&gt;call&lt;/code&gt; 및 &lt;code&gt;apply&lt;/code&gt; 으로 전달 된 값 경우, &lt;code&gt;this&lt;/code&gt; 객체가 아닌, 시도가 내부 사용하여 객체로 변환 될 것이다 &lt;code&gt;ToObject&lt;/code&gt; 의 작업을. 따라서 전달 된 값이 &lt;code&gt;7&lt;/code&gt; 또는 &lt;code&gt;'foo'&lt;/code&gt; 와 같은 프리미티브 인 경우 관련 생성자 를 사용하여 객체로 변환 되므로 프리미티브 번호 &lt;code&gt;7&lt;/code&gt; 은 마치 &lt;code&gt;new Number(7)&lt;/code&gt; 및 문자열 &lt;code&gt;'foo'&lt;/code&gt; 의해 객체로 변환됩니다. ' 객체에 것처럼하여 &lt;code&gt;new String('foo')&lt;/code&gt; , 예를 들어,</target>
        </trans-unit>
        <trans-unit id="1e11798a56f7d902796c89512fd574c784f0185e" translate="yes" xml:space="preserve">
          <source>Note that you cannot replace nor mimic the &lt;a href=&quot;../global_objects/object/assign&quot;&gt;&lt;code&gt;Object.assign()&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">&lt;a href=&quot;../global_objects/object/assign&quot;&gt; &lt;code&gt;Object.assign()&lt;/code&gt; &lt;/a&gt; 함수를 대체하거나 모방 할 수는 없습니다 .</target>
        </trans-unit>
        <trans-unit id="58b1d95de5e69173a0ec12721e1e9550a7781104" translate="yes" xml:space="preserve">
          <source>Note that you cannot replace or mimic the &lt;a href=&quot;../global_objects/object/assign&quot;&gt;&lt;code&gt;Object.assign()&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">&lt;a href=&quot;../global_objects/object/assign&quot;&gt; &lt;code&gt;Object.assign()&lt;/code&gt; &lt;/a&gt; 함수를 대체하거나 모방 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="ba9d79769c0b86e1d0db7b5a66f5a9b830616493" translate="yes" xml:space="preserve">
          <source>Note that you may want to avoid using &lt;strong&gt;&amp;plusmn;&lt;/strong&gt;&lt;code&gt;Infinity&lt;/code&gt; for stylistic reasons. In this case, &lt;a href=&quot;atan2&quot;&gt;&lt;code&gt;Math.atan2()&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;0&lt;/code&gt; as the second argument may be a better solution.</source>
          <target state="translated">스타일상의 이유로 &lt;strong&gt;&amp;plusmn; &lt;/strong&gt; &lt;code&gt;Infinity&lt;/code&gt; 를 사용하지 않는 것이 좋습니다 . 이 경우 두 번째 인수 로 &lt;code&gt;0&lt;/code&gt; 을 사용하는 &lt;a href=&quot;atan2&quot;&gt; &lt;code&gt;Math.atan2()&lt;/code&gt; &lt;/a&gt; 가 더 나은 솔루션 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6dc86a90d58eb45aafe7124321909cadee746d9d" translate="yes" xml:space="preserve">
          <source>Note that you need do nothing special to create a bound function for use with &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt;. The corollary is that you need do nothing special to create a bound function to be called plainly, even if you would rather require the bound function to only be called using &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; 와 함께 사용하기 위해 바인딩 된 함수를 만들려면 특별한 작업이 필요하지 않습니다 . 추론에 따르면 바인딩 된 함수를 &lt;a href=&quot;../../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; 만 사용하여 호출 해야하는 경우에도 바인드 된 함수를 작성하여 명확하게 호출 할 수있는 특별한 작업은 필요하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="dcc14038c04cd1ff864a607842150a1bac3ba232" translate="yes" xml:space="preserve">
          <source>Note that you need not do anything special to create a bound function for use with &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; 와 함께 사용할 바인딩 함수를 만들기 위해 특별한 작업을 수행 할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="b9a1be02ab592aa6d4b6efcd21b498ef87f17d20" translate="yes" xml:space="preserve">
          <source>Note that; as the standard three properties (&lt;code&gt;buf.byteLength&lt;/code&gt;, &lt;code&gt;buf.byteOffset&lt;/code&gt; and &lt;code&gt;buf.buffer&lt;/code&gt;) are read-only (as are those of an &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../sharedarraybuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt;), there is no reason for attempting to freeze these properties.</source>
          <target state="translated">참고하십시오; 표준 세 속성 ( &lt;code&gt;buf.byteLength&lt;/code&gt; , &lt;code&gt;buf.byteOffset&lt;/code&gt; 및 &lt;code&gt;buf.buffer&lt;/code&gt; )이 읽기 전용 &lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../sharedarraybuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; 의&lt;/a&gt; 속성과 같이) 이러한 속성을 고정하려고 시도 할 이유가 없습니다.</target>
        </trans-unit>
        <trans-unit id="bf18f531a356627607b3ae5f0d74f109c4ce0b59" translate="yes" xml:space="preserve">
          <source>Note the difference between &lt;a href=&quot;../../global_objects/function/length&quot;&gt;&lt;code&gt;Function.length&lt;/code&gt;&lt;/a&gt; and arguments.length</source>
          <target state="translated">&lt;a href=&quot;../../global_objects/function/length&quot;&gt; &lt;code&gt;Function.length&lt;/code&gt; &lt;/a&gt; 와 arguments.length 의 차이점에 유의하십시오.</target>
        </trans-unit>
        <trans-unit id="5a64f0f65552fba28f063a3c7b387028be7339d9" translate="yes" xml:space="preserve">
          <source>Note the examples below are throwing instances of &lt;a href=&quot;../error&quot;&gt;Error&lt;/a&gt;. This is considered good practice in contrast to throwing Strings; otherwise, the part doing the catching would have to perform checks to see if the argument was a string or an error, and you might lose valuable information like stack traces.</source>
          <target state="translated">아래의 예는 &lt;a href=&quot;../error&quot;&gt;Error&lt;/a&gt; 인스턴스를 던지는 것입니다 . 이것은 문자열 던지기와는 대조적으로 좋은 습관으로 간주됩니다. 그렇지 않으면 catch를 수행하는 부분이 인수가 문자열인지 오류인지 확인하기 위해 검사를 수행해야하며 스택 추적과 같은 중요한 정보를 잃을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="32f779296673bd826b5f982467ecc6fc8e838714" translate="yes" xml:space="preserve">
          <source>Note the following when working with the &lt;code&gt;get&lt;/code&gt; syntax:</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; 구문을 사용할 때 다음을 참고하십시오 .</target>
        </trans-unit>
        <trans-unit id="d7c82ee1fb75f8a1f3103fa9c5f488ea380a2bd9" translate="yes" xml:space="preserve">
          <source>Note the following when working with the &lt;code&gt;set&lt;/code&gt; syntax:</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; 구문으로 작업 할 때 다음을 참고하십시오 .</target>
        </trans-unit>
        <trans-unit id="8e06ac9a6781fead8358daed4f4bb9d8b3f5963f" translate="yes" xml:space="preserve">
          <source>Note the return value of &lt;code&gt;grow()&lt;/code&gt; here is the previous number of WebAssembly pages.</source>
          <target state="translated">&lt;code&gt;grow()&lt;/code&gt; 의 반환 값은 이전 웹 어셈블리 페이지 수입니다.</target>
        </trans-unit>
        <trans-unit id="fffc4e6e3d92d339a50005bad3373dd98f16741d" translate="yes" xml:space="preserve">
          <source>Note these limitations:</source>
          <target state="translated">다음 제한 사항에 유의하십시오.</target>
        </trans-unit>
        <trans-unit id="5e2eabf889063165d97f5283638f4f232c253bff" translate="yes" xml:space="preserve">
          <source>Note, however, that the &lt;code&gt;javascript:&lt;/code&gt; pseudo protocol is discouraged over other alternatives, such as unobtrusive event handlers.</source>
          <target state="translated">그러나 &lt;code&gt;javascript:&lt;/code&gt; 의사 프로토콜은 눈에 거슬리지 않는 이벤트 핸들러와 같은 다른 대안보다 권장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="463b97bdcb1b715a8841adeea0169a2a03b60b25" translate="yes" xml:space="preserve">
          <source>Note, however, that this is inefficient and should be avoided for large arrays: in each iteration, it creates a new temporary array that must be garbage-collected, and it copies elements from the current accumulator array into a new array instead of just adding the new elements to the existing array.</source>
          <target state="translated">그러나 이것은 비효율적이며 큰 배열의 경우 피해야합니다. 각 반복에서 가비지 수집해야하는 새 임시 배열을 만들고 단순히 추가하는 대신 현재 누산기 배열의 요소를 새 배열로 복사합니다. 새 요소를 기존 배열에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="bed6f54ef32d3e3c97c2eb581fa80a3a015e2ee9" translate="yes" xml:space="preserve">
          <source>Note: Do not place the regular expression literal (or &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; constructor) within the &lt;code&gt;while&lt;/code&gt; condition or it will create an infinite loop if there is a match due to the &lt;a href=&quot;lastindex&quot;&gt;&lt;code&gt;lastIndex&lt;/code&gt;&lt;/a&gt; property being reset upon each iteration. Also be sure that the global flag (&quot;&lt;code&gt;g&lt;/code&gt;&quot;) is set or an infinite loop will occur here also.</source>
          <target state="translated">참고 : &lt;code&gt;while&lt;/code&gt; 조건 내에 정규 표현식 리터럴 (또는 &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; 생성자)을 배치하지 마십시오. 그렇지 않으면 각 반복시 &lt;a href=&quot;lastindex&quot;&gt; &lt;code&gt;lastIndex&lt;/code&gt; &lt;/a&gt; 속성이 재설정 되어 일치하는 경우 무한 루프가 생성됩니다 . 또한 글로벌 플래그 ( &quot; &lt;code&gt;g&lt;/code&gt; &quot;)가 설정되어 있거나 무한 루프가 발생 하는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="80330d397f34d778dc60df3071979572a81912a6" translate="yes" xml:space="preserve">
          <source>Note: In Microsoft JScript, negative values of the &lt;code&gt;&lt;var&gt;start&lt;/var&gt;&lt;/code&gt; argument are not considered to refer to the end of the string.</source>
          <target state="translated">참고 : Microsoft JScript에서 &lt;code&gt;&lt;var&gt;start&lt;/var&gt;&lt;/code&gt; 인수 의 음수 값은 문자열의 끝을 참조하는 것으로 간주되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7019305dd8fa306744c48d9c794dc4dcabed5604" translate="yes" xml:space="preserve">
          <source>Note: In Microsoft JScript, negative values of the &lt;code&gt;start&lt;/code&gt; argument are not considered to refer to the end of the string.</source>
          <target state="translated">참고 : Microsoft JScript에서 &lt;code&gt;start&lt;/code&gt; 인수 의 음수 값은 문자열의 끝을 나타내는 것으로 간주되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a4b19f30c8d613546942b56c7e88bd6582193a4f" translate="yes" xml:space="preserve">
          <source>Note: Pay attention to the value returned by the API you're checking against. If an empty string is returned (a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;falsy&lt;/a&gt; value), &lt;code&gt;||=&lt;/code&gt; must be used, otherwise you want to use the &lt;code&gt;??=&lt;/code&gt; operator (for &lt;a href=&quot;../global_objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; return values).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59be927df9288b8c4077df258bf4f90d9389fd7c" translate="yes" xml:space="preserve">
          <source>Note: The length property is used to control the number of object properties to be added. In the above example, length:2 indicates two properties has to be added.</source>
          <target state="translated">참고 : length 속성은 추가 할 객체 속성 수를 제어하는 ​​데 사용됩니다. 위의 예에서 length : 2는 두 개의 속성을 추가해야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c0e231314f86b257739bc8c0ffa3b6fc321d7def" translate="yes" xml:space="preserve">
          <source>Note: The strict equality operator rather than the standard equality operator must be used here, because &lt;code&gt;x == undefined&lt;/code&gt; also checks whether &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, while strict equality doesn't. &lt;code&gt;null&lt;/code&gt; is not equivalent to &lt;code&gt;undefined&lt;/code&gt;. See &lt;a href=&quot;../operators/comparison_operators&quot;&gt;&lt;code&gt;comparison operators&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">참고 : &lt;code&gt;x == undefined&lt;/code&gt; 도 &lt;code&gt;x&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 인지 검사하는 반면, 엄격 항등이 아닌 경우 표준 항등 연산자가 아닌 완전 항등 연산자를 사용해야합니다 . &lt;code&gt;null&lt;/code&gt; 은 &lt;code&gt;undefined&lt;/code&gt; 와 동일하지 않습니다 . 자세한 내용은 &lt;a href=&quot;../operators/comparison_operators&quot;&gt; &lt;code&gt;comparison operators&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1d222f5ca458a923f2e5d9ceafd7edec2e087062" translate="yes" xml:space="preserve">
          <source>Note: Use the &lt;code&gt;break&lt;/code&gt; statement to stop a loop before condition evaluates to true.</source>
          <target state="translated">참고 : 조건이 참으로 평가되기 전에 루프를 중지 하려면 &lt;code&gt;break&lt;/code&gt; 문을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3f63fdf9aee50510728cc3d103d43f1c3dc7aeb1" translate="yes" xml:space="preserve">
          <source>Note: Use the break statement to stop a loop before condition evaluates to true.</source>
          <target state="translated">참고 : 조건이 true로 평가되기 전에 루프를 중지하려면 break 문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a3e682de38837cdda59be91fa55b9fef3c5c7ace" translate="yes" xml:space="preserve">
          <source>Note: if &lt;code&gt;this&lt;/code&gt; arg is passed to &lt;code&gt;call&lt;/code&gt;, &lt;code&gt;bind&lt;/code&gt;, or &lt;code&gt;apply&lt;/code&gt; on invocation of an arrow function it will be ignored. You can still prepend arguments to the call, but the first argument (&lt;code&gt;thisArg&lt;/code&gt;) should be set to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">참고 : &lt;code&gt;this&lt;/code&gt; 인수가 &lt;code&gt;call&lt;/code&gt; , &lt;code&gt;bind&lt;/code&gt; 또는 화살표 함수 호출에 &lt;code&gt;apply&lt;/code&gt; 되도록 전달 되면 무시됩니다. 여전히 호출 앞에 인수를 추가 할 수 있지만 첫 번째 인수 ( &lt;code&gt;thisArg&lt;/code&gt; )는 &lt;code&gt;null&lt;/code&gt; 로 설정되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="3d8f583703a30033891b7552420940f520ae84ad" translate="yes" xml:space="preserve">
          <source>Note: if this arg is passed to call, bind, or apply on invocation of an arrow function it will be ignored. You can still prepend arguments to the call, but the first argument (thisArg) should be set to null.</source>
          <target state="translated">참고 :이 arg가 화살표 함수 호출시 호출, 바인드 또는 적용을 위해 전달되면 무시됩니다. 호출에 인수를 추가 할 수 있지만 첫 번째 인수 (thisArg)는 null로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="b61f7ba07dc912d955061735265a29fafb0ae0a2" translate="yes" xml:space="preserve">
          <source>Note: that is two underscores, followed by the five characters &quot;proto&quot;, followed by two more underscores.</source>
          <target state="translated">참고 : 두 개의 밑줄, 그 뒤에 5 개의 문자 &quot;proto&quot;, 두 개의 밑줄이 있습니다.</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="61cc72431a9cac9878fc965eb401f0c478049851" translate="yes" xml:space="preserve">
          <source>Notes on WeakRefs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a21660da2d8acfab0ea902b31070a692f3efe57" translate="yes" xml:space="preserve">
          <source>Notes on cleanup callbacks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28495ab68819e01c03a4f6664aa021425bc63183" translate="yes" xml:space="preserve">
          <source>Nothing can be added to or removed from the properties set of a frozen object. Any attempt to do so will fail, either silently or by throwing a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception (most commonly, but not exclusively, when in &lt;a href=&quot;../../strict_mode&quot;&gt;strict mode&lt;/a&gt;).</source>
          <target state="translated">고정 된 객체의 속성 세트에는 추가하거나 제거 할 수 없습니다. 자동으로 또는 &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; 예외 (가장 일반적으로 &lt;a href=&quot;../../strict_mode&quot;&gt;엄격 모드&lt;/a&gt; 일 때는 배타적이지 않음)를 발생 시켜 실패 합니다 .</target>
        </trans-unit>
        <trans-unit id="b1634d2a1b6262f229bf5d427a4c97f24d9538c0" translate="yes" xml:space="preserve">
          <source>Notice how redefining &lt;code&gt;@@iterator&lt;/code&gt; affects the behavior of built-in constructs that use the iteration protocol:</source>
          <target state="translated">&lt;code&gt;@@iterator&lt;/code&gt; 재정의 하면 반복 프로토콜을 사용하는 내장 구문의 동작에 어떤 영향을 미치는지 살펴보십시오 .</target>
        </trans-unit>
        <trans-unit id="f7b7d30c834fda1d1ad1ad85f07081bd9751e93e" translate="yes" xml:space="preserve">
          <source>Notice, the output list length can be different from the input list length.</source>
          <target state="translated">출력 목록 길이는 입력 목록 길이와 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c519ba797a2d11469f812660290b10591ae7fe0" translate="yes" xml:space="preserve">
          <source>Notifies agents that are waiting on the specified index of the array. Returns the number of agents that were notified.</source>
          <target state="translated">지정된 어레이 인덱스에서 대기중인 에이전트에게 알립니다. 통지 된 에이전트 수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="1db14eb7136eab37e1baff1e1e7463bf44f5675f" translate="yes" xml:space="preserve">
          <source>Novice developers sometimes believe a leading zero prefix has no semantic meaning, so they use it as an alignment device &amp;mdash; but this changes the number's meaning! A leading zero syntax for the octals is rarely useful and can be mistakenly used, so strict mode makes it a syntax error:</source>
          <target state="translated">초보자 개발자는 선행 제로 접두사가 의미 적 의미가 없다고 생각하므로 정렬 장치로 사용하지만 숫자의 의미가 바뀝니다! 8 진의 선행 제로 구문은 거의 유용하지 않으며 실수로 사용될 수 있으므로 엄격 모드에서는 구문 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3e91724d9b2b90231f93b13497529b9cdc52c277" translate="yes" xml:space="preserve">
          <source>Now forbidden in strict mode.</source>
          <target state="translated">이제 엄격 모드에서는 금지되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="bdbc7887d3cf2b8aa0bd16aa3cc676dde57bb568" translate="yes" xml:space="preserve">
          <source>Now in order to create a complete sample &lt;code&gt;traps&lt;/code&gt; list, for didactic purposes, we will try to proxify a &lt;em&gt;non native&lt;/em&gt; object that is particularly suited to this type of operation: the &lt;code&gt;docCookies&lt;/code&gt; global object created by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie/Simple_document.cookie_framework&quot;&gt;the &quot;little framework&quot; published on the &lt;code&gt;document.cookie&lt;/code&gt; page&lt;/a&gt;.</source>
          <target state="translated">이제 완전한 샘플 &lt;code&gt;traps&lt;/code&gt; 목록 을 만들기 위해 교훈적인 목적 으로 이러한 유형의 작업에 특히 적합한 &lt;em&gt;기본&lt;/em&gt; 이 &lt;em&gt;아닌&lt;/em&gt; 객체, 즉 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie/Simple_document.cookie_framework&quot;&gt; &lt;code&gt;document.cookie&lt;/code&gt; &lt;/a&gt; 게시 된 &quot;작은 프레임 워크&quot;에 의해 생성 된 &lt;code&gt;docCookies&lt;/code&gt; 전역 객체를 프록시 화하려고 합니다. 쿠키 페이지 .</target>
        </trans-unit>
        <trans-unit id="499780ce25a6c7d79da33ad5519cc2508ece3145" translate="yes" xml:space="preserve">
          <source>Now in order to create a complete sample &lt;code&gt;traps&lt;/code&gt; list, for didactic purposes, we will try to proxify a &lt;em&gt;non-native&lt;/em&gt; object that is particularly suited to this type of operation: the &lt;code&gt;docCookies&lt;/code&gt; global object created by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie/Simple_document.cookie_framework&quot;&gt;the &quot;little framework&quot; published on the &lt;code&gt;document.cookie&lt;/code&gt; page&lt;/a&gt;.</source>
          <target state="translated">이제 완전한 샘플 &lt;code&gt;traps&lt;/code&gt; 목록 을 생성하기 위해, 교훈적인 목적 을 위해 이러한 유형의 작업에 특히 적합한 &lt;em&gt;비원시&lt;/em&gt; 객체 인 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie/Simple_document.cookie_framework&quot;&gt; &lt;code&gt;document.cookie&lt;/code&gt; &lt;/a&gt; 게시 된 &quot;작은 프레임 워크&quot;에 의해 생성 된 &lt;code&gt;docCookies&lt;/code&gt; 전역 객체를 프록시 화하려고 합니다. .cookie 페이지 .</target>
        </trans-unit>
        <trans-unit id="8e9241446816c453a6558bc4211f37412880a532" translate="yes" xml:space="preserve">
          <source>Now the information is available separately and it can be formatted and concatenated again in a customized way. For example by using &lt;a href=&quot;../../array/map&quot;&gt;&lt;code&gt;Array.prototype.map()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../functions/arrow_functions&quot;&gt;arrow functions&lt;/a&gt;, a &lt;a href=&quot;../../../statements/switch&quot;&gt;switch statement&lt;/a&gt;, &lt;a href=&quot;../../../template_literals&quot;&gt;template literals&lt;/a&gt;, and &lt;a href=&quot;../../array/join&quot;&gt;&lt;code&gt;Array.prototype.join()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d08a42f88026fbc709c47045675f53fb2d5405" translate="yes" xml:space="preserve">
          <source>Now the information is available separately and it can be formatted and concatenated again in a customized way. For example by using &lt;a href=&quot;../../array/map&quot;&gt;&lt;code&gt;Array.prototype.map()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../functions/arrow_functions&quot;&gt;arrow functions&lt;/a&gt;, a &lt;a href=&quot;../../../statements/switch&quot;&gt;switch statement&lt;/a&gt;, &lt;a href=&quot;../../../template_literals&quot;&gt;template literals&lt;/a&gt;, and &lt;a href=&quot;../../array/reduce&quot;&gt;&lt;code&gt;Array.prototype.reduce()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1046b504ee45cf74d531a73ea41f14236628eb9c" translate="yes" xml:space="preserve">
          <source>Now the information is available separately and it can be formatted and concatenated again in a customized way. For example by using &lt;a href=&quot;../array/map&quot;&gt;&lt;code&gt;Array.prototype.map()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../functions/arrow_functions&quot;&gt;arrow functions&lt;/a&gt;, a &lt;a href=&quot;../../statements/switch&quot;&gt;switch statement&lt;/a&gt;, &lt;a href=&quot;../../template_literals&quot;&gt;template literals&lt;/a&gt;, and &lt;a href=&quot;../array/reduce&quot;&gt;&lt;code&gt;Array.prototype.reduce()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이제 정보를 별도로 사용할 수 있으며 사용자 지정 방식으로 다시 포맷하고 연결할 수 있습니다. 예를 들어 &lt;a href=&quot;../array/map&quot;&gt; &lt;code&gt;Array.prototype.map()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../functions/arrow_functions&quot;&gt;화살표 함수&lt;/a&gt; , &lt;a href=&quot;../../statements/switch&quot;&gt;switch 문&lt;/a&gt; , &lt;a href=&quot;../../template_literals&quot;&gt;템플릿 리터럴&lt;/a&gt; 및 &lt;a href=&quot;../array/reduce&quot;&gt; &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="7da9e4b8116055ad1812e5cb870ec26ff4bdc68d" translate="yes" xml:space="preserve">
          <source>Now you can create an object called &lt;code&gt;myCar&lt;/code&gt; as follows:</source>
          <target state="translated">이제 다음과 같이 &lt;code&gt;myCar&lt;/code&gt; 라는 개체를 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="34e0936c9312e813910d1338db9bce48d6915dce" translate="yes" xml:space="preserve">
          <source>Now you can create an object called &lt;code&gt;mycar&lt;/code&gt; as follows:</source>
          <target state="translated">이제 다음과 같이 &lt;code&gt;mycar&lt;/code&gt; 라는 객체를 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3ae087c677d6251fe8192363403e8404ee076378" translate="yes" xml:space="preserve">
          <source>Now you can use a similar syntax in object literals, too:</source>
          <target state="translated">이제 객체 리터럴에서도 비슷한 구문을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="606e36eccd76bbe2df758a010c6e193c37180015" translate="yes" xml:space="preserve">
          <source>Now, if that routine cleanup must be done whether or not the try..catch code succeeds, then if the finally-block only executed after an exception, the same cleanup code would have to be duplicated both inside and outside the finally-block, and therefore there is no reason not to have just the finally-block alone, and let it execute regardless of exceptions or not.</source>
          <target state="translated">이제 try..catch 코드의 성공 여부에 관계없이 해당 루틴 정리를 수행해야하는 경우 finally 블록이 예외 후에 만 ​​실행 된 경우 동일한 정리 코드를 finally 블록 내부와 외부에서 복제해야합니다. 따라서 finally 블록 만 사용하지 말아야 할 이유가 없으며 예외에 관계없이 실행되도록하십시오.</target>
        </trans-unit>
        <trans-unit id="ab338422d77b974cdd3b4ff7b8a65a4a538a4354" translate="yes" xml:space="preserve">
          <source>Now, if we already caught the exception in the inner &lt;code&gt;try&lt;/code&gt;-block by adding a &lt;code&gt;catch&lt;/code&gt;-block</source>
          <target state="translated">이제 &lt;code&gt;catch&lt;/code&gt; -block 을 추가 하여 내부 &lt;code&gt;try&lt;/code&gt; -block 에서 이미 예외를 포착했다면</target>
        </trans-unit>
        <trans-unit id="4a129f496aefa48f086cde8c25668e91a4aaec6c" translate="yes" xml:space="preserve">
          <source>Now, if we already caught the exception in the inner try-block by adding a catch block</source>
          <target state="translated">이제 catch 블록을 추가하여 내부 try-block에서 이미 예외를 발견 한 경우</target>
        </trans-unit>
        <trans-unit id="1cd4efb00869a6583e4d94d1153eda91be69c20a" translate="yes" xml:space="preserve">
          <source>Now, with template literals, you are able to make use of the syntactic sugar making substitutions like this more readable:</source>
          <target state="translated">이제 템플릿 리터럴을 사용하면 다음과 같이 구문 설탕 대체를보다 쉽게 ​​읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d9821269410ed7e5514ed29203c7c695ba034942" translate="yes" xml:space="preserve">
          <source>Now, with template literals, you are able to make use of the syntactic sugar, making substitutions like this more readable:</source>
          <target state="translated">이제 템플릿 리터럴을 사용하여 구문 설탕을 사용하여 다음과 같은 대체를 더 읽기 쉽게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6a039d3bfa855f8b88cddb9a92ac8422a25f640" translate="yes" xml:space="preserve">
          <source>Now, with the help of &lt;code&gt;toStringTag&lt;/code&gt;, you are able to set your own custom tag:</source>
          <target state="translated">이제 &lt;code&gt;toStringTag&lt;/code&gt; 을 사용하여 사용자 정의 태그를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="109085beaaa80ac89858b283a64f7c75d7e5bb12" translate="yes" xml:space="preserve">
          <source>Null</source>
          <target state="translated">Null</target>
        </trans-unit>
        <trans-unit id="51dbbdfcaeb0bc923f99da3217f87d57a5db4195" translate="yes" xml:space="preserve">
          <source>Null and Undefined Types are strictly equal to themselves and abstractly equal to each other.</source>
          <target state="translated">널 및 정의되지 않은 유형은 서로 엄격하게 동일하며 추상적입니다.</target>
        </trans-unit>
        <trans-unit id="fb88bbb352121968a76119aae891370e37079ca8" translate="yes" xml:space="preserve">
          <source>Null literal</source>
          <target state="translated">널 리터럴</target>
        </trans-unit>
        <trans-unit id="e1017425089f8186fd1fb9d0842c9c0b0a64be85" translate="yes" xml:space="preserve">
          <source>Null literal (&lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">널 리터럴 ( &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="49e390b75cbd11be91a73837db7b62b143207382" translate="yes" xml:space="preserve">
          <source>Nullish</source>
          <target state="translated">Nullish</target>
        </trans-unit>
        <trans-unit id="a46a1d2e73eb2b08e65223a833ff29ec95718a3e" translate="yes" xml:space="preserve">
          <source>Nullish coalescing operator</source>
          <target state="translated">Nullish 통합 연산자</target>
        </trans-unit>
        <trans-unit id="51689d6bfca7c6c4263c251f06ea62450b2ee056" translate="yes" xml:space="preserve">
          <source>Nullish coalescing operator (&lt;code&gt;??&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7baa1d40c4ea29afc9098732bffee2a861a6c44" translate="yes" xml:space="preserve">
          <source>Number</source>
          <target state="translated">Number</target>
        </trans-unit>
        <trans-unit id="5f896a3d54e88cb7fe0791ee980ac282b357bc8e" translate="yes" xml:space="preserve">
          <source>Number cannot be parsed (e.g. &lt;code&gt;parseInt(&quot;blabla&quot;)&lt;/code&gt; or &lt;code&gt;Number(undefined)&lt;/code&gt;)</source>
          <target state="translated">숫자를 파싱 할 수 없습니다 (예 : &lt;code&gt;parseInt(&quot;blabla&quot;)&lt;/code&gt; 또는 &lt;code&gt;Number(undefined)&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="19abbe0550ddd7892de224af7d46e045794a2f6c" translate="yes" xml:space="preserve">
          <source>Number may also be expressed in literal forms like &lt;code&gt;0b101&lt;/code&gt;, &lt;code&gt;0o13&lt;/code&gt;, &lt;code&gt;0x0A&lt;/code&gt;. Learn more on numeric &lt;a href=&quot;../lexical_grammar#Numeric_literals&quot;&gt;lexical grammar here&lt;/a&gt;.</source>
          <target state="translated">숫자는 &lt;code&gt;0b101&lt;/code&gt; , &lt;code&gt;0o13&lt;/code&gt; 과 같은 리터럴 형식으로 표현 될 수도 있습니다 . &lt;code&gt;0x0A&lt;/code&gt; . &lt;a href=&quot;../lexical_grammar#Numeric_literals&quot;&gt;여기&lt;/a&gt; 에서 숫자 어휘 문법 에 대해 자세히 알아보세요 .</target>
        </trans-unit>
        <trans-unit id="0299a03b3b4d8f812d1482cd14cc56423e4f8067" translate="yes" xml:space="preserve">
          <source>Number to BigInt comparison</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe555faa7d43ca23c42b0ff63ac8097aacdba6e2" translate="yes" xml:space="preserve">
          <source>Number to Number comparison</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daaaab0ed146e3f5b5d1c5a736260a0eca5d551c" translate="yes" xml:space="preserve">
          <source>Number toLocaleString() override</source>
          <target state="translated">Number toLocaleString () 재정의</target>
        </trans-unit>
        <trans-unit id="d8454350ddcb351d51d54b3e07ea1396cc2236a8" translate="yes" xml:space="preserve">
          <source>Number type in details</source>
          <target state="translated">세부 사항의 숫자 유형</target>
        </trans-unit>
        <trans-unit id="a742d56a3657d392ca56fafb1e7213c945008c0c" translate="yes" xml:space="preserve">
          <source>Number.EPSILON</source>
          <target state="translated">Number.EPSILON</target>
        </trans-unit>
        <trans-unit id="dd8c6b3cdabbfc0c1023a1835d330ee2647ae4fa" translate="yes" xml:space="preserve">
          <source>Number.MAX_SAFE_INTEGER</source>
          <target state="translated">Number.MAX_SAFE_INTEGER</target>
        </trans-unit>
        <trans-unit id="b69c92491996ff2631ab08261f8ab5c41351a30a" translate="yes" xml:space="preserve">
          <source>Number.MAX_VALUE</source>
          <target state="translated">Number.MAX_VALUE</target>
        </trans-unit>
        <trans-unit id="e3ff4a0e20a3c8a223098515fd13f8baa5103124" translate="yes" xml:space="preserve">
          <source>Number.MIN_SAFE_INTEGER</source>
          <target state="translated">Number.MIN_SAFE_INTEGER</target>
        </trans-unit>
        <trans-unit id="cab6bc3e7f6688dcc3610cf7655d2a486226c9a4" translate="yes" xml:space="preserve">
          <source>Number.MIN_VALUE</source>
          <target state="translated">Number.MIN_VALUE</target>
        </trans-unit>
        <trans-unit id="5d85e9440a8e902f524d160f672c5b366bd582c9" translate="yes" xml:space="preserve">
          <source>Number.NEGATIVE_INFINITY</source>
          <target state="translated">Number.NEGATIVE_INFINITY</target>
        </trans-unit>
        <trans-unit id="c94b096286ba8ccde8f2d94366ed7e9c4f7d608f" translate="yes" xml:space="preserve">
          <source>Number.NaN</source>
          <target state="translated">Number.NaN</target>
        </trans-unit>
        <trans-unit id="8fa1bc0fbe58e183e54642a597f8933ca617cbf1" translate="yes" xml:space="preserve">
          <source>Number.POSITIVE_INFINITY</source>
          <target state="translated">Number.POSITIVE_INFINITY</target>
        </trans-unit>
        <trans-unit id="cd3914b79e15a9de66e2dd991838cde6e116af68" translate="yes" xml:space="preserve">
          <source>Number.isFinite</source>
          <target state="translated">Number.isFinite</target>
        </trans-unit>
        <trans-unit id="47766359cf44919a1a0c60c51ee53a9e89e8a648" translate="yes" xml:space="preserve">
          <source>Number.isInteger</source>
          <target state="translated">Number.isInteger</target>
        </trans-unit>
        <trans-unit id="97ad380a07aa2db9d0064d03e18b75e4a37a0a78" translate="yes" xml:space="preserve">
          <source>Number.isNaN</source>
          <target state="translated">Number.isNaN</target>
        </trans-unit>
        <trans-unit id="9921c82f3f8d9e25de131b1ba4179f4fd8a19470" translate="yes" xml:space="preserve">
          <source>Number.isSafeInteger</source>
          <target state="translated">Number.isSafeInteger</target>
        </trans-unit>
        <trans-unit id="79f41cb9371e518331dd99f02741147c0975bc87" translate="yes" xml:space="preserve">
          <source>Number.number</source>
          <target state="translated">Number.number</target>
        </trans-unit>
        <trans-unit id="874c8f7be2ec578126ecc2d641a856b6d3230955" translate="yes" xml:space="preserve">
          <source>Number.parseFloat</source>
          <target state="translated">Number.parseFloat</target>
        </trans-unit>
        <trans-unit id="2b39b699c42aea1102ca0aea3379b92453f9b53f" translate="yes" xml:space="preserve">
          <source>Number.parseFloat vs parseFloat</source>
          <target state="translated">Number.parseFloat 대 parseFloat</target>
        </trans-unit>
        <trans-unit id="fb59e71f3e9dbed68980384436b2bd9c5c504755" translate="yes" xml:space="preserve">
          <source>Number.parseInt</source>
          <target state="translated">Number.parseInt</target>
        </trans-unit>
        <trans-unit id="862eb2506cb824b0e5067d40e18aa2a83be8513d" translate="yes" xml:space="preserve">
          <source>Number.parseInt vs parseInt</source>
          <target state="translated">Number.parseInt 대 parseInt</target>
        </trans-unit>
        <trans-unit id="a6beedb203ce189253108e519d9882e5d498273e" translate="yes" xml:space="preserve">
          <source>Number.prototype</source>
          <target state="translated">Number.prototype</target>
        </trans-unit>
        <trans-unit id="1c49e1c6908b9458de4309defb92f447bf294075" translate="yes" xml:space="preserve">
          <source>Numbering System. Possible values include: &quot;&lt;code&gt;arab&lt;/code&gt;&quot;, &quot;&lt;code&gt;arabext&lt;/code&gt;&quot;, &quot; &lt;code&gt;bali&lt;/code&gt;&quot;, &quot;&lt;code&gt;beng&lt;/code&gt;&quot;, &quot;&lt;code&gt;deva&lt;/code&gt;&quot;, &quot;&lt;code&gt;fullwide&lt;/code&gt;&quot;, &quot; &lt;code&gt;gujr&lt;/code&gt;&quot;, &quot;&lt;code&gt;guru&lt;/code&gt;&quot;, &quot;&lt;code&gt;hanidec&lt;/code&gt;&quot;, &quot;&lt;code&gt;khmr&lt;/code&gt;&quot;, &quot; &lt;code&gt;knda&lt;/code&gt;&quot;, &quot;&lt;code&gt;laoo&lt;/code&gt;&quot;, &quot;&lt;code&gt;latn&lt;/code&gt;&quot;, &quot;&lt;code&gt;limb&lt;/code&gt;&quot;, &quot;&lt;code&gt;mlym&lt;/code&gt;&quot;, &quot; &lt;code&gt;mong&lt;/code&gt;&quot;, &quot;&lt;code&gt;mymr&lt;/code&gt;&quot;, &quot;&lt;code&gt;orya&lt;/code&gt;&quot;, &quot;&lt;code&gt;tamldec&lt;/code&gt;&quot;, &quot; &lt;code&gt;telu&lt;/code&gt;&quot;, &quot;&lt;code&gt;thai&lt;/code&gt;&quot;, &quot;&lt;code&gt;tibt&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="118a65626daf9f0ac11b4d27263b639917685cd8" translate="yes" xml:space="preserve">
          <source>Numbering system. Possible values include: &quot;&lt;code&gt;arab&lt;/code&gt;&quot;, &quot;&lt;code&gt;arabext&lt;/code&gt;&quot;, &quot;&lt;code&gt;bali&lt;/code&gt;&quot;, &quot;&lt;code&gt;beng&lt;/code&gt;&quot;, &quot;&lt;code&gt;deva&lt;/code&gt;&quot;, &quot;&lt;code&gt;fullwide&lt;/code&gt;&quot;, &quot;&lt;code&gt;gujr&lt;/code&gt;&quot;, &quot;&lt;code&gt;guru&lt;/code&gt;&quot;, &quot;&lt;code&gt;hanidec&lt;/code&gt;&quot;, &quot;&lt;code&gt;khmr&lt;/code&gt;&quot;, &quot;&lt;code&gt;knda&lt;/code&gt;&quot;, &quot;&lt;code&gt;laoo&lt;/code&gt;&quot;, &quot;&lt;code&gt;latn&lt;/code&gt;&quot;, &quot;&lt;code&gt;limb&lt;/code&gt;&quot;, &quot;&lt;code&gt;mlym&lt;/code&gt;&quot;, &quot;&lt;code&gt;mong&lt;/code&gt;&quot;, &quot;&lt;code&gt;mymr&lt;/code&gt;&quot;, &quot;&lt;code&gt;orya&lt;/code&gt;&quot;, &quot;&lt;code&gt;tamldec&lt;/code&gt;&quot;, &quot;&lt;code&gt;telu&lt;/code&gt;&quot;, &quot;&lt;code&gt;thai&lt;/code&gt;&quot;, &quot;&lt;code&gt;tibt&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dce729c1f239758111a59ec56807f133c5161db" translate="yes" xml:space="preserve">
          <source>Numbering system. Possible values include: &lt;code&gt;&quot;arab&quot;&lt;/code&gt;, &lt;code&gt;&quot;arabext&quot;&lt;/code&gt;, &lt;code&gt;&quot;bali&quot;&lt;/code&gt;, &lt;code&gt;&quot;beng&quot;&lt;/code&gt;, &lt;code&gt;&quot;deva&quot;&lt;/code&gt;, &lt;code&gt;&quot;fullwide&quot;&lt;/code&gt;, &lt;code&gt;&quot;gujr&quot;&lt;/code&gt;, &lt;code&gt;&quot;guru&quot;&lt;/code&gt;, &lt;code&gt;&quot;hanidec&quot;&lt;/code&gt;, &lt;code&gt;&quot;khmr&quot;&lt;/code&gt;, &lt;code&gt;&quot;knda&quot;&lt;/code&gt;, &lt;code&gt;&quot;laoo&quot;&lt;/code&gt;, &lt;code&gt;&quot;latn&quot;&lt;/code&gt;, &lt;code&gt;&quot;limb&quot;&lt;/code&gt;, &lt;code&gt;&quot;mlym&quot;&lt;/code&gt;, &lt;code&gt;&quot;mong&quot;&lt;/code&gt;, &lt;code&gt;&quot;mymr&quot;&lt;/code&gt;, &lt;code&gt;&quot;orya&quot;&lt;/code&gt;, &lt;code&gt;&quot;tamldec&quot;&lt;/code&gt;, &lt;code&gt;&quot;telu&quot;&lt;/code&gt;, &lt;code&gt;&quot;thai&quot;&lt;/code&gt;, &lt;code&gt;&quot;tibt&quot;&lt;/code&gt;.</source>
          <target state="translated">넘버링 시스템. 가능한 값은 &lt;code&gt;&quot;arab&quot;&lt;/code&gt; , &lt;code&gt;&quot;arabext&quot;&lt;/code&gt; , &lt;code&gt;&quot;bali&quot;&lt;/code&gt; , &lt;code&gt;&quot;beng&quot;&lt;/code&gt; , &lt;code&gt;&quot;deva&quot;&lt;/code&gt; , &lt;code&gt;&quot;fullwide&quot;&lt;/code&gt; , &lt;code&gt;&quot;gujr&quot;&lt;/code&gt; , &lt;code&gt;&quot;guru&quot;&lt;/code&gt; , &lt;code&gt;&quot;hanidec&quot;&lt;/code&gt; , &lt;code&gt;&quot;khmr&quot;&lt;/code&gt; , &lt;code&gt;&quot;knda&quot;&lt;/code&gt; , &lt;code&gt;&quot;laoo&quot;&lt;/code&gt; , &lt;code&gt;&quot;latn&quot;&lt;/code&gt; , &lt;code&gt;&quot;limb&quot;&lt;/code&gt; , &lt;code&gt;&quot;mlym&quot;&lt;/code&gt; , &lt;code&gt;&quot;mong&quot;&lt;/code&gt; , &lt;code&gt;&quot;mymr&quot;&lt;/code&gt; , &lt;code&gt;&quot;orya&quot;&lt;/code&gt; , &lt;code&gt;&quot;tamldec&quot;&lt;/code&gt; , &lt;code&gt;&quot;telu&quot;&lt;/code&gt; , &lt;code&gt;&quot;thai&quot;&lt;/code&gt; , &lt;code&gt;&quot;tibt&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9477a3d0b53ef2250d73c4d9f4e068bd96145eaa" translate="yes" xml:space="preserve">
          <source>Numbers &amp;amp; dates</source>
          <target state="translated">숫자 및 날짜</target>
        </trans-unit>
        <trans-unit id="24556b28394d712542c87fdae09eb7a61ea85bba" translate="yes" xml:space="preserve">
          <source>Numbers and dates</source>
          <target state="translated">숫자와 날짜</target>
        </trans-unit>
        <trans-unit id="d508ec23bfb6d2202daf05991aab90be56a49da5" translate="yes" xml:space="preserve">
          <source>Numbers higher than safe integer</source>
          <target state="translated">안전한 정수보다 큰 숫자</target>
        </trans-unit>
        <trans-unit id="0b3893ddc7c1e4beba928bd98320d0790b6b7cb2" translate="yes" xml:space="preserve">
          <source>Numbers must have the same numeric values. &lt;code&gt;+0&lt;/code&gt; and &lt;code&gt;-0&lt;/code&gt; are considered to be the same value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f16fdfbff67b1070daadaa1d5eb06dfdf29dbc55" translate="yes" xml:space="preserve">
          <source>Numbers.</source>
          <target state="translated">Numbers.</target>
        </trans-unit>
        <trans-unit id="defa0910127194b12e8708cc81b0275f0f804d44" translate="yes" xml:space="preserve">
          <source>Numeric addition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b8cea5176301854bb33d1c73f8b7e0714b960e" translate="yes" xml:space="preserve">
          <source>Numeric literals</source>
          <target state="translated">숫자 리터럴</target>
        </trans-unit>
        <trans-unit id="830f0ed9d3be32844d496bfeb9d33c2f9dea7d6a" translate="yes" xml:space="preserve">
          <source>Numeric separators</source>
          <target state="translated">숫자 분리기</target>
        </trans-unit>
        <trans-unit id="8e7b8e180f16368b046acb8dba195a21c9921fa9" translate="yes" xml:space="preserve">
          <source>Numeric separators (&lt;code&gt;1_000_000_000_000&lt;/code&gt;)</source>
          <target state="translated">숫자 구분 기호 ( &lt;code&gt;1_000_000_000_000&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="70d17be49253c52c6b6999c4fef039cfe8fc766b" translate="yes" xml:space="preserve">
          <source>Numeric sorting</source>
          <target state="translated">숫자 정렬</target>
        </trans-unit>
        <trans-unit id="83ec7520c5d329f847fc0ab64c45c1b0ea637423" translate="yes" xml:space="preserve">
          <source>Numeric value to use in the internationalized relative time message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5685cddb5db04d9630dfb92ae03ed9d7fa984d1a" translate="yes" xml:space="preserve">
          <source>Nyiakeng Puachue Hmong digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72f3f36d65608cf6814ea50affc22ea1982ba35" translate="yes" xml:space="preserve">
          <source>OK, that fixed my problem. But why didn't you say that in the first place?</source>
          <target state="translated">좋아, 그게 내 문제를 해결했다. 그런데 왜 처음에 그렇게 말하지 않았습니까?</target>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Object</target>
        </trans-unit>
        <trans-unit id="a7dc9622d9872b2041ea4b92f628450cd8b88097" translate="yes" xml:space="preserve">
          <source>Object destructuring</source>
          <target state="translated">객체 파괴</target>
        </trans-unit>
        <trans-unit id="2c2cbbc826c5bb597345c055833162ff9ebaf074" translate="yes" xml:space="preserve">
          <source>Object for which the properties are iterated.</source>
          <target state="translated">속성이 반복되는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="909840cb3e63a76efd9b286f78f024720d816a0e" translate="yes" xml:space="preserve">
          <source>Object initializer</source>
          <target state="translated">객체 이니셜 라이저</target>
        </trans-unit>
        <trans-unit id="1a5080520c7e015789b1f08a193be7964d2f2eb9" translate="yes" xml:space="preserve">
          <source>Object initializer/literal syntax.</source>
          <target state="translated">객체 이니셜 라이저 / 리터럴 구문.</target>
        </trans-unit>
        <trans-unit id="9b5e4c69ef604ed340a3861fd63df244ae0948cb" translate="yes" xml:space="preserve">
          <source>Object iteration</source>
          <target state="translated">객체 반복</target>
        </trans-unit>
        <trans-unit id="5ac6e63785bb63178fb4269cb3e1f1fbf1db7783" translate="yes" xml:space="preserve">
          <source>Object literal notation vs JSON</source>
          <target state="translated">객체 리터럴 표기법 대 JSON</target>
        </trans-unit>
        <trans-unit id="d42c3ad7cb75bb53ff9e8f6d1fa2aa0f08b3c271" translate="yes" xml:space="preserve">
          <source>Object literals</source>
          <target state="translated">객체 리터럴</target>
        </trans-unit>
        <trans-unit id="09dd9201d82ff1751e0474427ce645d44cd6061f" translate="yes" xml:space="preserve">
          <source>Object methods</source>
          <target state="translated">객체 메소드</target>
        </trans-unit>
        <trans-unit id="0c205ccc6a785cecb0e5f75020370d4618313ccb" translate="yes" xml:space="preserve">
          <source>Object property that is itself another object</source>
          <target state="translated">다른 객체 인 객체 속성</target>
        </trans-unit>
        <trans-unit id="e5c83d23c16df6f4ac11ed77d3195e8b1242b6b7" translate="yes" xml:space="preserve">
          <source>Object prototypes</source>
          <target state="translated">개체 프로토 타입</target>
        </trans-unit>
        <trans-unit id="cea32dd4664b3208132e8994e560ecbc21885560" translate="yes" xml:space="preserve">
          <source>Object references (and not the actual object): &lt;code&gt;concat&lt;/code&gt; copies object references into the new array. Both the original and new array refer to the same object. That is, if a referenced object is modified, the changes are visible to both the new and original arrays. This includes elements of array arguments that are also arrays.</source>
          <target state="translated">객체 참조 (실제 객체는 아님) : &lt;code&gt;concat&lt;/code&gt; 은 객체 참조를 새 배열로 복사합니다. 원래 배열과 새 배열은 모두 동일한 객체를 나타냅니다. 즉, 참조 된 개체가 수정되면 변경 사항이 새 배열과 원래 배열 모두에 표시됩니다. 여기에는 배열이기도 한 배열 인수의 요소가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="26a2d35f48fdf3ea0ac3bdf6bea4fdfce21b28f0" translate="yes" xml:space="preserve">
          <source>Object to check if it (or its prototype chain) &lt;span id=&quot;result_box&quot;&gt;contains&lt;/span&gt; the property with specified name (&lt;code&gt;&lt;var&gt;prop&lt;/var&gt;&lt;/code&gt;).</source>
          <target state="translated">그것은 (또는 프로토 타입 체인)의 경우 개체 확인 &lt;span id=&quot;result_box&quot;&gt;이 포함&lt;/span&gt; 지정된 이름 (과 속성을 &lt;code&gt;&lt;var&gt;prop&lt;/var&gt;&lt;/code&gt; ) 입니다.</target>
        </trans-unit>
        <trans-unit id="e82aec661987c4a687474ba3a8888549f534cfa5" translate="yes" xml:space="preserve">
          <source>Object to check if it (or its prototype chain) &lt;span id=&quot;result_box&quot;&gt;contains&lt;/span&gt; the property with specified name.</source>
          <target state="translated">지정된 이름의 속성이 &lt;span id=&quot;result_box&quot;&gt;포함되어&lt;/span&gt; 있는지 확인하는 개체 입니다.</target>
        </trans-unit>
        <trans-unit id="6bd33cf8966b77b5f83bd225f90d45d5c8623879" translate="yes" xml:space="preserve">
          <source>Object to use as &lt;a href=&quot;../../operators/this&quot;&gt;&lt;code&gt;this&lt;/code&gt;&lt;/a&gt; inside &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">개체로 사용 &lt;a href=&quot;../../operators/this&quot;&gt; &lt;code&gt;this&lt;/code&gt; &lt;/a&gt; 내부 &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7207b7c2509b68556068ac7fd883f789d1472a6d" translate="yes" xml:space="preserve">
          <source>Object to use as &lt;code&gt;this&lt;/code&gt; when executing &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="translated">로 사용할 오브젝트 &lt;code&gt;this&lt;/code&gt; 실행할 때 &lt;code&gt;callback&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a91b9c6600e3da12d78e6ed9278ab68d6ba82947" translate="yes" xml:space="preserve">
          <source>Object to use as the first argument to the first call of the &lt;code&gt;callback&lt;/code&gt;. If no initial value is supplied, the last element in the array will be used. Calling reduce on an empty array without an initial value is an error.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 의 첫 번째 호출에 대한 첫 번째 인수로 사용할 객체 입니다. 초기 값이 제공되지 않으면 배열의 마지막 요소가 사용됩니다. 초기 값없이 빈 배열에서 축소를 호출하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a79ef1be7c6b1571f5ba3ec1cb78bb0f4ac52a48" translate="yes" xml:space="preserve">
          <source>Object transformations</source>
          <target state="translated">객체 변환</target>
        </trans-unit>
        <trans-unit id="539434478ab81454acee100589f581a17aa3637e" translate="yes" xml:space="preserve">
          <source>Object type and object instance</source>
          <target state="translated">객체 유형 및 객체 인스턴스</target>
        </trans-unit>
        <trans-unit id="c57b5d877d979747255a4b2533bf17dd38044ec4" translate="yes" xml:space="preserve">
          <source>Object which the proxy virtualizes. It is often used as storage backend for the proxy. Invariants (semantics that remain unchanged) regarding object non-extensibility or non-configurable properties are verified against the target.</source>
          <target state="translated">프록시가 가상화하는 객체입니다. 프록시의 스토리지 백엔드로 자주 사용됩니다. 객체 비 확장 성 또는 구성 할 수없는 속성에 관한 변이 (변경되지 않은 의미)는 대상에 대해 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="5c93e1d1a5157c01dcc014f79b1d1295cf5d2a82" translate="yes" xml:space="preserve">
          <source>Object whose iterable properties are iterated.</source>
          <target state="translated">반복 가능한 속성이 반복되는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="9c2fce95f2ceb371a5969a100525ae6c686da465" translate="yes" xml:space="preserve">
          <source>Object whose iterable properties are to be iterated over.</source>
          <target state="translated">반복 가능한 속성이 반복되는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="d820fa59638feca2d1e7ce5b67237fb602afbd8c" translate="yes" xml:space="preserve">
          <source>Object whose non-Symbol enumerable properties are iterated over.</source>
          <target state="translated">심볼이 아닌 열거 가능 속성이 반복되는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="1d51672345557c0f022fd737f9b7489d16b30459" translate="yes" xml:space="preserve">
          <source>Object.assign</source>
          <target state="translated">Object.assign</target>
        </trans-unit>
        <trans-unit id="afeac9832f20f4f960fcbf8efdf9a36bb14b252d" translate="yes" xml:space="preserve">
          <source>Object.create</source>
          <target state="translated">Object.create</target>
        </trans-unit>
        <trans-unit id="792a27c424ad52e5a9356f3722643e927041e20f" translate="yes" xml:space="preserve">
          <source>Object.defineProperties</source>
          <target state="translated">Object.defineProperties</target>
        </trans-unit>
        <trans-unit id="1787236ef0de7cdd99f6661cc7e12ed0cad67a57" translate="yes" xml:space="preserve">
          <source>Object.defineProperty</source>
          <target state="translated">Object.defineProperty</target>
        </trans-unit>
        <trans-unit id="23657d35b7978a1ef599d76ac96dd819a05b63f1" translate="yes" xml:space="preserve">
          <source>Object.entries</source>
          <target state="translated">Object.entries</target>
        </trans-unit>
        <trans-unit id="11300a686cd7515f24159128678600c710b75b7d" translate="yes" xml:space="preserve">
          <source>Object.freeze</source>
          <target state="translated">Object.freeze</target>
        </trans-unit>
        <trans-unit id="8bdb894c2c9b7aab893887fee7ffbe717c0a3088" translate="yes" xml:space="preserve">
          <source>Object.fromEntries</source>
          <target state="translated">Object.fromEntries</target>
        </trans-unit>
        <trans-unit id="c4498f87db08d462e0147a43191926ac2168042c" translate="yes" xml:space="preserve">
          <source>Object.getOwnPropertyDescriptor</source>
          <target state="translated">Object.getOwnPropertyDescriptor</target>
        </trans-unit>
        <trans-unit id="807e7ea84c59e8904c697c58f447e5ecc35d7f6d" translate="yes" xml:space="preserve">
          <source>Object.getOwnPropertyDescriptors</source>
          <target state="translated">Object.getOwnPropertyDescriptors</target>
        </trans-unit>
        <trans-unit id="a37c98a6f5f7ca5863f83538b43a1b90ce0f8d42" translate="yes" xml:space="preserve">
          <source>Object.getOwnPropertyNames</source>
          <target state="translated">Object.getOwnPropertyNames</target>
        </trans-unit>
        <trans-unit id="1061044277b2b1b91a3ad9fd72b96a926df8e0ad" translate="yes" xml:space="preserve">
          <source>Object.getOwnPropertySymbols</source>
          <target state="translated">Object.getOwnPropertySymbols</target>
        </trans-unit>
        <trans-unit id="11a92c8196539fdab3857b1551dea0f331c775a8" translate="yes" xml:space="preserve">
          <source>Object.getPrototypeOf</source>
          <target state="translated">Object.getPrototypeOf</target>
        </trans-unit>
        <trans-unit id="984b87d74b780b8037e041c89fdb3b9ea8b428c1" translate="yes" xml:space="preserve">
          <source>Object.is</source>
          <target state="translated">Object.is</target>
        </trans-unit>
        <trans-unit id="3e331a82ef535f984ef9183956b7286a203567e2" translate="yes" xml:space="preserve">
          <source>Object.isExtensible</source>
          <target state="translated">Object.isExtensible</target>
        </trans-unit>
        <trans-unit id="5d740eafae2d7f4c23753871edf8da6baf39e321" translate="yes" xml:space="preserve">
          <source>Object.isFrozen</source>
          <target state="translated">Object.isFrozen</target>
        </trans-unit>
        <trans-unit id="401b9e2d171902ba97c10b15298ed41024d439e5" translate="yes" xml:space="preserve">
          <source>Object.isSealed</source>
          <target state="translated">Object.isSealed</target>
        </trans-unit>
        <trans-unit id="c5a933e00dc39b7be5f3039f9caf7a7ff8b476c8" translate="yes" xml:space="preserve">
          <source>Object.keys</source>
          <target state="translated">Object.keys</target>
        </trans-unit>
        <trans-unit id="f2cc9f1af3545fed1e08e2dbd4a499c01eb1fe5f" translate="yes" xml:space="preserve">
          <source>Object.object</source>
          <target state="translated">Object.object</target>
        </trans-unit>
        <trans-unit id="c5ae9d62247de99530000c1b502d54c119c0d70a" translate="yes" xml:space="preserve">
          <source>Object.preventExtensions</source>
          <target state="translated">Object.preventExtensions</target>
        </trans-unit>
        <trans-unit id="184a9f46e6f8df1d301d8b176559956340a32e13" translate="yes" xml:space="preserve">
          <source>Object.proto</source>
          <target state="translated">Object.proto</target>
        </trans-unit>
        <trans-unit id="e361988f8a29677e37e2253ff4367ab335d2d805" translate="yes" xml:space="preserve">
          <source>Object.prototype</source>
          <target state="translated">Object.prototype</target>
        </trans-unit>
        <trans-unit id="2be0f5b5be7ab78df495b765e0cf5fa3e658f896" translate="yes" xml:space="preserve">
          <source>Object.prototype.constructor</source>
          <target state="translated">Object.prototype.constructor</target>
        </trans-unit>
        <trans-unit id="21670eec92055706400650389c6e16301b7d4ab7" translate="yes" xml:space="preserve">
          <source>Object.seal</source>
          <target state="translated">Object.seal</target>
        </trans-unit>
        <trans-unit id="55f5999ac0dfe119c304a066eeb503b47cf1fa90" translate="yes" xml:space="preserve">
          <source>Object.setPrototypeOf</source>
          <target state="translated">Object.setPrototypeOf</target>
        </trans-unit>
        <trans-unit id="cbb16b7daf317d430c04b08c1bf4811c56181f3a" translate="yes" xml:space="preserve">
          <source>Object.values</source>
          <target state="translated">Object.values</target>
        </trans-unit>
        <trans-unit id="72a83add2c5ede877c10d23f302d3e17accbadab" translate="yes" xml:space="preserve">
          <source>Objects</source>
          <target state="translated">Objects</target>
        </trans-unit>
        <trans-unit id="c63ede0fd2f8ab23693436f3ea422a8f9968a84e" translate="yes" xml:space="preserve">
          <source>Objects and maps compared</source>
          <target state="translated">객체와 맵 비교</target>
        </trans-unit>
        <trans-unit id="68742af0b22b6e7f22112c6f31f5760699c2f283" translate="yes" xml:space="preserve">
          <source>Objects are extensible by default: they can have new properties added to them, and (in engines that support &lt;a href=&quot;proto&quot;&gt;&lt;code&gt;__proto__&lt;/code&gt;&lt;/a&gt;  their __proto__ property) can be modified. An object can be marked as non-extensible using &lt;a href=&quot;preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;seal&quot;&gt;&lt;code&gt;Object.seal()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;freeze&quot;&gt;&lt;code&gt;Object.freeze()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">객체는 기본적으로 확장 가능 : 그들은 (지원하는 엔진에서 그들에 추가 된 새 특성을 가지고 있고, 수 &lt;a href=&quot;proto&quot;&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;/a&gt; 수정할 수 있습니다 자신의 __proto__ 속성). &lt;a href=&quot;preventextensions&quot;&gt; &lt;code&gt;Object.preventExtensions()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;seal&quot;&gt; &lt;code&gt;Object.seal()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;freeze&quot;&gt; &lt;code&gt;Object.freeze()&lt;/code&gt; &lt;/a&gt; 사용하여 객체를 확장 불가능으로 표시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f58bdefefec140013b14693c1564450924226747" translate="yes" xml:space="preserve">
          <source>Objects are extensible by default: they can have new properties added to them, and (in engines that support &lt;a href=&quot;proto&quot;&gt;&lt;code&gt;__proto__&lt;/code&gt;&lt;/a&gt;) their &lt;code&gt;__proto__&lt;/code&gt; property can be modified. An object can be marked as non-extensible using &lt;a href=&quot;preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;seal&quot;&gt;&lt;code&gt;Object.seal()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;freeze&quot;&gt;&lt;code&gt;Object.freeze()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">객체는 기본적으로 확장 가능합니다. 새 속성을 추가 할 수 있으며 ( &lt;a href=&quot;proto&quot;&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;/a&gt; 를 지원하는 엔진에서 ) &lt;code&gt;__proto__&lt;/code&gt; 속성을 수정할 수 있습니다. &lt;a href=&quot;preventextensions&quot;&gt; &lt;code&gt;Object.preventExtensions()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;seal&quot;&gt; &lt;code&gt;Object.seal()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;freeze&quot;&gt; &lt;code&gt;Object.freeze()&lt;/code&gt; &lt;/a&gt; 사용하여 객체를 확장 불가능으로 표시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b044a3aff72fdad9c2206d29b8b5f7c8c3486301" translate="yes" xml:space="preserve">
          <source>Objects can be initialized using &lt;a href=&quot;../global_objects/object&quot;&gt;&lt;code&gt;new Object()&lt;/code&gt;&lt;/a&gt;,&lt;code&gt; &lt;a href=&quot;../global_objects/object/create&quot;&gt;Object.create()&lt;/a&gt;&lt;/code&gt;, or using the &lt;em&gt;literal&lt;/em&gt; notation (&lt;em&gt;initializer&lt;/em&gt; notation). An object initializer is a comma-delimited list of zero or more pairs of property names and associated values of an object, enclosed in curly braces (&lt;code&gt;{}&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;../global_objects/object&quot;&gt; &lt;code&gt;new Object()&lt;/code&gt; &lt;/a&gt; , &lt;code&gt; &lt;a href=&quot;../global_objects/object/create&quot;&gt;Object.create()&lt;/a&gt;&lt;/code&gt; 또는 &lt;em&gt;리터럴&lt;/em&gt; 표기법 ( &lt;em&gt;initializer&lt;/em&gt; notation)을 사용하여 객체를 초기화 할 수 있습니다 . 오브젝트 이니셜 라이저는 중괄호 ( &lt;code&gt;{}&lt;/code&gt; )로 묶은 쉼표로 구분 된 0 개 이상의 특성 이름 쌍 및 오브젝트의 연관된 값으로 구성된 목록입니다 . &lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="abf8ac5ef48d5ee159fe510a0970535582e07fe9" translate="yes" xml:space="preserve">
          <source>Objects can be initialized using &lt;a href=&quot;../global_objects/object/object&quot;&gt;&lt;code&gt;new Object()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;&lt;a href=&quot;../global_objects/object/create&quot;&gt;Object.create()&lt;/a&gt;&lt;/code&gt;, or using the &lt;em&gt;literal&lt;/em&gt; notation (&lt;em&gt;initializer&lt;/em&gt; notation). An object initializer is a comma-delimited list of zero or more pairs of property names and associated values of an object, enclosed in curly braces (&lt;code&gt;{}&lt;/code&gt;).</source>
          <target state="translated">Objects can be initialized using &lt;a href=&quot;../global_objects/object/object&quot;&gt; &lt;code&gt;new Object()&lt;/code&gt; &lt;/a&gt;, &lt;code&gt;&lt;a href=&quot;../global_objects/object/create&quot;&gt;Object.create()&lt;/a&gt;&lt;/code&gt; , or using the &lt;em&gt;literal&lt;/em&gt; notation (&lt;em&gt;initializer&lt;/em&gt; notation). An object initializer is a comma-delimited list of zero or more pairs of property names and associated values of an object, enclosed in curly braces ( &lt;code&gt;{}&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="aa26dfa5a9bb1b6c3980956f02a24cbbf2def923" translate="yes" xml:space="preserve">
          <source>Objects can be sorted given the value of one of their properties.</source>
          <target state="translated">속성 중 하나의 값이 주어지면 개체를 정렬 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="00c4b53bfcdfc997ada5dff96857873175ec7749" translate="yes" xml:space="preserve">
          <source>Objects can be sorted, given the value of one of their properties.</source>
          <target state="translated">Objects can be sorted, given the value of one of their properties.</target>
        </trans-unit>
        <trans-unit id="e090e0051f8f6019e7f092d7073dd1d97cf3d118" translate="yes" xml:space="preserve">
          <source>Objects like &lt;a href=&quot;../global_objects/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; will be a string after &lt;a href=&quot;../global_objects/json/parse&quot;&gt;&lt;code&gt;JSON.parse()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../global_objects/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 와 같은 객체는 &lt;a href=&quot;../global_objects/json/parse&quot;&gt; &lt;code&gt;JSON.parse()&lt;/code&gt; &lt;/a&gt; 뒤의 문자열 입니다.</target>
        </trans-unit>
        <trans-unit id="2fd99ecc7e9637258048cc755dd3dc2918b6e9a2" translate="yes" xml:space="preserve">
          <source>Objects overriding &lt;code&gt;toLocaleString&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;toLocaleString&lt;/code&gt; 재정의하는 객체</target>
        </trans-unit>
        <trans-unit id="b7d47a49ddf72149c546e97fb9bbb6129ffe9333" translate="yes" xml:space="preserve">
          <source>Objects overriding toLocaleString</source>
          <target state="translated">Objects overriding toLocaleString</target>
        </trans-unit>
        <trans-unit id="5ce0e56128a4f90000e416b34336b31c1c5b8295" translate="yes" xml:space="preserve">
          <source>Objects sealed with &lt;a href=&quot;seal&quot;&gt;&lt;code&gt;Object.seal()&lt;/code&gt;&lt;/a&gt; can have their existing properties changed. Existing properties in objects frozen with &lt;code&gt;Object.freeze()&lt;/code&gt; are made immutable.</source>
          <target state="translated">&lt;a href=&quot;seal&quot;&gt; &lt;code&gt;Object.seal()&lt;/code&gt; &lt;/a&gt; 봉인 된 객체 는 기존 속성을 변경할 수 있습니다. &lt;code&gt;Object.freeze()&lt;/code&gt; 로 고정 된 객체의 기존 속성 은 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2ea02164b35810facc8fd5f868d6a8e0b4f02ecf" translate="yes" xml:space="preserve">
          <source>Objects themselves are not iterable, but they become iterable when used in an Array, or with iterating functions such as &lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;reduce()&lt;/code&gt;, and &lt;code&gt;assign()&lt;/code&gt;. When merging 2 objects together with the spread operator, it is assumed another iterating function is used when the merging occurs.</source>
          <target state="translated">Objects themselves are not iterable, but they become iterable when used in an Array, or with iterating functions such as &lt;code&gt;map()&lt;/code&gt; , &lt;code&gt;reduce()&lt;/code&gt; , and &lt;code&gt;assign()&lt;/code&gt; . When merging 2 objects together with the spread operator, it is assumed another iterating function is used when the merging occurs.</target>
        </trans-unit>
        <trans-unit id="beb30cf5b8f4097496ea2b9dd4283f5e341a1ec1" translate="yes" xml:space="preserve">
          <source>Objects vs. Maps</source>
          <target state="translated">Objects vs. Maps</target>
        </trans-unit>
        <trans-unit id="4e7d8c7849f1648c77052055f32051f9581d8bc7" translate="yes" xml:space="preserve">
          <source>Obsolete</source>
          <target state="translated">Obsolete</target>
        </trans-unit>
        <trans-unit id="9b18d91c749126d46c3bf5e9a65d6064ff9a1b3a" translate="yes" xml:space="preserve">
          <source>Obvious errors</source>
          <target state="translated">명백한 오류</target>
        </trans-unit>
        <trans-unit id="10500e54805775e3d661be35724e87f0b1dbc4c9" translate="yes" xml:space="preserve">
          <source>Octal</source>
          <target state="translated">Octal</target>
        </trans-unit>
        <trans-unit id="90528a941045d7980fe1098bd071fe92ef94b8ba" translate="yes" xml:space="preserve">
          <source>Octal escape sequences</source>
          <target state="translated">8 진 이스케이프 시퀀스</target>
        </trans-unit>
        <trans-unit id="35db65f5024bbcd9581dc9b55989112f514902d7" translate="yes" xml:space="preserve">
          <source>Octal interpretations with no radix</source>
          <target state="translated">기수가없는 8 진 해석</target>
        </trans-unit>
        <trans-unit id="3aba3e82f634db6f57c6bc8b33c40e18e5270dbf" translate="yes" xml:space="preserve">
          <source>Octal literal escapes started by &quot;&lt;code&gt;\0o&lt;/code&gt;&quot; and followed by one or more digits, for example &lt;code&gt;\0o251&lt;/code&gt;</source>
          <target state="translated">Octal literal escapes started by &quot; &lt;code&gt;\0o&lt;/code&gt; &quot; and followed by one or more digits, for example &lt;code&gt;\0o251&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a4fa462defa6720eb1a2e15decf18e7981dec8a" translate="yes" xml:space="preserve">
          <source>Octal literal escapes started by &quot;\&quot; and (a) digit(s), for example &lt;code&gt;\251&lt;/code&gt;</source>
          <target state="translated">8 진 리터럴 이스케이프는 &quot;\&quot;및 (a) 숫자로 시작합니다 (예 : &lt;code&gt;\251&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bf801c9640c23535858bd98be19f85836f029ce3" translate="yes" xml:space="preserve">
          <source>Octal literals and octal escape sequences are deprecated and will throw a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; in strict mode. With ECMAScript 2015 and later, the standardized syntax uses a leading zero followed by a lowercase or uppercase Latin letter &quot;O&quot; (&lt;code&gt;0o&lt;/code&gt; or &lt;code&gt;0O)&lt;/code&gt;.</source>
          <target state="translated">8 진 리터럴 및 8 진 이스케이프 시퀀스는 더 이상 사용되지 않으며 엄격 모드에서 &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt; 를 발생시킵니다. ECMAScript 2015 이상에서 표준화 된 구문은 앞에 0을 사용하고 소문자 또는 대문자 라틴 문자 &quot;O&quot;( &lt;code&gt;0o&lt;/code&gt; 또는 &lt;code&gt;0O)&lt;/code&gt; 를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="e5539914d6089732786ff3c0b10e28353625f9c2" translate="yes" xml:space="preserve">
          <source>Octal number syntax uses a leading zero followed by a lowercase or uppercase Latin letter &quot;O&quot; (&lt;code&gt;0o&lt;/code&gt; or &lt;code&gt;0O)&lt;/code&gt;. Because this syntax is new in ECMAScript 2015, see the browser compatibility table, below. If the digits after the &lt;code&gt;0o&lt;/code&gt; are outside the range (01234567), the following &lt;a href=&quot;global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; is thrown: &quot;Missing octal digits after 0o&quot;.</source>
          <target state="translated">Octal number syntax uses a leading zero followed by a lowercase or uppercase Latin letter &quot;O&quot; ( &lt;code&gt;0o&lt;/code&gt; or &lt;code&gt;0O)&lt;/code&gt; . Because this syntax is new in ECMAScript 2015, see the browser compatibility table, below. If the digits after the &lt;code&gt;0o&lt;/code&gt; are outside the range (01234567), the following &lt;a href=&quot;global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt; is thrown: &quot;Missing octal digits after 0o&quot;.</target>
        </trans-unit>
        <trans-unit id="a9d3b81b66cc2bee52e203e0da8a810f05c16898" translate="yes" xml:space="preserve">
          <source>Octal number syntax uses a leading zero followed by a lowercase or uppercase Latin letter &quot;O&quot; (&lt;code&gt;0o&lt;/code&gt; or &lt;code&gt;0O)&lt;/code&gt;. Because this syntax is new in ECMAScript 2015, see the browser compatibility table, below. If the digits after the &lt;code&gt;0o&lt;/code&gt; are outside the range (01234567), the following &lt;code&gt;&lt;a href=&quot;global_objects/syntaxerror&quot;&gt;SyntaxError&lt;/a&gt;&lt;/code&gt; is thrown: &quot;Missing octal digits after 0o&quot;.</source>
          <target state="translated">8 진수 구문은 앞에 0을 사용하고 소문자 또는 대문자 라틴 문자 &quot;O&quot;( &lt;code&gt;0o&lt;/code&gt; 또는 &lt;code&gt;0O)&lt;/code&gt; 를 사용 합니다. 이 구문은 ECMAScript 2015의 새로운 기능이므로 아래의 브라우저 호환성 표를 참조하십시오. &lt;code&gt;0o&lt;/code&gt; 뒤의 숫자 가 범위 (01234567)를 벗어나면 &quot;0o 뒤의 8 진수 누락&quot; &lt;code&gt;&lt;a href=&quot;global_objects/syntaxerror&quot;&gt;SyntaxError&lt;/a&gt;&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f7b0ebdb75c3b76f9782d78b58500613cd134b9d" translate="yes" xml:space="preserve">
          <source>Octal numeric literals (&lt;code&gt;0o&lt;/code&gt;)</source>
          <target state="translated">8 진 숫자 리터럴 ( &lt;code&gt;0o&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="1af767caeb567e9b51bd28eba20513fff98efb12" translate="yes" xml:space="preserve">
          <source>Octal syntax &lt;code&gt;var n = 023;&lt;/code&gt;</source>
          <target state="translated">8 진법 구문 &lt;code&gt;var n = 023;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fec0e52243a8aacabf2009b1d14ed746829c73a6" translate="yes" xml:space="preserve">
          <source>Oftentimes, indenting differently or double checking indentation helps to spot these errors.</source>
          <target state="translated">들여 쓰기를 다르게 들여 쓰기하거나 들여 쓰기를 점검하면 종종 이러한 오류를 발견하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="6c9a14e3dadfd26458e25523ea19370fbbe31c25" translate="yes" xml:space="preserve">
          <source>Oftentimes, there is a missing comma in your object initializer code:</source>
          <target state="translated">종종 객체 이니셜 라이저 코드에 누락 된 쉼표가 있습니다.</target>
        </trans-unit>
        <trans-unit id="2cb70f9c6d8e5eded9a4d44e5ec42d0832863800" translate="yes" xml:space="preserve">
          <source>Oftentimes, there is a missing curly bracket in your function code:</source>
          <target state="translated">종종 함수 코드에 누락 된 중괄호가 있습니다.</target>
        </trans-unit>
        <trans-unit id="abd4ce6e78272423121b045b9bd9d040305af2cb" translate="yes" xml:space="preserve">
          <source>Ok, now it's pretty clear why changing of the constructor can be useful.</source>
          <target state="translated">이제 생성자의 변경이 유용한 이유가 분명합니다.</target>
        </trans-unit>
        <trans-unit id="57b1a568db87af836e74c9321e1f1e35040e63f1" translate="yes" xml:space="preserve">
          <source>Ok, now it's pretty clear why changing the constructor can be useful.</source>
          <target state="translated">Ok, now it's pretty clear why changing the constructor can be useful.</target>
        </trans-unit>
        <trans-unit id="65b2853c655b39aeb12ee26244456acbdd531ae9" translate="yes" xml:space="preserve">
          <source>Ol Chiki digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c039c3bb5698ca9418d734906ec806e00ff643ec" translate="yes" xml:space="preserve">
          <source>Old-style method that returns the value contained inside the global variable.</source>
          <target state="translated">전역 변수에 포함 된 값을 반환하는 구식 메서드입니다.</target>
        </trans-unit>
        <trans-unit id="adef1ddbafa19516af05ed7d1c5464a4a84bbc63" translate="yes" xml:space="preserve">
          <source>Old: &lt;code&gt;[()=&amp;gt;x for (x of [0, 1, 2])][1]() // 2&lt;/code&gt;</source>
          <target state="translated">이전 : &lt;code&gt;[()=&amp;gt;x for (x of [0, 1, 2])][1]() // 2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="01e1bfa5e54b3cbd699d11001d32a99cea15bd41" translate="yes" xml:space="preserve">
          <source>Old: &lt;code&gt;[i * 2 for (i of numbers)]&lt;/code&gt;</source>
          <target state="translated">Old : &lt;code&gt;[i * 2 for (i of numbers)]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f3cf2460c09c5409d739ecc8741dd670c9e980f" translate="yes" xml:space="preserve">
          <source>Older Firefox versions implement an older version of the generators proposal. In the older version, generators were defined using a regular &lt;code&gt;function&lt;/code&gt; keyword (without an asterisk) among other differences. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/Legacy_generator_function&quot;&gt;Legacy generator function &lt;/a&gt;for further information.</source>
          <target state="translated">이전 Firefox 버전은 이전 버전의 생성기 제안을 구현합니다. 이전 버전에서 생성기는 다른 차이점 중에서 일반 &lt;code&gt;function&lt;/code&gt; 키워드 (별표없이)를 사용하여 정의되었습니다 . 자세한 내용은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/Legacy_generator_function&quot;&gt;레거시 생성기 기능&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8c1ddb115381b88b95fe615710e6984ac0dd8475" translate="yes" xml:space="preserve">
          <source>Omit the trailing commas to parse the JSON correctly:</source>
          <target state="translated">JSON을 올바르게 구문 분석하려면 후행 쉼표를 생략하십시오.</target>
        </trans-unit>
        <trans-unit id="d22c751d2f2fa0b40ee0013b11339f8eab4c23a5" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; objects, &lt;a href=&quot;../array/tolocalestring&quot;&gt;&lt;code&gt;toLocaleString()&lt;/code&gt;&lt;/a&gt; can be used to print array values as a string, optionally with locale-specific identifiers (such as currency symbols) appended to them:</source>
          <target state="translated">On &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; objects, &lt;a href=&quot;../array/tolocalestring&quot;&gt; &lt;code&gt;toLocaleString()&lt;/code&gt; &lt;/a&gt; can be used to print array values as a string, optionally with locale-specific identifiers (such as currency symbols) appended to them:</target>
        </trans-unit>
        <trans-unit id="b6afbfd579d5e581ef4cb5540922cafa23e1d3e2" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; objects, &lt;a href=&quot;../date/tolocalestring&quot;&gt;&lt;code&gt;toLocaleString()&lt;/code&gt;&lt;/a&gt; is used to print out date displays more suitable for specific locales:</source>
          <target state="translated">On &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; objects, &lt;a href=&quot;../date/tolocalestring&quot;&gt; &lt;code&gt;toLocaleString()&lt;/code&gt; &lt;/a&gt; is used to print out date displays more suitable for specific locales:</target>
        </trans-unit>
        <trans-unit id="7950071d969ac8dee9435b161c0e94dde1ba1122" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; objects, &lt;a href=&quot;../number/tolocalestring&quot;&gt;&lt;code&gt;toLocaleString()&lt;/code&gt;&lt;/a&gt; is used to print out number displays more suitable for specific locales, e.g. with the correct separators:</source>
          <target state="translated">On &lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt; objects, &lt;a href=&quot;../number/tolocalestring&quot;&gt; &lt;code&gt;toLocaleString()&lt;/code&gt; &lt;/a&gt; is used to print out number displays more suitable for specific locales, e.g. with the correct separators:</target>
        </trans-unit>
        <trans-unit id="6f5ee5326703ea0acadab67fded2f70da772e810" translate="yes" xml:space="preserve">
          <source>On IE 6, 7, and 8 a lot of host objects are objects and not functions. For example:</source>
          <target state="translated">IE 6, 7, 8에서 많은 호스트 객체는 객체이며 기능이 아닙니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5e13a7a64ea3bfc67050fce97da8c494a480b3c4" translate="yes" xml:space="preserve">
          <source>On each iteration a value of a different property is assigned to &lt;code&gt;&lt;var&gt;variable&lt;/var&gt;&lt;/code&gt;. &lt;code&gt;&lt;var&gt;variable&lt;/var&gt;&lt;/code&gt; may be declared with &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, or &lt;code&gt;var&lt;/code&gt;.</source>
          <target state="translated">On each iteration a value of a different property is assigned to &lt;code&gt;&lt;var&gt;variable&lt;/var&gt;&lt;/code&gt; . &lt;code&gt;&lt;var&gt;variable&lt;/var&gt;&lt;/code&gt; may be declared with &lt;code&gt;const&lt;/code&gt; , &lt;code&gt;let&lt;/code&gt; , or &lt;code&gt;var&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19ef483a3b402f3e9cf904fc746b4245571f1c27" translate="yes" xml:space="preserve">
          <source>On each iteration a value of a different property is assigned to &lt;em&gt;variable&lt;/em&gt;.</source>
          <target state="translated">각 반복마다 다른 속성 값이 &lt;em&gt;variable에&lt;/em&gt; 할당됩니다 .</target>
        </trans-unit>
        <trans-unit id="16051ce58a5eaf6e90e2572cd4b9bba9901538b9" translate="yes" xml:space="preserve">
          <source>On the other hand the following is illegal because it's an Identifier, which is an &lt;code&gt;IdentifierName&lt;/code&gt; without the reserved words. Identifiers are used for &lt;code&gt;FunctionDeclaration,&amp;nbsp;FunctionExpression, VariableDeclaration&lt;/code&gt; and so on. &lt;code&gt;IdentifierNames &lt;/code&gt;are used for&lt;code&gt; MemberExpression,&amp;nbsp;CallExpression&lt;/code&gt; and so on.</source>
          <target state="translated">반면에 다음은 예약어 가없는 &lt;code&gt;IdentifierName&lt;/code&gt; 인 Identifier이기 때문에 불법 입니다. 식별자는 &lt;code&gt;FunctionDeclaration,&amp;nbsp;FunctionExpression, VariableDeclaration&lt;/code&gt; 등에 사용됩니다. &lt;code&gt;IdentifierNames &lt;/code&gt; 는 &lt;code&gt; MemberExpression,&amp;nbsp;CallExpression&lt;/code&gt; 등에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="688b98ea36059fd7b3392c33ae974783d43960bf" translate="yes" xml:space="preserve">
          <source>On the other hand the following is illegal because it's an&lt;em&gt; Identifier&lt;/em&gt;, which is an &lt;em&gt;IdentifierName&lt;/em&gt; without the reserved words. Identifiers are used for &lt;em&gt;FunctionDeclaration&lt;/em&gt;, &lt;em&gt;FunctionExpression&lt;/em&gt;,&lt;em&gt; VariableDeclaration&lt;/em&gt; and so on. &lt;em&gt;IdentifierNames&lt;/em&gt; are used for&lt;em&gt; MemberExpression&lt;/em&gt;,&lt;em&gt; CallExpression&lt;/em&gt; and so on.</source>
          <target state="translated">On the other hand the following is illegal because it's an&lt;em&gt; Identifier&lt;/em&gt;, which is an &lt;em&gt;IdentifierName&lt;/em&gt; without the reserved words. Identifiers are used for &lt;em&gt;FunctionDeclaration&lt;/em&gt;, &lt;em&gt;FunctionExpression&lt;/em&gt;,&lt;em&gt; VariableDeclaration&lt;/em&gt; and so on. &lt;em&gt;IdentifierNames&lt;/em&gt; are used for&lt;em&gt; MemberExpression&lt;/em&gt;,&lt;em&gt; CallExpression&lt;/em&gt; and so on.</target>
        </trans-unit>
        <trans-unit id="9935fb8939730fb09b5ab3d58a8b86982428a7e8" translate="yes" xml:space="preserve">
          <source>On the other hand, the variable the function is assigned to is limited only by its scope, which is guaranteed to include the scope in which the function is declared.</source>
          <target state="translated">반면, 함수가 할당 된 변수는 해당 범위에 의해서만 제한되며, 함수가 선언 된 범위를 포함하도록 보장됩니다.</target>
        </trans-unit>
        <trans-unit id="3dbc34eb4553fabed01be09202a41f4b8667aec5" translate="yes" xml:space="preserve">
          <source>Once a &lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; is fulfilled or rejected, the respective handler function (&lt;code&gt;onFulfilled&lt;/code&gt; or &lt;code&gt;onRejected&lt;/code&gt;) will be called &lt;strong&gt;asynchronously&lt;/strong&gt; (scheduled in the current thread loop). The behavior of the handler function follows a specific set of rules. If a handler function:</source>
          <target state="translated">한번 &lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; 성취하거나 거부, 각 핸들러 함수 ( &lt;code&gt;onFulfilled&lt;/code&gt; 또는 &lt;code&gt;onRejected&lt;/code&gt; 이 )라고한다 &lt;strong&gt;비동기&lt;/strong&gt; (현재 스레드 루프 예정). 핸들러 함수의 동작은 특정 규칙 세트를 따릅니다. 핸들러 함수 인 경우 :</target>
        </trans-unit>
        <trans-unit id="2ac13fec58fdbd2f4f000683032bc0eb067b2238" translate="yes" xml:space="preserve">
          <source>Once a generator function is defined, it can be used by constructing an iterator as shown.</source>
          <target state="translated">생성기 함수가 정의되면 그림과 같이 반복기를 구성하여 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="550aba73272657a8916d7a002e494b38a959b72a" translate="yes" xml:space="preserve">
          <source>Once paused on a &lt;code&gt;yield&lt;/code&gt; expression, the generator's code execution remains paused until the generator's &lt;code&gt;next()&lt;/code&gt; method is called. Each time the generator's &lt;code&gt;next()&lt;/code&gt; method is called, the generator resumes execution and runs until it reaches one of the following:</source>
          <target state="translated">A의 일시 정지되면 &lt;code&gt;yield&lt;/code&gt; 식 발전기의 때까지, 발전기의 코드 실행 남아 일시 정지 &lt;code&gt;next()&lt;/code&gt; 메소드가 호출된다. 생성자의 &lt;code&gt;next()&lt;/code&gt; 메소드가 호출 될 때마다 생성기가 실행을 재개하고 다음 중 하나에 도달 할 때까지 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="aa166c9b686cd79b09884264920debb2d7092d8a" translate="yes" xml:space="preserve">
          <source>Once paused on a &lt;code&gt;yield&lt;/code&gt; expression, the generator's code execution remains paused until the generator's &lt;code&gt;next()&lt;/code&gt; method is called. Each time the generator's &lt;code&gt;next()&lt;/code&gt; method is called, the generator resumes execution, and runs until it reaches one of the following:</source>
          <target state="translated">Once paused on a &lt;code&gt;yield&lt;/code&gt; expression, the generator's code execution remains paused until the generator's &lt;code&gt;next()&lt;/code&gt; method is called. Each time the generator's &lt;code&gt;next()&lt;/code&gt; method is called, the generator resumes execution, and runs until it reaches one of the following:</target>
        </trans-unit>
        <trans-unit id="7d33786d1f0781e041bb90fc87c270eab496e610" translate="yes" xml:space="preserve">
          <source>Once you have created an object, you might want to read or change them. Object properties can be accessed by using the dot notation or the bracket notation. (See &lt;a href=&quot;property_accessors&quot;&gt;property accessors&lt;/a&gt; for detailed information.)</source>
          <target state="translated">Once you have created an object, you might want to read or change them. Object properties can be accessed by using the dot notation or the bracket notation. (See &lt;a href=&quot;property_accessors&quot;&gt;property accessors&lt;/a&gt; for detailed information.)</target>
        </trans-unit>
        <trans-unit id="1f86b4d6f4312f8c40b57e62ba63c0f13fb0d1ff" translate="yes" xml:space="preserve">
          <source>Once you have created an object, you might want to read or change them. Object properties can be accessed by using the dot notation or the bracket notation. See &lt;a href=&quot;property_accessors&quot;&gt;property accessors&lt;/a&gt; for detailed information.</source>
          <target state="translated">객체를 만든 후에는 읽거나 변경할 수 있습니다. 도트 표기법 또는 대괄호 표기법을 사용하여 객체 속성에 액세스 할 수 있습니다. 자세한 내용은 &lt;a href=&quot;property_accessors&quot;&gt;속성 접근&lt;/a&gt; 자를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3c6742b1f29b4bbe7ffab5556333d5a31e2eea3d" translate="yes" xml:space="preserve">
          <source>One alternative output of the map method being called with &lt;a href=&quot;../parseint&quot;&gt;&lt;code&gt;parseInt&lt;/code&gt;&lt;/a&gt; as a parameter runs as follows:</source>
          <target state="translated">One alternative output of the map method being called with &lt;a href=&quot;../parseint&quot;&gt; &lt;code&gt;parseInt&lt;/code&gt; &lt;/a&gt; as a parameter runs as follows:</target>
        </trans-unit>
        <trans-unit id="bd0c7a905b0c4a2d1b0e641e2e877fcded7ee9d6" translate="yes" xml:space="preserve">
          <source>One alternative output of the map method being called with parseInt as a parameter runs as follows:</source>
          <target state="translated">parseInt를 매개 변수로 사용하여 호출되는 맵 메소드의 대체 출력은 다음과 같이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="adf158551835ca3e5b738171b537ad969a4cbd8d" translate="yes" xml:space="preserve">
          <source>One can assign the &lt;code&gt;constructor&lt;/code&gt; property for any value except &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; since those don't have a corresponding constructor function (like &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;, &lt;code&gt;Boolean&lt;/code&gt; etc.), but values which are primitives won't keep the change (with no exception thrown). This is due to the same mechanism, which allows one to set any property on primitive values (except &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt;) with no effect. namely wherenever one uses such a primitive as an object an instance of the corresponding constructor is created and discarded right after the statement was executed.</source>
          <target state="translated">One can assign the &lt;code&gt;constructor&lt;/code&gt; property for any value except &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; since those don't have a corresponding constructor function (like &lt;code&gt;String&lt;/code&gt; , &lt;code&gt;Number&lt;/code&gt; , &lt;code&gt;Boolean&lt;/code&gt; etc.), but values which are primitives won't keep the change (with no exception thrown). This is due to the same mechanism, which allows one to set any property on primitive values (except &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; ) with no effect. namely wherenever one uses such a primitive as an object an instance of the corresponding constructor is created and discarded right after the statement was executed.</target>
        </trans-unit>
        <trans-unit id="e03dedb798ac511cbb80bcea406687568f0eab5a" translate="yes" xml:space="preserve">
          <source>One can think of an object as an &lt;em&gt;associative array&lt;/em&gt; (a.k.a. &lt;em&gt;map&lt;/em&gt;, &lt;em&gt;dictionary&lt;/em&gt;, &lt;em&gt;hash&lt;/em&gt;, &lt;em&gt;lookup table&lt;/em&gt;). The &lt;em&gt;keys&lt;/em&gt; in this array are the names of the object's properties.</source>
          <target state="translated">One can think of an object as an &lt;em&gt;associative array&lt;/em&gt; (a.k.a. &lt;em&gt;map&lt;/em&gt;, &lt;em&gt;dictionary&lt;/em&gt;, &lt;em&gt;hash&lt;/em&gt;, &lt;em&gt;lookup table&lt;/em&gt;). The &lt;em&gt;keys&lt;/em&gt; in this array are the names of the object's properties.</target>
        </trans-unit>
        <trans-unit id="3dbd786e01c29d58131b1e22872bec4bd7cd53c0" translate="yes" xml:space="preserve">
          <source>One can think of an object as an &lt;em&gt;associative array&lt;/em&gt; (a.k.a. &lt;em&gt;map&lt;/em&gt;, &lt;em&gt;dictionary&lt;/em&gt;, &lt;em&gt;hash&lt;/em&gt;, &lt;em&gt;lookup table&lt;/em&gt;). The &lt;em&gt;keys&lt;/em&gt; in this array are the names of the object's properties. It's typical when speaking of an object's properties to make a distinction between properties and methods. However, the property/method distinction is little more than a convention. A method is simply a property that can be called, for example if it has a reference to a &lt;a href=&quot;../functions&quot;&gt;Function&lt;/a&gt; instance as its value.</source>
          <target state="translated">객체를 &lt;em&gt;연관 배열&lt;/em&gt; (일명 &lt;em&gt;map&lt;/em&gt; , &lt;em&gt;dictionary&lt;/em&gt; , &lt;em&gt;hash&lt;/em&gt; , &lt;em&gt;lookup table&lt;/em&gt; ) 로 생각할 수 있습니다 . 이 배열 의 &lt;em&gt;키&lt;/em&gt; 는 객체 속성의 이름입니다. 속성과 메서드를 구별하기 위해 객체의 속성을 말할 때 일반적입니다. 그러나 속성 / 방법의 구별은 관습에 지나지 않습니다. 메소드는 단순히 &lt;a href=&quot;../functions&quot;&gt;함수&lt;/a&gt; 인스턴스에 대한 참조를 값으로 갖는 경우와 같이 호출 할 수있는 특성입니다 .</target>
        </trans-unit>
        <trans-unit id="0ed9ce8fd54a6264f3d0b48d15ebf9af37d4a049" translate="yes" xml:space="preserve">
          <source>One common usage is to handle a value that may be &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="translated">일반적인 사용법 중 하나는 &lt;code&gt;null&lt;/code&gt; 일 수있는 값을 처리하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="62d6c14ca58fa50f887336c01c6e3ad10d3a0498" translate="yes" xml:space="preserve">
          <source>One may also extend traditional function-based &quot;classes&quot;:</source>
          <target state="translated">전통적인 함수 기반 &quot;클래스&quot;를 확장 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c903b899e913bfae38c13385238a138f099c8fa" translate="yes" xml:space="preserve">
          <source>One object might be garbage-collected much sooner than another object, even if they become unreachable at the same time, e.g., due to generational collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3c945b3416a5ad49f757e8952aad4347c1f9ea" translate="yes" xml:space="preserve">
          <source>One of &lt;code&gt;&quot;NFC&quot;&lt;/code&gt;, &lt;code&gt;&quot;NFD&quot;&lt;/code&gt;, &lt;code&gt;&quot;NFKC&quot;&lt;/code&gt;, or &lt;code&gt;&quot;NFKD&quot;&lt;/code&gt;, specifying the Unicode Normalization Form. If omitted or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;&quot;NFC&quot;&lt;/code&gt; is used.</source>
          <target state="translated">유니 코드 정규화 양식을 지정하는 &lt;code&gt;&quot;NFC&quot;&lt;/code&gt; , &lt;code&gt;&quot;NFD&quot;&lt;/code&gt; , &lt;code&gt;&quot;NFKC&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;NFKD&quot;&lt;/code&gt; 중 하나입니다 . 생략되거나 &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; 경우 &lt;code&gt;&quot;NFC&quot;&lt;/code&gt; 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c6d946fd54d85f7477222819089d81618ca563bf" translate="yes" xml:space="preserve">
          <source>One of the benefits of creating a named function expression is that in case we encountered an error, the stack trace will contain the name of the function, making it easier to find the origin of the error.</source>
          <target state="translated">명명 된 함수 표현식을 작성하면 얻을 수있는 이점 중 하나는 오류가 발생한 경우 스택 추적에 함수 이름이 포함되어 오류의 원인을 쉽게 찾을 수 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="7503c9c4e2c63743bbc98b4506b2a0be85d9ad78" translate="yes" xml:space="preserve">
          <source>One or more expressions, the last of which is returned as the value of the compound expression.</source>
          <target state="translated">One or more expressions, the last of which is returned as the value of the compound expression.</target>
        </trans-unit>
        <trans-unit id="004d0febea1fb3060de3b44a91551e0da8498872" translate="yes" xml:space="preserve">
          <source>One param. With simple expression return is not needed:</source>
          <target state="translated">One param. With simple expression return is not needed:</target>
        </trans-unit>
        <trans-unit id="90d5573baee8e3179e6200035a1d76d01323ea12" translate="yes" xml:space="preserve">
          <source>One property is supported by all language sensitive constructors and functions: The &lt;code&gt;localeMatcher&lt;/code&gt; property, whose value must be a string &quot;&lt;code&gt;lookup&lt;/code&gt;&quot; or &quot;&lt;code&gt;best fit&lt;/code&gt;&quot; and which selects one of the locale matching algorithms described above.</source>
          <target state="translated">One property is supported by all language sensitive constructors and functions: The &lt;code&gt;localeMatcher&lt;/code&gt; property, whose value must be a string &quot; &lt;code&gt;lookup&lt;/code&gt; &quot; or &quot; &lt;code&gt;best fit&lt;/code&gt; &quot; and which selects one of the locale matching algorithms described above.</target>
        </trans-unit>
        <trans-unit id="0b464cbca3d711eae35183961c376991af3e95f1" translate="yes" xml:space="preserve">
          <source>One property is supported by all language sensitive constructors and functions: The &lt;code&gt;localeMatcher&lt;/code&gt; property, whose value must be a string &lt;code&gt;&quot;lookup&quot;&lt;/code&gt; or &lt;code&gt;&quot;best fit&quot;&lt;/code&gt; and which selects one of the locale matching algorithms described above.</source>
          <target state="translated">모든 언어 구분 생성자 및 함수는 하나의 특성을 지원합니다. &lt;code&gt;localeMatcher&lt;/code&gt; 특성은 값이 문자열 &lt;code&gt;&quot;lookup&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;best fit&quot;&lt;/code&gt; 이어야 하고 위에서 설명한 로케일 일치 알고리즘 중 하나를 선택합니다.</target>
        </trans-unit>
        <trans-unit id="f7552293c68b3765a29ff266407a66e2a10bb809" translate="yes" xml:space="preserve">
          <source>One reason arrow functions were introduced was to alleviate scope ( &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;this&lt;/a&gt;&lt;/code&gt; ) complexities and make executing functions much more intuitive.</source>
          <target state="translated">One reason arrow functions were introduced was to alleviate scope ( &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;this&lt;/a&gt;&lt;/code&gt; ) complexities and make executing functions much more intuitive.</target>
        </trans-unit>
        <trans-unit id="17d274ecef3f92c8ef2accd00a8ddbaaeb99c22c" translate="yes" xml:space="preserve">
          <source>One reason to use &lt;a href=&quot;../operators/typeof&quot;&gt;&lt;code&gt;typeof&lt;/code&gt;&lt;/a&gt; is that it does not throw an error if the variable has not been declared.</source>
          <target state="translated">&lt;a href=&quot;../operators/typeof&quot;&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;/a&gt; 를 사용하는 한 가지 이유 는 변수가 선언되지 않은 경우 오류가 발생하지 않기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="0040acfc492ad4431afadda8b534706f1991a354" translate="yes" xml:space="preserve">
          <source>One way is to actually provide an &lt;code&gt;initialValue&lt;/code&gt; as the neutral element of the operator, such as 0 for the addition, 1 for a multiplication, or an empty string for a concatenation.</source>
          <target state="translated">한 가지 방법은 실제로 추가의 경우 0, 곱하기의 경우 1 또는 연결의 경우 빈 문자열과 같이 연산자의 중립 요소로 &lt;code&gt;initialValue&lt;/code&gt; 를 제공하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="dae4da1ccd270f4ab3b0706248815f16a240220a" translate="yes" xml:space="preserve">
          <source>One way to define a class is using a &lt;strong&gt;class declaration&lt;/strong&gt;. To declare a class, you use the &lt;code&gt;class&lt;/code&gt; keyword with the name of the class (&quot;Rectangle&quot; here).</source>
          <target state="translated">클래스를 정의하는 한 가지 방법은 &lt;strong&gt;클래스 선언을&lt;/strong&gt; 사용하는 것 입니다. 클래스를 선언하려면 클래스 이름과 함께 &lt;code&gt;class&lt;/code&gt; 키워드 를 사용하십시오 (여기서는 &quot;Rectangle&quot;).</target>
        </trans-unit>
        <trans-unit id="f61c6e1ce07e9a55256d63dd5ecd0f2b60c7fe60" translate="yes" xml:space="preserve">
          <source>One-use: the array iterator object is one use or temporary object</source>
          <target state="translated">One-use: the array iterator object is one use or temporary object</target>
        </trans-unit>
        <trans-unit id="b88714da31d7ed1f6136f21ef409a7c1254e2b6a" translate="yes" xml:space="preserve">
          <source>Only Internet Explorer 9 and later, and Firefox 23 and later, appear to fully and correctly implement redefinition of the &lt;a href=&quot;../array/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property of arrays. For now, don't rely on redefining the &lt;a href=&quot;../array/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property of an array to either work, or to work in a particular manner. And even when you &lt;em&gt;can&lt;/em&gt; rely on it, &lt;a href=&quot;http://whereswalden.com/2013/08/05/new-in-firefox-23-the-length-property-of-an-array-can-be-made-non-writable-but-you-shouldnt-do-it/&quot;&gt;there's really no good reason to do so&lt;/a&gt;.</source>
          <target state="translated">Internet Explorer 9 이상 및 Firefox 23 이상 만 배열 의 &lt;a href=&quot;../array/length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; 속성 재정의를 완전하고 정확하게 구현하는 것으로 보입니다 . 현재 로서는 배열 의 &lt;a href=&quot;../array/length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; 속성 을 재정 의하여 작동하거나 특정 방식으로 작동 하지 마십시오 . 그리고 당신 &lt;em&gt;이&lt;/em&gt; 그것에 의존 할 &lt;em&gt;수있는&lt;/em&gt; 경우에도 &lt;a href=&quot;http://whereswalden.com/2013/08/05/new-in-firefox-23-the-length-property-of-an-array-can-be-made-non-writable-but-you-shouldnt-do-it/&quot;&gt;그렇게 할 좋은 이유가 없습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d00478c70727f916cf685115fe8f54791c16a7ac" translate="yes" xml:space="preserve">
          <source>Only a single prototype mutation is permitted in an object literal. Multiple prototype mutations are a syntax error.</source>
          <target state="translated">Only a single prototype mutation is permitted in an object literal. Multiple prototype mutations are a syntax error.</target>
        </trans-unit>
        <trans-unit id="daa4ff0e795013b6417daf135041f5e37f432a5e" translate="yes" xml:space="preserve">
          <source>Only a single prototype mutation is permitted in an object literal: multiple prototype mutations are a syntax error.</source>
          <target state="translated">객체 리터럴에는 단일 프로토 타입 돌연변이 만 허용됩니다. 다중 프로토 타입 돌연변이는 구문 오류입니다.</target>
        </trans-unit>
        <trans-unit id="dbf66284df8e9f102bc1c0a99f4341d7a62b817d" translate="yes" xml:space="preserve">
          <source>Only for iterables</source>
          <target state="translated">반복 가능</target>
        </trans-unit>
        <trans-unit id="f5b5aaf5822ba205a7787ea0676a6de89e4ee051" translate="yes" xml:space="preserve">
          <source>Only mentioned as reserved word.</source>
          <target state="translated">예약어로만 언급됩니다.</target>
        </trans-unit>
        <trans-unit id="e2934cecb3d6c0649ebb041d194444a024aa75a6" translate="yes" xml:space="preserve">
          <source>Only one of the following two groups of properties is included:</source>
          <target state="translated">다음 두 속성 그룹 중 하나만 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="4c79871de6b6f31ab9002b599cbecc7040d27c3d" translate="yes" xml:space="preserve">
          <source>Only the following Unicode code points are treated as line terminators in ECMAScript, other line breaking characters are treated as white space (for example, Next Line, NEL, U+0085 is considered as white space).</source>
          <target state="translated">ECMAScript에서는 다음 유니 코드 코드 포인트 만 줄 종결 자로 처리되고 다른 줄 바꿈 문자는 공백으로 처리됩니다 (예 : Next Line, NEL, U + 0085는 공백으로 간주 됨).</target>
        </trans-unit>
        <trans-unit id="9bb91d784c31e5a69dc70f5b3a00fb1b6f93502f" translate="yes" xml:space="preserve">
          <source>Only the last parameter can be a &quot;rest parameter&quot;.</source>
          <target state="translated">Only the last parameter can be a &quot;rest parameter&quot;.</target>
        </trans-unit>
        <trans-unit id="99ec4db56d705949ae81e7cc9423ec83b296128b" translate="yes" xml:space="preserve">
          <source>Only used when &lt;code&gt;notation&lt;/code&gt; is &quot;&lt;code&gt;compact&lt;/code&gt;&quot;. Takes either &quot;&lt;code&gt;short&lt;/code&gt;&quot; (default) or &quot;&lt;code&gt;long&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d38a5bfc02e73c666b38fdc0238e4670062fd9" translate="yes" xml:space="preserve">
          <source>Only when &lt;code&gt;f&lt;/code&gt; is called is &lt;code&gt;x&lt;/code&gt; either found or not, and if found, either in &lt;code&gt;o&lt;/code&gt; or (if no such property exists) in &lt;code&gt;f&lt;/code&gt;'s activation object, where &lt;code&gt;x&lt;/code&gt; names the first formal argument. If you forget to define &lt;code&gt;x&lt;/code&gt; in the object you pass as the second argument, or if there's some similar bug or confusion, you won't get an error -- just unexpected results.</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; 가 호출 된 경우에만 &lt;code&gt;x&lt;/code&gt; 가 발견되거나 발견되지 않은 경우, &lt;code&gt;f&lt;/code&gt; 의 활성화 객체 에서 &lt;code&gt;o&lt;/code&gt; 또는 (이러한 속성이 존재하지 않는 경우) 발견됩니다 . 여기서 &lt;code&gt;x&lt;/code&gt; 는 첫 번째 형식 인수입니다. 객체에서 &lt;code&gt;x&lt;/code&gt; 를 정의하는 것을 잊어 버린 경우 두 번째 인수로 전달하거나 비슷한 버그 나 혼란이 있으면 예기치 않은 결과가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="19c9c9ed8477a3a275bcf0fa3f27c69151b58b7d" translate="yes" xml:space="preserve">
          <source>Opera</source>
          <target state="translated">Opera</target>
        </trans-unit>
        <trans-unit id="71e00d3376fba679bd68ca4280fa7959a01200c7" translate="yes" xml:space="preserve">
          <source>Opera Android</source>
          <target state="translated">오페라 안드로이드</target>
        </trans-unit>
        <trans-unit id="4497b69b3e58a8b8c4ab04b8430dd1bf6b9df545" translate="yes" xml:space="preserve">
          <source>Opera for Android</source>
          <target state="translated">Android 용 오페라</target>
        </trans-unit>
        <trans-unit id="2a11858bb8602e6bcb8900754f254a66e2609ccc" translate="yes" xml:space="preserve">
          <source>Opera-specific notes</source>
          <target state="translated">오페라 관련 노트</target>
        </trans-unit>
        <trans-unit id="2135ad1d119b354a539d671f5fa603e00ff1d444" translate="yes" xml:space="preserve">
          <source>Operand of an argument is &lt;code&gt;NaN&lt;/code&gt; (e.g. &lt;code&gt;7 ** NaN&lt;/code&gt;)</source>
          <target state="translated">Operand of an argument is &lt;code&gt;NaN&lt;/code&gt; (e.g. &lt;code&gt;7 ** NaN&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d5e812022431eae1cbb45efa2a44337aa2acc1b0" translate="yes" xml:space="preserve">
          <source>Operations to shift all bits of the operand.</source>
          <target state="translated">피연산자의 모든 비트를 이동시키는 연산.</target>
        </trans-unit>
        <trans-unit id="d0e687b079fb70f2208d1f8d2c75d64d74925496" translate="yes" xml:space="preserve">
          <source>Operator</source>
          <target state="translated">Operator</target>
        </trans-unit>
        <trans-unit id="5ab53f8310f5b3d7c33f42f382419ed45034e50e" translate="yes" xml:space="preserve">
          <source>Operator Precedence</source>
          <target state="translated">운영자 우선 순위</target>
        </trans-unit>
        <trans-unit id="685048571a4f4db99cb190b311def264fc71eb0e" translate="yes" xml:space="preserve">
          <source>Operator precedence</source>
          <target state="translated">연산자 우선 순위</target>
        </trans-unit>
        <trans-unit id="8294e4068997b53d5de8f5b8685132a9198009c6" translate="yes" xml:space="preserve">
          <source>Operator precedence determines the way in which operators are parsed with respect to each other. Operators with higher precedence become the operands of operators with lower precedence.</source>
          <target state="translated">연산자 우선 순위는 연산자가 서로에 대해 구문 분석되는 방식을 결정합니다. 우선 순위가 높은 연산자는 우선 순위가 낮은 연산자의 피연산자가됩니다.</target>
        </trans-unit>
        <trans-unit id="d68df45459b8bbc212c3255fae17cdd9e9cd91e6" translate="yes" xml:space="preserve">
          <source>Operator type</source>
          <target state="translated">운영자 유형</target>
        </trans-unit>
        <trans-unit id="e90414358dbfff0a68e4eb5d68a16978cf197d5a" translate="yes" xml:space="preserve">
          <source>Operators</source>
          <target state="translated">Operators</target>
        </trans-unit>
        <trans-unit id="aec817b78be32e9eb6a28b10c01a44463709ad54" translate="yes" xml:space="preserve">
          <source>Optional &lt;code&gt;for&lt;/code&gt; expressions</source>
          <target state="translated">옵션 &lt;code&gt;for&lt;/code&gt; 표현</target>
        </trans-unit>
        <trans-unit id="322f4230bd8561e436cf75ddcff2ba65278091bb" translate="yes" xml:space="preserve">
          <source>Optional &lt;code&gt;locales&lt;/code&gt; parameter</source>
          <target state="translated">선택적 &lt;code&gt;locales&lt;/code&gt; 매개 변수</target>
        </trans-unit>
        <trans-unit id="ad4da8ecdac8ce3a9ddac5dc8d5f1d4f08942264" translate="yes" xml:space="preserve">
          <source>Optional &lt;code&gt;options&lt;/code&gt; parameter</source>
          <target state="translated">선택적 &lt;code&gt;options&lt;/code&gt; 매개 변수</target>
        </trans-unit>
        <trans-unit id="1dbd0406de4381bd345e9f66bc0ee5a7981c67df" translate="yes" xml:space="preserve">
          <source>Optional Indicates whether the 16-bit int is stored in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If false or undefined, a big-endian value is read.</source>
          <target state="translated">선택 사항 16 비트 int가 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;리틀 엔디안&lt;/a&gt; 형식 또는 빅 엔디안 형식으로 저장되는지 여부를 나타냅니다 . false이거나 정의되지 않은 경우 빅 엔디안 값을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="dd2778311b39a11505037f13b3d77f24f8a4fe57" translate="yes" xml:space="preserve">
          <source>Optional Indicates whether the 16-bit int is stored in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If false or undefined, a big-endian value is written.</source>
          <target state="translated">선택 사항 16 비트 int가 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;리틀 엔디안&lt;/a&gt; 형식 또는 빅 엔디안 형식으로 저장되는지 여부를 나타냅니다 . false이거나 정의되지 않은 경우 빅 엔디안 값이 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="023444365056aba3ee5de5ab1c2737a4264ebcf1" translate="yes" xml:space="preserve">
          <source>Optional Indicates whether the 16-bit int is stored in &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, a big-endian value is read.</source>
          <target state="translated">Optional Indicates whether the 16-bit int is stored in &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; , a big-endian value is read.</target>
        </trans-unit>
        <trans-unit id="1561a1ec72a10d4f2037cce5ab20ff2f9e1710c9" translate="yes" xml:space="preserve">
          <source>Optional Indicates whether the 16-bit int is stored in &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, a big-endian value is written.</source>
          <target state="translated">Optional Indicates whether the 16-bit int is stored in &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; , a big-endian value is written.</target>
        </trans-unit>
        <trans-unit id="33ce32a3acc8aa0f7e4c410f6748a44b1a4d1322" translate="yes" xml:space="preserve">
          <source>Optional Indicates whether the 32-bit float is stored in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If false or undefined, a big-endian value is read.</source>
          <target state="translated">선택 사항 32 비트 부동 소수점이 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;리틀 엔디안&lt;/a&gt; 형식 인지 빅 엔디안 형식 인지 저장 됨을 나타냅니다 . false이거나 정의되지 않은 경우 빅 엔디안 값을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="ce088e1b9aa45236caffed3077f9fc2964cbd94e" translate="yes" xml:space="preserve">
          <source>Optional Indicates whether the 32-bit float is stored in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If false or undefined, a big-endian value is written.</source>
          <target state="translated">선택 사항 32 비트 부동 소수점이 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;리틀 엔디안&lt;/a&gt; 형식 인지 빅 엔디안 형식 인지 저장 됨을 나타냅니다 . false이거나 정의되지 않은 경우 빅 엔디안 값이 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="2b8bca9ac247e7d0c03f3b3e0e930dd5d93bdd89" translate="yes" xml:space="preserve">
          <source>Optional Indicates whether the 32-bit float is stored in &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, a big-endian value is read.</source>
          <target state="translated">Optional Indicates whether the 32-bit float is stored in &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; , a big-endian value is read.</target>
        </trans-unit>
        <trans-unit id="678b0a696032823e6f9aa5db5b6c3bce251daf72" translate="yes" xml:space="preserve">
          <source>Optional Indicates whether the 32-bit float is stored in &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, a big-endian value is written.</source>
          <target state="translated">Optional Indicates whether the 32-bit float is stored in &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; , a big-endian value is written.</target>
        </trans-unit>
        <trans-unit id="fea6fdc8b1a774861c2807d66d6081130e6aee95" translate="yes" xml:space="preserve">
          <source>Optional Indicates whether the 32-bit int is stored in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If false or undefined, a big-endian value is read.</source>
          <target state="translated">선택 사항 32 비트 int가 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;리틀 엔디안&lt;/a&gt; 형식 또는 빅 엔디안 형식으로 저장되는지 여부를 나타냅니다 . false이거나 정의되지 않은 경우 빅 엔디안 값을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="61a13b27e60244cb6ac6d07fa8a9fa8196bd8e7b" translate="yes" xml:space="preserve">
          <source>Optional Indicates whether the 32-bit int is stored in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If false or undefined, a big-endian value is written.</source>
          <target state="translated">선택 사항 32 비트 int가 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;리틀 엔디안&lt;/a&gt; 형식 또는 빅 엔디안 형식으로 저장되는지 여부를 나타냅니다 . false이거나 정의되지 않은 경우 빅 엔디안 값이 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="a01c42bb6fd3820acf62cf3c2cd56f31fc5d2c0f" translate="yes" xml:space="preserve">
          <source>Optional Indicates whether the 32-bit int is stored in &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, a big-endian value is read.</source>
          <target state="translated">Optional Indicates whether the 32-bit int is stored in &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; , a big-endian value is read.</target>
        </trans-unit>
        <trans-unit id="f5ee30c634a40eb6963b42bd96ea4d01c4ae852f" translate="yes" xml:space="preserve">
          <source>Optional Indicates whether the 32-bit int is stored in &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, a big-endian value is written.</source>
          <target state="translated">Optional Indicates whether the 32-bit int is stored in &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; , a big-endian value is written.</target>
        </trans-unit>
        <trans-unit id="ba1cc0b145bf652ff3b9c289bc9bf1937128ebac" translate="yes" xml:space="preserve">
          <source>Optional Indicates whether the 64-bit float is stored in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If false or undefined, a big-endian value is read.</source>
          <target state="translated">선택 사항 64 비트 부동 소수점이 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;리틀 엔디안&lt;/a&gt; 형식 인지 빅 엔디안 형식 인지 저장 합니다. false이거나 정의되지 않은 경우 빅 엔디안 값을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="c5c0e4455c30fc5f637331254f29994c27b676d2" translate="yes" xml:space="preserve">
          <source>Optional Indicates whether the 64-bit float is stored in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If false or undefined, a big-endian value is written.</source>
          <target state="translated">선택 사항 64 비트 부동 소수점이 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;리틀 엔디안&lt;/a&gt; 형식 인지 빅 엔디안 형식 인지 저장 합니다. false이거나 정의되지 않은 경우 빅 엔디안 값이 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="65fd3398d9230850735d4f718a7840bf262917c4" translate="yes" xml:space="preserve">
          <source>Optional Indicates whether the 64-bit float is stored in &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, a big-endian value is read.</source>
          <target state="translated">Optional Indicates whether the 64-bit float is stored in &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; , a big-endian value is read.</target>
        </trans-unit>
        <trans-unit id="a67862baec5ad8a2ce266e09b6980c3da8231cc9" translate="yes" xml:space="preserve">
          <source>Optional Indicates whether the 64-bit float is stored in &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, a big-endian value is written.</source>
          <target state="translated">Optional Indicates whether the 64-bit float is stored in &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; , a big-endian value is written.</target>
        </trans-unit>
        <trans-unit id="3a881ec7aeba979d6c1e691c9ceaa113147a17f7" translate="yes" xml:space="preserve">
          <source>Optional Indicates whether the 64-bit int is stored in &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, a big-endian value is read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598fe06f57fddabe1919033f8c12606c38f40158" translate="yes" xml:space="preserve">
          <source>Optional Indicates whether the 64-bit int is stored in &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, a big-endian value is written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d270afcb3e308aae58e25f9a980e7961ac5e076" translate="yes" xml:space="preserve">
          <source>Optional catch binding</source>
          <target state="translated">선택적 캐치 바인딩</target>
        </trans-unit>
        <trans-unit id="9725a28ce99163c57a200c331c63c095fb43a3d0" translate="yes" xml:space="preserve">
          <source>Optional chaining</source>
          <target state="translated">Optional chaining</target>
        </trans-unit>
        <trans-unit id="5f1106edc30f6c327ad9dd2c3b8f32a1fe916f0c" translate="yes" xml:space="preserve">
          <source>Optional chaining cannot be used on a non-existent root object. It does not replace checks like &lt;code&gt;if (typeof a == &quot;undefined&quot;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ece9c39afbf33fd600c8ea83605d3c160de6d9e" translate="yes" xml:space="preserve">
          <source>Optional chaining not valid on the left-hand side of an assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a1158527cbc93dbcceaf0d7aad58ad329093b84" translate="yes" xml:space="preserve">
          <source>Optional chaining operator (&lt;code&gt;?.&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c10e759832594af9cb5ae8b534a5c8b0bf2a552d" translate="yes" xml:space="preserve">
          <source>Optional chaining with expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="846cd26887952def91a23f8f9968892d98e4a670" translate="yes" xml:space="preserve">
          <source>Optional chaining with function calls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceeae57ea84e6115e67bf303cd3a288ed6528012" translate="yes" xml:space="preserve">
          <source>Optional for expressions</source>
          <target state="translated">Optional for expressions</target>
        </trans-unit>
        <trans-unit id="d36a9daee3dabd000afa4a76de0c8c143dd1c710" translate="yes" xml:space="preserve">
          <source>Optional object to use as &lt;code&gt;this&lt;/code&gt; when executing &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">Optional object to use as &lt;code&gt;this&lt;/code&gt; when executing &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="459ad54074494479350419eda5692e1f0d64b9f0" translate="yes" xml:space="preserve">
          <source>Optional, string. A description of the symbol which can be used for debugging but not to access the symbol itself.</source>
          <target state="translated">선택 사항, 문자열. 디버깅에 사용할 수 있지만 심볼 자체에는 액세스 할 수없는 심볼에 대한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="15927a99544f12526f1a2f88d22759a81c345de9" translate="yes" xml:space="preserve">
          <source>Optional. A human-readable description of the error.</source>
          <target state="translated">선택 과목. 사람이 읽을 수있는 오류 설명.</target>
        </trans-unit>
        <trans-unit id="5a8f7fef26a2df202125e25c73ef64e1164aefeb" translate="yes" xml:space="preserve">
          <source>Optional. A number between 0 and 999, representing the milliseconds.</source>
          <target state="translated">선택 과목. 밀리 초를 나타내는 0에서 999 사이의 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="4df43d32d5e53b7ab6ac59d5b8ea7d56d304be1c" translate="yes" xml:space="preserve">
          <source>Optional. A number between 0 and 999, representing the milliseconds. If you specify the &lt;code&gt;&lt;var&gt;msValue&lt;/var&gt;&lt;/code&gt; parameter, you must also specify the &lt;code&gt;&lt;var&gt;minutesValue&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;secondsValue&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">Optional. A number between 0 and 999, representing the milliseconds. If you specify the &lt;code&gt;&lt;var&gt;msValue&lt;/var&gt;&lt;/code&gt; parameter, you must also specify the &lt;code&gt;&lt;var&gt;minutesValue&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;secondsValue&lt;/var&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7e907c71f7ff4e0d638b8ffecd64a691a3619b7" translate="yes" xml:space="preserve">
          <source>Optional. A number between 0 and 999, representing the milliseconds. If you specify the &lt;code&gt;msValue&lt;/code&gt; parameter, you must also specify the &lt;code&gt;minutesValue&lt;/code&gt; and &lt;code&gt;secondsValue&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 밀리 초를 나타내는 0에서 999 사이의 숫자입니다. 당신이 지정하는 경우 &lt;code&gt;msValue&lt;/code&gt; 의 매개 변수를, 당신은 또한 지정해야합니다 &lt;code&gt;minutesValue&lt;/code&gt; 및 &lt;code&gt;secondsValue&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="633109ff1a701f6ed00138f1235368c40bd422c0" translate="yes" xml:space="preserve">
          <source>Optional. A string with a BCP 47 language tag, or an array of such strings. For the general form and interpretation of the &lt;code&gt;locales&lt;/code&gt; argument, see the &lt;a href=&quot;../../intl#Locale_identification_and_negotiation&quot;&gt;Intl page&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e988a47d74cf650f4dfbb14cf7944cf46e0f0aa" translate="yes" xml:space="preserve">
          <source>Optional. A string with a BCP 47 language tag, or an array of such strings. For the general form and interpretation of the &lt;code&gt;locales&lt;/code&gt; argument, see the &lt;a href=&quot;../../intl#Locale_identification_and_negotiation&quot;&gt;Intl page&lt;/a&gt;. The following Unicode extension keys are allowed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884122e141d18eb5c16663b5cbee4354e105cca1" translate="yes" xml:space="preserve">
          <source>Optional. A string with a BCP 47 language tag, or an array of such strings. For the general form and interpretation of the &lt;code&gt;locales&lt;/code&gt; argument, see the &lt;a href=&quot;../intl#Locale_identification_and_negotiation&quot;&gt;Intl page&lt;/a&gt;. The following Unicode extension key is allowed:</source>
          <target state="translated">선택 과목. BCP 47 언어 태그가있는 문자열 또는 이러한 문자열의 배열 &lt;code&gt;locales&lt;/code&gt; 인수 의 일반적인 형식과 해석에 대해서는 &lt;a href=&quot;../intl#Locale_identification_and_negotiation&quot;&gt;Intl 페이지를 참조하십시오&lt;/a&gt; . 다음과 같은 유니 코드 확장 키가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="a56610b39e63b2c43031839b11afc1d9e7ead719" translate="yes" xml:space="preserve">
          <source>Optional. A string with a BCP 47 language tag, or an array of such strings. For the general form and interpretation of the &lt;code&gt;locales&lt;/code&gt; argument, see the &lt;a href=&quot;../intl#Locale_identification_and_negotiation&quot;&gt;Intl page&lt;/a&gt;. The following Unicode extension keys are allowed:</source>
          <target state="translated">선택 과목. BCP 47 언어 태그가있는 문자열 또는 이러한 문자열의 배열 &lt;code&gt;locales&lt;/code&gt; 인수 의 일반적인 형식과 해석에 대해서는 &lt;a href=&quot;../intl#Locale_identification_and_negotiation&quot;&gt;Intl 페이지를 참조하십시오&lt;/a&gt; . 다음과 같은 유니 코드 확장 키가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="a54cfda896e3a729ccfcda80487629955af807ba" translate="yes" xml:space="preserve">
          <source>Optional. A string with a BCP 47 language tag, or an array of such strings. For the general form and interpretation of the &lt;code&gt;locales&lt;/code&gt; argument, see the &lt;a href=&quot;intl#Locale_identification_and_negotiation&quot;&gt;Intl page&lt;/a&gt;.</source>
          <target state="translated">선택 과목. BCP 47 언어 태그가있는 문자열 또는 이러한 문자열의 배열 &lt;code&gt;locales&lt;/code&gt; 인수 의 일반적인 형식과 해석에 대해서는 &lt;a href=&quot;intl#Locale_identification_and_negotiation&quot;&gt;Intl 페이지를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bed3283bfc52ab0a193edb33ca67e508e0e1927d" translate="yes" xml:space="preserve">
          <source>Optional. A string with a BCP 47 language tag, or an array of such strings. For the general form and interpretation of the &lt;code&gt;locales&lt;/code&gt; argument, see the &lt;a href=&quot;intl#Locale_identification_and_negotiation&quot;&gt;Intl page&lt;/a&gt;. The following Unicode extension key is allowed:</source>
          <target state="translated">선택 과목. BCP 47 언어 태그가있는 문자열 또는 이러한 문자열의 배열 &lt;code&gt;locales&lt;/code&gt; 인수 의 일반적인 형식과 해석에 대해서는 &lt;a href=&quot;intl#Locale_identification_and_negotiation&quot;&gt;Intl 페이지를 참조하십시오&lt;/a&gt; . 다음과 같은 유니 코드 확장 키가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="30cd0a723f60f5d5a5fc5bbb0cb3eea20cee69c3" translate="yes" xml:space="preserve">
          <source>Optional. A string with a BCP 47 language tag, or an array of such strings. For the general form and interpretation of the &lt;code&gt;locales&lt;/code&gt; argument, see the &lt;a href=&quot;intl#Locale_identification_and_negotiation&quot;&gt;Intl page&lt;/a&gt;. The following Unicode extension keys are allowed:</source>
          <target state="translated">선택 과목. BCP 47 언어 태그가있는 문자열 또는 이러한 문자열의 배열 &lt;code&gt;locales&lt;/code&gt; 인수 의 일반적인 형식과 해석에 대해서는 &lt;a href=&quot;intl#Locale_identification_and_negotiation&quot;&gt;Intl 페이지를 참조하십시오&lt;/a&gt; . 다음과 같은 유니 코드 확장 키가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="734f22fdf2fbc41f4960c118753cd751e06f0c18" translate="yes" xml:space="preserve">
          <source>Optional. An array-like object, specifying the arguments with which &lt;em&gt;&lt;code&gt;func&lt;/code&gt;&lt;/em&gt; should be called, or &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if no arguments should be provided to the function. Starting with ECMAScript 5 these arguments can be a generic array-like object instead of an array. See below for &lt;a href=&quot;#Browser_compatibility&quot;&gt;browser compatibility&lt;/a&gt; information.</source>
          <target state="translated">선택 과목. &lt;em&gt; &lt;code&gt;func&lt;/code&gt; &lt;/em&gt; 를 호출 할 인수를 지정하는 배열과 같은 객체 . 함수에 인수를 제공하지 않으면 &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; 입니다. ECMAScript 5부터는 이러한 인수가 배열 대신 일반 배열과 유사한 객체 일 수 있습니다. &lt;a href=&quot;#Browser_compatibility&quot;&gt;브라우저 호환성&lt;/a&gt; 정보는 아래를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="95bcdeccf8fa92f09552978e8b5466d6c049673f" translate="yes" xml:space="preserve">
          <source>Optional. An integer between 0 and 11 representing the months January through December.</source>
          <target state="translated">선택 과목. 1 월에서 12 월까지의 달을 나타내는 0에서 11 사이의 정수입니다.</target>
        </trans-unit>
        <trans-unit id="3e06ee7808c9d219b86be5730255f13da12e4600" translate="yes" xml:space="preserve">
          <source>Optional. An integer between 0 and 23 representing the hours. If omitted, defaults to 0.</source>
          <target state="translated">선택 과목. 시간을 나타내는 0에서 23 사이의 정수입니다. 생략하면 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="70cc13be2265b54e06de46d8c93e89959f03eceb" translate="yes" xml:space="preserve">
          <source>Optional. An integer between 0 and 59 representing the minutes. If omitted, defaults to 0.</source>
          <target state="translated">선택 과목. 분을 나타내는 0에서 59 사이의 정수입니다. 생략하면 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="392e20e3585d866790cf14f6d054cf40a872f584" translate="yes" xml:space="preserve">
          <source>Optional. An integer between 0 and 59 representing the seconds. If omitted, defaults to 0.</source>
          <target state="translated">선택 과목. 초를 나타내는 0에서 59 사이의 정수입니다. 생략하면 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="6344e50d97de06bcdc91a8e68b47290f334920d7" translate="yes" xml:space="preserve">
          <source>Optional. An integer between 0 and 59, representing the minutes.</source>
          <target state="translated">선택 과목. 분을 나타내는 0에서 59 사이의 정수입니다.</target>
        </trans-unit>
        <trans-unit id="e2cd4c94388cf2e26aa84fa14f7d4aa1f1b66b91" translate="yes" xml:space="preserve">
          <source>Optional. An integer between 0 and 59, representing the seconds. If you specify the &lt;code&gt;&lt;var&gt;secondsValue&lt;/var&gt;&lt;/code&gt; parameter, you must also specify the &lt;code&gt;&lt;var&gt;minutesValue&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">Optional. An integer between 0 and 59, representing the seconds. If you specify the &lt;code&gt;&lt;var&gt;secondsValue&lt;/var&gt;&lt;/code&gt; parameter, you must also specify the &lt;code&gt;&lt;var&gt;minutesValue&lt;/var&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ea25fbc6b722b45e94db9bc60c9374192db2842" translate="yes" xml:space="preserve">
          <source>Optional. An integer between 0 and 59, representing the seconds. If you specify the &lt;code&gt;secondsValue&lt;/code&gt; parameter, you must also specify the &lt;code&gt;minutesValue&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 초를 나타내는 0에서 59 사이의 정수입니다. 당신이 지정하는 경우 &lt;code&gt;secondsValue&lt;/code&gt; 매개 변수를, 당신은 또한 지정해야합니다 &lt;code&gt;minutesValue&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="c69b718b64c0a6b7b981cf612e638be1ea86ec81" translate="yes" xml:space="preserve">
          <source>Optional. An integer between 0 and 999 representing the milliseconds. If omitted, defaults to 0.</source>
          <target state="translated">선택 과목. 밀리 초를 나타내는 0에서 999 사이의 정수입니다. 생략하면 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="e7eab31619c25eb916fff52039008d8a6bc1f374" translate="yes" xml:space="preserve">
          <source>Optional. An integer between 1 and 31 representing the day of the month. If omitted, defaults to 1.</source>
          <target state="translated">선택 과목. 월을 나타내는 1에서 31 사이의 정수입니다. 생략하면 기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="9e4dcf71cf49e55f9fc37d3731278b4344dc4740" translate="yes" xml:space="preserve">
          <source>Optional. An integer between 1 and 31 representing the day of the month. If you specify the &lt;code&gt;&lt;var&gt;dateValue&lt;/var&gt;&lt;/code&gt; parameter, you must also specify the &lt;code&gt;&lt;var&gt;monthValue&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">Optional. An integer between 1 and 31 representing the day of the month. If you specify the &lt;code&gt;&lt;var&gt;dateValue&lt;/var&gt;&lt;/code&gt; parameter, you must also specify the &lt;code&gt;&lt;var&gt;monthValue&lt;/var&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bfd8a3e01bf1e010337ea4f04b3fd11e2cfe61eb" translate="yes" xml:space="preserve">
          <source>Optional. An integer between 1 and 31 representing the day of the month. If you specify the &lt;code&gt;&lt;var&gt;dayValue&lt;/var&gt;&lt;/code&gt; parameter, you must also specify the &lt;code&gt;&lt;var&gt;monthValue&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">Optional. An integer between 1 and 31 representing the day of the month. If you specify the &lt;code&gt;&lt;var&gt;dayValue&lt;/var&gt;&lt;/code&gt; parameter, you must also specify the &lt;code&gt;&lt;var&gt;monthValue&lt;/var&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="119deebd8a3bfce2a9aab0b02803f139019ca5d4" translate="yes" xml:space="preserve">
          <source>Optional. An integer between 1 and 31 representing the day of the month. If you specify the &lt;code&gt;dateValue&lt;/code&gt; parameter, you must also specify the &lt;code&gt;monthValue&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 월을 나타내는 1에서 31 사이의 정수입니다. 당신이 지정하는 경우 &lt;code&gt;dateValue&lt;/code&gt; 매개 변수를, 당신은 또한 지정해야합니다 &lt;code&gt;monthValue&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="794534433bb78c2fedeeae558dd5ba9b1d6cf405" translate="yes" xml:space="preserve">
          <source>Optional. An integer between 1 and 31 representing the day of the month. If you specify the &lt;code&gt;dayValue&lt;/code&gt; parameter, you must also specify the &lt;code&gt;monthValue&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 월을 나타내는 1에서 31 사이의 정수입니다. 당신이 지정하는 경우 &lt;code&gt;dayValue&lt;/code&gt; 의 매개 변수를, 당신은 또한 지정해야합니다 &lt;code&gt;monthValue&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="de521932ec12aede20e134be40b52d4486413849" translate="yes" xml:space="preserve">
          <source>Optional. An integer from 1 to 31, representing the day of the month.</source>
          <target state="translated">선택 과목. 월을 나타내는 1에서 31 사이의 정수입니다.</target>
        </trans-unit>
        <trans-unit id="b6e0aead3210bb58b2f2f80b24696dd07e012419" translate="yes" xml:space="preserve">
          <source>Optional. An integer in the range 2 through 36 specifying the base to use for representing numeric values.</source>
          <target state="translated">선택 과목. 숫자 값을 나타내는 데 사용할 밑을 지정하는 2-36 범위의 정수입니다.</target>
        </trans-unit>
        <trans-unit id="d41f86f9f990b41a8690bac861a83a7c19afe2b1" translate="yes" xml:space="preserve">
          <source>Optional. An integer specifying the number of digits after the decimal point. Defaults to as many digits as necessary to specify the number.</source>
          <target state="translated">선택 과목. 소수점 뒤의 자릿수를 지정하는 정수입니다. 숫자를 지정하는 데 필요한만큼의 숫자로 기본 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="c8659e39bcb54ccb07d1263a52c02d2b21756be4" translate="yes" xml:space="preserve">
          <source>Optional. An integer specifying the number of significant digits.</source>
          <target state="translated">선택 과목. 유효 자릿수를 지정하는 정수입니다.</target>
        </trans-unit>
        <trans-unit id="353ed7852cbcbec30c3db2ef64319b0ef482260b" translate="yes" xml:space="preserve">
          <source>Optional. An object that may have the following property:</source>
          <target state="translated">선택 과목. 다음과 같은 속성을 가질 수있는 객체 :</target>
        </trans-unit>
        <trans-unit id="abf7840a4cc97a1bb333ec1221380d6d98962f6c" translate="yes" xml:space="preserve">
          <source>Optional. An object with some or all of the following properties:</source>
          <target state="translated">선택 과목. 다음 속성 중 일부 또는 전부를 가진 객체 :</target>
        </trans-unit>
        <trans-unit id="ad93f452faeb48fc19601c83ad17d961bde586f5" translate="yes" xml:space="preserve">
          <source>Optional. Arguments for the function.</source>
          <target state="translated">선택 과목. 함수의 인수</target>
        </trans-unit>
        <trans-unit id="a83c9f300ddf325bb2ecec154e7090f219542bff" translate="yes" xml:space="preserve">
          <source>Optional. End index (not included). Defaults to this.length.</source>
          <target state="translated">선택 과목. 종료 인덱스 (포함되지 않음). 기본값은 this.length입니다.</target>
        </trans-unit>
        <trans-unit id="891f18a6a091e549009579bb240f61e70570afe2" translate="yes" xml:space="preserve">
          <source>Optional. Human-readable description of the error</source>
          <target state="translated">선택 과목. 사람이 읽을 수있는 오류 설명</target>
        </trans-unit>
        <trans-unit id="a953db7a93ee9b28375d77ed3bebd63275e9599b" translate="yes" xml:space="preserve">
          <source>Optional. Ideally, a number between 0 and 999, representing the milliseconds. If a value greater than 999 is provided, the datetime will be incremented by the extra milliseconds. If you specify the &lt;code&gt;&lt;var&gt;msValue&lt;/var&gt;&lt;/code&gt; parameter, you must also specify the &lt;code&gt;&lt;var&gt;minutesValue&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;secondsValue&lt;/code&gt;.</source>
          <target state="translated">Optional. Ideally, a number between 0 and 999, representing the milliseconds. If a value greater than 999 is provided, the datetime will be incremented by the extra milliseconds. If you specify the &lt;code&gt;&lt;var&gt;msValue&lt;/var&gt;&lt;/code&gt; parameter, you must also specify the &lt;code&gt;&lt;var&gt;minutesValue&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;secondsValue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76d23dce4f14fa27a93b742575a652782883e47c" translate="yes" xml:space="preserve">
          <source>Optional. Ideally, a number between 0 and 999, representing the milliseconds. If a value greater than 999 is provided, the datetime will be incremented by the extra milliseconds. If you specify the &lt;code&gt;msValue&lt;/code&gt; parameter, you must also specify the &lt;code&gt;minutesValue&lt;/code&gt; and &lt;code&gt;secondsValue&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 이상적으로는 밀리 초를 나타내는 0에서 999 사이의 숫자입니다. 999보다 큰 값을 제공하면 날짜 시간이 추가 밀리 초 단위로 증가합니다. 당신이 지정하는 경우 &lt;code&gt;msValue&lt;/code&gt; 의 매개 변수를, 당신은 또한 지정해야합니다 &lt;code&gt;minutesValue&lt;/code&gt; 및 &lt;code&gt;secondsValue&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="926ac8a53a7118c4f7de796b28f1cfb09bf70e0d" translate="yes" xml:space="preserve">
          <source>Optional. Ideally, an integer between 0 and 59, representing the minutes. If a value greater than 59 is provided, the datetime will be incremented by the extra minutes.</source>
          <target state="translated">선택 과목. 이상적으로는 분을 나타내는 0에서 59 사이의 정수입니다. 59보다 큰 값을 제공하면 날짜 시간이 추가 분 단위로 증가합니다.</target>
        </trans-unit>
        <trans-unit id="b5b96c416f1e71a32bba6f665c7bceb8c147c08a" translate="yes" xml:space="preserve">
          <source>Optional. Ideally, an integer between 0 and 59, representing the seconds. If a value greater than 59 is provided, the datetime will be incremented by the extra seconds. If you specify the &lt;code&gt;&lt;var&gt;secondsValue&lt;/var&gt;&lt;/code&gt; parameter, you must also specify the &lt;code&gt;&lt;var&gt;minutesValue&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">Optional. Ideally, an integer between 0 and 59, representing the seconds. If a value greater than 59 is provided, the datetime will be incremented by the extra seconds. If you specify the &lt;code&gt;&lt;var&gt;secondsValue&lt;/var&gt;&lt;/code&gt; parameter, you must also specify the &lt;code&gt;&lt;var&gt;minutesValue&lt;/var&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb24c0fad7b58d52c6f9e3734121802d8effd2c2" translate="yes" xml:space="preserve">
          <source>Optional. Ideally, an integer between 0 and 59, representing the seconds. If a value greater than 59 is provided, the datetime will be incremented by the extra seconds. If you specify the &lt;code&gt;secondsValue&lt;/code&gt; parameter, you must also specify the &lt;code&gt;minutesValue&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 이상적으로는 초를 나타내는 0에서 59 사이의 정수입니다. 59보다 큰 값을 제공하면 날짜 시간이 추가 초 단위로 증가합니다. 당신이 지정하는 경우 &lt;code&gt;secondsValue&lt;/code&gt; 매개 변수를, 당신은 또한 지정해야합니다 &lt;code&gt;minutesValue&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="8633352230c6311d91477d390a70aa3e54b81cd4" translate="yes" xml:space="preserve">
          <source>Optional. Identifier associated with the label of the statement. If the statement is not a loop or &lt;a href=&quot;switch&quot;&gt;&lt;code&gt;switch&lt;/code&gt;&lt;/a&gt;, this is required.</source>
          <target state="translated">선택 과목. 명령문의 레이블과 연관된 식별자입니다. 명령문이 루프 또는 &lt;a href=&quot;switch&quot;&gt; &lt;code&gt;switch&lt;/code&gt; &lt;/a&gt; 가 아닌 경우 필수입니다.</target>
        </trans-unit>
        <trans-unit id="1e45ec4778c6fe43f5ded55f64760fcc8908678d" translate="yes" xml:space="preserve">
          <source>Optional. If provided it is used as the length of &lt;code&gt;str&lt;/code&gt;. If omitted, the default value is the length of the string.</source>
          <target state="translated">선택 과목. 제공된 경우 &lt;code&gt;str&lt;/code&gt; 의 길이로 사용됩니다 . 생략하면 기본값은 문자열의 길이입니다.</target>
        </trans-unit>
        <trans-unit id="87576836830a40a3bc21cabd68b16268a1dda70a" translate="yes" xml:space="preserve">
          <source>Optional. If specified and not &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, an object whose enumerable own properties (that is, those properties defined upon itself and &lt;em&gt;not&lt;/em&gt; enumerable properties along its prototype chain) specify property descriptors to be added to the newly-created object, with the corresponding property names. These properties correspond to the second argument of &lt;a href=&quot;defineproperties&quot;&gt;&lt;code&gt;Object.defineProperties()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">선택 과목. 지정되고 &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; 되지 않은 경우 , 열거 가능한 자체 속성 (즉, 프로토 타입 체인을 따라 열거 할 수 &lt;em&gt;없는&lt;/em&gt; 속성) 에 자체적으로 정의 된 속성을 갖는 객체는 해당 속성 이름으로 새로 생성 된 객체에 추가 할 속성 설명자를 지정합니다. 이러한 속성은 &lt;a href=&quot;defineproperties&quot;&gt; &lt;code&gt;Object.defineProperties()&lt;/code&gt; &lt;/a&gt; 의 두 번째 인수에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="038964dcd9cd69eb136c81a61805e894d0bc29d8" translate="yes" xml:space="preserve">
          <source>Optional. Integer specifying a limit on the number of splits to be found. The &lt;code&gt;[@@split]()&lt;/code&gt; method still splits on every match of &lt;code&gt;this&lt;/code&gt; RegExp pattern, until the number of split items match the &lt;code&gt;limit&lt;/code&gt; or the string falls short of &lt;code&gt;this&lt;/code&gt; pattern.</source>
          <target state="translated">선택 과목. 찾을 분할 수에 대한 제한을 지정하는 정수입니다. &lt;code&gt;[@@split]()&lt;/code&gt; 메소드는 여전히 모든 매치에 분할 &lt;code&gt;this&lt;/code&gt; 분할 아이템의 개수가 일치 할 때까지, 정규식 패턴 &lt;code&gt;limit&lt;/code&gt; 하거나 짧은 문자열의 하강 &lt;code&gt;this&lt;/code&gt; 패턴.</target>
        </trans-unit>
        <trans-unit id="ad62e61ace2e91c4d90832bcc43d2c5681163981" translate="yes" xml:space="preserve">
          <source>Optional. Map function to call on every element of the typed array.</source>
          <target state="translated">선택 과목. 유형이 지정된 배열의 모든 요소를 ​​호출하는 맵 함수</target>
        </trans-unit>
        <trans-unit id="89c8b8954ab82da15b9c273518f962028942ee3e" translate="yes" xml:space="preserve">
          <source>Optional. Object to use as &lt;code&gt;this&lt;/code&gt; when executing &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 로 사용할 오브젝트 &lt;code&gt;this&lt;/code&gt; 실행할 때 &lt;code&gt;callback&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="661dc5ad590952276ea552e672da13d5c554734c" translate="yes" xml:space="preserve">
          <source>Optional. Object to use as the first argument to the first call of the &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="translated">선택 과목. &lt;code&gt;callback&lt;/code&gt; 의 첫 번째 호출에 대한 첫 번째 인수로 사용할 객체 입니다.</target>
        </trans-unit>
        <trans-unit id="6074a535b20b97ca3166f40dac53dc58ce7a9fe6" translate="yes" xml:space="preserve">
          <source>Optional. Source end index position where to end copying elements from.</source>
          <target state="translated">선택 과목. 요소 복사를 종료 할 소스 끝 인덱스 위치입니다.</target>
        </trans-unit>
        <trans-unit id="a0b19e3793a5da0e5e8a4575d4cfe9550d167a05" translate="yes" xml:space="preserve">
          <source>Optional. Specifies a string to separate each element. The separator is converted to a string if necessary. If omitted, the typed array elements are separated with a comma (&quot;,&quot;).</source>
          <target state="translated">선택 과목. 각 요소를 구분할 문자열을 지정합니다. 필요한 경우 구분 기호가 문자열로 변환됩니다. 생략하면 형식화 된 배열 요소는 쉼표 ( &quot;,&quot;)로 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="0633ec8064ef0762e54a4544a122fdb7d490dc35" translate="yes" xml:space="preserve">
          <source>Optional. Start index. Defaults to 0.</source>
          <target state="translated">선택 과목. 색인을 시작하십시오. 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="f4ba9bf2362af11ff12963eb2eb83193e7cd7f8a" translate="yes" xml:space="preserve">
          <source>Optional. The index at which to start searching backwards. Defaults to the typed array's length, i.e. the whole typed array will be searched. If the index is greater than or equal to the length of the typed array, the whole typed array will be searched. If negative, it is taken as the offset from the end of the typed array. Note that even when the index is negative, the typed array is still searched from back to front. If the calculated index is less than 0, -1 is returned, i.e. the typed array will not be searched.</source>
          <target state="translated">선택 과목. 뒤로 검색을 시작하는 색인입니다. 유형이 지정된 배열의 길이가 기본값입니다. 즉, 전체 유형이 지정된 배열이 검색됩니다. 색인이 유형이 지정된 배열의 길이보다 크거나 같으면 전체 유형이 지정된 배열이 검색됩니다. 음수이면 입력 된 배열의 끝에서 오프셋으로 간주됩니다. 인덱스가 음수 인 경우에도 형식화 된 배열은 계속해서 앞뒤로 검색됩니다. 계산 된 인덱스가 0보다 작은 경우 -1이 반환됩니다. 즉, 형식화 된 배열은 검색되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9d1cd959121feaeb0d8d43dedf19dab7ae446d96" translate="yes" xml:space="preserve">
          <source>Optional. The index of the first character to exclude from the returned substring.</source>
          <target state="translated">선택 과목. 반환 된 부분 문자열에서 제외 할 첫 번째 문자의 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="cebf85129aa3ee4548e165952d2739e2b298dafc" translate="yes" xml:space="preserve">
          <source>Optional. The initial value of the &lt;code&gt;Boolean&lt;/code&gt; object.</source>
          <target state="translated">선택 과목. &lt;code&gt;Boolean&lt;/code&gt; 객체 의 초기 값입니다 .</target>
        </trans-unit>
        <trans-unit id="ee894f08b98fb7fdef8e7541ab831d10c17fc2cd" translate="yes" xml:space="preserve">
          <source>Optional. The line number of the code that caused the exception</source>
          <target state="translated">선택 과목. 예외를 일으킨 코드의 줄 번호</target>
        </trans-unit>
        <trans-unit id="c347532465befbe673fa4f0fd7c851afd12ec327" translate="yes" xml:space="preserve">
          <source>Optional. The name of the file containing the code that caused the exception</source>
          <target state="translated">선택 과목. 예외를 일으킨 코드를 포함하는 파일 이름</target>
        </trans-unit>
        <trans-unit id="e5d51ea62238de211964057685b7b04d3c14d9bd" translate="yes" xml:space="preserve">
          <source>Optional. The number of characters to extract.</source>
          <target state="translated">선택 과목. 추출 할 문자 수입니다.</target>
        </trans-unit>
        <trans-unit id="e3a4726f3452f9c6f29f0dfd04191a12bc03d3f1" translate="yes" xml:space="preserve">
          <source>Optional. The number of digits to appear after the decimal point; this may be a value between 0 and 20, inclusive, and implementations may optionally support a larger range of values. If this argument is omitted, it is treated as 0.</source>
          <target state="translated">선택 과목. 소수점 뒤에 표시되는 자릿수입니다. 이것은 0에서 20 사이의 값일 수 있으며 구현은 선택적으로 더 큰 범위의 값을 지원할 수 있습니다. 이 인수를 생략하면 0으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="f6ebf0738faf94966ce80f730d3860a36ca21d61" translate="yes" xml:space="preserve">
          <source>Optional. The position in this array at which to begin searching for &lt;code&gt;searchElement&lt;/code&gt;; defaults to 0.</source>
          <target state="translated">선택 과목. &lt;code&gt;searchElement&lt;/code&gt; 를 검색하기 시작할이 배열의 위치입니다 . 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="a10a9f1ce1dc1d39ba88a7dd25f4f4845154214e" translate="yes" xml:space="preserve">
          <source>Optional. The value for the &lt;code&gt;fileName&lt;/code&gt; property on the created &lt;code&gt;Error&lt;/code&gt; object. Defaults to the name of the file containing the code that called the &lt;code&gt;Error()&lt;/code&gt; constructor.</source>
          <target state="translated">선택 과목. 작성된 &lt;code&gt;Error&lt;/code&gt; 객체 의 &lt;code&gt;fileName&lt;/code&gt; 속성 값입니다 . 기본적으로 &lt;code&gt;Error()&lt;/code&gt; 생성자 를 호출 한 코드가 포함 된 파일 이름이 기본값 입니다.</target>
        </trans-unit>
        <trans-unit id="ead99ac56ff43e8df9daf96761b9c793dc15b6e8" translate="yes" xml:space="preserve">
          <source>Optional. The value for the &lt;code&gt;lineNumber&lt;/code&gt; property on the created &lt;code&gt;Error&lt;/code&gt; object. Defaults to the line number containing the &lt;code&gt;Error()&lt;/code&gt; constructor invocation.</source>
          <target state="translated">선택 과목. 작성된 &lt;code&gt;Error&lt;/code&gt; 객체 의 &lt;code&gt;lineNumber&lt;/code&gt; 속성 값입니다 . &lt;code&gt;Error()&lt;/code&gt; 생성자 호출을 포함하는 줄 번호가 기본값 입니다.</target>
        </trans-unit>
        <trans-unit id="ed2a8fd44000dc6062e1099888733f586d1c8623" translate="yes" xml:space="preserve">
          <source>Optional. The value of &lt;code&gt;this&lt;/code&gt; provided for the call to &lt;em&gt;&lt;code&gt;func&lt;/code&gt;&lt;/em&gt;. Note that &lt;code&gt;this&lt;/code&gt; may not be the actual value seen by the method: if the method is a function in &lt;a href=&quot;../../strict_mode&quot;&gt;non-strict mode&lt;/a&gt; code, &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; will be replaced with the global object, and primitive values will be boxed.</source>
          <target state="translated">선택 과목. 의 값 &lt;code&gt;this&lt;/code&gt; 호출 제공 &lt;em&gt; &lt;code&gt;func&lt;/code&gt; &lt;/em&gt; . 참고 &lt;code&gt;this&lt;/code&gt; 방법은의 함수 인 경우 상기 방법에 의해 나타나는 실제 값하지 않을 &lt;a href=&quot;../../strict_mode&quot;&gt;비 엄격 모드&lt;/a&gt; 코드 &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; 전역 객체로 대체 될 것이며, 프리미티브 값 박스형한다.</target>
        </trans-unit>
        <trans-unit id="4fc32772615f562c59dfc39b88293c03171b4d1b" translate="yes" xml:space="preserve">
          <source>Optional. The value of &lt;code&gt;this&lt;/code&gt; provided for the call to a &lt;code&gt;&lt;var&gt;function&lt;/var&gt;&lt;/code&gt;. Note that &lt;code&gt;this&lt;/code&gt; may not be the actual value seen by the method: if the method is a function in &lt;a href=&quot;../../strict_mode&quot;&gt;non-strict mode&lt;/a&gt;, &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; will be replaced with the global object and primitive values will be converted to objects.</source>
          <target state="translated">선택 과목. 의 값 &lt;code&gt;this&lt;/code&gt; (A)에 대한 호출을 위해 제공 &lt;code&gt;&lt;var&gt;function&lt;/var&gt;&lt;/code&gt; . 참고 &lt;code&gt;this&lt;/code&gt; 방법은의 함수 인 경우 상기 방법에 의해 나타나는 실제 값하지 않을 &lt;a href=&quot;../../strict_mode&quot;&gt;비 엄격 모드&lt;/a&gt; , &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; 하고 &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; 오브젝트로 변환 될 세계 객체와 프리미티브 값으로 대체 될 것이다.</target>
        </trans-unit>
        <trans-unit id="a42b36fe9e22d2aa06f08ec1a45b3250a3dda3f3" translate="yes" xml:space="preserve">
          <source>Optional. The zero-based index &lt;em&gt;before&lt;/em&gt; which to end extraction. The character at this index will not be included. If &lt;code&gt;endIndex&lt;/code&gt; is omitted, &lt;code&gt;slice()&lt;/code&gt; extracts to the end of the string. If negative, it is treated as &lt;code&gt;strLength + endIndex&lt;/code&gt; where &lt;code&gt;strLength&lt;/code&gt; is the length of the string (for example, if &lt;code&gt;endIndex&lt;/code&gt; is &lt;code&gt;-3&lt;/code&gt; it is treated as &lt;code&gt;strLength - 3)&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 추출을 종료 &lt;em&gt;하기 전의&lt;/em&gt; 인덱스 (0부터 &lt;em&gt;시작)&lt;/em&gt; 입니다. 이 색인의 문자는 포함되지 않습니다. 경우 &lt;code&gt;endIndex&lt;/code&gt; 생략 &lt;code&gt;slice()&lt;/code&gt; 문자열의 끝으로 추출. 음수 인 경우 &lt;code&gt;strLength + endIndex&lt;/code&gt; 로 처리되며, 여기서 &lt;code&gt;strLength&lt;/code&gt; 는 문자열의 길이입니다 (예 : &lt;code&gt;endIndex&lt;/code&gt; 가 &lt;code&gt;-3&lt;/code&gt; 인 경우 &lt;code&gt;strLength - 3)&lt;/code&gt; 으로 처리됨) .</target>
        </trans-unit>
        <trans-unit id="e0710be00ed69d027490be2d4513d1df7c6f8583" translate="yes" xml:space="preserve">
          <source>Optional. Value to use as &lt;code&gt;this&lt;/code&gt; when executing &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 값으로 사용하는 &lt;code&gt;this&lt;/code&gt; 실행할 때 &lt;code&gt;callback&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e5469e13e11ac128945b224614de4b2013eede4" translate="yes" xml:space="preserve">
          <source>Optional. Value to use as &lt;code&gt;this&lt;/code&gt; when executing &lt;code&gt;mapFn&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 값으로 사용하는 &lt;code&gt;this&lt;/code&gt; 실행할 때 &lt;code&gt;mapFn&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="fa26ccf85bc6f968242ada4c599f68a407b51da6" translate="yes" xml:space="preserve">
          <source>Optionally, a timezone name consisting of:</source>
          <target state="translated">선택적으로 시간대 이름은 다음으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="69b0c6cb3e1ef64fdf535fe0b7056ba6a5655b96" translate="yes" xml:space="preserve">
          <source>Or &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; when the first non-whitespace character cannot be converted to a number.</source>
          <target state="translated">Or &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; when the first non-whitespace character cannot be converted to a number.</target>
        </trans-unit>
        <trans-unit id="1c91908f2e72d1b82f2aed3fc8ad45082d5fbf27" translate="yes" xml:space="preserve">
          <source>Or &lt;a href=&quot;nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; when</source>
          <target state="translated">Or &lt;a href=&quot;nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; when</target>
        </trans-unit>
        <trans-unit id="22e6c0d23e858004b7a233cf7b576b77f6404489" translate="yes" xml:space="preserve">
          <source>Or &lt;a href=&quot;nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; when the first non-whitespace character cannot be converted to a number.</source>
          <target state="translated">Or &lt;a href=&quot;nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; when the first non-whitespace character cannot be converted to a number.</target>
        </trans-unit>
        <trans-unit id="a8c59b395d3e866fed015beee40819bb644292b7" translate="yes" xml:space="preserve">
          <source>Or did you mean to create a string instead? Add single or double quotes to create a string literal.</source>
          <target state="translated">아니면 대신 문자열을 만들려고 했습니까? 작은 따옴표 나 큰 따옴표를 추가하여 문자열 리터럴을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="4ee5bdfd3f18821f7ae7bbbf90b13aa437bc8f12" translate="yes" xml:space="preserve">
          <source>Or iterables can be defined directly inside a class or object using a &lt;a href=&quot;../../operators/object_initializer#Computed_property_names&quot;&gt;computed property&lt;/a&gt;:</source>
          <target state="translated">Or iterables can be defined directly inside a class or object using a &lt;a href=&quot;../../operators/object_initializer#Computed_property_names&quot;&gt;computed property&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="8569149e10dc9d7bef361199016922c2127e6fae" translate="yes" xml:space="preserve">
          <source>Or you can use the backslash character (&quot;\&quot;) at the end of each line to indicate that the string will continue on the next line. Make sure there is no space or any other character after the backslash (except for a line break), or as an indent; otherwise it will not work. That form looks like this:</source>
          <target state="translated">또는 각 줄 끝에 백 슬래시 문자 ( &quot;\&quot;)를 사용하여 다음 줄에서 문자열이 계속 될 것임을 나타낼 수 있습니다. 백 슬래시 뒤에 (줄 바꿈 제외) 또는 들여 쓰기로 공백이나 다른 문자가 없는지 확인하십시오. 그렇지 않으면 작동하지 않습니다. 그 형태는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="561c903b00152f42d67e5dfa8c71b2b860d0d0fa" translate="yes" xml:space="preserve">
          <source>Or, alternatively, you can set a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/SourceMap&quot;&gt;&lt;code&gt;SourceMap&lt;/code&gt;&lt;/a&gt; header to your JavaScript file to avoid having a comment at all:</source>
          <target state="translated">또는 주석이 전혀 없도록 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/SourceMap&quot;&gt; &lt;code&gt;SourceMap&lt;/code&gt; &lt;/a&gt; 헤더를 JavaScript 파일로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4555b2d3182c93dd73e5157360212e6dc7dfe946" translate="yes" xml:space="preserve">
          <source>Or, alternatively, you can set a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTTP/Headers/SourceMap&quot;&gt;&lt;code&gt;SourceMap&lt;/code&gt;&lt;/a&gt; header to your JavaScript file to avoid having a comment at all:</source>
          <target state="translated">Or, alternatively, you can set a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTTP/Headers/SourceMap&quot;&gt; &lt;code&gt;SourceMap&lt;/code&gt; &lt;/a&gt; header to your JavaScript file to avoid having a comment at all:</target>
        </trans-unit>
        <trans-unit id="6c1391cddfcd691f9f63995b9ebbe7aa877cf210" translate="yes" xml:space="preserve">
          <source>Or, alternatively, you can set a header to your JavaScript file:</source>
          <target state="translated">또는 JavaScript 파일에 헤더를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cfc225b5c0d8aeb09ad8d8785f450ad2f67371e5" translate="yes" xml:space="preserve">
          <source>Or, using &lt;a href=&quot;../statements/for...of&quot;&gt;&lt;code&gt;for...of&lt;/code&gt;&lt;/a&gt; (ES2015) and &lt;a href=&quot;../global_objects/object/entries&quot;&gt;&lt;code&gt;Object.entries&lt;/code&gt;&lt;/a&gt; (ES2017), you can get an array of the specified object values and iterate over the array like this:</source>
          <target state="translated">또는 &lt;a href=&quot;../statements/for...of&quot;&gt; &lt;code&gt;for...of&lt;/code&gt; &lt;/a&gt; (ES2015) 및 &lt;a href=&quot;../global_objects/object/entries&quot;&gt; &lt;code&gt;Object.entries&lt;/code&gt; &lt;/a&gt; (ES2017)를 사용하여 지정된 객체 값의 배열을 가져 와서 다음과 같이 배열을 반복 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e86fd006e313f64b39e4c682a50b0eb76e476232" translate="yes" xml:space="preserve">
          <source>Or, using &lt;a href=&quot;../statements/for...of&quot;&gt;&lt;code&gt;for...of&lt;/code&gt;&lt;/a&gt; (ES2015) and &lt;a href=&quot;../global_objects/object/values&quot;&gt;&lt;code&gt;Object.values&lt;/code&gt;&lt;/a&gt; (ES2017), you can get an array of the specified object values and iterate over the array like this:</source>
          <target state="translated">또는 &lt;a href=&quot;../statements/for...of&quot;&gt; &lt;code&gt;for...of&lt;/code&gt; &lt;/a&gt; (ES2015) 및 &lt;a href=&quot;../global_objects/object/values&quot;&gt; &lt;code&gt;Object.values&lt;/code&gt; &lt;/a&gt; (ES2017)를 사용하여 지정된 객체 값의 배열을 가져 와서 다음과 같이 배열을 반복 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aad1c3743ece8e84953400999df40f29690171c3" translate="yes" xml:space="preserve">
          <source>Or, using ES6 &lt;a href=&quot;../../template_literals&quot;&gt;template strings&lt;/a&gt;:</source>
          <target state="translated">Or, using ES6 &lt;a href=&quot;../../template_literals&quot;&gt;template strings&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="d980251994211e5ebae644678a623630f11240b8" translate="yes" xml:space="preserve">
          <source>Or, you can make use of the &lt;a href=&quot;../global_objects/datetimeformat&quot;&gt;&lt;code&gt;Intl.DateTimeFormat&lt;/code&gt;&lt;/a&gt; object, which allows you to cache an object with most of the computations done so that formatting is fast. This is useful if you have a loop of dates to format.</source>
          <target state="translated">또는 &lt;a href=&quot;../global_objects/datetimeformat&quot;&gt; &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; &lt;/a&gt; 객체를 사용하면 대부분의 계산을 수행하여 객체를 캐시하여 서식을 빠르게 지정할 수 있습니다. 형식화 할 날짜 루프가있는 경우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="de4e925d4c06dedf87f4d35490dc57ceadd9316c" translate="yes" xml:space="preserve">
          <source>Or, you can make use of the &lt;a href=&quot;../global_objects/intl/datetimeformat&quot;&gt;&lt;code&gt;Intl.DateTimeFormat&lt;/code&gt;&lt;/a&gt; object, which allows you to cache an object with most of the computations done so that formatting is fast. This is useful if you have a loop of dates to format.</source>
          <target state="translated">Or, you can make use of the &lt;a href=&quot;../global_objects/intl/datetimeformat&quot;&gt; &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; &lt;/a&gt; object, which allows you to cache an object with most of the computations done so that formatting is fast. This is useful if you have a loop of dates to format.</target>
        </trans-unit>
        <trans-unit id="bc4db7e5207387c25e0c15c8f40cd9651ff9cfcb" translate="yes" xml:space="preserve">
          <source>Or, you function is maybe intended to be an &lt;a href=&quot;https://en.wikipedia.org/wiki/Immediately-invoked_function_expression&quot;&gt;IIFE&lt;/a&gt; (Immediately Invoked Function Expression), which is a function that runs as soon as it is defined. You will need a few more braces in this case:</source>
          <target state="translated">또는 함수 가 정의 된 즉시 실행되는 함수 인 &lt;a href=&quot;https://en.wikipedia.org/wiki/Immediately-invoked_function_expression&quot;&gt;IIFE&lt;/a&gt; (즉시 호출 된 함수 표현식) 일 수 있습니다. 이 경우 몇 가지 괄호가 더 필요합니다.</target>
        </trans-unit>
        <trans-unit id="f5f6fdc01b44ccf9e40e55c69e5530d502010ffc" translate="yes" xml:space="preserve">
          <source>Ordinary object (ES2015)</source>
          <target state="translated">일반 객체 (ES2015)</target>
        </trans-unit>
        <trans-unit id="d95225a5d97931830cc8fe562af038ce2cd9f500" translate="yes" xml:space="preserve">
          <source>Ordinary parameter and rest parameters</source>
          <target state="translated">Ordinary parameter and rest parameters</target>
        </trans-unit>
        <trans-unit id="cb492e1a10ad8495d78f8f606b68b93de0c2d3de" translate="yes" xml:space="preserve">
          <source>Origin of &lt;code&gt;NaN&lt;/code&gt; values</source>
          <target state="translated">&lt;code&gt;NaN&lt;/code&gt; 값의 기원</target>
        </trans-unit>
        <trans-unit id="9b2eb23e93b21ac546291450b75b7a09d5e1fbe4" translate="yes" xml:space="preserve">
          <source>Origin of NaN values</source>
          <target state="translated">Origin of NaN values</target>
        </trans-unit>
        <trans-unit id="398b7df1c5d76e072b03f1f5853ed5290220702a" translate="yes" xml:space="preserve">
          <source>Original proposal at ecmascript.org</source>
          <target state="translated">ecmascript.org의 원래 제안</target>
        </trans-unit>
        <trans-unit id="b7d01a699b0573984a8f9403af7d5b1486182845" translate="yes" xml:space="preserve">
          <source>Oriya digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="114f61a7cddac435382c78c2a3c50eebb30ca4dd" translate="yes" xml:space="preserve">
          <source>Osmanya digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e6a6f2086bb5fe5dbfd17d8d5f502d48759834b" translate="yes" xml:space="preserve">
          <source>Other</source>
          <target state="translated">Other</target>
        </trans-unit>
        <trans-unit id="6f7c009939da2aff2a698e1024561b48df273397" translate="yes" xml:space="preserve">
          <source>Other BCP 47 extension tags can be found in the &lt;a href=&quot;https://github.com/unicode-org/cldr/tree/master/common/bcp47&quot;&gt;Unicode CLDR Project&lt;/a&gt;.</source>
          <target state="translated">Other BCP 47 extension tags can be found in the &lt;a href=&quot;https://github.com/unicode-org/cldr/tree/master/common/bcp47&quot;&gt;Unicode CLDR Project&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a33b584f108e537a2ab567a24434561b745d6223" translate="yes" xml:space="preserve">
          <source>Other Iterable objects</source>
          <target state="translated">다른 반복 가능한 객체</target>
        </trans-unit>
        <trans-unit id="20632887f6af52c68ba1ba09c785953c74157a8e" translate="yes" xml:space="preserve">
          <source>Other Unicode space characters</source>
          <target state="translated">다른 유니 코드 공백 문자</target>
        </trans-unit>
        <trans-unit id="317aabdb40e78bc77b4f1b62a66eb4f0e0d062a1" translate="yes" xml:space="preserve">
          <source>Other differences include allowing only double-quoted strings and having no provisions for &lt;a href=&quot;undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; or comments. For those who wish to use a more human-friendly configuration format based on JSON, there is &lt;a href=&quot;https://json5.org/&quot;&gt;JSON5&lt;/a&gt;, used by the Babel compiler, and the more commonly used &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML&quot;&gt;YAML&lt;/a&gt;.</source>
          <target state="translated">Other differences include allowing only double-quoted strings and having no provisions for &lt;a href=&quot;undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; or comments. For those who wish to use a more human-friendly configuration format based on JSON, there is &lt;a href=&quot;https://json5.org/&quot;&gt;JSON5&lt;/a&gt;, used by the Babel compiler, and the more commonly used &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML&quot;&gt;YAML&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="616034e9f60a9fc4c74d097d8a234b2d8a39d993" translate="yes" xml:space="preserve">
          <source>Other engines such as v8 (Chrome), Chakra (IE/Edge), and JSC (WebKit/Safari) are investigating whether to remove the nonstandard behavior as well.</source>
          <target state="translated">v8 (Chrome), Chakra (IE / Edge) 및 JSC (WebKit / Safari)와 같은 다른 엔진도 비표준 동작을 제거할지 여부를 조사하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7e13bed50c4da975b1ae3753cc2c408d114b3b9" translate="yes" xml:space="preserve">
          <source>Other errors regarding formal parameters:</source>
          <target state="translated">공식 매개 변수와 관련된 기타 오류 :</target>
        </trans-unit>
        <trans-unit id="0ac3c9882a4b70189ad1bfa57e91f5a096b4d423" translate="yes" xml:space="preserve">
          <source>Other examples:</source>
          <target state="translated">다른 예 :</target>
        </trans-unit>
        <trans-unit id="ea910b17053e23533d815464a56b475af947b4f3" translate="yes" xml:space="preserve">
          <source>Other methods</source>
          <target state="translated">다른 방법</target>
        </trans-unit>
        <trans-unit id="aae1e11b4924213c54fb0ec6583f020c4f972e61" translate="yes" xml:space="preserve">
          <source>Other methods (e.g., &lt;a href=&quot;array/push&quot;&gt;&lt;code&gt;push()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/splice&quot;&gt;&lt;code&gt;splice()&lt;/code&gt;&lt;/a&gt;, etc.) also result in updates to an array's &lt;a href=&quot;array/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">Other methods (e.g., &lt;a href=&quot;array/push&quot;&gt; &lt;code&gt;push()&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;array/splice&quot;&gt; &lt;code&gt;splice()&lt;/code&gt; &lt;/a&gt;, etc.) also result in updates to an array's &lt;a href=&quot;array/length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; property.</target>
        </trans-unit>
        <trans-unit id="b3517ea889fc79250f4f16d49b6965b31eff2cf8" translate="yes" xml:space="preserve">
          <source>Other situations</source>
          <target state="translated">다른 상황</target>
        </trans-unit>
        <trans-unit id="4c92d3af7eb13785b6decd174d81a89c46cd4734" translate="yes" xml:space="preserve">
          <source>Other symbols</source>
          <target state="translated">다른 기호들</target>
        </trans-unit>
        <trans-unit id="f8eff7fad83e9b98891ec2d767bf7b6d40f71fd1" translate="yes" xml:space="preserve">
          <source>Other web resources:</source>
          <target state="translated">다른 웹 리소스 :</target>
        </trans-unit>
        <trans-unit id="8d7bf5bf136e81f9388c1f4eca050d6d94e965d7" translate="yes" xml:space="preserve">
          <source>Others</source>
          <target state="translated">Others</target>
        </trans-unit>
        <trans-unit id="443e113ca0920f666c098e4c8e7f848c277cdfc5" translate="yes" xml:space="preserve">
          <source>Others have a built-in &lt;code&gt;toStringTag&lt;/code&gt; symbol defined:</source>
          <target state="translated">다른 것에는 내장 &lt;code&gt;toStringTag&lt;/code&gt; 기호가 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="0746525e69e56f2621fb0998e8283be7fcbc58c6" translate="yes" xml:space="preserve">
          <source>Otherwise JavaScript attempts to convert non-numeric types to numeric values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91acd5fc73fa02d9d5bf2b9a1c9c927f09b90040" translate="yes" xml:space="preserve">
          <source>Otherwise the values are compared as numeric values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="601687825e5236ffe7ada585636c3083b64a9210" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">Otherwise, &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; is returned.</target>
        </trans-unit>
        <trans-unit id="b35597599f24c717eeb3af9e9bb75beb75e35b6f" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;lastIndex&lt;/code&gt; is set to the next position following the most recent match.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;lastIndex&lt;/code&gt; 는 가장 최근에 일치 한 다음 위치로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="f7a542ebffa0b2f6300f00ae015aae52a3cde1f2" translate="yes" xml:space="preserve">
          <source>Otherwise, compare the two operand's values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4161ba82920cb1606a6457c62739c937ea009662" translate="yes" xml:space="preserve">
          <source>Otherwise, it will return an object of a Type that corresponds to the given value.</source>
          <target state="translated">Otherwise, it will return an object of a Type that corresponds to the given value.</target>
        </trans-unit>
        <trans-unit id="2a325456213d6a737e467e5cd9b893c75f1dc08b" translate="yes" xml:space="preserve">
          <source>Otherwise, you might want to clamp the length before setting the length property, or using it as argument of the constructor.</source>
          <target state="translated">그렇지 않으면 length 속성을 설정하거나 생성자의 인수로 사용하기 전에 길이를 고정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5c85f2fa5903cc5eeb11de2a20f258881785536" translate="yes" xml:space="preserve">
          <source>Otherwise, you probably meant to use a comparison operator (e.g. &lt;code&gt;==&lt;/code&gt; or &lt;code&gt;===&lt;/code&gt;):</source>
          <target state="translated">그렇지 않으면 비교 연산자 (예 : &lt;code&gt;==&lt;/code&gt; 또는 &lt;code&gt;===&lt;/code&gt; ) 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4bed336194a9a5c86b6a734f03b3570d2aae1a68" translate="yes" xml:space="preserve">
          <source>Output</source>
          <target state="translated">Output</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="59f0d085026f741b88da2c8d9b558e0b4f1434b8" translate="yes" xml:space="preserve">
          <source>Output: !</source>
          <target state="translated">출력 :!</target>
        </trans-unit>
        <trans-unit id="6d17757e0c8a93cbc3e3aae70c1f62c08c3fb3fa" translate="yes" xml:space="preserve">
          <source>Output: ?</source>
          <target state="translated">출력 :?</target>
        </trans-unit>
        <trans-unit id="bbbbf8704d35ecaa7c5ff39e3292fa22b5463667" translate="yes" xml:space="preserve">
          <source>Output: Name?</source>
          <target state="translated">출력 : 이름?</target>
        </trans-unit>
        <trans-unit id="b1ec8d4e3a446f4ce4aba6ed7bf6f4a4462d5ce4" translate="yes" xml:space="preserve">
          <source>Output: So What Is Your Name?</source>
          <target state="translated">결과 : 그래서 당신의 이름은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="fc9c07518809d176f3f7fbdaae1c8826d9b965c1" translate="yes" xml:space="preserve">
          <source>Output: What Is Your Name?</source>
          <target state="translated">결과 : 당신의 이름은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="a1f9c1423a0d09d03c22da31af627179e76f5a01" translate="yes" xml:space="preserve">
          <source>Output: Your Name?</source>
          <target state="translated">결과 : 당신의 이름은?</target>
        </trans-unit>
        <trans-unit id="3ef900159fcc4d4fe27dda5776d1655c21ffd64a" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;a href=&quot;object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Overrides the &lt;a href=&quot;object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="be6a695012087a2e0330e5ac45479f4a2cc6a201" translate="yes" xml:space="preserve">
          <source>Overriding language via the configuration object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e45df48568522617002870a7d2ab82c5d7baca" translate="yes" xml:space="preserve">
          <source>Overriding multiplication and division first, then addition and subtraction to evaluate addition first.</source>
          <target state="translated">곱셈과 나눗셈을 먼저 재정의 한 다음 덧셈과 뺄셈으로 덧셈을 먼저 평가하십시오.</target>
        </trans-unit>
        <trans-unit id="37db5e0251bd02a6aba5a0707a0d9b11ac1083f9" translate="yes" xml:space="preserve">
          <source>Overriding the default &lt;code&gt;toString&lt;/code&gt; method</source>
          <target state="translated">기본 &lt;code&gt;toString&lt;/code&gt; 메서드 재정의</target>
        </trans-unit>
        <trans-unit id="4408806708c57b5656b0868b520017091309455c" translate="yes" xml:space="preserve">
          <source>Overriding the default toString method</source>
          <target state="translated">Overriding the default toString method</target>
        </trans-unit>
        <trans-unit id="1f69ccdf47fd60a31f8e13e4018e8b48fd8a5ab5" translate="yes" xml:space="preserve">
          <source>Overriding valueOf for custom objects</source>
          <target state="translated">사용자 정의 객체에 대한 valueOf 재정의</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="199d6fe6f5c59596942287546c66ce5317e07b6c" translate="yes" xml:space="preserve">
          <source>Pads the current string from the end with a given string and returns a new string of the length &lt;code&gt;&lt;var&gt;targetLength&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">Pads the current string from the end with a given string and returns a new string of the length &lt;code&gt;&lt;var&gt;targetLength&lt;/var&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8565248303cd94d7e15e24c82fe48cfaa477b291" translate="yes" xml:space="preserve">
          <source>Pads the current string from the end with a given string to create a new string from a given length.</source>
          <target state="translated">주어진 길이에서 새 문자열을 만들기 위해 현재 문자열을 주어진 문자열로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="4f11499702f60b6aa6b79faacc0777c480c417f7" translate="yes" xml:space="preserve">
          <source>Pads the current string from the start with a given string and returns a new string of the length &lt;code&gt;&lt;var&gt;targetLength&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">Pads the current string from the start with a given string and returns a new string of the length &lt;code&gt;&lt;var&gt;targetLength&lt;/var&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a5696509653821e523557e67c032eeb63fc2523" translate="yes" xml:space="preserve">
          <source>Pads the current string from the start with a given string to create a new string from a given length.</source>
          <target state="translated">주어진 길이에서 새로운 문자열을 만들기 위해 주어진 문자열로 시작부터 현재 문자열을 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="8ae47d25e0b292e59824305e2cb5dad6c3f287c1" translate="yes" xml:space="preserve">
          <source>Page breaking control character (&lt;a href=&quot;http://en.wikipedia.org/wiki/Page_break#Form_feed&quot;&gt;Wikipedia&lt;/a&gt;).</source>
          <target state="translated">페이지 구분 제어 문자 ( &lt;a href=&quot;http://en.wikipedia.org/wiki/Page_break#Form_feed&quot;&gt;Wikipedia&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="71f828868c920bb6375b087fc216e25121f5c1c8" translate="yes" xml:space="preserve">
          <source>Page breaking control character (&lt;a href=&quot;https://en.wikipedia.org/wiki/Page_break#Form_feed&quot;&gt;Wikipedia&lt;/a&gt;).</source>
          <target state="translated">Page breaking control character (&lt;a href=&quot;https://en.wikipedia.org/wiki/Page_break#Form_feed&quot;&gt;Wikipedia&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="6d327d4789327a533ce495947738736d21fd0159" translate="yes" xml:space="preserve">
          <source>Pahawh Hmong digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cee5749929302f61496a2c72dd6ded23d2ea553" translate="yes" xml:space="preserve">
          <source>Pairs of names (strings) and values (any value) where the name is separated from the value by a colon.</source>
          <target state="translated">콜론으로 값과 이름을 구분하는 이름 (문자열) 및 값 (모든 값)의 쌍입니다.</target>
        </trans-unit>
        <trans-unit id="312270aaaff20da30c74f328ff0f10c9927c4efe" translate="yes" xml:space="preserve">
          <source>Paragraph Separator</source>
          <target state="translated">단락 구분자</target>
        </trans-unit>
        <trans-unit id="2237f41b9c8530d11c626cb6bae0a3c21a0c030c" translate="yes" xml:space="preserve">
          <source>Parameter definitions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parameters</target>
        </trans-unit>
        <trans-unit id="b1219eebd920a527b4fc27aae123f789813eb6c2" translate="yes" xml:space="preserve">
          <source>Parameters are still set left-to-right, overwriting default parameters even if there are later parameters without defaults.</source>
          <target state="translated">Parameters are still set left-to-right, overwriting default parameters even if there are later parameters without defaults.</target>
        </trans-unit>
        <trans-unit id="8dc5f1e8ccc97cc0f61eb96906488bf20ef522d3" translate="yes" xml:space="preserve">
          <source>Parameters defined beforehand (to the left) are available to later default parameters:</source>
          <target state="translated">미리 정의 된 매개 변수 (왼쪽)는 나중에 기본 매개 변수에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d0245d31d9360e69471aa7a8868d9fbe0be74c3" translate="yes" xml:space="preserve">
          <source>Parameters defined earlier (to the left) are available to later default parameters:</source>
          <target state="translated">Parameters defined earlier (to the left) are available to later default parameters:</target>
        </trans-unit>
        <trans-unit id="05683ff24944c645fd5ac78ad09ea385d97ab113" translate="yes" xml:space="preserve">
          <source>Parameters in Detail</source>
          <target state="translated">Parameters in Detail</target>
        </trans-unit>
        <trans-unit id="fa8315952dcfbaa7a5308c95fdf65385b73dcc17" translate="yes" xml:space="preserve">
          <source>Parameters without defaults after default parameters</source>
          <target state="translated">기본 매개 변수 다음에 기본값이없는 매개 변수</target>
        </trans-unit>
        <trans-unit id="190d99bad1fecbaa7cee24f5f2e82dfe512db8fd" translate="yes" xml:space="preserve">
          <source>Parse a string as JSON, optionally transform the produced value and its properties, and return the value.</source>
          <target state="translated">문자열을 JSON으로 구문 분석하고 선택적으로 생성 된 값과 해당 특성을 변환 한 후 값을 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="902bae5eb5d5a72f8026a18b1ea9becf52096a8e" translate="yes" xml:space="preserve">
          <source>Parse the string &lt;code&gt;&lt;var&gt;text&lt;/var&gt;&lt;/code&gt; as JSON, optionally transform the produced value and its properties, and return the value. Any violations of the JSON syntax, including those pertaining to the differences between JavaScript and JSON, cause a &lt;a href=&quot;syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; to be thrown. The &lt;code&gt;&lt;var&gt;reviver&lt;/var&gt;&lt;/code&gt; option allows for interpreting what the &lt;code&gt;&lt;var&gt;replacer&lt;/var&gt;&lt;/code&gt; has used to stand in for other datatypes.</source>
          <target state="translated">Parse the string &lt;code&gt;&lt;var&gt;text&lt;/var&gt;&lt;/code&gt; as JSON, optionally transform the produced value and its properties, and return the value. Any violations of the JSON syntax, including those pertaining to the differences between JavaScript and JSON, cause a &lt;a href=&quot;syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt; to be thrown. The &lt;code&gt;&lt;var&gt;reviver&lt;/var&gt;&lt;/code&gt; option allows for interpreting what the &lt;code&gt;&lt;var&gt;replacer&lt;/var&gt;&lt;/code&gt; has used to stand in for other datatypes.</target>
        </trans-unit>
        <trans-unit id="40f752a6afc8699592a1f64d5cdf90356c68b7ed" translate="yes" xml:space="preserve">
          <source>Parses a string representation of a date and returns the number of milliseconds since 1 January, 1970, 00:00:00 UTC, with leap seconds ignored.</source>
          <target state="translated">Parses a string representation of a date and returns the number of milliseconds since 1 January, 1970, 00:00:00 UTC, with leap seconds ignored.</target>
        </trans-unit>
        <trans-unit id="14e7f853bf12db6333368b5461f5c93432f36a68" translate="yes" xml:space="preserve">
          <source>Parses a string representation of a date and returns the number of milliseconds since 1 January, 1970, 00:00:00, UTC, with leap seconds ignored.</source>
          <target state="translated">날짜의 문자열 표현을 구문 분석하고 1970 년 1 월 1 일 00:00:00 (UTC) 이후 윤초를 무시하고 밀리 초 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dafb62341b9afeff06e0763fa52287cd2b82d3dd" translate="yes" xml:space="preserve">
          <source>Parses leading-zero strings are decimal, not octal</source>
          <target state="translated">선행 0 문자열은 8 진수가 아닌 10 진수입니다.</target>
        </trans-unit>
        <trans-unit id="0b6b13ce79c6ee5e6abf6a142a5fe6e9bdd3e0e3" translate="yes" xml:space="preserve">
          <source>Parsing JSON (converting strings to JavaScript objects)</source>
          <target state="translated">JSON 구문 분석 (문자열을 JavaScript 객체로 변환)</target>
        </trans-unit>
        <trans-unit id="e2b6eae453b4837b9eaffe13b9ebfccf76c01da3" translate="yes" xml:space="preserve">
          <source>Parsing an array returned from a function</source>
          <target state="translated">함수에서 반환 된 배열 파싱</target>
        </trans-unit>
        <trans-unit id="12c47204de7a6c8fb604680b708f81f3ba367d54" translate="yes" xml:space="preserve">
          <source>Parsing order</source>
          <target state="translated">파싱 ​​순서</target>
        </trans-unit>
        <trans-unit id="e939ea3b125d7ff5f4796711a9c99dfa293d205a" translate="yes" xml:space="preserve">
          <source>Partially applied functions</source>
          <target state="translated">부분적으로 적용되는 기능</target>
        </trans-unit>
        <trans-unit id="b19e0ea34174f4adbd149fe0974f24a5d7637564" translate="yes" xml:space="preserve">
          <source>Pass data instead of code</source>
          <target state="translated">코드 대신 데이터 전달</target>
        </trans-unit>
        <trans-unit id="16ac4c56ba61a40d24d0c78d23cc735a9989e3f4" translate="yes" xml:space="preserve">
          <source>Passes the newly created object from &lt;em&gt;Step 1&lt;/em&gt; as the &lt;code&gt;this&lt;/code&gt; context;</source>
          <target state="translated">Passes the newly created object from &lt;em&gt;Step 1&lt;/em&gt; as the &lt;code&gt;this&lt;/code&gt; context;</target>
        </trans-unit>
        <trans-unit id="bc17b7d2e0eca0bf16a44decb97f160c549f2ccf" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;undefined&lt;/code&gt; vs. other falsy values</source>
          <target state="translated">&lt;code&gt;undefined&lt;/code&gt; 대 다른 잘못된 값 전달</target>
        </trans-unit>
        <trans-unit id="b9d7ff837f6bdbbca090231d4e7e6dfb7c8adbde" translate="yes" xml:space="preserve">
          <source>Passing an empty object, an array with more than one member, a non-numeric string or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;/empty variable returns &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;. Passing &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;, an empty string or an empty array returns 0.</source>
          <target state="translated">빈 객체, 둘 이상의 멤버가있는 배열, 숫자가 아닌 문자열 또는 &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; / empty 변수를 전달하면 &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; 이 반환&lt;/a&gt; 됩니다. &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; , 빈 문자열 또는 빈 배열을 전달하면 0이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="494da2fe1033f4e6bb5d7a8ebd6826b2b152c118" translate="yes" xml:space="preserve">
          <source>Passing arguments into Generators</source>
          <target state="translated">생성기에 인수 전달</target>
        </trans-unit>
        <trans-unit id="9a46a241999424e26538f38470ceb75500ad5f30" translate="yes" xml:space="preserve">
          <source>Passing the object as &lt;code&gt;this&lt;/code&gt; value is not strictly necessary, but is done for explanatory purpose.</source>
          <target state="translated">Passing the object as &lt;code&gt;this&lt;/code&gt; value is not strictly necessary, but is done for explanatory purpose.</target>
        </trans-unit>
        <trans-unit id="9b091423b281eed2f0a4260b4377571d223183fc" translate="yes" xml:space="preserve">
          <source>Path to file that raised this error.</source>
          <target state="translated">이 오류가 발생한 파일의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="68a82c862b20ee0bf6d2155d07cc30b5b2c577d9" translate="yes" xml:space="preserve">
          <source>Path to file that raised this error. Inherited from &lt;a href=&quot;../error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 오류가 발생한 파일의 경로입니다. &lt;a href=&quot;../error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 에서 상속되었습니다 .</target>
        </trans-unit>
        <trans-unit id="78061300c3301f72422fec4c414cd7018932f903" translate="yes" xml:space="preserve">
          <source>Path to file that raised this error. Inherited from &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 오류가 발생한 파일의 경로입니다. &lt;a href=&quot;error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 에서 상속되었습니다 .</target>
        </trans-unit>
        <trans-unit id="1fff6a31661b491fc40cc9c1ad7fe5e479cb7500" translate="yes" xml:space="preserve">
          <source>Pattern</source>
          <target state="translated">Pattern</target>
        </trans-unit>
        <trans-unit id="ecd8a21832e0e12929298f235a8805110587260b" translate="yes" xml:space="preserve">
          <source>Pause and resume a generator function.</source>
          <target state="translated">생성기 기능을 일시 중지했다가 다시 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="8a18c91b413aa83207902d34a5550c798370c248" translate="yes" xml:space="preserve">
          <source>Pause and resume an async function and wait for the promise's resolution/rejection.</source>
          <target state="translated">비동기 기능을 일시 중지했다가 다시 시작하고 약속의 해결 / 거부를 ​​기다립니다.</target>
        </trans-unit>
        <trans-unit id="c64c33c3dab2dd3462a646781ae3c5581e6142a8" translate="yes" xml:space="preserve">
          <source>Paving the way for future ECMAScript versions</source>
          <target state="translated">향후 ECMAScript 버전을위한 길을 열다</target>
        </trans-unit>
        <trans-unit id="27335de32b8dc8b2d02f298a509286229a8bda57" translate="yes" xml:space="preserve">
          <source>Pay special attention to commas when declaring multiple variables. Is there an excess comma? Did you accidentally add commas instead of semicolons?</source>
          <target state="translated">여러 변수를 선언 할 때는 쉼표에 특히주의하십시오. 초과 쉼표가 있습니까? 세미콜론 대신 실수로 쉼표를 추가 했습니까?</target>
        </trans-unit>
        <trans-unit id="0845c2cdfd1eca690f6e59524f0fddb3bc3074a9" translate="yes" xml:space="preserve">
          <source>Perform a &quot;sticky&quot; search that matches starting at the current position in the target string. See &lt;a href=&quot;../global_objects/regexp/sticky&quot;&gt;&lt;code&gt;sticky&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">대상 문자열의 현재 위치에서 시작하여 일치하는 &quot;sticky&quot;검색을 수행하십시오. &lt;a href=&quot;../global_objects/regexp/sticky&quot;&gt; &lt;code&gt;sticky&lt;/code&gt; &lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
