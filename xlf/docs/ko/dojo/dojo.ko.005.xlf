<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="dojo">
    <body>
      <group id="dojo">
        <trans-unit id="856ffdc70de3a65fa6401e909fdab9a218702e66" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;queryOptions&lt;/em&gt; parameter</source>
          <target state="translated">&lt;em&gt;queryOptions의&lt;/em&gt; 매개 변수</target>
        </trans-unit>
        <trans-unit id="1defaa774322999f5dbb6be6b2dd2809e07763df" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;scope&lt;/em&gt; parameter</source>
          <target state="translated">&lt;em&gt;범위&lt;/em&gt; 파라미터</target>
        </trans-unit>
        <trans-unit id="98e40b9e61c15e7657ee7997e2f989681155421f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;scope&lt;/em&gt; parameter.</source>
          <target state="translated">&lt;em&gt;범위&lt;/em&gt; 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="a4624070517a47b1a0780c03a09f796acc98e134" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;sort&lt;/em&gt; parameter.</source>
          <target state="translated">&lt;em&gt;정렬&lt;/em&gt; 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="4c353e62a18f5561ccebdaa776fb1c69c267d4bc" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;start&lt;/em&gt; parameter.</source>
          <target state="translated">&lt;em&gt;시작&lt;/em&gt; 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="3e1f1a2359296a20bbf5f1f3c5915e5ad3cbd5e6" translate="yes" xml:space="preserve">
          <source>The API or behavior being deprecated. Usually in the form of &quot;myApp.someFunction()&quot;.</source>
          <target state="translated">더 이상 사용되지 않는 API 또는 동작입니다. 일반적으로 &quot;myApp.someFunction ()&quot;형식입니다.</target>
        </trans-unit>
        <trans-unit id="95c9519cf3eeb177a7bbc1951fe9fc4d43e60375" translate="yes" xml:space="preserve">
          <source>The CSS selector to use for filter events and determine the |this| of the event listener.</source>
          <target state="translated">필터 이벤트에 사용하고 | this | 이벤트 리스너</target>
        </trans-unit>
        <trans-unit id="ce788546b798a7b8fda457b19747d8c5bcdff496" translate="yes" xml:space="preserve">
          <source>The CSS3 expression to match against. For details on the syntax of CSS3 selectors, see &lt;a href=&quot;http://www.w3.org/TR/css3-selectors/#selectors&quot;&gt;http://www.w3.org/TR/css3-selectors/#selectors&lt;/a&gt;</source>
          <target state="translated">일치시킬 CSS3 표현식입니다. CSS3 선택기의 구문에 대한 자세한 내용은 &lt;a href=&quot;http://www.w3.org/TR/css3-selectors/#selectors&quot;&gt;http://www.w3.org/TR/css3-selectors/#selectors를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9b3ec5c65363f40d87d3fa19c9570efc4d7df481" translate="yes" xml:space="preserve">
          <source>The CSS3 expression to match against. For details on the syntax of CSS3 selectors, see &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#selectors&quot;&gt;http://www.w3.org/TR/css3-selectors/#selectors&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81050993c62bd1e32703aa3e0fc2d53055c07e45" translate="yes" xml:space="preserve">
          <source>The Cache store wrapper takes a master store and a caching store, caches data from the master into the caching store for faster lookup. Normally one would use a memory store for the caching store and a server store like JsonRest for the master store.</source>
          <target state="translated">캐시 저장소 랩퍼는 마스터 저장소와 캐싱 저장소를 가져 와서 빠른 검색을 위해 마스터에서 캐싱 저장소로 데이터를 캐시합니다. 일반적으로 캐싱 저장소에 메모리 저장소를 사용하고 마스터 저장소에 JsonRest와 같은 서버 저장소를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="271aa96ac8784091ae0c31cb6144d55e795dbe54" translate="yes" xml:space="preserve">
          <source>The DOM node the mouse is currently hovered over</source>
          <target state="translated">마우스가 현재 가리키고있는 DOM 노드</target>
        </trans-unit>
        <trans-unit id="ce13f69dfae99e27075dd7363e50c51386a7300c" translate="yes" xml:space="preserve">
          <source>The Deferred API is based on the concept of promises that provide a generic interface into the eventual completion of an asynchronous action. The motivation for promises fundamentally is about creating a separation of concerns that allows one to achieve the same type of call patterns and logical data flow in asynchronous code as can be achieved in synchronous code. Promises allows one to be able to call a function purely with arguments needed for execution, without conflating the call with concerns of whether it is sync or async. One shouldn't need to alter a call's arguments if the implementation switches from sync to async (or vice versa). By having async functions return promises, the concerns of making the call are separated from the concerns of asynchronous interaction (which are handled by the promise).</source>
          <target state="translated">지연된 API는 비동기 작업의 최종 완료에 대한 일반적인 인터페이스를 제공하는 약속의 개념을 기반으로합니다. 약속에 대한 동기는 근본적으로 동기 코드에서 얻을 수있는 것과 동일한 유형의 호출 패턴과 비동기 코드에서 논리 데이터 흐름을 달성 할 수있는 우려를 분리하는 것입니다. 약속은 호출이 동기화인지 비동기인지에 대한 우려로 호출을 혼동하지 않고 실행에 필요한 인수로 순수하게 함수를 호출 할 수 있도록합니다. 구현이 동기화에서 비동기로 또는 그 반대로 전환되는 경우 호출의 인수를 변경할 필요가 없습니다. 비동기 함수가 약속을 반환하도록함으로써, 호출하는 것에 대한 관심은 (약속에 의해 처리되는) ​​비동기 상호 작용에 대한 관심과 분리됩니다.</target>
        </trans-unit>
        <trans-unit id="7f3a19126d934d4bf3cd00ebbe73bd6d75b670e2" translate="yes" xml:space="preserve">
          <source>The Deferred instances also provide the following functions for backwards compatibility:</source>
          <target state="translated">Deferred 인스턴스는 이전 버전과의 호환성을 위해 다음 기능도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b47e2c2329f3609d6ccdf4362b6b6d9973746749" translate="yes" xml:space="preserve">
          <source>The Deferred is a type of promise that provides methods for fulfilling the promise with a successful result or an error. The most important method for working with Dojo's promises is the then() method, which follows the CommonJS proposed promise API. An example of using a Dojo promise:</source>
          <target state="translated">연기 된 약속은 성공적인 결과 또는 오류로 약속을 이행하는 방법을 제공하는 약속 유형입니다. Dojo의 약속을 처리하는 데 가장 중요한 방법은 CommonJS 제안 약속 API를 따르는 then () 메소드입니다. Dojo 약속을 사용하는 예 :</target>
        </trans-unit>
        <trans-unit id="1ac1f9fd0ac382b9f53f8343fdbdc64674eecf19" translate="yes" xml:space="preserve">
          <source>The Deferred object for this particular request</source>
          <target state="translated">이 특정 요청에 대한 지연된 객체</target>
        </trans-unit>
        <trans-unit id="6df405d14c7f836b049143a62f222354bb348f6d" translate="yes" xml:space="preserve">
          <source>The Deferred object to watch.</source>
          <target state="translated">볼 지연된 객체입니다.</target>
        </trans-unit>
        <trans-unit id="55b1a44da5d1a4985f9f962e1bb72300982e6734" translate="yes" xml:space="preserve">
          <source>The Document object for a child iframe. If this is passed in, the script will be attached to that document. This can be helpful in some comet long-polling scenarios with Firefox and Opera.</source>
          <target state="translated">자식 iframe의 Document 객체입니다. 전달되면 스크립트가 해당 문서에 첨부됩니다. 이것은 Firefox 및 Opera의 일부 혜성 장거리 시나리오에서 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f008c219016f47ff2f332939c08052262d76be8" translate="yes" xml:space="preserve">
          <source>The Document object of a child iframe. If this is passed in, the script will be attached to that document. This can be helpful in some comet long-polling scenarios with Firefox and Opera.</source>
          <target state="translated">자식 iframe의 Document 객체입니다. 전달되면 스크립트가 해당 문서에 첨부됩니다. 이것은 Firefox 및 Opera의 일부 혜성 장거리 시나리오에서 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e8b0462ef7d67d09bf3aa95452c1a9481f42f09" translate="yes" xml:space="preserve">
          <source>The Dom/Widget parsing package</source>
          <target state="translated">Dom / Widget 구문 분석 패키지</target>
        </trans-unit>
        <trans-unit id="80fafc2bcf801b69043144f37a293526257a2526" translate="yes" xml:space="preserve">
          <source>The HTTP method to use to make the request. Must be uppercase.</source>
          <target state="translated">요청에 사용하는 HTTP 메소드입니다. 대문자 여야합니다.</target>
        </trans-unit>
        <trans-unit id="01ef99fbe5f04516fafe89503533d72b3057fc81" translate="yes" xml:space="preserve">
          <source>The HTTP method to use to make the request. Must be uppercase. Default is &lt;code&gt;&quot;GET&quot;&lt;/code&gt;.</source>
          <target state="translated">요청에 사용하는 HTTP 메소드입니다. 대문자 여야합니다. 기본값은 &lt;code&gt;&quot;GET&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="650a2bb13643e5fb8e6484eea22cb11527d93f36" translate="yes" xml:space="preserve">
          <source>The HTTP method to use to make the request. Must be uppercase. Only &lt;code&gt;&quot;GET&quot;&lt;/code&gt; and &lt;code&gt;&quot;POST&quot;&lt;/code&gt; are accepted. Default is &lt;code&gt;&quot;POST&quot;&lt;/code&gt;.</source>
          <target state="translated">요청에 사용하는 HTTP 메소드입니다. 대문자 여야합니다. 만 &lt;code&gt;&quot;GET&quot;&lt;/code&gt; 과 &lt;code&gt;&quot;POST&quot;&lt;/code&gt; 는 사용할 수 있습니다. 기본값은 &lt;code&gt;&quot;POST&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c4d1716e89d76df5a838383857c405bad3cb857c" translate="yes" xml:space="preserve">
          <source>The ItemFileReadStore implements the &lt;a href=&quot;api/read&quot;&gt;dojo/data/api/Read&lt;/a&gt; API and reads data from JSON files that have contents in this format --</source>
          <target state="translated">ItemFileReadStore는 &lt;a href=&quot;api/read&quot;&gt;dojo / data / api / Read&lt;/a&gt; API를 구현 하고이 형식의 컨텐츠가있는 JSON 파일에서 데이터를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="e66d35ce1a6f2767fc6c69ad25b73e8b08b54119" translate="yes" xml:space="preserve">
          <source>The Javascript v1.6 array extensions.</source>
          <target state="translated">Javascript v1.6 배열 확장</target>
        </trans-unit>
        <trans-unit id="fc03f510d3f99bfe0117037f46ca2bfa0fc42bb0" translate="yes" xml:space="preserve">
          <source>The Observable store wrapper takes a store and sets an observe method on query() results that can be used to monitor results for changes.</source>
          <target state="translated">Observable 상점 랩퍼는 상점을 가져 와서 변경 결과를 모니터하는 데 사용할 수있는 query () 결과에 observe 메소드를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="8522495fdae416f96578c312739bcbb1defcb521" translate="yes" xml:space="preserve">
          <source>The Request object may also have additional properties when it is returned such as request.store property, which is a pointer to the datastore object that fetch() is a method of.</source>
          <target state="translated">request 객체는 request.store 속성과 같이 추가 속성을 가질 수도 있습니다. request.store 속성은 fetch ()가 메서드 인 데이터 스토어 객체에 대한 포인터입니다.</target>
        </trans-unit>
        <trans-unit id="5367322762efe8b3d3643ed001608e2a40bcb2b0" translate="yes" xml:space="preserve">
          <source>The SimpleQueryEngine provides a way of getting a QueryResults through the use of a simple object hash as a filter. The hash will be used to match properties on data objects with the corresponding value given. In other words, only exact matches will be returned.</source>
          <target state="translated">SimpleQueryEngine은 간단한 객체 해시를 필터로 사용하여 QueryResults를 얻는 방법을 제공합니다. 해시는 데이터 객체의 속성을 해당 값과 일치시키는 데 사용됩니다. 즉, 정확히 일치하는 항목 만 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="d4bba1f980eb884bccf6298c77ba84257954624d" translate="yes" xml:space="preserve">
          <source>The URL parameter name that indicates the JSONP callback string. For instance, when using Yahoo JSONP calls it is normally, jsonp: &quot;callback&quot;. For AOL JSONP calls it is normally jsonp: &quot;c&quot;.</source>
          <target state="translated">JSONP 콜백 문자열을 나타내는 URL 매개 변수 이름입니다. 예를 들어 Yahoo JSONP 호출을 사용하는 경우 일반적으로 jsonp : &quot;callback&quot;입니다. AOL JSONP 호출의 경우 일반적으로 jsonp : &quot;c&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="44951bf0337200610337aef79e55b5109f5a5523" translate="yes" xml:space="preserve">
          <source>The URL to request.</source>
          <target state="translated">요청할 URL입니다.</target>
        </trans-unit>
        <trans-unit id="b48969e9b7fc52933fa9cc17891d058d2690421d" translate="yes" xml:space="preserve">
          <source>The amount of ms before testing the selector</source>
          <target state="translated">선택기를 테스트하기 전의 ms 양</target>
        </trans-unit>
        <trans-unit id="66e515286ce298ebe6d7c57643dc90e918ae2837" translate="yes" xml:space="preserve">
          <source>The application must require() an appropriate level of dojo/query to handle the selector.</source>
          <target state="translated">애플리케이션은 선택기를 처리하기 위해 적절한 레벨의 dojo / query를 요구해야합니다.</target>
        </trans-unit>
        <trans-unit id="8c69d807182513b819d3e7d1d2bb41c536ebc69f" translate="yes" xml:space="preserve">
          <source>The array of all the objects in the memory store</source>
          <target state="translated">메모리 저장소에있는 모든 객체의 배열</target>
        </trans-unit>
        <trans-unit id="9f1ee570bd6c503bc495b5c06cd7aa2a74c1de4c" translate="yes" xml:space="preserve">
          <source>The array of parameters for this request;</source>
          <target state="translated">이 요청에 대한 매개 변수 배열입니다.</target>
        </trans-unit>
        <trans-unit id="ce921009e69d473bb33ae7e908361258fe09a8dc" translate="yes" xml:space="preserve">
          <source>The attribute being changed represented as a string name.</source>
          <target state="translated">변경되는 속성은 문자열 이름으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="00111105f0feb24a00174858072d604b2addb816" translate="yes" xml:space="preserve">
          <source>The attribute of the item to change represented as a string name.</source>
          <target state="translated">변경할 항목의 속성은 문자열 이름으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="38c7c76fca4f32193154d0b381b045b5c5fd7055" translate="yes" xml:space="preserve">
          <source>The attribute of the item to unset represented as a string.</source>
          <target state="translated">설정하지 않은 항목의 속성은 문자열로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="f587f6631336b8feb61ce8fa596a3835399b2e10" translate="yes" xml:space="preserve">
          <source>The attribute to access represented as a string.</source>
          <target state="translated">액세스 할 속성은 문자열로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="ee52b00b138f57704f8e7830d0cc06714567c058" translate="yes" xml:space="preserve">
          <source>The attribute to check</source>
          <target state="translated">확인할 속성</target>
        </trans-unit>
        <trans-unit id="b7f5e103ed0a29d73194b99ddebbdba8d7338513" translate="yes" xml:space="preserve">
          <source>The behavior object that will be added to behaviors list. The behaviors in the list will be applied the next time apply() is called.</source>
          <target state="translated">비헤이비어 목록에 추가 될 비헤이비어 객체. 목록의 동작은 다음에 apply ()가 호출 될 때 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="0680ace31d607062c9836bc1e0e90d28898eea04" translate="yes" xml:space="preserve">
          <source>The builder will write such rollups for every layer if a non-empty localeList profile property is provided. Further, the builder will include the following cache entry in the cache associated with any layer.</source>
          <target state="translated">비어 있지 않은 localeList 프로파일 특성이 제공되면 빌더는 모든 계층에 대해 이러한 롤업을 작성합니다. 또한 빌더는 임의의 계층과 연관된 캐시에 다음 캐시 항목을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="4db7e18392e3edc876433873c14f05d4ca2532ea" translate="yes" xml:space="preserve">
          <source>The button value (example: dojo.mouseButton.LEFT)</source>
          <target state="translated">버튼 값 (예 : dojo.mouseButton.LEFT)</target>
        </trans-unit>
        <trans-unit id="bda815b4db5ddd415f967113a9f8a934c02755b6" translate="yes" xml:space="preserve">
          <source>The callback attached to this deferred object.</source>
          <target state="translated">이 지연된 객체에 연결된 콜백입니다.</target>
        </trans-unit>
        <trans-unit id="b7330234dec006dcd30ce86cd7cb3da88b1fab34" translate="yes" xml:space="preserve">
          <source>The callback to fire.</source>
          <target state="translated">발사 콜백.</target>
        </trans-unit>
        <trans-unit id="51634bf1558a78cf06d485a130756ec23c9e0675" translate="yes" xml:space="preserve">
          <source>The caller supply this argument, which should be the original &quot;arguments&quot;.</source>
          <target state="translated">호출자는이 인수를 제공합니다.이 인수는 원래 &quot;인수&quot;여야합니다.</target>
        </trans-unit>
        <trans-unit id="1144e18b6d887987630fb5ff188a11bf96c18772" translate="yes" xml:space="preserve">
          <source>The character used as the thousands separator. Default is no separator. For more than one symbol use an array, e.g. &lt;code&gt;[&quot;,&quot;, &quot;&quot;]&lt;/code&gt;, makes ',' optional.</source>
          <target state="translated">천 단위 구분 기호로 사용되는 문자입니다. 기본값은 구분 기호가 없습니다. 둘 이상의 기호의 경우 &lt;code&gt;[&quot;,&quot;, &quot;&quot;]&lt;/code&gt; 와 같은 배열을 사용하여 ','를 선택적으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="6c34d2d63874940385aad3c761afd3ad37e51366" translate="yes" xml:space="preserve">
          <source>The class also provides the functionality to auto-magically manage getters and setters for object attributes/properties.</source>
          <target state="translated">이 클래스는 객체 속성 / 속성에 대한 게터 및 세터를 자동으로 관리하는 기능도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="036d1e66d48803c40dc285b7de911247225f8e8b" translate="yes" xml:space="preserve">
          <source>The client demands &quot;dojo/i18n!some/path/nls/someBundle</source>
          <target state="translated">클라이언트는 &quot;dojo / i18n! some / path / nls / someBundle을 요구합니다.</target>
        </trans-unit>
        <trans-unit id="bc8863b805b4ff305f6a53c5eeb054df3e29f471" translate="yes" xml:space="preserve">
          <source>The close() method is intended for instructing the store to 'close' out any information associated with a particular request.</source>
          <target state="translated">close () 메소드는 상점이 특정 요청과 연관된 정보를 '폐쇄'하도록 지시하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="e4113ffce124aef100eae8d502d2887a2da2f410" translate="yes" xml:space="preserve">
          <source>The close() method is intended for instructing the store to 'close' out any information associated with a particular request. In general, this API expects to receive as a parameter a request object returned from a fetch. It will then close out anything associated with that request, such as clearing any internal datastore caches and closing any 'open' connections. For some store implementations, this call may be a no-op.</source>
          <target state="translated">close () 메소드는 상점이 특정 요청과 연관된 정보를 '폐쇄'하도록 지시하기위한 것입니다. 일반적으로이 API는 페치에서 리턴 된 요청 오브젝트를 매개 변수로 수신 할 것으로 예상합니다. 그런 다음 내부 데이터 저장소 캐시를 지우고 '열린'연결을 닫는 등 해당 요청과 관련된 모든 항목을 닫습니다. 일부 상점 구현의 경우이 호출은 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05aa845f6a98fbab2c53d7e91866326ad64c63a5" translate="yes" xml:space="preserve">
          <source>The configuration information to pass into the data store.</source>
          <target state="translated">데이터 저장소로 전달할 구성 정보입니다.</target>
        </trans-unit>
        <trans-unit id="68f3557437ac317fabb6e47cc9223499abd82d09" translate="yes" xml:space="preserve">
          <source>The content to be placed in the node. Can be an HTML string, a node reference, or a enumerable list of nodes</source>
          <target state="translated">노드에 배치 할 컨텐츠입니다. HTML 문자열, 노드 참조 또는 열거 가능한 노드 목록 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2346b32036d72a3db350c5447ef776f79737c0cc" translate="yes" xml:space="preserve">
          <source>The content will be cloned if the length of NodeList is greater than 1. Only the DOM nodes are cloned, not any attached event handlers.</source>
          <target state="translated">NodeList의 길이가 1보다 크면 컨텐츠가 복제됩니다. 연결된 이벤트 핸들러가 아닌 DOM 노드 만 복제됩니다.</target>
        </trans-unit>
        <trans-unit id="e7ff8a0ce3b0354f9dfd2722b249194064a63afe" translate="yes" xml:space="preserve">
          <source>The context in which to run execute callback, or a callback if not using context</source>
          <target state="translated">실행할 콜백 컨텍스트 또는 컨텍스트를 사용하지 않는 경우 콜백</target>
        </trans-unit>
        <trans-unit id="4c4858b9d702ba3d2e0da28f2187918f870153a8" translate="yes" xml:space="preserve">
          <source>The context object or location</source>
          <target state="translated">컨텍스트 객체 또는 위치</target>
        </trans-unit>
        <trans-unit id="8270041e61393a93a182a9e274d2fce8f9967046" translate="yes" xml:space="preserve">
          <source>The context to search in.</source>
          <target state="translated">검색 할 컨텍스트입니다.</target>
        </trans-unit>
        <trans-unit id="f2db803cc06d4ae9ca5c8b9e146ca9f17b9f2cd4" translate="yes" xml:space="preserve">
          <source>The creator of the Deferred may specify a canceller. The canceller is a function that will be called if Deferred.cancel is called before the Deferred fires. You can use this to implement clean aborting of an XMLHttpRequest, etc. Note that cancel will fire the deferred with a CancelledError (unless your canceller returns another kind of error), so the errbacks should be prepared to handle that error for cancellable Deferreds.</source>
          <target state="translated">연기 된 작성자는 취소자를 지정할 수 있습니다. 취소 기는 Deferred.cancel이 Deferred fire 전에 호출되면 호출되는 함수입니다. 이것을 사용하여 XMLHttpRequest 등의 클린 중단을 구현할 수 있습니다. cancel은 CancelledError와 함께 지연을 발생 시키므로 (취소자가 다른 종류의 오류를 리턴하지 않는 한) 취소 가능은 취소 가능한 지연에 대해 해당 오류를 처리 할 수 ​​있도록 준비해야합니다.</target>
        </trans-unit>
        <trans-unit id="7339fdb967d127643d1877162d3e6d72d2b30724" translate="yes" xml:space="preserve">
          <source>The data object to get the identity from.</source>
          <target state="translated">ID를 가져올 데이터 개체입니다.</target>
        </trans-unit>
        <trans-unit id="6e080bc555ae2ee95d08edc624daa942080e9f55" translate="yes" xml:space="preserve">
          <source>The datastore object to look up item values from.</source>
          <target state="translated">항목 값을 조회 할 데이터 저장소 개체입니다.</target>
        </trans-unit>
        <trans-unit id="783bd69066041237f839eeb3c4bb34efd5bc2ed9" translate="yes" xml:space="preserve">
          <source>The deferred list from which this function gathers results.</source>
          <target state="translated">이 함수가 결과를 수집하는 지연 목록.</target>
        </trans-unit>
        <trans-unit id="a8b8380c02c69f2cbb1c8a7c5f454602ae5fe5b9" translate="yes" xml:space="preserve">
          <source>The deferred object handling a request.</source>
          <target state="translated">요청을 처리하는 지연된 개체입니다.</target>
        </trans-unit>
        <trans-unit id="ac26b0ff3fe467638818eb996afbafa4bdb35f87" translate="yes" xml:space="preserve">
          <source>The direction of the sort. Default is false.</source>
          <target state="translated">정렬 방향. 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="912bb1961c0326bb22fa8f429619e2af4ab823a3" translate="yes" xml:space="preserve">
          <source>The document element to execute subsequent code with.</source>
          <target state="translated">후속 코드를 실행할 문서 요소입니다.</target>
        </trans-unit>
        <trans-unit id="fa6e052e31bb016f3442a4eab79d8492bb0d74b1" translate="yes" xml:space="preserve">
          <source>The document of the node being dragged.</source>
          <target state="translated">끌고있는 노드의 문서입니다.</target>
        </trans-unit>
        <trans-unit id="71a4f5f99a62e77f9312df3b49b8d794b25607be" translate="yes" xml:space="preserve">
          <source>The document to get the associated window for.</source>
          <target state="translated">연관된 창을 가져올 문서입니다.</target>
        </trans-unit>
        <trans-unit id="67b3aed693dea106c04797166f276a99688ac56a" translate="yes" xml:space="preserve">
          <source>The doh.robot will execute the actions the test passes into the submitActions argument (like clicking the submit button), expecting these actions to create a page change (like a form submit). After these actions execute and the resulting page loads, the next test will start.</source>
          <target state="translated">doh.robot은 테스트가 submitActions 인수에 전달하는 작업 (예 : 제출 버튼 클릭)을 실행하여 이러한 작업이 페이지 변경 (예 : 양식 제출)을 생성 할 것으로 예상합니다. 이러한 작업이 실행되고 결과 페이지가로드되면 다음 테스트가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="0d47f2190692acdb883a97ab7223a577edb4705c" translate="yes" xml:space="preserve">
          <source>The error callback attached to this deferred object.</source>
          <target state="translated">이 지연된 객체에 첨부 된 오류 콜백입니다.</target>
        </trans-unit>
        <trans-unit id="8f7d09eb790067430a03c613446443e69404cd34" translate="yes" xml:space="preserve">
          <source>The error handler when there is an error fetching items. This function should not be called directly and is used by simpleFetch.fetch().</source>
          <target state="translated">항목을 가져 오는 중 오류가 발생하면 오류 처리기입니다. 이 함수는 직접 호출해서는 안되며 simpleFetch.fetch ()에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9d685d501f62f1a5a3f8f062bb607a270a687ee0" translate="yes" xml:space="preserve">
          <source>The error result of the deferred. Passed to errbacks.</source>
          <target state="translated">지연된 오류 결과입니다. 실수로 전달되었습니다.</target>
        </trans-unit>
        <trans-unit id="734597b38ca3365f8763c04293580c0005b6d87b" translate="yes" xml:space="preserve">
          <source>The event object. If omitted, window.event is used on IE.</source>
          <target state="translated">이벤트 객체. 생략하면 IE에서 window.event가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a0c9dd1a551c8522f7a460a6f9280c5be77f249c" translate="yes" xml:space="preserve">
          <source>The event to listen for</source>
          <target state="translated">들을 이벤트</target>
        </trans-unit>
        <trans-unit id="3b257f1b00b56dfab05e1b9aa1c3c37f085fa2b9" translate="yes" xml:space="preserve">
          <source>The event to listen for. Events emitted: &quot;start&quot;, &quot;send&quot;, &quot;load&quot;, &quot;error&quot;, &quot;done&quot;, &quot;stop&quot;.</source>
          <target state="translated">들을 이벤트입니다. 발생 된 이벤트 : &quot;시작&quot;, &quot;보내기&quot;, &quot;로드&quot;, &quot;오류&quot;, &quot;완료&quot;, &quot;중지&quot;.</target>
        </trans-unit>
        <trans-unit id="f121c4e519c0f61ce755181840864a75d2af0595" translate="yes" xml:space="preserve">
          <source>The fetch() method will return a javascript object conforming to the API defined in dojo/data/api/Request. In general, it will be the keywordArgs object returned with the required functions in Request.js attached. Its general purpose is to provide a convenient way for a caller to abort an ongoing fetch.</source>
          <target state="translated">fetch () 메소드는 dojo / data / api / Request에 정의 된 API를 준수하는 Javascript 오브젝트를 리턴합니다. 일반적으로 Request.js에 필요한 함수와 함께 반환 된 keywordArgs 객체가됩니다. 일반적인 목적은 호출자가 진행중인 페치를 중단 할 수있는 편리한 방법을 제공하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="45396ae94dc2e154471f45d0b17c3596c73b9673" translate="yes" xml:space="preserve">
          <source>The final URL used for the call. Many times it will be different than the original args.url value.</source>
          <target state="translated">통화에 사용 된 최종 URL입니다. 여러 번 원래 args.url 값과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="cf5a6edbc2bc37047d3f0779f9aff1f2467a93ce" translate="yes" xml:space="preserve">
          <source>The final indicator on how the response will be handled.</source>
          <target state="translated">응답 처리 방법에 대한 최종 지표.</target>
        </trans-unit>
        <trans-unit id="7722a7548f617922a21300ff86e60fb223c0e12b" translate="yes" xml:space="preserve">
          <source>The first result to begin iteration on</source>
          <target state="translated">반복을 시작하는 첫 번째 결과</target>
        </trans-unit>
        <trans-unit id="86ce2d6d2071292e35eb52d65f45229f5c618085" translate="yes" xml:space="preserve">
          <source>The first time that addOnUnload is called Dojo will register a page listener to trigger your unload handler with.</source>
          <target state="translated">addOnUnload가 Dojo로 처음 호출되면 언로드 핸들러를 트리거 할 페이지 리스너를 등록합니다.</target>
        </trans-unit>
        <trans-unit id="8711565974397a0783f0dc66560137a4169e8bc6" translate="yes" xml:space="preserve">
          <source>The first time that addOnWindowUnload is called Dojo will register a page listener to trigger your unload handler with. Note that registering these handlers may destroy &quot;fastback&quot; page caching in browsers that support it. Be careful trying to modify the DOM or access JavaScript properties during this phase of page unloading: they may not always be available. Consider addOnUnload() if you need to modify the DOM or do heavy JavaScript work since it fires at the equivalent of the page's &quot;onbeforeunload&quot; event.</source>
          <target state="translated">addOnWindowUnload를 처음 Dojo라고하면 언로드 핸들러를 트리거 할 페이지 리스너를 등록합니다. 이러한 핸들러를 등록하면이를 지원하는 브라우저에서 &quot;fastback&quot;페이지 캐싱이 손상 될 수 있습니다. 이 페이지 언로드 단계에서 DOM을 수정하거나 JavaScript 속성에 액세스하려고주의하십시오. 항상 사용 가능한 것은 아닙니다. DOM을 수정해야하거나 페이지의 &quot;onbeforeunload&quot;이벤트와 동일하게 실행되므로 무거운 JavaScript 작업을 수행하려면 addOnUnload ()를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="59078a0ebf6f49b1039c5945d4ecfbb102c07737" translate="yes" xml:space="preserve">
          <source>The following values in IE contain an offset:</source>
          <target state="translated">IE의 다음 값은 오프셋을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="4e256a10d2e6b23351e31d77b1169cb0084dbb79" translate="yes" xml:space="preserve">
          <source>The function returns this dojo.Stateful instance.</source>
          <target state="translated">함수는이 dojo.Stateful 인스턴스를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="8d06b795f9a7defe2fac646df1f53faf3064fd24" translate="yes" xml:space="preserve">
          <source>The function that returns the &lt;code&gt;dojo.Animation&lt;/code&gt; to hide the node</source>
          <target state="translated">&lt;code&gt;dojo.Animation&lt;/code&gt; 을 리턴 하여 노드를 숨기는 함수</target>
        </trans-unit>
        <trans-unit id="c5612cc94d9364c10fe33b341cd68935864e9ec2" translate="yes" xml:space="preserve">
          <source>The function that returns the &lt;code&gt;dojo.Animation&lt;/code&gt; to show the node</source>
          <target state="translated">&lt;code&gt;dojo.Animation&lt;/code&gt; 을 리턴 하여 노드를 표시하는 함수</target>
        </trans-unit>
        <trans-unit id="df463ab302947df1fdbd13d2166651224d62684f" translate="yes" xml:space="preserve">
          <source>The function to &quot;wrap&quot;</source>
          <target state="translated">&quot;랩핑&quot;기능</target>
        </trans-unit>
        <trans-unit id="7974ea294f24b8097ce4c338e88a5e65d3424454" translate="yes" xml:space="preserve">
          <source>The function to execute when the property changes. This will be called after the property has been changed. The callback will be called with the |this| set to the instance, the first argument as the name of the property, the second argument as the old value and the third argument as the new value.</source>
          <target state="translated">속성이 변경 될 때 실행할 함수입니다. 속성이 변경된 후에 호출됩니다. 콜백은 | this | 인스턴스, 첫 번째 인수는 속성 이름으로, 두 번째 인수는 이전 값으로, 세 번째 인수는 새 값으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="ca30c519a6a156f76c6573e841573612bc2aad51" translate="yes" xml:space="preserve">
          <source>The function to execute.</source>
          <target state="translated">실행할 함수입니다.</target>
        </trans-unit>
        <trans-unit id="86cbc484ae015230cbb2ccec9c4c448277c83be7" translate="yes" xml:space="preserve">
          <source>The getFeatures() method returns an simple keyword values object that specifies what interface features the datastore implements. A simple CsvStore may be read-only, and the only feature it implements will be the 'dojo/data/api/Read' interface, so the getFeatures() method will return an object like this one: {'dojo.data.api.Read': true}. A more sophisticated datastore might implement a variety of interface features, like 'dojo.data.api.Read', 'dojo/data/api/Write', 'dojo.data.api.Identity', and 'dojo/data/api/Attribution'.</source>
          <target state="translated">getFeatures () 메소드는 데이터 스토어가 구현하는 인터페이스 기능을 지정하는 간단한 키워드 값 오브젝트를 리턴합니다. 간단한 CsvStore는 읽기 전용 일 수 있으며 구현하는 유일한 기능은 'dojo / data / api / Read'인터페이스이므로 getFeatures () 메소드는 { 'dojo.data.api와 같은 오브젝트를 리턴합니다. . 읽기 ': true}. 보다 정교한 데이터 저장소는 'dojo.data.api.Read', 'dojo / data / api / Write', 'dojo.data.api.Identity'및 'dojo / data / api와 같은 다양한 인터페이스 기능을 구현할 수 있습니다. /속성'.</target>
        </trans-unit>
        <trans-unit id="02db31f997dea83eccb793933f21a6948a7d9066" translate="yes" xml:space="preserve">
          <source>The global context. If a string, the id of the frame to search for a context and document.</source>
          <target state="translated">글로벌 컨텍스트. 문자열 인 경우 컨텍스트 및 문서를 검색 할 프레임의 ID입니다.</target>
        </trans-unit>
        <trans-unit id="7cb528feb70024e835d20c112e1a4364ff822884" translate="yes" xml:space="preserve">
          <source>The handle returned from a call to subscribe.</source>
          <target state="translated">구독 호출에서 리턴 된 핸들입니다.</target>
        </trans-unit>
        <trans-unit id="5c0c02cf0b0b585639e2bb0cdd9838efd7646e05" translate="yes" xml:space="preserve">
          <source>The handler when items are successfully fetched. This function should not be called directly and is used by simpleFetch.fetch().</source>
          <target state="translated">항목을 성공적으로 가져 왔을 때의 핸들러입니다. 이 함수는 직접 호출해서는 안되며 simpleFetch.fetch ()에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3f95a37471c765d23e381921bdee888fa56f29cf" translate="yes" xml:space="preserve">
          <source>The id after the ! can be a module id of the selector engine or one of the following values:</source>
          <target state="translated">뒤에 ID! 선택기 엔진의 모듈 ID이거나 다음 값 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8eaf6b86a5410eb90c60e7b6bf991e7fbde1d89c" translate="yes" xml:space="preserve">
          <source>The id of the given object.</source>
          <target state="translated">주어진 객체의 id.</target>
        </trans-unit>
        <trans-unit id="470dde106d78eb26e1b57d8c01aa43089d8f3465" translate="yes" xml:space="preserve">
          <source>The id of the node, or the node itself, to move the mouse to. If you pass an id or a function that returns a node, the node will not be evaluated until the movement executes. This is useful if you need to move the mouse to an node that is not yet present.</source>
          <target state="translated">마우스를 이동할 노드의 ID 또는 노드 자체입니다. 노드 또는 노드를 반환하는 함수를 전달하면 이동이 실행될 때까지 노드가 평가되지 않습니다. 마우스를 아직 존재하지 않는 노드로 이동해야하는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="fbff2c208950ffdbb7cf067771c253ebd82cfe86" translate="yes" xml:space="preserve">
          <source>The identifier for the object in question.</source>
          <target state="translated">해당 객체의 식별자입니다.</target>
        </trans-unit>
        <trans-unit id="0d52a435cffcdeb4b54bd57a52697f7e82a79577" translate="yes" xml:space="preserve">
          <source>The identity parameter is the identity of the item you wish to locate and load This attribute is required. It should be a string or an object that toString() can be called on.</source>
          <target state="translated">identity 매개 변수는 찾고로드하려는 항목의 ID입니다.이 속성은 필수입니다. toString ()을 호출 할 수있는 문자열 또는 객체 여야합니다.</target>
        </trans-unit>
        <trans-unit id="5ae428724eb85e99b078d40d406b4a92aaacefc5" translate="yes" xml:space="preserve">
          <source>The identity to use to delete the object</source>
          <target state="translated">객체를 삭제하는 데 사용할 ID</target>
        </trans-unit>
        <trans-unit id="dcc0d169a11bcb4d25b1701e10d2d6998f7dad8d" translate="yes" xml:space="preserve">
          <source>The identity to use to lookup the object</source>
          <target state="translated">객체를 조회하는 데 사용할 ID</target>
        </trans-unit>
        <trans-unit id="4e245bc201d84cdf2e812d6fdd6d1548e68f4aa0" translate="yes" xml:space="preserve">
          <source>The insertedInto parameter indicates the index in the result array where the object should be now. If the value is -1, then the object is a removal from this result set (due to an object being deleted, or changed such that it is not a part of the result set).</source>
          <target state="translated">insertInto 매개 변수는 결과 배열에서 개체가 있어야 할 인덱스를 나타냅니다. 값이 -1이면 오브젝트는이 결과 세트에서 제거됩니다 (삭제되는 오브젝트 또는 결과 세트의 일부가 아닌 오브젝트로 인해 변경됨).</target>
        </trans-unit>
        <trans-unit id="d3a7f2017b056087992c1f500084c787d029cc9a" translate="yes" xml:space="preserve">
          <source>The integer number of decimal places or a range given as &quot;n,m&quot;. If not given, the decimal part is optional and the number of places is unlimited.</source>
          <target state="translated">소수점 이하 자릿수 또는 &quot;n, m&quot;으로 지정된 범위입니다. 지정하지 않으면 소수 부분은 선택 사항이며 장소 수는 무제한입니다.</target>
        </trans-unit>
        <trans-unit id="5db06dbcebb992e01364cae839641705469efff4" translate="yes" xml:space="preserve">
          <source>The item being modified.</source>
          <target state="translated">수정중인 항목입니다.</target>
        </trans-unit>
        <trans-unit id="924a9ba00f5d7cc8f843f4eaa194109c7537a846" translate="yes" xml:space="preserve">
          <source>The item created.</source>
          <target state="translated">아이템이 생성되었습니다.</target>
        </trans-unit>
        <trans-unit id="be1ffddf050b9d545787f6ce9e8f7fea1289879f" translate="yes" xml:space="preserve">
          <source>The item deleted.</source>
          <target state="translated">항목이 삭제되었습니다.</target>
        </trans-unit>
        <trans-unit id="f0ed9e606a4ad8f37abb5b8fed79c7602ba4c695" translate="yes" xml:space="preserve">
          <source>The item from the store from which to obtain its identifier.</source>
          <target state="translated">식별자를 얻을 상점의 품목입니다.</target>
        </trans-unit>
        <trans-unit id="0c3b350693b5541b143a84908d55ebc3a2ce22d9" translate="yes" xml:space="preserve">
          <source>The item from the store from which to obtain the array of public attributes that compose the identifier, if any.</source>
          <target state="translated">식별자를 구성하는 공용 속성 배열을 가져 오는 상점의 항목입니다 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="d6cb521c8bd4cea384502982578c895da5b3cf13" translate="yes" xml:space="preserve">
          <source>The item parameter is an object that represents the item in question that should be contained by the store. This attribute is required.</source>
          <target state="translated">item 매개 변수는 상점이 포함해야하는 해당 항목을 나타내는 오브젝트입니다. 이 속성은 필수입니다.</target>
        </trans-unit>
        <trans-unit id="b41bb653d749a569704c4c036a0f6ea8d4649056" translate="yes" xml:space="preserve">
          <source>The item to access attributes on.</source>
          <target state="translated">속성에 액세스 할 항목입니다.</target>
        </trans-unit>
        <trans-unit id="e12ee7840d1942d9eec797d2d8ea90199ea96a18" translate="yes" xml:space="preserve">
          <source>The item to access values on.</source>
          <target state="translated">값에 액세스 할 항목입니다.</target>
        </trans-unit>
        <trans-unit id="184243e979a8eb26725bc551c9bf5d7eb2a63dc7" translate="yes" xml:space="preserve">
          <source>The item to check</source>
          <target state="translated">확인할 항목</target>
        </trans-unit>
        <trans-unit id="9d2d29147e104dbc36d1dc79c87a90df72e77c2b" translate="yes" xml:space="preserve">
          <source>The item to check.</source>
          <target state="translated">확인할 항목입니다.</target>
        </trans-unit>
        <trans-unit id="6d368a12d9d6eb8642f6476020455caa5f077e00" translate="yes" xml:space="preserve">
          <source>The item to delete.</source>
          <target state="translated">삭제할 항목입니다.</target>
        </trans-unit>
        <trans-unit id="1785f0ab0c8bc9c4a1ea10f6dd2a7df555dbd8c6" translate="yes" xml:space="preserve">
          <source>The item to get the value from</source>
          <target state="translated">가치를 얻는 품목</target>
        </trans-unit>
        <trans-unit id="90f49c1fa5d497074febc88cff7da173464c8943" translate="yes" xml:space="preserve">
          <source>The item to modify.</source>
          <target state="translated">수정할 항목입니다.</target>
        </trans-unit>
        <trans-unit id="2c4e051c85208dde20db6d0147d41dc894cc204d" translate="yes" xml:space="preserve">
          <source>The item to return the label for.</source>
          <target state="translated">라벨을 반환 할 항목입니다.</target>
        </trans-unit>
        <trans-unit id="ef21ca00ff2e8597cc54e371da952a33a388b759" translate="yes" xml:space="preserve">
          <source>The item to return the list of label attributes for.</source>
          <target state="translated">레이블 속성 목록을 반환 할 항목입니다.</target>
        </trans-unit>
        <trans-unit id="6b538f109966dd289c3a202abf8d8294bbc88aa1" translate="yes" xml:space="preserve">
          <source>The keywordArgs parameter may either be an instance of conforming to dojo/data/api/Request or may be a simple anonymous object that may contain any of the following:</source>
          <target state="translated">keywordArgs 매개 변수는 dojo / data / api / Request를 준수하는 인스턴스이거나 다음 중 하나를 포함 할 수있는 단순 익명 오브젝트 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e8f1d79ed197bf2bb956db26c6f347c615b6a1c" translate="yes" xml:space="preserve">
          <source>The leading plus-or-minus sign on the exponent. Can be true, false, or [true, false]. Default is [true, false], (i.e. will match if it is signed or unsigned). flags in regexp.integer can be applied.</source>
          <target state="translated">지수의 선행 더하기 또는 빼기 기호. true, false 또는 [true, false] 일 수 있습니다. 기본값은 [true, false]입니다 (즉, 부호가 있거나 부호가없는 경우 일치합니다). regexp.integer의 플래그를 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="872da87d40954621b82884f74e80aa812ba9ad4b" translate="yes" xml:space="preserve">
          <source>The leading plus-or-minus sign. Can be true, false, or &lt;code&gt;[true,false]&lt;/code&gt;. Default is &lt;code&gt;[true, false]&lt;/code&gt;, (i.e. will match if it is signed or unsigned).</source>
          <target state="translated">선행 더하기 또는 빼기 기호. true, false 또는 &lt;code&gt;[true,false]&lt;/code&gt; 일 수 있습니다. 기본값은 &lt;code&gt;[true, false]&lt;/code&gt; (즉, 부호가 있거나 부호가없는 경우 일치합니다).</target>
        </trans-unit>
        <trans-unit id="dcc45e2663d6d0dc7041e970b3c7d64409823376" translate="yes" xml:space="preserve">
          <source>The list of deferreds to be synchronizied with this DeferredList</source>
          <target state="translated">이 지연 목록과 동기화 될 지연 목록</target>
        </trans-unit>
        <trans-unit id="2a524a2e97b5159ccaf766de36f87ff79e04f1bb" translate="yes" xml:space="preserve">
          <source>The listener function is called when objects in the query results are modified to affect the query result. The listener function is called with the following arguments:</source>
          <target state="translated">리스너 함수는 쿼리 결과의 오브젝트가 쿼리 결과에 영향을 주도록 수정 될 때 호출됩니다. 리스너 함수는 다음 인수와 함께 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="d522fcaab2ecb5b4ba9c5f1d3a2f201b688c5771" translate="yes" xml:space="preserve">
          <source>The listener is passed the traced value and any arguments that were used with the &lt;code&gt;.trace()&lt;/code&gt; call.</source>
          <target state="translated">리스너는 추적 된 값과 &lt;code&gt;.trace()&lt;/code&gt; 호출에 사용 된 모든 인수에 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="f72ccba533565079b72b4a8e493cf9b7c4ecc6bf" translate="yes" xml:space="preserve">
          <source>The loader demands load(some/path/nls/someBundle)</source>
          <target state="translated">로더는로드를 요구합니다 (some / path / nls / someBundle)</target>
        </trans-unit>
        <trans-unit id="7a1bc8ae20fc42bca8dd4acbc6be4159feb4ed2e" translate="yes" xml:space="preserve">
          <source>The loader require function with respect to the module that contained the plugin resource in it's dependency list.</source>
          <target state="translated">로더는 의존성 목록에 플러그인 리소스를 포함하고있는 모듈과 관련된 기능이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="bd734ef9fc960daf3706031c8ac71392db51f077" translate="yes" xml:space="preserve">
          <source>The locale to assume for loading localized resources in this page, specified according to &lt;a href=&quot;http://www.ietf.org/rfc/rfc3066.txt&quot;&gt;RFC 3066&lt;/a&gt;. Must be specified entirely in lowercase, e.g. &lt;code&gt;en-us&lt;/code&gt; and &lt;code&gt;zh-cn&lt;/code&gt;. See the documentation for &lt;code&gt;dojo.i18n&lt;/code&gt; and &lt;code&gt;dojo.requireLocalization&lt;/code&gt; for details on loading localized resources. If no locale is specified, Dojo assumes the locale of the user agent, according to &lt;code&gt;navigator.userLanguage&lt;/code&gt; or &lt;code&gt;navigator.language&lt;/code&gt; properties.</source>
          <target state="translated">이 페이지에서 현지화 된 리소스를로드 할 것으로 가정하는 로캘은 &lt;a href=&quot;http://www.ietf.org/rfc/rfc3066.txt&quot;&gt;RFC 3066&lt;/a&gt; 에 따라 지정됩니다 . &lt;code&gt;en-us&lt;/code&gt; 및 &lt;code&gt;zh-cn&lt;/code&gt; 과 같이 소문자로 완전히 지정해야합니다 . 현지화 된 리소스로드에 대한 자세한 내용 은 &lt;code&gt;dojo.i18n&lt;/code&gt; 및 &lt;code&gt;dojo.requireLocalization&lt;/code&gt; 설명서를 참조하십시오 . 로케일을 지정하지 않으면 Dojo는 &lt;code&gt;navigator.userLanguage&lt;/code&gt; 또는 &lt;code&gt;navigator.language&lt;/code&gt; 특성 에 따라 사용자 에이전트의 로케일을 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="7eb8d2aa7f55249fbfb5e42d063a332d931964ef" translate="yes" xml:space="preserve">
          <source>The locale to assume for loading localized resources in this page, specified according to &lt;a href=&quot;https://www.ietf.org/rfc/rfc3066.txt&quot;&gt;RFC 3066&lt;/a&gt;. Must be specified entirely in lowercase, e.g. &lt;code&gt;en-us&lt;/code&gt; and &lt;code&gt;zh-cn&lt;/code&gt;. See the documentation for &lt;code&gt;dojo.i18n&lt;/code&gt; and &lt;code&gt;dojo.requireLocalization&lt;/code&gt; for details on loading localized resources. If no locale is specified, Dojo assumes the locale of the user agent, according to &lt;code&gt;navigator.userLanguage&lt;/code&gt; or &lt;code&gt;navigator.language&lt;/code&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0e706ea259af06ccf077970fcb4510261267e1" translate="yes" xml:space="preserve">
          <source>The location to start searching from. Optional. Defaults to 0.</source>
          <target state="translated">검색을 시작할 위치입니다. 선택 과목. 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="be1346037ecf49a695adb73736ba11cd56def8bf" translate="yes" xml:space="preserve">
          <source>The matching node, if any. Else you get false</source>
          <target state="translated">일치하는 노드 (있는 경우) 그렇지 않으면 거짓이됩니다</target>
        </trans-unit>
        <trans-unit id="eb5a34398a765fd20a9f37498d980d9aac05cf9a" translate="yes" xml:space="preserve">
          <source>The name (if a string) or identifier (if an integer) of the feature to test.</source>
          <target state="translated">테스트 할 기능의 이름 (문자열 인 경우) 또는 식별자 (정수인 경우)입니다.</target>
        </trans-unit>
        <trans-unit id="cbcafb8758fa39feb81a1b5552537da47db91444" translate="yes" xml:space="preserve">
          <source>The name of a function in context, or a function reference. This is the function that is invoked when topic is published.</source>
          <target state="translated">컨텍스트의 함수 이름 또는 함수 참조 주제가 공개 될 때 호출되는 기능입니다.</target>
        </trans-unit>
        <trans-unit id="5fd9720ef61cfb1e40e873abd4c2d2b12e8a24a6" translate="yes" xml:space="preserve">
          <source>The name of a module, or the name of a module file or a specific function</source>
          <target state="translated">모듈 이름 또는 모듈 파일 이름 또는 특정 기능</target>
        </trans-unit>
        <trans-unit id="05d27ab7fcece6bf10d4d03380e309cc94cfa6eb" translate="yes" xml:space="preserve">
          <source>The name of the adapter.</source>
          <target state="translated">어댑터의 이름</target>
        </trans-unit>
        <trans-unit id="ff4c52c58616efef53d3b93ff339beda3b6c0629" translate="yes" xml:space="preserve">
          <source>The name of the attribute to sort on.</source>
          <target state="translated">정렬 할 속성의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="951c7cbe86699f7da56e56ef2878b2febc6c0fa5" translate="yes" xml:space="preserve">
          <source>The name of the event function in obj. I.e. identifies a property obj[event].</source>
          <target state="translated">obj의 이벤트 함수 이름입니다. 즉, obj [event] 속성을 식별합니다.</target>
        </trans-unit>
        <trans-unit id="85d83f8e129764eb179bf6cc4fafffc6ff324b7e" translate="yes" xml:space="preserve">
          <source>The name of the iframe. Used for the name attribute on the iframe.</source>
          <target state="translated">iframe의 이름입니다. iframe의 이름 속성에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3e737d215be64eae5515e94ce75b78fdca096a81" translate="yes" xml:space="preserve">
          <source>The name of the method we are calling</source>
          <target state="translated">우리가 호출하는 메소드의 이름</target>
        </trans-unit>
        <trans-unit id="7f00f837313eb917c71da3ea05c4352d6c511952" translate="yes" xml:space="preserve">
          <source>The name of the method we are creating the request for</source>
          <target state="translated">요청을 작성하는 메소드의 이름</target>
        </trans-unit>
        <trans-unit id="07f5d37d1bdffe591f68840bb936cf49f87d1253" translate="yes" xml:space="preserve">
          <source>The name of the method we are generating</source>
          <target state="translated">우리가 생성하는 메소드의 이름</target>
        </trans-unit>
        <trans-unit id="7b0f2f717b1bfffcc12d4d03a75ffb36750956a4" translate="yes" xml:space="preserve">
          <source>The name of the topic to publish to</source>
          <target state="translated">게시 할 주제의 이름</target>
        </trans-unit>
        <trans-unit id="37148e8800a0e402a5dafd24f4d2dd758e09a33c" translate="yes" xml:space="preserve">
          <source>The name of the topic to publish.</source>
          <target state="translated">게시 할 주제의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="747f09cb7df260c39301a23664f3869d3974f8fd" translate="yes" xml:space="preserve">
          <source>The new id for the object.</source>
          <target state="translated">객체의 새로운 ID.</target>
        </trans-unit>
        <trans-unit id="10d1c16f0d042b69ab1d286e202cfae494e0dcd6" translate="yes" xml:space="preserve">
          <source>The new value of the attribute. In the case of single value calls, such as setValue, this value will be generally be an atomic value of some sort (string, int, etc, object). In the case of multi-valued attributes, it will be an array. In the case of unsetAttribute, the new value will be 'undefined'.</source>
          <target state="translated">속성의 새로운 값. setValue와 같은 단일 값 호출의 경우이 값은 일반적으로 일종의 원자 값 (문자열, int 등)입니다. 다중 값 특성의 경우 배열이됩니다. unsetAttribute의 경우 새 값은 'undefined'입니다.</target>
        </trans-unit>
        <trans-unit id="b0a4c658d084485c2d49ff6410279fec20828dd5" translate="yes" xml:space="preserve">
          <source>The newly created deferred list which packs results as parameters to its callback.</source>
          <target state="translated">콜백에 결과를 매개 변수로 압축하는 새로 작성된 지연 목록.</target>
        </trans-unit>
        <trans-unit id="41d173e6d7dc048b81eb631d197a06646ec98d80" translate="yes" xml:space="preserve">
          <source>The node referenced in the animation</source>
          <target state="translated">애니메이션에서 참조 된 노드</target>
        </trans-unit>
        <trans-unit id="2071827b0669a3fdb83d760c298f4416bf79f1c9" translate="yes" xml:space="preserve">
          <source>The node that originate the event</source>
          <target state="translated">이벤트를 시작한 노드</target>
        </trans-unit>
        <trans-unit id="e818a5653cb5ebfafcace9c864277047825ef78c" translate="yes" xml:space="preserve">
          <source>The nodes currently in this NodeList will be returned, not the matched nodes from the query. The nodes currently in this NodeLIst could have been cloned, so the returned NodeList will include the cloned nodes.</source>
          <target state="translated">쿼리에서 일치하는 노드가 아니라 현재이 NodeList에있는 노드가 반환됩니다. 현재이 NodeLIst에있는 노드가 복제되었을 수 있으므로 리턴 된 NodeList에 복제 된 노드가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="19138ab834c410c1bf00783681ddcf0797b68db4" translate="yes" xml:space="preserve">
          <source>The nodes currently in this NodeList will be returned, not the replacing content. Note that the returned nodes have been removed from the DOM.</source>
          <target state="translated">현재이 NodeList에있는 노드는 교체 내용이 아니라 반환됩니다. 리턴 된 노드는 DOM에서 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="d52e2d2a92aad44aef4a5012834f187d1ae8136b" translate="yes" xml:space="preserve">
          <source>The nodes in this NodeList will be cloned if the query matches more than one element. Only the DOM nodes are cloned, not any attached event handlers.</source>
          <target state="translated">쿼리가 둘 이상의 요소와 일치하면이 NodeList의 노드가 복제됩니다. 연결된 이벤트 핸들러가 아닌 DOM 노드 만 복제됩니다.</target>
        </trans-unit>
        <trans-unit id="cc16da57c938d4a6a1c70817b4da9734a4cd563f" translate="yes" xml:space="preserve">
          <source>The nodes in this NodeList will be placed after the nodes matched by the query passed to insertAfter.</source>
          <target state="translated">이 NodeList의 노드는 insertAfter에 전달 된 쿼리와 일치하는 노드 뒤에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="a2a2a66d19f5c1b32084d71ec849e68bc8bae453" translate="yes" xml:space="preserve">
          <source>The number of decimal places where rounding takes place. Defaults to 0 for whole rounding. Must be non-negative.</source>
          <target state="translated">반올림이 발생하는 소수점 이하 자릿수입니다. 전체 반올림의 기본값은 0입니다. 음수가 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="755763355fe8a3c285a3fabc2904de6bbdcd19fc" translate="yes" xml:space="preserve">
          <source>The number of how many results should be returned.</source>
          <target state="translated">반환 할 결과 수입니다.</target>
        </trans-unit>
        <trans-unit id="bf54449ce7c646d4bc601eecfea51c2bf4db66b7" translate="yes" xml:space="preserve">
          <source>The number of milliseconds over which the animation should run. Defaults to the global animation default duration (350ms).</source>
          <target state="translated">애니메이션을 실행해야하는 시간 (밀리 초)입니다. 전역 애니메이션 기본 지속 시간 (350ms)으로 기본 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="1c0d4706f295d2f02737f32a13ca2bc436eeaf67" translate="yes" xml:space="preserve">
          <source>The number of milliseconds to delay beginning the animation by. The default is 0.</source>
          <target state="translated">애니메이션 시작을 지연시키는 시간 (밀리 초)입니다. 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="ae99d79a426d720320b44781d406dbb55c8e657c" translate="yes" xml:space="preserve">
          <source>The number to round</source>
          <target state="translated">반올림 할 숫자</target>
        </trans-unit>
        <trans-unit id="9420f1cade0d8efa3a9f41409909cc548f440fd8" translate="yes" xml:space="preserve">
          <source>The object in the store that matches the given id.</source>
          <target state="translated">주어진 id와 일치하는 상점의 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="55b1997ea66cf9d0c8bb730d24cb4550f854c669" translate="yes" xml:space="preserve">
          <source>The object or string containing query information. Dependent on the query engine used.</source>
          <target state="translated">쿼리 정보가 포함 된 개체 또는 문자열입니다. 사용 된 쿼리 엔진에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="ff6b60d75e5c83bbb0a14f9ad26a98c4eb9dfce4" translate="yes" xml:space="preserve">
          <source>The object parameter indicates the object that was create, modified, or deleted.</source>
          <target state="translated">object 매개 변수는 작성, 수정 또는 삭제 된 오브젝트를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="de6bb037ba318a401f6c6467232403056e39a095" translate="yes" xml:space="preserve">
          <source>The object property to use to store the identity of the store items.</source>
          <target state="translated">상점 항목의 ID를 저장하는 데 사용할 오브젝트 특성입니다.</target>
        </trans-unit>
        <trans-unit id="09d5e9539b9392047043aa6addf33fdde3d03776" translate="yes" xml:space="preserve">
          <source>The object store to convert to a data store</source>
          <target state="translated">데이터 저장소로 변환 할 개체 저장소</target>
        </trans-unit>
        <trans-unit id="b5d293af0498d23ed686f63e209c7e29af557763" translate="yes" xml:space="preserve">
          <source>The object store to use as the source provider for this data store</source>
          <target state="translated">이 데이터 저장소의 소스 제공자로 사용할 오브젝트 저장소</target>
        </trans-unit>
        <trans-unit id="d756f4e5ee375bf83d95750ed5172d20158249a2" translate="yes" xml:space="preserve">
          <source>The object that method will receive as &quot;this&quot;.</source>
          <target state="translated">메소드가 &quot;this&quot;로 수신 할 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="de182cff602893f0498f4d7cc256e84aa397dda0" translate="yes" xml:space="preserve">
          <source>The object to add to the store.</source>
          <target state="translated">상점에 추가 할 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="0955c243cfd3d12d78e568b378af83363f51f222" translate="yes" xml:space="preserve">
          <source>The object to clone</source>
          <target state="translated">복제 할 객체</target>
        </trans-unit>
        <trans-unit id="15db73d893c3ee1b2818f0378c378e40c3b06616" translate="yes" xml:space="preserve">
          <source>The object to delegate to for properties not found directly on the return object or in props.</source>
          <target state="translated">리턴 오브젝트 또는 props에서 직접 찾을 수없는 특성에 대해 위임 할 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="77ef7064ccabcdbdd9e4f5cb03fb5dee5b038c3d" translate="yes" xml:space="preserve">
          <source>The object to find the children of.</source>
          <target state="translated">아이를 찾을 객체입니다.</target>
        </trans-unit>
        <trans-unit id="f8a09b7b22d7f05e075a0eac64ef9ce345a0e18a" translate="yes" xml:space="preserve">
          <source>The object to get the identity from</source>
          <target state="translated">아이덴티티를 얻는 객체</target>
        </trans-unit>
        <trans-unit id="3c9c7cf9409b91c32b6617c51c34cca37ff9f87e" translate="yes" xml:space="preserve">
          <source>The object to put to the store.</source>
          <target state="translated">상점에 넣을 개체입니다.</target>
        </trans-unit>
        <trans-unit id="d198f37e5538fb2ff76d0bbc00d641274f58e7a0" translate="yes" xml:space="preserve">
          <source>The object to return metadata for.</source>
          <target state="translated">메타 데이터를 반환 할 객체입니다.</target>
        </trans-unit>
        <trans-unit id="bf5e20bc7ade30865ff059023cbc9e37dd51046e" translate="yes" xml:space="preserve">
          <source>The object to store.</source>
          <target state="translated">저장할 객체입니다.</target>
        </trans-unit>
        <trans-unit id="8da63f097fa720fd4071ad9fb68814834f5bb8d5" translate="yes" xml:space="preserve">
          <source>The object to use as |this| in the callback.</source>
          <target state="translated">| this |로 사용할 객체 콜백에서.</target>
        </trans-unit>
        <trans-unit id="18bfee6ba3e37bfbd65b3bca217cf8b947e818f1" translate="yes" xml:space="preserve">
          <source>The object to which to copy/add all properties contained in source. If dest is falsy, then a new object is manufactured before copying/adding properties begins.</source>
          <target state="translated">소스에 포함 된 모든 특성을 복사 / 추가 할 오브젝트입니다. 대상이 거짓 인 경우 속성 복사 / 추가가 시작되기 전에 새 객체가 제조됩니다.</target>
        </trans-unit>
        <trans-unit id="8049cf059c53da2f01d274a2e754709dc427fbb0" translate="yes" xml:space="preserve">
          <source>The object used as the value of the request promise.</source>
          <target state="translated">요청 약속의 가치로 사용되는 객체.</target>
        </trans-unit>
        <trans-unit id="6e9402e3bfcb85f9c08bc88b35ada70bd7e3afd5" translate="yes" xml:space="preserve">
          <source>The old value of the attribute. In the case of single value calls, such as setValue, unsetAttribute, etc, this value will be generally be an atomic value of some sort (string, int, etc, object). In the case of multi-valued attributes, it will be an array.</source>
          <target state="translated">속성의 이전 값입니다. setValue, unsetAttribute 등과 같은 단일 값 호출의 경우이 값은 일반적으로 일종의 원자 값 (문자열, int 등)입니다. 다중 값 특성의 경우 배열이됩니다.</target>
        </trans-unit>
        <trans-unit id="1171bc3c39b74f7d0da7ad1c693e23a5b9352e74" translate="yes" xml:space="preserve">
          <source>The optional arguments to apply to the resultset.</source>
          <target state="translated">결과 집합에 적용 할 선택적 인수입니다.</target>
        </trans-unit>
        <trans-unit id="43d99bf057c75a066260d170bc31cce2ff0c5f7a" translate="yes" xml:space="preserve">
          <source>The optional method name. Should be the same as the caller's name. Usually &quot;name&quot; is specified in complex dynamic cases, when the calling method was dynamically added, undecorated by declare(), and it cannot be determined.</source>
          <target state="translated">선택적 메소드 이름입니다. 발신자의 이름과 같아야합니다. 일반적으로 &quot;name&quot;은 선언 메소드에 의해 장식되지 않은 호출 메소드가 동적으로 추가 될 때 복잡한 동적 경우에 지정되며이를 판별 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="905abad154938a2b30495dacfee844803a1d08f2" translate="yes" xml:space="preserve">
          <source>The optional name of the constructor (loosely, a &quot;class&quot;) stored in the &quot;declaredClass&quot; property in the created prototype. It will be used as a global name for a created constructor.</source>
          <target state="translated">생성 된 프로토 타입의 &quot;declaredClass&quot;속성에 저장된 생성자 (선택적으로 &quot;클래스&quot;)의 선택적 이름입니다. 생성 된 생성자의 글로벌 이름으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8ceaf7e036b8b61d65888c4b4a839815672c1ad2" translate="yes" xml:space="preserve">
          <source>The order in which to exec this callback relative to other callbacks, defaults to 1000</source>
          <target state="translated">다른 콜백에 비해이 콜백을 실행하는 순서는 기본적으로 1000입니다.</target>
        </trans-unit>
        <trans-unit id="64b36bbe85af949629b55d64ee2d29b61e469fbd" translate="yes" xml:space="preserve">
          <source>The parameters we are passing off to the method</source>
          <target state="translated">메소드에 전달하는 매개 변수</target>
        </trans-unit>
        <trans-unit id="f2d6c1ed1bb4beea4c69e045bc95211f26dee99e" translate="yes" xml:space="preserve">
          <source>The prefix to apply to sort attribute names that are ascending</source>
          <target state="translated">오름차순으로 정렬하는 속성 이름에 적용 할 접두사</target>
        </trans-unit>
        <trans-unit id="bb06fa54042afcb3f3ae429db575b840a1cb517f" translate="yes" xml:space="preserve">
          <source>The preload signature instructs the plugin that a special rollup module is available that contains one or more flattened, localized bundles. The JSON array of available locales indicates which locales are available. Here is an example:</source>
          <target state="translated">사전로드 서명은 하나 이상의 병합 된 현지화 된 번들을 포함하는 특수 롤업 모듈을 사용할 수 있음을 플러그인에 지시합니다. 사용 가능한 로캘의 JSON 배열은 사용 가능한 로캘을 나타냅니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cd17ddb5f98fd741348caf623ca2f101a062b67f" translate="yes" xml:space="preserve">
          <source>The progress update. Passed to progbacks.</source>
          <target state="translated">진행률 업데이트 progbacks에 전달되었습니다.</target>
        </trans-unit>
        <trans-unit id="dfb1b2920bdc794bdbbf39a656bdd105fa94a32b" translate="yes" xml:space="preserve">
          <source>The promise instance &lt;code&gt;trace()&lt;/code&gt; is called on.</source>
          <target state="translated">promise 인스턴스 &lt;code&gt;trace()&lt;/code&gt; 가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="821d4ed6d42cacec1a25e17a8e65fbf7a3dbb4cd" translate="yes" xml:space="preserve">
          <source>The promise instance &lt;code&gt;traceRejected()&lt;/code&gt; is called on.</source>
          <target state="translated">약속 인스턴스 &lt;code&gt;traceRejected()&lt;/code&gt; 가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="6185dd8346ffff409f5c8d385105734d2d4bc28a" translate="yes" xml:space="preserve">
          <source>The promise will be fulfilled with a list of results if invoked with an array, or an object of results when passed an object (using the same keys). If passed neither an object or array it is resolved with an undefined value.</source>
          <target state="translated">약속은 배열로 호출 된 경우 결과 목록으로, 또는 동일한 키를 사용하여 객체를 전달할 때 결과 객체로 이행됩니다. 객체 나 배열을 모두 전달하지 않으면 정의되지 않은 값으로 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="2093de583411a2b3107aad568d8e631987d37ddf" translate="yes" xml:space="preserve">
          <source>The promises are taken from the array or object values. If no value is passed, the returned promise is resolved with an undefined value.</source>
          <target state="translated">약속은 배열 또는 객체 값에서 가져옵니다. 값이 전달되지 않으면 반환 된 약속은 정의되지 않은 값으로 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="21375980a9acfc248de55c8d723de662e7903500" translate="yes" xml:space="preserve">
          <source>The property to get.</source>
          <target state="translated">얻을 속성입니다.</target>
        </trans-unit>
        <trans-unit id="e7d10518e6afad1afb2367d5cb786a7f26e39f35" translate="yes" xml:space="preserve">
          <source>The property to set.</source>
          <target state="translated">설정할 속성입니다.</target>
        </trans-unit>
        <trans-unit id="0c37899ff89279cf0941b2319172e6c21c516323" translate="yes" xml:space="preserve">
          <source>The property value on this Stateful instance.</source>
          <target state="translated">이 Stateful 인스턴스의 속성 값입니다.</target>
        </trans-unit>
        <trans-unit id="90faa09320543a5ff00f84d0d49664274e2708fc" translate="yes" xml:space="preserve">
          <source>The public interface to a deferred.</source>
          <target state="translated">연기 된 공용 인터페이스.</target>
        </trans-unit>
        <trans-unit id="e0110158f7f62e19d1cf793153cc5e1de3d5557e" translate="yes" xml:space="preserve">
          <source>The public interface to a deferred. All promises in Dojo are instances of this class.</source>
          <target state="translated">연기 된 공용 인터페이스. Dojo의 모든 약속은이 클래스의 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="4cf8041837d53e8cbdd706dbaafaafca65b362fa" translate="yes" xml:space="preserve">
          <source>The query may be optional in some data store implementations. The dojo/data/api/Read API does not specify the syntax or semantics of the query itself -- each different data store implementation may have its own notion of what a query should look like. However, as of dojo 0.9, 1.0, and 1.1, all the provided datastores in dojo.data and dojox.data support an object structure query, where the object is a set of name/value parameters such as { attrFoo: valueBar, attrFoo1: valueBar1}. Most of the dijit widgets, such as ComboBox assume this to be the case when working with a datastore when they dynamically update the query. Therefore, for maximum compatibility with dijit widgets the recommended query parameter is a key/value object. That does not mean that the the datastore may not take alternative query forms, such as a simple string, a Date, a number, or a mix of such. Ultimately, The dojo/data/api/Read API is agnostic about what the query format.</source>
          <target state="translated">쿼리는 일부 데이터 저장소 구현에서 선택 사항 일 수 있습니다. dojo / data / api / Read API는 쿼리 자체의 구문 또는 의미를 지정하지 않습니다. 각기 다른 데이터 저장소 구현마다 쿼리의 모양에 대한 고유 한 개념이있을 수 있습니다. 그러나 dojo 0.9, 1.0 및 1.1에서 dojo.data 및 dojox.data에 제공된 모든 데이터 저장소는 오브젝트 구조 조회를 지원합니다. 여기서 오브젝트는 {attrFoo : valueBar, attrFoo1과 같은 이름 / 값 매개 변수 세트입니다. valueBar1}. ComboBox와 같은 대부분의 dijit 위젯은 동적으로 쿼리를 업데이트 할 때 데이터 스토어를 사용하는 경우에 해당한다고 가정합니다. 따라서 dijit 위젯과의 최대 호환성을 위해 권장되는 쿼리 매개 변수는 키 / 값 객체입니다. 데이터 스토어가 간단한 문자열, 날짜, 숫자,또는 그러한 것들의 혼합. 궁극적으로 dojo / data / api / Read API는 쿼리 형식을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="4bc8add7e2526ea0096fd36ddae9c70d8bf36c86" translate="yes" xml:space="preserve">
          <source>The query to use for retrieving objects from the store</source>
          <target state="translated">상점에서 오브젝트를 검색하는 데 사용할 조회</target>
        </trans-unit>
        <trans-unit id="0a6cefd00190db9a01326604f1a6a252d90c11e6" translate="yes" xml:space="preserve">
          <source>The query to use for retrieving objects from the store.</source>
          <target state="translated">상점에서 오브젝트를 검색하는 데 사용할 조회입니다.</target>
        </trans-unit>
        <trans-unit id="408a93e58fe065fda9ed2e9f709625f5c6d28cb4" translate="yes" xml:space="preserve">
          <source>The queryOptions parameter is an optional parameter used to specify options that may modify the query in some fashion, such as doing a case insensitive search, or doing a deep search where all items in a hierarchical representation of data are scanned instead of just the root items. It currently defines two options that all datastores should attempt to honor if possible:</source>
          <target state="translated">queryOptions 매개 변수는 대소 문자를 구분하지 않는 검색 수행 또는 데이터의 계층 적 표현의 모든 항목이 루트 항목 대신 스캔되는 심층 검색과 같은 일부 방식으로 조회를 수정할 수있는 옵션을 지정하는 데 사용되는 선택적 매개 변수입니다. . 현재 모든 데이터 스토어가 가능한 경우 존중해야 할 두 가지 옵션을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="0fc5951a1138d7cb033d80c78d3f43841023a235" translate="yes" xml:space="preserve">
          <source>The removedFrom parameter indicates the index in the result array where the object used to be. If the value is -1, then the object is an addition to this result set (due to a new object being created, or changed such that it is a part of the result set).</source>
          <target state="translated">removedFrom 매개 변수는 오브젝트가 있던 결과 배열의 색인을 나타냅니다. 값이 -1이면 오브젝트는이 결과 세트에 추가됩니다 (새 오브젝트가 작성되거나 결과 세트의 일부가되도록 변경 되었기 때문에).</target>
        </trans-unit>
        <trans-unit id="62a3b09d059fd069bf20388c324bda9078058873" translate="yes" xml:space="preserve">
          <source>The response in the format as defined with handleAs.</source>
          <target state="translated">handleAs로 정의 된 형식의 응답입니다.</target>
        </trans-unit>
        <trans-unit id="337d7ee452ddbd9979116ad40479ddf73e4f3319" translate="yes" xml:space="preserve">
          <source>The rest of the path to append to the path derived from the module argument. If module is an object, then this second argument should be the &quot;value&quot; argument instead.</source>
          <target state="translated">모듈 인수에서 파생 된 경로에 추가 할 나머지 경로입니다. module이 객체 인 경우이 두 번째 인수는 대신 &quot;value&quot;인수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="9c38cecb0429ed0f468965dba6b1d74649228b01" translate="yes" xml:space="preserve">
          <source>The result of the deferred. Passed to callbacks.</source>
          <target state="translated">연기 된 결과. 콜백에 전달되었습니다.</target>
        </trans-unit>
        <trans-unit id="bf86acef62c49168008dcb7b79e94b03c6906b81" translate="yes" xml:space="preserve">
          <source>The result of the evaluation. Often &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">평가 결과. 종종 &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60e39905fdb33e48901a9f2f8dd9b35f1eb9340f" translate="yes" xml:space="preserve">
          <source>The result set as an array, or a promise for an array.</source>
          <target state="translated">결과는 배열 또는 배열에 대한 약속으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="b0a00b33df06d0790a851d72f8b9e5955f1e1945" translate="yes" xml:space="preserve">
          <source>The results of the query, extended with iterative methods.</source>
          <target state="translated">반복적 인 방법으로 확장 된 쿼리 결과.</target>
        </trans-unit>
        <trans-unit id="fb9a30a4e7624984c7dbe79981e08828867f51b9" translate="yes" xml:space="preserve">
          <source>The return value is a handle that is needed to remove this connection with &lt;code&gt;dojo.disconnect&lt;/code&gt;.</source>
          <target state="translated">리턴 값은 &lt;code&gt;dojo.disconnect&lt;/code&gt; 를 사용 하여이 연결을 제거하는 데 필요한 핸들입니다 .</target>
        </trans-unit>
        <trans-unit id="40a24455ce41babddd95cbc763e277cc1d345472" translate="yes" xml:space="preserve">
          <source>The returned nodes will be in reverse DOM order -- the first node in the list will be the node closest to the original node/NodeList. .end() can be used on the returned &lt;a href=&quot;nodelist&quot;&gt;dojo/NodeList&lt;/a&gt; to get back to the original &lt;a href=&quot;nodelist&quot;&gt;dojo/NodeList&lt;/a&gt;.</source>
          <target state="translated">반환 된 노드는 DOM 순서의 역순으로 나열됩니다. 목록의 첫 번째 노드는 원래 노드 / NodeList에 가장 가까운 노드입니다. 리턴 된 &lt;a href=&quot;nodelist&quot;&gt;dojo / NodeList&lt;/a&gt; 에서 .end ()를 사용 하여 원래 &lt;a href=&quot;nodelist&quot;&gt;dojo / NodeList로&lt;/a&gt; 돌아갈 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f792829e2fcec30451aec79b054d617d16536deb" translate="yes" xml:space="preserve">
          <source>The returned query function may have a &quot;matches&quot; property that can be</source>
          <target state="translated">반환 된 쿼리 함수는 &quot;matches&quot;속성을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a64abaa4c867156475be1c7d144d0fee75fe5fbe" translate="yes" xml:space="preserve">
          <source>The returned signal object can be used to cancel the advice.</source>
          <target state="translated">반환 된 신호 객체를 사용하여 조언을 취소 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="56207f0e0b43a43804b657943bbcae95b00cdf8c" translate="yes" xml:space="preserve">
          <source>The scope to use when method executes. If method is a string, scope is also the object containing method.</source>
          <target state="translated">메소드가 실행될 때 사용할 범위입니다. method가 문자열 인 경우 scope도 method를 포함하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="21e162f0cd20fba045485c02ba3ef9f8af892050" translate="yes" xml:space="preserve">
          <source>The selector to check against</source>
          <target state="translated">확인할 셀렉터</target>
        </trans-unit>
        <trans-unit id="bec1f9f07591526e2eedee95fa5f879bce4faf29" translate="yes" xml:space="preserve">
          <source>The set of id's that are currently selected, such that this.selection[id] == 1 if the node w/that id is selected. Can iterate over selected node's id's like:</source>
          <target state="translated">해당 ID가있는 노드가 선택된 경우 this.selection [id] == 1이되도록 현재 선택된 ID 세트. 선택한 노드의 ID를 다음과 같이 반복 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b51e0bf867d40c42dd783c1619aced004b3c7ee" translate="yes" xml:space="preserve">
          <source>The simpleFetch mixin is designed to serve as a set of function(s) that can be mixed into other datastore implementations to accelerate their development.</source>
          <target state="translated">simpleFetch 믹스 인은 개발을 가속화하기 위해 다른 데이터 스토어 구현과 혼합 될 수있는 기능 세트로 제공되도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="c949057cd8d27b07544e0bf28b20c4482523c8d1" translate="yes" xml:space="preserve">
          <source>The simpleFetch mixin should work well for any datastore that can respond to a _fetchItems() call by returning an array of all the found items that matched the query. The simpleFetch mixin is not designed to work for datastores that respond to a fetch() call by incrementally loading items, or sequentially loading partial batches of the result set. For datastores that mixin simpleFetch, simpleFetch implements a fetch method that automatically handles eight of the fetch() arguments -- onBegin, onItem, onComplete, onError, start, count, sort and scope The class mixing in simpleFetch should not implement fetch(), but should instead implement a _fetchItems() method. The _fetchItems() method takes three arguments, the keywordArgs object that was passed to fetch(), a callback function to be called when the result array is available, and an error callback to be called if something goes wrong. The _fetchItems() method should ignore any keywordArgs parameters for start, count, onBegin, onItem, onComplete, onError, sort, and scope. The _fetchItems() method needs to correctly handle any other keywordArgs parameters, including the query parameter and any optional parameters (such as includeChildren). The _fetchItems() method should create an array of result items and pass it to the fetchHandler along with the original request object -- or, the _fetchItems() method may, if it wants to, create an new request object with other specifics about the request that are specific to the datastore and pass that as the request object to the handler.</source>
          <target state="translated">simpleFetch 믹스 인은 쿼리와 일치하는 모든 발견 된 항목의 배열을 리턴하여 _fetchItems () 호출에 응답 할 수있는 모든 데이터 저장소에 적합합니다. simpleFetch 믹스 인은 항목을 점진적으로로드하거나 결과 세트의 부분 배치를 순차적으로로드하여 fetch () 호출에 응답하는 데이터 저장소에서 작동하도록 설계되지 않았습니다. simpleFetch를 혼합하는 데이터 저장소의 경우 simpleFetch는 onBegin, onItem, onComplete, onError, start, count, sort 및 scope 8 개의 fetch () 인수를 자동으로 처리하는 fetch 메소드를 구현합니다. simpleFetch의 클래스 믹싱은 fetch ()를 구현하지 않아야합니다. 대신 _fetchItems () 메소드를 구현해야합니다. _fetchItems () 메소드는 fetch ()에 전달 된 keywordArgs 객체, 결과 배열을 사용할 수있을 때 호출되는 콜백 함수,그리고 무언가 잘못되면 호출되는 오류 콜백. _fetchItems () 메소드는 start, count, onBegin, onItem, onComplete, onError, sort 및 scope에 대한 keywordArgs 매개 변수를 무시해야합니다. _fetchItems () 메소드는 조회 매개 변수 및 선택적 매개 변수 (예 : includeChildren)를 포함한 다른 keywordArgs 매개 변수를 올바르게 처리해야합니다. _fetchItems () 메소드는 결과 항목의 배열을 작성하여 원래 요청 오브젝트와 함께 fetchHandler에 전달해야합니다. 또는 _fetchItems () 메소드는 원하는 경우 데이터 스토어에 특정한 요청을 요청 객체로 처리기에 전달합니다.onComplete, onError, sort 및 scope입니다. _fetchItems () 메소드는 조회 매개 변수 및 선택적 매개 변수 (예 : includeChildren)를 포함한 다른 keywordArgs 매개 변수를 올바르게 처리해야합니다. _fetchItems () 메소드는 결과 항목의 배열을 작성하여 원래 요청 오브젝트와 함께 fetchHandler에 전달해야합니다. 또는 _fetchItems () 메소드는 원하는 경우 데이터 스토어에 특정한 요청을 요청 객체로 처리기에 전달합니다.onComplete, onError, sort 및 scope입니다. _fetchItems () 메소드는 조회 매개 변수 및 선택적 매개 변수 (예 : includeChildren)를 포함한 다른 keywordArgs 매개 변수를 올바르게 처리해야합니다. _fetchItems () 메소드는 결과 항목의 배열을 작성하여 원래 요청 오브젝트와 함께 fetchHandler에 전달해야합니다. 또는 _fetchItems () 메소드는 원하는 경우 데이터 스토어에 특정한 요청을 요청 객체로 처리기에 전달합니다._fetchItems () 메소드는 결과 항목의 배열을 작성하여 원래 요청 오브젝트와 함께 fetchHandler에 전달해야합니다. 또는 _fetchItems () 메소드는 원하는 경우 데이터 스토어에 특정한 요청을 요청 객체로 처리기에 전달합니다._fetchItems () 메소드는 결과 항목의 배열을 작성하여 원래 요청 오브젝트와 함께 fetchHandler에 전달해야합니다. 또는 _fetchItems () 메소드는 원하는 경우 데이터 스토어에 특정한 요청을 요청 객체로 처리기에 전달합니다.</target>
        </trans-unit>
        <trans-unit id="76d506b88f5657c4a697cde06d2a5b25fdd5dbf3" translate="yes" xml:space="preserve">
          <source>The sort function creation will look for a property on the store called 'comparatorMap'. If it exists it will look in the mapping for comparisons function for the attributes. If one is found, it will use it instead of the basic comparator, which is typically used for strings, ints, booleans, and dates. Returns the sorting function for this particular list of attributes and sorting directions.</source>
          <target state="translated">정렬 함수 작성은 상점에서 'comparatorMap'이라는 특성을 찾습니다. 존재하는 경우 속성에 대한 비교 기능 맵핑에서 찾습니다. 하나가 발견되면 기본 비교기 대신에이를 사용하며, 일반적으로 문자열, 정수, 부울 및 날짜에 사용됩니다. 이 특정 속성 목록과 정렬 방향에 대한 정렬 함수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="86a0cb01427fab309ad05668300dcac36b8cd0fa" translate="yes" xml:space="preserve">
          <source>The source object for the event function. Defaults to &lt;code&gt;kernel.global&lt;/code&gt; if null. If obj is a DOM node, the connection is delegated to the DOM event manager (unless dontFix is true).</source>
          <target state="translated">이벤트 함수의 소스 객체입니다. null 인 경우, 기본값은 &lt;code&gt;kernel.global&lt;/code&gt; 입니다. obj가 DOM 노드 인 경우 연결은 DOM 이벤트 관리자에게 위임됩니다 (dontFix가 true가 아닌 한).</target>
        </trans-unit>
        <trans-unit id="ea36ff2879a185c6aa33eba4aca9d8548ef5559a" translate="yes" xml:space="preserve">
          <source>The source object for the event function. Defaults to kernel.global if null.</source>
          <target state="translated">이벤트 함수의 소스 객체입니다. null 인 경우, 기본값은 kernel.global입니다.</target>
        </trans-unit>
        <trans-unit id="7786e398ab1b2fd10f0292f48aa4ebbdc290074b" translate="yes" xml:space="preserve">
          <source>The special preload signature (case 3) instructs the plugin to stop servicing all normal requests (further preload requests will be serviced) until all ongoing preloading has completed.</source>
          <target state="translated">특수 사전로드 서명 (케이스 3)은 진행중인 모든 사전로드가 완료 될 때까지 플러그인이 모든 일반 요청 (추가로드 요청이 처리됨)의 서비스를 중지하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="549f778f95e833244bbe9bac6319e40dde514bf2" translate="yes" xml:space="preserve">
          <source>The state object that will be added to the history list.</source>
          <target state="translated">히스토리 목록에 추가 될 상태 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="fdad62a43ff4965bb543f1e6ee08c08beda2e946" translate="yes" xml:space="preserve">
          <source>The string is parsed as a URL-like structure, like &quot;/foo/bar&quot;</source>
          <target state="translated">문자열은 &quot;/ foo / bar&quot;와 같은 URL 유사 구조로 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="ff7baa1a11259964bf00af108bc8c5a0e0fcd5fe" translate="yes" xml:space="preserve">
          <source>The structure of the typeMap object is as follows:</source>
          <target state="translated">typeMap 객체의 구조는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="49d3bd45995ec9e796d3a726f22e2aa2d7c1b861" translate="yes" xml:space="preserve">
          <source>The target base URL to use for all requests to the server. This string will be prepended to the id to generate the URL (relative or absolute) for requests sent to the server</source>
          <target state="translated">서버에 대한 모든 요청에 ​​사용할 대상 기본 URL입니다. 이 문자열은 서버에 전송 된 요청에 대한 URL (상대 또는 절대)을 생성하기 위해 ID 앞에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="688b625096059289b8ee1b9938ac91054dcd0f3c" translate="yes" xml:space="preserve">
          <source>The template string or location</source>
          <target state="translated">템플릿 문자열 또는 위치</target>
        </trans-unit>
        <trans-unit id="977b3b8cc903475af6d2755e2cd2b6c8d970ac0e" translate="yes" xml:space="preserve">
          <source>The text to evaluation.</source>
          <target state="translated">평가할 텍스트.</target>
        </trans-unit>
        <trans-unit id="5716ef9c1bc1d6e71cc1a553528d48984e2911d6" translate="yes" xml:space="preserve">
          <source>The topic to subscribe to</source>
          <target state="translated">구독 할 주제</target>
        </trans-unit>
        <trans-unit id="d5561ef4c109810950845b4ad090ec8c5f3732d4" translate="yes" xml:space="preserve">
          <source>The topic to which to subscribe.</source>
          <target state="translated">구독 할 주제입니다.</target>
        </trans-unit>
        <trans-unit id="3cfc3fff68b0797cf6a3a1a2b2115ff39fc26dc5" translate="yes" xml:space="preserve">
          <source>The user may add custom localized formats where the bundle has properties following the same naming convention used by dojo.cldr: &lt;code&gt;dateFormat-xxxx&lt;/code&gt; / &lt;code&gt;timeFormat-xxxx&lt;/code&gt; The pattern string should match the format used by the CLDR. See &lt;a href=&quot;locale#format&quot;&gt;dojo/date/locale.format()&lt;/a&gt; for details. The resources must be loaded by dojo.requireLocalization() prior to use</source>
          <target state="translated">사용자는 dojo.cldr에서 사용하는 동일한 명명 규칙에 따라 번들에 특성이있는 사용자 정의 현지화 된 형식을 추가 할 수 있습니다. &lt;code&gt;dateFormat-xxxx&lt;/code&gt; / &lt;code&gt;timeFormat-xxxx&lt;/code&gt; 패턴 문자열은 CLDR에서 사용하는 형식과 일치해야합니다. 자세한 내용은 &lt;a href=&quot;locale#format&quot;&gt;dojo / date / locale.format ()&lt;/a&gt; 을 참조하십시오. 사용하기 전에 dojo.requireLocalization ()에 의해 자원을로드해야합니다.</target>
        </trans-unit>
        <trans-unit id="e5a9c7013567ef26a2783a0de75bd6f88443a816" translate="yes" xml:space="preserve">
          <source>The value of the src attribute on the iframe element. If a value is not given, then dojo/resources/blank.html will be used.</source>
          <target state="translated">iframe 요소의 src 속성 값 값이 제공되지 않으면 dojo / resources / blank.html이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="664c36b9358a2bfcf525459c0bbf68c56e53e7e7" translate="yes" xml:space="preserve">
          <source>The value to assign to the item.</source>
          <target state="translated">항목에 할당 할 값입니다.</target>
        </trans-unit>
        <trans-unit id="00c879ace4f92e01993f7e94552decbcdc9d4c44" translate="yes" xml:space="preserve">
          <source>The value to look for</source>
          <target state="translated">찾을 가치</target>
        </trans-unit>
        <trans-unit id="70ae1731f30161ff6fd64c7495913ad6c3d0dc67" translate="yes" xml:space="preserve">
          <source>The value to match as a value for the attribute.</source>
          <target state="translated">속성 값으로 일치하는 값입니다.</target>
        </trans-unit>
        <trans-unit id="5f9706fe37a21ebb4f5356314e9dbb0f193612de" translate="yes" xml:space="preserve">
          <source>The value to search for.</source>
          <target state="translated">검색 할 값입니다.</target>
        </trans-unit>
        <trans-unit id="4c843c67b439956d4bc0b7a0b5f97a5eec58c9b2" translate="yes" xml:space="preserve">
          <source>The value to set for said &lt;code&gt;key&lt;/code&gt;, provided &lt;code&gt;key&lt;/code&gt; is a string (and not an object)</source>
          <target state="translated">상기에 설정할 값 &lt;code&gt;key&lt;/code&gt; 제공 &lt;code&gt;key&lt;/code&gt; 문자열이다 (그리고 객체)</target>
        </trans-unit>
        <trans-unit id="42c887cb4c24572bb9e00f77f5a2bad2aa095fd4" translate="yes" xml:space="preserve">
          <source>The value to set for the attribute</source>
          <target state="translated">속성에 설정할 값</target>
        </trans-unit>
        <trans-unit id="bdc77d5462349e76748c9ac21d6becbff4e7cb5c" translate="yes" xml:space="preserve">
          <source>The value to set for the property</source>
          <target state="translated">속성에 설정할 값</target>
        </trans-unit>
        <trans-unit id="6e7c9011cc7a4e3a54bfbe9858e5419d35c76453" translate="yes" xml:space="preserve">
          <source>The value to set in the property.</source>
          <target state="translated">속성에서 설정할 값입니다.</target>
        </trans-unit>
        <trans-unit id="19365e61e6c7ba619f9b5847f67ba4dd535a5c49" translate="yes" xml:space="preserve">
          <source>The w/h are used for calculating boxes. Normally application code will not need to invoke this directly, and will use the ...box... functions instead.</source>
          <target state="translated">w / h는 박스 계산에 사용됩니다. 일반적으로 응용 프로그램 코드는이를 직접 호출 할 필요가 없으며 대신 ... box ... 함수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="719a251a5d651bf89f1493e4a380f23bc8e51cc2" translate="yes" xml:space="preserve">
          <source>Then get some random key:</source>
          <target state="translated">그런 다음 임의의 키를 얻으십시오.</target>
        </trans-unit>
        <trans-unit id="46df6390b9e4ab021b67214e30da068e8843dfbb" translate="yes" xml:space="preserve">
          <source>There are a variety of formats permitted in the behaviorObject</source>
          <target state="translated">behaviorObject에서 허용되는 다양한 형식이 있습니다</target>
        </trans-unit>
        <trans-unit id="b6c5410c4682df8e4689b74ff69998f559e5de4b" translate="yes" xml:space="preserve">
          <source>There are problems with using &lt;a href=&quot;../back&quot;&gt;dojo/back&lt;/a&gt; with semantically-named fragment identifiers (&quot;hash values&quot; on an URL). In most browsers it will be hard for &lt;a href=&quot;../back&quot;&gt;dojo/back&lt;/a&gt; to know distinguish a back from a forward event in those cases. For back/forward support to work best, the fragment ID should always be a unique value (something using new Date().getTime() for example). If you want to detect hash changes using semantic fragment IDs, then consider using &lt;a href=&quot;../hash&quot;&gt;dojo/hash&lt;/a&gt; instead (in Dojo 1.4+).</source>
          <target state="translated">의미 적으로 명명 된 조각 식별자 (URL의 &quot;해시 값&quot;)와 함께 &lt;a href=&quot;../back&quot;&gt;dojo / back&lt;/a&gt; 을 사용하는 데 문제가 있습니다 . 대부분의 브라우저에서는 &lt;a href=&quot;../back&quot;&gt;dojo / back&lt;/a&gt; 이 앞으로 이벤트와 back 이벤트를 구별하는 것이 어렵다 . 뒤로 / 앞으로 지원이 가장 잘 작동하려면 조각 ID는 항상 고유 한 값이어야합니다 (예 : new Date (). getTime () 사용). 시맨틱 프래그먼트 ID를 사용하여 해시 변경 사항을 감지하려면 대신 Dojo 1.4 이상에서 &lt;a href=&quot;../hash&quot;&gt;dojo / hash&lt;/a&gt; 사용을 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="ba5c6dd2da90e81f12e0053a0ea0f7161df55e5b" translate="yes" xml:space="preserve">
          <source>There are problems with using &lt;a href=&quot;back&quot;&gt;dojo/back&lt;/a&gt; with semantically-named fragment identifiers (&quot;hash values&quot; on an URL). In most browsers it will be hard for &lt;a href=&quot;back&quot;&gt;dojo/back&lt;/a&gt; to know distinguish a back from a forward event in those cases. For back/forward support to work best, the fragment ID should always be a unique value (something using new Date().getTime() for example). If you want to detect hash changes using semantic fragment IDs, then consider using &lt;a href=&quot;hash&quot;&gt;dojo/hash&lt;/a&gt; instead (in Dojo 1.4+).</source>
          <target state="translated">의미 적으로 명명 된 조각 식별자 (URL의 &quot;해시 값&quot;)와 함께 &lt;a href=&quot;back&quot;&gt;dojo / back&lt;/a&gt; 을 사용하는 데 문제가 있습니다 . 대부분의 브라우저에서는 &lt;a href=&quot;back&quot;&gt;dojo / back&lt;/a&gt; 이 앞으로 이벤트와 back 이벤트를 구별하는 것이 어렵다 . 뒤로 / 앞으로 지원이 가장 잘 작동하려면 조각 ID는 항상 고유 한 값이어야합니다 (예 : new Date (). getTime () 사용). 시맨틱 프래그먼트 ID를 사용하여 해시 변경 사항을 감지하려면 대신 Dojo 1.4 이상에서 &lt;a href=&quot;hash&quot;&gt;dojo / hash&lt;/a&gt; 사용을 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="e86440efc1dee45303b0995b88990c6c6d710cd9" translate="yes" xml:space="preserve">
          <source>These are additional options for how caching is handled.</source>
          <target state="translated">캐싱 처리 방법에 대한 추가 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="0dba8596e3fa4787419f1e4684a2651da0397a82" translate="yes" xml:space="preserve">
          <source>This AMD plugin module allows native Node.js modules to be loaded by AMD modules using the Dojo loader. Note that this plugin will not work with AMD loaders other than the Dojo loader.</source>
          <target state="translated">이 AMD 플러그인 모듈을 사용하면 Dojo 로더를 사용하여 네이티브 Node.js 모듈을 AMD 모듈에서로드 할 수 있습니다. 이 플러그인은 Dojo 로더 이외의 AMD 로더에서는 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f01fea1e23e460516ab7bf6740ecb3adfa7a5765" translate="yes" xml:space="preserve">
          <source>This API defines a set of APIs that all datastores that conform to the Notifications API must implement. In general, most stores will implement these APIs as no-op functions for users who wish to monitor them to be able to connect to then via dojo.connect(). For non-users of dojo.connect, they should be able to just replace the function on the store to obtain notifications. Both read-only and read-write stores may implement this feature. In the case of a read-only store, this feature makes sense if the store itself does internal polling to a back-end server and periodically updates its cache of items (deletes, adds, and updates).</source>
          <target state="translated">이 API는 알림 API를 준수하는 모든 데이터 저장소가 구현해야하는 API 세트를 정의합니다. 일반적으로 대부분의 상점은 이러한 API를 dojo.connect ()를 통해 연결될 수 있도록 모니터하려는 사용자를 위해 비 작동 함수로 구현합니다. dojo.connect 사용자가 아닌 경우, 상점의 기능을 교체하여 알림을받을 수 있어야합니다. 읽기 전용 및 읽기 / 쓰기 저장소 모두이 기능을 구현할 수 있습니다. 읽기 전용 저장소의 경우이 기능은 저장소 자체가 백엔드 서버에 내부 폴링을 수행하고 주기적으로 항목 캐시 (삭제, 추가 및 업데이트)를 업데이트하는 경우에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="b71212129919aefc3ffe663d9b38be6d37db8769" translate="yes" xml:space="preserve">
          <source>This allows an app to setup a single event handler on a high level node, rather than many event handlers on subnodes. For example, one onclick handler for a Tree widget, rather than separate handlers for each node in the tree. Since setting up many event handlers is expensive, this can increase performance.</source>
          <target state="translated">이를 통해 앱은 하위 노드의 많은 이벤트 핸들러가 아닌 상위 레벨 노드에서 단일 이벤트 핸들러를 설정할 수 있습니다. 예를 들어, 트리의 각 노드에 대해 별도의 핸들러가 아닌 트리 위젯에 대한 하나의 온 클릭 핸들러입니다. 많은 이벤트 핸들러를 설정하면 비용이 많이 들기 때문에 성능이 향상 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea66abb8f761aef950e4a0aebdd282c3156f2ff5" translate="yes" xml:space="preserve">
          <source>This can be used to mark a function, file, or module as experimental. Experimental code is not ready to be used, and the APIs are subject to change without notice. Experimental code may be completed deleted without going through the normal deprecation process.</source>
          <target state="translated">함수, 파일 또는 모듈을 실험용으로 표시하는 데 사용할 수 있습니다. 실험 코드를 사용할 준비가되지 않았으며 API는 예고없이 변경 될 수 있습니다. 실험적인 코드는 정상적인 지원 중단 절차를 거치지 않고 삭제 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b15b2cb24054c42fcaa996125707ff26823a180" translate="yes" xml:space="preserve">
          <source>This class defines out the semantics of what a 'Request' object looks like when returned from a fetch() method. In general, a request object is nothing more than the original keywordArgs from fetch with an abort function attached to it to allow users to abort a particular request if they so choose. No other functions are required on a general Request object return. That does not inhibit other store implementations from adding extensions to it, of course.</source>
          <target state="translated">이 클래스는 fetch () 메소드에서 반환 될 때 'Request'객체의 모양에 대한 의미를 정의합니다. 일반적으로 요청 객체는 사용자가 원하는 경우 특정 요청을 중단 할 수 있도록 중단 기능이 첨부 된 fetch의 원본 keywordArgs에 지나지 않습니다. 일반적인 Request 객체 반환에는 다른 기능이 필요하지 않습니다. 물론 다른 상점 구현이 확장을 추가하는 것을 방해하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="f14debbc77a745bcb73222ac4573cad8701e9dc6" translate="yes" xml:space="preserve">
          <source>This code gets and sets the values for the form fields above:</source>
          <target state="translated">이 코드는 위의 양식 필드 값을 가져 와서 설정합니다.</target>
        </trans-unit>
        <trans-unit id="d796d26a8afef9e96dba2602ae6da853503e0ccc" translate="yes" xml:space="preserve">
          <source>This code inserts &quot;Hello World&quot; into both divs:</source>
          <target state="translated">이 코드는 &quot;Hello World&quot;를 두 div 모두에 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="5a4a312abf1c775337910bd24a72f15457a02efe" translate="yes" xml:space="preserve">
          <source>This code inserts &lt;code&gt;&amp;lt;p&amp;gt;Hello World&amp;lt;/p&amp;gt;&lt;/code&gt; into both divs:</source>
          <target state="translated">이 코드는 &lt;code&gt;&amp;lt;p&amp;gt;Hello World&amp;lt;/p&amp;gt;&lt;/code&gt; 를 두 div 모두에 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="ade5b9e1b4ac5754c899c7334234900d47b11621" translate="yes" xml:space="preserve">
          <source>This code returns &quot;Hello Mars today&quot;:</source>
          <target state="translated">이 코드는 &quot;Hello Mars today&quot;를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6666513ae5277efa9c4a2aae6532db24ef9afe87" translate="yes" xml:space="preserve">
          <source>This code returns &lt;code&gt;&amp;lt;p&amp;gt;Hello Mars&amp;lt;/p&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">이 코드는 &lt;code&gt;&amp;lt;p&amp;gt;Hello Mars&amp;lt;/p&amp;gt;&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8e53ad1e634735ce051f8ba1ce50cb8718fa2bda" translate="yes" xml:space="preserve">
          <source>This does not mean that custom stores can not add methods and properties to the request object returned, only that the API does not require it. For more info about the Request API, see &lt;a href=&quot;request&quot;&gt;dojo/data/api/Request&lt;/a&gt;</source>
          <target state="translated">이는 사용자 정의 상점이 리턴 된 요청 오브젝트에 메소드 및 특성을 추가 할 수 없으며 API에 필요하지 않은 것만 의미합니다. 요청 API에 대한 자세한 정보는 &lt;a href=&quot;request&quot;&gt;dojo / data / api / Request를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="beb2dd531bc63743a78c668c9825fb96e5f33e8d" translate="yes" xml:space="preserve">
          <source>This form:</source>
          <target state="translated">이 양식:</target>
        </trans-unit>
        <trans-unit id="eb80a597f5799a26051525583ea58042788d6c99" translate="yes" xml:space="preserve">
          <source>This function acts the same as on(), but will only call the listener once. The listener will be called for the first event that takes place and then listener will automatically be removed.</source>
          <target state="translated">이 함수는 on ()과 동일하게 작동하지만 리스너를 한 번만 호출합니다. 첫 번째 이벤트가 발생하면 리스너가 호출 된 다음 리스너가 자동으로 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="068d4f988eb43b829e11ef36b5043bfdc4d09f66" translate="yes" xml:space="preserve">
          <source>This function acts the same as on(), but with pausable functionality. The returned signal object has pause() and resume() functions. Calling the pause() method will cause the listener to not be called for future events. Calling the resume() method will cause the listener to again be called for future events.</source>
          <target state="translated">이 함수는 on ()과 동일하게 작동하지만 일시 중지 가능한 기능이 있습니다. 리턴 된 신호 오브젝트에는 pause () 및 resume () 함수가 있습니다. pause () 메서드를 호출하면 향후 이벤트에 대해 리스너가 호출되지 않습니다. resume () 메서드를 호출하면 향후 이벤트를 위해 리스너가 다시 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="4dd331a41a33b980e6382c29402410b1379d85b2" translate="yes" xml:space="preserve">
          <source>This function can be used as a template for more complex query engines; for example, an engine can be created that accepts an object hash that contains filtering functions, or a string that gets evaluated, etc.</source>
          <target state="translated">이 기능은보다 복잡한 쿼리 엔진의 템플릿으로 사용할 수 있습니다. 예를 들어 필터링 기능이 포함 된 객체 해시 또는 평가되는 문자열 등을 허용하는 엔진을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76aafe591674b789721ce4749031d3f0b9cca7f7" translate="yes" xml:space="preserve">
          <source>This function corresponds to the JavaScript 1.6 Array.every() method, with one difference: when run over sparse arrays, this implementation passes the &quot;holes&quot; in the sparse array to the callback function with a value of undefined. JavaScript 1.6's every skips the holes in the sparse array. For more details, see: &lt;a href=&quot;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/every&quot;&gt;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/every&lt;/a&gt;</source>
          <target state="translated">이 함수는 JavaScript 1.6 Array.every () 메소드에 한 가지 차이점이 있습니다. 희소 배열을 실행할 때이 구현은 희소 배열의 &quot;구멍&quot;을 정의되지 않은 값으로 콜백 함수에 전달합니다. JavaScript 1.6은 모든 희소 배열의 구멍을 건너 뜁니다. 자세한 내용은 &lt;a href=&quot;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/every&quot;&gt;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/every를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a1fc21cc1cbbfab5c156394217280b7824a11b57" translate="yes" xml:space="preserve">
          <source>This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when run over sparse arrays, this implementation passes the &quot;holes&quot; in the sparse array to the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array. For more details, see: &lt;a href=&quot;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter&quot;&gt;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter&lt;/a&gt;</source>
          <target state="translated">이 함수는 JavaScript 1.6 Array.filter () 메소드에 한 가지 차이점이 있습니다. 희소 배열을 실행할 때이 구현은 희소 배열의 &quot;구멍&quot;을 정의되지 않은 값으로 콜백 함수에 전달합니다. JavaScript 1.6의 필터는 희소 배열의 구멍을 건너 뜁니다. 자세한 내용은 &lt;a href=&quot;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter&quot;&gt;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="34f8047767d304c62db86e950ee17e4def68325d" translate="yes" xml:space="preserve">
          <source>This function corresponds to the JavaScript 1.6 Array.forEach() method, with one difference: when run over sparse arrays, this implementation passes the &quot;holes&quot; in the sparse array to the callback function with a value of undefined. JavaScript 1.6's forEach skips the holes in the sparse array. For more details, see: &lt;a href=&quot;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/forEach&quot;&gt;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/forEach&lt;/a&gt;</source>
          <target state="translated">이 함수는 JavaScript 1.6 Array.forEach () 메소드에 해당하지만 한 가지 차이점이 있습니다. 희소 배열을 실행할 때이 구현은 희소 배열의 &quot;구멍&quot;을 정의되지 않은 값으로 콜백 함수에 전달합니다. JavaScript 1.6의 forEach는 희소 배열의 구멍을 건너 뜁니다. 자세한 내용은 &lt;a href=&quot;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/forEach&quot;&gt;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/forEach를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b75364647aca27e3eff63d55578828992c4f4302" translate="yes" xml:space="preserve">
          <source>This function corresponds to the JavaScript 1.6 Array.map() method, with one difference: when run over sparse arrays, this implementation passes the &quot;holes&quot; in the sparse array to the callback function with a value of undefined. JavaScript 1.6's map skips the holes in the sparse array. For more details, see: &lt;a href=&quot;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/map&quot;&gt;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/map&lt;/a&gt;</source>
          <target state="translated">이 함수는 JavaScript 1.6 Array.map () 메소드에 한 가지 차이점이 있습니다. 희소 배열을 실행할 때이 구현은 희소 배열의 &quot;구멍&quot;을 정의되지 않은 값으로 콜백 함수에 전달합니다. JavaScript 1.6의 맵은 희소 배열의 구멍을 건너 뜁니다. 자세한 내용은 &lt;a href=&quot;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/map&quot;&gt;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/map을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a0bcedbc2a0032b92bdf2a111c9b5973348ba242" translate="yes" xml:space="preserve">
          <source>This function corresponds to the JavaScript 1.6 Array.some() method, with one difference: when run over sparse arrays, this implementation passes the &quot;holes&quot; in the sparse array to the callback function with a value of undefined. JavaScript 1.6's some skips the holes in the sparse array. For more details, see: &lt;a href=&quot;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/some&quot;&gt;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/some&lt;/a&gt;</source>
          <target state="translated">이 함수는 JavaScript 1.6 Array.some () 메소드에 한 가지 차이점이 있습니다. 희소 배열을 실행할 때이 구현은 희소 배열의 &quot;구멍&quot;을 정의되지 않은 값으로 콜백 함수에 전달합니다. JavaScript 1.6의 일부는 희소 배열의 구멍을 건너 뜁니다. 자세한 내용은 &lt;a href=&quot;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/some&quot;&gt;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/some을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4dd08d94330ec89275f516ce3420f119b7708e4f" translate="yes" xml:space="preserve">
          <source>This function follows &lt;a href=&quot;https://developer.mozilla.org/en/JSON&quot;&gt;native JSON API&lt;/a&gt; Throws for invalid JSON strings. This delegates to eval() if native JSON support is not available. By default this will evaluate any valid JS expression. With the strict parameter set to true, the parser will ensure that only valid JSON strings are parsed (otherwise throwing an error). Without the strict parameter, the content passed to this method must come from a trusted source.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;https://developer.mozilla.org/en/JSON&quot;&gt;기본 JSON API를&lt;/a&gt; 따릅니다 . 잘못된 JSON 문자열에 대해 발생합니다. 기본 JSON 지원을 사용할 수없는 경우 eval ()에 위임합니다. 기본적으로 이것은 유효한 JS 표현식을 평가합니다. strict 매개 변수를 true로 설정하면 파서는 유효한 JSON 문자열 만 구문 분석합니다 (그렇지 않으면 오류가 발생 함). 엄격한 매개 변수가 없으면이 메소드로 전달 된 컨텐츠는 신뢰할 수있는 소스에서 가져와야합니다.</target>
        </trans-unit>
        <trans-unit id="11028c91585d1db5cc66de89da8c2668db1d0205" translate="yes" xml:space="preserve">
          <source>This function is a hook point for stores to provide as a way for a fetch to be halted mid-processing.</source>
          <target state="translated">이 기능은 상점이 반입 중 처리를 중지 할 수있는 방법으로 제공하는 후크 포인트입니다.</target>
        </trans-unit>
        <trans-unit id="7402b699ab6223a56d128e39283a860a2a620e14" translate="yes" xml:space="preserve">
          <source>This function is a hook point for stores to provide as a way for a fetch to be halted mid-processing. For more details on the fetch() api, please see &lt;a href=&quot;read#fetch&quot;&gt;dojo/data/api/Read.fetch()&lt;/a&gt;.</source>
          <target state="translated">이 기능은 상점이 반입 중 처리를 중지 할 수있는 방법으로 제공하는 후크 포인트입니다. fetch () API에 대한 자세한 내용은 &lt;a href=&quot;read#fetch&quot;&gt;dojo / data / api / Read.fetch ()&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="db12579dc9279b8c402e99775d5b4ff4b2862fc7" translate="yes" xml:space="preserve">
          <source>This function is called any time a new item is created in the store. It is called immediately after the store newItem processing has completed.</source>
          <target state="translated">이 기능은 상점에서 새 항목이 작성 될 때마다 호출됩니다. 상점 newItem 처리가 완료된 직후에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="0ef620d12be6c75587e9e4434143e843b744f94d" translate="yes" xml:space="preserve">
          <source>This function is called any time an item is deleted from the store. It is called immediately after the store deleteItem processing has completed.</source>
          <target state="translated">이 기능은 상점에서 상품이 삭제 될 때마다 호출됩니다. 상점 deleteItem 처리가 완료된 직후에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="d7b10ab45dd9513334697d45043113e24edc7d1d" translate="yes" xml:space="preserve">
          <source>This function is called any time an item is modified via setValue, setValues, unsetAttribute, etc.</source>
          <target state="translated">이 함수는 setValue, setValues, unsetAttribute 등을 통해 항목을 수정할 때마다 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="a3dc2713202a5721197ce8193cb219f282a452c4" translate="yes" xml:space="preserve">
          <source>This function is called any time an item is modified via setValue, setValues, unsetAttribute, etc. Its purpose is to provide a hook point for those who wish to monitor actions on items in the store in a simple manner. The general expected usage is to dojo.connect() to the store's implementation and be called after the store function is called.</source>
          <target state="translated">이 함수는 setValue, setValues, unsetAttribute 등을 통해 항목을 수정할 때마다 호출됩니다. 목적은 상점의 항목에 대한 조치를 간단한 방식으로 모니터하려는 사용자에게 후크 포인트를 제공하는 것입니다. 일반적으로 예상되는 사용법은 dojo.connect ()를 상점 구현에 저장하고 상점 함수가 호출 된 후 호출하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="d896f735fb8a08269c8144a5d4ca34e8da31f60c" translate="yes" xml:space="preserve">
          <source>This function is used to implement extend() method of a constructor produced with declare().</source>
          <target state="translated">이 함수는 선언 ()으로 생성 된 생성자의 extend () 메소드를 구현하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="334164f0c9f8df825627816cd7459e8aa9f60dcf" translate="yes" xml:space="preserve">
          <source>This function is used to mix in properties like lang.mixin does, but it skips a constructor property and decorates functions like declare() does.</source>
          <target state="translated">이 함수는 lang.mixin과 같은 속성을 혼합하는 데 사용되지만 생성자 속성을 건너 뛰고 선언 ()과 같은 함수를 장식합니다.</target>
        </trans-unit>
        <trans-unit id="63e2faab701177eecf9e3d8b27a0a2d1ae0c4431" translate="yes" xml:space="preserve">
          <source>This function will be called at the end of every request, whether or not an error occurs.</source>
          <target state="translated">이 함수는 오류 발생 여부와 상관없이 모든 요청이 끝날 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="5befbf7936488581f247f02aef3dfd01c5f89d7c" translate="yes" xml:space="preserve">
          <source>This function will be called on a successful HTTP response code.</source>
          <target state="translated">이 함수는 성공적인 HTTP 응답 코드에서 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="0333b7516ba056af0fca02ac7b1d4ce065280150" translate="yes" xml:space="preserve">
          <source>This function will be called when the request fails due to a network or server error, the url is invalid, etc. It will also be called if the load or handle callback throws an exception, unless djConfig.debugAtAllCosts is true. This allows deployed applications to continue to run even when a logic error happens in the callback, while making it easier to troubleshoot while in debug mode.</source>
          <target state="translated">이 함수는 네트워크 또는 서버 오류로 인해 요청이 실패하거나 URL이 유효하지 않은 경우에 호출됩니다. djConfig.debugAtAllCosts가 true가 아닌 경우로드 또는 핸들 콜백에서 예외가 발생하는 경우에도 호출됩니다. 이를 통해 콜백에서 논리 오류가 발생하더라도 배포 된 응용 프로그램을 계속 실행할 수 있으며 디버그 모드에서 문제를 쉽게 해결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df5ee6a87a9ce1d5640d1831c7005b4ac2f37300" translate="yes" xml:space="preserve">
          <source>This function will return a new promise that is fulfilled when the given fulfilledHandler or errorHandler callback is finished. This allows promise operations to be chained together. The value returned from the callback handler is the fulfillment value for the returned promise. If the callback throws an error, the returned promise will be moved to failed state.</source>
          <target state="translated">이 함수는 주어진 fulfilledHandler 또는 errorHandler 콜백이 완료되면 이행되는 새로운 약속을 리턴합니다. 이를 통해 약속 작업을 서로 연결할 수 있습니다. 콜백 핸들러에서 리턴 된 값은 리턴 된 약속의 이행 값입니다. 콜백에서 오류가 발생하면 반환 된 약속이 실패 상태로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="9cb0fcb33b7bdde9a847f8490be4f28be0cdab2c" translate="yes" xml:space="preserve">
          <source>This getValues() method works just like the getValue() method, but getValues() always returns an array rather than a single attribute value. The array may be empty, may contain a single attribute value, or may contain many attribute values. If the item does not have a value for the given attribute, then getValues() will return an empty array: []. (So, if store.hasAttribute(item, attribute) has a return of false, then store.getValues(item, attribute) will return [].)</source>
          <target state="translated">이 getValues ​​() 메소드는 getValue () 메소드와 동일하게 작동하지만 getValues ​​()는 항상 단일 속성 값이 아닌 배열을 리턴합니다. 배열이 비어 있거나 단일 속성 값을 포함하거나 많은 속성 값을 포함 할 수 있습니다. 항목에 주어진 속성에 대한 값이 없으면 getValues ​​()는 빈 배열을 반환합니다 : []. (따라서 store.hasAttribute (item, attribute)가 false를 리턴하면 store.getValues ​​(item, attribute)는 []를 리턴합니다.)</target>
        </trans-unit>
        <trans-unit id="89dba6ca3884d64ec917122c6dccd78024a2a656" translate="yes" xml:space="preserve">
          <source>This indicates the following rollup modules are available:</source>
          <target state="translated">다음 롤업 모듈을 사용할 수 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ac08cc9b4d31f3eacb7a78bb50dc79d37d750c13" translate="yes" xml:space="preserve">
          <source>This indicates whether or not to include object updates that do not affect the inclusion or order of the object in the query results. By default this is false, which means that if any object is updated in such a way that it remains in the result set and it's position in result sets is not affected, then the listener will not be fired.</source>
          <target state="translated">쿼리 결과에 개체의 포함 또는 순서에 영향을 미치지 않는 개체 업데이트를 포함할지 여부를 나타냅니다. 기본적으로 이것은 false이며, 결과 집합에 남아 있고 결과 집합의 위치에 영향을주지 않는 방식으로 객체가 업데이트되면 리스너가 시작되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ecba915782451a4ce1ac736ae3f643264995ae40" translate="yes" xml:space="preserve">
          <source>This is a basic in-memory object store. It implements &lt;a href=&quot;api/store&quot;&gt;dojo/store/api/Store&lt;/a&gt;.</source>
          <target state="translated">기본 메모리 내 오브젝트 저장소입니다. &lt;a href=&quot;api/store&quot;&gt;dojo / store / api / Store를&lt;/a&gt; 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="733410e7b92999033294d4b7512333ddfd3bb269" translate="yes" xml:space="preserve">
          <source>This is a basic store for RESTful communicating with a server through JSON formatted data. It implements &lt;a href=&quot;api/store&quot;&gt;dojo/store/api/Store&lt;/a&gt;.</source>
          <target state="translated">JSON 형식의 데이터를 통해 서버와 RESTful 통신하기위한 기본 저장소입니다. &lt;a href=&quot;api/store&quot;&gt;dojo / store / api / Store를&lt;/a&gt; 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="048852aab22dc86040f62db0f099ec4b409b5132" translate="yes" xml:space="preserve">
          <source>This is a list of IO topics that can be published if djConfig.ioPublish is set to true. IO topics can be published for any Input/Output, network operation. So, dojo.xhr, dojo.io.script and dojo.io.iframe can all trigger these topics to be published.</source>
          <target state="translated">djConfig.ioPublish가 true로 설정된 경우 공개 할 수있는 IO 주제 목록입니다. 입출력 주제는 모든 입출력 네트워크 작업에 대해 게시 할 수 있습니다. 따라서 dojo.xhr, dojo.io.script 및 dojo.io.iframe은 이러한 주제를 모두 발행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c75b8a1e9a4937b5a6f57856f52f7f350ad5265d" translate="yes" xml:space="preserve">
          <source>This is a small implementation of the Boodman/Crockford delegation pattern in JavaScript. An intermediate object constructor mediates the prototype chain for the returned object, using it to delegate down to obj for property lookup when object-local lookup fails. This can be thought of similarly to ES4's &quot;wrap&quot;, save that it does not act on types but rather on pure objects.</source>
          <target state="translated">이것은 JavaScript에서 Boodman / Crockford 위임 패턴의 작은 구현입니다. 중간 객체 생성자는 반환 된 객체의 프로토 타입 체인을 매개로 사용하여 객체 로컬 조회에 실패한 경우이를 사용하여 속성 조회를 위해 obj에 위임합니다. 이것은 ES4의 &quot;랩 (wrap)&quot;과 유사하게 생각할 수 있으며, 유형이 아니라 순수한 객체에 작용한다는 점을 제외하고는 말입니다.</target>
        </trans-unit>
        <trans-unit id="f634f09188ec6a4b04660cae35861e0d20ee870c" translate="yes" xml:space="preserve">
          <source>This is an abstract API that data provider implementations conform to. This file defines function signatures and intentionally leaves all the functions unimplemented.</source>
          <target state="translated">이것은 데이터 제공자 구현이 준수하는 추상 API입니다. 이 파일은 함수 시그니처를 정의하고 의도적으로 모든 함수를 구현하지 않은 상태로 둡니다.</target>
        </trans-unit>
        <trans-unit id="5486f5f0df37c0c81e225043e57393ff6a35c313" translate="yes" xml:space="preserve">
          <source>This is an abstract API that data provider implementations conform to. This file defines functions signatures and intentionally leaves all the functions unimplemented.</source>
          <target state="translated">이것은 데이터 제공자 구현이 준수하는 추상 API입니다. 이 파일은 함수 시그니처를 정의하고 의도적으로 모든 함수를 구현하지 않은 상태로 둡니다.</target>
        </trans-unit>
        <trans-unit id="5d57b75d895fe11e0092c96c2720a3f9d81b24cd" translate="yes" xml:space="preserve">
          <source>This is an abstract API that data provider implementations conform to. This file defines methods signatures and intentionally leaves all the methods unimplemented.</source>
          <target state="translated">이것은 데이터 제공자 구현이 준수하는 추상 API입니다. 이 파일은 메소드 서명을 정의하고 의도적으로 모든 메소드를 구현하지 않은 상태로 둡니다.</target>
        </trans-unit>
        <trans-unit id="83cc676adf229f15cb7f4fc7dd57393718438548" translate="yes" xml:space="preserve">
          <source>This is an abstract API that data provider implementations conform to. This file defines methods signatures and intentionally leaves all the methods unimplemented. For more information on the , please visit: &lt;a href=&quot;http://dojotoolkit.org/reference-guide/dojo/store.html&quot;&gt;http://dojotoolkit.org/reference-guide/dojo/store.html&lt;/a&gt; Every method and property is optional, and is only needed if the functionality it provides is required. Every method may return a promise for the specified return value if the execution of the operation is asynchronous (except for query() which already defines an async return value).</source>
          <target state="translated">이것은 데이터 제공자 구현이 준수하는 추상 API입니다. 이 파일은 메소드 서명을 정의하고 의도적으로 모든 메소드를 구현하지 않은 상태로 둡니다. 에 대한 자세한 내용을 보려면 다음 사이트를 방문하십시오 : &lt;a href=&quot;http://dojotoolkit.org/reference-guide/dojo/store.html&quot;&gt;http://dojotoolkit.org/reference-guide/dojo/store.html&lt;/a&gt; 모든 메소드 및 특성은 선택 사항이며 제공하는 기능이 필요한 경우에만 필요합니다. 오퍼레이션의 실행이 비동기 인 경우 모든 메소드는 지정된 리턴 값에 대한 약속을 리턴 할 수 있습니다 (이미 비동기 리턴 값을 정의하는 query () 제외).</target>
        </trans-unit>
        <trans-unit id="0a69998c99a7540ee9491496b1504ecf8c58c668" translate="yes" xml:space="preserve">
          <source>This is an abstract API that data provider implementations conform to. This file defines methods signatures and intentionally leaves all the methods unimplemented. For more information on the , please visit: &lt;a href=&quot;https://dojotoolkit.org/reference-guide/dojo/store.html&quot;&gt;http://dojotoolkit.org/reference-guide/dojo/store.html&lt;/a&gt; Every method and property is optional, and is only needed if the functionality it provides is required. Every method may return a promise for the specified return value if the execution of the operation is asynchronous (except for query() which already defines an async return value).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ebd54bce12533e24fdc58450d61432a1574edcb" translate="yes" xml:space="preserve">
          <source>This is an abstract API that data provider implementations conform to. This file defines methods signatures and intentionally leaves all the methods unimplemented. For more information on the dojo.data APIs, please visit: &lt;a href=&quot;http://www.dojotoolkit.org/node/98&quot;&gt;http://www.dojotoolkit.org/node/98&lt;/a&gt;</source>
          <target state="translated">이것은 데이터 제공자 구현이 준수하는 추상 API입니다. 이 파일은 메소드 서명을 정의하고 의도적으로 모든 메소드를 구현하지 않은 상태로 둡니다. dojo.data API에 대한 자세한 정보는 &lt;a href=&quot;http://www.dojotoolkit.org/node/98&quot;&gt;http://www.dojotoolkit.org/node/98을&lt;/a&gt; 방문하십시오.</target>
        </trans-unit>
        <trans-unit id="6cf3eb3f97f35ca124ced4722bed8ae8cedce151" translate="yes" xml:space="preserve">
          <source>This is an abstract API that data provider implementations conform to. This file defines methods signatures and intentionally leaves all the methods unimplemented. For more information on the dojo.data APIs, please visit: &lt;a href=&quot;https://www.dojotoolkit.org/node/98&quot;&gt;http://www.dojotoolkit.org/node/98&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3382e327f8903884bff8f1d60fb9c57284e9faa7" translate="yes" xml:space="preserve">
          <source>This is an adapter for using Dojo Data stores with an object store consumer. You can provide a Dojo data store and use this adapter to interact with it through the Dojo object store API</source>
          <target state="translated">오브젝트 저장소 소비자와 함께 Dojo 데이터 저장소를 사용하기위한 어댑터입니다. Dojo 데이터 저장소를 제공하고이 어댑터를 사용하여 Dojo 오브젝트 저장소 API를 통해 상호 작용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab4d33a29028c2e0176413aa5e1083548ef65fcc" translate="yes" xml:space="preserve">
          <source>This is an extension event for the mouseenter that IE provides, emulating the behavior on other browsers.</source>
          <target state="translated">이것은 IE가 제공하는 mouseenter의 확장 이벤트로 다른 브라우저에서 동작을 에뮬레이트합니다.</target>
        </trans-unit>
        <trans-unit id="6911675cf8d8b84484142849e8f55b39c84cb164" translate="yes" xml:space="preserve">
          <source>This is an extension event for the mouseleave that IE provides, emulating the behavior on other browsers.</source>
          <target state="translated">이것은 IE가 제공하는 마우스 리브의 확장 이벤트로서 다른 브라우저에서 동작을 에뮬레이트합니다.</target>
        </trans-unit>
        <trans-unit id="ef1961cf8f9305c5afbadc02e655ef60a10370ad" translate="yes" xml:space="preserve">
          <source>This is an extension event for the mousewheel that non-Mozilla browsers provide, emulating the behavior on Mozilla based browsers.</source>
          <target state="translated">이것은 Mozilla가 아닌 브라우저에서 제공하는 마우스 휠의 확장 이벤트로 Mozilla 기반 브라우저에서 동작을 에뮬레이트합니다.</target>
        </trans-unit>
        <trans-unit id="3ba12b395bbd89d03cfd6abd3261e1e27b08cc22" translate="yes" xml:space="preserve">
          <source>This is an object returned from query() calls that provides access to the results of a query. Queries may be executed asynchronously.</source>
          <target state="translated">쿼리 결과에 대한 액세스를 제공하는 query () 호출에서 반환 된 객체입니다. 쿼리는 비동기 적으로 실행될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e719493df7c91633a4cd1a77d09eab6d50ef8dcc" translate="yes" xml:space="preserve">
          <source>This is an object returned from transaction() calls that represents the current transaction.</source>
          <target state="translated">이것은 현재 트랜잭션을 나타내는 transaction () 호출에서 반환 된 객체입니다.</target>
        </trans-unit>
        <trans-unit id="63be0da883beb18902523b577bce7f6fad3821bc" translate="yes" xml:space="preserve">
          <source>This is called if the query failed, and is passed a single argument that is the error for the failure.</source>
          <target state="translated">쿼리가 실패한 경우 호출되며 실패에 대한 오류 인 단일 인수가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="f43a2620b880b9efff92f7d0e6e3f83b014c0ce7" translate="yes" xml:space="preserve">
          <source>This is called when the query is completed successfully, and is passed a single argument that is an array representing the query results.</source>
          <target state="translated">이것은 쿼리가 성공적으로 완료 될 때 호출되며 쿼리 결과를 나타내는 배열 인 단일 인수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="eaa7f8e98378da2ffe247560f83814d9293cd530" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling set(foo, &quot;Howdy&quot;) and set(bar, 3)</source>
          <target state="translated">이것은 set (foo, &quot;Howdy&quot;) 및 set (bar, 3) 호출과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a532424475deeca4a5dfbc02f7ead394b7d606bb" translate="yes" xml:space="preserve">
          <source>This is function to be called after the original method</source>
          <target state="translated">이것은 원래의 메소드 후에 호출되는 함수입니다</target>
        </trans-unit>
        <trans-unit id="e74d26731678fdc010544c0b61d052b5b3cd7ed5" translate="yes" xml:space="preserve">
          <source>This is function to be called around the original method</source>
          <target state="translated">이것은 원래 메소드 주위에서 호출되는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="f9f67357c5505465740ff8ca22af4cdcae0fa512" translate="yes" xml:space="preserve">
          <source>This is function to be called before the original method</source>
          <target state="translated">원래 메소드보다 먼저 호출되는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="8ed40b51c85987fa0a5bd04b3acd63bb228a9080" translate="yes" xml:space="preserve">
          <source>This is the authoritative store, all uncached requests or non-safe requests will be made against this store.</source>
          <target state="translated">이 저장소는 신뢰할 수있는 저장소이며 캐시되지 않은 모든 요청 또는 안전하지 않은 요청은이 저장소에 대해 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="2189ba147d4adb4c6af4fd55db349d7ee3b54d3a" translate="yes" xml:space="preserve">
          <source>This is the caching store that will be used to store responses for quick access. Typically this should be a local store.</source>
          <target state="translated">빠른 액세스를 위해 응답을 저장하는 데 사용되는 캐싱 저장소입니다. 일반적으로 이것은 로컬 상점이어야합니다.</target>
        </trans-unit>
        <trans-unit id="b8cfe2c8bbe2ae32565f93b3cbe3cb100ef1d37d" translate="yes" xml:space="preserve">
          <source>This is the function that should be called when the event fires.</source>
          <target state="translated">이벤트가 발생할 때 호출되어야하는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="631738e275f241bfb7e8d5100a97caca181522f7" translate="yes" xml:space="preserve">
          <source>This is the name of the event to listen for or an extension event type.</source>
          <target state="translated">수신 할 이벤트 이름 또는 확장 이벤트 유형입니다.</target>
        </trans-unit>
        <trans-unit id="9479932c8495ddb0bc3e9a27ef15fd8291d7814b" translate="yes" xml:space="preserve">
          <source>This is the name of the method to attach to.</source>
          <target state="translated">첨부 할 메소드의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="6dc666f8af819d28f9fa8b95c1b6be05d8a356f4" translate="yes" xml:space="preserve">
          <source>This is the target object</source>
          <target state="translated">이것은 대상 객체입니다</target>
        </trans-unit>
        <trans-unit id="c5703ddec990c8f19bbcca34abf53b01ab05e5af" translate="yes" xml:space="preserve">
          <source>This is the target object or DOM element that to receive events from</source>
          <target state="translated">이벤트를 수신 할 대상 객체 또는 DOM 요소입니다.</target>
        </trans-unit>
        <trans-unit id="e3216f93813ad6a44dc5c00ea9d2bc64abaffa0a" translate="yes" xml:space="preserve">
          <source>This method behaves exactly like the Array.concat method with the caveat that it returns a &lt;code&gt;NodeList&lt;/code&gt; and not a raw Array. For more details, see the &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt;Array.concat docs&lt;/a&gt;</source>
          <target state="translated">이 메소드 는 원시 Array가 아닌 &lt;code&gt;NodeList&lt;/code&gt; 를 리턴한다는 경고와 함께 Array.concat 메소드와 동일하게 작동합니다 . 자세한 내용은 &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt;Array.concat 문서를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8db3608a1c71ed7575688d557be6a13bab8994b8" translate="yes" xml:space="preserve">
          <source>This method behaves exactly like the Array.slice method with the caveat that it returns a &lt;a href=&quot;nodelist&quot;&gt;dojo/NodeList&lt;/a&gt; and not a raw Array. For more details, see Mozilla's &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/slice&quot;&gt;slice documentation&lt;/a&gt;</source>
          <target state="translated">이 메소드 는 원시 Array가 아닌 &lt;a href=&quot;nodelist&quot;&gt;dojo / NodeList를&lt;/a&gt; 리턴한다는 경고와 함께 Array.slice 메소드와 동일하게 작동합니다 . 자세한 내용은 Mozilla의 &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/slice&quot;&gt;슬라이스 설명서를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="dfabd71734b3edb751c4a290a65b40f32060e2c2" translate="yes" xml:space="preserve">
          <source>This method behaves exactly like the Array.splice method with the caveat that it returns a &lt;a href=&quot;nodelist&quot;&gt;dojo/NodeList&lt;/a&gt; and not a raw Array. For more details, see Mozilla's &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice&quot;&gt;splice documentation&lt;/a&gt; For backwards compatibility, calling .end() on the spliced NodeList does not return the original NodeList -- splice alters the NodeList in place.</source>
          <target state="translated">이 메소드 는 원시 배열이 아닌 &lt;a href=&quot;nodelist&quot;&gt;dojo / NodeList를&lt;/a&gt; 리턴한다는 경고와 함께 Array.splice 메소드와 동일하게 작동합니다 . 자세한 내용은 Mozilla의 &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice&quot;&gt;스플 라이스 설명서&lt;/a&gt; 를 참조하십시오. 이전 버전과의 호환성을 위해 스 플라이 싱 된 NodeList에서 .end ()를 호출해도 원래 NodeList가 반환되지 않습니다. splice는 NodeList를 제 위치로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="ddbc7a04e9e3a8ab8dadd128616b67c1474f14c4" translate="yes" xml:space="preserve">
          <source>This method cannot me called from automatically chained constructors including the case of a special (legacy) constructor chaining. It cannot be called from chained methods.</source>
          <target state="translated">이 메소드는 특수 (레거시) 생성자 체인의 경우를 포함하여 자동으로 연결된 생성자에서 호출 할 수 없습니다. 체인 메서드에서는 호출 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="5b23c31c02cfc24eb3396f63487bc819646c5a00" translate="yes" xml:space="preserve">
          <source>This method corresponds to the JavaScript 1.6 Array.indexOf method, with two differences:</source>
          <target state="translated">이 메소드는 JavaScript 1.6 Array.indexOf 메소드에 해당하며 두 가지 차이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a26bb9ed8200d63b45d16677bd199412365c0de9" translate="yes" xml:space="preserve">
          <source>This method corresponds to the JavaScript 1.6 Array.lastIndexOf method, with two differences:</source>
          <target state="translated">이 메소드는 JavaScript 1.6 Array.lastIndexOf 메소드에 해당하며 두 가지 차이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="617090e4ba3659cee9f1e35e70ec1c50bf675da0" translate="yes" xml:space="preserve">
          <source>This method handles the basic filtering needs for ItemFile* based stores.</source>
          <target state="translated">이 메소드는 ItemFile * 기반 상점에 대한 기본 필터링 요구를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="f16c6d94f8d9354a3b31790c82f0499f8883bb0e" translate="yes" xml:space="preserve">
          <source>This method is a convenience method for &quot;this.inherited()&quot;. It uses the same algorithm but instead of executing a super method, it returns it, or &quot;undefined&quot; if not found.</source>
          <target state="translated">이 메소드는 &quot;this.inherited ()&quot;의 편리한 메소드입니다. 동일한 알고리즘을 사용하지만 수퍼 메소드를 실행하는 대신이를 반환하거나 찾지 못한 경우 &quot;정의되지 않음&quot;을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4234829b86c53e991745b31da9f3cc1ef1ff1fcb" translate="yes" xml:space="preserve">
          <source>This method is similar to dojo.extend function, but it is specific to constructors produced by declare(). It is implemented using dojo.safeMixin, and it skips a constructor property, and properly decorates copied functions.</source>
          <target state="translated">이 메소드는 dojo.extend 함수와 유사하지만, 선언 ()으로 생성 된 생성자에만 해당됩니다. dojo.safeMixin을 사용하여 구현되며 생성자 특성을 건너 뛰고 복사 된 함수를 올바르게 장식합니다.</target>
        </trans-unit>
        <trans-unit id="ec5b18e8b8ac1c312cd96b864e07a1b3b48a087f" translate="yes" xml:space="preserve">
          <source>This method is simpler than the &lt;a href=&quot;nodelist#html&quot;&gt;dojo/NodeList.html()&lt;/a&gt; method provided by &lt;a href=&quot;nodelist-html&quot;&gt;dojo/NodeList-html&lt;/a&gt;. This method just does proper innerHTML insertion of HTML fragments, and it allows for the innerHTML to be read for the first node in the node list. Since &lt;a href=&quot;nodelist-html&quot;&gt;dojo/NodeList-html&lt;/a&gt; already took the &quot;html&quot; name, this method is called &quot;innerHTML&quot;. However, if &lt;a href=&quot;nodelist-html&quot;&gt;dojo/NodeList-html&lt;/a&gt; has not been loaded yet, this module will define an &quot;html&quot; method that can be used instead. Be careful if you are working in an environment where it is possible that &lt;a href=&quot;nodelist-html&quot;&gt;dojo/NodeList-html&lt;/a&gt; could have been loaded, since its definition of &quot;html&quot; will take precedence. The nodes represented by the value argument will be cloned if more than one node is in this NodeList. The nodes in this NodeList are returned in the &quot;set&quot; usage of this method, not the HTML that was inserted.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;nodelist-html&quot;&gt;dojo / NodeList-html이&lt;/a&gt; 제공 하는 &lt;a href=&quot;nodelist#html&quot;&gt;dojo / NodeList.html ()&lt;/a&gt; 메소드 보다 간단합니다 . 이 메소드는 HTML 조각의 올바른 innerHTML 삽입을 수행하며 노드 목록의 첫 번째 노드에서 innerHTML을 읽을 수 있도록합니다. 이후 &lt;a href=&quot;nodelist-html&quot;&gt;도장 / NodeList를-HTML은&lt;/a&gt; 이미 &quot;HTML&quot;이름을했다,이 방법은 &quot;innerHTML을&quot;라고합니다. 그러나 &lt;a href=&quot;nodelist-html&quot;&gt;dojo / NodeList-html&lt;/a&gt; 이 아직로드되지 않은 경우이 모듈은 대신 사용할 수있는 &quot;html&quot;메소드를 정의합니다. &lt;a href=&quot;nodelist-html&quot;&gt;dojo / NodeList-html&lt;/a&gt; 이 가능한 환경에서 작업하는 경우주의하십시오&quot;html&quot;에 대한 정의가 우선하므로로드 될 수 있습니다. 이 NodeList에 둘 이상의 노드가 있으면 value 인수로 표시되는 노드가 복제됩니다. 이 NodeList의 노드는 삽입 된 HTML이 아니라이 메소드의 &quot;set&quot;사용법으로 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="6ba9d6e371f936e2eaa5a3d108f3ea7871b4f04f" translate="yes" xml:space="preserve">
          <source>This method is used inside method of classes produced with declare() to call a super method (next in the chain). It is used for manually controlled chaining. Consider using the regular chaining, because it is faster. Use &quot;this.inherited()&quot; only in complex cases.</source>
          <target state="translated">이 메소드는 선언 ()으로 생성 된 클래스의 메소드 내부에서 사용되어 체인의 다음에 슈퍼 메소드를 호출합니다. 수동 제어 체인에 사용됩니다. 일반 체인은 속도가 빠르기 때문에 사용하는 것이 좋습니다. 복잡한 경우에만 &quot;this.inherited ()&quot;를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d51c985ff271998ab8ec57d742bd9706f225efd0" translate="yes" xml:space="preserve">
          <source>This method is used with instances of classes produced with declare() to determine of they support a certain interface or not. It models &quot;instanceof&quot; operator.</source>
          <target state="translated">이 메소드는 선언 ()으로 생성 된 클래스의 인스턴스와 함께 사용되어 특정 인터페이스를 지원하는지 여부를 판별합니다. &quot;instanceof&quot;연산자를 모델링합니다.</target>
        </trans-unit>
        <trans-unit id="f0a496dffee0fac1f4b01d45b51b53a6a8b995b1" translate="yes" xml:space="preserve">
          <source>This method must be called to activate the router. Until startup is called, no hash changes will trigger route callbacks.</source>
          <target state="translated">라우터를 활성화하려면이 메소드를 호출해야합니다. 시작이 호출 될 때까지 해시 변경이 경로 콜백을 트리거하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="39b153caffe4cbdb859f3eeeaecaed3080cf7542" translate="yes" xml:space="preserve">
          <source>This method takes a &quot;map&quot; of arrays which one can use to optionally load dojo modules. The map is indexed by the possible dojo.name&lt;em&gt; values, with two additional values: &quot;default&quot; and &quot;common&quot;. The items in the &quot;default&quot; array will be loaded if none of the other items have been chosen based on dojo.name&lt;/em&gt;, set by your host environment. The items in the &quot;common&quot; array will &lt;em&gt;always&lt;/em&gt; be loaded, regardless of which list is chosen.</source>
          <target state="translated">이 메소드는 선택적으로 dojo 모듈을로드하는 데 사용할 수있는 배열의 &quot;맵&quot;을 사용합니다. 맵은 가능한 dojo.name &lt;em&gt;값으로&lt;/em&gt; 색인화되며 &lt;em&gt;&quot;default&quot;및 &quot;common&quot;이라는 두 개의 추가 값이 있습니다. &lt;/em&gt;호스트 환경에서 설정 한 &lt;em&gt;dojo.name에 따라 다른 항목을 선택하지 않은 경우 &quot;default&quot;배열의 항목이로드됩니다&lt;/em&gt; . &quot;공통&quot;배열의 항목 은 선택한 목록에 관계없이 &lt;em&gt;항상&lt;/em&gt; 로드됩니다.</target>
        </trans-unit>
        <trans-unit id="7d6a369fe5a3a20d109c4760412051e52e16b9a6" translate="yes" xml:space="preserve">
          <source>This module causes the browser-only base modules to be loaded.</source>
          <target state="translated">이 모듈은 브라우저 전용 기본 모듈을로드합니다.</target>
        </trans-unit>
        <trans-unit id="0abee56c0df2f6baccdbcaf7eebc0a781df3c36d" translate="yes" xml:space="preserve">
          <source>This module contains the document and window unload detection API. This module is deprecated. Use on(window, &quot;unload&quot;, func) and on(window, &quot;beforeunload&quot;, func) instead.</source>
          <target state="translated">이 모듈에는 문서 및 창 언로드 감지 API가 포함되어 있습니다. 이 모듈은 더 이상 사용되지 않습니다. 대신 on (window, &quot;unload&quot;, func) 및 on (window, &quot;beforeunload&quot;, func)를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="15a6f96e3846e1c27f2d11c707583b27b72f27fa" translate="yes" xml:space="preserve">
          <source>This module defines Javascript language extensions.</source>
          <target state="translated">이 모듈은 Javascript 언어 확장을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="911b5feacdd68a55699247a00c505cddcd99e2d9" translate="yes" xml:space="preserve">
          <source>This module defines dojo DOM event API. Usually you should use &lt;a href=&quot;../on&quot;&gt;dojo/on&lt;/a&gt;, and evt.stopPropagation() + evt.preventDefault(), rather than this module.</source>
          <target state="translated">이 모듈은 dojo DOM 이벤트 API를 정의합니다. 일반적 으로이 모듈 대신 &lt;a href=&quot;../on&quot;&gt;dojo / on&lt;/a&gt; 및 evt.stopPropagation () + evt.preventDefault ()를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="ad9cc0c44a5faac6abb235742a09cfbdb7a299c0" translate="yes" xml:space="preserve">
          <source>This module defines form-processing functions.</source>
          <target state="translated">이 모듈은 양식 처리 기능을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="30b257a4c754ae44e59e4d4e0472cdb5262fd45e" translate="yes" xml:space="preserve">
          <source>This module defines query string processing functions.</source>
          <target state="translated">이 모듈은 쿼리 문자열 처리 기능을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="a1c7af3ba56affb4ff15270a5d5594d61a3eafbc" translate="yes" xml:space="preserve">
          <source>This module defines the base &lt;a href=&quot;fx&quot;&gt;dojo/_base/fx&lt;/a&gt; implementation.</source>
          <target state="translated">이 모듈은 기본 &lt;a href=&quot;fx&quot;&gt;dojo / _base / fx&lt;/a&gt; 구현을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="ab4826dea5d7e53ad2c42212b4c961e602fdb237" translate="yes" xml:space="preserve">
          <source>This module defines the core dojo DOM API.</source>
          <target state="translated">이 모듈은 핵심 dojo DOM API를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="d0f1ec473349177d7b72973ace3f542086656148" translate="yes" xml:space="preserve">
          <source>This module defines the core dojo DOM class API.</source>
          <target state="translated">이 모듈은 핵심 dojo DOM 클래스 API를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="7e9360aac5bd82d4fc6ee8f212fb2097cc1418e3" translate="yes" xml:space="preserve">
          <source>This module defines the core dojo DOM geometry API.</source>
          <target state="translated">이 모듈은 핵심 dojo DOM 지오메트리 API를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="caefdc5cbe959353664a4a847e220d5bd200f06b" translate="yes" xml:space="preserve">
          <source>This module defines the core dojo DOM style API.</source>
          <target state="translated">이 모듈은 핵심 dojo DOM 스타일 API를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="bbbf04f9f2826aac8afd440b6b1e5e1a8fa2f522" translate="yes" xml:space="preserve">
          <source>This module defines the dojo JSON API.</source>
          <target state="translated">이 모듈은 dojo JSON API를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="792d5ebb84b0d05edb9a87dddb3ad666e2f241d1" translate="yes" xml:space="preserve">
          <source>This module defines the dojo.connect API. This modules also provides keyboard event handling helpers. This module exports an extension event for emulating Firefox's keypress handling. However, this extension event exists primarily for backwards compatibility and is not recommended. WebKit and IE uses an alternate keypress handling (only firing for printable characters, to distinguish from keydown events), and most consider the WebKit/IE behavior more desirable.</source>
          <target state="translated">이 모듈은 dojo.connect API를 정의합니다. 이 모듈은 키보드 이벤트 처리 도우미도 제공합니다. 이 모듈은 Firefox의 키 누르기 처리를 에뮬레이션하기위한 확장 이벤트를 내 보냅니다. 그러나이 확장 이벤트는 기본적으로 이전 버전과의 호환성을 위해 존재하므로 권장되지 않습니다. WebKit과 IE는 대체 키 누르기 처리 (인쇄 가능한 문자에 대해서만 실행, 키 다운 이벤트와 구별)를 사용하며 대부분 WebKit / IE 동작이 더 바람직하다고 생각합니다.</target>
        </trans-unit>
        <trans-unit id="9115c518f631a1ec5d78dffc372d2d8b165366c1" translate="yes" xml:space="preserve">
          <source>This module defines the user configuration during bootstrap.</source>
          <target state="translated">이 모듈은 부트 스트랩 중 사용자 구성을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="62d6c5b425e31a9242eb78561c203e870ccbdb18" translate="yes" xml:space="preserve">
          <source>This module extends &lt;a href=&quot;../nodelist&quot;&gt;dojo/NodeList&lt;/a&gt; with the legacy connect(), coords(), blur(), focus(), change(), click(), error(), keydown(), keypress(), keyup(), load(), mousedown(), mouseenter(), mouseleave(), mousemove(), mouseout(), mouseover(), mouseup(), and submit() methods.</source>
          <target state="translated">이 모듈은 레거시 connect (), coords (), blur (), focus (), change (), click (), error (), keydown (), keypress (), keyup (), load로 &lt;a href=&quot;../nodelist&quot;&gt;dojo / NodeList&lt;/a&gt; 를 확장합니다. (), mousedown (), mouseenter (), mouseleave (), mousemove (), mouseout (), mouseover (), mouseup () 및 submit () 메소드.</target>
        </trans-unit>
        <trans-unit id="3aaff1a93154c6dfa8e58266fa068ff3a772f3c9" translate="yes" xml:space="preserve">
          <source>This module handles loading the appropriate selector engine for the given browser</source>
          <target state="translated">이 모듈은 주어진 브라우저에 적합한 선택기 엔진 로딩을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="57a5df33da42351e91017f00f2a3eeb73fce33a4" translate="yes" xml:space="preserve">
          <source>This module implements the &lt;a href=&quot;../i18n&quot;&gt;dojo/i18n&lt;/a&gt;! plugin and the v1.6- i18n API</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;../i18n&quot;&gt;dojo / i18n을&lt;/a&gt; 구현합니다 ! 플러그인 및 v1.6- i18n API</target>
        </trans-unit>
        <trans-unit id="94239d8e5abda0475a8e5a17e5d6e254543abd7c" translate="yes" xml:space="preserve">
          <source>This module implements the &lt;a href=&quot;i18n&quot;&gt;dojo/i18n&lt;/a&gt;! plugin and the v1.6- i18n API</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;i18n&quot;&gt;dojo / i18n을&lt;/a&gt; 구현합니다 ! 플러그인 및 v1.6- i18n API</target>
        </trans-unit>
        <trans-unit id="3b357ee7e7908a5df0d3672dbbd021f627fa852a" translate="yes" xml:space="preserve">
          <source>This module implements the &lt;a href=&quot;text&quot;&gt;dojo/text&lt;/a&gt;! plugin and the dojo.cache API.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;text&quot;&gt;dojo / text를&lt;/a&gt; 구현합니다 ! 플러그인 및 dojo.cache API.</target>
        </trans-unit>
        <trans-unit id="3f9579bded82fd48827bf07cf6f0ae88963a4854" translate="yes" xml:space="preserve">
          <source>This module is a stub for the core dojo DOM API.</source>
          <target state="translated">이 모듈은 핵심 dojo DOM API에 대한 스텁입니다.</target>
        </trans-unit>
        <trans-unit id="34fa2809d98138f417d5d94b22e5930fe33167d0" translate="yes" xml:space="preserve">
          <source>This module is the foundational module of the dojo boot sequence; it defines the dojo object.</source>
          <target state="translated">이 모듈은 dojo 부팅 순서의 기본 모듈입니다. dojo 오브젝트를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="170c666800398c8dd725089892da8b77d46335ed" translate="yes" xml:space="preserve">
          <source>This module provide mouse event handling utility functions and exports mouseenter and mouseleave event emulation.</source>
          <target state="translated">이 모듈은 마우스 이벤트 처리 유틸리티 기능을 제공하고 mouseenter 및 mouseleave 이벤트 에뮬레이션을 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="d1ae72cab2dcc663bfd0a88ca6d0bb8e6146d20c" translate="yes" xml:space="preserve">
          <source>This module provides unified touch event handlers by exporting press, move, release and cancel which can also run well on desktop. Based on &lt;a href=&quot;http://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html&quot;&gt;http://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html&lt;/a&gt; Also, if the dojoClick property is set to truthy on a DOM node, &lt;a href=&quot;../touch&quot;&gt;dojo/touch&lt;/a&gt; generates click events immediately for this node and its descendants (except for descendants that have a dojoClick property set to falsy), to avoid the delay before native browser click events, and regardless of whether evt.preventDefault() was called in a touch.press event listener.</source>
          <target state="translated">이 모듈은 데스크톱에서 잘 실행할 수있는 프레스, 이동, 해제 및 취소를 내보내 통합 터치 이벤트 핸들러를 제공합니다. &lt;a href=&quot;http://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html&quot;&gt;http://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html에&lt;/a&gt; 기초 함 또한 dojoClick 특성이 DOM 노드에서 true로 설정된 경우 &lt;a href=&quot;../touch&quot;&gt;dojo / touch&lt;/a&gt; 는이 노드에 대해 즉시 클릭 이벤트를 생성합니다. 기본 브라우저 클릭 이벤트 이전의 지연을 피하고 touch.press 이벤트 리스너에서 evt.preventDefault ()가 호출되었는지 여부에 관계없이 dojoClick 속성이 false로 설정된 자손을 제외한 자손입니다.</target>
        </trans-unit>
        <trans-unit id="49efc78150e10985ae55c7300b869937d154a312" translate="yes" xml:space="preserve">
          <source>This module provides unified touch event handlers by exporting press, move, release and cancel which can also run well on desktop. Based on &lt;a href=&quot;http://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html&quot;&gt;http://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html&lt;/a&gt; Also, if the dojoClick property is set to truthy on a DOM node, &lt;a href=&quot;touch&quot;&gt;dojo/touch&lt;/a&gt; generates click events immediately for this node and its descendants (except for descendants that have a dojoClick property set to falsy), to avoid the delay before native browser click events, and regardless of whether evt.preventDefault() was called in a touch.press event listener.</source>
          <target state="translated">이 모듈은 데스크톱에서 잘 실행할 수있는 프레스, 이동, 해제 및 취소를 내보내 통합 터치 이벤트 핸들러를 제공합니다. &lt;a href=&quot;http://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html&quot;&gt;http://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html에&lt;/a&gt; 기초 함 또한 dojoClick 특성이 DOM 노드에서 true로 설정된 경우 &lt;a href=&quot;touch&quot;&gt;dojo / touch&lt;/a&gt; 는이 노드에 대해 즉시 클릭 이벤트를 생성합니다. 기본 브라우저 클릭 이벤트 이전의 지연을 피하고 touch.press 이벤트 리스너에서 evt.preventDefault ()가 호출되었는지 여부에 관계없이 dojoClick 속성이 false로 설정된 자손을 제외한 자손입니다.</target>
        </trans-unit>
        <trans-unit id="df755646b0247044d75fccb2496dfff7ddf555ad" translate="yes" xml:space="preserve">
          <source>This module provides unified touch event handlers by exporting press, move, release and cancel which can also run well on desktop. Based on &lt;a href=&quot;https://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html&quot;&gt;http://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html&lt;/a&gt; Also, if the dojoClick property is set to truthy on a DOM node, &lt;a href=&quot;../touch&quot;&gt;dojo/touch&lt;/a&gt; generates click events immediately for this node and its descendants (except for descendants that have a dojoClick property set to falsy), to avoid the delay before native browser click events, and regardless of whether evt.preventDefault() was called in a touch.press event listener.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de527496ff377de21ae28d44e1bbe4e55e2c414b" translate="yes" xml:space="preserve">
          <source>This module provides unified touch event handlers by exporting press, move, release and cancel which can also run well on desktop. Based on &lt;a href=&quot;https://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html&quot;&gt;http://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html&lt;/a&gt; Also, if the dojoClick property is set to truthy on a DOM node, &lt;a href=&quot;touch&quot;&gt;dojo/touch&lt;/a&gt; generates click events immediately for this node and its descendants (except for descendants that have a dojoClick property set to falsy), to avoid the delay before native browser click events, and regardless of whether evt.preventDefault() was called in a touch.press event listener.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62a716afb5455eb6fb7174d3cf4819429055308e" translate="yes" xml:space="preserve">
          <source>This module sets has() flags based on the current browser. It returns the has() function.</source>
          <target state="translated">이 모듈은 현재 브라우저를 기반으로 has () 플래그를 설정합니다. has () 함수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="82182e132634e4fc9d4b6bc7e648bdc6620102f9" translate="yes" xml:space="preserve">
          <source>This modules defines &lt;a href=&quot;locale&quot;&gt;dojo/date/locale&lt;/a&gt;, localization methods for Date.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;locale&quot;&gt;날짜에&lt;/a&gt; 대한 현지화 방법 인 dojo / date / locale을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="8801ea9bdf1990821c45766851b0540bb5e5b243" translate="yes" xml:space="preserve">
          <source>This modules provides DOM querying functionality. The module export is a function that can be used to query for DOM nodes by CSS selector and returns a NodeList representing the matching nodes.</source>
          <target state="translated">이 모듈은 DOM 쿼리 기능을 제공합니다. 모듈 내보내기는 CSS 선택기로 DOM 노드를 쿼리하는 데 사용할 수있는 함수이며 일치하는 노드를 나타내는 NodeList를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ceca74fd89f580281bfd3e325b51696e1dd00235" translate="yes" xml:space="preserve">
          <source>This node will be replaced/attached to by the widget. It also specifies the arguments to pass to ctor.</source>
          <target state="translated">이 노드는 위젯으로 대체 / 연결됩니다. 또한 ctor에 전달할 인수를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="842f7cba14541c967f261cce6d7597ba0ce92a20" translate="yes" xml:space="preserve">
          <source>This option is ignored. All requests using this transport are GET requests.</source>
          <target state="translated">이 옵션은 무시됩니다. 이 전송을 사용하는 모든 요청은 GET 요청입니다.</target>
        </trans-unit>
        <trans-unit id="a17e305731a1c4eadace4d2cf7cc57801973678b" translate="yes" xml:space="preserve">
          <source>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</source>
          <target state="translated">이 매개 변수는 계산 된 스타일 오브젝트를 승인합니다. 이 매개 변수를 생략하면 함수는 dojo / dom-style.getComputedStyle을 호출하여 하나를 얻습니다. dojo / dom-style.getComputedStyle을 한 번 호출 한 다음이 계산 된 스타일 매개 변수에 대한 참조를 전달하는 것이 더 좋은 방법입니다. 가능하면 리턴 된 dojo / dom-style.getComputedStyle () 오브젝트를 재사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3a7738383dbca1225405eeef58c5e1a6ed52d11d" translate="yes" xml:space="preserve">
          <source>This plugin require's &quot;some/path/nls/someBundle&quot;, which is the root bundle.</source>
          <target state="translated">이 플러그인에는 루트 번들 인 &quot;some / path / nls / someBundle&quot;이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="aeb972fed4e976ba1b55e6a32f5f463683fe60eb" translate="yes" xml:space="preserve">
          <source>This property should be included in if the query options included the &quot;count&quot; property limiting the result set. This property indicates the total number of objects matching the query (as if &quot;start&quot; and &quot;count&quot; weren't present). This may be a promise if the query is asynchronous.</source>
          <target state="translated">쿼리 옵션에 결과 집합을 제한하는 &quot;count&quot;속성이 포함 된 경우이 속성이 포함되어야합니다. 이 속성은 쿼리와 일치하는 총 개체 수를 나타냅니다 ( &quot;start&quot;및 &quot;count&quot;가없는 것처럼). 쿼리가 비동기적일 경우 이는 약속 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d7f6568a9fe3dd58e86e17dad95b131529d355c" translate="yes" xml:space="preserve">
          <source>This provides any configuration information that will be mixed into the store</source>
          <target state="translated">상점에 혼합 될 구성 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="42e1f2adf1f8fb94491a9a27b07813d73cdc64b5" translate="yes" xml:space="preserve">
          <source>This provides any configuration information that will be mixed into the store, including a reference to the Dojo data store under the property &quot;store&quot;.</source>
          <target state="translated">이는 &quot;store&quot;특성 아래 Dojo 데이터 저장소에 대한 참조를 포함하여 저장소로 혼합 될 구성 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0877b93dcd50363a6b8803e38037e7942a2245a3" translate="yes" xml:space="preserve">
          <source>This provides any configuration information that will be mixed into the store. This should generally include the data property to provide the starting set of data.</source>
          <target state="translated">이는 상점에 혼합 될 구성 정보를 제공합니다. 여기에는 일반적으로 시작 데이터 세트를 제공하는 data 속성이 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="bc80e9a2e9723efd5f04bc1a2801de533fcc23c9" translate="yes" xml:space="preserve">
          <source>This registers a callback for notification of when data is modified in the query results. This is an optional method, and is usually provided by dojo/store/Observable.</source>
          <target state="translated">쿼리 결과에서 데이터가 수정되는시기를 알리기 위해 콜백을 등록합니다. 이것은 선택적 방법이며 일반적으로 dojo / store / Observable에서 제공합니다.</target>
        </trans-unit>
        <trans-unit id="825e4a2758d40bd0b1195e0633be930b8e23136c" translate="yes" xml:space="preserve">
          <source>This registers a callback for when the query is complete, if the query is asynchronous. This is an optional method, and may not be present for synchronous queries.</source>
          <target state="translated">쿼리가 비동기 인 경우 쿼리가 완료 될 때의 콜백을 등록합니다. 이것은 선택적 방법이며 동기식 쿼리에는 없을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c53f671fb894abd8e238f689f4acaa97937126d8" translate="yes" xml:space="preserve">
          <source>This represents the new current transaction.</source>
          <target state="translated">이것은 새로운 현재 거래를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="683d838c067c0369f00ae46beafe91ab57a73b9e" translate="yes" xml:space="preserve">
          <source>This string:</source>
          <target state="translated">이 문자열 :</target>
        </trans-unit>
        <trans-unit id="5876ae802b1b89ce5abaf4c1a7d78fed5d958f1c" translate="yes" xml:space="preserve">
          <source>This supports event delegation by using selectors as the first argument with the event names as</source>
          <target state="translated">이벤트 이름이 다음과 같은 첫 번째 인수로 선택자를 사용하여 이벤트 위임을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="530cfa222a239fe94539a68c93d231165d78786b" translate="yes" xml:space="preserve">
          <source>This type of syntax works with both xdomain and normal loaders, so it is good practice to always use this idiom for on-the-fly code loading and in HTML script blocks. If at some point you change loaders and where the code is loaded from, it will all still work.</source>
          <target state="translated">이 유형의 구문은 xdomain 및 일반 로더 모두에서 작동하므로 항상이 관용구를 즉시 코드로드 및 HTML 스크립트 블록에 사용하는 것이 좋습니다. 어느 시점에서 로더를 변경하고 코드가로드되는 위치를 변경해도 여전히 작동합니다.</target>
        </trans-unit>
        <trans-unit id="34fcd78d3f94d5cdd36f846f435e3338c290392d" translate="yes" xml:space="preserve">
          <source>This value is inserted into the cache and published to the loader at the key/module-id some/path/nls/someBundle/ab-cd-ef.</source>
          <target state="translated">이 값은 캐시에 삽입되고 키 / 모듈 ID some / path / nls / someBundle / ab-cd-ef에서 로더에 게시됩니다.</target>
        </trans-unit>
        <trans-unit id="6cb021fd679f8ef20545249603e2bd2f1942eb8b" translate="yes" xml:space="preserve">
          <source>This version of trim() was selected for inclusion into the base due to its compact size and relatively good performance (see &lt;a href=&quot;http://blog.stevenlevithan.com/archives/faster-trim-javascript&quot;&gt;Steven Levithan's blog&lt;/a&gt; Uses String.prototype.trim instead, if available. The fastest but longest version of this function is located at lang.string.trim()</source>
          <target state="translated">이 버전의 trim ()은 컴팩트 한 크기와 비교적 우수한 성능으로 인해베이스에 포함되도록 선택되었습니다 ( 사용 가능한 경우 &lt;a href=&quot;http://blog.stevenlevithan.com/archives/faster-trim-javascript&quot;&gt;Steven Levithan의 블로그&lt;/a&gt; 대신 String.prototype.trim 사용).이 함수의 가장 빠르지 만 가장 긴 버전은 lang에 있습니다. .string.trim ()</target>
        </trans-unit>
        <trans-unit id="04cd5752fe77a26493c86e6111e37a3e150ba0de" translate="yes" xml:space="preserve">
          <source>This version of trim() was taken from &lt;a href=&quot;http://blog.stevenlevithan.com/archives/faster-trim-javascript&quot;&gt;Steven Levithan's blog&lt;/a&gt;. The short yet performant version of this function is &lt;a href=&quot;_base/lang#trim&quot;&gt;dojo/_base/lang.trim()&lt;/a&gt;, which is part of Dojo base. Uses String.prototype.trim instead, if available.</source>
          <target state="translated">이 버전의 trim ()은 &lt;a href=&quot;http://blog.stevenlevithan.com/archives/faster-trim-javascript&quot;&gt;Steven Levithan의 블로그&lt;/a&gt; 에서 가져 왔습니다 . 이 함수의 짧은 성능 버전은 &lt;a href=&quot;_base/lang#trim&quot;&gt;dojo base의 일부인 dojo / _base / lang.trim ()&lt;/a&gt; 입니다. 가능한 경우 String.prototype.trim을 대신 사용합니다.</target>
        </trans-unit>
        <trans-unit id="8dac71a60023777af01bb8ccd8953d7ce7d0c55d" translate="yes" xml:space="preserve">
          <source>This version of trim() was taken from &lt;a href=&quot;http://blog.stevenlevithan.com/archives/faster-trim-javascript&quot;&gt;Steven Levithan's blog&lt;/a&gt;. The short yet performant version of this function is &lt;a href=&quot;lang#trim&quot;&gt;dojo/_base/lang.trim()&lt;/a&gt;, which is part of Dojo base. Uses String.prototype.trim instead, if available.</source>
          <target state="translated">이 버전의 trim ()은 &lt;a href=&quot;http://blog.stevenlevithan.com/archives/faster-trim-javascript&quot;&gt;Steven Levithan의 블로그&lt;/a&gt; 에서 가져 왔습니다 . 이 함수의 짧은 성능 버전은 &lt;a href=&quot;lang#trim&quot;&gt;dojo base의 일부인 dojo / _base / lang.trim ()&lt;/a&gt; 입니다. 가능한 경우 String.prototype.trim을 대신 사용합니다.</target>
        </trans-unit>
        <trans-unit id="842f0ec7ad13918988d3303af4c07612bad4e765" translate="yes" xml:space="preserve">
          <source>This will listen for click events within &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; elements that are inside the &lt;code&gt;#my-list&lt;/code&gt; element.</source>
          <target state="translated">&lt;code&gt;#my-list&lt;/code&gt; 요소 안에있는 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 요소 내의 클릭 이벤트를 수신합니다 .</target>
        </trans-unit>
        <trans-unit id="36106e5561ef03fd49bd47ca37bfe7130fc999ac" translate="yes" xml:space="preserve">
          <source>Three things are passed to the testFunction. &lt;code&gt;global&lt;/code&gt;, &lt;code&gt;document&lt;/code&gt;, and a generic element from which to work your test should the need arise.</source>
          <target state="translated">세 가지가 testFunction에 전달됩니다. &lt;code&gt;global&lt;/code&gt; , &lt;code&gt;document&lt;/code&gt; 및 필요에 따라 테스트를 수행 할 일반적인 요소입니다.</target>
        </trans-unit>
        <trans-unit id="674509cf464dcebc47e30b814ae8304d240943de" translate="yes" xml:space="preserve">
          <source>ThreeD</source>
          <target state="translated">ThreeD</target>
        </trans-unit>
        <trans-unit id="bade9c0410effeb4212f53d0fd42e627e39f2edd" translate="yes" xml:space="preserve">
          <source>Throws for invalid JavaScript expressions. It does not use a strict JSON parser. It always delegates to eval(). The content passed to this method must therefore come from a trusted source. It is recommend that you use &lt;a href=&quot;../json&quot;&gt;dojo/json&lt;/a&gt;'s parse function for an implementation uses the (faster) native JSON parse when available.</source>
          <target state="translated">유효하지 않은 JavaScript 표현식을 던집니다. 엄격한 JSON 파서를 사용하지 않습니다. 항상 eval ()에 위임합니다. 따라서이 방법으로 전달 된 내용은 신뢰할 수있는 출처에서 가져와야합니다. 구현시 &lt;a href=&quot;../json&quot;&gt;dojo / json&lt;/a&gt; 의 구문 분석 기능을 사용하는 것이 좋습니다 (사용 가능한 경우) 더 빠른 기본 JSON 구문 분석을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="4e15ac9eefc78c2ce7c2cedf09623576c63d601a" translate="yes" xml:space="preserve">
          <source>Throws for invalid JavaScript expressions. It does not use a strict JSON parser. It always delegates to eval(). The content passed to this method must therefore come from a trusted source. It is recommend that you use &lt;a href=&quot;json&quot;&gt;dojo/json&lt;/a&gt;'s parse function for an implementation uses the (faster) native JSON parse when available.</source>
          <target state="translated">유효하지 않은 JavaScript 표현식을 던집니다. 엄격한 JSON 파서를 사용하지 않습니다. 항상 eval ()에 위임합니다. 따라서이 방법으로 전달 된 내용은 신뢰할 수있는 출처에서 가져와야합니다. 구현시 &lt;a href=&quot;json&quot;&gt;dojo / json&lt;/a&gt; 의 구문 분석 기능을 사용하는 것이 좋습니다 (사용 가능한 경우) 더 빠른 기본 JSON 구문 분석을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="20a2c7f4fcdc20f26024f3057a747da71715a57e" translate="yes" xml:space="preserve">
          <source>Time in milliseconds to run the hide Animation</source>
          <target state="translated">숨기기 애니메이션을 실행하는 시간 (밀리 초)</target>
        </trans-unit>
        <trans-unit id="919583989ca81c07d2d7f7a0ed9e0cfb363f3ccd" translate="yes" xml:space="preserve">
          <source>Time in milliseconds to run the show Animation</source>
          <target state="translated">쇼 애니메이션을 실행하는 시간 (밀리 초)</target>
        </trans-unit>
        <trans-unit id="cfdfc36fe8bd857be00c23dc6936b0faaf83506f" translate="yes" xml:space="preserve">
          <source>Time to spend caching executions before actually executing.</source>
          <target state="translated">실제로 실행하기 전에 실행을 캐싱하는 데 소요되는 시간입니다.</target>
        </trans-unit>
        <trans-unit id="4705fedd49f5490f6ee88b911411a2dde680af19" translate="yes" xml:space="preserve">
          <source>Time, in milliseconds, to spend pressing all of the keys. The default is (string length)*50 ms.</source>
          <target state="translated">모든 키를 누르는 데 소요되는 시간 (밀리 초)입니다. 기본값은 (문자열 길이) * 50ms입니다.</target>
        </trans-unit>
        <trans-unit id="72f55c6a0433456a3975afefdaf526cf89350262" translate="yes" xml:space="preserve">
          <source>To ask dojo.cache to fetch content and store it in the cache (the dojo[&quot;cache&quot;] style of call is used to avoid an issue with the build system erroneously trying to intern this example. To get the build system to intern your dojo.cache calls, use the &quot;dojo.cache&quot; style of call):</source>
          <target state="translated">dojo.cache에게 컨텐츠를 가져 와서 캐시에 저장하도록 요청하려면 (dojo [ &quot;cache&quot;] 스타일의 호출은 빌드 시스템이이 예제를 잘못 인턴하려고하는 문제를 피하기 위해 사용됩니다. dojo.cache 호출, &quot;dojo.cache&quot;스타일의 호출 사용) :</target>
        </trans-unit>
        <trans-unit id="8e46b9253f07079d722f20eed1f8bd04da5ac9aa" translate="yes" xml:space="preserve">
          <source>To ask dojo.cache to fetch content and store it in the cache, and sanitize the input (the dojo[&quot;cache&quot;] style of call is used to avoid an issue with the build system erroneously trying to intern this example. To get the build system to intern your dojo.cache calls, use the &quot;dojo.cache&quot; style of call):</source>
          <target state="translated">dojo.cache에게 컨텐츠를 가져 와서 캐시에 저장하도록 요청하고 입력을 삭제 (dojo [ &quot;cache&quot;] 스타일의 호출은 빌드 시스템에서이 예제를 잘못 인턴하려고 시도하는 문제를 피하기 위해 사용됩니다. dojo.cache 호출을 인턴하도록 시스템을 빌드하십시오 ( &quot;dojo.cache&quot;스타일의 호출 사용).</target>
        </trans-unit>
        <trans-unit id="4a5075fc3d95a91ee8008792c041388e418dd4ef" translate="yes" xml:space="preserve">
          <source>To listen for &quot;click&quot; events on a button node, we can do:</source>
          <target state="translated">버튼 노드에서 &quot;클릭&quot;이벤트를 수신하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="bc10a8a27ddb895c0f98e060c687b304348cb5ac" translate="yes" xml:space="preserve">
          <source>To load a bundle means to insert the bundle into the plugin's cache and publish the bundle value to the loader. Given</source>
          <target state="translated">번들을로드한다는 것은 번들을 플러그인의 캐시에 삽입하고 번들 값을 로더에 공개하는 것을 의미합니다. 주어진</target>
        </trans-unit>
        <trans-unit id="505e2a36c0f5be83dc67d1cce128854b3109f06a" translate="yes" xml:space="preserve">
          <source>To support getting back button notifications, the object argument should implement a function called either &quot;back&quot;, &quot;backButton&quot;, or &quot;handle&quot;. The string &quot;back&quot; will be passed as the first and only argument to this callback.</source>
          <target state="translated">버튼 알림 받기를 지원하려면 객체 인수가 &quot;back&quot;, &quot;backButton&quot;또는 &quot;handle&quot;이라는 함수를 구현해야합니다. 문자열 &quot;back&quot;은이 콜백에 대한 유일한 유일한 인수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="f09bce1ec690af34d5bf89b2ac07287d1078a330" translate="yes" xml:space="preserve">
          <source>To support getting forward button notifications, the object argument should implement a function called either &quot;forward&quot;, &quot;forwardButton&quot;, or &quot;handle&quot;. The string &quot;forward&quot; will be passed as the first and only argument to this callback.</source>
          <target state="translated">앞으로 버튼 알림 받기를 지원하기 위해 객체 인수는 &quot;forward&quot;, &quot;forwardButton&quot;또는 &quot;handle&quot;이라는 함수를 구현해야합니다. 문자열 &quot;forward&quot;는이 콜백에 대한 유일한 유일한 인수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="e465bd10f8d53c5ba6251c31cade8ae6987149ff" translate="yes" xml:space="preserve">
          <source>To use a \ as a character in the string, it must be escaped. So in the pattern it should be represented by \ to be treated as an ordinary \ character instead of an escape.</source>
          <target state="translated">문자열에서 \를 문자로 사용하려면 이스케이프해야합니다. 따라서 패턴에서 이스케이프 대신 일반 \ 문자로 취급되도록 \로 표시해야합니다.</target>
        </trans-unit>
        <trans-unit id="1e193382b868f1b520d59f0ac39e323fdb9092c2" translate="yes" xml:space="preserve">
          <source>To use dojo.require in conjunction with dojo.ready:</source>
          <target state="translated">dojo.ready와 함께 dojo.require를 사용하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="dda1e4d29d1e0133e6653c0cf81f1d32533a3583" translate="yes" xml:space="preserve">
          <source>To use these events, you register a mouseenter like this:</source>
          <target state="translated">이러한 이벤트를 사용하려면 다음과 같이 마우스 입력기를 등록하십시오.</target>
        </trans-unit>
        <trans-unit id="6a41c42e782b16716dc4f3471fb900421c530608" translate="yes" xml:space="preserve">
          <source>Toggle the node to hidden</source>
          <target state="translated">노드를 숨김으로 전환</target>
        </trans-unit>
        <trans-unit id="ce57a2b364dc05e4781ce1cf763c4072f5bb3ccf" translate="yes" xml:space="preserve">
          <source>Toggle the node to showing</source>
          <target state="translated">노드를 표시로 전환</target>
        </trans-unit>
        <trans-unit id="bbcd7e55ef51022f3db81da3ae3e27107259f9e3" translate="yes" xml:space="preserve">
          <source>Trace promise fulfillment.</source>
          <target state="translated">약속 이행을 ​​추적하십시오.</target>
        </trans-unit>
        <trans-unit id="7511f92581798cba0106790667491a7e51d92bce" translate="yes" xml:space="preserve">
          <source>Trace promise fulfillment. Calling &lt;code&gt;.trace()&lt;/code&gt; or &lt;code&gt;.traceError()&lt;/code&gt; on a promise enables tracing. Will emit &lt;code&gt;resolved&lt;/code&gt;, &lt;code&gt;rejected&lt;/code&gt; or &lt;code&gt;progress&lt;/code&gt; events.</source>
          <target state="translated">약속 이행을 ​​추적하십시오. &lt;code&gt;.traceError()&lt;/code&gt; &lt;code&gt;.trace()&lt;/code&gt; 또는 .traceError () 를 호출 하면 추적이 활성화됩니다. 내 보냅니다 &lt;code&gt;resolved&lt;/code&gt; , &lt;code&gt;rejected&lt;/code&gt; 또는 &lt;code&gt;progress&lt;/code&gt; 이벤트.</target>
        </trans-unit>
        <trans-unit id="4a79db654e35711632da521f0f3a1371ac1693cc" translate="yes" xml:space="preserve">
          <source>Trace rejection of the promise.</source>
          <target state="translated">약속을 거부하십시오.</target>
        </trans-unit>
        <trans-unit id="6424d2a370ead0d5aec17bfa5a64ef9d57469539" translate="yes" xml:space="preserve">
          <source>Trace the promise.</source>
          <target state="translated">약속을 추적하십시오.</target>
        </trans-unit>
        <trans-unit id="29f634498af4882d1b0dcc35cd89b302d6342d59" translate="yes" xml:space="preserve">
          <source>Tracing allows you to transparently log progress, resolution and rejection of promises, without affecting the promise itself. Any arguments passed to &lt;code&gt;trace()&lt;/code&gt; are emitted in trace events. See &lt;a href=&quot;tracer&quot;&gt;dojo/promise/tracer&lt;/a&gt; on how to handle traces.</source>
          <target state="translated">추적을 사용하면 약속 자체에 영향을 미치지 않고 약속의 진행 상황, 해결 및 거부를 투명하게 기록 할 수 있습니다. &lt;code&gt;trace()&lt;/code&gt; 전달 된 모든 인수 는 추적 이벤트에서 생성됩니다. 추적 처리 방법에 대해서는 &lt;a href=&quot;tracer&quot;&gt;dojo / promise / tracer&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2898efe00c8b8d4170238d34685847da9d209f60" translate="yes" xml:space="preserve">
          <source>Transparently applies callbacks to values and/or promises.</source>
          <target state="translated">콜백을 가치 및 / 또는 약속에 투명하게 적용합니다.</target>
        </trans-unit>
        <trans-unit id="caf4d6c69b7faadf543a3e56a9a88f18b11f61ea" translate="yes" xml:space="preserve">
          <source>Trims whitespace from both sides of the string</source>
          <target state="translated">문자열의 양쪽에서 공백을 제거합니다</target>
        </trans-unit>
        <trans-unit id="202952ed32138192cd778be2bcf5ee430e8623b7" translate="yes" xml:space="preserve">
          <source>True if client is Adobe Air</source>
          <target state="translated">클라이언트가 Adobe Air 인 경우 참</target>
        </trans-unit>
        <trans-unit id="cadf5105a37bb52b50995f06a3dbdfd698b046a6" translate="yes" xml:space="preserve">
          <source>True if client is Wii</source>
          <target state="translated">클라이언트가 Wii 인 경우 참</target>
        </trans-unit>
        <trans-unit id="fedc5242351cc2f430225a010924fe51b3242962" translate="yes" xml:space="preserve">
          <source>True if client is using Google Gears</source>
          <target state="translated">고객이 Google Gears를 사용중인 경우 true</target>
        </trans-unit>
        <trans-unit id="da6d644234a6dc3ccccd0b9b34f17f327eb94721" translate="yes" xml:space="preserve">
          <source>True if the client runs on Mac</source>
          <target state="translated">클라이언트가 Mac에서 실행되는 경우 참</target>
        </trans-unit>
        <trans-unit id="4db50b13be861400c9ebdf962f49ea3759a8acb4" translate="yes" xml:space="preserve">
          <source>Try to get time zone info from toString or toLocaleString method of the Date object -- UTC offset is not a time zone. See &lt;a href=&quot;http://www.twinsun.com/tz/tz-link.htm&quot;&gt;http://www.twinsun.com/tz/tz-link.htm&lt;/a&gt; Note: results may be inconsistent across browsers.</source>
          <target state="translated">Date 객체의 toString 또는 toLocaleString 메서드에서 표준 시간대 정보를 가져 오십시오. UTC 오프셋은 표준 시간대가 아닙니다. &lt;a href=&quot;http://www.twinsun.com/tz/tz-link.htm&quot;&gt;http://www.twinsun.com/tz/tz-link.htm을&lt;/a&gt; 참조하십시오 . 참고 : 브라우저마다 결과가 일치하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="3feae200bacb93dd9d7c40e32006af39638e2050" translate="yes" xml:space="preserve">
          <source>Types a key combination, like SHIFT-TAB.</source>
          <target state="translated">SHIFT-TAB과 같은 키 조합을 입력합니다.</target>
        </trans-unit>
        <trans-unit id="fc0f63e018064019562e2226bc90dbad24d76f15" translate="yes" xml:space="preserve">
          <source>Types a string of characters in order, or types a dojo.keys.* constant.</source>
          <target state="translated">문자열을 순서대로 입력하거나 dojo.keys. * 상수를 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="cf8aa6397937be28bbe11d38fbabfc2e71726a43" translate="yes" xml:space="preserve">
          <source>UP_ARROW</source>
          <target state="translated">UP_ARROW</target>
        </trans-unit>
        <trans-unit id="ddd09c9eda918892107f4f3d65169785ed0c5ac9" translate="yes" xml:space="preserve">
          <source>UP_DPAD</source>
          <target state="translated">UP_DPAD</target>
        </trans-unit>
        <trans-unit id="fa34b1152ad829755724b4578f1e044fe7f050fc" translate="yes" xml:space="preserve">
          <source>URL to open. Any of the test's dojo.doc calls (e.g. dojo.byId()), and any dijit.registry calls (e.g. dijit.byId()) will point to elements and widgets inside this application.</source>
          <target state="translated">열 URL입니다. 테스트의 dojo.doc 호출 (예 : dojo.byId ()) 및 dijit.registry 호출 (예 : dijit.byId ())은이 애플리케이션 내의 요소 및 위젯을 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="595f1364f1853b595968718a52faa20ae12322cc" translate="yes" xml:space="preserve">
          <source>URL to request</source>
          <target state="translated">요청할 URL</target>
        </trans-unit>
        <trans-unit id="bd5596a190d4427eda8500b6e6bbeeb2186cbdea" translate="yes" xml:space="preserve">
          <source>URL to server endpoint.</source>
          <target state="translated">서버 엔드 포인트에 대한 URL입니다.</target>
        </trans-unit>
        <trans-unit id="42586717241117bb9297adb1b1b1a6036c6330f9" translate="yes" xml:space="preserve">
          <source>Unless you need to use the params capabilities of this method, you should use &lt;a href=&quot;dom-construct#place&quot;&gt;dojo/dom-construct.place(cont, node, &quot;only&quot;)&lt;/a&gt;. &lt;a href=&quot;dom-construct&quot;&gt;dojo/dom-construct&lt;/a&gt;..place() has more robust support for injecting an HTML string into the DOM, but it only handles inserting an HTML string as DOM elements, or inserting a DOM node. &lt;a href=&quot;dom-construct&quot;&gt;dojo/dom-construct&lt;/a&gt;..place does not handle NodeList insertions &lt;a href=&quot;dom-construct#place&quot;&gt;dojo/dom-construct.place(cont, node, &quot;only&quot;)&lt;/a&gt;. &lt;a href=&quot;dom-construct#place&quot;&gt;dojo/dom-construct.place()&lt;/a&gt; has more robust support for injecting an HTML string into the DOM, but it only handles inserting an HTML string as DOM elements, or inserting a DOM node. &lt;a href=&quot;dom-construct#place&quot;&gt;dojo/dom-construct.place&lt;/a&gt; does not handle NodeList insertions or the other capabilities as defined by the params object for this method.</source>
          <target state="translated">이 메소드의 params 기능을 사용하지 않는 한 &lt;a href=&quot;dom-construct#place&quot;&gt;dojo / dom-construct.place (cont, node, &quot;only&quot;)&lt;/a&gt; 를 사용해야합니다 . &lt;a href=&quot;dom-construct&quot;&gt;dojo / dom-construct&lt;/a&gt; ..place ()는 HTML 문자열을 DOM에 삽입하는 데 더 강력한 지원을 제공하지만 HTML 문자열을 DOM 요소로 삽입하거나 DOM 노드 삽입 만 처리합니다. &lt;a href=&quot;dom-construct&quot;&gt;dojo / dom-construct&lt;/a&gt; ..place는 NodeList 삽입을 처리하지 않습니다. &lt;a href=&quot;dom-construct#place&quot;&gt;dojo / dom-construct.place (cont, node, &quot;only&quot;)&lt;/a&gt; . &lt;a href=&quot;dom-construct#place&quot;&gt;dojo / dom-construct.place ()&lt;/a&gt; 는 HTML 문자열을 DOM에 삽입하는 데보다 강력한 지원을 제공하지만 HTML 문자열을 DOM 요소로 삽입하거나 DOM 노드 삽입 만 처리합니다. &lt;a href=&quot;dom-construct#place&quot;&gt;dojo / dom-construct.place&lt;/a&gt; NodeList 삽입 또는이 메소드의 params 오브젝트에 의해 정의 된 기타 기능을 처리하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="80b5a31a077ad0e8f7bea42434684fc1e7f229d6" translate="yes" xml:space="preserve">
          <source>Unsupported Selectors:</source>
          <target state="translated">지원되지 않는 선택기 :</target>
        </trans-unit>
        <trans-unit id="995f2bcf205d8bc0bdf703f3485984cbe8b9857f" translate="yes" xml:space="preserve">
          <source>Upon receiving all required bundles, the plugin constructs the value of the bundle ab-cd-ef as...</source>
          <target state="translated">필요한 모든 번들을 수신하면 플러그인은 번들 ab-cd-ef의 값을 다음과 같이 구성합니다.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="835f0fad91a05bc46b363064581ce1b2272a0c54" translate="yes" xml:space="preserve">
          <source>Use a formatter</source>
          <target state="translated">포맷터 사용</target>
        </trans-unit>
        <trans-unit id="d4af79f76320083e14da39f2b0c2e94683a02e13" translate="yes" xml:space="preserve">
          <source>Use a transform function to modify the values:</source>
          <target state="translated">변환 함수를 사용하여 값을 수정하십시오.</target>
        </trans-unit>
        <trans-unit id="7070422af258f8e9fbcf69116ad7d32a5b01ac0b" translate="yes" xml:space="preserve">
          <source>Use caution when the easing will cause values to become negative as some properties cannot be set to negative values.</source>
          <target state="translated">일부 속성을 음수 값으로 설정할 수 없으므로 여유가 값을 음수로 만들 때주의하십시오.</target>
        </trans-unit>
        <trans-unit id="e4816b9122955db4601f61ba3d68e3d085020425" translate="yes" xml:space="preserve">
          <source>Use caution when the elasticity will cause values to become negative as some properties cannot be set to negative values.</source>
          <target state="translated">일부 속성을 음수 값으로 설정할 수 없으므로 탄성으로 인해 값이 음수가 될 때주의하십시오.</target>
        </trans-unit>
        <trans-unit id="88a2c154c0cbf0be17cfc57be01fce5d929b8787" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../dom-style#get&quot;&gt;dojo/dom-style.get()&lt;/a&gt; method for more consistent (pixelized) return values.</source>
          <target state="translated">보다 일관된 (픽셀 화 된) 반환 값을 &lt;a href=&quot;../dom-style#get&quot;&gt;얻으&lt;/a&gt; 려면 dojo / dom-style.get () 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="bda2ad55e0eaefdbe6a2accbedae805fb5ad212b" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;dom-style#get&quot;&gt;dojo/dom-style.get()&lt;/a&gt; method for more consistent (pixelized) return values.</source>
          <target state="translated">보다 일관된 (픽셀 화 된) 반환 값을 &lt;a href=&quot;dom-style#get&quot;&gt;얻으&lt;/a&gt; 려면 dojo / dom-style.get () 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="2b6722dddb3b18c52360ea35470794ee9ba9f98a" translate="yes" xml:space="preserve">
          <source>Use this rather than referring to 'window' to ensure your code runs correctly in managed contexts.</source>
          <target state="translated">관리되는 컨텍스트에서 코드가 올바르게 실행되도록하려면 '창'을 참조하는 대신 이것을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="039c75ce91f692b9b29e4cab5568adc10d6ef0ac" translate="yes" xml:space="preserve">
          <source>Use this rather than referring to 'window.document' to ensure your code runs correctly in managed contexts.</source>
          <target state="translated">관리되는 컨텍스트에서 코드가 올바르게 실행되도록하려면 'window.document'를 참조하는 대신 이것을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="16ee4293d2dee1dfe8a6a575febc5913732e7434" translate="yes" xml:space="preserve">
          <source>Use to determine if the current browser supports cookies or not.</source>
          <target state="translated">현재 브라우저가 쿠키를 지원하는지 여부를 결정하는 데 사용합니다.</target>
        </trans-unit>
        <trans-unit id="cd9b80c356349b4a7dc9cea9c02ecaea6a936aa6" translate="yes" xml:space="preserve">
          <source>Used by &lt;a href=&quot;../dnd/manager&quot;&gt;dojo/dnd/Manager&lt;/a&gt; to scroll document or internal node when the user drags near the edge of the viewport or a scrollable node</source>
          <target state="translated">&lt;a href=&quot;../dnd/manager&quot;&gt;dojo / dnd / Manager&lt;/a&gt; 에서 사용자가 뷰포트의 가장자리 나 스크롤 가능한 노드 근처로 끌 때 문서 또는 내부 노드를 스크롤하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="70c0164e2e5fb0fa3642cdf3817dffcc55e14b60" translate="yes" xml:space="preserve">
          <source>Used by &lt;a href=&quot;dnd/manager&quot;&gt;dojo/dnd/Manager&lt;/a&gt; to scroll document or internal node when the user drags near the edge of the viewport or a scrollable node</source>
          <target state="translated">&lt;a href=&quot;dnd/manager&quot;&gt;dojo / dnd / Manager&lt;/a&gt; 에서 사용자가 뷰포트의 가장자리 나 스크롤 가능한 노드 근처로 끌 때 문서 또는 내부 노드를 스크롤하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b5144c1484d626ae1d5bd7f398ae06f5dfff7c5a" translate="yes" xml:space="preserve">
          <source>Used by &lt;a href=&quot;manager&quot;&gt;dojo/dnd/Manager&lt;/a&gt; to scroll document or internal node when the user drags near the edge of the viewport or a scrollable node</source>
          <target state="translated">&lt;a href=&quot;manager&quot;&gt;dojo / dnd / Manager&lt;/a&gt; 에서 사용자가 뷰포트의 가장자리 나 스크롤 가능한 노드 근처로 끌 때 문서 또는 내부 노드를 스크롤하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="83c87a76edc85f2fa375d5c49c683795e714c92d" translate="yes" xml:space="preserve">
          <source>Used by &lt;code&gt;dojox.analytics.Urchin&lt;/code&gt; as the default UA-123456-7 account number used when being created. Alternately, you can pass an acct:&quot;&quot; parameter to the constructor a la: new dojox.analytics.Urchin({ acct:&quot;UA-123456-7&quot; });</source>
          <target state="translated">에서 사용 &lt;code&gt;dojox.analytics.Urchin&lt;/code&gt; 생성 될 때 기본으로 UA-123456-7 계좌 번호가 사용. 또는 acct : &quot;&quot;매개 변수를 생성자 a la에 전달할 수 있습니다. new dojox.analytics.Urchin ({acct : &quot;UA-123456-7&quot;});</target>
        </trans-unit>
        <trans-unit id="a15f3e13a88e6ee7ee18429d8526251be0c9359d" translate="yes" xml:space="preserve">
          <source>Used by some modules to configure an empty iframe. Used by &lt;a href=&quot;../io/iframe&quot;&gt;dojo/io/iframe&lt;/a&gt; and &lt;a href=&quot;../back&quot;&gt;dojo/back&lt;/a&gt;, and &lt;a href=&quot;http://dojotoolkit.org/api/1.10/dijit/popup&quot;&gt;dijit/popup&lt;/a&gt; support in IE where an iframe is needed to make sure native controls do not bleed through the popups. Normally this configuration variable does not need to be set, except when using cross-domain/CDN Dojo builds. Save dojo/resources/blank.html to your domain and set &lt;code&gt;djConfig.dojoBlankHtmlUrl&lt;/code&gt; to the path on your domain your copy of blank.html.</source>
          <target state="translated">일부 모듈에서 빈 iframe을 구성하는 데 사용됩니다. 에서 사용하는 &lt;a href=&quot;../io/iframe&quot;&gt;도장 / IO / iframe 대응&lt;/a&gt; 및 &lt;a href=&quot;../back&quot;&gt;도장 / 뒤로&lt;/a&gt; 하고 &lt;a href=&quot;http://dojotoolkit.org/api/1.10/dijit/popup&quot;&gt;는 Dijit / 팝업&lt;/a&gt; iframe이이 팝업을 통해 확인 네이티브 컨트롤을 피하지 수 있도록 할 필요가 IE에서 지원. 일반적으로이 구성 변수는 도메인 간 / CDN Dojo 빌드를 사용하는 경우를 제외하고 설정할 필요가 없습니다. dojo / resources / blank.html을 도메인에 저장하고 &lt;code&gt;djConfig.dojoBlankHtmlUrl&lt;/code&gt; 을 도메인의 경로 인 blank.html의 사본으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="0885581d067285f45077cb7c314a33bc43829566" translate="yes" xml:space="preserve">
          <source>Used by some modules to configure an empty iframe. Used by &lt;a href=&quot;../io/iframe&quot;&gt;dojo/io/iframe&lt;/a&gt; and &lt;a href=&quot;../back&quot;&gt;dojo/back&lt;/a&gt;, and &lt;a href=&quot;https://dojotoolkit.org/api/1.10/dijit/popup&quot;&gt;dijit/popup&lt;/a&gt; support in IE where an iframe is needed to make sure native controls do not bleed through the popups. Normally this configuration variable does not need to be set, except when using cross-domain/CDN Dojo builds. Save dojo/resources/blank.html to your domain and set &lt;code&gt;djConfig.dojoBlankHtmlUrl&lt;/code&gt; to the path on your domain your copy of blank.html.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0af858ce8cf0d324aac429eabcdf4668688f1a" translate="yes" xml:space="preserve">
          <source>Used by some modules to configure an empty iframe. Used by &lt;a href=&quot;io/iframe&quot;&gt;dojo/io/iframe&lt;/a&gt; and &lt;a href=&quot;back&quot;&gt;dojo/back&lt;/a&gt;, and &lt;a href=&quot;http://dojotoolkit.org/api/1.10/dijit/popup&quot;&gt;dijit/popup&lt;/a&gt; support in IE where an iframe is needed to make sure native controls do not bleed through the popups. Normally this configuration variable does not need to be set, except when using cross-domain/CDN Dojo builds. Save dojo/resources/blank.html to your domain and set &lt;code&gt;djConfig.dojoBlankHtmlUrl&lt;/code&gt; to the path on your domain your copy of blank.html.</source>
          <target state="translated">일부 모듈에서 빈 iframe을 구성하는 데 사용됩니다. 에서 사용하는 &lt;a href=&quot;io/iframe&quot;&gt;도장 / IO / iframe 대응&lt;/a&gt; 및 &lt;a href=&quot;back&quot;&gt;도장 / 뒤로&lt;/a&gt; 하고 &lt;a href=&quot;http://dojotoolkit.org/api/1.10/dijit/popup&quot;&gt;는 Dijit / 팝업&lt;/a&gt; iframe이이 팝업을 통해 확인 네이티브 컨트롤을 피하지 수 있도록 할 필요가 IE에서 지원. 일반적으로이 구성 변수는 도메인 간 / CDN Dojo 빌드를 사용하는 경우를 제외하고 설정할 필요가 없습니다. dojo / resources / blank.html을 도메인에 저장하고 &lt;code&gt;djConfig.dojoBlankHtmlUrl&lt;/code&gt; 을 도메인의 경로 인 blank.html의 사본으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="bc07b4363a6faa6a01ca940a3491429a9e39d3e5" translate="yes" xml:space="preserve">
          <source>Used by some modules to configure an empty iframe. Used by &lt;a href=&quot;io/iframe&quot;&gt;dojo/io/iframe&lt;/a&gt; and &lt;a href=&quot;back&quot;&gt;dojo/back&lt;/a&gt;, and &lt;a href=&quot;https://dojotoolkit.org/api/1.10/dijit/popup&quot;&gt;dijit/popup&lt;/a&gt; support in IE where an iframe is needed to make sure native controls do not bleed through the popups. Normally this configuration variable does not need to be set, except when using cross-domain/CDN Dojo builds. Save dojo/resources/blank.html to your domain and set &lt;code&gt;djConfig.dojoBlankHtmlUrl&lt;/code&gt; to the path on your domain your copy of blank.html.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc665024dfefe7337f783c4aa93579a2ff8b708" translate="yes" xml:space="preserve">
          <source>Used for defaults for fields omitted in the formattedString. Uses 1970-01-01T00:00:00.0Z by default.</source>
          <target state="translated">formattedString에서 생략 된 필드의 기본값에 사용됩니다. 기본적으로 1970-01-01T00 : 00 : 00.0Z를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="7dcb31bfb529543da80005f51d976128bbec58cf" translate="yes" xml:space="preserve">
          <source>Used to get localized strings from dojo.cldr for day or month names.</source>
          <target state="translated">일 또는 월 이름으로 dojo.cldr에서 현지화 된 문자열을 가져 오는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d75afb60616a27d60511701dd5d700c04ebc2d8b" translate="yes" xml:space="preserve">
          <source>Used with dojo/on</source>
          <target state="translated">dojo / on과 함께 사용</target>
        </trans-unit>
        <trans-unit id="a120a43b0c5ed4b53e57423afba94f366d650b27" translate="yes" xml:space="preserve">
          <source>Used with touch.* directly</source>
          <target state="translated">touch. *와 함께 사용</target>
        </trans-unit>
        <trans-unit id="03bdc0736b9463b83a500c01488c36072f00ae04" translate="yes" xml:space="preserve">
          <source>Useful for longer api chains where you have to test each object in the chain, or when you have an object reference in string format.</source>
          <target state="translated">체인의 각 객체를 테스트해야하거나 문자열 형식의 객체 참조가있는 더 긴 API 체인에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="731b502d4e74eaecf73e258ee12ad17615ebaa11" translate="yes" xml:space="preserve">
          <source>Useful for longer api chains where you have to test each object in the chain, or when you have an object reference in string format. Objects are created as needed along &lt;code&gt;path&lt;/code&gt;. Returns the passed value if setting is successful or &lt;code&gt;undefined&lt;/code&gt; if not.</source>
          <target state="translated">체인의 각 객체를 테스트해야하거나 문자열 형식의 객체 참조가있는 더 긴 API 체인에 유용합니다. &lt;code&gt;path&lt;/code&gt; 에 따라 필요에 따라 객체가 생성됩니다 . 설정이 성공한 경우 전달 된 값을 반환하고 그렇지 &lt;code&gt;undefined&lt;/code&gt; 경우 정의되지 않은 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="682cf89c0d2702d651ef2b6cbe9ac7d4969cbb39" translate="yes" xml:space="preserve">
          <source>Username to use during the request.</source>
          <target state="translated">요청 중에 사용할 사용자 이름입니다.</target>
        </trans-unit>
        <trans-unit id="ca4870d8aec4ec1895c9790e60f211edabaf34cc" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;auto&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;auto&lt;/code&gt; 사용 :</target>
        </trans-unit>
        <trans-unit id="81c79b4426cd283262161184965de9be5aa8bf45" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;data-dojo-type&lt;/code&gt;: Attributes using can be mixed into the parameters used to instantiate the Class by using a &lt;code&gt;data-dojo-props&lt;/code&gt; attribute on the node being converted. &lt;code&gt;data-dojo-props&lt;/code&gt; should be a string attribute to be converted from JSON.</source>
          <target state="translated">사용 &lt;code&gt;data-dojo-type&lt;/code&gt; 하십시오 사용하여 클래스를 인스턴스화하는데 사용되는 매개 변수로 혼합 될 수있다하여 속성 &lt;code&gt;data-dojo-props&lt;/code&gt; 노드에 존재 변환 특성. &lt;code&gt;data-dojo-props&lt;/code&gt; 는 JSON에서 변환 할 문자열 속성이어야합니다.</target>
        </trans-unit>
        <trans-unit id="2f545051a4d2b844ce99d8b690d789b8ae6d048d" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;dojoType&lt;/code&gt;: Attributes are read from the original domNode and converted to appropriate types by looking up the Class prototype values. This is the default behavior from Dojo 1.0 to Dojo 1.5. &lt;code&gt;dojoType&lt;/code&gt; support is deprecated, and will go away in Dojo 2.0.</source>
          <target state="translated">&lt;code&gt;dojoType&lt;/code&gt; 사용 : 원래 domNode에서 속성을 읽고 클래스 프로토 타입 값을 찾아 적절한 유형으로 변환합니다. 이것이 Dojo 1.0에서 Dojo 1.5까지의 기본 동작입니다. &lt;code&gt;dojoType&lt;/code&gt; 지원은 더 이상 사용되지 않으며 Dojo 2.0에서 사라집니다.</target>
        </trans-unit>
        <trans-unit id="7dc9d4d7ffb873a210e69cf4b9e87e596fb4d53b" translate="yes" xml:space="preserve">
          <source>Using a Deferred doesn't simplify the sending code any, but it provides a standard interface for callers and senders alike, providing both with a simple way to service multiple callbacks for an operation and freeing both sides from worrying about details such as &quot;did this get called already?&quot;. With Deferreds, new callbacks can be added at any time.</source>
          <target state="translated">Deferred를 사용하면 전송 코드가 간단 해지지 않지만 발신자와 발신자 모두에게 표준 인터페이스를 제공하여 작업을 위해 여러 개의 콜백을 처리 할 수있는 간단한 방법을 제공하고 &quot;양측이 벌써 불러? &quot; 지연을 사용하면 언제든지 새로운 콜백을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b7cb0b41d4543bff0293c33fc17a729356e66e63" translate="yes" xml:space="preserve">
          <source>Using a priority</source>
          <target state="translated">우선 순위 사용</target>
        </trans-unit>
        <trans-unit id="7cdba8ffbdf5a093941930c7482022638a3dd383" translate="yes" xml:space="preserve">
          <source>Using context</source>
          <target state="translated">컨텍스트 사용</target>
        </trans-unit>
        <trans-unit id="bcb4d94e7611dae68010b7ba147b120b2c1590ab" translate="yes" xml:space="preserve">
          <source>Using dojo/hitch style args:</source>
          <target state="translated">dojo / hitch 스타일 인수 사용 :</target>
        </trans-unit>
        <trans-unit id="60866347634ea9aa7fa293f5cd68a499370445e6" translate="yes" xml:space="preserve">
          <source>Using return value for disconnect:</source>
          <target state="translated">연결 끊기에 리턴 값 사용 :</target>
        </trans-unit>
        <trans-unit id="a7431c65f4d911598e3c224484f83e80866a2b31" translate="yes" xml:space="preserve">
          <source>Usually constructors and initializers of any kind are chained using &quot;after&quot; and destructors of any kind are chained as &quot;before&quot;. Note that chaining assumes that chained methods do not return any value: any returned value will be discarded.</source>
          <target state="translated">일반적으로 모든 종류의 생성자와 이니셜 라이저는 &quot;after&quot;를 사용하여 연결되고 모든 종류의 소멸자는 &quot;before&quot;로 연결됩니다. 연결은 연결 방법이 값을 반환하지 않는다고 가정합니다. 반환 된 값은 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="88d2d77b9fc9ab26a04b979f8ee62bc5eaa9040f" translate="yes" xml:space="preserve">
          <source>Usually only used internally, and auto-generated with each instance</source>
          <target state="translated">일반적으로 내부적으로 만 사용되며 각 인스턴스에서 자동 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="d912b45ea3fcba6b44e0bad001932b647345e225" translate="yes" xml:space="preserve">
          <source>Utilizing &lt;code&gt;auto&lt;/code&gt; to get the NodeList back:</source>
          <target state="translated">이용 &lt;code&gt;auto&lt;/code&gt; 노드 목록 등을 얻을 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="699830394720e3fccc8851a91f6300a8a26a3536" translate="yes" xml:space="preserve">
          <source>V_AUTOSCROLL_VALUE</source>
          <target state="translated">V_AUTOSCROLL_VALUE</target>
        </trans-unit>
        <trans-unit id="48aae14365ec8aae04d10efb2bfcecca9bc7a1c0" translate="yes" xml:space="preserve">
          <source>V_TRIGGER_AUTOSCROLL</source>
          <target state="translated">V_TRIGGER_AUTOSCROLL</target>
        </trans-unit>
        <trans-unit id="b5620ae949766f67b88f3768ab5cb0b2ddaa17ac" translate="yes" xml:space="preserve">
          <source>Value for the cookie</source>
          <target state="translated">쿠키의 가치</target>
        </trans-unit>
        <trans-unit id="07ff4206677181ac10718805152e7ff9ac4cd85e" translate="yes" xml:space="preserve">
          <source>Version as a Number if client is Chrome browser. undefined otherwise.</source>
          <target state="translated">클라이언트가 Chrome 브라우저 인 경우 숫자 버전입니다. 그렇지 않으면 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9eccd42989e71d6dd53e3d32a9cd27e13830872e" translate="yes" xml:space="preserve">
          <source>Version as a Number if client is MSIE(PC). undefined otherwise. Corresponds to major detected IE version (6, 7, 8, etc.)</source>
          <target state="translated">클라이언트가 MSIE (PC) 인 경우 숫자 버전입니다. 그렇지 않으면 정의되지 않습니다. 주요 탐지 된 IE 버전 (6, 7, 8 등)에 해당</target>
        </trans-unit>
        <trans-unit id="e5ac3abfff5081cd0420b85f66a53b4900b1d6cd" translate="yes" xml:space="preserve">
          <source>Version as a Number if client is Opera. undefined otherwise. Corresponds to major detected version.</source>
          <target state="translated">클라이언트가 Opera 인 경우 숫자 버전입니다. 그렇지 않으면 정의되지 않습니다. 주요 탐지 버전에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="593155007a845825762861e28923f7b7e27ffef6" translate="yes" xml:space="preserve">
          <source>Version as a Number if client is Safari or iPhone. undefined otherwise.</source>
          <target state="translated">클라이언트가 Safari 또는 iPhone 인 경우 숫자 버전입니다. 그렇지 않으면 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e8dacc32e197d232fb83a4de030ae91949856ce5" translate="yes" xml:space="preserve">
          <source>Version as a Number if client is a KHTML browser. undefined otherwise. Corresponds to major detected version.</source>
          <target state="translated">클라이언트가 KHTML 브라우저 인 경우 숫자 버전입니다. 그렇지 않으면 정의되지 않습니다. 주요 탐지 버전에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="38d5fa94c921add67a312952c82081239e84e2b1" translate="yes" xml:space="preserve">
          <source>Version as a Number if client is a WebKit-derived browser (Konqueror, Safari, Chrome, etc.). undefined otherwise.</source>
          <target state="translated">클라이언트가 WebKit 파생 브라우저 (Konqueror, Safari, Chrome 등) 인 경우 숫자 버전입니다. 그렇지 않으면 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="29c7a50bb413d8434cf90466968914694d8e99c1" translate="yes" xml:space="preserve">
          <source>Version as a Number if client is android browser. undefined otherwise.</source>
          <target state="translated">클라이언트가 Android 브라우저 인 경우 숫자 버전입니다. 그렇지 않으면 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="23a2df2b50bf19338dfeefd3123705c264ac0a18" translate="yes" xml:space="preserve">
          <source>Version as a Number if client is iPhone, iPod, or iPad. undefined otherwise.</source>
          <target state="translated">클라이언트가 iPhone, iPod 또는 iPad 인 경우 숫자 버전입니다. 그렇지 않으면 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="855ff75db16d8abe7ebe65329fa8c90223711675" translate="yes" xml:space="preserve">
          <source>Version number of the Dojo Toolkit</source>
          <target state="translated">Dojo 툴킷의 버전 번호</target>
        </trans-unit>
        <trans-unit id="439d28ed2b197fa33d58342c4f6b115668850b46" translate="yes" xml:space="preserve">
          <source>Watches a property for changes</source>
          <target state="translated">속성 변경을 감시합니다</target>
        </trans-unit>
        <trans-unit id="f611f34f15e374cf625e4813f7df25ca704a1d59" translate="yes" xml:space="preserve">
          <source>Watches the io request represented by dfd to see if it completes.</source>
          <target state="translated">dfd로 표시되는 io 요청이 완료되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6b8aa3765273bb24d824b3f983ab4bdbe2eb350e" translate="yes" xml:space="preserve">
          <source>We can use extension events as well. For example, you could listen for a tap gesture:</source>
          <target state="translated">확장 이벤트도 사용할 수 있습니다. 예를 들어 탭 제스처를들을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee96f572e862fa61aa070285987022c71fd7ad40" translate="yes" xml:space="preserve">
          <source>We choose to include our own plugin to leverage functionality already contained in dojo and thereby reduce the size of the plugin compared to various foreign loader implementations. Also, this allows foreign AMD loaders to be used without their plugins.</source>
          <target state="translated">우리는 dojo에 이미 포함 된 기능을 활용하기 위해 자체 플러그인을 포함하여 다양한 외부 로더 구현에 비해 플러그인의 크기를 줄입니다. 또한 외부 AMD 로더를 플러그인없이 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4fcec56a32b7a4c1fccd41c9820c95a9ea5967a2" translate="yes" xml:space="preserve">
          <source>We choose to include our own plugin to leverage functionality already contained in dojo and thereby reduce the size of the plugin compared to various loader implementations. Also, this allows foreign AMD loaders to be used without their plugins.</source>
          <target state="translated">우리는 dojo에 이미 포함 된 기능을 활용하기 위해 자체 플러그인을 포함시켜 다양한 로더 구현에 비해 플러그인의 크기를 줄입니다. 또한 외부 AMD 로더를 플러그인없이 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d9e7b7782b19012814261d96821aa181e9e20f7d" translate="yes" xml:space="preserve">
          <source>Whatever is returned by a super method, or a super method itself, if &quot;true&quot; was specified as newArgs.</source>
          <target state="translated">&quot;true&quot;가 newArgs로 지정된 경우 수퍼 메소드 또는 수퍼 메소드 자체에 의해 리턴되는 것</target>
        </trans-unit>
        <trans-unit id="92d5e150dc8d802c6a177858350feb96ca1f8677" translate="yes" xml:space="preserve">
          <source>When called in a non-browser environment, just checks that all requested modules have arrived and been evaluated.</source>
          <target state="translated">브라우저가 아닌 환경에서 호출되면 요청 된 모든 모듈이 도착하여 평가되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="efc1c8621c1c4fb0e7ee610fad5e332a0637b73c" translate="yes" xml:space="preserve">
          <source>When creating a new dojo.store, simply set the store's queryEngine field as a reference to this function.</source>
          <target state="translated">새 dojo.store를 작성할 때 상점의 queryEngine 필드를이 함수에 대한 참조로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="f115d048379b68949755307d1f1dff2e348e04e3" translate="yes" xml:space="preserve">
          <source>When globalEvent executes, globalHandler is invoked with the same scope (this):</source>
          <target state="translated">globalEvent가 실행될 때 globalHandler는 동일한 범위 (this)로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="82f26a588cd6aab6df6f4ff115cb21b5c4d681f4" translate="yes" xml:space="preserve">
          <source>When ob.onCustomEvent executes, customEventHandler is invoked with the same scope (this):</source>
          <target state="translated">ob.onCustomEvent가 실행될 때 customEventHandler는 동일한 범위 (this)로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="d8e895c20a48b8941ccdc2a0e02af507b259d6c7" translate="yes" xml:space="preserve">
          <source>When ob.onCustomEvent executes, customEventHandler is invoked:</source>
          <target state="translated">ob.onCustomEvent가 실행될 때 customEventHandler가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="c8aa8e311cd1009c4fe795e097fe2224ee694843" translate="yes" xml:space="preserve">
          <source>When obj.onchange(), do ui.update():</source>
          <target state="translated">obj.onchange () 인 경우 ui.update ()를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="e7aeaa3b43e8af8c8597947f4e99e1b8315bba1a" translate="yes" xml:space="preserve">
          <source>When onglobalevent executes, watcher.handler is invoked:</source>
          <target state="translated">onglobalevent가 실행될 때 watcher.handler가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="b1acb7bb3d81279ac96fe084a5075079d9edf7ac" translate="yes" xml:space="preserve">
          <source>When options.selector is omitted, output follows &lt;a href=&quot;http://www.ietf.org/rfc/rfc3339.txt&quot;&gt;RFC3339&lt;/a&gt; The local time zone is included as an offset from GMT, except when selector=='time' (time without a date) Does not check bounds. Only years between 100 and 9999 are supported.</source>
          <target state="translated">options.selector가 생략되면 출력은 &lt;a href=&quot;http://www.ietf.org/rfc/rfc3339.txt&quot;&gt;RFC3339를&lt;/a&gt; 따릅니다. selector == 'time'(날짜가없는 시간) 범위를 확인하지 않는 경우를 제외하고 로컬 시간대는 GMT 와의 오프셋으로 포함됩니다. 100에서 9999 사이의 연도 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="89f46c8ee28dfd1cd9e966b0d0a63046ddc9cb87" translate="yes" xml:space="preserve">
          <source>When options.selector is omitted, output follows &lt;a href=&quot;https://www.ietf.org/rfc/rfc3339.txt&quot;&gt;RFC3339&lt;/a&gt; The local time zone is included as an offset from GMT, except when selector=='time' (time without a date) Does not check bounds. Only years between 100 and 9999 are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abcebf7378170230428584adc09bd6155a23a793" translate="yes" xml:space="preserve">
          <source>When passing functions as values, note that they will not be directly assigned to slots on the node, but rather the default behavior will be removed and the new behavior will be added using &lt;code&gt;dojo.connect()&lt;/code&gt;, meaning that event handler properties will be normalized and that some caveats with regards to non-standard behaviors for onsubmit apply. Namely that you should cancel form submission using &lt;code&gt;dojo.stopEvent()&lt;/code&gt; on the passed event object instead of returning a boolean value from the handler itself.</source>
          <target state="translated">함수를 값으로 전달할 때 노드의 슬롯에 직접 할당되지는 않지만 기본 동작이 제거되고 &lt;code&gt;dojo.connect()&lt;/code&gt; 사용하여 새 동작이 추가 되므로 이벤트 핸들러 속성이 정규화됩니다. 그리고 onsubmit에 대한 비표준 행동과 관련하여 일부 경고가 적용된다. 즉 , 처리기 자체에서 부울 값을 반환하는 대신 전달 된 이벤트 객체에서 &lt;code&gt;dojo.stopEvent()&lt;/code&gt; 를 사용하여 양식 제출을 취소해야 합니다.</target>
        </trans-unit>
        <trans-unit id="b9c451e61050bcfdcdc35697eb667662c084e8c5" translate="yes" xml:space="preserve">
          <source>When provided a regex for the route:</source>
          <target state="translated">경로에 대한 정규식을 제공 한 경우 :</target>
        </trans-unit>
        <trans-unit id="88c14e7b865617045b4cfbfc5265f0f276632dbe" translate="yes" xml:space="preserve">
          <source>When provided a string for the route:</source>
          <target state="translated">경로에 문자열을 제공 한 경우 :</target>
        </trans-unit>
        <trans-unit id="0a52565f8e4f9b048ca78b2c1c7beb931e3299da" translate="yes" xml:space="preserve">
          <source>When set to true, this will ensure that only valid, secure JSON is ever parsed. Make sure this is set to true for untrusted content. Note that on browsers/engines without native JSON support, setting this to true will run slower.</source>
          <target state="translated">true로 설정하면 유효하고 안전한 JSON 만 구문 분석됩니다. 신뢰할 수없는 내용에 대해서는 이것이 true로 설정되어 있는지 확인하십시오. 기본 JSON 지원이없는 브라우저 / 엔진에서이 값을 true로 설정하면 느리게 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="4d22ff89fe443bf6e2aa22bdb7b201d14c8a27c4" translate="yes" xml:space="preserve">
          <source>When setting up a connection, the &lt;code&gt;event&lt;/code&gt; parameter must be a string that is the name of the method/event to be listened for. If &lt;code&gt;obj&lt;/code&gt; is null, &lt;code&gt;kernel.global&lt;/code&gt; is assumed, meaning that connections to global methods are supported but also that you may inadvertently connect to a global by passing an incorrect object name or invalid reference.</source>
          <target state="translated">연결을 설정할 때 &lt;code&gt;event&lt;/code&gt; 매개 변수는 청취 할 메소드 / 이벤트의 이름 인 문자열이어야합니다. &lt;code&gt;obj&lt;/code&gt; 가 null 인 경우 , &lt;code&gt;kernel.global&lt;/code&gt; 이 가정됩니다. 즉, 전역 메소드에 대한 연결은 지원되지만 잘못된 오브젝트 이름 또는 유효하지 않은 참조를 전달하여 실수로 전역에 연결할 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="80a9e6cab5fa5e99623ae00ad6f2430bede449a2" translate="yes" xml:space="preserve">
          <source>When the CSS style property is hyphenated, the JavaScript property is camelCased. font-size becomes fontSize, and so on.</source>
          <target state="translated">CSS 스타일 속성이 하이픈으로 연결되면 JavaScript 속성이 camelCased입니다. font-size는 fontSize 등이됩니다.</target>
        </trans-unit>
        <trans-unit id="0cdb4549a494256c44e3b3a6f63c0b889ab939c4" translate="yes" xml:space="preserve">
          <source>When the hash matches a pattern as described in the route, this callback will be executed. It will receive an event object that will have several properties:</source>
          <target state="translated">경로에 설명 된대로 해시가 패턴과 일치하면이 콜백이 실행됩니다. 몇 가지 속성이있는 이벤트 객체를받습니다.</target>
        </trans-unit>
        <trans-unit id="ba1dd3297c3a7fc8d8d8e7ed16b3b601cf7d9c2e" translate="yes" xml:space="preserve">
          <source>When the longest animation ends, execute a function:</source>
          <target state="translated">가장 긴 애니메이션이 끝나면 함수를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="137e2b8187af0ee5beefa204d17e6c8245011a5d" translate="yes" xml:space="preserve">
          <source>When used as a setter via &lt;code&gt;dojo/NodeList&lt;/code&gt;, a NodeList instance is returned for further chaining. When used as a getter via &lt;code&gt;dojo/NodeList&lt;/code&gt; an ARRAY of items is returned. The items in the array correspond to the elements in the original list. This is true even when the list length is 1, eg: when looking up a node by ID (#foo)</source>
          <target state="translated">&lt;code&gt;dojo/NodeList&lt;/code&gt; 를 통해 세터로 사용되면 추가 체인을 위해 NodeList 인스턴스가 리턴됩니다. &lt;code&gt;dojo/NodeList&lt;/code&gt; 를 통해 getter로 사용될 경우 항목의 ARRAY가 리턴됩니다. 배열의 항목은 원래 목록의 요소에 해당합니다. 목록 길이가 1 인 경우에도 마찬가지입니다. 예 : ID (#foo)로 노드를 조회 할 때</target>
        </trans-unit>
        <trans-unit id="175a4f10100c7b0ce009f8bc25472169f9c25218" translate="yes" xml:space="preserve">
          <source>Where if it is a function, it is assumed to be an object constructor that takes the</source>
          <target state="translated">그것이 함수라면, 그것을 취하는 객체 생성자로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="acc8b99a3dca2a9d2f53b592d24adc21280b5c5b" translate="yes" xml:space="preserve">
          <source>Whether decimal places are used. Can be true, false, or [true, false]. Default is [true, false] which means optional.</source>
          <target state="translated">소수점 이하 자릿수 사용 여부. true, false 또는 [true, false] 일 수 있습니다. 기본값은 [true, false]이며 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="01b8d8724af7e6b68badb52676ac486603fc3f13" translate="yes" xml:space="preserve">
          <source>Whether deferred instrumentation should be loaded or included in builds.</source>
          <target state="translated">지연된 계측이로드되거나 빌드에 포함되어야하는지 여부</target>
        </trans-unit>
        <trans-unit id="67194916eee4f30427f387f19230970937ea5164" translate="yes" xml:space="preserve">
          <source>Whether the deferred instrumentation should be used.</source>
          <target state="translated">지연된 계측을 사용해야하는지 여부</target>
        </trans-unit>
        <trans-unit id="336b2dd94fbdcfcdbc7e69c0e48d8e3f07733464" translate="yes" xml:space="preserve">
          <source>Whether to append a cache-busting parameter to the URL.</source>
          <target state="translated">캐시 버스 팅 매개 변수를 URL에 추가할지 여부</target>
        </trans-unit>
        <trans-unit id="5feba43f1c275b408329bdf50c3c3bfacb7827e1" translate="yes" xml:space="preserve">
          <source>Whether to include the fractional portion, where the number of decimal places are implied by pattern or explicit 'places' parameter. The value [true,false] makes the fractional portion optional.</source>
          <target state="translated">소수점 이하 자릿수를 패턴 또는 명시 적 'places'매개 변수로 암시하는 소수 부분을 포함할지 여부입니다. [true, false] 값은 소수 부분을 선택적으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="235db98816c8911ccec7663a08333da45780c54c" translate="yes" xml:space="preserve">
          <source>Whether to include the fractional portion, where the number of decimal places are implied by the currency or explicit 'places' parameter. The value [true,false] makes the fractional portion optional. By default for currencies, it the fractional portion is optional.</source>
          <target state="translated">소수 자릿수를 포함할지 여부, 소수 자릿수가 통화 또는 명시적인 'places'매개 변수에 의해 암시되는지 여부 [true, false] 값은 소수 부분을 선택적으로 만듭니다. 통화의 경우 기본적으로 소수 부분은 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="3cb52e26e405741e7f80f91c4368ae9ff0cf1f82" translate="yes" xml:space="preserve">
          <source>Whether to make a synchronous request or not. Default is &lt;code&gt;false&lt;/code&gt; (asynchronous).</source>
          <target state="translated">동기식 요청 여부입니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다 (비동기식).</target>
        </trans-unit>
        <trans-unit id="a64bfde23e230be3e1a76664844159a8f18f8240" translate="yes" xml:space="preserve">
          <source>While dojo.query handles many CSS3 selectors, some fall outside of what's reasonable for a programmatic node querying engine to handle. Currently unsupported selectors include:</source>
          <target state="translated">dojo.query는 많은 CSS3 선택자를 처리하지만 일부는 프로그래밍 방식 노드 쿼리 엔진이 처리 할 수있는 수준을 벗어납니다. 현재 지원되지 않는 선택기에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="89a823eaa2be2a7135591a0174c97dc0d450b0ab" translate="yes" xml:space="preserve">
          <source>Widget constructor.</source>
          <target state="translated">위젯 생성자.</target>
        </trans-unit>
        <trans-unit id="3d1f2ed4ebf5a998716fc7eb707b1868612ee248" translate="yes" xml:space="preserve">
          <source>Will be invoked if the deferred is canceled. The canceler receives the reason the deferred was canceled as its argument. The deferred is rejected with its return value, or a new &lt;code&gt;dojo/errors/CancelError&lt;/code&gt; instance.</source>
          <target state="translated">지연이 취소되면 호출됩니다. 취소자는 연기 된 인수가 인수로 취소 된 이유를 수신합니다. 지연된 값은 반환 값 또는 새로운 &lt;code&gt;dojo/errors/CancelError&lt;/code&gt; 인스턴스 와 함께 거부됩니다 .</target>
        </trans-unit>
        <trans-unit id="f422b09e62a5cca03aae1f353074d375c77dc4cd" translate="yes" xml:space="preserve">
          <source>Will cause the DeferredLists callback to be fired as soon as any of the deferreds in its list have been fired instead of waiting until the entire list has finished</source>
          <target state="translated">전체 목록이 완료 될 때까지 기다리지 않고 목록에있는 지연된 항목이 시작 되 자마자 DeferredLists 콜백이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="e2894985a57cf272b0c233b3bdc778bf44333ada" translate="yes" xml:space="preserve">
          <source>Will throw a notice suggesting to use application/json mimetype, as json-commenting can introduce security issues. To decrease the chances of hijacking, use the standard &lt;code&gt;json&lt;/code&gt; contentHandler, and prefix your &quot;JSON&quot; with: {}&amp;amp;&amp;amp;</source>
          <target state="translated">json-commenting으로 인해 보안 문제가 발생할 수 있으므로 application / json mimetype 사용을 제안하는 알림이 표시됩니다. 하이재킹 가능성을 줄이려면 표준 &lt;code&gt;json&lt;/code&gt; contentHandler를 사용하고 &quot;JSON&quot;접두사 {} &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="e6733503177dfec46dce11bd702c89b845b75b49" translate="yes" xml:space="preserve">
          <source>Wipe all elements of the NodeList to a specified width: or height:</source>
          <target state="translated">NodeList의 모든 요소를 ​​지정된 너비 또는 높이로 닦으십시오.</target>
        </trans-unit>
        <trans-unit id="4e04e37461a470e1d4a60967deb0a970dec23b93" translate="yes" xml:space="preserve">
          <source>Wipe out all tables with class &quot;blah&quot;:</source>
          <target state="translated">&quot;blah&quot;클래스를 사용하여 모든 테이블을 정리하십시오.</target>
        </trans-unit>
        <trans-unit id="d6ddb0f27290602478b78f6f4587edb43e8ad409" translate="yes" xml:space="preserve">
          <source>With Preloads:</source>
          <target state="translated">예압으로 :</target>
        </trans-unit>
        <trans-unit id="262e778b1bf396d12fbf6c4e7c5ff69ad17c2227" translate="yes" xml:space="preserve">
          <source>Without Preloads:</source>
          <target state="translated">예압 미포함 :</target>
        </trans-unit>
        <trans-unit id="5c088fd27ed66ac5509cc56ae2d884049a26dcdc" translate="yes" xml:space="preserve">
          <source>Work with a Color instance:</source>
          <target state="translated">Color 인스턴스로 작업 :</target>
        </trans-unit>
        <trans-unit id="ef5d5a8d5958039a166487709f025fc94f36f8a7" translate="yes" xml:space="preserve">
          <source>Work with a node's color:</source>
          <target state="translated">노드 색상으로 작업하십시오.</target>
        </trans-unit>
        <trans-unit id="33f79b873acc1d0743fb059959d6fd179356962e" translate="yes" xml:space="preserve">
          <source>Wrap each node in the NodeList with html passed to wrap.</source>
          <target state="translated">랩으로 전달 된 html로 NodeList의 각 노드를 랩하십시오.</target>
        </trans-unit>
        <trans-unit id="80c15b6b3e83887b2479af8c07c857c970e12fca" translate="yes" xml:space="preserve">
          <source>You can also choose the selector engine/load configuration by setting the query-selector: For example:</source>
          <target state="translated">쿼리 선택기를 설정하여 선택기 엔진 /로드 구성을 선택할 수도 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7f03a2ac13832e4c09e537206bd75430ee081d50" translate="yes" xml:space="preserve">
          <source>Your application can tell Dojo to locate the &quot;foo&quot; namespace by calling:</source>
          <target state="translated">애플리케이션은 다음을 호출하여 Dojo에게 &quot;foo&quot;네임 스페이스를 찾도록 지시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c7120944d9054439b877ccbb7d5c0ebc261ab9e" translate="yes" xml:space="preserve">
          <source>\ is an escape character. So for example, * means do not treat &lt;em&gt; as a match, but literal character &lt;/em&gt;.</source>
          <target state="translated">\는 이스케이프 문자입니다. 예를 들어 * &lt;em&gt;는 일치하는 것이 아니라 리터럴 문자로&lt;/em&gt; 취급한다는 의미 입니다.</target>
        </trans-unit>
        <trans-unit id="241ee485cb06400c2c766af92790365245a605b6" translate="yes" xml:space="preserve">
          <source>__FormatOptions</source>
          <target state="translated">__FormatOptions</target>
        </trans-unit>
        <trans-unit id="f8e6029816fbc28d174c6d66d6d2413fe3a83f0e" translate="yes" xml:space="preserve">
          <source>_base/Color</source>
          <target state="translated">_base/Color</target>
        </trans-unit>
        <trans-unit id="6be8de93ae5b4437beaacf24b6ff317a317857b1" translate="yes" xml:space="preserve">
          <source>_base/Deferred</source>
          <target state="translated">_base/Deferred</target>
        </trans-unit>
        <trans-unit id="dab00d1dff0dfdd86f84591cf58a847cb9a35a08" translate="yes" xml:space="preserve">
          <source>_base/NodeList</source>
          <target state="translated">_base/NodeList</target>
        </trans-unit>
        <trans-unit id="7db846f36c243a609f3fd71052720d64c22a3049" translate="yes" xml:space="preserve">
          <source>_base/array</source>
          <target state="translated">_base/array</target>
        </trans-unit>
        <trans-unit id="d926c3f8dc092df14da7a9f64a70b579e7e52984" translate="yes" xml:space="preserve">
          <source>_base/browser</source>
          <target state="translated">_base/browser</target>
        </trans-unit>
        <trans-unit id="6053da90c8f028917637b4a33e00d8d2ed984c3b" translate="yes" xml:space="preserve">
          <source>_base/config</source>
          <target state="translated">_base/config</target>
        </trans-unit>
        <trans-unit id="c465d44f5efb7b9ffb94f405607626c8f4a7778c" translate="yes" xml:space="preserve">
          <source>_base/connect</source>
          <target state="translated">_base/connect</target>
        </trans-unit>
        <trans-unit id="e00f2a78ff546aac84c04a273cd4fa163209349c" translate="yes" xml:space="preserve">
          <source>_base/declare</source>
          <target state="translated">_base/declare</target>
        </trans-unit>
        <trans-unit id="c3a8243d8ec2128e7a67e7085b2717681542d02a" translate="yes" xml:space="preserve">
          <source>_base/event</source>
          <target state="translated">_base/event</target>
        </trans-unit>
        <trans-unit id="320eaf70d8d95f7b01d166cb91096e2c236d2826" translate="yes" xml:space="preserve">
          <source>_base/fx</source>
          <target state="translated">_base/fx</target>
        </trans-unit>
        <trans-unit id="e6d45439867dca805b5401335ec04fc1bb1ecc48" translate="yes" xml:space="preserve">
          <source>_base/html</source>
          <target state="translated">_base/html</target>
        </trans-unit>
        <trans-unit id="242071ea77bfb4fb01aa8ce07ab35ddf2f9cae94" translate="yes" xml:space="preserve">
          <source>_base/json</source>
          <target state="translated">_base/json</target>
        </trans-unit>
        <trans-unit id="d849ecf53d795c3817baddf8464e5d7bab042cf3" translate="yes" xml:space="preserve">
          <source>_base/kernel</source>
          <target state="translated">_base/kernel</target>
        </trans-unit>
        <trans-unit id="9f876afc9fb4976911b4281df6d1417da3004583" translate="yes" xml:space="preserve">
          <source>_base/kernel#back</source>
          <target state="translated">_base/kernel#back</target>
        </trans-unit>
        <trans-unit id="f74e17c1cd2b3751a101085974fe90e7dd9e936f" translate="yes" xml:space="preserve">
          <source>_base/kernel#cldr</source>
          <target state="translated">_base/kernel#cldr</target>
        </trans-unit>
        <trans-unit id="ec3eb76ba97e95d82a9c519baaf4fd7eda54a318" translate="yes" xml:space="preserve">
          <source>_base/kernel#data</source>
          <target state="translated">_base/kernel#data</target>
        </trans-unit>
        <trans-unit id="1dd5c8a098d8bb873b61088d6b0cc72de2029c16" translate="yes" xml:space="preserve">
          <source>_base/kernel#date</source>
          <target state="translated">_base/kernel#date</target>
        </trans-unit>
        <trans-unit id="3956fc1dd748d2bca625e343e079717d1ab6f644" translate="yes" xml:space="preserve">
          <source>_base/kernel#dnd</source>
          <target state="translated">_base/kernel#dnd</target>
        </trans-unit>
        <trans-unit id="c05dbe0401d8180c604beb416dc3c13713955a8e" translate="yes" xml:space="preserve">
          <source>_base/kernel#doc</source>
          <target state="translated">_base/kernel#doc</target>
        </trans-unit>
        <trans-unit id="19d8cb273627125e46803bdcbd956cfbb35c40ed" translate="yes" xml:space="preserve">
          <source>_base/kernel#fx</source>
          <target state="translated">_base/kernel#fx</target>
        </trans-unit>
        <trans-unit id="085e5900c7143d68594d0431821c6169e7e9f728" translate="yes" xml:space="preserve">
          <source>_base/kernel#html</source>
          <target state="translated">_base/kernel#html</target>
        </trans-unit>
        <trans-unit id="57a05e30f0cc73e3e1c2201d6d4126656bcdf843" translate="yes" xml:space="preserve">
          <source>_base/kernel#i18n</source>
          <target state="translated">_base/kernel#i18n</target>
        </trans-unit>
        <trans-unit id="5370187cee919200746c5a6330a47ddfe0f1a991" translate="yes" xml:space="preserve">
          <source>_base/kernel#io</source>
          <target state="translated">_base/kernel#io</target>
        </trans-unit>
        <trans-unit id="783ccd511615e7d1680b0ddecc91e632843fd164" translate="yes" xml:space="preserve">
          <source>_base/kernel#isFF</source>
          <target state="translated">_base/kernel#isFF</target>
        </trans-unit>
        <trans-unit id="b48b2278f01240b4521b749eed5ec646828b99a1" translate="yes" xml:space="preserve">
          <source>_base/kernel#keys</source>
          <target state="translated">_base/kernel#keys</target>
        </trans-unit>
        <trans-unit id="525609bfa75cf3460cde4859692b6a3d772a96c2" translate="yes" xml:space="preserve">
          <source>_base/kernel#rpc</source>
          <target state="translated">_base/kernel#rpc</target>
        </trans-unit>
        <trans-unit id="26cff987a03d16808b18f780d487c0038fc495c8" translate="yes" xml:space="preserve">
          <source>_base/kernel.back</source>
          <target state="translated">_base/kernel.back</target>
        </trans-unit>
        <trans-unit id="a3db1d23c327024f7bfa8948cb2eaad766b855d2" translate="yes" xml:space="preserve">
          <source>_base/kernel.cldr</source>
          <target state="translated">_base/kernel.cldr</target>
        </trans-unit>
        <trans-unit id="a6dc061e40aa7d29d92b878380721957f4120e2e" translate="yes" xml:space="preserve">
          <source>_base/kernel.data</source>
          <target state="translated">_base/kernel.data</target>
        </trans-unit>
        <trans-unit id="1c1a6dc56f519d6a36dc7bc52e4a5a7eba2e20b9" translate="yes" xml:space="preserve">
          <source>_base/kernel.date</source>
          <target state="translated">_base/kernel.date</target>
        </trans-unit>
        <trans-unit id="990674e53ff26de0c2b4e07425c295bb9b46c3fb" translate="yes" xml:space="preserve">
          <source>_base/kernel.dnd</source>
          <target state="translated">_base/kernel.dnd</target>
        </trans-unit>
        <trans-unit id="6e3e8ab362af4d809bacd42e07b6a4f2c14c0189" translate="yes" xml:space="preserve">
          <source>_base/kernel.doc</source>
          <target state="translated">_base/kernel.doc</target>
        </trans-unit>
        <trans-unit id="f083ce58373ce7eee40945711f72eb9be9006819" translate="yes" xml:space="preserve">
          <source>_base/kernel.fx</source>
          <target state="translated">_base/kernel.fx</target>
        </trans-unit>
        <trans-unit id="edadbb63b73860e59dcb35f2966805c10f474ca9" translate="yes" xml:space="preserve">
          <source>_base/kernel.i18n</source>
          <target state="translated">_base/kernel.i18n</target>
        </trans-unit>
        <trans-unit id="001e2600f3e62240d43f296d591219378a3d8f6d" translate="yes" xml:space="preserve">
          <source>_base/kernel.io</source>
          <target state="translated">_base/kernel.io</target>
        </trans-unit>
        <trans-unit id="eb2baf580ad8b0a77dc10541144a001ab251552c" translate="yes" xml:space="preserve">
          <source>_base/kernel.keys</source>
          <target state="translated">_base/kernel.keys</target>
        </trans-unit>
        <trans-unit id="a4ea82977e0c674c9e748de3b9715df293dfb29c" translate="yes" xml:space="preserve">
          <source>_base/kernel.rpc</source>
          <target state="translated">_base/kernel.rpc</target>
        </trans-unit>
        <trans-unit id="de2dce8e3b948c38ffb5f7510670207a1734ef9f" translate="yes" xml:space="preserve">
          <source>_base/lang</source>
          <target state="translated">_base/lang</target>
        </trans-unit>
        <trans-unit id="83241fe35bf337191134dcf58015781a907ca70d" translate="yes" xml:space="preserve">
          <source>_base/loader</source>
          <target state="translated">_base/loader</target>
        </trans-unit>
        <trans-unit id="425ca17559b62d062c89ea30b2af9e152ad336e9" translate="yes" xml:space="preserve">
          <source>_base/query</source>
          <target state="translated">_base/query</target>
        </trans-unit>
        <trans-unit id="1e2982c729655e0fa4164fe345d2b8e9860d83f4" translate="yes" xml:space="preserve">
          <source>_base/sniff</source>
          <target state="translated">_base/sniff</target>
        </trans-unit>
        <trans-unit id="ea7a312442e6376888bf35ed30808e8c6900980e" translate="yes" xml:space="preserve">
          <source>_base/unload</source>
          <target state="translated">_base/unload</target>
        </trans-unit>
        <trans-unit id="d02481dd4e9ee374249b225775a2a13ce1df6afe" translate="yes" xml:space="preserve">
          <source>_base/url</source>
          <target state="translated">_base/url</target>
        </trans-unit>
        <trans-unit id="268a2a1509888775d957c14cda86111176412e2a" translate="yes" xml:space="preserve">
          <source>_base/url#host</source>
          <target state="translated">_base/url#host</target>
        </trans-unit>
        <trans-unit id="b36059080182accb40329401d5a2a223074c31fb" translate="yes" xml:space="preserve">
          <source>_base/url#path</source>
          <target state="translated">_base/url#path</target>
        </trans-unit>
        <trans-unit id="f972888b146387c00beb8f8fbb2bdb3b5673fa0b" translate="yes" xml:space="preserve">
          <source>_base/url#port</source>
          <target state="translated">_base/url#port</target>
        </trans-unit>
        <trans-unit id="4c59a33d7df4de1610c59896c7096ae22a0e8ffb" translate="yes" xml:space="preserve">
          <source>_base/url#uri</source>
          <target state="translated">_base/url#uri</target>
        </trans-unit>
        <trans-unit id="0c039507ded4d3f9dba7bd4803e0d108705da7d9" translate="yes" xml:space="preserve">
          <source>_base/url#user</source>
          <target state="translated">_base/url#user</target>
        </trans-unit>
        <trans-unit id="71d1ecfb7525cbbd139504877ba82c592e5a63b2" translate="yes" xml:space="preserve">
          <source>_base/url.port</source>
          <target state="translated">_base/url.port</target>
        </trans-unit>
        <trans-unit id="60ec50a8fa565da4abc6dd646e24ebbdd574076e" translate="yes" xml:space="preserve">
          <source>_base/url.user</source>
          <target state="translated">_base/url.user</target>
        </trans-unit>
        <trans-unit id="65aaaccfa248522424ecd4e28b7fcd5b851e3f15" translate="yes" xml:space="preserve">
          <source>_base/window</source>
          <target state="translated">_base/window</target>
        </trans-unit>
        <trans-unit id="98d8dc24c7bb254e872fd0c2a923bf94c5a0f086" translate="yes" xml:space="preserve">
          <source>_base/window#doc</source>
          <target state="translated">_base/window#doc</target>
        </trans-unit>
        <trans-unit id="0d8f1fd870101b4c30ce04d32d53e41af43db772" translate="yes" xml:space="preserve">
          <source>_base/window.doc</source>
          <target state="translated">_base/window.doc</target>
        </trans-unit>
        <trans-unit id="7b7f571bbd8116622b712b6f813fd1bc3ce0eeae" translate="yes" xml:space="preserve">
          <source>_base/xhr</source>
          <target state="translated">_base/xhr</target>
        </trans-unit>
        <trans-unit id="b8d6c12abdaeb37322aedd99016f5c0b6f6ddcef" translate="yes" xml:space="preserve">
          <source>_deleting</source>
          <target state="translated">_deleting</target>
        </trans-unit>
        <trans-unit id="262cdf8b4402b8e4ac4180c3df6acb7eef7770d5" translate="yes" xml:space="preserve">
          <source>_firebug</source>
          <target state="translated">_firebug</target>
        </trans-unit>
        <trans-unit id="938f4ff701c1db44bf722988ab43ec2eae3b91d7" translate="yes" xml:space="preserve">
          <source>_iframe</source>
          <target state="translated">_iframe</target>
        </trans-unit>
        <trans-unit id="86f7e437faa5a7fce15d1ddcb9eaeaea377667b8" translate="yes" xml:space="preserve">
          <source>a</source>
          <target state="translated">a</target>
        </trans-unit>
        <trans-unit id="3691889abd1eaf6de9dc7e02260d669a8bfd0f71" translate="yes" xml:space="preserve">
          <source>a CSS selector.</source>
          <target state="translated">CSS 선택기</target>
        </trans-unit>
        <trans-unit id="e7d9e2ffa10ce01d46716dfd73c87bb2046be01c" translate="yes" xml:space="preserve">
          <source>a Container object, which knows when mouse hovers over it, and over which element it hovers</source>
          <target state="translated">마우스로 마우스를 가져가는 시점과 마우스로 가리킬 요소를 파악하는 컨테이너 객체</target>
        </trans-unit>
        <trans-unit id="802f76c9d59f195efafc14051ff7144ec358315a" translate="yes" xml:space="preserve">
          <source>a DOM node or a query string or a query result. Represents the nodes to be adopted relative to the first element of this NodeList.</source>
          <target state="translated">DOM 노드 또는 쿼리 문자열 또는 쿼리 결과. 이 NodeList의 첫 번째 요소와 관련하여 채택 할 노드를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a65203d309daaa6ec7634de92b27edfafc9115bb" translate="yes" xml:space="preserve">
          <source>a DOM node or the id of a node to animate CSS properties on</source>
          <target state="translated">CSS 속성에 애니메이션을 적용하기위한 DOM 노드 또는 노드의 ID</target>
        </trans-unit>
        <trans-unit id="5d1c635dda19ae404718043f1a6699edb1955696" translate="yes" xml:space="preserve">
          <source>a DnD manager object</source>
          <target state="translated">DnD 매니저 객체</target>
        </trans-unit>
        <trans-unit id="0d8181ad4b69dc7d8305db524c130b1c459beb6f" translate="yes" xml:space="preserve">
          <source>a Selector object, which knows how to select its children</source>
          <target state="translated">자식을 선택하는 방법을 알고있는 Selector 객체</target>
        </trans-unit>
        <trans-unit id="a68cdfbc88b754ed8752415e30b24959492c2c53" translate="yes" xml:space="preserve">
          <source>a Source object, which can be used as a DnD source, or a DnD target</source>
          <target state="translated">DnD 소스 또는 DnD 대상으로 사용할 수있는 Source 객체</target>
        </trans-unit>
        <trans-unit id="935007b349ac9695c39ca34c88606740b5721b4e" translate="yes" xml:space="preserve">
          <source>a String with special characters to be left unescaped</source>
          <target state="translated">이스케이프 처리되지 않은 특수 문자가있는 문자열</target>
        </trans-unit>
        <trans-unit id="0455e3946632cc9f930b576453d863f18743082f" translate="yes" xml:space="preserve">
          <source>a Target object, which can be used as a DnD target</source>
          <target state="translated">DnD 대상으로 사용할 수있는 대상 개체</target>
        </trans-unit>
        <trans-unit id="186601674a49150f1d22e8e1f85ac8b04f0894c4" translate="yes" xml:space="preserve">
          <source>a cloned set of the original nodes.</source>
          <target state="translated">복제 된 원래 노드 세트</target>
        </trans-unit>
        <trans-unit id="6951ee7c584989462be389fa59c60b00e3fa18d4" translate="yes" xml:space="preserve">
          <source>a constructor of custom Mover</source>
          <target state="translated">커스텀 Mover의 생성자</target>
        </trans-unit>
        <trans-unit id="880ae221ab634512638b68bd758f15a537b9c232" translate="yes" xml:space="preserve">
          <source>a copy of the HTML content is added to each item in the list, with an optional position argument. If no position argument is provided, the content is appended to the end of each item.</source>
          <target state="translated">선택적 위치 인수와 함께 HTML 컨텐츠의 사본이 목록의 각 항목에 추가됩니다. 위치 인수가 제공되지 않으면 내용이 각 항목의 끝에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="96e35e5677c99418337a1a74e750be9fcdcbaf50" translate="yes" xml:space="preserve">
          <source>a creator function, which takes a data item, and returns an object like that: {node: newNode, data: usedData, type: arrayOfStrings}</source>
          <target state="translated">데이터 항목을 가져 와서 {node : newNode, data : usedData, type : arrayOfStrings}와 같은 객체를 반환하는 생성자 함수</target>
        </trans-unit>
        <trans-unit id="d644128e5981a7f4511285dc24559f5cfc28d5e3" translate="yes" xml:space="preserve">
          <source>a custom serializer for an objects of a particular class:</source>
          <target state="translated">특정 클래스의 객체를위한 커스텀 시리얼 라이저 :</target>
        </trans-unit>
        <trans-unit id="ac9fd272c2cae964dcf7c980ba1ec9b3ae40a5ad" translate="yes" xml:space="preserve">
          <source>a dictionary of parameters</source>
          <target state="translated">매개 변수 사전</target>
        </trans-unit>
        <trans-unit id="d2c893e94a9ca7726846752cf870532faef82d0c" translate="yes" xml:space="preserve">
          <source>a function is invoked with three arguments, (item, index, array), and returns a value</source>
          <target state="translated">함수는 세 개의 인수 (항목, 색인, 배열)로 호출되며 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="08e3dbb2009708c7f53674d43e79470ff2356801" translate="yes" xml:space="preserve">
          <source>a function is invoked with three arguments: item, index, and array and returns true if the condition is met.</source>
          <target state="translated">item, index 및 array의 세 가지 인수를 사용하여 함수를 호출하고 조건이 충족되면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="634737eb6686f7abc9e3348abd7b9f4da19a390a" translate="yes" xml:space="preserve">
          <source>a function that arguments are passed to from the adapter's match() function. The check function should return true if the given arguments are appropriate for the wrap function.</source>
          <target state="translated">어댑터의 match () 함수에서 인수를 전달하는 함수 주어진 인수가 랩 함수에 적합한 경우 점검 함수는 true를 리턴해야합니다.</target>
        </trans-unit>
        <trans-unit id="f846286dfcf81defceb99ca7fe0fd7fd82077e52" translate="yes" xml:space="preserve">
          <source>a function that is invoked with three arguments (item, index, array). The return of this function is expected to be a boolean which determines whether the passed-in item will be included in the returned array.</source>
          <target state="translated">세 개의 인수 (항목, 색인, 배열)로 호출되는 함수 이 함수의 반환은 전달 된 항목이 반환 된 배열에 포함 될지 여부를 결정하는 부울 일 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="1ae208dbabdfe888ef6eccb04957b57d09f52bd4" translate="yes" xml:space="preserve">
          <source>a function to process all parameters before substitution takes place, e.g. mylib.encodeXML</source>
          <target state="translated">대체가 발생하기 전에 모든 매개 변수를 처리하는 함수 (예 : mylib.encodeXML)</target>
        </trans-unit>
        <trans-unit id="0868280ca6d810ecf818c6d836ee45fe6c03ff06" translate="yes" xml:space="preserve">
          <source>a handler for mousemove and touchmove events, which scrolls the first available Dom element, it falls back to exports.autoScroll()</source>
          <target state="translated">사용 가능한 첫 번째 Dom 요소를 스크롤하는 mousemove 및 touchmove 이벤트 처리기, exports.autoScroll ()</target>
        </trans-unit>
        <trans-unit id="02c6b756a7675b1acef3e9e94f2e4a08dcb9b097" translate="yes" xml:space="preserve">
          <source>a handler for mousemove and touchmove events, which scrolls the window, if necessary</source>
          <target state="translated">필요한 경우 창을 스크롤하는 mousemove 및 touchmove 이벤트 처리기</target>
        </trans-unit>
        <trans-unit id="6bccc7971a413aa7f9162893729737c80a52f522" translate="yes" xml:space="preserve">
          <source>a kwArgs options object, see parse() for details</source>
          <target state="translated">kwArgs 옵션 객체. 자세한 내용은 parse ()를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4f6195e8f844efe3a575e48e49040b57228213c9" translate="yes" xml:space="preserve">
          <source>a list of data items, which should be processed by the creator function</source>
          <target state="translated">작성자 기능으로 처리해야하는 데이터 항목 목록</target>
        </trans-unit>
        <trans-unit id="77f81169ffd71011967eb73a450ef75ef8ea6d86" translate="yes" xml:space="preserve">
          <source>a literal, an item, null, or undefined (never an array)</source>
          <target state="translated">리터럴, 항목, 널 또는 정의되지 않음 (배열이 아님)</target>
        </trans-unit>
        <trans-unit id="5bdc09c8a443517af8c886eefd2d6797c39adbd2" translate="yes" xml:space="preserve">
          <source>a mouse event, which started the move; only pageX and pageY properties are used</source>
          <target state="translated">이동을 시작한 마우스 이벤트; pageX 및 pageY 속성 만 사용됩니다</target>
        </trans-unit>
        <trans-unit id="e39685c7d29e0285af7a5113bcb6d963e526d4a3" translate="yes" xml:space="preserve">
          <source>a node (or node's id) to be moved</source>
          <target state="translated">이동할 노드 (또는 노드의 ID)</target>
        </trans-unit>
        <trans-unit id="941478c1c84286c0ad6fae66e75411e6cb88a184" translate="yes" xml:space="preserve">
          <source>a reference to a DOM node or an id.</source>
          <target state="translated">DOM 노드 또는 ID에 대한 참조</target>
        </trans-unit>
        <trans-unit id="da777eca6c1281c2c4d5c0d48a44653d96d91b6b" translate="yes" xml:space="preserve">
          <source>a source that syncs its DnD nodes by default</source>
          <target state="translated">기본적으로 DnD 노드를 동기화하는 소스</target>
        </trans-unit>
        <trans-unit id="dc6e0f47099b8b3e2d96ed7d4cfe1a1fe7cc7287" translate="yes" xml:space="preserve">
          <source>a string literal of a JSON item, for instance: &lt;code&gt;'{ &quot;foo&quot;: [ &quot;bar&quot;, 1, { &quot;baz&quot;: &quot;thud&quot; } ] }'&lt;/code&gt;</source>
          <target state="translated">JSON 항목의 문자열 리터럴 (예 : &lt;code&gt;'{ &quot;foo&quot;: [ &quot;bar&quot;, 1, { &quot;baz&quot;: &quot;thud&quot; } ] }'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="800bf7bf2b0074ad9c106878976fd3ee9610423d" translate="yes" xml:space="preserve">
          <source>a string literal of a JavaScript expression, for instance: &lt;code&gt;'{ &quot;foo&quot;: [ &quot;bar&quot;, 1, { &quot;baz&quot;: &quot;thud&quot; } ] }'&lt;/code&gt;</source>
          <target state="translated">JavaScript 표현식의 문자열 리터럴 (예 : &lt;code&gt;'{ &quot;foo&quot;: [ &quot;bar&quot;, 1, { &quot;baz&quot;: &quot;thud&quot; } ] }'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1cbfdd986275f04c3d29d58421b2bd34aa45b974" translate="yes" xml:space="preserve">
          <source>a string with expressions in the form &lt;code&gt;${key}&lt;/code&gt; to be replaced or &lt;code&gt;${key:format}&lt;/code&gt; which specifies a format function. keys are case-sensitive.</source>
          <target state="translated">대체 할 &lt;code&gt;${key}&lt;/code&gt; 형식의 표현식이 포함 된 문자열 또는 형식 함수를 지정하는 &lt;code&gt;${key:format}&lt;/code&gt; 키는 대소 문자를 구분합니다.</target>
        </trans-unit>
        <trans-unit id="d402f1de194cb5e22e33b3960bf4617ef996a84b" translate="yes" xml:space="preserve">
          <source>a way to identify this matcher.</source>
          <target state="translated">이 매처를 식별하는 방법.</target>
        </trans-unit>
        <trans-unit id="da4dbfbc4fdc56237451cf5e9f9933b2b64f1ba6" translate="yes" xml:space="preserve">
          <source>absolute</source>
          <target state="translated">absolute</target>
        </trans-unit>
        <trans-unit id="5fb801f2f30ac5b8a6671f1d04a959a51fc1671e" translate="yes" xml:space="preserve">
          <source>accept</source>
          <target state="translated">accept</target>
        </trans-unit>
        <trans-unit id="3a1306b78628f10f0a16f0b021de3b2b0ee60895" translate="yes" xml:space="preserve">
          <source>accepts</source>
          <target state="translated">accepts</target>
        </trans-unit>
        <trans-unit id="f98ddcdc84d13e594efd19233ed5c4159845530f" translate="yes" xml:space="preserve">
          <source>acme supports a rich set of CSS3 selectors, including:</source>
          <target state="translated">acme는 다음을 포함한 다양한 CSS3 선택기 세트를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="fd441961e54ae07357b055c14907fade11b6af5e" translate="yes" xml:space="preserve">
          <source>acme: This is the default engine used by Dojo base, and will ensure that the full Acme engine is always loaded.</source>
          <target state="translated">acme : Dojo 기본에서 사용하는 기본 엔진이며 전체 Acme 엔진이 항상로드되도록합니다.</target>
        </trans-unit>
        <trans-unit id="6d319e8d36d7a31719889347c061e6983e33d43c" translate="yes" xml:space="preserve">
          <source>acme&lt;code&gt;(query,root);&lt;/code&gt;</source>
          <target state="translated">acme&lt;code&gt;(query,root);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="40da323c02d75c229fbe6c001d29ac25bd4ee62d" translate="yes" xml:space="preserve">
          <source>add a clone of a DOM node to the end of every element in the list, removing it from its existing parent.</source>
          <target state="translated">목록의 모든 요소 끝에 DOM 노드의 복제본을 추가하여 기존 부모에서 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="61dad010392a4c8a32a6470fb1d3c3b019281535" translate="yes" xml:space="preserve">
          <source>add a node, NodeList or some HTML as a string to every item in the list. Returns the original list.</source>
          <target state="translated">노드, NodeList 또는 일부 HTML을 목록의 모든 항목에 문자열로 추가하십시오. 원본 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d7ca093aaf319a5a7a54a57f323c71dae14d3672" translate="yes" xml:space="preserve">
          <source>add an onclick handler to every button on the page</source>
          <target state="translated">페이지의 모든 버튼에 클릭 핸들러를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="41804555b6b2f7874d9d366074e55ffc24b7c8bd" translate="yes" xml:space="preserve">
          <source>add an onclick handler to every submit button in the document which causes the form to be sent via Ajax instead:</source>
          <target state="translated">문서의 모든 제출 버튼에 onclick 핸들러를 추가하면 대신 Ajax를 통해 양식이 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="23ca349873592428c53f897a4d3587764e314912" translate="yes" xml:space="preserve">
          <source>add something to the front of each element that has a &quot;thinger&quot; property:</source>
          <target state="translated">&quot;thinger&quot;속성이있는 각 요소 앞에 무언가를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="8890304a5e533df5f18183397b27a87c3f90fa7d" translate="yes" xml:space="preserve">
          <source>addCallback(handler)</source>
          <target state="translated">addCallback(handler)</target>
        </trans-unit>
        <trans-unit id="5be10deb4bba1f28de6753fb7c88529f797062a3" translate="yes" xml:space="preserve">
          <source>addClassStr</source>
          <target state="translated">addClassStr</target>
        </trans-unit>
        <trans-unit id="770e4379bb8e00f297802065a9584a1acf9c2048" translate="yes" xml:space="preserve">
          <source>addErrback(handler)</source>
          <target state="translated">addErrback(handler)</target>
        </trans-unit>
        <trans-unit id="56e0a46c7d84840ba411eea47524727561509868" translate="yes" xml:space="preserve">
          <source>addListener</source>
          <target state="translated">addListener</target>
        </trans-unit>
        <trans-unit id="762dda87ecde188c1d018b7a6675f8bab1315f25" translate="yes" xml:space="preserve">
          <source>addSelected</source>
          <target state="translated">addSelected</target>
        </trans-unit>
        <trans-unit id="ebe8af197f0a077efe3803b9bc97804713100cb2" translate="yes" xml:space="preserve">
          <source>adds a header before each element of the list</source>
          <target state="translated">목록의 각 요소 앞에 헤더를 추가합니다</target>
        </trans-unit>
        <trans-unit id="379632c3caaef2f1c9e5949b0d1ee6c5e3b4f775" translate="yes" xml:space="preserve">
          <source>adds a new item to the store at the specified point. Takes two parameters, data, and options.</source>
          <target state="translated">지정된 지점에서 상점에 새 항목을 추가합니다. 두 개의 매개 변수, 데이터 및 옵션을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="5fea23a2437fbc0ab4ab11c49bbf7678fd6b0384" translate="yes" xml:space="preserve">
          <source>adds a state object (args) to the history list.</source>
          <target state="translated">히스토리리스트에 상태 오브젝트 (args)를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="16a0bff18dda72e1590d1314d611437f7ab19c45" translate="yes" xml:space="preserve">
          <source>adds an object to the list of dirty objects. This object contains a reference to the object itself as well as a cloned and trimmed version of old object for use with revert.</source>
          <target state="translated">더티 개체 목록에 개체를 추가합니다. 이 객체에는 객체 자체에 대한 참조뿐만 아니라 되돌리기와 함께 사용하기 위해 복제 및 트리밍 된 이전 객체 버전이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e18b7c80d4bf4d44aa94d2c998f94b15bc6941eb" translate="yes" xml:space="preserve">
          <source>adds group match to expression</source>
          <target state="translated">식에 그룹 일치를 추가합니다</target>
        </trans-unit>
        <trans-unit id="024eaf9fdc3b8710f0e0ec5ca7f9dc12437e4337" translate="yes" xml:space="preserve">
          <source>adds padding at the end if true, otherwise pads at start</source>
          <target state="translated">참이면 끝에 패딩을 추가하고 그렇지 않으면 시작에 패딩을 추가합니다</target>
        </trans-unit>
        <trans-unit id="d66483aa5fad57443c3363838c59543d3191fa87" translate="yes" xml:space="preserve">
          <source>adds the specified class to every node in the list</source>
          <target state="translated">지정된 클래스를 목록의 모든 노드에 추가</target>
        </trans-unit>
        <trans-unit id="8015f1d1fd4aee94042b9fa98618763b6cf10f72" translate="yes" xml:space="preserve">
          <source>advice</source>
          <target state="translated">advice</target>
        </trans-unit>
        <trans-unit id="405906c9d5be6ae5393ca65fb0e7c38e0d585ecb" translate="yes" xml:space="preserve">
          <source>after</source>
          <target state="translated">after</target>
        </trans-unit>
        <trans-unit id="4215a88265840e0a2c462d84cabd99807a299d93" translate="yes" xml:space="preserve">
          <source>afterOnLoad</source>
          <target state="translated">afterOnLoad</target>
        </trans-unit>
        <trans-unit id="2c590e74104bdfd9d94a33ff454679d4dccb7411" translate="yes" xml:space="preserve">
          <source>aliceblue</source>
          <target state="translated">aliceblue</target>
        </trans-unit>
        <trans-unit id="5342aaeb2e14f8c07601fb456ac1abad37fd7092" translate="yes" xml:space="preserve">
          <source>all &lt;code&gt;::&lt;/code&gt; pseduo-element selectors</source>
          <target state="translated">모든 &lt;code&gt;::&lt;/code&gt; pseduo 요소 선택기</target>
        </trans-unit>
        <trans-unit id="07d7008ebe47ad8078290100035b5cb97343b419" translate="yes" xml:space="preserve">
          <source>all immediate child elements for the nodes in this dojo/NodeList.</source>
          <target state="translated">이 dojo / NodeList의 노드에 대한 모든 직계 자식 요소</target>
        </trans-unit>
        <trans-unit id="0c9295e7f7bb645eab7818fa4776a049eed56e4e" translate="yes" xml:space="preserve">
          <source>all new nodes will be added to selected items, if true, no selection change otherwise</source>
          <target state="translated">모든 새 노드는 선택한 항목에 추가되며, true 인 경우 선택 변경이 없습니다.</target>
        </trans-unit>
        <trans-unit id="658ac536240c5ee922ae0a6d5ad2571f854190d8" translate="yes" xml:space="preserve">
          <source>all parent elements for nodes in this dojo/NodeList.</source>
          <target state="translated">이 dojo / NodeList의 노드에 대한 모든 상위 요소</target>
        </trans-unit>
        <trans-unit id="2a58171eab3e3103bf32830020f8ac570771f2ca" translate="yes" xml:space="preserve">
          <source>all sibling elements for nodes in this dojo/NodeList.</source>
          <target state="translated">이 dojo / NodeList의 노드에 대한 모든 형제 요소</target>
        </trans-unit>
        <trans-unit id="9d4f5bb9a6a2addcfa777db72ebc68bbad68bee4" translate="yes" xml:space="preserve">
          <source>all sibling elements that come after the nodes in this dojo/NodeList.</source>
          <target state="translated">이 dojo / NodeList에서 노드 뒤에 오는 모든 형제 요소</target>
        </trans-unit>
        <trans-unit id="36ed51bddcb62d7ad9c52220f1ab81d6112e61cb" translate="yes" xml:space="preserve">
          <source>all sibling elements that come before the nodes in this dojo/NodeList.</source>
          <target state="translated">이 dojo / NodeList에서 노드 앞에 오는 모든 형제 요소</target>
        </trans-unit>
        <trans-unit id="d5372457826416fef369791178e927c33eab8bd4" translate="yes" xml:space="preserve">
          <source>all visual and state selectors:</source>
          <target state="translated">모든 시각적 및 상태 선택기 :</target>
        </trans-unit>
        <trans-unit id="644b55ebadbc585f9319736da751d3ec0dd00a38" translate="yes" xml:space="preserve">
          <source>all&lt;code&gt;(objectOrArray);&lt;/code&gt;</source>
          <target state="translated">all&lt;code&gt;(objectOrArray);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c2364dcfc89e7570b57a16050e689a247bc3a08f" translate="yes" xml:space="preserve">
          <source>allowNested</source>
          <target state="translated">allowNested</target>
        </trans-unit>
        <trans-unit id="abe2bd6b22542b9ccffd848da12aae44061d7025" translate="yes" xml:space="preserve">
          <source>allows setting the innerHTML of each node in the NodeList, if there is a value passed in, otherwise, reads the innerHTML value of the first node.</source>
          <target state="translated">전달 된 값이 있으면 NodeList에있는 각 노드의 innerHTML을 설정할 수 있습니다. 그렇지 않으면 첫 번째 노드의 innerHTML 값을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="e5ca8e8924dd6750814027925c385cc24050e878" translate="yes" xml:space="preserve">
          <source>allows setting the text value of each node in the NodeList, if there is a value passed in, otherwise, returns the text value for all the nodes in the NodeList in one string.</source>
          <target state="translated">전달 된 값이 있으면 NodeList에있는 각 노드의 텍스트 값을 설정할 수 있습니다. 그렇지 않으면 NodeList에있는 모든 노드의 텍스트 값을 하나의 문자열로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e2c07e16e7467f13c2115f82ac14201b269efe3f" translate="yes" xml:space="preserve">
          <source>almost anything</source>
          <target state="translated">거의 모든</target>
        </trans-unit>
        <trans-unit id="325562c769da3f80d0e63bb56514bc2e2723c9b5" translate="yes" xml:space="preserve">
          <source>alt</source>
          <target state="translated">alt</target>
        </trans-unit>
        <trans-unit id="96e8155732e8324ae26f64d4516eb6fe696ac84f" translate="yes" xml:space="preserve">
          <source>am</source>
          <target state="translated">am</target>
        </trans-unit>
        <trans-unit id="6848d51a0629023486e727c44e7becd72d540ffc" translate="yes" xml:space="preserve">
          <source>am (String):</source>
          <target state="translated">오전 (문자열) :</target>
        </trans-unit>
        <trans-unit id="9cb6ff12fb81d5cd585d45ce555565a410036da6" translate="yes" xml:space="preserve">
          <source>amount</source>
          <target state="translated">amount</target>
        </trans-unit>
        <trans-unit id="7b3f65e3ad91858e5ce38ba79f9aec63cf6520d3" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;http://en.wikipedia.org/wiki/ISO_4217&quot;&gt;ISO 4217&lt;/a&gt; currency code</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/ISO_4217&quot;&gt;ISO 4217&lt;/a&gt; 통화 코드</target>
        </trans-unit>
        <trans-unit id="28f2b1f9d745074a3372c61ccf5f8a649457b443" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;http://en.wikipedia.org/wiki/ISO_4217&quot;&gt;ISO4217&lt;/a&gt; currency code, a three letter sequence like &quot;USD&quot;. For use with dojo.currency only.</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/ISO_4217&quot;&gt;ISO4217&lt;/a&gt; 통화 코드, &quot;USD&quot;와 같은 세 문자 순서. dojo.currency에만 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1637eee6329444a0f9225da3b62ee1ba2dd1c848" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_4217&quot;&gt;ISO 4217&lt;/a&gt; currency code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="510a3298aa0fa88b0dfc1953f2c75eb88f0afcd4" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_4217&quot;&gt;ISO4217&lt;/a&gt; currency code, a three letter sequence like &quot;USD&quot;. For use with dojo.currency only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf6135e1373123c9223570db14b502b9a101453" translate="yes" xml:space="preserve">
          <source>an Object of anonymous type</source>
          <target state="translated">익명의 객체</target>
        </trans-unit>
        <trans-unit id="9baeb6f360fe8a210c2645b606a12b7aee36a5f0" translate="yes" xml:space="preserve">
          <source>an array that may contain literals and items</source>
          <target state="translated">리터럴과 아이템을 포함 할 수있는 배열</target>
        </trans-unit>
        <trans-unit id="a13d629b7cf894053910a96e66c85817a42328fb" translate="yes" xml:space="preserve">
          <source>an object containing properties to assign to the returned object</source>
          <target state="translated">돌려 주어지는 객체에 할당하는 프로퍼티을 포함한 객체</target>
        </trans-unit>
        <trans-unit id="bcce76147becdbc125de0d3817631def772c7073" translate="yes" xml:space="preserve">
          <source>an object to be serialized. Objects may define their own serialization via a special &quot;&lt;strong&gt;json&lt;/strong&gt;&quot; or &quot;json&quot; function property. If a specialized serializer has been defined, it will be used as a fallback. Note that in 1.6, toJson would serialize undefined, but this no longer supported since it is not supported by native JSON serializer.</source>
          <target state="translated">직렬화 할 객체 객체는 특수한 &quot; &lt;strong&gt;json&lt;/strong&gt; &quot;또는 &quot;json&quot;함수 속성을 통해 자체 직렬화를 정의 할 수 있습니다. 특수화 된 직렬 변환기가 정의 된 경우 대체로 사용됩니다. 1.6에서 toJson은 정의되지 않은 직렬화를 수행하지만 기본 JSON 직렬 변환기에서는 지원되지 않으므로 더 이상 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c4bf51029425a73252f243f8a880cbd2a2056a6c" translate="yes" xml:space="preserve">
          <source>an object which makes a node follow the mouse, or touch-drag on touch devices. Used as a default mover, and as a base class for custom movers.</source>
          <target state="translated">노드가 마우스를 따르거나 터치 장치를 터치 드래그하는 객체. 기본 이동기 및 사용자 정의 이동기의 기본 클래스로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="de9ffc2b63cceaadd3cf3c10c483c48ac5709eeb" translate="yes" xml:space="preserve">
          <source>an object, which makes a node movable</source>
          <target state="translated">노드를 움직일 수있게하는 객체</target>
        </trans-unit>
        <trans-unit id="24c66aec0f22fcb469867c7ddf738691e50c47df" translate="yes" xml:space="preserve">
          <source>an optional object with additional parameters; the rest is passed to the base class</source>
          <target state="translated">추가 매개 변수가있는 선택적 객체; 나머지는 기본 클래스로 전달됩니다</target>
        </trans-unit>
        <trans-unit id="5a21f2d897a70488993c19d9769973600702360d" translate="yes" xml:space="preserve">
          <source>an optional object with parameters</source>
          <target state="translated">매개 변수가있는 선택적 객체</target>
        </trans-unit>
        <trans-unit id="587cf1de4e778922e2ca69b66e2697ce210246b6" translate="yes" xml:space="preserve">
          <source>ancestor</source>
          <target state="translated">ancestor</target>
        </trans-unit>
        <trans-unit id="f06df609aed50661247cc6ec96c1599c193c3ec4" translate="yes" xml:space="preserve">
          <source>anchor</source>
          <target state="translated">anchor</target>
        </trans-unit>
        <trans-unit id="0d748c6d0bf8992c1c0db17987d8da5437450ade" translate="yes" xml:space="preserve">
          <source>and &quot;datetimes&quot; which could be any combination of the above</source>
          <target state="translated">및 위 날짜의 조합 일 수있는 &quot;날짜 시간&quot;</target>
        </trans-unit>
        <trans-unit id="cc72a00bf5f82a31e19586f8d5648eeb9609f807" translate="yes" xml:space="preserve">
          <source>and so on.</source>
          <target state="translated">등등.</target>
        </trans-unit>
        <trans-unit id="84103fee488686273b463914859be3991e298820" translate="yes" xml:space="preserve">
          <source>and then when the user presses the &quot;Next Page&quot; button...</source>
          <target state="translated">그런 다음 사용자가 &quot;다음 페이지&quot;버튼을 누르면 ...</target>
        </trans-unit>
        <trans-unit id="a6bbff3ae402207eb9ea4ffcf050a39557d7e6b9" translate="yes" xml:space="preserve">
          <source>and your modules are located at:</source>
          <target state="translated">모듈은 다음 위치에 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f7f4e9f882f4b1e73420c0f66e3f81e4ef1a1f6" translate="yes" xml:space="preserve">
          <source>animate all elements with the &quot;thigner&quot; class to a width of 500 pixels over half a second</source>
          <target state="translated">&quot;thigner&quot;클래스가있는 모든 요소를 ​​0.5 초에 걸쳐 500 픽셀 너비로 애니메이션</target>
        </trans-unit>
        <trans-unit id="2600a0d627b47b76c6692fa9e794c8671c2ccdc2" translate="yes" xml:space="preserve">
          <source>animations</source>
          <target state="translated">animations</target>
        </trans-unit>
        <trans-unit id="dee1fecc6fd0b96e6da98994748f3c298b0da3e5" translate="yes" xml:space="preserve">
          <source>antiquewhite</source>
          <target state="translated">antiquewhite</target>
        </trans-unit>
        <trans-unit id="c5fe0200d1c7a5139bd18fd22268c4ca8bf45e90" translate="yes" xml:space="preserve">
          <source>any</source>
          <target state="translated">any</target>
        </trans-unit>
        <trans-unit id="61610326d89ee1a69b5bfeb86ff1af961da9ef80" translate="yes" xml:space="preserve">
          <source>any property of this class may be configured via the params object which is mixed-in to the &lt;code&gt;dojo/dnd/Source&lt;/code&gt; instance</source>
          <target state="translated">이 클래스의 모든 속성은 &lt;code&gt;dojo/dnd/Source&lt;/code&gt; 인스턴스에 혼합 된 params 객체를 통해 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8867c88b56e0bfb82cffaf15a66bc8d107d6754a" translate="yes" xml:space="preserve">
          <source>anything</source>
          <target state="translated">anything</target>
        </trans-unit>
        <trans-unit id="a033a528b603fed46f861d4b3542c417b99d41c8" translate="yes" xml:space="preserve">
          <source>api</source>
          <target state="translated">api</target>
        </trans-unit>
        <trans-unit id="3001b6a1ac50e05d4df99533986af51d17282d1b" translate="yes" xml:space="preserve">
          <source>appends content to the end if the position is omitted</source>
          <target state="translated">위치가 생략되면 내용을 끝에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="fff8f7ac19d6576871fd8c17d0c306f7607b0fee" translate="yes" xml:space="preserve">
          <source>appends nodes in this NodeList to the nodes matched by the query passed to appendTo.</source>
          <target state="translated">이 NodeList의 노드를 appendTo에 전달 된 쿼리와 일치하는 노드에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="0eaf18f3fc6c1d5cac178ccf02881a90b8eb564e" translate="yes" xml:space="preserve">
          <source>appends the content to every node in the NodeList.</source>
          <target state="translated">NodeList의 모든 노드에 내용을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="97bb17856ca9e1ff24d84de0110e61b3a65916fd" translate="yes" xml:space="preserve">
          <source>applied if there is a natural order.</source>
          <target state="translated">자연 질서가있는 경우에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="5f08ddee321fe94f301cfa101f8cfc3aca866d90" translate="yes" xml:space="preserve">
          <source>applies callback to each element of arr and returns an Array with the results</source>
          <target state="translated">arr의 각 요소에 콜백을 적용하고 결과와 함께 Array를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="df79e7f58e6d4b264777230e8c135ba672010f81" translate="yes" xml:space="preserve">
          <source>apply() is called once automatically by &lt;code&gt;dojo.addOnLoad&lt;/code&gt;, so registering behaviors with &lt;a href=&quot;behavior#add&quot;&gt;dojo/behavior.add()&lt;/a&gt; before the DOM is ready is acceptable, provided the dojo.behavior module is ready.</source>
          <target state="translated">apply ()는 &lt;code&gt;dojo.addOnLoad&lt;/code&gt; 에 의해 자동으로 한 번 호출 되므로 dojo.behavior 모듈이 준비된 경우 DOM이 준비되기 전에 &lt;a href=&quot;behavior#add&quot;&gt;dojo / behavior.add ()로&lt;/a&gt; 동작을 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="66a6d5d94fb47f2ef2a016ae65996e8ebb737df1" translate="yes" xml:space="preserve">
          <source>aqua</source>
          <target state="translated">aqua</target>
        </trans-unit>
        <trans-unit id="f364840671b5cc8009a9b6dcd471a65c4e26bf29" translate="yes" xml:space="preserve">
          <source>aquamarine</source>
          <target state="translated">aquamarine</target>
        </trans-unit>
        <trans-unit id="dc9c9c70622a5b7f25705ba5ffc6c79a4a1d856c" translate="yes" xml:space="preserve">
          <source>are written using &quot;mixed case&quot;, as the hyphen is illegal as an object key.</source>
          <target state="translated">하이픈이 객체 키로 유효하지 않으므로 &quot;대소 문자 혼합&quot;을 사용하여 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="699e8ae92ca31d0753b1eacb9fbc3f555d78fbd6" translate="yes" xml:space="preserve">
          <source>area</source>
          <target state="translated">area</target>
        </trans-unit>
        <trans-unit id="3030e728f154bf51419109efb93b6b8aeec9a976" translate="yes" xml:space="preserve">
          <source>args</source>
          <target state="translated">args</target>
        </trans-unit>
        <trans-unit id="42b9fefa4084591ea41db40fa043defb9958411c" translate="yes" xml:space="preserve">
          <source>arr</source>
          <target state="translated">arr</target>
        </trans-unit>
        <trans-unit id="19edc1210777ba4d45049c29280d9cc5e1064c25" translate="yes" xml:space="preserve">
          <source>array</source>
          <target state="translated">array</target>
        </trans-unit>
        <trans-unit id="940a84e6ea126509e15c3f5c7e1527051421fb7b" translate="yes" xml:space="preserve">
          <source>array of parameters to pass to method</source>
          <target state="translated">메소드에 전달할 매개 변수 배열</target>
        </trans-unit>
        <trans-unit id="a11fe30d428b3002f2522482d87c8e8ea3b0b6ec" translate="yes" xml:space="preserve">
          <source>arrayOfItems</source>
          <target state="translated">arrayOfItems</target>
        </trans-unit>
        <trans-unit id="a1a3facf59f01768e66b69d188349b70e7424a30" translate="yes" xml:space="preserve">
          <source>as a click on the fieldset itself.</source>
          <target state="translated">필드 셋 자체를 클릭하면</target>
        </trans-unit>
        <trans-unit id="945390919c0c4c1b5acb144f05b8c37b73c5da74" translate="yes" xml:space="preserve">
          <source>ascendingPrefix</source>
          <target state="translated">ascendingPrefix</target>
        </trans-unit>
        <trans-unit id="4b58e98b642af4bce53503650b833e726e6e9458" translate="yes" xml:space="preserve">
          <source>aspect</source>
          <target state="translated">aspect</target>
        </trans-unit>
        <trans-unit id="4f38df512010c85c8d30f98ab84aece36ab18190" translate="yes" xml:space="preserve">
          <source>associates a data item with its key (id)</source>
          <target state="translated">데이터 항목을 키 (ID)와 연결</target>
        </trans-unit>
        <trans-unit id="666e1487c7369714ff6877d09c7e8d0971e39a30" translate="yes" xml:space="preserve">
          <source>assume a DOM created by this markup:</source>
          <target state="translated">이 마크 업으로 생성 된 DOM을 가정합니다.</target>
        </trans-unit>
        <trans-unit id="e0cbc9b70c25b1d041405afdb7194fc5f6aebbff" translate="yes" xml:space="preserve">
          <source>asyncEventListener&lt;code&gt;(listener);&lt;/code&gt;</source>
          <target state="translated">asyncEventListener&lt;code&gt;(listener);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d752f2c5e9504352a8b5051da82d8c592e4d092" translate="yes" xml:space="preserve">
          <source>asynchronous</source>
          <target state="translated">asynchronous</target>
        </trans-unit>
        <trans-unit id="7b9571a8acdbcccb34af621a3f7f8d8e06dbb622" translate="yes" xml:space="preserve">
          <source>attach foo.bar() to every odd div's onmouseover</source>
          <target state="translated">홀수 div의 모든 마우스에 foo.bar () 첨부</target>
        </trans-unit>
        <trans-unit id="2c317cd0735d9046d7675c475fa1c6dce647953f" translate="yes" xml:space="preserve">
          <source>attribute</source>
          <target state="translated">attribute</target>
        </trans-unit>
        <trans-unit id="b19598386813ab5f79f610159f844a0a655f1272" translate="yes" xml:space="preserve">
          <source>attribute queries:</source>
          <target state="translated">속성 쿼리 :</target>
        </trans-unit>
        <trans-unit id="670bc01853f927ea7e52597669cf4663cb1dd066" translate="yes" xml:space="preserve">
          <source>attribute-name-string</source>
          <target state="translated">attribute-name-string</target>
        </trans-unit>
        <trans-unit id="e3e9eee298f87f5b67694571755e08a1e21c8b32" translate="yes" xml:space="preserve">
          <source>attributes[]</source>
          <target state="translated">attributes[]</target>
        </trans-unit>
        <trans-unit id="130856e90bbab066b8bff5aef533f2fbad235efb" translate="yes" xml:space="preserve">
          <source>attrs</source>
          <target state="translated">attrs</target>
        </trans-unit>
        <trans-unit id="66f5c871938e3126a29c2b2088f0926e72678599" translate="yes" xml:space="preserve">
          <source>authority</source>
          <target state="translated">authority</target>
        </trans-unit>
        <trans-unit id="0d612c12d2ac33625bf3e0351b6f5e4f73829fa8" translate="yes" xml:space="preserve">
          <source>auto</source>
          <target state="translated">auto</target>
        </trans-unit>
        <trans-unit id="3a1a3a1f85656c03f0f4723f68126f4d0ab2f2b1" translate="yes" xml:space="preserve">
          <source>autoSync</source>
          <target state="translated">autoSync</target>
        </trans-unit>
        <trans-unit id="cac128d85d9b3d4e3d16037672a113a7a3b261fb" translate="yes" xml:space="preserve">
          <source>autoscroll</source>
          <target state="translated">autoscroll</target>
        </trans-unit>
        <trans-unit id="7b231a50a498ef151e291795f46f56bee569eae5" translate="yes" xml:space="preserve">
          <source>available</source>
          <target state="translated">available</target>
        </trans-unit>
        <trans-unit id="80b3364deb09ee4c7f775a999a72ccb433d596c9" translate="yes" xml:space="preserve">
          <source>azure</source>
          <target state="translated">azure</target>
        </trans-unit>
        <trans-unit id="e9d71f5ee7c92d6dc9e92ffdad17b8bd49418f98" translate="yes" xml:space="preserve">
          <source>b</source>
          <target state="translated">b</target>
        </trans-unit>
        <trans-unit id="61bb8d29b5be7db307cb29005bff087ebe300454" translate="yes" xml:space="preserve">
          <source>back</source>
          <target state="translated">back</target>
        </trans-unit>
        <trans-unit id="1405df66cbe219b0bf6355bc3d60361a8376b6b4" translate="yes" xml:space="preserve">
          <source>base</source>
          <target state="translated">base</target>
        </trans-unit>
        <trans-unit id="d8b586bf1b6b8514e418f30ddc1550845968e12d" translate="yes" xml:space="preserve">
          <source>baseUrl</source>
          <target state="translated">baseUrl</target>
        </trans-unit>
        <trans-unit id="51de2b835bd35a67eb32dbcd3d77d4b96e5aa39d" translate="yes" xml:space="preserve">
          <source>before</source>
          <target state="translated">before</target>
        </trans-unit>
        <trans-unit id="8cbd0a74c6efdb39943b290bb82c9d6b2a6ee5a6" translate="yes" xml:space="preserve">
          <source>begin</source>
          <target state="translated">begin</target>
        </trans-unit>
        <trans-unit id="df90d7701fba1b6f84bf7ff9ae4b0ea4f7122130" translate="yes" xml:space="preserve">
          <source>begin can be a positive or negative integer, with positive integers noting the offset to begin at, and negative integers denoting an offset from the end (i.e., to the left of the end)</source>
          <target state="translated">begin은 양수 또는 음수 일 수 있으며, 양수는 시작할 오프셋을 나타내고 음수는 끝 (즉, 왼쪽)을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7b09f36e52f1fe6824918546fe8586d01990e69e" translate="yes" xml:space="preserve">
          <source>behavior</source>
          <target state="translated">behavior</target>
        </trans-unit>
        <trans-unit id="2f81a9ba076e6aaeddcf90b5738c24886478d248" translate="yes" xml:space="preserve">
          <source>behaviorObj</source>
          <target state="translated">behaviorObj</target>
        </trans-unit>
        <trans-unit id="bf78d7a8e015a9629549ea3d70493e677c10f9d4" translate="yes" xml:space="preserve">
          <source>behaviour</source>
          <target state="translated">behaviour</target>
        </trans-unit>
        <trans-unit id="911ae51d1423bcb924995fd64cd58073ff70e7b3" translate="yes" xml:space="preserve">
          <source>beige</source>
          <target state="translated">beige</target>
        </trans-unit>
        <trans-unit id="6822f275fef591bd028d359c5e65588f81f56fd2" translate="yes" xml:space="preserve">
          <source>bisque</source>
          <target state="translated">bisque</target>
        </trans-unit>
        <trans-unit id="466bc8cef3e71de796ec483e212724a2c2044c68" translate="yes" xml:space="preserve">
          <source>black</source>
          <target state="translated">black</target>
        </trans-unit>
        <trans-unit id="a12f453b3b80c5681b3ed1c5ca11e6e9b85b55e0" translate="yes" xml:space="preserve">
          <source>blanchedalmond</source>
          <target state="translated">blanchedalmond</target>
        </trans-unit>
        <trans-unit id="4c9a82ce72ca2519f38d0af0abbb4cecb9fceca9" translate="yes" xml:space="preserve">
          <source>blue</source>
          <target state="translated">blue</target>
        </trans-unit>
        <trans-unit id="11b55ff408799c36346b002aad28c7d5b63dd80c" translate="yes" xml:space="preserve">
          <source>blueviolet</source>
          <target state="translated">blueviolet</target>
        </trans-unit>
        <trans-unit id="48647474b89fa8f56ed6bda0f8148a17b51b97bd" translate="yes" xml:space="preserve">
          <source>boolean</source>
          <target state="translated">boolean</target>
        </trans-unit>
        <trans-unit id="c7d8a6d722a1ec9a16fae165177c418d4fd63175" translate="yes" xml:space="preserve">
          <source>box</source>
          <target state="translated">box</target>
        </trans-unit>
        <trans-unit id="1a65873df10de1253045851a4a40b51a2917134d" translate="yes" xml:space="preserve">
          <source>box model (ex: dj_contentBox)</source>
          <target state="translated">박스 모델 (예 : dj_contentBox)</target>
        </trans-unit>
        <trans-unit id="4ffe0c4a35591a11fe26f75399d7368df66f0f65" translate="yes" xml:space="preserve">
          <source>boxModel</source>
          <target state="translated">boxModel</target>
        </trans-unit>
        <trans-unit id="9166eeff1e5056d4b9be3fc9a74f67e3149ef467" translate="yes" xml:space="preserve">
          <source>brown</source>
          <target state="translated">brown</target>
        </trans-unit>
        <trans-unit id="dedce55b27a021b39c48711e16b12f25881f527e" translate="yes" xml:space="preserve">
          <source>browser (ex: dj_ie)</source>
          <target state="translated">브라우저 (예 : dj_ie)</target>
        </trans-unit>
        <trans-unit id="b07c2f61e29ace3c591d60c72161b02b27c355dd" translate="yes" xml:space="preserve">
          <source>browser version (ex: dj_ie6)</source>
          <target state="translated">브라우저 버전 (예 : dj_ie6)</target>
        </trans-unit>
        <trans-unit id="f38e01d569b43ec794f36e6390f037f7573e3f6c" translate="yes" xml:space="preserve">
          <source>bundle is demanded; plugin loads single localized bundle.</source>
          <target state="translated">번들이 요구됩니다. 플러그인은 현지화 된 단일 번들을로드합니다.</target>
        </trans-unit>
        <trans-unit id="9d5a7b857f0b28a350a8a1041ccb112172c667f2" translate="yes" xml:space="preserve">
          <source>bundle is demanded; service is delayed until preloading complete; bundle is returned.</source>
          <target state="translated">번들이 요구됩니다. 사전로드가 완료 될 때까지 서비스가 지연됩니다. 번들이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="11aa6341c11f9bafd7172e6180e63139acc7c6f5" translate="yes" xml:space="preserve">
          <source>bundleName</source>
          <target state="translated">bundleName</target>
        </trans-unit>
        <trans-unit id="54aa33124a7a264ebd3e05562b607d8aa2ae603a" translate="yes" xml:space="preserve">
          <source>burlywood</source>
          <target state="translated">burlywood</target>
        </trans-unit>
        <trans-unit id="32e03ba4313e24a4c1db1de44e97c8b1df4ea94b" translate="yes" xml:space="preserve">
          <source>bustCache</source>
          <target state="translated">bustCache</target>
        </trans-unit>
        <trans-unit id="7b7fcc78d6cd1507925b769b1386ced3683f99c7" translate="yes" xml:space="preserve">
          <source>button</source>
          <target state="translated">button</target>
        </trans-unit>
        <trans-unit id="23396acb661dc28e4b66873f58265af6e5121de3" translate="yes" xml:space="preserve">
          <source>buttons</source>
          <target state="translated">buttons</target>
        </trans-unit>
        <trans-unit id="88e17fcced39b488d358f7c27d7c6a49b60e495f" translate="yes" xml:space="preserve">
          <source>ca&lt;em&gt; -&amp;gt; /^ca.&lt;/em&gt;$/</source>
          <target state="translated">ca- &lt;em&gt;&amp;gt; / ^ ca. &lt;/em&gt;$ /</target>
        </trans-unit>
        <trans-unit id="b03592806efabfeeb709f5a70a7c172669b00538" translate="yes" xml:space="preserve">
          <source>cache</source>
          <target state="translated">cache</target>
        </trans-unit>
        <trans-unit id="31315e553037138090f87a4ceeafddde2d782f9d" translate="yes" xml:space="preserve">
          <source>cache&lt;code&gt;(module,url,value);&lt;/code&gt;</source>
          <target state="translated">cache&lt;code&gt;(module,url,value);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="69001b02d31ad295555cacdcf7c72971622156d9" translate="yes" xml:space="preserve">
          <source>cachingStore</source>
          <target state="translated">cachingStore</target>
        </trans-unit>
        <trans-unit id="3510d2ed21fd3b6f64dbd75020ca97d973c97ffd" translate="yes" xml:space="preserve">
          <source>cadetblue</source>
          <target state="translated">cadetblue</target>
        </trans-unit>
        <trans-unit id="c9cd997da7639b9881d58c188296deb6ae4e20f5" translate="yes" xml:space="preserve">
          <source>call an arbitrary remote method without requiring it to be predefined with SMD</source>
          <target state="translated">SMD로 사전 정의 할 필요없이 임의의 원격 메소드 호출</target>
        </trans-unit>
        <trans-unit id="b4d5b37bf7a986c138ede89e0806f366b5cb1830" translate="yes" xml:space="preserve">
          <source>callback</source>
          <target state="translated">callback</target>
        </trans-unit>
        <trans-unit id="8f25a3963065b13c091fc42c4a8193c2036bc815" translate="yes" xml:space="preserve">
          <source>callback method for receipt of a smd object. Parse the smd and generate functions based on the description</source>
          <target state="translated">smd 객체를 받기위한 콜백 메소드 설명을 기반으로 smd 구문 분석 및 함수 생성</target>
        </trans-unit>
        <trans-unit id="938b5d3c5289511398c3b73159f5c64200ae5edb" translate="yes" xml:space="preserve">
          <source>callback(result)</source>
          <target state="translated">callback(result)</target>
        </trans-unit>
        <trans-unit id="7ac86009412fd668ac3b02e9130e907bc973c6f1" translate="yes" xml:space="preserve">
          <source>callbackOrErrback</source>
          <target state="translated">callbackOrErrback</target>
        </trans-unit>
        <trans-unit id="4e6382c6afba49f609cd78fd9667a8dea3db4488" translate="yes" xml:space="preserve">
          <source>callbackParamName (String):</source>
          <target state="translated">callbackParamName (문자열) :</target>
        </trans-unit>
        <trans-unit id="9ff004662be5a7df48269b9822777cb1908a6008" translate="yes" xml:space="preserve">
          <source>called after every incremental move; can be overwritten.</source>
          <target state="translated">모든 증분 이동 후에 호출됩니다. 덮어 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="521b7099dc33651df4b7ef11dbdf923920251c6d" translate="yes" xml:space="preserve">
          <source>called after every move operation</source>
          <target state="translated">모든 이동 작업 후 호출</target>
        </trans-unit>
        <trans-unit id="039e7a4bc84725471f78019f29c485494f31ff24" translate="yes" xml:space="preserve">
          <source>called before every incremental move; can be overwritten.</source>
          <target state="translated">모든 증분 이동 전에 호출됩니다. 덮어 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="108ddead12a8db034a37c53f6f2feb3e4111294b" translate="yes" xml:space="preserve">
          <source>called before every move operation</source>
          <target state="translated">모든 이동 작업 전에 호출</target>
        </trans-unit>
        <trans-unit id="f72bdd23602cb3257bea2a9ce19d7aeeab0cabd0" translate="yes" xml:space="preserve">
          <source>called during every move notification; should actually move the node; can be overwritten.</source>
          <target state="translated">모든 이동 알림 중에 호출됩니다. 실제로 노드를 움직여야합니다. 덮어 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca4f9c0f189507a7dd3767ca346d4415f097828c" translate="yes" xml:space="preserve">
          <source>called during the active DnD operation, when items are dragged away from this target, and it is not disabled</source>
          <target state="translated">활성화 된 DnD 작업 중에 호출되어 항목이이 대상에서 멀어지고 비활성화되지 않은 경우</target>
        </trans-unit>
        <trans-unit id="dc294c54c59dc2a0a0104e1044283f32676d2c81" translate="yes" xml:space="preserve">
          <source>called during the active DnD operation, when items are dragged over this target, and it is not disabled</source>
          <target state="translated">활성화 된 DnD 작업 중이 대상 위로 항목을 끌 때 호출되며 비활성화되지 않은 경우</target>
        </trans-unit>
        <trans-unit id="c902b0f11b0766307f9418c1abf67dc5372d5e57" translate="yes" xml:space="preserve">
          <source>called during the very first move notification; can be used to initialize coordinates, can be overwritten.</source>
          <target state="translated">첫 번째 이동 알림 중에 호출됩니다. 좌표를 초기화하는 데 사용할 수 있으며 덮어 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5241ed6d959f9eced9f31a1bccbf5e320ab59dfc" translate="yes" xml:space="preserve">
          <source>called only on the current target, when drop is performed</source>
          <target state="translated">삭제가 수행 될 때 현재 대상에서만 호출</target>
        </trans-unit>
        <trans-unit id="dd6a9728dc6cdba602144b06d986e80ca4eda4e1" translate="yes" xml:space="preserve">
          <source>called only on the current target, when drop is performed from an external source</source>
          <target state="translated">외부 소스에서 삭제가 수행 될 때 현재 대상에서만 호출</target>
        </trans-unit>
        <trans-unit id="748d872b1e5949d19f085655726080746d7219ae" translate="yes" xml:space="preserve">
          <source>called only on the current target, when drop is performed from the same target/source</source>
          <target state="translated">동일한 대상 / 소스에서 삭제가 수행 될 때 현재 대상에서만 호출</target>
        </trans-unit>
        <trans-unit id="4b3ab1d799592b0fa3791d6d8c5b00f7f3b47432" translate="yes" xml:space="preserve">
          <source>called to initiate the DnD operation</source>
          <target state="translated">DnD 작업을 시작하기 위해 호출</target>
        </trans-unit>
        <trans-unit id="59d2434b81f2632e62bf6c9625826e6e49e1944b" translate="yes" xml:space="preserve">
          <source>called to notify if the current target can accept items</source>
          <target state="translated">현재 대상이 항목을 수락 할 수 있는지 알리기 위해 호출</target>
        </trans-unit>
        <trans-unit id="4d721f40434b57aab78402182b9659adfe6f6f88" translate="yes" xml:space="preserve">
          <source>called when a source detected a mouse-out condition</source>
          <target state="translated">소스가 마우스 아웃 상태를 감지했을 때 호출</target>
        </trans-unit>
        <trans-unit id="e68c671690d033087dda0478e406b7cb90b315a2" translate="yes" xml:space="preserve">
          <source>called when a source detected a mouse-over condition</source>
          <target state="translated">소스가 마우스 오버 상태를 감지했을 때 호출</target>
        </trans-unit>
        <trans-unit id="d495fc9a0450225e5ba87d9a8b740179bcda2e27" translate="yes" xml:space="preserve">
          <source>called when the drag is detected; responsible for creation of the mover</source>
          <target state="translated">드래그가 감지되면 호출됩니다. 발동기 생성 책임</target>
        </trans-unit>
        <trans-unit id="8110fbac80fab13a33ffab618a41554b60b94fd0" translate="yes" xml:space="preserve">
          <source>can be one of:</source>
          <target state="translated">다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb0ed3dcc2c37bbe1d70d89a33a5bf5ad3f638bc" translate="yes" xml:space="preserve">
          <source>can be used as AMD plugin to conditionally load new query engine</source>
          <target state="translated">조건부로 새 쿼리 엔진을로드하기 위해 AMD 플러그인으로 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="f733a37f39ccad9666570a99289ade796695fc72" translate="yes" xml:space="preserve">
          <source>canDelete</source>
          <target state="translated">canDelete</target>
        </trans-unit>
        <trans-unit id="4fd0653c4f2aef3b19a3c145bbdc5f4740715a09" translate="yes" xml:space="preserve">
          <source>cancel</source>
          <target state="translated">cancel</target>
        </trans-unit>
        <trans-unit id="90f59bb1411c26414a8ff95aac5fda911b759614" translate="yes" xml:space="preserve">
          <source>canceler</source>
          <target state="translated">canceler</target>
        </trans-unit>
        <trans-unit id="eec063cf1377b17ba72bc78f4007dddee0eb33ec" translate="yes" xml:space="preserve">
          <source>canceller</source>
          <target state="translated">canceller</target>
        </trans-unit>
        <trans-unit id="275f697723182026e5ac554502b7b67c5af51497" translate="yes" xml:space="preserve">
          <source>causes subsequent calls to Dojo methods to assume the passed object and, optionally, document as the default scopes to use. A 2-element array of the previous global and document are returned.</source>
          <target state="translated">후속 Dojo 메소드 호출은 전달 된 오브젝트를 가정하고 선택적으로 사용할 기본 범위로 문서화합니다. 이전 전역 및 문서의 2 요소 배열이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="85d56cb41a65761dcea36d0ceb2f0ec45f184419" translate="yes" xml:space="preserve">
          <source>cb</source>
          <target state="translated">cb</target>
        </trans-unit>
        <trans-unit id="ce109aa2383f6274222de028da42d1a8b8aeda79" translate="yes" xml:space="preserve">
          <source>cbArguments</source>
          <target state="translated">cbArguments</target>
        </trans-unit>
        <trans-unit id="98d4a56a9882b21a0646fb7ac5ac8d65c2ac5e48" translate="yes" xml:space="preserve">
          <source>certain pseudo-selectors which don't get a lot of day-to-day use:</source>
          <target state="translated">매일 많이 사용하지 않는 특정 의사 선택기 :</target>
        </trans-unit>
        <trans-unit id="482bd64c6c9f098c9ef8b77b8f870517bf33a1b9" translate="yes" xml:space="preserve">
          <source>ch</source>
          <target state="translated">ch</target>
        </trans-unit>
        <trans-unit id="fb482ecad0449af2b8f0741a68755b5c8d1837f2" translate="yes" xml:space="preserve">
          <source>chainability is a key advantage of NodeLists:</source>
          <target state="translated">연결성은 NodeLists의 주요 장점입니다.</target>
        </trans-unit>
        <trans-unit id="96771eaf99fa02cddb1e8f9b9c95c1c6325f8a92" translate="yes" xml:space="preserve">
          <source>changes the behavior of many core Dojo functions that deal with namespace and DOM lookup, changing them to work in a new global context (e.g., an iframe). The varibles dojo.global and dojo.doc are modified as a result of calling this function and the result of &lt;code&gt;dojo.body()&lt;/code&gt; likewise differs.</source>
          <target state="translated">네임 스페이스 및 DOM 조회를 처리하는 많은 핵심 Dojo 함수의 동작을 변경하여 새로운 글로벌 컨텍스트 (예 : iframe)에서 작동하도록 변경합니다. 이 함수를 호출 한 결과 dojo.global 및 dojo.doc 변수가 수정되며 &lt;code&gt;dojo.body()&lt;/code&gt; 의 결과 도 다릅니다.</target>
        </trans-unit>
        <trans-unit id="457a3e4507ca4300bbae987f5650656827a43ac4" translate="yes" xml:space="preserve">
          <source>char/JS keyCode/dojo.keys.* constant for the key you want to hold down Warning: holding down a shifted key, like 'A', can have unpredictable results.</source>
          <target state="translated">char / JS keyCode / dojo.keys. * 누르고 싶은 키의 상수 경고 : 'A'와 같이 이동 된 키를 누르고 있으면 예기치 않은 결과가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a61037e489f532c673aaacd52a2b9a1fa230f03f" translate="yes" xml:space="preserve">
          <source>char/JS keyCode/dojo.keys.* constant for the key you want to press</source>
          <target state="translated">char / JS keyCode / dojo.keys. * 누르려는 키의 상수</target>
        </trans-unit>
        <trans-unit id="be45ec0d652ffa79b39e163b1b5faf5acdd0e0d6" translate="yes" xml:space="preserve">
          <source>char/JS keyCode/dojo.keys.* constant for the key you want to release Warning: releasing a shifted key, like 'A', can have unpredictable results.</source>
          <target state="translated">char / JS keyCode / dojo.keys. * 해제 할 키의 상수 경고 : 'A'와 같이 이동 된 키를 놓으면 예기치 않은 결과가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19dfcd2902aeafd8720a8c59025c159d3f89b1a5" translate="yes" xml:space="preserve">
          <source>charOrCode</source>
          <target state="translated">charOrCode</target>
        </trans-unit>
        <trans-unit id="ede09a3b5d10e527b6c10392f2a65739984728be" translate="yes" xml:space="preserve">
          <source>character to pad, defaults to '0'</source>
          <target state="translated">문자 대 패드, 기본값은 '0'</target>
        </trans-unit>
        <trans-unit id="76a91d6ce24fcc03ec2ecbb19e3012b5d5d40e2b" translate="yes" xml:space="preserve">
          <source>chars</source>
          <target state="translated">chars</target>
        </trans-unit>
        <trans-unit id="67bf511571f0e5b8eccd896cc86e31c8f1c86316" translate="yes" xml:space="preserve">
          <source>chartreuse</source>
          <target state="translated">chartreuse</target>
        </trans-unit>
        <trans-unit id="d56d985300d4b52eb6e189be006f44f8d23c5ec9" translate="yes" xml:space="preserve">
          <source>check</source>
          <target state="translated">check</target>
        </trans-unit>
        <trans-unit id="e35d09bf5576c1e237b29eedae141dd225148a4c" translate="yes" xml:space="preserve">
          <source>checkString</source>
          <target state="translated">checkString</target>
        </trans-unit>
        <trans-unit id="0772c09a61b16463f6e11cb55d8c5fc1b859a451" translate="yes" xml:space="preserve">
          <source>checkString (String):</source>
          <target state="translated">checkString (문자열) :</target>
        </trans-unit>
        <trans-unit id="f157f5af099cbf8ad54b1edde00379d18cfe9c12" translate="yes" xml:space="preserve">
          <source>checks if the target can accept nodes from this source</source>
          <target state="translated">대상이이 소스의 노드를 수용 할 수 있는지 확인</target>
        </trans-unit>
        <trans-unit id="42685f11da91a55b1f5c5b782edb2f0fc1dd5148" translate="yes" xml:space="preserve">
          <source>children</source>
          <target state="translated">children</target>
        </trans-unit>
        <trans-unit id="891c5feef171da85aadd3fdb8130ba509b03f5ea" translate="yes" xml:space="preserve">
          <source>chocolate</source>
          <target state="translated">chocolate</target>
        </trans-unit>
        <trans-unit id="61dc4e809536b58df9ad39bd1f4f8c94fd799712" translate="yes" xml:space="preserve">
          <source>choice of 'time','date' (default: date and time)</source>
          <target state="translated">'시간', '날짜'선택 (기본값 : 날짜 및 시간)</target>
        </trans-unit>
        <trans-unit id="2363bd4c4ea1cc5d29624b21184e6063490459be" translate="yes" xml:space="preserve">
          <source>choice of long, short, medium or full (plus any custom additions). Defaults to 'short'</source>
          <target state="translated">길거나, 짧거나, 중간 또는 전체 선택 (및 사용자 정의 추가). 기본값은 '짧음'</target>
        </trans-unit>
        <trans-unit id="a9e25cfd897c8c693a83d82520b66e0842675202" translate="yes" xml:space="preserve">
          <source>choose a format type based on the locale from the following: decimal, scientific (not yet supported), percent, currency. decimal by default.</source>
          <target state="translated">로케일을 기준으로 10 진수, 과학 (아직 지원되지 않음), 백분율, 통화 형식 형식을 선택하십시오. 기본적으로 십진수입니다.</target>
        </trans-unit>
        <trans-unit id="8d767bf5b72373d12f0efd4406677e9ed076f592" translate="yes" xml:space="preserve">
          <source>class</source>
          <target state="translated">class</target>
        </trans-unit>
        <trans-unit id="3630e6310a226e696e8cfafcc1218cdbee2e280c" translate="yes" xml:space="preserve">
          <source>class constructor for an animation toggler. It accepts a packed set of arguments about what type of animation to use in each direction, duration, etc. All available members are mixed into these animations from the constructor (for example, &lt;code&gt;node&lt;/code&gt;, &lt;code&gt;showDuration&lt;/code&gt;, &lt;code&gt;hideDuration&lt;/code&gt;).</source>
          <target state="translated">애니메이션 토글 러의 클래스 생성자 각 방향, 지속 시간 등에 사용할 애니메이션 유형에 대한 &lt;code&gt;showDuration&lt;/code&gt; 를 &lt;code&gt;hideDuration&lt;/code&gt; 합니다. 사용 가능한 모든 멤버가 생성자 (예 : &lt;code&gt;node&lt;/code&gt; , showDuration , hideDuration ) 에서 이러한 애니메이션에 혼합됩니다 .</target>
        </trans-unit>
        <trans-unit id="ace0113944c63b8dfa0f7c1d87aca64ebde94488" translate="yes" xml:space="preserve">
          <source>class selectors (e.g., &lt;code&gt;.foo&lt;/code&gt;)</source>
          <target state="translated">클래스 선택기 (예 : &lt;code&gt;.foo&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d80a05355eb77272dccf26e73f9d554a520a954d" translate="yes" xml:space="preserve">
          <source>className</source>
          <target state="translated">className</target>
        </trans-unit>
        <trans-unit id="59c6f5ad723af4b28fbd84e1bcf156186461af1e" translate="yes" xml:space="preserve">
          <source>classStr</source>
          <target state="translated">classStr</target>
        </trans-unit>
        <trans-unit id="37bc383fc03af62817ad46272c9952cbcddb2aa5" translate="yes" xml:space="preserve">
          <source>cldr</source>
          <target state="translated">cldr</target>
        </trans-unit>
        <trans-unit id="f6b601e7e2d97f56ff9aabfccc690ac088778897" translate="yes" xml:space="preserve">
          <source>cleanContent</source>
          <target state="translated">cleanContent</target>
        </trans-unit>
        <trans-unit id="5df2fc42e0627034fe6dbf370dd861495cf89241" translate="yes" xml:space="preserve">
          <source>cleanly empty out existing content</source>
          <target state="translated">기존 컨텐츠를 깨끗하게 비 웁니다</target>
        </trans-unit>
        <trans-unit id="5ad3877fd061888d5e58b9c54308f5858a2b97ca" translate="yes" xml:space="preserve">
          <source>clearOnClose</source>
          <target state="translated">clearOnClose</target>
        </trans-unit>
        <trans-unit id="3adc58a4b9057884c6b73a83a62a9d7ce36c9402" translate="yes" xml:space="preserve">
          <source>clears all content from each node in the list. Effectively equivalent to removing all child nodes from every item in the list.</source>
          <target state="translated">목록의 각 노드에서 모든 내용을 지 웁니다. 목록의 모든 항목에서 모든 자식 노드를 제거하는 것과 사실상 동일합니다.</target>
        </trans-unit>
        <trans-unit id="b53b0b1b3ab8864dde25ae19d35de4cf6eb69533" translate="yes" xml:space="preserve">
          <source>clicking on a fieldset or &lt;em&gt;any nodes inside of a fieldset&lt;/em&gt; will be reported</source>
          <target state="translated">필드 세트 또는 필드 세트 &lt;em&gt;내의 노드를&lt;/em&gt; 클릭하면 보고됩니다</target>
        </trans-unit>
        <trans-unit id="a30d80b2d90928ad58df49afc97d32a54c5a3be1" translate="yes" xml:space="preserve">
          <source>cls</source>
          <target state="translated">cls</target>
        </trans-unit>
        <trans-unit id="e6fb06210fafc02fd7479ddbed2d042cc3a5155e" translate="yes" xml:space="preserve">
          <source>code</source>
          <target state="translated">code</target>
        </trans-unit>
        <trans-unit id="9605f5c5989fcee509b22291f2480fd9841563ce" translate="yes" xml:space="preserve">
          <source>collects valid child items and populate the map</source>
          <target state="translated">유효한 하위 항목을 수집하고 맵을 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="6dd0fe8001145bec4a12d0e22da711c4970d000b" translate="yes" xml:space="preserve">
          <source>color</source>
          <target state="translated">color</target>
        </trans-unit>
        <trans-unit id="f8bd696759805b9098f9e13be67d2b248c7619d0" translate="yes" xml:space="preserve">
          <source>colors</source>
          <target state="translated">colors</target>
        </trans-unit>
        <trans-unit id="5e07d3acd033941077ed22ace613c98ebb82ce78" translate="yes" xml:space="preserve">
          <source>colspan</source>
          <target state="translated">colspan</target>
        </trans-unit>
        <trans-unit id="26672eccc25592b46ce9e08b4c6a3e811aa4f321" translate="yes" xml:space="preserve">
          <source>computedStyle</source>
          <target state="translated">computedStyle</target>
        </trans-unit>
        <trans-unit id="afad9a69767e7c24ecda5af9187202e1b4b070b2" translate="yes" xml:space="preserve">
          <source>condition</source>
          <target state="translated">condition</target>
        </trans-unit>
        <trans-unit id="dfba7aade0868074c2861c98e2a9a92f3178a51b" translate="yes" xml:space="preserve">
          <source>config</source>
          <target state="translated">config</target>
        </trans-unit>
        <trans-unit id="637df8be397c089ff942d480b6fb4402045ccd51" translate="yes" xml:space="preserve">
          <source>connectPublisher</source>
          <target state="translated">connectPublisher</target>
        </trans-unit>
        <trans-unit id="e434f033fa0878602e4e546087cd0f466238403a" translate="yes" xml:space="preserve">
          <source>constructor function; it is separate so it can be (dynamically) overwritten in case of need</source>
          <target state="translated">생성자 함수; 필요에 따라 (동적으로) 덮어 쓸 수 있도록 분리되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="582f61bf2fde165047a656813d7cc0bf025f4354" translate="yes" xml:space="preserve">
          <source>consumeErrors</source>
          <target state="translated">consumeErrors</target>
        </trans-unit>
        <trans-unit id="72e9a547fbb17beb5b5ea139f68f91eea1ed3e1d" translate="yes" xml:space="preserve">
          <source>cont</source>
          <target state="translated">cont</target>
        </trans-unit>
        <trans-unit id="7b5214d8e085e1e54afe8c26880a4983ae8bf67c" translate="yes" xml:space="preserve">
          <source>contained by these elements with this sub-query:</source>
          <target state="translated">이 하위 쿼리와 함께 이러한 요소에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="040f06fd774092478d450774f5ba30c5da78acc8" translate="yes" xml:space="preserve">
          <source>content</source>
          <target state="translated">content</target>
        </trans-unit>
        <trans-unit id="4054bf1c7c81e5c85a17130ac0637f881891d2b7" translate="yes" xml:space="preserve">
          <source>content (Object, optional):</source>
          <target state="translated">내용 (객체, 옵션) :</target>
        </trans-unit>
        <trans-unit id="19e633dd482ca5f3dfd7ca1ee756bb94e2988d0d" translate="yes" xml:space="preserve">
          <source>contentHandlers</source>
          <target state="translated">contentHandlers</target>
        </trans-unit>
        <trans-unit id="be325701619d15d9b91f900d60e3081ad6f43117" translate="yes" xml:space="preserve">
          <source>contentType</source>
          <target state="translated">contentType</target>
        </trans-unit>
        <trans-unit id="4013dc47dc74634327a37a88c53c89f34431850f" translate="yes" xml:space="preserve">
          <source>contentType (String|Boolean):</source>
          <target state="translated">contentType (문자열 | 부울) :</target>
        </trans-unit>
        <trans-unit id="ec2727b3b71f07635f726026bef44352ec89e452" translate="yes" xml:space="preserve">
          <source>context</source>
          <target state="translated">context</target>
        </trans-unit>
        <trans-unit id="9468483d2ddbeeada6fe2f29600ad6ee8ede3f6c" translate="yes" xml:space="preserve">
          <source>contextRequire: Function: If specified, this require is utilised for looking resolving modules instead of the &lt;code&gt;dojo/parser&lt;/code&gt; context &lt;code&gt;require()&lt;/code&gt;. Intended for use from the widgets-in-template feature of &lt;code&gt;dijit._WidgetsInTemplateMixin&lt;/code&gt;.</source>
          <target state="translated">contextRequire : 기능 : 지정된 경우 &lt;code&gt;dojo/parser&lt;/code&gt; 컨텍스트 &lt;code&gt;require()&lt;/code&gt; 대신 해결 모듈을 찾는 데이 요구 사항이 사용됩니다 . &lt;code&gt;dijit._WidgetsInTemplateMixin&lt;/code&gt; 의 템플리트 내 위젯 기능에서 사용하기위한 것입니다 .</target>
        </trans-unit>
        <trans-unit id="c72ed70dbf2d95bc3e48eb8a44c074af9bcaff7b" translate="yes" xml:space="preserve">
          <source>converts style value to pixels on IE or return a numeric value.</source>
          <target state="translated">IE에서 스타일 값을 픽셀로 변환하거나 숫자 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="59c826fc854197cbd4d1083bce8fc00d0761e8b3" translate="yes" xml:space="preserve">
          <source>cookie</source>
          <target state="translated">cookie</target>
        </trans-unit>
        <trans-unit id="61a2a40747936a2d88b064d3e48500362558546f" translate="yes" xml:space="preserve">
          <source>cookie&lt;code&gt;(name,value,props);&lt;/code&gt;</source>
          <target state="translated">cookie&lt;code&gt;(name,value,props);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f84e2e2dadd87384fb55f25886926b777e8378f1" translate="yes" xml:space="preserve">
          <source>copy</source>
          <target state="translated">copy</target>
        </trans-unit>
        <trans-unit id="d3b8c2f99068f7cb80a478022c227522a32e71c5" translate="yes" xml:space="preserve">
          <source>copy in properties from multiple objects</source>
          <target state="translated">여러 객체에서 속성 복사</target>
        </trans-unit>
        <trans-unit id="191f8740fc5068279a467eb50e7a648bc9581935" translate="yes" xml:space="preserve">
          <source>copy items, if true, move items otherwise</source>
          <target state="translated">항목을 복사하는 경우, 그렇지 않으면 항목을 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="eeb56e4eca894ecad610be488e991871069e87fe" translate="yes" xml:space="preserve">
          <source>copyKey</source>
          <target state="translated">copyKey</target>
        </trans-unit>
        <trans-unit id="dd46a388d2c694d63c60f44700928ed56d3b2170" translate="yes" xml:space="preserve">
          <source>copyOnly</source>
          <target state="translated">copyOnly</target>
        </trans-unit>
        <trans-unit id="9c7d77277deb877303c71c43212a1fd78380caa6" translate="yes" xml:space="preserve">
          <source>coral</source>
          <target state="translated">coral</target>
        </trans-unit>
        <trans-unit id="fb62ce7f2ed7e39b729857acbd32f71c72cbf91a" translate="yes" xml:space="preserve">
          <source>cornflowerblue</source>
          <target state="translated">cornflowerblue</target>
        </trans-unit>
        <trans-unit id="145f8e015ac7cc50045f24d90277f9ce6707315e" translate="yes" xml:space="preserve">
          <source>cornsilk</source>
          <target state="translated">cornsilk</target>
        </trans-unit>
        <trans-unit id="ee9f38e186ba06f57b7b74d7e626b94e13ce2556" translate="yes" xml:space="preserve">
          <source>count</source>
          <target state="translated">count</target>
        </trans-unit>
        <trans-unit id="9b7c68a918b17eb053809b198d7c9abfc142f30a" translate="yes" xml:space="preserve">
          <source>create</source>
          <target state="translated">create</target>
        </trans-unit>
        <trans-unit id="7fd094653fbc28713481a681acdc8ae9199433fb" translate="yes" xml:space="preserve">
          <source>create a JSON-RPC envelope for the request</source>
          <target state="translated">요청에 대한 JSON-RPC 엔벨로프 작성</target>
        </trans-unit>
        <trans-unit id="309cdcbdf48b45dde38465666079221f35e8fc05" translate="yes" xml:space="preserve">
          <source>create a JSONP req</source>
          <target state="translated">JSONP 요청 생성</target>
        </trans-unit>
        <trans-unit id="d46a0cd159c1acb615f8432e4db87084155e6b99" translate="yes" xml:space="preserve">
          <source>create a node list from a node</source>
          <target state="translated">노드에서 노드 목록을 만듭니다</target>
        </trans-unit>
        <trans-unit id="3126d6ef98af53e8d6de500d6cb418f9b67cd86c" translate="yes" xml:space="preserve">
          <source>create callback that calls the Deferred errback method</source>
          <target state="translated">지연된 errback 메소드를 호출하는 콜백 작성</target>
        </trans-unit>
        <trans-unit id="688f5c9585a1f495fd3c562116483ef32c284b07" translate="yes" xml:space="preserve">
          <source>create callback that calls the Deferred's callback method</source>
          <target state="translated">Deferred의 콜백 메소드를 호출하는 콜백 생성</target>
        </trans-unit>
        <trans-unit id="c783de731087e7d6a2234bd0593292f1804a35be" translate="yes" xml:space="preserve">
          <source>create&lt;code&gt;(name,ctor,base,props);&lt;/code&gt;</source>
          <target state="translated">create&lt;code&gt;(name,ctor,base,props);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2a9d2fa65b2e3a4f976290aaf7154215929b5453" translate="yes" xml:space="preserve">
          <source>creates a greyscale color with an optional alpha</source>
          <target state="translated">선택적인 알파로 회색조 색상을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="677df94a7b904830076fb4c34b379504aeb6ac5c" translate="yes" xml:space="preserve">
          <source>creates a new &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag pointing to the specified URL and adds it to the document.</source>
          <target state="translated">지정된 URL을 가리키는 새 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 태그를 작성하여 문서에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="2abdedf9d4a3e83109c4536100448c665099e0c2" translate="yes" xml:space="preserve">
          <source>creator function, dummy at the moment</source>
          <target state="translated">창조자 기능, 순간 더미</target>
        </trans-unit>
        <trans-unit id="ad5333beb0b6fda50a0eac3528495b97fc4b9902" translate="yes" xml:space="preserve">
          <source>crimson</source>
          <target state="translated">crimson</target>
        </trans-unit>
        <trans-unit id="c7878011599300b2bf50f375315f7ec893050c31" translate="yes" xml:space="preserve">
          <source>css2.1: If the browser has a native selector engine, this will be used, otherwise the full Acme engine will be loaded.</source>
          <target state="translated">css2.1 : 브라우저에 기본 선택기 엔진이있는 경우이 엔진이 사용되고 그렇지 않으면 전체 Acme 엔진이로드됩니다.</target>
        </trans-unit>
        <trans-unit id="20679edb09131825ca09fce53974109d41009d69" translate="yes" xml:space="preserve">
          <source>css2: If the browser has a native selector engine, this will be used, otherwise a very minimal lightweight selector engine will be loaded that can do simple CSS2 selectors (by #id, .class, tag, and [name=value] attributes, with standard child or descendant (&amp;gt;) operators) and nothing more.</source>
          <target state="translated">css2 : 브라우저에 기본 선택기 엔진이있는 경우이 엔진이 사용됩니다. 그렇지 않으면 간단한 CSS2 선택기 (#id, .class, tag 및 [name = value] 속성 별, 표준 자식 또는 자손 (&amp;gt;) 연산자와 함께) 더 이상 없습니다.</target>
        </trans-unit>
        <trans-unit id="9b7980b2eaab94b81e0644a2981c74c95bc0b3c6" translate="yes" xml:space="preserve">
          <source>css3: If the browser has a native selector engine with support for CSS3 pseudo selectors (most modern browsers except IE8), this will be used, otherwise the full Acme engine will be loaded.</source>
          <target state="translated">css3 : 브라우저에 CSS3 의사 선택기 (IE8을 제외한 대부분의 최신 브라우저)를 지원하는 기본 선택기 엔진이있는 경우이 엔진이 사용되고 그렇지 않으면 전체 Acme 엔진이로드됩니다.</target>
        </trans-unit>
        <trans-unit id="586f46afa0e212b165b7ad86bc695611373df776" translate="yes" xml:space="preserve">
          <source>cssClass</source>
          <target state="translated">cssClass</target>
        </trans-unit>
        <trans-unit id="2893364525b11765945aa4ee2de08380760e68eb" translate="yes" xml:space="preserve">
          <source>ctor</source>
          <target state="translated">ctor</target>
        </trans-unit>
        <trans-unit id="1d9e48cd581ca4bff14e812e60b255593b08a1f2" translate="yes" xml:space="preserve">
          <source>ctrl</source>
          <target state="translated">ctrl</target>
        </trans-unit>
        <trans-unit id="001517ee5d3d0c7f4481ec2cd77c6aefd2fa802e" translate="yes" xml:space="preserve">
          <source>currency</source>
          <target state="translated">currency</target>
        </trans-unit>
        <trans-unit id="8c1c8d5cb3bce7f206afd14335f149fdd1d911d4" translate="yes" xml:space="preserve">
          <source>currency (String, optional):</source>
          <target state="translated">통화 (문자열, 선택적) :</target>
        </trans-unit>
        <trans-unit id="405ab5d2b930fe3725b3cb1ace051f9fd3d6d7af" translate="yes" xml:space="preserve">
          <source>current</source>
          <target state="translated">current</target>
        </trans-unit>
        <trans-unit id="1571b29d8677d461f1f147c170615ce59a848d13" translate="yes" xml:space="preserve">
          <source>cyan</source>
          <target state="translated">cyan</target>
        </trans-unit>
        <trans-unit id="3c363836cf4e16666669a25da280a1865c2d2874" translate="yes" xml:space="preserve">
          <source>d</source>
          <target state="translated">d</target>
        </trans-unit>
        <trans-unit id="df2689c6722f184638a8c4db0a671613c61cabdb" translate="yes" xml:space="preserve">
          <source>darkblue</source>
          <target state="translated">darkblue</target>
        </trans-unit>
        <trans-unit id="b54af03309fd6abdc5caf0bcac5860fcbd778be8" translate="yes" xml:space="preserve">
          <source>darkcyan</source>
          <target state="translated">darkcyan</target>
        </trans-unit>
        <trans-unit id="250c7c627e117b846bea737a4f9e2df59c04b104" translate="yes" xml:space="preserve">
          <source>darkgoldenrod</source>
          <target state="translated">darkgoldenrod</target>
        </trans-unit>
        <trans-unit id="2995037b441cfebfc43b64759ac63b96b7fb4480" translate="yes" xml:space="preserve">
          <source>darkgray</source>
          <target state="translated">darkgray</target>
        </trans-unit>
        <trans-unit id="94ce610c905057bbe36758d865d6c7992201133f" translate="yes" xml:space="preserve">
          <source>darkgreen</source>
          <target state="translated">darkgreen</target>
        </trans-unit>
        <trans-unit id="026de03c158459133fc5c5ee30c0453ede6f8e92" translate="yes" xml:space="preserve">
          <source>darkgrey</source>
          <target state="translated">darkgrey</target>
        </trans-unit>
        <trans-unit id="f9a3108fd07c5d325d446bd0728db56556a0b198" translate="yes" xml:space="preserve">
          <source>darkkhaki</source>
          <target state="translated">darkkhaki</target>
        </trans-unit>
        <trans-unit id="7f89c642a59450089029ec3a95833c14d0188f08" translate="yes" xml:space="preserve">
          <source>darkmagenta</source>
          <target state="translated">darkmagenta</target>
        </trans-unit>
        <trans-unit id="83e5273328ae7595ec59883205d1fbeee73f81ca" translate="yes" xml:space="preserve">
          <source>darkolivegreen</source>
          <target state="translated">darkolivegreen</target>
        </trans-unit>
        <trans-unit id="707f69462e692c445d300d7235fc5656a58dd8f9" translate="yes" xml:space="preserve">
          <source>darkorange</source>
          <target state="translated">darkorange</target>
        </trans-unit>
        <trans-unit id="bdfd414a788c997e7d8d243ea6d757051a7c42d9" translate="yes" xml:space="preserve">
          <source>darkorchid</source>
          <target state="translated">darkorchid</target>
        </trans-unit>
        <trans-unit id="8f399aa4a4052581b0a5b91511fb4ac9be590c1f" translate="yes" xml:space="preserve">
          <source>darkred</source>
          <target state="translated">darkred</target>
        </trans-unit>
        <trans-unit id="eab8511a5c4bdd271d2ca178d02bdda7a582303d" translate="yes" xml:space="preserve">
          <source>darksalmon</source>
          <target state="translated">darksalmon</target>
        </trans-unit>
        <trans-unit id="6f2c084c2a172c7d7a095e2e3f496784d893da46" translate="yes" xml:space="preserve">
          <source>darkseagreen</source>
          <target state="translated">darkseagreen</target>
        </trans-unit>
        <trans-unit id="018102fe215eb0baaffcd014509cd578a2412075" translate="yes" xml:space="preserve">
          <source>darkslateblue</source>
          <target state="translated">darkslateblue</target>
        </trans-unit>
        <trans-unit id="9a63d84a08c6a6e76bcfb8ede5e62bad468e8d63" translate="yes" xml:space="preserve">
          <source>darkslategray</source>
          <target state="translated">darkslategray</target>
        </trans-unit>
        <trans-unit id="1cc030d94a8ba8605adeb06bcd0ab1aa0ef39cfc" translate="yes" xml:space="preserve">
          <source>darkslategrey</source>
          <target state="translated">darkslategrey</target>
        </trans-unit>
        <trans-unit id="6ed7ea6fab4f6e278914cea514c790e172b80fd0" translate="yes" xml:space="preserve">
          <source>darkturquoise</source>
          <target state="translated">darkturquoise</target>
        </trans-unit>
        <trans-unit id="62bc0aceeb37d6dda899dcb724b7572e24b5642b" translate="yes" xml:space="preserve">
          <source>darkviolet</source>
          <target state="translated">darkviolet</target>
        </trans-unit>
        <trans-unit id="a17c9aaa61e80a1bf71d0d850af4e5baa9800bbd" translate="yes" xml:space="preserve">
          <source>data</source>
          <target state="translated">data</target>
        </trans-unit>
        <trans-unit id="e927d0677c77241b707442314346326278051dd6" translate="yes" xml:space="preserve">
          <source>date</source>
          <target state="translated">date</target>
        </trans-unit>
        <trans-unit id="14db0ec77f093796c3b29fb58d987db5d3857a0c" translate="yes" xml:space="preserve">
          <source>date1</source>
          <target state="translated">date1</target>
        </trans-unit>
        <trans-unit id="889895dd8cfc591ab8457e564fcd69f87d9a7381" translate="yes" xml:space="preserve">
          <source>date2</source>
          <target state="translated">date2</target>
        </trans-unit>
        <trans-unit id="f825ae98cf062540a0e549cb1bef6888d0158c56" translate="yes" xml:space="preserve">
          <source>dateObject</source>
          <target state="translated">dateObject</target>
        </trans-unit>
        <trans-unit id="c7c86dbd09a8f228a4a4200f911a4c3cd7b88ced" translate="yes" xml:space="preserve">
          <source>datePattern</source>
          <target state="translated">datePattern</target>
        </trans-unit>
        <trans-unit id="e2c421b2101647185b3c36b5fc7fa676896b909e" translate="yes" xml:space="preserve">
          <source>datePattern (String):</source>
          <target state="translated">datePattern (문자열) :</target>
        </trans-unit>
        <trans-unit id="71336afa8ba8e4791fc2574214a4fe23de2f88a7" translate="yes" xml:space="preserve">
          <source>dates only</source>
          <target state="translated">날짜 만</target>
        </trans-unit>
        <trans-unit id="64437ef6354b6777fccc73e89255bd8a47bb786d" translate="yes" xml:space="preserve">
          <source>de-serialize a cookie back into a JavaScript object:</source>
          <target state="translated">쿠키를 JavaScript 객체로 다시 직렬화 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="e8bc042e894b57e385c141e975f8f8f605b63b87" translate="yes" xml:space="preserve">
          <source>debounce</source>
          <target state="translated">debounce</target>
        </trans-unit>
        <trans-unit id="b413a7b1d5583e680b2cade5681539aba9f0eb78" translate="yes" xml:space="preserve">
          <source>debounce&lt;code&gt;(cb,wait);&lt;/code&gt;</source>
          <target state="translated">debounce&lt;code&gt;(cb,wait);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ec2e1680e8429aee69895b18e12a0b4dbdf28912" translate="yes" xml:space="preserve">
          <source>debounce&lt;code&gt;(selector,delay);&lt;/code&gt;</source>
          <target state="translated">debounce&lt;code&gt;(selector,delay);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="458f3ff18aa2eb526c0722be911fcd58a455b0a4" translate="yes" xml:space="preserve">
          <source>debugContainerId</source>
          <target state="translated">debugContainerId</target>
        </trans-unit>
        <trans-unit id="987e924ed999f4f6b5280d8be93d9885f729569f" translate="yes" xml:space="preserve">
          <source>debugHeight</source>
          <target state="translated">debugHeight</target>
        </trans-unit>
        <trans-unit id="45932d6fa98f39c5cd3f08cd951d8dc70fc5f7de" translate="yes" xml:space="preserve">
          <source>decimal</source>
          <target state="translated">decimal</target>
        </trans-unit>
        <trans-unit id="e8d806dd0ade89555c5cbcd840cef0fd077c4b1a" translate="yes" xml:space="preserve">
          <source>declare&lt;code&gt;(className,superclass,props);&lt;/code&gt;</source>
          <target state="translated">declare&lt;code&gt;(className,superclass,props);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="04dffc738182a7c277bf3804c61273d41563bda2" translate="yes" xml:space="preserve">
          <source>declaredClass</source>
          <target state="translated">declaredClass</target>
        </trans-unit>
        <trans-unit id="c365d60c762ca05a1396c3c1b01d9fb34931e5df" translate="yes" xml:space="preserve">
          <source>deeppink</source>
          <target state="translated">deeppink</target>
        </trans-unit>
        <trans-unit id="cbeaa1721d839f0901bfe0e47a68ac2f5ce9b5d8" translate="yes" xml:space="preserve">
          <source>deepskyblue</source>
          <target state="translated">deepskyblue</target>
        </trans-unit>
        <trans-unit id="bb1203a3aa1d36e1a9a3b1c1459f627e83f4176b" translate="yes" xml:space="preserve">
          <source>defaultDuration</source>
          <target state="translated">defaultDuration</target>
        </trans-unit>
        <trans-unit id="91919d1a579662aa92b6b2f2e9a0575e98e7bfcf" translate="yes" xml:space="preserve">
          <source>defaultPath</source>
          <target state="translated">defaultPath</target>
        </trans-unit>
        <trans-unit id="63a972fdc286a79e0ecc6edd88c772d505167e16" translate="yes" xml:space="preserve">
          <source>defaultTime</source>
          <target state="translated">defaultTime</target>
        </trans-unit>
        <trans-unit id="e940d2a8aa21109d83a8b3dad4cee386dabe8439" translate="yes" xml:space="preserve">
          <source>defaultValue</source>
          <target state="translated">defaultValue</target>
        </trans-unit>
        <trans-unit id="0db493d58eac59b290dc9f8fa31c822ac41c36e1" translate="yes" xml:space="preserve">
          <source>deferred</source>
          <target state="translated">deferred</target>
        </trans-unit>
        <trans-unit id="2c4042dfe50f916132278c7fe24d5600a77e2550" translate="yes" xml:space="preserve">
          <source>deferredInstrumentation</source>
          <target state="translated">deferredInstrumentation</target>
        </trans-unit>
        <trans-unit id="34dd7e454312db31b4acea1f8e6c6249b893ba2b" translate="yes" xml:space="preserve">
          <source>deferredList</source>
          <target state="translated">deferredList</target>
        </trans-unit>
        <trans-unit id="af4e28c6c2afd6e3cc606df30fc7124b96acdb1c" translate="yes" xml:space="preserve">
          <source>deferredRequestHandler</source>
          <target state="translated">deferredRequestHandler</target>
        </trans-unit>
        <trans-unit id="ab464f0252045aaf075411f0f1a6aed0797306c1" translate="yes" xml:space="preserve">
          <source>delay</source>
          <target state="translated">delay</target>
        </trans-unit>
        <trans-unit id="f2911138ce5848e5cb3ca81bfc27a8e1b11bd301" translate="yes" xml:space="preserve">
          <source>delay move by this number of pixels</source>
          <target state="translated">이 픽셀 수만큼 지연 이동</target>
        </trans-unit>
        <trans-unit id="2546b1f7ac8f10296c3fd0d845eb9abc409f24d9" translate="yes" xml:space="preserve">
          <source>delete a cookie:</source>
          <target state="translated">쿠키를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="90697a83d5e00c9392cabdccaf8b26c19f406c79" translate="yes" xml:space="preserve">
          <source>deletedItem</source>
          <target state="translated">deletedItem</target>
        </trans-unit>
        <trans-unit id="14a1319b88f30a856c4a8a7412466f2e2fa6df14" translate="yes" xml:space="preserve">
          <source>deletes all selected items</source>
          <target state="translated">선택된 모든 항목을 삭제합니다</target>
        </trans-unit>
        <trans-unit id="30610ced3ff7d99839f4e0d4ee4d69c25a8213f0" translate="yes" xml:space="preserve">
          <source>deletes item and any references to that item from the store.</source>
          <target state="translated">상점에서 항목 및 해당 항목에 대한 참조를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="6660bdbbf12496a267a6fc2dd658859cac4e5fc9" translate="yes" xml:space="preserve">
          <source>descendant selectors</source>
          <target state="translated">자손 선택기</target>
        </trans-unit>
        <trans-unit id="486093918ff37dd24e66995b21ec41caec0cbbf3" translate="yes" xml:space="preserve">
          <source>descending</source>
          <target state="translated">descending</target>
        </trans-unit>
        <trans-unit id="094b709e72fff7df0e8b7af1af9689f6e188cb33" translate="yes" xml:space="preserve">
          <source>descendingPrefix</source>
          <target state="translated">descendingPrefix</target>
        </trans-unit>
        <trans-unit id="4e0b5af978c4ca1675410cd16c92560adcb2c1e2" translate="yes" xml:space="preserve">
          <source>dest</source>
          <target state="translated">dest</target>
        </trans-unit>
        <trans-unit id="b6b30457ab2fcf95e972a9b6e2e3fbb5aff9afc9" translate="yes" xml:space="preserve">
          <source>dest, as modified</source>
          <target state="translated">수정 된대로</target>
        </trans-unit>
        <trans-unit id="866da12a640468af61c486986a986e0c5d92fcdf" translate="yes" xml:space="preserve">
          <source>destructor for the avatar; called to remove all references so it can be garbage-collected</source>
          <target state="translated">아바타의 소멸자; 가비지 수집 될 수 있도록 모든 참조를 제거하도록 호출</target>
        </trans-unit>
        <trans-unit id="7f27f9a06e984dffd3b855130bdd5f98961f06fc" translate="yes" xml:space="preserve">
          <source>determine if an object supports a given method</source>
          <target state="translated">객체가 주어진 메소드를 지원하는지 확인</target>
        </trans-unit>
        <trans-unit id="6bb65257fcab4e2975cd96b0f7fc4b53d97c10b6" translate="yes" xml:space="preserve">
          <source>dfd</source>
          <target state="translated">dfd</target>
        </trans-unit>
        <trans-unit id="e5cb3ac81c5bb1f9883169a3055e5dbc1c43e660" translate="yes" xml:space="preserve">
          <source>dijit</source>
          <target state="translated">dijit</target>
        </trans-unit>
        <trans-unit id="0b572776811772210632449188f969ebf132558c" translate="yes" xml:space="preserve">
          <source>dimgray</source>
          <target state="translated">dimgray</target>
        </trans-unit>
        <trans-unit id="04c34d8a91eac95aaa7d2c26cef0686d355a6f19" translate="yes" xml:space="preserve">
          <source>dimgrey</source>
          <target state="translated">dimgrey</target>
        </trans-unit>
        <trans-unit id="8fdb5a5bf421938f61ac76ff4d3f683eba3e1aa4" translate="yes" xml:space="preserve">
          <source>directReturn</source>
          <target state="translated">directReturn</target>
        </trans-unit>
        <trans-unit id="5b41ba2601e37104d54d7666ca68c4f5e11a1c4c" translate="yes" xml:space="preserve">
          <source>directives</source>
          <target state="translated">directives</target>
        </trans-unit>
        <trans-unit id="26021f1f4700496d68e21ef6d4a1b6945da4c8eb" translate="yes" xml:space="preserve">
          <source>div</source>
          <target state="translated">div</target>
        </trans-unit>
        <trans-unit id="fc6428a935f9c33949a803de06b8d5f2ca127176" translate="yes" xml:space="preserve">
          <source>dnd</source>
          <target state="translated">dnd</target>
        </trans-unit>
        <trans-unit id="07939f845cc6b306c094e18937dea12ee7991b02" translate="yes" xml:space="preserve">
          <source>dnd/move</source>
          <target state="translated">dnd/move</target>
        </trans-unit>
        <trans-unit id="f7f029ecb98abe979074a3ab45b74dbd9af02d42" translate="yes" xml:space="preserve">
          <source>doc</source>
          <target state="translated">doc</target>
        </trans-unit>
        <trans-unit id="d368c63f74a640e5252cc3009960858287b3cd3a" translate="yes" xml:space="preserve">
          <source>documentElement</source>
          <target state="translated">documentElement</target>
        </trans-unit>
        <trans-unit id="d34f583c1274e30ad4c243e3954c122ae2251379" translate="yes" xml:space="preserve">
          <source>documentObject</source>
          <target state="translated">documentObject</target>
        </trans-unit>
        <trans-unit id="1a10bf0b57824392bd15bb7db0090491965ceb09" translate="yes" xml:space="preserve">
          <source>dodgerblue</source>
          <target state="translated">dodgerblue</target>
        </trans-unit>
        <trans-unit id="ad23f6786e51d922addeac70e05d53594e5a895f" translate="yes" xml:space="preserve">
          <source>does not return any elements.</source>
          <target state="translated">어떤 요소도 반환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5e09bf5728351d0f904bd2824453961bf95c41ee" translate="yes" xml:space="preserve">
          <source>dojo</source>
          <target state="translated">dojo</target>
        </trans-unit>
        <trans-unit id="93246d0b62dd22ae1da904c4a82743c414a09946" translate="yes" xml:space="preserve">
          <source>dojo.eval(&quot;var pi = 3.14;&quot;);</source>
          <target state="translated">dojo.eval ( &quot;var pi = 3.14;&quot;);</target>
        </trans-unit>
        <trans-unit id="da94d4f4cb2114b2076977445ba0ac63deca0cb3" translate="yes" xml:space="preserve">
          <source>dojo.eval(&quot;window.pi = 3.14;&quot;)</source>
          <target state="translated">dojo.eval ( &quot;window.pi = 3.14;&quot;)</target>
        </trans-unit>
        <trans-unit id="a0c9e2f2387732063ae2b56d34ac8827b3d2e76c" translate="yes" xml:space="preserve">
          <source>dojo.pushContext treats contexts as a stack. The auto-detected contexts which are initially provided using dojo.setContext() require authors to keep state in order to &quot;return&quot; to a previous context, whereas the dojo.pushContext and dojo.popContext methods provide a more natural way to augment blocks of code to ensure that they execute in a different window or frame without issue. If called without any arguments, the default context (the context when Dojo is first loaded) is instead pushed into the stack. If only a single string is passed, a node in the intitial context's document is looked up and its contextWindow and contextDocument properties are used as the context to push. This means that iframes can be given an ID and code can be executed in the scope of the iframe's document in subsequent calls easily.</source>
          <target state="translated">dojo.pushContext는 컨텍스트를 스택으로 취급합니다. dojo.setContext ()를 사용하여 처음에 제공되는 자동 감지 컨텍스트는 작성자가 이전 컨텍스트로 &quot;돌아 가기&quot;위해 상태를 유지해야하지만 dojo.pushContext 및 dojo.popContext 메소드는보다 자연스럽게 블록을 확장하는 방법을 제공합니다. 코드가 다른 창이나 프레임에서 문제없이 실행되도록합니다. 인수없이 호출하면 기본 컨텍스트 (Dojo가 처음로드 될 때의 컨텍스트)가 대신 스택으로 푸시됩니다. 단일 문자열 만 전달되면 개시 컨텍스트 문서의 노드가 조회되고 해당 contextWindow 및 contextDocument 속성이 푸시 할 컨텍스트로 사용됩니다. 이것은 iframe에 ID를 부여 할 수 있고 후속 호출에서 iframe 문서의 범위에서 코드를 쉽게 실행할 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="383e67435273aaf1d2403c61e73d550c92aed633" translate="yes" xml:space="preserve">
          <source>dojo.query and XML Documents:</source>
          <target state="translated">dojo.query 및 XML 문서 :</target>
        </trans-unit>
        <trans-unit id="8d88d01da0004330d26b753c6adbf45a1a955637" translate="yes" xml:space="preserve">
          <source>dojo.query() is the swiss army knife of DOM node manipulation in Dojo. Much like Prototype's &quot;$$&quot; (bling-bling) function or JQuery's &quot;$&quot; function, dojo.query provides robust, high-performance CSS-based node selector support with the option of scoping searches to a particular sub-tree of a document.</source>
          <target state="translated">dojo.query ()는 Dojo의 DOM 노드 조작에 대한 스위스 군용 칼입니다. 프로토 타입의 &quot;$$&quot;(bling-bling) 함수 또는 JQuery의 &quot;$&quot;함수와 마찬가지로 dojo.query는 문서의 특정 하위 트리에 대한 검색 범위를 지정할 수있는 강력한 고성능 CSS 기반 노드 선택기 지원을 제공합니다. .</target>
        </trans-unit>
        <trans-unit id="f32bf326d9631341f9ce2d7e01ff3e47741db5df" translate="yes" xml:space="preserve">
          <source>dojo/AdapterRegistry</source>
          <target state="translated">dojo/AdapterRegistry</target>
        </trans-unit>
        <trans-unit id="cfd20d0ed6204c17e5188a7c6050e35ce51114f7" translate="yes" xml:space="preserve">
          <source>dojo/Deferred</source>
          <target state="translated">dojo/Deferred</target>
        </trans-unit>
        <trans-unit id="dd6e017b5a9f21e559757813b20c302b82d5d872" translate="yes" xml:space="preserve">
          <source>dojo/DeferredList</source>
          <target state="translated">dojo/DeferredList</target>
        </trans-unit>
        <trans-unit id="8a0adbec58c39ba3bb97aa639876b0217e6ed247" translate="yes" xml:space="preserve">
          <source>dojo/Evented</source>
          <target state="translated">dojo/Evented</target>
        </trans-unit>
        <trans-unit id="a00a00147e211a994d69e90d7f25b4cb70ed69ba" translate="yes" xml:space="preserve">
          <source>dojo/NodeList</source>
          <target state="translated">dojo/NodeList</target>
        </trans-unit>
        <trans-unit id="6ba4b0fb76b76432785674b311175262581d17ef" translate="yes" xml:space="preserve">
          <source>dojo/NodeList implements .style() using the same syntax, omitting the &quot;node&quot; parameter, calling dojo.style() on every element of the list. See: &lt;code&gt;dojo/query&lt;/code&gt; and &lt;code&gt;dojo/NodeList&lt;/code&gt;</source>
          <target state="translated">dojo / NodeList는 동일한 구문을 사용하여 .style ()을 구현하고 &quot;node&quot;매개 변수를 생략하고 목록의 모든 요소에서 dojo.style ()을 호출합니다. 참조 : &lt;code&gt;dojo/query&lt;/code&gt; 및 &lt;code&gt;dojo/NodeList&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="13172b4593e6cfb105bd2afecbf0b0b62af78057" translate="yes" xml:space="preserve">
          <source>dojo/NodeList implements .style() using the same syntax, omitting the &quot;node&quot; parameter, calling dojo/dom-style.get() on every element of the list. See: &lt;code&gt;dojo/query&lt;/code&gt; and &lt;code&gt;dojo/NodeList&lt;/code&gt;</source>
          <target state="translated">dojo / NodeList는 동일한 구문을 사용하여 .style ()을 구현하고 &quot;node&quot;매개 변수를 생략하고 목록의 모든 요소에서 dojo / dom-style.get ()을 호출합니다. 참조 : &lt;code&gt;dojo/query&lt;/code&gt; 및 &lt;code&gt;dojo/NodeList&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="947e959765db7880ff93f550580de1c761b75b17" translate="yes" xml:space="preserve">
          <source>dojo/NodeList, the nodes currently in this NodeList will be returned, not the appended content.</source>
          <target state="translated">dojo / NodeList를 추가하면 추가 된 컨텐츠가 아니라이 NodeList에 현재있는 노드가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="f141f274cb5f2c108c356b4c635049197f7b2dc4" translate="yes" xml:space="preserve">
          <source>dojo/NodeList, the nodes currently in this NodeList will be returned, not the appended content. assume a DOM created by this markup:</source>
          <target state="translated">dojo / NodeList를 추가하면 추가 된 컨텐츠가 아니라이 NodeList에 현재있는 노드가 리턴됩니다. 이 마크 업으로 생성 된 DOM을 가정합니다 :</target>
        </trans-unit>
        <trans-unit id="b5a719ccee961e0b6c5b0763247deb72a522cea2" translate="yes" xml:space="preserve">
          <source>dojo/NodeList, the nodes currently in this NodeList will be returned, not the matched nodes from the query.</source>
          <target state="translated">dojo / NodeList,이 NodeList에 현재있는 노드가 조회에서 일치하는 노드가 아니라 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="20f4ba7d0b685b80a8ee6117d86e5843f82adb1d" translate="yes" xml:space="preserve">
          <source>dojo/NodeList-data</source>
          <target state="translated">dojo/NodeList-data</target>
        </trans-unit>
        <trans-unit id="5b7e891aab3edd4f0f61e4f53da744263b2540da" translate="yes" xml:space="preserve">
          <source>dojo/NodeList-dom</source>
          <target state="translated">dojo/NodeList-dom</target>
        </trans-unit>
        <trans-unit id="8ade337ee6e6dcf00a3160ff77e62b26b9a843e3" translate="yes" xml:space="preserve">
          <source>dojo/NodeList-fx</source>
          <target state="translated">dojo/NodeList-fx</target>
        </trans-unit>
        <trans-unit id="4cc446afdc10935e7306cdc79d4d3e998ac520d9" translate="yes" xml:space="preserve">
          <source>dojo/NodeList-html</source>
          <target state="translated">dojo/NodeList-html</target>
        </trans-unit>
        <trans-unit id="ef4f692bb4c41f955078ea403f19d67de162848a" translate="yes" xml:space="preserve">
          <source>dojo/NodeList-manipulate</source>
          <target state="translated">dojo/NodeList-manipulate</target>
        </trans-unit>
        <trans-unit id="802972df05c81dfa929078c9fd9081acd8c9f18e" translate="yes" xml:space="preserve">
          <source>dojo/NodeList-traverse</source>
          <target state="translated">dojo/NodeList-traverse</target>
        </trans-unit>
        <trans-unit id="c0d92f56c0b25f1ba1a27954e6ddfddf1a066eda" translate="yes" xml:space="preserve">
          <source>dojo/NodeList._nodeDataCache</source>
          <target state="translated">dojo/NodeList._nodeDataCache</target>
        </trans-unit>
        <trans-unit id="5e2bd56f1a6f3f4d4b4c284fece9faccae6889fa" translate="yes" xml:space="preserve">
          <source>dojo/Stateful</source>
          <target state="translated">dojo/Stateful</target>
        </trans-unit>
        <trans-unit id="95bfe8474e1761591649c065ed12201785c7f82f" translate="yes" xml:space="preserve">
          <source>dojo/_base/Color</source>
          <target state="translated">dojo/_base/Color</target>
        </trans-unit>
        <trans-unit id="5faf5f71b80ddbc505f41aca5345f21b42b79f66" translate="yes" xml:space="preserve">
          <source>dojo/_base/Color.named</source>
          <target state="translated">dojo/_base/Color.named</target>
        </trans-unit>
        <trans-unit id="3890145a17bfdce56c08212f218c8608d42bef4d" translate="yes" xml:space="preserve">
          <source>dojo/_base/Deferred</source>
          <target state="translated">dojo/_base/Deferred</target>
        </trans-unit>
        <trans-unit id="2d6b8bc12ec82202f7c01f4305a94bac8864d20b" translate="yes" xml:space="preserve">
          <source>dojo/_base/NodeList</source>
          <target state="translated">dojo/_base/NodeList</target>
        </trans-unit>
        <trans-unit id="1eb5abc338aa5ad242a31852a79694c0b44282c8" translate="yes" xml:space="preserve">
          <source>dojo/_base/array</source>
          <target state="translated">dojo/_base/array</target>
        </trans-unit>
        <trans-unit id="b35deee86b2c45e40e951269f6d9a73e28acfc79" translate="yes" xml:space="preserve">
          <source>dojo/_base/browser</source>
          <target state="translated">dojo/_base/browser</target>
        </trans-unit>
        <trans-unit id="2032ecf6123e4dc3ce74976ce7ae4e4c0c81f1f2" translate="yes" xml:space="preserve">
          <source>dojo/_base/config</source>
          <target state="translated">dojo/_base/config</target>
        </trans-unit>
        <trans-unit id="756a90873335164f55fded23bce7c1d9340c5009" translate="yes" xml:space="preserve">
          <source>dojo/_base/config.modulePaths</source>
          <target state="translated">dojo/_base/config.modulePaths</target>
        </trans-unit>
        <trans-unit id="48ddff4be240be24a4508eb1dc7db578e467b916" translate="yes" xml:space="preserve">
          <source>dojo/_base/connect</source>
          <target state="translated">dojo/_base/connect</target>
        </trans-unit>
        <trans-unit id="b0cb05df53f9e26ec0022a67a3a2bd1a256e84a6" translate="yes" xml:space="preserve">
          <source>dojo/_base/declare</source>
          <target state="translated">dojo/_base/declare</target>
        </trans-unit>
        <trans-unit id="d9483dfb7e36809a186327c65c11d412cadcb41e" translate="yes" xml:space="preserve">
          <source>dojo/_base/declare.__DeclareCreatedObject</source>
          <target state="translated">dojo/_base/declare.__DeclareCreatedObject</target>
        </trans-unit>
        <trans-unit id="417971cd653e4ee2f37d640a0d26905077607331" translate="yes" xml:space="preserve">
          <source>dojo/_base/event</source>
          <target state="translated">dojo/_base/event</target>
        </trans-unit>
        <trans-unit id="7a7788ed63df0284d7768cb0f51f68ffa1b90524" translate="yes" xml:space="preserve">
          <source>dojo/_base/fx</source>
          <target state="translated">dojo/_base/fx</target>
        </trans-unit>
        <trans-unit id="f8f340e85bb8c310adf7b79483c99ec27d8eab05" translate="yes" xml:space="preserve">
          <source>dojo/_base/html</source>
          <target state="translated">dojo/_base/html</target>
        </trans-unit>
        <trans-unit id="3848133dc7c2319396a5b38efa70bad413c89954" translate="yes" xml:space="preserve">
          <source>dojo/_base/json</source>
          <target state="translated">dojo/_base/json</target>
        </trans-unit>
        <trans-unit id="a257a6786e538b3f90826e44a92a22da898fb4ba" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel</source>
          <target state="translated">dojo/_base/kernel</target>
        </trans-unit>
        <trans-unit id="575da3ce1807661eecf7b9fe67e561e60a99ef54" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.Stateful</source>
          <target state="translated">dojo/_base/kernel.Stateful</target>
        </trans-unit>
        <trans-unit id="61bdbd12ea7569db15f0d101d9100ec9502c85fa" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.__IoArgs</source>
          <target state="translated">dojo/_base/kernel.__IoArgs</target>
        </trans-unit>
        <trans-unit id="c49f8c8db618ef599aabd0cacff0c7d7a84e1b46" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.__IoCallbackArgs</source>
          <target state="translated">dojo/_base/kernel.__IoCallbackArgs</target>
        </trans-unit>
        <trans-unit id="68c3ec8d04a20f338045fb0e1b1822209d788c90" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.__IoPublish</source>
          <target state="translated">dojo/_base/kernel.__IoPublish</target>
        </trans-unit>
        <trans-unit id="ccf3b4e317fa1c398e8ad90e92197521b757b087" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.__XhrArgs</source>
          <target state="translated">dojo/_base/kernel.__XhrArgs</target>
        </trans-unit>
        <trans-unit id="a6cea0cef6dc30b96b48d829c28b0ccb7049346f" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel._contentHandlers</source>
          <target state="translated">dojo/_base/kernel._contentHandlers</target>
        </trans-unit>
        <trans-unit id="8dfc692e4f8f6190632bd12d196fda3973b40510" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel._hasResource</source>
          <target state="translated">dojo/_base/kernel._hasResource</target>
        </trans-unit>
        <trans-unit id="6d22f3087d62aa1e8298d25d0926cb54e851e279" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel._nodeDataCache</source>
          <target state="translated">dojo/_base/kernel._nodeDataCache</target>
        </trans-unit>
        <trans-unit id="efb1deda76fa2d1be2c3382bbcb53d9591373f99" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.back</source>
          <target state="translated">dojo/_base/kernel.back</target>
        </trans-unit>
        <trans-unit id="dd65c1038b66a29d7c36bb1117cc7fec9f2c1eef" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.cldr</source>
          <target state="translated">dojo/_base/kernel.cldr</target>
        </trans-unit>
        <trans-unit id="bfd63667560c0ad56056ba6c06575acacaea9667" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.colors</source>
          <target state="translated">dojo/_base/kernel.colors</target>
        </trans-unit>
        <trans-unit id="e446a3c1bacda7e5370c6126c98f4eac14908ba1" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.config</source>
          <target state="translated">dojo/_base/kernel.config</target>
        </trans-unit>
        <trans-unit id="a0cbb40878a28fde1feb18d221ed2e7c11f341f4" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.contentHandlers</source>
          <target state="translated">dojo/_base/kernel.contentHandlers</target>
        </trans-unit>
        <trans-unit id="e0523b9917b6d41a2c8a19316414cfa58a9a1c17" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.currency</source>
          <target state="translated">dojo/_base/kernel.currency</target>
        </trans-unit>
        <trans-unit id="6c72212053850ca08550c9ab4f8da31d33bc5881" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.data</source>
          <target state="translated">dojo/_base/kernel.data</target>
        </trans-unit>
        <trans-unit id="0886b1fabfd70d0a821b372ac8dc0d6b0108dc2d" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.date</source>
          <target state="translated">dojo/_base/kernel.date</target>
        </trans-unit>
        <trans-unit id="7a67e3f0ae5a66e5d62343ec8d24db8380185cb2" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.dnd</source>
          <target state="translated">dojo/_base/kernel.dnd</target>
        </trans-unit>
        <trans-unit id="d34e5142478b308b5feee7e1f39705817db9f3af" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.doc</source>
          <target state="translated">dojo/_base/kernel.doc</target>
        </trans-unit>
        <trans-unit id="5b3e33be55cf85177c03ad2a221afdb5a6d47a36" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.fx</source>
          <target state="translated">dojo/_base/kernel.fx</target>
        </trans-unit>
        <trans-unit id="7ba28e3e6a54b67d50b8ae0470ddcd8c12c7ef13" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.gears</source>
          <target state="translated">dojo/_base/kernel.gears</target>
        </trans-unit>
        <trans-unit id="14a6d89f748d53d75fa3d2144aadbaf4475c9718" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.global</source>
          <target state="translated">dojo/_base/kernel.global</target>
        </trans-unit>
        <trans-unit id="2b380b1e1a72a4229f98d42bf4322f4588342825" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.i18n</source>
          <target state="translated">dojo/_base/kernel.i18n</target>
        </trans-unit>
        <trans-unit id="4e4257ceaf1c499497e67c877dbd9b0a28c90246" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.io</source>
          <target state="translated">dojo/_base/kernel.io</target>
        </trans-unit>
        <trans-unit id="e0c9fadb9100898194a8f910fb79153e361227fe" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.keys</source>
          <target state="translated">dojo/_base/kernel.keys</target>
        </trans-unit>
        <trans-unit id="7426a8bed87770d6be774bf771c5a229000f9be4" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.mouseButtons</source>
          <target state="translated">dojo/_base/kernel.mouseButtons</target>
        </trans-unit>
        <trans-unit id="ac1a75d3758971426b4d79b2c3d5260c155d2192" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.number</source>
          <target state="translated">dojo/_base/kernel.number</target>
        </trans-unit>
        <trans-unit id="291c9e5e6fa2c9b18659d35d0bb4d3e679f13e1b" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.regexp</source>
          <target state="translated">dojo/_base/kernel.regexp</target>
        </trans-unit>
        <trans-unit id="44de287ad3d9900f0dd2b218ba4552c727b8ac75" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.rpc</source>
          <target state="translated">dojo/_base/kernel.rpc</target>
        </trans-unit>
        <trans-unit id="7fa4801a0c6bc354303de3aa0a51f36b085272ff" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.scopeMap</source>
          <target state="translated">dojo/_base/kernel.scopeMap</target>
        </trans-unit>
        <trans-unit id="48e93df73cb35a3c544df0bf9dce4847866f80df" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.store</source>
          <target state="translated">dojo/_base/kernel.store</target>
        </trans-unit>
        <trans-unit id="3e42d43f35b18378f913e6c437ed1f2b148377e0" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.string</source>
          <target state="translated">dojo/_base/kernel.string</target>
        </trans-unit>
        <trans-unit id="a43f8d36335e57210780668652d4d8c0c73c6e98" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.tests</source>
          <target state="translated">dojo/_base/kernel.tests</target>
        </trans-unit>
        <trans-unit id="4f8131d9f6a58bba3fcaf1461bbd9c9a8366b5cd" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.touch</source>
          <target state="translated">dojo/_base/kernel.touch</target>
        </trans-unit>
        <trans-unit id="fd229b585ebdae931e039cb391bcc17129ba0057" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.version</source>
          <target state="translated">dojo/_base/kernel.version</target>
        </trans-unit>
        <trans-unit id="77c12374c9ee2fd1e2d08d4b89d5f5c968a91ab3" translate="yes" xml:space="preserve">
          <source>dojo/_base/kernel.window</source>
          <target state="translated">dojo/_base/kernel.window</target>
        </trans-unit>
        <trans-unit id="e00bfd23a5d16945d4605931a6dbc55c4ab396d6" translate="yes" xml:space="preserve">
          <source>dojo/_base/lang</source>
          <target state="translated">dojo/_base/lang</target>
        </trans-unit>
        <trans-unit id="9fffc67465f72a9d57f3ed970a8a5e7bf2f14e85" translate="yes" xml:space="preserve">
          <source>dojo/_base/loader</source>
          <target state="translated">dojo/_base/loader</target>
        </trans-unit>
        <trans-unit id="351f77fe9f5d8f8c9e6b232578a8cead4a8babcf" translate="yes" xml:space="preserve">
          <source>dojo/_base/query</source>
          <target state="translated">dojo/_base/query</target>
        </trans-unit>
        <trans-unit id="33e104c512454f4286722ba04bfdb3c20cfbef63" translate="yes" xml:space="preserve">
          <source>dojo/_base/sniff</source>
          <target state="translated">dojo/_base/sniff</target>
        </trans-unit>
        <trans-unit id="aed7667a0dbf4d89800eefd8175bc169457bca7b" translate="yes" xml:space="preserve">
          <source>dojo/_base/unload</source>
          <target state="translated">dojo/_base/unload</target>
        </trans-unit>
        <trans-unit id="ebe11dd96fc9b8ee9362f38656e1f1242762d6c4" translate="yes" xml:space="preserve">
          <source>dojo/_base/url</source>
          <target state="translated">dojo/_base/url</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
