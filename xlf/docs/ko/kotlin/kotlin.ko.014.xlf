<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="kotlin">
    <body>
      <group id="kotlin">
        <trans-unit id="1e94ba5be90faaf690548102545dc0952f060022" translate="yes" xml:space="preserve">
          <source>GeometryUtils</source>
          <target state="translated">GeometryUtils</target>
        </trans-unit>
        <trans-unit id="4e3fb78e17a8387a0dee01367cbbd69a1775c579" translate="yes" xml:space="preserve">
          <source>Get a byte from the mutable data.</source>
          <target state="translated">변경 가능한 데이터에서 바이트를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="bfab0204422bfeb94ae7d9f7a9237c9d9a1e7ba4" translate="yes" xml:space="preserve">
          <source>Get a full report that contains the state of each coroutine and its stack. To obtain it, right-click inside the &lt;strong&gt;Coroutines&lt;/strong&gt; tab, and then click &lt;strong&gt;Get Coroutines Dump&lt;/strong&gt;.</source>
          <target state="translated">각 코 루틴의 상태와 스택이 포함 된 전체 보고서를 가져옵니다. 이를 얻으려면 &lt;strong&gt;Coroutines&lt;/strong&gt; 탭 내부를 마우스 오른쪽 버튼으로 클릭 한 다음 &lt;strong&gt;Get Coroutines Dump&lt;/strong&gt; 를 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="97255b26e50ef02686cad7f6fc1ee00930f7d4a3" translate="yes" xml:space="preserve">
          <source>Get first item of a possibly empty collection</source>
          <target state="translated">비어있는 컬렉션의 첫 번째 항목 가져 오기</target>
        </trans-unit>
        <trans-unit id="f94eb63ea7b5c688c7d367da8144aa72283d06a2" translate="yes" xml:space="preserve">
          <source>Get started with Kotlin Multiplatform Mobile (KMM)</source>
          <target state="translated">Kotlin Multiplatform Mobile (KMM) 시작하기</target>
        </trans-unit>
        <trans-unit id="c2e1b35c387fa63896999438c72ee91795fb8ecd" translate="yes" xml:space="preserve">
          <source>GetNotificationOptions</source>
          <target state="translated">GetNotificationOptions</target>
        </trans-unit>
        <trans-unit id="00112e9e707db49f0a0f93f1ee129c6efe3c1bc4" translate="yes" xml:space="preserve">
          <source>GetRootNodeOptions</source>
          <target state="translated">GetRootNodeOptions</target>
        </trans-unit>
        <trans-unit id="0c7c6733bfd36f14bb53c13bb7a5f327d6e85555" translate="yes" xml:space="preserve">
          <source>GetSVGDocument</source>
          <target state="translated">GetSVGDocument</target>
        </trans-unit>
        <trans-unit id="1c29cd0a72813c07e82b51cdf61ab34e19b8d38a" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-char-at#kotlin.native%24getCharAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-char-at#kotlin.native%24getCharAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="49b054960ff26f54ffbb1b4ce10fe0dffa2b6894" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-char-at#kotlin.native%24getCharAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-char-at#kotlin.native%24getCharAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="12c146ab92ff828f48210bfc29f2a0b851cff183" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-double-at#kotlin.native%24getDoubleAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-double-at#kotlin.native%24getDoubleAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 을 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="1f529825faff1b1381005dfcdc07db44e0dce4c5" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-double-at#kotlin.native%24getDoubleAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-double-at#kotlin.native%24getDoubleAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 을 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="c613a964720f0d6b16c4f6f3e24ca409a93e230b" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-float-at#kotlin.native%24getFloatAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-float-at#kotlin.native%24getFloatAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="601935ff15204ec1fc75fdb33f0ddb75d3c32e1e" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-float-at#kotlin.native%24getFloatAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-float-at#kotlin.native%24getFloatAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="e40860a0e917d0b30df1c353bdab3718cc1a5cae" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-int-at#kotlin.native%24getIntAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-int-at#kotlin.native%24getIntAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="57657e63af1c3d11183b11147cc642f679e87be6" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-int-at#kotlin.native%24getIntAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-int-at#kotlin.native%24getIntAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="ba9e4dffcc804ef80ace24233a9a283d9ee2413e" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-long-at#kotlin.native%24getLongAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-long-at#kotlin.native%24getLongAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 을 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="e34ce9f4a9cf96bdfab2bc1915bf1ef9c4aa59b4" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-long-at#kotlin.native%24getLongAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-long-at#kotlin.native%24getLongAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 을 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="050c879d6a9b25698d6d451f3f94af42b69689a3" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-short-at#kotlin.native%24getShortAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">가져옵니다 &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;쇼트&lt;/a&gt; 의에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;이 ByteArray&lt;/a&gt; 지정된 인덱스에서 바이트 버퍼 &lt;a href=&quot;../../kotlin.native/get-short-at#kotlin.native%24getShortAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d86e4ff6a657a1b0f2d8a5e25ddfb8a897e55615" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-short-at#kotlin.native%24getShortAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-short-at#kotlin.native%24getShortAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="a3b81bd33b6cd037160b4cec0ac8e3dda6d1f79b" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-char-at#kotlin.native%24getCharAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-char-at#kotlin.native%24getCharAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../kotlin/-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="1f8022c3c9bee45cfe140c1c30cf3fdd5eed4178" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-char-at#kotlin.native%24getCharAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-char-at#kotlin.native%24getCharAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../kotlin/-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="0a9274c2e88dd117f1562e9fb7853c1bb8a76f52" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-double-at#kotlin.native%24getDoubleAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-double-at#kotlin.native%24getDoubleAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 을 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="b2c0932268f392529c7267cbe6bd33aacf1c5ac0" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-double-at#kotlin.native%24getDoubleAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-double-at#kotlin.native%24getDoubleAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 을 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="05f14be5d64ee1f27a2c3eebdfd84da241f1b7b5" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-float-at#kotlin.native%24getFloatAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-float-at#kotlin.native%24getFloatAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="b47fbfb16819fea890346bf56370b10e0fe6b09d" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-float-at#kotlin.native%24getFloatAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-float-at#kotlin.native%24getFloatAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="19b181f7974529f4fcfdfb7c7df609deb054c407" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-int-at#kotlin.native%24getIntAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-int-at#kotlin.native%24getIntAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../kotlin/-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="cba0729c202f994b45075bee2a230e3b803ee8d9" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-int-at#kotlin.native%24getIntAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-int-at#kotlin.native%24getIntAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../kotlin/-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="58b0897e8884a67298867d9626c28bef8ba34b98" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-long-at#kotlin.native%24getLongAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-long-at#kotlin.native%24getLongAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../kotlin/-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 을 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="65ded6c3e5b39175169799b69105c25d38f74bba" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-long-at#kotlin.native%24getLongAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-long-at#kotlin.native%24getLongAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../kotlin/-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 을 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="77ab2f99d15b02d7c8aede4c088766c187e76fbe" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-short-at#kotlin.native%24getShortAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">가져옵니다 &lt;a href=&quot;../kotlin/-short/index#kotlin.Short&quot;&gt;쇼트&lt;/a&gt; 의에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;이 ByteArray&lt;/a&gt; 지정된 인덱스에서 바이트 버퍼 &lt;a href=&quot;get-short-at#kotlin.native%24getShortAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eba163b6256c35de7fd91af80a6a1ec957825686" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-short-at#kotlin.native%24getShortAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-short-at#kotlin.native%24getShortAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../kotlin/-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="ceba4e0c24f35bc1d24919beac99894fff5cc49e" translate="yes" xml:space="preserve">
          <source>Gets UByte out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-byte-at#kotlin.native%24getUByteAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-u-byte-at#kotlin.native%24getUByteAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UByte를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="6a93b4ec86defaa569a52c059d53e5a7d37d3efa" translate="yes" xml:space="preserve">
          <source>Gets UByte out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-byte-at#kotlin.native%24getUByteAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-u-byte-at#kotlin.native%24getUByteAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UByte를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="5443eaf1f8b4d504383ed266ef07407ecf2dec10" translate="yes" xml:space="preserve">
          <source>Gets UByte out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-byte-at#kotlin.native%24getUByteAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-u-byte-at#kotlin.native%24getUByteAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UByte를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="8e7128204fcd595b514aaa5f54b40f869da3aa3a" translate="yes" xml:space="preserve">
          <source>Gets UByte out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-byte-at#kotlin.native%24getUByteAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-u-byte-at#kotlin.native%24getUByteAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UByte를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="5e56c63ae7abdc2f655dc5a3867f58e6cf8f10ec" translate="yes" xml:space="preserve">
          <source>Gets UInt out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-int-at#kotlin.native%24getUIntAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-u-int-at#kotlin.native%24getUIntAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UInt를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="ff166f5e64d8705b447c57cacfb6ac60ac2b7a3b" translate="yes" xml:space="preserve">
          <source>Gets UInt out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-int-at#kotlin.native%24getUIntAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-u-int-at#kotlin.native%24getUIntAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UInt를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="ff8bb654dc35893343272fb488280f04d13917e5" translate="yes" xml:space="preserve">
          <source>Gets UInt out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-int-at#kotlin.native%24getUIntAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-u-int-at#kotlin.native%24getUIntAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UInt를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="68b8029657597c84d727421ce61c5d52481aff8a" translate="yes" xml:space="preserve">
          <source>Gets UInt out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-int-at#kotlin.native%24getUIntAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-u-int-at#kotlin.native%24getUIntAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UInt를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="ad23f949f964388c3320ca1484e325ac9c528b96" translate="yes" xml:space="preserve">
          <source>Gets ULong out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-long-at#kotlin.native%24getULongAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-u-long-at#kotlin.native%24getULongAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 ULong을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7fb406360458354dbfa0420bae21a2778069a23b" translate="yes" xml:space="preserve">
          <source>Gets ULong out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-long-at#kotlin.native%24getULongAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-u-long-at#kotlin.native%24getULongAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 ULong을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="f09eaa4ed41d19ee2683030c8f94ad668353d816" translate="yes" xml:space="preserve">
          <source>Gets ULong out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-long-at#kotlin.native%24getULongAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-u-long-at#kotlin.native%24getULongAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 ULong을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="546d4f2ac7bd7483f85b8483d95f71b63a5930e9" translate="yes" xml:space="preserve">
          <source>Gets ULong out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-long-at#kotlin.native%24getULongAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-u-long-at#kotlin.native%24getULongAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 ULong을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="f6b5923edb949a03319c75e067d0d3d389ef5b5b" translate="yes" xml:space="preserve">
          <source>Gets UShort out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-short-at#kotlin.native%24getUShortAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-u-short-at#kotlin.native%24getUShortAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UShort를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="62b82e9e716ae2481105eecd5dcfe6a4d4473d82" translate="yes" xml:space="preserve">
          <source>Gets UShort out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-short-at#kotlin.native%24getUShortAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-u-short-at#kotlin.native%24getUShortAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UShort를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="359c6d06bf5b44e59852ecd275fcbab50a57e29e" translate="yes" xml:space="preserve">
          <source>Gets UShort out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-short-at#kotlin.native%24getUShortAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-u-short-at#kotlin.native%24getUShortAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UShort를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="19122847839d9371ee42bcdf3b7ae24fbf838432" translate="yes" xml:space="preserve">
          <source>Gets UShort out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-short-at#kotlin.native%24getUShortAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-u-short-at#kotlin.native%24getUShortAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UShort를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="11cb5c2d4da49e0fbbf552dbf506006785cc6aec" translate="yes" xml:space="preserve">
          <source>Gets a sequence for visiting this directory and all its content in bottom-up order. Depth-first search is used and directories are visited after all their files.</source>
          <target state="translated">이 디렉토리 및 모든 컨텐츠를 상향식 순서로 방문하기위한 순서를 가져옵니다. 깊이 우선 검색이 사용되며 모든 파일 다음에 디렉토리가 방문됩니다.</target>
        </trans-unit>
        <trans-unit id="de21168140d7a6ffec2aa5d645b81cfb0b1d5ead" translate="yes" xml:space="preserve">
          <source>Gets a sequence for visiting this directory and all its content in top-down order. Depth-first search is used and directories are visited before all their files.</source>
          <target state="translated">이 디렉토리 및 모든 해당 컨텐츠를 위에서 아래로 방문하는 순서를 가져옵니다. 깊이 우선 검색이 사용되며 모든 파일보다 먼저 디렉토리를 방문합니다.</target>
        </trans-unit>
        <trans-unit id="8c112a6c105dbc16e8786834f4d9d438ca98749b" translate="yes" xml:space="preserve">
          <source>Gets a sequence for visiting this directory and all its content.</source>
          <target state="translated">이 디렉토리 및 모든 컨텐츠를 방문하기위한 순서를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="ba0bb49ff92219d8b958b11eef51aa366e859249" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether this node is a TEXT_NODE or a CDATA_SECTION_NODE.</source>
          <target state="translated">이 노드가 TEXT_NODE인지 또는 CDATA_SECTION_NODE인지를 나타내는 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="194ae6961c389bb66dfbaf6c24ca4f8b25cffd7f" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether this node is an &lt;a href=&quot;https://kotlinlang.org/api/latest/jvm/stdlib/org.w3c.dom/-element/index.html&quot;&gt;Element&lt;/a&gt;.</source>
          <target state="translated">이 노드가 &lt;a href=&quot;https://kotlinlang.org/api/latest/jvm/stdlib/org.w3c.dom/-element/index.html&quot;&gt;Element&lt;/a&gt; 인지를 나타내는 값을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="31dbfb91c70eeb1c5307d3ad1bfaea63d69faa0e" translate="yes" xml:space="preserve">
          <source>Gets current system time in microseconds since certain moment in the past, only delta between two subsequent calls makes sense.</source>
          <target state="translated">과거의 특정 순간부터 현재 시스템 시간을 마이크로 초 단위로 가져옵니다. 두 번의 호출 사이의 델타 만 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="0809d536712c860de45cf5b17c686273bac85a06" translate="yes" xml:space="preserve">
          <source>Gets current system time in milliseconds since certain moment in the past, only delta between two subsequent calls makes sense.</source>
          <target state="translated">과거의 특정 순간부터 현재 시스템 시간을 밀리 초 단위로 가져옵니다. 이후의 두 호출 사이의 델타 만 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a307890a113e29c1affbb02eeed92e0fe3c13424" translate="yes" xml:space="preserve">
          <source>Gets current system time in nanoseconds since certain moment in the past, only delta between two subsequent calls makes sense.</source>
          <target state="translated">과거의 특정 순간부터 현재 시스템 시간을 나노초 단위로 가져옵니다. 두 번의 호출 사이의 델타 만 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3c82af36761705f1895b7f6ddac8345e79e3d55" translate="yes" xml:space="preserve">
          <source>Gets the entire content of this file as a String using UTF-8 or specified &lt;a href=&quot;read-text#kotlin.io%24readText%28java.io.File%2C+java.nio.charset.Charset%29%2Fcharset&quot;&gt;charset&lt;/a&gt;.</source>
          <target state="translated">UTF-8 또는 지정된 &lt;a href=&quot;read-text#kotlin.io%24readText%28java.io.File%2C+java.nio.charset.Charset%29%2Fcharset&quot;&gt;문자 세트를&lt;/a&gt; 사용하여이 파일의 전체 컨텐츠를 문자열로 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="e6040e7906d6549ba4f60e8b187589a139f31acf" translate="yes" xml:space="preserve">
          <source>Gets the entire content of this file as a String using UTF-8 or specified &lt;a href=&quot;read-text#kotlin.io%24readText(java.io.File,%20java.nio.charset.Charset)/charset&quot;&gt;charset&lt;/a&gt;.</source>
          <target state="translated">UTF-8 또는 지정된 &lt;a href=&quot;read-text#kotlin.io%24readText(java.io.File,%20java.nio.charset.Charset)/charset&quot;&gt;charset을&lt;/a&gt; 사용하여이 파일의 전체 내용을 String으로 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="95b4415867bb0e04fef4852f7d8e7b04b048c510" translate="yes" xml:space="preserve">
          <source>Gets the entire content of this file as a byte array.</source>
          <target state="translated">이 파일의 전체 내용을 바이트 배열로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7163713dcc358cd25d8cb51e383949b943ff7b3c" translate="yes" xml:space="preserve">
          <source>Gets the lazily initialized value of the current Lazy instance. Once the value was initialized it must not change during the rest of lifetime of this Lazy instance.</source>
          <target state="translated">현재 Lazy 인스턴스의 지연 초기화 된 값을 가져옵니다. 일단 값이 초기화되면이 Lazy 인스턴스의 나머지 수명 동안 변경되지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="37c41acddc812cd7a66c995087ca7ce3dbb73e5d" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../../kotlin/-boolean/index#kotlin.Boolean&quot;&gt;Boolean&lt;/a&gt; value.</source>
          <target state="translated">다음 임의의 &lt;a href=&quot;../../../kotlin/-boolean/index#kotlin.Boolean&quot;&gt;부울&lt;/a&gt; 값을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="30956cdd85522de8900f766117ac0700a203fc7b" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; value uniformly distributed between 0 (inclusive) and 1 (exclusive).</source>
          <target state="translated">0 (포함)과 1 (제외) 사이에 균일하게 분포 된 다음 임의의 &lt;a href=&quot;../../../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 값을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="309ef06192b09598fcb2a4953632ab464eb205c6" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; value uniformly distributed between 0 (inclusive) and 1 (exclusive).</source>
          <target state="translated">0 (포함)과 1 (제외) 사이에 균일하게 분포 된 다음 임의의 &lt;a href=&quot;../../../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 값을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="f13b624fdef9631938704e53303259adbf3d3008" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-boolean/index#kotlin.Boolean&quot;&gt;Boolean&lt;/a&gt; value.</source>
          <target state="translated">다음 임의의 &lt;a href=&quot;../../kotlin/-boolean/index#kotlin.Boolean&quot;&gt;부울&lt;/a&gt; 값을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="9c1a73c830924c485c129aec0e959e687729be76" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; value uniformly distributed between 0 (inclusive) and 1 (exclusive).</source>
          <target state="translated">0 (포함)과 1 (제외) 사이에 균일하게 분포 된 다음 임의의 &lt;a href=&quot;../../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 값을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="78b55d267d8cb8da4eb67367038fae92883ffba8" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; value uniformly distributed between 0 (inclusive) and 1 (exclusive).</source>
          <target state="translated">0 (포함)과 1 (제외) 사이에 균일하게 분포 된 다음 임의의 &lt;a href=&quot;../../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 값을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="6b069452c867cc34d833fd1f74484a4bac1b8d73" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;../next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.ranges.UIntRange%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.ranges.UIntRange%29%2Frange&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="1cbd1bb5d2125b2f551302a9b943746f99e58ea5" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;../next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.ranges.UIntRange)/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.ranges.UIntRange)/range&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="37e9ce94104e274134ae5cd0024dee2a28d8b36a" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator in the specified range.</source>
          <target state="translated">지정된 범위의 난수 생성기에서 다음 난수 &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="3c9db191e67fe2d032c273f05c4c2a95b4fca99e" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;../next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">바인딩 &lt;a href=&quot;../next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%29%2Funtil&quot;&gt;될 때까지&lt;/a&gt; 지정된 수보다 작은 난수 생성기에서 다음 임의의 &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="7e363c5a913bdff96b90480285006c531367f387" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;../next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt)/until&quot;&gt;until&lt;/a&gt; bound 보다 작은 난수 생성기에서 다음 난수 &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="df0f8f4c47ad4633251926059d24e74bd095651a" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator.</source>
          <target state="translated">난수 &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;생성기&lt;/a&gt; 에서 다음 난수 UInt 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="e7793f99b74ab0789880c106b3979b40f240bb01" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;../next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ranges.ULongRange%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ranges.ULongRange%29%2Frange&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 임의의 &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="96ee62ed14f41b8d4642283e30c55973f533b66b" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;../next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ranges.ULongRange)/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ranges.ULongRange)/range&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="c6382977c67f7a868b05c20e430ee75137588175" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator in the specified range.</source>
          <target state="translated">지정된 범위의 난수 생성기에서 다음 임의의 &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="7ac3458718ad9505600ca7fb8773a471b9e50892" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;../next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 숫자보다 작을 &lt;a href=&quot;../next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%29%2Funtil&quot;&gt;때까지&lt;/a&gt; 난수 생성기에서 다음 임의의 &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="43d4e8c3597f77c95aa5cdbd79821205a9767f82" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;../next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong)/until&quot;&gt;until&lt;/a&gt; bound 보다 작은 난수 생성기에서 다음 난수 &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="a54b4e342c19fcbe2f3af7a96c78016cc14cedb3" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator.</source>
          <target state="translated">난수 &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;생성기&lt;/a&gt; 에서 다음 임의의 ULong 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="929b9e532a5b7b161a700de08add954ec6d36ca6" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.ranges.UIntRange%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.ranges.UIntRange%29%2Frange&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="0ef5d04545551739de14c6fd65488dd540a1a244" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.ranges.UIntRange)/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.ranges.UIntRange)/range&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="471972f13ea37f1c27e3718fc1a40679cedb0068" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator in the specified range.</source>
          <target state="translated">지정된 범위의 난수 생성기에서 다음 난수 &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="f11249e53ff101c876fd8a178739950955288fdc" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">바인딩 &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%29%2Funtil&quot;&gt;될 때까지&lt;/a&gt; 지정된 수보다 작은 난수 생성기에서 다음 임의의 &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="72c3593c40d15b89dc5054e7a9b34c0485042b1b" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt)/until&quot;&gt;until&lt;/a&gt; bound 보다 작은 난수 생성기에서 다음 난수 &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="8d7b64258910d1f8e7e95f6885bafd4b7d6aef91" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator.</source>
          <target state="translated">난수 &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;생성기&lt;/a&gt; 에서 다음 난수 UInt 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="6066b9becb7346790721071986c20dd5acb6de18" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ranges.ULongRange%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ranges.ULongRange%29%2Frange&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 임의의 &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="378a74bcb0a7a649e96155198b63424181554331" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ranges.ULongRange)/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ranges.ULongRange)/range&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="9b589f8eef60bcd4b38db2895bff627da29fcfcd" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator in the specified range.</source>
          <target state="translated">지정된 범위의 난수 생성기에서 다음 임의의 &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="112333309fc46102c0a0448255000cc3c9ba3f69" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 숫자보다 작을 &lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%29%2Funtil&quot;&gt;때까지&lt;/a&gt; 난수 생성기에서 다음 임의의 &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="db08580ed0422c907bcb2dfa0d4162e33db438fd" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong)/until&quot;&gt;until&lt;/a&gt; bound 보다 작은 난수 생성기에서 다음 난수 &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="76b0c05fa65e814a57c8a2da06ad7a361405834e" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator.</source>
          <target state="translated">난수 &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;생성기&lt;/a&gt; 에서 다음 임의의 ULong 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="04f34e55827ddb4623c3b83662a56026854407e8" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../next-bits#kotlin.random.Random%24nextBits%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">다음 임의의 &lt;a href=&quot;../next-bits#kotlin.random.Random%24nextBits%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="5fca2f68d8d64cc86694d0727b45f2e6693c49d0" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../next-bits#kotlin.random.Random%24nextBits(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">다음 임의의 &lt;a href=&quot;../next-bits#kotlin.random.Random%24nextBits(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="2faba648c909e55694100a5c0c3e4adf90257566" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;next-bits#kotlin.random.Random%24nextBits%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">다음 임의의 &lt;a href=&quot;next-bits#kotlin.random.Random%24nextBits%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="b7b16619da193b089c5042ce71e53f3064e3c961" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;next-bits#kotlin.random.Random%24nextBits(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">다음 임의의 &lt;a href=&quot;next-bits#kotlin.random.Random%24nextBits(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="9028d1dcb4cef84a31ee55278bbac6ae5357d31d" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Double&lt;/code&gt; from the random number generator in the specified range.</source>
          <target state="translated">지정된 범위의 난수 생성기에서 다음 난수 &lt;code&gt;Double&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="f543f8df7361b2bb53169e28e58d78384cbc4fc5" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Int&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;../next-int#kotlin.random%24nextInt%28kotlin.random.Random%2C+kotlin.ranges.IntRange%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-int#kotlin.random%24nextInt%28kotlin.random.Random%2C+kotlin.ranges.IntRange%29%2Frange&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;code&gt;Int&lt;/code&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="63158e16fc626408ed0826d6bb4bd9b1ba5c2f26" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Int&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;../next-int#kotlin.random%24nextInt(kotlin.random.Random,%20kotlin.ranges.IntRange)/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-int#kotlin.random%24nextInt(kotlin.random.Random,%20kotlin.ranges.IntRange)/range&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;code&gt;Int&lt;/code&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="0308952d598f94e2695c06c2f23d1a62905b0bee" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Int&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;next-int#kotlin.random%24nextInt%28kotlin.random.Random%2C+kotlin.ranges.IntRange%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-int#kotlin.random%24nextInt%28kotlin.random.Random%2C+kotlin.ranges.IntRange%29%2Frange&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;code&gt;Int&lt;/code&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="7907a96413297312e1e976c02f529646c93d27e4" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Int&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;next-int#kotlin.random%24nextInt(kotlin.random.Random,%20kotlin.ranges.IntRange)/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-int#kotlin.random%24nextInt(kotlin.random.Random,%20kotlin.ranges.IntRange)/range&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;code&gt;Int&lt;/code&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="f1e1e810f585a0afdffc6e7c00adc9f1a30bb15d" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Int&lt;/code&gt; from the random number generator in the specified range.</source>
          <target state="translated">지정된 범위의 난수 생성기에서 다음 난수 &lt;code&gt;Int&lt;/code&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="705882ad155ff18dc9f97216330472b8c8b24ba3" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Int&lt;/code&gt; from the random number generator.</source>
          <target state="translated">난수 생성기에서 다음 난수 &lt;code&gt;Int&lt;/code&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="d1ca0ffd7d53e1b5ad497b30e898b764bfc015ac" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Long&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;../next-long#kotlin.random%24nextLong%28kotlin.random.Random%2C+kotlin.ranges.LongRange%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-long#kotlin.random%24nextLong%28kotlin.random.Random%2C+kotlin.ranges.LongRange%29%2Frange&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;code&gt;Long&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="0fd24d7fee903ddf723690241e58e954bd6839f4" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Long&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;../next-long#kotlin.random%24nextLong(kotlin.random.Random,%20kotlin.ranges.LongRange)/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-long#kotlin.random%24nextLong(kotlin.random.Random,%20kotlin.ranges.LongRange)/range&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;code&gt;Long&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="e5fb6f9e1469c44b19d531da2765acbd786f7313" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Long&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;next-long#kotlin.random%24nextLong%28kotlin.random.Random%2C+kotlin.ranges.LongRange%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-long#kotlin.random%24nextLong%28kotlin.random.Random%2C+kotlin.ranges.LongRange%29%2Frange&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;code&gt;Long&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="5d2057722dcae282a0c74257d1e7116deff3b0d0" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Long&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;next-long#kotlin.random%24nextLong(kotlin.random.Random,%20kotlin.ranges.LongRange)/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-long#kotlin.random%24nextLong(kotlin.random.Random,%20kotlin.ranges.LongRange)/range&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;code&gt;Long&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="7b1e8d7297c8baa2df40c7c82c7aad1283ee0ef7" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Long&lt;/code&gt; from the random number generator in the specified range.</source>
          <target state="translated">지정된 범위의 난수 생성기에서 다음 난수 &lt;code&gt;Long&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="c21be4abd909031b3586371d1970672e7e168e9a" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Long&lt;/code&gt; from the random number generator.</source>
          <target state="translated">난수 생성기에서 다음 난수 &lt;code&gt;Long&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="b6be61594fa2dd329ed385c4171b2602f61166a8" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Double&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">바운드 &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%29%2Funtil&quot;&gt;될 때까지&lt;/a&gt; 지정된 수보다 작은 난수 생성기에서 다음 임의의 음이 아닌 &lt;code&gt;Double&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="35de7abd6d78c66b02dede8c8258919512d6312a" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Double&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble(kotlin.Double)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 값보다 작을 &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble(kotlin.Double)/until&quot;&gt;때까지&lt;/a&gt; 난수 생성기에서 음이 아닌 임의의 &lt;code&gt;Double&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="0c9a1bb80dc61d4350189c8d53a1723a1ce8bab5" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Double&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">바운드 &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%29%2Funtil&quot;&gt;될 때까지&lt;/a&gt; 지정된 수보다 작은 난수 생성기에서 다음 임의의 음이 아닌 &lt;code&gt;Double&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="f519f9abf3df48b71bc5c4b424ff0e45b077d44a" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Double&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble(kotlin.Double)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 값보다 작을 &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble(kotlin.Double)/until&quot;&gt;때까지&lt;/a&gt; 난수 생성기에서 음이 아닌 임의의 &lt;code&gt;Double&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="4284455c3c686da2f5f0607a4e4f8fdbd0d56bd4" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Int&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt%28kotlin.Int%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">바인딩 &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt%28kotlin.Int%29%2Funtil&quot;&gt;될 때까지&lt;/a&gt; 지정된 수보다 작은 난수 생성기에서 다음 임의의 음이 아닌 &lt;code&gt;Int&lt;/code&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="d665eceea8128cbcca937a41290f9a04d16c5c2c" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Int&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt(kotlin.Int)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 범위 보다 작은 난수 생성기에서 음이 아닌 임의의 다음 &lt;code&gt;Int&lt;/code&gt; 를 가져옵니다 .Gets the next random non-negative Int from the random number generator less than the specified &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt(kotlin.Int)/until&quot;&gt;until&lt;/a&gt; bound.</target>
        </trans-unit>
        <trans-unit id="8bd8c79c3e21d295fb1c15cde569828a6e0d3051" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Int&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt%28kotlin.Int%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">바인딩 &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt%28kotlin.Int%29%2Funtil&quot;&gt;될 때까지&lt;/a&gt; 지정된 수보다 작은 난수 생성기에서 다음 임의의 음이 아닌 &lt;code&gt;Int&lt;/code&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="3eef112031f60dafb1489e4454a7c2aa6f439cae" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Int&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt(kotlin.Int)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 범위 보다 작은 난수 생성기에서 음이 아닌 임의의 다음 &lt;code&gt;Int&lt;/code&gt; 를 가져옵니다 .Gets the next random non-negative Int from the random number generator less than the specified &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt(kotlin.Int)/until&quot;&gt;until&lt;/a&gt; bound.</target>
        </trans-unit>
        <trans-unit id="403ac94b16c81a69dd16b254f1801320c57f5111" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Long&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong%28kotlin.Long%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 숫자보다 작을 &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong%28kotlin.Long%29%2Funtil&quot;&gt;때까지&lt;/a&gt; 난수 생성기에서 다음 임의의 음이 아닌 &lt;code&gt;Long&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="887a28c24ae21edb0753e6ee220f0b99ae1bf479" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Long&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong(kotlin.Long)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 값보다 작을 &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong(kotlin.Long)/until&quot;&gt;때까지&lt;/a&gt; 난수 생성기에서 음이 아닌 임의의 다음 &lt;code&gt;Long&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="9c0e48933f74bb2c6310b971048738f978b109d0" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Long&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong%28kotlin.Long%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 숫자보다 작을 &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong%28kotlin.Long%29%2Funtil&quot;&gt;때까지&lt;/a&gt; 난수 생성기에서 다음 임의의 음이 아닌 &lt;code&gt;Long&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="f20a65909641053c65fe2a0983e412bff5b8c000" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Long&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong(kotlin.Long)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 값보다 작을 &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong(kotlin.Long)/until&quot;&gt;때까지&lt;/a&gt; 난수 생성기에서 음이 아닌 임의의 다음 &lt;code&gt;Long&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="2b7e0a9f8042c263c6cd6468bf56dde544cd8ae0" translate="yes" xml:space="preserve">
          <source>Gets the value in the current thread's copy of this thread-local variable or replaces the value with the result of calling &lt;a href=&quot;get-or-set#kotlin.concurrent%24getOrSet%28java.lang.ThreadLocal%28%28kotlin.concurrent.getOrSet.T%29%29%2C+kotlin.Function0%28%28kotlin.concurrent.getOrSet.T%29%29%29%2Fdefault&quot;&gt;default&lt;/a&gt; function in case if that value was &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 스레드 로컬 변수의 현재 스레드 사본에서 값을 가져 오거나 해당 값이 &lt;code&gt;null&lt;/code&gt; 인 경우 &lt;a href=&quot;get-or-set#kotlin.concurrent%24getOrSet%28java.lang.ThreadLocal%28%28kotlin.concurrent.getOrSet.T%29%29%2C+kotlin.Function0%28%28kotlin.concurrent.getOrSet.T%29%29%29%2Fdefault&quot;&gt;기본&lt;/a&gt; 함수 를 호출 한 결과로 값을 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="a337436a44db6e3083d5164f17cd53641525b567" translate="yes" xml:space="preserve">
          <source>Gets the value in the current thread's copy of this thread-local variable or replaces the value with the result of calling &lt;a href=&quot;get-or-set#kotlin.concurrent%24getOrSet(java.lang.ThreadLocal((kotlin.concurrent.getOrSet.T)),%20kotlin.Function0((kotlin.concurrent.getOrSet.T)))/default&quot;&gt;default&lt;/a&gt; function in case if that value was &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 스레드 로컬 변수의 현재 스레드 복사본에서 값을 가져 오거나 해당 값이 &lt;code&gt;null&lt;/code&gt; 인 경우 &lt;a href=&quot;get-or-set#kotlin.concurrent%24getOrSet(java.lang.ThreadLocal((kotlin.concurrent.getOrSet.T)),%20kotlin.Function0((kotlin.concurrent.getOrSet.T)))/default&quot;&gt;기본&lt;/a&gt; 함수 를 호출 한 결과로 값을 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="96857c88cebeabc578d887e01fbcb2fd02cbcdb7" translate="yes" xml:space="preserve">
          <source>Getter</source>
          <target state="translated">Getter</target>
        </trans-unit>
        <trans-unit id="163dc52918f86c26710b8acaf72b5734b1cf27d1" translate="yes" xml:space="preserve">
          <source>Getter of the property is a &lt;code&gt;get&lt;/code&gt; method declared alongside the property.</source>
          <target state="translated">속성의 Getter는 속성 과 함께 선언 된 &lt;code&gt;get&lt;/code&gt; 메서드입니다.</target>
        </trans-unit>
        <trans-unit id="4ed1aac47efbb51b56ad6a6f326722a1c1c048e0" translate="yes" xml:space="preserve">
          <source>Getters and Setters</source>
          <target state="translated">게터와 세터</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">시작하기</target>
        </trans-unit>
        <trans-unit id="f2a96e364f18ce2cf12d58c581b9f77f01d71c61" translate="yes" xml:space="preserve">
          <source>Getting Started with Eclipse IDE</source>
          <target state="translated">Eclipse IDE 시작하기</target>
        </trans-unit>
        <trans-unit id="42cf14ca65905dcfc442ada3294d53e40371efdc" translate="yes" xml:space="preserve">
          <source>Getting Started with Gradle</source>
          <target state="translated">Gradle 시작하기</target>
        </trans-unit>
        <trans-unit id="13f4cc71ba71e855fd6ee40fe700d140aa4d0403" translate="yes" xml:space="preserve">
          <source>Getting Started with IntelliJ IDEA</source>
          <target state="translated">IntelliJ IDEA 시작하기</target>
        </trans-unit>
        <trans-unit id="09a6c0662ea8b013dc38e6e6c3267f9f99f71bbe" translate="yes" xml:space="preserve">
          <source>Getting Started with Kotlin</source>
          <target state="translated">Kotlin 시작하기</target>
        </trans-unit>
        <trans-unit id="984760bee6820a43a1176969d0eb8e8758e08f83" translate="yes" xml:space="preserve">
          <source>Getting Started with Kotlin and JavaScript with Gradle</source>
          <target state="translated">Gradle로 Kotlin 및 JavaScript 시작하기</target>
        </trans-unit>
        <trans-unit id="5dd4a2a2de278dbd47a7cbdaa4c4b6745d4a19be" translate="yes" xml:space="preserve">
          <source>Getting Started with Kotlin and JavaScript with IntelliJ IDEA</source>
          <target state="translated">IntelliJ IDEA를 사용하여 Kotlin 및 JavaScript 시작</target>
        </trans-unit>
        <trans-unit id="1d48ae394054c582aa04c2975c93978aeac99618" translate="yes" xml:space="preserve">
          <source>Getting Started with Kotlin and JavaScript with Maven</source>
          <target state="translated">Maven으로 Kotlin 및 JavaScript 시작하기</target>
        </trans-unit>
        <trans-unit id="cd4b0c856208f741f17d1a02da2b24b267c56935" translate="yes" xml:space="preserve">
          <source>Getting Started with Kotlin to JavaScript</source>
          <target state="translated">Kotlin에서 JavaScript로 시작하기</target>
        </trans-unit>
        <trans-unit id="1a2d1df7c699bc1c3627a59dee9f5d675ea4ab4d" translate="yes" xml:space="preserve">
          <source>Getting Started with Kotlin/JS</source>
          <target state="translated">Kotlin / JS 시작하기</target>
        </trans-unit>
        <trans-unit id="646a49e49eae55b672b6de83fc26901b5720412e" translate="yes" xml:space="preserve">
          <source>Getting Started with Maven</source>
          <target state="translated">Maven 시작하기</target>
        </trans-unit>
        <trans-unit id="da6eb7f117bc1433780193d58fd1a8c334269d93" translate="yes" xml:space="preserve">
          <source>Getting Started with the Command Line</source>
          <target state="translated">명령 행 시작하기</target>
        </trans-unit>
        <trans-unit id="77195551022e69f3fe692e55f18a442cb14d057e" translate="yes" xml:space="preserve">
          <source>Getting around</source>
          <target state="translated">둘러보기</target>
        </trans-unit>
        <trans-unit id="d966aa4c0cb6af87411922025d607a28da9dadc4" translate="yes" xml:space="preserve">
          <source>Getting representation of the object variable (var) could also be done using the built-in runtime function &lt;code&gt;Konan_DebugPrint&lt;/code&gt; (this approach also works for gdb, using a module of command syntax):</source>
          <target state="translated">내장 런타임 함수 &lt;code&gt;Konan_DebugPrint&lt;/code&gt; 를 사용하여 객체 변수 (var)를 표시 할 수도 있습니다 (이 방법은 명령 구문 모듈을 사용하여 gdb에서도 작동 함).</target>
        </trans-unit>
        <trans-unit id="76e7a3a3f9c225fe820ba7e9cff10ea2a73b79a1" translate="yes" xml:space="preserve">
          <source>Getting started</source>
          <target state="translated">시작하기</target>
        </trans-unit>
        <trans-unit id="52be919dd9daef1b311b120fb6fe20a334a24e25" translate="yes" xml:space="preserve">
          <source>Getting started with Android and Kotlin</source>
          <target state="translated">Android 및 Kotlin 시작하기</target>
        </trans-unit>
        <trans-unit id="49b001fc8041567a39e8397d73aa6f1db38cee63" translate="yes" xml:space="preserve">
          <source>Getting started with Kotlin</source>
          <target state="translated">Kotlin 시작하기</target>
        </trans-unit>
        <trans-unit id="a8fef841204af009adaf90bc21fac5ecb522d4af" translate="yes" xml:space="preserve">
          <source>Getting the Ant Tasks</source>
          <target state="translated">개미 작업 얻기</target>
        </trans-unit>
        <trans-unit id="afad882b9cc056965179ab8ca4d21bd55cf909e2" translate="yes" xml:space="preserve">
          <source>Give your project a name and select an SDK version for it.</source>
          <target state="translated">프로젝트 이름을 지정하고 SDK 버전을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="ed8daa798a5b15bec0a3209902f2dd5b84e2b411" translate="yes" xml:space="preserve">
          <source>Given a string &lt;code&gt;s&lt;/code&gt;, you can get a &lt;code&gt;ByteArray&lt;/code&gt; with the UTF-8 encoding of the string by calling &lt;code&gt;s.toByteArray()&lt;/code&gt;, or you can specify another encoding, e.g. &lt;code&gt;s.toByteArray(Charsets.US_ASCII)&lt;/code&gt; - just like &lt;code&gt;encode()&lt;/code&gt; in Python. Given a byte array &lt;code&gt;b&lt;/code&gt; that contains a UTF-8-encoded string, you can get a &lt;code&gt;String&lt;/code&gt; by calling &lt;code&gt;String(b)&lt;/code&gt;; if you've got a different encoding, use e.g. &lt;code&gt;String(b, Charsets.US_ASCII)&lt;/code&gt;, just like &lt;code&gt;decode()&lt;/code&gt; in Python. You can also call e.g. &lt;code&gt;b.toString(Charsets.US_ASCII)&lt;/code&gt;, but do &lt;em&gt;not&lt;/em&gt; call &lt;code&gt;b.toString()&lt;/code&gt; without parameters (this will just print an internal reference to the byte array).</source>
          <target state="translated">문자열을 감안할 &lt;code&gt;s&lt;/code&gt; , 당신이 얻을 수있는 &lt;code&gt;ByteArray&lt;/code&gt; 호출하여 문자열의 UTF-8 인코딩을 &lt;code&gt;s.toByteArray()&lt;/code&gt; , 또는 다른 인코딩, 예를 지정할 수 있습니다 &lt;code&gt;s.toByteArray(Charsets.US_ASCII)&lt;/code&gt; -처럼 &lt;code&gt;encode()&lt;/code&gt; 에서 파이썬. UTF-8로 인코딩 된 문자열을 포함 하는 바이트 배열 &lt;code&gt;b&lt;/code&gt; 가 주어지면 &lt;code&gt;String(b)&lt;/code&gt; 호출 하여 &lt;code&gt;String&lt;/code&gt; 을 얻을 수 있습니다 . 다른 인코딩을 사용하는 경우 Python의 &lt;code&gt;decode()&lt;/code&gt; 와 같이 &lt;code&gt;String(b, Charsets.US_ASCII)&lt;/code&gt; . 또한 예를 들어 호출 할 수 있습니다 &lt;code&gt;b.toString(Charsets.US_ASCII)&lt;/code&gt; ,하지만 할 &lt;em&gt;수 없습니다&lt;/em&gt; 전화&lt;em&gt;&lt;/em&gt; &lt;code&gt;b.toString()&lt;/code&gt; 매개 변수없이 (바이트 배열에 대한 내부 참조를 인쇄합니다).</target>
        </trans-unit>
        <trans-unit id="d52776ec9b50b7e842377169a2dc0f87740730c0" translate="yes" xml:space="preserve">
          <source>Given an &lt;a href=&quot;-iterable#kotlin.collections%24Iterable%28kotlin.Function0%28%28kotlin.collections.Iterator%28%28kotlin.collections.Iterable.T%29%29%29%29%29%2Fiterator&quot;&gt;iterator&lt;/a&gt; function constructs an &lt;a href=&quot;-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that returns values through the &lt;a href=&quot;-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; provided by that function.</source>
          <target state="translated">주어진 &lt;a href=&quot;-iterable#kotlin.collections%24Iterable%28kotlin.Function0%28%28kotlin.collections.Iterator%28%28kotlin.collections.Iterable.T%29%29%29%29%29%2Fiterator&quot;&gt;iterator&lt;/a&gt; 함수 는 해당 함수가 제공 하는 &lt;a href=&quot;-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator를&lt;/a&gt; 통해 값을 리턴 하는 &lt;a href=&quot;-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; 인스턴스를 구성 합니다.</target>
        </trans-unit>
        <trans-unit id="7be3632c2382671a0f603162342cc595556f496f" translate="yes" xml:space="preserve">
          <source>Given an &lt;a href=&quot;-iterable#kotlin.collections%24Iterable(kotlin.Function0((kotlin.collections.Iterator((kotlin.collections.Iterable.T)))))/iterator&quot;&gt;iterator&lt;/a&gt; function constructs an &lt;a href=&quot;-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that returns values through the &lt;a href=&quot;-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; provided by that function.</source>
          <target state="translated">&lt;a href=&quot;-iterable#kotlin.collections%24Iterable(kotlin.Function0((kotlin.collections.Iterator((kotlin.collections.Iterable.T)))))/iterator&quot;&gt;반복기&lt;/a&gt; 함수가 주어진 경우 해당 함수에서 제공 하는 &lt;a href=&quot;-iterator/index#kotlin.collections.Iterator&quot;&gt;반복기를&lt;/a&gt; 통해 값을 반환 하는 &lt;a href=&quot;-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; 인스턴스를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="6f0cc0f079c270a0f9cdb6aa220795e4826b92e8" translate="yes" xml:space="preserve">
          <source>Given an &lt;a href=&quot;-sequence#kotlin.sequences%24Sequence%28kotlin.Function0%28%28kotlin.collections.Iterator%28%28kotlin.sequences.Sequence.T%29%29%29%29%29%2Fiterator&quot;&gt;iterator&lt;/a&gt; function constructs a &lt;a href=&quot;-sequence/index&quot;&gt;Sequence&lt;/a&gt; that returns values through the &lt;a href=&quot;../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; provided by that function. The values are evaluated lazily, and the sequence is potentially infinite.</source>
          <target state="translated">주어진 &lt;a href=&quot;-sequence#kotlin.sequences%24Sequence%28kotlin.Function0%28%28kotlin.collections.Iterator%28%28kotlin.sequences.Sequence.T%29%29%29%29%29%2Fiterator&quot;&gt;iterator&lt;/a&gt; 함수 는 해당 함수에서 제공 하는 &lt;a href=&quot;../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator를&lt;/a&gt; 통해 값을 반환 하는 &lt;a href=&quot;-sequence/index&quot;&gt;Sequence&lt;/a&gt; 를 구성 합니다. 값은 느리게 평가되며 시퀀스는 잠재적으로 무한합니다.</target>
        </trans-unit>
        <trans-unit id="0edbc663583339d7367d2349ea7bf1cd8b018d4d" translate="yes" xml:space="preserve">
          <source>Given an &lt;a href=&quot;-sequence#kotlin.sequences%24Sequence(kotlin.Function0((kotlin.collections.Iterator((kotlin.sequences.Sequence.T)))))/iterator&quot;&gt;iterator&lt;/a&gt; function constructs a &lt;a href=&quot;-sequence/index&quot;&gt;Sequence&lt;/a&gt; that returns values through the &lt;a href=&quot;../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; provided by that function. The values are evaluated lazily, and the sequence is potentially infinite.</source>
          <target state="translated">&lt;a href=&quot;-sequence#kotlin.sequences%24Sequence(kotlin.Function0((kotlin.collections.Iterator((kotlin.sequences.Sequence.T)))))/iterator&quot;&gt;반복기&lt;/a&gt; 함수가 주어진 경우 해당 함수에서 제공 하는 &lt;a href=&quot;../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;반복기를&lt;/a&gt; 통해 값을 반환 하는 &lt;a href=&quot;-sequence/index&quot;&gt;시퀀스&lt;/a&gt; 를 생성 합니다. 값은 느리게 평가되며 시퀀스는 잠재적으로 무한합니다.</target>
        </trans-unit>
        <trans-unit id="c485d6c75b301df13711cf1468e06dd2f21a2da3" translate="yes" xml:space="preserve">
          <source>Given an &lt;code&gt;R&lt;/code&gt; instance, &lt;code&gt;KProperty1&amp;lt;R, V&amp;gt;&lt;/code&gt; will let you read the value that the property has in that instance by calling &lt;code&gt;get()&lt;/code&gt;, and &lt;code&gt;KMutableProperty1&amp;lt;R, V&amp;gt;&lt;/code&gt; will also let you change the property value in the instance by calling &lt;code&gt;set()&lt;/code&gt;. Using this, we can start writing functions that manipulate properties without knowing in advance which property (or which class) they are going to deal with:</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; 인스턴스가 주어진 경우 &lt;code&gt;KProperty1&amp;lt;R, V&amp;gt;&lt;/code&gt; 하면 &lt;code&gt;get()&lt;/code&gt; 을 호출하여 해당 인스턴스에 특성 값이있는 값을 읽을 수 있으며 &lt;code&gt;KMutableProperty1&amp;lt;R, V&amp;gt;&lt;/code&gt; 를 사용하면 인스턴스의 특성 값을 다음과 같이 호출하여 변경할 수 있습니다. &lt;code&gt;set()&lt;/code&gt; . 이를 사용하여 처리 할 속성 (또는 클래스)을 미리 알지 않고도 속성을 조작하는 함수를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e5731d4bf9c4d88436dc7528815df264748c74c" translate="yes" xml:space="preserve">
          <source>Given that, the compiler prohibits &lt;em&gt;is&lt;/em&gt;-checks that cannot be performed at runtime due to type erasure, such as &lt;code&gt;ints is List&amp;lt;Int&amp;gt;&lt;/code&gt; or &lt;code&gt;list is T&lt;/code&gt; (type parameter). You can, however, check an instance against a &lt;a href=&quot;generics#star-projections&quot;&gt;star-projected type&lt;/a&gt;:</source>
          <target state="translated">컴파일러 &lt;em&gt;는 &lt;/em&gt; &lt;code&gt;ints is List&amp;lt;Int&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;list is T&lt;/code&gt; (type parameter) 와 같이 유형 삭제로 인해 런타임에 수행 할 수없는 -checks를 금지 합니다. 그러나 &lt;a href=&quot;generics#star-projections&quot;&gt;별 투영 된 유형&lt;/a&gt; 에 대해 인스턴스를 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d14fa916aad304abf9368effaed2af1c9cae9a7d" translate="yes" xml:space="preserve">
          <source>Given the following function:</source>
          <target state="translated">다음과 같은 기능이 주어집니다.</target>
        </trans-unit>
        <trans-unit id="3bccba6c1d0dad412745ca499dd4881c9a868243" translate="yes" xml:space="preserve">
          <source>Gives a declaration (a function, a property or a class) specific name in JavaScript.</source>
          <target state="translated">JavaScript에서 선언 (함수, 속성 또는 클래스) 특정 이름을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="881cfc245c723cf7c3f61576f22801ef2e3c72b2" translate="yes" xml:space="preserve">
          <source>Global Declarations from Kotlin</source>
          <target state="translated">코 틀린의 글로벌 선언</target>
        </trans-unit>
        <trans-unit id="659f27a0f1f897cced3c75d045ad40fe242c727f" translate="yes" xml:space="preserve">
          <source>Global coroutines are like daemon threads</source>
          <target state="translated">글로벌 코 루틴은 데몬 스레드와 같습니다</target>
        </trans-unit>
        <trans-unit id="d468d0378c00d1e27a28a236d7de95756c08f8c9" translate="yes" xml:space="preserve">
          <source>Global functions &lt;code&gt;forInts&lt;/code&gt;, &lt;code&gt;forFloats&lt;/code&gt;, or &lt;code&gt;strings&lt;/code&gt; are turned into the functions pointers in the &lt;code&gt;kotlin.root.example&lt;/code&gt; anonymous struct.</source>
          <target state="translated">&lt;code&gt;forInts&lt;/code&gt; , &lt;code&gt;forFloats&lt;/code&gt; 또는 &lt;code&gt;strings&lt;/code&gt; 전역 함수 는 &lt;code&gt;kotlin.root.example&lt;/code&gt; anonymous 구조체 의 함수 포인터로 바뀝니다 .</target>
        </trans-unit>
        <trans-unit id="30cadf19adfad41f8a6e59daa5ff3a3d48ba595c" translate="yes" xml:space="preserve">
          <source>Global variables and singletons</source>
          <target state="translated">전역 변수와 싱글 톤</target>
        </trans-unit>
        <trans-unit id="1044c240904be1204cda061e8f188ed693002d4b" translate="yes" xml:space="preserve">
          <source>GlobalEventHandlers</source>
          <target state="translated">GlobalEventHandlers</target>
        </trans-unit>
        <trans-unit id="baed9919f2e4f46815715dc91aa4078ed633aaf4" translate="yes" xml:space="preserve">
          <source>GlobalPerformance</source>
          <target state="translated">GlobalPerformance</target>
        </trans-unit>
        <trans-unit id="765216c578e052557132746a69028e4fe8edce22" translate="yes" xml:space="preserve">
          <source>Go on to the next task with the &lt;strong&gt;Next&lt;/strong&gt; icon at the top of &lt;strong&gt;Task Description&lt;/strong&gt; panel:</source>
          <target state="translated">&lt;strong&gt;작업 설명&lt;/strong&gt; 패널 상단에 있는 &lt;strong&gt;다음&lt;/strong&gt; 아이콘 을 사용하여 다음 작업으로 넘어갑니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1dc56189f84c8bd9505ed21d652da81943de515c" translate="yes" xml:space="preserve">
          <source>Go to &lt;strong&gt;Preferences -&amp;gt; Plugins&lt;/strong&gt; (or &lt;strong&gt;Configure -&amp;gt; Plugins&lt;/strong&gt; from the &lt;strong&gt;Welcome Screen&lt;/strong&gt;), press &lt;strong&gt;Install JetBrains Plugin&amp;hellip;&lt;/strong&gt; and search for EduTools plugin:</source>
          <target state="translated">이동 &lt;strong&gt;환경 설정 -&amp;gt; 플러그인&lt;/strong&gt; (또는 &lt;strong&gt;구성 -&amp;gt; 플러그인&lt;/strong&gt; 로부터 &lt;strong&gt;시작 화면&lt;/strong&gt; )을 눌러 &lt;strong&gt;JetBrains의 플러그인 설치 ...&lt;/strong&gt; 및 플러그인 EduTools 검색 :</target>
        </trans-unit>
        <trans-unit id="891a1edb814b257caca47fbe98d9f5d5b15c6d14" translate="yes" xml:space="preserve">
          <source>Go to &lt;strong&gt;View -&amp;gt; Tool Windows -&amp;gt; Project&lt;/strong&gt; to look at the course structure:</source>
          <target state="translated">코스 구조 를 &lt;strong&gt;보려면보기-&amp;gt; 도구 창-&amp;gt; 프로젝트&lt;/strong&gt; 로 이동 하십시오.</target>
        </trans-unit>
        <trans-unit id="8165d64dbe21ad94145d018a811b3d046578b825" translate="yes" xml:space="preserve">
          <source>Google Cloud Platform offers a series of tutorials for deploying Kotlin applications to GCP, both for &lt;a href=&quot;https://cloud.google.com/community/tutorials/kotlin-ktor-app-engine-java8&quot;&gt;Ktor and App Engine&lt;/a&gt; and &lt;a href=&quot;https://cloud.google.com/community/tutorials/kotlin-springboot-app-engine-java8&quot;&gt;Spring and App engine&lt;/a&gt;. In addition there is an &lt;a href=&quot;https://codelabs.developers.google.com/codelabs/cloud-spring-cloud-gcp-kotlin&quot;&gt;interactive code lab&lt;/a&gt; for deploying a Kotlin Spring application.</source>
          <target state="translated">Google Cloud Platform은 &lt;a href=&quot;https://cloud.google.com/community/tutorials/kotlin-ktor-app-engine-java8&quot;&gt;Ktor 및 App Engine&lt;/a&gt; 과 &lt;a href=&quot;https://cloud.google.com/community/tutorials/kotlin-springboot-app-engine-java8&quot;&gt;Spring 및 App 엔진&lt;/a&gt; 모두에서 Kotlin 애플리케이션을 GCP에 배포하기위한 일련의 자습서를 제공합니다 . 또한 Kotlin Spring 애플리케이션을 배포하기위한 &lt;a href=&quot;https://codelabs.developers.google.com/codelabs/cloud-spring-cloud-gcp-kotlin&quot;&gt;대화식 코드 랩&lt;/a&gt; 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f426be61bd7a1e2a2ad7e39cb0258e09623e3b4d" translate="yes" xml:space="preserve">
          <source>Gradle</source>
          <target state="translated">Gradle</target>
        </trans-unit>
        <trans-unit id="6134eca2b360f22c2387c3051541c510c1250e3f" translate="yes" xml:space="preserve">
          <source>Gradle Build Cache Support (since 1.2.20)</source>
          <target state="translated">Gradle 빌드 캐시 지원 (1.2.20부터)</target>
        </trans-unit>
        <trans-unit id="c7cb10f96b225f304e707e064e5400d18a33549a" translate="yes" xml:space="preserve">
          <source>Gradle Plugin</source>
          <target state="translated">그레들 플러그인</target>
        </trans-unit>
        <trans-unit id="277f29d49197aac9cb14a4370ca7921f6b1ecad2" translate="yes" xml:space="preserve">
          <source>Gradle build cache support</source>
          <target state="translated">Gradle 빌드 캐시 지원</target>
        </trans-unit>
        <trans-unit id="35d1c8165e4e67c09f92e3d5f647ffd5441e58ba" translate="yes" xml:space="preserve">
          <source>Gradle build cache support (since 1.2.20)</source>
          <target state="translated">Gradle 빌드 캐시 지원 (1.2.20부터)</target>
        </trans-unit>
        <trans-unit id="a0575dd3e951b41de498712d03d4e2bfef8d7b1f" translate="yes" xml:space="preserve">
          <source>Gradle function</source>
          <target state="translated">그래들 기능</target>
        </trans-unit>
        <trans-unit id="5e8f2626ed20cf2fef59f13d2bd987a20f6e43c4" translate="yes" xml:space="preserve">
          <source>Gradle module metadata provides rich publishing and dependency resolution features that are used in Kotlin multiplatform projects to simplify dependencies configuration for build authors. In particular, the publications of a multiplatform library may include a special 'root' module that stands for the whole library and is automatically resolved to the appropriate platform-specific artifacts when added as a dependency, as described below.</source>
          <target state="translated">Gradle 모듈 메타 데이터는 Kotlin 멀티 플랫폼 프로젝트에서 빌드 제작자의 종속성 구성을 단순화하는 데 사용되는 풍부한 게시 및 종속성 해결 기능을 제공합니다. 특히, 멀티 플랫폼 라이브러리의 발행물은 전체 라이브러리를 나타내는 특수한 '루트'모듈을 포함 할 수 있으며 아래 설명 된대로 종속성으로 추가 될 때 적절한 플랫폼 별 아티팩트로 자동 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="2fd0f11cc0565eea500951b2cff526bf32d99bc4" translate="yes" xml:space="preserve">
          <source>Gradle supports two languages for the build scripts. We have the following options:</source>
          <target state="translated">Gradle은 빌드 스크립트에 두 가지 언어를 지원합니다. 다음과 같은 옵션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f71244b324fcc1c6b328413612267429db191347" translate="yes" xml:space="preserve">
          <source>Graduation of experimental API</source>
          <target state="translated">실험 API의 졸업</target>
        </trans-unit>
        <trans-unit id="dc1c6d4a7505aca84258226a0109982d4ee37319" translate="yes" xml:space="preserve">
          <source>Groovy language is the oldest supported scripting language for Gradle, it leverages the power of the dynamic typing and runtime features of the language. Sometimes it can be harder to maintain Groovy build scripts. IDEs are struggling to get through the dynamism of Groovy to provide helpful insights or code completion.</source>
          <target state="translated">Groovy 언어는 Gradle에서 지원되는 가장 오래된 스크립팅 언어이며 언어의 동적 타이핑 및 런타임 기능을 활용합니다. 때로는 Groovy 빌드 스크립트를 유지 관리하기가 더 어려울 수 있습니다. IDE는 Groovy의 역 동성을 극복하여 유용한 통찰력 또는 코드 완성을 제공하기 위해 고심하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7214450a2aa2acc2aff209936d73e98c04d25cc" translate="yes" xml:space="preserve">
          <source>Groovy scripts in &lt;code&gt;build.gradle&lt;/code&gt; files</source>
          <target state="translated">&lt;code&gt;build.gradle&lt;/code&gt; 파일의 Groovy 스크립트</target>
        </trans-unit>
        <trans-unit id="2ae6967b07a45b63c8543a6c5e34052414ba32af" translate="yes" xml:space="preserve">
          <source>Grouping</source>
          <target state="translated">Grouping</target>
        </trans-unit>
        <trans-unit id="f580fcf315dbe0e3aac37a8e051a65190b4d82e6" translate="yes" xml:space="preserve">
          <source>Grouping function calls on an object: &lt;code&gt;with&lt;/code&gt;</source>
          <target state="translated">객체에 함수 호출을 그룹화 : &lt;code&gt;with&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a1bb9860eb5022e44d178a9eaf4fcdc57655695f" translate="yes" xml:space="preserve">
          <source>Groups are indexed from 1 to the count of groups in the regular expression. A group with the index 0 corresponds to the entire match.</source>
          <target state="translated">그룹은 정규식에서 1부터 그룹 수까지 색인화됩니다. 인덱스가 0 인 그룹은 전체 일치 항목에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="ac61ad0a10837ed5627a2dd0ab6b66c7c3e0676f" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and returns a map where each group key is associated with a list of corresponding characters.</source>
          <target state="translated">각 문자에 적용된 주어진 &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 리턴 한 키를 사용하여 원래 문자 순서의 문자를 그룹화하고 각 그룹 키가 해당 문자 목록과 연관된 맵을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d2d350494754a3bd923f181a90224cb9cf590352" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and returns a map where each group key is associated with a list of corresponding characters.</source>
          <target state="translated">각 문자에 적용된 주어진 &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 원래 문자 시퀀스의 문자를 그룹화하고 각 그룹 키가 해당 문자 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7cf73cc29f8dbedce10d3ff42ded5a6b73eda280" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and puts to the &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding characters.</source>
          <target state="translated">각 문자에 적용되는 주어진 &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 리턴 한 키를 사용하여 원래 문자 순서의 문자를 그룹화하고 해당 문자 목록과 연관된 각 그룹 키를 &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="346fca99a847fd81522697719b47e4d9be2925a6" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and puts to the &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding characters.</source>
          <target state="translated">각 문자에 적용된 주어진 &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 문자 시퀀스의 문자를 그룹화하고 해당 문자 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="16819263b803ee1d619eddf7cea3cc3aa1ddb8a9" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and returns a map where each group key is associated with a list of corresponding characters.</source>
          <target state="translated">각 문자에 적용된 주어진 &lt;a href=&quot;../group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 리턴 한 키를 사용하여 원래 문자 순서의 문자를 그룹화하고 각 그룹 키가 해당 문자 목록과 연관된 맵을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="ec9462a902044081c941bc01dd80fd18c25a3c6d" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and returns a map where each group key is associated with a list of corresponding characters.</source>
          <target state="translated">각 문자에 적용된 주어진 &lt;a href=&quot;../group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 원래 문자 시퀀스의 문자를 그룹화하고 각 그룹 키가 해당 문자 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="834ceb29666dfabc2774c58d68cddf77c4b7e8b3" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and puts to the &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding characters.</source>
          <target state="translated">각 문자에 적용되는 주어진 &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 리턴 한 키를 사용하여 원래 문자 순서의 문자를 그룹화하고 해당 문자 목록과 연관된 각 그룹 키를 &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="8faec9e70e853d1243873896887d86f6b26a40a1" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and puts to the &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding characters.</source>
          <target state="translated">각 문자에 적용된 주어진 &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 문자 시퀀스의 문자를 그룹화하고 해당 문자 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="a3b218745ea0cc39939249fc515c9fb52230dc23" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and returns a map where each group key is associated with a list of corresponding characters.</source>
          <target state="translated">각 문자에 적용된 주어진 &lt;a href=&quot;group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 리턴 한 키를 사용하여 원래 문자 순서의 문자를 그룹화하고 각 그룹 키가 해당 문자 목록과 연관된 맵을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="aa607dec624fa976f2dc35e62083c3f589864460" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and returns a map where each group key is associated with a list of corresponding characters.</source>
          <target state="translated">각 문자에 적용된 주어진 &lt;a href=&quot;group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 원래 문자 시퀀스의 문자를 그룹화하고 각 그룹 키가 해당 문자 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="eab6055c069a2c7df989a9febe4f384188c0c9be" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and puts to the &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding characters.</source>
          <target state="translated">각 문자에 적용되는 주어진 &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 리턴 한 키를 사용하여 원래 문자 순서의 문자를 그룹화하고 해당 문자 목록과 연관된 각 그룹 키를 &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="1e1722772c9fcdf13c173da691f7ed416bf37de8" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and puts to the &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding characters.</source>
          <target state="translated">각 문자에 적용된 주어진 &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 문자 시퀀스의 문자를 그룹화하고 해당 문자 목록과 관련된 각 그룹 키를 &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="beb10184b9eaf2a19d2c8a85f0dcc9de8f275a3d" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;aggregate#kotlin.collections%24aggregate%28kotlin.collections.Grouping%28%28kotlin.collections.aggregate.T%2C+kotlin.collections.aggregate.K%29%29%2C+kotlin.Function4%28%28kotlin.collections.aggregate.K%2C+kotlin.collections.aggregate.R%2C+kotlin.collections.aggregate.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregate.R%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map.</source>
          <target state="translated">키로 &lt;a href=&quot;-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 이전에 누적 된 값과 현재 요소를 인수로 전달하여 각 그룹의 요소에 &lt;a href=&quot;aggregate#kotlin.collections%24aggregate%28kotlin.collections.Grouping%28%28kotlin.collections.aggregate.T%2C+kotlin.collections.aggregate.K%29%29%2C+kotlin.Function4%28%28kotlin.collections.aggregate.K%2C+kotlin.collections.aggregate.R%2C+kotlin.collections.aggregate.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregate.R%29%29%29%2Foperation&quot;&gt;작업&lt;/a&gt; 을 순차적으로 적용 하고 결과를 새 맵에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="f52b84e4a22cd7031d4c054373f2b53b2bcd58e6" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;aggregate#kotlin.collections%24aggregate(kotlin.collections.Grouping((kotlin.collections.aggregate.T,%20kotlin.collections.aggregate.K)),%20kotlin.Function4((kotlin.collections.aggregate.K,%20kotlin.collections.aggregate.R?,%20kotlin.collections.aggregate.T,%20kotlin.Boolean,%20kotlin.collections.aggregate.R)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map.</source>
          <target state="translated">&lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소에 순차적으로 &lt;a href=&quot;aggregate#kotlin.collections%24aggregate(kotlin.collections.Grouping((kotlin.collections.aggregate.T,%20kotlin.collections.aggregate.K)),%20kotlin.Function4((kotlin.collections.aggregate.K,%20kotlin.collections.aggregate.R?,%20kotlin.collections.aggregate.T,%20kotlin.Boolean,%20kotlin.collections.aggregate.R)))/operation&quot;&gt;작업&lt;/a&gt; 을 적용 하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 새 맵에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="d78b573eb1ea66f3add23f57f9a4df87cbfded46" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">키로 &lt;a href=&quot;-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 이전에 누적 된 값과 현재 요소를 인수로 전달하여 각 그룹의 요소에 &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Foperation&quot;&gt;작업&lt;/a&gt; 을 순차적으로 적용 하고 결과를 지정된 &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="c31631c151a343f9c8b5dabb1281b5c29af9a273" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/destination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">&lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소에 순차적으로 &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/operation&quot;&gt;작업&lt;/a&gt; 을 적용 하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 지정된 &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/destination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="76bb6c1807250140b502881e8ffed09dd4b1fd1b" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.Function2%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.T%2C+kotlin.collections.fold.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is provided by &lt;a href=&quot;fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.Function2%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.T%2C+kotlin.collections.fold.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2FinitialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</source>
          <target state="translated">키로 &lt;a href=&quot;-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 이전에 누적 된 값과 현재 요소를 인수로 전달하여 각 그룹의 요소에 &lt;a href=&quot;fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.Function2%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.T%2C+kotlin.collections.fold.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2Foperation&quot;&gt;작업&lt;/a&gt; 을 순차적으로 적용 하고 결과를 새 맵에 저장합니다. 누산기의 초기 값은 &lt;a href=&quot;fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.Function2%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.T%2C+kotlin.collections.fold.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2FinitialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; 함수 에 의해 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="c65c91e0b49e269f0aacbdeb1e8b6110be08d78b" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.collections.fold.R%2C+kotlin.Function2%28%28kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the same &lt;a href=&quot;fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.collections.fold.R%2C+kotlin.Function2%28%28kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2FinitialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</source>
          <target state="translated">키로 &lt;a href=&quot;-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 이전에 누적 된 값과 현재 요소를 인수로 전달하여 각 그룹의 요소에 &lt;a href=&quot;fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.collections.fold.R%2C+kotlin.Function2%28%28kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2Foperation&quot;&gt;작업&lt;/a&gt; 을 순차적으로 적용 하고 결과를 새 맵에 저장합니다. 누산기의 초기 값은 각 그룹에 대해 동일한 &lt;a href=&quot;fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.collections.fold.R%2C+kotlin.Function2%28%28kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2FinitialValue&quot;&gt;initialValue&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="14438b03252190d88b47c52214444da5b75cf170" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.Function2((kotlin.collections.fold.K,%20kotlin.collections.fold.T,%20kotlin.collections.fold.R)),%20kotlin.Function3((kotlin.collections.fold.K,%20kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is provided by &lt;a href=&quot;fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.Function2((kotlin.collections.fold.K,%20kotlin.collections.fold.T,%20kotlin.collections.fold.R)),%20kotlin.Function3((kotlin.collections.fold.K,%20kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/initialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소에 순차적으로 &lt;a href=&quot;fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.Function2((kotlin.collections.fold.K,%20kotlin.collections.fold.T,%20kotlin.collections.fold.R)),%20kotlin.Function3((kotlin.collections.fold.K,%20kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/operation&quot;&gt;작업&lt;/a&gt; 을 적용 하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 새 맵에 저장합니다. 누산기의 초기 값은 &lt;a href=&quot;fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.Function2((kotlin.collections.fold.K,%20kotlin.collections.fold.T,%20kotlin.collections.fold.R)),%20kotlin.Function3((kotlin.collections.fold.K,%20kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/initialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; 함수 에 의해 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="3eb5e77739fb3f0557d67687ad744f1af73c24b7" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.collections.fold.R,%20kotlin.Function2((kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the same &lt;a href=&quot;fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.collections.fold.R,%20kotlin.Function2((kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/initialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</source>
          <target state="translated">&lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소에 순차적으로 &lt;a href=&quot;fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.collections.fold.R,%20kotlin.Function2((kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/operation&quot;&gt;작업&lt;/a&gt; 을 적용 하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 새 맵에 저장합니다. 누산기의 초기 값은 각 그룹에 대해 동일한 &lt;a href=&quot;fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.collections.fold.R,%20kotlin.Function2((kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/initialValue&quot;&gt;initialValue&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9854f2468f181697be0f2d6e46ea0904ecd6079d" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is provided by &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2FinitialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</source>
          <target state="translated">키로 &lt;a href=&quot;-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 이전에 누적 된 값과 현재 요소를 인수로 전달하여 각 그룹의 요소에 &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Foperation&quot;&gt;작업&lt;/a&gt; 을 순차적으로 적용 하고 결과를 지정된 &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다 . 누산기의 초기 값은 &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2FinitialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; 함수 에 의해 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="889e9070bf99aa4bd4efd50edeaf2a68bfa9907b" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the same &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2FinitialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</source>
          <target state="translated">키로 &lt;a href=&quot;-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 이전에 누적 된 값과 현재 요소를 인수로 전달하여 각 그룹의 요소에 &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Foperation&quot;&gt;작업&lt;/a&gt; 을 순차적으로 적용 하고 결과를 지정된 &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다 . 누산기의 초기 값은 각 그룹에 대해 동일한 &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2FinitialValue&quot;&gt;initialValue&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e26bb9c412996b6a5418cd0809fc777fed178a94" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is provided by &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/initialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소에 순차적으로 &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/operation&quot;&gt;작업&lt;/a&gt; 을 적용 하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 지정된 &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다 . 누산기의 초기 값은 &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/initialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; 함수 에 의해 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="37f0fd67f4552217edda6f5fb57f461c21447dcd" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the same &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/initialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</source>
          <target state="translated">&lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소에 순차적으로 &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/operation&quot;&gt;작업&lt;/a&gt; 을 적용 하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 지정된 &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다 . 누산기의 초기 값은 각 그룹에 대해 동일한 &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/initialValue&quot;&gt;initialValue&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="83efeb50c4e9dec95e37f4820667b4239119591b" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;reduce#kotlin.collections%24reduce%28kotlin.collections.Grouping%28%28kotlin.collections.reduce.T%2C+kotlin.collections.reduce.K%29%29%2C+kotlin.Function3%28%28kotlin.collections.reduce.K%2C+kotlin.collections.reduce.S%2C+kotlin.collections.reduce.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the first element of the group.</source>
          <target state="translated">&lt;a href=&quot;-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 키로 그룹화 하고 그룹의 두 번째 요소부터 순차적으로 각 그룹의 요소에 축소 &lt;a href=&quot;reduce#kotlin.collections%24reduce%28kotlin.collections.Grouping%28%28kotlin.collections.reduce.T%2C+kotlin.collections.reduce.K%29%29%2C+kotlin.Function3%28%28kotlin.collections.reduce.K%2C+kotlin.collections.reduce.S%2C+kotlin.collections.reduce.T%2C+%29%29%29%2Foperation&quot;&gt;연산&lt;/a&gt; 을 적용하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 새 맵에 저장합니다. 누산기의 초기 값은 그룹의 첫 번째 요소입니다.</target>
        </trans-unit>
        <trans-unit id="2bf19ea4b61cd9873e10f6e15627becebec930bc" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;reduce#kotlin.collections%24reduce(kotlin.collections.Grouping((kotlin.collections.reduce.T,%20kotlin.collections.reduce.K)),%20kotlin.Function3((kotlin.collections.reduce.K,%20kotlin.collections.reduce.S,%20kotlin.collections.reduce.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the first element of the group.</source>
          <target state="translated">&lt;a href=&quot;-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 그룹의 두 번째 요소부터 순차적으로 각 그룹의 요소에 축소 &lt;a href=&quot;reduce#kotlin.collections%24reduce(kotlin.collections.Grouping((kotlin.collections.reduce.T,%20kotlin.collections.reduce.K)),%20kotlin.Function3((kotlin.collections.reduce.K,%20kotlin.collections.reduce.S,%20kotlin.collections.reduce.T,%20)))/operation&quot;&gt;연산&lt;/a&gt; 을 적용하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 새 맵에 저장합니다. 누산기의 초기 값은 그룹의 첫 번째 요소입니다.</target>
        </trans-unit>
        <trans-unit id="933500c1ca8e977ee9b0687537291630d3768a4b" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the first element of the group.</source>
          <target state="translated">&lt;a href=&quot;-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 키로 그룹화 하고 그룹의 두 번째 요소부터 순차적으로 각 그룹의 요소에 축소 &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Foperation&quot;&gt;조작&lt;/a&gt; 을 적용하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 제공된 &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다. . 누산기의 초기 값은 그룹의 첫 번째 요소입니다.</target>
        </trans-unit>
        <trans-unit id="6807429f4d55a1f34d26de339744b2d8d2671f2b" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the first element of the group.</source>
          <target state="translated">&lt;a href=&quot;-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 그룹의 두 번째 요소부터 순차적으로 각 그룹의 요소에 축소 &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/operation&quot;&gt;연산&lt;/a&gt; 을 적용하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 지정된 &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/destination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다. . 누산기의 초기 값은 그룹의 첫 번째 요소입니다.</target>
        </trans-unit>
        <trans-unit id="015ae8e55e1e1ac2045e4141888e3b1d7417038b" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and counts elements in each group to the given &lt;a href=&quot;each-count-to#kotlin.collections%24eachCountTo%28kotlin.collections.Grouping%28%28kotlin.collections.eachCountTo.T%2C+kotlin.collections.eachCountTo.K%29%29%2C+kotlin.collections.eachCountTo.M%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">키별로 &lt;a href=&quot;-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 각 그룹의 요소를 지정된 &lt;a href=&quot;each-count-to#kotlin.collections%24eachCountTo%28kotlin.collections.Grouping%28%28kotlin.collections.eachCountTo.T%2C+kotlin.collections.eachCountTo.K%29%29%2C+kotlin.collections.eachCountTo.M%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵으로 계산합니다.</target>
        </trans-unit>
        <trans-unit id="83005e92a6cd8a98b424194ea12d5c603886f856" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and counts elements in each group to the given &lt;a href=&quot;each-count-to#kotlin.collections%24eachCountTo(kotlin.collections.Grouping((kotlin.collections.eachCountTo.T,%20kotlin.collections.eachCountTo.K)),%20kotlin.collections.eachCountTo.M)/destination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">&lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소를 지정된 &lt;a href=&quot;each-count-to#kotlin.collections%24eachCountTo(kotlin.collections.Grouping((kotlin.collections.eachCountTo.T,%20kotlin.collections.eachCountTo.K)),%20kotlin.collections.eachCountTo.M)/destination&quot;&gt;대상&lt;/a&gt; 맵으로 계산합니다.</target>
        </trans-unit>
        <trans-unit id="490f294445acd743261ddc1eb23853d6e61b542c" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../aggregate#kotlin.collections%24aggregate%28kotlin.collections.Grouping%28%28kotlin.collections.aggregate.T%2C+kotlin.collections.aggregate.K%29%29%2C+kotlin.Function4%28%28kotlin.collections.aggregate.K%2C+kotlin.collections.aggregate.R%2C+kotlin.collections.aggregate.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregate.R%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map.</source>
          <target state="translated">키로 &lt;a href=&quot;index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 이전에 누적 된 값과 현재 요소를 인수로 전달하여 각 그룹의 요소에 &lt;a href=&quot;../aggregate#kotlin.collections%24aggregate%28kotlin.collections.Grouping%28%28kotlin.collections.aggregate.T%2C+kotlin.collections.aggregate.K%29%29%2C+kotlin.Function4%28%28kotlin.collections.aggregate.K%2C+kotlin.collections.aggregate.R%2C+kotlin.collections.aggregate.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregate.R%29%29%29%2Foperation&quot;&gt;작업&lt;/a&gt; 을 순차적으로 적용 하고 결과를 새 맵에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="e84b78281375756fcdd0beb8006d504c305de7bb" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../aggregate#kotlin.collections%24aggregate(kotlin.collections.Grouping((kotlin.collections.aggregate.T,%20kotlin.collections.aggregate.K)),%20kotlin.Function4((kotlin.collections.aggregate.K,%20kotlin.collections.aggregate.R?,%20kotlin.collections.aggregate.T,%20kotlin.Boolean,%20kotlin.collections.aggregate.R)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map.</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소에 순차적으로 &lt;a href=&quot;../aggregate#kotlin.collections%24aggregate(kotlin.collections.Grouping((kotlin.collections.aggregate.T,%20kotlin.collections.aggregate.K)),%20kotlin.Function4((kotlin.collections.aggregate.K,%20kotlin.collections.aggregate.R?,%20kotlin.collections.aggregate.T,%20kotlin.Boolean,%20kotlin.collections.aggregate.R)))/operation&quot;&gt;작업&lt;/a&gt; 을 적용 하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 새 맵에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="d0d422dce75fcd6501bddf563bfffca9153d62f0" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">키로 &lt;a href=&quot;index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 이전에 누적 된 값과 현재 요소를 인수로 전달하여 각 그룹의 요소에 &lt;a href=&quot;../aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Foperation&quot;&gt;작업&lt;/a&gt; 을 순차적으로 적용 하고 결과를 지정된 &lt;a href=&quot;../aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="49043aae2ae8239d9ff33b791e426da2b7ddd9cd" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/destination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소에 순차적으로 &lt;a href=&quot;../aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/operation&quot;&gt;작업&lt;/a&gt; 을 적용 하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 지정된 &lt;a href=&quot;../aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/destination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="b3acede8354576676a7060a6788281a42ba83ce9" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.Function2%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.T%2C+kotlin.collections.fold.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is provided by &lt;a href=&quot;../fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.Function2%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.T%2C+kotlin.collections.fold.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2FinitialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</source>
          <target state="translated">키로 &lt;a href=&quot;index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 이전에 누적 된 값과 현재 요소를 인수로 전달하여 각 그룹의 요소에 &lt;a href=&quot;../fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.Function2%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.T%2C+kotlin.collections.fold.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2Foperation&quot;&gt;작업&lt;/a&gt; 을 순차적으로 적용 하고 결과를 새 맵에 저장합니다. 누산기의 초기 값은 &lt;a href=&quot;../fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.Function2%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.T%2C+kotlin.collections.fold.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2FinitialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; 함수 에 의해 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="bee30654191ef79d0432bd589fd07c4fc64c2c69" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.collections.fold.R%2C+kotlin.Function2%28%28kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the same &lt;a href=&quot;../fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.collections.fold.R%2C+kotlin.Function2%28%28kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2FinitialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</source>
          <target state="translated">키로 &lt;a href=&quot;index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 이전에 누적 된 값과 현재 요소를 인수로 전달하여 각 그룹의 요소에 &lt;a href=&quot;../fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.collections.fold.R%2C+kotlin.Function2%28%28kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2Foperation&quot;&gt;작업&lt;/a&gt; 을 순차적으로 적용 하고 결과를 새 맵에 저장합니다. 누산기의 초기 값은 각 그룹에 대해 동일한 &lt;a href=&quot;../fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.collections.fold.R%2C+kotlin.Function2%28%28kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2FinitialValue&quot;&gt;initialValue&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6f872af8fb0409f68f45c9a310c99062b4c6acbb" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.Function2((kotlin.collections.fold.K,%20kotlin.collections.fold.T,%20kotlin.collections.fold.R)),%20kotlin.Function3((kotlin.collections.fold.K,%20kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is provided by &lt;a href=&quot;../fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.Function2((kotlin.collections.fold.K,%20kotlin.collections.fold.T,%20kotlin.collections.fold.R)),%20kotlin.Function3((kotlin.collections.fold.K,%20kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/initialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소에 순차적으로 &lt;a href=&quot;../fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.Function2((kotlin.collections.fold.K,%20kotlin.collections.fold.T,%20kotlin.collections.fold.R)),%20kotlin.Function3((kotlin.collections.fold.K,%20kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/operation&quot;&gt;작업&lt;/a&gt; 을 적용 하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 새 맵에 저장합니다. 누산기의 초기 값은 &lt;a href=&quot;../fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.Function2((kotlin.collections.fold.K,%20kotlin.collections.fold.T,%20kotlin.collections.fold.R)),%20kotlin.Function3((kotlin.collections.fold.K,%20kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/initialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; 함수 에 의해 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="6207086f6f3ad1a2f4fe638d7281a6d2d2a6bfde" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.collections.fold.R,%20kotlin.Function2((kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the same &lt;a href=&quot;../fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.collections.fold.R,%20kotlin.Function2((kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/initialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소에 순차적으로 &lt;a href=&quot;../fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.collections.fold.R,%20kotlin.Function2((kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/operation&quot;&gt;작업&lt;/a&gt; 을 적용 하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 새 맵에 저장합니다. 누산기의 초기 값은 각 그룹에 대해 동일한 &lt;a href=&quot;../fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.collections.fold.R,%20kotlin.Function2((kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/initialValue&quot;&gt;initialValue&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0ed265b07fc8dddafb0187a982928efab397ce8f" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is provided by &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2FinitialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</source>
          <target state="translated">키로 &lt;a href=&quot;index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 이전에 누적 된 값과 현재 요소를 인수로 전달하여 각 그룹의 요소에 &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Foperation&quot;&gt;작업&lt;/a&gt; 을 순차적으로 적용 하고 결과를 지정된 &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다 . 누산기의 초기 값은 &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2FinitialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; 함수 에 의해 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="993e5ec052dbbeb5a3ec6c7dcfcb192706c6c5a9" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the same &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2FinitialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</source>
          <target state="translated">키로 &lt;a href=&quot;index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 이전에 누적 된 값과 현재 요소를 인수로 전달하여 각 그룹의 요소에 &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Foperation&quot;&gt;작업&lt;/a&gt; 을 순차적으로 적용 하고 결과를 지정된 &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다 . 누산기의 초기 값은 각 그룹에 대해 동일한 &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2FinitialValue&quot;&gt;initialValue&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cdd2d8ebf8c1d61fb92c6427de8b3e55569c3960" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is provided by &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/initialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소에 순차적으로 &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/operation&quot;&gt;작업&lt;/a&gt; 을 적용 하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 지정된 &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다 . 누산기의 초기 값은 &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/initialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; 함수 에 의해 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="e51ab8517eab3bfe25b9b0a9c43678a44556ea4c" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the same &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/initialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소에 순차적으로 &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/operation&quot;&gt;작업&lt;/a&gt; 을 적용 하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 지정된 &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다 . 누산기의 초기 값은 각 그룹에 대해 동일한 &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/initialValue&quot;&gt;initialValue&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c13abf5bc4eeafadf280004e040101dde3fb83cb" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;../reduce#kotlin.collections%24reduce%28kotlin.collections.Grouping%28%28kotlin.collections.reduce.T%2C+kotlin.collections.reduce.K%29%29%2C+kotlin.Function3%28%28kotlin.collections.reduce.K%2C+kotlin.collections.reduce.S%2C+kotlin.collections.reduce.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the first element of the group.</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 키로 그룹화 하고 그룹의 두 번째 요소부터 순차적으로 각 그룹의 요소에 축소 &lt;a href=&quot;../reduce#kotlin.collections%24reduce%28kotlin.collections.Grouping%28%28kotlin.collections.reduce.T%2C+kotlin.collections.reduce.K%29%29%2C+kotlin.Function3%28%28kotlin.collections.reduce.K%2C+kotlin.collections.reduce.S%2C+kotlin.collections.reduce.T%2C+%29%29%29%2Foperation&quot;&gt;연산&lt;/a&gt; 을 적용하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 새 맵에 저장합니다. 누산기의 초기 값은 그룹의 첫 번째 요소입니다.</target>
        </trans-unit>
        <trans-unit id="701b0d8ef55ce90cadb15bc8ef5711de7e64828b" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;../reduce#kotlin.collections%24reduce(kotlin.collections.Grouping((kotlin.collections.reduce.T,%20kotlin.collections.reduce.K)),%20kotlin.Function3((kotlin.collections.reduce.K,%20kotlin.collections.reduce.S,%20kotlin.collections.reduce.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the first element of the group.</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;그룹화&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 그룹의 두 번째 요소부터 순차적으로 각 그룹의 요소에 축소 &lt;a href=&quot;../reduce#kotlin.collections%24reduce(kotlin.collections.Grouping((kotlin.collections.reduce.T,%20kotlin.collections.reduce.K)),%20kotlin.Function3((kotlin.collections.reduce.K,%20kotlin.collections.reduce.S,%20kotlin.collections.reduce.T,%20)))/operation&quot;&gt;연산&lt;/a&gt; 을 적용하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 새 맵에 저장합니다. 누산기의 초기 값은 그룹의 첫 번째 요소입니다.</target>
        </trans-unit>
        <trans-unit id="abbc3f18ca4e8fe2849f2e16a8381bdec04177da" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;../reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the first element of the group.</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 키로 그룹화 하고 그룹의 두 번째 요소부터 순차적으로 각 그룹의 요소에 축소 &lt;a href=&quot;../reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Foperation&quot;&gt;조작&lt;/a&gt; 을 적용하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 제공된 &lt;a href=&quot;../reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다. . 누산기의 초기 값은 그룹의 첫 번째 요소입니다.</target>
        </trans-unit>
        <trans-unit id="8e5e985f01683758c44d7c9923fccb94f2cf72aa" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;../reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the first element of the group.</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;그룹화&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 그룹의 두 번째 요소부터 순차적으로 각 그룹의 요소에 축소 &lt;a href=&quot;../reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/operation&quot;&gt;연산&lt;/a&gt; 을 적용하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 지정된 &lt;a href=&quot;../reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/destination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다. . 누산기의 초기 값은 그룹의 첫 번째 요소입니다.</target>
        </trans-unit>
        <trans-unit id="def242ad6826d52ffd2160988337cd2d241e310d" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and counts elements in each group to the given &lt;a href=&quot;../each-count-to#kotlin.collections%24eachCountTo%28kotlin.collections.Grouping%28%28kotlin.collections.eachCountTo.T%2C+kotlin.collections.eachCountTo.K%29%29%2C+kotlin.collections.eachCountTo.M%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">키별로 &lt;a href=&quot;index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 각 그룹의 요소를 지정된 &lt;a href=&quot;../each-count-to#kotlin.collections%24eachCountTo%28kotlin.collections.Grouping%28%28kotlin.collections.eachCountTo.T%2C+kotlin.collections.eachCountTo.K%29%29%2C+kotlin.collections.eachCountTo.M%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵으로 계산합니다.</target>
        </trans-unit>
        <trans-unit id="75c6f356334d079413ca86cb4f880a11e2068327" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and counts elements in each group to the given &lt;a href=&quot;../each-count-to#kotlin.collections%24eachCountTo(kotlin.collections.Grouping((kotlin.collections.eachCountTo.T,%20kotlin.collections.eachCountTo.K)),%20kotlin.collections.eachCountTo.M)/destination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소를 지정된 &lt;a href=&quot;../each-count-to#kotlin.collections%24eachCountTo(kotlin.collections.Grouping((kotlin.collections.eachCountTo.T,%20kotlin.collections.eachCountTo.K)),%20kotlin.collections.eachCountTo.M)/destination&quot;&gt;대상&lt;/a&gt; 맵으로 계산합니다.</target>
        </trans-unit>
        <trans-unit id="33bdc57b4803e7486893c856c65f9f2dc83d888d" translate="yes" xml:space="preserve">
          <source>Groups elements from the Grouping source by key and counts elements in each group.</source>
          <target state="translated">키로 그룹화 소스에서 요소를 그룹화하고 각 그룹의 요소를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="0049cbdd9a79fa0c1c0a57f41eb649c85fb3f9da" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1c51d9088c4daf2245ac28bdf16088c56db1ffb6" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.BooleanArray%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.BooleanArray%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b2c08078d6fe0e8e94be2dbd5c83cf3ded89183e" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ByteArray%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ByteArray%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2114e4aff30894275945688a229421607cdf62f9" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.CharArray%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.CharArray%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a2bb5c5822f15801f72e694bf63c203633cabb8e" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.DoubleArray%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.DoubleArray%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fdef4c643a8c0c33ffb57b3bbff3489b47f9e492" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.FloatArray%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.FloatArray%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5aef18a32d519975f70caf15dc5e44830c8833f7" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.IntArray%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.IntArray%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5f139e736a7f90fc2da9b03415aad0910e913890" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.LongArray%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.LongArray%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ae18d1f7b9a9fac041c1f739af868e400dd69900" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ShortArray%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ShortArray%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4f3177e8bbafa7ae57628d22bf32feb937052adf" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UByteArray%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UByteArray%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bb266de87014489fcf7146d343f2089ced330186" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UIntArray%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UIntArray%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ed7d644cb34fbeb886322ce233475a7ba83b2351" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ULongArray%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ULongArray%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="82394286609da7139425ea67f88a8ceec3cb07d3" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UShortArray%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UShortArray%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="00be0847533736b989db053061f9d8259f5ad30c" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="851dc2a7f0b5bf3f0550eb1666343fa4298b77e7" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.BooleanArray,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.BooleanArray,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d0686021f7dd8de62016ee3edbfb2fd36fd9af47" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ByteArray,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ByteArray,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b4485e588db84ca7c3dfeb796a75f2b1646eaa90" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.CharArray,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.CharArray,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="35d37c5aeaf63c6b99ac03443d5c7d6fc8c4ed69" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.DoubleArray,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.DoubleArray,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="42dd362008c94e1c24999bff86f64540a0d78915" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.FloatArray,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.FloatArray,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="73a2fc8ff63aac6c8ba7ba540f42315241f445a4" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.IntArray,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.IntArray,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9cd16b19000fbfd1271e5a6063fe1f5998f36bd0" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.LongArray,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.LongArray,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="aee9f29d1a17ba05da4ea0df4b3ad33e9ce1ac9f" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ShortArray,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ShortArray,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7d8d6b89a1ffd4edf5f704956fd67152bc730c30" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UByteArray,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UByteArray,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6fc1d1216ab12356ac9f4534f9863816b14f47b5" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UIntArray,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UIntArray,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0e559ac6014c6475b204e822ee249f10246561c0" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ULongArray,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ULongArray,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="40daa48f46aa32fde5690ab8a81a97501bd4554d" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UShortArray,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UShortArray,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b97359dd418232f3e9dfba4839af5b34080c030a" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="ce5a0635a524f1fec495708d53a45e84dfbe68b5" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="958569e0463e46cabce02a2bbd6365d74a9b357e" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="f0fb79969db9482e65fa3420c1d0bf7843b07e7f" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="306933cb3933a6a1a74b8d42cc0396d5c33a34dc" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="565bf8325f2e55755766a63645c8ab50123f18b5" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="391eb4b360ddda6247da1f2acec1ff424920a711" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="4eaa4fffc174c3473d3d102b97c7875e8172a200" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="48d9c4775abfc93a0b1d431d33160466750f89f2" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="b8605775196a80b16b6519486fb7c28367deeec5" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="0dc001caed09ffefd53b93e3197a629ed1fc0ec4" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="a72b276dac35986efed8b6df558338b126cfdf57" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="0226904415121a1435b0100b90ba0df857d6c486" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="b26d70081c9844a17a1b7dedbd25e3b5d8bccd9e" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="53ca44e9009ee71d251a3b844ed67db64fe945a2" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="bd9cf0053728f15d0a04e11c79ecb2b08f4e2d79" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="4e23304eaf85eacc24085e9d44044b80eba0d853" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="b8e21cc415d3a6b7422e1cb1cc57bc3a34816407" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="a673bcb10b2afd9a53d6e2930f5d472748f33ab3" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="2fa4db2d190a336a56066a41714cf2d0d9833be3" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="3dbdb6025dfcd229b2af63a2bcf4111f0cc34cac" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="5946536c3ea37e9763e0415867c32eaeeeb97963" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="68e74c2740eed77d8bcefc6f236f43775a6ec431" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="184e8c08bebdae365e9e5a2e376642b16492ef98" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="c50753c669c09345d773fbfb1fe3a6cc83d1bbc8" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="819cc0bf941cc430b4e7d67fbb606c3dc00fce1e" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="f1ea1983ee1ace62ea4d7847ae47f2af29e3e8b7" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="60057156284b20a226c459687a5df5375c98b407" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6f9c701e783385331f9ae2fa7a4574978463d51e" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="c4346532147f3b7227b76a9ea9ccb0dcb1ef48ff" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="aeab561390722ea1c65c8dd6cb19582a63491afa" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 기준으로 원본 컬렉션의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된지도를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6b223949c43afb147fd558310083444af5573fdc" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 컬렉션의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="517d4d0a40fb4e4ebf5b17ce5e285bf3ea95e744" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 기준으로 원본 컬렉션의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="fdb96cee8b23426759c383481c1e9e091bac835b" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 컬렉션의 요소를 그룹화하고 해당 요소 목록과 연결된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="18645dce0a179d46721040a013c7c2aaf281e353" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 기준으로 원본 컬렉션의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된지도를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7d871694cc7e99432d86f1ef7a7307d8a0b67f70" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 컬렉션의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="839f3ff0a4b21a3fb439fd9a44418a2158e05fa4" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 기준으로 원본 컬렉션의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="d8afc4e0571a5dbffbed0463fbf8088fa2876f03" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 컬렉션의 요소를 그룹화하고 해당 요소 목록과 연결된 각 그룹 키를 &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="33bf3bb48ad29661f3baae393a0cc99f73167717" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 기준으로 원본 컬렉션의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된지도를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f3f8482249d4dd70954b6803191cd2679b868e2c" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 컬렉션의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7931ac3eb2cb1ac7f85b3778bd370248cf181321" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 기준으로 원본 컬렉션의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="0994ec7bb2bbbda52f55efe47fea24be4785b00e" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 컬렉션의 요소를 그룹화하고 해당 요소 목록과 연결된 각 그룹 키를 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="b738b8d42d76ab1d26042cd7bca1712e233e1b00" translate="yes" xml:space="preserve">
          <source>Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 시퀀스의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9c21c1183dc7cdbc83cbd116e0d231316200c5ff" translate="yes" xml:space="preserve">
          <source>Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 시퀀스의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="97ac36e3e9fd52501da0a3b987cc43c0293e964d" translate="yes" xml:space="preserve">
          <source>Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 기준으로 원래 시퀀스의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="0849a7627e44c1cb08f9cd081b09688106279546" translate="yes" xml:space="preserve">
          <source>Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 시퀀스의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="8a8875f0180052555387882539b34b0e16ba24e2" translate="yes" xml:space="preserve">
          <source>Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 시퀀스의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1ef7e07bd10fd401a375bd880a4a64dce16aa688" translate="yes" xml:space="preserve">
          <source>Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 시퀀스의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="05b9a5d5612ee02f871ecbd0b90c1f1934726c0f" translate="yes" xml:space="preserve">
          <source>Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 기준으로 원래 시퀀스의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="a84388243a1cb9bf17e3b36ea4d2ca2d008c524e" translate="yes" xml:space="preserve">
          <source>Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 시퀀스의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="0c13d802fc83fb417f4db679bc54a8b8dd9c4cd6" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="edf45bfebe04f5e0932aa2ebd24d8f8ad23cf236" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.BooleanArray%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.BooleanArray%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.BooleanArray%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.BooleanArray%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="ec68bf694aaedf58fbfabe0c2f60c18f77929117" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ByteArray%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ByteArray%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ByteArray%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ByteArray%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="30925fcc6b9f20201f2ddac9f2047ff0b5d9574b" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.CharArray%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.CharArray%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.CharArray%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.CharArray%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="9e12a790fbd231e076f738a178fccc8139b8c554" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.DoubleArray%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.DoubleArray%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.DoubleArray%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.DoubleArray%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="5a588399d89bc5711966ed2730aedf4dbbc22c98" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.FloatArray%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.FloatArray%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.FloatArray%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.FloatArray%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="bef79b8ef9f6baedb0d78a983d328c8bf8fa09e0" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.IntArray%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.IntArray%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.IntArray%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.IntArray%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="4a9b47e51433f950b5a1bd41c28bae6d294580d6" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.LongArray%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.LongArray%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.LongArray%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.LongArray%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="5d0867a1b19df800095755738cbfc807be904120" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ShortArray%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ShortArray%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ShortArray%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ShortArray%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="b833a48470c0f3342699c408599dfb224a17fc29" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UByteArray%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UByteArray%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UByteArray%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UByteArray%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="9323fc10d5fdfdc6ca5c0862bd237bce5d316229" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UIntArray%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UIntArray%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UIntArray%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UIntArray%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="262fd693f93c7d8fc592a4a596034da2937b873c" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ULongArray%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ULongArray%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ULongArray%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ULongArray%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="105d959656cfbe5d1a8214c7c01d2e5689ed25e9" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UShortArray%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UShortArray%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UShortArray%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UShortArray%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="ecf4088d9c38778f598151be7feb7b7774df4498" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키를 사용하여 원래의 집합의 각 요소에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="3e818374c832f11ad7cf45f6178a91f51d726c8f" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d43c17790dc4757831d2cc50497c2e18b09d0601" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.BooleanArray,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.BooleanArray,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.BooleanArray,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.BooleanArray,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="37b71ce400ec291fcef9e599c5f9caee14462f98" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ByteArray,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ByteArray,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ByteArray,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ByteArray,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7a48686c2dea60384d7268be3076663be02e3ccc" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.CharArray,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.CharArray,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.CharArray,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.CharArray,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dff2bb1f566c5a3bc8920566b9e44fc8cc19de29" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.DoubleArray,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.DoubleArray,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.DoubleArray,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.DoubleArray,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="073f6639c0e8a5161ab11731ee32de336db0b24c" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.FloatArray,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.FloatArray,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.FloatArray,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.FloatArray,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2b5328206de5ee8f25250e777d0ce8504c619ffd" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.IntArray,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.IntArray,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.IntArray,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.IntArray,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="93bcc37951503ce8f435d9dd7f415ef907f2fe04" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.LongArray,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.LongArray,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.LongArray,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.LongArray,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8481a8141b9fca364a117ac317145fcddcdce0b8" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ShortArray,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ShortArray,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ShortArray,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ShortArray,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="99a29eff32f18cebce5eaf3017168b185cd4d887" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UByteArray,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UByteArray,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UByteArray,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UByteArray,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f60c8c1cf857e5f500c8a1f4ff2857524de2f085" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UIntArray,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UIntArray,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UIntArray,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UIntArray,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6a9e85939866bd6c507e4c0389b8135268fd91e3" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ULongArray,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ULongArray,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ULongArray,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ULongArray,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ff37a5858a1e7cdefab2bfcf1039804f418f1712" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UShortArray,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UShortArray,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UShortArray,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UShortArray,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3514bab0fde26cbf388eca1ef93294598a9e6f13" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키를 사용하여 원래의 집합의 각 요소에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="5e14e17af229b7a64cd72c9e61381d31167b02c6" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="15afb1e1aafcde9c9f0c493b7b5514d708c3ef21" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="6102f783ca6b80ae09922c8a9d4c9e3a06950b2c" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="bfd1d751a5b539bd58d073a68e86a87eda78d821" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="6c7492e3646e11be56f82e0e3e11b83b12c93472" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="90040553349b0e00671106e1fa0d8a198cb768af" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="75946a44f171c6d433da12b2a5c3adcb053d5d8a" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="1388bb95a8bb43baa4d446382e92690f393842e5" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="f797f7632480a1a27f645be371f21e618e72d2f2" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="b8aa35750fe93dcea4289b1f9976ae9787e28035" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="1211c1d0459b8fb7bd06c13ce866bd49a3af49e8" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="2ded10c3a8711d6ea075fd3e37b8a98fb491c5ce" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="5f2aa4bf740741abbe1bf0a2e26d33e482572358" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="e91b7e58de38408e07d485e9a36d764d14890a9f" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키를 사용하여 원래의 집합의 각 요소에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="8cb093e9d155f168a630e7aede8f7059f633d240" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="0ad68d3c5e60aee8250b8e17e15b15cb8ac4b1d9" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="aa4f46661a4e5ec7b0630ffeb46eda4ee66f8d8a" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="d4ffea609218a4d7817e1121f93a4a9aa8b0ff47" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="6cfbc51899fa056af66031ae18cb2a4d364ca8ce" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="2d7afd4e18186602c7c9f75a9c192d4e83926abd" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="5b63fd1cf47e396ac9cd84945487e899d4160ec0" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="728c3ca682cd740058691866d114df4ed247906f" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="5bd4c94b207344d45b189203d30c685f9860f5aa" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="6472f8a967cf6245c2c00dbcf7377ea042439d61" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="be7a0bcafa14a0c8d1d1eaf216c7892b7844065a" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="7b2063272bc8475372d68ba6f4e291ce4eb4f944" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="7979b93d1658f4ea63f4b83055a526a207587537" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="824c5d62bf5b4938a4aae65549bdfbedd3c690ae" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키를 사용하여 원래의 집합의 각 요소에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="d4f604c6cf9776efcb0fe97f434c98f29bdb30c9" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 일본어 문자 시퀀스의 각 문자에인가 &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 캐릭터 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="62f5eace8d7430a4c5c2bea936df42368df12f17" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 문자 시퀀스의 각 문자에 적용된 &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 문자에 적용된 주어진 &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="171645e45f713d2812e6be2c0af2d2e851f725e7" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and puts to the &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 일본어 문자 시퀀스의 각 문자에인가 &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 문자 및 풋인가 기능 &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="f5eb122ee5f9296f4be7fb1d730758d514d26017" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and puts to the &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 일본어 문자 시퀀스의 각 문자에인가 &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 문자 및 풋인가 기능 &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="4b7ae2e49f1074a964984328edf28807a4559cf8" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키를 사용하여 원래의 집합의 각 요소에인가 &lt;a href=&quot;../group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="a583367e4596cea2375c96d5c33bbaf2492abbd6" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키를 사용하여 원래의 집합의 각 요소에인가 &lt;a href=&quot;../group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="c42e35967e0dd9f88938b50e060ea0e9bc5436b8" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 오리지널 시퀀스의 각 요소에인가 &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="5aa63f587015029a0ef487442013804505efc6db" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 시퀀스의 각 요소에 적용된 &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d328f2ed4366d09469e07761469f5b31429bef7f" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 일본어 문자 시퀀스의 각 문자에인가 &lt;a href=&quot;../group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 캐릭터 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="d301c21048ea8a999d42d1f7ed4ef685c21030dc" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 문자 시퀀스의 각 문자에 적용된 &lt;a href=&quot;../group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 문자에 적용된 주어진 &lt;a href=&quot;../group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="91a56fc90f80e9983e4d12c68b952245f2c4863d" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키를 사용하여 원래의 집합의 각 요소에인가 &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="c05ad7e6c70a3d43eb32106de6b5bf5c6da323a0" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키를 사용하여 원래의 집합의 각 요소에인가 &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="6133e7ffcba60e8c7ca183d8754244013dee3051" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 오리지널 시퀀스의 각 요소에인가 &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="47265c2657b6a926528cb7d9c427b73abe06c12c" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 오리지널 시퀀스의 각 요소에인가 &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="c3249a0b5205f9c05c4f99cd18f9870458d31e02" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and puts to the &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 일본어 문자 시퀀스의 각 문자에인가 &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 문자 및 풋인가 기능 &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="166baa96ab7a1a69b981ec5750e0ff539841a42e" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and puts to the &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 일본어 문자 시퀀스의 각 문자에인가 &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 문자 및 풋인가 기능 &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="b4efab6e1ea870536f5cc2e69ae3873ac048af7c" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="c30df3e35a857b962ce402eb2bfb40bad2ff2661" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키를 사용하여 원래의 집합의 각 요소에인가 &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="df1154b067448259d39461c53e341dd45348e7a5" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b77cbf8ddc40afafa0077e39bfc24f8a3bb62261" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키를 사용하여 원래의 집합의 각 요소에인가 &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="cbab5fc57f5e6a44c19a84ad4fa26397fdc1c1ad" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 오리지널 시퀀스의 각 요소에인가 &lt;a href=&quot;group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="e85ec99a0a08aeac0d7277d4be8d9ac8b851d048" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 시퀀스의 각 요소에 적용된 &lt;a href=&quot;group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="82fd00734c32884d111e62bfa57dfd2543bb77c1" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 일본어 문자 시퀀스의 각 문자에인가 &lt;a href=&quot;group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 캐릭터 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="2812e3260030a692b4e5a1c003e7b35b693912d7" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 문자 시퀀스의 각 문자에 적용된 &lt;a href=&quot;group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 문자에 적용된 주어진 &lt;a href=&quot;group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="61af8b8644747449b7ea854a912826205e29374c" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="57b7411c62c1b48f7b2329cc0f360e751a1d5f04" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키를 사용하여 원래의 집합의 각 요소에인가 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="886377e472e1a87f40381595e3ac451afa5c137f" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="f5c8eadbdf334cd6d3c254e2f98e976036a64579" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키를 사용하여 원래의 집합의 각 요소에인가 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="ec746744415ac5324814073f398ea295c5d97be1" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 오리지널 시퀀스의 각 요소에인가 &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="8bebc800c05ec839bcf0d26565459321def9c6f6" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 오리지널 시퀀스의 각 요소에인가 &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="a5af5557d5a229c09e04a3dabd9144f68eed9121" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and puts to the &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 일본어 문자 시퀀스의 각 문자에인가 &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 문자 및 풋인가 기능 &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="045313e9d37e7902173be877c270d12d829e38f8" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and puts to the &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 일본어 문자 시퀀스의 각 문자에인가 &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 문자 및 풋인가 기능 &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="0b4e0ad36013170249087a39af06addff8702427" translate="yes" xml:space="preserve">
          <source>Guide to UI programming with coroutines</source>
          <target state="translated">코 루틴을 사용한 UI 프로그래밍 가이드</target>
        </trans-unit>
        <trans-unit id="ffcd6fd3be2b8e68d56b152d3c64c5bfe63651d1" translate="yes" xml:space="preserve">
          <source>Guide to reactive streams with coroutines</source>
          <target state="translated">코 루틴이 포함 된 반응성 스트림 안내</target>
        </trans-unit>
        <trans-unit id="1ba3456507ad0628ffef08bfa52a7b0cd368f255" translate="yes" xml:space="preserve">
          <source>HIDDEN</source>
          <target state="translated">HIDDEN</target>
        </trans-unit>
        <trans-unit id="cb19a6374948586d14e2b1a2c546309492910187" translate="yes" xml:space="preserve">
          <source>HTMLAllCollection</source>
          <target state="translated">HTMLAllCollection</target>
        </trans-unit>
        <trans-unit id="4c52783da612b22fe54d1b6ac95e715dd9c1b742" translate="yes" xml:space="preserve">
          <source>HTMLCollection</source>
          <target state="translated">HTMLCollection</target>
        </trans-unit>
        <trans-unit id="4160c6e1a844a0e46d0b25c230278933561d83be" translate="yes" xml:space="preserve">
          <source>HTMLHyperlinkElementUtils</source>
          <target state="translated">HTMLHyperlinkElementUtils</target>
        </trans-unit>
        <trans-unit id="5afa4ce27f1e140932faf73c7ec2657e9e9fb1a9" translate="yes" xml:space="preserve">
          <source>HTMLOrSVGImageElement</source>
          <target state="translated">HTMLOrSVGImageElement</target>
        </trans-unit>
        <trans-unit id="e4260e00d7ae68e26d8b2788375dd101818548cd" translate="yes" xml:space="preserve">
          <source>HTMLOrSVGScriptElement</source>
          <target state="translated">HTMLOrSVGScriptElement</target>
        </trans-unit>
        <trans-unit id="f5e84acdec73cacccdd6a0e6708e899e233ab5ef" translate="yes" xml:space="preserve">
          <source>Hadi Hariri, Edoardo Vacchi, S&amp;eacute;bastien Deleuze</source>
          <target state="translated">하디 하리리, 에도아르도 바치, 세바스티앙 델 루제</target>
        </trans-unit>
        <trans-unit id="c0a888dd9c427e4a217a64402be233d1b8e8282e" translate="yes" xml:space="preserve">
          <source>Handling signature clashes with &lt;code&gt;@JvmName&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@JvmName&lt;/code&gt; 과의 서명 충돌 처리</target>
        </trans-unit>
        <trans-unit id="6a7b0d82dac8b36df9262e7f047f7d42bc13f6ba" translate="yes" xml:space="preserve">
          <source>Hands-on Labs</source>
          <target state="translated">실습 랩</target>
        </trans-unit>
        <trans-unit id="f5b53691461c367d22af5a5d9ea5e5bdb4bd573d" translate="yes" xml:space="preserve">
          <source>Hands-on experience is the way to master your Kotlin skills on real examples right in the browser:</source>
          <target state="translated">실제 경험은 브라우저에서 실제 예제를 통해 Kotlin 기술을 습득 할 수있는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="c7e218e13ccebeed31dc7c2a8e9a7a5d7435f040" translate="yes" xml:space="preserve">
          <source>Hands-on labs are long-form tutorials that help you get to know a technology by guiding you through a self-contained project related to a specific topic.</source>
          <target state="translated">실습 랩은 특정 주제와 관련된 자체 포함 된 프로젝트를 안내하여 기술을 익히는 데 도움이되는 긴 형식의 자습서입니다.</target>
        </trans-unit>
        <trans-unit id="a27e0d652450f11c5a65726ad51c1e32bfd59aa5" translate="yes" xml:space="preserve">
          <source>Hands-on labs for Kotlin/JS</source>
          <target state="translated">Kotlin / JS 실습</target>
        </trans-unit>
        <trans-unit id="a9b3bcc1c1b6077725b43c7b2b03b2329c85a7d0" translate="yes" xml:space="preserve">
          <source>Hard Keywords</source>
          <target state="translated">어려운 키워드</target>
        </trans-unit>
        <trans-unit id="97a2b75e2d466574b1a6c8cc957b97c7acf70c1a" translate="yes" xml:space="preserve">
          <source>Hash table based implementation of the &lt;a href=&quot;-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; interface, which additionally preserves the insertion order of entries during the iteration.</source>
          <target state="translated">반복하는 동안 항목의 삽입 순서를 추가로 유지하는 &lt;a href=&quot;-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; 인터페이스 의 해시 테이블 기반 구현 .</target>
        </trans-unit>
        <trans-unit id="d0ceb916e1d644fa6b5389696f5076cf8fd624c1" translate="yes" xml:space="preserve">
          <source>Hash table based implementation of the &lt;a href=&quot;-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; 인터페이스 의 해시 테이블 기반 구현 .</target>
        </trans-unit>
        <trans-unit id="16326864f33a381692b73eed3eeaf677ec94bad6" translate="yes" xml:space="preserve">
          <source>Hash table based implementation of the &lt;a href=&quot;../-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; interface, which additionally preserves the insertion order of entries during the iteration.</source>
          <target state="translated">반복하는 동안 항목의 삽입 순서를 추가로 유지하는 &lt;a href=&quot;../-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; 인터페이스 의 해시 테이블 기반 구현 .</target>
        </trans-unit>
        <trans-unit id="f0bdef08fd6dd05500473c598e6d74a82da5a9fd" translate="yes" xml:space="preserve">
          <source>Hash table based implementation of the &lt;a href=&quot;../-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;../-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; 인터페이스 의 해시 테이블 기반 구현 .</target>
        </trans-unit>
        <trans-unit id="7ea419b54a457cb3c6c5cc65609c5ace43529e56" translate="yes" xml:space="preserve">
          <source>Hash table based implementation of the &lt;a href=&quot;../../kotlin.collections/-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; interface, which additionally preserves the insertion order of entries during the iteration.</source>
          <target state="translated">반복하는 동안 항목의 삽입 순서를 추가로 유지하는 &lt;a href=&quot;../../kotlin.collections/-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; 인터페이스 의 해시 테이블 기반 구현 .</target>
        </trans-unit>
        <trans-unit id="c5be46be14f718f12035351a7fec221127466ed7" translate="yes" xml:space="preserve">
          <source>Hash table based implementation of the &lt;a href=&quot;../../kotlin.collections/-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; 인터페이스 의 해시 테이블 기반 구현 .</target>
        </trans-unit>
        <trans-unit id="9b4378e29bed19a0caf75d9accb188eba1f1cb68" translate="yes" xml:space="preserve">
          <source>Hash table based implementation of the &lt;a href=&quot;index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; interface, which additionally preserves the insertion order of entries during the iteration.</source>
          <target state="translated">반복하는 동안 항목의 삽입 순서를 추가로 유지하는 &lt;a href=&quot;index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; 인터페이스 의 해시 테이블 기반 구현 .</target>
        </trans-unit>
        <trans-unit id="158ac569cb9477fc0e1256d1493d1370cd5b34b5" translate="yes" xml:space="preserve">
          <source>Hash table based implementation of the &lt;a href=&quot;index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; 인터페이스 의 해시 테이블 기반 구현 .</target>
        </trans-unit>
        <trans-unit id="aa8c17a3b1dda3ebc62cb63e33bdab65004a22b7" translate="yes" xml:space="preserve">
          <source>HashChangeEventInit</source>
          <target state="translated">HashChangeEventInit</target>
        </trans-unit>
        <trans-unit id="ba62d7b8d0b157f714c6a6132554b38789c6ada5" translate="yes" xml:space="preserve">
          <source>HashMap</source>
          <target state="translated">HashMap</target>
        </trans-unit>
        <trans-unit id="cac17f9bdb6febebe0052a72f2ab8a6828d20944" translate="yes" xml:space="preserve">
          <source>HashSet</source>
          <target state="translated">HashSet</target>
        </trans-unit>
        <trans-unit id="8503ede3ea63ea360679c1a7bb9c6feb415c1aeb" translate="yes" xml:space="preserve">
          <source>Have fun!</source>
          <target state="translated">즐기세요!</target>
        </trans-unit>
        <trans-unit id="614c8c725939c1409d2367860130473abc3d4ef4" translate="yes" xml:space="preserve">
          <source>Having multiple files which have the same generated Java class name (the same package and the same name or the same &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-name/index&quot;&gt;&lt;code&gt;@JvmName&lt;/code&gt;&lt;/a&gt; annotation) is normally an error. However, the compiler has the ability to generate a single Java facade class which has the specified name and contains all the declarations from all the files which have that name. To enable the generation of such a facade, use the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-multifile-class/index&quot;&gt;&lt;code&gt;@JvmMultifileClass&lt;/code&gt;&lt;/a&gt; annotation in all of the files.</source>
          <target state="translated">동일한 생성 된 Java 클래스 이름 (동일한 패키지 및 동일한 이름 또는 동일한 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-name/index&quot;&gt; &lt;code&gt;@JvmName&lt;/code&gt; &lt;/a&gt; 주석) 을 갖는 여러 파일을 갖는 것은 일반적으로 오류입니다. 그러나 컴파일러는 지정된 이름을 가지며 해당 이름을 가진 모든 파일의 모든 선언을 포함하는 단일 Java 파사드 클래스를 생성 할 수 있습니다. 이러한 파사드를 생성하려면 모든 파일에서 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-multifile-class/index&quot;&gt; &lt;code&gt;@JvmMultifileClass&lt;/code&gt; &lt;/a&gt; 주석을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="1f242aabecbf270e9098f316d26a6f3578a9273f" translate="yes" xml:space="preserve">
          <source>Having the &lt;code&gt;lengthComparator&lt;/code&gt;, you are able to arrange strings by their length instead of the default lexicographical order.</source>
          <target state="translated">갖는 &lt;code&gt;lengthComparator&lt;/code&gt; 을 대신 기본 사전 순의 그 길이로 문자열을 정렬 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c0eaa8edf655cc1e8de855aec9d918e7b1ea95d" translate="yes" xml:space="preserve">
          <source>Having the ability to iterate in both directions, means the &lt;code&gt;ListIterator&lt;/code&gt; can still be used after it reaches the last element.</source>
          <target state="translated">양방향으로 반복 할 수있는 기능은 &lt;code&gt;ListIterator&lt;/code&gt; 가 마지막 요소에 도달 한 후에도 계속 사용할 수 있음을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="90be45baa04a9d5a158798fb0b4bf37260137255" translate="yes" xml:space="preserve">
          <source>Having the receiver as the return value, you can easily include &lt;code&gt;apply&lt;/code&gt; into call chains for more complex processing.</source>
          <target state="translated">수신자를 반환 값으로 설정하면 보다 복잡한 처리를 위해 콜 체인에 쉽게 &lt;code&gt;apply&lt;/code&gt; 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e0d9450925442ce470d2e864cab9481d218ffe6d" translate="yes" xml:space="preserve">
          <source>Header files under the covers</source>
          <target state="translated">표지 아래의 헤더 파일</target>
        </trans-unit>
        <trans-unit id="520de7443d00d6ff4dc3ababbbf6cfbe0b74f4ec" translate="yes" xml:space="preserve">
          <source>Headers</source>
          <target state="translated">Headers</target>
        </trans-unit>
        <trans-unit id="9ed4e25a00846b8efd8b4c649f7a88f722c16c20" translate="yes" xml:space="preserve">
          <source>Hello Kotlin/Native</source>
          <target state="translated">안녕하세요 Kotlin / Native</target>
        </trans-unit>
        <trans-unit id="0a4d55a8d778e5022fab701977c5d840bbc486d0" translate="yes" xml:space="preserve">
          <source>Hello World</source>
          <target state="translated">안녕하세요 월드</target>
        </trans-unit>
        <trans-unit id="ff5585f75c04b35aa1980b334e869011a0d42614" translate="yes" xml:space="preserve">
          <source>Helper functions for creating &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html&quot;&gt;Comparator&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html&quot;&gt;Comparator&lt;/a&gt; 인스턴스 를 만들기위한 도우미 기능</target>
        </trans-unit>
        <trans-unit id="4ba5653c21422f1b85430fd5794566088974aa2d" translate="yes" xml:space="preserve">
          <source>Helper functions for creating &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html&quot;&gt;Comparator&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html&quot;&gt;Comparator&lt;/a&gt; 인스턴스 생성을위한 도우미 기능 .</target>
        </trans-unit>
        <trans-unit id="aadf38d42c47f2942d053ad710757cc1b854fee0" translate="yes" xml:space="preserve">
          <source>Helper functions for creating Comparator instances.</source>
          <target state="translated">Comparator 인스턴스를 만들기위한 도우미 기능</target>
        </trans-unit>
        <trans-unit id="0b73fa64c5ddbe065b8467f94a6ebd4f7c1823cc" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;::isOdd&lt;/code&gt; is a value of function type &lt;code&gt;(Int) -&amp;gt; Boolean&lt;/code&gt;.</source>
          <target state="translated">여기서 &lt;code&gt;::isOdd&lt;/code&gt; 는 함수 유형 &lt;code&gt;(Int) -&amp;gt; Boolean&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="41ccfd26f5a19a10fbdd491b940c29702e4e0642" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;runBlocking&amp;lt;Unit&amp;gt; { ... }&lt;/code&gt; works as an adaptor that is used to start the top-level main coroutine. We explicitly specify its &lt;code&gt;Unit&lt;/code&gt; return type, because a well-formed &lt;code&gt;main&lt;/code&gt; function in Kotlin has to return &lt;code&gt;Unit&lt;/code&gt;.</source>
          <target state="translated">여기서 &lt;code&gt;runBlocking&amp;lt;Unit&amp;gt; { ... }&lt;/code&gt; 은 최상위 주 코 루틴을 시작하는 데 사용되는 어댑터로 작동합니다. 우리는 명시 적으로 지정 &lt;code&gt;Unit&lt;/code&gt; 가 잘 형성하기 때문에, 반환 형식을 &lt;code&gt;main&lt;/code&gt; 코 틀린에 함수가 반환하는 &lt;code&gt;Unit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73ec159c610c0bde512d4dd98796481a0f1dd9af" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;startOtherActivity&lt;/code&gt; is a method defined in our &lt;code&gt;MainActivity&lt;/code&gt;:</source>
          <target state="translated">여기서 &lt;code&gt;startOtherActivity&lt;/code&gt; 는 &lt;code&gt;MainActivity&lt;/code&gt; 에 정의 된 메소드입니다 .</target>
        </trans-unit>
        <trans-unit id="64e9f395cb5a12a58f09dadd871e66a32af07cec" translate="yes" xml:space="preserve">
          <source>Here an interop library will be built and added in the component dependencies.</source>
          <target state="translated">여기에서는 interop 라이브러리가 구성 요소 종속성에 빌드되고 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="9817b024dae16b279b9de34a5943e840e3c6c191" translate="yes" xml:space="preserve">
          <source>Here is a list of the available options:</source>
          <target state="translated">사용 가능한 옵션 목록은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3964503de4031e1f67f448283c7c7436d1b66391" translate="yes" xml:space="preserve">
          <source>Here is a short guide for choosing scope functions depending on the intended purpose:</source>
          <target state="translated">다음은 의도 된 목적에 따라 범위 기능을 선택하기위한 간단한 안내서입니다.</target>
        </trans-unit>
        <trans-unit id="ffc12a7f4c76f906c5fdb788b5e01253afdd3556" translate="yes" xml:space="preserve">
          <source>Here is an example of a Kotlin interface with a default method:</source>
          <target state="translated">다음은 기본 메소드가있는 Kotlin 인터페이스의 예입니다.</target>
        </trans-unit>
        <trans-unit id="354b21831f3e1d3354009c224825e8899e667c5d" translate="yes" xml:space="preserve">
          <source>Here is an example of a function literal with receiver along with its type, where &lt;code&gt;plus&lt;/code&gt; is called on the receiver object:</source>
          <target state="translated">다음은 수신자와 함께 유형이있는 함수 리터럴의 예입니다. 여기서 수신자 오브젝트 에서 &lt;code&gt;plus&lt;/code&gt; 가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9cbaae661e521db61b00232121154a0bc978c4dc" translate="yes" xml:space="preserve">
          <source>Here is how you can encode options by yourself:</source>
          <target state="translated">옵션을 직접 인코딩하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bcb68cd11077c1a66dff0232c6f982357e38486f" translate="yes" xml:space="preserve">
          <source>Here is how you can pass arbitrary options to javac:</source>
          <target state="translated">javac에 임의의 옵션을 전달하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8b5c51aaaea8e6fb9ff9f4bba92240eccf7a3b31" translate="yes" xml:space="preserve">
          <source>Here is the complete list of bitwise operations (available for &lt;code&gt;Int&lt;/code&gt; and &lt;code&gt;Long&lt;/code&gt; only):</source>
          <target state="translated">비트 단위 연산의 전체 목록은 다음과 같습니다 ( &lt;code&gt;Int&lt;/code&gt; 및 &lt;code&gt;Long&lt;/code&gt; 에만 사용 가능).</target>
        </trans-unit>
        <trans-unit id="ef5968a2159afa31759e26f3ea13b246a929d737" translate="yes" xml:space="preserve">
          <source>Here the constructor is private. By default, all constructors are &lt;code&gt;public&lt;/code&gt;, which effectively amounts to them being visible everywhere where the class is visible (i.e. a constructor of an &lt;code&gt;internal&lt;/code&gt; class is only visible within the same module).</source>
          <target state="translated">여기서 생성자는 비공개입니다. 기본적으로 모든 생성자는 &lt;code&gt;public&lt;/code&gt; 이며, 클래스가 표시되는 모든 곳에서 효과적으로 표시됩니다 (예 : &lt;code&gt;internal&lt;/code&gt; 클래스 의 생성자 는 동일한 모듈 내에서만 표시됨).</target>
        </trans-unit>
        <trans-unit id="f0628102a9e16610a1147c5ea146af2767dcf266" translate="yes" xml:space="preserve">
          <source>Here the type argument of the resulting sequence is inferred to &lt;code&gt;String&lt;/code&gt; from the argument of the &lt;a href=&quot;../../kotlin.sequences/-sequence-scope/yield&quot;&gt;SequenceScope.yield&lt;/a&gt; function, that is called inside the lambda passed to &lt;a href=&quot;../../kotlin.sequences/sequence&quot;&gt;sequence&lt;/a&gt;.</source>
          <target state="translated">여기서 결과 시퀀스의 형식 인수 는 &lt;a href=&quot;../../kotlin.sequences/-sequence-scope/yield&quot;&gt;SequenceScope.yield&lt;/a&gt; 함수 의 인수에서 &lt;code&gt;String&lt;/code&gt; 으로 추론됩니다 . 이는 &lt;a href=&quot;../../kotlin.sequences/sequence&quot;&gt;sequence에&lt;/a&gt; 전달 된 람다 내부에서 호출 됩니다 .</target>
        </trans-unit>
        <trans-unit id="5ed150d2efdc560bc0c053dcbb778cf03c9077fc" translate="yes" xml:space="preserve">
          <source>Here we call a transform function on an element first, and then build a pair from the properties of that function's result.</source>
          <target state="translated">여기에서는 먼저 요소에 대해 변형 함수를 호출 한 다음 해당 함수의 결과 속성에서 쌍을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="2cbc4d7a889a0c905e849d457558acb812460a70" translate="yes" xml:space="preserve">
          <source>Here we can use the &lt;a href=&quot;https://developer.apple.com/documentation/uikit/uidevice?language=objc&quot;&gt;UIDevice&lt;/a&gt; class from the Apple UIKit Framework, which is not available in Java, it is only usable in Swift and Objective-C. Kotlin/Native compiler comes with a set of pre-imported frameworks, so we can use the UIKit Framework without additional steps. Objective-C and Swift Interop is covered in details in the &lt;a href=&quot;../../reference/native/objc_interop&quot;&gt;documentation&lt;/a&gt;</source>
          <target state="translated">여기서는 Java에서는 사용할 수없는 Apple UIKit Framework 의 &lt;a href=&quot;https://developer.apple.com/documentation/uikit/uidevice?language=objc&quot;&gt;UIDevice&lt;/a&gt; 클래스를 사용할 수 있으며 Swift 및 Objective-C에서만 사용할 수 있습니다. Kotlin / Native 컴파일러에는 미리 가져온 프레임 워크가 제공되므로 추가 단계없이 UIKit 프레임 워크를 사용할 수 있습니다. Objective-C 및 Swift Interop은 &lt;a href=&quot;../../reference/native/objc_interop&quot;&gt;설명서&lt;/a&gt; 에 자세히 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2251b76155288ed7475b3b229f327779f9362db1" translate="yes" xml:space="preserve">
          <source>Here we make use of Java's &lt;em&gt;wildcards types&lt;/em&gt; (&lt;code&gt;? extends Base&lt;/code&gt;) to emulate declaration-site variance through use-site variance, because it is all Java has.</source>
          <target state="translated">여기서는 Java의 &lt;em&gt;와일드 카드 유형&lt;/em&gt; ( &lt;code&gt;? extends Base&lt;/code&gt; )을 사용하여 모든 Java가 있기 때문에 사용 사이트 차이를 통해 선언 사이트 차이를 에뮬레이션합니다.</target>
        </trans-unit>
        <trans-unit id="f338597b8ea0d5b8d01fd5c7c715bf06c34ca072" translate="yes" xml:space="preserve">
          <source>Here we provide basic information about learning Kotlin with the EduTools plugin.</source>
          <target state="translated">여기에서는 EduTools 플러그인으로 Kotlin 학습에 대한 기본 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="303358f917fac47ec5578a6e0fa150481911ae89" translate="yes" xml:space="preserve">
          <source>Here we provide basic information about teaching Kotlin with the EduTools plugin.</source>
          <target state="translated">여기에서는 EduTools 플러그인으로 Kotlin을 가르치는 방법에 대한 기본 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1ef65687c96ed79c329d047f1e866230a83d8fdd" translate="yes" xml:space="preserve">
          <source>Here we run into the same familiar problem: &lt;code&gt;Array&amp;lt;T&amp;gt;&lt;/code&gt; is &lt;strong&gt;invariant&lt;/strong&gt; in &lt;code&gt;T&lt;/code&gt;, thus neither of &lt;code&gt;Array&amp;lt;Int&amp;gt;&lt;/code&gt; and &lt;code&gt;Array&amp;lt;Any&amp;gt;&lt;/code&gt; is a subtype of the other. Why? Again, because copy &lt;strong&gt;might&lt;/strong&gt; be doing bad things, i.e. it might attempt to &lt;strong&gt;write&lt;/strong&gt;, say, a String to &lt;code&gt;from&lt;/code&gt;, and if we actually passed an array of &lt;code&gt;Int&lt;/code&gt; there, a &lt;code&gt;ClassCastException&lt;/code&gt; would have been thrown sometime later.</source>
          <target state="translated">여기서 우리는 똑같은 친숙한 문제를 &lt;strong&gt;겪&lt;/strong&gt; 습니다 : &lt;code&gt;Array&amp;lt;T&amp;gt;&lt;/code&gt; 는 &lt;code&gt;T&lt;/code&gt; 에서 &lt;strong&gt;변하지&lt;/strong&gt; 않으므로 &lt;code&gt;Array&amp;lt;Int&amp;gt;&lt;/code&gt; 및 &lt;code&gt;Array&amp;lt;Any&amp;gt;&lt;/code&gt; 는 다른 것의 하위 유형이 아닙니다 . 왜? 복사하기 때문에 다시 &lt;strong&gt;수도&lt;/strong&gt; 나쁜 일을 할, 즉 그것을 시도 할 수 있습니다 &lt;strong&gt;쓰기&lt;/strong&gt; 로 말하자면, 문자열 &lt;code&gt;from&lt;/code&gt; , 우리는 실제의 배열을 통과하면 &lt;code&gt;Int&lt;/code&gt; 이하는 &lt;code&gt;ClassCastException&lt;/code&gt; 이는 언젠가 나중에 발생되었을 것입니다.&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="35c15034dc107b5dfe7ca81016a55158d3c1422e" translate="yes" xml:space="preserve">
          <source>Here we start a coroutine that waits for 1 second and prints &lt;code&gt;Hello&lt;/code&gt;.</source>
          <target state="translated">여기서 우리는 1 초 동안 대기하고 &lt;code&gt;Hello&lt;/code&gt; 를 인쇄하는 코 루틴을 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="a39b3fc4994029915e40feeb64b4f5236e8052fc" translate="yes" xml:space="preserve">
          <source>Here we summarize requirements to delegate objects.</source>
          <target state="translated">여기에서는 객체를 위임하기위한 요구 사항을 요약합니다.</target>
        </trans-unit>
        <trans-unit id="d5b472ee7ff40bf88f4ec29f0eda10fcaca784a6" translate="yes" xml:space="preserve">
          <source>Here we use service function &lt;code&gt;usePinned&lt;/code&gt;, which pins an object, executes block and unpins it on normal and exception paths.</source>
          <target state="translated">여기서는 서비스 함수 &lt;code&gt;usePinned&lt;/code&gt; 를 사용 하여 객체를 고정하고 블록을 실행하고 일반 및 예외 경로에서 고정 해제합니다.</target>
        </trans-unit>
        <trans-unit id="e4f4aba80443aa3eb8e2f7ea243b14bbcc6a9610" translate="yes" xml:space="preserve">
          <source>Here's a list of &lt;code&gt;Product&lt;/code&gt; instances that aren't &lt;code&gt;Comparable&lt;/code&gt; and a &lt;code&gt;Comparator&lt;/code&gt; that defines the order: product &lt;code&gt;p1&lt;/code&gt; precedes product &lt;code&gt;p2&lt;/code&gt; if &lt;code&gt;p1&lt;/code&gt;'s price is less than &lt;code&gt;p2&lt;/code&gt;'s price. So, having a list sorted ascending according to this order, we use &lt;code&gt;binarySearch()&lt;/code&gt; to find the index of the specified &lt;code&gt;Product&lt;/code&gt;.</source>
          <target state="translated">다음 목록의 &lt;code&gt;Product&lt;/code&gt; 하지 않은 경우 &lt;code&gt;Comparable&lt;/code&gt; 와 &lt;code&gt;Comparator&lt;/code&gt; 순서를 정의합니다 제품 &lt;code&gt;p1&lt;/code&gt; 선행 제품 &lt;code&gt;p2&lt;/code&gt; 경우 &lt;code&gt;p1&lt;/code&gt; 의 가격은 11보다 &lt;code&gt;p2&lt;/code&gt; 의 가격 '. 따라서이 순서에 따라 오름차순으로 정렬 된 목록이 있으면 &lt;code&gt;binarySearch()&lt;/code&gt; 를 사용 하여 지정된 &lt;code&gt;Product&lt;/code&gt; 의 인덱스를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="d6299908e8e92ed259a89571d944697ef58fb31f" translate="yes" xml:space="preserve">
          <source>Here's a quick guide to these stability levels and their meaning:</source>
          <target state="translated">다음은 이러한 안정성 수준과 그 의미에 대한 빠른 가이드입니다.</target>
        </trans-unit>
        <trans-unit id="efbc73d5132802ac71f5934ce19cbcd5fb8b7408" translate="yes" xml:space="preserve">
          <source>Here's a small DSL example for constructing tree structures:</source>
          <target state="translated">다음은 트리 구조를 구성하는 작은 DSL 예입니다.</target>
        </trans-unit>
        <trans-unit id="deacdfc6a74517cf99346be6c831a7d4dcdbaad3" translate="yes" xml:space="preserve">
          <source>Here's a typical usage of a scope function:</source>
          <target state="translated">스코프 함수의 일반적인 사용법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b32f6d706eff957c972b3e1645609c6f0f0e541d" translate="yes" xml:space="preserve">
          <source>Here's an example content of the file:</source>
          <target state="translated">파일 내용의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a5606f252ecc2ad174dea4647e01f60d2aaeb354" translate="yes" xml:space="preserve">
          <source>Here's an example of a class documented using KDoc:</source>
          <target state="translated">다음은 KDoc을 사용하여 문서화 된 클래스의 예입니다.</target>
        </trans-unit>
        <trans-unit id="3c3d7fa503d9b11d735a1dcda178f0b19a2cefe9" translate="yes" xml:space="preserve">
          <source>Here's an example of code sharing and interaction between the common and platform logic in a minimalistic logging framework. The common code would look like this:</source>
          <target state="translated">다음은 최소한의 로깅 프레임 워크에서 공통 로직과 플랫폼 로직 간의 코드 공유 및 상호 작용에 대한 예입니다. 일반적인 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="30b994f56b0ee580bb2d52aad3f9e3570f83d7b9" translate="yes" xml:space="preserve">
          <source>Here's an illustration of what a project targeting the JVM and JS looks like:</source>
          <target state="translated">다음은 JVM 및 JS를 대상으로하는 프로젝트의 모습을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="fc7be004e2e60aa56a1148a79def1e9ee80e98df" translate="yes" xml:space="preserve">
          <source>Here's how to use all-open with Maven:</source>
          <target state="translated">Maven에서 올 오픈을 사용하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c1c3f3dd507e26d2dcc90d9449cf5588ff4d3164" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;async { ... }&lt;/code&gt; starts a coroutine and, when we use &lt;code&gt;await()&lt;/code&gt;, the execution of the coroutine is suspended while the operation being awaited is executed, and is resumed (possibly on a different thread) when the operation being awaited completes.</source>
          <target state="translated">여기서 &lt;code&gt;async { ... }&lt;/code&gt; 는 코 루틴을 시작하고 &lt;code&gt;await()&lt;/code&gt; 사용할 때 기다리는 오퍼레이션이 실행되는 동안 코 루틴 실행이 일시 중단되고 오퍼레이션이 대기 중일 때 재개 될 수 있습니다 (아마 다른 스레드에서) 완료합니다.</target>
        </trans-unit>
        <trans-unit id="24f1b6a4e672cb4df34dbd0c1ed96ab04f2d6a88" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;name&lt;/code&gt; must be a string, &lt;code&gt;age&lt;/code&gt; must be an integer, and the function must return a string. However, you can also make a oneliner function, where the body simply is the expression whose result is to be returned. In that case, the return type is inferred, and an equals sign is used to indicate that it's a oneliner:</source>
          <target state="translated">여기서 &lt;code&gt;name&lt;/code&gt; 은 문자열 이어야 하고 &lt;code&gt;age&lt;/code&gt; 는 정수 여야하며 함수는 문자열을 반환해야합니다. 그러나 oneliner 함수를 만들 수도 있습니다. 여기서 본문은 단순히 결과를 반환 할 식입니다. 이 경우 반환 유형이 유추되며 등호를 사용하여 oneliner임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b47502105661e1b046d12435cd46d97524cb6677" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;jvmMain&lt;/code&gt; source set provides &lt;a href=&quot;platform-specific-declarations&quot;&gt;plaform-specific implementations&lt;/a&gt; for the expected API in the shared &lt;code&gt;commonMain&lt;/code&gt; sources. This is how the code is shared between the platforms in a flexible way with platform-specific implementations where needed.</source>
          <target state="translated">여기에서 &lt;code&gt;jvmMain&lt;/code&gt; 소스 세트는 공유 &lt;code&gt;commonMain&lt;/code&gt; 소스 의 예상 API에 대한 &lt;a href=&quot;platform-specific-declarations&quot;&gt;플랫폼 별 구현&lt;/a&gt; 을 제공 합니다. 이것이 필요한 경우 플랫폼 별 구현을 통해 유연한 방식으로 플랫폼간에 코드를 공유하는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="1a4b7aa1a5f137db0fd44fc2a6d9f303d3f93187" translate="yes" xml:space="preserve">
          <source>Here, the two targets, &lt;code&gt;jvm&lt;/code&gt; and &lt;code&gt;js&lt;/code&gt;, each compile the production and test sources, and some of the sources are shared. This layout is achieved by just creating the two targets, with no additional configuration for the compilations and source sets: those are &lt;a href=&quot;#default-project-layout&quot;&gt;created by default&lt;/a&gt; for these targets.</source>
          <target state="translated">여기서 두 대상인 &lt;code&gt;jvm&lt;/code&gt; 및 &lt;code&gt;js&lt;/code&gt; 는 각각 프로덕션 및 테스트 소스를 컴파일하며 일부 소스는 공유됩니다. 이 레이아웃은 컴파일 및 소스 세트에 대한 추가 구성없이 두 대상을 작성하기 만하면 &lt;a href=&quot;#default-project-layout&quot;&gt;됩니다. 기본적&lt;/a&gt; 으로이 대상에 대해 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="873b8d686246b463c295f204a9ac94e12e662907" translate="yes" xml:space="preserve">
          <source>Here, we walk up a tree and use reflection to check if a node has a certain type. It&amp;rsquo;s all fine, but the call site is not very pretty:</source>
          <target state="translated">여기에서 트리를 걸어서 리플렉션을 사용하여 노드에 특정 유형이 있는지 확인합니다. 괜찮지 만 전화 사이트는 그리 예쁘지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c26c5c5e687a30b11835307ebbf485121ab5d535" translate="yes" xml:space="preserve">
          <source>Here, we're saying that the type parameter of &lt;code&gt;from&lt;/code&gt; must be a subtype of the type parameter of &lt;code&gt;to&lt;/code&gt;. This function will accept e.g. a &lt;code&gt;Bowl&amp;lt;Apple&amp;gt;&lt;/code&gt; as &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;Bowl&amp;lt;Fruit&amp;gt;&lt;/code&gt; as &lt;code&gt;to&lt;/code&gt;. The price we're paying for using the &lt;code&gt;out&lt;/code&gt; projection is that we can't call &lt;code&gt;add()&lt;/code&gt; on &lt;code&gt;from()&lt;/code&gt;, since we don't know its true type parameter and we would therefore risk adding incompatible fruits to it.</source>
          <target state="translated">여기서 &lt;code&gt;from&lt;/code&gt; 의 type 매개 변수는 &lt;code&gt;to&lt;/code&gt; 의 type 매개 변수의 하위 유형이어야합니다 . 이 함수는 예를 들어 &lt;code&gt;Bowl&amp;lt;Apple&amp;gt;&lt;/code&gt; 을 &lt;code&gt;from&lt;/code&gt; 으로 , &lt;code&gt;Bowl&amp;lt;Fruit&amp;gt;&lt;/code&gt; 로 &lt;code&gt;to&lt;/code&gt; 입니다. &lt;code&gt;out&lt;/code&gt; 프로젝션 을 사용하여 지불하는 가격은 &lt;code&gt;from()&lt;/code&gt; &lt;code&gt;add()&lt;/code&gt; 를 호출 할 수 없다는 것입니다 . 왜냐하면 실제 유형 매개 변수를 알 수 없으므로 호환되지 않는 과일을 추가 할 위험이 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="fd526ef99a476acb9c78bf5c9a11e6ea0860b857" translate="yes" xml:space="preserve">
          <source>Hexadecimals: &lt;code&gt;0x0F&lt;/code&gt;</source>
          <target state="translated">16 진법 : &lt;code&gt;0x0F&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="30fe03c33b8a84674c73678ff4c5b2d65ac121be" translate="yes" xml:space="preserve">
          <source>Higher-Order Functions</source>
          <target state="translated">더 높은 주문 기능</target>
        </trans-unit>
        <trans-unit id="a41e5f0f0a047564f4254bac665f73f90f95046f" translate="yes" xml:space="preserve">
          <source>Higher-Order Functions and Lambdas</source>
          <target state="translated">고차 함수 및 람다</target>
        </trans-unit>
        <trans-unit id="67ee6db3881c67f5daa465a08c67e8184f10a9cd" translate="yes" xml:space="preserve">
          <source>Higher-Order functions and Lambdas are explained in &lt;a href=&quot;lambdas&quot;&gt;their own section&lt;/a&gt;.</source>
          <target state="translated">상위 주문 기능 및 Lambdas는 &lt;a href=&quot;lambdas&quot;&gt;자체 섹션에&lt;/a&gt; 설명되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3315df05d0375ffe4bdc179f9ca2be5169f2a805" translate="yes" xml:space="preserve">
          <source>Higher-order functions and lambdas</source>
          <target state="translated">고차 함수와 람다</target>
        </trans-unit>
        <trans-unit id="72139434928027cd54d82a5ef7b3629d508b0f44" translate="yes" xml:space="preserve">
          <source>Higher-order functions implementing idiomatic patterns (&lt;a href=&quot;api/latest/jvm/stdlib/kotlin/let&quot;&gt;let&lt;/a&gt;, &lt;a href=&quot;api/latest/jvm/stdlib/kotlin/apply&quot;&gt;apply&lt;/a&gt;, use, &lt;a href=&quot;api/latest/jvm/stdlib/kotlin/synchronized#kotlin%24synchronized%28kotlin.Any%2C+kotlin.Function0%28%28kotlin.synchronized.R%29%29%29&quot;&gt;synchronized&lt;/a&gt;, etc).</source>
          <target state="translated">관용적 패턴 ( &lt;a href=&quot;api/latest/jvm/stdlib/kotlin/let&quot;&gt;let&lt;/a&gt; , &lt;a href=&quot;api/latest/jvm/stdlib/kotlin/apply&quot;&gt;apply&lt;/a&gt; , use, &lt;a href=&quot;api/latest/jvm/stdlib/kotlin/synchronized#kotlin%24synchronized%28kotlin.Any%2C+kotlin.Function0%28%28kotlin.synchronized.R%29%29%29&quot;&gt;synchronized&lt;/a&gt; 등)을 구현하는 고차 함수 .</target>
        </trans-unit>
        <trans-unit id="71b2c72211319ad783a149c79b7dc2ab70c6fe85" translate="yes" xml:space="preserve">
          <source>Higher-order functions implementing idiomatic patterns (&lt;a href=&quot;api/latest/jvm/stdlib/kotlin/let&quot;&gt;let&lt;/a&gt;, &lt;a href=&quot;api/latest/jvm/stdlib/kotlin/apply&quot;&gt;apply&lt;/a&gt;, use, &lt;a href=&quot;api/latest/jvm/stdlib/kotlin/synchronized#kotlin%24synchronized(kotlin.Any,%20kotlin.Function0((kotlin.synchronized.R)))&quot;&gt;synchronized&lt;/a&gt;, etc).</source>
          <target state="translated">관용적 패턴을 구현하는 고차 함수 ( &lt;a href=&quot;api/latest/jvm/stdlib/kotlin/let&quot;&gt;let&lt;/a&gt; , &lt;a href=&quot;api/latest/jvm/stdlib/kotlin/apply&quot;&gt;apply&lt;/a&gt; , use, &lt;a href=&quot;api/latest/jvm/stdlib/kotlin/synchronized#kotlin%24synchronized(kotlin.Any,%20kotlin.Function0((kotlin.synchronized.R)))&quot;&gt;synchronous&lt;/a&gt; 등).</target>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="translated">History</target>
        </trans-unit>
        <trans-unit id="0eb3ee7e7a16153c8f6a87abb16da40d619a3efa" translate="yes" xml:space="preserve">
          <source>HitRegionOptions</source>
          <target state="translated">HitRegionOptions</target>
        </trans-unit>
        <trans-unit id="b24cd4dd561003744f6839bba6f0b01af01e9c66" translate="yes" xml:space="preserve">
          <source>Homebrew</source>
          <target state="translated">Homebrew</target>
        </trans-unit>
        <trans-unit id="cbfc13df571c4c83d93997bf94e3b83b772c380a" translate="yes" xml:space="preserve">
          <source>Horizontal whitespace</source>
          <target state="translated">수평 공백</target>
        </trans-unit>
        <trans-unit id="86ddaf47a34381dda708ccb6f4f8d658790bbfa0" translate="yes" xml:space="preserve">
          <source>How Struct and Union types are mapped</source>
          <target state="translated">Struct 및 Union 유형이 매핑되는 방법</target>
        </trans-unit>
        <trans-unit id="35c4267f2ce497ed96e9a713e96604a9eab77acf" translate="yes" xml:space="preserve">
          <source>How it can be used</source>
          <target state="translated">사용 방법</target>
        </trans-unit>
        <trans-unit id="1dd6a17cb4033f4f74df1bb6912b8a28a8074084" translate="yes" xml:space="preserve">
          <source>How it works</source>
          <target state="translated">작동 원리</target>
        </trans-unit>
        <trans-unit id="602a8f7c41c71250fa416b68c4f67d256ca06632" translate="yes" xml:space="preserve">
          <source>How to Start</source>
          <target state="translated">시작하는 방법</target>
        </trans-unit>
        <trans-unit id="a300459d78bbcb70e72c699d68bbe2c60d99400e" translate="yes" xml:space="preserve">
          <source>How to start</source>
          <target state="translated">시작하는 방법</target>
        </trans-unit>
        <trans-unit id="dd45fd3f2e347de26d6cbb92c276978c2dd03be8" translate="yes" xml:space="preserve">
          <source>How to use</source>
          <target state="translated">사용하는 방법</target>
        </trans-unit>
        <trans-unit id="c8dac9e108cb40b7e0a9d87700f138976ecc8ddc" translate="yes" xml:space="preserve">
          <source>How to use Struct and Union type from Kotlin</source>
          <target state="translated">Kotlin에서 Struct 및 Union 유형을 사용하는 방법</target>
        </trans-unit>
        <trans-unit id="87da5869c150f567fc13bde03027b7419ad453eb" translate="yes" xml:space="preserve">
          <source>How would we do this from Kotlin given that the function &lt;code&gt;dataTable()&lt;/code&gt; does not exist, and calling it would give a compiler error?</source>
          <target state="translated">&lt;code&gt;dataTable()&lt;/code&gt; 함수 가 존재하지 않고이를 호출하면 컴파일러 오류가 발생 한다는 것을 감안할 때 Kotlin에서 어떻게해야 합니까?</target>
        </trans-unit>
        <trans-unit id="be0464a11908e8c7b9be38021ee672219ffad064" translate="yes" xml:space="preserve">
          <source>However in the following case:</source>
          <target state="translated">그러나 다음과 같은 경우 :</target>
        </trans-unit>
        <trans-unit id="ad02680cd2b83239f918c8dcc7a44484db377d03" translate="yes" xml:space="preserve">
          <source>However, JavaScript is a dynamically typed language, which means it does not check types at compile time. You can freely talk to JavaScript from Kotlin via &lt;a href=&quot;dynamic-type&quot;&gt;dynamic&lt;/a&gt; types. If you want to use the full power of the Kotlin type system, you can create external declarations for JavaScript libraries which will be understood by the Kotlin compiler and the surrounding tooling.</source>
          <target state="translated">그러나 JavaScript는 동적으로 입력되는 언어이므로 컴파일 타임에 유형을 확인하지 않습니다. &lt;a href=&quot;dynamic-type&quot;&gt;동적&lt;/a&gt; 유형을 통해 Kotlin에서 JavaScript와 자유롭게 대화 할 수 있습니다. Kotlin 유형 시스템의 모든 기능을 사용하려면 Kotlin 컴파일러 및 주변 도구에서 이해할 수있는 자바 스크립트 라이브러리에 대한 외부 선언을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="08aa25ee369322b7c9cce859c3276910252c6990" translate="yes" xml:space="preserve">
          <source>However, a &lt;code&gt;project('...')&lt;/code&gt; dependency on another multiplatform project is resolved to an appropriate target automatically. It is enough to specify a single &lt;code&gt;project('...')&lt;/code&gt; dependency in a source set's dependencies, and the compilations that include the source set will receive a corresponding platform-specific artifact of that project, given that it has a compatible target:</source>
          <target state="translated">그러나 다른 다중 플랫폼 프로젝트에 대한 &lt;code&gt;project('...')&lt;/code&gt; 종속성은 적절한 대상으로 자동 해결됩니다. 소스 세트의 종속성에서 단일 &lt;code&gt;project('...')&lt;/code&gt; 종속성 을 지정하면 충분 하며, 소스 세트를 포함하는 컴파일은 호환 가능한 대상이있는 경우 해당 프로젝트의 해당 플랫폼 별 아티팩트를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="9f0073d145a72380a67857aa70bcd14c61466462" translate="yes" xml:space="preserve">
          <source>However, as soon as these checks are extracted in a separate function, all the smartcasts immediately disappear:</source>
          <target state="translated">그러나 이러한 검사가 별도의 기능으로 추출 되 자마자 모든 스마트 캐스트가 즉시 사라집니다.</target>
        </trans-unit>
        <trans-unit id="070f5cebd5d9214c243e1534bfda4f0cf0927625" translate="yes" xml:space="preserve">
          <source>However, compile avoidance can't be used for annotation processors discovered in the compile classpath since &lt;em&gt;any changes&lt;/em&gt; in them require running the annotation processing tasks.</source>
          <target state="translated">그러나 컴파일 회피 이후 컴파일 클래스 경로에서 발견 된 주석 프로세서를 사용할 수 없습니다 &lt;em&gt;변경&lt;/em&gt; 그들이 주석 처리 작업을 실행이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="b08734b9aff767eee11e08eafa8988bd2c1174ca" translate="yes" xml:space="preserve">
          <source>However, dependencies on such a multiplatform library may be ambiguous and may thus fail to resolve because there is not enough information to decide which of the targets to choose.</source>
          <target state="translated">그러나 이러한 다중 플랫폼 라이브러리에 대한 종속성은 모호 할 수 있으므로 선택할 대상을 결정하기에 충분한 정보가 없기 때문에 해결하지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="479fa5ba0f8e1b445bab5b40d926a5ca86729d0e" translate="yes" xml:space="preserve">
          <source>However, if the mutability of the list is unknown or the source is not a list at all, &lt;code&gt;reversed()&lt;/code&gt; is more preferable since its result is a copy that won't change in the future.</source>
          <target state="translated">그러나 목록의 변경 가능성을 알 수 없거나 소스가 전혀 목록이 아닌 경우 &lt;code&gt;reversed()&lt;/code&gt; 가 더 바람직합니다. 결과는 나중에 변경되지 않는 사본이기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="09fa8d58225957d34b7eea70bb62562ee76d26df" translate="yes" xml:space="preserve">
          <source>However, if we derive &lt;em&gt;D&lt;/em&gt; from &lt;em&gt;A&lt;/em&gt; and &lt;em&gt;B&lt;/em&gt;, we need to implement all the methods which we have inherited from multiple interfaces, and to specify how exactly &lt;em&gt;D&lt;/em&gt; should implement them. This rule applies both to methods for which we've inherited a single implementation (&lt;em&gt;bar()&lt;/em&gt;) and multiple implementations (&lt;em&gt;foo()&lt;/em&gt;).</source>
          <target state="translated">그러나 &lt;em&gt;A&lt;/em&gt; 와 &lt;em&gt;B&lt;/em&gt; 에서 &lt;em&gt;D&lt;/em&gt; 를 파생 시키면 여러 인터페이스에서 상속 한 모든 메서드를 구현하고 &lt;em&gt;D&lt;/em&gt; 가 정확히 어떻게 구현해야하는지 지정 해야합니다. 이 규칙은 단일 구현 ( &lt;em&gt;bar ()&lt;/em&gt; )과 여러 구현 ( &lt;em&gt;foo ()&lt;/em&gt; )을 상속 한 메소드 모두에 적용됩니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f5c2b71d2c4944197bf814089efe3e169f6241a1" translate="yes" xml:space="preserve">
          <source>However, it's perfectly OK for extension functions to overload member functions which have the same name but a different signature:</source>
          <target state="translated">그러나 확장 함수가 이름은 같지만 서명이 다른 멤버 함수에 과부하가 걸리는 것은 완벽합니다.</target>
        </trans-unit>
        <trans-unit id="7211de00f87035400862ba49948436c704051e31" translate="yes" xml:space="preserve">
          <source>However, on the JVM you can have members of companion objects generated as real static methods and fields, if you use the &lt;code&gt;@JvmStatic&lt;/code&gt; annotation. See the &lt;a href=&quot;java-to-kotlin-interop#static-fields&quot;&gt;Java interoperability&lt;/a&gt; section for more details.</source>
          <target state="translated">그러나 &lt;code&gt;@JvmStatic&lt;/code&gt; 어노테이션 을 사용하는 경우 JVM에서 컴패니언 오브젝트의 멤버를 실제 정적 메소드 및 필드로 생성 할 수 있습니다 . 자세한 내용은 &lt;a href=&quot;java-to-kotlin-interop#static-fields&quot;&gt;Java 상호 운용성&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0bad521f56fe8a915aa6062aecd121e23b4faae6" translate="yes" xml:space="preserve">
          <source>However, the crucial difference is that type aliases are &lt;em&gt;assignment-compatible&lt;/em&gt; with their underlying type (and with other type aliases with the same underlying type), while inline classes are not.</source>
          <target state="translated">그러나 중요한 차이점은 형식 별칭이 기본 형식 (및 기본 형식이 같은 다른 형식 별칭)과 &lt;em&gt;할당 호환&lt;/em&gt; 되지만 인라인 클래스는 그렇지 않다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="8dd1f3cacf0fcb4414c2d1a278f7fbd543f3b7f6" translate="yes" xml:space="preserve">
          <source>However, the lifetime of allocated memory is often bound to the lexical scope. It is possible to define such scope with &lt;code&gt;memScoped { ... }&lt;/code&gt;. Inside the braces, the temporary placement is available as an implicit receiver, so it is possible to allocate native memory with &lt;code&gt;alloc&lt;/code&gt; and &lt;code&gt;allocArray&lt;/code&gt;, and the allocated memory will be automatically freed after leaving the scope.</source>
          <target state="translated">그러나 할당 된 메모리 수명은 종종 어휘 범위에 바인딩됩니다. &lt;code&gt;memScoped { ... }&lt;/code&gt; 이러한 범위를 정의 할 수 있습니다 . 중괄호 안에서 임시 배치는 암시 적 수신자로 사용 가능하므로 &lt;code&gt;alloc&lt;/code&gt; 및 &lt;code&gt;allocArray&lt;/code&gt; 로 기본 메모리를 할당 할 수 있으며 할당 된 메모리는 범위를 벗어나면 자동으로 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="ae0918f5641e63c3a09e5fadf6918891cd0a9092" translate="yes" xml:space="preserve">
          <source>However, there are some restrictions for inline class members:</source>
          <target state="translated">그러나 인라인 클래스 멤버에게는 몇 가지 제한 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="982bf0758421af7f56223ac97a5942a5eb849e7c" translate="yes" xml:space="preserve">
          <source>However, to support generic use cases and provide total ordering, when the operands are &lt;strong&gt;not&lt;/strong&gt; statically typed as floating point numbers (e.g. &lt;code&gt;Any&lt;/code&gt;, &lt;code&gt;Comparable&amp;lt;...&amp;gt;&lt;/code&gt;, a type parameter), the operations use the &lt;code&gt;equals&lt;/code&gt; and &lt;code&gt;compareTo&lt;/code&gt; implementations for &lt;code&gt;Float&lt;/code&gt; and &lt;code&gt;Double&lt;/code&gt;, which disagree with the standard, so that:</source>
          <target state="translated">그러나, 일반적인 사용 사례를 지원하고 피연산자가 될 때, 전체 순서를 제공 &lt;strong&gt;하지&lt;/strong&gt; 정적으로 부동 소수점 숫자로 입력 (예를 들어, &lt;code&gt;Any&lt;/code&gt; , &lt;code&gt;Comparable&amp;lt;...&amp;gt;&lt;/code&gt; , 유형 매개 변수), 작업은 사용 &lt;code&gt;equals&lt;/code&gt; 와 &lt;code&gt;compareTo&lt;/code&gt; 구현을 &lt;code&gt;Float&lt;/code&gt; 와 &lt;code&gt;Double&lt;/code&gt; 은 표준에 동의하지 않으므로 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5ca45e03bc21f5ab9507a309528260ebbde146f9" translate="yes" xml:space="preserve">
          <source>However, when &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-global-scope/index.html&quot;&gt;GlobalScope&lt;/a&gt; is used to launch a coroutine, it is not tied to the scope it was launched from and operates independently.</source>
          <target state="translated">그러나 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-global-scope/index.html&quot;&gt;GlobalScope&lt;/a&gt; 를 사용하여 코 루틴을 시작하면 해당 범위가 시작되고 독립적으로 작동하는 범위에 묶이지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6fa46c9cc480889e14a2ca5e9982d4d494a04611" translate="yes" xml:space="preserve">
          <source>However, when &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-global-scope/index.html&quot;&gt;GlobalScope&lt;/a&gt; is used to launch a coroutine, there is no parent for the job of the new coroutine. It is therefore not tied to the scope it was launched from and operates independently.</source>
          <target state="translated">그러나 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-global-scope/index.html&quot;&gt;GlobalScope&lt;/a&gt; 를 사용하여 코 루틴을 시작하면 새 코 루틴의 작업에 대한 부모가 없습니다. 따라서 시작된 범위에 묶여 있지 않고 독립적으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="4d1d9b7a2bcd9b2aa8b62eaa04c9b3c6ae4ca870" translate="yes" xml:space="preserve">
          <source>However, when calling it with non-default, the call would look something like:</source>
          <target state="translated">그러나 기본값이 아닌 상태로 호출하면 다음과 같이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="c85468492872696cce76d8471e59f791f6d182b2" translate="yes" xml:space="preserve">
          <source>However, you can't spread a map into a function call and expect the values in the map to be passed to the parameters named by the keys - the names of the parameters must be known at compile time. If you need runtime-defined parameter names, your function must either take a map or take &lt;code&gt;vararg kwargs: Pair&amp;lt;String, X&amp;gt;&lt;/code&gt; (where &lt;code&gt;X&lt;/code&gt; is the &quot;lowest common denominator&quot; of the parameter types, in the worst case &lt;code&gt;Any?&lt;/code&gt; - be prepared to have to typecast the parameter values, and note that you'll lose type safety). You can call such a function like this: &lt;code&gt;foo(&quot;bar&quot; to 42, &quot;test&quot; to &quot;hello&quot;)&lt;/code&gt;, since &lt;code&gt;to&lt;/code&gt; is an &lt;a href=&quot;classes#infix-functions&quot;&gt;infix function&lt;/a&gt; that creates a &lt;code&gt;Pair&lt;/code&gt;.</source>
          <target state="translated">그러나 맵을 함수 호출로 펼칠 수 없으며 맵의 값이 키로 명명 된 매개 변수로 전달 될 것으로 예상합니다. 매개 변수의 이름은 컴파일시 알아야합니다. 당신이 매개 변수 이름을 정의 런타임이 필요한 경우, 기능 중지도를 취하거나 취해야 &lt;code&gt;vararg kwargs: Pair&amp;lt;String, X&amp;gt;&lt;/code&gt; 여기서 ( &lt;code&gt;X&lt;/code&gt; 는 최악의 경우 매개 변수 유형의 &quot;가장 낮은 공통 분모&quot;이다 &lt;code&gt;Any?&lt;/code&gt; - 수 매개 변수 값을 타입 캐스트해야하고 타입 안전을 잃을 수 있습니다). :이 같은 이러한 함수를 호출 할 수 있습니다 &lt;code&gt;foo(&quot;bar&quot; to 42, &quot;test&quot; to &quot;hello&quot;)&lt;/code&gt; 이후 &lt;code&gt;to&lt;/code&gt; 이다 &lt;a href=&quot;classes#infix-functions&quot;&gt;중위 기능&lt;/a&gt; 생성 &lt;code&gt;Pair&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8531a005c4e1249c38eb76c35700e47d28dd56c4" translate="yes" xml:space="preserve">
          <source>However, you cannot change the type of a variable: &lt;code&gt;number&lt;/code&gt; can only ever refer to &lt;code&gt;Int&lt;/code&gt; values, and &lt;code&gt;message&lt;/code&gt; can only ever refer to &lt;code&gt;String&lt;/code&gt; values, so both &lt;code&gt;number = &quot;Test&quot;&lt;/code&gt; and &lt;code&gt;message = 3&lt;/code&gt; are illegal and will produce syntax errors.</source>
          <target state="translated">그러나 변수 유형은 변경할 수 없습니다. &lt;code&gt;number&lt;/code&gt; 는 &lt;code&gt;Int&lt;/code&gt; 값만 참조 하고 &lt;code&gt;message&lt;/code&gt; 는 &lt;code&gt;String&lt;/code&gt; 값만 참조 할 수 있으므로 &lt;code&gt;number = &quot;Test&quot;&lt;/code&gt; 및 &lt;code&gt;message = 3&lt;/code&gt; 은 모두 불법이며 구문 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3027d872a38e795211cb7e3ae47043fbab5b615d" translate="yes" xml:space="preserve">
          <source>Hyperbolic: &lt;code&gt;cosh&lt;/code&gt;, &lt;code&gt;sinh&lt;/code&gt;, &lt;code&gt;tanh&lt;/code&gt; and their inverse: &lt;code&gt;acosh&lt;/code&gt;, &lt;code&gt;asinh&lt;/code&gt;, &lt;code&gt;atanh&lt;/code&gt;</source>
          <target state="translated">쌍곡선 : &lt;code&gt;cosh&lt;/code&gt; , &lt;code&gt;sinh&lt;/code&gt; , &lt;code&gt;tanh&lt;/code&gt; 및 그 반대 : &lt;code&gt;acosh&lt;/code&gt; , &lt;code&gt;asinh&lt;/code&gt; , &lt;code&gt;atanh&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a21e8428249ae48d17127a95118ae2f24cfd3ac4" translate="yes" xml:space="preserve">
          <source>I.e. if &lt;code&gt;a&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, it calls the &lt;code&gt;equals(Any?)&lt;/code&gt; function, otherwise (i.e. &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;) it checks that &lt;code&gt;b&lt;/code&gt; is referentially equal to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">즉, &lt;code&gt;a&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 이 아닌 경우 &lt;code&gt;equals(Any?)&lt;/code&gt; 함수를 호출합니다 . 그렇지 않은 경우 (즉 &lt;code&gt;a&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 인 경우 ) &lt;code&gt;b&lt;/code&gt; 가 참조 적으로 &lt;code&gt;null&lt;/code&gt; 과 같은지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="6b4059c9b5820041f826f688b6e57c7201e42d5f" translate="yes" xml:space="preserve">
          <source>IDE</source>
          <target state="translated">IDE</target>
        </trans-unit>
        <trans-unit id="574c819e8b68fbc5deeb72ec7f823f930d288043" translate="yes" xml:space="preserve">
          <source>IDEA has built-in &lt;a href=&quot;https://www.jetbrains.com/help/idea/converting-a-java-file-to-kotlin-file.html&quot;&gt;Java-to-Kotlin converter&lt;/a&gt;. It can be used by people familiar with Java to learn the corresponding Kotlin syntactic constructions, but it is not perfect and it is still worth familiarizing yourself with Kotlin and learning the &lt;a href=&quot;../reference/idioms&quot;&gt;Kotlin idioms&lt;/a&gt;.</source>
          <target state="translated">IDEA에는 &lt;a href=&quot;https://www.jetbrains.com/help/idea/converting-a-java-file-to-kotlin-file.html&quot;&gt;Java-Kotlin 변환기&lt;/a&gt; 가 내장되어 있습니다. Java에 익숙한 사람들이 해당 Kotlin 구문 구성을 배우는 데 사용할 수 있지만 완벽하지는 않지만 Kotlin에 익숙해지고 &lt;a href=&quot;../reference/idioms&quot;&gt;Kotlin 관용구를&lt;/a&gt; 배우는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="3e8437143d4c208041b9e7dc73001eda18b471b7" translate="yes" xml:space="preserve">
          <source>IEEErem</source>
          <target state="translated">IEEErem</target>
        </trans-unit>
        <trans-unit id="a479a89af81322719229d26626e9261747f5e247" translate="yes" xml:space="preserve">
          <source>IGNORE_CASE</source>
          <target state="translated">IGNORE_CASE</target>
        </trans-unit>
        <trans-unit id="6fca55ca3c828a46bfe96a10e69f572b61ce540c" translate="yes" xml:space="preserve">
          <source>IN</source>
          <target state="translated">IN</target>
        </trans-unit>
        <trans-unit id="d60d89994c2165dbb5cb15c0ca6a53ef57dbf709" translate="yes" xml:space="preserve">
          <source>INITIAL_QUOTE_PUNCTUATION</source>
          <target state="translated">INITIAL_QUOTE_PUNCTUATION</target>
        </trans-unit>
        <trans-unit id="4c38beffa49b3c4e833b61ab982e642ee37bd833" translate="yes" xml:space="preserve">
          <source>INSTANCE</source>
          <target state="translated">INSTANCE</target>
        </trans-unit>
        <trans-unit id="bc0a7fedf606734e8b8a7a6a0423b5fd26cf0e94" translate="yes" xml:space="preserve">
          <source>INTERNAL</source>
          <target state="translated">INTERNAL</target>
        </trans-unit>
        <trans-unit id="3abcb72b954677e513cd35785ddfd45da21ba7df" translate="yes" xml:space="preserve">
          <source>INVALID</source>
          <target state="translated">INVALID</target>
        </trans-unit>
        <trans-unit id="6309dcdb883fbfdbdd8583370627de3f62431921" translate="yes" xml:space="preserve">
          <source>INVARIANT</source>
          <target state="translated">INVARIANT</target>
        </trans-unit>
        <trans-unit id="74b5e33e6c2950450e841be55ad77a9a298f6e82" translate="yes" xml:space="preserve">
          <source>IO API for working with files and streams.</source>
          <target state="translated">파일 및 스트림 작업을위한 IO API.</target>
        </trans-unit>
        <trans-unit id="d4ba35793b9b14a1c9dfe7552c4aadb3500b92b0" translate="yes" xml:space="preserve">
          <source>IOS</source>
          <target state="translated">IOS</target>
        </trans-unit>
        <trans-unit id="880aaed583c06128d0dabc74c31f4f9c0f838de0" translate="yes" xml:space="preserve">
          <source>ISO Latin Alphabet No. 1, a.k.a. ISO-LATIN-1.</source>
          <target state="translated">ISO 라틴 알파벳 번호 1, 일명 ISO-LATIN-1.</target>
        </trans-unit>
        <trans-unit id="7ed18c6c7ea70ff1be77a3ecb9a66a126984e1e5" translate="yes" xml:space="preserve">
          <source>ISO_8859_1</source>
          <target state="translated">ISO_8859_1</target>
        </trans-unit>
        <trans-unit id="d3a51ffb1e3f01b30accf6df0d2f721e7f26e556" translate="yes" xml:space="preserve">
          <source>Ideally, a new version of a library can be used as a &quot;drop-in replacement&quot; for an older version. This means that upgrading a binary dependency should not break anything, even if the application is not recompiled (this is possible under dynamic linking).</source>
          <target state="translated">이상적으로 새 버전의 라이브러리를 이전 버전의 &quot;드롭 인 대체&quot;로 사용할 수 있습니다. 즉, 응용 프로그램을 다시 컴파일하지 않아도 바이너리 종속성을 업그레이드해도 아무런 문제가 발생하지 않아야합니다 (동적 연결에서 가능).</target>
        </trans-unit>
        <trans-unit id="859ba4fec3728f6f969697355896871c211c1e1f" translate="yes" xml:space="preserve">
          <source>Ideally, every incompatible change should be announced through a compile-time warning reported in the problematic code (usually referred to as a &lt;em&gt;deprecation warning&lt;/em&gt;) and accompanied with automated migration aids. So, the ideal migration workflow goes as follows:</source>
          <target state="translated">이상적으로, 호환되지 않는 모든 변경 사항은 문제 코드에보고 된 컴파일 타임 경고 (일반적으로 &lt;em&gt;사용 중단 경고&lt;/em&gt; 라고 함)를 통해 자동 마이그레이션 지원 도구와 함께 발표되어야합니다 . 따라서 이상적인 마이그레이션 워크 플로는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="087a9655745fc0cab55d8e68ef13c11042591cc2" translate="yes" xml:space="preserve">
          <source>Idiomatic use of language features</source>
          <target state="translated">언어 기능의 관용적 사용</target>
        </trans-unit>
        <trans-unit id="ec04bd386a626dbd6df1f3954dfd578f058ce091" translate="yes" xml:space="preserve">
          <source>Idioms</source>
          <target state="translated">Idioms</target>
        </trans-unit>
        <trans-unit id="3da115646ac4bed9a99193bb94e35bef8ed64988" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;append#kotlin.text.StringBuilder%24append(kotlin.String?)/value&quot;&gt;value&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt; are appended.</source>
          <target state="translated">경우 &lt;a href=&quot;append#kotlin.text.StringBuilder%24append(kotlin.String?)/value&quot;&gt;값&lt;/a&gt; 이다 &lt;code&gt;null&lt;/code&gt; , 4 개 문자 &lt;code&gt;&quot;null&quot;&lt;/code&gt; 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="7116ccfc9bfe7776006467cfb0a446f8b7f1a57f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.Array%28%28kotlin.collections.copyOf.T%29%29%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with &lt;code&gt;null&lt;/code&gt; values.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.Array%28%28kotlin.collections.copyOf.T%29%29%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 큰 경우, 복사 어레이 내의 여분의 요소로 채워진다 &lt;code&gt;null&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="10756c73471a82f7019c38192c8009852ba15419" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.Array%28%28kotlin.collections.copyOf.T%29%29%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.Array%28%28kotlin.collections.copyOf.T%29%29%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.Array%28%28kotlin.collections.copyOf.T%29%29%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 작은, 복사 배열이 잘린다 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.Array%28%28kotlin.collections.copyOf.T%29%29%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="51af16ecd7473c2e5424019e748ee393e778bc49" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.BooleanArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with &lt;code&gt;false&lt;/code&gt; values.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.BooleanArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 큰 경우, 복사 어레이 내의 여분의 요소로 채워진다 &lt;code&gt;false&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="c1e121c8e99f645abbf72f057357f99718caaa2f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.BooleanArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.BooleanArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.BooleanArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 작은, 복사 배열이 잘린다 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.BooleanArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1f2abba5d06a22a16ee639e853c70cb9ca87180f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.ByteArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with zero values.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.ByteArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 큰 경우, 복사 어레이 내의 여분의 요소는 제로 값으로 채워진다.</target>
        </trans-unit>
        <trans-unit id="f9cc62e5c68b22296cffe98ca0d3ae74a9771f17" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.ByteArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.ByteArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.ByteArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 작은, 복사 배열이 잘린다 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.ByteArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="54313bea7a81301c76111eaa07088a4a9fb7c12c" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.CharArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with null char (&lt;code&gt;\u0000&lt;/code&gt;) values.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.CharArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 큰 경우, 복사 배열의 추가 요소는 널 문자 (로 채워진다 &lt;code&gt;\u0000&lt;/code&gt; ) 값.</target>
        </trans-unit>
        <trans-unit id="b0875c9b1dc49854df801a1cc12ab6317eaea969" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.CharArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.CharArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.CharArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 작은, 복사 배열이 잘린다 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.CharArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ada9d3a67b3da1ac031d4b8eab6aa15e10e6f505" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.UIntArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with zero values.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.UIntArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 큰 경우, 복사 어레이 내의 여분의 요소는 제로 값으로 채워진다.</target>
        </trans-unit>
        <trans-unit id="a4d533ebbe21d5f918e9006bf160fa180cce3bde" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.UIntArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.UIntArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.UIntArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 작은, 복사 배열이 잘린다 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.UIntArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c42a89a0a4cd96e24df901b9aa82a05f84012972" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.Array((kotlin.collections.copyOf.T)),%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with &lt;code&gt;null&lt;/code&gt; values.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.Array((kotlin.collections.copyOf.T)),%20kotlin.Int)/newSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 큰 경우, 복사 어레이 내의 여분의 요소로 채워진다 &lt;code&gt;null&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="409249b4b39897fe51824168aaadc0a266615ba8" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.Array((kotlin.collections.copyOf.T)),%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.Array((kotlin.collections.copyOf.T)),%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.Array((kotlin.collections.copyOf.T)),%20kotlin.Int)/newSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 작은, 복사 배열이 잘린다 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.Array((kotlin.collections.copyOf.T)),%20kotlin.Int)/newSize&quot;&gt;newSize와&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="45aac04fd71dfd2bc26c11ffe78da83301480137" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.BooleanArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with &lt;code&gt;false&lt;/code&gt; values.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.BooleanArray,%20kotlin.Int)/newSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 큰 경우, 복사 어레이 내의 여분의 요소로 채워진다 &lt;code&gt;false&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="60377e3a2ee5c9d0582df5e7225fd81cf996b18d" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.BooleanArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.BooleanArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.BooleanArray,%20kotlin.Int)/newSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 작은, 복사 배열이 잘린다 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.BooleanArray,%20kotlin.Int)/newSize&quot;&gt;newSize와&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3b05c8bbd75503d8e6a757c4ffaee353008eb06a" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.ByteArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with zero values.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.ByteArray,%20kotlin.Int)/newSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 큰 경우, 복사 어레이 내의 여분의 요소는 제로 값으로 채워진다.</target>
        </trans-unit>
        <trans-unit id="d68f7fc720a43801d5ec0fb8e11c4ff714977108" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.ByteArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.ByteArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.ByteArray,%20kotlin.Int)/newSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 작은, 복사 배열이 잘린다 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.ByteArray,%20kotlin.Int)/newSize&quot;&gt;newSize와&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="08338744c1d3dc8e1c228b11670b7813cf32d8d5" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.CharArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with null char (&lt;code&gt;\u0000&lt;/code&gt;) values.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.CharArray,%20kotlin.Int)/newSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 큰 경우, 복사 배열의 추가 요소는 널 문자 (로 채워진다 &lt;code&gt;\u0000&lt;/code&gt; ) 값.</target>
        </trans-unit>
        <trans-unit id="9db2ce53e2a43334e6fe2a23124f9533508dd54b" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.CharArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.CharArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.CharArray,%20kotlin.Int)/newSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 작은, 복사 배열이 잘린다 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.CharArray,%20kotlin.Int)/newSize&quot;&gt;newSize와&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="06592245364633ec4f7c7e7a9181301a3b171e05" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.UIntArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with zero values.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.UIntArray,%20kotlin.Int)/newSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 큰 경우, 복사 어레이 내의 여분의 요소는 제로 값으로 채워진다.</target>
        </trans-unit>
        <trans-unit id="7eec95129b2717b835f1bfade38acd0752e1f4d7" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.UIntArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.UIntArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.UIntArray,%20kotlin.Int)/newSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 작은, 복사 배열이 잘린다 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.UIntArray,%20kotlin.Int)/newSize&quot;&gt;newSize와&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="323d80bac9fea71a1cf91f72104d4ae325480945" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; is not specified then some unspecified name will be used. If &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fsuffix&quot;&gt;suffix&lt;/a&gt; is not specified then &quot;.tmp&quot; will be used. If &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fdirectory&quot;&gt;directory&lt;/a&gt; is not specified then the default temporary-file directory will be used.</source>
          <target state="translated">경우 &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fprefix&quot;&gt;접두사가&lt;/a&gt; 지정되지 일부 지정되지 않은 이름이 사용됩니다. 경우 &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fsuffix&quot;&gt;접미사가&lt;/a&gt; 지정되지 &quot;.TMP은&quot;사용됩니다. 경우 &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fdirectory&quot;&gt;디렉토리가&lt;/a&gt; 지정되지 기본 임시 파일 디렉토리가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b99190d89c3b360b3a835806e0662622d3cf0dbf" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir(kotlin.String,%20kotlin.String?,%20java.io.File?)/prefix&quot;&gt;prefix&lt;/a&gt; is not specified then some unspecified string will be used. If &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir(kotlin.String,%20kotlin.String?,%20java.io.File?)/suffix&quot;&gt;suffix&lt;/a&gt; is not specified then &quot;.tmp&quot; will be used. If &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir(kotlin.String,%20kotlin.String?,%20java.io.File?)/directory&quot;&gt;directory&lt;/a&gt; is not specified then the default temporary-file directory will be used.</source>
          <target state="translated">경우 &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir(kotlin.String,%20kotlin.String?,%20java.io.File?)/prefix&quot;&gt;접두사가&lt;/a&gt; 지정되지 일부 지정되지 않은 문자열이 사용됩니다. 경우 &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir(kotlin.String,%20kotlin.String?,%20java.io.File?)/suffix&quot;&gt;접미사가&lt;/a&gt; 지정되지 &quot;.TMP은&quot;사용됩니다. 경우 &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir(kotlin.String,%20kotlin.String?,%20java.io.File?)/directory&quot;&gt;디렉토리가&lt;/a&gt; 지정되지 기본 임시 파일 디렉토리가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="58f46707a7046964465798b99af9c1e475421494" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; is not specified then some unspecified name will be used. If &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fsuffix&quot;&gt;suffix&lt;/a&gt; is not specified then &quot;.tmp&quot; will be used. If &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fdirectory&quot;&gt;directory&lt;/a&gt; is not specified then the default temporary-file directory will be used.</source>
          <target state="translated">경우 &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fprefix&quot;&gt;접두사가&lt;/a&gt; 지정되지 일부 지정되지 않은 이름이 사용됩니다. 경우 &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fsuffix&quot;&gt;접미사가&lt;/a&gt; 지정되지 &quot;.TMP은&quot;사용됩니다. 경우 &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fdirectory&quot;&gt;디렉토리가&lt;/a&gt; 지정되지 기본 임시 파일 디렉토리가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="93e080d1cace70a7bf233d5a4555f4d07357dc7a" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile(kotlin.String,%20kotlin.String?,%20java.io.File?)/prefix&quot;&gt;prefix&lt;/a&gt; is not specified then some unspecified string will be used. If &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile(kotlin.String,%20kotlin.String?,%20java.io.File?)/suffix&quot;&gt;suffix&lt;/a&gt; is not specified then &quot;.tmp&quot; will be used. If &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile(kotlin.String,%20kotlin.String?,%20java.io.File?)/directory&quot;&gt;directory&lt;/a&gt; is not specified then the default temporary-file directory will be used.</source>
          <target state="translated">경우 &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile(kotlin.String,%20kotlin.String?,%20java.io.File?)/prefix&quot;&gt;접두사가&lt;/a&gt; 지정되지 일부 지정되지 않은 문자열이 사용됩니다. 경우 &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile(kotlin.String,%20kotlin.String?,%20java.io.File?)/suffix&quot;&gt;접미사가&lt;/a&gt; 지정되지 &quot;.TMP은&quot;사용됩니다. 경우 &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile(kotlin.String,%20kotlin.String?,%20java.io.File?)/directory&quot;&gt;디렉토리가&lt;/a&gt; 지정되지 기본 임시 파일 디렉토리가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="39f8f458ec615b321af11d61c4b5bbe5ba0596a6" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt; is rooted path it must be equal to this. If &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt; is relative path then last N components of &lt;code&gt;this&lt;/code&gt; must be the same as all components in &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt;, where N is the number of components in &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;다른&lt;/a&gt; 경로를 뿌리는이 동일해야합니다. 경우 &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;다른&lt;/a&gt; 상대 경로는 다음의 마지막 N 성분 &lt;code&gt;this&lt;/code&gt; 모든 구성 요소와 동일해야 &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;다른&lt;/a&gt; N은 구성 요소의 개수, &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;다른&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="59d70d8b4ea0e7645f189a9d7bf64c9955918ff9" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20java.io.File)/other&quot;&gt;other&lt;/a&gt; is rooted path it must be equal to this. If &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20java.io.File)/other&quot;&gt;other&lt;/a&gt; is relative path then last N components of &lt;code&gt;this&lt;/code&gt; must be the same as all components in &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20java.io.File)/other&quot;&gt;other&lt;/a&gt;, where N is the number of components in &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20java.io.File)/other&quot;&gt;other&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20java.io.File)/other&quot;&gt;다른&lt;/a&gt; 경로를 뿌리는이 동일해야합니다. 경우 &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20java.io.File)/other&quot;&gt;다른&lt;/a&gt; 상대 경로는 다음의 마지막 N 성분 &lt;code&gt;this&lt;/code&gt; 모든 구성 요소와 동일해야 &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20java.io.File)/other&quot;&gt;다른&lt;/a&gt; N은 구성 요소의 개수, &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20java.io.File)/other&quot;&gt;다른&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="df00345c684b508fceaa49f4842de52e91ae93ec" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;find-associated-object#T&quot;&gt;T&lt;/a&gt; is an @&lt;a href=&quot;-associated-object-key/index#kotlin.reflect.AssociatedObjectKey&quot;&gt;AssociatedObjectKey&lt;/a&gt;-annotated annotation class and &lt;a href=&quot;find-associated-object/-this-&quot;&gt;this&lt;/a&gt; class is annotated with @&lt;a href=&quot;find-associated-object#T&quot;&gt;T&lt;/a&gt; (&lt;code&gt;S::class&lt;/code&gt;), returns object &lt;code&gt;S&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;find-associated-object#T&quot;&gt;T는&lt;/a&gt; 것입니다 @ &lt;a href=&quot;-associated-object-key/index#kotlin.reflect.AssociatedObjectKey&quot;&gt;AssociatedObjectKey은&lt;/a&gt; 주석 클래스를 -annotated하고 &lt;a href=&quot;find-associated-object/-this-&quot;&gt;이&lt;/a&gt; 클래스는 @와 주석이 &lt;a href=&quot;find-associated-object#T&quot;&gt;T&lt;/a&gt; ( &lt;code&gt;S::class&lt;/code&gt; ), 반환 객체 &lt;code&gt;S&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="3f51d056b5749a61a78e491d362e33bcfd18e1b8" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;get-original-kotlin-class#kotlinx.cinterop%24getOriginalKotlinClass(kotlinx.cinterop.ObjCClass)/objCClass&quot;&gt;objCClass&lt;/a&gt; is a class generated to Objective-C header for Kotlin class, returns &lt;a href=&quot;../kotlin.reflect/-k-class/index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; for that original Kotlin class.</source>
          <target state="translated">&lt;a href=&quot;get-original-kotlin-class#kotlinx.cinterop%24getOriginalKotlinClass(kotlinx.cinterop.ObjCClass)/objCClass&quot;&gt;objCClass&lt;/a&gt; 가 Kotlin 클래스의 Objective-C 헤더에 생성 된 클래스 인 경우 원래 Kotlin 클래스에 대해 &lt;a href=&quot;../kotlin.reflect/-k-class/index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ac8f4b48d7ad52ef413b5d46f6ee7b18429f8a5c" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;get-original-kotlin-class#kotlinx.cinterop%24getOriginalKotlinClass(kotlinx.cinterop.ObjCProtocol)/objCProtocol&quot;&gt;objCProtocol&lt;/a&gt; is a protocol generated to Objective-C header for Kotlin class, returns &lt;a href=&quot;../kotlin.reflect/-k-class/index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; for that original Kotlin class.</source>
          <target state="translated">&lt;a href=&quot;get-original-kotlin-class#kotlinx.cinterop%24getOriginalKotlinClass(kotlinx.cinterop.ObjCProtocol)/objCProtocol&quot;&gt;objCProtocol&lt;/a&gt; 이 Kotlin 클래스의 Objective-C 헤더에 생성 된 프로토콜 인 경우 원래 Kotlin 클래스에 대해 &lt;a href=&quot;../kotlin.reflect/-k-class/index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="81624da05304cb9c4f3d0bda93d35dac96653765" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;insert#kotlin.text.StringBuilder%24insert(kotlin.Int,%20kotlin.String?)/value&quot;&gt;value&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt; are inserted.</source>
          <target state="translated">경우 &lt;a href=&quot;insert#kotlin.text.StringBuilder%24insert(kotlin.Int,%20kotlin.String?)/value&quot;&gt;값&lt;/a&gt; 이다 &lt;code&gt;null&lt;/code&gt; , 4 개 문자 &lt;code&gt;&quot;null&quot;&lt;/code&gt; 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="9c3436ce672978ed57529bad76b43af3b8c8d35f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;with-sign#kotlin.math%24withSign%28kotlin.Double%2C+kotlin.Double%29%2Fsign&quot;&gt;sign&lt;/a&gt; is &lt;code&gt;NaN&lt;/code&gt; the sign of the result is undefined.</source>
          <target state="translated">경우 &lt;a href=&quot;with-sign#kotlin.math%24withSign%28kotlin.Double%2C+kotlin.Double%29%2Fsign&quot;&gt;기호&lt;/a&gt; 입니다 &lt;code&gt;NaN&lt;/code&gt; 의 결과의 부호는 정의되지 않는다.</target>
        </trans-unit>
        <trans-unit id="0919bd45dfd5813545ade9fbc603f875245cc160" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;with-sign#kotlin.math%24withSign(kotlin.Double,%20kotlin.Double)/sign&quot;&gt;sign&lt;/a&gt; is &lt;code&gt;NaN&lt;/code&gt; the sign of the result is undefined.</source>
          <target state="translated">경우 &lt;a href=&quot;with-sign#kotlin.math%24withSign(kotlin.Double,%20kotlin.Double)/sign&quot;&gt;기호&lt;/a&gt; 입니다 &lt;code&gt;NaN&lt;/code&gt; 의 결과의 부호는 정의되지 않는다.</target>
        </trans-unit>
        <trans-unit id="97bd02530a6e92760dbfeb249a29a66473663604" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Car&lt;/code&gt; does nothing, it will inherit this function as-is, and it will return a message with the car's horsepowers and max speed. If we want a car-specific message, &lt;code&gt;Car&lt;/code&gt; can override the function by redeclaring it with the &lt;code&gt;override&lt;/code&gt; keyword:</source>
          <target state="translated">경우 &lt;code&gt;Car&lt;/code&gt; 아무것도하지 않는,있는 그대로가이 기능을 상속하고, 차의 horsepowers 및 최대 속도로 메시지를 반환합니다. 자동차 관련 메시지를 원하는 경우 , &lt;code&gt;override&lt;/code&gt; 키워드를 사용하여 &lt;code&gt;Car&lt;/code&gt; 를 사용하여 함수를 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6b65a764a6e57020469ed37fe85c746bc23325c2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;T&lt;/code&gt; is contravariant: is it okay that the user of my class thinks that &lt;code&gt;T&lt;/code&gt; in this position is a &lt;code&gt;Subtype&lt;/code&gt;, while in reality, it's a &lt;code&gt;Supertype&lt;/code&gt;?</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 가 반 변형 인 경우 : 내 클래스의 사용자 가이 위치의 &lt;code&gt;T&lt;/code&gt; 가 &lt;code&gt;Subtype&lt;/code&gt; 이라고 생각하는 것이 좋습니다 . 실제로는 &lt;code&gt;Supertype&lt;/code&gt; 입니까?</target>
        </trans-unit>
        <trans-unit id="7f4b2a8362f8c8da16a2daf58794c2f8fb9ef78c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;T&lt;/code&gt; is covariant: is it okay that the user of my class thinks that &lt;code&gt;T&lt;/code&gt; in this position is a &lt;code&gt;Supertype&lt;/code&gt;, while in reality, it's a &lt;code&gt;Subtype&lt;/code&gt;?</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 가 공변량 인 경우 : 내 클래스의 사용자 가이 위치의 &lt;code&gt;T&lt;/code&gt; 가 &lt;code&gt;Supertype&lt;/code&gt; &lt;code&gt;Subtype&lt;/code&gt; 이라고 생각하는 것이 좋지만 , 실제로는 서브 타입 입니까?</target>
        </trans-unit>
        <trans-unit id="bfd51f1001dac80c99a4bb3dda8e4e82d6a1ba60" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;maybeNull&lt;/code&gt; is null, the function won't be called, and &lt;code&gt;result&lt;/code&gt; will be null; otherwise, it will be the return value of &lt;code&gt;functionThatCanNotHandleNull(this)&lt;/code&gt;, where &lt;code&gt;this&lt;/code&gt; refers to &lt;code&gt;maybeNull&lt;/code&gt;. You can chain &lt;code&gt;run()&lt;/code&gt; calls with &lt;code&gt;?.&lt;/code&gt; - each one will be called on the previous result if it's not null:</source>
          <target state="translated">경우 &lt;code&gt;maybeNull&lt;/code&gt; 가 null의 경우,이 함수가 호출되지 않으며, &lt;code&gt;result&lt;/code&gt; null가됩니다; 그렇지 않은 경우의 반환 값이됩니다 &lt;code&gt;functionThatCanNotHandleNull(this)&lt;/code&gt; , &lt;code&gt;this&lt;/code&gt; 지칭 &lt;code&gt;maybeNull&lt;/code&gt; . &lt;code&gt;run()&lt;/code&gt; 호출을 &lt;code&gt;?.&lt;/code&gt; 연결할 수 있습니다 . -null이 아닌 경우 이전 결과에서 각각 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="1fae05b8006d19a81c7cfe4f83b2f0b20d1eb681" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;output&lt;/code&gt; is a .jar file, whether Kotlin runtime library is included in the jar</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; 이 .jar 파일 인 경우 Kotlin 런타임 라이브러리가 jar에 포함되는지 여부</target>
        </trans-unit>
        <trans-unit id="76b835947859ca1b8bd986c559c1ae81675e7041" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;this&lt;/em&gt; has no qualifiers, it refers to the &lt;em&gt;innermost enclosing scope&lt;/em&gt;. To refer to &lt;em&gt;this&lt;/em&gt; in other scopes, &lt;em&gt;label qualifiers&lt;/em&gt; are used:</source>
          <target state="translated">경우 &lt;em&gt;이&lt;/em&gt; 아무런 규정이 없다, 그것은을 의미 &lt;em&gt;안쪽 바깥 쪽 범위&lt;/em&gt; . 참조하려면 &lt;em&gt;이&lt;/em&gt; 다른 범위에서, &lt;em&gt;라벨 규정이&lt;/em&gt; 사용된다 :</target>
        </trans-unit>
        <trans-unit id="61eed3660645882617baf218a091099d9cf2b60b" translate="yes" xml:space="preserve">
          <source>If Expression</source>
          <target state="translated">식</target>
        </trans-unit>
        <trans-unit id="067406276e7bea71dbdf3fc57b0b60425f4f81e1" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;headerFilter&lt;/code&gt; is not specified, then all headers are included.</source>
          <target state="translated">경우 &lt;code&gt;headerFilter&lt;/code&gt; 가 지정되어 있지 않은 경우, 모든 헤더가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1d473c7be95157741f59b453932617b9a2d63b7" translate="yes" xml:space="preserve">
          <source>If a Java method returns void, it will return &lt;code&gt;Unit&lt;/code&gt; when called from Kotlin. If, by any chance, someone uses that return value, it will be assigned at the call site by the Kotlin compiler, since the value itself is known in advance (being &lt;code&gt;Unit&lt;/code&gt;).</source>
          <target state="translated">Java 메소드가 void를 리턴 하면 Kotlin에서 호출 될 때 &lt;code&gt;Unit&lt;/code&gt; 을 리턴 합니다. 만일 누군가가 그 리턴 값을 사용한다면, Kotlin 컴파일러에 의해 콜 사이트에서 그 값이 할당 될 것입니다. 그 값 자체는 미리 알려져 있기 때문입니다 ( &lt;code&gt;Unit&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="40ec1cb51b1e7e966d4cdec7135acdd24d93310b" translate="yes" xml:space="preserve">
          <source>If a Kotlin file contains a single class (potentially with related top-level declarations), its name should be the same as the name of the class, with the .kt extension appended. If a file contains multiple classes, or only top-level declarations, choose a name describing what the file contains, and name the file accordingly. Use camel humps with an uppercase first letter (e.g. &lt;code&gt;ProcessDeclarations.kt&lt;/code&gt;).</source>
          <target state="translated">Kotlin 파일에 단일 클래스 (잠재적으로 관련된 최상위 레벨 선언이있는)가 포함 된 경우, 해당 이름은 .kt 확장자가 추가 된 클래스 이름과 같아야합니다. 파일에 여러 클래스가 포함되어 있거나 최상위 수준 선언 만있는 경우 파일에 포함 된 내용을 설명하는 이름을 선택하고 그에 따라 파일 이름을 지정하십시오. 대문자 첫 글자가 포함 된 낙타 혹을 사용하십시오 (예 : &lt;code&gt;ProcessDeclarations.kt&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a5f29e49b7a1540ab6955bac6bab0b557adcfa46" translate="yes" xml:space="preserve">
          <source>If a Kotlin file contains a single class (potentially with related top-level declarations), its name should be the same as the name of the class, with the .kt extension appended. If a file contains multiple classes, or only top-level declarations, choose a name describing what the file contains, and name the file accordingly. Use the &lt;a href=&quot;https://en.wikipedia.org/wiki/Camel_case&quot;&gt;camel case&lt;/a&gt; with an uppercase first letter (for example, &lt;code&gt;ProcessDeclarations.kt&lt;/code&gt;).</source>
          <target state="translated">Kotlin 파일에 단일 클래스 (관련 최상위 수준 선언 포함)가 포함 된 경우 파일 이름은 .kt 확장자가 추가 된 클래스 이름과 동일해야합니다. 파일에 여러 클래스가 포함되어 있거나 최상위 선언 만있는 경우 파일에 포함 된 내용을 설명하는 이름을 선택하고 그에 따라 파일 이름을 지정합니다. 첫 번째 대문자와 함께 &lt;a href=&quot;https://en.wikipedia.org/wiki/Camel_case&quot;&gt;카멜 케이스&lt;/a&gt; 를 사용합니다 (예 : &lt;code&gt;ProcessDeclarations.kt&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d499261dcf077150b8a893ee60227455c9e843ed" translate="yes" xml:space="preserve">
          <source>If a Kotlin/Native module uses a CocoaPods library, you can build this module only from an Xcode project. Otherwise the CocoaPods library cannot be resolved by the Kotlin/Native infrastructure.</source>
          <target state="translated">Kotlin / Native 모듈이 CocoaPods 라이브러리를 사용하는 경우 Xcode 프로젝트에서만이 모듈을 빌드 할 수 있습니다. 그렇지 않으면 Kotlin / Native 인프라에서 CocoaPods 라이브러리를 확인할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c57e5e1c183d06345fa4f91784753426d2cd7cbe" translate="yes" xml:space="preserve">
          <source>If a class has a &lt;a href=&quot;object-declarations#companion-objects&quot;&gt;companion object&lt;/a&gt; defined, you can also define extension functions and properties for the companion object. Just like regular members of the companion object, they can be called using only the class name as the qualifier:</source>
          <target state="translated">클래스에 &lt;a href=&quot;object-declarations#companion-objects&quot;&gt;컴패니언 객체가&lt;/a&gt; 정의 되어있는 경우 컴패니언 객체에 대한 확장 함수 및 속성도 정의 할 수 있습니다. 컴패니언 객체의 일반 멤버와 마찬가지로 클래스 이름 만 한정자로 사용하여 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a60ec0b587e0996e818004264195b3afcc09cec1" translate="yes" xml:space="preserve">
          <source>If a class has a &lt;a href=&quot;object-declarations#companion-objects&quot;&gt;companion object&lt;/a&gt; defined, you can also define extension functions and properties for the companion object:</source>
          <target state="translated">클래스에 &lt;a href=&quot;object-declarations#companion-objects&quot;&gt;컴패니언 객체가&lt;/a&gt; 정의되어 있으면 컴패니언 객체의 확장 함수 및 속성을 정의 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="4764e437b4a8e0194f97255ccbb034043a390f71" translate="yes" xml:space="preserve">
          <source>If a class has a member function, and an extension function is defined which has the same receiver type, the same name is applicable to given arguments, the &lt;strong&gt;member always wins&lt;/strong&gt;. For example:</source>
          <target state="translated">클래스에 멤버 함수가 있고 동일한 수신자 유형을 가진 확장 함수가 정의 된 경우 주어진 인수에 동일한 이름이 적용 가능하고 &lt;strong&gt;멤버가 항상 승리&lt;/strong&gt; 합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9198c3448fff5eb29091025ac1cdca923057a3b0" translate="yes" xml:space="preserve">
          <source>If a class has a member function, and an extension function is defined which has the same receiver type, the same name, and is applicable to given arguments, the &lt;strong&gt;member always wins&lt;/strong&gt;. For example:</source>
          <target state="translated">클래스에 멤버 함수가 있고 동일한 수신자 유형, 동일한 이름을 가지며 주어진 인수에 적용 가능한 확장 함수가 정의 된 경우 &lt;strong&gt;멤버는 항상 승리&lt;/strong&gt; 합니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="b0751c2dcab880d762e9ac5f2b150da0f43d1aeb" translate="yes" xml:space="preserve">
          <source>If a class has two properties which are conceptually the same but one is part of a public API and another is an implementation detail, use an underscore as the prefix for the name of the private property:</source>
          <target state="translated">클래스에 개념적으로 동일하지만 하나는 공용 API의 일부이고 다른 하나는 구현 세부 사항 인 두 개의 특성이있는 경우 개인 특성 이름의 접 두부로 밑줄을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="62aeef1d35409f9d2a0e16b783bc032764ff6cdc" translate="yes" xml:space="preserve">
          <source>If a class or a function from a library is marked by its author as experimental, using it in your code will produce warnings or compilation errors unless you explicitly accept their experimental status. There are several ways to accept the experimental status of API elements; all of them are applicable without technical limitations. You are free to choose the way that you find best for your situation.</source>
          <target state="translated">라이브러리의 클래스 또는 함수가 작성자에 의해 실험적인 것으로 표시되는 경우 코드에서 클래스 또는 함수를 사용하면 실험 상태를 명시 적으로 허용하지 않는 한 경고 또는 컴파일 오류가 발생합니다. API 요소의 실험 상태를 수용하는 방법에는 여러 가지가 있습니다. 이들 모두는 기술적 제한없이 적용 가능합니다. 상황에 가장 적합한 방법을 자유롭게 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b68424f5ba6a2078bd8f39139d9b1b4eecca3f3f" translate="yes" xml:space="preserve">
          <source>If a component of the destructured parameter is unused, you can replace it with the underscore to avoid inventing its name:</source>
          <target state="translated">비 구조화 된 매개 변수의 구성 요소를 사용하지 않는 경우 이름을 발명하지 않도록 밑줄로 바꿀 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="69396f6988ae56a2b749974b16702f3935d83bf9" translate="yes" xml:space="preserve">
          <source>If a coroutine encounters an exception other than &lt;code&gt;CancellationException&lt;/code&gt;, it cancels its parent with that exception. This behaviour cannot be overridden and is used to provide stable coroutines hierarchies for &lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines/blob/master/docs/composing-suspending-functions.md#structured-concurrency-with-async&quot;&gt;structured concurrency&lt;/a&gt;. &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-exception-handler/index.html&quot;&gt;CoroutineExceptionHandler&lt;/a&gt; implementation is not used for child coroutines.</source>
          <target state="translated">코 루틴이 &lt;code&gt;CancellationException&lt;/code&gt; 이외의 예외를 만나면 해당 예외 와 함께 부모를 취소합니다. 이 동작은 재정의 할 수 없으며 &lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines/blob/master/docs/composing-suspending-functions.md#structured-concurrency-with-async&quot;&gt;구조화 된 동시성&lt;/a&gt; 을위한 안정적인 코 루틴 계층을 제공하는 데 사용 됩니다 . &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-exception-handler/index.html&quot;&gt;CoroutineExceptionHandler&lt;/a&gt; 구현은 자식 코 루틴에 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c6f280ee1c596a483e44dc5cd919a56f36a6fc8d" translate="yes" xml:space="preserve">
          <source>If a coroutine encounters exception other than &lt;code&gt;CancellationException&lt;/code&gt;, it cancels its parent with that exception. This behaviour cannot be overridden and is used to provide stable coroutines hierarchies for &lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines/blob/master/docs/composing-suspending-functions.md#structured-concurrency-with-async&quot;&gt;structured concurrency&lt;/a&gt; which do not depend on &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-exception-handler/index.html&quot;&gt;CoroutineExceptionHandler&lt;/a&gt; implementation. The original exception is handled by the parent when all its children terminate.</source>
          <target state="translated">코 루틴에서 &lt;code&gt;CancellationException&lt;/code&gt; 이외의 예외가 발생하면 해당 예외로 상위 항목을 취소합니다. 이 동작은 재정의 할 수 없으며 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-exception-handler/index.html&quot;&gt;CoroutineExceptionHandler&lt;/a&gt; 구현에 의존하지 않는 &lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines/blob/master/docs/composing-suspending-functions.md#structured-concurrency-with-async&quot;&gt;구조적 동시성에&lt;/a&gt; 대해 안정적인 코 루틴 계층을 제공하는 데 사용됩니다 . 원래 예외는 모든 자식이 종료 될 때 부모에 의해 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="d2d462cd8e9ba3b7d699994700c496f2c560b29d" translate="yes" xml:space="preserve">
          <source>If a declaration has multiple modifiers, always put them in the following order:</source>
          <target state="translated">선언에 수정자가 여러 개 있으면 항상 다음 순서로 배치하십시오.</target>
        </trans-unit>
        <trans-unit id="1c324efe9f900ec5ab9502805d87c655d837da4d" translate="yes" xml:space="preserve">
          <source>If a default parameter precedes a parameter with no default value, the default value can only be used by calling the function with &lt;a href=&quot;#named-arguments&quot;&gt;named arguments&lt;/a&gt;:</source>
          <target state="translated">기본 매개 변수가 기본값이없는 매개 변수보다 앞에 오는 경우 &lt;a href=&quot;#named-arguments&quot;&gt;명명 된 인수를&lt;/a&gt; 사용하여 함수를 호출해야만 기본값을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c5fa62c81704299df516dd7c041a8d480c196b9b" translate="yes" xml:space="preserve">
          <source>If a default type qualifier uses a type qualifier nickname and they are both &lt;code&gt;@UnderMigration&lt;/code&gt;, the status from the default type qualifier is used.</source>
          <target state="translated">기본 유형 한정자가 유형 한정자 닉네임을 사용하고 둘 다 &lt;code&gt;@UnderMigration&lt;/code&gt; 인 경우 기본 유형 한정자의 상태가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8fb1b7879228c51bc49251497614be1617615253" translate="yes" xml:space="preserve">
          <source>If a file doesn't declare a package, it belongs to the nameless &lt;em&gt;default package&lt;/em&gt;. This should be avoided, as it will make it hard to reference the symbols from that file in case of naming conflicts (you can't explicitly import the empty package).</source>
          <target state="translated">파일이 패키지를 선언하지 않으면 이름이없는 &lt;em&gt;기본 패키지에&lt;/em&gt; 속합니다 . 이름 충돌이 발생하는 경우 해당 파일에서 기호를 참조하기가 어려워 지므로 피해야합니다 (빈 패키지를 명시 적으로 가져올 수 없음).</target>
        </trans-unit>
        <trans-unit id="f5fbea4c3aea4496e7e7b00414d2fcaa5869dd61" translate="yes" xml:space="preserve">
          <source>If a function does not return any useful value, its return type is &lt;code&gt;Unit&lt;/code&gt;. &lt;code&gt;Unit&lt;/code&gt; is a type with only one value - &lt;code&gt;Unit&lt;/code&gt;. This value does not have to be returned explicitly:</source>
          <target state="translated">함수가 유용한 값을 반환하지 않으면 반환 유형은 &lt;code&gt;Unit&lt;/code&gt; 입니다. &lt;code&gt;Unit&lt;/code&gt; 는 단 하나의 값인 &lt;code&gt;Unit&lt;/code&gt; 입니다. 이 값을 명시 적으로 반환 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="586ae5a6f0a2e9992a680dbe096f9f0a203405b4" translate="yes" xml:space="preserve">
          <source>If a function returns Unit, the return type should be omitted:</source>
          <target state="translated">함수가 Unit을 반환하면 반환 유형을 생략해야합니다.</target>
        </trans-unit>
        <trans-unit id="26ffbbf2f8c7a69e516fd6f5e5fb01c4807e2577" translate="yes" xml:space="preserve">
          <source>If a generic type has several type parameters each of them can be projected independently. For example, if the type is declared as &lt;code&gt;interface Function&amp;lt;in T, out U&amp;gt;&lt;/code&gt; we can imagine the following star-projections:</source>
          <target state="translated">일반 유형에 여러 유형 매개 변수가있는 경우 각 유형 매개 변수를 독립적으로 투사 할 수 있습니다. 예를 들어, 유형이 &lt;code&gt;interface Function&amp;lt;in T, out U&amp;gt;&lt;/code&gt; 로 선언 되면 다음과 같은 별 투영법을 상상할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de5d80fa791bb5a89bb7999f43e44154d9f7a1b7" translate="yes" xml:space="preserve">
          <source>If a library has a 'root' publication, the consumer may specify a single dependency on the library as a whole in a common source set, and a corresponding platform-specific variant will be chosen, if available, for each of the compilations that include this dependency. Consider a &lt;code&gt;sample-lib&lt;/code&gt; library built for the JVM and JS and published with a 'root' publication:</source>
          <target state="translated">라이브러리에 '루트'발행물이있는 경우 소비자는 공통 소스 세트에서 라이브러리 전체에 단일 종속성을 지정할 수 있으며, 사용 가능한 경우 포함 된 각 컴파일에 대해 해당 플랫폼 별 변형이 선택됩니다. 이 의존성. JVM 및 JS 용으로 빌드되고 '루트'공개로 공개 된 &lt;code&gt;sample-lib&lt;/code&gt; 라이브러리를 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="2b6d1027059f87a94c39781325c4a38d3fd36ee6" translate="yes" xml:space="preserve">
          <source>If a member function or property is declared as &lt;code&gt;open&lt;/code&gt;, subclasses may &lt;em&gt;override&lt;/em&gt; it by providing a new implementation. Let's say that &lt;code&gt;MotorVehicle&lt;/code&gt; declares this function:</source>
          <target state="translated">멤버 함수 또는 속성이 &lt;code&gt;open&lt;/code&gt; 으로 선언 되면 하위 클래스는 새로운 구현을 제공하여이를 &lt;em&gt;재정의&lt;/em&gt; 할 수 &lt;em&gt;있습니다&lt;/em&gt; . &lt;code&gt;MotorVehicle&lt;/code&gt; 이이 함수를 선언 한다고 가정 해 봅시다 .</target>
        </trans-unit>
        <trans-unit id="3b05658c0676c78c2f6ecac73f01698365f225fb" translate="yes" xml:space="preserve">
          <source>If a method has N parameters and M of which have default values, M overloads are generated: the first one takes N-1 parameters (all but the last one that takes a default value), the second takes N-2 parameters, and so on.</source>
          <target state="translated">메소드에 N 개의 매개 변수가 있고 M에 기본값이있는 경우 M 과부하가 생성됩니다. 첫 번째 매개 변수는 N-1 매개 변수 (모두 마지막 값을 제외하고 기본값)를 취하고 두 번째 매개 변수는 N-2 매개 변수를 사용합니다. 의 위에.</target>
        </trans-unit>
        <trans-unit id="a6a3dbe7a3c930fff25db8be2ac42bb4869e7083" translate="yes" xml:space="preserve">
          <source>If a module is an endpoint application which is not published, use &lt;code&gt;implementation&lt;/code&gt; dependencies instead of &lt;code&gt;api&lt;/code&gt; dependencies.</source>
          <target state="translated">모듈이 게시되지 않은 엔드 포인트 애플리케이션 인 경우 &lt;code&gt;api&lt;/code&gt; 종속성 대신 &lt;code&gt;implementation&lt;/code&gt; 종속성을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="187f8c5b91bd6882618c5a62bdf223a239fa7e78" translate="yes" xml:space="preserve">
          <source>If a non-abstract class does not declare any constructors (primary or secondary), it will have a generated primary constructor with no arguments. The visibility of the constructor will be public. If you do not want your class to have a public constructor, you need to declare an empty primary constructor with non-default visibility:</source>
          <target state="translated">비추 상 클래스가 생성자 (기본 또는 보조)를 선언하지 않으면 생성 된 기본 생성자가 인수없이 생성됩니다. 생성자의 가시성은 공개됩니다. 클래스에 퍼블릭 생성자를 가지지 않으려면 기본 가시성이 아닌 빈 기본 생성자를 선언해야합니다.</target>
        </trans-unit>
        <trans-unit id="29905ed43abbefe9d905d1bc7ab8a797a47bb7d9" translate="yes" xml:space="preserve">
          <source>If a project consists of both Kotlin and Java source code, while it is possible to use &lt;em&gt;kotlinc&lt;/em&gt;, to avoid repetition of task parameters, it is recommended to use &lt;em&gt;withKotlin&lt;/em&gt; task:</source>
          <target state="translated">프로젝트가 Kotlin과 Java 소스 코드로 구성된 경우 &lt;em&gt;kotlinc&lt;/em&gt; 를 사용 하여 작업 매개 변수의 반복을 피할 수 있지만 &lt;em&gt;Kotlin&lt;/em&gt; 작업과 함께 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="609654c2fad938d0263a48e6bf332c23223482ab" translate="yes" xml:space="preserve">
          <source>If a project consists of multiple source roots, use &lt;em&gt;src&lt;/em&gt; as elements to define paths:</source>
          <target state="translated">프로젝트가 여러 소스 루트로 구성된 경우 &lt;em&gt;src&lt;/em&gt; 를 요소로 사용하여 경로를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="6ed938136219853ee5b7c06664d635c5b5eff6f0" translate="yes" xml:space="preserve">
          <source>If a sequence operation returns another sequence, which is produced lazily, it's called &lt;em&gt;intermediate&lt;/em&gt;. Otherwise, the operation is &lt;em&gt;terminal&lt;/em&gt;. Examples of terminal operations are &lt;a href=&quot;constructing-collections#copying&quot;&gt;&lt;code&gt;toList()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;collection-aggregate&quot;&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt;. Sequence elements can be retrieved only with terminal operations.</source>
          <target state="translated">시퀀스 연산이 느리게 생성 된 다른 시퀀스를 반환하면이를 &lt;em&gt;중간&lt;/em&gt; 이라고 합니다. 그렇지 않으면 작업은 &lt;em&gt;터미널&lt;/em&gt; 입니다. 터미널 연산의 예는 &lt;a href=&quot;constructing-collections#copying&quot;&gt; &lt;code&gt;toList()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;collection-aggregate&quot;&gt; &lt;code&gt;sum()&lt;/code&gt; &lt;/a&gt; 입니다. 시퀀스 요소는 터미널 조작으로 만 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="30e6ccb06323d447af741e2670a8825971c56bf1" translate="yes" xml:space="preserve">
          <source>If a supertype has a constructor, appropriate constructor parameters must be passed to it. Many supertypes may be specified as a comma-separated list after the colon:</source>
          <target state="translated">수퍼 타입에 생성자가 있으면 적절한 생성자 매개 변수를 전달해야합니다. 콜론 다음에 많은 수퍼 타입이 쉼표로 구분 된 목록으로 지정 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="71ee75455c68258fcc7798b0e5a90d8dadcef5cd" translate="yes" xml:space="preserve">
          <source>If a supertype has the &lt;code&gt;componentN()&lt;/code&gt; functions that are &lt;em&gt;open&lt;/em&gt; and return compatible types, the corresponding functions are generated for the data class and override those of the supertype. If the functions of the supertype cannot be overridden due to incompatible signatures or being final, an error is reported;</source>
          <target state="translated">수퍼 타입 에 &lt;em&gt;open&lt;/em&gt; 및 return 호환 가능 유형 인 &lt;code&gt;componentN()&lt;/code&gt; 함수가 &lt;em&gt;있는&lt;/em&gt; 경우 해당 함수가 데이터 클래스에 대해 생성되고 수퍼 타입의 함수를 대체합니다. 호환되지 않는 서명으로 인해 수퍼 타입의 기능을 대체 할 수 없거나 오류가 발생하면 오류가보고됩니다.</target>
        </trans-unit>
        <trans-unit id="28f4bb4cbd876a2710b0efbbf4b0592357748708" translate="yes" xml:space="preserve">
          <source>If a top-level declaration is marked &lt;em&gt;private&lt;/em&gt;, it is private to the file it's declared in (see &lt;a href=&quot;visibility-modifiers&quot;&gt;Visibility Modifiers&lt;/a&gt;).</source>
          <target state="translated">최상위 선언이 &lt;em&gt;private&lt;/em&gt; 로 표시 되면 선언 된 파일에 대해 비공개입니다 ( &lt;a href=&quot;visibility-modifiers&quot;&gt;가시성 수정 자&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="8f9335847e2c530d21bcd3080b073f4d1f543f5f" translate="yes" xml:space="preserve">
          <source>If all you want to do with a constructor parameter value is to assign it to a property with the same name, you can declare the property in the primary constructor parameter list (the oneliner below is sufficient for both declaring the properties, declaring the constructor parameters, and initializing the properties with the parameters):</source>
          <target state="translated">생성자 매개 변수 값으로 수행하려는 모든 작업이 동일한 이름의 속성에 할당하는 것이라면 기본 생성자 매개 변수 목록에서 속성을 선언 할 수 있습니다 (아래의 oneliner는 속성을 선언하고 생성자 매개 변수를 선언하는 데 충분합니다). 매개 변수를 사용하여 속성 초기화) :</target>
        </trans-unit>
        <trans-unit id="286a0bf4d2cc8a5a12f2292b0ceccc9207bc4770" translate="yes" xml:space="preserve">
          <source>If an annotation is used as a parameter of another annotation, its name is not prefixed with the @ character:</source>
          <target state="translated">주석이 다른 주석의 매개 변수로 사용되는 경우 이름 앞에 @ 문자가 붙지 않습니다.</target>
        </trans-unit>
        <trans-unit id="10147e3b40c783598d2bd9a60f764d64051cd74f" translate="yes" xml:space="preserve">
          <source>If an annotation type is annotated with both &lt;a href=&quot;https://aalmiray.github.io/jsr-305/apidocs/javax/annotation/meta/TypeQualifierNickname.html&quot;&gt;&lt;code&gt;@TypeQualifierNickname&lt;/code&gt;&lt;/a&gt; and JSR-305 &lt;code&gt;@Nonnull&lt;/code&gt; (or its another nickname, such as &lt;code&gt;@CheckForNull&lt;/code&gt;), then the annotation type is itself used for retrieving precise nullability and has the same meaning as that nullability annotation:</source>
          <target state="translated">주석 형 양쪽 주석 경우 &lt;a href=&quot;https://aalmiray.github.io/jsr-305/apidocs/javax/annotation/meta/TypeQualifierNickname.html&quot;&gt; &lt;code&gt;@TypeQualifierNickname&lt;/code&gt; &lt;/a&gt; 및 JSR-305 &lt;code&gt;@Nonnull&lt;/code&gt; (예 또는 다른 닉네임 &lt;code&gt;@CheckForNull&lt;/code&gt; 예), 주석 형 자체 정확한 Null 허용 입수 사용이 널 (NULL) 주석과 같은 의미를 갖는다 :</target>
        </trans-unit>
        <trans-unit id="f981f8a8e6f98948229b86561835f71dd548b23d" translate="yes" xml:space="preserve">
          <source>If an extension is declared outside its receiver type, such an extension cannot access the receiver's &lt;code&gt;private&lt;/code&gt; members.</source>
          <target state="translated">확장이 수신자 유형 외부에서 선언되면 해당 확장은 수신자의 &lt;code&gt;private&lt;/code&gt; 멤버에 액세스 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="61dcbc44eee3bab1f0e103c1b87baa369fec0f94" translate="yes" xml:space="preserve">
          <source>If an external build system is used for configuring the project, and it's been decided not to share &lt;code&gt;.idea/codeStyle&lt;/code&gt; folder, Kotlin Coding Conventions can be forced with an additional property:</source>
          <target state="translated">외부 빌드 시스템을 사용하여 프로젝트를 구성하고 &lt;code&gt;.idea/codeStyle&lt;/code&gt; 폴더 를 공유하지 않기로 결정한 경우 Kotlin Coding Conventions에 추가 속성을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d93cee5a226e1db8584fc451a3062eec2e7267d3" translate="yes" xml:space="preserve">
          <source>If an object is frozen it can be checked with an extension property &lt;code&gt;isFrozen&lt;/code&gt;, and if it is, object sharing is allowed. Currently, Kotlin/Native runtime only freezes the enum objects after creation, although additional autofreezing of certain provably immutable objects could be implemented in the future.</source>
          <target state="translated">객체가 고정 된 경우 확장 속성 &lt;code&gt;isFrozen&lt;/code&gt; 을 사용하여 확인할 수 있으며 , 그렇지 않은 경우 객체 공유가 허용됩니다. 현재 Kotlin / Native 런타임은 생성 후에 열거 형 객체 만 고정하지만 향후에는 불변의 특정 객체에 대한 추가 자동 동결이 구현 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d745839ade06f63274de839883364751868e1c68" translate="yes" xml:space="preserve">
          <source>If an object is transferred in &lt;code&gt;UNSAFE&lt;/code&gt; mode and is still accessible from multiple concurrent executors, program will likely crash unexpectedly, so consider that last resort in optimizing, not a general purpose mechanism.</source>
          <target state="translated">개체가 &lt;code&gt;UNSAFE&lt;/code&gt; 모드 로 전송되고 여러 동시 실행 프로그램에서 여전히 액세스 할 수있는 경우 프로그램이 예기치 않게 중단 될 수 있으므로 범용 메커니즘이 아닌 최적화의 최후의 수단을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="2fbb13db366dcb9336c03ff5dd678511b1b8d160" translate="yes" xml:space="preserve">
          <source>If any errors occur during the copying, then further actions will depend on the result of the call to &lt;code&gt;onError(File, IOException)&lt;/code&gt; function, that will be called with arguments, specifying the file that caused the error and the exception itself. By default this function rethrows exceptions.</source>
          <target state="translated">복사 중에 오류가 발생하면 &lt;code&gt;onError(File, IOException)&lt;/code&gt; 함수 에 대한 호출 결과에 따라 추가 조치가 발생합니다.이 함수는 인수와 함께 호출되어 오류를 일으킨 파일과 예외 자체를 지정합니다. 기본적으로이 함수는 예외를 다시 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="aad3cd8dfcbdf7511572b2939855bed2ac55b99b" translate="yes" xml:space="preserve">
          <source>If any of arrays contains itself on any nesting level that reference is rendered as &lt;code&gt;&quot;[...]&quot;&lt;/code&gt; to prevent recursion.</source>
          <target state="translated">배열 중 하나라도 중첩 수준에 포함 된 경우 해당 참조는 재귀를 방지하기 위해 &lt;code&gt;&quot;[...]&quot;&lt;/code&gt; 로 렌더링됩니다 .</target>
        </trans-unit>
        <trans-unit id="e3f9db9bf25bbec3f31f98164a22576425cc669b" translate="yes" xml:space="preserve">
          <source>If any of arrays contains itself on any nesting level the behavior is undefined.</source>
          <target state="translated">배열 중 하나라도 중첩 수준에 포함 된 경우 동작이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9c5d9097483a5bb9ad684d81ab29afc4db54e1ed" translate="yes" xml:space="preserve">
          <source>If any of elements is &lt;code&gt;NaN&lt;/code&gt; returns &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">요소 중 하나 인 경우 &lt;code&gt;NaN&lt;/code&gt; 이는 반환 &lt;code&gt;NaN&lt;/code&gt; 이를 .</target>
        </trans-unit>
        <trans-unit id="97176cd6bad6dda53932f8ad2eae19bbc9012e41" translate="yes" xml:space="preserve">
          <source>If any of two pairs would have the same key the last one gets added to the map.</source>
          <target state="translated">두 쌍 중 하나가 동일한 키를 가지면 마지막 키가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="79cd9f8134bc36e93ee0b5b0096e84d02bfcaf30" translate="yes" xml:space="preserve">
          <source>If any two characters are equal, the last one gets added to the map.</source>
          <target state="translated">두 문자가 같으면 마지막 문자가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="c0c6357923841ba1ceaab6f1a6e9f84f8606ef1c" translate="yes" xml:space="preserve">
          <source>If any two characters are equal, the last one overwrites the former value in the map.</source>
          <target state="translated">두 문자가 같으면 마지막 문자가 맵의 이전 값을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="2f26706708ad295a2d4220fcac5447f101089a9f" translate="yes" xml:space="preserve">
          <source>If any two characters would have the same key returned by &lt;a href=&quot;associate-by#kotlin.text%24associateBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.associateBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">&lt;a href=&quot;associate-by#kotlin.text%24associateBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.associateBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 에 의해 리턴 된 동일한 키를 가진 두 문자가있는 경우 마지막 문자가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="5497c944eda344c5ee4cce041575eba3fa47949a" translate="yes" xml:space="preserve">
          <source>If any two characters would have the same key returned by &lt;a href=&quot;associate-by#kotlin.text%24associateBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.associateBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.associateBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">&lt;a href=&quot;associate-by#kotlin.text%24associateBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.associateBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.associateBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 에 의해 리턴 된 동일한 키를 가진 두 문자가있는 경우 마지막 문자가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="7367590726f3c52d91d710c14fe80d9003935516" translate="yes" xml:space="preserve">
          <source>If any two characters would have the same key returned by &lt;a href=&quot;associate-by#kotlin.text%24associateBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.associateBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 문자가 &lt;a href=&quot;associate-by#kotlin.text%24associateBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.associateBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 에 의해 반환 된 동일한 키를 갖는 경우 마지막 문자가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="f4bfe6665fd01c25b2660723aa26cfcba03b745a" translate="yes" xml:space="preserve">
          <source>If any two characters would have the same key returned by &lt;a href=&quot;associate-by#kotlin.text%24associateBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.associateBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.associateBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 문자가 &lt;a href=&quot;associate-by#kotlin.text%24associateBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.associateBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.associateBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 에 의해 반환 된 동일한 키를 갖는 경우 마지막 문자가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="00f0b6493f2eb1f51451a75f987e59fc400e809f" translate="yes" xml:space="preserve">
          <source>If any two characters would have the same key returned by &lt;a href=&quot;associate-by-to#kotlin.text%24associateByTo%28kotlin.CharSequence%2C+kotlin.text.associateByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.associateByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">&lt;a href=&quot;associate-by-to#kotlin.text%24associateByTo%28kotlin.CharSequence%2C+kotlin.text.associateByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.associateByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 에 의해 리턴 된 동일한 키를 가진 두 문자가있는 경우 마지막 문자가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="e75792e6117ae62d34357ae99163b28e3ae87d39" translate="yes" xml:space="preserve">
          <source>If any two characters would have the same key returned by &lt;a href=&quot;associate-by-to#kotlin.text%24associateByTo%28kotlin.CharSequence%2C+kotlin.text.associateByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.associateByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.associateByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">&lt;a href=&quot;associate-by-to#kotlin.text%24associateByTo%28kotlin.CharSequence%2C+kotlin.text.associateByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.associateByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.associateByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 에 의해 리턴 된 동일한 키를 가진 두 문자가있는 경우 마지막 문자가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="6c92aff3ac1f8cdea6651367e77533f526cbf74d" translate="yes" xml:space="preserve">
          <source>If any two characters would have the same key returned by &lt;a href=&quot;associate-by-to#kotlin.text%24associateByTo(kotlin.CharSequence,%20kotlin.text.associateByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.associateByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 문자가 &lt;a href=&quot;associate-by-to#kotlin.text%24associateByTo(kotlin.CharSequence,%20kotlin.text.associateByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.associateByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 에 의해 반환 된 동일한 키를 갖는 경우 마지막 문자가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="d21785fb11026ac029e1cf094d66a51ca1f63f36" translate="yes" xml:space="preserve">
          <source>If any two characters would have the same key returned by &lt;a href=&quot;associate-by-to#kotlin.text%24associateByTo(kotlin.CharSequence,%20kotlin.text.associateByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.associateByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.associateByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 문자가 &lt;a href=&quot;associate-by-to#kotlin.text%24associateByTo(kotlin.CharSequence,%20kotlin.text.associateByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.associateByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.associateByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 에 의해 반환 된 동일한 키를 갖는 경우 마지막 문자가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="4222526855776d5fea3d288e6bf28ef40486cfda" translate="yes" xml:space="preserve">
          <source>If any two elements are equal, the last one gets added to the map.</source>
          <target state="translated">두 요소가 같으면 마지막 요소가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="52ae8f33e4fce4d2bff00b2205f42a03dc6b6dc5" translate="yes" xml:space="preserve">
          <source>If any two elements are equal, the last one overwrites the former value in the map.</source>
          <target state="translated">두 요소가 같으면 마지막 요소가 맵의 이전 값을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="b0b36918b10e47a460b56e912f87552132811b0f" translate="yes" xml:space="preserve">
          <source>If any two elements would have the same key returned by &lt;a href=&quot;associate-by#kotlin.collections%24associateBy%28kotlin.Array%28%28kotlin.collections.associateBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.associateBy.T%2C+kotlin.collections.associateBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 요소 중 &lt;a href=&quot;associate-by#kotlin.collections%24associateBy%28kotlin.Array%28%28kotlin.collections.associateBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.associateBy.T%2C+kotlin.collections.associateBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 에서 리턴 한 동일한 키가있는 경우 마지막 요소가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="e4f7e861149810b95e4b66a62c5652d10a7c2b34" translate="yes" xml:space="preserve">
          <source>If any two elements would have the same key returned by &lt;a href=&quot;associate-by#kotlin.collections%24associateBy%28kotlin.Array%28%28kotlin.collections.associateBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.associateBy.T%2C+kotlin.collections.associateBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.associateBy.T%2C+kotlin.collections.associateBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 요소 중 &lt;a href=&quot;associate-by#kotlin.collections%24associateBy%28kotlin.Array%28%28kotlin.collections.associateBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.associateBy.T%2C+kotlin.collections.associateBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.associateBy.T%2C+kotlin.collections.associateBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 에서 리턴 한 동일한 키가있는 경우 마지막 요소가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="346c57febb657aa512596a792a1d6c53c4a5c173" translate="yes" xml:space="preserve">
          <source>If any two elements would have the same key returned by &lt;a href=&quot;associate-by#kotlin.collections%24associateBy%28kotlin.collections.Iterable%28%28kotlin.collections.associateBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.associateBy.T%2C+kotlin.collections.associateBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 요소 중 &lt;a href=&quot;associate-by#kotlin.collections%24associateBy%28kotlin.collections.Iterable%28%28kotlin.collections.associateBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.associateBy.T%2C+kotlin.collections.associateBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 에서 리턴 한 동일한 키가있는 경우 마지막 요소가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="3287da59db6cb14700469a6de2aad1297af6a1ee" translate="yes" xml:space="preserve">
          <source>If any two elements would have the same key returned by &lt;a href=&quot;associate-by#kotlin.collections%24associateBy%28kotlin.collections.Iterable%28%28kotlin.collections.associateBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.associateBy.T%2C+kotlin.collections.associateBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.associateBy.T%2C+kotlin.collections.associateBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 요소 중 &lt;a href=&quot;associate-by#kotlin.collections%24associateBy%28kotlin.collections.Iterable%28%28kotlin.collections.associateBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.associateBy.T%2C+kotlin.collections.associateBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.associateBy.T%2C+kotlin.collections.associateBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 에서 리턴 한 동일한 키가있는 경우 마지막 요소가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="2c619123b46fe6a76412a4dab4a539323c02514b" translate="yes" xml:space="preserve">
          <source>If any two elements would have the same key returned by &lt;a href=&quot;associate-by#kotlin.collections%24associateBy(kotlin.Array((kotlin.collections.associateBy.T)),%20kotlin.Function1((kotlin.collections.associateBy.T,%20kotlin.collections.associateBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 요소가 &lt;a href=&quot;associate-by#kotlin.collections%24associateBy(kotlin.Array((kotlin.collections.associateBy.T)),%20kotlin.Function1((kotlin.collections.associateBy.T,%20kotlin.collections.associateBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 에 의해 반환 된 동일한 키를 갖는 경우 마지막 요소가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="2babce65c3c6822f47e0eae410ad672aa2260fa3" translate="yes" xml:space="preserve">
          <source>If any two elements would have the same key returned by &lt;a href=&quot;associate-by#kotlin.collections%24associateBy(kotlin.Array((kotlin.collections.associateBy.T)),%20kotlin.Function1((kotlin.collections.associateBy.T,%20kotlin.collections.associateBy.K)),%20kotlin.Function1((kotlin.collections.associateBy.T,%20kotlin.collections.associateBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 요소가 &lt;a href=&quot;associate-by#kotlin.collections%24associateBy(kotlin.Array((kotlin.collections.associateBy.T)),%20kotlin.Function1((kotlin.collections.associateBy.T,%20kotlin.collections.associateBy.K)),%20kotlin.Function1((kotlin.collections.associateBy.T,%20kotlin.collections.associateBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 에 의해 반환 된 동일한 키를 갖는 경우 마지막 요소가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="00d01f2707a1118799d1a79e26193669d53741bc" translate="yes" xml:space="preserve">
          <source>If any two elements would have the same key returned by &lt;a href=&quot;associate-by#kotlin.collections%24associateBy(kotlin.collections.Iterable((kotlin.collections.associateBy.T)),%20kotlin.Function1((kotlin.collections.associateBy.T,%20kotlin.collections.associateBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 요소가 &lt;a href=&quot;associate-by#kotlin.collections%24associateBy(kotlin.collections.Iterable((kotlin.collections.associateBy.T)),%20kotlin.Function1((kotlin.collections.associateBy.T,%20kotlin.collections.associateBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 에 의해 반환 된 동일한 키를 갖는 경우 마지막 요소가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="aec1ca56633469f54f0e46f095a2dbcb21ce1243" translate="yes" xml:space="preserve">
          <source>If any two elements would have the same key returned by &lt;a href=&quot;associate-by#kotlin.collections%24associateBy(kotlin.collections.Iterable((kotlin.collections.associateBy.T)),%20kotlin.Function1((kotlin.collections.associateBy.T,%20kotlin.collections.associateBy.K)),%20kotlin.Function1((kotlin.collections.associateBy.T,%20kotlin.collections.associateBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 요소가 &lt;a href=&quot;associate-by#kotlin.collections%24associateBy(kotlin.collections.Iterable((kotlin.collections.associateBy.T)),%20kotlin.Function1((kotlin.collections.associateBy.T,%20kotlin.collections.associateBy.K)),%20kotlin.Function1((kotlin.collections.associateBy.T,%20kotlin.collections.associateBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 에 의해 반환 된 동일한 키를 갖는 경우 마지막 요소가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="00e86e26effea5e2019fdb8f013dd65c8b5af777" translate="yes" xml:space="preserve">
          <source>If any two elements would have the same key returned by &lt;a href=&quot;associate-by#kotlin.sequences%24associateBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.associateBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.associateBy.T%2C+kotlin.sequences.associateBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 요소 중 &lt;a href=&quot;associate-by#kotlin.sequences%24associateBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.associateBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.associateBy.T%2C+kotlin.sequences.associateBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 에서 리턴 한 동일한 키가있는 경우 마지막 요소가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="aa4e0bb8aab998beb153e618c68711e8ed1f5b4f" translate="yes" xml:space="preserve">
          <source>If any two elements would have the same key returned by &lt;a href=&quot;associate-by#kotlin.sequences%24associateBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.associateBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.associateBy.T%2C+kotlin.sequences.associateBy.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.associateBy.T%2C+kotlin.sequences.associateBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 요소 중 &lt;a href=&quot;associate-by#kotlin.sequences%24associateBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.associateBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.associateBy.T%2C+kotlin.sequences.associateBy.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.associateBy.T%2C+kotlin.sequences.associateBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 에서 리턴 한 동일한 키가있는 경우 마지막 요소가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="cb5d5aa23c9cfd8ca4685ccfe7640b8caaa4a65d" translate="yes" xml:space="preserve">
          <source>If any two elements would have the same key returned by &lt;a href=&quot;associate-by#kotlin.sequences%24associateBy(kotlin.sequences.Sequence((kotlin.sequences.associateBy.T)),%20kotlin.Function1((kotlin.sequences.associateBy.T,%20kotlin.sequences.associateBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 요소가 &lt;a href=&quot;associate-by#kotlin.sequences%24associateBy(kotlin.sequences.Sequence((kotlin.sequences.associateBy.T)),%20kotlin.Function1((kotlin.sequences.associateBy.T,%20kotlin.sequences.associateBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 에 의해 반환 된 동일한 키를 갖는 경우 마지막 요소가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="76aca80e5881d814494f769e4c11ea9e94782b66" translate="yes" xml:space="preserve">
          <source>If any two elements would have the same key returned by &lt;a href=&quot;associate-by#kotlin.sequences%24associateBy(kotlin.sequences.Sequence((kotlin.sequences.associateBy.T)),%20kotlin.Function1((kotlin.sequences.associateBy.T,%20kotlin.sequences.associateBy.K)),%20kotlin.Function1((kotlin.sequences.associateBy.T,%20kotlin.sequences.associateBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 요소가 &lt;a href=&quot;associate-by#kotlin.sequences%24associateBy(kotlin.sequences.Sequence((kotlin.sequences.associateBy.T)),%20kotlin.Function1((kotlin.sequences.associateBy.T,%20kotlin.sequences.associateBy.K)),%20kotlin.Function1((kotlin.sequences.associateBy.T,%20kotlin.sequences.associateBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 에 의해 반환 된 동일한 키를 갖는 경우 마지막 요소가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="c3d37381e9e97d902481d1677ee619ffffeec57b" translate="yes" xml:space="preserve">
          <source>If any two elements would have the same key returned by &lt;a href=&quot;associate-by-to#kotlin.collections%24associateByTo%28kotlin.Array%28%28kotlin.collections.associateByTo.T%29%29%2C+kotlin.collections.associateByTo.M%2C+kotlin.Function1%28%28kotlin.collections.associateByTo.T%2C+kotlin.collections.associateByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 요소 중 &lt;a href=&quot;associate-by-to#kotlin.collections%24associateByTo%28kotlin.Array%28%28kotlin.collections.associateByTo.T%29%29%2C+kotlin.collections.associateByTo.M%2C+kotlin.Function1%28%28kotlin.collections.associateByTo.T%2C+kotlin.collections.associateByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 에서 리턴 한 동일한 키가있는 경우 마지막 요소가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="8a54ba887f98592eb00ea24f27934531d1671f80" translate="yes" xml:space="preserve">
          <source>If any two elements would have the same key returned by &lt;a href=&quot;associate-by-to#kotlin.collections%24associateByTo%28kotlin.Array%28%28kotlin.collections.associateByTo.T%29%29%2C+kotlin.collections.associateByTo.M%2C+kotlin.Function1%28%28kotlin.collections.associateByTo.T%2C+kotlin.collections.associateByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.associateByTo.T%2C+kotlin.collections.associateByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 요소 중 &lt;a href=&quot;associate-by-to#kotlin.collections%24associateByTo%28kotlin.Array%28%28kotlin.collections.associateByTo.T%29%29%2C+kotlin.collections.associateByTo.M%2C+kotlin.Function1%28%28kotlin.collections.associateByTo.T%2C+kotlin.collections.associateByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.associateByTo.T%2C+kotlin.collections.associateByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 에서 리턴 한 동일한 키가있는 경우 마지막 요소가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="ab1f15270d6a111ddaa8968f8a8f226b8f79ddf4" translate="yes" xml:space="preserve">
          <source>If any two elements would have the same key returned by &lt;a href=&quot;associate-by-to#kotlin.collections%24associateByTo%28kotlin.collections.Iterable%28%28kotlin.collections.associateByTo.T%29%29%2C+kotlin.collections.associateByTo.M%2C+kotlin.Function1%28%28kotlin.collections.associateByTo.T%2C+kotlin.collections.associateByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 요소 중 &lt;a href=&quot;associate-by-to#kotlin.collections%24associateByTo%28kotlin.collections.Iterable%28%28kotlin.collections.associateByTo.T%29%29%2C+kotlin.collections.associateByTo.M%2C+kotlin.Function1%28%28kotlin.collections.associateByTo.T%2C+kotlin.collections.associateByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 에서 리턴 한 동일한 키가있는 경우 마지막 요소가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="d0f68c68a34d4b5715504c8f74b425b62b183fef" translate="yes" xml:space="preserve">
          <source>If any two elements would have the same key returned by &lt;a href=&quot;associate-by-to#kotlin.collections%24associateByTo%28kotlin.collections.Iterable%28%28kotlin.collections.associateByTo.T%29%29%2C+kotlin.collections.associateByTo.M%2C+kotlin.Function1%28%28kotlin.collections.associateByTo.T%2C+kotlin.collections.associateByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.associateByTo.T%2C+kotlin.collections.associateByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 요소 중 &lt;a href=&quot;associate-by-to#kotlin.collections%24associateByTo%28kotlin.collections.Iterable%28%28kotlin.collections.associateByTo.T%29%29%2C+kotlin.collections.associateByTo.M%2C+kotlin.Function1%28%28kotlin.collections.associateByTo.T%2C+kotlin.collections.associateByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.associateByTo.T%2C+kotlin.collections.associateByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 에서 리턴 한 동일한 키가있는 경우 마지막 요소가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="8b2386ebd4075f829eb97b39509e81199143026c" translate="yes" xml:space="preserve">
          <source>If any two elements would have the same key returned by &lt;a href=&quot;associate-by-to#kotlin.collections%24associateByTo(kotlin.Array((kotlin.collections.associateByTo.T)),%20kotlin.collections.associateByTo.M,%20kotlin.Function1((kotlin.collections.associateByTo.T,%20kotlin.collections.associateByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 요소가 &lt;a href=&quot;associate-by-to#kotlin.collections%24associateByTo(kotlin.Array((kotlin.collections.associateByTo.T)),%20kotlin.collections.associateByTo.M,%20kotlin.Function1((kotlin.collections.associateByTo.T,%20kotlin.collections.associateByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 에 의해 반환 된 동일한 키를 갖는 경우 마지막 요소가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="a5bda745e6086dfd43e37448ecd0f17912a83dae" translate="yes" xml:space="preserve">
          <source>If any two elements would have the same key returned by &lt;a href=&quot;associate-by-to#kotlin.collections%24associateByTo(kotlin.Array((kotlin.collections.associateByTo.T)),%20kotlin.collections.associateByTo.M,%20kotlin.Function1((kotlin.collections.associateByTo.T,%20kotlin.collections.associateByTo.K)),%20kotlin.Function1((kotlin.collections.associateByTo.T,%20kotlin.collections.associateByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 요소가 &lt;a href=&quot;associate-by-to#kotlin.collections%24associateByTo(kotlin.Array((kotlin.collections.associateByTo.T)),%20kotlin.collections.associateByTo.M,%20kotlin.Function1((kotlin.collections.associateByTo.T,%20kotlin.collections.associateByTo.K)),%20kotlin.Function1((kotlin.collections.associateByTo.T,%20kotlin.collections.associateByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 에 의해 반환 된 동일한 키를 갖는 경우 마지막 요소가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="b8b9cc802fea2f7d48329645a48c226c92d43891" translate="yes" xml:space="preserve">
          <source>If any two elements would have the same key returned by &lt;a href=&quot;associate-by-to#kotlin.collections%24associateByTo(kotlin.collections.Iterable((kotlin.collections.associateByTo.T)),%20kotlin.collections.associateByTo.M,%20kotlin.Function1((kotlin.collections.associateByTo.T,%20kotlin.collections.associateByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 요소가 &lt;a href=&quot;associate-by-to#kotlin.collections%24associateByTo(kotlin.collections.Iterable((kotlin.collections.associateByTo.T)),%20kotlin.collections.associateByTo.M,%20kotlin.Function1((kotlin.collections.associateByTo.T,%20kotlin.collections.associateByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 에 의해 반환 된 동일한 키를 갖는 경우 마지막 요소가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="069e0778324065ee5d06336752a03ef494d33fe8" translate="yes" xml:space="preserve">
          <source>If any two elements would have the same key returned by &lt;a href=&quot;associate-by-to#kotlin.collections%24associateByTo(kotlin.collections.Iterable((kotlin.collections.associateByTo.T)),%20kotlin.collections.associateByTo.M,%20kotlin.Function1((kotlin.collections.associateByTo.T,%20kotlin.collections.associateByTo.K)),%20kotlin.Function1((kotlin.collections.associateByTo.T,%20kotlin.collections.associateByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 요소가 &lt;a href=&quot;associate-by-to#kotlin.collections%24associateByTo(kotlin.collections.Iterable((kotlin.collections.associateByTo.T)),%20kotlin.collections.associateByTo.M,%20kotlin.Function1((kotlin.collections.associateByTo.T,%20kotlin.collections.associateByTo.K)),%20kotlin.Function1((kotlin.collections.associateByTo.T,%20kotlin.collections.associateByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 에 의해 반환 된 동일한 키를 갖는 경우 마지막 요소가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="7fef979d1100c793011b653d677a5f4789c9ce5c" translate="yes" xml:space="preserve">
          <source>If any two elements would have the same key returned by &lt;a href=&quot;associate-by-to#kotlin.sequences%24associateByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.associateByTo.T%29%29%2C+kotlin.sequences.associateByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.associateByTo.T%2C+kotlin.sequences.associateByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 요소 중 &lt;a href=&quot;associate-by-to#kotlin.sequences%24associateByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.associateByTo.T%29%29%2C+kotlin.sequences.associateByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.associateByTo.T%2C+kotlin.sequences.associateByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 에서 리턴 한 동일한 키가있는 경우 마지막 요소가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="0f4cd25d85f79262f8b0d5f4a453055241040829" translate="yes" xml:space="preserve">
          <source>If any two elements would have the same key returned by &lt;a href=&quot;associate-by-to#kotlin.sequences%24associateByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.associateByTo.T%29%29%2C+kotlin.sequences.associateByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.associateByTo.T%2C+kotlin.sequences.associateByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.associateByTo.T%2C+kotlin.sequences.associateByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 요소 중 &lt;a href=&quot;associate-by-to#kotlin.sequences%24associateByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.associateByTo.T%29%29%2C+kotlin.sequences.associateByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.associateByTo.T%2C+kotlin.sequences.associateByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.associateByTo.T%2C+kotlin.sequences.associateByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 에서 리턴 한 동일한 키가있는 경우 마지막 요소가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="65555fa738d49de3541dbc9b7c338a18ba8e97bd" translate="yes" xml:space="preserve">
          <source>If any two elements would have the same key returned by &lt;a href=&quot;associate-by-to#kotlin.sequences%24associateByTo(kotlin.sequences.Sequence((kotlin.sequences.associateByTo.T)),%20kotlin.sequences.associateByTo.M,%20kotlin.Function1((kotlin.sequences.associateByTo.T,%20kotlin.sequences.associateByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 요소가 &lt;a href=&quot;associate-by-to#kotlin.sequences%24associateByTo(kotlin.sequences.Sequence((kotlin.sequences.associateByTo.T)),%20kotlin.sequences.associateByTo.M,%20kotlin.Function1((kotlin.sequences.associateByTo.T,%20kotlin.sequences.associateByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 에 의해 반환 된 동일한 키를 갖는 경우 마지막 요소가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="96ed486305c1c1d3ee98ba620ab2f351eaa38c63" translate="yes" xml:space="preserve">
          <source>If any two elements would have the same key returned by &lt;a href=&quot;associate-by-to#kotlin.sequences%24associateByTo(kotlin.sequences.Sequence((kotlin.sequences.associateByTo.T)),%20kotlin.sequences.associateByTo.M,%20kotlin.Function1((kotlin.sequences.associateByTo.T,%20kotlin.sequences.associateByTo.K)),%20kotlin.Function1((kotlin.sequences.associateByTo.T,%20kotlin.sequences.associateByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; the last one gets added to the map.</source>
          <target state="translated">두 요소가 &lt;a href=&quot;associate-by-to#kotlin.sequences%24associateByTo(kotlin.sequences.Sequence((kotlin.sequences.associateByTo.T)),%20kotlin.sequences.associateByTo.M,%20kotlin.Function1((kotlin.sequences.associateByTo.T,%20kotlin.sequences.associateByTo.K)),%20kotlin.Function1((kotlin.sequences.associateByTo.T,%20kotlin.sequences.associateByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 에 의해 반환 된 동일한 키를 갖는 경우 마지막 요소가 맵에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="110a007329fb036d6903df69176601b85d25191e" translate="yes" xml:space="preserve">
          <source>If any type from a dependency is used in the public API of the current module, use an &lt;code&gt;api&lt;/code&gt; dependency.</source>
          <target state="translated">현재 모듈의 공개 API에서 종속성의 유형이 사용되는 경우 &lt;code&gt;api&lt;/code&gt; 종속성을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="eca190cfc6a29e9601e43afc0d741e161268772e" translate="yes" xml:space="preserve">
          <source>If any value is &lt;code&gt;NaN&lt;/code&gt;, returns &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">임의의 값인 경우 &lt;code&gt;NaN&lt;/code&gt; 이 반환 &lt;code&gt;NaN&lt;/code&gt; 이를 .</target>
        </trans-unit>
        <trans-unit id="15a7c9b40dd906acf8613adf81beb5022ec43a6e" translate="yes" xml:space="preserve">
          <source>If assigning a label for a lambda, do not put a space between the label and the opening curly brace:</source>
          <target state="translated">람다에 레이블을 할당하는 경우 레이블과 여는 중괄호 사이에 공백을 두지 마십시오.</target>
        </trans-unit>
        <trans-unit id="a820210cdda09e6106a20c2689836d5711b2d033" translate="yes" xml:space="preserve">
          <source>If atomic reference value is attempted to be set to non-frozen value runtime exception is thrown.</source>
          <target state="translated">원자 참조 값을 고정되지 않은 값으로 설정하려고하면 런타임 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f6340b7de91bcf9810532c03cd005ea252c107ff" translate="yes" xml:space="preserve">
          <source>If binary was compiled in debug mode.</source>
          <target state="translated">바이너리가 디버그 모드에서 컴파일 된 경우.</target>
        </trans-unit>
        <trans-unit id="2d8589cc3e699ddd4e97fa2ba29db1785486ed75" translate="yes" xml:space="preserve">
          <source>If either value is &lt;code&gt;NaN&lt;/code&gt;, returns &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">하나 값이면 &lt;code&gt;NaN&lt;/code&gt; 이 반환 &lt;code&gt;NaN&lt;/code&gt; 이를 .</target>
        </trans-unit>
        <trans-unit id="a91c0067bcc4bc2dc899d9a2f5799f4eb73c4ee3" translate="yes" xml:space="preserve">
          <source>If either value is &lt;code&gt;NaN&lt;/code&gt;, then the result is &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">두 값 중 하나가 &lt;code&gt;NaN&lt;/code&gt; 이면 결과는 &lt;code&gt;NaN&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7f3e1f12baf2d25f74fb62aefb55ff3c7223ad4c" translate="yes" xml:space="preserve">
          <source>If everything went well, you'll see the result in the &lt;strong&gt;Console&lt;/strong&gt; window.</source>
          <target state="translated">모든 것이 제대로 되었다면 &lt;strong&gt;콘솔&lt;/strong&gt; 창에 결과가 나타납니다 .</target>
        </trans-unit>
        <trans-unit id="b99457c74d09db32d851769270d759bf6b0bed1e" translate="yes" xml:space="preserve">
          <source>If everything went well, you'll see the result in the &lt;strong&gt;Run&lt;/strong&gt; tool window.</source>
          <target state="translated">모든 것이 잘 진행되면 &lt;strong&gt;Run&lt;/strong&gt; tool 창에 결과가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="f44e8e73afacbc926ee5ae8b0a40c2caa8a431c0" translate="yes" xml:space="preserve">
          <source>If for some reason you want to store a different value in the backing field than the value that is being assigned to the property, you're free to do that, but then you will probably want a getter to give the calling code back what they expect: if you say &lt;code&gt;field = value * 2&lt;/code&gt; in the setter and &lt;code&gt;this.age = age * 2&lt;/code&gt; in the initializer block, you should also have &lt;code&gt;get() = field / 2&lt;/code&gt;.</source>
          <target state="translated">어떤 이유로 든 속성에 할당되는 값과 다른 값을 백킹 필드에 저장하려는 경우 자유롭게 할 수 있지만 getter가 호출 코드에 원하는 값을 돌려주는 것을 원할 것입니다 예상 : setter에서 &lt;code&gt;field = value * 2&lt;/code&gt; 라고 말하면 &lt;code&gt;this.age = age * 2&lt;/code&gt; 초기화 블록에서 this.age = age * 2라고 하면 &lt;code&gt;get() = field / 2&lt;/code&gt; 도 있어야 합니다.</target>
        </trans-unit>
        <trans-unit id="4edefded820cd80aae935341ea1dcb1006c317d1" translate="yes" xml:space="preserve">
          <source>If many cases should be handled in the same way, the branch conditions may be combined with a comma:</source>
          <target state="translated">많은 경우를 동일한 방식으로 처리해야하는 경우 분기 조건을 쉼표와 결합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fce48d9ac76717b44d2ca9ae647c75c587720e7e" translate="yes" xml:space="preserve">
          <source>If multiple pairs have the same key, the resulting map will contain the value from the last of those pairs.</source>
          <target state="translated">여러 쌍의 키가 동일한 경우 결과 맵에는 해당 쌍의 마지막 값이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="c2f6abafe51dcf05f7cf659caae54fb0bbb624da" translate="yes" xml:space="preserve">
          <source>If no elements match the predicate, both functions throw exceptions. To avoid them, use &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/first-or-null&quot;&gt;&lt;code&gt;firstOrNull()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/last-or-null&quot;&gt;&lt;code&gt;lastOrNull()&lt;/code&gt;&lt;/a&gt; instead: they return &lt;code&gt;null&lt;/code&gt; if no matching elements are found.</source>
          <target state="translated">술어와 일치하는 요소가 없으면 두 함수 모두 예외를 발생시킵니다. 이를 피하려면 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/first-or-null&quot;&gt; &lt;code&gt;firstOrNull()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/last-or-null&quot;&gt; &lt;code&gt;lastOrNull()&lt;/code&gt; &lt;/a&gt; 대신 사용하십시오. &lt;code&gt;null&lt;/code&gt; 일치하는 요소가 없으면 널 합니다.</target>
        </trans-unit>
        <trans-unit id="8ce45b90b7ed5e84a37f6079dd50b9e40c3acc1b" translate="yes" xml:space="preserve">
          <source>If not null and else shorthand</source>
          <target state="translated">null이 아니고 속기가 아닌 경우</target>
        </trans-unit>
        <trans-unit id="c3119c5c318b3c1bb9ef4c81af371e666f2e1406" translate="yes" xml:space="preserve">
          <source>If not null shorthand</source>
          <target state="translated">속기가 아닌 경우</target>
        </trans-unit>
        <trans-unit id="f0a31ecbf625068fa2a79a659389ab370dd6f36e" translate="yes" xml:space="preserve">
          <source>If present, specifies a code fragment which should be used as a replacement for the deprecated API usage.</source>
          <target state="translated">있는 경우 더 이상 사용되지 않는 API 사용을 대체 할 코드 조각을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b5b87a1191a07e9f1f10d2d86fbeef8f4c6e6b20" translate="yes" xml:space="preserve">
          <source>If some directories on a way to the &lt;a href=&quot;copy-to#kotlin.io%24copyTo%28java.io.File%2C+java.io.File%2C+kotlin.Boolean%2C+kotlin.Int%29%2Ftarget&quot;&gt;target&lt;/a&gt; are missing, then they will be created. If the &lt;a href=&quot;copy-to#kotlin.io%24copyTo%28java.io.File%2C+java.io.File%2C+kotlin.Boolean%2C+kotlin.Int%29%2Ftarget&quot;&gt;target&lt;/a&gt; file already exists, this function will fail unless &lt;a href=&quot;copy-to#kotlin.io%24copyTo%28java.io.File%2C+java.io.File%2C+kotlin.Boolean%2C+kotlin.Int%29%2Foverwrite&quot;&gt;overwrite&lt;/a&gt; argument is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;copy-to#kotlin.io%24copyTo%28java.io.File%2C+java.io.File%2C+kotlin.Boolean%2C+kotlin.Int%29%2Ftarget&quot;&gt;대상&lt;/a&gt; 으로가는 도중에 일부 디렉토리 가 누락되면 작성됩니다. 경우 &lt;a href=&quot;copy-to#kotlin.io%24copyTo%28java.io.File%2C+java.io.File%2C+kotlin.Boolean%2C+kotlin.Int%29%2Ftarget&quot;&gt;대상&lt;/a&gt; 파일이 이미 존재하지 않는 한,이 기능은 실패합니다 &lt;a href=&quot;copy-to#kotlin.io%24copyTo%28java.io.File%2C+java.io.File%2C+kotlin.Boolean%2C+kotlin.Int%29%2Foverwrite&quot;&gt;덮어 쓰기&lt;/a&gt; 인수로 설정 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f01a59b3c6eaf0fa829c89cc9cc51b75a98bb1df" translate="yes" xml:space="preserve">
          <source>If some directories on a way to the &lt;a href=&quot;copy-to#kotlin.io%24copyTo(java.io.File,%20java.io.File,%20kotlin.Boolean,%20kotlin.Int)/target&quot;&gt;target&lt;/a&gt; are missing, then they will be created. If the &lt;a href=&quot;copy-to#kotlin.io%24copyTo(java.io.File,%20java.io.File,%20kotlin.Boolean,%20kotlin.Int)/target&quot;&gt;target&lt;/a&gt; file already exists, this function will fail unless &lt;a href=&quot;copy-to#kotlin.io%24copyTo(java.io.File,%20java.io.File,%20kotlin.Boolean,%20kotlin.Int)/overwrite&quot;&gt;overwrite&lt;/a&gt; argument is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;copy-to#kotlin.io%24copyTo(java.io.File,%20java.io.File,%20kotlin.Boolean,%20kotlin.Int)/target&quot;&gt;대상&lt;/a&gt; 으로가는 도중에 일부 디렉토리 가 누락 된 경우 생성됩니다. 경우 &lt;a href=&quot;copy-to#kotlin.io%24copyTo(java.io.File,%20java.io.File,%20kotlin.Boolean,%20kotlin.Int)/target&quot;&gt;대상&lt;/a&gt; 파일이 이미 존재하지 않는 한,이 기능은 실패합니다 &lt;a href=&quot;copy-to#kotlin.io%24copyTo(java.io.File,%20java.io.File,%20kotlin.Boolean,%20kotlin.Int)/overwrite&quot;&gt;덮어 쓰기&lt;/a&gt; 인수로 설정되어 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="69564edb6644d0771a0b53f00a1f0ee73a8d9530" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map already has a value corresponding to some key, then the elements being aggregated for that key are never considered as &lt;code&gt;first&lt;/code&gt;.</source>
          <target state="translated">는 IF &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 지도 이미 몇 가지 키에 해당하는 값을 가지고, 다음 요소로 간주되지 않습니다 그 키에 대한 집계되고 &lt;code&gt;first&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b97d2cb76e358bd05b416fac37404ef523495356" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/destination&quot;&gt;destination&lt;/a&gt; map already has a value corresponding to some key, then the elements being aggregated for that key are never considered as &lt;code&gt;first&lt;/code&gt;.</source>
          <target state="translated">는 IF &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/destination&quot;&gt;대상&lt;/a&gt; 지도 이미 몇 가지 키에 해당하는 값을 가지고, 다음 요소로 간주되지 않습니다 그 키에 대한 집계되고 &lt;code&gt;first&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0b6595d56ce18db4a67782306e25689cafd4cbf" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;copy-recursively#kotlin.io%24copyRecursively%28java.io.File%2C+java.io.File%2C+kotlin.Boolean%2C+kotlin.Function2%28%28java.io.File%2C+java.io.IOException%2C+kotlin.io.OnErrorAction%29%29%29%2Ftarget&quot;&gt;target&lt;/a&gt; already exists, it will be deleted before copying when the &lt;a href=&quot;copy-recursively#kotlin.io%24copyRecursively%28java.io.File%2C+java.io.File%2C+kotlin.Boolean%2C+kotlin.Function2%28%28java.io.File%2C+java.io.IOException%2C+kotlin.io.OnErrorAction%29%29%29%2Foverwrite&quot;&gt;overwrite&lt;/a&gt; parameter permits so.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-recursively#kotlin.io%24copyRecursively%28java.io.File%2C+java.io.File%2C+kotlin.Boolean%2C+kotlin.Function2%28%28java.io.File%2C+java.io.IOException%2C+kotlin.io.OnErrorAction%29%29%29%2Ftarget&quot;&gt;대상이&lt;/a&gt; 이미 존재,이 때 복사하기 전에 삭제됩니다 &lt;a href=&quot;copy-recursively#kotlin.io%24copyRecursively%28java.io.File%2C+java.io.File%2C+kotlin.Boolean%2C+kotlin.Function2%28%28java.io.File%2C+java.io.IOException%2C+kotlin.io.OnErrorAction%29%29%29%2Foverwrite&quot;&gt;덮어 쓰기&lt;/a&gt; 매개 변수가 너무 허용합니다.</target>
        </trans-unit>
        <trans-unit id="72642c2dc2e392596a7e9e14969c3eba6a9b65c7" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;copy-recursively#kotlin.io%24copyRecursively(java.io.File,%20java.io.File,%20kotlin.Boolean,%20kotlin.Function2((java.io.File,%20java.io.IOException,%20kotlin.io.OnErrorAction)))/target&quot;&gt;target&lt;/a&gt; already exists, it will be deleted before copying when the &lt;a href=&quot;copy-recursively#kotlin.io%24copyRecursively(java.io.File,%20java.io.File,%20kotlin.Boolean,%20kotlin.Function2((java.io.File,%20java.io.IOException,%20kotlin.io.OnErrorAction)))/overwrite&quot;&gt;overwrite&lt;/a&gt; parameter permits so.</source>
          <target state="translated">는 IF &lt;a href=&quot;copy-recursively#kotlin.io%24copyRecursively(java.io.File,%20java.io.File,%20kotlin.Boolean,%20kotlin.Function2((java.io.File,%20java.io.IOException,%20kotlin.io.OnErrorAction)))/target&quot;&gt;대상이&lt;/a&gt; 이미 존재,이 경우 복사하기 전에 삭제됩니다 &lt;a href=&quot;copy-recursively#kotlin.io%24copyRecursively(java.io.File,%20java.io.File,%20kotlin.Boolean,%20kotlin.Function2((java.io.File,%20java.io.IOException,%20kotlin.io.OnErrorAction)))/overwrite&quot;&gt;덮어 쓰기&lt;/a&gt; 매개 변수가 너무 허용합니다.</target>
        </trans-unit>
        <trans-unit id="9f9b5e8d1feceda52168174d03a6fd1853068274" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;each-count-to#kotlin.collections%24eachCountTo%28kotlin.collections.Grouping%28%28kotlin.collections.eachCountTo.T%2C+kotlin.collections.eachCountTo.K%29%29%2C+kotlin.collections.eachCountTo.M%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map already has a value corresponding to the key of some group, that value is used as an initial value of the counter for that group.</source>
          <target state="translated">&lt;a href=&quot;each-count-to#kotlin.collections%24eachCountTo%28kotlin.collections.Grouping%28%28kotlin.collections.eachCountTo.T%2C+kotlin.collections.eachCountTo.K%29%29%2C+kotlin.collections.eachCountTo.M%29%2Fdestination&quot;&gt;목적지 인&lt;/a&gt; 경우 지도 이미 일부 그룹의 키에 해당하는 값을 가지며, 그 값은 그 그룹의 카운터의 초기 값으로서 사용된다.</target>
        </trans-unit>
        <trans-unit id="294cca51ae0758313aa7d288e6e1a35754d699c1" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;each-count-to#kotlin.collections%24eachCountTo(kotlin.collections.Grouping((kotlin.collections.eachCountTo.T,%20kotlin.collections.eachCountTo.K)),%20kotlin.collections.eachCountTo.M)/destination&quot;&gt;destination&lt;/a&gt; map already has a value corresponding to the key of some group, that value is used as an initial value of the counter for that group.</source>
          <target state="translated">경우] &lt;a href=&quot;each-count-to#kotlin.collections%24eachCountTo(kotlin.collections.Grouping((kotlin.collections.eachCountTo.T,%20kotlin.collections.eachCountTo.K)),%20kotlin.collections.eachCountTo.M)/destination&quot;&gt;대상&lt;/a&gt; 지도 이미 일부 그룹의 키에 해당하는 값을 가지며, 그 값은 그 그룹의 카운터의 초기 값으로서 사용된다.</target>
        </trans-unit>
        <trans-unit id="8e5524567ae268875bd1ad8d3089898977c657ab" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map already has a value corresponding to some key, that value is used as an initial value of the accumulator for that group and the &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2FinitialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function is not called for that group.</source>
          <target state="translated">경우] &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 지도 이미 일부 키에 대응하는 값을 가지며, 그 값은 그 그룹에 대한 상기 어큐뮬레이터의 초기 값으로서 사용된다 &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2FinitialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; 해당 그룹 호출되지 함수.</target>
        </trans-unit>
        <trans-unit id="c2e00bc5fd9ad4886018856e815daa5b47301e4d" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map already has a value corresponding to the key of some group, that value is used as an initial value of the accumulator for that group.</source>
          <target state="translated">&lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;목적지 인&lt;/a&gt; 경우 지도 이미 일부 그룹의 키에 해당하는 값을 가지며, 그 값은 그 그룹에 대한 어큐뮬레이터의 초기 값으로서 사용된다.</target>
        </trans-unit>
        <trans-unit id="92a0a868acf0fdba94e948380117659b082b2d8a" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map already has a value corresponding to some key, that value is used as an initial value of the accumulator for that group and the &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/initialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function is not called for that group.</source>
          <target state="translated">경우] &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;대상&lt;/a&gt; 지도 이미 일부 키에 대응하는 값을 가지며, 그 값은 그 그룹에 대한 상기 어큐뮬레이터의 초기 값으로서 사용된다 &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/initialValueSelector&quot;&gt;initialValueSelector의&lt;/a&gt; 해당 그룹 호출되지 함수.</target>
        </trans-unit>
        <trans-unit id="61fb3080e7ad416c3c4c97afdd9493927e20f8d4" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map already has a value corresponding to the key of some group, that value is used as an initial value of the accumulator for that group.</source>
          <target state="translated">경우] &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;대상&lt;/a&gt; 지도 이미 일부 그룹의 키에 해당하는 값을 가지며, 그 값은 그 그룹에 대한 어큐뮬레이터의 초기 값으로서 사용된다.</target>
        </trans-unit>
        <trans-unit id="a5e416dc2da9d5eff4e49855727e16479b47d6e8" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.Array%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;get#kotlin.Array%24get%28kotlin.Int%29%2Findex&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="a66362906cf4418648a9a5554323ed383b8c8eea" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.Array%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;get#kotlin.Array%24get%28kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이 발생합니다.&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="659f4cba1d89d61c23bd0ba52a22f40e8ccd83db" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.Array%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;get#kotlin.Array%24get(kotlin.Int)/index&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="8871905aa80191cdc602c425bf96156ef25f5e60" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.Array%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;get#kotlin.Array%24get(kotlin.Int)/index&quot;&gt;인덱스는&lt;/a&gt; 이 배열의 범위를 벗어난, 발생 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e297805d5d494bda3a0385ad18c3569e75f14c7d" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.BooleanArray%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">&lt;a href=&quot;get#kotlin.BooleanArray%24get%28kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이 발생합니다.&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="4c007633067610794e36b0b3cc51865ca8352f19" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.BooleanArray%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;get#kotlin.BooleanArray%24get%28kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이 발생합니다.&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6039a3964776e721bd806c0a81307a0abf13a4c0" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.BooleanArray%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;get#kotlin.BooleanArray%24get(kotlin.Int)/index&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="fc5816f698f9795e7dd6086d1ef8ccfaae63b27a" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.BooleanArray%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;get#kotlin.BooleanArray%24get(kotlin.Int)/index&quot;&gt;인덱스는&lt;/a&gt; 이 배열의 범위를 벗어난, 발생 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ef7d2330d71db6f764d35eea14e9ab73aac72b9c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.ByteArray%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">&lt;a href=&quot;get#kotlin.ByteArray%24get%28kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이 발생합니다.&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="8b70a8c2ba34131364e28b2512d35483af00f19a" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.ByteArray%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;get#kotlin.ByteArray%24get%28kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이 발생합니다.&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="44768c507a4b76808d52b98c0254864df2b87ee5" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.ByteArray%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;get#kotlin.ByteArray%24get(kotlin.Int)/index&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="f43d6c6804b42a2af7611d19f88a2487e6000d7d" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.ByteArray%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;get#kotlin.ByteArray%24get(kotlin.Int)/index&quot;&gt;인덱스는&lt;/a&gt; 이 배열의 범위를 벗어난, 발생 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b2c1eabbbf7b712271d653fdcbd433c34590b4d2" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.CharArray%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">&lt;a href=&quot;get#kotlin.CharArray%24get%28kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이 발생합니다.&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="87b690a93b6a351a33df7161fb636a57f37c003d" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.CharArray%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;get#kotlin.CharArray%24get%28kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이 발생합니다.&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="241fbd990a613b4ddb1929a451c61d8c2e0d5edd" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.CharArray%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;get#kotlin.CharArray%24get(kotlin.Int)/index&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="b8b15067f57d32d666005f69272a8002614e5c40" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.CharArray%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;get#kotlin.CharArray%24get(kotlin.Int)/index&quot;&gt;인덱스는&lt;/a&gt; 이 배열의 범위를 벗어난, 발생 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9330d9da57aef0aed8c13aee6dc337fbeb829bff" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.DoubleArray%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">&lt;a href=&quot;get#kotlin.DoubleArray%24get%28kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이 발생합니다.&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="6c4f88ba4389bfc9a900b68407e80b12b5ae9b02" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.DoubleArray%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;get#kotlin.DoubleArray%24get%28kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이 발생합니다.&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="10f0cc22e805af048a8e1811a9b67195fd374456" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.DoubleArray%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;get#kotlin.DoubleArray%24get(kotlin.Int)/index&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="4dfbdf3e234c922a5068cafdfeeced9cce315c84" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.DoubleArray%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;get#kotlin.DoubleArray%24get(kotlin.Int)/index&quot;&gt;인덱스는&lt;/a&gt; 이 배열의 범위를 벗어난, 발생 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4839668bfa4ee00994900630081eeb5714f95752" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.FloatArray%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">&lt;a href=&quot;get#kotlin.FloatArray%24get%28kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이 발생합니다.&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="0e047d5c3d28e4eb74b19b8706f2359f4a496d1c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.FloatArray%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;get#kotlin.FloatArray%24get%28kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이 발생합니다.&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="36ed57a482212b43296278a3f740dad9f4d581db" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.FloatArray%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;get#kotlin.FloatArray%24get(kotlin.Int)/index&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="00d6097085f2efeb6f60d64620ecac34ef7d8a30" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.FloatArray%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;get#kotlin.FloatArray%24get(kotlin.Int)/index&quot;&gt;인덱스는&lt;/a&gt; 이 배열의 범위를 벗어난, 발생 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="33490febae2a178f4655be7a154612da34a0c4a5" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.IntArray%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">&lt;a href=&quot;get#kotlin.IntArray%24get%28kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이 발생합니다.&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="9d2ed5d24fc59700154e317864d8c0e6739505a7" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.IntArray%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;get#kotlin.IntArray%24get%28kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이 발생합니다.&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c696e216e6286ada0cb5195502952a789b32f98a" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.IntArray%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;get#kotlin.IntArray%24get(kotlin.Int)/index&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="292f4907701770c13a3d993a8fbab1351a08f93b" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.IntArray%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;get#kotlin.IntArray%24get(kotlin.Int)/index&quot;&gt;인덱스는&lt;/a&gt; 이 배열의 범위를 벗어난, 발생 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b5f087deed2fca1a1e09b14c363914201ae8d71a" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.LongArray%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">&lt;a href=&quot;get#kotlin.LongArray%24get%28kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이 발생합니다.&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="256c8bdcf7db878fc6b6b13f96f3eeecab8e97a4" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.LongArray%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;get#kotlin.LongArray%24get%28kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이 발생합니다.&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a243908860038c9462a433c221a21a1025d24e0f" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.LongArray%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;get#kotlin.LongArray%24get(kotlin.Int)/index&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="78cc83cee81cdb56f83d5139ff270e833535dfdf" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.LongArray%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;get#kotlin.LongArray%24get(kotlin.Int)/index&quot;&gt;인덱스는&lt;/a&gt; 이 배열의 범위를 벗어난, 발생 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="999680793def1bf95ce65d25a967348c34b8ed9d" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.ShortArray%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">&lt;a href=&quot;get#kotlin.ShortArray%24get%28kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이 발생합니다.&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="343f876e9f1eb0b0c40cd9f7901fcfe6d86bd975" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.ShortArray%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;get#kotlin.ShortArray%24get%28kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이 발생합니다.&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3f013fc6e90baae75eb837993cde762ea2af5800" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.ShortArray%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;get#kotlin.ShortArray%24get(kotlin.Int)/index&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="58754cd9e0e7d7a8702d78a5c9ba2d2f0156bea9" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.ShortArray%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;get#kotlin.ShortArray%24get(kotlin.Int)/index&quot;&gt;인덱스는&lt;/a&gt; 이 배열의 범위를 벗어난, 발생 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2e96f00fc82613fc72e45bd901e49fdbd42b006e" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.String%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this string, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">&lt;a href=&quot;get#kotlin.String%24get%28kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 문자열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이 발생합니다.&lt;/a&gt; 의 동작은 정의되어 있지 않기 때문에 어디 코 틀린 / JS를 제외하고.</target>
        </trans-unit>
        <trans-unit id="121146c1773ced51b85c510f0c9a740fcee4401a" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.String%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this string, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;get#kotlin.String%24get%28kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 문자열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이 발생합니다.&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="7f767176ab77d40deae0e60f62a498403a05d542" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.String%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this string, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">경우 &lt;a href=&quot;get#kotlin.String%24get(kotlin.Int)/index&quot;&gt;인덱스가&lt;/a&gt; 이 문자열의 범위 외에, 발생 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 의 동작은 정의되어 있지 않기 때문에 어디 코 틀린 / JS를 제외하고.</target>
        </trans-unit>
        <trans-unit id="46f07635940947a7d146432e3e2c1f7467a6f5db" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.String%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this string, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;get#kotlin.String%24get(kotlin.Int)/index&quot;&gt;인덱스가&lt;/a&gt; 이 문자열의 범위 외에, 발생 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d9b4a8848b9c8e64b348afb59840b8348887cc19" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.UByteArray%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">&lt;a href=&quot;get#kotlin.UByteArray%24get%28kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이 발생합니다.&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="1e7b8e174e484d14d4beffbac84f58ae1fb244d4" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.UByteArray%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;get#kotlin.UByteArray%24get(kotlin.Int)/index&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="c42b44be3aa2af1c6b520077f8536d89266d3575" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.UIntArray%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">&lt;a href=&quot;get#kotlin.UIntArray%24get%28kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이 발생합니다.&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="2e0b0214b72fe8c7cf14b755a41ea870bd89d740" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.UIntArray%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;get#kotlin.UIntArray%24get(kotlin.Int)/index&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="9aa63b031868d224c7a7f44af55292bbb50b21f2" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.ULongArray%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">&lt;a href=&quot;get#kotlin.ULongArray%24get%28kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이 발생합니다.&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="f9de9e44f5252019b83cabd1b363c2f8b0aa829b" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.ULongArray%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;get#kotlin.ULongArray%24get(kotlin.Int)/index&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="5f0b48aa5778c165df7d576ad84fb99a045c6acc" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.UShortArray%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">&lt;a href=&quot;get#kotlin.UShortArray%24get%28kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이 발생합니다.&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="75d4175ea3cfca94ca7e47438e4bdab18fab5198" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;get#kotlin.UShortArray%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;get#kotlin.UShortArray%24get(kotlin.Int)/index&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="3832840323d1968de06c86d1668de66bc5395923" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;on-enter#kotlin.io.FileTreeWalk%24onEnter%28kotlin.Function1%28%28java.io.File%2C+kotlin.Boolean%29%29%29%2Ffunction&quot;&gt;function&lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt; the directory is not entered and neither it nor its files are visited.</source>
          <target state="translated">&lt;a href=&quot;on-enter#kotlin.io.FileTreeWalk%24onEnter%28kotlin.Function1%28%28java.io.File%2C+kotlin.Boolean%29%29%29%2Ffunction&quot;&gt;함수&lt;/a&gt; 가 &lt;code&gt;false&lt;/code&gt; 를 반환 하면 디렉토리가 입력되지 않고이나 그 파일도 방문한다.</target>
        </trans-unit>
        <trans-unit id="76181a81bd674f99c87a97a3e1468fb754d1fc87" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;on-enter#kotlin.io.FileTreeWalk%24onEnter(kotlin.Function1((java.io.File,%20kotlin.Boolean)))/function&quot;&gt;function&lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt; the directory is not entered and neither it nor its files are visited.</source>
          <target state="translated">은 IF &lt;a href=&quot;on-enter#kotlin.io.FileTreeWalk%24onEnter(kotlin.Function1((java.io.File,%20kotlin.Boolean)))/function&quot;&gt;함수가&lt;/a&gt; 반환 &lt;code&gt;false&lt;/code&gt; 디렉토리가 입력되지 않고이나 그 파일도 방문한다.</target>
        </trans-unit>
        <trans-unit id="0a2285dd49856fe4825e17e694cf3fa18696091c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map already has a value corresponding to the key of some group, that value is used as an initial value of the accumulator for that group and the first element of that group is also subjected to the &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt;.</source>
          <target state="translated">경우] &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 지도 이미 일부 그룹의 키에 해당하는 값을 가지며, 그 값도 실시되는 그룹과 해당 그룹의 첫 번째 요소의 어큐뮬레이터의 초기 값으로 사용되는 &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Foperation&quot;&gt;조작&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aaabd446cf116a2750ab94bb32f8d62327631fb7" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map already has a value corresponding to the key of some group, that value is used as an initial value of the accumulator for that group and the first element of that group is also subjected to the &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/operation&quot;&gt;operation&lt;/a&gt;.</source>
          <target state="translated">경우] &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/destination&quot;&gt;대상&lt;/a&gt; 지도 이미 일부 그룹의 키에 해당하는 값을 가지며, 그 값도 실시되는 그룹과 해당 그룹의 첫 번째 요소의 어큐뮬레이터의 초기 값으로 사용되는 &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/operation&quot;&gt;조작&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9c1cf29eaa37e1a848f362e9496c70a7361cc3c0" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.Array%24set%28kotlin.Int%2C+kotlin.Array.T%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;set#kotlin.Array%24set%28kotlin.Int%2C+kotlin.Array.T%29%2Findex&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="b4795422de28a107d2b93ad77a19fea520c69382" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.Array%24set%28kotlin.Int%2C+kotlin.Array.T%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;set#kotlin.Array%24set%28kotlin.Int%2C+kotlin.Array.T%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException을&lt;/a&gt; 던집니다 .</target>
        </trans-unit>
        <trans-unit id="3500c6a3ccdfdd558e70d61568491d24a57dba35" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.Array%24set(kotlin.Int,%20kotlin.Array.T)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;set#kotlin.Array%24set(kotlin.Int,%20kotlin.Array.T)/index&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="07848e5d2cb6b751154cf49081d01d01ad9a0467" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.Array%24set(kotlin.Int,%20kotlin.Array.T)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;set#kotlin.Array%24set(kotlin.Int,%20kotlin.Array.T)/index&quot;&gt;인덱스는&lt;/a&gt; 이 배열의 범위를 벗어난, 발생 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ad0c6c091ccda18739aa6f3577cd89dd09841078" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.BooleanArray%24set%28kotlin.Int%2C+kotlin.Boolean%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;set#kotlin.BooleanArray%24set%28kotlin.Int%2C+kotlin.Boolean%29%2Findex&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="835319d043a0f65a5eee60807011570250691591" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.BooleanArray%24set%28kotlin.Int%2C+kotlin.Boolean%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;set#kotlin.BooleanArray%24set%28kotlin.Int%2C+kotlin.Boolean%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException을&lt;/a&gt; 던집니다 .</target>
        </trans-unit>
        <trans-unit id="7b50c553e7ac61ad18a55fb2deb2fd76235f23fd" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.BooleanArray%24set(kotlin.Int,%20kotlin.Boolean)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;set#kotlin.BooleanArray%24set(kotlin.Int,%20kotlin.Boolean)/index&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="07ab11928fd8cb50782aa576d57f34d36dac144c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.BooleanArray%24set(kotlin.Int,%20kotlin.Boolean)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;set#kotlin.BooleanArray%24set(kotlin.Int,%20kotlin.Boolean)/index&quot;&gt;인덱스는&lt;/a&gt; 이 배열의 범위를 벗어난, 발생 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="527f471fdf4e268be1d4b9f1ebfd516bc71f229b" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.ByteArray%24set%28kotlin.Int%2C+kotlin.Byte%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;set#kotlin.ByteArray%24set%28kotlin.Int%2C+kotlin.Byte%29%2Findex&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="42963185cae43f2e758e143f41ae72d95b5c4100" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.ByteArray%24set%28kotlin.Int%2C+kotlin.Byte%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;set#kotlin.ByteArray%24set%28kotlin.Int%2C+kotlin.Byte%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException을&lt;/a&gt; 던집니다 .</target>
        </trans-unit>
        <trans-unit id="cdf2a2f9fb25aa14921ec99b9c2441f2f3aa607b" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.ByteArray%24set(kotlin.Int,%20kotlin.Byte)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;set#kotlin.ByteArray%24set(kotlin.Int,%20kotlin.Byte)/index&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="e63aef66dc4f176a6824753a6cdeb0ca0faba262" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.ByteArray%24set(kotlin.Int,%20kotlin.Byte)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;set#kotlin.ByteArray%24set(kotlin.Int,%20kotlin.Byte)/index&quot;&gt;인덱스는&lt;/a&gt; 이 배열의 범위를 벗어난, 발생 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c8618ed56cd06c8c291f923aab1b1a054f5002b8" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.CharArray%24set%28kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;set#kotlin.CharArray%24set%28kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="16b81d70965f40eb90b072a5e9edb009e7b41db0" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.CharArray%24set%28kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;set#kotlin.CharArray%24set%28kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException을&lt;/a&gt; 던집니다 .</target>
        </trans-unit>
        <trans-unit id="ff5ba893f49fd7a741281bd097b53c6298362fcd" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.CharArray%24set(kotlin.Int,%20kotlin.Char)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;set#kotlin.CharArray%24set(kotlin.Int,%20kotlin.Char)/index&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="3e60264d0d2c56881b96bac79b4666814c5f9bc5" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.CharArray%24set(kotlin.Int,%20kotlin.Char)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;set#kotlin.CharArray%24set(kotlin.Int,%20kotlin.Char)/index&quot;&gt;인덱스는&lt;/a&gt; 이 배열의 범위를 벗어난, 발생 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="684c4e170a424d705f9e13c5cda4d575a1e09f13" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.DoubleArray%24set%28kotlin.Int%2C+kotlin.Double%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;set#kotlin.DoubleArray%24set%28kotlin.Int%2C+kotlin.Double%29%2Findex&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="f733c2a99de30ff7689107b0fce91469fa4b4623" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.DoubleArray%24set%28kotlin.Int%2C+kotlin.Double%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;set#kotlin.DoubleArray%24set%28kotlin.Int%2C+kotlin.Double%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException을&lt;/a&gt; 던집니다 .</target>
        </trans-unit>
        <trans-unit id="b3adc428d0247ef8e64e3b606fc8678debad6823" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.DoubleArray%24set(kotlin.Int,%20kotlin.Double)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;set#kotlin.DoubleArray%24set(kotlin.Int,%20kotlin.Double)/index&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="1f1fe770f48c4c991ab6ba93f5448bca6a109d8e" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.DoubleArray%24set(kotlin.Int,%20kotlin.Double)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;set#kotlin.DoubleArray%24set(kotlin.Int,%20kotlin.Double)/index&quot;&gt;인덱스는&lt;/a&gt; 이 배열의 범위를 벗어난, 발생 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="09664e73fde927f6d22f3ea9f4070e59236e924f" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.FloatArray%24set%28kotlin.Int%2C+kotlin.Float%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;set#kotlin.FloatArray%24set%28kotlin.Int%2C+kotlin.Float%29%2Findex&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="dde11a436e59034272f619d39049718d3c4685e2" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.FloatArray%24set%28kotlin.Int%2C+kotlin.Float%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;set#kotlin.FloatArray%24set%28kotlin.Int%2C+kotlin.Float%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException을&lt;/a&gt; 던집니다 .</target>
        </trans-unit>
        <trans-unit id="ab4dcb980391ca205a536de0ce8e05a3c6d15d9b" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.FloatArray%24set(kotlin.Int,%20kotlin.Float)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;set#kotlin.FloatArray%24set(kotlin.Int,%20kotlin.Float)/index&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="d5712029ee942822232df2cd5dbe660126d19048" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.FloatArray%24set(kotlin.Int,%20kotlin.Float)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;set#kotlin.FloatArray%24set(kotlin.Int,%20kotlin.Float)/index&quot;&gt;인덱스는&lt;/a&gt; 이 배열의 범위를 벗어난, 발생 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1000d31cc93809459dc4dbcc455954d9ddc757d2" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.IntArray%24set%28kotlin.Int%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;set#kotlin.IntArray%24set%28kotlin.Int%2C+kotlin.Int%29%2Findex&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="ab2984691cfff299ebe407e2aee780db1db59dff" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.IntArray%24set%28kotlin.Int%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;set#kotlin.IntArray%24set%28kotlin.Int%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException을&lt;/a&gt; 던집니다 .</target>
        </trans-unit>
        <trans-unit id="a3d5f8f3a49afff92d2de250d1c268d9641231e3" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.IntArray%24set(kotlin.Int,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;set#kotlin.IntArray%24set(kotlin.Int,%20kotlin.Int)/index&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="b0d669004672e2a64c3a7a12296c03199c121a94" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.IntArray%24set(kotlin.Int,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;set#kotlin.IntArray%24set(kotlin.Int,%20kotlin.Int)/index&quot;&gt;인덱스는&lt;/a&gt; 이 배열의 범위를 벗어난, 발생 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f173e322ccd56addf649214d8ae7803d5dfa5b94" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.LongArray%24set%28kotlin.Int%2C+kotlin.Long%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;set#kotlin.LongArray%24set%28kotlin.Int%2C+kotlin.Long%29%2Findex&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="f409e29966bb054dfd47826d8dd2e870d206d24a" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.LongArray%24set%28kotlin.Int%2C+kotlin.Long%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;set#kotlin.LongArray%24set%28kotlin.Int%2C+kotlin.Long%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException을&lt;/a&gt; 던집니다 .</target>
        </trans-unit>
        <trans-unit id="1fba4254a8fc486709d4c8d0c1ff6c237b4ac68e" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.LongArray%24set(kotlin.Int,%20kotlin.Long)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;set#kotlin.LongArray%24set(kotlin.Int,%20kotlin.Long)/index&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="64c2d595bfbfd6b07a001299c27dab6257d421de" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.LongArray%24set(kotlin.Int,%20kotlin.Long)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;set#kotlin.LongArray%24set(kotlin.Int,%20kotlin.Long)/index&quot;&gt;인덱스는&lt;/a&gt; 이 배열의 범위를 벗어난, 발생 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7a8044147072cea61ae2e90888654fdcbbe920ee" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.ShortArray%24set%28kotlin.Int%2C+kotlin.Short%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;set#kotlin.ShortArray%24set%28kotlin.Int%2C+kotlin.Short%29%2Findex&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="382bd7e3336be8af1102464e37fa8b63b568ca7c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.ShortArray%24set%28kotlin.Int%2C+kotlin.Short%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;set#kotlin.ShortArray%24set%28kotlin.Int%2C+kotlin.Short%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 배열의 범위를 벗어나 면 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException을&lt;/a&gt; 던집니다 .</target>
        </trans-unit>
        <trans-unit id="a1175979092412882336d28661ca4a85fdaf319b" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.ShortArray%24set(kotlin.Int,%20kotlin.Short)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;set#kotlin.ShortArray%24set(kotlin.Int,%20kotlin.Short)/index&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="e23f36b4d54bf9c3c45bcbc7bf634715deb9f3f1" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.ShortArray%24set(kotlin.Int,%20kotlin.Short)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;set#kotlin.ShortArray%24set(kotlin.Int,%20kotlin.Short)/index&quot;&gt;인덱스는&lt;/a&gt; 이 배열의 범위를 벗어난, 발생 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bb1e18b251850707f84797db758d97e17b714305" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.UByteArray%24set%28kotlin.Int%2C+kotlin.UByte%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;set#kotlin.UByteArray%24set%28kotlin.Int%2C+kotlin.UByte%29%2Findex&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="adbaf189ba58957d0a7656eeb77ad6d9cf651830" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.UByteArray%24set(kotlin.Int,%20kotlin.UByte)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;set#kotlin.UByteArray%24set(kotlin.Int,%20kotlin.UByte)/index&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="2b01aefe6d05f741cac19ebae49684d8f27b7c15" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.UIntArray%24set%28kotlin.Int%2C+kotlin.UInt%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;set#kotlin.UIntArray%24set%28kotlin.Int%2C+kotlin.UInt%29%2Findex&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="2f924e8f004a96424c06cbbda49ed1c933ecc51d" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.UIntArray%24set(kotlin.Int,%20kotlin.UInt)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;set#kotlin.UIntArray%24set(kotlin.Int,%20kotlin.UInt)/index&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="e0298f72be4df89660cb3cbfa8ca0b544a87436d" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.ULongArray%24set%28kotlin.Int%2C+kotlin.ULong%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;set#kotlin.ULongArray%24set%28kotlin.Int%2C+kotlin.ULong%29%2Findex&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="e62a1584079789f235cbabd8612798e3939dc325" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.ULongArray%24set(kotlin.Int,%20kotlin.ULong)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;set#kotlin.ULongArray%24set(kotlin.Int,%20kotlin.ULong)/index&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="c204bddc743f17a6a83f3273732caa9abcce98a1" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.UShortArray%24set%28kotlin.Int%2C+kotlin.UShort%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;set#kotlin.UShortArray%24set%28kotlin.Int%2C+kotlin.UShort%29%2Findex&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="0fe9e7ed96bb0f5a9326e0294c5697a26a4745c9" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set#kotlin.UShortArray%24set(kotlin.Int,%20kotlin.UShort)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this array, throws an &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">상기 중간 &lt;a href=&quot;set#kotlin.UShortArray%24set(kotlin.Int,%20kotlin.UShort)/index&quot;&gt;색인&lt;/a&gt; 이 배열의 범위 외에, 슬로우 &lt;a href=&quot;../-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;에서 IndexOutOfBoundsException&lt;/a&gt; 동작은 불특정 여기서 코 틀린 / JS 제외.</target>
        </trans-unit>
        <trans-unit id="fd938f2e10e2d0fb410305f424f6360cc9c56338" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;set-length#kotlin.text.StringBuilder%24setLength(kotlin.Int)/newLength&quot;&gt;newLength&lt;/a&gt; is less than the current length, it is changed to the specified &lt;a href=&quot;set-length#kotlin.text.StringBuilder%24setLength(kotlin.Int)/newLength&quot;&gt;newLength&lt;/a&gt;. Otherwise, null characters '\u0000' are appended to this string builder until its length is less than the &lt;a href=&quot;set-length#kotlin.text.StringBuilder%24setLength(kotlin.Int)/newLength&quot;&gt;newLength&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;set-length#kotlin.text.StringBuilder%24setLength(kotlin.Int)/newLength&quot;&gt;는 newLength가&lt;/a&gt; 현재 길이보다 작은, 그것은 지정된로 변경 &lt;a href=&quot;set-length#kotlin.text.StringBuilder%24setLength(kotlin.Int)/newLength&quot;&gt;는 newLength&lt;/a&gt; . 그렇지 않으면 길이가 &lt;a href=&quot;set-length#kotlin.text.StringBuilder%24setLength(kotlin.Int)/newLength&quot;&gt;newLength&lt;/a&gt; 보다 적을 때까지 널 문자 '\ u0000'이이 문자열 작성기에 추가 됩니다 .</target>
        </trans-unit>
        <trans-unit id="fd0d3eb59459a0737a168b08758efee370cf55de" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;suspend-coroutine-or-return#kotlin.coroutines.experimental.intrinsics%24suspendCoroutineOrReturn%28kotlin.Function1%28%28kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.intrinsics.suspendCoroutineOrReturn.T%29%29%2C+kotlin.Any%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; returns the special &lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d#kotlin.coroutines.experimental.intrinsics%24COROUTINE_SUSPENDED&quot;&gt;COROUTINE_SUSPENDED&lt;/a&gt; value, it means that suspend function did suspend the execution and will not return any result immediately. In this case, the &lt;a href=&quot;../kotlin.coroutines.experimental/-continuation/index&quot;&gt;Continuation&lt;/a&gt; provided to the &lt;a href=&quot;suspend-coroutine-or-return#kotlin.coroutines.experimental.intrinsics%24suspendCoroutineOrReturn%28kotlin.Function1%28%28kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.intrinsics.suspendCoroutineOrReturn.T%29%29%2C+kotlin.Any%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; shall be invoked at some moment in the future when the result becomes available to resume the computation.</source>
          <target state="translated">는 IF &lt;a href=&quot;suspend-coroutine-or-return#kotlin.coroutines.experimental.intrinsics%24suspendCoroutineOrReturn%28kotlin.Function1%28%28kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.intrinsics.suspendCoroutineOrReturn.T%29%29%2C+kotlin.Any%29%29%29%2Fblock&quot;&gt;블록이&lt;/a&gt; 특별한 반환 &lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d#kotlin.coroutines.experimental.intrinsics%24COROUTINE_SUSPENDED&quot;&gt;COROUTINE_SUSPENDED&lt;/a&gt; 값을, 기능을 중지 그것은 수단은 실행을 중단했고, 즉시 결과를 반환하지 않습니다. 이 경우, &lt;a href=&quot;../kotlin.coroutines.experimental/-continuation/index&quot;&gt;Continuation&lt;/a&gt; 이 &lt;a href=&quot;suspend-coroutine-or-return#kotlin.coroutines.experimental.intrinsics%24suspendCoroutineOrReturn%28kotlin.Function1%28%28kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.intrinsics.suspendCoroutineOrReturn.T%29%29%2C+kotlin.Any%29%29%29%2Fblock&quot;&gt;블록에&lt;/a&gt; 제공되었습니다. 은 나중에 결과가 계산을 재개 할 수있게 될 때 언젠가 호출되어야한다.</target>
        </trans-unit>
        <trans-unit id="05d3b99631a5ed6456bedf676a61766834d5fac4" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;suspend-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24suspendCoroutineUninterceptedOrReturn%28kotlin.Function1%28%28kotlin.coroutines.Continuation%28%28kotlin.coroutines.intrinsics.suspendCoroutineUninterceptedOrReturn.T%29%29%2C+kotlin.Any%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; returns the special &lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d&quot;&gt;COROUTINE_SUSPENDED&lt;/a&gt; value, it means that suspend function did suspend the execution and will not return any result immediately. In this case, the &lt;a href=&quot;../kotlin.coroutines/-continuation/index&quot;&gt;Continuation&lt;/a&gt; provided to the &lt;a href=&quot;suspend-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24suspendCoroutineUninterceptedOrReturn%28kotlin.Function1%28%28kotlin.coroutines.Continuation%28%28kotlin.coroutines.intrinsics.suspendCoroutineUninterceptedOrReturn.T%29%29%2C+kotlin.Any%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; shall be resumed by invoking &lt;a href=&quot;../kotlin.coroutines/-continuation/resume-with&quot;&gt;Continuation.resumeWith&lt;/a&gt; at some moment in the future when the result becomes available to resume the computation.</source>
          <target state="translated">는 IF &lt;a href=&quot;suspend-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24suspendCoroutineUninterceptedOrReturn%28kotlin.Function1%28%28kotlin.coroutines.Continuation%28%28kotlin.coroutines.intrinsics.suspendCoroutineUninterceptedOrReturn.T%29%29%2C+kotlin.Any%29%29%29%2Fblock&quot;&gt;블록이&lt;/a&gt; 특별한 반환 &lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d&quot;&gt;COROUTINE_SUSPENDED&lt;/a&gt; 값을, 기능을 중지 그것은 수단은 실행을 중단했고, 즉시 결과를 반환하지 않습니다. 이 경우, &lt;a href=&quot;../kotlin.coroutines/-continuation/index&quot;&gt;연속&lt;/a&gt; 받는 제공된 &lt;a href=&quot;suspend-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24suspendCoroutineUninterceptedOrReturn%28kotlin.Function1%28%28kotlin.coroutines.Continuation%28%28kotlin.coroutines.intrinsics.suspendCoroutineUninterceptedOrReturn.T%29%29%2C+kotlin.Any%29%29%29%2Fblock&quot;&gt;블록&lt;/a&gt; 호출 재개한다 &lt;a href=&quot;../kotlin.coroutines/-continuation/resume-with&quot;&gt;Continuation.resumeWith을&lt;/a&gt; 결과의 계산을 재개 할 수있게되면 미래의 어떤 순간.</target>
        </trans-unit>
        <trans-unit id="ef7f7d6c898b2802fb6d15ca777d3c99d22a1440" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;suspend-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24suspendCoroutineUninterceptedOrReturn(kotlin.Function1((kotlin.coroutines.Continuation((kotlin.coroutines.intrinsics.suspendCoroutineUninterceptedOrReturn.T)),%20kotlin.Any?)))/block&quot;&gt;block&lt;/a&gt; returns the special &lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d&quot;&gt;COROUTINE_SUSPENDED&lt;/a&gt; value, it means that suspend function did suspend the execution and will not return any result immediately. In this case, the &lt;a href=&quot;../kotlin.coroutines/-continuation/index&quot;&gt;Continuation&lt;/a&gt; provided to the &lt;a href=&quot;suspend-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24suspendCoroutineUninterceptedOrReturn(kotlin.Function1((kotlin.coroutines.Continuation((kotlin.coroutines.intrinsics.suspendCoroutineUninterceptedOrReturn.T)),%20kotlin.Any?)))/block&quot;&gt;block&lt;/a&gt; shall be resumed by invoking &lt;a href=&quot;../kotlin.coroutines/-continuation/resume-with&quot;&gt;Continuation.resumeWith&lt;/a&gt; at some moment in the future when the result becomes available to resume the computation.</source>
          <target state="translated">는 IF &lt;a href=&quot;suspend-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24suspendCoroutineUninterceptedOrReturn(kotlin.Function1((kotlin.coroutines.Continuation((kotlin.coroutines.intrinsics.suspendCoroutineUninterceptedOrReturn.T)),%20kotlin.Any?)))/block&quot;&gt;블록이&lt;/a&gt; 특별한 반환 &lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d&quot;&gt;COROUTINE_SUSPENDED&lt;/a&gt; 값을, 기능을 중지 그것은 수단은 실행을 중단했고, 즉시 결과를 반환하지 않습니다. 이 경우, &lt;a href=&quot;../kotlin.coroutines/-continuation/index&quot;&gt;연속&lt;/a&gt; 받는 제공된 &lt;a href=&quot;suspend-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24suspendCoroutineUninterceptedOrReturn(kotlin.Function1((kotlin.coroutines.Continuation((kotlin.coroutines.intrinsics.suspendCoroutineUninterceptedOrReturn.T)),%20kotlin.Any?)))/block&quot;&gt;블록&lt;/a&gt; 호출 재개한다 &lt;a href=&quot;../kotlin.coroutines/-continuation/resume-with&quot;&gt;Continuation.resumeWith을&lt;/a&gt; 결과의 계산을 재개 할 수있게되면 미래의 어떤 순간.</target>
        </trans-unit>
        <trans-unit id="8c3e8a5ebbcd7a703e634eecad27bcd0557ad20c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;until#kotlin.ranges%24until%28kotlin.Int%2C+kotlin.Byte%29%2Fto&quot;&gt;to&lt;/a&gt; value is less than or equal to &lt;code&gt;this&lt;/code&gt; value, then the returned range is empty.</source>
          <target state="translated">경우] &lt;a href=&quot;until#kotlin.ranges%24until%28kotlin.Int%2C+kotlin.Byte%29%2Fto&quot;&gt;에&lt;/a&gt; 값보다 작거나 같은 &lt;code&gt;this&lt;/code&gt; 값을 다음 반환 범위는 비어있다.</target>
        </trans-unit>
        <trans-unit id="fc10efd6ed805281fe18f00e48398e62a4bc01b4" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;until#kotlin.ranges%24until(kotlin.Int,%20kotlin.Byte)/to&quot;&gt;to&lt;/a&gt; value is less than or equal to &lt;code&gt;this&lt;/code&gt; value, then the returned range is empty.</source>
          <target state="translated">경우] &lt;a href=&quot;until#kotlin.ranges%24until(kotlin.Int,%20kotlin.Byte)/to&quot;&gt;에&lt;/a&gt; 값보다 작거나 같은 &lt;code&gt;this&lt;/code&gt; 값을 다음 반환 범위는 비어있다.</target>
        </trans-unit>
        <trans-unit id="5345ec6188f99db607179fac5ae96cec3bb7c52f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;@Nonnull(when = ...)&lt;/code&gt; value is &lt;code&gt;When.ALWAYS&lt;/code&gt;, the annotated type is treated as non-null; &lt;code&gt;When.MAYBE&lt;/code&gt; and &lt;code&gt;When.NEVER&lt;/code&gt; denote a nullable type; and &lt;code&gt;When.UNKNOWN&lt;/code&gt; forces the type to be &lt;a href=&quot;#null-safety-and-platform-types&quot;&gt;platform one&lt;/a&gt;.</source>
          <target state="translated">경우] &lt;code&gt;@Nonnull(when = ...)&lt;/code&gt; 값이 &lt;code&gt;When.ALWAYS&lt;/code&gt; , 주석 타입은 비 - 널로서 취급되고 &lt;code&gt;When.MAYBE&lt;/code&gt; 및 &lt;code&gt;When.NEVER&lt;/code&gt; 는 널 입력 가능 유형을 나타냅니다. 그리고 &lt;code&gt;When.UNKNOWN&lt;/code&gt; 은 타입을 &lt;a href=&quot;#null-safety-and-platform-types&quot;&gt;플랫폼 1로&lt;/a&gt; 만듭니다.</target>
        </trans-unit>
        <trans-unit id="1ab41cb28f87df4bf85af33067d923e82cb67834" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;value&lt;/code&gt; argument in Java has an array type, it becomes a &lt;code&gt;vararg&lt;/code&gt; parameter in Kotlin:</source>
          <target state="translated">Java 의 &lt;code&gt;value&lt;/code&gt; 인수에 배열 유형이 있으면 Kotlin에서 &lt;code&gt;vararg&lt;/code&gt; 매개 변수가됩니다.</target>
        </trans-unit>
        <trans-unit id="c6ef38c717fdd1e4d50094959ff3c7a5a376b3eb" translate="yes" xml:space="preserve">
          <source>If the Java class has multiple methods taking functional interfaces, you can choose the one you need to call by using an adapter function that converts a lambda to a specific SAM type. Those adapter functions are also generated by the compiler when needed:</source>
          <target state="translated">Java 클래스에 기능 인터페이스를 사용하는 여러 메소드가있는 경우 람다를 특정 SAM 유형으로 변환하는 어댑터 함수를 사용하여 호출해야하는 메소드를 선택할 수 있습니다. 이러한 어댑터 기능은 필요할 때 컴파일러에서 생성합니다.</target>
        </trans-unit>
        <trans-unit id="ced4c8b1c0812e2f37b8f765b9bf671545680b65" translate="yes" xml:space="preserve">
          <source>If the array contains multiple elements equal to the specified &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+java.util.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt;, there is no guarantee which one will be found.</source>
          <target state="translated">배열에 지정된 &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+java.util.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; 와 동일한 요소가 여러 개 포함되어 있으면 어떤 요소를 찾을 지 보장 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6466c3976ded360fb3b54d0482a0da85fa3ffd46" translate="yes" xml:space="preserve">
          <source>If the array contains multiple elements equal to the specified &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt;, there is no guarantee which one will be found.</source>
          <target state="translated">배열에 지정된 &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; 와 동일한 요소가 여러 개 포함되어 있으면 어떤 요소를 찾을 지 보장 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d5cf73d9390119493522582bc92cc73759f93e8a" translate="yes" xml:space="preserve">
          <source>If the array contains multiple elements equal to the specified &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20java.util.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt;, there is no guarantee which one will be found.</source>
          <target state="translated">배열에 지정된 &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20java.util.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; 와 동일한 요소가 여러 개 포함되어있는 경우 어떤 요소를 찾을 지 보장 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2bd4827f31d12e8989eabcece2a2e85f2897dbd2" translate="yes" xml:space="preserve">
          <source>If the array contains multiple elements equal to the specified &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt;, there is no guarantee which one will be found.</source>
          <target state="translated">배열에 지정된 &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; 와 동일한 요소가 여러 개 포함되어있는 경우 어떤 요소를 찾을 지 보장 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="857a406fa492096552a539094a05e74a8ae0e4fe" translate="yes" xml:space="preserve">
          <source>If the backing storage of this string builder is larger than necessary to hold its current contents, then it may be resized to become more space efficient. Calling this method may, but is not required to, affect the value of the &lt;a href=&quot;capacity#kotlin.text.StringBuilder%24capacity()&quot;&gt;capacity&lt;/a&gt; property.</source>
          <target state="translated">이 문자열 작성기의 백업 저장소가 현재 콘텐츠를 유지하는 데 필요한 것보다 큰 경우 공간 효율성을 높이기 위해 크기를 조정할 수 있습니다. 이 메서드를 호출하면 &lt;a href=&quot;capacity#kotlin.text.StringBuilder%24capacity()&quot;&gt;용량&lt;/a&gt; 속성 값에 영향을 줄 수 있지만 반드시 필요한 것은 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="fa8581b13c8fdd01f13e98c50d4e7d29550396fc" translate="yes" xml:space="preserve">
          <source>If the behavior for a certain platform needs to be modified, you can use a format like &lt;code&gt;compilerOpts.osx&lt;/code&gt; or &lt;code&gt;compilerOpts.linux&lt;/code&gt; to provide platform-specific values to the options.</source>
          <target state="translated">특정 플랫폼의 동작을 수정해야하는 경우 &lt;code&gt;compilerOpts.osx&lt;/code&gt; 또는 &lt;code&gt;compilerOpts.linux&lt;/code&gt; 와 같은 형식을 사용 하여 옵션에 플랫폼 별 값을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="996cca3563bf26540aaf4288dff8af8f84e60dcc" translate="yes" xml:space="preserve">
          <source>If the callback doesn't run in the main thread, it is mandatory to init the &lt;em&gt;Kotlin/Native&lt;/em&gt; runtime by calling &lt;code&gt;kotlin.native.initRuntimeIfNeeded()&lt;/code&gt;.</source>
          <target state="translated">콜백이 메인 스레드에서 실행되지 않으면 &lt;code&gt;kotlin.native.initRuntimeIfNeeded()&lt;/code&gt; 를 호출 하여 &lt;em&gt;Kotlin / Native&lt;/em&gt; 런타임 을 초기화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="71e01fbddfaf8e865fcef95f03a855f99eabb469" translate="yes" xml:space="preserve">
          <source>If the class (or any of its superclasses) is annotated with &lt;code&gt;com.my.Annotation&lt;/code&gt;, the class itself and all its members will become open.</source>
          <target state="translated">클래스 (또는 그 수퍼 클래스)에 &lt;code&gt;com.my.Annotation&lt;/code&gt; 으로 주석을 달면 클래스 자체와 모든 멤버가 열립니다.</target>
        </trans-unit>
        <trans-unit id="1d6fb5abda1df282cf7b793af04d339e6c8b07ca" translate="yes" xml:space="preserve">
          <source>If the class has a primary constructor, each secondary constructor needs to delegate to the primary constructor, either directly or indirectly through another secondary constructor(s). Delegation to another constructor of the same class is done using the &lt;em&gt;this&lt;/em&gt; keyword:</source>
          <target state="translated">클래스에 기본 생성자가 있으면 각 보조 생성자는 다른 보조 생성자를 통해 직접 또는 간접적으로 기본 생성자에게 위임해야합니다. 같은 클래스의 다른 생성자에 대한 위임은 &lt;em&gt;this&lt;/em&gt; 키워드를 사용하여 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="1becbc997c1b9834ca68a14f7454678bc5ce31a3" translate="yes" xml:space="preserve">
          <source>If the classes represent &lt;a href=&quot;../../kotlin/-array/index#kotlin.Array&quot;&gt;Array&lt;/a&gt;, then &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/lang/Class.html&quot;&gt;Class&lt;/a&gt; objects of their element types are equal.</source>
          <target state="translated">수업이 나타내는 경우 &lt;a href=&quot;../../kotlin/-array/index#kotlin.Array&quot;&gt;배열을&lt;/a&gt; , 다음 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/lang/Class.html&quot;&gt;클래스는&lt;/a&gt; 자신의 요소 유형이 동일의 객체.</target>
        </trans-unit>
        <trans-unit id="77b2beaaa166a8ca8a0f2117bf08b50328d632d2" translate="yes" xml:space="preserve">
          <source>If the classes represent &lt;a href=&quot;../../kotlin/-array/index#kotlin.Array&quot;&gt;Array&lt;/a&gt;, then &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html&quot;&gt;Class&lt;/a&gt; objects of their element types are equal.</source>
          <target state="translated">수업이 나타내는 경우 &lt;a href=&quot;../../kotlin/-array/index#kotlin.Array&quot;&gt;배열을&lt;/a&gt; , 다음 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html&quot;&gt;클래스는&lt;/a&gt; 자신의 요소 유형이 동일의 객체.</target>
        </trans-unit>
        <trans-unit id="944291945314272d9d50e4311dd336ba21bad448" translate="yes" xml:space="preserve">
          <source>If the classes represent Array, then Class objects of their element types are equal.</source>
          <target state="translated">클래스가 Array를 나타내는 경우, 해당 요소 유형의 Class 오브젝트는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="79031f7fd8baac9875032a654d3a81aa8ce76daf" translate="yes" xml:space="preserve">
          <source>If the code block contains a single function with &lt;code&gt;it&lt;/code&gt; as an argument, you can use the method reference (&lt;code&gt;::&lt;/code&gt;) instead of the lambda:</source>
          <target state="translated">코드 블록은 단일 기능이 포함되어있는 경우 &lt;code&gt;it&lt;/code&gt; 인수로를, 당신은 방법 참조 (사용할 수 있습니다 &lt;code&gt;::&lt;/code&gt; 대신 람다의) :</target>
        </trans-unit>
        <trans-unit id="d97d691977b15199380af830d5ad236bbf75524c" translate="yes" xml:space="preserve">
          <source>If the collection could be huge, you can specify a non-negative value of &lt;a href=&quot;join-to#kotlin.collections%24joinTo%28kotlin.Array%28%28kotlin.collections.joinTo.T%29%29%2C+kotlin.collections.joinTo.A%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinTo.T%2C+kotlin.CharSequence%29%29%29%2Flimit&quot;&gt;limit&lt;/a&gt;, in which case only the first &lt;a href=&quot;join-to#kotlin.collections%24joinTo%28kotlin.Array%28%28kotlin.collections.joinTo.T%29%29%2C+kotlin.collections.joinTo.A%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinTo.T%2C+kotlin.CharSequence%29%29%29%2Flimit&quot;&gt;limit&lt;/a&gt; elements will be appended, followed by the &lt;a href=&quot;join-to#kotlin.collections%24joinTo%28kotlin.Array%28%28kotlin.collections.joinTo.T%29%29%2C+kotlin.collections.joinTo.A%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinTo.T%2C+kotlin.CharSequence%29%29%29%2Ftruncated&quot;&gt;truncated&lt;/a&gt; string (which defaults to &quot;...&quot;).</source>
          <target state="translated">컬렉션이 클 수 있는 경우 음이 아닌 값 &lt;a href=&quot;join-to#kotlin.collections%24joinTo%28kotlin.Array%28%28kotlin.collections.joinTo.T%29%29%2C+kotlin.collections.joinTo.A%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinTo.T%2C+kotlin.CharSequence%29%29%29%2Flimit&quot;&gt;limit을&lt;/a&gt; 지정할 수 있습니다 .이 경우 첫 번째 &lt;a href=&quot;join-to#kotlin.collections%24joinTo%28kotlin.Array%28%28kotlin.collections.joinTo.T%29%29%2C+kotlin.collections.joinTo.A%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinTo.T%2C+kotlin.CharSequence%29%29%29%2Flimit&quot;&gt;제한&lt;/a&gt; 요소 만 추가되고 &lt;a href=&quot;join-to#kotlin.collections%24joinTo%28kotlin.Array%28%28kotlin.collections.joinTo.T%29%29%2C+kotlin.collections.joinTo.A%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinTo.T%2C+kotlin.CharSequence%29%29%29%2Ftruncated&quot;&gt;잘린&lt;/a&gt; 문자열 (기본값은 &quot;...&quot;)이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="e8468dd252fe0ffd6b4a3af71f464889fa3a1a39" translate="yes" xml:space="preserve">
          <source>If the collection could be huge, you can specify a non-negative value of &lt;a href=&quot;join-to#kotlin.collections%24joinTo(kotlin.Array((kotlin.collections.joinTo.T)),%20kotlin.collections.joinTo.A,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinTo.T,%20kotlin.CharSequence)))/limit&quot;&gt;limit&lt;/a&gt;, in which case only the first &lt;a href=&quot;join-to#kotlin.collections%24joinTo(kotlin.Array((kotlin.collections.joinTo.T)),%20kotlin.collections.joinTo.A,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinTo.T,%20kotlin.CharSequence)))/limit&quot;&gt;limit&lt;/a&gt; elements will be appended, followed by the &lt;a href=&quot;join-to#kotlin.collections%24joinTo(kotlin.Array((kotlin.collections.joinTo.T)),%20kotlin.collections.joinTo.A,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinTo.T,%20kotlin.CharSequence)))/truncated&quot;&gt;truncated&lt;/a&gt; string (which defaults to &quot;...&quot;).</source>
          <target state="translated">컬렉션이 거대 할 수 있는 경우 &lt;a href=&quot;join-to#kotlin.collections%24joinTo(kotlin.Array((kotlin.collections.joinTo.T)),%20kotlin.collections.joinTo.A,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinTo.T,%20kotlin.CharSequence)))/limit&quot;&gt;limit의&lt;/a&gt; 음이 아닌 값을 지정할 수 있습니다 .이 경우 첫 번째 &lt;a href=&quot;join-to#kotlin.collections%24joinTo(kotlin.Array((kotlin.collections.joinTo.T)),%20kotlin.collections.joinTo.A,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinTo.T,%20kotlin.CharSequence)))/limit&quot;&gt;제한&lt;/a&gt; 요소 만 추가되고 그 뒤에 &lt;a href=&quot;join-to#kotlin.collections%24joinTo(kotlin.Array((kotlin.collections.joinTo.T)),%20kotlin.collections.joinTo.A,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinTo.T,%20kotlin.CharSequence)))/truncated&quot;&gt;잘린&lt;/a&gt; 문자열 (기본값은 &quot;...&quot;)이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="8f5b1dc0c41182773d56507020b349e5e7ed653a" translate="yes" xml:space="preserve">
          <source>If the collection could be huge, you can specify a non-negative value of &lt;a href=&quot;join-to#kotlin.sequences%24joinTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinTo.T%29%29%2C+kotlin.sequences.joinTo.A%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinTo.T%2C+kotlin.CharSequence%29%29%29%2Flimit&quot;&gt;limit&lt;/a&gt;, in which case only the first &lt;a href=&quot;join-to#kotlin.sequences%24joinTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinTo.T%29%29%2C+kotlin.sequences.joinTo.A%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinTo.T%2C+kotlin.CharSequence%29%29%29%2Flimit&quot;&gt;limit&lt;/a&gt; elements will be appended, followed by the &lt;a href=&quot;join-to#kotlin.sequences%24joinTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinTo.T%29%29%2C+kotlin.sequences.joinTo.A%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinTo.T%2C+kotlin.CharSequence%29%29%29%2Ftruncated&quot;&gt;truncated&lt;/a&gt; string (which defaults to &quot;...&quot;).</source>
          <target state="translated">컬렉션이 클 수 있는 경우 음이 아닌 값 &lt;a href=&quot;join-to#kotlin.sequences%24joinTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinTo.T%29%29%2C+kotlin.sequences.joinTo.A%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinTo.T%2C+kotlin.CharSequence%29%29%29%2Flimit&quot;&gt;limit을&lt;/a&gt; 지정할 수 있습니다 .이 경우 첫 번째 &lt;a href=&quot;join-to#kotlin.sequences%24joinTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinTo.T%29%29%2C+kotlin.sequences.joinTo.A%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinTo.T%2C+kotlin.CharSequence%29%29%29%2Flimit&quot;&gt;제한&lt;/a&gt; 요소 만 추가되고 &lt;a href=&quot;join-to#kotlin.sequences%24joinTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinTo.T%29%29%2C+kotlin.sequences.joinTo.A%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinTo.T%2C+kotlin.CharSequence%29%29%29%2Ftruncated&quot;&gt;잘린&lt;/a&gt; 문자열 (기본값은 &quot;...&quot;)이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="08d4d8884be2c52559e13b59134a10b3b85cf098" translate="yes" xml:space="preserve">
          <source>If the collection could be huge, you can specify a non-negative value of &lt;a href=&quot;join-to#kotlin.sequences%24joinTo(kotlin.sequences.Sequence((kotlin.sequences.joinTo.T)),%20kotlin.sequences.joinTo.A,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.sequences.joinTo.T,%20kotlin.CharSequence)))/limit&quot;&gt;limit&lt;/a&gt;, in which case only the first &lt;a href=&quot;join-to#kotlin.sequences%24joinTo(kotlin.sequences.Sequence((kotlin.sequences.joinTo.T)),%20kotlin.sequences.joinTo.A,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.sequences.joinTo.T,%20kotlin.CharSequence)))/limit&quot;&gt;limit&lt;/a&gt; elements will be appended, followed by the &lt;a href=&quot;join-to#kotlin.sequences%24joinTo(kotlin.sequences.Sequence((kotlin.sequences.joinTo.T)),%20kotlin.sequences.joinTo.A,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.sequences.joinTo.T,%20kotlin.CharSequence)))/truncated&quot;&gt;truncated&lt;/a&gt; string (which defaults to &quot;...&quot;).</source>
          <target state="translated">컬렉션이 거대 할 수 있는 경우 &lt;a href=&quot;join-to#kotlin.sequences%24joinTo(kotlin.sequences.Sequence((kotlin.sequences.joinTo.T)),%20kotlin.sequences.joinTo.A,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.sequences.joinTo.T,%20kotlin.CharSequence)))/limit&quot;&gt;limit의&lt;/a&gt; 음이 아닌 값을 지정할 수 있습니다 .이 경우 첫 번째 &lt;a href=&quot;join-to#kotlin.sequences%24joinTo(kotlin.sequences.Sequence((kotlin.sequences.joinTo.T)),%20kotlin.sequences.joinTo.A,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.sequences.joinTo.T,%20kotlin.CharSequence)))/limit&quot;&gt;제한&lt;/a&gt; 요소 만 추가되고 그 뒤에 &lt;a href=&quot;join-to#kotlin.sequences%24joinTo(kotlin.sequences.Sequence((kotlin.sequences.joinTo.T)),%20kotlin.sequences.joinTo.A,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.sequences.joinTo.T,%20kotlin.CharSequence)))/truncated&quot;&gt;잘린&lt;/a&gt; 문자열 (기본값은 &quot;...&quot;)이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="9cb18d53f708d0c262ed97ec04392d87077ad40e" translate="yes" xml:space="preserve">
          <source>If the collection could be huge, you can specify a non-negative value of &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Flimit&quot;&gt;limit&lt;/a&gt;, in which case only the first &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Flimit&quot;&gt;limit&lt;/a&gt; elements will be appended, followed by the &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Ftruncated&quot;&gt;truncated&lt;/a&gt; string (which defaults to &quot;...&quot;).</source>
          <target state="translated">컬렉션이 클 수 있는 경우 음이 아닌 값 &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Flimit&quot;&gt;limit을&lt;/a&gt; 지정할 수 있습니다 .이 경우 첫 번째 &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Flimit&quot;&gt;제한&lt;/a&gt; 요소 만 추가되고 &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Ftruncated&quot;&gt;잘린&lt;/a&gt; 문자열 (기본값은 &quot;...&quot;)이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="1d93c35f86678bc28fc865390dd8cf2eb747038c" translate="yes" xml:space="preserve">
          <source>If the collection could be huge, you can specify a non-negative value of &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString(kotlin.Array((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/limit&quot;&gt;limit&lt;/a&gt;, in which case only the first &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString(kotlin.Array((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/limit&quot;&gt;limit&lt;/a&gt; elements will be appended, followed by the &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString(kotlin.Array((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/truncated&quot;&gt;truncated&lt;/a&gt; string (which defaults to &quot;...&quot;).</source>
          <target state="translated">컬렉션이 거대 할 수 있는 경우 &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString(kotlin.Array((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/limit&quot;&gt;limit의&lt;/a&gt; 음이 아닌 값을 지정할 수 있습니다 .이 경우 첫 번째 &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString(kotlin.Array((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/limit&quot;&gt;제한&lt;/a&gt; 요소 만 추가되고 그 뒤에 &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString(kotlin.Array((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/truncated&quot;&gt;잘린&lt;/a&gt; 문자열 (기본값은 &quot;...&quot;)이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="bbf01993f693a43b2b5c8b4e4105a26cb7dc269a" translate="yes" xml:space="preserve">
          <source>If the collection could be huge, you can specify a non-negative value of &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Flimit&quot;&gt;limit&lt;/a&gt;, in which case only the first &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Flimit&quot;&gt;limit&lt;/a&gt; elements will be appended, followed by the &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Ftruncated&quot;&gt;truncated&lt;/a&gt; string (which defaults to &quot;...&quot;).</source>
          <target state="translated">컬렉션이 클 수 있는 경우 음이 아닌 값 &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Flimit&quot;&gt;limit을&lt;/a&gt; 지정할 수 있습니다 .이 경우 첫 번째 &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Flimit&quot;&gt;제한&lt;/a&gt; 요소 만 추가되고 &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Ftruncated&quot;&gt;잘린&lt;/a&gt; 문자열 (기본값은 &quot;...&quot;)이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="9854e1b0b2258416f93294b380cf1572214c823f" translate="yes" xml:space="preserve">
          <source>If the collection could be huge, you can specify a non-negative value of &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString(kotlin.sequences.Sequence((kotlin.sequences.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.sequences.joinToString.T,%20kotlin.CharSequence)))/limit&quot;&gt;limit&lt;/a&gt;, in which case only the first &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString(kotlin.sequences.Sequence((kotlin.sequences.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.sequences.joinToString.T,%20kotlin.CharSequence)))/limit&quot;&gt;limit&lt;/a&gt; elements will be appended, followed by the &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString(kotlin.sequences.Sequence((kotlin.sequences.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.sequences.joinToString.T,%20kotlin.CharSequence)))/truncated&quot;&gt;truncated&lt;/a&gt; string (which defaults to &quot;...&quot;).</source>
          <target state="translated">컬렉션이 거대 할 수 있는 경우 &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString(kotlin.sequences.Sequence((kotlin.sequences.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.sequences.joinToString.T,%20kotlin.CharSequence)))/limit&quot;&gt;limit의&lt;/a&gt; 음이 아닌 값을 지정할 수 있습니다 .이 경우 첫 번째 &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString(kotlin.sequences.Sequence((kotlin.sequences.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.sequences.joinToString.T,%20kotlin.CharSequence)))/limit&quot;&gt;제한&lt;/a&gt; 요소 만 추가되고 그 뒤에 &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString(kotlin.sequences.Sequence((kotlin.sequences.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.sequences.joinToString.T,%20kotlin.CharSequence)))/truncated&quot;&gt;잘린&lt;/a&gt; 문자열 (기본값은 &quot;...&quot;)이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="da05b4ffa7db8223c058fb5dd70605340f6d4abf" translate="yes" xml:space="preserve">
          <source>If the compiler can figure the signature out itself, it is allowed not to declare the only parameter and omit &lt;code&gt;-&amp;gt;&lt;/code&gt;. The parameter will be implicitly declared under the name &lt;code&gt;it&lt;/code&gt;:</source>
          <target state="translated">컴파일러가 서명 자체를 알아낼 수있는 경우 유일한 매개 변수를 선언하고 생략 할 수 없습니다 &lt;code&gt;-&amp;gt;&lt;/code&gt; . 매개 변수는 암시 적으로 이름으로 선언합니다 &lt;code&gt;it&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="599643b28c2249744c642d762df9eef25c3f1489" translate="yes" xml:space="preserve">
          <source>If the condition of an &lt;code&gt;if&lt;/code&gt; or &lt;code&gt;when&lt;/code&gt; statement is multiline, always use curly braces around the body of the statement. Indent each subsequent line of the condition by 4 spaces relative to statement begin. Put the closing parentheses of the condition together with the opening curly brace on a separate line:</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 또는 &lt;code&gt;when&lt;/code&gt; 문의 조건 이 여러 줄이면 항상 문장 본문 주위에 중괄호를 사용하십시오. 명령문 시작과 관련하여 조건의 각 후속 행을 4 칸씩 들여 씁니다. 조건의 닫는 괄호를 여는 중괄호와 함께 별도의 줄에 넣으십시오.</target>
        </trans-unit>
        <trans-unit id="98f9b69afd4c5b26ac6e15a0b936fff143ad40e0" translate="yes" xml:space="preserve">
          <source>If the condition of an &lt;code&gt;if&lt;/code&gt; or &lt;code&gt;when&lt;/code&gt; statement is multiline, always use curly braces around the body of the statement. Indent each subsequent line of the condition by four spaces relative to statement begin. Put the closing parentheses of the condition together with the opening curly brace on a separate line:</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 또는 &lt;code&gt;when&lt;/code&gt; 문의 조건 이 여러 줄이면 항상 문의 본문 주위에 중괄호를 사용합니다. 문 시작을 기준으로 조건의 각 후속 줄을 공백 4 개로 들여 씁니다. 조건의 닫는 괄호를 여는 중괄호와 함께 별도의 줄에 넣으십시오.</target>
        </trans-unit>
        <trans-unit id="2257c88010b27895c6524d9c1e2196bb7e536709" translate="yes" xml:space="preserve">
          <source>If the constructor has annotations or visibility modifiers, the &lt;em&gt;constructor&lt;/em&gt; keyword is required, and the modifiers go before it:</source>
          <target state="translated">생성자에 주석 또는 가시성 수정자가 있으면 &lt;em&gt;생성자&lt;/em&gt; 키워드가 필요하며 수정자는 그 앞에옵니다.</target>
        </trans-unit>
        <trans-unit id="8e6824b3ec6e98e5575247ecc8ff5b7a4046e476" translate="yes" xml:space="preserve">
          <source>If the corresponding binary function (i.e. &lt;code&gt;plus()&lt;/code&gt; for &lt;code&gt;plusAssign()&lt;/code&gt;) is available too, report error (ambiguity),</source>
          <target state="translated">(즉, 해당 이항 함수 경우 &lt;code&gt;plus()&lt;/code&gt; 에 대한 &lt;code&gt;plusAssign()&lt;/code&gt; )도 가능하며, 보고서 오류 (모호성)</target>
        </trans-unit>
        <trans-unit id="750feaab46d025f60b60595fd5b6464a238bc26d" translate="yes" xml:space="preserve">
          <source>If the current capacity is less than the &lt;a href=&quot;ensure-capacity#kotlin.text.StringBuilder%24ensureCapacity(kotlin.Int)/minimumCapacity&quot;&gt;minimumCapacity&lt;/a&gt;, a new backing storage is allocated with greater capacity. Otherwise, this method takes no action and simply returns.</source>
          <target state="translated">현재 용량이 &lt;a href=&quot;ensure-capacity#kotlin.text.StringBuilder%24ensureCapacity(kotlin.Int)/minimumCapacity&quot;&gt;minimumCapacity&lt;/a&gt; 보다 작 으면 새 백업 스토리지가 더 큰 용량으로 할당됩니다. 그렇지 않으면이 메서드는 아무 작업도 수행하지 않고 단순히 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3beb3ca0f76030c28cffd99a1ef390c7748ebe7c" translate="yes" xml:space="preserve">
          <source>If the derived class has a primary constructor, the base class can (and must) be initialized right there, using the parameters of the primary constructor.</source>
          <target state="translated">파생 클래스에 기본 생성자가 있으면 기본 생성자의 매개 변수를 사용하여 기본 클래스를 바로 초기화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="81ea87c7c846a5bc82b765d82616bbeeb4342e98" translate="yes" xml:space="preserve">
          <source>If the derived class has no primary constructor, then each secondary constructor has to initialize the base type using the &lt;em&gt;super&lt;/em&gt; keyword, or to delegate to another constructor which does that. Note that in this case different secondary constructors can call different constructors of the base type:</source>
          <target state="translated">파생 클래스에 기본 생성자가 없으면 각 보조 생성자는 &lt;em&gt;super&lt;/em&gt; 키워드를 사용하여 기본 유형을 초기화 하거나이를 수행하는 다른 생성자에게 위임해야합니다. 이 경우 다른 보조 생성자는 기본 유형의 다른 생성자를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4bdcd3a2cd6234626ea8fd7aebd3dff5dd746817" translate="yes" xml:space="preserve">
          <source>If the enum class defines any members, separate the enum constant definitions from the member definitions with a semicolon.</source>
          <target state="translated">열거 형 클래스가 멤버를 정의하는 경우 세미콜론으로 멤버 정의에서 열거 형 상수 정의를 분리합니다.</target>
        </trans-unit>
        <trans-unit id="4f83e9cb6ca713b30ca5975229637ad37ddf0b2e" translate="yes" xml:space="preserve">
          <source>If the expression to the left of &lt;code&gt;?:&lt;/code&gt; is not null, the elvis operator returns it, otherwise it returns the expression to the right. Note that the right-hand side expression is evaluated only if the left-hand side is null.</source>
          <target state="translated">&lt;code&gt;?:&lt;/code&gt; 의 왼쪽에있는 표현식 이 널이 아닌 경우 elvis 연산자는이를 리턴하고 그렇지 않으면 표현식을 오른쪽에 리턴합니다. 오른쪽 표현식은 왼쪽이 널인 경우에만 평가됩니다.</target>
        </trans-unit>
        <trans-unit id="435bd7ef9c1ca0e75781f37812da8cdd0434ce4a" translate="yes" xml:space="preserve">
          <source>If the file path given is just a file, walker iterates only it. If the file path given does not exist, walker iterates nothing, i.e. it's equivalent to an empty sequence.</source>
          <target state="translated">주어진 파일 경로가 단지 파일 인 경우, Walker는 해당 파일 경로 만 반복합니다. 주어진 파일 경로가 존재하지 않으면, Walker는 아무것도 반복하지 않습니다. 즉, 빈 시퀀스와 같습니다.</target>
        </trans-unit>
        <trans-unit id="341f4361aea5609d460e0b76db7e4ec05c60a0bb" translate="yes" xml:space="preserve">
          <source>If the function from the right column is available</source>
          <target state="translated">오른쪽 열의 기능을 사용할 수있는 경우</target>
        </trans-unit>
        <trans-unit id="baaa08a62689c9d8bfb298957d5ecaaa332cecf1" translate="yes" xml:space="preserve">
          <source>If the function has an expression body that doesn't fit in the same line as the declaration, put the &lt;code&gt;=&lt;/code&gt; sign on the first line. Indent the expression body by 4 spaces.</source>
          <target state="translated">함수에 선언과 같은 줄에 맞지 않는 표현식 본문이 있으면 첫 번째 줄에 &lt;code&gt;=&lt;/code&gt; 기호를 넣으십시오 . 표현식 본문을 4 칸 들여 쓰기하십시오.</target>
        </trans-unit>
        <trans-unit id="70135d84f18dddfdfe73a753ae1ea55edda69b5b" translate="yes" xml:space="preserve">
          <source>If the function has an expression body that doesn't fit in the same line as the declaration, put the &lt;code&gt;=&lt;/code&gt; sign on the first line. Indent the expression body by four spaces.</source>
          <target state="translated">함수에 선언과 같은 줄에 맞지 않는 식 본문이있는 경우 첫 줄에 &lt;code&gt;=&lt;/code&gt; 기호를 입력합니다. 식 본문을 공백 4 개로 들여 씁니다.</target>
        </trans-unit>
        <trans-unit id="29229e1e579d9295bd8f3ae80b55b98deb32a290" translate="yes" xml:space="preserve">
          <source>If the function is absent or ambiguous, it is a compilation error;</source>
          <target state="translated">함수가 없거나 모호한 경우 컴파일 오류입니다.</target>
        </trans-unit>
        <trans-unit id="6df6274a785959a141d5be93cbbade7433fe3f26" translate="yes" xml:space="preserve">
          <source>If the function is present and its return type is &lt;code&gt;R&lt;/code&gt;, the expression &lt;code&gt;+a&lt;/code&gt; has type &lt;code&gt;R&lt;/code&gt;;</source>
          <target state="translated">함수가 존재하고 리턴 유형이 &lt;code&gt;R&lt;/code&gt; 이면 표현식 &lt;code&gt;+a&lt;/code&gt; 는 &lt;code&gt;R&lt;/code&gt; 을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="0e5095d3d7b34d609b680d7fa5506874cf55c9e5" translate="yes" xml:space="preserve">
          <source>If the function signature doesn't fit on a single line, use the following syntax:</source>
          <target state="translated">함수 서명이 한 줄에 맞지 않으면 다음 구문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="da5a14c8b54552ea732a4d4e6142a3943b4cd96d" translate="yes" xml:space="preserve">
          <source>If the group in the regular expression is optional and there were no match captured by that group, corresponding component value is an empty string.</source>
          <target state="translated">정규식의 그룹이 선택적이고 해당 그룹에서 일치하는 항목이없는 경우 해당 구성 요소 값은 빈 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="d430ff9c1ba01bf9a8c783998530df052f55721e" translate="yes" xml:space="preserve">
          <source>If the group in the regular expression is optional and there were no match captured by that group, corresponding item in &lt;a href=&quot;group-values&quot;&gt;groupValues&lt;/a&gt; is an empty string.</source>
          <target state="translated">정규식의 그룹이 선택적이고 해당 그룹에서 일치하는 항목이없는 경우 &lt;a href=&quot;group-values&quot;&gt;groupValues의&lt;/a&gt; 해당 항목 은 빈 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="643fa02b9a8df93d52958425162d28c0e98f33e6" translate="yes" xml:space="preserve">
          <source>If the initialization of a value throws an exception, it will attempt to reinitialize the value at next access.</source>
          <target state="translated">값의 초기화에서 예외가 발생하면 다음에 액세스 할 때 값을 다시 초기화하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="70f53db00bc0a33bccdcb28704c5331a818e66f8" translate="yes" xml:space="preserve">
          <source>If the innermost applied &lt;code&gt;@JvmSuppressWildcards&lt;/code&gt; has &lt;code&gt;suppress=true&lt;/code&gt;, the type is generated without wildcards. If the innermost applied &lt;code&gt;@JvmSuppressWildcards&lt;/code&gt; has &lt;code&gt;suppress=false&lt;/code&gt;, the type is generated with wildcards.</source>
          <target state="translated">가장 안쪽에 적용된 &lt;code&gt;@JvmSuppressWildcards&lt;/code&gt; 에 &lt;code&gt;suppress=true&lt;/code&gt; 가 있으면 유형은 와일드 카드없이 생성됩니다. 가장 안쪽에 적용된 &lt;code&gt;@JvmSuppressWildcards&lt;/code&gt; 에 &lt;code&gt;suppress=false&lt;/code&gt; 가있는 경우 유형은 와일드 카드로 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="eee51b4527104383bc254754abf4668fd83fd300" translate="yes" xml:space="preserve">
          <source>If the lambda is the only argument to that call, the parentheses can be omitted entirely:</source>
          <target state="translated">람다가 해당 호출에 대한 유일한 인수 인 경우 괄호를 완전히 생략 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1de53ed9727d06b3c7bd0607d6d4643e9b89c9f3" translate="yes" xml:space="preserve">
          <source>If the lambda parameter is unused, you can place an underscore instead of its name:</source>
          <target state="translated">lambda 매개 변수를 사용하지 않으면 이름 대신 밑줄을 넣을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9c6142f7e98803bfddded146b81383e4a0f40e4" translate="yes" xml:space="preserve">
          <source>If the last argument after default parameters is a &lt;a href=&quot;lambdas#lambda-expression-syntax&quot;&gt;lambda&lt;/a&gt;, it can be passed in either as a named argument or &lt;a href=&quot;lambdas#passing-a-lambda-to-the-last-parameter&quot;&gt;outside the parentheses&lt;/a&gt;:</source>
          <target state="translated">기본 매개 변수 다음의 마지막 인수가 &lt;a href=&quot;lambdas#lambda-expression-syntax&quot;&gt;lambda&lt;/a&gt; 인 경우 명명 된 인수 또는 &lt;a href=&quot;lambdas#passing-a-lambda-to-the-last-parameter&quot;&gt;괄호 외부&lt;/a&gt; 로 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="228e14748a5781e0c8dfea5c0e0f424d49c4dd7a" translate="yes" xml:space="preserve">
          <source>If the last argument after default parameters is a &lt;a href=&quot;lambdas#lambda-expression-syntax&quot;&gt;lambda&lt;/a&gt;, you can pass it either as a named argument or &lt;a href=&quot;lambdas#passing-a-lambda-to-the-last-parameter&quot;&gt;outside the parentheses&lt;/a&gt;:</source>
          <target state="translated">기본 매개 변수 뒤의 마지막 인수가 &lt;a href=&quot;lambdas#lambda-expression-syntax&quot;&gt;람다&lt;/a&gt; 인 경우 명명 된 인수로 전달하거나 &lt;a href=&quot;lambdas#passing-a-lambda-to-the-last-parameter&quot;&gt;괄호 외부에&lt;/a&gt; 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bc94874fad8d6a3f9e943d1975b7337b73e5e96a" translate="yes" xml:space="preserve">
          <source>If the list contains multiple elements equal to the specified &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt;, there is no guarantee which one will be found.</source>
          <target state="translated">목록에 지정된 &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; 와 동일한 요소가 여러 개 포함 된 경우 어떤 요소를 찾을 지 보장 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="283094cd40b3e90a305fdcb2b91ad3b0c2c41453" translate="yes" xml:space="preserve">
          <source>If the list contains multiple elements equal to the specified &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt;, there is no guarantee which one will be found.</source>
          <target state="translated">목록에 지정된 &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; 와 동일한 요소가 여러 개 포함 된 경우 어떤 요소를 찾을 지 보장 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="791c40d36929cc71b9e4bc35ccf6279a3a20c0ac" translate="yes" xml:space="preserve">
          <source>If the list contains multiple elements equal to the specified &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt;, there is no guarantee which one will be found.</source>
          <target state="translated">목록에 지정된 &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;요소&lt;/a&gt; 와 동일한 요소가 여러 개 포함되어있는 경우 어떤 요소를 찾을 지 보장 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="44a57d6c0b8b204d89d02d382bc44b25184c5e7e" translate="yes" xml:space="preserve">
          <source>If the list contains multiple elements equal to the specified &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T?)),%20kotlin.collections.binarySearch.T?,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt;, there is no guarantee which one will be found.</source>
          <target state="translated">목록에 지정된 &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T?)),%20kotlin.collections.binarySearch.T?,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;요소&lt;/a&gt; 와 동일한 요소가 여러 개 포함되어있는 경우 어떤 요소를 찾을 지 보장 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="79a654f17dffc6680bd32da28acb61ad45511a3b" translate="yes" xml:space="preserve">
          <source>If the list contains multiple elements for which &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearch.T%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt; returns zero, there is no guarantee which one will be found.</source>
          <target state="translated">&lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearch.T%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;비교에&lt;/a&gt; 0을 반환 하는 여러 요소가 목록에 포함되어 있으면 어떤 요소를 찾을 지 보장 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="196e625da9b2a4c97eb60bc8e8aa4a4acff994c2" translate="yes" xml:space="preserve">
          <source>If the list contains multiple elements for which &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearch.T,%20kotlin.Int)))/comparison&quot;&gt;comparison&lt;/a&gt; returns zero, there is no guarantee which one will be found.</source>
          <target state="translated">목록에 &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearch.T,%20kotlin.Int)))/comparison&quot;&gt;비교&lt;/a&gt; 가 0을 반환 하는 여러 요소가 포함 된 경우 어떤 요소를 찾을 지 보장 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="3c27e8d39625b1f210692fb3e472e2e70d219112" translate="yes" xml:space="preserve">
          <source>If the list contains multiple elements with the specified &lt;a href=&quot;binary-search-by#kotlin.collections%24binarySearchBy%28kotlin.collections.List%28%28kotlin.collections.binarySearchBy.T%29%29%2C+kotlin.collections.binarySearchBy.K%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearchBy.T%2C+kotlin.collections.binarySearchBy.K%29%29%29%2Fkey&quot;&gt;key&lt;/a&gt;, there is no guarantee which one will be found.</source>
          <target state="translated">목록에 지정된 &lt;a href=&quot;binary-search-by#kotlin.collections%24binarySearchBy%28kotlin.collections.List%28%28kotlin.collections.binarySearchBy.T%29%29%2C+kotlin.collections.binarySearchBy.K%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearchBy.T%2C+kotlin.collections.binarySearchBy.K%29%29%29%2Fkey&quot;&gt;key를&lt;/a&gt; 가진 여러 요소가 포함되어 있으면 어떤 요소를 찾을 수 있는지 보장 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="954563aad1a60c6b8d078907859e9fc7093c613a" translate="yes" xml:space="preserve">
          <source>If the list contains multiple elements with the specified &lt;a href=&quot;binary-search-by#kotlin.collections%24binarySearchBy(kotlin.collections.List((kotlin.collections.binarySearchBy.T)),%20kotlin.collections.binarySearchBy.K?,%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearchBy.T,%20kotlin.collections.binarySearchBy.K?)))/key&quot;&gt;key&lt;/a&gt;, there is no guarantee which one will be found.</source>
          <target state="translated">목록에 지정된 &lt;a href=&quot;binary-search-by#kotlin.collections%24binarySearchBy(kotlin.collections.List((kotlin.collections.binarySearchBy.T)),%20kotlin.collections.binarySearchBy.K?,%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearchBy.T,%20kotlin.collections.binarySearchBy.K?)))/key&quot;&gt;key&lt;/a&gt; 가있는 여러 요소가 포함 된 경우 어떤 요소를 찾을 지 보장 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="faaba4525f66a7ceffb2e5046c2260e6c103509f" translate="yes" xml:space="preserve">
          <source>If the list size is less than the specified index, an exception is thrown. There are two other functions that help you avoid such exceptions:</source>
          <target state="translated">목록 크기가 지정된 색인보다 작 으면 예외가 발생합니다. 이러한 예외를 피하는 데 도움이되는 다른 두 가지 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb9933a4cb9e8666aba0e0d81ce03883cc01e6a2" translate="yes" xml:space="preserve">
          <source>If the map was created by &lt;a href=&quot;with-default&quot;&gt;withDefault&lt;/a&gt;, resorts to its &lt;code&gt;defaultValue&lt;/code&gt; provider function instead of throwing an exception.</source>
          <target state="translated">지도에 의해 생성 된 경우 &lt;a href=&quot;with-default&quot;&gt;withDefault&lt;/a&gt; , 그에게 의지한다 &lt;code&gt;defaultValue&lt;/code&gt; 제공 기능을 대신 예외를 throw.</target>
        </trans-unit>
        <trans-unit id="b065f87a2aa4168218c6dc371595cc4dd1e98fe7" translate="yes" xml:space="preserve">
          <source>If the memory leak checker is activated, by default &lt;code&gt;true&lt;/code&gt; in debug mode, &lt;code&gt;false&lt;/code&gt; in release. When memory leak checker is activated, and leak is detected during last Kotlin context deinitialization process - error message with leak information is printed and application execution is aborted.</source>
          <target state="translated">메모리 누수 검사기가 활성화 된 경우 디버그 모드에서는 기본적으로 &lt;code&gt;true&lt;/code&gt; , 릴리스 에서는 &lt;code&gt;false&lt;/code&gt; 입니다. 메모리 누수 검사기가 활성화되고 마지막 Kotlin 컨텍스트 초기화 해제 프로세스 중에 누수가 감지되면 누수 정보가 포함 된 오류 메시지가 인쇄되고 애플리케이션 실행이 중단됩니다.</target>
        </trans-unit>
        <trans-unit id="c1f1e713ff8c23832b76dce0f833606cef70aca6" translate="yes" xml:space="preserve">
          <source>If the name of the property starts with &lt;code&gt;is&lt;/code&gt;, a different name mapping rule is used: the name of the getter will be the same as the property name, and the name of the setter will be obtained by replacing &lt;code&gt;is&lt;/code&gt; with &lt;code&gt;set&lt;/code&gt;. For example, for a property &lt;code&gt;isOpen&lt;/code&gt;, the getter will be called &lt;code&gt;isOpen()&lt;/code&gt; and the setter will be called &lt;code&gt;setOpen()&lt;/code&gt;. This rule applies for properties of any type, not just &lt;code&gt;Boolean&lt;/code&gt;.</source>
          <target state="translated">속성 이름이 시작하는 경우 &lt;code&gt;is&lt;/code&gt; 게터의 이름 속성의 이름과 동일 할 것이며, 세터의 이름을 대체함으로써 얻어 질 것이다 : 다른 이름 매핑 규칙이 사용되는 &lt;code&gt;is&lt;/code&gt; 로 &lt;code&gt;set&lt;/code&gt; . 예를 들어 &lt;code&gt;isOpen&lt;/code&gt; 속성의 경우 getter는 &lt;code&gt;isOpen()&lt;/code&gt; 이고 setter는 &lt;code&gt;setOpen()&lt;/code&gt; 입니다. 이 규칙은 &lt;code&gt;Boolean&lt;/code&gt; 뿐만 아니라 모든 유형의 속성에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="3332fa3bdec15301400b043f38b9641d591bc5f4" translate="yes" xml:space="preserve">
          <source>If the object is an instance of a functional Java interface (i.e. a Java interface with a single abstract method), you can create it using a lambda expression prefixed with the type of the interface:</source>
          <target state="translated">객체가 기능적인 Java 인터페이스의 인스턴스 인 경우 (예 : 단일 추상 메소드가있는 Java 인터페이스) 인터페이스 유형이 접두어로 붙인 람다 식을 사용하여 객체를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="079d14d9fa4b11b9fed1da4e6938934fb59ac4b3" translate="yes" xml:space="preserve">
          <source>If the original list is mutable, all its changes reflect in its reversed views and vice versa.</source>
          <target state="translated">원본 목록이 변경 가능한 경우 모든 변경 사항이 반대보기에 반영되며 그 반대도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="f199eb80255475df9da84da09551f8bd23017106" translate="yes" xml:space="preserve">
          <source>If the package is not specified, the contents of such a file belong to &quot;default&quot; package that has no name.</source>
          <target state="translated">패키지가 지정되지 않은 경우 해당 파일의 내용은 이름이없는 &quot;기본&quot;패키지에 속합니다.</target>
        </trans-unit>
        <trans-unit id="607e0590c98b31f775522f050ca8e1b54f20a06e" translate="yes" xml:space="preserve">
          <source>If the package is not specified, the contents of such a file belong to the default package that has no name.</source>
          <target state="translated">패키지가 지정되지 않은 경우 이러한 파일의 내용은 이름이없는 기본 패키지에 속합니다.</target>
        </trans-unit>
        <trans-unit id="e2bbcc7a5d6ec12b113958618724012f588f92a6" translate="yes" xml:space="preserve">
          <source>If the parameter list is too long to fit on a line, put the arrow on a separate line:</source>
          <target state="translated">매개 변수 목록이 너무 길어서 한 줄에 들어 가지 않으면 화살표를 별도의 줄에 넣으십시오.</target>
        </trans-unit>
        <trans-unit id="65d840640485aeb56113ca2dcd5f195cfe9368f9" translate="yes" xml:space="preserve">
          <source>If the parameters or return types of the members of a variant type are themselves variant, it gets a bit complicated. Function types in parameters and return types make it even more challenging. If you're wondering whether it's safe to use a variant type parameter &lt;code&gt;T&lt;/code&gt; in a particular position, ask yourself:</source>
          <target state="translated">변형 유형의 멤버의 매개 변수 또는 반환 유형이 자체 변형 인 경우 약간 복잡합니다. 매개 변수와 리턴 유형의 함수 유형은 훨씬 더 어려워집니다. 특정 위치에서 변형 유형 매개 변수 &lt;code&gt;T&lt;/code&gt; 를 사용하는 것이 안전한지 궁금한 경우 스스로에게 문의하십시오.</target>
        </trans-unit>
        <trans-unit id="a18d633a4ebf37f8c95ff8f80627508e8e6e0a0d" translate="yes" xml:space="preserve">
          <source>If the primary constructor does not have any annotations or visibility modifiers, the &lt;em&gt;constructor&lt;/em&gt; keyword can be omitted:</source>
          <target state="translated">기본 생성자에 주석 또는 가시성 수정자가 없으면 &lt;em&gt;constructor&lt;/em&gt; 키워드를 생략 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="47e17a53862f3b306373aab1293af010a48f2c36" translate="yes" xml:space="preserve">
          <source>If the same kind of ambiguity arises when a dependency is added to a custom configuration rather than one of the configurations created by the plugin, you can add the attributes to the configuration in the same way:</source>
          <target state="translated">플러그인이 작성한 구성 중 하나가 아닌 사용자 정의 구성에 종속성을 추가 할 때 동일한 종류의 모호성이 발생하는 경우 동일한 방식으로 속성을 구성에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c2003e3c2a4c342bc0df488d2992403b24e0a68f" translate="yes" xml:space="preserve">
          <source>If the second-to-last line compiled, it would allow us to put a pear into what is ostensibly a bowl of only apples, and your code would explode when it tried to extract the &quot;apple&quot; from the bowl. However, it's frequently useful to be able to let the type hierarchy of a generic type parameter &quot;flow&quot; to the generic class. As we saw above, though, some care must be taken - the solution is to restrict the direction in which you can move data in and out of the generic object.</source>
          <target state="translated">마지막 두 번째 줄이 컴파일되면, 아마도 사과 그릇에 배를 넣을 수 있으며 그릇에서 &quot;사과&quot;를 추출하려고 할 때 코드가 폭발 할 것입니다. 그러나 제네릭 형식 매개 변수의 형식 계층 구조를 제네릭 클래스로 &quot;흐르게&quot;할 수있게하는 것이 유용한 경우가 많습니다. 위에서 보았 듯이 약간의주의가 필요합니다. 해결책은 일반 객체 안팎으로 데이터를 이동할 수있는 방향을 제한하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="5e1d01b7eb886e9322c190422643ee87c94b9cb3" translate="yes" xml:space="preserve">
          <source>If the sequence operation returns another sequence, which is produced lazily, it's called &lt;em&gt;intermediate&lt;/em&gt;, and otherwise the operation is &lt;em&gt;terminal&lt;/em&gt;. Examples of terminal operations are &lt;a href=&quot;to-list&quot;&gt;kotlin.sequences.Sequence.toList&lt;/a&gt;, kotlin.sequences.Sequence.max.</source>
          <target state="translated">시퀀스 연산이 느리게 생성 된 다른 시퀀스를 반환하는 경우이를 &lt;em&gt;중간 (intermediate&lt;/em&gt; ) 이라고 하며, 그렇지 않으면 &lt;em&gt;터미널 (&lt;/em&gt; operation)은 &lt;em&gt;터미널&lt;/em&gt; 입니다. 터미널 연산의 예는 &lt;a href=&quot;to-list&quot;&gt;kotlin.sequences.Sequence.toList&lt;/a&gt; , kotlin.sequences.Sequence.max입니다.</target>
        </trans-unit>
        <trans-unit id="44fdc9a07256ffbf20d393bac49e51adf9b4b7af" translate="yes" xml:space="preserve">
          <source>If the size of this array is less than 1, throws an &lt;a href=&quot;../kotlin/-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">이 배열의 크기가 1보다 작은 경우 동작이 지정되지 않은 Kotlin / JS를 제외하고 &lt;a href=&quot;../kotlin/-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이&lt;/a&gt; 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2773fd03bef38a23b5651a21ca7d831595d79640" translate="yes" xml:space="preserve">
          <source>If the size of this array is less than 2, throws an &lt;a href=&quot;../kotlin/-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">이 배열의 크기가 2보다 작 으면 동작이 지정되지 않은 Kotlin / JS를 제외하고 &lt;a href=&quot;../kotlin/-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이&lt;/a&gt; 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0a0294e2f74afcb56591a07671514765850b0c72" translate="yes" xml:space="preserve">
          <source>If the size of this array is less than 3, throws an &lt;a href=&quot;../kotlin/-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">이 배열의 크기가 3보다 작 으면 동작이 지정되지 않은 Kotlin / JS를 제외하고 &lt;a href=&quot;../kotlin/-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이&lt;/a&gt; 발생합니다.</target>
        </trans-unit>
        <trans-unit id="da2e1fd0a51d8f47f0a64c24600fb4365faadd98" translate="yes" xml:space="preserve">
          <source>If the size of this array is less than 4, throws an &lt;a href=&quot;../kotlin/-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">이 배열의 크기가 4보다 작 으면 동작이 지정되지 않은 Kotlin / JS를 제외하고 &lt;a href=&quot;../kotlin/-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이&lt;/a&gt; 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9b9ee92ddb8bbb5a34fed19ad7463f35b65299f8" translate="yes" xml:space="preserve">
          <source>If the size of this array is less than 5, throws an &lt;a href=&quot;../kotlin/-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException&lt;/a&gt; except in Kotlin/JS where the behavior is unspecified.</source>
          <target state="translated">이 배열의 크기가 5보다 작 으면 동작이 지정되지 않은 Kotlin / JS를 제외하고 &lt;a href=&quot;../kotlin/-index-out-of-bounds-exception/index#kotlin.IndexOutOfBoundsException&quot;&gt;IndexOutOfBoundsException이&lt;/a&gt; 발생합니다.</target>
        </trans-unit>
        <trans-unit id="aea8a32a75a7deb90bc9b2784a7bca89130df6d4" translate="yes" xml:space="preserve">
          <source>If the supertype has a constructor, it must be invoked with parentheses after the supertype name. You can specify multiple supertypes if need be (but as usual, at most one superclass).</source>
          <target state="translated">수퍼 타입에 생성자가 있으면 수퍼 타입 ​​이름 뒤에 괄호를 사용하여 호출해야합니다. 필요한 경우 여러 수퍼 타입을 지정할 수 있습니다 (그러나 평소와 같이 최대 수퍼 클래스).</target>
        </trans-unit>
        <trans-unit id="f754e813201e3d3c1d7a4229841ecfb54eadad53" translate="yes" xml:space="preserve">
          <source>If the target meta-annotation is not present on an annotation declaration, the annotation is applicable to the following elements: &lt;a href=&quot;../-annotation-target/-c-l-a-s-s#kotlin.annotation.AnnotationTarget.CLASS&quot;&gt;CLASS&lt;/a&gt;, &lt;a href=&quot;../-annotation-target/-p-r-o-p-e-r-t-y#kotlin.annotation.AnnotationTarget.PROPERTY&quot;&gt;PROPERTY&lt;/a&gt;, &lt;a href=&quot;../-annotation-target/-f-i-e-l-d#kotlin.annotation.AnnotationTarget.FIELD&quot;&gt;FIELD&lt;/a&gt;, &lt;a href=&quot;../-annotation-target/-l-o-c-a-l_-v-a-r-i-a-b-l-e#kotlin.annotation.AnnotationTarget.LOCAL_VARIABLE&quot;&gt;LOCAL_VARIABLE&lt;/a&gt;, &lt;a href=&quot;../-annotation-target/-v-a-l-u-e_-p-a-r-a-m-e-t-e-r#kotlin.annotation.AnnotationTarget.VALUE_PARAMETER&quot;&gt;VALUE_PARAMETER&lt;/a&gt;, &lt;a href=&quot;../-annotation-target/-c-o-n-s-t-r-u-c-t-o-r#kotlin.annotation.AnnotationTarget.CONSTRUCTOR&quot;&gt;CONSTRUCTOR&lt;/a&gt;, &lt;a href=&quot;../-annotation-target/-f-u-n-c-t-i-o-n#kotlin.annotation.AnnotationTarget.FUNCTION&quot;&gt;FUNCTION&lt;/a&gt;, &lt;a href=&quot;../-annotation-target/-p-r-o-p-e-r-t-y_-g-e-t-t-e-r#kotlin.annotation.AnnotationTarget.PROPERTY_GETTER&quot;&gt;PROPERTY_GETTER&lt;/a&gt;, &lt;a href=&quot;../-annotation-target/-p-r-o-p-e-r-t-y_-s-e-t-t-e-r#kotlin.annotation.AnnotationTarget.PROPERTY_SETTER&quot;&gt;PROPERTY_SETTER&lt;/a&gt;.</source>
          <target state="translated">대상 메타 주석이 주석 선언에 없으면 주석은 &lt;a href=&quot;../-annotation-target/-c-l-a-s-s#kotlin.annotation.AnnotationTarget.CLASS&quot;&gt;CLASS&lt;/a&gt; , &lt;a href=&quot;../-annotation-target/-p-r-o-p-e-r-t-y#kotlin.annotation.AnnotationTarget.PROPERTY&quot;&gt;PROPERTY&lt;/a&gt; , &lt;a href=&quot;../-annotation-target/-f-i-e-l-d#kotlin.annotation.AnnotationTarget.FIELD&quot;&gt;FIELD&lt;/a&gt; , &lt;a href=&quot;../-annotation-target/-l-o-c-a-l_-v-a-r-i-a-b-l-e#kotlin.annotation.AnnotationTarget.LOCAL_VARIABLE&quot;&gt;LOCAL_VARIABLE&lt;/a&gt; , &lt;a href=&quot;../-annotation-target/-v-a-l-u-e_-p-a-r-a-m-e-t-e-r#kotlin.annotation.AnnotationTarget.VALUE_PARAMETER&quot;&gt;VALUE_PARAMETER&lt;/a&gt; , &lt;a href=&quot;../-annotation-target/-c-o-n-s-t-r-u-c-t-o-r#kotlin.annotation.AnnotationTarget.CONSTRUCTOR&quot;&gt;CONSTRUCTOR&lt;/a&gt; , &lt;a href=&quot;../-annotation-target/-f-u-n-c-t-i-o-n#kotlin.annotation.AnnotationTarget.FUNCTION&quot;&gt;FUNCTION&lt;/a&gt; , &lt;a href=&quot;../-annotation-target/-p-r-o-p-e-r-t-y_-g-e-t-t-e-r#kotlin.annotation.AnnotationTarget.PROPERTY_GETTER&quot;&gt;PROPERTY_GETTER&lt;/a&gt; , &lt;a href=&quot;../-annotation-target/-p-r-o-p-e-r-t-y_-s-e-t-t-e-r#kotlin.annotation.AnnotationTarget.PROPERTY_SETTER&quot;&gt;PROPERTY_SETTER&lt;/a&gt; 요소에 적용 가능합니다 .</target>
        </trans-unit>
        <trans-unit id="8a35d20b281a1e85d8a06fc803c1646e572b36e8" translate="yes" xml:space="preserve">
          <source>If the transformation produces &lt;code&gt;null&lt;/code&gt; on certain elements, you can filter out the &lt;code&gt;null&lt;/code&gt;s from the result collection by calling the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/map-not-null&quot;&gt;&lt;code&gt;mapNotNull()&lt;/code&gt;&lt;/a&gt; function instead of &lt;code&gt;map()&lt;/code&gt;, or &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/map-indexed-not-null&quot;&gt;&lt;code&gt;mapIndexedNotNull()&lt;/code&gt;&lt;/a&gt; instead of &lt;code&gt;mapIndexed()&lt;/code&gt;.</source>
          <target state="translated">변화가 발생하면 &lt;code&gt;null&lt;/code&gt; 특정 요소에는 필터링 할 수 &lt;code&gt;null&lt;/code&gt; 호출하여 결과 컬렉션들 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/map-not-null&quot;&gt; &lt;code&gt;mapNotNull()&lt;/code&gt; &lt;/a&gt; 함수를 대신 &lt;code&gt;map()&lt;/code&gt; 또는 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/map-indexed-not-null&quot;&gt; &lt;code&gt;mapIndexedNotNull()&lt;/code&gt; &lt;/a&gt; 대신 &lt;code&gt;mapIndexed()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9296b27a4d8120036a7decf816cb92c4373c8a8" translate="yes" xml:space="preserve">
          <source>If the type of the last parameter to a function is a function type and you want to supply a lambda expression, you can place the lambda expression &lt;em&gt;outside&lt;/em&gt; of the parameter parentheses. If the lambda expression is the only parameter, you can omit the parentheses entirely. This is very useful for &lt;a href=&quot;functional-programming#receivers&quot;&gt;constructing DSLs&lt;/a&gt;.</source>
          <target state="translated">함수의 마지막 매개 변수 유형이 함수 유형이고 람다 식을 제공하려는 경우 람다 식을 매개 변수 괄호 &lt;em&gt;외부&lt;/em&gt; 에 배치 할 수 있습니다 . 람다식이 유일한 매개 변수이면 괄호를 완전히 생략 할 수 있습니다. 이것은 &lt;a href=&quot;functional-programming#receivers&quot;&gt;DSL&lt;/a&gt; 을 구성 할 때 매우 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="d77bf30b739c2514d63ed87849b1332700a2c8b6" translate="yes" xml:space="preserve">
          <source>If the value has a receiver type, the receiver object should be passed as the first argument. Another way to invoke a value of a function type with receiver is to prepend it with the receiver object, as if the value were an &lt;a href=&quot;extensions&quot;&gt;extension function&lt;/a&gt;: &lt;code&gt;1.foo(2)&lt;/code&gt;,</source>
          <target state="translated">값에 수신자 유형이 있으면 수신자 오브젝트가 첫 번째 인수로 전달되어야합니다. 수신자와 함께 함수 유형의 값을 호출하는 또 다른 방법은 값이 &lt;a href=&quot;extensions&quot;&gt;확장 함수&lt;/a&gt; 인 것처럼 수신자 오브젝트 앞에 추가하는 것입니다 . &lt;code&gt;1.foo(2)&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="08b10da0a2b6c0dae39cbc760c047dc614066a39" translate="yes" xml:space="preserve">
          <source>If the value of a read-only property is known at the compile time, mark it as a &lt;em&gt;compile time constant&lt;/em&gt; using the &lt;em&gt;const&lt;/em&gt; modifier. Such properties need to fulfil the following requirements:</source>
          <target state="translated">읽기 전용 속성의 값이 컴파일 타임에 알려진 경우 &lt;em&gt;const&lt;/em&gt; 한정자를 사용하여 &lt;em&gt;컴파일 시간 상수&lt;/em&gt; 로 표시합니다 . 이러한 속성은 다음 요구 사항을 충족해야합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ec8c7f7b7e4402c0d35a4121dd40caffc8d7c935" translate="yes" xml:space="preserve">
          <source>If the variable has no value for the current thread, it is first initialized to the value returned by an invocation of the &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/lang/ThreadLocal.html#initialValue()&quot;&gt;ThreadLocal.initialValue&lt;/a&gt; method. Then if it is still &lt;code&gt;null&lt;/code&gt;, the provided &lt;a href=&quot;get-or-set#kotlin.concurrent%24getOrSet%28java.lang.ThreadLocal%28%28kotlin.concurrent.getOrSet.T%29%29%2C+kotlin.Function0%28%28kotlin.concurrent.getOrSet.T%29%29%29%2Fdefault&quot;&gt;default&lt;/a&gt; function is called and its result is stored for the current thread and then returned.</source>
          <target state="translated">변수에 현재 스레드에 대한 값이 없으면 먼저 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/lang/ThreadLocal.html#initialValue()&quot;&gt;ThreadLocal.initialValue&lt;/a&gt; 메소드를 호출하여 리턴 된 값으로 초기화됩니다 . 그런 다음 여전히 &lt;code&gt;null&lt;/code&gt; 인 경우 제공된 &lt;a href=&quot;get-or-set#kotlin.concurrent%24getOrSet%28java.lang.ThreadLocal%28%28kotlin.concurrent.getOrSet.T%29%29%2C+kotlin.Function0%28%28kotlin.concurrent.getOrSet.T%29%29%29%2Fdefault&quot;&gt;기본&lt;/a&gt; 함수가 호출되고 해당 결과가 현재 스레드에 저장되어 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="55d02f7ccfe9e99651ab411f3283f4f1c75cff68" translate="yes" xml:space="preserve">
          <source>If the variable has no value for the current thread, it is first initialized to the value returned by an invocation of the ThreadLocal.initialValue method. Then if it is still &lt;code&gt;null&lt;/code&gt;, the provided &lt;a href=&quot;get-or-set#kotlin.concurrent%24getOrSet(java.lang.ThreadLocal((kotlin.concurrent.getOrSet.T)),%20kotlin.Function0((kotlin.concurrent.getOrSet.T)))/default&quot;&gt;default&lt;/a&gt; function is called and its result is stored for the current thread and then returned.</source>
          <target state="translated">변수에 현재 스레드에 대한 값이 없으면 먼저 ThreadLocal.initialValue 메서드 호출에 의해 반환 된 값으로 초기화됩니다. 그런 다음 여전히 &lt;code&gt;null&lt;/code&gt; 인 경우 제공된 &lt;a href=&quot;get-or-set#kotlin.concurrent%24getOrSet(java.lang.ThreadLocal((kotlin.concurrent.getOrSet.T)),%20kotlin.Function0((kotlin.concurrent.getOrSet.T)))/default&quot;&gt;기본&lt;/a&gt; 함수가 호출되고 그 결과가 현재 스레드에 대해 저장되고 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="3f98dbe730a8c5b27f6e85f63d1bb117f2681dde" translate="yes" xml:space="preserve">
          <source>If there are clients that use your Kotlin interfaces compiled without the new &lt;code&gt;-Xjvm-default=all&lt;/code&gt; option, then they can be incompatible with the same code compiled with this option.</source>
          <target state="translated">새로운 &lt;code&gt;-Xjvm-default=all&lt;/code&gt; 옵션 없이 컴파일 된 Kotlin 인터페이스를 사용하는 클라이언트가 있는 경우이 옵션으로 컴파일 된 동일한 코드와 호환되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dcc77a995f63cb6e01033f3a55686b845948a61a" translate="yes" xml:space="preserve">
          <source>If there are explicit implementations of &lt;code&gt;equals()&lt;/code&gt;, &lt;code&gt;hashCode()&lt;/code&gt; or &lt;code&gt;toString()&lt;/code&gt; in the data class body or &lt;em&gt;final&lt;/em&gt; implementations in a superclass, then these functions are not generated, and the existing implementations are used;</source>
          <target state="translated">데이터 클래스 본문 에 &lt;code&gt;equals()&lt;/code&gt; , &lt;code&gt;hashCode()&lt;/code&gt; 또는 &lt;code&gt;toString()&lt;/code&gt; 의 명시 적 구현이 있거나 수퍼 클래스의 &lt;em&gt;최종&lt;/em&gt; 구현이있는 경우 이러한 함수가 생성되지 않고 기존 구현이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="706d1394b60969b44602412d2be62295a909c4ef" translate="yes" xml:space="preserve">
          <source>If there are multiple equal maximal values, returns the first of them.</source>
          <target state="translated">동일한 최대 값이 여러 개인 경우 그 중 첫 번째 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ca6054fd048270c35ac42f250ec06387cb65b331" translate="yes" xml:space="preserve">
          <source>If there are multiple equal minimal values, returns the first of them.</source>
          <target state="translated">동일한 최소값이 여러 개 있으면 그 중 첫 번째 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a22fd4a7c09aa2ff0cda3088cc25dcaf533edd1f" translate="yes" xml:space="preserve">
          <source>If there are no errors during compilation, we should see the result of the execution of our program, which on execution should output the contents of the site &lt;code&gt;http://example.com&lt;/code&gt;</source>
          <target state="translated">컴파일하는 동안 오류가 없으면 프로그램 실행 결과를 볼 수 있으며 실행시 사이트의 내용을 출력해야합니다 &lt;code&gt;http://example.com&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9edcba1fdea56091b72b70d9544284be2a9b118c" translate="yes" xml:space="preserve">
          <source>If there is a name clash, we can disambiguate by using &lt;em&gt;as&lt;/em&gt; keyword to locally rename the clashing entity:</source>
          <target state="translated">이름 충돌이있는 경우 키워드 &lt;em&gt;로&lt;/em&gt; 키워드를 사용 하여 충돌 엔티티 이름을 로컬로 바꾸면 명확 해집니다 .</target>
        </trans-unit>
        <trans-unit id="b4b2b7e97af6db9e9aed9e5719f03ea30bf0227c" translate="yes" xml:space="preserve">
          <source>If there is a naming conflict, you should usually import just one of the symbols and fully qualify the usages of the other. If both are heavily used, you can rename the symbol at import time:</source>
          <target state="translated">명명 충돌이있는 경우 일반적으로 기호 중 하나만 가져오고 다른 기호의 사용법을 완전히 규정해야합니다. 둘 다 많이 사용하는 경우 가져 오기시에 심볼의 이름을 바꿀 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a65b66d3772f31ab93bac26e3026245f1a24b319" translate="yes" xml:space="preserve">
          <source>If there's no nice way around it, and you need to take special actions based on what type something is or to access functions/properties that only exist on some classes, you can use &lt;code&gt;is&lt;/code&gt; to check if the real type of an object is a particular class or a subclass thereof (or an implementor of an interface). When this is used as the condition in an &lt;code&gt;if&lt;/code&gt;, the compiler will let you perform type-specific operations on the object inside the &lt;code&gt;if&lt;/code&gt; body:</source>
          <target state="translated">거기 주위에 좋은 방법이 없습니다, 당신은 어떤 종류의 뭔가에 따라 특별한 조치를 취할 필요가있는 경우 또는 일부 클래스에 존재하는 액세스 기능 / 특성, 사용할 수 &lt;code&gt;is&lt;/code&gt; 객체의 실제 타입이 특정인지 확인합니다 클래스 또는 그 서브 클래스 (또는 인터페이스의 구현 자). 이것이 &lt;code&gt;if&lt;/code&gt; 의 조건으로 사용될 때 , 컴파일러는 &lt;code&gt;if&lt;/code&gt; 본문 안의 객체에 대해 유형별 작업을 수행 할 수있게합니다 .</target>
        </trans-unit>
        <trans-unit id="83d0b5382998741d7aeea7ea3925f51e48120ef6" translate="yes" xml:space="preserve">
          <source>If this char sequence ends with the given &lt;a href=&quot;../../kotlin.text/remove-suffix#kotlin.text%24removeSuffix%28kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fsuffix&quot;&gt;suffix&lt;/a&gt;, returns a new char sequence with the suffix removed. Otherwise, returns a new char sequence with the same characters.</source>
          <target state="translated">이 문자 순서가 지정된 &lt;a href=&quot;../../kotlin.text/remove-suffix#kotlin.text%24removeSuffix%28kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fsuffix&quot;&gt;접미사로&lt;/a&gt; 끝나는 경우 , 접미사가 제거 된 새로운 문자 순서를 반환합니다. 그렇지 않으면 같은 문자를 가진 새로운 문자 시퀀스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2980e3e7312daa7fe514fbd075be82c6980d9ab3" translate="yes" xml:space="preserve">
          <source>If this char sequence ends with the given &lt;a href=&quot;../../kotlin.text/remove-suffix#kotlin.text%24removeSuffix(kotlin.CharSequence,%20kotlin.CharSequence)/suffix&quot;&gt;suffix&lt;/a&gt;, returns a new char sequence with the suffix removed. Otherwise, returns a new char sequence with the same characters.</source>
          <target state="translated">이 문자 시퀀스가 ​​주어진 &lt;a href=&quot;../../kotlin.text/remove-suffix#kotlin.text%24removeSuffix(kotlin.CharSequence,%20kotlin.CharSequence)/suffix&quot;&gt;접미사로&lt;/a&gt; 끝나는 경우 , 접미사가 제거 된 새 문자 시퀀스를 반환합니다. 그렇지 않으면 동일한 문자로 새 문자 시퀀스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1f68e5f9283a11982ac4d9ee4f72f23e35be2e15" translate="yes" xml:space="preserve">
          <source>If this char sequence ends with the given &lt;a href=&quot;../remove-suffix#kotlin.text%24removeSuffix%28kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fsuffix&quot;&gt;suffix&lt;/a&gt;, returns a new char sequence with the suffix removed. Otherwise, returns a new char sequence with the same characters.</source>
          <target state="translated">이 문자 순서가 지정된 &lt;a href=&quot;../remove-suffix#kotlin.text%24removeSuffix%28kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fsuffix&quot;&gt;접미사로&lt;/a&gt; 끝나는 경우 , 접미사가 제거 된 새로운 문자 순서를 반환합니다. 그렇지 않으면 같은 문자를 가진 새로운 문자 시퀀스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a30b2abbbd6e4e6955f1d30edef72f53b5797930" translate="yes" xml:space="preserve">
          <source>If this char sequence ends with the given &lt;a href=&quot;../remove-suffix#kotlin.text%24removeSuffix(kotlin.CharSequence,%20kotlin.CharSequence)/suffix&quot;&gt;suffix&lt;/a&gt;, returns a new char sequence with the suffix removed. Otherwise, returns a new char sequence with the same characters.</source>
          <target state="translated">이 문자 시퀀스가 ​​주어진 &lt;a href=&quot;../remove-suffix#kotlin.text%24removeSuffix(kotlin.CharSequence,%20kotlin.CharSequence)/suffix&quot;&gt;접미사로&lt;/a&gt; 끝나는 경우 , 접미사가 제거 된 새 문자 시퀀스를 반환합니다. 그렇지 않으면 동일한 문자로 새 문자 시퀀스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f1d9aa147865687623fa05e3a2703d76d90d9924" translate="yes" xml:space="preserve">
          <source>If this char sequence ends with the given &lt;a href=&quot;remove-suffix#kotlin.text%24removeSuffix%28kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fsuffix&quot;&gt;suffix&lt;/a&gt;, returns a new char sequence with the suffix removed. Otherwise, returns a new char sequence with the same characters.</source>
          <target state="translated">이 문자 순서가 지정된 &lt;a href=&quot;remove-suffix#kotlin.text%24removeSuffix%28kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fsuffix&quot;&gt;접미사로&lt;/a&gt; 끝나는 경우 , 접미사가 제거 된 새로운 문자 순서를 반환합니다. 그렇지 않으면 같은 문자를 가진 새로운 문자 시퀀스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="066696f2f807a663e1d7eba4412c839322bfaa9e" translate="yes" xml:space="preserve">
          <source>If this char sequence ends with the given &lt;a href=&quot;remove-suffix#kotlin.text%24removeSuffix(kotlin.CharSequence,%20kotlin.CharSequence)/suffix&quot;&gt;suffix&lt;/a&gt;, returns a new char sequence with the suffix removed. Otherwise, returns a new char sequence with the same characters.</source>
          <target state="translated">이 문자 시퀀스가 ​​주어진 &lt;a href=&quot;remove-suffix#kotlin.text%24removeSuffix(kotlin.CharSequence,%20kotlin.CharSequence)/suffix&quot;&gt;접미사로&lt;/a&gt; 끝나는 경우 , 접미사가 제거 된 새 문자 시퀀스를 반환합니다. 그렇지 않으면 동일한 문자로 새 문자 시퀀스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="393978ca2e4989e43b2a725707449d745979c2c2" translate="yes" xml:space="preserve">
          <source>If this char sequence starts with the given &lt;a href=&quot;../../kotlin.text/remove-prefix#kotlin.text%24removePrefix%28kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fprefix&quot;&gt;prefix&lt;/a&gt;, returns a new char sequence with the prefix removed. Otherwise, returns a new char sequence with the same characters.</source>
          <target state="translated">이 문자 순서가 지정된 &lt;a href=&quot;../../kotlin.text/remove-prefix#kotlin.text%24removePrefix%28kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fprefix&quot;&gt;prefix로&lt;/a&gt; 시작 하면 접두사가 제거 된 새 문자 순서를 반환합니다. 그렇지 않으면 같은 문자를 가진 새로운 문자 시퀀스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fbd91d26d2ddcfad42a009559f504981281599d6" translate="yes" xml:space="preserve">
          <source>If this char sequence starts with the given &lt;a href=&quot;../../kotlin.text/remove-prefix#kotlin.text%24removePrefix(kotlin.CharSequence,%20kotlin.CharSequence)/prefix&quot;&gt;prefix&lt;/a&gt;, returns a new char sequence with the prefix removed. Otherwise, returns a new char sequence with the same characters.</source>
          <target state="translated">이 문자 시퀀스가 ​​지정된 &lt;a href=&quot;../../kotlin.text/remove-prefix#kotlin.text%24removePrefix(kotlin.CharSequence,%20kotlin.CharSequence)/prefix&quot;&gt;접두사로&lt;/a&gt; 시작 하면 접두사가 제거 된 새 문자 시퀀스를 반환합니다. 그렇지 않으면 동일한 문자로 새 문자 시퀀스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c4551b66808b7a93bcbea0cb98dbc6cf03713996" translate="yes" xml:space="preserve">
          <source>If this char sequence starts with the given &lt;a href=&quot;../remove-prefix#kotlin.text%24removePrefix%28kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fprefix&quot;&gt;prefix&lt;/a&gt;, returns a new char sequence with the prefix removed. Otherwise, returns a new char sequence with the same characters.</source>
          <target state="translated">이 문자 순서가 지정된 &lt;a href=&quot;../remove-prefix#kotlin.text%24removePrefix%28kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fprefix&quot;&gt;prefix로&lt;/a&gt; 시작 하면 접두사가 제거 된 새 문자 순서를 반환합니다. 그렇지 않으면 같은 문자를 가진 새로운 문자 시퀀스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e1cdbb98160c7143e8a1010edb16577923755a13" translate="yes" xml:space="preserve">
          <source>If this char sequence starts with the given &lt;a href=&quot;../remove-prefix#kotlin.text%24removePrefix(kotlin.CharSequence,%20kotlin.CharSequence)/prefix&quot;&gt;prefix&lt;/a&gt;, returns a new char sequence with the prefix removed. Otherwise, returns a new char sequence with the same characters.</source>
          <target state="translated">이 문자 시퀀스가 ​​지정된 &lt;a href=&quot;../remove-prefix#kotlin.text%24removePrefix(kotlin.CharSequence,%20kotlin.CharSequence)/prefix&quot;&gt;접두사로&lt;/a&gt; 시작 하면 접두사가 제거 된 새 문자 시퀀스를 반환합니다. 그렇지 않으면 동일한 문자로 새 문자 시퀀스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e5eb3f5440c96a359b2e662128e4b4a2fe2e0c6d" translate="yes" xml:space="preserve">
          <source>If this char sequence starts with the given &lt;a href=&quot;remove-prefix#kotlin.text%24removePrefix%28kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fprefix&quot;&gt;prefix&lt;/a&gt;, returns a new char sequence with the prefix removed. Otherwise, returns a new char sequence with the same characters.</source>
          <target state="translated">이 문자 순서가 지정된 &lt;a href=&quot;remove-prefix#kotlin.text%24removePrefix%28kotlin.CharSequence%2C+kotlin.CharSequence%29%2Fprefix&quot;&gt;prefix로&lt;/a&gt; 시작 하면 접두사가 제거 된 새 문자 순서를 반환합니다. 그렇지 않으면 같은 문자를 가진 새로운 문자 시퀀스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="18964490a2097748cf26c9bc99dc2e1219bd1083" translate="yes" xml:space="preserve">
          <source>If this char sequence starts with the given &lt;a href=&quot;remove-prefix#kotlin.text%24removePrefix(kotlin.CharSequence,%20kotlin.CharSequence)/prefix&quot;&gt;prefix&lt;/a&gt;, returns a new char sequence with the prefix removed. Otherwise, returns a new char sequence with the same characters.</source>
          <target state="translated">이 문자 시퀀스가 ​​지정된 &lt;a href=&quot;remove-prefix#kotlin.text%24removePrefix(kotlin.CharSequence,%20kotlin.CharSequence)/prefix&quot;&gt;접두사로&lt;/a&gt; 시작 하면 접두사가 제거 된 새 문자 시퀀스를 반환합니다. 그렇지 않으면 동일한 문자로 새 문자 시퀀스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e50b89219e8ed48483bbf130e9adaab263424db1" translate="yes" xml:space="preserve">
          <source>If this file is a directory, it is copied without its content, i.e. an empty &lt;a href=&quot;copy-to#kotlin.io%24copyTo%28java.io.File%2C+java.io.File%2C+kotlin.Boolean%2C+kotlin.Int%29%2Ftarget&quot;&gt;target&lt;/a&gt; directory is created. If you want to copy directory including its contents, use &lt;a href=&quot;copy-recursively&quot;&gt;copyRecursively&lt;/a&gt;.</source>
          <target state="translated">이 파일이 디렉토리이면 내용없이 복사됩니다. 즉, 빈 &lt;a href=&quot;copy-to#kotlin.io%24copyTo%28java.io.File%2C+java.io.File%2C+kotlin.Boolean%2C+kotlin.Int%29%2Ftarget&quot;&gt;대상&lt;/a&gt; 디렉토리가 작성됩니다. 내용을 포함하여 디렉토리를 복사하려면 &lt;a href=&quot;copy-recursively&quot;&gt;copyRecursively를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="794fbb14ba44c0a10efb47ff1391acfc97fac0ad" translate="yes" xml:space="preserve">
          <source>If this file is a directory, it is copied without its content, i.e. an empty &lt;a href=&quot;copy-to#kotlin.io%24copyTo(java.io.File,%20java.io.File,%20kotlin.Boolean,%20kotlin.Int)/target&quot;&gt;target&lt;/a&gt; directory is created. If you want to copy directory including its contents, use &lt;a href=&quot;copy-recursively&quot;&gt;copyRecursively&lt;/a&gt;.</source>
          <target state="translated">이 파일이 디렉토리이면 내용없이 복사됩니다. 즉, 빈 &lt;a href=&quot;copy-to#kotlin.io%24copyTo(java.io.File,%20java.io.File,%20kotlin.Boolean,%20kotlin.Int)/target&quot;&gt;대상&lt;/a&gt; 디렉토리가 생성됩니다. 내용을 포함한 디렉토리를 복사하려면 &lt;a href=&quot;copy-recursively&quot;&gt;copyRecursively를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="696bc35b6b7c9124fdae8a289c38873049e01372" translate="yes" xml:space="preserve">
          <source>If this file path points to a single file, then it will be copied to a file with the path &lt;a href=&quot;copy-recursively#kotlin.io%24copyRecursively%28java.io.File%2C+java.io.File%2C+kotlin.Boolean%2C+kotlin.Function2%28%28java.io.File%2C+java.io.IOException%2C+kotlin.io.OnErrorAction%29%29%29%2Ftarget&quot;&gt;target&lt;/a&gt;. If this file path points to a directory, then its children will be copied to a directory with the path &lt;a href=&quot;copy-recursively#kotlin.io%24copyRecursively%28java.io.File%2C+java.io.File%2C+kotlin.Boolean%2C+kotlin.Function2%28%28java.io.File%2C+java.io.IOException%2C+kotlin.io.OnErrorAction%29%29%29%2Ftarget&quot;&gt;target&lt;/a&gt;.</source>
          <target state="translated">이 파일 경로가 단일 파일을 가리키는 경우 경로가 &lt;a href=&quot;copy-recursively#kotlin.io%24copyRecursively%28java.io.File%2C+java.io.File%2C+kotlin.Boolean%2C+kotlin.Function2%28%28java.io.File%2C+java.io.IOException%2C+kotlin.io.OnErrorAction%29%29%29%2Ftarget&quot;&gt;target 인&lt;/a&gt; 파일로 복사됩니다 . 이 파일 경로가 디렉토리를 가리키는 경우, 그 하위는 경로가 &lt;a href=&quot;copy-recursively#kotlin.io%24copyRecursively%28java.io.File%2C+java.io.File%2C+kotlin.Boolean%2C+kotlin.Function2%28%28java.io.File%2C+java.io.IOException%2C+kotlin.io.OnErrorAction%29%29%29%2Ftarget&quot;&gt;target 인&lt;/a&gt; 디렉토리로 복사됩니다 .</target>
        </trans-unit>
        <trans-unit id="f19f7f0e9647874289c7ec01aa0daf1c28a6e17f" translate="yes" xml:space="preserve">
          <source>If this file path points to a single file, then it will be copied to a file with the path &lt;a href=&quot;copy-recursively#kotlin.io%24copyRecursively(java.io.File,%20java.io.File,%20kotlin.Boolean,%20kotlin.Function2((java.io.File,%20java.io.IOException,%20kotlin.io.OnErrorAction)))/target&quot;&gt;target&lt;/a&gt;. If this file path points to a directory, then its children will be copied to a directory with the path &lt;a href=&quot;copy-recursively#kotlin.io%24copyRecursively(java.io.File,%20java.io.File,%20kotlin.Boolean,%20kotlin.Function2((java.io.File,%20java.io.IOException,%20kotlin.io.OnErrorAction)))/target&quot;&gt;target&lt;/a&gt;.</source>
          <target state="translated">이 파일 경로가 단일 파일을 가리키는 경우 &lt;a href=&quot;copy-recursively#kotlin.io%24copyRecursively(java.io.File,%20java.io.File,%20kotlin.Boolean,%20kotlin.Function2((java.io.File,%20java.io.IOException,%20kotlin.io.OnErrorAction)))/target&quot;&gt;target&lt;/a&gt; 경로가있는 파일에 복사됩니다 . 이 파일 경로가 디렉토리를 가리키는 경우 하위 항목은 &lt;a href=&quot;copy-recursively#kotlin.io%24copyRecursively(java.io.File,%20java.io.File,%20kotlin.Boolean,%20kotlin.Function2((java.io.File,%20java.io.IOException,%20kotlin.io.OnErrorAction)))/target&quot;&gt;target&lt;/a&gt; 경로가있는 디렉토리에 복사됩니다 .</target>
        </trans-unit>
        <trans-unit id="822fa875865380bffd3780f735dc7821bbfbc1dd" translate="yes" xml:space="preserve">
          <source>If this function is invoked on other &lt;a href=&quot;../kotlin.coroutines/-continuation/index&quot;&gt;Continuation&lt;/a&gt; instances it returns &lt;code&gt;this&lt;/code&gt; continuation unchanged.</source>
          <target state="translated">다른 &lt;a href=&quot;../kotlin.coroutines/-continuation/index&quot;&gt;Continuation&lt;/a&gt; 인스턴스 에서이 함수를 호출 &lt;code&gt;this&lt;/code&gt; 연속이 변경되지 않은 상태로 반환 됩니다.</target>
        </trans-unit>
        <trans-unit id="000d49e516219b57649db3a4add8aedc933ac12a" translate="yes" xml:space="preserve">
          <source>If this is the first time you're adding a Kotlin file to this project, IntelliJ IDEA will prompt you to add the required Kotlin runtime. For a Java project, configure the Kotlin runtime as a &lt;strong&gt;Kotlin Java Module&lt;/strong&gt;.</source>
          <target state="translated">이 프로젝트에 Kotlin 파일을 처음 추가하는 경우 IntelliJ IDEA에서 필요한 Kotlin 런타임을 추가하라는 메시지를 표시합니다. Java 프로젝트의 경우 Kotlin 런타임을 &lt;strong&gt;Kotlin Java 모듈&lt;/strong&gt; 로 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="8ef8c14fd9985248743a7603b2080574686a18ae" translate="yes" xml:space="preserve">
          <source>If this reference is &lt;a href=&quot;../-c-pointer/index&quot;&gt;CPointer&lt;/a&gt;, returns this pointer, otherwise allocate storage value in the scope and return it.</source>
          <target state="translated">이 참조가 &lt;a href=&quot;../-c-pointer/index&quot;&gt;CPointer&lt;/a&gt; 인 경우 ,이 포인터를 리턴하고, 그렇지 않으면 범위에 스토리지 값을 할당하고 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="b3b7f842b5ea81c3f4b90a34bcfe922201e07ced" translate="yes" xml:space="preserve">
          <source>If this reference is &lt;a href=&quot;index&quot;&gt;CPointer&lt;/a&gt;, returns this pointer, otherwise allocate storage value in the scope and return it.</source>
          <target state="translated">이 참조가 &lt;a href=&quot;index&quot;&gt;CPointer&lt;/a&gt; 인 경우 ,이 포인터를 리턴하고, 그렇지 않으면 범위에 스토리지 값을 할당하고 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="daa765d4ed09a47719a46eaa22921d3d6383a5b1" translate="yes" xml:space="preserve">
          <source>If this string ends with the given &lt;a href=&quot;../../kotlin.text/remove-suffix#kotlin.text%24removeSuffix%28kotlin.String%2C+kotlin.CharSequence%29%2Fsuffix&quot;&gt;suffix&lt;/a&gt;, returns a copy of this string with the suffix removed. Otherwise, returns this string.</source>
          <target state="translated">이 문자열이 지정된 &lt;a href=&quot;../../kotlin.text/remove-suffix#kotlin.text%24removeSuffix%28kotlin.String%2C+kotlin.CharSequence%29%2Fsuffix&quot;&gt;접미어로&lt;/a&gt; 끝나는 경우 접미사가 제거 된이 문자열의 사본을 리턴합니다. 그렇지 않으면이 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d7dc1cbcb6a32aa88b8d844adc9e841c43d6e6b8" translate="yes" xml:space="preserve">
          <source>If this string ends with the given &lt;a href=&quot;../../kotlin.text/remove-suffix#kotlin.text%24removeSuffix(kotlin.String,%20kotlin.CharSequence)/suffix&quot;&gt;suffix&lt;/a&gt;, returns a copy of this string with the suffix removed. Otherwise, returns this string.</source>
          <target state="translated">이 문자열이 주어진 &lt;a href=&quot;../../kotlin.text/remove-suffix#kotlin.text%24removeSuffix(kotlin.String,%20kotlin.CharSequence)/suffix&quot;&gt;suffix로&lt;/a&gt; 끝나면 접미사가 제거 된 문자열의 복사본을 반환합니다. 그렇지 않으면이 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fe146357dbe5d233f80385c4622bdabdf282c2ff" translate="yes" xml:space="preserve">
          <source>If this string ends with the given &lt;a href=&quot;remove-suffix#kotlin.text%24removeSuffix%28kotlin.String%2C+kotlin.CharSequence%29%2Fsuffix&quot;&gt;suffix&lt;/a&gt;, returns a copy of this string with the suffix removed. Otherwise, returns this string.</source>
          <target state="translated">이 문자열이 지정된 &lt;a href=&quot;remove-suffix#kotlin.text%24removeSuffix%28kotlin.String%2C+kotlin.CharSequence%29%2Fsuffix&quot;&gt;접미어로&lt;/a&gt; 끝나는 경우 접미사가 제거 된이 문자열의 사본을 리턴합니다. 그렇지 않으면이 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="709bfa613cc84c58d0e77dbf11164343f90ebae6" translate="yes" xml:space="preserve">
          <source>If this string ends with the given &lt;a href=&quot;remove-suffix#kotlin.text%24removeSuffix(kotlin.String,%20kotlin.CharSequence)/suffix&quot;&gt;suffix&lt;/a&gt;, returns a copy of this string with the suffix removed. Otherwise, returns this string.</source>
          <target state="translated">이 문자열이 주어진 &lt;a href=&quot;remove-suffix#kotlin.text%24removeSuffix(kotlin.String,%20kotlin.CharSequence)/suffix&quot;&gt;suffix로&lt;/a&gt; 끝나면 접미사가 제거 된 문자열의 복사본을 반환합니다. 그렇지 않으면이 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="eef5abc7cbd0224a64b4e2e54624e8e1396be8a5" translate="yes" xml:space="preserve">
          <source>If this string starts with the given &lt;a href=&quot;../../kotlin.text/remove-prefix#kotlin.text%24removePrefix%28kotlin.String%2C+kotlin.CharSequence%29%2Fprefix&quot;&gt;prefix&lt;/a&gt;, returns a copy of this string with the prefix removed. Otherwise, returns this string.</source>
          <target state="translated">이 문자열이 지정된 &lt;a href=&quot;../../kotlin.text/remove-prefix#kotlin.text%24removePrefix%28kotlin.String%2C+kotlin.CharSequence%29%2Fprefix&quot;&gt;prefix로&lt;/a&gt; 시작 하면 접두사가 제거 된이 문자열의 사본을 리턴합니다. 그렇지 않으면이 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="92c6be29a5671e41239ef25ada1ea6fe1003a0b7" translate="yes" xml:space="preserve">
          <source>If this string starts with the given &lt;a href=&quot;../../kotlin.text/remove-prefix#kotlin.text%24removePrefix(kotlin.String,%20kotlin.CharSequence)/prefix&quot;&gt;prefix&lt;/a&gt;, returns a copy of this string with the prefix removed. Otherwise, returns this string.</source>
          <target state="translated">이 문자열이 주어진 &lt;a href=&quot;../../kotlin.text/remove-prefix#kotlin.text%24removePrefix(kotlin.String,%20kotlin.CharSequence)/prefix&quot;&gt;prefix로&lt;/a&gt; 시작 하면 접두사가 제거 된이 문자열의 복사본을 반환합니다. 그렇지 않으면이 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9adf224f013e9757a5b20a24dd0cebbc9d578cc5" translate="yes" xml:space="preserve">
          <source>If this string starts with the given &lt;a href=&quot;remove-prefix#kotlin.text%24removePrefix%28kotlin.String%2C+kotlin.CharSequence%29%2Fprefix&quot;&gt;prefix&lt;/a&gt;, returns a copy of this string with the prefix removed. Otherwise, returns this string.</source>
          <target state="translated">이 문자열이 지정된 &lt;a href=&quot;remove-prefix#kotlin.text%24removePrefix%28kotlin.String%2C+kotlin.CharSequence%29%2Fprefix&quot;&gt;prefix로&lt;/a&gt; 시작 하면 접두사가 제거 된이 문자열의 사본을 리턴합니다. 그렇지 않으면이 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1e98d4d193636df70b1b850a20d5da773ecb938f" translate="yes" xml:space="preserve">
          <source>If this string starts with the given &lt;a href=&quot;remove-prefix#kotlin.text%24removePrefix(kotlin.String,%20kotlin.CharSequence)/prefix&quot;&gt;prefix&lt;/a&gt;, returns a copy of this string with the prefix removed. Otherwise, returns this string.</source>
          <target state="translated">이 문자열이 주어진 &lt;a href=&quot;remove-prefix#kotlin.text%24removePrefix(kotlin.String,%20kotlin.CharSequence)/prefix&quot;&gt;prefix로&lt;/a&gt; 시작 하면 접두사가 제거 된이 문자열의 복사본을 반환합니다. 그렇지 않으면이 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="eaa08b32eac3b33ecf492f621bff941ea4a9fcd4" translate="yes" xml:space="preserve">
          <source>If this value is in &lt;a href=&quot;../-byte/-m-i-n_-v-a-l-u-e#kotlin.Byte.Companion%24MIN_VALUE&quot;&gt;Byte.MIN_VALUE&lt;/a&gt;..&lt;a href=&quot;../-byte/-m-a-x_-v-a-l-u-e#kotlin.Byte.Companion%24MAX_VALUE&quot;&gt;Byte.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;Byte&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;Int&lt;/code&gt;.</source>
          <target state="translated">이 값이 &lt;a href=&quot;../-byte/-m-i-n_-v-a-l-u-e#kotlin.Byte.Companion%24MIN_VALUE&quot;&gt;Byte.MIN_VALUE&lt;/a&gt; .. &lt;a href=&quot;../-byte/-m-a-x_-v-a-l-u-e#kotlin.Byte.Companion%24MAX_VALUE&quot;&gt;Byte.MAX_VALUE&lt;/a&gt; 에 있으면 결과 &lt;code&gt;Byte&lt;/code&gt; 값은이 &lt;code&gt;Int&lt;/code&gt; 와 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="fc02da33b8b0ff318b09d189a23b770163982e91" translate="yes" xml:space="preserve">
          <source>If this value is in &lt;a href=&quot;../-byte/-m-i-n_-v-a-l-u-e#kotlin.Byte.Companion%24MIN_VALUE&quot;&gt;Byte.MIN_VALUE&lt;/a&gt;..&lt;a href=&quot;../-byte/-m-a-x_-v-a-l-u-e#kotlin.Byte.Companion%24MAX_VALUE&quot;&gt;Byte.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;Byte&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;Long&lt;/code&gt;.</source>
          <target state="translated">이 값이 &lt;a href=&quot;../-byte/-m-i-n_-v-a-l-u-e#kotlin.Byte.Companion%24MIN_VALUE&quot;&gt;Byte.MIN_VALUE&lt;/a&gt; .. &lt;a href=&quot;../-byte/-m-a-x_-v-a-l-u-e#kotlin.Byte.Companion%24MAX_VALUE&quot;&gt;Byte.MAX_VALUE&lt;/a&gt; 에 있으면 결과 &lt;code&gt;Byte&lt;/code&gt; 값은이 &lt;code&gt;Long&lt;/code&gt; 과 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="490305470096f372ac8119db4e004b84e91a7481" translate="yes" xml:space="preserve">
          <source>If this value is in &lt;a href=&quot;../-byte/-m-i-n_-v-a-l-u-e#kotlin.Byte.Companion%24MIN_VALUE&quot;&gt;Byte.MIN_VALUE&lt;/a&gt;..&lt;a href=&quot;../-byte/-m-a-x_-v-a-l-u-e#kotlin.Byte.Companion%24MAX_VALUE&quot;&gt;Byte.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;Byte&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;Short&lt;/code&gt;.</source>
          <target state="translated">이 값이 &lt;a href=&quot;../-byte/-m-i-n_-v-a-l-u-e#kotlin.Byte.Companion%24MIN_VALUE&quot;&gt;Byte.MIN_VALUE&lt;/a&gt; .. &lt;a href=&quot;../-byte/-m-a-x_-v-a-l-u-e#kotlin.Byte.Companion%24MAX_VALUE&quot;&gt;Byte.MAX_VALUE&lt;/a&gt; 에 있으면 결과 &lt;code&gt;Byte&lt;/code&gt; 값은이 &lt;code&gt;Short&lt;/code&gt; 와 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="f92846150c40dce3860615a8d63e6d463453288e" translate="yes" xml:space="preserve">
          <source>If this value is in &lt;a href=&quot;../-int/-m-i-n_-v-a-l-u-e#kotlin.Int.Companion%24MIN_VALUE&quot;&gt;Int.MIN_VALUE&lt;/a&gt;..&lt;a href=&quot;../-int/-m-a-x_-v-a-l-u-e#kotlin.Int.Companion%24MAX_VALUE&quot;&gt;Int.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;Int&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;Long&lt;/code&gt;.</source>
          <target state="translated">이 값이 &lt;a href=&quot;../-int/-m-i-n_-v-a-l-u-e#kotlin.Int.Companion%24MIN_VALUE&quot;&gt;Int.MIN_VALUE&lt;/a&gt; .. &lt;a href=&quot;../-int/-m-a-x_-v-a-l-u-e#kotlin.Int.Companion%24MAX_VALUE&quot;&gt;Int.MAX_VALUE&lt;/a&gt; 에 있으면 결과 &lt;code&gt;Int&lt;/code&gt; 값은이 &lt;code&gt;Long&lt;/code&gt; 과 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="6a741800a8dda50919fa61b7fa403325e77f2e0d" translate="yes" xml:space="preserve">
          <source>If this value is in &lt;a href=&quot;../-short/-m-i-n_-v-a-l-u-e#kotlin.Short.Companion%24MIN_VALUE&quot;&gt;Short.MIN_VALUE&lt;/a&gt;..&lt;a href=&quot;../-short/-m-a-x_-v-a-l-u-e#kotlin.Short.Companion%24MAX_VALUE&quot;&gt;Short.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;Short&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;Int&lt;/code&gt;.</source>
          <target state="translated">이 값이 &lt;a href=&quot;../-short/-m-i-n_-v-a-l-u-e#kotlin.Short.Companion%24MIN_VALUE&quot;&gt;Short.MIN_VALUE&lt;/a&gt; .. &lt;a href=&quot;../-short/-m-a-x_-v-a-l-u-e#kotlin.Short.Companion%24MAX_VALUE&quot;&gt;Short.MAX_VALUE&lt;/a&gt; 에 있으면 결과 &lt;code&gt;Short&lt;/code&gt; 값은이 &lt;code&gt;Int&lt;/code&gt; 와 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="005b91e001ae975c4aa32f3aea7b1ec2812c965b" translate="yes" xml:space="preserve">
          <source>If this value is in &lt;a href=&quot;../-short/-m-i-n_-v-a-l-u-e#kotlin.Short.Companion%24MIN_VALUE&quot;&gt;Short.MIN_VALUE&lt;/a&gt;..&lt;a href=&quot;../-short/-m-a-x_-v-a-l-u-e#kotlin.Short.Companion%24MAX_VALUE&quot;&gt;Short.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;Short&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;Long&lt;/code&gt;.</source>
          <target state="translated">이 값이 &lt;a href=&quot;../-short/-m-i-n_-v-a-l-u-e#kotlin.Short.Companion%24MIN_VALUE&quot;&gt;Short.MIN_VALUE&lt;/a&gt; .. &lt;a href=&quot;../-short/-m-a-x_-v-a-l-u-e#kotlin.Short.Companion%24MAX_VALUE&quot;&gt;Short.MAX_VALUE&lt;/a&gt; 에 있으면 결과 &lt;code&gt;Short&lt;/code&gt; 값은이 &lt;code&gt;Long&lt;/code&gt; 과 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="db0284f249225c9c93443ff06ef1c4250bc05e17" translate="yes" xml:space="preserve">
          <source>If this value is in the range of &lt;code&gt;Char&lt;/code&gt; codes &lt;code&gt;Char.MIN_VALUE..Char.MAX_VALUE&lt;/code&gt;, the resulting &lt;code&gt;Char&lt;/code&gt; code is equal to this value.</source>
          <target state="translated">이 값이 &lt;code&gt;Char&lt;/code&gt; 코드 &lt;code&gt;Char.MIN_VALUE..Char.MAX_VALUE&lt;/code&gt; 범위에 있으면 결과 &lt;code&gt;Char&lt;/code&gt; 코드는이 값과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ba8d6d461e9008017be587a9202d1b43cf4ff54e" translate="yes" xml:space="preserve">
          <source>If this value is less than or equals to &lt;a href=&quot;../-byte/-m-a-x_-v-a-l-u-e#kotlin.Byte.Companion%24MAX_VALUE&quot;&gt;Byte.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;Byte&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;UByte&lt;/code&gt;. Otherwise the result is negative.</source>
          <target state="translated">이 값이 &lt;a href=&quot;../-byte/-m-a-x_-v-a-l-u-e#kotlin.Byte.Companion%24MAX_VALUE&quot;&gt;Byte.MAX_VALUE&lt;/a&gt; 보다 작거나 같은 경우 결과 &lt;code&gt;Byte&lt;/code&gt; 값은이 &lt;code&gt;UByte&lt;/code&gt; 와 동일한 숫자 값을 나타냅니다 . 그렇지 않으면 결과는 음수입니다.</target>
        </trans-unit>
        <trans-unit id="df39050abae12f0e8e01436504cfef55ec387e2d" translate="yes" xml:space="preserve">
          <source>If this value is less than or equals to &lt;a href=&quot;../-byte/-m-a-x_-v-a-l-u-e#kotlin.Byte.Companion%24MAX_VALUE&quot;&gt;Byte.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;Byte&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;UInt&lt;/code&gt;.</source>
          <target state="translated">이 값이 &lt;a href=&quot;../-byte/-m-a-x_-v-a-l-u-e#kotlin.Byte.Companion%24MAX_VALUE&quot;&gt;Byte.MAX_VALUE&lt;/a&gt; 보다 작거나 같은 경우 결과 &lt;code&gt;Byte&lt;/code&gt; 값은이 &lt;code&gt;UInt&lt;/code&gt; 와 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="4978f90a7ed1a79fd218cf1590a5d83b0509d961" translate="yes" xml:space="preserve">
          <source>If this value is less than or equals to &lt;a href=&quot;../-byte/-m-a-x_-v-a-l-u-e#kotlin.Byte.Companion%24MAX_VALUE&quot;&gt;Byte.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;Byte&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;ULong&lt;/code&gt;.</source>
          <target state="translated">이 값이 &lt;a href=&quot;../-byte/-m-a-x_-v-a-l-u-e#kotlin.Byte.Companion%24MAX_VALUE&quot;&gt;Byte.MAX_VALUE&lt;/a&gt; 보다 작거나 같은 경우 결과 &lt;code&gt;Byte&lt;/code&gt; 값은이 &lt;code&gt;ULong&lt;/code&gt; 과 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="6ca047505e5da8d6c0e87f024f03aaab76397dfc" translate="yes" xml:space="preserve">
          <source>If this value is less than or equals to &lt;a href=&quot;../-byte/-m-a-x_-v-a-l-u-e#kotlin.Byte.Companion%24MAX_VALUE&quot;&gt;Byte.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;Byte&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;UShort&lt;/code&gt;.</source>
          <target state="translated">이 값이 &lt;a href=&quot;../-byte/-m-a-x_-v-a-l-u-e#kotlin.Byte.Companion%24MAX_VALUE&quot;&gt;Byte.MAX_VALUE&lt;/a&gt; 보다 작거나 같은 경우 결과 &lt;code&gt;Byte&lt;/code&gt; 값은이 &lt;code&gt;UShort&lt;/code&gt; 와 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="e4c48fdf984577c7db86ab572e1f6df4cdbfd866" translate="yes" xml:space="preserve">
          <source>If this value is less than or equals to &lt;a href=&quot;../-int/-m-a-x_-v-a-l-u-e#kotlin.Int.Companion%24MAX_VALUE&quot;&gt;Int.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;Int&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;UInt&lt;/code&gt;. Otherwise the result is negative.</source>
          <target state="translated">이 값이 &lt;a href=&quot;../-int/-m-a-x_-v-a-l-u-e#kotlin.Int.Companion%24MAX_VALUE&quot;&gt;Int.MAX_VALUE&lt;/a&gt; 보다 작거나 같은 경우 결과 &lt;code&gt;Int&lt;/code&gt; 값은이 &lt;code&gt;UInt&lt;/code&gt; 와 동일한 숫자 값을 나타냅니다 . 그렇지 않으면 결과는 음수입니다.</target>
        </trans-unit>
        <trans-unit id="558a6d1dd84324e1f32448d5639a910b9702fe85" translate="yes" xml:space="preserve">
          <source>If this value is less than or equals to &lt;a href=&quot;../-int/-m-a-x_-v-a-l-u-e#kotlin.Int.Companion%24MAX_VALUE&quot;&gt;Int.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;Int&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;ULong&lt;/code&gt;.</source>
          <target state="translated">이 값이 &lt;a href=&quot;../-int/-m-a-x_-v-a-l-u-e#kotlin.Int.Companion%24MAX_VALUE&quot;&gt;Int.MAX_VALUE&lt;/a&gt; 보다 작거나 같은 경우 결과 &lt;code&gt;Int&lt;/code&gt; 값은이 &lt;code&gt;ULong&lt;/code&gt; 과 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="d5c7b7a5156a004ef779605c60b74b3e30f938ab" translate="yes" xml:space="preserve">
          <source>If this value is less than or equals to &lt;a href=&quot;../-long/-m-a-x_-v-a-l-u-e#kotlin.Long.Companion%24MAX_VALUE&quot;&gt;Long.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;Long&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;ULong&lt;/code&gt;. Otherwise the result is negative.</source>
          <target state="translated">이 값이 &lt;a href=&quot;../-long/-m-a-x_-v-a-l-u-e#kotlin.Long.Companion%24MAX_VALUE&quot;&gt;Long.MAX_VALUE&lt;/a&gt; 보다 작거나 같은 경우 결과 &lt;code&gt;Long&lt;/code&gt; 값은이 &lt;code&gt;ULong&lt;/code&gt; 과 동일한 숫자 값을 나타냅니다 . 그렇지 않으면 결과는 음수입니다.</target>
        </trans-unit>
        <trans-unit id="4d043b90606414b70c2e38bef9430e4d147c520b" translate="yes" xml:space="preserve">
          <source>If this value is less than or equals to &lt;a href=&quot;../-short/-m-a-x_-v-a-l-u-e#kotlin.Short.Companion%24MAX_VALUE&quot;&gt;Short.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;Short&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;UInt&lt;/code&gt;.</source>
          <target state="translated">이 값이 &lt;a href=&quot;../-short/-m-a-x_-v-a-l-u-e#kotlin.Short.Companion%24MAX_VALUE&quot;&gt;Short.MAX_VALUE&lt;/a&gt; 보다 작거나 같은 경우 결과 &lt;code&gt;Short&lt;/code&gt; 값은이 &lt;code&gt;UInt&lt;/code&gt; 와 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="30cf5a989061d05ea8b8590b44fff20c1be5f179" translate="yes" xml:space="preserve">
          <source>If this value is less than or equals to &lt;a href=&quot;../-short/-m-a-x_-v-a-l-u-e#kotlin.Short.Companion%24MAX_VALUE&quot;&gt;Short.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;Short&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;ULong&lt;/code&gt;.</source>
          <target state="translated">이 값이 &lt;a href=&quot;../-short/-m-a-x_-v-a-l-u-e#kotlin.Short.Companion%24MAX_VALUE&quot;&gt;Short.MAX_VALUE&lt;/a&gt; 보다 작거나 같은 경우 결과 &lt;code&gt;Short&lt;/code&gt; 값은이 &lt;code&gt;ULong&lt;/code&gt; 과 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="1a549db6113eee376be4eec1673b56713351397d" translate="yes" xml:space="preserve">
          <source>If this value is less than or equals to &lt;a href=&quot;../-short/-m-a-x_-v-a-l-u-e#kotlin.Short.Companion%24MAX_VALUE&quot;&gt;Short.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;Short&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;UShort&lt;/code&gt;. Otherwise the result is negative.</source>
          <target state="translated">이 값이 &lt;a href=&quot;../-short/-m-a-x_-v-a-l-u-e#kotlin.Short.Companion%24MAX_VALUE&quot;&gt;Short.MAX_VALUE&lt;/a&gt; 보다 작거나 같은 경우 결과 &lt;code&gt;Short&lt;/code&gt; 값은이 &lt;code&gt;UShort&lt;/code&gt; 와 동일한 숫자 값을 나타냅니다 . 그렇지 않으면 결과는 음수입니다.</target>
        </trans-unit>
        <trans-unit id="7879809b5daf67a980acd328829f4454ce83b90e" translate="yes" xml:space="preserve">
          <source>If this value is less than or equals to &lt;a href=&quot;../-u-byte/-m-a-x_-v-a-l-u-e&quot;&gt;UByte.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;UByte&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;UInt&lt;/code&gt;.</source>
          <target state="translated">이 값이 &lt;a href=&quot;../-u-byte/-m-a-x_-v-a-l-u-e&quot;&gt;UByte.MAX_VALUE&lt;/a&gt; 보다 작거나 같은 경우 결과 &lt;code&gt;UByte&lt;/code&gt; 값은이 &lt;code&gt;UInt&lt;/code&gt; 와 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="bcead8032199b4164256add596a32cf9db97266e" translate="yes" xml:space="preserve">
          <source>If this value is less than or equals to &lt;a href=&quot;../-u-byte/-m-a-x_-v-a-l-u-e&quot;&gt;UByte.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;UByte&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;ULong&lt;/code&gt;.</source>
          <target state="translated">이 값이 &lt;a href=&quot;../-u-byte/-m-a-x_-v-a-l-u-e&quot;&gt;UByte.MAX_VALUE&lt;/a&gt; 보다 작거나 같은 경우 결과 &lt;code&gt;UByte&lt;/code&gt; 값은이 &lt;code&gt;ULong&lt;/code&gt; 과 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="1121ef81db7e8693e07be091631a7082321f06c6" translate="yes" xml:space="preserve">
          <source>If this value is less than or equals to &lt;a href=&quot;../-u-byte/-m-a-x_-v-a-l-u-e&quot;&gt;UByte.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;UByte&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;UShort&lt;/code&gt;.</source>
          <target state="translated">이 값이 &lt;a href=&quot;../-u-byte/-m-a-x_-v-a-l-u-e&quot;&gt;UByte.MAX_VALUE&lt;/a&gt; 보다 작거나 같은 경우 결과 &lt;code&gt;UByte&lt;/code&gt; 값은이 &lt;code&gt;UShort&lt;/code&gt; 와 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="81dc4365e9ac822eeb6e28d60dee107cd6132748" translate="yes" xml:space="preserve">
          <source>If this value is less than or equals to &lt;a href=&quot;../-u-int/-m-a-x_-v-a-l-u-e&quot;&gt;UInt.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;UInt&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;ULong&lt;/code&gt;.</source>
          <target state="translated">이 값이 &lt;a href=&quot;../-u-int/-m-a-x_-v-a-l-u-e&quot;&gt;UInt.MAX_VALUE 이하인&lt;/a&gt; 경우, 결과의 &lt;code&gt;UInt&lt;/code&gt; 값은이 &lt;code&gt;ULong&lt;/code&gt; 와 같은 수치를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="3c9c01de18ce638bd129bff08018567a3e4127c6" translate="yes" xml:space="preserve">
          <source>If this value is less than or equals to &lt;a href=&quot;../-u-short/-m-a-x_-v-a-l-u-e&quot;&gt;UShort.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;UShort&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;UInt&lt;/code&gt;.</source>
          <target state="translated">이 값이 &lt;a href=&quot;../-u-short/-m-a-x_-v-a-l-u-e&quot;&gt;UShort.MAX_VALUE&lt;/a&gt; 보다 작거나 같은 경우 결과 &lt;code&gt;UShort&lt;/code&gt; 값은이 &lt;code&gt;UInt&lt;/code&gt; 와 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="a6f6b5210b89a3892e478e42ca97672805905a83" translate="yes" xml:space="preserve">
          <source>If this value is less than or equals to &lt;a href=&quot;../-u-short/-m-a-x_-v-a-l-u-e&quot;&gt;UShort.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;UShort&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;ULong&lt;/code&gt;.</source>
          <target state="translated">이 값이 &lt;a href=&quot;../-u-short/-m-a-x_-v-a-l-u-e&quot;&gt;UShort.MAX_VALUE&lt;/a&gt; 보다 작거나 같은 경우 결과 &lt;code&gt;UShort&lt;/code&gt; 값은이 &lt;code&gt;ULong&lt;/code&gt; 과 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="b503698fc5df8a655c9e1e6ad1697e72a8fc230d" translate="yes" xml:space="preserve">
          <source>If this value is non-negative, the resulting &lt;code&gt;Char&lt;/code&gt; code is equal to this value.</source>
          <target state="translated">이 값이 음수가 아닌 경우 결과 &lt;code&gt;Char&lt;/code&gt; 코드는이 값과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2db0fef9187625217d9cbad099e4b7a81b501888" translate="yes" xml:space="preserve">
          <source>If this value is positive and less than or equals to &lt;a href=&quot;-u-byte/-m-a-x_-v-a-l-u-e&quot;&gt;UByte.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;UByte&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;Int&lt;/code&gt;.</source>
          <target state="translated">이 값이 양수이고 &lt;a href=&quot;-u-byte/-m-a-x_-v-a-l-u-e&quot;&gt;UByte.MAX_VALUE&lt;/a&gt; 보다 작거나 같은 경우 결과 &lt;code&gt;UByte&lt;/code&gt; 값은이 &lt;code&gt;Int&lt;/code&gt; 와 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="92dfb012b562ce6d901306be8ab16c8954d89a73" translate="yes" xml:space="preserve">
          <source>If this value is positive and less than or equals to &lt;a href=&quot;-u-byte/-m-a-x_-v-a-l-u-e&quot;&gt;UByte.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;UByte&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;Long&lt;/code&gt;.</source>
          <target state="translated">이 값이 양수이고 &lt;a href=&quot;-u-byte/-m-a-x_-v-a-l-u-e&quot;&gt;UByte.MAX_VALUE&lt;/a&gt; 보다 작거나 같은 경우 결과 &lt;code&gt;UByte&lt;/code&gt; 값은이 &lt;code&gt;Long&lt;/code&gt; 과 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="953da8b824c2844b89e1295212fa13c1e2d80e5e" translate="yes" xml:space="preserve">
          <source>If this value is positive and less than or equals to &lt;a href=&quot;-u-byte/-m-a-x_-v-a-l-u-e&quot;&gt;UByte.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;UByte&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;Short&lt;/code&gt;.</source>
          <target state="translated">이 값이 양수이고 &lt;a href=&quot;-u-byte/-m-a-x_-v-a-l-u-e&quot;&gt;UByte.MAX_VALUE&lt;/a&gt; 보다 작거나 같은 경우 결과 &lt;code&gt;UByte&lt;/code&gt; 값은이 &lt;code&gt;Short&lt;/code&gt; 와 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="9fa06c56030e25a9536cc3f63946d539809dea9f" translate="yes" xml:space="preserve">
          <source>If this value is positive and less than or equals to &lt;a href=&quot;-u-int/-m-a-x_-v-a-l-u-e&quot;&gt;UInt.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;UInt&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;Long&lt;/code&gt;.</source>
          <target state="translated">이 값이 양수이고 &lt;a href=&quot;-u-int/-m-a-x_-v-a-l-u-e&quot;&gt;UInt.MAX_VALUE&lt;/a&gt; 보다 작거나 같은 경우 결과 &lt;code&gt;UInt&lt;/code&gt; 값은이 &lt;code&gt;Long&lt;/code&gt; 과 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="50d4512f22b639993dc1259c1108fdebd639d406" translate="yes" xml:space="preserve">
          <source>If this value is positive and less than or equals to &lt;a href=&quot;-u-short/-m-a-x_-v-a-l-u-e&quot;&gt;UShort.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;UShort&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;Int&lt;/code&gt;.</source>
          <target state="translated">이 값이 양수이고 &lt;a href=&quot;-u-short/-m-a-x_-v-a-l-u-e&quot;&gt;UShort.MAX_VALUE&lt;/a&gt; 보다 작거나 같은 경우 결과 &lt;code&gt;UShort&lt;/code&gt; 값은이 &lt;code&gt;Int&lt;/code&gt; 와 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="8dadb1990a07a6ce6e741d4f630eb1d46e9ed4a3" translate="yes" xml:space="preserve">
          <source>If this value is positive and less than or equals to &lt;a href=&quot;-u-short/-m-a-x_-v-a-l-u-e&quot;&gt;UShort.MAX_VALUE&lt;/a&gt;, the resulting &lt;code&gt;UShort&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;Long&lt;/code&gt;.</source>
          <target state="translated">이 값이 양수이고 &lt;a href=&quot;-u-short/-m-a-x_-v-a-l-u-e&quot;&gt;UShort.MAX_VALUE&lt;/a&gt; 보다 작거나 같은 경우 결과 &lt;code&gt;UShort&lt;/code&gt; 값은이 &lt;code&gt;Long&lt;/code&gt; 과 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="f89685f072ef956cdc798c29edd60c19b535cdfe" translate="yes" xml:space="preserve">
          <source>If this value is positive, the resulting &lt;code&gt;UByte&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;Byte&lt;/code&gt;.</source>
          <target state="translated">이 값이 양수이면 결과 &lt;code&gt;UByte&lt;/code&gt; 값은이 &lt;code&gt;Byte&lt;/code&gt; 와 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="509d2f430404b1731ac6b4aaf8d343dae3f0754b" translate="yes" xml:space="preserve">
          <source>If this value is positive, the resulting &lt;code&gt;UInt&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;Byte&lt;/code&gt;.</source>
          <target state="translated">이 값이 양수인 경우 결과 &lt;code&gt;UInt&lt;/code&gt; 값은이 &lt;code&gt;Byte&lt;/code&gt; 와 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="273aa3ecdd133965b3ad433946ad9ef5ed7f4eee" translate="yes" xml:space="preserve">
          <source>If this value is positive, the resulting &lt;code&gt;UInt&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;Int&lt;/code&gt;.</source>
          <target state="translated">이 값이 양수인 경우 결과 &lt;code&gt;UInt&lt;/code&gt; 값은이 &lt;code&gt;Int&lt;/code&gt; 와 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="2607741fe174b50565a03e15e9436cf3b0a3f525" translate="yes" xml:space="preserve">
          <source>If this value is positive, the resulting &lt;code&gt;UInt&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;Short&lt;/code&gt;.</source>
          <target state="translated">이 값이 양수이면 결과 &lt;code&gt;UInt&lt;/code&gt; 값은이 &lt;code&gt;Short&lt;/code&gt; 와 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="0f095f5bb49dc6a53286dbebb4a62e97505f3fa8" translate="yes" xml:space="preserve">
          <source>If this value is positive, the resulting &lt;code&gt;ULong&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;Byte&lt;/code&gt;.</source>
          <target state="translated">이 값이 양수이면 결과 &lt;code&gt;ULong&lt;/code&gt; 값은이 &lt;code&gt;Byte&lt;/code&gt; 와 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="c42bf5546a05357422f652dbab02ab2c5562b1b9" translate="yes" xml:space="preserve">
          <source>If this value is positive, the resulting &lt;code&gt;ULong&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;Int&lt;/code&gt;.</source>
          <target state="translated">이 값이 양수이면 결과 &lt;code&gt;ULong&lt;/code&gt; 값은이 &lt;code&gt;Int&lt;/code&gt; 와 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="1c908d0ebe8742d6be314405ace34fa252b6ec7d" translate="yes" xml:space="preserve">
          <source>If this value is positive, the resulting &lt;code&gt;ULong&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;Long&lt;/code&gt;.</source>
          <target state="translated">이 값이 양수이면 결과 &lt;code&gt;ULong&lt;/code&gt; 값은이 &lt;code&gt;Long&lt;/code&gt; 과 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="b851c29ac8506df58c238a4d6e63ef0a6ce3bf18" translate="yes" xml:space="preserve">
          <source>If this value is positive, the resulting &lt;code&gt;ULong&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;Short&lt;/code&gt;.</source>
          <target state="translated">이 값이 양수이면 결과 &lt;code&gt;ULong&lt;/code&gt; 값은이 &lt;code&gt;Short&lt;/code&gt; 와 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="a4186277a2fae421e55cc11af12fc473065dce40" translate="yes" xml:space="preserve">
          <source>If this value is positive, the resulting &lt;code&gt;UShort&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;Byte&lt;/code&gt;.</source>
          <target state="translated">이 값이 양수인 경우 결과 &lt;code&gt;UShort&lt;/code&gt; 값은이 &lt;code&gt;Byte&lt;/code&gt; 와 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="f91f720debed186fe9dc1691606e3420ca01e262" translate="yes" xml:space="preserve">
          <source>If this value is positive, the resulting &lt;code&gt;UShort&lt;/code&gt; value represents the same numerical value as this &lt;code&gt;Short&lt;/code&gt;.</source>
          <target state="translated">이 값이 양수인 경우 결과 &lt;code&gt;UShort&lt;/code&gt; 값은이 &lt;code&gt;Short&lt;/code&gt; 와 동일한 숫자 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="b92f3912f030b245b906c1d0285095411d239059" translate="yes" xml:space="preserve">
          <source>If two corresponding elements are nested arrays, they are also compared deeply. If any of arrays contains itself on any nesting level the behavior is undefined.</source>
          <target state="translated">두 개의 해당 요소가 중첩 배열이면 깊이 비교됩니다. 배열 중 하나라도 중첩 수준에 포함 된 경우 동작이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5c426df69b29a4f2a8f05ed102d4c7c508452b26" translate="yes" xml:space="preserve">
          <source>If two objects are equal according to the &lt;code&gt;equals()&lt;/code&gt; method, then calling the &lt;code&gt;hashCode&lt;/code&gt; method on each of the two objects must produce the same integer result.</source>
          <target state="translated">&lt;code&gt;equals()&lt;/code&gt; 메소드 에 따라 두 오브젝트가 동일한 경우 두 오브젝트 각각 에서 &lt;code&gt;hashCode&lt;/code&gt; 메소드 를 호출 하면 동일한 정수 결과가 생성되어야합니다.</target>
        </trans-unit>
        <trans-unit id="848bd4767d40a5b040578d4b4acc3831b4a5c116" translate="yes" xml:space="preserve">
          <source>If using Android Studio, the following needs to be added under android:</source>
          <target state="translated">Android Studio를 사용하는 경우 android 아래에 다음을 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="835af367bcaa35713fbb44c63e3433507604b4f9" translate="yes" xml:space="preserve">
          <source>If using Ant or Maven, the same configuration applies. The only difference being that the Runner Type would be Ant or Maven respectively.</source>
          <target state="translated">Ant 또는 Maven을 사용하는 경우 동일한 구성이 적용됩니다. 유일한 차이점은 러너 유형이 각각 Ant 또는 Maven이라는 것입니다.</target>
        </trans-unit>
        <trans-unit id="00e086822c4cc4c3d86e846ccfc2b1c6bbc7e5e5" translate="yes" xml:space="preserve">
          <source>If using Ant, Maven or Gradle, the setup process is straightforward. All that is needed is to define the Build Step. In our case, if using Gradle we'd simply define the required parameters such as the Step Name and Gradle tasks that need executing for the Runner Type.</source>
          <target state="translated">Ant, Maven 또는 Gradle을 사용하는 경우 설정 프로세스가 간단합니다. 필요한 것은 빌드 단계를 정의하는 것입니다. 이 경우 Gradle을 사용하는 경우 단계 이름 및 Gradle 태스크와 같은 필수 매개 변수를 러너 유형에 대해 실행해야하는 것으로 정의하면됩니다.</target>
        </trans-unit>
        <trans-unit id="6d1aa0dbbc7faa5d8c75c6b538e6bd8ea6617548" translate="yes" xml:space="preserve">
          <source>If using IntelliJ IDEA build system with TeamCity, we need to make sure that the version of Kotlin being used by IntelliJ IDEA is the same as that that TeamCity runs. This would mean that we need to download the specific version of the Kotlin plugin and install it on TeamCity.</source>
          <target state="translated">TeamCity와 함께 IntelliJ IDEA 빌드 시스템을 사용하는 경우 IntelliJ IDEA에서 사용중인 Kotlin 버전이 TeamCity가 실행되는 버전과 동일해야합니다. 이는 특정 버전의 Kotlin 플러그인을 다운로드하여 TeamCity에 설치해야 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="1ff8b36dc1a6a3cc57b717edeaeb3788168f606b" translate="yes" xml:space="preserve">
          <source>If using Maven or Gradle, we can also configure the module output format. For more information see &lt;a href=&quot;http://kotlinlang.org/docs/reference/js-modules.html&quot;&gt;JavaScript Modules&lt;/a&gt;.</source>
          <target state="translated">Maven 또는 Gradle을 사용하는 경우 모듈 출력 형식을 구성 할 수도 있습니다. 자세한 내용은 &lt;a href=&quot;http://kotlinlang.org/docs/reference/js-modules.html&quot;&gt;JavaScript 모듈을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a5a4dc0ed9963550c2c79f4e04423d9486f9f6cf" translate="yes" xml:space="preserve">
          <source>If using a Continuous Integration tool different to TeamCity, as long as it supports any of the build tools, or calling command line tools, compiling Kotlin and automating things as part of a CI process should be possible.</source>
          <target state="translated">TeamCity와 다른 Continuous Integration 도구를 사용하는 경우 빌드 도구 중 하나를 지원하거나 명령 줄 도구를 호출하면 Kotlin을 컴파일하고 CI 프로세스의 일부로 자동화 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="6bd5591695bc9bb315e16734b0ff743bacc22bbf" translate="yes" xml:space="preserve">
          <source>If using a previous version, refer to the &lt;a href=&quot;https://confluence.jetbrains.com/display/TCD9/Working+with+Meta-Runner&quot;&gt;documentation on how to add meta-runners&lt;/a&gt;.</source>
          <target state="translated">이전 버전을 사용하는 경우 &lt;a href=&quot;https://confluence.jetbrains.com/display/TCD9/Working+with+Meta-Runner&quot;&gt;메타 러너 추가 방법에&lt;/a&gt; 대한 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="449042335ccaad499545704799876f951b9d4d55" translate="yes" xml:space="preserve">
          <source>If values are equal, returns the first one.</source>
          <target state="translated">값이 같으면 첫 번째 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="83ff93c719c3677a5febd54d97d72cdccbce6a99" translate="yes" xml:space="preserve">
          <source>If we call &lt;code&gt;c.foo()&lt;/code&gt; of any &lt;code&gt;c&lt;/code&gt; of type &lt;code&gt;C&lt;/code&gt;, it will print &quot;member&quot;, not &quot;extension&quot;.</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; 타입 &lt;code&gt;c&lt;/code&gt; 의 &lt;code&gt;c.foo()&lt;/code&gt; 를 호출하면 &quot;extension&quot;이 아닌 &quot;member&quot;를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="379283767448c54e1e97c1028507253f860becb5" translate="yes" xml:space="preserve">
          <source>If we choose a non-null type, the compiler will emit an assertion upon assignment. This prevents Kotlin's non-null variables from holding nulls. Assertions are also emitted when we pass platform values to Kotlin functions expecting non-null values etc. Overall, the compiler does its best to prevent nulls from propagating far through the program (although sometimes this is impossible to eliminate entirely, because of generics).</source>
          <target state="translated">널이 아닌 유형을 선택하면 할당시 컴파일러가 어설 션을 생성합니다. 이것은 Kotlin의 널이 아닌 변수가 널을 보유하지 못하게합니다. 널값이 아닌 값을 기대하는 Kotlin 함수에 플랫폼 값을 전달할 때 어설 션도 생성됩니다. 전반적으로 컴파일러는 널이 프로그램을 통해 멀리 전파되는 것을 막기 위해 최선을 다합니다 (종종 제네릭 때문에 완전히 제거 할 수는 없지만).</target>
        </trans-unit>
        <trans-unit id="bdbae50858519197b3fe083596ba04b9db8edf5b" translate="yes" xml:space="preserve">
          <source>If we define a custom setter, it will be called every time we assign a value to the property. A custom setter looks like this:</source>
          <target state="translated">커스텀 세터를 정의하면 속성에 값을 할당 할 때마다 호출됩니다. 커스텀 세터는 다음과 같습니다 :</target>
        </trans-unit>
        <trans-unit id="d5788a5cd4b3c40d8ba64eb6708ad2b0a9b603bc" translate="yes" xml:space="preserve">
          <source>If we didn't specify the &lt;code&gt;@JsName&lt;/code&gt; annotation, the name of the corresponding function would contain a suffix calculated from the function signature, for example &lt;code&gt;hello_61zpoe$&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@JsName&lt;/code&gt; 어노테이션을 지정하지 않으면 해당 함수의 이름에 함수 서명에서 계산 된 접미 부가 포함됩니다 (예 : &lt;code&gt;hello_61zpoe$&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="966f788e727a4b595780377e8042611cc0480c54" translate="yes" xml:space="preserve">
          <source>If we had wanted to express the same thing in Python, it would have looked like this, and we would be hamstrung by the fact that lambda functions can only contain one expression, so we need explicit function definitions for everything but the oneliners:</source>
          <target state="translated">파이썬에서 같은 것을 표현하고 싶다면 다음과 같이 보일 것입니다. 람다 함수에는 하나의 표현식 만 포함될 수 있으므로 oneliners 이외의 모든 것에 대한 명시적인 함수 정의가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="dc0fca0f296a8cb428a1796bfc197561c1551e47" translate="yes" xml:space="preserve">
          <source>If we leave all the optional annotations out, what's left looks like this:</source>
          <target state="translated">모든 선택적 주석을 생략하면 왼쪽은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7f0622f86bfe1754250cfd5960f42eb9787c1baa" translate="yes" xml:space="preserve">
          <source>If we need to use a member of a class, or an extension function, it needs to be qualified, e.g. &lt;code&gt;String::toCharArray&lt;/code&gt;.</source>
          <target state="translated">클래스의 멤버 또는 확장 함수를 사용해야하는 경우 &lt;code&gt;String::toCharArray&lt;/code&gt; 와 같이 정규화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="06f2f1ba4877a89d728de7b4cb1810c2c9646349" translate="yes" xml:space="preserve">
          <source>If we need wildcards where they are not generated by default, we can use the &lt;code&gt;@JvmWildcard&lt;/code&gt; annotation:</source>
          <target state="translated">기본적으로 생성되지 않은 와일드 카드가 필요한 경우 &lt;code&gt;@JvmWildcard&lt;/code&gt; 주석을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8622531a5c0429cfdda336ff31f83fe890fe02ca" translate="yes" xml:space="preserve">
          <source>If we try to use the same non-blocking &lt;code&gt;delay()&lt;/code&gt; function directly inside &lt;code&gt;main()&lt;/code&gt;, we'll get a compiler error:</source>
          <target state="translated">&lt;code&gt;main()&lt;/code&gt; 내 에서 동일한 비 차단 &lt;code&gt;delay()&lt;/code&gt; 함수를 직접 사용하려고 하면 컴파일러 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="eec42d7483409e40f6e340d8a3d88fe567b92801" translate="yes" xml:space="preserve">
          <source>If we want to call the synthetic properties on &lt;code&gt;View&lt;/code&gt;, we should also import &lt;code&gt;kotlinx.android.synthetic.main.activity_main.view.*&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;View&lt;/code&gt; 에서 합성 속성을 호출하려면 &lt;code&gt;kotlinx.android.synthetic.main.activity_main.view.*&lt;/code&gt; 도 가져와야 합니다 .</target>
        </trans-unit>
        <trans-unit id="df31a64d374ba97c421367b3cdcce507cbe75299" translate="yes" xml:space="preserve">
          <source>If we want, we can add tests to a specific platform, then it will be executed only as part of these platform tests. For example, we can add UTF-16 tests on JVM. Just follow the same steps as before, but create file in &lt;code&gt;jvmTest/kotlin/jetbrains/base64&lt;/code&gt;:</source>
          <target state="translated">원하는 경우 특정 플랫폼에 테스트를 추가 할 수 있으며 이러한 플랫폼 테스트의 일부로 만 실행됩니다. 예를 들어 JVM에서 UTF-16 테스트를 추가 할 수 있습니다. 이전과 동일한 단계를 &lt;code&gt;jvmTest/kotlin/jetbrains/base64&lt;/code&gt; 파일을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="ba8fe72a36f3192d28c0b1bb2a6adebf2c73a672" translate="yes" xml:space="preserve">
          <source>If we were to introduce another class &lt;code&gt;Bicycle&lt;/code&gt;, which should be neither a subclass nor a superclass of &lt;code&gt;MotorVehicle&lt;/code&gt;, we could still make it implement &lt;code&gt;Driveable&lt;/code&gt;, as long as we declare &lt;code&gt;maxSpeed&lt;/code&gt; and &lt;code&gt;drive&lt;/code&gt; in &lt;code&gt;Bicycle&lt;/code&gt;.</source>
          <target state="translated">하위 클래스 나 &lt;code&gt;MotorVehicle&lt;/code&gt; 의 수퍼 클래스가 아니어야하는 또 다른 클래스 &lt;code&gt;Bicycle&lt;/code&gt; 을 소개 &lt;code&gt;Driveable&lt;/code&gt; , &lt;code&gt;maxSpeed&lt;/code&gt; 를 선언 하고 &lt;code&gt;Bicycle&lt;/code&gt; &lt;code&gt;drive&lt;/code&gt; 한 여전히 Driveable 을 구현할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="84ed0f9beb7f91564144926831adc67accd41344" translate="yes" xml:space="preserve">
          <source>If we're not using IntelliJ IDEA, we can configure the &lt;code&gt;pom.xml&lt;/code&gt; file manually to target JavaScript, by adding the following entries</source>
          <target state="translated">IntelliJ IDEA를 사용하지 않는 경우 다음 항목을 추가하여 JavaScript를 대상으로 &lt;code&gt;pom.xml&lt;/code&gt; 파일을 수동으로 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4acfe17479a9d138aec02a2b5400d83b9dbad62" translate="yes" xml:space="preserve">
          <source>If what the overriding function wants to do is an extension of what the overridden function did, you can call the overridden function via &lt;code&gt;super&lt;/code&gt; (either before, after, or between other code):</source>
          <target state="translated">재정의 함수가 수행하려는 작업이 재정의 된 함수의 확장 인 경우 &lt;code&gt;super&lt;/code&gt; 를 통해 (이전, 이후 또는 다른 코드간에) 재정의 된 함수를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="859a34cc0f1bc449ccdc83a5bb060605e6dcaa25" translate="yes" xml:space="preserve">
          <source>If you already &lt;strong&gt;have a Java project&lt;/strong&gt;, you can:</source>
          <target state="translated">이미 &lt;strong&gt;Java 프로젝트가있는&lt;/strong&gt; 경우 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c93cd73e42edadff5832f929c0b9aee1adf9c114" translate="yes" xml:space="preserve">
          <source>If you already have an &lt;code&gt;Iterable&lt;/code&gt; object (such as a &lt;code&gt;List&lt;/code&gt; or a &lt;code&gt;Set&lt;/code&gt;), you can create a sequence from it by calling &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/as-sequence&quot;&gt;&lt;code&gt;asSequence()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Iterable&lt;/code&gt; 객체 (예 : &lt;code&gt;List&lt;/code&gt; 또는 &lt;code&gt;Set&lt;/code&gt; ) 가 이미있는 경우 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/as-sequence&quot;&gt; &lt;code&gt;asSequence()&lt;/code&gt; &lt;/a&gt; 를 호출하여 해당 객체 에서 시퀀스를 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fc29b28eefcc5ecff8f112f0914c7751c0121584" translate="yes" xml:space="preserve">
          <source>If you already have the Java classes, you can just copy them to the project directories.</source>
          <target state="translated">Java 클래스가 이미있는 경우 프로젝트 디렉토리로 복사하면됩니다.</target>
        </trans-unit>
        <trans-unit id="6b839b9469fa700514c4a020dc91dfcc6a1e8d21" translate="yes" xml:space="preserve">
          <source>If you are creating a library that will be consumed from JavaScript or a Node.js file, and want to use a different module system, the instructions are slightly different.</source>
          <target state="translated">JavaScript 또는 Node.js 파일에서 사용할 라이브러리를 만들고 다른 모듈 시스템을 사용하려는 경우 지침이 약간 다릅니다.</target>
        </trans-unit>
        <trans-unit id="4e80a816776f6d15384568dae346e099a9c4bc29" translate="yes" xml:space="preserve">
          <source>If you are new to the JVM and Java, check out the &lt;a href=&quot;http://hadihariri.com/2013/12/29/jvm-minimal-survival-guide-for-the-dotnet-developer/&quot;&gt;JVM Minimal Survival Guide&lt;/a&gt;. If you are new to IntelliJ IDEA, check out the &lt;a href=&quot;http://hadihariri.com/2014/01/06/intellij-idea-minimal-survival-guide/&quot;&gt;The IntelliJ IDEA Minimal Survival Guide&lt;/a&gt;.</source>
          <target state="translated">JVM 및 Java를 처음 사용하는 경우 &lt;a href=&quot;http://hadihariri.com/2013/12/29/jvm-minimal-survival-guide-for-the-dotnet-developer/&quot;&gt;JVM 최소 생존 안내서를&lt;/a&gt; 확인하십시오 . IntelliJ IDEA를 처음 사용하는 경우 &lt;a href=&quot;http://hadihariri.com/2014/01/06/intellij-idea-minimal-survival-guide/&quot;&gt;IntelliJ IDEA 최소 생존 안내서를 확인하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3a098b59cc7c828b6cf7a7a722a6433f92888a1c" translate="yes" xml:space="preserve">
          <source>If you are using IntelliJ IDEA, start with &lt;a href=&quot;getting-started&quot;&gt;Getting Started&lt;/a&gt; and then work your way through the &lt;a href=&quot;koans&quot;&gt;Kotlin Koans&lt;/a&gt;.</source>
          <target state="translated">IntelliJ IDEA를 사용하는 경우 &lt;a href=&quot;getting-started&quot;&gt;시작하기&lt;/a&gt; 로 시작한 다음 &lt;a href=&quot;koans&quot;&gt;Kotlin Koans를&lt;/a&gt; 통해 작업하십시오 .</target>
        </trans-unit>
        <trans-unit id="92c9f5001a0b1041d30c375e3f64079f5f4024cf" translate="yes" xml:space="preserve">
          <source>If you are using IntelliJ IDEA, start with &lt;a href=&quot;getting-started&quot;&gt;Getting Started&lt;/a&gt;.</source>
          <target state="translated">IntelliJ IDEA를 사용하는 경우 시작 &lt;a href=&quot;getting-started&quot;&gt;하기로 시작하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="288920b3c9422f077df54c1f4e25ceb3fa6051e0" translate="yes" xml:space="preserve">
          <source>If you are using the command line compiler, start with &lt;a href=&quot;command-line&quot;&gt;Working with the Command Line Compiler&lt;/a&gt; and then work your way through the &lt;a href=&quot;koans&quot;&gt;Kotlin Koans&lt;/a&gt;;</source>
          <target state="translated">명령 행 컴파일러를 사용하는 경우 명령 행 컴파일러 &lt;a href=&quot;command-line&quot;&gt;작업으로&lt;/a&gt; 시작한 다음 &lt;a href=&quot;koans&quot;&gt;Kotlin Koans를&lt;/a&gt; 통해 작업하십시오 .</target>
        </trans-unit>
        <trans-unit id="30938b7e8379a33204d1fef78a0ab9d4d4d9e21f" translate="yes" xml:space="preserve">
          <source>If you are writing an external declaration for a JavaScript function which has an optional parameter, use &lt;code&gt;definedExternally&lt;/code&gt;. This delegates the generation of the default values to the JavaScript function itself:</source>
          <target state="translated">선택적 매개 변수가있는 JavaScript 함수에 대한 외부 선언을 작성하는 경우 &lt;code&gt;definedExternally&lt;/code&gt; 를 사용 하십시오 . 이것은 기본값 생성을 JavaScript 함수 자체에 위임합니다.</target>
        </trans-unit>
        <trans-unit id="f2a50c48e84ca80688cd2b0e1b9297326e7b2f1d" translate="yes" xml:space="preserve">
          <source>If you build your module with Gradle, you can add arguments like this:</source>
          <target state="translated">Gradle로 모듈을 빌드하면 다음과 같은 인수를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd3aa7d69244f58e95e8689b9c6402ed443bb559" translate="yes" xml:space="preserve">
          <source>If you consider all the APIs of your module experimental, you can mark the entire module as such with the compiler argument &lt;code&gt;-Xexperimental&lt;/code&gt; as described in &lt;a href=&quot;#module-wide-use&quot;&gt;Module-wide use&lt;/a&gt;.</source>
          <target state="translated">모듈의 모든 API를 실험적으로 &lt;a href=&quot;#module-wide-use&quot;&gt;사용하는 경우 모듈 전체 사용에&lt;/a&gt; 설명 된대로 컴파일러 인수 &lt;code&gt;-Xexperimental&lt;/code&gt; 을 사용 하여 전체 모듈을 표시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e700eece24a382c6a466861314d880f1c63adba4" translate="yes" xml:space="preserve">
          <source>If you declare a factory function for a class, avoid giving it the same name as the class itself. Prefer using a distinct name making it clear why the behavior of the factory function is special. Only if there is really no special semantics, you can use the same name as the class.</source>
          <target state="translated">클래스의 팩토리 함수를 선언하는 경우 클래스 자체와 동일한 이름을 지정하지 마십시오. 팩토리 기능의 동작이 특별한 이유를 명확하게하는 고유 한 이름을 사용하는 것이 좋습니다. 실제로 특별한 의미가없는 경우에만 클래스와 동일한 이름을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1ed8ae699e2f0e0c43725a76e755048bb606787" translate="yes" xml:space="preserve">
          <source>If you declare a standard library dependency explicitly (for example, if you need a different version), the Kotlin Gradle plugin won&amp;rsquo;t override it or add a second standard library.</source>
          <target state="translated">표준 라이브러리 종속성을 명시 적으로 선언하면 (예 : 다른 버전이 필요한 경우) Kotlin Gradle 플러그인이이를 재정의하거나 두 번째 표준 라이브러리를 추가하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a09dc2e7a857fda68536a28e258f8622ea168f72" translate="yes" xml:space="preserve">
          <source>If you declare your Kotlin code in a package, &lt;code&gt;main&lt;/code&gt; would be followed by a package definition part. For example, this goes after the &lt;code&gt;main&lt;/code&gt; declaration if you put your &lt;code&gt;main&lt;/code&gt; function in the &lt;code&gt;org.example.hellojs&lt;/code&gt; package:</source>
          <target state="translated">Kotlin 코드를 패키지에 선언하면 &lt;code&gt;main&lt;/code&gt; 다음에 패키지 정의 부분이옵니다. 예를 들어, &lt;code&gt;main&lt;/code&gt; 함수를 &lt;code&gt;org.example.hellojs&lt;/code&gt; 패키지 에 넣으면 &lt;code&gt;main&lt;/code&gt; 선언을 따릅니다 .</target>
        </trans-unit>
        <trans-unit id="c9f4c0d0e98edca70ce37e016401b88c44c12e52" translate="yes" xml:space="preserve">
          <source>If you do not need a standard library at all, you can add the opt-out flag to the &lt;code&gt;gradle.properties&lt;/code&gt;:</source>
          <target state="translated">표준 라이브러리가 전혀 필요하지 않은 경우 &lt;code&gt;gradle.properties&lt;/code&gt; 에 옵트 아웃 플래그를 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2d0c772b88930f846f25631788c26caf89a248c8" translate="yes" xml:space="preserve">
          <source>If you do not specify any visibility modifier, &lt;code&gt;public&lt;/code&gt; is used by default, which means that your declarations will be visible everywhere;</source>
          <target state="translated">가시성 수정자를 지정하지 않으면 기본적으로 &lt;code&gt;public&lt;/code&gt; 이 사용됩니다. 즉, 선언이 모든 곳에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="cadfb46ca63577b7ac5a59ea3e20f042f8a1e23b" translate="yes" xml:space="preserve">
          <source>If you don't care about the return value from the function, but you want to make one or more calls involving something that might be null and then keep on using that value, try &lt;code&gt;apply()&lt;/code&gt;, which returns the value it's called on. This is particularly useful if you want to work with many members of the object in question:</source>
          <target state="translated">함수의 반환 값에 신경 쓰지 않지만 null 일 수있는 무언가를 포함하는 하나 이상의 호출을 만들고 그 값을 계속 사용 &lt;code&gt;apply()&lt;/code&gt; 시도 하십시오.이 값은 호출 된 값을 반환합니다. 이는 해당 객체의 많은 멤버와 작업하려는 경우 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="25be6af74cab7ee5d3f6a46048e18b2c9c41852a" translate="yes" xml:space="preserve">
          <source>If you don't care about the return value, you don't need to assign it to anything.</source>
          <target state="translated">반환 값에 신경 쓰지 않으면 아무것도 할당하지 않아도됩니다.</target>
        </trans-unit>
        <trans-unit id="b5e43077cfafc57268582f5f13c46e3f8aaffa0e" translate="yes" xml:space="preserve">
          <source>If you don't have an instance of the class, you can get the class metadata with &lt;code&gt;String::class.java&lt;/code&gt; (but you can't invoke any of its members until you have an instance).</source>
          <target state="translated">클래스의 인스턴스가 없으면 &lt;code&gt;String::class.java&lt;/code&gt; 사용하여 클래스 메타 데이터를 얻을 수 있지만 인스턴스가있을 때까지 멤버를 호출 할 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="ef8266bd47e097890ef64d7166bd8dd100eb20ff" translate="yes" xml:space="preserve">
          <source>If you don't have any idea (or don't care) what the generic type might be, you can use a &lt;em&gt;star-projection&lt;/em&gt;:</source>
          <target state="translated">제네릭 형식이 무엇인지 전혀 모르거나 신경 쓰지 않으면 &lt;em&gt;별 투영을&lt;/em&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3e3d1700eb36e84d61d0cc0f83792e108ac15508" translate="yes" xml:space="preserve">
          <source>If you don't need a variable in the destructuring declaration, you can place an underscore instead of its name:</source>
          <target state="translated">파괴 선언에 변수가 필요하지 않으면 이름 대신 밑줄을 넣을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="22b00c7537a626ef39f32b96fa84adefd77db83f" translate="yes" xml:space="preserve">
          <source>If you don't specify a use-site target, the target is chosen according to the &lt;code&gt;@Target&lt;/code&gt; annotation of the annotation being used. If there are multiple applicable targets, the first applicable target from the following list is used:</source>
          <target state="translated">사용 사이트 대상을 지정하지 않으면 사용 중인 주석의 &lt;code&gt;@Target&lt;/code&gt; 주석 에 따라 대상이 선택 됩니다. 적용 가능한 대상이 여러 개인 경우 다음 목록의 첫 번째 적용 가능한 대상이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="311d02e910900437e250a96c50bd0e61d68e28d2" translate="yes" xml:space="preserve">
          <source>If you don't specify the minimum target version and a dependency Pod requires a higher deployment target, you may get an error.</source>
          <target state="translated">최소 대상 버전을 지정하지 않고 종속성 포드에 더 높은 배포 대상이 필요한 경우 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="91ea08ad1a525edd6dec0bb4e202636f7932a646" translate="yes" xml:space="preserve">
          <source>If you don't use Gradle or Maven, make sure you have &lt;code&gt;kotlin-reflect.jar&lt;/code&gt; in the classpath of your project. In other supported cases (IntelliJ IDEA projects, using command-line compiler or Ant), it is added by default. In command-line compiler and Ant, you can use &lt;code&gt;-no-reflect&lt;/code&gt; compiler option to exclude &lt;code&gt;kotlin-reflect.jar&lt;/code&gt; from the classpath.</source>
          <target state="translated">Gradle 또는 Maven을 사용하지 않는 경우 프로젝트의 클래스 경로에 &lt;code&gt;kotlin-reflect.jar&lt;/code&gt; 이 있는지 확인 하세요. 기타 지원되는 경우 (IntelliJ IDEA 프로젝트, 명령 줄 컴파일러 또는 Ant 사용)는 기본적으로 추가됩니다. 명령 줄 컴파일러 및 Ant에서 &lt;code&gt;-no-reflect&lt;/code&gt; 컴파일러 옵션을 사용 하여 클래스 경로에서 &lt;code&gt;kotlin-reflect.jar&lt;/code&gt; 을 제외 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3fedc784120817cc87cdecd3df22bdeb6a5e4e0c" translate="yes" xml:space="preserve">
          <source>If you don't want to annotate every usage of experimental APIs in your code, you can accept the experimental status for your whole module. Module-wide use of experimental APIs can be propagating and non-propagating as well:</source>
          <target state="translated">코드에서 실험용 API의 모든 사용법에 주석을 달지 않으려면 전체 모듈에 대한 실험 상태를 수락 할 수 있습니다. 실험용 API를 모듈 전체에서 사용하면 전파 및 전파되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="43a0c51574e240459eda5d6b9335be253ee68042" translate="yes" xml:space="preserve">
          <source>If you find that an interface that you want a class to implement is already implemented by one of the properties of the class, you can &lt;em&gt;delegate&lt;/em&gt; the implementation of that interface to that property with &lt;code&gt;by&lt;/code&gt;:</source>
          <target state="translated">당신은 당신이 구현하는 클래스가 이미 클래스의 속성 중 하나에 의해 구현하고자하는 인터페이스, 당신은 할 수 찾아내는 경우에 &lt;em&gt;위임&lt;/em&gt; 하여 해당 속성에 해당 인터페이스의 구현을 &lt;code&gt;by&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8261f1da9a2137ff384a6fcdb0fdc9e9eb256bac" translate="yes" xml:space="preserve">
          <source>If you find the &lt;code&gt;this&lt;/code&gt; syntax to be confusing, you can use &lt;code&gt;also&lt;/code&gt; instead, which takes ordinary lambdas:</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 구문이 혼동 되는 것을 발견하면 대신 일반적인 람다를 사용하는 대신 사용할 &lt;code&gt;also&lt;/code&gt; 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6fec69f93ca0bc139456ed1755b8b6f4c32f1863" translate="yes" xml:space="preserve">
          <source>If you have a backend written in Kotlin, you can &lt;strong&gt;share common code&lt;/strong&gt; such as data models or validation logic with a frontend written in Kotlin/JS, allowing you to &lt;strong&gt;write and maintain full-stack web applications&lt;/strong&gt;.</source>
          <target state="translated">Kotlin으로 작성된 백엔드가있는 경우 데이터 모델 또는 유효성 검사 로직과 같은 &lt;strong&gt;공통 코드&lt;/strong&gt; 를 Kotlin / JS로 작성된 프런트 엔드와 공유하여 &lt;strong&gt;전체 스택 웹 애플리케이션&lt;/strong&gt; 을 &lt;strong&gt;작성하고 유지 관리&lt;/strong&gt; 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b72e9d9abf32110dc1b1cda54fc1754195041c56" translate="yes" xml:space="preserve">
          <source>If you have a collection of elements of a nullable type and want to filter non-null elements, you can do so by using &lt;code&gt;filterNotNull&lt;/code&gt;:</source>
          <target state="translated">널 입력 가능 유형의 요소 콜렉션이 있고 널이 아닌 요소를 필터링하려는 경우 &lt;code&gt;filterNotNull&lt;/code&gt; 을 사용하여 이를 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3854a89fb1eb0d55d0045c79155df3bda3823777" translate="yes" xml:space="preserve">
          <source>If you have a functional type or a type with type parameters which is used multiple times in a codebase, prefer defining a type alias for it:</source>
          <target state="translated">코드베이스에서 여러 번 사용되는 기능 유형 또는 유형 매개 변수가있는 유형의 경우 유형 별명을 정의하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="160be5812cd4b3879f4656323f6abb0ca91c7f96" translate="yes" xml:space="preserve">
          <source>If you have a platform-specific library that you want to use in common code while providing your own implementation for another platform, you can provide a typealias to an existing class as the actual declaration:</source>
          <target state="translated">다른 플랫폼에 대한 자체 구현을 제공하면서 공통 코드에서 사용하려는 플랫폼 별 라이브러리가있는 경우 실제 선언으로 기존 클래스에 유형을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c6e93137d89d2551a056f737e4db196d1978cfc3" translate="yes" xml:space="preserve">
          <source>If you have a value that is truly constant, and the value is a string or a primitive type (see below) that is known at compile-time, you can declare an actual constant instead. You can only do this at the top level of a file or inside an &lt;a href=&quot;objects-and-companion-objects#object-declarations&quot;&gt;object declaration&lt;/a&gt; (but not inside a class declaration):</source>
          <target state="translated">진정으로 일정한 값이 있고 값이 컴파일 타임에 알려진 문자열 또는 기본 유형 (아래 참조) 인 경우 실제 상수를 대신 선언 할 수 있습니다. 파일의 최상위 레벨이나 &lt;a href=&quot;objects-and-companion-objects#object-declarations&quot;&gt;객체 선언&lt;/a&gt; 내부에서만 (클래스 선언 내부에서는 불가능) 이 작업을 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b3734595028b6b703699f95d53623d869e9b5b43" translate="yes" xml:space="preserve">
          <source>If you have an account on &lt;a href=&quot;https://stepik.org/&quot;&gt;Stepik&lt;/a&gt;, you can easily upload your course there, update it anytime you need, and &lt;a href=&quot;https://blog.jetbrains.com/pycharm/2017/06/integration-with-stepik-for-educators/&quot;&gt;share publicly or privately&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://stepik.org/&quot;&gt;Stepik에&lt;/a&gt; 계정이있는 경우 코스를 쉽게 업로드하고 필요할 때 언제든지 업데이트 &lt;a href=&quot;https://blog.jetbrains.com/pycharm/2017/06/integration-with-stepik-for-educators/&quot;&gt;하고 공개 또는 비공개로 공유&lt;/a&gt; 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="07988c0863287cce070542583bc572c93b997f2d" translate="yes" xml:space="preserve">
          <source>If you have an archive &lt;code&gt;sample-library.jar&lt;/code&gt;, which contains &lt;code&gt;sample-library.js&lt;/code&gt; and &lt;code&gt;sample-library.meta.js&lt;/code&gt;, you can use the following command</source>
          <target state="translated">&lt;code&gt;sample-library.js&lt;/code&gt; 및 &lt;code&gt;sample-library.meta.js&lt;/code&gt; 를 포함하는 &lt;code&gt;sample-library.jar&lt;/code&gt; 아카이브가있는 경우 다음 명령을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ca8fa744fdcf13cab8a2d83ad8ba290dd0853cd" translate="yes" xml:space="preserve">
          <source>If you have an instance of &lt;code&gt;Generic&amp;lt;Subtype&amp;gt;&lt;/code&gt;, and you want to refer to it as a &lt;code&gt;Generic&amp;lt;Supertype&amp;gt;&lt;/code&gt;, you can safely &lt;em&gt;get&lt;/em&gt; instances of the generic type parameter from it - these will truly be instances of &lt;code&gt;Subtype&lt;/code&gt; (because they come from an instance of &lt;code&gt;Generic&amp;lt;Subtype&amp;gt;&lt;/code&gt;), but they will appear to you as instances of &lt;code&gt;Supertype&lt;/code&gt; (because you've told the compiler that you have a &lt;code&gt;Generic&amp;lt;Supertype&amp;gt;&lt;/code&gt;). This is safe; it is called &lt;em&gt;covariance&lt;/em&gt;, and Kotlin lets you do &lt;em&gt;declaration-site covariance&lt;/em&gt; by putting &lt;code&gt;out&lt;/code&gt; in front of the generic type parameter. If you do, you may only use that type parameter as a return type, not as a parameter type. Here is the simplest useful covariant interface:</source>
          <target state="translated">&lt;code&gt;Generic&amp;lt;Subtype&amp;gt;&lt;/code&gt; 의 인스턴스가 있고 이를 &lt;code&gt;Generic&amp;lt;Supertype&amp;gt;&lt;/code&gt; 으로 참조하려는 경우 GenericType 매개 변수의 인스턴스를 안전하게 &lt;em&gt;가져올&lt;/em&gt; 수 있습니다. 이것들은 실제로 &lt;code&gt;Subtype&lt;/code&gt; 의 인스턴스 일 것입니다. &lt;code&gt;Generic&amp;lt;Subtype&amp;gt;&lt;/code&gt; 의 인스턴스 )이지만 컴파일러에 &lt;code&gt;Generic&amp;lt;Supertype&amp;gt;&lt;/code&gt; 이 있다고 말했기 때문에 &lt;code&gt;Supertype&lt;/code&gt; 의 인스턴스로 표시됩니다 . 이것은 안전합니다. 그것은이라고 &lt;em&gt;공분산&lt;/em&gt; , 그리고 코 틀린 당신이 할 수 있습니다 &lt;em&gt;선언 사이트 공분산을&lt;/em&gt; 넣어 &lt;code&gt;out&lt;/code&gt; &lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;제네릭 형식 매개 변수 앞에 그렇게하면 해당 유형 매개 변수 만 매개 변수 유형이 아닌 리턴 유형으로 사용할 수 있습니다. 가장 간단한 유용한 공변량 인터페이스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="76b81d78f8b362115f861d43270c94c40851a654" translate="yes" xml:space="preserve">
          <source>If you have an object with multiple overloaded constructors that don't call different superclass constructors and can't be reduced to a single constructor with default argument values, prefer to replace the overloaded constructors with factory functions.</source>
          <target state="translated">다른 수퍼 클래스 생성자를 호출하지 않고 기본 인수 값을 가진 단일 생성자로 줄일 수없는 여러 오버로드 생성자가있는 객체가있는 경우 오버로드 된 생성자를 팩토리 함수로 바꾸는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="639c565d65e0763691e2c7a9e8d90030330f0cc8" translate="yes" xml:space="preserve">
          <source>If you have explicitly set your module kind to be &lt;code&gt;plain&lt;/code&gt;, Kotlin creates an object that contains all Kotlin declarations from the current module. This is done to prevent spoiling the global object. This means that for a module &lt;code&gt;myModule&lt;/code&gt;, all declarations are available to JavaScript via the &lt;code&gt;myModule&lt;/code&gt; object. For example:</source>
          <target state="translated">모듈 종류를 &lt;code&gt;plain&lt;/code&gt; 로 명시 적으로 설정 한 경우 Kotlin은 현재 모듈의 모든 Kotlin 선언을 포함하는 객체를 만듭니다. 이것은 전역 개체가 손상되는 것을 방지하기 위해 수행됩니다. 이는 &lt;code&gt;myModule&lt;/code&gt; 모듈의 경우 &lt;code&gt;myModule&lt;/code&gt; 객체 를 통해 JavaScript에서 모든 선언을 사용할 수 있음을 의미 합니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="c8853dee9818f39e3759ffe7b639b9f7bc068972" translate="yes" xml:space="preserve">
          <source>If you have multiple annotations with the same target, you can avoid repeating the target by adding brackets after the target and putting all the annotations inside the brackets:</source>
          <target state="translated">동일한 대상에 여러 주석이있는 경우 대상 뒤에 괄호를 추가하고 모든 주석을 괄호 안에 넣어서 대상을 반복하지 않도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4458460acc96ecaa2c9621b4261e57a18ecc54c" translate="yes" xml:space="preserve">
          <source>If you insist on using a plain editor and the command line, see &lt;a href=&quot;../command-line&quot;&gt;these instructions instead&lt;/a&gt;. In short, you need to &lt;em&gt;compile&lt;/em&gt; your Kotlin code before running it. Assuming that your Kotlin file is called &lt;code&gt;program.kt&lt;/code&gt;:</source>
          <target state="translated">일반 편집기 및 명령 행 사용을 주장하는 경우 &lt;a href=&quot;../command-line&quot;&gt;대신이 지시 사항을&lt;/a&gt; 참조하십시오 . 요컨대, Kotlin 코드를 실행하기 전에 &lt;em&gt;컴파일&lt;/em&gt; 해야합니다. Kotlin 파일이 &lt;code&gt;program.kt&lt;/code&gt; 라고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="ef2b7c0495898685e9252662cc7dfb4430876f43" translate="yes" xml:space="preserve">
          <source>If you intend to use the APIs from the 1.1 Standard Library, or language features that depend on those APIs, you should upgrade the dependency to the version 1.1.</source>
          <target state="translated">1.1 표준 라이브러리의 API 또는 해당 API에 의존하는 언어 기능을 사용하려는 경우 종속성을 버전 1.1로 업그레이드해야합니다.</target>
        </trans-unit>
        <trans-unit id="9dac576da363f8811fb3df384398b7619989e0f8" translate="yes" xml:space="preserve">
          <source>If you like a &amp;ldquo;hands-on&amp;rdquo; learning, try &lt;a href=&quot;https://play.kotlinlang.org/koans&quot;&gt;Kotlin Koans online&lt;/a&gt; to get familiar with Kotlin;</source>
          <target state="translated">&quot;실습&quot;학습을 좋아하는 경우 &lt;a href=&quot;https://play.kotlinlang.org/koans&quot;&gt;Kotlin Koans 온라인&lt;/a&gt; 을 통해 Kotlin에 익숙해 지십시오.</target>
        </trans-unit>
        <trans-unit id="d82ca3a290ad528cc2bae1e2cb08d2ecdafea630" translate="yes" xml:space="preserve">
          <source>If you mark a declaration &lt;code&gt;private&lt;/code&gt;, it will only be visible inside the file containing the declaration;</source>
          <target state="translated">선언을 &lt;code&gt;private&lt;/code&gt; 로 표시하면 선언이 포함 된 파일 내에서만 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="1b38ef20d54a5b26492d65004e55d4d4d8807d1f" translate="yes" xml:space="preserve">
          <source>If you mark it &lt;code&gt;internal&lt;/code&gt;, it is visible everywhere in the same &lt;a href=&quot;#modules&quot;&gt;module&lt;/a&gt;;</source>
          <target state="translated">당신이 그것을 표시하면 &lt;code&gt;internal&lt;/code&gt; , 같은 도처 볼 &lt;a href=&quot;#modules&quot;&gt;모듈&lt;/a&gt; ;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
