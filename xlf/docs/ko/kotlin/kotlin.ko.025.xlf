<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="kotlin">
    <body>
      <group id="kotlin">
        <trans-unit id="966aa59c7450b291c4b250453d2462bf99f9e604" translate="yes" xml:space="preserve">
          <source>Safe mode checks if object is no longer used in passing worker, using memory-management specific algorithm (ARC implementation relies on trial deletion on object graph rooted in passed object), and throws an &lt;a href=&quot;../../kotlin/-illegal-state-exception/index#kotlin.IllegalStateException&quot;&gt;IllegalStateException&lt;/a&gt; if object graph rooted in transferred object is reachable by some other means,</source>
          <target state="translated">안전 모드는 메모리 관리 특정 알고리즘 (ARC 구현은 전달 된 객체에 기반을 둔 객체 그래프의 시험 삭제에 의존 함)을 사용하여 작업자를 전달하는 데 더 이상 객체가 사용되지 않는지 확인하고, 전송 된 객체에 기반을 둔 객체 그래프에 도달 할 수있는 경우 &lt;a href=&quot;../../kotlin/-illegal-state-exception/index#kotlin.IllegalStateException&quot;&gt;IllegalStateException을&lt;/a&gt; 발생 시킵니다. 다른 수단</target>
        </trans-unit>
        <trans-unit id="c19cc4ea964ba32c85f055c7833cf9088152ea1f" translate="yes" xml:space="preserve">
          <source>Same as for primitives, each of unsigned type has corresponding type that represents array, specialized for that unsigned type:</source>
          <target state="translated">프리미티브의 경우와 마찬가지로 서명되지 않은 각 유형에는 해당 서명되지 않은 유형에 특화된 배열을 나타내는 해당 유형이 있습니다.</target>
        </trans-unit>
        <trans-unit id="031c7b4b920d1195452edeaf34f89087ff67e169" translate="yes" xml:space="preserve">
          <source>Same as for signed integer arrays, they provide similar API to &lt;code&gt;Array&lt;/code&gt; class without boxing overhead.</source>
          <target state="translated">부호있는 정수 배열과 마찬가지로 복싱 오버 헤드없이 &lt;code&gt;Array&lt;/code&gt; 클래스 와 유사한 API를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="5266a2d634b1a2426245c1c34a13b11532b108db" translate="yes" xml:space="preserve">
          <source>Same for named objects:</source>
          <target state="translated">명명 된 객체에 대해서도 동일합니다.</target>
        </trans-unit>
        <trans-unit id="ebc6f4847f8d78964f85fb4e16bd713e286917e0" translate="yes" xml:space="preserve">
          <source>Sample projects</source>
          <target state="translated">Sample projects</target>
        </trans-unit>
        <trans-unit id="61802d6ace0a202ff4d0478495ded15586e4530f" translate="yes" xml:space="preserve">
          <source>Satisfying the longstanding request, Kotlin 1.2 adds the &lt;code&gt;kotlin.math&lt;/code&gt; API for math operations that is common for JVM and JS and contains the following:</source>
          <target state="translated">오랜 요청을 만족시키기 위해 Kotlin 1.2는 JVM 및 JS에 공통적 인 수학 연산을 위해 &lt;code&gt;kotlin.math&lt;/code&gt; API를 추가 하고 다음을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="50b5327838d4b6ae03d8aaed2a72dca6e69da509" translate="yes" xml:space="preserve">
          <source>Save the changes and run the application.</source>
          <target state="translated">변경 사항을 저장하고 응용 프로그램을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="26483ffc59e8f1047f34a909d3b8fd92382e949f" translate="yes" xml:space="preserve">
          <source>Save your changes to the file.</source>
          <target state="translated">변경 사항을 파일에 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="0943c7b561572758ad2d8a0cadc36907a964dc92" translate="yes" xml:space="preserve">
          <source>Schedules an &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+java.util.Date%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; to be executed at the specified &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+java.util.Date%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Ftime&quot;&gt;time&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+java.util.Date%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Ftime&quot;&gt;시간에 &lt;/a&gt;&lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+java.util.Date%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;작업&lt;/a&gt; 이 실행되도록 예약합니다 .</target>
        </trans-unit>
        <trans-unit id="b01fc548c716e3ffe235b52e80c7a9a5cd93fcca" translate="yes" xml:space="preserve">
          <source>Schedules an &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; to be executed periodically, starting at the specified &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Ftime&quot;&gt;time&lt;/a&gt; and with the interval of &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;period&lt;/a&gt; milliseconds between the end of the previous task and the start of the next one.</source>
          <target state="translated">지정된 &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Ftime&quot;&gt;시간&lt;/a&gt; 부터 시작 하여 이전 작업의 끝과 다음 작업의 시작 사이 의 &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;기간 (&lt;/a&gt; 밀리 초) 간격 으로 &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;작업&lt;/a&gt; 이 주기적으로 실행되도록 예약합니다 .</target>
        </trans-unit>
        <trans-unit id="11314f455c67f6bb70dfbb13dc028bb3264a0b16" translate="yes" xml:space="preserve">
          <source>Schedules an &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; to be executed after the specified &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fdelay&quot;&gt;delay&lt;/a&gt; (expressed in milliseconds).</source>
          <target state="translated">지정된 &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fdelay&quot;&gt;지연&lt;/a&gt; (밀리 초로 표시) 후에 실행되도록 &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;작업&lt;/a&gt; 을 예약합니다 .</target>
        </trans-unit>
        <trans-unit id="2ee5813386f20d7ce29a786b10be36f337d23c30" translate="yes" xml:space="preserve">
          <source>Schedules an &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; to be executed periodically, starting after the specified &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fdelay&quot;&gt;delay&lt;/a&gt; (expressed in milliseconds) and with the interval of &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;period&lt;/a&gt; milliseconds between the end of the previous task and the start of the next one.</source>
          <target state="translated">지정된 &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fdelay&quot;&gt;지연&lt;/a&gt; (밀리 초로 표시) 이후부터 이전 작업의 끝과 다음 작업의 시작 사이 의 &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;기간 (&lt;/a&gt; 밀리 초) 간격 으로 &lt;a href=&quot;schedule#kotlin.concurrent%24schedule%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;작업&lt;/a&gt; 이 주기적으로 실행되도록 예약합니다 .</target>
        </trans-unit>
        <trans-unit id="1ecfad5b2cbd7ee66af5fb7291019635c5a9eb34" translate="yes" xml:space="preserve">
          <source>Schedules an &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20java.util.Date,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;action&lt;/a&gt; to be executed at the specified &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20java.util.Date,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/time&quot;&gt;time&lt;/a&gt;.</source>
          <target state="translated">Schedules an &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20java.util.Date,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;action&lt;/a&gt; to be executed at the specified &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20java.util.Date,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/time&quot;&gt;time&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="abcdbb04331ea0f330fe7f79d7573804a9aaf6a0" translate="yes" xml:space="preserve">
          <source>Schedules an &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;action&lt;/a&gt; to be executed periodically, starting at the specified &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/time&quot;&gt;time&lt;/a&gt; and with the interval of &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/period&quot;&gt;period&lt;/a&gt; milliseconds between the end of the previous task and the start of the next one.</source>
          <target state="translated">Schedules an &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;action&lt;/a&gt; to be executed periodically, starting at the specified &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/time&quot;&gt;time&lt;/a&gt; and with the interval of &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/period&quot;&gt;period&lt;/a&gt; milliseconds between the end of the previous task and the start of the next one.</target>
        </trans-unit>
        <trans-unit id="beb03832c52bfff85f109ef27c2c3cec922a9a07" translate="yes" xml:space="preserve">
          <source>Schedules an &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;action&lt;/a&gt; to be executed after the specified &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/delay&quot;&gt;delay&lt;/a&gt; (expressed in milliseconds).</source>
          <target state="translated">Schedules an &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;action&lt;/a&gt; to be executed after the specified &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/delay&quot;&gt;delay&lt;/a&gt; (expressed in milliseconds).</target>
        </trans-unit>
        <trans-unit id="dce63a5c72e5b01f125a3ba36acfa4d1bfdd6d82" translate="yes" xml:space="preserve">
          <source>Schedules an &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;action&lt;/a&gt; to be executed periodically, starting after the specified &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/delay&quot;&gt;delay&lt;/a&gt; (expressed in milliseconds) and with the interval of &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/period&quot;&gt;period&lt;/a&gt; milliseconds between the end of the previous task and the start of the next one.</source>
          <target state="translated">Schedules an &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;action&lt;/a&gt; to be executed periodically, starting after the specified &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/delay&quot;&gt;delay&lt;/a&gt; (expressed in milliseconds) and with the interval of &lt;a href=&quot;schedule#kotlin.concurrent%24schedule(java.util.Timer,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/period&quot;&gt;period&lt;/a&gt; milliseconds between the end of the previous task and the start of the next one.</target>
        </trans-unit>
        <trans-unit id="854ed8dc6977e5dc8514b171bf299dab9be61297" translate="yes" xml:space="preserve">
          <source>Schedules an &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate%28java.util.Timer%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; to be executed periodically, starting at the specified &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate%28java.util.Timer%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Ftime&quot;&gt;time&lt;/a&gt; and with the interval of &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate%28java.util.Timer%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;period&lt;/a&gt; milliseconds between the start of the previous task and the start of the next one.</source>
          <target state="translated">지정된 &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate%28java.util.Timer%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Ftime&quot;&gt;시간&lt;/a&gt; 부터 시작하여 이전 작업의 시작과 다음 작업의 시작 사이 의 &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate%28java.util.Timer%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;기간 (&lt;/a&gt; 밀리 초) 간격 으로 &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate%28java.util.Timer%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;작업&lt;/a&gt; 이 주기적으로 실행되도록 예약합니다 .</target>
        </trans-unit>
        <trans-unit id="aae2026484b67969b7af32af111d42477789a200" translate="yes" xml:space="preserve">
          <source>Schedules an &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; to be executed periodically, starting after the specified &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fdelay&quot;&gt;delay&lt;/a&gt; (expressed in milliseconds) and with the interval of &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;period&lt;/a&gt; milliseconds between the start of the previous task and the start of the next one.</source>
          <target state="translated">지정된 &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fdelay&quot;&gt;지연&lt;/a&gt; 이후 (밀리 초로 표시) 이전 작업의 시작과 다음 작업의 시작 사이 의 &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;기간 (&lt;/a&gt; 밀리 초) 간격 으로 &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate%28java.util.Timer%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;작업&lt;/a&gt; 이 주기적으로 실행되도록 예약합니다 .</target>
        </trans-unit>
        <trans-unit id="78344eb3dcd3c1860c7ad11d57f12022b106486e" translate="yes" xml:space="preserve">
          <source>Schedules an &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate(java.util.Timer,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;action&lt;/a&gt; to be executed periodically, starting at the specified &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate(java.util.Timer,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/time&quot;&gt;time&lt;/a&gt; and with the interval of &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate(java.util.Timer,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/period&quot;&gt;period&lt;/a&gt; milliseconds between the start of the previous task and the start of the next one.</source>
          <target state="translated">Schedules an &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate(java.util.Timer,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;action&lt;/a&gt; to be executed periodically, starting at the specified &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate(java.util.Timer,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/time&quot;&gt;time&lt;/a&gt; and with the interval of &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate(java.util.Timer,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/period&quot;&gt;period&lt;/a&gt; milliseconds between the start of the previous task and the start of the next one.</target>
        </trans-unit>
        <trans-unit id="6d1359e7d08528014628664ba45c6aef5915bd37" translate="yes" xml:space="preserve">
          <source>Schedules an &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate(java.util.Timer,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;action&lt;/a&gt; to be executed periodically, starting after the specified &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate(java.util.Timer,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/delay&quot;&gt;delay&lt;/a&gt; (expressed in milliseconds) and with the interval of &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate(java.util.Timer,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/period&quot;&gt;period&lt;/a&gt; milliseconds between the start of the previous task and the start of the next one.</source>
          <target state="translated">Schedules an &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate(java.util.Timer,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;action&lt;/a&gt; to be executed periodically, starting after the specified &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate(java.util.Timer,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/delay&quot;&gt;delay&lt;/a&gt; (expressed in milliseconds) and with the interval of &lt;a href=&quot;schedule-at-fixed-rate#kotlin.concurrent%24scheduleAtFixedRate(java.util.Timer,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/period&quot;&gt;period&lt;/a&gt; milliseconds between the start of the previous task and the start of the next one.</target>
        </trans-unit>
        <trans-unit id="0624fdd2427d042e3b66e82dc68cafe409477c29" translate="yes" xml:space="preserve">
          <source>Scope Functions</source>
          <target state="translated">범위 기능</target>
        </trans-unit>
        <trans-unit id="578d9d905aeb1b3295b55af57220d2c4c8b15a3c" translate="yes" xml:space="preserve">
          <source>Scope builder</source>
          <target state="translated">범위 빌더</target>
        </trans-unit>
        <trans-unit id="bdaf1c2c176cc5a56291b32bb9a9f31255883e4f" translate="yes" xml:space="preserve">
          <source>Scope control for implicit receivers in DSLs</source>
          <target state="translated">DSL의 암시 적 수신기에 대한 범위 제어</target>
        </trans-unit>
        <trans-unit id="de8b8a16a2836f91a51e7b2ba6ade468fa5c4cb3" translate="yes" xml:space="preserve">
          <source>Scope control: @DslMarker (since 1.1)</source>
          <target state="translated">범위 제어 : @DslMarker (1.1 이후)</target>
        </trans-unit>
        <trans-unit id="7a18b7c5e8ccabd019ef2c6d15d4663e3e91f3a1" translate="yes" xml:space="preserve">
          <source>Scope of Extensions</source>
          <target state="translated">확장의 범위</target>
        </trans-unit>
        <trans-unit id="c37653ba0df9d91464090f9a5a506da5c714f757" translate="yes" xml:space="preserve">
          <source>Scope of extensions</source>
          <target state="translated">Scope of extensions</target>
        </trans-unit>
        <trans-unit id="a3c7ea6a417d9f9119dee10e05101756a378dca6" translate="yes" xml:space="preserve">
          <source>Scope of variable, introduced in &lt;em&gt;when&lt;/em&gt; subject, is restricted to &lt;em&gt;when&lt;/em&gt; body.</source>
          <target state="translated">대상 일 &lt;em&gt;때&lt;/em&gt; 도입되는 변수의 범위는 본문 일 &lt;em&gt;때&lt;/em&gt; 제한됩니다 .</target>
        </trans-unit>
        <trans-unit id="a6d3d0c4e1a858a3fa9f5a4df0f73418117c4ee1" translate="yes" xml:space="preserve">
          <source>Scope-local pointers</source>
          <target state="translated">범위 로컬 포인터</target>
        </trans-unit>
        <trans-unit id="97f1a86f7ab5f0be4ff5d3e7432bd560cdd19728" translate="yes" xml:space="preserve">
          <source>Scoped resource usage</source>
          <target state="translated">범위가 지정된 리소스 사용량</target>
        </trans-unit>
        <trans-unit id="528f1006f9e96ec54005f86bcd6d69843f8d623a" translate="yes" xml:space="preserve">
          <source>Scopes and naming</source>
          <target state="translated">범위와 이름</target>
        </trans-unit>
        <trans-unit id="eed3742ad9a5e159197ed1bcf37ebfc8ca1dd07d" translate="yes" xml:space="preserve">
          <source>Scratches</source>
          <target state="translated">Scratches</target>
        </trans-unit>
        <trans-unit id="1e6860490b87b4d7d724681713dc41fcc73632bb" translate="yes" xml:space="preserve">
          <source>Scratches and worksheets</source>
          <target state="translated">Scratches and worksheets</target>
        </trans-unit>
        <trans-unit id="42b44b1f9e701ce8c27a0c095f2bf8c887d20641" translate="yes" xml:space="preserve">
          <source>Scratches let us create code drafts in the same IDE window as our project and run them on the fly. Scratches are not tied to projects; you can access and run all your scratches from any IntelliJ IDEA window on your OS.</source>
          <target state="translated">Scratches let us create code drafts in the same IDE window as our project and run them on the fly. Scratches are not tied to projects; you can access and run all your scratches from any IntelliJ IDEA window on your OS.</target>
        </trans-unit>
        <trans-unit id="cd6f6336f3f0e72cac9c322f2f07020d0a59b802" translate="yes" xml:space="preserve">
          <source>Scratches support</source>
          <target state="translated">흠집 지원</target>
        </trans-unit>
        <trans-unit id="5cc847f94fce70460ef24ebed241931a778ccc62" translate="yes" xml:space="preserve">
          <source>Screen</source>
          <target state="translated">Screen</target>
        </trans-unit>
        <trans-unit id="90fefaf556542fb0f41ffdf64d5b534143f84b91" translate="yes" xml:space="preserve">
          <source>Script definition template classes. Use fully qualified class names and separate them with commas (&lt;strong&gt;,&lt;/strong&gt;).</source>
          <target state="translated">스크립트 정의 템플릿 클래스. 정규화 된 클래스 이름을 사용하고 쉼표 ( &lt;strong&gt;,&lt;/strong&gt; ) 로 구분합니다 .</target>
        </trans-unit>
        <trans-unit id="fc494af5ebddc3d1b12371d16f5f2468bcf4fdec" translate="yes" xml:space="preserve">
          <source>Scripting and REPL</source>
          <target state="translated">스크립팅 및 REPL</target>
        </trans-unit>
        <trans-unit id="cacf28b058e1a691f7edcc30d7817fbb50ce6945" translate="yes" xml:space="preserve">
          <source>Scripting update</source>
          <target state="translated">스크립팅 업데이트</target>
        </trans-unit>
        <trans-unit id="27390b06513a3570fe709ad78946223c802bab9b" translate="yes" xml:space="preserve">
          <source>ScrollBehavior</source>
          <target state="translated">ScrollBehavior</target>
        </trans-unit>
        <trans-unit id="dcbe9652479d39fcd78e5f694c8801c01888a2bf" translate="yes" xml:space="preserve">
          <source>ScrollIntoViewOptions</source>
          <target state="translated">ScrollIntoViewOptions</target>
        </trans-unit>
        <trans-unit id="934ee2ddfa0881ae4cc6128bd63327c8c114e325" translate="yes" xml:space="preserve">
          <source>ScrollLogicalPosition</source>
          <target state="translated">ScrollLogicalPosition</target>
        </trans-unit>
        <trans-unit id="4cd79f1501a2a106cf2a19d68ab36f3b3241f365" translate="yes" xml:space="preserve">
          <source>ScrollOptions</source>
          <target state="translated">ScrollOptions</target>
        </trans-unit>
        <trans-unit id="3f4d6fe061dee45ce6beee17f849ee6e28ca95f1" translate="yes" xml:space="preserve">
          <source>ScrollRestoration</source>
          <target state="translated">ScrollRestoration</target>
        </trans-unit>
        <trans-unit id="5c12f863cb347ffadafc9a0e098ea48cc7c7eab1" translate="yes" xml:space="preserve">
          <source>ScrollToOptions</source>
          <target state="translated">ScrollToOptions</target>
        </trans-unit>
        <trans-unit id="ec43540170bebc62424368915c33dc1d0e8212a9" translate="yes" xml:space="preserve">
          <source>Sealed Classes</source>
          <target state="translated">봉인 클래스</target>
        </trans-unit>
        <trans-unit id="2fe7b5a18fb68cd5f6f0da6e2eddccc8f49e2f73" translate="yes" xml:space="preserve">
          <source>Sealed and data classes</source>
          <target state="translated">봉인 및 데이터 클래스</target>
        </trans-unit>
        <trans-unit id="283d1e464991ba1df5720554a5fe2e8a9f70d4e0" translate="yes" xml:space="preserve">
          <source>Sealed classes</source>
          <target state="translated">봉인 된 수업</target>
        </trans-unit>
        <trans-unit id="0933e94c0ae168db00288a360a7d11b0a8916c99" translate="yes" xml:space="preserve">
          <source>Sealed classes are not allowed to have non-&lt;em&gt;private&lt;/em&gt; constructors (their constructors are &lt;em&gt;private&lt;/em&gt; by default).</source>
          <target state="translated">봉인 된 클래스에는 &lt;em&gt;개인용&lt;/em&gt; 이 아닌 생성자 가있을 수 없습니다 (생성자는 기본적으로 &lt;em&gt;개인용입니다&lt;/em&gt; ).</target>
        </trans-unit>
        <trans-unit id="1450a538096c14834e487a1a74f69ce32970cbd9" translate="yes" xml:space="preserve">
          <source>Sealed classes are used for representing restricted class hierarchies, when a value can have one of the types from a limited set, but cannot have any other type. They are, in a sense, an extension of enum classes: the set of values for an enum type is also restricted, but each enum constant exists only as a single instance, whereas a subclass of a sealed class can have multiple instances which can contain state.</source>
          <target state="translated">봉인 클래스는 값이 제한된 집합의 유형 중 하나를 가질 수 있지만 다른 유형을 가질 수없는 경우 제한된 클래스 계층 구조를 나타내는 데 사용됩니다. 그것들은 어떤 의미에서 열거 클래스의 확장입니다. 열거 유형의 값 세트도 제한되지만 각 열거 상수는 단일 인스턴스로만 존재하지만 봉인 클래스의 하위 클래스에는 여러 인스턴스가 포함될 수 있습니다 상태.</target>
        </trans-unit>
        <trans-unit id="8006d1752be56412c26763fa327bd999a69458a1" translate="yes" xml:space="preserve">
          <source>Sealed classes in reflection</source>
          <target state="translated">반영된 봉인 클래스</target>
        </trans-unit>
        <trans-unit id="69a3d949ccfc86b43db4e889e435ad9861a2ec1f" translate="yes" xml:space="preserve">
          <source>Search for class files in the specified paths. Separate elements of the classpath with system path separators (&lt;strong&gt;;&lt;/strong&gt; on Windows, &lt;strong&gt;:&lt;/strong&gt; on macOS/Linux). The classpath can contain file and directory paths, ZIP, or JAR files.</source>
          <target state="translated">지정된 경로에서 클래스 파일을 검색합니다. 시스템 경로 구분 기호를 사용하여 클래스 경로의 요소를 구분합니다 ( &lt;strong&gt;;&lt;/strong&gt; Windows의 경우, &lt;strong&gt;:&lt;/strong&gt; macOS / Linux의 경우). 클래스 경로에는 파일 및 디렉토리 경로, ZIP 또는 JAR 파일이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e37289ab149b8fd1490f324ea8883e6912d77447" translate="yes" xml:space="preserve">
          <source>Search paths for libraries added in the Kotlin/Native module in this way are obtained from properties of the Xcode projects configured by CocoaPods. Thus if the module uses CocoaPods libraries, it can be build &lt;strong&gt;only&lt;/strong&gt;&lt;strong&gt;from&lt;/strong&gt;&lt;strong&gt;Xcode&lt;/strong&gt;.</source>
          <target state="translated">이런 방식으로 Kotlin / Native 모듈에 추가 된 라이브러리의 검색 경로는 CocoaPods로 구성된 Xcode 프로젝트의 특성에서 가져옵니다. 모듈이 CocoaPods 라이브러리를 사용 따라서 경우, 빌드 할 수 있습니다 &lt;strong&gt;만 &lt;/strong&gt;&lt;strong&gt;에서 &lt;/strong&gt;&lt;strong&gt;엑스 코드&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="f7b381c62df37570cdf424d4ad3b5dd03475dcea" translate="yes" xml:space="preserve">
          <source>Searches for the specified element in this set.</source>
          <target state="translated">이 세트에서 지정된 요소를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="a0e155904628c91b4ae3286323b547eead84bdd4" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+java.util.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted according to the specified &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+java.util.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;, otherwise the result is undefined.</source>
          <target state="translated">이진 검색 알고리즘을 사용하여 제공된 &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+java.util.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;요소&lt;/a&gt; 의 배열 또는 배열 범위를 검색합니다. 배열은 지정된 &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+java.util.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt; 에 따라 정렬 될 것으로 예상되며 , 그렇지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="290e8a260e716db7327ee892dae2f04208af4347" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">이진 검색 알고리즘을 사용하여 제공된 &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;요소&lt;/a&gt; 의 배열 또는 배열 범위를 검색합니다. 배열이 정렬 될 것으로 예상되며, 그렇지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="32436b6e0db9570146d7ba448ba30967830f5018" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.ByteArray%2C+kotlin.Byte%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">이진 검색 알고리즘을 사용하여 제공된 &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.ByteArray%2C+kotlin.Byte%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;요소&lt;/a&gt; 의 배열 또는 배열 범위를 검색합니다. 배열이 정렬 될 것으로 예상되며, 그렇지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="35dba338afbb495b0a3fee48205b47c02d6cd17d" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.CharArray%2C+kotlin.Char%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">이진 검색 알고리즘을 사용하여 제공된 &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.CharArray%2C+kotlin.Char%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;요소&lt;/a&gt; 의 배열 또는 배열 범위를 검색합니다. 배열이 정렬 될 것으로 예상되며, 그렇지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6a989bccedd50f460fec83c984ea086b5374cda2" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.DoubleArray%2C+kotlin.Double%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">이진 검색 알고리즘을 사용하여 제공된 &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.DoubleArray%2C+kotlin.Double%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;요소&lt;/a&gt; 의 배열 또는 배열 범위를 검색합니다. 배열이 정렬 될 것으로 예상되며, 그렇지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4c8fe4f5da17ffe178b1da2e583954ae4db2fe02" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.FloatArray%2C+kotlin.Float%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">이진 검색 알고리즘을 사용하여 제공된 &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.FloatArray%2C+kotlin.Float%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;요소&lt;/a&gt; 의 배열 또는 배열 범위를 검색합니다. 배열이 정렬 될 것으로 예상되며, 그렇지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="da92a01c9fda1cc311a2b96f412edafd73b5d9ce" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.IntArray%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">이진 검색 알고리즘을 사용하여 제공된 &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.IntArray%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;요소&lt;/a&gt; 의 배열 또는 배열 범위를 검색합니다. 배열이 정렬 될 것으로 예상되며, 그렇지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9b2d8c7078982603d4849627b2da7584b90f4aef" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.LongArray%2C+kotlin.Long%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">이진 검색 알고리즘을 사용하여 제공된 &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.LongArray%2C+kotlin.Long%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;요소&lt;/a&gt; 의 배열 또는 배열 범위를 검색합니다. 배열이 정렬 될 것으로 예상되며, 그렇지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8233d1849f894965e253132c3f22ce05a679e787" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.ShortArray%2C+kotlin.Short%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">이진 검색 알고리즘을 사용하여 제공된 &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.ShortArray%2C+kotlin.Short%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;요소&lt;/a&gt; 의 배열 또는 배열 범위를 검색합니다. 배열이 정렬 될 것으로 예상되며, 그렇지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="98a42356a2fc1524a68749359c93c7974bced06d" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.UByteArray%2C+kotlin.UByte%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">이진 검색 알고리즘을 사용하여 제공된 &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.UByteArray%2C+kotlin.UByte%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;요소&lt;/a&gt; 의 배열 또는 배열 범위를 검색합니다. 배열이 정렬 될 것으로 예상되며, 그렇지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b15b28923f6f04089e5f10f0f8358034bc1a1a4b" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.UIntArray%2C+kotlin.UInt%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">이진 검색 알고리즘을 사용하여 제공된 &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.UIntArray%2C+kotlin.UInt%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;요소&lt;/a&gt; 의 배열 또는 배열 범위를 검색합니다. 배열이 정렬 될 것으로 예상되며, 그렇지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="38ce4f5ae8801b01f36ab3663b86bb3e75d6d968" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.ULongArray%2C+kotlin.ULong%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">이진 검색 알고리즘을 사용하여 제공된 &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.ULongArray%2C+kotlin.ULong%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;요소&lt;/a&gt; 의 배열 또는 배열 범위를 검색합니다. 배열이 정렬 될 것으로 예상되며, 그렇지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a34eb7ed0c21feb27df0998cef9c890f0f9c50df" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.UShortArray%2C+kotlin.UShort%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">이진 검색 알고리즘을 사용하여 제공된 &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch%28kotlin.UShortArray%2C+kotlin.UShort%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;요소&lt;/a&gt; 의 배열 또는 배열 범위를 검색합니다. 배열이 정렬 될 것으로 예상되며, 그렇지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8b65b9654b757dfe7b562973acd383e219516b05" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20java.util.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted according to the specified &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20java.util.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;comparator&lt;/a&gt;, otherwise the result is undefined.</source>
          <target state="translated">Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20java.util.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted according to the specified &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20java.util.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;comparator&lt;/a&gt;, otherwise the result is undefined.</target>
        </trans-unit>
        <trans-unit id="172c1b2c3c91b08b1b92612a3a176f1e654bb599" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</target>
        </trans-unit>
        <trans-unit id="208229a273e1f273a9b7a3dec32269ba6d7fbb8f" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.ByteArray,%20kotlin.Byte,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.ByteArray,%20kotlin.Byte,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</target>
        </trans-unit>
        <trans-unit id="a1685fc27c49c67545d45d08837650f24ed74452" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.CharArray,%20kotlin.Char,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.CharArray,%20kotlin.Char,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</target>
        </trans-unit>
        <trans-unit id="81722343aea65bbcada90dead76c02f5382fe1eb" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.DoubleArray,%20kotlin.Double,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.DoubleArray,%20kotlin.Double,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</target>
        </trans-unit>
        <trans-unit id="5601b1518202867a8151751863fe6059f2dc4a18" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.FloatArray,%20kotlin.Float,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.FloatArray,%20kotlin.Float,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</target>
        </trans-unit>
        <trans-unit id="711dbbdbe887baf9223b40bd00153d873e0e47c5" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.IntArray,%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.IntArray,%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</target>
        </trans-unit>
        <trans-unit id="3c4da0a6500b232b3691bc97479a9a498a8e6cf0" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.LongArray,%20kotlin.Long,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.LongArray,%20kotlin.Long,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</target>
        </trans-unit>
        <trans-unit id="b5df879c89f080b0dd7812f7399e0a06b542ac5c" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.ShortArray,%20kotlin.Short,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.ShortArray,%20kotlin.Short,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</target>
        </trans-unit>
        <trans-unit id="0c2e52144683b6a08199e94c5fca2df35e2039d7" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.UByteArray,%20kotlin.UByte,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.UByteArray,%20kotlin.UByte,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</target>
        </trans-unit>
        <trans-unit id="b231d4078642d7ddd64b1795cfb07cf71f737bfb" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.UIntArray,%20kotlin.UInt,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.UIntArray,%20kotlin.UInt,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</target>
        </trans-unit>
        <trans-unit id="766e5e1d02d3fb8be9c197d17f0951b8dc0ce6fa" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.ULongArray,%20kotlin.ULong,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.ULongArray,%20kotlin.ULong,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</target>
        </trans-unit>
        <trans-unit id="5da56c90ddf0e73a477026f3b3fb477285c71edf" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.UShortArray,%20kotlin.UShort,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">Searches the array or the range of the array for the provided &lt;a href=&quot;../../kotlin.collections/binary-search#kotlin.collections%24binarySearch(kotlin.UShortArray,%20kotlin.UShort,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</target>
        </trans-unit>
        <trans-unit id="21a995506be2a3f4f68fb294fc4196dcd093a45b" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+java.util.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted according to the specified &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+java.util.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;, otherwise the result is undefined.</source>
          <target state="translated">이진 검색 알고리즘을 사용하여 제공된 &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+java.util.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;요소&lt;/a&gt; 의 배열 또는 배열 범위를 검색합니다. 배열은 지정된 &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+java.util.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt; 에 따라 정렬 될 것으로 예상되며 , 그렇지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="afd7b9faa0ee57152595e952895219afe610e6b6" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">이진 검색 알고리즘을 사용하여 제공된 &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.Array%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;요소&lt;/a&gt; 의 배열 또는 배열 범위를 검색합니다. 배열이 정렬 될 것으로 예상되며, 그렇지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="138a21c025d824bdcc6e5ebffea2a8c48d7c1cf2" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20java.util.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted according to the specified &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20java.util.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;comparator&lt;/a&gt;, otherwise the result is undefined.</source>
          <target state="translated">Searches the array or the range of the array for the provided &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20java.util.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted according to the specified &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20java.util.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;comparator&lt;/a&gt;, otherwise the result is undefined.</target>
        </trans-unit>
        <trans-unit id="0d8418eac91c114d8822322a651bd6c3cebfbbe0" translate="yes" xml:space="preserve">
          <source>Searches the array or the range of the array for the provided &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</source>
          <target state="translated">Searches the array or the range of the array for the provided &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.Array((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The array is expected to be sorted, otherwise the result is undefined.</target>
        </trans-unit>
        <trans-unit id="ac08cbdac0791fdddb3eff14b0ee78f0339f0b9d" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for an element for which &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearch.T%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt; function returns zero using the binary search algorithm. The list is expected to be sorted into ascending order according to the provided &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearch.T%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt;, otherwise the result is undefined.</source>
          <target state="translated">이진 검색 알고리즘을 사용하여 &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearch.T%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;비교&lt;/a&gt; 함수가 0을 리턴 하는 요소에 대해이 목록 또는 해당 범위를 검색합니다. 제공된 &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearch.T%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;비교&lt;/a&gt; 에 따라 목록이 오름차순으로 정렬됩니다 . 그렇지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a12b773301b3c59bfccfe4d40f79324c71d5747a" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for an element for which &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearch.T%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt; function returns zero using the binary search algorithm. The list is expected to be sorted into ascending order according to the provided &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearch.T%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt;, otherwise the result is undefined.</source>
          <target state="translated">이진 검색 알고리즘을 사용하여 &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearch.T%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;비교&lt;/a&gt; 함수가 0을 리턴 하는 요소에 대해이 목록 또는 해당 범위를 검색합니다. 제공된 &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearch.T%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;비교&lt;/a&gt; 에 따라 목록이 오름차순으로 정렬됩니다 . 그렇지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b4d8e8c3188c0cfbbe28544ddcf06c5d4196b4d9" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for an element for which the given &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearch.T,%20kotlin.Int)))/comparison&quot;&gt;comparison&lt;/a&gt; function returns zero using the binary search algorithm.</source>
          <target state="translated">Searches this list or its range for an element for which the given &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearch.T,%20kotlin.Int)))/comparison&quot;&gt;comparison&lt;/a&gt; function returns zero using the binary search algorithm.</target>
        </trans-unit>
        <trans-unit id="e7521243bd3483add004abe43f92d3e161af732b" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for an element for which the given &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearch.T,%20kotlin.Int)))/comparison&quot;&gt;comparison&lt;/a&gt; function returns zero using the binary search algorithm.</source>
          <target state="translated">Searches this list or its range for an element for which the given &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearch.T,%20kotlin.Int)))/comparison&quot;&gt;comparison&lt;/a&gt; function returns zero using the binary search algorithm.</target>
        </trans-unit>
        <trans-unit id="aa99a3299c671573dd13fd8f2f8528c837ca1867" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for an element having the key returned by the specified &lt;a href=&quot;../binary-search-by#kotlin.collections%24binarySearchBy%28kotlin.collections.List%28%28kotlin.collections.binarySearchBy.T%29%29%2C+kotlin.collections.binarySearchBy.K%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearchBy.T%2C+kotlin.collections.binarySearchBy.K%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function equal to the provided &lt;a href=&quot;../binary-search-by#kotlin.collections%24binarySearchBy%28kotlin.collections.List%28%28kotlin.collections.binarySearchBy.T%29%29%2C+kotlin.collections.binarySearchBy.K%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearchBy.T%2C+kotlin.collections.binarySearchBy.K%29%29%29%2Fkey&quot;&gt;key&lt;/a&gt; value using the binary search algorithm. The list is expected to be sorted into ascending order according to the Comparable natural ordering of keys of its elements. otherwise the result is undefined.</source>
          <target state="translated">이진 검색 알고리즘을 사용하여 지정된 &lt;a href=&quot;../binary-search-by#kotlin.collections%24binarySearchBy%28kotlin.collections.List%28%28kotlin.collections.binarySearchBy.T%29%29%2C+kotlin.collections.binarySearchBy.K%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearchBy.T%2C+kotlin.collections.binarySearchBy.K%29%29%29%2Fselector&quot;&gt;선택기&lt;/a&gt; 함수에 의해 리턴 된 &lt;a href=&quot;../binary-search-by#kotlin.collections%24binarySearchBy%28kotlin.collections.List%28%28kotlin.collections.binarySearchBy.T%29%29%2C+kotlin.collections.binarySearchBy.K%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearchBy.T%2C+kotlin.collections.binarySearchBy.K%29%29%29%2Fkey&quot;&gt;키&lt;/a&gt; 가 제공된 키 값 과 동일한 요소를 찾기 위해이 목록 또는 그 범위를 검색합니다. 이 목록은 해당 요소 키의 자연 순서에 따라 오름차순으로 정렬됩니다. 그렇지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0f9ce46a44ee7bef83394d3c8cd839487191ee59" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for an element having the key returned by the specified &lt;a href=&quot;../binary-search-by#kotlin.collections%24binarySearchBy(kotlin.collections.List((kotlin.collections.binarySearchBy.T)),%20kotlin.collections.binarySearchBy.K?,%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearchBy.T,%20kotlin.collections.binarySearchBy.K?)))/selector&quot;&gt;selector&lt;/a&gt; function equal to the provided &lt;a href=&quot;../binary-search-by#kotlin.collections%24binarySearchBy(kotlin.collections.List((kotlin.collections.binarySearchBy.T)),%20kotlin.collections.binarySearchBy.K?,%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearchBy.T,%20kotlin.collections.binarySearchBy.K?)))/key&quot;&gt;key&lt;/a&gt; value using the binary search algorithm. The list is expected to be sorted into ascending order according to the Comparable natural ordering of keys of its elements. otherwise the result is undefined.</source>
          <target state="translated">Searches this list or its range for an element having the key returned by the specified &lt;a href=&quot;../binary-search-by#kotlin.collections%24binarySearchBy(kotlin.collections.List((kotlin.collections.binarySearchBy.T)),%20kotlin.collections.binarySearchBy.K?,%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearchBy.T,%20kotlin.collections.binarySearchBy.K?)))/selector&quot;&gt;selector&lt;/a&gt; function equal to the provided &lt;a href=&quot;../binary-search-by#kotlin.collections%24binarySearchBy(kotlin.collections.List((kotlin.collections.binarySearchBy.T)),%20kotlin.collections.binarySearchBy.K?,%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearchBy.T,%20kotlin.collections.binarySearchBy.K?)))/key&quot;&gt;key&lt;/a&gt; value using the binary search algorithm. The list is expected to be sorted into ascending order according to the Comparable natural ordering of keys of its elements. otherwise the result is undefined.</target>
        </trans-unit>
        <trans-unit id="ff73b47d31632246c6429f92dc75d01803e096bf" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for an element having the key returned by the specified &lt;a href=&quot;binary-search-by#kotlin.collections%24binarySearchBy%28kotlin.collections.List%28%28kotlin.collections.binarySearchBy.T%29%29%2C+kotlin.collections.binarySearchBy.K%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearchBy.T%2C+kotlin.collections.binarySearchBy.K%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function equal to the provided &lt;a href=&quot;binary-search-by#kotlin.collections%24binarySearchBy%28kotlin.collections.List%28%28kotlin.collections.binarySearchBy.T%29%29%2C+kotlin.collections.binarySearchBy.K%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearchBy.T%2C+kotlin.collections.binarySearchBy.K%29%29%29%2Fkey&quot;&gt;key&lt;/a&gt; value using the binary search algorithm. The list is expected to be sorted into ascending order according to the Comparable natural ordering of keys of its elements. otherwise the result is undefined.</source>
          <target state="translated">이진 검색 알고리즘을 사용하여 지정된 &lt;a href=&quot;binary-search-by#kotlin.collections%24binarySearchBy%28kotlin.collections.List%28%28kotlin.collections.binarySearchBy.T%29%29%2C+kotlin.collections.binarySearchBy.K%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearchBy.T%2C+kotlin.collections.binarySearchBy.K%29%29%29%2Fselector&quot;&gt;선택기&lt;/a&gt; 함수에 의해 리턴 된 &lt;a href=&quot;binary-search-by#kotlin.collections%24binarySearchBy%28kotlin.collections.List%28%28kotlin.collections.binarySearchBy.T%29%29%2C+kotlin.collections.binarySearchBy.K%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.binarySearchBy.T%2C+kotlin.collections.binarySearchBy.K%29%29%29%2Fkey&quot;&gt;키&lt;/a&gt; 가 제공된 키 값 과 동일한 요소를 찾기 위해이 목록 또는 그 범위를 검색합니다. 이 목록은 해당 요소 키의 자연 순서에 따라 오름차순으로 정렬됩니다. 그렇지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f97f502c4471174a07a09380a5303b6fdff50a94" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for an element having the key returned by the specified &lt;a href=&quot;binary-search-by#kotlin.collections%24binarySearchBy(kotlin.collections.List((kotlin.collections.binarySearchBy.T)),%20kotlin.collections.binarySearchBy.K?,%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearchBy.T,%20kotlin.collections.binarySearchBy.K?)))/selector&quot;&gt;selector&lt;/a&gt; function equal to the provided &lt;a href=&quot;binary-search-by#kotlin.collections%24binarySearchBy(kotlin.collections.List((kotlin.collections.binarySearchBy.T)),%20kotlin.collections.binarySearchBy.K?,%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearchBy.T,%20kotlin.collections.binarySearchBy.K?)))/key&quot;&gt;key&lt;/a&gt; value using the binary search algorithm. The list is expected to be sorted into ascending order according to the Comparable natural ordering of keys of its elements. otherwise the result is undefined.</source>
          <target state="translated">Searches this list or its range for an element having the key returned by the specified &lt;a href=&quot;binary-search-by#kotlin.collections%24binarySearchBy(kotlin.collections.List((kotlin.collections.binarySearchBy.T)),%20kotlin.collections.binarySearchBy.K?,%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearchBy.T,%20kotlin.collections.binarySearchBy.K?)))/selector&quot;&gt;selector&lt;/a&gt; function equal to the provided &lt;a href=&quot;binary-search-by#kotlin.collections%24binarySearchBy(kotlin.collections.List((kotlin.collections.binarySearchBy.T)),%20kotlin.collections.binarySearchBy.K?,%20kotlin.Int,%20kotlin.Int,%20kotlin.Function1((kotlin.collections.binarySearchBy.T,%20kotlin.collections.binarySearchBy.K?)))/key&quot;&gt;key&lt;/a&gt; value using the binary search algorithm. The list is expected to be sorted into ascending order according to the Comparable natural ordering of keys of its elements. otherwise the result is undefined.</target>
        </trans-unit>
        <trans-unit id="b8c90155d71b1d5e676d2bf69cb0ebe47fe33198" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for the provided &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The list is expected to be sorted into ascending order according to the specified &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;, otherwise the result is undefined.</source>
          <target state="translated">제공된 본리스트 또는 범위 검색 &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;요소&lt;/a&gt; 바이너리 서치 알고리즘을 사용한다. 지정된 &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;비교 자&lt;/a&gt; 에 따라 목록이 오름차순으로 정렬 될 것으로 예상되며 , 그렇지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4828bed591fb431643e0a003aeb6081854e0de78" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for the provided &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The list is expected to be sorted into ascending order according to the Comparable natural ordering of its elements, otherwise the result is undefined.</source>
          <target state="translated">제공된 본리스트 또는 범위 검색 &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;요소&lt;/a&gt; 바이너리 서치 알고리즘을 사용한다. 목록은 해당 요소의 비교 가능한 자연 순서에 따라 오름차순으로 정렬됩니다. 그렇지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="94a25e243789c157aae91bf65fbab646f46083df" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for the provided &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The list is expected to be sorted into ascending order according to the specified &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;comparator&lt;/a&gt;, otherwise the result is undefined.</source>
          <target state="translated">Searches this list or its range for the provided &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The list is expected to be sorted into ascending order according to the specified &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;comparator&lt;/a&gt;, otherwise the result is undefined.</target>
        </trans-unit>
        <trans-unit id="e11720fc6bfa5af236f5b984ea8be1135cb12ab6" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for the provided &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T?)),%20kotlin.collections.binarySearch.T?,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The list is expected to be sorted into ascending order according to the Comparable natural ordering of its elements, otherwise the result is undefined.</source>
          <target state="translated">Searches this list or its range for the provided &lt;a href=&quot;../binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T?)),%20kotlin.collections.binarySearch.T?,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The list is expected to be sorted into ascending order according to the Comparable natural ordering of its elements, otherwise the result is undefined.</target>
        </trans-unit>
        <trans-unit id="f5eaf2f3013486a1bf776e47151f79e9ff0bdc24" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for the provided &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The list is expected to be sorted into ascending order according to the specified &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;, otherwise the result is undefined.</source>
          <target state="translated">제공된 본리스트 또는 범위 검색 &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;요소&lt;/a&gt; 바이너리 서치 알고리즘을 사용한다. 지정된 &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Comparator%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;비교 자&lt;/a&gt; 에 따라 목록이 오름차순으로 정렬 될 것으로 예상되며 , 그렇지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="58beecb82fb00ba9003803dd474114c838b212a6" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for the provided &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The list is expected to be sorted into ascending order according to the Comparable natural ordering of its elements, otherwise the result is undefined.</source>
          <target state="translated">제공된 본리스트 또는 범위 검색 &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch%28kotlin.collections.List%28%28kotlin.collections.binarySearch.T%29%29%2C+kotlin.collections.binarySearch.T%2C+kotlin.Int%2C+kotlin.Int%29%2Felement&quot;&gt;요소&lt;/a&gt; 바이너리 서치 알고리즘을 사용한다. 목록은 해당 요소의 비교 가능한 자연 순서에 따라 오름차순으로 정렬됩니다. 그렇지 않으면 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3ad10097b382c0b5ae463dfe7f3937285f41b299" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for the provided &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The list is expected to be sorted into ascending order according to the specified &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;comparator&lt;/a&gt;, otherwise the result is undefined.</source>
          <target state="translated">Searches this list or its range for the provided &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The list is expected to be sorted into ascending order according to the specified &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T)),%20kotlin.collections.binarySearch.T,%20kotlin.Comparator((kotlin.collections.binarySearch.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;comparator&lt;/a&gt;, otherwise the result is undefined.</target>
        </trans-unit>
        <trans-unit id="e050ba4b8a15e2ce6ed2db4aef72faf98aee8f1b" translate="yes" xml:space="preserve">
          <source>Searches this list or its range for the provided &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T?)),%20kotlin.collections.binarySearch.T?,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The list is expected to be sorted into ascending order according to the Comparable natural ordering of its elements, otherwise the result is undefined.</source>
          <target state="translated">Searches this list or its range for the provided &lt;a href=&quot;binary-search#kotlin.collections%24binarySearch(kotlin.collections.List((kotlin.collections.binarySearch.T?)),%20kotlin.collections.binarySearch.T?,%20kotlin.Int,%20kotlin.Int)/element&quot;&gt;element&lt;/a&gt; using the binary search algorithm. The list is expected to be sorted into ascending order according to the Comparable natural ordering of its elements, otherwise the result is undefined.</target>
        </trans-unit>
        <trans-unit id="d95aec9d6ab7d91b52bb78f16150beb3b6b1073e" translate="yes" xml:space="preserve">
          <source>Second value.</source>
          <target state="translated">두 번째 가치.</target>
        </trans-unit>
        <trans-unit id="29f551e9571570ec897249c876759cd9ed415d56" translate="yes" xml:space="preserve">
          <source>Secondary Constructors</source>
          <target state="translated">보조 생성자</target>
        </trans-unit>
        <trans-unit id="d4a404bdc75bfb5e190100e5dc35001e7e33fa7a" translate="yes" xml:space="preserve">
          <source>Secondary constructors</source>
          <target state="translated">보조 생성자</target>
        </trans-unit>
        <trans-unit id="020f017613b21165fbe56a9d4a71c300bd412724" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#flow-cancellation-checks&quot;&gt;Flow cancellation checks&lt;/a&gt; section for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#flow-cancellation-checks&quot;&gt;흐름 취소 확인&lt;/a&gt; 섹션을 참조하세요.</target>
        </trans-unit>
        <trans-unit id="132cf7b279a03fe265ff92246a6376b881bf28a0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../-contract-builder/calls-in-place&quot;&gt;ContractBuilder.callsInPlace&lt;/a&gt; for the details of the call-in-place function contract.</source>
          <target state="translated">위치 내 호출 기능 계약에 대한 자세한 내용은 &lt;a href=&quot;../-contract-builder/calls-in-place&quot;&gt;ContractBuilder.callsInPlace&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fa59c08b1cd4ad0c7fe4dab4d9693e8d90f1b7c9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;basic-types#string-templates&quot;&gt;String templates&lt;/a&gt; for details.</source>
          <target state="translated">See &lt;a href=&quot;basic-types#string-templates&quot;&gt;String templates&lt;/a&gt; for details.</target>
        </trans-unit>
        <trans-unit id="7f8c0b5b1f472754e2583d323d7fb292fb40553d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;basic-types#string-templates&quot;&gt;String templates&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;basic-types#string-templates&quot;&gt;문자열 템플릿을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8f8176ea3dfc7a2d7972fa8cbcaf12cbeec6b548" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;basic-types#unsigned-integers&quot;&gt;reference&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;basic-types#unsigned-integers&quot;&gt;참조&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="661cf18a1268814cbcef108aaf358e72333b0829" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;c_interop&quot;&gt;INTEROP.md&lt;/a&gt; for an example case where the library uses some plain C features (e.g. unsafe pointers, structs etc.).</source>
          <target state="translated">라이브러리가 일반 C 기능 (예 : 안전하지 않은 포인터, 구조체 등)을 사용하는 경우의 예는 &lt;a href=&quot;c_interop&quot;&gt;INTEROP.md&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="356b070138822abfa47db60df37ecf9cf278f031" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;classes&quot;&gt;Classes&lt;/a&gt; and &lt;a href=&quot;typecasts&quot;&gt;Type casts&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;classes&quot;&gt;클래스&lt;/a&gt; 및 &lt;a href=&quot;typecasts&quot;&gt;유형 캐스트를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="43368afc9c7d6c814b72a88bff8a1f083cbd8aab" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;classes&quot;&gt;classes&lt;/a&gt; and &lt;a href=&quot;object-declarations&quot;&gt;objects and instances&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;classes&quot;&gt;클래스&lt;/a&gt; 와 &lt;a href=&quot;object-declarations&quot;&gt;객체 및 인스턴스를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3d63182055a00b09bf44245935dcf2b86fba89e4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;classes#overriding-properties&quot;&gt;Overriding Properties&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;classes#overriding-properties&quot;&gt;속성 재정의를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6045b199ca5c4a479e2bb6f0ff3afe72b0b53f8f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;collections-overview&quot;&gt;Collections overview&lt;/a&gt;.</source>
          <target state="translated">See &lt;a href=&quot;collections-overview&quot;&gt;Collections overview&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6aed9c599c727e0e8968ecfe9ad5a2b6cf6f273c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;control-flow#for-loops&quot;&gt;for loop&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;control-flow#for-loops&quot;&gt;for 루프를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="af880e9532e7b2e3551633495b0f6473ff1fcae4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;control-flow#if-expression&quot;&gt;&lt;em&gt;if&lt;/em&gt;-expressions&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;control-flow#if-expression&quot;&gt;&lt;em&gt;if&lt;/em&gt; -expressions를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e5eef267c081e03fc5772f23f897355c86390bc2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;control-flow#when-expression&quot;&gt;when expression&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;control-flow#when-expression&quot;&gt;when expression&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e781e5c6b063591c11082b6bfe59976039aab905" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;control-flow#while-loops&quot;&gt;while loop&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;control-flow#while-loops&quot;&gt;while 루프를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="72fdd1b4df9f030ac2e6eb827afe4048c030e9c8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;functions&quot;&gt;Functions&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;functions&quot;&gt;기능을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3822f4b6e3755d6c4150f688e9f8dd4601b2b43e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;getting-started&quot;&gt;Getting Started with IntelliJ IDEA&lt;/a&gt; on how to set up development environment for Kotlin. In competitive programming, a single project is usually created and each problem's solution is written in a single source file.</source>
          <target state="translated">Kotlin의 개발 환경을 설정하는 방법 &lt;a href=&quot;getting-started&quot;&gt;은 IntelliJ IDEA 시작하기를&lt;/a&gt; 참조하십시오 . 경쟁 프로그래밍에서는 일반적으로 단일 프로젝트가 작성되고 각 문제의 솔루션이 단일 소스 파일로 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="6d7a0c506dac9efc180dd3f27848ac388b3ed31a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/JetBrains/kotlin/tree/master/libraries/examples/kotlin-jsr223-local-example&quot;&gt;here&lt;/a&gt; for a larger example project using the API.</source>
          <target state="translated">API를 사용하는 더 큰 예제 프로젝트는 &lt;a href=&quot;https://github.com/JetBrains/kotlin/tree/master/libraries/examples/kotlin-jsr223-local-example&quot;&gt;여기&lt;/a&gt; 를 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="0fcdd2501312f55e8c300f1256aabc2886c584c3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/unsigned-types.md&quot;&gt;language proposal for unsigned types&lt;/a&gt; for technical details and further discussion.</source>
          <target state="translated">기술적 세부 사항 및 추가 논의 &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/unsigned-types.md&quot;&gt;는 서명되지 않은 유형의 언어 제안을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="39862abac54383f5db77262fe8e95528586cbefb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://kotlinlang.org/lp/mobile/&quot;&gt;KMM features, case studies and examples&lt;/a&gt;</source>
          <target state="translated">See &lt;a href=&quot;https://kotlinlang.org/lp/mobile/&quot;&gt;KMM features, case studies and examples&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7532039c08b50ced577b6205ef701be3283628d8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;inline-classes&quot;&gt;reference&lt;/a&gt; for inline classes for details.</source>
          <target state="translated">자세한 내용 은 인라인 클래스에 대한 &lt;a href=&quot;inline-classes&quot;&gt;참조&lt;/a&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="c9f672232b71ccbe3bcad54d8cfd048b541d715b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;jvm-get-started&quot;&gt;Getting Started with IntelliJ IDEA&lt;/a&gt; on how to set up development environment for Kotlin. In competitive programming, a single project is usually created and each problem's solution is written in a single source file.</source>
          <target state="translated">See &lt;a href=&quot;jvm-get-started&quot;&gt;Getting Started with IntelliJ IDEA&lt;/a&gt; on how to set up development environment for Kotlin. In competitive programming, a single project is usually created and each problem's solution is written in a single source file.</target>
        </trans-unit>
        <trans-unit id="72d78c0e85a90eba65d587e0235fa9366f4f5b2e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;kotlin-doc&quot;&gt;Documenting Kotlin Code&lt;/a&gt; for information on the documentation comment syntax.</source>
          <target state="translated">문서 주석 구문에 대한 정보는 &lt;a href=&quot;kotlin-doc&quot;&gt;Kotlin 코드 문서화를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f8e0c42cf38ae5c881bc057bd395e1165e8a43a2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;lambdas&quot;&gt;Higher-order functions and Lambdas&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;lambdas&quot;&gt;고차 함수 및 Lambdas를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="61c6924790d73d55cb25a2c74a3ac3834c60937b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;null-safety&quot;&gt;Null-safety&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;null-safety&quot;&gt;Null 안전을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cb52711a4d210618f01364bb8923cb2cf2059296" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;packages&quot;&gt;Packages&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;packages&quot;&gt;패키지를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e11d1dd269d934fe14336d27089a06c861b622e8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;packages#imports&quot;&gt;Imports&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;packages#imports&quot;&gt;가져 오기&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e80083b4cd5cae8fb0037b50cd120ea1dcca9d8a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ranges&quot;&gt;Ranges&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;ranges&quot;&gt;범위를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a33677e991fdf4152646891d03c1672e31759159" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;this-expressions&quot;&gt;Qualified &lt;em&gt;this&lt;/em&gt; expressions&lt;/a&gt; to learn about disambiguation of &lt;em&gt;this&lt;/em&gt; in inner classes.</source>
          <target state="translated">참조 &lt;a href=&quot;this-expressions&quot;&gt;공인 &lt;em&gt;이&lt;/em&gt; 표현&lt;/a&gt; 의 모호성에 대해 배울 &lt;em&gt;이&lt;/em&gt; 내부 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="49dc4f77dcd7817eb995e6e5a3ebc71a2c10d462" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;using-gradle#compiler-options&quot;&gt;Compiler options in Gradle&lt;/a&gt; for details. For &lt;a href=&quot;mpp-intro&quot;&gt;multiplatform projects&lt;/a&gt;, see &lt;a href=&quot;mpp-dsl-reference#language-settings&quot;&gt;language settings&lt;/a&gt;.</source>
          <target state="translated">See &lt;a href=&quot;using-gradle#compiler-options&quot;&gt;Compiler options in Gradle&lt;/a&gt; for details. For &lt;a href=&quot;mpp-intro&quot;&gt;multiplatform projects&lt;/a&gt;, see &lt;a href=&quot;mpp-dsl-reference#language-settings&quot;&gt;language settings&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="94f57fb649679b58ce75a35d562414085cf87ebd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;using-gradle#compiler-options&quot;&gt;Compiler options in Gradle&lt;/a&gt; for details. For &lt;a href=&quot;whatsnew13#multiplatform-projects&quot;&gt;Multiplatform Projects&lt;/a&gt; settings, see &lt;a href=&quot;building-mpp-with-gradle#language-settings&quot;&gt;building Multiplatform Projects with Gradle&lt;/a&gt; section.</source>
          <target state="translated">자세한 내용 &lt;a href=&quot;using-gradle#compiler-options&quot;&gt;은 Gradle의 컴파일러 옵션을&lt;/a&gt; 참조 하십시오. 들어 &lt;a href=&quot;whatsnew13#multiplatform-projects&quot;&gt;멀티 프로젝트&lt;/a&gt; 설정을 참조 &lt;a href=&quot;building-mpp-with-gradle#language-settings&quot;&gt;Gradle을의와 멀티 프로젝트를 구축&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7ed0bb70c421b45440cc0db209c02920f745d74c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;using-maven#specifying-compiler-options&quot;&gt;Compiler options in Maven&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용 &lt;a href=&quot;using-maven#specifying-compiler-options&quot;&gt;은 Maven의 컴파일러 옵션을&lt;/a&gt; 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="b54c428be4abac9b8aa7be4ba584b46daabf19ab" translate="yes" xml:space="preserve">
          <source>See a full coroutine creation stack, as well as a call stack inside the coroutine. The stack includes all frames with variable values, even those that would be lost during standard debugging.</source>
          <target state="translated">See a full coroutine creation stack, as well as a call stack inside the coroutine. The stack includes all frames with variable values, even those that would be lost during standard debugging.</target>
        </trans-unit>
        <trans-unit id="ce3978d67b7d1bd90a41b2181470928f80a9d834" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;properties&quot;&gt;Properties And Fields&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;properties&quot;&gt;속성 및 필드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1927e1cd499f912b4e75aeea8d95fdabcc28792e" translate="yes" xml:space="preserve">
          <source>See also logarithm functions for common fixed bases: &lt;a href=&quot;ln#kotlin.math%24ln%28kotlin.Double%29&quot;&gt;ln&lt;/a&gt;, &lt;a href=&quot;log10#kotlin.math%24log10%28kotlin.Double%29&quot;&gt;log10&lt;/a&gt; and &lt;a href=&quot;log2#kotlin.math%24log2%28kotlin.Double%29&quot;&gt;log2&lt;/a&gt;.</source>
          <target state="translated">공통 고정베이스에 대한 로그 함수 ( &lt;a href=&quot;ln#kotlin.math%24ln%28kotlin.Double%29&quot;&gt;ln&lt;/a&gt; , &lt;a href=&quot;log10#kotlin.math%24log10%28kotlin.Double%29&quot;&gt;log10&lt;/a&gt; 및 &lt;a href=&quot;log2#kotlin.math%24log2%28kotlin.Double%29&quot;&gt;log2)&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="45bfbe918ee8b7efacf36711757200ecfce30435" translate="yes" xml:space="preserve">
          <source>See also logarithm functions for common fixed bases: &lt;a href=&quot;ln#kotlin.math%24ln(kotlin.Double)&quot;&gt;ln&lt;/a&gt;, &lt;a href=&quot;log10#kotlin.math%24log10(kotlin.Double)&quot;&gt;log10&lt;/a&gt; and &lt;a href=&quot;log2#kotlin.math%24log2(kotlin.Double)&quot;&gt;log2&lt;/a&gt;.</source>
          <target state="translated">See also logarithm functions for common fixed bases: &lt;a href=&quot;ln#kotlin.math%24ln(kotlin.Double)&quot;&gt;ln&lt;/a&gt;, &lt;a href=&quot;log10#kotlin.math%24log10(kotlin.Double)&quot;&gt;log10&lt;/a&gt; and &lt;a href=&quot;log2#kotlin.math%24log2(kotlin.Double)&quot;&gt;log2&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="446b6ef7aa0b302d8a46c4286a5d36536a09aea4" translate="yes" xml:space="preserve">
          <source>See also or Experimental API &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/experimental.md&quot;&gt;KEEP&lt;/a&gt; for technical details.</source>
          <target state="translated">기술적 세부 사항은 실험적 API &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/experimental.md&quot;&gt;KEEP&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c67250701d5ea315927e478928dbae47c640c4f8" translate="yes" xml:space="preserve">
          <source>See also the Opt-in Requirements API &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/experimental.md&quot;&gt;KEEP&lt;/a&gt; for technical details.</source>
          <target state="translated">See also the Opt-in Requirements API &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/experimental.md&quot;&gt;KEEP&lt;/a&gt; for technical details.</target>
        </trans-unit>
        <trans-unit id="b8d6677a32b4b229d038a3cbf6ebd226f8285a6a" translate="yes" xml:space="preserve">
          <source>See here for &lt;a href=&quot;https://github.com/Kotlin/kotlinx.serialization#current-project-status&quot;&gt;details&lt;/a&gt;.</source>
          <target state="translated">여기를 참조하십시오 &lt;a href=&quot;https://github.com/Kotlin/kotlinx.serialization#current-project-status&quot;&gt;세부 사항&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="89bb66da1bc1695c79bf8970be2a0382cfd44b8d" translate="yes" xml:space="preserve">
          <source>See more about native binaries declaration at the &lt;a href=&quot;../building-mpp-with-gradle#building-final-native-binaries&quot;&gt;corresponding page&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../building-mpp-with-gradle#building-final-native-binaries&quot;&gt;해당 페이지&lt;/a&gt; 에서 기본 바이너리 선언에 대해 자세히 알아보십시오 .</target>
        </trans-unit>
        <trans-unit id="c90337477f28c69e470160c1be3c415aaf92ce14" translate="yes" xml:space="preserve">
          <source>See more details in &lt;a href=&quot;c_interop&quot;&gt;INTEROP.md&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;c_interop&quot;&gt;INTEROP.md&lt;/a&gt; 에서 자세한 내용을 참조하십시오</target>
        </trans-unit>
        <trans-unit id="452553878086517724efa33202a5a8964b0da5d2" translate="yes" xml:space="preserve">
          <source>See more info about dependencies at the &lt;a href=&quot;../building-mpp-with-gradle#adding-dependencies&quot;&gt;corresponding page&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../building-mpp-with-gradle#adding-dependencies&quot;&gt;해당 페이지&lt;/a&gt; 에서 종속성에 대한 자세한 정보를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d04fa7d9f4c04209951c47546bf6ec49100b9e3f" translate="yes" xml:space="preserve">
          <source>See no issues at all</source>
          <target state="translated">전혀 문제가 없습니다</target>
        </trans-unit>
        <trans-unit id="d29a6437cf181b0af5ceacce4b0721019014ce77" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../../../../../docs/reference/generics#type-projections&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../../../../../../docs/reference/generics#type-projections&quot;&gt;Kotlin 언어 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7b34fbd1aa7e811889de71121e06e6932f480175" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../../../../../docs/reference/generics#variance&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../../../../../../docs/reference/generics#variance&quot;&gt;Kotlin 언어 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7240928f0149f9330e21b7d8c8473b408e9be2b5" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../../../../../docs/reference/java-to-kotlin-interop#handling-signature-clashes-with-jvmname&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../../../../../../docs/reference/java-to-kotlin-interop#handling-signature-clashes-with-jvmname&quot;&gt;Kotlin 언어 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4e56302902b6d7cf704d94dd232e74f328c57f2c" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../../../../../docs/reference/java-to-kotlin-interop#instance-fields&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../../../../../../docs/reference/java-to-kotlin-interop#instance-fields&quot;&gt;Kotlin 언어 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7a244dab269fec173abd1928c537d2e1eaaa4715" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../../../../../docs/reference/java-to-kotlin-interop#static-methods&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../../../../../../docs/reference/java-to-kotlin-interop#static-methods&quot;&gt;Kotlin 언어 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f4cd375f16cd383b059d21dedc19c624ac2ba1de" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../../../../../docs/reference/reflection&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../../../../../../docs/reference/reflection&quot;&gt;Kotlin 언어 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="72cdc4d6bee3414fe6381333369ed7a61965be83" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../../../../../docs/reference/visibility-modifiers&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../../../../../../docs/reference/visibility-modifiers&quot;&gt;Kotlin 언어 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fe954a2bf9d471f5fdc94f16960bf5a878c05413" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../tutorials/javascript/getting-started-maven/getting-started-with-maven&quot;&gt;Getting Started with Kotlin and JavaScript with Maven&lt;/a&gt; tutorial for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../tutorials/javascript/getting-started-maven/getting-started-with-maven&quot;&gt;Kotlin 및 Maven으로 JavaScript 시작하기&lt;/a&gt; 자습서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f69d353fcc18f1de1ac59cf0f9d284cc48a3cc84" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;http://kotlinlang.org/docs/reference/multiplatform.html&quot;&gt;documentation&lt;/a&gt; for details and steps to build a multiplatform project.</source>
          <target state="translated">멀티 플랫폼 프로젝트를 빌드하는 세부 사항 및 단계 는 &lt;a href=&quot;http://kotlinlang.org/docs/reference/multiplatform.html&quot;&gt;문서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1cf78243b69a4b33515a1514a8bc6cae4ef1f751" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://kotlinlang.org/docs/reference/grammar.html#expressions&quot;&gt;Grammar reference&lt;/a&gt; for the complete operators precedence hierarchy.</source>
          <target state="translated">전체 연산자 우선 순위 계층 구조 는 &lt;a href=&quot;https://kotlinlang.org/docs/reference/grammar.html#expressions&quot;&gt;문법 참조&lt;/a&gt; 를 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="04290a32dde94e5467a257f67d0dc228f0d14cc5" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://kotlinlang.org/docs/reference/grammar.html#forStatement&quot;&gt;grammar for &lt;em&gt;for&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">참고 항목 &lt;a href=&quot;https://kotlinlang.org/docs/reference/grammar.html#forStatement&quot;&gt;에 대한 문법 &lt;em&gt;에 대한을&lt;/em&gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ee1dc8e8d13d83e997447435f9ba472f0cd009f8" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://kotlinlang.org/docs/reference/grammar.html#ifExpression&quot;&gt;grammar for &lt;em&gt;if&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://kotlinlang.org/docs/reference/grammar.html#ifExpression&quot;&gt;&lt;em&gt;if&lt;/em&gt;&lt;/a&gt; 의 문법을&lt;em&gt;&lt;/em&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4b285c0e86de8a581a61991ee7da4b754ae513e2" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://kotlinlang.org/docs/reference/grammar.html#whenExpression&quot;&gt;grammar for &lt;em&gt;when&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://kotlinlang.org/docs/reference/grammar.html#whenExpression&quot;&gt;&lt;em&gt;when&lt;/em&gt;&lt;/a&gt; 문법을&lt;em&gt;&lt;/em&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dfb5b5177f3d4417b5b1aec6da0d268c7fb3dd0a" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://kotlinlang.org/docs/reference/grammar.html#whileStatement&quot;&gt;grammar for &lt;em&gt;while&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://kotlinlang.org/docs/reference/grammar.html#whileStatement&quot;&gt;&lt;em&gt;while&lt;/em&gt;&lt;/a&gt; 의 문법을&lt;em&gt;&lt;/em&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a8fd90bb289112ec8e23ddfe5c8921ddd13257e7" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;mpp-dsl-reference#compilation-parameters&quot;&gt;list of compilation parameters&lt;/a&gt; and &lt;a href=&quot;using-gradle#compiler-options&quot;&gt;compiler options&lt;/a&gt; available for all or specific targets.</source>
          <target state="translated">모든 또는 특정 대상에 사용할 수있는 &lt;a href=&quot;mpp-dsl-reference#compilation-parameters&quot;&gt;컴파일 매개 변수&lt;/a&gt; 및 &lt;a href=&quot;using-gradle#compiler-options&quot;&gt;컴파일러 옵션 &lt;/a&gt;목록을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4c142e485ce34a3edc749760733f1c02d73e19d6" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;type-aliases&quot;&gt;documentation&lt;/a&gt; and &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/type-aliases.md&quot;&gt;KEEP&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;type-aliases&quot;&gt;설명서&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/type-aliases.md&quot;&gt;KEEP&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f2fd457da1c9c81b713223b897fbc1dac4ccfea7" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;samples/libcurl&lt;/code&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;samples/libcurl&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="767754af5228f0307a86fcff121d80c53957012a" translate="yes" xml:space="preserve">
          <source>See the description of &lt;a href=&quot;kapt&quot;&gt;Kotlin annotation processing tool&lt;/a&gt; (&lt;code&gt;kapt&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;kapt&quot;&gt;Kotlin 주석 처리 도구&lt;/a&gt; ( &lt;code&gt;kapt&lt;/code&gt; ) 의 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="27d63786313d54e555bc147958b0f7758e49c1a7" translate="yes" xml:space="preserve">
          <source>See the details on the syntax as well as the compatibility notice in the &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/kotlin-contracts.md&quot;&gt;KEEP&lt;/a&gt;.</source>
          <target state="translated">구문에 대한 자세한 내용과 &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/kotlin-contracts.md&quot;&gt;KEEP&lt;/a&gt; 의 호환성 공지를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f0669c4a1b9c1fa53f605967964c505b80ee1bfd" translate="yes" xml:space="preserve">
          <source>See the following example that filters the even integers and maps them to strings:</source>
          <target state="translated">짝수 정수를 필터링하고 문자열에 매핑하는 다음 예제를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="cbd9ca0b72729429e57010990712d0ea028ea89a" translate="yes" xml:space="preserve">
          <source>See the other overload of &lt;a href=&quot;pow#kotlin.math%24pow%28kotlin.Double%2C+kotlin.Double%29&quot;&gt;pow&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;pow#kotlin.math%24pow%28kotlin.Double%2C+kotlin.Double%29&quot;&gt;pow&lt;/a&gt; 의 다른 과부하 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="49b5e929eef45ae74221a3da709cf4885c42bc36" translate="yes" xml:space="preserve">
          <source>See the other overload of &lt;a href=&quot;pow#kotlin.math%24pow(kotlin.Double,%20kotlin.Double)&quot;&gt;pow&lt;/a&gt; for details.</source>
          <target state="translated">See the other overload of &lt;a href=&quot;pow#kotlin.math%24pow(kotlin.Double,%20kotlin.Double)&quot;&gt;pow&lt;/a&gt; for details.</target>
        </trans-unit>
        <trans-unit id="1848d6eda12852059da4f468fd1210b532135f45" translate="yes" xml:space="preserve">
          <source>See the values of local and captured variables for both running and suspended coroutines.</source>
          <target state="translated">See the values of local and captured variables for both running and suspended coroutines.</target>
        </trans-unit>
        <trans-unit id="cec7a60bb845fd7cb358ff67ea5861b283e96597" translate="yes" xml:space="preserve">
          <source>See this &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/inline-classes.md&quot;&gt;language proposal for inline classes&lt;/a&gt; for other technical details and discussion.</source>
          <target state="translated">다른 기술적 인 세부 사항 및 토론 &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/inline-classes.md&quot;&gt;은 인라인 클래스에&lt;/a&gt; 대한 이 언어 제안을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="002a4144c0bb875640ce6427eac3a179663115ca" translate="yes" xml:space="preserve">
          <source>See warnings about the upcoming change</source>
          <target state="translated">다음 변경에 ​​대한 경고를 참조하십시오</target>
        </trans-unit>
        <trans-unit id="1101f7912326c1029e04e7437c99a5ed6370f18e" translate="yes" xml:space="preserve">
          <source>See what &lt;a href=&quot;#types-in-c-language&quot;&gt;Data Types are in C Language&lt;/a&gt;</source>
          <target state="translated">어떤 참조 &lt;a href=&quot;#types-in-c-language&quot;&gt;데이터 유형은 C 언어에&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c9974e39c327f569bcd348b8b36f9140e4e7698" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;../tutorials/native/mpp-ios-android&quot;&gt;Multiplatform Project: iOS and Android&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;../tutorials/native/mpp-ios-android&quot;&gt;다중 플랫폼 프로젝트 : iOS 및 Android&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="88b2c3be971f78e0384a2f3914837a9187f5cb5a" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;basic-types#floating-point-numbers-comparison&quot;&gt;Floating Point Numbers Comparison&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;basic-types#floating-point-numbers-comparison&quot;&gt;부동 소수점 숫자 비교를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d857f440c3aca0e9f922ba8b7d1eab5c56b025df" translate="yes" xml:space="preserve">
          <source>See: https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#The_modern_algorithm</source>
          <target state="translated">참조 : https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#The_modern_algorithm</target>
        </trans-unit>
        <trans-unit id="8ce4b6e4781457e2e238b0b0c70173b2e8bced13" translate="yes" xml:space="preserve">
          <source>Select &lt;em&gt;Use gradle 'wrapper' task configuration&lt;/em&gt; option in the Gradle import dialog to complete the import. For existing projects, which already have Gradle wrapper scripts, the &lt;em&gt;Use default Gradle wrapper&lt;/em&gt; option should be selected instead.</source>
          <target state="translated">가져 오기를 완료하려면 Gradle 가져 오기 대화 상자에서 &lt;em&gt;gradle 'wrapper'태스크 구성&lt;/em&gt; 옵션 &lt;em&gt;사용을&lt;/em&gt; 선택 &lt;em&gt;하십시오&lt;/em&gt; . Gradle 래퍼 스크립트가 이미있는 기존 프로젝트의 경우 &lt;em&gt;기본 Gradle 래퍼 사용&lt;/em&gt; 옵션을 대신 선택해야합니다.</target>
        </trans-unit>
        <trans-unit id="a4ba18808948e22b319e6ff3626179d0771172f8" translate="yes" xml:space="preserve">
          <source>Select &lt;strong&gt;Create New Virtual Device&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;새 가상 장치 작성을&lt;/strong&gt; 선택 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="88c60277524c424110cd90b4ac1140d679ec1101" translate="yes" xml:space="preserve">
          <source>Select &lt;strong&gt;File | New | Kotlin Project&lt;/strong&gt;.</source>
          <target state="translated">선택 &lt;strong&gt;파일 | 새로운 | 코 틀린 프로젝트&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="51bd6f5b8caa2312f65b66e14a10bd9e6861f7a0" translate="yes" xml:space="preserve">
          <source>Select Expression (experimental)</source>
          <target state="translated">Select Expression (experimental)</target>
        </trans-unit>
        <trans-unit id="547eecf41dc87556284adfa049756181373e8126" translate="yes" xml:space="preserve">
          <source>Select a device you like and click &lt;strong&gt;Next&lt;/strong&gt;.</source>
          <target state="translated">원하는 장치를 선택하고 &lt;strong&gt;다음을&lt;/strong&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="fad43dbed6f4183aadf8692b1c2034452b1ca05d" translate="yes" xml:space="preserve">
          <source>Select a system version and download its image.</source>
          <target state="translated">시스템 버전을 선택하고 이미지를 다운로드하십시오.</target>
        </trans-unit>
        <trans-unit id="d60a759340d40c46b0cebed4eb581fe0a6a3c493" translate="yes" xml:space="preserve">
          <source>Select an &lt;a href=&quot;https://developer.android.com/guide/components/activities/intro-activities&quot;&gt;activity&lt;/a&gt; that defines the behavior of your application. For your first &quot;Hello world&quot; application, select &lt;strong&gt;Empty Activity&lt;/strong&gt; that just shows a screen, and click &lt;strong&gt;Next&lt;/strong&gt;.</source>
          <target state="translated">응용 프로그램의 동작을 정의 하는 &lt;a href=&quot;https://developer.android.com/guide/components/activities/intro-activities&quot;&gt;활동&lt;/a&gt; 을 선택하십시오 . 첫 번째 &quot;Hello world&quot;애플리케이션의 경우 화면 만 표시하는 &lt;strong&gt;활동 비우기를&lt;/strong&gt; 선택 하고 &lt;strong&gt;다음을&lt;/strong&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="4c32ac23bf57e6bef05946a26b1a0eabf8256266" translate="yes" xml:space="preserve">
          <source>Select expression (experimental)</source>
          <target state="translated">표현 선택 (실험)</target>
        </trans-unit>
        <trans-unit id="48956f92abeebca2ff71b62a0891686768c01f08" translate="yes" xml:space="preserve">
          <source>Select expression has &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-send-channel/on-send.html&quot;&gt;onSend&lt;/a&gt; clause that can be used for a great good in combination with a biased nature of selection.</source>
          <target state="translated">선택 표현식에는 선택 특성의 바이어스 특성과 함께 사용할 수있는 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-send-channel/on-send.html&quot;&gt;onSend&lt;/a&gt; 절이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b520be71b3c104ce563b6c593fde42be010adf49" translate="yes" xml:space="preserve">
          <source>Select expression makes it possible to await multiple suspending functions simultaneously and &lt;em&gt;select&lt;/em&gt; the first one that becomes available.</source>
          <target state="translated">Select expression을 사용하면 여러 개의 일시 중단 기능을 동시에 대기하고 사용할 수있는 첫 번째 기능을 &lt;em&gt;선택할&lt;/em&gt; 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8175e32b759e37e1a5d84ee3e91065f0c422b7eb" translate="yes" xml:space="preserve">
          <source>Select expressions are an experimental feature of &lt;code&gt;kotlinx.coroutines&lt;/code&gt;. Their API is expected to evolve in the upcoming updates of the &lt;code&gt;kotlinx.coroutines&lt;/code&gt; library with potentially breaking changes.</source>
          <target state="translated">선택 표현식은 &lt;code&gt;kotlinx.coroutines&lt;/code&gt; 의 실험 기능입니다 . 그들의 API는 &lt;code&gt;kotlinx.coroutines&lt;/code&gt; 라이브러리 의 향후 업데이트에서 잠재적으로 변경 사항이 변경 되어 발전 할 것으로 예상 됩니다.</target>
        </trans-unit>
        <trans-unit id="4e17138b73e50b2628e9a8c0ab5d0c0711f6a229" translate="yes" xml:space="preserve">
          <source>Select only the distinct characters in your name using the &lt;a href=&quot;../../../api/latest/jvm/stdlib/kotlin.collections/distinct&quot;&gt;&lt;code&gt;distinct()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;../../../api/latest/jvm/stdlib/kotlin.collections/distinct&quot;&gt; &lt;code&gt;distinct()&lt;/code&gt; &lt;/a&gt; 함수를 사용하여 이름에서 고유 한 문자 만 선택하십시오 .</target>
        </trans-unit>
        <trans-unit id="3fc0f4678c53c219cb3d0d546b87fed9cd3ee616" translate="yes" xml:space="preserve">
          <source>Select the Gradle DSL &amp;ndash; Kotlin or Groovy.</source>
          <target state="translated">Gradle DSL &amp;ndash; Kotlin 또는 Groovy를 선택합니다.</target>
        </trans-unit>
        <trans-unit id="3f9b887613813021fda7ae7e33587acc4bb4bc00" translate="yes" xml:space="preserve">
          <source>Select the execution environment:</source>
          <target state="translated">실행 환경 선택 :</target>
        </trans-unit>
        <trans-unit id="42302b9a2abf4e35a9075aa892e7301f57141bf5" translate="yes" xml:space="preserve">
          <source>Selected documentation pages:</source>
          <target state="translated">선택된 문서 페이지 :</target>
        </trans-unit>
        <trans-unit id="02edbb0885c1f54bd5c812f1f6c21dd73b7b7752" translate="yes" xml:space="preserve">
          <source>Selecting deferred values</source>
          <target state="translated">지연된 값 선택</target>
        </trans-unit>
        <trans-unit id="47d00ff46b20191dc1fea60073556feeb9737b6b" translate="yes" xml:space="preserve">
          <source>Selecting from channels</source>
          <target state="translated">채널에서 선택</target>
        </trans-unit>
        <trans-unit id="aab3b9d16e09699ff2d802b15b20b5ecc4f06393" translate="yes" xml:space="preserve">
          <source>Selecting library headers</source>
          <target state="translated">라이브러리 헤더 선택</target>
        </trans-unit>
        <trans-unit id="fe050710fc31fb212b9d58e03ffb5ddf9227ff92" translate="yes" xml:space="preserve">
          <source>Selecting on close</source>
          <target state="translated">닫을 때 선택</target>
        </trans-unit>
        <trans-unit id="c21c0093c98c3f86a84809d41128aa9f9d516de1" translate="yes" xml:space="preserve">
          <source>Selecting to send</source>
          <target state="translated">보내도록 선택</target>
        </trans-unit>
        <trans-unit id="c5d699ecb491cd74b07cd5d34e15b6457dcd4d77" translate="yes" xml:space="preserve">
          <source>SelectionMode</source>
          <target state="translated">SelectionMode</target>
        </trans-unit>
        <trans-unit id="e224d8a043bad355e811a889ebdd19946f0af63a" translate="yes" xml:space="preserve">
          <source>Self-contained Jar file</source>
          <target state="translated">자체 포함 된 Jar 파일</target>
        </trans-unit>
        <trans-unit id="deaa9959eee189b886b9fe0c02af7f02ee90f04a" translate="yes" xml:space="preserve">
          <source>Semantic difference between object expressions and declarations</source>
          <target state="translated">객체 표현과 선언의 의미 상 차이점</target>
        </trans-unit>
        <trans-unit id="1158dc6391ca1c282b0274da233e5b47974ab44c" translate="yes" xml:space="preserve">
          <source>Semicolons</source>
          <target state="translated">Semicolons</target>
        </trans-unit>
        <trans-unit id="5782c9162c716def6df9bf7e94748ad8c4334b5a" translate="yes" xml:space="preserve">
          <source>Send and receive operations to channels are &lt;em&gt;fair&lt;/em&gt; with respect to the order of their invocation from multiple coroutines. They are served in first-in first-out order, e.g. the first coroutine to invoke &lt;code&gt;receive&lt;/code&gt; gets the element. In the following example two coroutines &quot;ping&quot; and &quot;pong&quot; are receiving the &quot;ball&quot; object from the shared &quot;table&quot; channel.</source>
          <target state="translated">여러 코 루틴의 호출 순서와 관련 하여 채널로의 송신 및 수신 조작은 &lt;em&gt;공정&lt;/em&gt; 합니다. 그들은 선입 선출 순서로 제공됩니다. 예를 들어 &lt;code&gt;receive&lt;/code&gt; 를 호출하는 첫 번째 코 루틴 이 요소를 가져옵니다. 다음 예에서 두 개의 코 루틴 &quot;ping&quot;및 &quot;pong&quot;은 공유 &quot;table&quot;채널에서 &quot;ball&quot;객체를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="e54a83f10e5af4bee27d8c0ebfe4ed0592366f8d" translate="yes" xml:space="preserve">
          <source>Separate interfaces for read-only and mutable collections</source>
          <target state="translated">읽기 전용 및 변경 가능한 컬렉션을위한 별도의 인터페이스</target>
        </trans-unit>
        <trans-unit id="5c8f4e0e1a2281faf562976c2410f76c3d8fbc95" translate="yes" xml:space="preserve">
          <source>Sequence</source>
          <target state="translated">Sequence</target>
        </trans-unit>
        <trans-unit id="e5883c1a54bb1e68289417fbad3062b1a700027a" translate="yes" xml:space="preserve">
          <source>Sequence operations</source>
          <target state="translated">시퀀스 작업</target>
        </trans-unit>
        <trans-unit id="c48d275d17f30d5b803ff437ae7b3ef803c29872" translate="yes" xml:space="preserve">
          <source>Sequence operations, like &lt;a href=&quot;../map&quot;&gt;Sequence.map&lt;/a&gt;, &lt;a href=&quot;../filter&quot;&gt;Sequence.filter&lt;/a&gt; etc, generally preserve that property of a sequence, and again it's documented for an operation if it doesn't.</source>
          <target state="translated">시퀀스 작업은 같은 &lt;a href=&quot;../map&quot;&gt;Sequence.map&lt;/a&gt; , &lt;a href=&quot;../filter&quot;&gt;Sequence.filter&lt;/a&gt; 등, 일반적으로 일련의 속성을 보존되어 있지 않으면 다시는 작업에 문서화.</target>
        </trans-unit>
        <trans-unit id="64e6557fa694e5bc4d5214113f8e64a03eff042b" translate="yes" xml:space="preserve">
          <source>Sequence processing example</source>
          <target state="translated">시퀀스 처리 예</target>
        </trans-unit>
        <trans-unit id="17d31f0a79810867402ac04dc581a512a3e7b8e1" translate="yes" xml:space="preserve">
          <source>Sequence.groupingBy</source>
          <target state="translated">Sequence.groupingBy</target>
        </trans-unit>
        <trans-unit id="01f90824cbb43798e728c150fb0e61a7bc14e304" translate="yes" xml:space="preserve">
          <source>SequenceBuilder</source>
          <target state="translated">SequenceBuilder</target>
        </trans-unit>
        <trans-unit id="1ba425c731fb567f4a419699f797f9b17fbee2da" translate="yes" xml:space="preserve">
          <source>SequenceScope</source>
          <target state="translated">SequenceScope</target>
        </trans-unit>
        <trans-unit id="b5fb636023abb67d347041d398442118f79ea091" translate="yes" xml:space="preserve">
          <source>Sequences</source>
          <target state="translated">Sequences</target>
        </trans-unit>
        <trans-unit id="dd81a16031599be93f6dd81ca5d6238d53a6744e" translate="yes" xml:space="preserve">
          <source>Sequences can be iterated multiple times, however some sequence implementations might constrain themselves to be iterated only once. That is mentioned specifically in their documentation (e.g. &lt;a href=&quot;../generate-sequence&quot;&gt;generateSequence&lt;/a&gt; overload). The latter sequences throw an exception on an attempt to iterate them the second time.</source>
          <target state="translated">시퀀스는 여러 번 반복 될 수 있지만 일부 시퀀스 구현은 한 번만 반복되도록 제한 할 수 있습니다. 이는 해당 문서에서 구체적으로 언급됩니다 (예 : &lt;a href=&quot;../generate-sequence&quot;&gt;generateSequence&lt;/a&gt; 과부하). 후자의 시퀀스는 두 번째로 반복하려는 시도에서 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="324bddccf0babf837f3e319e5e20b79516c0238f" translate="yes" xml:space="preserve">
          <source>Sequences can be iterated multiple times, however some sequence implementations might constrain themselves to be iterated only once. That is mentioned specifically in their documentation (e.g. &lt;a href=&quot;generate-sequence&quot;&gt;kotlin.sequences.generateSequence&lt;/a&gt; overload). The latter sequences throw an exception on an attempt to iterate them the second time.</source>
          <target state="translated">시퀀스는 여러 번 반복 될 수 있지만 일부 시퀀스 구현은 한 번만 반복되도록 제한 할 수 있습니다. 이는 설명서에 구체적으로 언급되어 있습니다 (예 : &lt;a href=&quot;generate-sequence&quot;&gt;kotlin.sequences.generateSequence&lt;/a&gt; 과부하). 후자의 시퀀스는 두 번째 반복을 시도 할 때 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7d6e9c12f8fb2b461fa680aec22b49a6b437317d" translate="yes" xml:space="preserve">
          <source>Sequences can be iterated multiple times; however some sequence implementations might constrain themselves to be iterated only once. That is mentioned specifically in their documentation.</source>
          <target state="translated">시퀀스는 여러 번 반복 될 수 있습니다. 그러나 일부 시퀀스 구현은 한 번만 반복되도록 제한 할 수 있습니다. 그것은 그들의 문서에 구체적으로 언급되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="633b854023bf60ecd3352dd58f1b60cddc507889" translate="yes" xml:space="preserve">
          <source>Sequential by default</source>
          <target state="translated">기본적으로 순차적</target>
        </trans-unit>
        <trans-unit id="89282363da677473acdbf45f0831bde9f4d3b6c4" translate="yes" xml:space="preserve">
          <source>Serialization</source>
          <target state="translated">Serialization</target>
        </trans-unit>
        <trans-unit id="cef85d46b644879ebb59d9edf7dca14d06924037" translate="yes" xml:space="preserve">
          <source>Serialization Compiler Plugin</source>
          <target state="translated">Serialization Compiler Plugin</target>
        </trans-unit>
        <trans-unit id="bfc1af3486233d86f9e4285f304ea90be870feae" translate="yes" xml:space="preserve">
          <source>Serialization Core Library</source>
          <target state="translated">Serialization Core Library</target>
        </trans-unit>
        <trans-unit id="f1f612371c661be3166a24f9dc10446222583cd3" translate="yes" xml:space="preserve">
          <source>Serialization plugin</source>
          <target state="translated">직렬화 플러그인</target>
        </trans-unit>
        <trans-unit id="8271ef44e36a997c2ae658d1924bd9cf6db40226" translate="yes" xml:space="preserve">
          <source>ServiceWorkerMessageEventInit</source>
          <target state="translated">ServiceWorkerMessageEventInit</target>
        </trans-unit>
        <trans-unit id="4413f0ab2dcf4624fe4b65b9e4d2332c78716f39" translate="yes" xml:space="preserve">
          <source>ServiceWorkerState</source>
          <target state="translated">ServiceWorkerState</target>
        </trans-unit>
        <trans-unit id="448ab73ba1c21e671e218fb91f2644c834f0c16f" translate="yes" xml:space="preserve">
          <source>Set</source>
          <target state="translated">Set</target>
        </trans-unit>
        <trans-unit id="40113801b18ce319e5c44850e1e658e055ba2004" translate="yes" xml:space="preserve">
          <source>Set Specific Operations</source>
          <target state="translated">특정 작업 설정</target>
        </trans-unit>
        <trans-unit id="7a6d35acbb020d05f22a086ba60e8f73f383445a" translate="yes" xml:space="preserve">
          <source>Set a breakpoint at the at the line where the &lt;code&gt;emit()&lt;/code&gt; function is called:</source>
          <target state="translated">&lt;code&gt;emit()&lt;/code&gt; 함수가 호출 되는 줄에 중단 점을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="43fa638b38fa3057dbf85563525061705d9f06b0" translate="yes" xml:space="preserve">
          <source>Set a callback &lt;a href=&quot;on-fail#kotlin.io.FileTreeWalk%24onFail%28kotlin.Function2%28%28java.io.File%2C+java.io.IOException%2C+kotlin.Unit%29%29%29%2Ffunction&quot;&gt;function&lt;/a&gt;, that is called on a directory when it's impossible to get its file list.</source>
          <target state="translated">파일 목록을 가져올 수없는 경우 디렉토리에서 호출 되는 콜백 &lt;a href=&quot;on-fail#kotlin.io.FileTreeWalk%24onFail%28kotlin.Function2%28%28java.io.File%2C+java.io.IOException%2C+kotlin.Unit%29%29%29%2Ffunction&quot;&gt;함수를&lt;/a&gt; 설정 하십시오.</target>
        </trans-unit>
        <trans-unit id="ceb94f72010eb7da9d200d0bc91d4363a00975f6" translate="yes" xml:space="preserve">
          <source>Set a callback &lt;a href=&quot;on-fail#kotlin.io.FileTreeWalk%24onFail(kotlin.Function2((java.io.File,%20java.io.IOException,%20kotlin.Unit)))/function&quot;&gt;function&lt;/a&gt;, that is called on a directory when it's impossible to get its file list.</source>
          <target state="translated">Set a callback &lt;a href=&quot;on-fail#kotlin.io.FileTreeWalk%24onFail(kotlin.Function2((java.io.File,%20java.io.IOException,%20kotlin.Unit)))/function&quot;&gt;function&lt;/a&gt;, that is called on a directory when it's impossible to get its file list.</target>
        </trans-unit>
        <trans-unit id="8fc8b5e4716f16948d6b45d67f5652a9ca20ac0c" translate="yes" xml:space="preserve">
          <source>Set a custom name for the generated &lt;code&gt;.kotlin_module&lt;/code&gt; file.</source>
          <target state="translated">생성 된 &lt;code&gt;.kotlin_module&lt;/code&gt; 파일 의 사용자 지정 이름을 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="f31f4c35915526a242633cf1e8c3f00933c4d361" translate="yes" xml:space="preserve">
          <source>Set a dependency on a kotlinx library</source>
          <target state="translated">Set a dependency on a kotlinx library</target>
        </trans-unit>
        <trans-unit id="6a9c2a3f5da8586287abac4ffc6a17d437b2fa01" translate="yes" xml:space="preserve">
          <source>Set a new breakpoint at &lt;code&gt;println(value)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;println(value)&lt;/code&gt; 새 중단 점을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="d911966079d78cb03073f49661297df0d86827c6" translate="yes" xml:space="preserve">
          <source>Set breakpoints at the lines with the &lt;code&gt;println()&lt;/code&gt; function call:</source>
          <target state="translated">&lt;code&gt;println()&lt;/code&gt; 함수 호출 을 사용하여 줄에 중단 점을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="a44795ecba49c77354cc67979b537afb9bf65601" translate="yes" xml:space="preserve">
          <source>Set dependencies at the top level</source>
          <target state="translated">Set dependencies at the top level</target>
        </trans-unit>
        <trans-unit id="485b7bd2d6be4000349673682360d0275c82f3c7" translate="yes" xml:space="preserve">
          <source>Set dependencies on test libraries</source>
          <target state="translated">Set dependencies on test libraries</target>
        </trans-unit>
        <trans-unit id="bb1d727da8b88fc1ac29ba6e5b761fe83a5d4420" translate="yes" xml:space="preserve">
          <source>Set hardware target. To see the list of available targets, use the &lt;a href=&quot;#-list-targets&quot;&gt;&lt;code&gt;-list-targets&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">하드웨어 타겟을 설정합니다. 사용 가능한 대상 목록을 보려면 &lt;a href=&quot;#-list-targets&quot;&gt; &lt;code&gt;-list-targets&lt;/code&gt; &lt;/a&gt; 옵션을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="b061e7ff7dc8605bd1d5a2dec3d93d192c52d826" translate="yes" xml:space="preserve">
          <source>Set the bit specified to the specified value.</source>
          <target state="translated">지정된 비트를 지정된 값으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="880db47b115c8ab604176015e936af627e986e44" translate="yes" xml:space="preserve">
          <source>Set the destination file for the compilation result. The value must be a path to a &lt;code&gt;.js&lt;/code&gt; file including its name.</source>
          <target state="translated">컴파일 결과의 대상 파일을 설정합니다. 값은 이름이 포함 된 &lt;code&gt;.js&lt;/code&gt; 파일 의 경로 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="f25b16e787d8ed0de5689fe657be0a75ded1f31b" translate="yes" xml:space="preserve">
          <source>Set the library version.</source>
          <target state="translated">라이브러리 버전을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4786c48c0847340df257cd77d620af5ddba1000f" translate="yes" xml:space="preserve">
          <source>Set the name for the output file.</source>
          <target state="translated">출력 파일의 이름을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="38b610e97dc4a86ed3152f5aad53acad8003c57f" translate="yes" xml:space="preserve">
          <source>Set up an IDE</source>
          <target state="translated">IDE 설정</target>
        </trans-unit>
        <trans-unit id="64e5afea50d6b139bc71e06f74174e128e9d93a3" translate="yes" xml:space="preserve">
          <source>Set up targets manually</source>
          <target state="translated">수동으로 대상 설정</target>
        </trans-unit>
        <trans-unit id="9090f4dac9398caea18d500c177ae5d9eaaf87eb" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-char-at#kotlin.native%24setCharAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/set-char-at#kotlin.native%24setCharAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; 를 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="246e048684268d842d2178c7526eb0fb7b532d94" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-char-at#kotlin.native%24setCharAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Char)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Sets &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-char-at#kotlin.native%24setCharAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Char)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="edcc200bc12273c6272fafd06f2a5c60428e5419" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-double-at#kotlin.native%24setDoubleAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Double%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/set-double-at#kotlin.native%24setDoubleAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Double%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 을 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="0c21c7e45fe78866cb466cbf97aca0424240d7b4" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-double-at#kotlin.native%24setDoubleAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Double)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Sets &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-double-at#kotlin.native%24setDoubleAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Double)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da515a45bf6a7b48f76d31bfdfc07e81c5e5b397" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-float-at#kotlin.native%24setFloatAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Float%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/set-float-at#kotlin.native%24setFloatAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Float%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 를 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="14e7d29c9ba65b63626d1832ef3563cc3027cc9e" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-float-at#kotlin.native%24setFloatAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Float)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Sets &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-float-at#kotlin.native%24setFloatAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Float)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6243aa097ace2f119715a9e02308e904fd46fa09" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-int-at#kotlin.native%24setIntAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/set-int-at#kotlin.native%24setIntAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 를 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="d7968c9395cc3f785c7fbad784256951eef4aeaa" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-int-at#kotlin.native%24setIntAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Sets &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-int-at#kotlin.native%24setIntAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e9fead8a733ff6e2f7c6229ab156b0be3c7aad8" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-long-at#kotlin.native%24setLongAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Long%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/set-long-at#kotlin.native%24setLongAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Long%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼 의 &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 을 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="9f2739f53f4e4c172abb388c4d9763395e85ec22" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-long-at#kotlin.native%24setLongAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Long)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Sets &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-long-at#kotlin.native%24setLongAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Long)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cd6198304f168018790866f8d5de90bd850068be" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-short-at#kotlin.native%24setShortAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Short%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">설정 &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;짧은&lt;/a&gt; 의 아웃 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;된 ByteArray&lt;/a&gt; 지정된 인덱스에서 바이트 버퍼 &lt;a href=&quot;../../kotlin.native/set-short-at#kotlin.native%24setShortAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Short%29%2Findex&quot;&gt;인덱스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7a81ce63eb1f51f89792a8a960d7765ee7a768bb" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-short-at#kotlin.native%24setShortAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Short)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Sets &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-short-at#kotlin.native%24setShortAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Short)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="043a131ab8bde8809b5efb8cc71bececd6f0b920" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../kotlin/-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-char-at#kotlin.native%24setCharAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;set-char-at#kotlin.native%24setCharAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../kotlin/-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; 를 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="c450f95e4310f7aa69bef07dac69e4ffc5e2dc9d" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../kotlin/-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-char-at#kotlin.native%24setCharAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Char)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Sets &lt;a href=&quot;../kotlin/-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-char-at#kotlin.native%24setCharAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Char)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="165ab1c79e9f7280a7ff5a7178cd42f19ee49e12" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-double-at#kotlin.native%24setDoubleAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Double%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;set-double-at#kotlin.native%24setDoubleAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Double%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 을 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="06545b219b3bcf3a4774c7a193e181e8a5dc0a17" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-double-at#kotlin.native%24setDoubleAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Double)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Sets &lt;a href=&quot;../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-double-at#kotlin.native%24setDoubleAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Double)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="66b277295ea869aa45f112638839d6a36ddd88a7" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-float-at#kotlin.native%24setFloatAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Float%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;set-float-at#kotlin.native%24setFloatAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Float%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 를 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="89cba5150a88c23ecf719b99337b394e1b101c4e" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-float-at#kotlin.native%24setFloatAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Float)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Sets &lt;a href=&quot;../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-float-at#kotlin.native%24setFloatAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Float)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eeddfac7038244af25d78ade965c0d83befca8e5" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../kotlin/-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-int-at#kotlin.native%24setIntAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;set-int-at#kotlin.native%24setIntAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../kotlin/-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 를 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="edc54f575b056d527576804eb42f35a7a57e4e5c" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../kotlin/-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-int-at#kotlin.native%24setIntAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Sets &lt;a href=&quot;../kotlin/-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-int-at#kotlin.native%24setIntAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a5595b9f2b46318a666585b89bac1d7a504ef30" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../kotlin/-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-long-at#kotlin.native%24setLongAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Long%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;set-long-at#kotlin.native%24setLongAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Long%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼 의 &lt;a href=&quot;../kotlin/-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 을 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="6ed8051bc57d0114b02204d54a88f06a18065698" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../kotlin/-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-long-at#kotlin.native%24setLongAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Long)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Sets &lt;a href=&quot;../kotlin/-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-long-at#kotlin.native%24setLongAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Long)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="61468958fc1d048054f7da161eb41f9a095e74ff" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../kotlin/-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-short-at#kotlin.native%24setShortAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Short%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">설정 &lt;a href=&quot;../kotlin/-short/index#kotlin.Short&quot;&gt;짧은&lt;/a&gt; 의 아웃 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;된 ByteArray&lt;/a&gt; 지정된 인덱스에서 바이트 버퍼 &lt;a href=&quot;set-short-at#kotlin.native%24setShortAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Short%29%2Findex&quot;&gt;인덱스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd8bd4ea6807d9349c47929e568265a9f5aa283b" translate="yes" xml:space="preserve">
          <source>Sets &lt;a href=&quot;../kotlin/-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-short-at#kotlin.native%24setShortAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Short)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Sets &lt;a href=&quot;../kotlin/-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-short-at#kotlin.native%24setShortAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.Short)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d1af430d4c7c33f49b906ac16225b3535913e1cd" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;ACC_SYNTHETIC&lt;/code&gt; flag on the annotated target in the Java bytecode.</source>
          <target state="translated">Java 바이트 코드의 주석이 달린 대상에 &lt;code&gt;ACC_SYNTHETIC&lt;/code&gt; 플래그를 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="d34e821a8392e5cf541ba4b173e3093815cd886a" translate="yes" xml:space="preserve">
          <source>Sets UByte out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-u-byte-at#kotlin.native%24setUByteAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.UByte%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;set-u-byte-at#kotlin.native%24setUByteAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.UByte%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UByte를 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="e99756f6102d7e5ffdc14e2089ad3d3c005ea4a9" translate="yes" xml:space="preserve">
          <source>Sets UByte out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-u-byte-at#kotlin.native%24setUByteAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.UByte)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Sets UByte out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-u-byte-at#kotlin.native%24setUByteAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.UByte)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a5da7cc264882bdd0383657b09985b2b48c35af" translate="yes" xml:space="preserve">
          <source>Sets UByte out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-u-byte-at#kotlin.native%24setUByteAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.UByte%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/set-u-byte-at#kotlin.native%24setUByteAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.UByte%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UByte를 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="68844fe0de97af421ac92aac2a99a13416a47b01" translate="yes" xml:space="preserve">
          <source>Sets UByte out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-u-byte-at#kotlin.native%24setUByteAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.UByte)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Sets UByte out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-u-byte-at#kotlin.native%24setUByteAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.UByte)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5752ba22649c586941889dd2a62fae9914f91863" translate="yes" xml:space="preserve">
          <source>Sets UInt out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-u-int-at#kotlin.native%24setUIntAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.UInt%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;set-u-int-at#kotlin.native%24setUIntAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.UInt%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UInt를 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="ed76a21791b8bd269f9560fee19c5e7c82a7d5ef" translate="yes" xml:space="preserve">
          <source>Sets UInt out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-u-int-at#kotlin.native%24setUIntAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.UInt)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Sets UInt out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-u-int-at#kotlin.native%24setUIntAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.UInt)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3cdc755ff5323ee1cc48907c601573c3854d5185" translate="yes" xml:space="preserve">
          <source>Sets UInt out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-u-int-at#kotlin.native%24setUIntAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.UInt%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/set-u-int-at#kotlin.native%24setUIntAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.UInt%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UInt를 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="b346529531c769085f80db88178aa54d57e059a2" translate="yes" xml:space="preserve">
          <source>Sets UInt out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-u-int-at#kotlin.native%24setUIntAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.UInt)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Sets UInt out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-u-int-at#kotlin.native%24setUIntAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.UInt)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="75425820919865f6e0a6f27b614d44e86b6f6faf" translate="yes" xml:space="preserve">
          <source>Sets ULong out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-u-long-at#kotlin.native%24setULongAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.ULong%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;set-u-long-at#kotlin.native%24setULongAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.ULong%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 ULong을 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="672b0c4b3472d5c2777049a28d446092dbc2aeb1" translate="yes" xml:space="preserve">
          <source>Sets ULong out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-u-long-at#kotlin.native%24setULongAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.ULong)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Sets ULong out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-u-long-at#kotlin.native%24setULongAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.ULong)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bb90a94951e0937badd2c5a974e39954d8e1c0fa" translate="yes" xml:space="preserve">
          <source>Sets ULong out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-u-long-at#kotlin.native%24setULongAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.ULong%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/set-u-long-at#kotlin.native%24setULongAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.ULong%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 ULong을 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="c9a6e7c6757ff075cfb4baf97e9c29fd5abb1519" translate="yes" xml:space="preserve">
          <source>Sets ULong out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-u-long-at#kotlin.native%24setULongAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.ULong)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Sets ULong out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-u-long-at#kotlin.native%24setULongAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.ULong)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7f67e637b58367e0b58957c4447941673cd92e71" translate="yes" xml:space="preserve">
          <source>Sets UShort out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-u-short-at#kotlin.native%24setUShortAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.UShort%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;set-u-short-at#kotlin.native%24setUShortAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.UShort%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UShort를 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="54a9a58fe67efd14af7738ce6cf03ed8501fc7ec" translate="yes" xml:space="preserve">
          <source>Sets UShort out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-u-short-at#kotlin.native%24setUShortAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.UShort)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Sets UShort out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;set-u-short-at#kotlin.native%24setUShortAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.UShort)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="728922f760b44c69e0b00d27282cd57c2b6e1fca" translate="yes" xml:space="preserve">
          <source>Sets UShort out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-u-short-at#kotlin.native%24setUShortAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.UShort%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/set-u-short-at#kotlin.native%24setUShortAt%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.UShort%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UShort를 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="887390d62637e60babb110b568eeec7307c21ddc" translate="yes" xml:space="preserve">
          <source>Sets UShort out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-u-short-at#kotlin.native%24setUShortAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.UShort)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">Sets UShort out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/set-u-short-at#kotlin.native%24setUShortAt(kotlin.ByteArray,%20kotlin.Int,%20kotlin.UShort)/index&quot;&gt;index&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2900fbda2209cd97da96efa3c37d34a717e8828a" translate="yes" xml:space="preserve">
          <source>Sets a callback &lt;a href=&quot;on-leave#kotlin.io.FileTreeWalk%24onLeave%28kotlin.Function1%28%28java.io.File%2C+kotlin.Unit%29%29%29%2Ffunction&quot;&gt;function&lt;/a&gt;, that is called on any left directory after its files are visited and after it is visited itself.</source>
          <target state="translated">콜백 &lt;a href=&quot;on-leave#kotlin.io.FileTreeWalk%24onLeave%28kotlin.Function1%28%28java.io.File%2C+kotlin.Unit%29%29%29%2Ffunction&quot;&gt;함수를&lt;/a&gt; 설정 합니다 . 즉, 파일을 방문한 후 방문한 후 왼쪽 디렉토리에서 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="7eb5a0750286bfc0bf889d4bf73533f7963fd1db" translate="yes" xml:space="preserve">
          <source>Sets a callback &lt;a href=&quot;on-leave#kotlin.io.FileTreeWalk%24onLeave(kotlin.Function1((java.io.File,%20kotlin.Unit)))/function&quot;&gt;function&lt;/a&gt;, that is called on any left directory after its files are visited and after it is visited itself.</source>
          <target state="translated">Sets a callback &lt;a href=&quot;on-leave#kotlin.io.FileTreeWalk%24onLeave(kotlin.Function1((java.io.File,%20kotlin.Unit)))/function&quot;&gt;function&lt;/a&gt;, that is called on any left directory after its files are visited and after it is visited itself.</target>
        </trans-unit>
        <trans-unit id="b4931c0365ff304a815c6963d0bd7edb11b7c94c" translate="yes" xml:space="preserve">
          <source>Sets a predicate &lt;a href=&quot;on-enter#kotlin.io.FileTreeWalk%24onEnter%28kotlin.Function1%28%28java.io.File%2C+kotlin.Boolean%29%29%29%2Ffunction&quot;&gt;function&lt;/a&gt;, that is called on any entered directory before its files are visited and before it is visited itself.</source>
          <target state="translated">파일을 방문하기 전과 방문하기 전에 입력 한 디렉토리에서 호출 되는 술어 &lt;a href=&quot;on-enter#kotlin.io.FileTreeWalk%24onEnter%28kotlin.Function1%28%28java.io.File%2C+kotlin.Boolean%29%29%29%2Ffunction&quot;&gt;함수를&lt;/a&gt; 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="cf976de53f8bfb250c57efca5d3bf77e7273c15d" translate="yes" xml:space="preserve">
          <source>Sets a predicate &lt;a href=&quot;on-enter#kotlin.io.FileTreeWalk%24onEnter(kotlin.Function1((java.io.File,%20kotlin.Boolean)))/function&quot;&gt;function&lt;/a&gt;, that is called on any entered directory before its files are visited and before it is visited itself.</source>
          <target state="translated">Sets a predicate &lt;a href=&quot;on-enter#kotlin.io.FileTreeWalk%24onEnter(kotlin.Function1((java.io.File,%20kotlin.Boolean)))/function&quot;&gt;function&lt;/a&gt;, that is called on any entered directory before its files are visited and before it is visited itself.</target>
        </trans-unit>
        <trans-unit id="307c3b08228d209c4b76f0067076574f4a4d01fe" translate="yes" xml:space="preserve">
          <source>Sets all bits in the BitSet to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">BitSet의 모든 비트를 &lt;code&gt;false&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="18c1c389ab129422cb72a224859d0ea272965e3c" translate="yes" xml:space="preserve">
          <source>Sets the array element at the specified &lt;a href=&quot;set#kotlin.Array%24set%28kotlin.Int%2C+kotlin.Array.T%29%2Findex&quot;&gt;index&lt;/a&gt; to the specified &lt;a href=&quot;set#kotlin.Array%24set%28kotlin.Int%2C+kotlin.Array.T%29%2Fvalue&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">지정된 &lt;a href=&quot;set#kotlin.Array%24set%28kotlin.Int%2C+kotlin.Array.T%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 의 배열 요소를 지정된 &lt;a href=&quot;set#kotlin.Array%24set%28kotlin.Int%2C+kotlin.Array.T%29%2Fvalue&quot;&gt;값으로 설정&lt;/a&gt; 합니다. 이 메소드는 인덱스 연산자를 사용하여 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11bdf5a875cb31c1c56026618f4d6765e47fe713" translate="yes" xml:space="preserve">
          <source>Sets the array element at the specified &lt;a href=&quot;set#kotlin.Array%24set(kotlin.Int,%20kotlin.Array.T)/index&quot;&gt;index&lt;/a&gt; to the specified &lt;a href=&quot;set#kotlin.Array%24set(kotlin.Int,%20kotlin.Array.T)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">Sets the array element at the specified &lt;a href=&quot;set#kotlin.Array%24set(kotlin.Int,%20kotlin.Array.T)/index&quot;&gt;index&lt;/a&gt; to the specified &lt;a href=&quot;set#kotlin.Array%24set(kotlin.Int,%20kotlin.Array.T)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</target>
        </trans-unit>
        <trans-unit id="9d82a173af7eab575c81214cafeae19267b32c70" translate="yes" xml:space="preserve">
          <source>Sets the bits from the range specified to the specified value.</source>
          <target state="translated">지정된 범위에서 지정된 값으로 비트를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="9899dc3d49007fa7979991a572ef97990d1ed640" translate="yes" xml:space="preserve">
          <source>Sets the bits with indices between &lt;a href=&quot;set#kotlin.native.BitSet%24set%28kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;set#kotlin.native.BitSet%24set%28kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fto&quot;&gt;to&lt;/a&gt; (exclusive) to the specified value.</source>
          <target state="translated">사이 세트 인덱스와 비트 &lt;a href=&quot;set#kotlin.native.BitSet%24set%28kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Ffrom&quot;&gt;로부터&lt;/a&gt; (포함) 및 &lt;a href=&quot;set#kotlin.native.BitSet%24set%28kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fto&quot;&gt;에&lt;/a&gt; 지정된 값 (배타적).</target>
        </trans-unit>
        <trans-unit id="3e0a7e7a939d0ee954ab73be84ac31289295c49f" translate="yes" xml:space="preserve">
          <source>Sets the bits with indices between &lt;a href=&quot;set#kotlin.native.BitSet%24set(kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;set#kotlin.native.BitSet%24set(kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/to&quot;&gt;to&lt;/a&gt; (exclusive) to the specified value.</source>
          <target state="translated">Sets the bits with indices between &lt;a href=&quot;set#kotlin.native.BitSet%24set(kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;set#kotlin.native.BitSet%24set(kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/to&quot;&gt;to&lt;/a&gt; (exclusive) to the specified value.</target>
        </trans-unit>
        <trans-unit id="29eedbac3d423a05f8d6c883690bdaab95095996" translate="yes" xml:space="preserve">
          <source>Sets the character at the specified &lt;a href=&quot;../set#kotlin.text%24set%28kotlin.text.StringBuilder%2C+kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;index&lt;/a&gt; to the specified &lt;a href=&quot;../set#kotlin.text%24set%28kotlin.text.StringBuilder%2C+kotlin.Int%2C+kotlin.Char%29%2Fvalue&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;../set#kotlin.text%24set%28kotlin.text.StringBuilder%2C+kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;색인&lt;/a&gt; 의 문자를 지정된 &lt;a href=&quot;../set#kotlin.text%24set%28kotlin.text.StringBuilder%2C+kotlin.Int%2C+kotlin.Char%29%2Fvalue&quot;&gt;값으로 설정&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="bb0b8fa0b347b9b16fd63e06b5bd3a87260d83b6" translate="yes" xml:space="preserve">
          <source>Sets the character at the specified &lt;a href=&quot;set#kotlin.text%24set%28java.lang.StringBuilder%2C+kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;index&lt;/a&gt; to the specified &lt;a href=&quot;set#kotlin.text%24set%28java.lang.StringBuilder%2C+kotlin.Int%2C+kotlin.Char%29%2Fvalue&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;set#kotlin.text%24set%28java.lang.StringBuilder%2C+kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;색인&lt;/a&gt; 의 문자를 지정된 &lt;a href=&quot;set#kotlin.text%24set%28java.lang.StringBuilder%2C+kotlin.Int%2C+kotlin.Char%29%2Fvalue&quot;&gt;값으로 설정&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="80c69316a95fe7e772cb32ac7444e561620116af" translate="yes" xml:space="preserve">
          <source>Sets the character at the specified &lt;a href=&quot;set#kotlin.text%24set%28kotlin.text.StringBuilder%2C+kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;index&lt;/a&gt; to the specified &lt;a href=&quot;set#kotlin.text%24set%28kotlin.text.StringBuilder%2C+kotlin.Int%2C+kotlin.Char%29%2Fvalue&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;set#kotlin.text%24set%28kotlin.text.StringBuilder%2C+kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;색인&lt;/a&gt; 의 문자를 지정된 &lt;a href=&quot;set#kotlin.text%24set%28kotlin.text.StringBuilder%2C+kotlin.Int%2C+kotlin.Char%29%2Fvalue&quot;&gt;값으로 설정&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="10bce1fe2fc8e5fe524813204703e3ec81ffa10b" translate="yes" xml:space="preserve">
          <source>Sets the character at the specified &lt;a href=&quot;set#kotlin.text%24set(java.lang.StringBuilder,%20kotlin.Int,%20kotlin.Char)/index&quot;&gt;index&lt;/a&gt; to the specified &lt;a href=&quot;set#kotlin.text%24set(java.lang.StringBuilder,%20kotlin.Int,%20kotlin.Char)/value&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">Sets the character at the specified &lt;a href=&quot;set#kotlin.text%24set(java.lang.StringBuilder,%20kotlin.Int,%20kotlin.Char)/index&quot;&gt;index&lt;/a&gt; to the specified &lt;a href=&quot;set#kotlin.text%24set(java.lang.StringBuilder,%20kotlin.Int,%20kotlin.Char)/value&quot;&gt;value&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0ec9235a99166a3395dbf987a29fd6263c5bc19f" translate="yes" xml:space="preserve">
          <source>Sets the character at the specified &lt;a href=&quot;set#kotlin.text%24set(kotlin.text.StringBuilder,%20kotlin.Int,%20kotlin.Char)/index&quot;&gt;index&lt;/a&gt; to the specified &lt;a href=&quot;set#kotlin.text%24set(kotlin.text.StringBuilder,%20kotlin.Int,%20kotlin.Char)/value&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">Sets the character at the specified &lt;a href=&quot;set#kotlin.text%24set(kotlin.text.StringBuilder,%20kotlin.Int,%20kotlin.Char)/index&quot;&gt;index&lt;/a&gt; to the specified &lt;a href=&quot;set#kotlin.text%24set(kotlin.text.StringBuilder,%20kotlin.Int,%20kotlin.Char)/value&quot;&gt;value&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b414940d0d78a3695e15818127fbdab927ca87fa" translate="yes" xml:space="preserve">
          <source>Sets the character at the specified &lt;a href=&quot;set#kotlin.text.StringBuilder%24set(kotlin.Int,%20kotlin.Char)/index&quot;&gt;index&lt;/a&gt; to the specified &lt;a href=&quot;set#kotlin.text.StringBuilder%24set(kotlin.Int,%20kotlin.Char)/value&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">Sets the character at the specified &lt;a href=&quot;set#kotlin.text.StringBuilder%24set(kotlin.Int,%20kotlin.Char)/index&quot;&gt;index&lt;/a&gt; to the specified &lt;a href=&quot;set#kotlin.text.StringBuilder%24set(kotlin.Int,%20kotlin.Char)/value&quot;&gt;value&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="185823a70e02396c0095a3ef140632cd0481c79c" translate="yes" xml:space="preserve">
          <source>Sets the content of this file as &lt;a href=&quot;write-text#kotlin.io%24writeText%28java.io.File%2C+kotlin.String%2C+java.nio.charset.Charset%29%2Ftext&quot;&gt;text&lt;/a&gt; encoded using UTF-8 or specified &lt;a href=&quot;write-text#kotlin.io%24writeText%28java.io.File%2C+kotlin.String%2C+java.nio.charset.Charset%29%2Fcharset&quot;&gt;charset&lt;/a&gt;. If this file exists, it becomes overwritten.</source>
          <target state="translated">이 파일의 내용을 UTF-8 또는 지정된 &lt;a href=&quot;write-text#kotlin.io%24writeText%28java.io.File%2C+kotlin.String%2C+java.nio.charset.Charset%29%2Fcharset&quot;&gt;문자 세트를&lt;/a&gt; 사용하여 인코딩 된 &lt;a href=&quot;write-text#kotlin.io%24writeText%28java.io.File%2C+kotlin.String%2C+java.nio.charset.Charset%29%2Ftext&quot;&gt;텍스트&lt;/a&gt; 로 설정합니다 . 이 파일이 있으면 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="1a4b3ac2c5e8ce3c7535a5909b9784f0c567beec" translate="yes" xml:space="preserve">
          <source>Sets the content of this file as &lt;a href=&quot;write-text#kotlin.io%24writeText(java.io.File,%20kotlin.String,%20java.nio.charset.Charset)/text&quot;&gt;text&lt;/a&gt; encoded using UTF-8 or specified &lt;a href=&quot;write-text#kotlin.io%24writeText(java.io.File,%20kotlin.String,%20java.nio.charset.Charset)/charset&quot;&gt;charset&lt;/a&gt;. If this file exists, it becomes overwritten.</source>
          <target state="translated">Sets the content of this file as &lt;a href=&quot;write-text#kotlin.io%24writeText(java.io.File,%20kotlin.String,%20java.nio.charset.Charset)/text&quot;&gt;text&lt;/a&gt; encoded using UTF-8 or specified &lt;a href=&quot;write-text#kotlin.io%24writeText(java.io.File,%20kotlin.String,%20java.nio.charset.Charset)/charset&quot;&gt;charset&lt;/a&gt;. If this file exists, it becomes overwritten.</target>
        </trans-unit>
        <trans-unit id="9941f1f77af3ee35fb2ffb4e3a7bcfed1b02697f" translate="yes" xml:space="preserve">
          <source>Sets the content of this file as an &lt;a href=&quot;write-bytes#kotlin.io%24writeBytes%28java.io.File%2C+kotlin.ByteArray%29%2Farray&quot;&gt;array&lt;/a&gt; of bytes. If this file already exists, it becomes overwritten.</source>
          <target state="translated">이 파일의 내용 을 바이트 &lt;a href=&quot;write-bytes#kotlin.io%24writeBytes%28java.io.File%2C+kotlin.ByteArray%29%2Farray&quot;&gt;배열&lt;/a&gt; 로 설정합니다. 이 파일이 이미 있으면 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="ffb1528e31248e563182e4f87645cccb7efdf97a" translate="yes" xml:space="preserve">
          <source>Sets the content of this file as an &lt;a href=&quot;write-bytes#kotlin.io%24writeBytes(java.io.File,%20kotlin.ByteArray)/array&quot;&gt;array&lt;/a&gt; of bytes. If this file already exists, it becomes overwritten.</source>
          <target state="translated">Sets the content of this file as an &lt;a href=&quot;write-bytes#kotlin.io%24writeBytes(java.io.File,%20kotlin.ByteArray)/array&quot;&gt;array&lt;/a&gt; of bytes. If this file already exists, it becomes overwritten.</target>
        </trans-unit>
        <trans-unit id="77e69f5b00ef9d6b815b0ece296a85d9aa969669" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.BooleanArray%24set%28kotlin.Int%2C+kotlin.Boolean%29%2Findex&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.BooleanArray%24set%28kotlin.Int%2C+kotlin.Boolean%29%2Fvalue&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">지정된 &lt;a href=&quot;set#kotlin.BooleanArray%24set%28kotlin.Int%2C+kotlin.Boolean%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 의 요소를 지정된 &lt;a href=&quot;set#kotlin.BooleanArray%24set%28kotlin.Int%2C+kotlin.Boolean%29%2Fvalue&quot;&gt;값으로 설정&lt;/a&gt; 합니다. 이 메소드는 인덱스 연산자를 사용하여 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2babab390df5822c5686d7264a98269af33b3236" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.BooleanArray%24set(kotlin.Int,%20kotlin.Boolean)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.BooleanArray%24set(kotlin.Int,%20kotlin.Boolean)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">Sets the element at the given &lt;a href=&quot;set#kotlin.BooleanArray%24set(kotlin.Int,%20kotlin.Boolean)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.BooleanArray%24set(kotlin.Int,%20kotlin.Boolean)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</target>
        </trans-unit>
        <trans-unit id="4baf2dc9994143edc877b925018d335cd4836753" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.ByteArray%24set%28kotlin.Int%2C+kotlin.Byte%29%2Findex&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.ByteArray%24set%28kotlin.Int%2C+kotlin.Byte%29%2Fvalue&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">지정된 &lt;a href=&quot;set#kotlin.ByteArray%24set%28kotlin.Int%2C+kotlin.Byte%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 의 요소를 지정된 &lt;a href=&quot;set#kotlin.ByteArray%24set%28kotlin.Int%2C+kotlin.Byte%29%2Fvalue&quot;&gt;값으로 설정&lt;/a&gt; 합니다. 이 메소드는 인덱스 연산자를 사용하여 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e5afa139eb5113571b275cd28884af1f5a7b8f8" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.ByteArray%24set(kotlin.Int,%20kotlin.Byte)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.ByteArray%24set(kotlin.Int,%20kotlin.Byte)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">Sets the element at the given &lt;a href=&quot;set#kotlin.ByteArray%24set(kotlin.Int,%20kotlin.Byte)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.ByteArray%24set(kotlin.Int,%20kotlin.Byte)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</target>
        </trans-unit>
        <trans-unit id="4f10456289ed125c34024c96a9f3fced96e1084a" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.CharArray%24set%28kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.CharArray%24set%28kotlin.Int%2C+kotlin.Char%29%2Fvalue&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">지정된 &lt;a href=&quot;set#kotlin.CharArray%24set%28kotlin.Int%2C+kotlin.Char%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 의 요소를 지정된 &lt;a href=&quot;set#kotlin.CharArray%24set%28kotlin.Int%2C+kotlin.Char%29%2Fvalue&quot;&gt;값으로 설정&lt;/a&gt; 합니다. 이 메소드는 인덱스 연산자를 사용하여 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ed277fe7ec446ecc68bdeec6859d0dc9ea75c51" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.CharArray%24set(kotlin.Int,%20kotlin.Char)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.CharArray%24set(kotlin.Int,%20kotlin.Char)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">Sets the element at the given &lt;a href=&quot;set#kotlin.CharArray%24set(kotlin.Int,%20kotlin.Char)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.CharArray%24set(kotlin.Int,%20kotlin.Char)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</target>
        </trans-unit>
        <trans-unit id="9061b224d8142ce983f37941237124f97fb7de8c" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.DoubleArray%24set%28kotlin.Int%2C+kotlin.Double%29%2Findex&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.DoubleArray%24set%28kotlin.Int%2C+kotlin.Double%29%2Fvalue&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">지정된 &lt;a href=&quot;set#kotlin.DoubleArray%24set%28kotlin.Int%2C+kotlin.Double%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 의 요소를 지정된 &lt;a href=&quot;set#kotlin.DoubleArray%24set%28kotlin.Int%2C+kotlin.Double%29%2Fvalue&quot;&gt;값으로 설정&lt;/a&gt; 합니다. 이 메소드는 인덱스 연산자를 사용하여 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="71ba803373df6bddf59637e818448db310434892" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.DoubleArray%24set(kotlin.Int,%20kotlin.Double)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.DoubleArray%24set(kotlin.Int,%20kotlin.Double)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">Sets the element at the given &lt;a href=&quot;set#kotlin.DoubleArray%24set(kotlin.Int,%20kotlin.Double)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.DoubleArray%24set(kotlin.Int,%20kotlin.Double)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</target>
        </trans-unit>
        <trans-unit id="ec29a002b4c8ae3cba11729f4f8d9d60c8ea931e" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.FloatArray%24set%28kotlin.Int%2C+kotlin.Float%29%2Findex&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.FloatArray%24set%28kotlin.Int%2C+kotlin.Float%29%2Fvalue&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">지정된 &lt;a href=&quot;set#kotlin.FloatArray%24set%28kotlin.Int%2C+kotlin.Float%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 의 요소를 지정된 &lt;a href=&quot;set#kotlin.FloatArray%24set%28kotlin.Int%2C+kotlin.Float%29%2Fvalue&quot;&gt;값으로 설정&lt;/a&gt; 합니다. 이 메소드는 인덱스 연산자를 사용하여 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d5e1f3fd887a0b7cd039a2d88494a72ae355bfa9" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.FloatArray%24set(kotlin.Int,%20kotlin.Float)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.FloatArray%24set(kotlin.Int,%20kotlin.Float)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">Sets the element at the given &lt;a href=&quot;set#kotlin.FloatArray%24set(kotlin.Int,%20kotlin.Float)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.FloatArray%24set(kotlin.Int,%20kotlin.Float)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</target>
        </trans-unit>
        <trans-unit id="6e8d5814f499c6b4da621128bc725e00fe86459f" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.IntArray%24set%28kotlin.Int%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.IntArray%24set%28kotlin.Int%2C+kotlin.Int%29%2Fvalue&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">지정된 &lt;a href=&quot;set#kotlin.IntArray%24set%28kotlin.Int%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 의 요소를 지정된 &lt;a href=&quot;set#kotlin.IntArray%24set%28kotlin.Int%2C+kotlin.Int%29%2Fvalue&quot;&gt;값으로 설정&lt;/a&gt; 합니다. 이 메소드는 인덱스 연산자를 사용하여 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85c830ee1f7ab2755fc1c848357fc5ca665fc9d3" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.IntArray%24set(kotlin.Int,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.IntArray%24set(kotlin.Int,%20kotlin.Int)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">Sets the element at the given &lt;a href=&quot;set#kotlin.IntArray%24set(kotlin.Int,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.IntArray%24set(kotlin.Int,%20kotlin.Int)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</target>
        </trans-unit>
        <trans-unit id="54f288bc8477e9a77bca52d3a82f8f513baf826b" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.LongArray%24set%28kotlin.Int%2C+kotlin.Long%29%2Findex&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.LongArray%24set%28kotlin.Int%2C+kotlin.Long%29%2Fvalue&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">지정된 &lt;a href=&quot;set#kotlin.LongArray%24set%28kotlin.Int%2C+kotlin.Long%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 의 요소를 지정된 &lt;a href=&quot;set#kotlin.LongArray%24set%28kotlin.Int%2C+kotlin.Long%29%2Fvalue&quot;&gt;값으로 설정&lt;/a&gt; 합니다. 이 메소드는 인덱스 연산자를 사용하여 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d81beb0538979a9f15a517d72744a8ba3c9935c" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.LongArray%24set(kotlin.Int,%20kotlin.Long)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.LongArray%24set(kotlin.Int,%20kotlin.Long)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">Sets the element at the given &lt;a href=&quot;set#kotlin.LongArray%24set(kotlin.Int,%20kotlin.Long)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.LongArray%24set(kotlin.Int,%20kotlin.Long)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</target>
        </trans-unit>
        <trans-unit id="bba404ae951c063d7104d314046303877f1e90e3" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.ShortArray%24set%28kotlin.Int%2C+kotlin.Short%29%2Findex&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.ShortArray%24set%28kotlin.Int%2C+kotlin.Short%29%2Fvalue&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">지정된 &lt;a href=&quot;set#kotlin.ShortArray%24set%28kotlin.Int%2C+kotlin.Short%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 의 요소를 지정된 &lt;a href=&quot;set#kotlin.ShortArray%24set%28kotlin.Int%2C+kotlin.Short%29%2Fvalue&quot;&gt;값으로 설정&lt;/a&gt; 합니다. 이 메소드는 인덱스 연산자를 사용하여 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39ef4889da43f0d166b015f1c98b37a9001291e0" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.ShortArray%24set(kotlin.Int,%20kotlin.Short)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.ShortArray%24set(kotlin.Int,%20kotlin.Short)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">Sets the element at the given &lt;a href=&quot;set#kotlin.ShortArray%24set(kotlin.Int,%20kotlin.Short)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.ShortArray%24set(kotlin.Int,%20kotlin.Short)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</target>
        </trans-unit>
        <trans-unit id="2276370231d8bc10f6cfe6b1e5980d4b15dde8de" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.UByteArray%24set%28kotlin.Int%2C+kotlin.UByte%29%2Findex&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.UByteArray%24set%28kotlin.Int%2C+kotlin.UByte%29%2Fvalue&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">지정된 &lt;a href=&quot;set#kotlin.UByteArray%24set%28kotlin.Int%2C+kotlin.UByte%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 의 요소를 지정된 &lt;a href=&quot;set#kotlin.UByteArray%24set%28kotlin.Int%2C+kotlin.UByte%29%2Fvalue&quot;&gt;값으로 설정&lt;/a&gt; 합니다. 이 메소드는 인덱스 연산자를 사용하여 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6305d64c448d1793da0e531c8323971bc8ab0254" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.UByteArray%24set(kotlin.Int,%20kotlin.UByte)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.UByteArray%24set(kotlin.Int,%20kotlin.UByte)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">Sets the element at the given &lt;a href=&quot;set#kotlin.UByteArray%24set(kotlin.Int,%20kotlin.UByte)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.UByteArray%24set(kotlin.Int,%20kotlin.UByte)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</target>
        </trans-unit>
        <trans-unit id="242acce212e00f9853c222dc79085c2d4bf25a88" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.UIntArray%24set%28kotlin.Int%2C+kotlin.UInt%29%2Findex&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.UIntArray%24set%28kotlin.Int%2C+kotlin.UInt%29%2Fvalue&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">지정된 &lt;a href=&quot;set#kotlin.UIntArray%24set%28kotlin.Int%2C+kotlin.UInt%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 의 요소를 지정된 &lt;a href=&quot;set#kotlin.UIntArray%24set%28kotlin.Int%2C+kotlin.UInt%29%2Fvalue&quot;&gt;값으로 설정&lt;/a&gt; 합니다. 이 메소드는 인덱스 연산자를 사용하여 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="794e2cd772fa9942609b7071a82803d64ad03308" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.UIntArray%24set(kotlin.Int,%20kotlin.UInt)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.UIntArray%24set(kotlin.Int,%20kotlin.UInt)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">Sets the element at the given &lt;a href=&quot;set#kotlin.UIntArray%24set(kotlin.Int,%20kotlin.UInt)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.UIntArray%24set(kotlin.Int,%20kotlin.UInt)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</target>
        </trans-unit>
        <trans-unit id="9c8d086faad98cba0d4d2474417843e8c2654c33" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.ULongArray%24set%28kotlin.Int%2C+kotlin.ULong%29%2Findex&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.ULongArray%24set%28kotlin.Int%2C+kotlin.ULong%29%2Fvalue&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">지정된 &lt;a href=&quot;set#kotlin.ULongArray%24set%28kotlin.Int%2C+kotlin.ULong%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 의 요소를 지정된 &lt;a href=&quot;set#kotlin.ULongArray%24set%28kotlin.Int%2C+kotlin.ULong%29%2Fvalue&quot;&gt;값으로 설정&lt;/a&gt; 합니다. 이 메소드는 인덱스 연산자를 사용하여 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="904a988924bb211f33eba0e9cd82c5d46493d1da" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.ULongArray%24set(kotlin.Int,%20kotlin.ULong)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.ULongArray%24set(kotlin.Int,%20kotlin.ULong)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">주어진 &lt;a href=&quot;set#kotlin.ULongArray%24set(kotlin.Int,%20kotlin.ULong)/index&quot;&gt;인덱스&lt;/a&gt; 의 요소를 주어진 &lt;a href=&quot;set#kotlin.ULongArray%24set(kotlin.Int,%20kotlin.ULong)/value&quot;&gt;값으로 설정&lt;/a&gt; 합니다. 이 메서드는 인덱스 연산자를 사용하여 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="83d722d43b55121439e406624afd6b4f5e5e2bf2" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.UShortArray%24set%28kotlin.Int%2C+kotlin.UShort%29%2Findex&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.UShortArray%24set%28kotlin.Int%2C+kotlin.UShort%29%2Fvalue&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">지정된 &lt;a href=&quot;set#kotlin.UShortArray%24set%28kotlin.Int%2C+kotlin.UShort%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 의 요소를 지정된 &lt;a href=&quot;set#kotlin.UShortArray%24set%28kotlin.Int%2C+kotlin.UShort%29%2Fvalue&quot;&gt;값으로 설정&lt;/a&gt; 합니다. 이 메소드는 인덱스 연산자를 사용하여 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa76fc967017b032e8d1c2cdf69db3e8dfc8de3f" translate="yes" xml:space="preserve">
          <source>Sets the element at the given &lt;a href=&quot;set#kotlin.UShortArray%24set(kotlin.Int,%20kotlin.UShort)/index&quot;&gt;index&lt;/a&gt; to the given &lt;a href=&quot;set#kotlin.UShortArray%24set(kotlin.Int,%20kotlin.UShort)/value&quot;&gt;value&lt;/a&gt;. This method can be called using the index operator.</source>
          <target state="translated">주어진 &lt;a href=&quot;set#kotlin.UShortArray%24set(kotlin.Int,%20kotlin.UShort)/index&quot;&gt;인덱스&lt;/a&gt; 의 요소를 주어진 &lt;a href=&quot;set#kotlin.UShortArray%24set(kotlin.Int,%20kotlin.UShort)/value&quot;&gt;값으로 설정&lt;/a&gt; 합니다. 이 메서드는 인덱스 연산자를 사용하여 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9116fb48f18f595cee1aa0ef86a9704539523b3e" translate="yes" xml:space="preserve">
          <source>Sets the length of this string builder to the specified &lt;a href=&quot;set-length#kotlin.text.StringBuilder%24setLength(kotlin.Int)/newLength&quot;&gt;newLength&lt;/a&gt;.</source>
          <target state="translated">이 문자열 작성기의 길이를 지정된 &lt;a href=&quot;set-length#kotlin.text.StringBuilder%24setLength(kotlin.Int)/newLength&quot;&gt;newLength로 설정&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="cdbfa1a2b3fcbca7289df75f3d9da6a49af783aa" translate="yes" xml:space="preserve">
          <source>Sets the maximum &lt;a href=&quot;max-depth#kotlin.io.FileTreeWalk%24maxDepth%28kotlin.Int%29%2Fdepth&quot;&gt;depth&lt;/a&gt; of a directory tree to traverse. By default there is no limit.</source>
          <target state="translated">트래버스 할 디렉토리 트리 의 최대 &lt;a href=&quot;max-depth#kotlin.io.FileTreeWalk%24maxDepth%28kotlin.Int%29%2Fdepth&quot;&gt;깊이&lt;/a&gt; 를 설정합니다 . 기본적으로 제한이 없습니다.</target>
        </trans-unit>
        <trans-unit id="67f6c7ce4f2baaa750ec29f2ef6b8526fae822b9" translate="yes" xml:space="preserve">
          <source>Sets the maximum &lt;a href=&quot;max-depth#kotlin.io.FileTreeWalk%24maxDepth(kotlin.Int)/depth&quot;&gt;depth&lt;/a&gt; of a directory tree to traverse. By default there is no limit.</source>
          <target state="translated">순회 할 디렉토리 트리 의 최대 &lt;a href=&quot;max-depth#kotlin.io.FileTreeWalk%24maxDepth(kotlin.Int)/depth&quot;&gt;깊이&lt;/a&gt; 를 설정합니다 . 기본적으로 제한이 없습니다.</target>
        </trans-unit>
        <trans-unit id="7f557c804ed296d322f4a5e5bfe00660a8f6e3a4" translate="yes" xml:space="preserve">
          <source>Sets the next value in the iteration, called from the &lt;a href=&quot;compute-next&quot;&gt;computeNext&lt;/a&gt; function</source>
          <target state="translated">&lt;a href=&quot;compute-next&quot;&gt;computeNext&lt;/a&gt; 함수 에서 호출 된 반복의 다음 값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4250580fbd524d1fd8d6ec08be759b582c4fb702" translate="yes" xml:space="preserve">
          <source>Sets the state to done so that the iteration terminates.</source>
          <target state="translated">반복이 종료되도록 상태를 완료로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="612c0835d62f2410d2f8de6e6d5fc77a9b31d932" translate="yes" xml:space="preserve">
          <source>Sets the value of the property for the given object.</source>
          <target state="translated">주어진 객체의 속성 값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="9c35e499a0854cb5e1b033a2aea56399d4cfd894" translate="yes" xml:space="preserve">
          <source>Setter</source>
          <target state="translated">Setter</target>
        </trans-unit>
        <trans-unit id="da16c3cc3bfdcae6d86bd6879d30abd5784e4921" translate="yes" xml:space="preserve">
          <source>Setter of the property is a &lt;code&gt;set&lt;/code&gt; method declared alongside the property.</source>
          <target state="translated">속성의 Setter는 속성 과 함께 선언 된 &lt;code&gt;set&lt;/code&gt; 메서드입니다.</target>
        </trans-unit>
        <trans-unit id="2a57ff5fd34c53aa02935c137725d57e985fbf2e" translate="yes" xml:space="preserve">
          <source>Setters</source>
          <target state="translated">Setters</target>
        </trans-unit>
        <trans-unit id="795e6d53d5731fd7b921da0b1d365fac3636f285" translate="yes" xml:space="preserve">
          <source>Setters and getters</source>
          <target state="translated">세터와 게터</target>
        </trans-unit>
        <trans-unit id="d099d87160d087f60ade9cb21fa5440ff2125280" translate="yes" xml:space="preserve">
          <source>Setting Up the Local Environment</source>
          <target state="translated">로컬 환경 설정</target>
        </trans-unit>
        <trans-unit id="c44f26d2bfdb853b861ef2282603dadd2c943781" translate="yes" xml:space="preserve">
          <source>Setting this in a Gradle DSL:</source>
          <target state="translated">Gradle DSL에서 이것을 설정 :</target>
        </trans-unit>
        <trans-unit id="1d9561629ffffcf08f870d78c8cba9699aaf1728" translate="yes" xml:space="preserve">
          <source>Setting up Framework Dependency in Xcode</source>
          <target state="translated">Xcode에서 프레임 워크 종속성 설정</target>
        </trans-unit>
        <trans-unit id="601eff2654656e13db208f79616084dab833fb1f" translate="yes" xml:space="preserve">
          <source>Setting up Targets</source>
          <target state="translated">대상 설정</target>
        </trans-unit>
        <trans-unit id="f27242b25e228df6b15975fcf5c1aed13839ea95" translate="yes" xml:space="preserve">
          <source>Setting up Xcode</source>
          <target state="translated">Xcode 설정</target>
        </trans-unit>
        <trans-unit id="b715fad354473ecfc8fd7dc0beda3a90f35d6cae" translate="yes" xml:space="preserve">
          <source>Setting up a Kotlin/JS project</source>
          <target state="translated">Kotlin / JS 프로젝트 설정</target>
        </trans-unit>
        <trans-unit id="729b164a15e1528ee04709ca227eb8126e79e0e9" translate="yes" xml:space="preserve">
          <source>Setting up a Multiplatform Project</source>
          <target state="translated">멀티 플랫폼 프로젝트 설정</target>
        </trans-unit>
        <trans-unit id="4b75b737e7019beac88da840b9c4fa621cc15e9b" translate="yes" xml:space="preserve">
          <source>Setting up a project</source>
          <target state="translated">프로젝트 설정</target>
        </trans-unit>
        <trans-unit id="dfe5b993bb5b873cf296bfd1dec95400d302bb2f" translate="yes" xml:space="preserve">
          <source>Setting up the environment</source>
          <target state="translated">환경 설정</target>
        </trans-unit>
        <trans-unit id="c676a8afec5bd640eea3d16f369b18ff86f79446" translate="yes" xml:space="preserve">
          <source>Setting up the local environment</source>
          <target state="translated">로컬 환경 설정</target>
        </trans-unit>
        <trans-unit id="c7f73bb54d928922c3838bb789ee9fb8a5b1eb37" translate="yes" xml:space="preserve">
          <source>Settings</source>
          <target state="translated">Settings</target>
        </trans-unit>
        <trans-unit id="89a5ab56adeb4ad20f46a74711635d7a3b3c6f17" translate="yes" xml:space="preserve">
          <source>Setup Kotlin Compilation Step</source>
          <target state="translated">Kotlin 컴파일 단계 설정</target>
        </trans-unit>
        <trans-unit id="f7fd968c0a5ce680afda4eb915e615fd82b3a5d5" translate="yes" xml:space="preserve">
          <source>Setup Kotlin Compiler Fetching Step</source>
          <target state="translated">Kotlin 컴파일러 페치 단계 설정</target>
        </trans-unit>
        <trans-unit id="1cd15bb14bf553822a7d00ea242fd63abf35e644" translate="yes" xml:space="preserve">
          <source>Setup for the whole project: Open File -&amp;gt; Settings, select &quot;Build, Execution, Deployment&quot; -&amp;gt; &quot;Compiler&quot; -&amp;gt; &quot;Kotlin compiler&quot;. Choose appropriate module system in &quot;Module kind&quot; field.</source>
          <target state="translated">전체 프로젝트 설정 : 파일-&amp;gt; 설정을 열고 &quot;빌드, 실행, 배포&quot;-&amp;gt; &quot;컴파일러&quot;-&amp;gt; &quot;Kotlin 컴파일러&quot;를 선택하십시오. &quot;모듈 종류&quot;필드에서 적절한 모듈 시스템을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="f0f08df8a582b1b5aaacc0eb420e8df1267b5d20" translate="yes" xml:space="preserve">
          <source>Setup per module: Open File -&amp;gt; Project Structure&amp;hellip;, find your module in Modules and select &quot;Kotlin&quot; facet under it. Choose appropriate module system in &quot;Module kind&quot; field.</source>
          <target state="translated">모듈 당 설정 : 파일-&amp;gt; 프로젝트 구조&amp;hellip;를 열고 모듈에서 모듈을 찾은 다음 &quot;Kotlin&quot;패싯을 선택하십시오. &quot;모듈 종류&quot;필드에서 적절한 모듈 시스템을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="e85ac6caafc3dc694f3d37ae03f6e0e397a05a87" translate="yes" xml:space="preserve">
          <source>Seven-bit ASCII, a.k.a. ISO646-US, a.k.a. the Basic Latin block of the Unicode character set.</source>
          <target state="translated">7 비트 ASCII, 일명 ISO646-US, 일명 유니 코드 문자 집합의 기본 라틴 블록.</target>
        </trans-unit>
        <trans-unit id="49e3d1a9dab6c92ac188fd37739bbc3983030b47" translate="yes" xml:space="preserve">
          <source>Several JS targets</source>
          <target state="translated">여러 JS 타겟</target>
        </trans-unit>
        <trans-unit id="b553225655b90bb7bd535a4dc077d2f9ca1a25fe" translate="yes" xml:space="preserve">
          <source>Several JVM targets</source>
          <target state="translated">여러 JVM 대상</target>
        </trans-unit>
        <trans-unit id="7b29b4dba7f56bc1e20beeabf8e2e4afde6e1578" translate="yes" xml:space="preserve">
          <source>Several examples</source>
          <target state="translated">몇 가지 예</target>
        </trans-unit>
        <trans-unit id="64bd19ac1efdbed98cfdd136403a1a66f1e6da2a" translate="yes" xml:space="preserve">
          <source>Several functions now work on null receivers, for example:</source>
          <target state="translated">다음과 같은 여러 기능이 이제 널 수신자에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="6b48a6c117f5beb6359de584b0c0262c2f5ac127" translate="yes" xml:space="preserve">
          <source>Several last lists may have less elements than the given &lt;a href=&quot;windowed#kotlin.collections%24windowed%28kotlin.collections.Iterable%28%28kotlin.collections.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">몇 개의 마지막 목록은 주어진 &lt;a href=&quot;windowed#kotlin.collections%24windowed%28kotlin.collections.Iterable%28%28kotlin.collections.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fsize&quot;&gt;크기&lt;/a&gt; 보다 적은 요소를 가질 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5621b426f36585f7c27b3b195296e11573e93c66" translate="yes" xml:space="preserve">
          <source>Several last lists may have less elements than the given &lt;a href=&quot;windowed#kotlin.collections%24windowed(kotlin.collections.Iterable((kotlin.collections.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">마지막 목록에는 주어진 &lt;a href=&quot;windowed#kotlin.collections%24windowed(kotlin.collections.Iterable((kotlin.collections.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/size&quot;&gt;크기&lt;/a&gt; 보다 적은 요소가있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3dc2911d06598db01df02e69e45148f8fafc2630" translate="yes" xml:space="preserve">
          <source>Several last lists may have less elements than the given &lt;a href=&quot;windowed#kotlin.sequences%24windowed%28kotlin.sequences.Sequence%28%28kotlin.sequences.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">몇 개의 마지막 목록은 주어진 &lt;a href=&quot;windowed#kotlin.sequences%24windowed%28kotlin.sequences.Sequence%28%28kotlin.sequences.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fsize&quot;&gt;크기&lt;/a&gt; 보다 적은 요소를 가질 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3caecaa64d53476eff29e5609bcb7cea54f8f926" translate="yes" xml:space="preserve">
          <source>Several last lists may have less elements than the given &lt;a href=&quot;windowed#kotlin.sequences%24windowed(kotlin.sequences.Sequence((kotlin.sequences.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">마지막 목록에는 주어진 &lt;a href=&quot;windowed#kotlin.sequences%24windowed(kotlin.sequences.Sequence((kotlin.sequences.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/size&quot;&gt;크기&lt;/a&gt; 보다 적은 요소가있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6876468af6c5e87e9f6d208540b74e1e7a8befa7" translate="yes" xml:space="preserve">
          <source>Several last strings may have less characters than the given &lt;a href=&quot;windowed#kotlin.text%24windowed%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">몇몇 마지막 문자열은 주어진 &lt;a href=&quot;windowed#kotlin.text%24windowed%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fsize&quot;&gt;크기&lt;/a&gt; 보다 적은 문자를 가질 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="22493d5bafb3b925e08d997a0170c41745778cbf" translate="yes" xml:space="preserve">
          <source>Several last strings may have less characters than the given &lt;a href=&quot;windowed#kotlin.text%24windowed(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">마지막 문자열 몇 개는 주어진 &lt;a href=&quot;windowed#kotlin.text%24windowed(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/size&quot;&gt;크기&lt;/a&gt; 보다 적은 문자를 가질 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ebb92729220424707666ea7db0750140ac89ed3f" translate="yes" xml:space="preserve">
          <source>Several last strings may have less characters than the given &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">몇몇 마지막 문자열은 주어진 &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fsize&quot;&gt;크기&lt;/a&gt; 보다 적은 문자를 가질 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="90a09fd805b49360cc7fbddf97955799c8707c28" translate="yes" xml:space="preserve">
          <source>Several last strings may have less characters than the given &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">마지막 문자열 몇 개는 주어진 &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/size&quot;&gt;크기&lt;/a&gt; 보다 적은 문자를 가질 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="813a34b3a59a3ac492c103196888e0f76e842e38" translate="yes" xml:space="preserve">
          <source>Severity of the diagnostic that should be reported on usages of experimental API which did not explicitly accept the experimental aspect of that API either by using &lt;a href=&quot;../-use-experimental/index&quot;&gt;UseExperimental&lt;/a&gt; or by being annotated with the corresponding marker annotation.</source>
          <target state="translated">&lt;a href=&quot;../-use-experimental/index&quot;&gt;UseExperimental&lt;/a&gt; 을 사용 하거나 해당 마커 주석으로 주석을 달아 API의 실험적 측면을 명시 적으로 수용하지 않은 실험적 API 사용에 대해보고해야 할 진단의 심각도 .</target>
        </trans-unit>
        <trans-unit id="d1099b140c2cdd7a815583675ff5a73a0c8b9ec7" translate="yes" xml:space="preserve">
          <source>Severity of the diagnostic that should be reported on usages of experimental API which did not explicitly accept the experimental aspect of that API either by using &lt;a href=&quot;../../-use-experimental/index&quot;&gt;UseExperimental&lt;/a&gt; or by being annotated with the corresponding marker annotation.</source>
          <target state="translated">&lt;a href=&quot;../../-use-experimental/index&quot;&gt;UseExperimental&lt;/a&gt; 을 사용 하거나 해당 마커 주석으로 주석을 달아 API의 실험적 측면을 명시 적으로 수용하지 않은 실험적 API 사용에 대해보고해야 할 진단의 심각도 .</target>
        </trans-unit>
        <trans-unit id="f0b3e0d77c505ed2a04e6a558550e5efdad728ca" translate="yes" xml:space="preserve">
          <source>Severity of the diagnostic that should be reported on usages which did not explicitly opted into the API either by using &lt;a href=&quot;../-opt-in/index&quot;&gt;OptIn&lt;/a&gt; or by being annotated with the corresponding marker annotation.</source>
          <target state="translated">&lt;a href=&quot;../-opt-in/index&quot;&gt;OptIn&lt;/a&gt; 을 사용 하거나 해당 마커 주석으로 주석을 달아 API를 명시 적으로 선택하지 않은 사용에 대해보고해야하는 진단의 심각도입니다 .</target>
        </trans-unit>
        <trans-unit id="775dffe79527314c57e2e64083571a108202d01c" translate="yes" xml:space="preserve">
          <source>Severity of the diagnostic that should be reported on usages which did not explicitly opted into the API either by using &lt;a href=&quot;../../-opt-in/index&quot;&gt;OptIn&lt;/a&gt; or by being annotated with the corresponding marker annotation.</source>
          <target state="translated">&lt;a href=&quot;../../-opt-in/index&quot;&gt;OptIn&lt;/a&gt; 을 사용 하거나 해당 마커 주석으로 주석을 달아 API를 명시 적으로 선택하지 않은 사용에 대해보고해야하는 진단의 심각도입니다 .</target>
        </trans-unit>
        <trans-unit id="836b05c7633a1e30ae532de9ebb894d7f73b61c8" translate="yes" xml:space="preserve">
          <source>ShadowAnimation</source>
          <target state="translated">ShadowAnimation</target>
        </trans-unit>
        <trans-unit id="c52b8fac4d1546004d36036314634bdacdd53b08" translate="yes" xml:space="preserve">
          <source>ShadowRootInit</source>
          <target state="translated">ShadowRootInit</target>
        </trans-unit>
        <trans-unit id="a309f22f502741e5b5409272ba7d0d45e894ec55" translate="yes" xml:space="preserve">
          <source>ShadowRootMode</source>
          <target state="translated">ShadowRootMode</target>
        </trans-unit>
        <trans-unit id="4c3cc9f3e81e4b1cb4a6e8fc82a34e8fcfb6ffb2" translate="yes" xml:space="preserve">
          <source>Share code in libraries</source>
          <target state="translated">라이브러리에서 코드 공유</target>
        </trans-unit>
        <trans-unit id="ef2d45495b0615a3e7a06b0577495856255d2d11" translate="yes" xml:space="preserve">
          <source>Share code on all platforms</source>
          <target state="translated">모든 플랫폼에서 코드 공유</target>
        </trans-unit>
        <trans-unit id="7c5b714bfe6235530e184e90c84e004cfdefe6b2" translate="yes" xml:space="preserve">
          <source>Share code on multiple platforms</source>
          <target state="translated">여러 플랫폼에서 코드 공유</target>
        </trans-unit>
        <trans-unit id="9713e84f2aa340514e12218c73f167a4c8391d4d" translate="yes" xml:space="preserve">
          <source>Share code on platforms</source>
          <target state="translated">플랫폼에서 코드 공유</target>
        </trans-unit>
        <trans-unit id="10222327bf9dc6ef067a70361984b816ef7cee06" translate="yes" xml:space="preserve">
          <source>Share code on similar platforms</source>
          <target state="translated">유사한 플랫폼에서 코드 공유</target>
        </trans-unit>
        <trans-unit id="db79c07cf0a0cefafe30ccd1fc8c954e9f3aad6e" translate="yes" xml:space="preserve">
          <source>Shared Mutable State and Concurrency</source>
          <target state="translated">공유 가변 상태 및 동시성</target>
        </trans-unit>
        <trans-unit id="99ab53cb0cb685208705861a69fff66a527d7f26" translate="yes" xml:space="preserve">
          <source>Shared library.</source>
          <target state="translated">공유 라이브러리.</target>
        </trans-unit>
        <trans-unit id="5aa53b857601ecf23027dcc72fd5e23b6e4d90ca" translate="yes" xml:space="preserve">
          <source>Shared mutable state and concurrency</source>
          <target state="translated">공유 가능한 변경 가능한 상태 및 동시성</target>
        </trans-unit>
        <trans-unit id="34deab973b5850a0057d543d3df4b4e639f53a7e" translate="yes" xml:space="preserve">
          <source>Shared native library</source>
          <target state="translated">공유 네이티브 라이브러리</target>
        </trans-unit>
        <trans-unit id="5ef7f5e4f7f5fcb21c29e25a4231957e0c1d6ca3" translate="yes" xml:space="preserve">
          <source>SharedImmutable</source>
          <target state="translated">SharedImmutable</target>
        </trans-unit>
        <trans-unit id="c7977120bf6bcc880df4fe01f7ce83934ed43158" translate="yes" xml:space="preserve">
          <source>Sharing Code between Platforms</source>
          <target state="translated">플랫폼 간 코드 공유</target>
        </trans-unit>
        <trans-unit id="dbe8ea8f6f902897a352043f04fbfba2b7660deb" translate="yes" xml:space="preserve">
          <source>Sharing Kotlin code between iOS and Android</source>
          <target state="translated">iOS와 Android간에 Kotlin 코드 공유</target>
        </trans-unit>
        <trans-unit id="3f04d40398ebd1f6a2cabd19b6ba50ea2f6b3801" translate="yes" xml:space="preserve">
          <source>Sharing Kotlin library between JVM, JS and Native worlds</source>
          <target state="translated">JVM, JS 및 기본 세계간에 Kotlin 라이브러리 공유</target>
        </trans-unit>
        <trans-unit id="297325326f8f9abbd333d90d941d1753331ba09a" translate="yes" xml:space="preserve">
          <source>Sharing code between mobile platforms is one of the major Kotlin Multiplatform use cases, and it is now possible to build mobile applications with parts of the code, such as business logic, connectivity, and more, shared between Android and iOS.</source>
          <target state="translated">모바일 플랫폼간에 코드를 공유하는 것이 Kotlin Multiplatform의 주요 사용 사례 중 하나이며 이제는 비즈니스 로직, 연결성 등의 일부 코드를 사용하여 Android와 iOS간에 공유되는 모바일 애플리케이션을 빌드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="040aff8ea8ac51b983400c9879fd1997543e1034" translate="yes" xml:space="preserve">
          <source>Sharing code between mobile platforms is one of the major Kotlin Multiplatform use cases. With Kotlin Multiplatform Mobile (KMM), you can build multiplatform mobile applications sharing code, such as business logic, connectivity, and more, between Android and iOS.</source>
          <target state="translated">모바일 플랫폼 간 코드 공유는 주요 Kotlin Multiplatform 사용 사례 중 하나입니다. Kotlin 멀티 플랫폼 모바일 (KMM)을 사용하면 Android와 iOS간에 비즈니스 로직, 연결 등의 코드를 공유하는 멀티 플랫폼 모바일 애플리케이션을 빌드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="051c4d62ebae6a7b7b80ef891d89eb1bf6a2550d" translate="yes" xml:space="preserve">
          <source>Sharing code between platforms is a powerful technique, but it may be hard to accomplish without rich APIs that we have in Android, JVM, or iOS platforms. Multiplatform libraries can be used to fix that. They bring rich APIs directly in the common Kotlin code. There are several examples of such libraries:</source>
          <target state="translated">플랫폼 간 코드 공유는 강력한 기술이지만 Android, JVM 또는 iOS 플랫폼에서 보유한 풍부한 API 없이는 달성하기 어려울 수 있습니다. 이를 해결하기 위해 멀티 플랫폼 라이브러리를 사용할 수 있습니다. 일반적인 Kotlin 코드에서 풍부한 API를 직접 가져옵니다. 이러한 라이브러리에는 몇 가지 예가 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff97c9648486f6f9e0e420e818439aa99a44aac8" translate="yes" xml:space="preserve">
          <source>Sharing code in several targets with the hierarchical project structure</source>
          <target state="translated">계층 적 프로젝트 구조를 사용하여 여러 대상에서 코드 공유</target>
        </trans-unit>
        <trans-unit id="1de7f8359460e124966f478d8ff0b1101ad84358" translate="yes" xml:space="preserve">
          <source>Shifts this value left by the &lt;a href=&quot;shl#kotlin%24shl%28java.math.BigInteger%2C+kotlin.Int%29%2Fn&quot;&gt;n&lt;/a&gt; number of bits.</source>
          <target state="translated">이 값을 &lt;a href=&quot;shl#kotlin%24shl%28java.math.BigInteger%2C+kotlin.Int%29%2Fn&quot;&gt;n&lt;/a&gt; 비트 수만큼 왼쪽으로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="e18c349d9d803dcdf12d6d95cc7a992d1e495967" translate="yes" xml:space="preserve">
          <source>Shifts this value left by the &lt;a href=&quot;shl#kotlin%24shl(java.math.BigInteger,%20kotlin.Int)/n&quot;&gt;n&lt;/a&gt; number of bits.</source>
          <target state="translated">이 값을 &lt;a href=&quot;shl#kotlin%24shl(java.math.BigInteger,%20kotlin.Int)/n&quot;&gt;n&lt;/a&gt; 비트만큼 왼쪽으로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="fa89bbf50fa31925246bd02a77f7c8660177c18c" translate="yes" xml:space="preserve">
          <source>Shifts this value left by the &lt;a href=&quot;shl#kotlin.Int%24shl%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">이 값을 &lt;a href=&quot;shl#kotlin.Int%24shl%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수만큼 왼쪽으로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="051aa5c8a217e0ec9d611e61f79ea0c7d2ce2986" translate="yes" xml:space="preserve">
          <source>Shifts this value left by the &lt;a href=&quot;shl#kotlin.Int%24shl(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">이 값을 &lt;a href=&quot;shl#kotlin.Int%24shl(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수만큼 왼쪽으로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="91a11dfe9061ef195b8867f7a99bdfcb07185b19" translate="yes" xml:space="preserve">
          <source>Shifts this value left by the &lt;a href=&quot;shl#kotlin.Long%24shl%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">이 값을 &lt;a href=&quot;shl#kotlin.Long%24shl%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수만큼 왼쪽으로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="b5c023ee929b72a1da0f01bf4beaaf2ef287ac6d" translate="yes" xml:space="preserve">
          <source>Shifts this value left by the &lt;a href=&quot;shl#kotlin.Long%24shl(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">이 값을 &lt;a href=&quot;shl#kotlin.Long%24shl(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수만큼 왼쪽으로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="55ad8fceb560e16ef264e86683f6269f57215026" translate="yes" xml:space="preserve">
          <source>Shifts this value left by the &lt;a href=&quot;shl#kotlin.UInt%24shl%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">이 값을 &lt;a href=&quot;shl#kotlin.UInt%24shl%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수만큼 왼쪽으로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="934a09c8634537e896c7984ad292f677367fa71f" translate="yes" xml:space="preserve">
          <source>Shifts this value left by the &lt;a href=&quot;shl#kotlin.UInt%24shl(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">이 값을 &lt;a href=&quot;shl#kotlin.UInt%24shl(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수만큼 왼쪽으로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="c5f970689157bbb4098e02ad8befbb51472db7a6" translate="yes" xml:space="preserve">
          <source>Shifts this value left by the &lt;a href=&quot;shl#kotlin.ULong%24shl%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">이 값을 &lt;a href=&quot;shl#kotlin.ULong%24shl%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수만큼 왼쪽으로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="2fc061c02031c8f176116c052cdfb7debc6f340a" translate="yes" xml:space="preserve">
          <source>Shifts this value left by the &lt;a href=&quot;shl#kotlin.ULong%24shl(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">이 값을 &lt;a href=&quot;shl#kotlin.ULong%24shl(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수만큼 왼쪽으로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="561765590bf462448174dfa2c676fabfb9613e7b" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;shr#kotlin%24shr%28java.math.BigInteger%2C+kotlin.Int%29%2Fn&quot;&gt;n&lt;/a&gt; number of bits, filling the leftmost bits with copies of the sign bit.</source>
          <target state="translated">이 값을 &lt;a href=&quot;shr#kotlin%24shr%28java.math.BigInteger%2C+kotlin.Int%29%2Fn&quot;&gt;n&lt;/a&gt; 비트 수만큼 오른쪽으로 이동 하여 부호 비트의 사본으로 가장 왼쪽 비트를 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="aadddb64dd479921e4755df0ea34e90fe382f413" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;shr#kotlin%24shr(java.math.BigInteger,%20kotlin.Int)/n&quot;&gt;n&lt;/a&gt; number of bits, filling the leftmost bits with copies of the sign bit.</source>
          <target state="translated">이 값을 &lt;a href=&quot;shr#kotlin%24shr(java.math.BigInteger,%20kotlin.Int)/n&quot;&gt;n&lt;/a&gt; 비트만큼 오른쪽으로 이동 하여 가장 왼쪽 비트를 부호 비트의 복사본으로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="cc68bba5cb4fdf70f538ef2cd32e3d9ca3a6f230" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;shr#kotlin.Int%24shr%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; number of bits, filling the leftmost bits with copies of the sign bit.</source>
          <target state="translated">이 값을 &lt;a href=&quot;shr#kotlin.Int%24shr%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수만큼 오른쪽으로 이동하여 부호 비트의 사본으로 가장 왼쪽 비트를 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="dafd852bc623b74f6fd053452c3c6439f19df874" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;shr#kotlin.Int%24shr(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits, filling the leftmost bits with copies of the sign bit.</source>
          <target state="translated">이 값을 &lt;a href=&quot;shr#kotlin.Int%24shr(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수만큼 오른쪽으로 이동 하여 가장 왼쪽 비트를 부호 비트의 복사본으로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="a3c9d6c2dfd7c1b329f5c2e52f9e86c783409844" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;shr#kotlin.Long%24shr%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; number of bits, filling the leftmost bits with copies of the sign bit.</source>
          <target state="translated">이 값을 &lt;a href=&quot;shr#kotlin.Long%24shr%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수만큼 오른쪽으로 이동하여 부호 비트의 사본으로 가장 왼쪽 비트를 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="6572cc2ffe76dea42378501dd3bba7f2258421c2" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;shr#kotlin.Long%24shr(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits, filling the leftmost bits with copies of the sign bit.</source>
          <target state="translated">이 값을 &lt;a href=&quot;shr#kotlin.Long%24shr(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수만큼 오른쪽으로 이동 하여 가장 왼쪽 비트를 부호 비트의 복사본으로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="205604884176d4ce45ddfadcf924ca5e75925d36" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;shr#kotlin.UInt%24shr%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; number of bits, filling the leftmost bits with zeros.</source>
          <target state="translated">이 값을 &lt;a href=&quot;shr#kotlin.UInt%24shr%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수만큼 오른쪽으로 이동 하여 가장 왼쪽 비트를 0으로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="8c4c0458171a3c19a67bce0f5307950efe019685" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;shr#kotlin.UInt%24shr(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits, filling the leftmost bits with zeros.</source>
          <target state="translated">이 값을 &lt;a href=&quot;shr#kotlin.UInt%24shr(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수만큼 오른쪽으로 이동하여 맨 왼쪽 비트를 0으로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="975363933f601796162b5dcd9c49eefffe3d4646" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;shr#kotlin.ULong%24shr%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; number of bits, filling the leftmost bits with zeros.</source>
          <target state="translated">이 값을 &lt;a href=&quot;shr#kotlin.ULong%24shr%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수만큼 오른쪽으로 이동 하여 가장 왼쪽 비트를 0으로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="1fe7a4df7aa408c8541435b702bfe22549c0a3ff" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;shr#kotlin.ULong%24shr(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits, filling the leftmost bits with zeros.</source>
          <target state="translated">이 값을 &lt;a href=&quot;shr#kotlin.ULong%24shr(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수만큼 오른쪽으로 이동하여 맨 왼쪽 비트를 0으로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="1320613fcb4e3ad05b5a1fb529d5aa02782a35b6" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;ushr#kotlin.Int%24ushr%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; number of bits, filling the leftmost bits with zeros.</source>
          <target state="translated">이 값을 &lt;a href=&quot;ushr#kotlin.Int%24ushr%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수만큼 오른쪽으로 이동 하여 가장 왼쪽 비트를 0으로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="7cbc62bc90122a4b2b6c0a5c4949e7918e7cb901" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;ushr#kotlin.Int%24ushr(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits, filling the leftmost bits with zeros.</source>
          <target state="translated">이 값을 &lt;a href=&quot;ushr#kotlin.Int%24ushr(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수만큼 오른쪽으로 이동하여 맨 왼쪽 비트를 0으로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="de121cd2bd1ef2196f936dbff0fb5367f384adab" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;ushr#kotlin.Long%24ushr%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; number of bits, filling the leftmost bits with zeros.</source>
          <target state="translated">이 값을 &lt;a href=&quot;ushr#kotlin.Long%24ushr%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수만큼 오른쪽으로 이동 하여 가장 왼쪽 비트를 0으로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="b35b08bfc783731f0590e83b5330982c8de4b904" translate="yes" xml:space="preserve">
          <source>Shifts this value right by the &lt;a href=&quot;ushr#kotlin.Long%24ushr(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits, filling the leftmost bits with zeros.</source>
          <target state="translated">이 값을 &lt;a href=&quot;ushr#kotlin.Long%24ushr(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수만큼 오른쪽으로 이동하여 맨 왼쪽 비트를 0으로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="0fe7d82f25a3015040a206e54f9c1d3a9717c4c4" translate="yes" xml:space="preserve">
          <source>Short</source>
          <target state="translated">Short</target>
        </trans-unit>
        <trans-unit id="f1be0a77e24659d844b1d829e319473c64b3d92c" translate="yes" xml:space="preserve">
          <source>Short comments can be placed on a single line:</source>
          <target state="translated">한 줄에 간단한 설명을 넣을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb95645acf79d381a75848afbb852798210eb222" translate="yes" xml:space="preserve">
          <source>ShortArray</source>
          <target state="translated">ShortArray</target>
        </trans-unit>
        <trans-unit id="6908df3352349f003ba7c1e2bdfd0ab1d663f541" translate="yes" xml:space="preserve">
          <source>ShortIterator</source>
          <target state="translated">ShortIterator</target>
        </trans-unit>
        <trans-unit id="daaa8e58fde19c5641d9f419edefbe96acf6a0fc" translate="yes" xml:space="preserve">
          <source>ShortVar</source>
          <target state="translated">ShortVar</target>
        </trans-unit>
        <trans-unit id="a18072aa811b8ffe818664ff6ba45b9d51d7c523" translate="yes" xml:space="preserve">
          <source>ShortVarOf</source>
          <target state="translated">ShortVarOf</target>
        </trans-unit>
        <trans-unit id="240898f9447d350a1c2443d35798203546e2999e" translate="yes" xml:space="preserve">
          <source>Shorter syntax for properties</source>
          <target state="translated">속성에 대한 짧은 구문</target>
        </trans-unit>
        <trans-unit id="af61674ca511f597dfdc94a24bcd892cf0f59c64" translate="yes" xml:space="preserve">
          <source>Should compiler generated code call the main function</source>
          <target state="translated">컴파일러에서 코드를 생성하여 주 함수를 호출해야 함</target>
        </trans-unit>
        <trans-unit id="bd3a4790f87213724ab01ea7106b01dcae4d3214" translate="yes" xml:space="preserve">
          <source>Show your name backwards</source>
          <target state="translated">거꾸로 이름 표시</target>
        </trans-unit>
        <trans-unit id="ad81adfa3e182e6e5c1f09169b9e8963d98edb1b" translate="yes" xml:space="preserve">
          <source>Sign and absolute value:</source>
          <target state="translated">부호와 절대 값 :</target>
        </trans-unit>
        <trans-unit id="eb82e12ce844f585fa316d6e9d0d950c6bdedc17" translate="yes" xml:space="preserve">
          <source>Signals that the annotated annotation class is a marker of an API that requires an explicit opt-in.</source>
          <target state="translated">어노테이션이있는 주석 클래스가 명시 적 옵트 인이 필요한 API의 마커임을 알립니다.</target>
        </trans-unit>
        <trans-unit id="9902ec5a921b75c5ce68e37cd519601a31d13da9" translate="yes" xml:space="preserve">
          <source>Signals that the annotated annotation class is a marker of an experimental API.</source>
          <target state="translated">주석이 달린 주석 클래스가 실험적인 API의 마커임을 알립니다.</target>
        </trans-unit>
        <trans-unit id="1ee75f0144de04a179ae3bd74798db91b9c6ff71" translate="yes" xml:space="preserve">
          <source>Signatures of exported declarations must only contain &quot;exportable&quot; types:</source>
          <target state="translated">내 보낸 선언의 서명에는 &quot;내보낼 수있는&quot;유형 만 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="a0215479e9dd9a267a38a1be46680da42a198173" translate="yes" xml:space="preserve">
          <source>Signed, unsigned integral, and floating point types are mapped to their Kotlin counterpart with the same width.</source>
          <target state="translated">부호있는, 부호없는 정수 및 부동 소수점 유형은 같은 너비의 Kotlin 대응 항목에 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="6e0afd9e7082ae45a85cb3ea220f3007b52fa99c" translate="yes" xml:space="preserve">
          <source>Significant bits</source>
          <target state="translated">중요한 비트</target>
        </trans-unit>
        <trans-unit id="9fe5273a06659605c10cb83e488938ef900a3591" translate="yes" xml:space="preserve">
          <source>Signifies that the annotated functional type represents an extension function.</source>
          <target state="translated">주석이 달린 기능 유형이 확장 기능을 나타냄을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9fcc4d0c21be05b877e2736e1dd7b56ceaaa4a1d" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;code&gt;Array&lt;/code&gt; constructor, there are now functions that create &lt;code&gt;List&lt;/code&gt; and &lt;code&gt;MutableList&lt;/code&gt; instances and initialize each element by calling a lambda:</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt; 생성자 와 유사하게 이제 &lt;code&gt;List&lt;/code&gt; 및 &lt;code&gt;MutableList&lt;/code&gt; 인스턴스 를 만들고 람다를 호출하여 각 요소를 초기화 하는 함수가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b696a41cbfc5d18be8eef6a404f46e79ece8b58f" translate="yes" xml:space="preserve">
          <source>Similar to when we're using &lt;a href=&quot;../getting-started-idea/getting-started-with-intellij-idea&quot;&gt;IntelliJ IDEA build system&lt;/a&gt; or the command line, we can have the compiler output JavaScript to comply with a specific module system such as AMD, CommonJS or UMD.</source>
          <target state="translated">&lt;a href=&quot;../getting-started-idea/getting-started-with-intellij-idea&quot;&gt;IntelliJ IDEA 빌드 시스템&lt;/a&gt; 또는 명령 줄을 사용하는 경우와 유사하게 컴파일러에서 JavaScript, 출력 모듈을 사용하여 AMD, CommonJS 또는 UMD와 같은 특정 모듈 시스템을 준수 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c343ad89de5e3d2bda211b8f922e99f913bab352" translate="yes" xml:space="preserve">
          <source>Similarly to functions, Kotlin supports extension properties:</source>
          <target state="translated">함수와 마찬가지로 Kotlin은 확장 속성을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="4167cd56e3b5dcc5788a4fd7f543f645c15d01ed" translate="yes" xml:space="preserve">
          <source>Similarly, a library consumer may need to provide matching fallbacks for custom product flavors if some are missing in the library publications.</source>
          <target state="translated">마찬가지로, 라이브러리 소비자는 라이브러리 서적에 일부가 누락 된 경우 사용자 정의 제품 특징에 대해 일치하는 대체를 제공해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8d97cdf5dff7b50ad598a178d64b27d9f92c438" translate="yes" xml:space="preserve">
          <source>Similarly, a library consumer needs to provide matching fallbacks for custom product flavors if some are missing in the library publications.</source>
          <target state="translated">마찬가지로 라이브러리 발행물에 일부가 누락 된 경우 라이브러리 소비자는 사용자 지정 제품 버전에 대해 일치하는 폴백을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="f536b6acdc9043c4a42d4d23229b44e979722a18" translate="yes" xml:space="preserve">
          <source>Similarly, when we assign to &lt;code&gt;p&lt;/code&gt;, the &lt;code&gt;setValue()&lt;/code&gt; function is called. The first two parameters are the same, and the third holds the value being assigned:</source>
          <target state="translated">마찬가지로 &lt;code&gt;p&lt;/code&gt; 에 할당 하면 &lt;code&gt;setValue()&lt;/code&gt; 함수가 호출됩니다. 처음 두 매개 변수는 동일하며 세 번째 매개 변수는 지정되는 값을 보유합니다.</target>
        </trans-unit>
        <trans-unit id="3b895209bc0a4e4dfafeeb7fada6b857d595d852" translate="yes" xml:space="preserve">
          <source>Similarly, when you already have the type arguments of an instance checked statically (at compile time), you can make an &lt;em&gt;is&lt;/em&gt;-check or a cast that involves the non-generic part of the type. Note that angle brackets are omitted in this case:</source>
          <target state="translated">마찬가지로 인스턴스의 유형 인수가 이미 컴파일 타임에 정적으로 검사 된 경우 &lt;em&gt;is-&lt;/em&gt; check 또는 유형의 제네릭이 아닌 부분을 포함하는 캐스트를 만들 수 있습니다 . 이 경우 꺾쇠 괄호는 생략됩니다.</target>
        </trans-unit>
        <trans-unit id="373dea533a0d49a9c6fb1be2d9e503372df28cc1" translate="yes" xml:space="preserve">
          <source>Simple example</source>
          <target state="translated">간단한 예</target>
        </trans-unit>
        <trans-unit id="9fe6625e7fa70a75f441e66f48bbb12c8a2bda69" translate="yes" xml:space="preserve">
          <source>Simple example: Reachable Numbers problem</source>
          <target state="translated">간단한 예 : 도달 가능한 숫자 문제</target>
        </trans-unit>
        <trans-unit id="460e0cbdf7f85b57fb0b9092f75f48e34791ec3e" translate="yes" xml:space="preserve">
          <source>Simple type</source>
          <target state="translated">단순 타입</target>
        </trans-unit>
        <trans-unit id="bf9fd8196e53917d432912e26e9c5f145f971f1d" translate="yes" xml:space="preserve">
          <source>SimpleEffect</source>
          <target state="translated">SimpleEffect</target>
        </trans-unit>
        <trans-unit id="88f3e69a016bfa62917ba09ac8781e377d36171f" translate="yes" xml:space="preserve">
          <source>Simplified management of CocoaPods dependencies</source>
          <target state="translated">CocoaPods 종속성의 단순화 된 관리</target>
        </trans-unit>
        <trans-unit id="4cfc72a916b3634476578b39379dedee65189577" translate="yes" xml:space="preserve">
          <source>Simplify your build configuration</source>
          <target state="translated">빌드 구성 단순화</target>
        </trans-unit>
        <trans-unit id="1f88a84a3c3cc88b9e388323628cb3bfb002e0ea" translate="yes" xml:space="preserve">
          <source>Since 1.1, data classes may extend other classes (see &lt;a href=&quot;sealed-classes&quot;&gt;Sealed classes&lt;/a&gt; for examples).</source>
          <target state="translated">1.1 이후로, 데이터 클래스는 다른 클래스를 확장 할 수 있습니다 ( 예는 &lt;a href=&quot;sealed-classes&quot;&gt;봉인 클래스&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="c45af68c04ba0b57547d05c578aa8eba167797e0" translate="yes" xml:space="preserve">
          <source>Since 1.3.0 Kotlin has an experimental support for scripts customization, such as adding external properties, providing static or dynamic dependencies, and so on. Customizations are defined by so-called &lt;em&gt;Script definitions&lt;/em&gt; - annotated kotlin classes with appropriate support code. The script filename extension is used to select appropriate definition.</source>
          <target state="translated">1.3.0부터 Kotlin은 외부 속성 추가, 정적 또는 동적 종속성 제공 등과 같은 스크립트 사용자 지정을 실험적으로 지원합니다. 사용자 정의는 소위 &lt;em&gt;스크립트 정의&lt;/em&gt; -적절한 지원 코드가있는 주석이 달린 kotlin 클래스로 &lt;em&gt;정의&lt;/em&gt; 됩니다. 스크립트 파일 이름 확장자는 적절한 정의를 선택하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ae33bc2ca6c920991b37acb69fe39030237d1fda" translate="yes" xml:space="preserve">
          <source>Since 1.3.40, a separate Gradle plugin for Kotlin/Native is deprecated in favor of the &lt;code&gt;kotlin-multiplatform&lt;/code&gt; plugin. This plugin provides an IDE support along with support of the new multiplatform project model introduced in Kotlin 1.3.0. Below you can find a short list of differences between &lt;code&gt;kotlin-platform-native&lt;/code&gt; and &lt;code&gt;kotlin-muliplatform&lt;/code&gt; plugins. For more information see the &lt;code&gt;kotlin-muliplatform&lt;/code&gt;&lt;a href=&quot;../building-mpp-with-gradle&quot;&gt;documentation page&lt;/a&gt;. For &lt;code&gt;kotlin-platform-native&lt;/code&gt; reference see the &lt;a href=&quot;#kotlin-platform-native-reference&quot;&gt;corresponding section&lt;/a&gt;.</source>
          <target state="translated">1.3.40부터 Kotlin / Native를위한 별도의 Gradle 플러그인은 &lt;code&gt;kotlin-multiplatform&lt;/code&gt; 플러그인 을 위해 더 이상 사용되지 않습니다 . 이 플러그인은 Kotlin 1.3.0에 도입 된 새로운 멀티 플랫폼 프로젝트 모델의 지원과 함께 IDE 지원을 제공합니다. 아래에서 &lt;code&gt;kotlin-platform-native&lt;/code&gt; 및 &lt;code&gt;kotlin-muliplatform&lt;/code&gt; 플러그인 의 차이점에 대한 짧은 목록을 찾을 수 있습니다. 자세한 정보는 &lt;code&gt;kotlin-muliplatform&lt;/code&gt; &lt;a href=&quot;../building-mpp-with-gradle&quot;&gt;문서 페이지를 참조하십시오&lt;/a&gt; . 들어 &lt;code&gt;kotlin-platform-native&lt;/code&gt; 참고 문헌 참조 &lt;a href=&quot;#kotlin-platform-native-reference&quot;&gt;해당 섹션&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3f3503e86bffe0abaebb38725b3349da076c53cf" translate="yes" xml:space="preserve">
          <source>Since 1.3.40, test executables are represented by a separate binary type and have their own getter. To access the default test binary, use:</source>
          <target state="translated">1.3.40부터 테스트 실행 파일은 별도의 이진 형식으로 표시되며 자체 게터가 있습니다. 기본 테스트 바이너리에 액세스하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2000cb745257a86ccbf6619c4d22a1cfa77b7910" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;simple().collect&lt;/code&gt; is called from the main thread, the body of &lt;code&gt;simple&lt;/code&gt;'s flow is also called in the main thread. This is the perfect default for fast-running or asynchronous code that does not care about the execution context and does not block the caller.</source>
          <target state="translated">이후 &lt;code&gt;simple().collect&lt;/code&gt; 메인 쓰레드에서 호출의 본체 &lt;code&gt;simple&lt;/code&gt; 의 흐름은 메인 쓰레드로 불린다. 이것은 실행 컨텍스트를 신경 쓰지 않고 호출자를 차단하지 않는 빠른 실행 또는 비동기 코드에 대한 완벽한 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="74d2423e1b8ad654b09fa01e578cbe247dd6909a" translate="yes" xml:space="preserve">
          <source>Since Java has no way of marking methods for which it makes sense to use the operator syntax, Kotlin allows using any Java methods with the right name and signature as operator overloads and other conventions (&lt;code&gt;invoke()&lt;/code&gt; etc.) Calling Java methods using the infix call syntax is not allowed.</source>
          <target state="translated">Java는 연산자 구문을 사용하는 것이 의미가있는 메소드를 표시하는 방법이 없기 때문에 Kotlin은 올바른 이름과 서명이있는 Java 메소드를 연산자 과부하 및 기타 규칙 ( &lt;code&gt;invoke()&lt;/code&gt; 등)으로 사용할 수 있습니다. 호출 구문은 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b8398b1189e7866368709036da6ebf170a442288" translate="yes" xml:space="preserve">
          <source>Since Kotlin 1.1, it's possible to access the constants in an enum class in a generic way, using the &lt;code&gt;enumValues&amp;lt;T&amp;gt;()&lt;/code&gt; and &lt;code&gt;enumValueOf&amp;lt;T&amp;gt;()&lt;/code&gt; functions:</source>
          <target state="translated">Kotlin 1.1부터 &lt;code&gt;enumValues&amp;lt;T&amp;gt;()&lt;/code&gt; 및 &lt;code&gt;enumValueOf&amp;lt;T&amp;gt;()&lt;/code&gt; 함수를 사용하여 일반적인 방식으로 열거 클래스의 상수에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="330983e4399baf0a2c9af16e30f769877d9bd0ed" translate="yes" xml:space="preserve">
          <source>Since Kotlin 1.1, you can omit the property type if it can be inferred from the getter:</source>
          <target state="translated">Kotlin 1.1 이후, getter에서 유추 할 수있는 속성 유형을 생략 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="da701a88d5b6b6cb5f3f3cc5c091da6b746b52c6" translate="yes" xml:space="preserve">
          <source>Since Kotlin 1.1.50, &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/41091f1cc7045142181d8c89645059f4a15cc91a/proposals/jsr-305-custom-nullability-qualifiers.md&quot;&gt;custom nullability qualifiers (KEEP-79)&lt;/a&gt; are also supported (see below).</source>
          <target state="translated">Kotlin 1.1.50부터 &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/41091f1cc7045142181d8c89645059f4a15cc91a/proposals/jsr-305-custom-nullability-qualifiers.md&quot;&gt;사용자 지정 nullability 한정자 (KEEP-79)&lt;/a&gt; 도 지원됩니다 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="9ae7b7121257ecc4190400d88c65896582898044" translate="yes" xml:space="preserve">
          <source>Since Kotlin 1.2, explicitly specifying &lt;code&gt;this&lt;/code&gt; as the receiver is not necessary: &lt;code&gt;this::foo&lt;/code&gt; and &lt;code&gt;::foo&lt;/code&gt; are equivalent.</source>
          <target state="translated">코 틀린 1.2 이후, 명시 적으로 지정 &lt;code&gt;this&lt;/code&gt; 수신기로 할 필요가 없습니다 : &lt;code&gt;this::foo&lt;/code&gt; 와 &lt;code&gt;::foo&lt;/code&gt; 는은 동일합니다.</target>
        </trans-unit>
        <trans-unit id="8c4391f4af9d2a0c13ee2de02e3def8882dce4b0" translate="yes" xml:space="preserve">
          <source>Since Kotlin 1.3 use &lt;a href=&quot;../../kotlin.sequences/-sequence-scope/index&quot;&gt;kotlin.sequences.SequenceScope&lt;/a&gt; instead.</source>
          <target state="translated">Kotlin 1.3부터 &lt;a href=&quot;../../kotlin.sequences/-sequence-scope/index&quot;&gt;kotlin.sequences.SequenceScope를&lt;/a&gt; 대신 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="e80b0e98aee610d55a5c374cdbbf839bc8868cd2" translate="yes" xml:space="preserve">
          <source>Since Kotlin 1.3 use &lt;a href=&quot;../kotlin.sequences/iterator&quot;&gt;kotlin.sequences.iterator&lt;/a&gt; instead.</source>
          <target state="translated">Kotlin 1.3부터 &lt;a href=&quot;../kotlin.sequences/iterator&quot;&gt;kotlin.sequences.iterator를&lt;/a&gt; 대신 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="88ab4850745a2ab5ce313b43d12c199319889b1c" translate="yes" xml:space="preserve">
          <source>Since Kotlin 1.3 use &lt;a href=&quot;../kotlin.sequences/sequence&quot;&gt;kotlin.sequences.sequence&lt;/a&gt; instead.</source>
          <target state="translated">Kotlin 1.3부터 &lt;a href=&quot;../kotlin.sequences/sequence&quot;&gt;kotlin.sequences.sequence를&lt;/a&gt; 대신 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="405b74df55c0598869424e3cb858793a687c40ea" translate="yes" xml:space="preserve">
          <source>Since Kotlin 1.3, it is possible to capture &lt;em&gt;when&lt;/em&gt; subject in a variable using following syntax:</source>
          <target state="translated">Kotlin 1.3부터는 다음 구문을 사용하여 변수에 주제가 &lt;em&gt;있을 때&lt;/em&gt; 캡처 &lt;em&gt;할&lt;/em&gt; 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="020966f8fc3e849e4a66f0a822c445794dfeed9a" translate="yes" xml:space="preserve">
          <source>Since Kotlin 1.4, a property can delegate its getter and setter to another property. Such delegation is available for both top-level and class properties (member and extension). The delegate property can be:</source>
          <target state="translated">Kotlin 1.4부터 속성은 getter 및 setter를 다른 속성에 위임 할 수 있습니다. 이러한 위임은 최상위 및 클래스 속성 (멤버 및 확장) 모두에 사용할 수 있습니다. 위임 속성은 다음과 같을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3fbe845c319d1f255cba489e3e87ac4a16b32315" translate="yes" xml:space="preserve">
          <source>Since Kotlin provides first-class interop with Java, you can also use Java libraries for data science in your Kotlin code. Here are some examples of such libraries:</source>
          <target state="translated">Kotlin은 자바와의 최고 수준의 상호 운용성을 제공하므로 Kotlin 코드에서 데이터 과학에 자바 라이브러리를 사용할 수도 있습니다. 다음은 이러한 라이브러리의 몇 가지 예입니다.</target>
        </trans-unit>
        <trans-unit id="2532680c8a54fc6cb1e66295181c704fef28df8d" translate="yes" xml:space="preserve">
          <source>Since Kotlin/JS projects are managed with the Kotlin/JS Gradle plugin, we will see how to run our project using the appropriate tasks. If we're starting with a blank project, let's ensure that we have some sample code to execute. We create the file &lt;code&gt;src/main/kotlin/App.kt&lt;/code&gt; and fill it with a small &quot;Hello, World&quot;-type code snippet:</source>
          <target state="translated">Kotlin / JS 프로젝트는 Kotlin / JS Gradle 플러그인으로 관리되므로 적절한 작업을 사용하여 프로젝트를 실행하는 방법을 살펴 보겠습니다. 빈 프로젝트로 시작하는 경우 실행할 샘플 코드가 있는지 확인하십시오. &lt;code&gt;src/main/kotlin/App.kt&lt;/code&gt; 파일을 만들고 작은 &quot;Hello, World&quot;유형의 코드 조각으로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="efcc6bedd3b914eb31e0f75f655ecbdfda75ad9b" translate="yes" xml:space="preserve">
          <source>Since Kotlin/Native provides &lt;a href=&quot;native/c_interop&quot;&gt;interoperability with native languages&lt;/a&gt;, there is a DSL allowing one to configure this feature for a specific compilation.</source>
          <target state="translated">Kotlin / Native는 &lt;a href=&quot;native/c_interop&quot;&gt;모국어와의 상호 운용성을&lt;/a&gt; 제공 하기 때문에 특정 컴파일에 대해이 기능을 구성 할 수있는 DSL이 있습니다.</target>
        </trans-unit>
        <trans-unit id="8a7b2ebad239fb7a910fd79eab4f3372b29c79ee" translate="yes" xml:space="preserve">
          <source>Since all the dependencies required for Kotlin are defined in the Gradle file, nothing else needs to be configured specifically for Kotlin to run correctly.</source>
          <target state="translated">Kotlin에 필요한 모든 종속성은 Gradle 파일에 정의되어 있으므로 Kotlin이 올바르게 실행되도록 특별히 구성 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="8de791302c96952201846f400a6083331bbe72a8" translate="yes" xml:space="preserve">
          <source>Since an anonymous class has no name, it can't be used as a return type - if you do return an anonymous object, the function's return type must be &lt;code&gt;Any&lt;/code&gt;.</source>
          <target state="translated">익명 클래스에는 이름이 없으므로 반환 유형으로 사용할 수 없습니다. 익명 객체를 반환하는 경우 함수의 반환 유형은 &lt;code&gt;Any&lt;/code&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="1d293ea0c045033de8d8bd3af73aa0ea0b91a963" translate="yes" xml:space="preserve">
          <source>Since binaries compiled this way depend on the Kotlin runtime you should make sure the latter is present in the classpath whenever your compiled library is used.</source>
          <target state="translated">이 방법으로 컴파일 된 바이너리는 Kotlin 런타임에 따라 다르므로 컴파일 된 라이브러리를 사용할 때마다 클래스 경로에 후자가 있는지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="622c73b5fb8d14a132011c0334d390f1a510313f" translate="yes" xml:space="preserve">
          <source>Since cancellation is just an exception, all resources are closed in the usual way. You can wrap the code with timeout in a &lt;code&gt;try {...} catch (e: TimeoutCancellationException) {...}&lt;/code&gt; block if you need to do some additional action specifically on any kind of timeout or use the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/with-timeout-or-null.html&quot;&gt;withTimeoutOrNull&lt;/a&gt; function that is similar to &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/with-timeout.html&quot;&gt;withTimeout&lt;/a&gt; but returns &lt;code&gt;null&lt;/code&gt; on timeout instead of throwing an exception:</source>
          <target state="translated">취소는 예외 일 뿐이므로 모든 리소스는 일반적인 방식으로 닫힙니다. 시간 종료에 대해 특별히 추가 조치를 수행하거나 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/with-timeout-or-null.html&quot;&gt;withTimeoutOrNull&lt;/a&gt; 함수를 사용하려는 경우 &lt;code&gt;try {...} catch (e: TimeoutCancellationException) {...}&lt;/code&gt; 블록 에서 시간 종료로 코드를 랩핑 할 수 있습니다 . &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/with-timeout.html&quot;&gt;withTimeout&lt;/a&gt; 이지만 예외를 throw하는 대신 시간 초과시 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4e125d582c3c9f675a15d0038927e92dc5fb9b46" translate="yes" xml:space="preserve">
          <source>Since data classes automatically declare &lt;code&gt;componentN()&lt;/code&gt; functions, destructuring declarations work here.</source>
          <target state="translated">데이터 클래스는 &lt;code&gt;componentN()&lt;/code&gt; 함수를 자동으로 선언하므로 여기에서 구조화 선언이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="ab91ad24a43e16b80819fa3c7ccb13e2c89d3927" translate="yes" xml:space="preserve">
          <source>Since each enum is an instance of the enum class, they can be initialized as:</source>
          <target state="translated">각 열거 형은 열거 형 클래스의 인스턴스이므로 다음과 같이 초기화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fccccbd7e91cba8ebb5a9e0230afa4e091b0cd00" translate="yes" xml:space="preserve">
          <source>Since inline classes are compiled to their underlying type, it may lead to various obscure errors, for example unexpected platform signature clashes:</source>
          <target state="translated">인라인 클래스는 기본 유형으로 컴파일되므로 예기치 않은 플랫폼 서명 충돌과 같은 다양한 모호한 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="90493c5a0e006c2eb80d1e75cd9d689e0f1392ea" translate="yes" xml:space="preserve">
          <source>Since the arrays are also mapped to &lt;code&gt;CPointer&amp;lt;T&amp;gt;&lt;/code&gt;, it supports the &lt;code&gt;[]&lt;/code&gt; operator for accessing values by index:</source>
          <target state="translated">배열도 &lt;code&gt;CPointer&amp;lt;T&amp;gt;&lt;/code&gt; 매핑 되므로 인덱스로 값에 액세스하기위한 &lt;code&gt;[]&lt;/code&gt; 연산자를 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="4d7b853892431a18d65c0d328c4b6e037836cf2e" translate="yes" xml:space="preserve">
          <source>Since the available operators are hardcoded into the formal Kotlin syntax, you can not invent new operators, and overriding an operator does not affect its &lt;a href=&quot;https://kotlinlang.org/docs/reference/grammar.html#precedence&quot;&gt;precedence&lt;/a&gt;.</source>
          <target state="translated">사용 가능한 연산자는 공식 Kotlin 구문으로 하드 코딩되므로 새 연산자를 발명 할 수 없으며 연산자를 재정의해도 &lt;a href=&quot;https://kotlinlang.org/docs/reference/grammar.html#precedence&quot;&gt;우선 순위에&lt;/a&gt; 영향을 미치지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="547f1377115a4466460ced0890bccf5f5f29432e" translate="yes" xml:space="preserve">
          <source>Since the body of &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/collect-latest.html&quot;&gt;collectLatest&lt;/a&gt; takes 300 ms, but new values are emitted every 100 ms, we see that the block is run on every value, but completes only for the last value:</source>
          <target state="translated">&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/collect-latest.html&quot;&gt;collectLatest&lt;/a&gt; 본문은 300ms가 걸리지 만 100ms마다 새 값이 생성되므로 블록이 모든 값에서 실행되지만 마지막 값에 대해서만 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="fd0b229f654576b966a8840a049ffa6b928881c9" translate="yes" xml:space="preserve">
          <source>Since the entire anonymous function is self-executing, it will execute as soon as the code is loaded. Its argument will be the object &lt;code&gt;kotlin&lt;/code&gt; from &lt;code&gt;kotlin.js&lt;/code&gt;.</source>
          <target state="translated">전체 익명 함수는 자체 실행되므로 코드가로드되는 즉시 실행됩니다. 그 인수는 &lt;code&gt;kotlin&lt;/code&gt; .js 의 &lt;code&gt;kotlin.js&lt;/code&gt; 객체 입니다.</target>
        </trans-unit>
        <trans-unit id="99fc39de8ebf0847b1a608d5ecfdb8c433717d90" translate="yes" xml:space="preserve">
          <source>Since the order of parameters for an annotation written in Java is not defined, you can't use a regular function call syntax for passing the arguments. Instead, you need to use the named argument syntax:</source>
          <target state="translated">Java로 작성된 주석의 매개 변수 순서가 정의되어 있지 않으므로 인수를 전달하기 위해 일반 함수 호출 구문을 사용할 수 없습니다. 대신 명명 된 인수 구문을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="1d3e6156826d803abef978e9ca301cc858a7854d" translate="yes" xml:space="preserve">
          <source>Since the parameter types are not encoded as generic type parameters in &lt;code&gt;KFunction&amp;lt;V&amp;gt;&lt;/code&gt;, you won't get compile-time type validation of the parameters you pass. In order to encode the parameter types, use one of the subinterfaces &lt;code&gt;KFunction1&amp;lt;A, V&amp;gt;&lt;/code&gt;, &lt;code&gt;KFunction2&amp;lt;A, B, V&amp;gt;&lt;/code&gt;, &lt;code&gt;KFunction3&amp;lt;A, B, C, V&amp;gt;&lt;/code&gt;, and so on, depending on how many parameters the function has got. Keep in mind that if you are referencing a member function, the first generic type parameter is the receiver type. For example, &lt;code&gt;KFunction3&amp;lt;A, B, C, V&amp;gt;&lt;/code&gt; may reference either an ordinary function that takes &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, and &lt;code&gt;C&lt;/code&gt; as parameters and returns &lt;code&gt;V&lt;/code&gt;, or it may reference a member function on &lt;code&gt;A&lt;/code&gt; that takes &lt;code&gt;B&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; as parameters and returns &lt;code&gt;V&lt;/code&gt;. When you use any of these types, you can call the function through its reference as if the reference were a function, e.g. &lt;code&gt;function(a, b)&lt;/code&gt;, and this call will be type-safe.</source>
          <target state="translated">매개 변수 유형은 &lt;code&gt;KFunction&amp;lt;V&amp;gt;&lt;/code&gt; 에서 일반 유형 매개 변수로 인코딩되지 않으므로 전달한 매개 변수의 컴파일 타임 유형 유효성 검증을 얻지 못합니다. 매개 변수 유형을 인코딩하려면 매개 변수 수에 따라 서브 인터페이스 &lt;code&gt;KFunction1&amp;lt;A, V&amp;gt;&lt;/code&gt; , &lt;code&gt;KFunction2&amp;lt;A, B, V&amp;gt;&lt;/code&gt; , &lt;code&gt;KFunction3&amp;lt;A, B, C, V&amp;gt;&lt;/code&gt; 등 중 하나를 사용하십시오. 기능이 있습니다. 멤버 함수를 참조하는 경우 첫 번째 일반 유형 매개 변수는 수신자 유형입니다. 예를 들어 &lt;code&gt;KFunction3&amp;lt;A, B, C, V&amp;gt;&lt;/code&gt; 는 &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;B&lt;/code&gt; 및 &lt;code&gt;C&lt;/code&gt; 를 매개 변수로 사용하고 &lt;code&gt;V&lt;/code&gt; 를 반환 하는 일반 함수를 참조 할 수 있습니다.또는 그것의 멤버 함수를 참조 할 수있다 얻어 &lt;code&gt;B&lt;/code&gt; 및 &lt;code&gt;C&lt;/code&gt; 를 매개로 복귀 &lt;code&gt;V&lt;/code&gt; 를 . 이러한 유형을 사용하는 경우 참조가 &lt;code&gt;function(a, b)&lt;/code&gt; 예 : function (a, b)) 인 것처럼 참조를 통해 함수를 호출 할 수 있으며이 호출은 형식이 안전합니다. &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c8d2c0eaa40e46a8c6ea31321656b62533073742" translate="yes" xml:space="preserve">
          <source>Since version 1.1.4, Kotlin/JS includes a dead code elimination (DCE) tool. This tool allows to strip out unused properties, functions and classes from the generated JS. There are several ways you get unused declarations:</source>
          <target state="translated">버전 1.1.4부터 Kotlin / JS에는 데드 코드 제거 (DCE) 도구가 포함되어 있습니다. 이 도구를 사용하면 생성 된 JS에서 사용하지 않는 속성, 함수 및 클래스를 제거 할 수 있습니다. 사용하지 않는 선언을 얻는 방법에는 여러 가지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb32719a3bf81b439295cec580621456d2ecbd8a" translate="yes" xml:space="preserve">
          <source>Since we'll be using the &lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines&quot;&gt;&lt;code&gt;kotlinx.coroutines&lt;/code&gt;&lt;/a&gt;, let's add its recent version to our dependencies:</source>
          <target state="translated">우리는 &lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines&quot;&gt; &lt;code&gt;kotlinx.coroutines&lt;/code&gt; 를&lt;/a&gt; 사용할 것이기 때문에 최신 버전을 의존성에 추가하자 :</target>
        </trans-unit>
        <trans-unit id="1a9dce84a0725c0b6c49a8e9dd94e932d53babd3" translate="yes" xml:space="preserve">
          <source>Since you can't modify built-in or third-party classes, you can't directly add functions or properties to them. If you can achieve what you want by only using the public members of a class, you can of course just write a function that takes an instance of the class as a parameter - but sometimes, you'd really like to be able to say &lt;code&gt;x.foo(y)&lt;/code&gt; instead of &lt;code&gt;foo(x, y)&lt;/code&gt;, especially if you want to make a chain of such calls or property lookups: &lt;code&gt;x.foo(y).bar().baz&lt;/code&gt; instead of &lt;code&gt;getBaz(bar(foo(x, y)))&lt;/code&gt;.</source>
          <target state="translated">내장 또는 타사 클래스를 수정할 수 없으므로 함수 나 속성을 직접 추가 할 수 없습니다. 클래스의 공용 멤버 만 사용하여 원하는 것을 얻을 수 있다면 클래스의 인스턴스를 매개 변수로 사용하는 함수를 작성할 수는 있지만 때로는 &lt;code&gt;x.foo(y)&lt;/code&gt; 라고 말할 수 있습니다. &lt;code&gt;foo(x, y)&lt;/code&gt; y) 대신 .foo (y) , 특히 이러한 호출 또는 속성 조회 체인을 만들려는 경우 &lt;code&gt;getBaz(bar(foo(x, y)))&lt;/code&gt; 대신 &lt;code&gt;x.foo(y).bar().baz&lt;/code&gt; , y))) .</target>
        </trans-unit>
        <trans-unit id="06def0138f09b8c0f949f07f4920634afdd6f7fb" translate="yes" xml:space="preserve">
          <source>SinceKotlin</source>
          <target state="translated">SinceKotlin</target>
        </trans-unit>
        <trans-unit id="c2499363e6a7b206721dbe6071ddba0631ff7592" translate="yes" xml:space="preserve">
          <source>Single-Expression functions</source>
          <target state="translated">단일 표현 함수</target>
        </trans-unit>
        <trans-unit id="948bf8711c54b33e1c9d4a741ca29c920e235551" translate="yes" xml:space="preserve">
          <source>Single-expression functions</source>
          <target state="translated">단일 표현 함수</target>
        </trans-unit>
        <trans-unit id="f4952f106d9d3b4bccd6d238d2f11b71e55ecb4c" translate="yes" xml:space="preserve">
          <source>Singletons</source>
          <target state="translated">Singletons</target>
        </trans-unit>
        <trans-unit id="ee6a091ca276835c16a3bfeac72a4361f88e2bf7" translate="yes" xml:space="preserve">
          <source>Sixteen-bit UCS Transformation Format, big-endian byte order.</source>
          <target state="translated">16 비트 UCS 변환 형식, 빅 엔디안 바이트 순서.</target>
        </trans-unit>
        <trans-unit id="ee23d2f192966423edfb5a719af0092090fdca64" translate="yes" xml:space="preserve">
          <source>Sixteen-bit UCS Transformation Format, byte order identified by an optional byte-order mark.</source>
          <target state="translated">16 비트 UCS 변환 형식, 선택적 바이트 순서 표시로 식별되는 바이트 순서.</target>
        </trans-unit>
        <trans-unit id="ecc2e39f3a6f9988d872a59c8d23128ff9edbcfe" translate="yes" xml:space="preserve">
          <source>Sixteen-bit UCS Transformation Format, little-endian byte order.</source>
          <target state="translated">16 비트 UCS 변환 형식, 리틀 엔디안 바이트 순서.</target>
        </trans-unit>
        <trans-unit id="1a6fd3d12a17734000a1a6160d6675df426f8980" translate="yes" xml:space="preserve">
          <source>Size (bits)</source>
          <target state="translated">크기 (비트)</target>
        </trans-unit>
        <trans-unit id="d1463955df382c8a9945d566689c91edc2c8c9b3" translate="yes" xml:space="preserve">
          <source>Size-limiting intermediate operators like &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/take.html&quot;&gt;take&lt;/a&gt; cancel the execution of the flow when the corresponding limit is reached. Cancellation in coroutines is always performed by throwing an exception, so that all the resource-management functions (like &lt;code&gt;try { ... } finally { ... }&lt;/code&gt; blocks) operate normally in case of cancellation:</source>
          <target state="translated">&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/take.html&quot;&gt;take&lt;/a&gt; 와 같은 크기 제한 중간 연산자 는 해당 제한에 도달하면 흐름 실행을 취소합니다. 코 루틴의 취소는 항상 예외를 throw하여 수행되므로 모든 리소스 관리 함수 (예 : &lt;code&gt;try { ... } finally { ... }&lt;/code&gt; 블록)가 취소시 정상적으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="a575c815da72681a6dca609f3c8fc74e82651da7" translate="yes" xml:space="preserve">
          <source>Size-limiting operators</source>
          <target state="translated">크기 제한 연산자</target>
        </trans-unit>
        <trans-unit id="f85dd4da6fcf55c2051ab8017fddbb6a18773e03" translate="yes" xml:space="preserve">
          <source>Skip reachibility check, can lead to mysterious crashes in an application. USE UNSAFE MODE ONLY IF ABSOLUTELY SURE WHAT YOU'RE DOING!!!</source>
          <target state="translated">접근성 검사를 건너 뛰고 응용 프로그램에서 신비한 충돌이 발생할 수 있습니다. 안전하지 않은 모드는 사용중인 작업이 확실한 경우에만 사용하십시오 !!!</target>
        </trans-unit>
        <trans-unit id="71b8e40a5867a69e273ec4b85f91eb799854cf9c" translate="yes" xml:space="preserve">
          <source>Skip this file and go to the next.</source>
          <target state="translated">이 파일을 건너 뛰고 다음 파일로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="430b38bf6daa7f9164b164b2ffd540b5a3afe2fd" translate="yes" xml:space="preserve">
          <source>Slack</source>
          <target state="translated">Slack</target>
        </trans-unit>
        <trans-unit id="0c8525a31f225d6db84222cdc68f43cb8c6c18bf" translate="yes" xml:space="preserve">
          <source>Slice</source>
          <target state="translated">Slice</target>
        </trans-unit>
        <trans-unit id="d4ba32e18a522523616ead4e04bba098b836f870" translate="yes" xml:space="preserve">
          <source>Slotable</source>
          <target state="translated">Slotable</target>
        </trans-unit>
        <trans-unit id="10fbb462857c0cba8ce2d0a30fb30be71bb9c668" translate="yes" xml:space="preserve">
          <source>Smaller changes</source>
          <target state="translated">작은 변화</target>
        </trans-unit>
        <trans-unit id="1962b7c27bd3945eb2943949ba4b088ed50789a2" translate="yes" xml:space="preserve">
          <source>Smart Casts</source>
          <target state="translated">스마트 캐스트</target>
        </trans-unit>
        <trans-unit id="5d5e5c19860062429de60b61bb54ca023fa3667c" translate="yes" xml:space="preserve">
          <source>Smart cast improvements</source>
          <target state="translated">스마트 캐스트 개선</target>
        </trans-unit>
        <trans-unit id="bcb3cbb48cb2ad564dda01b8a4d33886b1b4cae4" translate="yes" xml:space="preserve">
          <source>Smart casts</source>
          <target state="translated">스마트 캐스트</target>
        </trans-unit>
        <trans-unit id="2921cea22f7734b6c2bb9988feed3773f9e3b22b" translate="yes" xml:space="preserve">
          <source>Smart casts for a lambda&amp;rsquo;s last expression</source>
          <target state="translated">람다의 마지막 표현에 대한 스마트 캐스트</target>
        </trans-unit>
        <trans-unit id="c403e941657e7010de72815f887fce9f5c99983c" translate="yes" xml:space="preserve">
          <source>Smart casts for callable references</source>
          <target state="translated">호출 가능한 참조를위한 스마트 캐스트</target>
        </trans-unit>
        <trans-unit id="31522d97ace96f0c56defc6bbe0845e755f1d98b" translate="yes" xml:space="preserve">
          <source>Smartcasts on local delegated properties</source>
          <target state="translated">로컬 위임 속성의 스마트 캐스트</target>
        </trans-unit>
        <trans-unit id="a633eaa449ddacea57394a3e6ff86e18a93dfbee" translate="yes" xml:space="preserve">
          <source>So basically, we just put a string inside a tag body, but there is this little &lt;code&gt;+&lt;/code&gt; in front of it, so it is a function call that invokes a prefix &lt;code&gt;unaryPlus()&lt;/code&gt; operation. That operation is actually defined by an extension function &lt;code&gt;unaryPlus()&lt;/code&gt; that is a member of the &lt;code&gt;TagWithText&lt;/code&gt; abstract class (a parent of &lt;code&gt;Title&lt;/code&gt;):</source>
          <target state="translated">따라서 기본적으로 태그 본문 안에 문자열을 넣지 만 앞에 작은 &lt;code&gt;+&lt;/code&gt; 가 있으므로 &lt;code&gt;unaryPlus()&lt;/code&gt; 접두사 접두사를 호출하는 함수 호출입니다 . 이 작업은 실제로 &lt;code&gt;TagWithText&lt;/code&gt; 추상 클래스 ( &lt;code&gt;Title&lt;/code&gt; 의 부모)의 멤버 인 확장 함수 &lt;code&gt;unaryPlus()&lt;/code&gt; 의해 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="932e80ae659a0de90bc0dc75a6b10c120ab6dbb8" translate="yes" xml:space="preserve">
          <source>So equality would have been lost silently all over the place, not to mention identity.</source>
          <target state="translated">따라서 동일성을 언급하지 않고 평등이 모든 곳에서 조용히 사라 졌을 것입니다.</target>
        </trans-unit>
        <trans-unit id="340cc846b1010b4c35e2fbcb7140e394840ae586" translate="yes" xml:space="preserve">
          <source>So far, only the basic cases are supported:</source>
          <target state="translated">지금까지는 기본 사례 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="e96dd13ef1773945f266699aea438682e7ab3594" translate="yes" xml:space="preserve">
          <source>So in combination with the top level variable declared above, it can allow looking at the same memory from different threads and building traditional concurrent structures with platform-specific synchronization primitives.</source>
          <target state="translated">따라서 위에서 선언 한 최상위 변수와 함께 다른 스레드에서 동일한 메모리를보고 플랫폼 별 동기화 프리미티브를 사용하여 기존의 동시 구조를 구축 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc0acbaacdf27c7a450d9d610b6d7359119efc69" translate="yes" xml:space="preserve">
          <source>So is the following. The difference between &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;.&lt;/code&gt; is that &lt;code&gt;+&lt;/code&gt; can be a unary operator, but &lt;code&gt;.&lt;/code&gt; can't, so the only way to get the second line to parse is to join it with the preceding line:</source>
          <target state="translated">다음과 같습니다. 차이 &lt;code&gt;+&lt;/code&gt; 와 &lt;code&gt;.&lt;/code&gt; 이다 &lt;code&gt;+&lt;/code&gt; 는 단항 연산자 될 수 있지만 &lt;code&gt;.&lt;/code&gt; 할 수 없으므로 두 번째 줄을 구문 분석하는 유일한 방법은 이전 줄과 결합하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="4f0ac44318d35bdb0434bf4bda34bcf67e8a08bc" translate="yes" xml:space="preserve">
          <source>So let us see what happens:</source>
          <target state="translated">어떻게되는지 보자.</target>
        </trans-unit>
        <trans-unit id="b40f56bc16e78af71c3cc44cb5713393fe2d93cd" translate="yes" xml:space="preserve">
          <source>So you can freely use destructuring declarations in &lt;em&gt;for&lt;/em&gt;-loops with maps (as well as collections of data class instances etc).</source>
          <target state="translated">따라서 &lt;em&gt;for&lt;/em&gt; 루프에서 맵 (및 데이터 클래스 인스턴스 모음 등)과 함께 구조적 선언을 자유롭게 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a8703e28503d05aec067966bd9d7e146f04d7ce9" translate="yes" xml:space="preserve">
          <source>So you can import all synthetic properties for the &lt;code&gt;free/res/layout/activity_free.xml&lt;/code&gt; layout by adding this import:</source>
          <target state="translated">따라서이 가져 오기를 추가하여 &lt;code&gt;free/res/layout/activity_free.xml&lt;/code&gt; 레이아웃에 대한 모든 합성 특성을 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3cd48eda4cfceda7505a2a71bde8fd157927016" translate="yes" xml:space="preserve">
          <source>So you can solve tasks:</source>
          <target state="translated">따라서 작업을 해결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2048afe6ef578a9b8c02d8c1f2dc71ba4cc5e26a" translate="yes" xml:space="preserve">
          <source>So, Java prohibits such things in order to guarantee run-time safety. But this has some implications. For example, consider the &lt;code&gt;addAll()&lt;/code&gt; method from &lt;code&gt;Collection&lt;/code&gt; interface. What's the signature of this method? Intuitively, we'd put it this way:</source>
          <target state="translated">따라서 Java는 런타임 안전성을 보장하기 위해 이러한 것들을 금지합니다. 그러나 이것은 약간의 의미가 있습니다. 예를 들어 &lt;code&gt;Collection&lt;/code&gt; 인터페이스 의 &lt;code&gt;addAll()&lt;/code&gt; 메소드를 고려하십시오 . 이 방법의 서명은 무엇입니까? 직관적으로, 우리는 이것을 이런 식으로 넣었습니다.</target>
        </trans-unit>
        <trans-unit id="731f2fb9edfb154df16291f18645c60fce3f0081" translate="yes" xml:space="preserve">
          <source>So, by default, code in the &lt;code&gt;flow { ... }&lt;/code&gt; builder runs in the context that is provided by a collector of the corresponding flow. For example, consider the implementation of a &lt;code&gt;simple&lt;/code&gt; function that prints the thread it is called on and emits three numbers:</source>
          <target state="translated">따라서 기본적으로 &lt;code&gt;flow { ... }&lt;/code&gt; 빌더 의 코드는 해당 흐름 의 수집기가 제공하는 컨텍스트에서 실행됩니다. 예를 들어, 호출 된 스레드를 인쇄하고 세 개의 숫자를 내보내는 &lt;code&gt;simple&lt;/code&gt; 함수 의 구현을 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="a5ea33aab863f2ed16d025b58cd153fccbe69f68" translate="yes" xml:space="preserve">
          <source>So, first the resulting program prints &lt;code&gt;Start&lt;/code&gt;, then it runs a coroutine through &lt;code&gt;launch {}&lt;/code&gt;, then it runs another one through &lt;code&gt;runBlocking {}&lt;/code&gt; and blocks until it's done, then prints &lt;code&gt;Stop&lt;/code&gt;. Meanwhile the first coroutine completes and prints &lt;code&gt;Hello&lt;/code&gt;. Just like threads, we told you :)</source>
          <target state="translated">따라서 결과 프로그램은 먼저 &lt;code&gt;Start&lt;/code&gt; 를 인쇄 한 다음 &lt;code&gt;launch {}&lt;/code&gt; 을 통해 코 루틴을 실행 한 다음 &lt;code&gt;runBlocking {}&lt;/code&gt; 을 통해 또 하나를 실행 하고 완료 될 때까지 차단 한 다음 &lt;code&gt;Stop&lt;/code&gt; 을 인쇄합니다 . 한편 첫 번째 코 루틴은 &lt;code&gt;Hello&lt;/code&gt; 를 완성하고 인쇄합니다 . 실처럼, 우리는 당신에게 말했다 :)</target>
        </trans-unit>
        <trans-unit id="4790cb680e369e2465f78a22145ef3881f0b2cc4" translate="yes" xml:space="preserve">
          <source>So, here the two coroutines are defined but not executed as in the previous example, but the control is given to the programmer on when exactly to start the execution by calling &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/start.html&quot;&gt;start&lt;/a&gt;. We first start &lt;code&gt;one&lt;/code&gt;, then start &lt;code&gt;two&lt;/code&gt;, and then await for the individual coroutines to finish.</source>
          <target state="translated">그래서, 여기에 두 개의 코 루틴이 정의되어 있지만 앞의 예에서와 같이 실행되지하지만 컨트롤이 정확하게 호출하여 실행을 시작할 때 프로그래머에게 주어집니다있다 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/start.html&quot;&gt;시작&lt;/a&gt; . 먼저 &lt;code&gt;one&lt;/code&gt; 를 시작한 다음 &lt;code&gt;two&lt;/code&gt; 를 시작한 다음 개별 코 루틴이 완료되기를 기다립니다.</target>
        </trans-unit>
        <trans-unit id="f87bb15bb23744f645dc6cdce384f45a5dda4f5f" translate="yes" xml:space="preserve">
          <source>So, how do we start a coroutine? Let's use the &lt;code&gt;launch {}&lt;/code&gt; function:</source>
          <target state="translated">그렇다면 어떻게 코 루틴을 시작합니까? &lt;code&gt;launch {}&lt;/code&gt; 함수를 사용하자 :</target>
        </trans-unit>
        <trans-unit id="4e4f67678565baec8708cd041dbe11b31af3f570" translate="yes" xml:space="preserve">
          <source>So, now our functions are very simple:</source>
          <target state="translated">이제 우리의 기능은 매우 간단합니다.</target>
        </trans-unit>
        <trans-unit id="5e798efb8bbb72d38198a7facef7f3b574f4636e" translate="yes" xml:space="preserve">
          <source>So, the coroutine that had inherited context of &lt;code&gt;runBlocking {...}&lt;/code&gt; continues to execute in the &lt;code&gt;main&lt;/code&gt; thread, while the unconfined one had resumed in the default executor thread that &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/delay.html&quot;&gt;delay&lt;/a&gt; function is using.</source>
          <target state="translated">따라서 &lt;code&gt;runBlocking {...}&lt;/code&gt; 의 컨텍스트를 상속받은 코 루틴 은 &lt;code&gt;main&lt;/code&gt; 스레드 에서 계속 실행되는 반면 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/delay.html&quot;&gt;지연&lt;/a&gt; 되지 않은 스레드는 지연 함수가 사용 하는 기본 실행기 스레드에서 다시 시작되었습니다 .</target>
        </trans-unit>
        <trans-unit id="fe711e1882424258793db49ea08a08e7857e8ec8" translate="yes" xml:space="preserve">
          <source>So, the coroutine with the context inherited from &lt;code&gt;runBlocking {...}&lt;/code&gt; continues to execute in the &lt;code&gt;main&lt;/code&gt; thread, while the unconfined one resumes in the default executor thread that the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/delay.html&quot;&gt;delay&lt;/a&gt; function is using.</source>
          <target state="translated">따라서 &lt;code&gt;runBlocking {...}&lt;/code&gt; 에서 상속 된 컨텍스트를 가진 코 루틴 은 &lt;code&gt;main&lt;/code&gt; 스레드 에서 계속 실행되는 반면 제한되지 않은 코 루틴 은 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/delay.html&quot;&gt;지연&lt;/a&gt; 함수가 사용 하는 기본 실행기 스레드에서 재개됩니다 .</target>
        </trans-unit>
        <trans-unit id="814d4fe3deb12a77e531d852602495f8bdaa92a2" translate="yes" xml:space="preserve">
          <source>So, the example that prints the numbers from 1 to 3 from a flow can be written as:</source>
          <target state="translated">따라서 흐름에서 1에서 3까지의 숫자를 인쇄하는 예제는 다음과 같이 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d211dfac10e36035423c9708a4f5505bb9c9ba2" translate="yes" xml:space="preserve">
          <source>So, the sequences let you avoid building results of intermediate steps, therefore improving the performance of the whole collection processing chain. However, the lazy nature of sequences adds some overhead which may be significant when processing smaller collections or doing simpler computations. Hence, you should consider both &lt;code&gt;Sequence&lt;/code&gt; and &lt;code&gt;Iterable&lt;/code&gt; and decide which one is better for your case.</source>
          <target state="translated">따라서 시퀀스를 사용하면 중간 단계의 결과를 작성하지 않아도되므로 전체 콜렉션 처리 체인의 성능이 향상됩니다. 그러나, 시퀀스의 게으른 특성은 약간의 오버 헤드를 추가하는데, 이는 더 작은 콜렉션을 처리하거나 더 간단한 계산을 수행 할 때 중요 할 수 있습니다. 따라서 &lt;code&gt;Sequence&lt;/code&gt; 와 &lt;code&gt;Iterable&lt;/code&gt; 을 모두 고려 하고 어느 것이 더 적합한 지 결정해야합니다.</target>
        </trans-unit>
        <trans-unit id="d916356003ce204bc3a393ee9e159e33d7cd9b65" translate="yes" xml:space="preserve">
          <source>So, what does this call do? Let's look at the body of &lt;code&gt;html&lt;/code&gt; function as defined above. It creates a new instance of &lt;code&gt;HTML&lt;/code&gt;, then it initializes it by calling the function that is passed as an argument (in our example this boils down to calling &lt;code&gt;head&lt;/code&gt; and &lt;code&gt;body&lt;/code&gt; on the &lt;code&gt;HTML&lt;/code&gt; instance), and then it returns this instance. This is exactly what a builder should do.</source>
          <target state="translated">이 전화는 무엇을 하는가? 위에서 정의한대로 &lt;code&gt;html&lt;/code&gt; 함수 의 본문을 보자 . 새 &lt;code&gt;HTML&lt;/code&gt; 인스턴스를 만든 다음 인수로 전달 된 함수를 호출하여 초기화합니다 (이 예제 에서는 &lt;code&gt;HTML&lt;/code&gt; 인스턴스 에서 &lt;code&gt;head&lt;/code&gt; 및 &lt;code&gt;body&lt;/code&gt; 호출로 귀결 됨 ).이 인스턴스를 반환합니다. 이것이 바로 빌더가해야 할 일입니다.</target>
        </trans-unit>
        <trans-unit id="52f3768098539882e0119dbb283e6497243cf386" translate="yes" xml:space="preserve">
          <source>So, what the prefix &lt;code&gt;+&lt;/code&gt; does here is wrapping a string into an instance of &lt;code&gt;TextElement&lt;/code&gt; and adding it to the &lt;code&gt;children&lt;/code&gt; collection, so that it becomes a proper part of the tag tree.</source>
          <target state="translated">따라서 접두사 &lt;code&gt;+&lt;/code&gt; 에서 수행하는 작업은 문자열을 &lt;code&gt;TextElement&lt;/code&gt; 의 인스턴스에 래핑 하고 &lt;code&gt;children&lt;/code&gt; 컬렉션에 추가 하여 태그 트리의 적절한 부분이되도록하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="12b3ed6e021fd91320b5ceebbd0e6bd9c0002703" translate="yes" xml:space="preserve">
          <source>Soft Keywords</source>
          <target state="translated">소프트 키워드</target>
        </trans-unit>
        <trans-unit id="bdc95e2fb559300105c53082291951a541edd345" translate="yes" xml:space="preserve">
          <source>Some &lt;strong&gt;libraries that rely on specific characteristics&lt;/strong&gt; of the default backend, such as &lt;code&gt;kotlin-wrappers&lt;/code&gt;, can display some problems. You can follow the investigation and progress &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-40525&quot;&gt;on YouTrack&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;kotlin-wrappers&lt;/code&gt; 와 같이 기본 백엔드의 &lt;strong&gt;특정 특성&lt;/strong&gt; 에 &lt;strong&gt;의존하는&lt;/strong&gt; 일부 &lt;strong&gt;라이브러리는&lt;/strong&gt; 몇 가지 문제를 표시 할 수 있습니다. &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-40525&quot;&gt;YouTrack&lt;/a&gt; 에서 조사 및 진행 상황 을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="718385fd0c419503c70f82a093c83a84b1b25a04" translate="yes" xml:space="preserve">
          <source>Some Java issues addressed in Kotlin</source>
          <target state="translated">Kotlin에서 해결 된 일부 Java 문제</target>
        </trans-unit>
        <trans-unit id="7e9e412f994dd90c183c701ff78aacb2d95c5613" translate="yes" xml:space="preserve">
          <source>Some JavaScript libraries export packages (namespaces) instead of functions and classes. In terms of JavaScript, it's an &lt;em&gt;object&lt;/em&gt; that has &lt;em&gt;members&lt;/em&gt; that are classes, functions and properties. Importing these packages as Kotlin objects often looks unnatural. The compiler can map imported JavaScript packages to Kotlin packages, using the following notation:</source>
          <target state="translated">일부 JavaScript 라이브러리는 함수 및 클래스 대신 패키지 (네임 스페이스)를 내 보냅니다. JavaScript 측면에서 보면 &lt;em&gt;멤버&lt;/em&gt; 가 있는 &lt;em&gt;객체&lt;/em&gt; 입니다.&lt;em&gt;&lt;/em&gt; 클래스, 함수 및 속성 인 가 . 이러한 패키지를 Kotlin 객체로 가져 오는 것은 종종 부 자연스럽게 보입니다. 컴파일러는 다음 표기법을 사용하여 가져온 자바 스크립트 패키지를 Kotlin 패키지에 매핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ee1ea35caa4a9087e54f63c24f82f4afae23440" translate="yes" xml:space="preserve">
          <source>Some JavaScript libraries export packages (namespaces) instead of functions and classes. In terms of JavaScript, it's an object that has members that &lt;em&gt;are&lt;/em&gt; classes, functions and properties. Importing these packages as Kotlin objects often looks unnatural. The compiler allows to map imported JavaScript packages to Kotlin packages, using the following notation:</source>
          <target state="translated">일부 JavaScript 라이브러리는 함수 및 클래스 대신 패키지 (네임 스페이스)를 내 보냅니다. 자바 스크립트의 측면에서, 그것은 회원이있는 객체의 &lt;em&gt;수 있습니다&lt;/em&gt; 클래스, 함수와 속성을. Kotlin 객체로 이러한 패키지를 가져 오는 것은 종종 부 자연스럽게 보입니다. 컴파일러는 다음 표기법을 사용하여 가져온 JavaScript 패키지를 Kotlin 패키지에 매핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="83979962da7157bf550804d4790b2d0a8835f807" translate="yes" xml:space="preserve">
          <source>Some algorithms require shared mutable references across the multiple workers, for example global mutable configuration could be implemented as an immutable instance of properties list atomically replaced with the new version on configuration update as the whole in a single transaction. This way no inconsistent configuration could be seen, and at the same time configuration could be updated as needed. To achieve such functionality Kotlin/Native runtime provides two related classes: &lt;code&gt;kotlin.native.concurrent.AtomicReference&lt;/code&gt; and &lt;code&gt;kotlin.native.concurrent.FreezableAtomicReference&lt;/code&gt;. Atomic reference holds reference to a frozen or immutable object, and its value could be updated by set or compare-and-swap operation. Thus, dedicated set of objects could be used to create mutable shared object graphs (of immutable objects). Cycles in the shared memory could be created using atomic references. Kotlin/Native runtime doesn't support garbage collecting cyclic data when reference cycle goes through &lt;code&gt;AtomicReference&lt;/code&gt; or frozen &lt;code&gt;FreezableAtomicReference&lt;/code&gt;. So to avoid memory leaks atomic references that are potentially parts of shared cyclic data should be zeroed out once no longer needed.</source>
          <target state="translated">일부 알고리즘은 여러 워커에 걸쳐 공유 변경 가능한 참조를 필요로합니다. 이렇게하면 일관성없는 구성을 볼 수 없으며 동시에 필요에 따라 구성을 업데이트 할 수 있습니다. 이러한 기능을 구현하기 위해 Kotlin / Native 런타임은 &lt;code&gt;kotlin.native.concurrent.AtomicReference&lt;/code&gt; 및 &lt;code&gt;kotlin.native.concurrent.FreezableAtomicReference&lt;/code&gt; 의 두 가지 관련 클래스를 제공합니다.. 원자 참조는 고정되거나 변경 불가능한 객체에 대한 참조를 보유하며 해당 값은 설정 또는 비교 및 ​​교체 작업을 통해 업데이트 될 수 있습니다. 따라서 전용 객체 세트를 사용하여 변경 가능한 공유 객체 그래프 (불변 객체)를 생성 할 수 있습니다. 공유 메모리의주기는 원자 참조를 사용하여 만들 수 있습니다. Kotlin / Native 런타임은 참조주기가 &lt;code&gt;AtomicReference&lt;/code&gt; 또는 고정 된 &lt;code&gt;FreezableAtomicReference&lt;/code&gt; 를 통과 할 때 주기적 데이터를 수집하는 가비지를 지원하지 않습니다 . 따라서 메모리 누수를 방지하기 위해 공유 순환 데이터의 일부인 원자 참조는 더 이상 필요하지 않은 경우 0으로 제거해야합니다.</target>
        </trans-unit>
        <trans-unit id="b8c228912efad39ab27850e7078c0b0220142ce8" translate="yes" xml:space="preserve">
          <source>Some annotation processors (such as &lt;code&gt;AutoFactory&lt;/code&gt;) rely on precise types in declaration signatures. By default, Kapt replaces every unknown type (including types for the generated classes) to &lt;code&gt;NonExistentClass&lt;/code&gt;, but you can change this behavior. Add the additional flag to the &lt;code&gt;build.gradle&lt;/code&gt; file to enable error type inferring in stubs:</source>
          <target state="translated">일부 주석 처리기 (예 : &lt;code&gt;AutoFactory&lt;/code&gt; )는 선언 서명의 정확한 유형에 의존합니다. 기본적으로 Kapt는 알 수없는 모든 유형 (생성 된 클래스의 유형 포함)을 &lt;code&gt;NonExistentClass&lt;/code&gt; 로 대체 하지만이 동작을 변경할 수 있습니다. 스텁에서 오류 유형을 유추 할 수 있도록 &lt;code&gt;build.gradle&lt;/code&gt; 파일에 추가 플래그를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="e9b0112a5ded4d6fc76de7c8757792375d1ef8b3" translate="yes" xml:space="preserve">
          <source>Some data inconsistency with regard to initialization, such as when:</source>
          <target state="translated">초기화와 관련하여 다음과 같은 일부 데이터 불일치 :</target>
        </trans-unit>
        <trans-unit id="3bfc8724364a1427c167bc6ff352a7b7a49e0abb" translate="yes" xml:space="preserve">
          <source>Some data serialization formats, such as &lt;a href=&quot;https://www.json.org/json-en.html&quot;&gt;JSON&lt;/a&gt; and &lt;a href=&quot;https://developers.google.com/protocol-buffers&quot;&gt;protocol buffers&lt;/a&gt; are particularly common. Being language-neutral and platform-neutral, they enable data exchange between systems written in any modern language.</source>
          <target state="translated">&lt;a href=&quot;https://www.json.org/json-en.html&quot;&gt;JSON&lt;/a&gt; 및 &lt;a href=&quot;https://developers.google.com/protocol-buffers&quot;&gt;프로토콜 버퍼&lt;/a&gt; 와 같은 일부 데이터 직렬화 형식 이 특히 일반적입니다. 언어 중립적이고 플랫폼 중립적이므로 모든 최신 언어로 작성된 시스템간에 데이터 교환이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="2ec82937de14be8e97ca0c1e28319cd1f629f0ec" translate="yes" xml:space="preserve">
          <source>Some examples of what definitely isn't an incompatible change include</source>
          <target state="translated">호환되지 않는 변경이 아닌 것의 일부 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c91a6c8d90495de25ebf0f023cdce334bde2cbe6" translate="yes" xml:space="preserve">
          <source>Some existing functions of &lt;code&gt;StringBuilder&lt;/code&gt; are available in the common library. Among them are &lt;code&gt;append()&lt;/code&gt;, &lt;code&gt;insert()&lt;/code&gt;, &lt;code&gt;substring()&lt;/code&gt;, &lt;code&gt;setLength()&lt;/code&gt;, and more.</source>
          <target state="translated">&lt;code&gt;StringBuilder&lt;/code&gt; 의 기존 기능 중 일부 는 공용 라이브러리에서 사용할 수 있습니다. 그중 &lt;code&gt;append()&lt;/code&gt; , &lt;code&gt;insert()&lt;/code&gt; , &lt;code&gt;substring()&lt;/code&gt; , &lt;code&gt;setLength()&lt;/code&gt; 등이 있습니다.</target>
        </trans-unit>
        <trans-unit id="e95f2e174405bcc358621966d2d7302865740ca1" translate="yes" xml:space="preserve">
          <source>Some features of Kotlin programming language are not yet mapped into respective features of Objective-C or Swift. Currently, following features are not properly exposed in generated framework headers:</source>
          <target state="translated">Kotlin 프로그래밍 언어의 일부 기능은 아직 Objective-C 또는 Swift의 각 기능에 매핑되지 않았습니다. 현재 다음 기능은 생성 된 프레임 워크 헤더에 제대로 노출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cb68483f5d41b2d8412528579f8201778d125468" translate="yes" xml:space="preserve">
          <source>Some libraries have proper &lt;code&gt;module.modulemap&lt;/code&gt; or &lt;code&gt;module.map&lt;/code&gt; files in its headers. For example, macOS and iOS system libraries and frameworks do. The &lt;a href=&quot;https://clang.llvm.org/docs/Modules.html#module-map-language&quot;&gt;module map file&lt;/a&gt; describes the correspondence between header files and modules. When the module maps are available, the headers from the modules that are not included directly can be filtered out using the experimental &lt;code&gt;excludeDependentModules&lt;/code&gt; option of the &lt;code&gt;.def&lt;/code&gt; file:</source>
          <target state="translated">일부 라이브러리에는 헤더에 적절한 &lt;code&gt;module.modulemap&lt;/code&gt; 또는 &lt;code&gt;module.map&lt;/code&gt; 파일이 있습니다. 예를 들어, macOS 및 iOS 시스템 라이브러리 및 프레임 워크가 있습니다. &lt;a href=&quot;https://clang.llvm.org/docs/Modules.html#module-map-language&quot;&gt;모듈 맵 파일&lt;/a&gt; 헤더 파일과 모듈 간의 대응 관계를 설명합니다. 모듈 맵을 사용할 수있는 경우 직접 포함되지 않은 모듈의 헤더 는 &lt;code&gt;.def&lt;/code&gt; 파일 의 실험적인 &lt;code&gt;excludeDependentModules&lt;/code&gt; 옵션을 사용하여 필터링 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ecbe5afd16b78f70120a5b12f258298956ff8d44" translate="yes" xml:space="preserve">
          <source>Some non-primitive built-in classes are also mapped:</source>
          <target state="translated">기본이 아닌 내장 클래스도 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="8dee9b7120e2be75fc0bee01d923884834726ceb" translate="yes" xml:space="preserve">
          <source>Some of the Gradle built-in dependencies, like &lt;code&gt;gradleApi()&lt;/code&gt;, &lt;code&gt;localGroovy()&lt;/code&gt;, or &lt;code&gt;gradleTestKit()&lt;/code&gt; are not available in the source sets dependency DSL. You can, however, add them within the top-level dependency block, as shown above.</source>
          <target state="translated">&lt;code&gt;gradleApi()&lt;/code&gt; , &lt;code&gt;localGroovy()&lt;/code&gt; 또는 &lt;code&gt;gradleTestKit()&lt;/code&gt; 과 같은 Gradle 내장 종속성 중 일부는 소스 세트 종속성 DSL에서 사용할 수 없습니다. 그러나 위에 표시된 것처럼 최상위 종속성 블록 내에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca33e1fd8c377d86f53c24cb8d991d157f4d2294" translate="yes" xml:space="preserve">
          <source>Some of the Kotlin keywords are valid identifiers in Java: &lt;em&gt;in&lt;/em&gt;, &lt;em&gt;object&lt;/em&gt;, &lt;em&gt;is&lt;/em&gt;, etc. If a Java library uses a Kotlin keyword for a method, you can still call the method escaping it with the backtick (`) character:</source>
          <target state="translated">Kotlin 키워드 중 일부는 Java에서 유효한 식별자입니다 : &lt;em&gt;in&lt;/em&gt; , &lt;em&gt;object&lt;/em&gt; , &lt;em&gt;is&lt;/em&gt; 등. Java 라이브러리가 메소드에 Kotlin 키워드를 사용하는 경우 여전히 백틱 (`) 문자로 이스케이프 처리하는 메소드를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6cec025139e5801ae5f90249c852e460ef019361" translate="yes" xml:space="preserve">
          <source>Some source sets are created and configured by default: &lt;code&gt;commonMain&lt;/code&gt;, &lt;code&gt;commonTest&lt;/code&gt;, and the default source sets for the compilations. See &lt;a href=&quot;#default-project-layout&quot;&gt;Default Project Layout&lt;/a&gt;.</source>
          <target state="translated">일부 소스 세트는 기본적으로 작성 및 구성됩니다 ( &lt;code&gt;commonMain&lt;/code&gt; , &lt;code&gt;commonTest&lt;/code&gt; 및 컴파일의 기본 소스 세트). &lt;a href=&quot;#default-project-layout&quot;&gt;기본 프로젝트 레이아웃을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="46849402d48ce8fa8cf59b2eca7dbd26570c373a" translate="yes" xml:space="preserve">
          <source>Some superclasses are very useful as a grouping mechanism for related classes and for providing shared functions, but are so general that they're not useful on their own. &lt;code&gt;MotorVehicle&lt;/code&gt; seems to fit this description. Such a class should be declared &lt;em&gt;abstract&lt;/em&gt;, which will prevent the class from being instantiated directly:</source>
          <target state="translated">일부 수퍼 클래스는 관련 클래스와 공유 함수를 제공하기위한 그룹화 메커니즘으로 매우 유용하지만 너무 일반적으로 유용하지 않습니다. &lt;code&gt;MotorVehicle&lt;/code&gt; 이이 설명에 맞는 것 같습니다. 이러한 클래스는 &lt;em&gt;abstract&lt;/em&gt; 로 선언해야하며, 클래스가 직접 인스턴스화되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="a997931671767da7af31a971af570dea73db8ed8" translate="yes" xml:space="preserve">
          <source>Some targets may require additional configuration. For Android and iOS examples, see the &lt;a href=&quot;../tutorials/native/mpp-ios-android&quot;&gt;Multiplatform Project: iOS and Android&lt;/a&gt; tutorial.</source>
          <target state="translated">일부 대상은 추가 구성이 필요할 수 있습니다. Android 및 iOS 예제는 &lt;a href=&quot;../tutorials/native/mpp-ios-android&quot;&gt;멀티 플랫폼 프로젝트 : iOS 및 Android&lt;/a&gt; 학습서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="032ac17975fab5e5d6859c4cde9edfb827035210" translate="yes" xml:space="preserve">
          <source>Some use cases for Kotlin/JS</source>
          <target state="translated">Kotlin / JS의 일부 사용 사례</target>
        </trans-unit>
        <trans-unit id="63a9fbfe36ca16d1efe57c704a5a06f039c3e063" translate="yes" xml:space="preserve">
          <source>Sometimes it is beneficial to use &lt;a href=&quot;inline-functions&quot;&gt;inline functions&lt;/a&gt;, which provide flexible control flow, for higher-order functions.</source>
          <target state="translated">때로는 고차 함수에 유연한 제어 흐름을 제공 하는 &lt;a href=&quot;inline-functions&quot;&gt;인라인 함수&lt;/a&gt; 를 사용하는 것이 유리 합니다.</target>
        </trans-unit>
        <trans-unit id="b3c9f6d381eb6e20cbdde2643da759944b133d98" translate="yes" xml:space="preserve">
          <source>Sometimes it is convenient to &lt;em&gt;destructure&lt;/em&gt; an object into a number of variables, for example:</source>
          <target state="translated">때로는 객체를 여러 변수로 &lt;em&gt;구조화&lt;/em&gt; 하는 것이 편리합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="33e9db01a2a661ab9be13fb9f8fffd72e0669fdd" translate="yes" xml:space="preserve">
          <source>Sometimes it is convenient to have an ability to pass some thread-local data to or between coroutines. However, since they are not bound to any particular thread, this will likely lead to boilerplate if done manually.</source>
          <target state="translated">때때로 코 루틴간에 또는 코 루틴간에 스레드 로컬 데이터를 전달할 수있는 기능이 있으면 편리합니다. 그러나 특정 스레드에 바인딩되어 있지 않기 때문에 수동으로 수행하면 상용구로 이어질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="302d682a26f0a7a9291ca67783bee5bced9328f3" translate="yes" xml:space="preserve">
          <source>Sometimes it is convenient to have an ability to pass some thread-local data, but, for coroutines, which are not bound to any particular thread, it is hard to achieve it manually without writing a lot of boilerplate.</source>
          <target state="translated">때로는 스레드 로컬 데이터를 전달하는 것이 편리하지만 특정 스레드에 바인딩되지 않은 코 루틴의 경우 많은 상용구를 작성하지 않고 수동으로 달성하기가 어렵습니다.</target>
        </trans-unit>
        <trans-unit id="043a7ce5b4e61465c0bfadb7f717902673e4e6dd" translate="yes" xml:space="preserve">
          <source>Sometimes it is more convenient to ship a static library with your product, rather than assume it is available within the user's environment. To include a static library into &lt;code&gt;.klib&lt;/code&gt; use &lt;code&gt;staticLibrary&lt;/code&gt; and &lt;code&gt;libraryPaths&lt;/code&gt; clauses. For example:</source>
          <target state="translated">때로는 사용자 환경에서 사용할 수 있다고 가정하지 않고 정적 라이브러리를 제품과 함께 제공하는 것이 더 편리합니다. &lt;code&gt;.klib&lt;/code&gt; 에 정적 라이브러리를 포함 시키 려면 &lt;code&gt;staticLibrary&lt;/code&gt; 및 &lt;code&gt;libraryPaths&lt;/code&gt; 절을 사용하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bda56f559bfdf285376cfe98c118c1fc0d45e476" translate="yes" xml:space="preserve">
          <source>Sometimes it is necessary for business logic to create a wrapper around some type. However, it introduces runtime overhead due to additional heap allocations. Moreover, if the wrapped type is primitive, the performance hit is terrible, because primitive types are usually heavily optimized by the runtime, while their wrappers don't get any special treatment.</source>
          <target state="translated">때로는 비즈니스 로직이 특정 유형의 랩퍼를 작성해야합니다. 그러나 추가 힙 할당으로 인해 런타임 오버 헤드가 발생합니다. 또한 랩핑 된 유형이 기본 유형 인 경우 기본 유형은 일반적으로 런타임에 의해 크게 최적화되고 랩퍼는 특별한 처리를받지 않으므로 성능 저하가 끔찍합니다.</target>
        </trans-unit>
        <trans-unit id="a1c252c20c0ca0a66522a4f37c8be9e2e7e0683f" translate="yes" xml:space="preserve">
          <source>Sometimes it is required to add custom C declarations to the library before generating bindings (e.g., for &lt;a href=&quot;#macros&quot;&gt;macros&lt;/a&gt;). Instead of creating an additional header file with these declarations, you can include them directly to the end of the &lt;code&gt;.def&lt;/code&gt; file, after a separating line, containing only the separator sequence &lt;code&gt;---&lt;/code&gt;:</source>
          <target state="translated">바인딩을 생성하기 전에 라이브러리에 사용자 정의 C 선언을 추가해야하는 경우가 있습니다 (예 : &lt;a href=&quot;#macros&quot;&gt;매크로&lt;/a&gt; ). 이러한 선언으로 추가 헤더 파일을 작성하는 대신 구분 기호 시퀀스 &lt;code&gt;---&lt;/code&gt; : 만 포함하는 분리 행 다음에 &lt;code&gt;.def&lt;/code&gt; 파일 의 끝에 직접 포함시킬 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="56ecfc8da440116471986a5f61a75f0ea7b94e9a" translate="yes" xml:space="preserve">
          <source>Sometimes it is required to override initializers, e.g. when subclassing &lt;code&gt;UIViewController&lt;/code&gt;. Initializers imported as Kotlin constructors can be overridden by Kotlin constructors marked with the &lt;code&gt;@OverrideInit&lt;/code&gt; annotation:</source>
          <target state="translated">때때로 &lt;code&gt;UIViewController&lt;/code&gt; 를 서브 클래 싱 할 때 이니셜 라이저를 재정의해야 할 때가 있습니다 . Kotlin 생성자로 가져온 이니셜 라이저는 &lt;code&gt;@OverrideInit&lt;/code&gt; 주석으로 표시된 Kotlin 생성자가 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="efdaae37e7bf4722447db8e7626c18f363241541" translate="yes" xml:space="preserve">
          <source>Sometimes the C libraries have function parameters or struct fields of a platform-dependent type, e.g. &lt;code&gt;long&lt;/code&gt; or &lt;code&gt;size_t&lt;/code&gt;. Kotlin itself doesn't provide neither implicit integer casts nor C-style integer casts (e.g. &lt;code&gt;(size_t) intValue&lt;/code&gt;), so to make writing portable code in such cases easier, the &lt;code&gt;convert&lt;/code&gt; method is provided:</source>
          <target state="translated">때때로 C 라이브러리에는 플랫폼 또는 유형 (예 : &lt;code&gt;long&lt;/code&gt; 또는 &lt;code&gt;size_t&lt;/code&gt; )의 함수 매개 변수 또는 구조체 필드가 있습니다. Kotlin 자체는 암시 적 정수 캐스트 나 C 스타일 정수 캐스트 (예 : &lt;code&gt;(size_t) intValue&lt;/code&gt; )를 제공하지 않으므로 이러한 경우 이식 가능한 코드를 쉽게 작성할 수 있도록 &lt;code&gt;convert&lt;/code&gt; 메소드가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="c6d7d45f9a4bb2f105945868e1e4262dd631e65e" translate="yes" xml:space="preserve">
          <source>Sometimes we have a named function in Kotlin, for which we need a different JVM name in the byte code. The most prominent example happens due to &lt;em&gt;type erasure&lt;/em&gt;:</source>
          <target state="translated">때때로 Kotlin에 명명 된 함수가 있는데,이를 위해 바이트 코드에 다른 JVM 이름이 필요합니다. 가장 두드러진 예는 &lt;em&gt;유형 삭제&lt;/em&gt; 로 인해 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="57bc7ebf1e9198008144108c9c1119ef8c7efcd8" translate="yes" xml:space="preserve">
          <source>Sometimes we need to access a type passed to us as a parameter:</source>
          <target state="translated">때로는 매개 변수로 전달 된 유형에 액세스해야합니다.</target>
        </trans-unit>
        <trans-unit id="d5900485f21e94ff8c4ddb23a5e9d44345914137" translate="yes" xml:space="preserve">
          <source>Sometimes we need to create an object of a slight modification of some class, without explicitly declaring a new subclass for it. Java handles this case with &lt;em&gt;anonymous inner classes&lt;/em&gt;. Kotlin slightly generalizes this concept with &lt;em&gt;object expressions&lt;/em&gt; and &lt;em&gt;object declarations&lt;/em&gt;.</source>
          <target state="translated">때로는 새로운 하위 클래스를 명시 적으로 선언하지 않고 일부 클래스를 약간 수정 한 객체를 만들어야 할 때가 있습니다. Java는 &lt;em&gt;익명의 내부 클래스&lt;/em&gt; 로이 경우를 처리합니다 . Kotlin은이 개념을 &lt;em&gt;객체 표현식&lt;/em&gt; 과 &lt;em&gt;객체 선언으로&lt;/em&gt; 약간 일반화합니다 .</target>
        </trans-unit>
        <trans-unit id="a670d77086d7bf5aac8ce4af135b7004f29155cb" translate="yes" xml:space="preserve">
          <source>Sometimes we need to create an object of a slight modification of some class, without explicitly declaring a new subclass for it. Kotlin handles this case with &lt;em&gt;object expressions&lt;/em&gt; and &lt;em&gt;object declarations&lt;/em&gt;.</source>
          <target state="translated">때로는 새로운 하위 클래스를 명시 적으로 선언하지 않고 일부 클래스를 약간 수정 한 객체를 생성해야합니다. Kotlin은 &lt;em&gt;객체 표현식&lt;/em&gt; 및 &lt;em&gt;객체 선언&lt;/em&gt; 으로이 경우를 처리합니다 .</target>
        </trans-unit>
        <trans-unit id="b9b1fa0588f23ccc07f2af6fa910811f7863c7b9" translate="yes" xml:space="preserve">
          <source>Sometimes we need to define multiple elements for a coroutine context. We can use the &lt;code&gt;+&lt;/code&gt; operator for that. For example, we can launch a coroutine with an explicitly specified dispatcher and an explicitly specified name at the same time:</source>
          <target state="translated">때때로 우리는 코 루틴 컨텍스트에 대해 여러 요소를 정의해야합니다. 이를 위해 &lt;code&gt;+&lt;/code&gt; 연산자를 사용할 수 있습니다 . 예를 들어 명시 적으로 지정된 디스패처와 명시 적으로 지정된 이름으로 동시에 코 루틴을 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c43bb60fb115adf5865cb0fa15a4f5e0748287e9" translate="yes" xml:space="preserve">
          <source>Sometimes we need to define multiple elements for coroutine context. We can use &lt;code&gt;+&lt;/code&gt; operator for that. For example, we can launch a coroutine with an explicitly specified dispatcher and an explicitly specified name at the same time:</source>
          <target state="translated">때로는 코 루틴 컨텍스트를 위해 여러 요소를 정의해야합니다. 이를 위해 &lt;code&gt;+&lt;/code&gt; 연산자를 사용할 수 있습니다 . 예를 들어, 명시 적으로 지정된 디스패처와 명시 적으로 지정된 이름을 가진 코 루틴을 동시에 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1310e09600b521eea851206fd94e82f8d190d5a5" translate="yes" xml:space="preserve">
          <source>Sometimes you are going to use a Kotlin declaration directly from JavaScript, and it's being stripped out by DCE. You may want to keep this declaration. To do so, you can use the following syntax in &lt;code&gt;build.gradle&lt;/code&gt;:</source>
          <target state="translated">때로는 JavaScript에서 직접 Kotlin 선언을 사용하려고하는데 DCE에 의해 제거됩니다. 이 선언을 유지하고 싶을 수도 있습니다. 그렇게하려면 &lt;code&gt;build.gradle&lt;/code&gt; 에서 다음 구문을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2ac9b5cb701503646e0c16cf47968686ce844099" translate="yes" xml:space="preserve">
          <source>Sometimes you may need to keep a function or a class in the resulting JavaScript code even if you don't use it in your module, for example, if you're going to use it in the client JavaScript code.</source>
          <target state="translated">예를 들어 클라이언트 JavaScript 코드에서 사용하려는 경우와 같이 모듈에서 사용하지 않더라도 결과 JavaScript 코드에 함수 또는 클래스를 유지해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="701d6ffd47aa414cf9e4b9070e6ac69d9f907851" translate="yes" xml:space="preserve">
          <source>Sometimes you may need to quickly write and execute some code outside of a project or an application. This may be useful, for example, when learning Kotlin or evaluating expressions. Let's have a look through two handy ways to quickly run Kotlin code:</source>
          <target state="translated">때로는 프로젝트 나 응용 프로그램 외부에서 일부 코드를 빠르게 작성하고 실행해야 할 수도 있습니다. 예를 들어 Kotlin을 배우거나 표현을 평가할 때 유용 할 수 있습니다. Kotlin 코드를 빠르게 실행하는 두 가지 편리한 방법을 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="b4425ac713740daf889b7cc088cbeb587776a728" translate="yes" xml:space="preserve">
          <source>Sometimes you need to call a Kotlin method with a parameter of type &lt;code&gt;KClass&lt;/code&gt;. There is no automatic conversion from &lt;code&gt;Class&lt;/code&gt; to &lt;code&gt;KClass&lt;/code&gt;, so you have to do it manually by invoking the equivalent of the &lt;code&gt;Class&amp;lt;T&amp;gt;.kotlin&lt;/code&gt; extension property:</source>
          <target state="translated">때로는 &lt;code&gt;KClass&lt;/code&gt; 유형의 매개 변수를 사용하여 Kotlin 메소드를 호출해야합니다 . &lt;code&gt;Class&lt;/code&gt; 에서 &lt;code&gt;KClass&lt;/code&gt; 로의 자동 변환은 없으므로 &lt;code&gt;Class&amp;lt;T&amp;gt;.kotlin&lt;/code&gt; 확장 등록 정보 와 동등한 기능을 호출하여 수동으로 수행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f7c6d9e07fb190279efd213b27af8a596256a8b2" translate="yes" xml:space="preserve">
          <source>Sometimes you want to say that you know nothing about the type argument, but still want to use it in a safe way. The safe way here is to define such a projection of the generic type, that every concrete instantiation of that generic type would be a subtype of that projection.</source>
          <target state="translated">때로는 타입 인수에 대해 아무것도 모른다고 말하고 싶지만 여전히 안전한 방식으로 사용하고 싶습니다. 여기서 안전한 방법은 제네릭 형식의 투영을 정의하여 해당 제네릭 형식의 모든 구체적인 인스턴스화가 해당 투영의 하위 유형이되도록하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="46f170a2459c0e42a18d65de64835d7772e9f851" translate="yes" xml:space="preserve">
          <source>Sometimes, you're in a situation where you have a value &lt;code&gt;x&lt;/code&gt; that you know is not null, but the compiler doesn't realize it. This can legitimately happen when you're interacting with Java code, but if it happens because your code's logic is more complicated than the compiler's ability to reason about it, you should probably restructure your code. If you can't convince the compiler, you can resort to saying &lt;code&gt;x!!&lt;/code&gt; to form an expression that produces the value of &lt;code&gt;x&lt;/code&gt;, but whose type is non-nullable:</source>
          <target state="translated">때때로, 당신은 당신이 알고 있는 값 &lt;code&gt;x&lt;/code&gt; 가 null이 아닌 상황에 있지만 컴파일러가 그것을 인식하지 못합니다. 이것은 Java 코드와 상호 작용할 때 합법적으로 발생할 수 있지만 코드 논리가 컴파일러의 추론 능력보다 복잡하기 때문에 발생하는 경우 코드를 재구성해야합니다. 컴파일러를 설득 할 수 없다면 &lt;code&gt;x!!&lt;/code&gt; 라고 말할 수 있습니다 ! &lt;code&gt;x&lt;/code&gt; 값을 생성 하지만 유형이 널 입력 불가능한 표현식을 작성하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="378e9e163b7eecefadb4415cae533096e336c4ab" translate="yes" xml:space="preserve">
          <source>Sorting</source>
          <target state="translated">Sorting</target>
        </trans-unit>
        <trans-unit id="921e7c9357933042c013290bc34dab79354742a1" translate="yes" xml:space="preserve">
          <source>Sorts a range in the array in-place with the given &lt;a href=&quot;../../kotlin.collections/sort-with#kotlin.collections%24sortWith%28kotlin.Array%28%28kotlin.collections.sortWith.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.sortWith.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;../../kotlin.collections/sort-with#kotlin.collections%24sortWith%28kotlin.Array%28%28kotlin.collections.sortWith.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.sortWith.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt; 를 사용하여 배열의 범위를 내부 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="7ab5ac4c7321bd5e96bb4ea59931e3aafdf22bba" translate="yes" xml:space="preserve">
          <source>Sorts a range in the array in-place with the given &lt;a href=&quot;../../kotlin.collections/sort-with#kotlin.collections%24sortWith(kotlin.Array((kotlin.collections.sortWith.T)),%20java.util.Comparator((kotlin.collections.sortWith.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">주어진 &lt;a href=&quot;../../kotlin.collections/sort-with#kotlin.collections%24sortWith(kotlin.Array((kotlin.collections.sortWith.T)),%20java.util.Comparator((kotlin.collections.sortWith.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;comparator&lt;/a&gt; 를 사용하여 배열의 범위를 제자리에서 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="7a20d1597d8301c3cc3bcec0a63b03857c779e81" translate="yes" xml:space="preserve">
          <source>Sorts a range in the array in-place with the given &lt;a href=&quot;sort-with#kotlin.collections%24sortWith%28kotlin.Array%28%28kotlin.collections.sortWith.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.sortWith.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;sort-with#kotlin.collections%24sortWith%28kotlin.Array%28%28kotlin.collections.sortWith.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.sortWith.T%29%29%2C+kotlin.Int%2C+kotlin.Int%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt; 를 사용하여 배열의 범위를 내부 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="9f29b8a3e32fc7d33d5032a0e7e2570dec8a50ce" translate="yes" xml:space="preserve">
          <source>Sorts a range in the array in-place with the given &lt;a href=&quot;sort-with#kotlin.collections%24sortWith(kotlin.Array((kotlin.collections.sortWith.T)),%20java.util.Comparator((kotlin.collections.sortWith.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">주어진 &lt;a href=&quot;sort-with#kotlin.collections%24sortWith(kotlin.Array((kotlin.collections.sortWith.T)),%20java.util.Comparator((kotlin.collections.sortWith.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;comparator&lt;/a&gt; 를 사용하여 배열의 범위를 제자리에서 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="6f9c7763537514e3ae832c455c2613ffa3795678" translate="yes" xml:space="preserve">
          <source>Sorts a range in the array in-place with the given &lt;a href=&quot;sort-with#kotlin.collections%24sortWith(kotlin.Array((kotlin.collections.sortWith.T)),%20kotlin.Comparator((kotlin.collections.sortWith.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">주어진 &lt;a href=&quot;sort-with#kotlin.collections%24sortWith(kotlin.Array((kotlin.collections.sortWith.T)),%20kotlin.Comparator((kotlin.collections.sortWith.T)),%20kotlin.Int,%20kotlin.Int)/comparator&quot;&gt;comparator&lt;/a&gt; 를 사용하여 배열의 범위를 제자리에서 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="1d1e6b1aadd9cf85696a8efae6efd2f282221c3e" translate="yes" xml:space="preserve">
          <source>Sorts a range in the array in-place.</source>
          <target state="translated">배열의 범위를 내부에서 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="10a2c137539a5db660667fa6576c28cd26e36ac6" translate="yes" xml:space="preserve">
          <source>Sorts elements in the array in-place according to natural sort order of the value returned by specified &lt;a href=&quot;../../kotlin.collections/sort-by#kotlin.collections%24sortBy%28kotlin.Array%28%28kotlin.collections.sortBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortBy.T%2C+kotlin.collections.sortBy.R%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">지정된 &lt;a href=&quot;../../kotlin.collections/sort-by#kotlin.collections%24sortBy%28kotlin.Array%28%28kotlin.collections.sortBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortBy.T%2C+kotlin.collections.sortBy.R%29%29%29%2Fselector&quot;&gt;선택기&lt;/a&gt; 함수에서 반환 한 값의 자연 정렬 순서에 따라 배열의 요소를 내부에서 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="d614d5f803379f2eec6996f2ea55836ab718c0c6" translate="yes" xml:space="preserve">
          <source>Sorts elements in the array in-place according to natural sort order of the value returned by specified &lt;a href=&quot;../../kotlin.collections/sort-by#kotlin.collections%24sortBy(kotlin.Array((kotlin.collections.sortBy.T)),%20kotlin.Function1((kotlin.collections.sortBy.T,%20kotlin.collections.sortBy.R?)))/selector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">지정된 &lt;a href=&quot;../../kotlin.collections/sort-by#kotlin.collections%24sortBy(kotlin.Array((kotlin.collections.sortBy.T)),%20kotlin.Function1((kotlin.collections.sortBy.T,%20kotlin.collections.sortBy.R?)))/selector&quot;&gt;선택기&lt;/a&gt; 함수에서 반환 된 값의 자연 정렬 순서에 따라 배열의 요소를 제자리에서 정렬 합니다.</target>
        </trans-unit>
        <trans-unit id="07efbdad7d4d4a2414ba73adc668adade052ada0" translate="yes" xml:space="preserve">
          <source>Sorts elements in the array in-place according to natural sort order of the value returned by specified &lt;a href=&quot;sort-by#kotlin.collections%24sortBy%28kotlin.Array%28%28kotlin.collections.sortBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortBy.T%2C+kotlin.collections.sortBy.R%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">지정된 &lt;a href=&quot;sort-by#kotlin.collections%24sortBy%28kotlin.Array%28%28kotlin.collections.sortBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortBy.T%2C+kotlin.collections.sortBy.R%29%29%29%2Fselector&quot;&gt;선택기&lt;/a&gt; 함수에서 반환 한 값의 자연 정렬 순서에 따라 배열의 요소를 내부에서 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="cb666ac48c0d59760a086d470c5a19d2b11c9178" translate="yes" xml:space="preserve">
          <source>Sorts elements in the array in-place according to natural sort order of the value returned by specified &lt;a href=&quot;sort-by#kotlin.collections%24sortBy(kotlin.Array((kotlin.collections.sortBy.T)),%20kotlin.Function1((kotlin.collections.sortBy.T,%20kotlin.collections.sortBy.R?)))/selector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">지정된 &lt;a href=&quot;sort-by#kotlin.collections%24sortBy(kotlin.Array((kotlin.collections.sortBy.T)),%20kotlin.Function1((kotlin.collections.sortBy.T,%20kotlin.collections.sortBy.R?)))/selector&quot;&gt;선택기&lt;/a&gt; 함수에서 반환 된 값의 자연 정렬 순서에 따라 배열의 요소를 제자리에서 정렬 합니다.</target>
        </trans-unit>
        <trans-unit id="bf0d525765ea180a93133271ef548eaa25ac7135" translate="yes" xml:space="preserve">
          <source>Sorts elements in the array in-place descending according to natural sort order of the value returned by specified &lt;a href=&quot;../../kotlin.collections/sort-by-descending#kotlin.collections%24sortByDescending%28kotlin.Array%28%28kotlin.collections.sortByDescending.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortByDescending.T%2C+kotlin.collections.sortByDescending.R%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">지정된 &lt;a href=&quot;../../kotlin.collections/sort-by-descending#kotlin.collections%24sortByDescending%28kotlin.Array%28%28kotlin.collections.sortByDescending.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortByDescending.T%2C+kotlin.collections.sortByDescending.R%29%29%29%2Fselector&quot;&gt;선택기&lt;/a&gt; 함수가 반환 한 값의 자연 정렬 순서에 따라 배열 내 요소를 내림차순으로 정렬 합니다.</target>
        </trans-unit>
        <trans-unit id="524c437730f487654fb5f722d14a0d7c22cf7527" translate="yes" xml:space="preserve">
          <source>Sorts elements in the array in-place descending according to natural sort order of the value returned by specified &lt;a href=&quot;../../kotlin.collections/sort-by-descending#kotlin.collections%24sortByDescending(kotlin.Array((kotlin.collections.sortByDescending.T)),%20kotlin.Function1((kotlin.collections.sortByDescending.T,%20kotlin.collections.sortByDescending.R?)))/selector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">지정된 &lt;a href=&quot;../../kotlin.collections/sort-by-descending#kotlin.collections%24sortByDescending(kotlin.Array((kotlin.collections.sortByDescending.T)),%20kotlin.Function1((kotlin.collections.sortByDescending.T,%20kotlin.collections.sortByDescending.R?)))/selector&quot;&gt;선택기&lt;/a&gt; 함수에서 반환 된 값의 자연 정렬 순서에 따라 배열의 요소를 내림차순으로 정렬 합니다.</target>
        </trans-unit>
        <trans-unit id="fa27ec6d7341fe4cf77ef645e820323c332516f4" translate="yes" xml:space="preserve">
          <source>Sorts elements in the array in-place descending according to natural sort order of the value returned by specified &lt;a href=&quot;sort-by-descending#kotlin.collections%24sortByDescending%28kotlin.Array%28%28kotlin.collections.sortByDescending.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortByDescending.T%2C+kotlin.collections.sortByDescending.R%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">지정된 &lt;a href=&quot;sort-by-descending#kotlin.collections%24sortByDescending%28kotlin.Array%28%28kotlin.collections.sortByDescending.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortByDescending.T%2C+kotlin.collections.sortByDescending.R%29%29%29%2Fselector&quot;&gt;선택기&lt;/a&gt; 함수가 반환 한 값의 자연 정렬 순서에 따라 배열 내 요소를 내림차순으로 정렬 합니다.</target>
        </trans-unit>
        <trans-unit id="7a32fc0d52dda597ec70a61cacc8a5671938c4a0" translate="yes" xml:space="preserve">
          <source>Sorts elements in the array in-place descending according to natural sort order of the value returned by specified &lt;a href=&quot;sort-by-descending#kotlin.collections%24sortByDescending(kotlin.Array((kotlin.collections.sortByDescending.T)),%20kotlin.Function1((kotlin.collections.sortByDescending.T,%20kotlin.collections.sortByDescending.R?)))/selector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">지정된 &lt;a href=&quot;sort-by-descending#kotlin.collections%24sortByDescending(kotlin.Array((kotlin.collections.sortByDescending.T)),%20kotlin.Function1((kotlin.collections.sortByDescending.T,%20kotlin.collections.sortByDescending.R?)))/selector&quot;&gt;선택기&lt;/a&gt; 함수에서 반환 된 값의 자연 정렬 순서에 따라 배열의 요소를 내림차순으로 정렬 합니다.</target>
        </trans-unit>
        <trans-unit id="80685ba332e950eb83904d1f4115777122edba8d" translate="yes" xml:space="preserve">
          <source>Sorts elements in the array in-place descending according to their natural sort order.</source>
          <target state="translated">배열의 요소를 원래 정렬 순서에 따라 내림차순으로 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="3fa32beeb828e11e44487567ba158313d97575ec" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place according to natural sort order of the value returned by specified &lt;a href=&quot;../sort-by#kotlin.collections%24sortBy%28kotlin.collections.MutableList%28%28kotlin.collections.sortBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortBy.T%2C+kotlin.collections.sortBy.R%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">지정된 &lt;a href=&quot;../sort-by#kotlin.collections%24sortBy%28kotlin.collections.MutableList%28%28kotlin.collections.sortBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortBy.T%2C+kotlin.collections.sortBy.R%29%29%29%2Fselector&quot;&gt;선택기&lt;/a&gt; 함수가 반환 한 값의 자연 정렬 순서에 따라 목록의 요소를 내부에서 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="3eb7d662fababf9344b18ca7ba5f8a759432e4ef" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place according to natural sort order of the value returned by specified &lt;a href=&quot;../sort-by#kotlin.collections%24sortBy(kotlin.collections.MutableList((kotlin.collections.sortBy.T)),%20kotlin.Function1((kotlin.collections.sortBy.T,%20kotlin.collections.sortBy.R?)))/selector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">지정된 &lt;a href=&quot;../sort-by#kotlin.collections%24sortBy(kotlin.collections.MutableList((kotlin.collections.sortBy.T)),%20kotlin.Function1((kotlin.collections.sortBy.T,%20kotlin.collections.sortBy.R?)))/selector&quot;&gt;선택기&lt;/a&gt; 함수에서 반환 된 값의 자연 정렬 순서에 따라 목록의 요소를 제자리에서 정렬 합니다.</target>
        </trans-unit>
        <trans-unit id="a6a7a1bbadcee0fdc07b873d422460bcfcf63439" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place according to natural sort order of the value returned by specified &lt;a href=&quot;sort-by#kotlin.collections%24sortBy%28kotlin.collections.MutableList%28%28kotlin.collections.sortBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortBy.T%2C+kotlin.collections.sortBy.R%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">지정된 &lt;a href=&quot;sort-by#kotlin.collections%24sortBy%28kotlin.collections.MutableList%28%28kotlin.collections.sortBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortBy.T%2C+kotlin.collections.sortBy.R%29%29%29%2Fselector&quot;&gt;선택기&lt;/a&gt; 함수가 반환 한 값의 자연 정렬 순서에 따라 목록의 요소를 내부에서 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="1cc10c6d35be064c290d10ca48ea91be0492f9d7" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place according to natural sort order of the value returned by specified &lt;a href=&quot;sort-by#kotlin.collections%24sortBy(kotlin.collections.MutableList((kotlin.collections.sortBy.T)),%20kotlin.Function1((kotlin.collections.sortBy.T,%20kotlin.collections.sortBy.R?)))/selector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">지정된 &lt;a href=&quot;sort-by#kotlin.collections%24sortBy(kotlin.collections.MutableList((kotlin.collections.sortBy.T)),%20kotlin.Function1((kotlin.collections.sortBy.T,%20kotlin.collections.sortBy.R?)))/selector&quot;&gt;선택기&lt;/a&gt; 함수에서 반환 된 값의 자연 정렬 순서에 따라 목록의 요소를 제자리에서 정렬 합니다.</target>
        </trans-unit>
        <trans-unit id="016acc76aaf4b67ee4196bd0e6dd698c603f8a7f" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place according to the order specified with &lt;a href=&quot;../sort-with#kotlin.collections%24sortWith%28kotlin.collections.MutableList%28%28kotlin.collections.sortWith.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.sortWith.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../sort-with#kotlin.collections%24sortWith%28kotlin.collections.MutableList%28%28kotlin.collections.sortWith.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.sortWith.T%29%29%29%2Fcomparator&quot;&gt;comparator로&lt;/a&gt; 지정된 순서에 따라 목록의 요소를 적절하게 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="7d3a9a30252022d98ff14ad32e68d6472da5d759" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place according to the order specified with &lt;a href=&quot;../sort-with#kotlin.collections%24sortWith(kotlin.collections.MutableList((kotlin.collections.sortWith.T)),%20java.util.Comparator((kotlin.collections.sortWith.T)))/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../sort-with#kotlin.collections%24sortWith(kotlin.collections.MutableList((kotlin.collections.sortWith.T)),%20java.util.Comparator((kotlin.collections.sortWith.T)))/comparator&quot;&gt;comparator로&lt;/a&gt; 지정된 순서에 따라 목록의 요소를 제자리에서 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="3bd3e4d90292d259ee01f75c87c74c625704e409" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place according to the order specified with &lt;a href=&quot;sort-with#kotlin.collections%24sortWith%28kotlin.collections.MutableList%28%28kotlin.collections.sortWith.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.sortWith.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;sort-with#kotlin.collections%24sortWith%28kotlin.collections.MutableList%28%28kotlin.collections.sortWith.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.sortWith.T%29%29%29%2Fcomparator&quot;&gt;comparator로&lt;/a&gt; 지정된 순서에 따라 목록의 요소를 적절하게 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="a27a30d98060067ccc92da7c7b7abd9184f7e85d" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place according to the order specified with &lt;a href=&quot;sort-with#kotlin.collections%24sortWith%28kotlin.collections.MutableList%28%28kotlin.collections.sortWith.T%29%29%2C+kotlin.Comparator%28%28kotlin.collections.sortWith.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;sort-with#kotlin.collections%24sortWith%28kotlin.collections.MutableList%28%28kotlin.collections.sortWith.T%29%29%2C+kotlin.Comparator%28%28kotlin.collections.sortWith.T%29%29%29%2Fcomparator&quot;&gt;comparator로&lt;/a&gt; 지정된 순서에 따라 목록의 요소를 적절하게 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="930e6c0e376a0ececcef9397828f3578ceab50b2" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place according to the order specified with &lt;a href=&quot;sort-with#kotlin.collections%24sortWith(kotlin.collections.MutableList((kotlin.collections.sortWith.T)),%20java.util.Comparator((kotlin.collections.sortWith.T)))/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;sort-with#kotlin.collections%24sortWith(kotlin.collections.MutableList((kotlin.collections.sortWith.T)),%20java.util.Comparator((kotlin.collections.sortWith.T)))/comparator&quot;&gt;comparator로&lt;/a&gt; 지정된 순서에 따라 목록의 요소를 제자리에서 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="451f15947f12afae8573658bfb10d315dd72debd" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place according to the order specified with &lt;a href=&quot;sort-with#kotlin.collections%24sortWith(kotlin.collections.MutableList((kotlin.collections.sortWith.T)),%20kotlin.Comparator((kotlin.collections.sortWith.T)))/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;sort-with#kotlin.collections%24sortWith(kotlin.collections.MutableList((kotlin.collections.sortWith.T)),%20kotlin.Comparator((kotlin.collections.sortWith.T)))/comparator&quot;&gt;comparator로&lt;/a&gt; 지정된 순서에 따라 목록의 요소를 제자리에서 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="08c50e4dcb5f1e790b3908c92dfd681b51af4fd6" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place according to their natural sort order.</source>
          <target state="translated">자연스러운 정렬 순서에 따라 목록의 요소를 내부에서 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="518d2bf6df28c01bc5ce865b286b09bcb6bd8f57" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place descending according to natural sort order of the value returned by specified &lt;a href=&quot;../sort-by-descending#kotlin.collections%24sortByDescending%28kotlin.collections.MutableList%28%28kotlin.collections.sortByDescending.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortByDescending.T%2C+kotlin.collections.sortByDescending.R%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">지정된 &lt;a href=&quot;../sort-by-descending#kotlin.collections%24sortByDescending%28kotlin.collections.MutableList%28%28kotlin.collections.sortByDescending.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortByDescending.T%2C+kotlin.collections.sortByDescending.R%29%29%29%2Fselector&quot;&gt;선택기&lt;/a&gt; 함수가 반환 한 값의 자연 정렬 순서에 따라 목록의 요소를 내림차순으로 정렬 합니다.</target>
        </trans-unit>
        <trans-unit id="95b14134f87e11edfb507c62a0dc049983651cb2" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place descending according to natural sort order of the value returned by specified &lt;a href=&quot;../sort-by-descending#kotlin.collections%24sortByDescending(kotlin.collections.MutableList((kotlin.collections.sortByDescending.T)),%20kotlin.Function1((kotlin.collections.sortByDescending.T,%20kotlin.collections.sortByDescending.R?)))/selector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">지정된 &lt;a href=&quot;../sort-by-descending#kotlin.collections%24sortByDescending(kotlin.collections.MutableList((kotlin.collections.sortByDescending.T)),%20kotlin.Function1((kotlin.collections.sortByDescending.T,%20kotlin.collections.sortByDescending.R?)))/selector&quot;&gt;선택기&lt;/a&gt; 함수에서 반환 된 값의 자연 정렬 순서에 따라 목록의 요소를 내림차순으로 정렬 합니다.</target>
        </trans-unit>
        <trans-unit id="a90b16f5917d7428e33805718ad4902f7d836c1f" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place descending according to natural sort order of the value returned by specified &lt;a href=&quot;sort-by-descending#kotlin.collections%24sortByDescending%28kotlin.collections.MutableList%28%28kotlin.collections.sortByDescending.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortByDescending.T%2C+kotlin.collections.sortByDescending.R%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">지정된 &lt;a href=&quot;sort-by-descending#kotlin.collections%24sortByDescending%28kotlin.collections.MutableList%28%28kotlin.collections.sortByDescending.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.sortByDescending.T%2C+kotlin.collections.sortByDescending.R%29%29%29%2Fselector&quot;&gt;선택기&lt;/a&gt; 함수가 반환 한 값의 자연 정렬 순서에 따라 목록의 요소를 내림차순으로 정렬 합니다.</target>
        </trans-unit>
        <trans-unit id="7864ad53951825c4ba3b7854eddaf6b68d4f97be" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place descending according to natural sort order of the value returned by specified &lt;a href=&quot;sort-by-descending#kotlin.collections%24sortByDescending(kotlin.collections.MutableList((kotlin.collections.sortByDescending.T)),%20kotlin.Function1((kotlin.collections.sortByDescending.T,%20kotlin.collections.sortByDescending.R?)))/selector&quot;&gt;selector&lt;/a&gt; function.</source>
          <target state="translated">지정된 &lt;a href=&quot;sort-by-descending#kotlin.collections%24sortByDescending(kotlin.collections.MutableList((kotlin.collections.sortByDescending.T)),%20kotlin.Function1((kotlin.collections.sortByDescending.T,%20kotlin.collections.sortByDescending.R?)))/selector&quot;&gt;선택기&lt;/a&gt; 함수에서 반환 된 값의 자연 정렬 순서에 따라 목록의 요소를 내림차순으로 정렬 합니다.</target>
        </trans-unit>
        <trans-unit id="8d80c7611560449691efd4fd1165c90dfada93cf" translate="yes" xml:space="preserve">
          <source>Sorts elements in the list in-place descending according to their natural sort order.</source>
          <target state="translated">목록의 요소를 원래 정렬 순서에 따라 내림차순으로 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="33cd75f026ddd26de228ee011733f2d816ccf5a7" translate="yes" xml:space="preserve">
          <source>Sorts elements of the array in the specified range in-place. The elements are sorted descending according to their natural sort order.</source>
          <target state="translated">지정된 범위의 배열 요소를 제자리에서 정렬합니다. 요소는 자연 정렬 순서에 따라 내림차순으로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="286952b1c23000c7e96cb265d1597ee4be034d09" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the natural order of its elements.</source>
          <target state="translated">요소의 자연 순서에 따라 적절한 위치에 배열을 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="d8747f2faabc6c9d8057fc49ebee4065869ad5f8" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.Array%28%28kotlin.collections.sort.T%29%29%2C+kotlin.Function2%28%28kotlin.collections.sort.T%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">주어진 &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.Array%28%28kotlin.collections.sort.T%29%29%2C+kotlin.Function2%28%28kotlin.collections.sort.T%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;비교&lt;/a&gt; 함수에 의해 지정된 순서에 따라 배열을 적절하게 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="d1839449662e167b67669a9432e7e5b8cda47aee" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.ByteArray%2C+kotlin.Function2%28%28kotlin.Byte%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">주어진 &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.ByteArray%2C+kotlin.Function2%28%28kotlin.Byte%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;비교&lt;/a&gt; 함수에 의해 지정된 순서에 따라 배열을 적절하게 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="7d1ba7dd62c04c8e2b5a71936a2028b1fc09c095" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.CharArray%2C+kotlin.Function2%28%28kotlin.Char%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">주어진 &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.CharArray%2C+kotlin.Function2%28%28kotlin.Char%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;비교&lt;/a&gt; 함수에 의해 지정된 순서에 따라 배열을 적절하게 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="0768dfe6e47561708ff3dcc3e7544aaeba456f69" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.DoubleArray%2C+kotlin.Function2%28%28kotlin.Double%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">주어진 &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.DoubleArray%2C+kotlin.Function2%28%28kotlin.Double%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;비교&lt;/a&gt; 함수에 의해 지정된 순서에 따라 배열을 적절하게 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="c50febead4efd17d0d1e1a05393ce1b4d81939d6" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.FloatArray%2C+kotlin.Function2%28%28kotlin.Float%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">주어진 &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.FloatArray%2C+kotlin.Function2%28%28kotlin.Float%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;비교&lt;/a&gt; 함수에 의해 지정된 순서에 따라 배열을 적절하게 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="614045354e7f88dacd9beea842f592073eab2474" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.IntArray%2C+kotlin.Function2%28%28kotlin.Int%2C+%2C+%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">주어진 &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.IntArray%2C+kotlin.Function2%28%28kotlin.Int%2C+%2C+%29%29%29%2Fcomparison&quot;&gt;비교&lt;/a&gt; 함수에 의해 지정된 순서에 따라 배열을 적절하게 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="92757cae315a994755e0f14f54db5ba3c6d0198c" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.LongArray%2C+kotlin.Function2%28%28kotlin.Long%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">주어진 &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.LongArray%2C+kotlin.Function2%28%28kotlin.Long%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;비교&lt;/a&gt; 함수에 의해 지정된 순서에 따라 배열을 적절하게 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="66732bd072b25ed9a6c879f731965bd5869d1d8e" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.ShortArray%2C+kotlin.Function2%28%28kotlin.Short%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">주어진 &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort%28kotlin.ShortArray%2C+kotlin.Function2%28%28kotlin.Short%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;비교&lt;/a&gt; 함수에 의해 지정된 순서에 따라 배열을 적절하게 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="91018bf823a42030e6a02cceb91f30bb23b4a3c0" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.Array((kotlin.collections.sort.T)),%20kotlin.Function2((kotlin.collections.sort.T,%20,%20kotlin.Int)))/comparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">주어진 &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.Array((kotlin.collections.sort.T)),%20kotlin.Function2((kotlin.collections.sort.T,%20,%20kotlin.Int)))/comparison&quot;&gt;비교&lt;/a&gt; 함수 에서 지정한 순서에 따라 배열을 제자리에서 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="45c4d8278b87d47b820ac64aa10b40a0666016d9" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.ByteArray,%20kotlin.Function2((kotlin.Byte,%20,%20kotlin.Int)))/comparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">주어진 &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.ByteArray,%20kotlin.Function2((kotlin.Byte,%20,%20kotlin.Int)))/comparison&quot;&gt;비교&lt;/a&gt; 함수 에서 지정한 순서에 따라 배열을 제자리에서 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="8d58f0c19f310d1e8a64af26ab6a55ccb19982af" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.CharArray,%20kotlin.Function2((kotlin.Char,%20,%20kotlin.Int)))/comparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">주어진 &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.CharArray,%20kotlin.Function2((kotlin.Char,%20,%20kotlin.Int)))/comparison&quot;&gt;비교&lt;/a&gt; 함수 에서 지정한 순서에 따라 배열을 제자리에서 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="fe7403a5f0d391d45b595ab43a3107f32e06e822" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.DoubleArray,%20kotlin.Function2((kotlin.Double,%20,%20kotlin.Int)))/comparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">주어진 &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.DoubleArray,%20kotlin.Function2((kotlin.Double,%20,%20kotlin.Int)))/comparison&quot;&gt;비교&lt;/a&gt; 함수 에서 지정한 순서에 따라 배열을 제자리에서 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="b2301cc5b5b314eaa58d9ee71dd9a9e964db0dc4" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.FloatArray,%20kotlin.Function2((kotlin.Float,%20,%20kotlin.Int)))/comparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">주어진 &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.FloatArray,%20kotlin.Function2((kotlin.Float,%20,%20kotlin.Int)))/comparison&quot;&gt;비교&lt;/a&gt; 함수 에서 지정한 순서에 따라 배열을 제자리에서 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="93bcc1eefdaf25d6723a4105199c0ed6bf596de2" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.IntArray,%20kotlin.Function2((kotlin.Int,%20,%20)))/comparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">주어진 &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.IntArray,%20kotlin.Function2((kotlin.Int,%20,%20)))/comparison&quot;&gt;비교&lt;/a&gt; 함수 에서 지정한 순서에 따라 배열을 제자리에서 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="e2c0f1af6fb67463fda31931682ae64c5c3cae23" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.LongArray,%20kotlin.Function2((kotlin.Long,%20,%20kotlin.Int)))/comparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">주어진 &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.LongArray,%20kotlin.Function2((kotlin.Long,%20,%20kotlin.Int)))/comparison&quot;&gt;비교&lt;/a&gt; 함수 에서 지정한 순서에 따라 배열을 제자리에서 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="227678b50ff9b8109437a8bbff4850e7049d5b30" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.ShortArray,%20kotlin.Function2((kotlin.Short,%20,%20kotlin.Int)))/comparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">주어진 &lt;a href=&quot;../../kotlin.collections/sort#kotlin.collections%24sort(kotlin.ShortArray,%20kotlin.Function2((kotlin.Short,%20,%20kotlin.Int)))/comparison&quot;&gt;비교&lt;/a&gt; 함수 에서 지정한 순서에 따라 배열을 제자리에서 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="026d2b0c0155084b25c8a6103dc14e9f42617ceb" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort-with#kotlin.collections%24sortWith%28kotlin.Array%28%28kotlin.collections.sortWith.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.sortWith.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;../../kotlin.collections/sort-with#kotlin.collections%24sortWith%28kotlin.Array%28%28kotlin.collections.sortWith.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.sortWith.T%29%29%29%2Fcomparator&quot;&gt;comparator에&lt;/a&gt; 의해 지정된 순서에 따라 적절한 위치에 배열을 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="af92791ea6ee6d6d22da0220657548b203875847" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;../../kotlin.collections/sort-with#kotlin.collections%24sortWith(kotlin.Array((kotlin.collections.sortWith.T)),%20java.util.Comparator((kotlin.collections.sortWith.T)))/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">주어진 &lt;a href=&quot;../../kotlin.collections/sort-with#kotlin.collections%24sortWith(kotlin.Array((kotlin.collections.sortWith.T)),%20java.util.Comparator((kotlin.collections.sortWith.T)))/comparator&quot;&gt;comparator에서&lt;/a&gt; 지정한 순서에 따라 배열을 제자리에서 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="6ceaa28ff8b5e20a64c1dd76210809e53340579a" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;sort#kotlin.collections%24sort%28kotlin.Array%28%28kotlin.collections.sort.T%29%29%2C+kotlin.Function2%28%28kotlin.collections.sort.T%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">주어진 &lt;a href=&quot;sort#kotlin.collections%24sort%28kotlin.Array%28%28kotlin.collections.sort.T%29%29%2C+kotlin.Function2%28%28kotlin.collections.sort.T%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;비교&lt;/a&gt; 함수에 의해 지정된 순서에 따라 배열을 적절하게 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="dbb39b6e7209d703010d1dea803d9e9f184dfb3a" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;sort#kotlin.collections%24sort%28kotlin.ByteArray%2C+kotlin.Function2%28%28kotlin.Byte%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">주어진 &lt;a href=&quot;sort#kotlin.collections%24sort%28kotlin.ByteArray%2C+kotlin.Function2%28%28kotlin.Byte%2C+%2C+kotlin.Int%29%29%29%2Fcomparison&quot;&gt;비교&lt;/a&gt; 함수에 의해 지정된 순서에 따라 배열을 적절하게 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="e363a91bc377e2dc1cd26c0f020a22cd2d9e7d60" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;sort#kotlin.collections%24sort(kotlin.Array((kotlin.collections.sort.T)),%20kotlin.Function2((kotlin.collections.sort.T,%20,%20kotlin.Int)))/comparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">주어진 &lt;a href=&quot;sort#kotlin.collections%24sort(kotlin.Array((kotlin.collections.sort.T)),%20kotlin.Function2((kotlin.collections.sort.T,%20,%20kotlin.Int)))/comparison&quot;&gt;비교&lt;/a&gt; 함수 에서 지정한 순서에 따라 배열을 제자리에서 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="70a950e4b0a885649ef8eb42fd69f7d9fccd7744" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;sort#kotlin.collections%24sort(kotlin.ByteArray,%20kotlin.Function2((kotlin.Byte,%20,%20kotlin.Int)))/comparison&quot;&gt;comparison&lt;/a&gt; function.</source>
          <target state="translated">주어진 &lt;a href=&quot;sort#kotlin.collections%24sort(kotlin.ByteArray,%20kotlin.Function2((kotlin.Byte,%20,%20kotlin.Int)))/comparison&quot;&gt;비교&lt;/a&gt; 함수 에서 지정한 순서에 따라 배열을 제자리에서 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="0fa5aed9839230cbb9bbcaa97445de61b613d5ee" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;sort-with#kotlin.collections%24sortWith%28kotlin.Array%28%28kotlin.collections.sortWith.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.sortWith.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;sort-with#kotlin.collections%24sortWith%28kotlin.Array%28%28kotlin.collections.sortWith.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.sortWith.T%29%29%29%2Fcomparator&quot;&gt;comparator에&lt;/a&gt; 의해 지정된 순서에 따라 적절한 위치에 배열을 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="ae101b411aaa730dbbdac995beae34b884882ebe" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;sort-with#kotlin.collections%24sortWith%28kotlin.Array%28%28kotlin.collections.sortWith.T%29%29%2C+kotlin.Comparator%28%28kotlin.collections.sortWith.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;sort-with#kotlin.collections%24sortWith%28kotlin.Array%28%28kotlin.collections.sortWith.T%29%29%2C+kotlin.Comparator%28%28kotlin.collections.sortWith.T%29%29%29%2Fcomparator&quot;&gt;comparator에&lt;/a&gt; 의해 지정된 순서에 따라 적절한 위치에 배열을 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="e9bb0004209ee2991798c36960e91ab537d041fe" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;sort-with#kotlin.collections%24sortWith(kotlin.Array((kotlin.collections.sortWith.T)),%20java.util.Comparator((kotlin.collections.sortWith.T)))/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">주어진 &lt;a href=&quot;sort-with#kotlin.collections%24sortWith(kotlin.Array((kotlin.collections.sortWith.T)),%20java.util.Comparator((kotlin.collections.sortWith.T)))/comparator&quot;&gt;comparator에서&lt;/a&gt; 지정한 순서에 따라 배열을 제자리에서 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="1bbc6b3dbd2ee856625f928ed05caaadf58b1098" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place according to the order specified by the given &lt;a href=&quot;sort-with#kotlin.collections%24sortWith(kotlin.Array((kotlin.collections.sortWith.T)),%20kotlin.Comparator((kotlin.collections.sortWith.T)))/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">주어진 &lt;a href=&quot;sort-with#kotlin.collections%24sortWith(kotlin.Array((kotlin.collections.sortWith.T)),%20kotlin.Comparator((kotlin.collections.sortWith.T)))/comparator&quot;&gt;comparator에서&lt;/a&gt; 지정한 순서에 따라 배열을 제자리에서 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="4770f48b5aef319d4b83ff34a0f71504fb9289b9" translate="yes" xml:space="preserve">
          <source>Sorts the array in-place.</source>
          <target state="translated">배열을 제자리에 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="7ca4493ee7745c260d2545e5a7bcb290392c92d7" translate="yes" xml:space="preserve">
          <source>Source and binary compatibility may have different modes for the same component, e.g. the source language can reach full stability before the binary format stabilizes, or vice versa.</source>
          <target state="translated">소스 및 이진 호환성은 동일한 구성 요소에 대해 서로 다른 모드를 가질 수 있습니다. 예를 들어, 소스 언어는 이진 형식이 안정화되기 전에 전체 안정성에 도달 할 수 있으며 그 반대도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="2dcfc2bd4a05ff58d81210efcb67bf27a9d1018d" translate="yes" xml:space="preserve">
          <source>Source code organization</source>
          <target state="translated">소스 코드 조직</target>
        </trans-unit>
        <trans-unit id="91b779a28949d8daf60f28816366c445cff3b975" translate="yes" xml:space="preserve">
          <source>Source file names</source>
          <target state="translated">소스 파일 이름</target>
        </trans-unit>
        <trans-unit id="b8b646a7bd4b1ccfe7716e24991769415bb7ad29" translate="yes" xml:space="preserve">
          <source>Source file organization</source>
          <target state="translated">소스 파일 구성</target>
        </trans-unit>
        <trans-unit id="ba5b3110bc5e4b2e8ea36f406acb0d11147c336c" translate="yes" xml:space="preserve">
          <source>Source management</source>
          <target state="translated">소스 관리</target>
        </trans-unit>
        <trans-unit id="83330f3a77279d034f4be00739a614f19c8cd41b" translate="yes" xml:space="preserve">
          <source>Source management in the &lt;code&gt;kotlin.platform.native&lt;/code&gt; plugin is uniform with other Kotlin plugins and is based on source sets. A source set is a group of Kotlin/Native source which may contain both common and platform-specific code. The plugin provides a top-level script block &lt;code&gt;sourceSets&lt;/code&gt; allowing you to configure source sets. Also it creates the default source sets &lt;code&gt;main&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; (for production and test code respectively).</source>
          <target state="translated">&lt;code&gt;kotlin.platform.native&lt;/code&gt; 플러그인의 소스 관리는 다른 Kotlin 플러그인과 동일하며 소스 세트를 기반으로합니다. 소스 세트는 공통 코드와 플랫폼 특정 코드를 모두 포함 할 수있는 Kotlin / Native 소스 그룹입니다. 플러그인은 소스 세트를 구성 할 수있는 최상위 스크립트 블록 &lt;code&gt;sourceSets&lt;/code&gt; 제공 합니다. 또한 기본 소스 세트 &lt;code&gt;main&lt;/code&gt; 및 &lt;code&gt;test&lt;/code&gt; (각각 프로덕션 및 테스트 코드 용)를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="5a04b704bdb00ffe1d818abc41c5dce1bdc2534c" translate="yes" xml:space="preserve">
          <source>Source maps generation</source>
          <target state="translated">소스 맵 생성</target>
        </trans-unit>
        <trans-unit id="3a1fb36854fc215c5a42ea8c907f8bd110153a70" translate="yes" xml:space="preserve">
          <source>Source set dependencies can also be declared in the top-level &lt;code&gt;dependencies&lt;/code&gt; block of the build script. In this case, their declarations follow the pattern &lt;code&gt;&amp;lt;sourceSetName&amp;gt;&amp;lt;DependencyKind&amp;gt;&lt;/code&gt;, for example, &lt;code&gt;commonMainApi&lt;/code&gt;.</source>
          <target state="translated">소스 세트 종속성은 빌드 스크립트의 최상위 &lt;code&gt;dependencies&lt;/code&gt; 블록 에서도 선언 할 수 있습니다 . 이 경우 선언은 &lt;code&gt;&amp;lt;sourceSetName&amp;gt;&amp;lt;DependencyKind&amp;gt;&lt;/code&gt; 패턴을 따릅니다 ( 예 : &lt;code&gt;commonMainApi&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="f0c84298e00352e684c651b8707f885d889884fa" translate="yes" xml:space="preserve">
          <source>Source set names are case sensitive.</source>
          <target state="translated">소스 세트 이름은 대소 문자를 구분합니다.</target>
        </trans-unit>
        <trans-unit id="5f0f55d257ec2fab62cd95595ecdb3e0df948930" translate="yes" xml:space="preserve">
          <source>Source set parameters</source>
          <target state="translated">소스 세트 매개 변수</target>
        </trans-unit>
        <trans-unit id="15e41f4b17a880b8283a16b3a922b0eb072eb8ed" translate="yes" xml:space="preserve">
          <source>Source sets</source>
          <target state="translated">소스 세트</target>
        </trans-unit>
        <trans-unit id="df1f369fc3f5d0f6aefc546af4fc733b7da5ac83" translate="yes" xml:space="preserve">
          <source>Source sets are added to the &lt;code&gt;sourceSets&lt;/code&gt; block of the top-level &lt;code&gt;kotlin&lt;/code&gt; block.</source>
          <target state="translated">원본 세트가 추가되어 &lt;code&gt;sourceSets&lt;/code&gt; 의 최상위 블록 &lt;code&gt;kotlin&lt;/code&gt; 블록.</target>
        </trans-unit>
        <trans-unit id="708a466fe6dad98c570f231d1548d606e08ba67c" translate="yes" xml:space="preserve">
          <source>Source sets can now be shared between an arbitrary subset of platforms (for example, in a module that targets JS, Android and iOS, you can have a source set that is shared only between Android and iOS).</source>
          <target state="translated">소스 세트는 이제 임의 플랫폼 하위 세트간에 공유 할 수 있습니다 (예 : JS, Android 및 iOS를 대상으로하는 모듈에서는 Android와 iOS간에 만 공유되는 소스 세트를 가질 수 있음).</target>
        </trans-unit>
        <trans-unit id="a179b7b1706e0fe67d7be610c4d8dd1c8013e437" translate="yes" xml:space="preserve">
          <source>Source sets form a hierarchy, which is used for sharing the common code. In a source set shared among several targets, you can use the platform-specific language features and dependencies that are available for all these targets.</source>
          <target state="translated">소스 세트는 공통 코드를 공유하는 데 사용되는 계층 구조를 형성합니다. 여러 대상간에 공유되는 소스 세트에서 이러한 모든 대상에 사용할 수있는 플랫폼 별 언어 기능 및 종속성을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d81fa9338d2f277e93ab53d4e7c670340e5287f" translate="yes" xml:space="preserve">
          <source>Source sets participating in the compilation and their connections via &lt;code&gt;dependsOn()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dependsOn()&lt;/code&gt; 통해 컴파일 및 연결에 참여하는 소스 세트 .</target>
        </trans-unit>
        <trans-unit id="8140a2e3acdf49cd3399aced21db07013d331e20" translate="yes" xml:space="preserve">
          <source>Source sets participating in the compilation.</source>
          <target state="translated">컴파일에 참여하는 소스 세트.</target>
        </trans-unit>
        <trans-unit id="2feb63b3ff19c42a8edc6ffc039220ef18a5c33f" translate="yes" xml:space="preserve">
          <source>Source: source-incompatible change stops code that used to compile fine (without errors or warnings) from compiling anymore</source>
          <target state="translated">출처 : 소스 비 호환 변경으로 더 이상 오류나 경고없이 컴파일하는 데 사용 된 코드가 더 이상 컴파일되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7ab8a35d5b56ed27ea2aeaf613f924074e07d76f" translate="yes" xml:space="preserve">
          <source>Sources of &lt;code&gt;jvmMain&lt;/code&gt; 'see' the declarations of &lt;code&gt;commonMain&lt;/code&gt;, including internal declarations, and also see the &lt;a href=&quot;mpp-add-dependencies&quot;&gt;dependencies&lt;/a&gt; of &lt;code&gt;commonMain&lt;/code&gt;, even those specified as &lt;code&gt;implementation&lt;/code&gt; dependencies.</source>
          <target state="translated">&lt;code&gt;jvmMain&lt;/code&gt; 의 소스는 내부 선언을 포함하여 &lt;code&gt;commonMain&lt;/code&gt; 의 선언을 '참조'하고 , &lt;code&gt;implementation&lt;/code&gt; 종속성으로 지정된 경우에도 &lt;code&gt;commonMain&lt;/code&gt; 의 &lt;a href=&quot;mpp-add-dependencies&quot;&gt;종속성&lt;/a&gt; 을 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="44f1fc4c183f95acabbc53da2abac4d4f1206e1e" translate="yes" xml:space="preserve">
          <source>Special Cases:</source>
          <target state="translated">특수한 상황들:</target>
        </trans-unit>
        <trans-unit id="3e47d59ad303a035e3cd65578d432eefaa1b80ed" translate="yes" xml:space="preserve">
          <source>Special Identifiers</source>
          <target state="translated">특수 식별자</target>
        </trans-unit>
        <trans-unit id="da9712bd56acfa78d3913a233d114cc9c2158cd7" translate="yes" xml:space="preserve">
          <source>Special case:</source>
          <target state="translated">특별한 상황:</target>
        </trans-unit>
        <trans-unit id="56064f3962c04c365c47471ff7513622d3ab0964" translate="yes" xml:space="preserve">
          <source>Special cases:</source>
          <target state="translated">특수한 상황들:</target>
        </trans-unit>
        <trans-unit id="c50a4829b036375e75f919f98b4f3fb6147ea678" translate="yes" xml:space="preserve">
          <source>Special cases: - &lt;code&gt;acos(x)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;, when &lt;code&gt;abs(x) &amp;gt; 1&lt;/code&gt; or x is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">특별한 경우 : - &lt;code&gt;acos(x)&lt;/code&gt; 있다 &lt;code&gt;NaN&lt;/code&gt; 의 , &lt;code&gt;abs(x) &amp;gt; 1&lt;/code&gt; 또는 x가 &lt;code&gt;NaN&lt;/code&gt; 의</target>
        </trans-unit>
        <trans-unit id="87ab084bbfabe196612e1b63be02ed62abd6f7a4" translate="yes" xml:space="preserve">
          <source>Special cases: - &lt;code&gt;asin(x)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;, when &lt;code&gt;abs(x) &amp;gt; 1&lt;/code&gt; or x is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">특별한 경우 : - &lt;code&gt;asin(x)&lt;/code&gt; 이다 &lt;code&gt;NaN&lt;/code&gt; 의 경우, &lt;code&gt;abs(x) &amp;gt; 1&lt;/code&gt; 또는 x가 &lt;code&gt;NaN&lt;/code&gt; 의</target>
        </trans-unit>
        <trans-unit id="80224f054ccac92a6dba14551f00788e44fb6cea" translate="yes" xml:space="preserve">
          <source>Special cases: - &lt;code&gt;x.IEEErem(y)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;, when &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; or &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;+Inf|-Inf&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt; is zero. - &lt;code&gt;x.IEEErem(y) == x&lt;/code&gt; when &lt;code&gt;x&lt;/code&gt; is finite and &lt;code&gt;y&lt;/code&gt; is infinite.</source>
          <target state="translated">특별한 경우 : - &lt;code&gt;x.IEEErem(y)&lt;/code&gt; 있다 &lt;code&gt;NaN&lt;/code&gt; 의 경우, &lt;code&gt;x&lt;/code&gt; 입니다 &lt;code&gt;NaN&lt;/code&gt; 의 또는 &lt;code&gt;y&lt;/code&gt; 는 이다 &lt;code&gt;NaN&lt;/code&gt; 의 또는 &lt;code&gt;x&lt;/code&gt; 입니다 &lt;code&gt;+Inf|-Inf&lt;/code&gt; 또는 &lt;code&gt;y&lt;/code&gt; 는 제로이다. - &lt;code&gt;x.IEEErem(y) == x&lt;/code&gt; 때 &lt;code&gt;x&lt;/code&gt; 유한이고 &lt;code&gt;y&lt;/code&gt; 무한하다.</target>
        </trans-unit>
        <trans-unit id="396f015dcc0a4c9a33dfce58b73cb0338669c047" translate="yes" xml:space="preserve">
          <source>Specialized classes</source>
          <target state="translated">전문화 된 수업</target>
        </trans-unit>
        <trans-unit id="80214f6fe7568d1fe2eee4a6a25be91492189547" translate="yes" xml:space="preserve">
          <source>Specific return type. The return type moves away from the actual data that we need and instead returns a new type &lt;code&gt;Promise&lt;/code&gt; which has to be introspected.</source>
          <target state="translated">특정 반품 유형 반환 유형은 필요한 실제 데이터에서 멀어지고 대신 검사해야 할 새 유형 &lt;code&gt;Promise&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="10be766e1422f005154bcf107bfdb65683d40144" translate="yes" xml:space="preserve">
          <source>Specifies a code fragment that can be used to replace a deprecated function, property or class. Tools such as IDEs can automatically apply the replacements specified through this annotation.</source>
          <target state="translated">더 이상 사용되지 않는 함수, 속성 또는 클래스를 바꾸는 데 사용할 수있는 코드 조각을 지정합니다. IDE와 같은 도구는이 주석을 통해 지정된 대체를 자동으로 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e79b774805d0e487b261afea40d86497adec80c0" translate="yes" xml:space="preserve">
          <source>Specifies build variants to publish. Learn more about &lt;a href=&quot;mpp-publish-lib#publish-an-android-library&quot;&gt;publishing Android libraries&lt;/a&gt;.</source>
          <target state="translated">게시 할 빌드 변형을 지정합니다. &lt;a href=&quot;mpp-publish-lib#publish-an-android-library&quot;&gt;Android 라이브러리 게시에&lt;/a&gt; 대해 자세히 알아보세요 .</target>
        </trans-unit>
        <trans-unit id="f6bde6daa244f6b004cb3386a82fc9dfe647f4b6" translate="yes" xml:space="preserve">
          <source>Specifies how a &lt;a href=&quot;-lazy/index&quot;&gt;Lazy&lt;/a&gt; instance synchronizes initialization among multiple threads.</source>
          <target state="translated">&lt;a href=&quot;-lazy/index&quot;&gt;지연&lt;/a&gt; 인스턴스가 여러 스레드간에 초기화를 동기화 하는 방법을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="7a34891c3f008a377113c6728bb426ade078566a" translate="yes" xml:space="preserve">
          <source>Specifies how a &lt;a href=&quot;../-lazy/index&quot;&gt;Lazy&lt;/a&gt; instance synchronizes initialization among multiple threads.</source>
          <target state="translated">&lt;a href=&quot;../-lazy/index&quot;&gt;지연&lt;/a&gt; 인스턴스가 여러 스레드간에 초기화를 동기화 하는 방법을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="c4f0b89f9b2bcd589a457d848fb7af8fa36d078a" translate="yes" xml:space="preserve">
          <source>Specifies how many times a function invokes its function parameter in place.</source>
          <target state="translated">함수가 함수 매개 변수를 호출하는 횟수를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="e23535d6faf71a1a72da5d8b0c47cb4ff5c68bd4" translate="yes" xml:space="preserve">
          <source>Specifies how the deprecated element usages are reported in code. See the &lt;a href=&quot;../-deprecation-level/index#kotlin.DeprecationLevel&quot;&gt;DeprecationLevel&lt;/a&gt; enum for the possible values.</source>
          <target state="translated">더 이상 사용되지 않는 요소 사용법이 코드로보고되는 방식을 지정합니다. 가능한 값 은 &lt;a href=&quot;../-deprecation-level/index#kotlin.DeprecationLevel&quot;&gt;DeprecationLevel&lt;/a&gt; 열거를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1273973520fb373ff0923e2955fc0a8aa51d89ca" translate="yes" xml:space="preserve">
          <source>Specifies that a JVM default method should be generated for non-abstract Kotlin interface member.</source>
          <target state="translated">비추 상 Kotlin 인터페이스 멤버에 대해 JVM 기본 메소드를 생성하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="0d858352b2faa2364259e1d1426fda7094887ac3" translate="yes" xml:space="preserve">
          <source>Specifies that a warning should be reported on incorrect usages of this API.</source>
          <target state="translated">이 API의 잘못된 사용에 대해 경고를보고하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="1b608a06a3ef3e2f1977895180f9d7cd6dab326f" translate="yes" xml:space="preserve">
          <source>Specifies that a warning should be reported on incorrect usages of this experimental API.</source>
          <target state="translated">이 실험 API의 잘못된 사용법에 대해 경고가보고되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="9ad2d2ca6b5a6cc26f2cb4f5defb3fa422218068" translate="yes" xml:space="preserve">
          <source>Specifies that an additional static method needs to be generated from this element if it's a function. If this element is a property, additional static getter/setter methods should be generated.</source>
          <target state="translated">이 요소가 함수 인 경우 추가 정적 메소드를 생성해야 함을 지정합니다. 이 요소가 특성이면 추가 정적 getter / setter 메소드가 생성되어야합니다.</target>
        </trans-unit>
        <trans-unit id="065827239ea2e06c76078cee19213f416fe66445" translate="yes" xml:space="preserve">
          <source>Specifies that an error should be reported on incorrect usages of this API.</source>
          <target state="translated">이 API의 잘못된 사용에 대해 오류를보고해야 함을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="41dca1654db714e11bbcbe786e5e6118d5a8481b" translate="yes" xml:space="preserve">
          <source>Specifies that an error should be reported on incorrect usages of this experimental API.</source>
          <target state="translated">이 실험용 API를 잘못 사용하면 오류가보고되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b8fb6a1c5d45c4db1467991d5c234e6ab817a1e3" translate="yes" xml:space="preserve">
          <source>Specifies that the function parameter &lt;a href=&quot;calls-in-place#kotlin.contracts.ContractBuilder%24callsInPlace%28kotlin.Function%28%28kotlin.contracts.ContractBuilder.callsInPlace.R%29%29%2C+kotlin.contracts.InvocationKind%29%2Flambda&quot;&gt;lambda&lt;/a&gt; is invoked in place.</source>
          <target state="translated">함수 매개 변수 &lt;a href=&quot;calls-in-place#kotlin.contracts.ContractBuilder%24callsInPlace%28kotlin.Function%28%28kotlin.contracts.ContractBuilder.callsInPlace.R%29%29%2C+kotlin.contracts.InvocationKind%29%2Flambda&quot;&gt;lambda&lt;/a&gt; 가 호출 되도록 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="ddc7e85b467ba745554b9fbe336e7c79ad8bfb02" translate="yes" xml:space="preserve">
          <source>Specifies that the function parameter &lt;a href=&quot;calls-in-place#kotlin.contracts.ContractBuilder%24callsInPlace(kotlin.Function((kotlin.contracts.ContractBuilder.callsInPlace.R)),%20kotlin.contracts.InvocationKind)/lambda&quot;&gt;lambda&lt;/a&gt; is invoked in place.</source>
          <target state="translated">함수 매개 변수 &lt;a href=&quot;calls-in-place#kotlin.contracts.ContractBuilder%24callsInPlace(kotlin.Function((kotlin.contracts.ContractBuilder.callsInPlace.R)),%20kotlin.contracts.InvocationKind)/lambda&quot;&gt;람다&lt;/a&gt; 가 제자리에서 호출 되도록 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="9dbed9849f2069fc0d07922505e1643863d85c42" translate="yes" xml:space="preserve">
          <source>Specifies that this effect, when observed, guarantees &lt;a href=&quot;implies#kotlin.contracts.SimpleEffect%24implies%28kotlin.Boolean%29%2FbooleanExpression&quot;&gt;booleanExpression&lt;/a&gt; to be true.</source>
          <target state="translated">이 효과가 관찰되면 &lt;a href=&quot;implies#kotlin.contracts.SimpleEffect%24implies%28kotlin.Boolean%29%2FbooleanExpression&quot;&gt;booleanExpression&lt;/a&gt; 이 true가되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="0f0531ff91395c01803a017387912d23059522ce" translate="yes" xml:space="preserve">
          <source>Specifies that this effect, when observed, guarantees &lt;a href=&quot;implies#kotlin.contracts.SimpleEffect%24implies(kotlin.Boolean)/booleanExpression&quot;&gt;booleanExpression&lt;/a&gt; to be true.</source>
          <target state="translated">이 효과가 관찰되면 &lt;a href=&quot;implies#kotlin.contracts.SimpleEffect%24implies(kotlin.Boolean)/booleanExpression&quot;&gt;booleanExpression&lt;/a&gt; 이 true가되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="d54eb0bc950c7ef72bd2aa203d75cecf873009a2" translate="yes" xml:space="preserve">
          <source>Specifies the author of the element being documented.</source>
          <target state="translated">문서화되는 요소의 작성자를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="7439a2699ea30bac21819e499a0c348bf4db5a53" translate="yes" xml:space="preserve">
          <source>Specifies the contract of a function.</source>
          <target state="translated">함수 계약을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="668aabdaa85311d5948645d77876f75a16affd74" translate="yes" xml:space="preserve">
          <source>Specifies the first version of Kotlin where a declaration has appeared. Using the declaration and specifying an older API version (via the &lt;code&gt;-api-version&lt;/code&gt; command line option) will result in an error.</source>
          <target state="translated">선언이 나타난 Kotlin의 첫 번째 버전을 지정합니다. 선언을 사용하고 &lt;code&gt;-api-version&lt;/code&gt; 명령 행 옵션을 통해 이전 API 버전을 지정 하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2e19852d4c7f63b915b4f0748c65b97fb769383f" translate="yes" xml:space="preserve">
          <source>Specifies the name for the Java class or method which is generated from this element.</source>
          <target state="translated">이 요소에서 생성 된 Java 클래스 또는 메소드의 이름을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a687435bfccbdd96f3fa9d60bae94e072182829e" translate="yes" xml:space="preserve">
          <source>Specifies the version of the software in which the element being documented was introduced.</source>
          <target state="translated">문서화되는 요소가 도입 된 소프트웨어의 버전을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b880d1b1c120b168d2127299edae89e5755b3cb1" translate="yes" xml:space="preserve">
          <source>Specify a custom path to the Kotlin compiler used for the discovery of runtime libraries.</source>
          <target state="translated">런타임 라이브러리 검색에 사용되는 Kotlin 컴파일러의 커스텀 경로를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="37332e37dea33f02c76d57995c2bd4f40e5b356c" translate="yes" xml:space="preserve">
          <source>Specify a name for the compilation module. This option can also be used to specify a name prefix for the declarations exported to Objective-C: &lt;a href=&quot;native/faq#q-how-do-i-specify-a-custom-objective-c-prefixname-for-my-kotlin-framework&quot;&gt;How do I specify a custom Objective-C prefix/name for my Kotlin framework?&lt;/a&gt;</source>
          <target state="translated">컴파일 모듈의 이름을 지정하십시오. 이 옵션을 사용하여 Objective-C로 내 보낸 선언의 이름 접두사를 지정할 수도 있습니다. &lt;a href=&quot;native/faq#q-how-do-i-specify-a-custom-objective-c-prefixname-for-my-kotlin-framework&quot;&gt;Kotlin 프레임 워크에 대해 사용자 지정 Objective-C 접두사 / 이름을 지정하려면 어떻게해야하나요?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3b84ac24e6563e1493129c28f39a49827b92d10a" translate="yes" xml:space="preserve">
          <source>Specify output file kind:</source>
          <target state="translated">출력 파일 종류 지정 :</target>
        </trans-unit>
        <trans-unit id="dbd3aa74caa66aa1f9a263de8d4bb57fed5de21f" translate="yes" xml:space="preserve">
          <source>Specify the hierarchy of source sets using the &lt;code&gt;dependsOn&lt;/code&gt; relation.</source>
          <target state="translated">&lt;code&gt;dependsOn&lt;/code&gt; 관계를 사용하여 소스 세트의 계층을 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="6a2ab35cdf92e0eb70a7b68a20b9148e819131c6" translate="yes" xml:space="preserve">
          <source>Specify the minimum target version for the Pod library.</source>
          <target state="translated">Pod 라이브러리의 최소 대상 버전을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="206bd3ec9809e234cc98c928ea2223ad7cd481ab" translate="yes" xml:space="preserve">
          <source>Specify the qualified entry point name.</source>
          <target state="translated">규정 된 진입 점 이름을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="ced3489c92d36759c06a259cd3cf15cca6e788e7" translate="yes" xml:space="preserve">
          <source>Specify the target version of the generated JVM bytecode. Possible values are &lt;code&gt;1.6&lt;/code&gt;, &lt;code&gt;1.8&lt;/code&gt;, &lt;code&gt;9&lt;/code&gt;, &lt;code&gt;10&lt;/code&gt;, &lt;code&gt;11&lt;/code&gt;, &lt;code&gt;12&lt;/code&gt;, &lt;code&gt;13&lt;/code&gt; and &lt;code&gt;14&lt;/code&gt;. The default value is &lt;code&gt;1.6&lt;/code&gt;.</source>
          <target state="translated">생성 된 JVM 바이트 코드의 대상 버전을 지정하십시오. 가능한 값은 &lt;code&gt;1.6&lt;/code&gt; , &lt;code&gt;1.8&lt;/code&gt; , &lt;code&gt;9&lt;/code&gt; , &lt;code&gt;10&lt;/code&gt; , &lt;code&gt;11&lt;/code&gt; , &lt;code&gt;12&lt;/code&gt; , &lt;code&gt;13&lt;/code&gt; 및 &lt;code&gt;14&lt;/code&gt; 입니다. 기본값은 &lt;code&gt;1.6&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2ecfae74b60c500bf98eff24ffe25a09c3d987a3" translate="yes" xml:space="preserve">
          <source>Specifying compiler options</source>
          <target state="translated">컴파일러 옵션 지정</target>
        </trans-unit>
        <trans-unit id="b2c93dc86ebcef72b0189e3954c689f2ede5ae2a" translate="yes" xml:space="preserve">
          <source>Specifying dependencies only once</source>
          <target state="translated">종속성을 한 번만 지정</target>
        </trans-unit>
        <trans-unit id="90792c6da71d4fa190c48e9cac79bf8247d8d33b" translate="yes" xml:space="preserve">
          <source>Specifying kotlinx dependencies only once</source>
          <target state="translated">kotlinx 종속성을 한 번만 지정</target>
        </trans-unit>
        <trans-unit id="b480fdbc738e688b220525f44187624b8dee5660" translate="yes" xml:space="preserve">
          <source>Specifying the type explicitly</source>
          <target state="translated">유형을 명시 적으로 지정</target>
        </trans-unit>
        <trans-unit id="746ebe7b30c04844a0a6acb84ceeeab7bfb3222b" translate="yes" xml:space="preserve">
          <source>Splits the &lt;a href=&quot;split#kotlin.text.Regex%24split%28kotlin.CharSequence%2C+kotlin.Int%29%2Finput&quot;&gt;input&lt;/a&gt; CharSequence around matches of this regular expression.</source>
          <target state="translated">이 정규 표현식과 일치 하는 &lt;a href=&quot;split#kotlin.text.Regex%24split%28kotlin.CharSequence%2C+kotlin.Int%29%2Finput&quot;&gt;입력&lt;/a&gt; CharSequence를 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="08699f935afbcbe3d27cfb1a9658ffde1d8c628f" translate="yes" xml:space="preserve">
          <source>Splits the &lt;a href=&quot;split#kotlin.text.Regex%24split(kotlin.CharSequence,%20kotlin.Int)/input&quot;&gt;input&lt;/a&gt; CharSequence around matches of this regular expression.</source>
          <target state="translated">이 정규식의 일치 항목을 중심으로 &lt;a href=&quot;split#kotlin.text.Regex%24split(kotlin.CharSequence,%20kotlin.Int)/input&quot;&gt;입력&lt;/a&gt; CharSequence를 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="889fa2d0788d1531abe076f806167d469446a8f8" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.Array%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.Array%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래 배열을 목록 쌍으로 분할합니다. &lt;em&gt;첫 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.Array%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 생성 한 요소가 포함 되고 , &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.Array%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="f8c682ed4a61277f6e6fef2ed839395919a64a6f" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.BooleanArray%2C+kotlin.Function1%28%28kotlin.Boolean%2C+%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.BooleanArray%2C+kotlin.Function1%28%28kotlin.Boolean%2C+%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래 배열을 목록 쌍으로 분할합니다. &lt;em&gt;첫 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.BooleanArray%2C+kotlin.Function1%28%28kotlin.Boolean%2C+%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 생성 한 요소가 포함 되고 , &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.BooleanArray%2C+kotlin.Function1%28%28kotlin.Boolean%2C+%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="6057dd4ee229b6bb485f8071e494d337b4c9c199" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.ByteArray%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.ByteArray%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래 배열을 목록 쌍으로 분할합니다. &lt;em&gt;첫 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.ByteArray%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 생성 한 요소가 포함 되고 , &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.ByteArray%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="36e78b5dbb516213087cd4a2cc82f8f5c89f375e" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.CharArray%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.CharArray%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래 배열을 목록 쌍으로 분할합니다. &lt;em&gt;첫 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.CharArray%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 생성 한 요소가 포함 되고 , &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.CharArray%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="188c266d70ce2d849ff0de3b5932cdf9da587e53" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.DoubleArray%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.DoubleArray%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래 배열을 목록 쌍으로 분할합니다. &lt;em&gt;첫 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.DoubleArray%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 생성 한 요소가 포함 되고 , &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.DoubleArray%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="2ff97334e8cd4ed34e1a92b3b104f2b5bdaf4fbb" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.FloatArray%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.FloatArray%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래 배열을 목록 쌍으로 분할합니다. &lt;em&gt;첫 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.FloatArray%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 생성 한 요소가 포함 되고 , &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.FloatArray%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="33204572ae494c8da3e3225aed2c1e38da7a21ec" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.IntArray%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.IntArray%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래 배열을 목록 쌍으로 분할합니다. &lt;em&gt;첫 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.IntArray%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 생성 한 요소가 포함 되고 , &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.IntArray%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="79b98ebd0576ac1d5b9a0ddfe5682da001dd4f39" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.LongArray%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.LongArray%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래 배열을 목록 쌍으로 분할합니다. &lt;em&gt;첫 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.LongArray%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 생성 한 요소가 포함 되고 , &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.LongArray%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="d84eb1d37eef2994f2317dd6d168249568c0d6e4" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.ShortArray%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.ShortArray%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래 배열을 목록 쌍으로 분할합니다. &lt;em&gt;첫 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.ShortArray%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 생성 한 요소가 포함 되고 , &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.ShortArray%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="469d1aaa39f881891fbb5aabfcc01cc364cb2742" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.Array((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.Array((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래 배열을 목록 쌍으로 분할합니다. 여기서 &lt;em&gt;첫 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.Array((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 산출 한 요소가 포함 되고 &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.Array((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="3dd8b830c86a4857797960f2d7d66dfaa7d2c971" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.BooleanArray,%20kotlin.Function1((kotlin.Boolean,%20)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.BooleanArray,%20kotlin.Function1((kotlin.Boolean,%20)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래 배열을 목록 쌍으로 분할합니다. 여기서 &lt;em&gt;첫 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.BooleanArray,%20kotlin.Function1((kotlin.Boolean,%20)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 산출 한 요소가 포함 되고 &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.BooleanArray,%20kotlin.Function1((kotlin.Boolean,%20)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="7c42fc7228361c2371d6a5ecd46c632501220f40" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.ByteArray,%20kotlin.Function1((kotlin.Byte,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.ByteArray,%20kotlin.Function1((kotlin.Byte,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래 배열을 목록 쌍으로 분할합니다. 여기서 &lt;em&gt;첫 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.ByteArray,%20kotlin.Function1((kotlin.Byte,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 산출 한 요소가 포함 되고 &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.ByteArray,%20kotlin.Function1((kotlin.Byte,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="1a5ec76d2caa29fdf8ddb75556d9d7d3e8a36bca" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.CharArray,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.CharArray,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래 배열을 목록 쌍으로 분할합니다. 여기서 &lt;em&gt;첫 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.CharArray,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 산출 한 요소가 포함 되고 &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.CharArray,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="ea7b25ae7c744cee7e75908d2f8155b496c3c347" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.DoubleArray,%20kotlin.Function1((kotlin.Double,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.DoubleArray,%20kotlin.Function1((kotlin.Double,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래 배열을 목록 쌍으로 분할합니다. 여기서 &lt;em&gt;첫 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.DoubleArray,%20kotlin.Function1((kotlin.Double,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 산출 한 요소가 포함 되고 &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.DoubleArray,%20kotlin.Function1((kotlin.Double,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="c271b78e2206b0f220d21e1f8e7eb71f71ea50eb" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.FloatArray,%20kotlin.Function1((kotlin.Float,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.FloatArray,%20kotlin.Function1((kotlin.Float,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래 배열을 목록 쌍으로 분할합니다. 여기서 &lt;em&gt;첫 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.FloatArray,%20kotlin.Function1((kotlin.Float,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 산출 한 요소가 포함 되고 &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.FloatArray,%20kotlin.Function1((kotlin.Float,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="43df9d3a9757b261b71c3d273263779c79744f23" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.IntArray,%20kotlin.Function1((kotlin.Int,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.IntArray,%20kotlin.Function1((kotlin.Int,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래 배열을 목록 쌍으로 분할합니다. 여기서 &lt;em&gt;첫 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.IntArray,%20kotlin.Function1((kotlin.Int,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 산출 한 요소가 포함 되고 &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.IntArray,%20kotlin.Function1((kotlin.Int,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="f3bc0c194fa72da2f88cd58e958441fa8e555a9c" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.LongArray,%20kotlin.Function1((kotlin.Long,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.LongArray,%20kotlin.Function1((kotlin.Long,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래 배열을 목록 쌍으로 분할합니다. 여기서 &lt;em&gt;첫 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.LongArray,%20kotlin.Function1((kotlin.Long,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 산출 한 요소가 포함 되고 &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.LongArray,%20kotlin.Function1((kotlin.Long,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="67234f2812035a75454135013d3423c4b4ce51a4" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.ShortArray,%20kotlin.Function1((kotlin.Short,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.ShortArray,%20kotlin.Function1((kotlin.Short,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래 배열을 목록 쌍으로 분할합니다. 여기서 &lt;em&gt;첫 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.ShortArray,%20kotlin.Function1((kotlin.Short,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 산출 한 요소가 포함 되고 &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.ShortArray,%20kotlin.Function1((kotlin.Short,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="b8083df548af87e3622d6abccfa8e78274a64c6f" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;partition#kotlin.collections%24partition%28kotlin.Array%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;partition#kotlin.collections%24partition%28kotlin.Array%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래 배열을 목록 쌍으로 분할합니다. &lt;em&gt;첫 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;partition#kotlin.collections%24partition%28kotlin.Array%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 생성 한 요소가 포함 되고 , &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;partition#kotlin.collections%24partition%28kotlin.Array%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="c6a7570726471ca0e60a15f1b62c162b494e7116" translate="yes" xml:space="preserve">
          <source>Splits the original array into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;partition#kotlin.collections%24partition(kotlin.Array((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;partition#kotlin.collections%24partition(kotlin.Array((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래 배열을 목록 쌍으로 분할합니다. 여기서 &lt;em&gt;첫 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;partition#kotlin.collections%24partition(kotlin.Array((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 산출 한 요소가 포함 되고 &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;partition#kotlin.collections%24partition(kotlin.Array((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="d546386d2e87332d743bd4386df842ed3abe71a8" translate="yes" xml:space="preserve">
          <source>Splits the original char sequence into pair of char sequences, where &lt;em&gt;first&lt;/em&gt; char sequence contains characters for which &lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; char sequence contains characters for which &lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">문자 시퀀스의 쌍으로 일본어 문자 시퀀스 분할 &lt;em&gt;제&lt;/em&gt; 문자 시퀀스가 포함되는 문자 &lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어&lt;/a&gt; 수득 &lt;code&gt;true&lt;/code&gt; 하면서 &lt;em&gt;제&lt;/em&gt; 문자 시퀀스가 포함되는 문자 &lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어&lt;/a&gt; 수득 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7187f16309f8fa5e58c1ffc82da217e3b650f8b" translate="yes" xml:space="preserve">
          <source>Splits the original char sequence into pair of char sequences, where &lt;em&gt;first&lt;/em&gt; char sequence contains characters for which &lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; char sequence contains characters for which &lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래의 char 시퀀스를 char 시퀀스 쌍으로 분할합니다. 여기서 &lt;em&gt;첫 번째&lt;/em&gt; char 시퀀스에는 &lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 산출 한 문자가 포함 되고 &lt;em&gt;두 번째&lt;/em&gt; char 시퀀스에는 &lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 문자가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="3f2108aa3476d1886c05784b517af0f46f65dcce" translate="yes" xml:space="preserve">
          <source>Splits the original char sequence into pair of char sequences, where &lt;em&gt;first&lt;/em&gt; char sequence contains characters for which &lt;a href=&quot;../partition#kotlin.text%24partition%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; char sequence contains characters for which &lt;a href=&quot;../partition#kotlin.text%24partition%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">문자 시퀀스의 쌍으로 일본어 문자 시퀀스 분할 &lt;em&gt;제&lt;/em&gt; 문자 시퀀스가 포함되는 문자 &lt;a href=&quot;../partition#kotlin.text%24partition%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어&lt;/a&gt; 수득 &lt;code&gt;true&lt;/code&gt; 하면서 &lt;em&gt;제&lt;/em&gt; 문자 시퀀스가 포함되는 문자 &lt;a href=&quot;../partition#kotlin.text%24partition%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어&lt;/a&gt; 수득 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c0b0c9a3bd3b0ba50d4e7164b2759eee41ceeba2" translate="yes" xml:space="preserve">
          <source>Splits the original char sequence into pair of char sequences, where &lt;em&gt;first&lt;/em&gt; char sequence contains characters for which &lt;a href=&quot;../partition#kotlin.text%24partition(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; char sequence contains characters for which &lt;a href=&quot;../partition#kotlin.text%24partition(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래의 char 시퀀스를 char 시퀀스 쌍으로 분할합니다. 여기서 &lt;em&gt;첫 번째&lt;/em&gt; char 시퀀스에는 &lt;a href=&quot;../partition#kotlin.text%24partition(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 산출 한 문자가 포함 되고 &lt;em&gt;두 번째&lt;/em&gt; char 시퀀스에는 &lt;a href=&quot;../partition#kotlin.text%24partition(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 문자가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="98cb77a4188cc584dfebb3134ca9b48a2ac72713" translate="yes" xml:space="preserve">
          <source>Splits the original char sequence into pair of char sequences, where &lt;em&gt;first&lt;/em&gt; char sequence contains characters for which &lt;a href=&quot;partition#kotlin.text%24partition%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; char sequence contains characters for which &lt;a href=&quot;partition#kotlin.text%24partition%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">문자 시퀀스의 쌍으로 일본어 문자 시퀀스 분할 &lt;em&gt;제&lt;/em&gt; 문자 시퀀스가 포함되는 문자 &lt;a href=&quot;partition#kotlin.text%24partition%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어&lt;/a&gt; 수득 &lt;code&gt;true&lt;/code&gt; 하면서 &lt;em&gt;제&lt;/em&gt; 문자 시퀀스가 포함되는 문자 &lt;a href=&quot;partition#kotlin.text%24partition%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어&lt;/a&gt; 수득 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="445325f0067f6e88b5adebcf3569f7fceed68246" translate="yes" xml:space="preserve">
          <source>Splits the original char sequence into pair of char sequences, where &lt;em&gt;first&lt;/em&gt; char sequence contains characters for which &lt;a href=&quot;partition#kotlin.text%24partition(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; char sequence contains characters for which &lt;a href=&quot;partition#kotlin.text%24partition(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래의 char 시퀀스를 char 시퀀스 쌍으로 분할합니다. 여기서 &lt;em&gt;첫 번째&lt;/em&gt; char 시퀀스에는 &lt;a href=&quot;partition#kotlin.text%24partition(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 산출 한 문자가 포함 되고 &lt;em&gt;두 번째&lt;/em&gt; char 시퀀스에는 &lt;a href=&quot;partition#kotlin.text%24partition(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 문자가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="abff32a9b2f4672bf7a49c903911bd3c805f10b9" translate="yes" xml:space="preserve">
          <source>Splits the original collection into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.collections.Iterable%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.collections.Iterable%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래 콜렉션을 목록 쌍으로 분할합니다. &lt;em&gt;첫 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.collections.Iterable%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 산출 한 요소가 포함 되고 &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition%28kotlin.collections.Iterable%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="5e94fdcc1e6045991ea6e6a29e69f93e1dc2c8bc" translate="yes" xml:space="preserve">
          <source>Splits the original collection into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.collections.Iterable((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.collections.Iterable((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원본 컬렉션을 목록 쌍으로 분할합니다. &lt;em&gt; 첫 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.collections.Iterable((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;조건자가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 생성 한 요소가 포함 되고 &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../../kotlin.collections/partition#kotlin.collections%24partition(kotlin.collections.Iterable((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;조건자가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 생성 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="51351b50d1163f62c3cb23f2fcefe72a33c2e006" translate="yes" xml:space="preserve">
          <source>Splits the original collection into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../partition#kotlin.collections%24partition%28kotlin.collections.Iterable%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../partition#kotlin.collections%24partition%28kotlin.collections.Iterable%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래 콜렉션을 목록 쌍으로 분할합니다. &lt;em&gt;첫 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../partition#kotlin.collections%24partition%28kotlin.collections.Iterable%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 산출 한 요소가 포함 되고 &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../partition#kotlin.collections%24partition%28kotlin.collections.Iterable%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="185ca747627497f29774081a230018ffb2d10e8a" translate="yes" xml:space="preserve">
          <source>Splits the original collection into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../partition#kotlin.collections%24partition(kotlin.collections.Iterable((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../partition#kotlin.collections%24partition(kotlin.collections.Iterable((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">리스트의 쌍으로 원래 컬렉션 분할 여기서 &lt;em&gt;제&lt;/em&gt; 목록에는 &lt;a href=&quot;../partition#kotlin.collections%24partition(kotlin.collections.Iterable((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;조건자가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 생성 한 요소가 포함 되고 &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../partition#kotlin.collections%24partition(kotlin.collections.Iterable((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;조건자가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 생성 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="a6229b291af2d23e4a0f09e0825f18914ab656ef" translate="yes" xml:space="preserve">
          <source>Splits the original collection into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;partition#kotlin.collections%24partition%28kotlin.collections.Iterable%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;partition#kotlin.collections%24partition%28kotlin.collections.Iterable%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래 콜렉션을 목록 쌍으로 분할합니다. &lt;em&gt;첫 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;partition#kotlin.collections%24partition%28kotlin.collections.Iterable%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 산출 한 요소가 포함 되고 &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;partition#kotlin.collections%24partition%28kotlin.collections.Iterable%28%28kotlin.collections.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="b2fe8eb5efcb840e9f9b406f4e77592d61ba7a99" translate="yes" xml:space="preserve">
          <source>Splits the original collection into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;partition#kotlin.collections%24partition(kotlin.collections.Iterable((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;partition#kotlin.collections%24partition(kotlin.collections.Iterable((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">리스트의 쌍으로 원래 컬렉션 분할 여기서 &lt;em&gt;제&lt;/em&gt; 목록에는 &lt;a href=&quot;partition#kotlin.collections%24partition(kotlin.collections.Iterable((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;조건자가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 생성 한 요소가 포함 되고 &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;partition#kotlin.collections%24partition(kotlin.collections.Iterable((kotlin.collections.partition.T)),%20kotlin.Function1((kotlin.collections.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;조건자가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 생성 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="eff78228133d9c510fcf60618ab7fbbe96384888" translate="yes" xml:space="preserve">
          <source>Splits the original sequence into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../partition#kotlin.sequences%24partition%28kotlin.sequences.Sequence%28%28kotlin.sequences.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../partition#kotlin.sequences%24partition%28kotlin.sequences.Sequence%28%28kotlin.sequences.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래 순서를 목록 쌍으로 분할합니다. &lt;em&gt;첫 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../partition#kotlin.sequences%24partition%28kotlin.sequences.Sequence%28%28kotlin.sequences.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 생성 한 요소가 포함 되고 , &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../partition#kotlin.sequences%24partition%28kotlin.sequences.Sequence%28%28kotlin.sequences.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="30f459632518f3e0c1251d867943b3f28b0cb50c" translate="yes" xml:space="preserve">
          <source>Splits the original sequence into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;../partition#kotlin.sequences%24partition(kotlin.sequences.Sequence((kotlin.sequences.partition.T)),%20kotlin.Function1((kotlin.sequences.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;../partition#kotlin.sequences%24partition(kotlin.sequences.Sequence((kotlin.sequences.partition.T)),%20kotlin.Function1((kotlin.sequences.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">리스트 쌍의 원래 시퀀스를 분할, 여기서 &lt;em&gt;제&lt;/em&gt; 목록에는 &lt;a href=&quot;../partition#kotlin.sequences%24partition(kotlin.sequences.Sequence((kotlin.sequences.partition.T)),%20kotlin.Function1((kotlin.sequences.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 산출 한 요소가 포함 되고 &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;../partition#kotlin.sequences%24partition(kotlin.sequences.Sequence((kotlin.sequences.partition.T)),%20kotlin.Function1((kotlin.sequences.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="144bf3c5a2bc721c001b10a1ad55b094fadbc884" translate="yes" xml:space="preserve">
          <source>Splits the original sequence into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;partition#kotlin.sequences%24partition%28kotlin.sequences.Sequence%28%28kotlin.sequences.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;partition#kotlin.sequences%24partition%28kotlin.sequences.Sequence%28%28kotlin.sequences.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래 순서를 목록 쌍으로 분할합니다. &lt;em&gt;첫 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;partition#kotlin.sequences%24partition%28kotlin.sequences.Sequence%28%28kotlin.sequences.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 생성 한 요소가 포함 되고 , &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;partition#kotlin.sequences%24partition%28kotlin.sequences.Sequence%28%28kotlin.sequences.partition.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.partition.T%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="02ddac42f8baba3808675a7c681796c6c252ed55" translate="yes" xml:space="preserve">
          <source>Splits the original sequence into pair of lists, where &lt;em&gt;first&lt;/em&gt; list contains elements for which &lt;a href=&quot;partition#kotlin.sequences%24partition(kotlin.sequences.Sequence((kotlin.sequences.partition.T)),%20kotlin.Function1((kotlin.sequences.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; list contains elements for which &lt;a href=&quot;partition#kotlin.sequences%24partition(kotlin.sequences.Sequence((kotlin.sequences.partition.T)),%20kotlin.Function1((kotlin.sequences.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">리스트 쌍의 원래 시퀀스를 분할, 여기서 &lt;em&gt;제&lt;/em&gt; 목록에는 &lt;a href=&quot;partition#kotlin.sequences%24partition(kotlin.sequences.Sequence((kotlin.sequences.partition.T)),%20kotlin.Function1((kotlin.sequences.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 산출 한 요소가 포함 되고 &lt;em&gt;두 번째&lt;/em&gt; 목록에는 &lt;a href=&quot;partition#kotlin.sequences%24partition(kotlin.sequences.Sequence((kotlin.sequences.partition.T)),%20kotlin.Function1((kotlin.sequences.partition.T,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 요소가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="fc5ba51f56d3586a3ac3ee5a06dad5c2ce9a8a65" translate="yes" xml:space="preserve">
          <source>Splits the original string into pair of strings, where &lt;em&gt;first&lt;/em&gt; string contains characters for which &lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition%28kotlin.String%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; string contains characters for which &lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition%28kotlin.String%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">문자열의 쌍으로 원래의 문자열을 분할 &lt;em&gt;첫번째&lt;/em&gt; 문자열이있는 문자를 포함 &lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition%28kotlin.String%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가&lt;/a&gt; 나왔고 &lt;code&gt;true&lt;/code&gt; 하면서, &lt;em&gt;두 번째&lt;/em&gt; 문자열이있는 문자를 포함 &lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition%28kotlin.String%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어&lt;/a&gt; 굴복 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4cebb621a8e6a5ace107fced6f73f50ce58b471c" translate="yes" xml:space="preserve">
          <source>Splits the original string into pair of strings, where &lt;em&gt;first&lt;/em&gt; string contains characters for which &lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition(kotlin.String,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; string contains characters for which &lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition(kotlin.String,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">문자열 쌍의 일본어 캐릭터를 파열, 여기서 &lt;em&gt;제&lt;/em&gt; 문자열은 &lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition(kotlin.String,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 산출 한 문자를 포함 하고 &lt;em&gt;두 번째&lt;/em&gt; 문자열에는 &lt;a href=&quot;../../kotlin.text/partition#kotlin.text%24partition(kotlin.String,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 문자가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="46b23954fe998387aff666df8efc6520995fc7cc" translate="yes" xml:space="preserve">
          <source>Splits the original string into pair of strings, where &lt;em&gt;first&lt;/em&gt; string contains characters for which &lt;a href=&quot;partition#kotlin.text%24partition%28kotlin.String%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; string contains characters for which &lt;a href=&quot;partition#kotlin.text%24partition%28kotlin.String%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">문자열의 쌍으로 원래의 문자열을 분할 &lt;em&gt;첫번째&lt;/em&gt; 문자열이있는 문자를 포함 &lt;a href=&quot;partition#kotlin.text%24partition%28kotlin.String%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어가&lt;/a&gt; 나왔고 &lt;code&gt;true&lt;/code&gt; 하면서, &lt;em&gt;두 번째&lt;/em&gt; 문자열이있는 문자를 포함 &lt;a href=&quot;partition#kotlin.text%24partition%28kotlin.String%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.Boolean%29%29%29%2Fpredicate&quot;&gt;술어&lt;/a&gt; 굴복 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0493f5f5f586a61090cd626f293081c3b16b8368" translate="yes" xml:space="preserve">
          <source>Splits the original string into pair of strings, where &lt;em&gt;first&lt;/em&gt; string contains characters for which &lt;a href=&quot;partition#kotlin.text%24partition(kotlin.String,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;true&lt;/code&gt;, while &lt;em&gt;second&lt;/em&gt; string contains characters for which &lt;a href=&quot;partition#kotlin.text%24partition(kotlin.String,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;predicate&lt;/a&gt; yielded &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">원래 문자열을 문자열 쌍으로 분할합니다. 여기서 &lt;em&gt;첫 번째&lt;/em&gt; 문자열에는&lt;a href=&quot;partition#kotlin.text%24partition(kotlin.String,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 를 산출 한 문자를 포함 하고 &lt;em&gt;두 번째&lt;/em&gt; 문자열에는 &lt;a href=&quot;partition#kotlin.text%24partition(kotlin.String,%20kotlin.Function1((kotlin.Char,%20kotlin.Boolean)))/predicate&quot;&gt;술어가 &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 를 산출 한 문자가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="a9a50e34ca1a18e2bc366dc8b4f692ad42af93fc" translate="yes" xml:space="preserve">
          <source>Splits this char sequence around matches of the given regular expression.</source>
          <target state="translated">이 문자 순서를 주어진 정규 표현식과 일치하도록 나눕니다.</target>
        </trans-unit>
        <trans-unit id="9e611a3628d04640a979ef6c5b5e2ecc7f66cbfa" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into a list of strings each not exceeding the given &lt;a href=&quot;../../kotlin.text/chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">이 문자 순서를 지정된 &lt;a href=&quot;../../kotlin.text/chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%29%2Fsize&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 문자열 목록으로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="4a62958cc9533cc8f8aeb2cbb2ff8f917130ca17" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into a list of strings each not exceeding the given &lt;a href=&quot;../../kotlin.text/chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">이 문자 시퀀스를 주어진 &lt;a href=&quot;../../kotlin.text/chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int)/size&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 문자열 목록으로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="ee551ba6b2c606bb6ab83b1a64bb7f625cc07a5b" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into a list of strings each not exceeding the given &lt;a href=&quot;../chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">이 문자 순서를 지정된 &lt;a href=&quot;../chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%29%2Fsize&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 문자열 목록으로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="3939301f590bff32b3270f3f81dfb304f007d903" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into a list of strings each not exceeding the given &lt;a href=&quot;../chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">이 문자 시퀀스를 주어진 &lt;a href=&quot;../chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int)/size&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 문자열 목록으로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="eb121cc6174dd89d8c08cf61906842c082aba3c6" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into a list of strings each not exceeding the given &lt;a href=&quot;chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">이 문자 순서를 지정된 &lt;a href=&quot;chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%29%2Fsize&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 문자열 목록으로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="3f40eb698178eb6db4ff5ee7651a1bf0dca0fde5" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into a list of strings each not exceeding the given &lt;a href=&quot;chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">이 문자 시퀀스를 주어진 &lt;a href=&quot;chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int)/size&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 문자열 목록으로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="264b34f24f1a06b392a80cbea51e94a0fdc3938d" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into a sequence of strings each not exceeding the given &lt;a href=&quot;../../kotlin.text/chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">이 문자 순서를 지정된 &lt;a href=&quot;../../kotlin.text/chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%29%2Fsize&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 일련의 문자열로 나눕니다 .</target>
        </trans-unit>
        <trans-unit id="e4cd050d753a79c2b581ae6b622710efaa7cae0e" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into a sequence of strings each not exceeding the given &lt;a href=&quot;../../kotlin.text/chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">이 char 시퀀스를 주어진 &lt;a href=&quot;../../kotlin.text/chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int)/size&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 문자열 시퀀스로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="e6da35fa6eec6e876ca4586b221b0baab3b5636c" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into a sequence of strings each not exceeding the given &lt;a href=&quot;../chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">이 문자 순서를 지정된 &lt;a href=&quot;../chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%29%2Fsize&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 일련의 문자열로 나눕니다 .</target>
        </trans-unit>
        <trans-unit id="b08e8a3b3a3e0e3afabbec190106507b15fea7be" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into a sequence of strings each not exceeding the given &lt;a href=&quot;../chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">이 char 시퀀스를 주어진 &lt;a href=&quot;../chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int)/size&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 문자열 시퀀스로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="a5ecdbe41629430b5e5cfb82fc1b4ad0586b6b35" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into a sequence of strings each not exceeding the given &lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">이 문자 순서를 지정된 &lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%29%2Fsize&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 일련의 문자열로 나눕니다 .</target>
        </trans-unit>
        <trans-unit id="f903975a8a7c6bb4653c30ed3b1ea55d7b1381c9" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into a sequence of strings each not exceeding the given &lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">이 char 시퀀스를 주어진 &lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int)/size&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 문자열 시퀀스로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="5f7147b8b3ec6b68d6bd51082e0faaca2998e51d" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into several char sequences each not exceeding the given &lt;a href=&quot;../../kotlin.text/chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../../kotlin.text/chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">이 문자 순서를 각각 주어진 &lt;a href=&quot;../../kotlin.text/chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Fsize&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 여러 문자 순서로 나누고 주어진 &lt;a href=&quot;../../kotlin.text/chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Ftransform&quot;&gt;변환&lt;/a&gt; 함수를 각각에 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="91d9f61349fd0e901bdb4c6d4509643f6e4fa84e" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into several char sequences each not exceeding the given &lt;a href=&quot;../../kotlin.text/chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunked.R)))/size&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../../kotlin.text/chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunked.R)))/transform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">이 문자 시퀀스를 각각 주어진 값을 초과하지 않는 여러 문자 시퀀스로 분할합니다. &lt;a href=&quot;../../kotlin.text/chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunked.R)))/size&quot;&gt; 크기를&lt;/a&gt; 에 지정된 &lt;a href=&quot;../../kotlin.text/chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunked.R)))/transform&quot;&gt;변환&lt;/a&gt; 함수를 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="63e385077425eafb77e9a40a51539c2d80eb2f51" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into several char sequences each not exceeding the given &lt;a href=&quot;../../kotlin.text/chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../../kotlin.text/chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">이 문자 순서를 각각 주어진 &lt;a href=&quot;../../kotlin.text/chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Fsize&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 여러 문자 순서로 나누고 주어진 &lt;a href=&quot;../../kotlin.text/chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Ftransform&quot;&gt;변환&lt;/a&gt; 함수를 각각에 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="83ba8fd85fa8d5392667a68b253699a701d55ed7" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into several char sequences each not exceeding the given &lt;a href=&quot;../../kotlin.text/chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunkedSequence.R)))/size&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../../kotlin.text/chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunkedSequence.R)))/transform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">이 문자 시퀀스를 각각 주어진 값을 초과하지 않는 여러 문자 시퀀스로 분할합니다. &lt;a href=&quot;../../kotlin.text/chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunkedSequence.R)))/size&quot;&gt; 크기를&lt;/a&gt; 에 지정된 &lt;a href=&quot;../../kotlin.text/chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunkedSequence.R)))/transform&quot;&gt;변환&lt;/a&gt; 함수를 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="581a009720af973c365e2ace4d33cf5076877aca" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into several char sequences each not exceeding the given &lt;a href=&quot;../chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">이 문자 순서를 각각 주어진 &lt;a href=&quot;../chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Fsize&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 여러 문자 순서로 나누고 주어진 &lt;a href=&quot;../chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Ftransform&quot;&gt;변환&lt;/a&gt; 함수를 각각에 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="9264227ba39c4b74ddc91913644e7a73ebfac8fd" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into several char sequences each not exceeding the given &lt;a href=&quot;../chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunked.R)))/size&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunked.R)))/transform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">이 문자 시퀀스를 각각 주어진 값을 초과하지 않는 여러 문자 시퀀스로 분할합니다. &lt;a href=&quot;../chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunked.R)))/size&quot;&gt; 크기를&lt;/a&gt; 에 지정된 &lt;a href=&quot;../chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunked.R)))/transform&quot;&gt;변환&lt;/a&gt; 함수를 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="d717f98666285a1e90ad8965f8f7418dcc8ed232" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into several char sequences each not exceeding the given &lt;a href=&quot;../chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">이 문자 순서를 각각 주어진 &lt;a href=&quot;../chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Fsize&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 여러 문자 순서로 나누고 주어진 &lt;a href=&quot;../chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Ftransform&quot;&gt;변환&lt;/a&gt; 함수를 각각에 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="6f3b39bc35b85296148b3daa02d1c0eb72d2df0a" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into several char sequences each not exceeding the given &lt;a href=&quot;../chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunkedSequence.R)))/size&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunkedSequence.R)))/transform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">이 문자 시퀀스를 각각 주어진 값을 초과하지 않는 여러 문자 시퀀스로 분할합니다. &lt;a href=&quot;../chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunkedSequence.R)))/size&quot;&gt; 크기를&lt;/a&gt; 에 지정된 &lt;a href=&quot;../chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunkedSequence.R)))/transform&quot;&gt;변환&lt;/a&gt; 함수를 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="85e376173d9c9d8eeff5141b7586fa74005ee16a" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into several char sequences each not exceeding the given &lt;a href=&quot;chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">이 문자 순서를 각각 주어진 &lt;a href=&quot;chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Fsize&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 여러 문자 순서로 나누고 주어진 &lt;a href=&quot;chunked#kotlin.text%24chunked%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunked.R%29%29%29%2Ftransform&quot;&gt;변환&lt;/a&gt; 함수를 각각에 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="6a7c745460198631737bdb1f1b73b1a7999f885d" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into several char sequences each not exceeding the given &lt;a href=&quot;chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunked.R)))/size&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunked.R)))/transform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">이 문자 시퀀스를 각각 주어진 값을 초과하지 않는 여러 문자 시퀀스로 분할합니다. &lt;a href=&quot;chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunked.R)))/size&quot;&gt; 크기를&lt;/a&gt; 에 지정된 &lt;a href=&quot;chunked#kotlin.text%24chunked(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunked.R)))/transform&quot;&gt;변환&lt;/a&gt; 함수를 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="99d50e657fbe43a3b68f5a6eb982003c115c6f08" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into several char sequences each not exceeding the given &lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">이 문자 순서를 각각 주어진 &lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Fsize&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 여러 문자 순서로 나누고 주어진 &lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.chunkedSequence.R%29%29%29%2Ftransform&quot;&gt;변환&lt;/a&gt; 함수를 각각에 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="fa6778d5bcf32bfc8f1b73cc95e599f013de8a39" translate="yes" xml:space="preserve">
          <source>Splits this char sequence into several char sequences each not exceeding the given &lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunkedSequence.R)))/size&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunkedSequence.R)))/transform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">이 문자 시퀀스를 각각 주어진 값을 초과하지 않는 여러 문자 시퀀스로 분할합니다. &lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunkedSequence.R)))/size&quot;&gt; 크기를&lt;/a&gt; 에 지정된 &lt;a href=&quot;chunked-sequence#kotlin.text%24chunkedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.chunkedSequence.R)))/transform&quot;&gt;변환&lt;/a&gt; 함수를 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="f66500e7f768a0de7bc52b6beeddc83d7cdc8834" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a list of lines delimited by any of the following character sequences: CRLF, LF or CR.</source>
          <target state="translated">이 문자 순서를 CRLF, LF 또는 CR 문자 문자로 구분 된 행 목록으로 분할합니다.</target>
        </trans-unit>
        <trans-unit id="3d5a1c5b6b30c321992d76335fa3e703f787af61" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a list of strings around occurrences of the specified &lt;a href=&quot;../../kotlin.text/split#kotlin.text%24split%28kotlin.CharSequence%2C+kotlin.Array%28%28kotlin.String%29%29%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">이 문자 순서를 지정된 &lt;a href=&quot;../../kotlin.text/split#kotlin.text%24split%28kotlin.CharSequence%2C+kotlin.Array%28%28kotlin.String%29%29%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;분리 문자의&lt;/a&gt; 발생에 대한 문자열 목록으로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="dcd0e622134a8b9ff64d607832d645a9a49da056" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a list of strings around occurrences of the specified &lt;a href=&quot;../../kotlin.text/split#kotlin.text%24split(kotlin.CharSequence,%20kotlin.Array((kotlin.String)),%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">이 char 시퀀스를 지정된 &lt;a href=&quot;../../kotlin.text/split#kotlin.text%24split(kotlin.CharSequence,%20kotlin.Array((kotlin.String)),%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;구분 기호의&lt;/a&gt; 발생 주위에있는 문자열 목록으로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="8197b9ef14d350d1f531e4c5e5be27c3d5429cd4" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a list of strings around occurrences of the specified &lt;a href=&quot;../split#kotlin.text%24split%28kotlin.CharSequence%2C+kotlin.Array%28%28kotlin.String%29%29%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">이 문자 순서를 지정된 &lt;a href=&quot;../split#kotlin.text%24split%28kotlin.CharSequence%2C+kotlin.Array%28%28kotlin.String%29%29%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;분리 문자의&lt;/a&gt; 발생에 대한 문자열 목록으로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="78d5d858554c887ccb8db6bfeabdafd042f64195" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a list of strings around occurrences of the specified &lt;a href=&quot;../split#kotlin.text%24split(kotlin.CharSequence,%20kotlin.Array((kotlin.String)),%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">이 char 시퀀스를 지정된 &lt;a href=&quot;../split#kotlin.text%24split(kotlin.CharSequence,%20kotlin.Array((kotlin.String)),%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;구분 기호의&lt;/a&gt; 발생 주위에있는 문자열 목록으로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="5e5d0b62ab16eee4e98080c541c6045d782f0598" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a list of strings around occurrences of the specified &lt;a href=&quot;split#kotlin.text%24split%28kotlin.CharSequence%2C+kotlin.Array%28%28kotlin.String%29%29%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">이 문자 순서를 지정된 &lt;a href=&quot;split#kotlin.text%24split%28kotlin.CharSequence%2C+kotlin.Array%28%28kotlin.String%29%29%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;분리 문자의&lt;/a&gt; 발생에 대한 문자열 목록으로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="12d10ed5fb25d750ebed3fb28bbf6b83bd2c0019" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a list of strings around occurrences of the specified &lt;a href=&quot;split#kotlin.text%24split%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">이 문자 순서를 지정된 &lt;a href=&quot;split#kotlin.text%24split%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;분리 문자의&lt;/a&gt; 발생에 대한 문자열 목록으로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="4adc9dd856d39bd816f0f43340d177fe84299b7f" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a list of strings around occurrences of the specified &lt;a href=&quot;split#kotlin.text%24split(kotlin.CharSequence,%20kotlin.Array((kotlin.String)),%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">이 char 시퀀스를 지정된 &lt;a href=&quot;split#kotlin.text%24split(kotlin.CharSequence,%20kotlin.Array((kotlin.String)),%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;구분 기호의&lt;/a&gt; 발생 주위에있는 문자열 목록으로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="c312ba4a46da215061d17d6069773fc40ab68aa8" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a list of strings around occurrences of the specified &lt;a href=&quot;split#kotlin.text%24split(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">이 char 시퀀스를 지정된 &lt;a href=&quot;split#kotlin.text%24split(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;구분 기호의&lt;/a&gt; 발생 주위에있는 문자열 목록으로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="3a6716d508015c660a59f20c19d214d94cfd85f3" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a sequence of lines delimited by any of the following character sequences: CRLF, LF or CR.</source>
          <target state="translated">이 문자 순서를 CRLF, LF 또는 CR 문자 문자로 구분 된 행 순서로 분할합니다.</target>
        </trans-unit>
        <trans-unit id="e3e94c6787d54178064018c52c37bc40d4047b92" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a sequence of strings around occurrences of the specified &lt;a href=&quot;../../kotlin.text/split-to-sequence#kotlin.text%24splitToSequence%28kotlin.CharSequence%2C+kotlin.Array%28%28kotlin.String%29%29%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">이 문자 순서를 지정된 &lt;a href=&quot;../../kotlin.text/split-to-sequence#kotlin.text%24splitToSequence%28kotlin.CharSequence%2C+kotlin.Array%28%28kotlin.String%29%29%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;분리 문자의&lt;/a&gt; 발생을 중심으로 일련의 문자열로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="453429c9f93911cb5ead26427cc8c66a8ee62d40" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a sequence of strings around occurrences of the specified &lt;a href=&quot;../../kotlin.text/split-to-sequence#kotlin.text%24splitToSequence(kotlin.CharSequence,%20kotlin.Array((kotlin.String)),%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">이 char 시퀀스를 지정된 &lt;a href=&quot;../../kotlin.text/split-to-sequence#kotlin.text%24splitToSequence(kotlin.CharSequence,%20kotlin.Array((kotlin.String)),%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;구분 기호의&lt;/a&gt; 발생 주위에있는 문자열 시퀀스로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="1dc6355bd5dcf88cb7012eadeab20169c9c6450f" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a sequence of strings around occurrences of the specified &lt;a href=&quot;../split-to-sequence#kotlin.text%24splitToSequence%28kotlin.CharSequence%2C+kotlin.Array%28%28kotlin.String%29%29%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">이 문자 순서를 지정된 &lt;a href=&quot;../split-to-sequence#kotlin.text%24splitToSequence%28kotlin.CharSequence%2C+kotlin.Array%28%28kotlin.String%29%29%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;분리 문자의&lt;/a&gt; 발생을 중심으로 일련의 문자열로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="6f287f7c9fff5b47a1ce26435fa2d9a57a16e1d1" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a sequence of strings around occurrences of the specified &lt;a href=&quot;../split-to-sequence#kotlin.text%24splitToSequence(kotlin.CharSequence,%20kotlin.Array((kotlin.String)),%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">이 char 시퀀스를 지정된 &lt;a href=&quot;../split-to-sequence#kotlin.text%24splitToSequence(kotlin.CharSequence,%20kotlin.Array((kotlin.String)),%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;구분 기호의&lt;/a&gt; 발생 주위에있는 문자열 시퀀스로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="2a3dd7ecd8e5aad7ae43ecd7e15b94ace9d83f6c" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a sequence of strings around occurrences of the specified &lt;a href=&quot;split-to-sequence#kotlin.text%24splitToSequence%28kotlin.CharSequence%2C+kotlin.Array%28%28kotlin.String%29%29%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">이 문자 순서를 지정된 &lt;a href=&quot;split-to-sequence#kotlin.text%24splitToSequence%28kotlin.CharSequence%2C+kotlin.Array%28%28kotlin.String%29%29%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;분리 문자의&lt;/a&gt; 발생을 중심으로 일련의 문자열로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="7ffebadc04bba02e4e49a6327f15a6ca200c75ff" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a sequence of strings around occurrences of the specified &lt;a href=&quot;split-to-sequence#kotlin.text%24splitToSequence%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">이 문자 순서를 지정된 &lt;a href=&quot;split-to-sequence#kotlin.text%24splitToSequence%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Boolean%2C+kotlin.Int%29%2Fdelimiters&quot;&gt;분리 문자의&lt;/a&gt; 발생을 중심으로 일련의 문자열로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="9ba4325765fdea04698e46dd8e9c0ebc74bc7ee7" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a sequence of strings around occurrences of the specified &lt;a href=&quot;split-to-sequence#kotlin.text%24splitToSequence(kotlin.CharSequence,%20kotlin.Array((kotlin.String)),%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">이 char 시퀀스를 지정된 &lt;a href=&quot;split-to-sequence#kotlin.text%24splitToSequence(kotlin.CharSequence,%20kotlin.Array((kotlin.String)),%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;구분 기호의&lt;/a&gt; 발생 주위에있는 문자열 시퀀스로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="3aa6aa8a72ba98d64fe36c22d48b49b89739c6b7" translate="yes" xml:space="preserve">
          <source>Splits this char sequence to a sequence of strings around occurrences of the specified &lt;a href=&quot;split-to-sequence#kotlin.text%24splitToSequence(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;delimiters&lt;/a&gt;.</source>
          <target state="translated">이 char 시퀀스를 지정된 &lt;a href=&quot;split-to-sequence#kotlin.text%24splitToSequence(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Boolean,%20kotlin.Int)/delimiters&quot;&gt;구분 기호의&lt;/a&gt; 발생 주위에있는 문자열 시퀀스로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="4894892135b3d855d1f0f6d3001b4e1d6e322c67" translate="yes" xml:space="preserve">
          <source>Splits this collection into a list of lists each not exceeding the given &lt;a href=&quot;../../kotlin.collections/chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">이 컬렉션을 지정된 &lt;a href=&quot;../../kotlin.collections/chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%29%2Fsize&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 목록 목록으로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="ae51951a1a9cf81795d473d5e3322f697bb4331c" translate="yes" xml:space="preserve">
          <source>Splits this collection into a list of lists each not exceeding the given &lt;a href=&quot;../../kotlin.collections/chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">이 컬렉션을 각각 주어진 &lt;a href=&quot;../../kotlin.collections/chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int)/size&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 목록 목록으로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="8109cdc99c9d3ce75b0e6a735d1a16b951be7072" translate="yes" xml:space="preserve">
          <source>Splits this collection into a list of lists each not exceeding the given &lt;a href=&quot;../chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">이 컬렉션을 지정된 &lt;a href=&quot;../chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%29%2Fsize&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 목록 목록으로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="14504fa276ef002c991829771d14be5ffd317bcf" translate="yes" xml:space="preserve">
          <source>Splits this collection into a list of lists each not exceeding the given &lt;a href=&quot;../chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">이 컬렉션을 각각 주어진 &lt;a href=&quot;../chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int)/size&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 목록 목록으로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="b0f2e0bbfd89fcd5462f6ead2b682ba787dadd8e" translate="yes" xml:space="preserve">
          <source>Splits this collection into a list of lists each not exceeding the given &lt;a href=&quot;chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">이 컬렉션을 지정된 &lt;a href=&quot;chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%29%2Fsize&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 목록 목록으로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="a66ba2c92e0165c7a28cec74608bbaf5da8f8f5e" translate="yes" xml:space="preserve">
          <source>Splits this collection into a list of lists each not exceeding the given &lt;a href=&quot;chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">이 컬렉션을 각각 주어진 &lt;a href=&quot;chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int)/size&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 목록 목록으로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="e21d3492a25178c7b849a9e5acc322cb20b39aca" translate="yes" xml:space="preserve">
          <source>Splits this collection into several lists each not exceeding the given &lt;a href=&quot;../../kotlin.collections/chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../../kotlin.collections/chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">이 컬렉션을 주어진 &lt;a href=&quot;../../kotlin.collections/chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Fsize&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 여러 목록으로 나누고 지정된 &lt;a href=&quot;../../kotlin.collections/chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Ftransform&quot;&gt;변환&lt;/a&gt; 함수를 각각에 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="c35a9a72ee2593b0b0996aa9c2fa9215e3026959" translate="yes" xml:space="preserve">
          <source>Splits this collection into several lists each not exceeding the given &lt;a href=&quot;../../kotlin.collections/chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.chunked.T)),%20kotlin.collections.chunked.R)))/size&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../../kotlin.collections/chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.chunked.T)),%20kotlin.collections.chunked.R)))/transform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">이 컬렉션을 각각 주어진 &lt;a href=&quot;../../kotlin.collections/chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.chunked.T)),%20kotlin.collections.chunked.R)))/size&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 여러 목록으로 분할하고 각각 에 주어진 &lt;a href=&quot;../../kotlin.collections/chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.chunked.T)),%20kotlin.collections.chunked.R)))/transform&quot;&gt;변환&lt;/a&gt; 함수를 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="a48428391f4651acfd24fee9fa33c87080c6e779" translate="yes" xml:space="preserve">
          <source>Splits this collection into several lists each not exceeding the given &lt;a href=&quot;../chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">이 컬렉션을 주어진 &lt;a href=&quot;../chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Fsize&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 여러 목록으로 나누고 지정된 &lt;a href=&quot;../chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Ftransform&quot;&gt;변환&lt;/a&gt; 함수를 각각에 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="0a62cec74d11e5ae4a829ee19a641fcfd3e4da18" translate="yes" xml:space="preserve">
          <source>Splits this collection into several lists each not exceeding the given &lt;a href=&quot;../chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.chunked.T)),%20kotlin.collections.chunked.R)))/size&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.chunked.T)),%20kotlin.collections.chunked.R)))/transform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">이 컬렉션을 각각 주어진 &lt;a href=&quot;../chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.chunked.T)),%20kotlin.collections.chunked.R)))/size&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 여러 목록으로 분할하고 각각 에 주어진 &lt;a href=&quot;../chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.chunked.T)),%20kotlin.collections.chunked.R)))/transform&quot;&gt;변환&lt;/a&gt; 함수를 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="517737e782c5357ab242922fc5304b40e3826245" translate="yes" xml:space="preserve">
          <source>Splits this collection into several lists each not exceeding the given &lt;a href=&quot;chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">이 컬렉션을 주어진 &lt;a href=&quot;chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Fsize&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 여러 목록으로 나누고 지정된 &lt;a href=&quot;chunked#kotlin.collections%24chunked%28kotlin.collections.Iterable%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.chunked.T%29%29%2C+kotlin.collections.chunked.R%29%29%29%2Ftransform&quot;&gt;변환&lt;/a&gt; 함수를 각각에 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="2221bd47b20e844a0f5a0c08acde759027264845" translate="yes" xml:space="preserve">
          <source>Splits this collection into several lists each not exceeding the given &lt;a href=&quot;chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.chunked.T)),%20kotlin.collections.chunked.R)))/size&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.chunked.T)),%20kotlin.collections.chunked.R)))/transform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">이 컬렉션을 각각 주어진 &lt;a href=&quot;chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.chunked.T)),%20kotlin.collections.chunked.R)))/size&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 여러 목록으로 분할하고 각각 에 주어진 &lt;a href=&quot;chunked#kotlin.collections%24chunked(kotlin.collections.Iterable((kotlin.collections.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.chunked.T)),%20kotlin.collections.chunked.R)))/transform&quot;&gt;변환&lt;/a&gt; 함수를 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="e1e6a07a033be2e4e206496b12778d9b3f3597fb" translate="yes" xml:space="preserve">
          <source>Splits this duration into days, hours, minutes, seconds, and nanoseconds and executes the given &lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function5((kotlin.Int,%20,%20,%20,%20,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;action&lt;/a&gt; with these components. The result of &lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function5((kotlin.Int,%20,%20,%20,%20,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;action&lt;/a&gt; is returned as the result of this function.</source>
          <target state="translated">이 기간을 일, 시간, 분, 초 및 나노초로 분할 하고 이러한 구성 요소를 사용 하여 지정된 &lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function5((kotlin.Int,%20,%20,%20,%20,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;작업&lt;/a&gt; 을 실행합니다 . 이 함수 의 결과로 &lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function5((kotlin.Int,%20,%20,%20,%20,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;작업&lt;/a&gt; 결과 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="a1571e88658ad31f69e87fe36c4249e704dd2d10" translate="yes" xml:space="preserve">
          <source>Splits this duration into hours, minutes, seconds, and nanoseconds and executes the given &lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function4((kotlin.Int,%20,%20,%20,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;action&lt;/a&gt; with these components. The result of &lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function4((kotlin.Int,%20,%20,%20,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;action&lt;/a&gt; is returned as the result of this function.</source>
          <target state="translated">이 기간을시, 분, 초 및 나노초로 분할 하고 이러한 구성 요소를 사용 하여 지정된 &lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function4((kotlin.Int,%20,%20,%20,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;작업&lt;/a&gt; 을 실행합니다 . 이 함수 의 결과로 &lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function4((kotlin.Int,%20,%20,%20,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;작업&lt;/a&gt; 결과 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="7e10cc86cf352e67038172f69a145609079b92ee" translate="yes" xml:space="preserve">
          <source>Splits this duration into minutes, seconds, and nanoseconds and executes the given &lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function3((kotlin.Int,%20,%20,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;action&lt;/a&gt; with these components. The result of &lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function3((kotlin.Int,%20,%20,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;action&lt;/a&gt; is returned as the result of this function.</source>
          <target state="translated">이 기간을 분, 초 및 나노초로 분할 하고 이러한 구성 요소를 사용 하여 지정된 &lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function3((kotlin.Int,%20,%20,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;작업&lt;/a&gt; 을 실행합니다 . 이 함수 의 결과로 &lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function3((kotlin.Int,%20,%20,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;작업&lt;/a&gt; 결과 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="04417a64b4e7c400d10bf0ae0b610bcc320bd96c" translate="yes" xml:space="preserve">
          <source>Splits this duration into seconds, and nanoseconds and executes the given &lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function2((kotlin.Long,%20kotlin.Int,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;action&lt;/a&gt; with these components. The result of &lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function2((kotlin.Long,%20kotlin.Int,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;action&lt;/a&gt; is returned as the result of this function.</source>
          <target state="translated">이 기간을 초와 나노초로 분할 하고 이러한 구성 요소를 사용 하여 지정된 &lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function2((kotlin.Long,%20kotlin.Int,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;작업&lt;/a&gt; 을 실행합니다 . 이 함수 의 결과로 &lt;a href=&quot;to-components#kotlin.time.Duration%24toComponents(kotlin.Function2((kotlin.Long,%20kotlin.Int,%20kotlin.time.Duration.toComponents.T)))/action&quot;&gt;작업&lt;/a&gt; 결과 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="024d988a38905cd8d713b5b971dfe3778cfdc3d8" translate="yes" xml:space="preserve">
          <source>Splits this sequence into a sequence of lists each not exceeding the given &lt;a href=&quot;../chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">이 순서를 주어진 &lt;a href=&quot;../chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%29%2Fsize&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 일련의 목록으로 나눕니다 .</target>
        </trans-unit>
        <trans-unit id="89e66d42821d76b5c20d374af063183ac388f3e4" translate="yes" xml:space="preserve">
          <source>Splits this sequence into a sequence of lists each not exceeding the given &lt;a href=&quot;../chunked#kotlin.sequences%24chunked(kotlin.sequences.Sequence((kotlin.sequences.chunked.T)),%20kotlin.Int)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">이 시퀀스를 주어진 &lt;a href=&quot;../chunked#kotlin.sequences%24chunked(kotlin.sequences.Sequence((kotlin.sequences.chunked.T)),%20kotlin.Int)/size&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 일련의 목록으로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="2782bc20294974e7a1e43c016491b6c91648db8f" translate="yes" xml:space="preserve">
          <source>Splits this sequence into a sequence of lists each not exceeding the given &lt;a href=&quot;chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">이 순서를 주어진 &lt;a href=&quot;chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%29%2Fsize&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 일련의 목록으로 나눕니다 .</target>
        </trans-unit>
        <trans-unit id="99135cd7b03c2edcdaa34457cd79f869cfb58b45" translate="yes" xml:space="preserve">
          <source>Splits this sequence into a sequence of lists each not exceeding the given &lt;a href=&quot;chunked#kotlin.sequences%24chunked(kotlin.sequences.Sequence((kotlin.sequences.chunked.T)),%20kotlin.Int)/size&quot;&gt;size&lt;/a&gt;.</source>
          <target state="translated">이 시퀀스를 주어진 &lt;a href=&quot;chunked#kotlin.sequences%24chunked(kotlin.sequences.Sequence((kotlin.sequences.chunked.T)),%20kotlin.Int)/size&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 일련의 목록으로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="d437291eabeca701471089c6dfa0b2b88f511909" translate="yes" xml:space="preserve">
          <source>Splits this sequence into several lists each not exceeding the given &lt;a href=&quot;../chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.sequences.chunked.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.sequences.chunked.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">이 시퀀스를 주어진 &lt;a href=&quot;../chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.sequences.chunked.R%29%29%29%2Fsize&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 여러 목록으로 나누고 주어진 &lt;a href=&quot;../chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.sequences.chunked.R%29%29%29%2Ftransform&quot;&gt;변환&lt;/a&gt; 함수를 각각에 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="f2435f94efc313c779ac2ced265ad21e693408c3" translate="yes" xml:space="preserve">
          <source>Splits this sequence into several lists each not exceeding the given &lt;a href=&quot;../chunked#kotlin.sequences%24chunked(kotlin.sequences.Sequence((kotlin.sequences.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.sequences.chunked.T)),%20kotlin.sequences.chunked.R)))/size&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;../chunked#kotlin.sequences%24chunked(kotlin.sequences.Sequence((kotlin.sequences.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.sequences.chunked.T)),%20kotlin.sequences.chunked.R)))/transform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">이 시퀀스를 각각 주어진 &lt;a href=&quot;../chunked#kotlin.sequences%24chunked(kotlin.sequences.Sequence((kotlin.sequences.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.sequences.chunked.T)),%20kotlin.sequences.chunked.R)))/size&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 여러 목록으로 분할하고 각각 에 주어진 &lt;a href=&quot;../chunked#kotlin.sequences%24chunked(kotlin.sequences.Sequence((kotlin.sequences.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.sequences.chunked.T)),%20kotlin.sequences.chunked.R)))/transform&quot;&gt;변환&lt;/a&gt; 함수를 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="42d99abb4dad1bd5f52d7374981881da327ee184" translate="yes" xml:space="preserve">
          <source>Splits this sequence into several lists each not exceeding the given &lt;a href=&quot;chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.sequences.chunked.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.sequences.chunked.R%29%29%29%2Ftransform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">이 시퀀스를 주어진 &lt;a href=&quot;chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.sequences.chunked.R%29%29%29%2Fsize&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 여러 목록으로 나누고 주어진 &lt;a href=&quot;chunked#kotlin.sequences%24chunked%28kotlin.sequences.Sequence%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.Int%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.chunked.T%29%29%2C+kotlin.sequences.chunked.R%29%29%29%2Ftransform&quot;&gt;변환&lt;/a&gt; 함수를 각각에 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="68a4d3e554bce55c1ddcb2faa635fcae50b66ba6" translate="yes" xml:space="preserve">
          <source>Splits this sequence into several lists each not exceeding the given &lt;a href=&quot;chunked#kotlin.sequences%24chunked(kotlin.sequences.Sequence((kotlin.sequences.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.sequences.chunked.T)),%20kotlin.sequences.chunked.R)))/size&quot;&gt;size&lt;/a&gt; and applies the given &lt;a href=&quot;chunked#kotlin.sequences%24chunked(kotlin.sequences.Sequence((kotlin.sequences.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.sequences.chunked.T)),%20kotlin.sequences.chunked.R)))/transform&quot;&gt;transform&lt;/a&gt; function to an each.</source>
          <target state="translated">이 시퀀스를 각각 주어진 &lt;a href=&quot;chunked#kotlin.sequences%24chunked(kotlin.sequences.Sequence((kotlin.sequences.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.sequences.chunked.T)),%20kotlin.sequences.chunked.R)))/size&quot;&gt;크기를&lt;/a&gt; 초과하지 않는 여러 목록으로 분할하고 각각 에 주어진 &lt;a href=&quot;chunked#kotlin.sequences%24chunked(kotlin.sequences.Sequence((kotlin.sequences.chunked.T)),%20kotlin.Int,%20kotlin.Function1((kotlin.collections.List((kotlin.sequences.chunked.T)),%20kotlin.sequences.chunked.R)))/transform&quot;&gt;변환&lt;/a&gt; 함수를 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="7c51d044b0775b9dff2cfa78b3da8cb8049bb2ff" translate="yes" xml:space="preserve">
          <source>Spring support</source>
          <target state="translated">봄 지원</target>
        </trans-unit>
        <trans-unit id="4d471041d7df92549d73db2c13c586ee2b0cec2e" translate="yes" xml:space="preserve">
          <source>Square brackets are translated to calls to &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; with appropriate numbers of arguments.</source>
          <target state="translated">대괄호는 적절한 수의 인수 로 &lt;code&gt;get&lt;/code&gt; 오고 &lt;code&gt;set&lt;/code&gt; 하기 위한 호출로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="760c3df67cfeafc7b66d5c5c9eecdb6431a5eaf6" translate="yes" xml:space="preserve">
          <source>Stability Levels Explained</source>
          <target state="translated">설명 된 안정성 수준</target>
        </trans-unit>
        <trans-unit id="00ffdccd32ed64d431bf831e7b8e2169d330f1f8" translate="yes" xml:space="preserve">
          <source>Stability of Different Components</source>
          <target state="translated">다른 구성 요소의 안정성</target>
        </trans-unit>
        <trans-unit id="335f562da0b6da5371be32abc5013ec933c6eaa9" translate="yes" xml:space="preserve">
          <source>Stability of Kotlin Components</source>
          <target state="translated">Kotlin 구성 요소의 안정성</target>
        </trans-unit>
        <trans-unit id="cd08656ee2aa301dd8e4aa144201fac5aaed7316" translate="yes" xml:space="preserve">
          <source>Stability of Kotlin Components (pre 1.4)</source>
          <target state="translated">Kotlin 구성 요소의 안정성 (1.4 이전)</target>
        </trans-unit>
        <trans-unit id="59370b6411d3426c49909870b95a752c0777385c" translate="yes" xml:space="preserve">
          <source>Stability of Subcomponents</source>
          <target state="translated">하위 구성 요소의 안정성</target>
        </trans-unit>
        <trans-unit id="d96e5b2dd07c1733b2b013bd82922c22baade37d" translate="yes" xml:space="preserve">
          <source>Stable</source>
          <target state="translated">Stable</target>
        </trans-unit>
        <trans-unit id="6eeb768fc3b74ac02af44fbb5f6ba14ee0aa98a6" translate="yes" xml:space="preserve">
          <source>Stable JSON serialization</source>
          <target state="translated">안정적인 JSON 직렬화</target>
        </trans-unit>
        <trans-unit id="d1536eaeef57c8fe7e38a044d153592707538ced" translate="yes" xml:space="preserve">
          <source>Stable releases with versions 1.2, 1.3, etc. are usually considered to be &lt;em&gt;feature releases&lt;/em&gt; bringing major changes in the language. Normally, we publish &lt;em&gt;incremental releases&lt;/em&gt;, numbered 1.2.20, 1.2.30, etc, in between feature releases.</source>
          <target state="translated">버전 1.2, 1.3 등이 포함 된 안정적인 릴리스는 일반적으로 언어를 크게 변경하는 &lt;em&gt;기능 릴리스로&lt;/em&gt; 간주 됩니다. 일반적으로, 기능 릴리스 사이에 1.2.20, 1.2.30 등으로 번호가 매겨진 &lt;em&gt;증분 릴리스를&lt;/em&gt; 게시 합니다.</target>
        </trans-unit>
        <trans-unit id="c2b6f531a85effb53654c20ee953d94aca8bd93f" translate="yes" xml:space="preserve">
          <source>StableObjPtr</source>
          <target state="translated">StableObjPtr</target>
        </trans-unit>
        <trans-unit id="d5695f0dc6545fa97fef8f5d8d98f8ea9529cc21" translate="yes" xml:space="preserve">
          <source>StableRef</source>
          <target state="translated">StableRef</target>
        </trans-unit>
        <trans-unit id="cd6c8d56f6241b414217edc699eb83c63b345d74" translate="yes" xml:space="preserve">
          <source>Stack overflow</source>
          <target state="translated">스택 오버플로</target>
        </trans-unit>
        <trans-unit id="ed0e3d47052276129876bad97c5d9695f1d4c1e7" translate="yes" xml:space="preserve">
          <source>Standard Data Classes</source>
          <target state="translated">표준 데이터 클래스</target>
        </trans-unit>
        <trans-unit id="9905d2303d697763e7c368a3fc398e3a629682f8" translate="yes" xml:space="preserve">
          <source>Standard Delegates</source>
          <target state="translated">표준 대표</target>
        </trans-unit>
        <trans-unit id="eba63c181dd248d4b5bba8f0065bbb50178505fc" translate="yes" xml:space="preserve">
          <source>Standard Library</source>
          <target state="translated">표준 라이브러리</target>
        </trans-unit>
        <trans-unit id="5cb78ec1155b67352920711808d484486519f871" translate="yes" xml:space="preserve">
          <source>Standard delegates</source>
          <target state="translated">표준 대의원</target>
        </trans-unit>
        <trans-unit id="fbdf47a84aa524486f1f19bc8f2b7696fa1c4c48" translate="yes" xml:space="preserve">
          <source>Standard implementations of delegates for &lt;a href=&quot;../../../../../docs/reference/delegated-properties&quot;&gt;delegated properties&lt;/a&gt; and helper functions for implementing custom delegates.</source>
          <target state="translated">&lt;a href=&quot;../../../../../docs/reference/delegated-properties&quot;&gt;위임 속성에&lt;/a&gt; 대한 표준 델리게이트 구현 및 사용자 지정 델리게이트 구현을위한 도우미 기능</target>
        </trans-unit>
        <trans-unit id="b31b91de60e88c68f139ba0e04804a05ebd424b2" translate="yes" xml:space="preserve">
          <source>Standard implementations of delegates for &lt;a href=&quot;docs/reference/delegated-properties&quot;&gt;delegated properties&lt;/a&gt; and helper functions for implementing custom delegates.</source>
          <target state="translated">&lt;a href=&quot;docs/reference/delegated-properties&quot;&gt;위임 속성에&lt;/a&gt; 대한 표준 델리게이트 구현 및 사용자 지정 델리게이트 구현을위한 도우미 기능</target>
        </trans-unit>
        <trans-unit id="360c57caedbd1d1ff38dde144677c893d6ad3792" translate="yes" xml:space="preserve">
          <source>Standard library</source>
          <target state="translated">표준 라이브러리</target>
        </trans-unit>
        <trans-unit id="ad16d6480ea3a42fd35ae681f27222eeb06b2257" translate="yes" xml:space="preserve">
          <source>Standard property delegates.</source>
          <target state="translated">표준 부동산 대표.</target>
        </trans-unit>
        <trans-unit id="f22646c78134d6ac39afe0c5ee5f9ae0df7f3bbd" translate="yes" xml:space="preserve">
          <source>Star projection, denoted by the &lt;code&gt;*&lt;/code&gt; character. For example, in the type &lt;code&gt;KClass&amp;lt;*&amp;gt;&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt; is the star projection. See the &lt;a href=&quot;../../../../../../docs/reference/generics#star-projections&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">별표로 &lt;code&gt;*&lt;/code&gt; 문자 로 표시됩니다 . 예를 들어 &lt;code&gt;KClass&amp;lt;*&amp;gt;&lt;/code&gt; 유형 에서 &lt;code&gt;*&lt;/code&gt; 는 별 투영입니다. 자세한 내용은 &lt;a href=&quot;../../../../../../docs/reference/generics#star-projections&quot;&gt;Kotlin 언어 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a77f904c776f120da6135a5ca2b0fb989dcaa559" translate="yes" xml:space="preserve">
          <source>Star-projections</source>
          <target state="translated">Star-projections</target>
        </trans-unit>
        <trans-unit id="6e5590764483cbb03fdaa9e24fc59d1a85c1288e" translate="yes" xml:space="preserve">
          <source>Start new scheduling primitive, such as thread, to accept new tasks via &lt;code&gt;execute&lt;/code&gt; interface. Typically new worker may be needed for computations offload to another core, for IO it may be better to use non-blocking IO combined with more lightweight coroutines.</source>
          <target state="translated">&lt;code&gt;execute&lt;/code&gt; 인터페이스 를 통해 새 작업을 수락하려면 스레드와 같은 새 스케줄링 기본 요소를 시작하십시오 . 일반적으로 새로운 작업자가 다른 코어로의 계산 오프로드에 필요할 수 있습니다. IO의 경우 더 가벼운 코 루틴과 결합 된 비 차단 IO를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="a0279a8f5111591a71ef0ea505d164e207decfa7" translate="yes" xml:space="preserve">
          <source>Start the &lt;a href=&quot;#running-the-android-application&quot;&gt;Android application&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#running-the-android-application&quot;&gt;Android 애플리케이션을&lt;/a&gt; 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="ffec450a13497055a66c40a0f95ad2095c4fa937" translate="yes" xml:space="preserve">
          <source>Start the &lt;a href=&quot;#running-the-ios-application&quot;&gt;iOS application&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#running-the-ios-application&quot;&gt;iOS 애플리케이션을&lt;/a&gt; 시작하십시오</target>
        </trans-unit>
        <trans-unit id="95f5c30c239a1587fffa8f3e4e700f989c16efcc" translate="yes" xml:space="preserve">
          <source>Start the application by clicking &lt;strong&gt;Run&lt;/strong&gt; next to the run configuration at the top of the screen.</source>
          <target state="translated">클릭하여 응용 프로그램을 시작 &lt;strong&gt;, 실행을&lt;/strong&gt; 화면 상단의 실행 구성 옆에.</target>
        </trans-unit>
        <trans-unit id="2a12e8ffa3717682e64c678ab88c470cda3851ea" translate="yes" xml:space="preserve">
          <source>Starting from 1.4.0, we have embedded Proguard/R8 configurations for Kotlin Reflection in &lt;code&gt;kotlin-reflect.jar&lt;/code&gt;. With this in place, most Android projects using R8 or Proguard should work with kotlin-reflect without needing any additional configuration. You no longer need to copy-paste the Proguard rules for kotlin-reflect internals. But note that you still need to explicitly list all the APIs you&amp;rsquo;re going to reflect on.</source>
          <target state="translated">1.4.0부터 &lt;code&gt;kotlin-reflect.jar&lt;/code&gt; 에 Kotlin Reflection을위한 Proguard / R8 구성이 포함 되었습니다 . 이를 통해 R8 또는 Proguard를 사용하는 대부분의 Android 프로젝트는 추가 구성없이 kotlin-reflect와 함께 작동해야합니다. 더 이상 kotlin-reflect 내부에 대한 Proguard 규칙을 복사하여 붙여 넣을 필요가 없습니다. 그러나 반영 할 모든 API를 명시 적으로 나열해야합니다.</target>
        </trans-unit>
        <trans-unit id="0d6fdf5f9b6b8e074fa3c899dd59b612c2abd776" translate="yes" xml:space="preserve">
          <source>Starting from 1.4.0, you also no longer need to declare a dependency on &lt;code&gt;stdlib&lt;/code&gt; in each source set manually &amp;ndash; it &lt;a href=&quot;mpp-add-dependencies#dependency-on-the-standard-library&quot;&gt;will now be added by default&lt;/a&gt;. The version of the automatically added standard library will be the same as the version of the Kotlin Gradle plugin, since they have the same versioning.</source>
          <target state="translated">1.4.0부터는 더 이상 각 소스 세트 에서 &lt;code&gt;stdlib&lt;/code&gt; 에 대한 종속성을 수동으로 선언 할 필요가 없습니다 . &lt;a href=&quot;mpp-add-dependencies#dependency-on-the-standard-library&quot;&gt;이제 기본적으로 추가됩니다&lt;/a&gt; . 자동으로 추가 된 표준 라이브러리의 버전은 버전 관리가 동일하므로 Kotlin Gradle 플러그인의 버전과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="0bab1f2cb1c8332507f7e8e0dae6242d8ebf3cac" translate="yes" xml:space="preserve">
          <source>Starting from JDK 1.8, interfaces in Java can contain &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/IandI/defaultmethods.html&quot;&gt;default methods&lt;/a&gt;. To make all non-abstract members of Kotlin interfaces default for the Java classes implementing them, compile the Kotlin code with the &lt;code&gt;-Xjvm-default=all&lt;/code&gt; compiler option.</source>
          <target state="translated">JDK 1.8부터 Java의 인터페이스는 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/IandI/defaultmethods.html&quot;&gt;기본 메소드를&lt;/a&gt; 포함 할 수 있습니다 . Kotlin 인터페이스의 모든 비추 상 멤버를 구현하는 자바 클래스의 기본값으로 만들려면 &lt;code&gt;-Xjvm-default=all&lt;/code&gt; 컴파일러 옵션을 사용하여 Kotlin 코드를 컴파일합니다 .</target>
        </trans-unit>
        <trans-unit id="6e0f646bfc4efa2110bf6449cf37709d3558db49" translate="yes" xml:space="preserve">
          <source>Starting from JDK 1.8, interfaces in Java can contain &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/IandI/defaultmethods.html&quot;&gt;default methods&lt;/a&gt;. You can declare a non-abstract member of a Kotlin interface as default for the Java classes implementing it. To make a member default, mark it with the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-default/index&quot;&gt;&lt;code&gt;@JvmDefault&lt;/code&gt;&lt;/a&gt; annotation. Here is an example of a Kotlin interface with a default method:</source>
          <target state="translated">JDK 1.8부터 Java 인터페이스에는 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/IandI/defaultmethods.html&quot;&gt;기본 메소드&lt;/a&gt; 가 포함될 수 있습니다 . Kotlin 인터페이스의 비추 상 멤버를 구현하는 Java 클래스의 기본값으로 선언 할 수 있습니다. 멤버를 기본값으로 설정하려면 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-default/index&quot;&gt; &lt;code&gt;@JvmDefault&lt;/code&gt; &lt;/a&gt; 주석으로 표시하십시오 . 기본 메소드가있는 Kotlin 인터페이스의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cd2a24b509ce811a3267e32e8920ed8b3ac2112a" translate="yes" xml:space="preserve">
          <source>Starting from Kotlin 1.3, &lt;code&gt;@JvmStatic&lt;/code&gt; applies to functions defined in companion objects of interfaces as well. Such functions compile to static methods in interfaces. Note that static method in interfaces were introduced in Java 1.8, so be sure to use the corresponding targets.</source>
          <target state="translated">&lt;code&gt;@JvmStatic&lt;/code&gt; 은 Kotlin 1.3부터 인터페이스의 컴패니언 객체에 정의 된 함수에도 적용됩니다. 이러한 함수는 인터페이스의 정적 메소드로 컴파일됩니다. 인터페이스의 정적 메소드는 Java 1.8에서 도입되었으므로 해당 대상을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="9e63edf3fd41246ee7320042aeba90b47e8343be" translate="yes" xml:space="preserve">
          <source>Starting from Kotlin 1.4.0, all runtime null checks will throw a &lt;code&gt;java.lang.NullPointerException&lt;/code&gt; instead of &lt;code&gt;KotlinNullPointerException&lt;/code&gt;, &lt;code&gt;IllegalStateException&lt;/code&gt;, &lt;code&gt;IllegalArgumentException&lt;/code&gt;, and &lt;code&gt;TypeCastException&lt;/code&gt;. This applies to: the &lt;code&gt;!!&lt;/code&gt; operator, parameter null checks in the method preamble, platform-typed expression null checks, and the &lt;code&gt;as&lt;/code&gt; operator with a non-null type. This doesn&amp;rsquo;t apply to &lt;code&gt;lateinit&lt;/code&gt; null checks and explicit library function calls like &lt;code&gt;checkNotNull&lt;/code&gt; or &lt;code&gt;requireNotNull&lt;/code&gt;.</source>
          <target state="translated">코 틀린 1.4.0에서 시작, 모든 런타임 널 (null) 검사는 발생합니다 &lt;code&gt;java.lang.NullPointerException&lt;/code&gt; 이 대신 &lt;code&gt;KotlinNullPointerException&lt;/code&gt; , &lt;code&gt;IllegalStateException&lt;/code&gt; 이 , &lt;code&gt;IllegalArgumentException&lt;/code&gt; 가 , 그리고 &lt;code&gt;TypeCastException&lt;/code&gt; 을 . 적용 대상 : &lt;code&gt;!!&lt;/code&gt; 연산자, 메소드 프리앰블의 매개 변수 널 검사, 플랫폼 유형 표현식 널 검사 및 널이 아닌 유형 의 &lt;code&gt;as&lt;/code&gt; 연산자. 이는 &lt;code&gt;lateinit&lt;/code&gt; null 검사 및 &lt;code&gt;checkNotNull&lt;/code&gt; 또는 &lt;code&gt;requireNotNull&lt;/code&gt; 과 같은 명시 적 라이브러리 함수 호출 에는 적용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="f2ef314e1060cb19059b7679202c90dd5f779df0" translate="yes" xml:space="preserve">
          <source>Starting from version 1.3.30, kapt supports incremental annotation processing as an experimental feature. Currently, annotation processing can be incremental only if all annotation processors being used are incremental.</source>
          <target state="translated">버전 1.3.30부터 kapt는 실험 기능으로 증분 주석 처리를 지원합니다. 현재 주석 처리는 사용중인 모든 주석 프로세서가 증분 인 경우에만 증분 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1620971e5e7fb81960f0323359f6dc556dc282b3" translate="yes" xml:space="preserve">
          <source>Starting with 1.3.30, an experimental integration with &lt;a href=&quot;https://cocoapods.org/&quot;&gt;CocoaPods&lt;/a&gt; is added to Kotlin/Native. This feature allows you to represent a Kotlin/Native Gradle-project as a CocoaPods dependency. Such a representation provides the following advantages:</source>
          <target state="translated">1.3.30 시작과 실험적인 통합 &lt;a href=&quot;https://cocoapods.org/&quot;&gt;CocoaPods는&lt;/a&gt; 코 틀린 / 기본에 추가됩니다. 이 기능을 사용하면 Kotlin / Native Gradle-project를 CocoaPods 종속성으로 나타낼 수 있습니다. 이러한 표현은 다음과 같은 장점을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="52db441bf35f1362ad44a661d4447647a17c6032" translate="yes" xml:space="preserve">
          <source>Starting with 1.4.0, Kotlin multiplatform projects require Gradle 6.0 or later. Make sure that your projects use the proper version of Gradle and upgrade it if needed. See the &lt;a href=&quot;https://docs.gradle.org/current/userguide/upgrading_version_5.html&quot;&gt;Gradle documentation&lt;/a&gt; for non-Kotlin-specific migration instructions.</source>
          <target state="translated">1.4.0부터 Kotlin 멀티 플랫폼 프로젝트에는 Gradle 6.0 이상이 필요합니다. 프로젝트에서 적절한 버전의 Gradle을 사용하는지 확인하고 필요한 경우 업그레이드합니다. Kotlin과 관련이없는 마이그레이션 지침 은 &lt;a href=&quot;https://docs.gradle.org/current/userguide/upgrading_version_5.html&quot;&gt;Gradle 문서&lt;/a&gt; 를 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="c4a699e6088fe9194a082a83e78da376e5f2104d" translate="yes" xml:space="preserve">
          <source>Starting with 1.4.0, the Kotlin/Native compiler produces &lt;a href=&quot;https://developer.apple.com/documentation/xcode/building_your_app_to_include_debugging_information&quot;&gt;debug symbol files&lt;/a&gt; (&lt;code&gt;.dSYM&lt;/code&gt;s) for release binaries on Darwin platforms by default. This can be disabled with the &lt;code&gt;-Xadd-light-debug=disable&lt;/code&gt; compiler option. On other platforms, this option is disabled by default. To toggle this option in Gradle, use:</source>
          <target state="translated">1.4.0부터 Kotlin / Native 컴파일러는 기본적으로 Darwin 플랫폼의 릴리스 바이너리에 대한 &lt;a href=&quot;https://developer.apple.com/documentation/xcode/building_your_app_to_include_debugging_information&quot;&gt;디버그 기호 파일&lt;/a&gt; ( &lt;code&gt;.dSYM&lt;/code&gt; )을 생성합니다 . &lt;code&gt;-Xadd-light-debug=disable&lt;/code&gt; 컴파일러 옵션 으로 비활성화 할 수 있습니다 . 다른 플랫폼에서는이 옵션이 기본적으로 비활성화되어 있습니다. Gradle에서이 옵션을 전환하려면 다음을 사용하세요.</target>
        </trans-unit>
        <trans-unit id="843f77eb473690d7aad6e0682c17b7993f79cc2f" translate="yes" xml:space="preserve">
          <source>Starting with Kotlin 1.1, the JavaScript target is no longer considered experimental. All language features are supported, and there are many new tools for integration with the front-end development environment. See &lt;a href=&quot;#javascript-backend&quot;&gt;below&lt;/a&gt; for a more detailed list of changes.</source>
          <target state="translated">Kotlin 1.1부터는 JavaScript 대상이 더 이상 실험적인 것으로 간주되지 않습니다. 모든 언어 기능이 지원되며 프런트 엔드 개발 환경과 통합하기위한 많은 새로운 도구가 있습니다. 자세한 변경 목록은 &lt;a href=&quot;#javascript-backend&quot;&gt;아래&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ae38e0129a4b318762165a84af231b05176eafcd" translate="yes" xml:space="preserve">
          <source>Starting with Kotlin 1.1, the JavaScript target is no longer considered experimental. All language features are supported, and there are many new tools for integration with the frontend development environment. See &lt;a href=&quot;#javascript-backend&quot;&gt;below&lt;/a&gt; for a more detailed list of changes.</source>
          <target state="translated">Kotlin 1.1부터 자바 스크립트 타겟은 더 이상 실험적인 것으로 간주되지 않습니다. 모든 언어 기능이 지원되며 프런트 엔드 개발 환경과의 통합을위한 많은 새로운 도구가 있습니다. 참조 &lt;a href=&quot;#javascript-backend&quot;&gt;아래&lt;/a&gt; 변경 사항 목록은 를 .</target>
        </trans-unit>
        <trans-unit id="41f73c0acfd31a8c403654851fe6cd652c2e3650" translate="yes" xml:space="preserve">
          <source>Starting with Kotlin 1.1.2, the dependencies with group &lt;code&gt;org.jetbrains.kotlin&lt;/code&gt; are by default resolved with the version taken from the applied plugin. You can provide the version manually using the full dependency notation:</source>
          <target state="translated">Kotlin 1.1.2부터 &lt;code&gt;org.jetbrains.kotlin&lt;/code&gt; 그룹의 종속성 은 기본적으로 적용된 플러그인에서 가져온 버전으로 해결됩니다. 전체 종속성 표기법을 사용하여 버전을 수동으로 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="07b8457eb5cdf91e3e7cbfadbb3eebb80e30d3ff" translate="yes" xml:space="preserve">
          <source>Starting with Kotlin 1.2, array arguments for annotations can be passed with the new array literal syntax instead of the &lt;code&gt;arrayOf&lt;/code&gt; function:</source>
          <target state="translated">Kotlin 1.2부터는 어노테이션의 배열 인수를 &lt;code&gt;arrayOf&lt;/code&gt; 함수 대신 새로운 배열 리터럴 구문으로 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9742077d694d1c9faea7c00ca99234ce6ecc9bf4" translate="yes" xml:space="preserve">
          <source>Starting with Kotlin 1.3.60, the Kotlin/JS Gradle plugin automatically generates source maps for our builds. These enable support for debugging our code using browser development tools. To get started debugging our code, execute the &lt;code&gt;run&lt;/code&gt; task in a project using the JS Gradle plugin, or &lt;code&gt;browserDevelopmentRun&lt;/code&gt; in a multiplatform project. Once the development server is running, we can start our debugging session from the browser.</source>
          <target state="translated">Kotlin 1.3.60부터 Kotlin / JS Gradle 플러그인은 빌드 용 소스 맵을 자동으로 생성합니다. 이를 통해 브라우저 개발 도구를 사용하여 코드 디버깅을 지원할 수 있습니다. 코드 디버깅을 시작하려면 JS Gradle 플러그인을 사용하여 프로젝트에서 &lt;code&gt;run&lt;/code&gt; 작업을 실행 하거나 멀티 플랫폼 프로젝트에서 &lt;code&gt;browserDevelopmentRun&lt;/code&gt; 을 실행하세요. 개발 서버가 실행되면 브라우저에서 디버깅 세션을 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="12a86828fbb44a7006158c4f6ac9be7d98219035" translate="yes" xml:space="preserve">
          <source>Starting with version 1.1.50 primitive array translation utilizes JavaScript TypedArray:</source>
          <target state="translated">버전 1.1.50부터 기본 배열 변환은 JavaScript TypedArray를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="dd4c7c6c2fa2a107f57737194dfcb51c6b3fd326" translate="yes" xml:space="preserve">
          <source>Starts a coroutine with receiver type &lt;a href=&quot;start-coroutine#R&quot;&gt;R&lt;/a&gt; and result type &lt;a href=&quot;start-coroutine#T&quot;&gt;T&lt;/a&gt;. This function creates and starts a new, fresh instance of suspendable computation every time it is invoked. The &lt;a href=&quot;start-coroutine#kotlin.coroutines%24startCoroutine%28kotlin.coroutines.SuspendFunction1%28%28kotlin.coroutines.startCoroutine.R%2C+kotlin.coroutines.startCoroutine.T%29%29%2C+kotlin.coroutines.startCoroutine.R%2C+kotlin.coroutines.Continuation%28%28kotlin.coroutines.startCoroutine.T%29%29%29%2Fcompletion&quot;&gt;completion&lt;/a&gt; continuation is invoked when the coroutine completes with a result or an exception.</source>
          <target state="translated">수신자 유형 &lt;a href=&quot;start-coroutine#R&quot;&gt;R&lt;/a&gt; 및 결과 유형 &lt;a href=&quot;start-coroutine#T&quot;&gt;T&lt;/a&gt; 로 코 루틴을 시작합니다 . 이 함수는 호출 할 때마다 새로운 일시 중단 가능한 계산 인스턴스를 생성하고 시작합니다. &lt;a href=&quot;start-coroutine#kotlin.coroutines%24startCoroutine%28kotlin.coroutines.SuspendFunction1%28%28kotlin.coroutines.startCoroutine.R%2C+kotlin.coroutines.startCoroutine.T%29%29%2C+kotlin.coroutines.startCoroutine.R%2C+kotlin.coroutines.Continuation%28%28kotlin.coroutines.startCoroutine.T%29%29%29%2Fcompletion&quot;&gt;완료&lt;/a&gt; 코 루틴은 결과 또는 예외로 완료 될 때 연속 호출된다.</target>
        </trans-unit>
        <trans-unit id="c7fa9a9cb5133b45f7dc5a5d54a3811aeb18a99a" translate="yes" xml:space="preserve">
          <source>Starts a coroutine with receiver type &lt;a href=&quot;start-coroutine#R&quot;&gt;R&lt;/a&gt; and result type &lt;a href=&quot;start-coroutine#T&quot;&gt;T&lt;/a&gt;. This function creates and starts a new, fresh instance of suspendable computation every time it is invoked. The &lt;a href=&quot;start-coroutine#kotlin.coroutines%24startCoroutine(kotlin.coroutines.SuspendFunction1((kotlin.coroutines.startCoroutine.R,%20kotlin.coroutines.startCoroutine.T)),%20kotlin.coroutines.startCoroutine.R,%20kotlin.coroutines.Continuation((kotlin.coroutines.startCoroutine.T)))/completion&quot;&gt;completion&lt;/a&gt; continuation is invoked when the coroutine completes with a result or an exception.</source>
          <target state="translated">수신자 유형 &lt;a href=&quot;start-coroutine#R&quot;&gt;R&lt;/a&gt; 및 결과 유형 &lt;a href=&quot;start-coroutine#T&quot;&gt;T&lt;/a&gt; 로 코 루틴을 시작합니다 . 이 함수는 호출 될 때마다 일시 중단 가능한 계산의 새 인스턴스를 만들고 시작합니다. &lt;a href=&quot;start-coroutine#kotlin.coroutines%24startCoroutine(kotlin.coroutines.SuspendFunction1((kotlin.coroutines.startCoroutine.R,%20kotlin.coroutines.startCoroutine.T)),%20kotlin.coroutines.startCoroutine.R,%20kotlin.coroutines.Continuation((kotlin.coroutines.startCoroutine.T)))/completion&quot;&gt;완료&lt;/a&gt; 코 루틴은 결과 또는 예외로 완료 될 때 연속 호출된다.</target>
        </trans-unit>
        <trans-unit id="14c38709fc453b41bd452218007cb35f2d68079b" translate="yes" xml:space="preserve">
          <source>Starts a coroutine without a receiver and with result type &lt;a href=&quot;start-coroutine#T&quot;&gt;T&lt;/a&gt;. This function creates and starts a new, fresh instance of suspendable computation every time it is invoked. The &lt;a href=&quot;start-coroutine#kotlin.coroutines%24startCoroutine%28kotlin.coroutines.SuspendFunction0%28%28kotlin.coroutines.startCoroutine.T%29%29%2C+kotlin.coroutines.Continuation%28%28kotlin.coroutines.startCoroutine.T%29%29%29%2Fcompletion&quot;&gt;completion&lt;/a&gt; continuation is invoked when the coroutine completes with a result or an exception.</source>
          <target state="translated">수신자없이 결과 유형 &lt;a href=&quot;start-coroutine#T&quot;&gt;T&lt;/a&gt; 로 코 루틴을 시작합니다 . 이 함수는 호출 할 때마다 새로운 일시 중단 가능한 계산 인스턴스를 생성하고 시작합니다. &lt;a href=&quot;start-coroutine#kotlin.coroutines%24startCoroutine%28kotlin.coroutines.SuspendFunction0%28%28kotlin.coroutines.startCoroutine.T%29%29%2C+kotlin.coroutines.Continuation%28%28kotlin.coroutines.startCoroutine.T%29%29%29%2Fcompletion&quot;&gt;완료&lt;/a&gt; 코 루틴은 결과 또는 예외로 완료 될 때 연속 호출된다.</target>
        </trans-unit>
        <trans-unit id="680ce3bf07f76d76f4284acff2d7d36edd428e4a" translate="yes" xml:space="preserve">
          <source>Starts a coroutine without a receiver and with result type &lt;a href=&quot;start-coroutine#T&quot;&gt;T&lt;/a&gt;. This function creates and starts a new, fresh instance of suspendable computation every time it is invoked. The &lt;a href=&quot;start-coroutine#kotlin.coroutines%24startCoroutine(kotlin.coroutines.SuspendFunction0((kotlin.coroutines.startCoroutine.T)),%20kotlin.coroutines.Continuation((kotlin.coroutines.startCoroutine.T)))/completion&quot;&gt;completion&lt;/a&gt; continuation is invoked when the coroutine completes with a result or an exception.</source>
          <target state="translated">수신자없이 결과 유형 &lt;a href=&quot;start-coroutine#T&quot;&gt;T&lt;/a&gt; 로 코 루틴을 시작합니다 . 이 함수는 호출 될 때마다 일시 중단 가능한 계산의 새 인스턴스를 만들고 시작합니다. &lt;a href=&quot;start-coroutine#kotlin.coroutines%24startCoroutine(kotlin.coroutines.SuspendFunction0((kotlin.coroutines.startCoroutine.T)),%20kotlin.coroutines.Continuation((kotlin.coroutines.startCoroutine.T)))/completion&quot;&gt;완료&lt;/a&gt; 코 루틴은 결과 또는 예외로 완료 될 때 연속 호출된다.</target>
        </trans-unit>
        <trans-unit id="5ad5c461ffacb6e08120b54a5c5c09dc010d10cb" translate="yes" xml:space="preserve">
          <source>Starts an unintercepted coroutine with receiver type &lt;a href=&quot;start-coroutine-unintercepted-or-return#R&quot;&gt;R&lt;/a&gt; and result type &lt;a href=&quot;start-coroutine-unintercepted-or-return#T&quot;&gt;T&lt;/a&gt; and executes it until its first suspension. Returns the result of the coroutine or throws its exception if it does not suspend or &lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d&quot;&gt;COROUTINE_SUSPENDED&lt;/a&gt; if it suspends. In the latter case, the &lt;a href=&quot;start-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24startCoroutineUninterceptedOrReturn%28kotlin.coroutines.SuspendFunction1%28%28kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.R%2C+kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%2C+kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.R%2C+kotlin.coroutines.Continuation%28%28kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%29%2Fcompletion&quot;&gt;completion&lt;/a&gt; continuation is invoked when the coroutine completes with a result or an exception.</source>
          <target state="translated">리시버 유형 &lt;a href=&quot;start-coroutine-unintercepted-or-return#R&quot;&gt;R&lt;/a&gt; 및 결과 유형 &lt;a href=&quot;start-coroutine-unintercepted-or-return#T&quot;&gt;T를&lt;/a&gt; 사용하여 인터셉트되지 않은 코 루틴을 시작 하고 첫 번째 일시 중단까지 실행합니다. 코 루틴 결과를 반환하거나, 일시 중단되지 않은 경우 예외를 발생 시키거나 , 중단되면 &lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d&quot;&gt;COROUTINE_SUSPENDED를 throw&lt;/a&gt; 합니다. 후자의 경우, 코 루틴이 결과 또는 예외와 함께 완료 될 때 &lt;a href=&quot;start-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24startCoroutineUninterceptedOrReturn%28kotlin.coroutines.SuspendFunction1%28%28kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.R%2C+kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%2C+kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.R%2C+kotlin.coroutines.Continuation%28%28kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%29%2Fcompletion&quot;&gt;완료&lt;/a&gt; 계속이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="eea330f2e3c8f4aad63821fe415632a52f31cb3b" translate="yes" xml:space="preserve">
          <source>Starts an unintercepted coroutine with receiver type &lt;a href=&quot;start-coroutine-unintercepted-or-return#R&quot;&gt;R&lt;/a&gt; and result type &lt;a href=&quot;start-coroutine-unintercepted-or-return#T&quot;&gt;T&lt;/a&gt; and executes it until its first suspension. Returns the result of the coroutine or throws its exception if it does not suspend or &lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d&quot;&gt;COROUTINE_SUSPENDED&lt;/a&gt; if it suspends. In the latter case, the &lt;a href=&quot;start-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24startCoroutineUninterceptedOrReturn(kotlin.coroutines.SuspendFunction1((kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.R,%20kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T)),%20kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.R,%20kotlin.coroutines.Continuation((kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T)))/completion&quot;&gt;completion&lt;/a&gt; continuation is invoked when the coroutine completes with a result or an exception.</source>
          <target state="translated">수신자 유형 &lt;a href=&quot;start-coroutine-unintercepted-or-return#R&quot;&gt;R&lt;/a&gt; 및 결과 유형 &lt;a href=&quot;start-coroutine-unintercepted-or-return#T&quot;&gt;T&lt;/a&gt; 로 인터셉트되지 않은 코 루틴을 시작 하고 첫 번째 일시 중단까지 실행합니다. 코 루틴의 결과를 반환하거나 일시 중단되지 않은 경우 예외를, 일시 중단 된 경우 &lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d&quot;&gt;COROUTINE_SUSPENDED를 throw&lt;/a&gt; 합니다. 후자의 경우 &lt;a href=&quot;start-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24startCoroutineUninterceptedOrReturn(kotlin.coroutines.SuspendFunction1((kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.R,%20kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T)),%20kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.R,%20kotlin.coroutines.Continuation((kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T)))/completion&quot;&gt;완료&lt;/a&gt; 코 루틴이 결과 또는 예외와 함께 완료 될 때 연속이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="334ec1f5ed05ab3e3f9b3bc457a00d70430e2e22" translate="yes" xml:space="preserve">
          <source>Starts an unintercepted coroutine without a receiver and with result type &lt;a href=&quot;start-coroutine-unintercepted-or-return#T&quot;&gt;T&lt;/a&gt; and executes it until its first suspension. Returns the result of the coroutine or throws its exception if it does not suspend or &lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d&quot;&gt;COROUTINE_SUSPENDED&lt;/a&gt; if it suspends. In the latter case, the &lt;a href=&quot;start-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24startCoroutineUninterceptedOrReturn%28kotlin.coroutines.SuspendFunction0%28%28kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%2C+kotlin.coroutines.Continuation%28%28kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%29%2Fcompletion&quot;&gt;completion&lt;/a&gt; continuation is invoked when the coroutine completes with a result or an exception.</source>
          <target state="translated">수신자없이 결과 유형 &lt;a href=&quot;start-coroutine-unintercepted-or-return#T&quot;&gt;T를&lt;/a&gt; 사용하여 인터셉트되지 않은 코 루틴을 시작 하고 첫 번째 일시 중단까지 실행합니다. 코 루틴 결과를 반환하거나, 일시 중단되지 않은 경우 예외를 발생 시키거나 , 중단되면 &lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d&quot;&gt;COROUTINE_SUSPENDED를 throw&lt;/a&gt; 합니다. 후자의 경우, 코 루틴이 결과 또는 예외와 함께 완료 될 때 &lt;a href=&quot;start-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24startCoroutineUninterceptedOrReturn%28kotlin.coroutines.SuspendFunction0%28%28kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%2C+kotlin.coroutines.Continuation%28%28kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%29%2Fcompletion&quot;&gt;완료&lt;/a&gt; 계속이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="8e32550b501c26b7694d5da5582d67fd0e8523c5" translate="yes" xml:space="preserve">
          <source>Starts an unintercepted coroutine without a receiver and with result type &lt;a href=&quot;start-coroutine-unintercepted-or-return#T&quot;&gt;T&lt;/a&gt; and executes it until its first suspension. Returns the result of the coroutine or throws its exception if it does not suspend or &lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d&quot;&gt;COROUTINE_SUSPENDED&lt;/a&gt; if it suspends. In the latter case, the &lt;a href=&quot;start-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24startCoroutineUninterceptedOrReturn(kotlin.coroutines.SuspendFunction0((kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T)),%20kotlin.coroutines.Continuation((kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T)))/completion&quot;&gt;completion&lt;/a&gt; continuation is invoked when the coroutine completes with a result or an exception.</source>
          <target state="translated">리시버없이 결과 유형이 &lt;a href=&quot;start-coroutine-unintercepted-or-return#T&quot;&gt;T&lt;/a&gt; 인 인터셉트되지 않은 코 루틴을 시작 하고 첫 번째 중단까지 실행합니다. 코 루틴의 결과를 반환하거나 일시 중단되지 않은 경우 예외를, 일시 중단 된 경우 &lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d&quot;&gt;COROUTINE_SUSPENDED를 throw&lt;/a&gt; 합니다. 후자의 경우, 코 루틴이 결과 또는 예외와 함께 완료 될 때 &lt;a href=&quot;start-coroutine-unintercepted-or-return#kotlin.coroutines.intrinsics%24startCoroutineUninterceptedOrReturn(kotlin.coroutines.SuspendFunction0((kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T)),%20kotlin.coroutines.Continuation((kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn.T)))/completion&quot;&gt;완료&lt;/a&gt; 연속이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="3ddb5f3024adc4fc2cb11955f22b8f2de6b0e3b1" translate="yes" xml:space="preserve">
          <source>Starts coroutine with receiver type &lt;a href=&quot;start-coroutine#R&quot;&gt;R&lt;/a&gt; and result type &lt;a href=&quot;start-coroutine#T&quot;&gt;T&lt;/a&gt;. This function creates and start a new, fresh instance of suspendable computation every time it is invoked. The &lt;a href=&quot;start-coroutine#kotlin.coroutines.experimental%24startCoroutine%28kotlin.coroutines.SuspendFunction1%28%28kotlin.coroutines.experimental.startCoroutine.R%2C+kotlin.coroutines.experimental.startCoroutine.T%29%29%2C+kotlin.coroutines.experimental.startCoroutine.R%2C+kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.startCoroutine.T%29%29%29%2Fcompletion&quot;&gt;completion&lt;/a&gt; continuation is invoked when coroutine completes with result or exception.</source>
          <target state="translated">수신자 유형 &lt;a href=&quot;start-coroutine#R&quot;&gt;R&lt;/a&gt; 및 결과 유형 &lt;a href=&quot;start-coroutine#T&quot;&gt;T로&lt;/a&gt; 코 루틴을 시작합니다 . 이 함수는 호출 할 때마다 새롭고 새로운 일시 중단 가능한 계산 인스턴스를 생성하고 시작합니다. &lt;a href=&quot;start-coroutine#kotlin.coroutines.experimental%24startCoroutine%28kotlin.coroutines.SuspendFunction1%28%28kotlin.coroutines.experimental.startCoroutine.R%2C+kotlin.coroutines.experimental.startCoroutine.T%29%29%2C+kotlin.coroutines.experimental.startCoroutine.R%2C+kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.startCoroutine.T%29%29%29%2Fcompletion&quot;&gt;완료&lt;/a&gt; 코 루틴은 결과 또는 예외로 완료 될 때 연속이 호출된다.</target>
        </trans-unit>
        <trans-unit id="926abb8b1e85620405b11eda69dc96cfcc1f565d" translate="yes" xml:space="preserve">
          <source>Starts coroutine without receiver and with result type &lt;a href=&quot;start-coroutine#T&quot;&gt;T&lt;/a&gt;. This function creates and start a new, fresh instance of suspendable computation every time it is invoked. The &lt;a href=&quot;start-coroutine#kotlin.coroutines.experimental%24startCoroutine%28kotlin.coroutines.SuspendFunction0%28%28kotlin.coroutines.experimental.startCoroutine.T%29%29%2C+kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.startCoroutine.T%29%29%29%2Fcompletion&quot;&gt;completion&lt;/a&gt; continuation is invoked when coroutine completes with result or exception.</source>
          <target state="translated">수신자없이 결과 유형 &lt;a href=&quot;start-coroutine#T&quot;&gt;T로&lt;/a&gt; 코 루틴을 시작합니다 . 이 함수는 호출 할 때마다 새롭고 새로운 일시 중단 가능한 계산 인스턴스를 생성하고 시작합니다. &lt;a href=&quot;start-coroutine#kotlin.coroutines.experimental%24startCoroutine%28kotlin.coroutines.SuspendFunction0%28%28kotlin.coroutines.experimental.startCoroutine.T%29%29%2C+kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.startCoroutine.T%29%29%29%2Fcompletion&quot;&gt;완료&lt;/a&gt; 코 루틴은 결과 또는 예외로 완료 될 때 연속이 호출된다.</target>
        </trans-unit>
        <trans-unit id="2e41ff62360a7519652b277899448ef726bd6a59" translate="yes" xml:space="preserve">
          <source>Starts unintercepted coroutine with receiver type &lt;a href=&quot;start-coroutine-unintercepted-or-return#R&quot;&gt;R&lt;/a&gt; and result type &lt;a href=&quot;start-coroutine-unintercepted-or-return#T&quot;&gt;T&lt;/a&gt; and executes it until its first suspension. Returns the result of the coroutine or throws its exception if it does not suspend or &lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d#kotlin.coroutines.experimental.intrinsics%24COROUTINE_SUSPENDED&quot;&gt;COROUTINE_SUSPENDED&lt;/a&gt; if it suspends. In the latter case, the &lt;a href=&quot;start-coroutine-unintercepted-or-return#kotlin.coroutines.experimental.intrinsics%24startCoroutineUninterceptedOrReturn%28kotlin.coroutines.SuspendFunction1%28%28kotlin.coroutines.experimental.intrinsics.startCoroutineUninterceptedOrReturn.R%2C+kotlin.coroutines.experimental.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%2C+kotlin.coroutines.experimental.intrinsics.startCoroutineUninterceptedOrReturn.R%2C+kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%29%2Fcompletion&quot;&gt;completion&lt;/a&gt; continuation is invoked when coroutine completes with result or exception. This function is designed to be used from inside of &lt;a href=&quot;suspend-coroutine-or-return&quot;&gt;suspendCoroutineOrReturn&lt;/a&gt; to resume the execution of a suspended coroutine using a reference to the suspending function.</source>
          <target state="translated">리시버 유형 &lt;a href=&quot;start-coroutine-unintercepted-or-return#R&quot;&gt;R&lt;/a&gt; 및 결과 유형 &lt;a href=&quot;start-coroutine-unintercepted-or-return#T&quot;&gt;T로&lt;/a&gt; 인터셉트되지 않은 코 루틴을 시작 하고 첫 번째 일시 중단까지 실행합니다. 코 루틴 결과를 반환하거나, 일시 중단되지 않은 경우 예외를 발생 시키거나 , 중단되면 &lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d#kotlin.coroutines.experimental.intrinsics%24COROUTINE_SUSPENDED&quot;&gt;COROUTINE_SUSPENDED를 throw&lt;/a&gt; 합니다. 후자의 경우, 코 루틴이 결과 또는 예외와 함께 &lt;a href=&quot;start-coroutine-unintercepted-or-return#kotlin.coroutines.experimental.intrinsics%24startCoroutineUninterceptedOrReturn%28kotlin.coroutines.SuspendFunction1%28%28kotlin.coroutines.experimental.intrinsics.startCoroutineUninterceptedOrReturn.R%2C+kotlin.coroutines.experimental.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%2C+kotlin.coroutines.experimental.intrinsics.startCoroutineUninterceptedOrReturn.R%2C+kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%29%2Fcompletion&quot;&gt;완료되면 완료&lt;/a&gt; 계속이 호출됩니다. 이 함수는 &lt;a href=&quot;suspend-coroutine-or-return&quot;&gt;suspendCoroutineOrReturn&lt;/a&gt; 내부에서 사용하여 일시 중단 함수에 대한 참조를 사용하여 일시 중단 된 코 루틴 실행을 재개 하도록 설계되었습니다 .</target>
        </trans-unit>
        <trans-unit id="2788b8cd3b5da900d1f6ab2449049c41a16ae34e" translate="yes" xml:space="preserve">
          <source>Starts unintercepted coroutine without receiver and with result type &lt;a href=&quot;start-coroutine-unintercepted-or-return#T&quot;&gt;T&lt;/a&gt; and executes it until its first suspension. Returns the result of the coroutine or throws its exception if it does not suspend or &lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d#kotlin.coroutines.experimental.intrinsics%24COROUTINE_SUSPENDED&quot;&gt;COROUTINE_SUSPENDED&lt;/a&gt; if it suspends. In the latter case, the &lt;a href=&quot;start-coroutine-unintercepted-or-return#kotlin.coroutines.experimental.intrinsics%24startCoroutineUninterceptedOrReturn%28kotlin.coroutines.SuspendFunction0%28%28kotlin.coroutines.experimental.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%2C+kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%29%2Fcompletion&quot;&gt;completion&lt;/a&gt; continuation is invoked when coroutine completes with result or exception. This function is designed to be used from inside of &lt;a href=&quot;suspend-coroutine-or-return&quot;&gt;suspendCoroutineOrReturn&lt;/a&gt; to resume the execution of a suspended coroutine using a reference to the suspending function.</source>
          <target state="translated">수신기없이 결과 유형 &lt;a href=&quot;start-coroutine-unintercepted-or-return#T&quot;&gt;T를 사용&lt;/a&gt; 하여 인터셉트되지 않은 코 루틴을 시작 하고 첫 번째 일시 중단까지이를 실행합니다. 코 루틴 결과를 반환하거나, 일시 중단되지 않은 경우 예외를 발생 시키거나 , 중단되면 &lt;a href=&quot;-c-o-r-o-u-t-i-n-e_-s-u-s-p-e-n-d-e-d#kotlin.coroutines.experimental.intrinsics%24COROUTINE_SUSPENDED&quot;&gt;COROUTINE_SUSPENDED를 throw&lt;/a&gt; 합니다. 후자의 경우, 코 루틴이 결과 또는 예외와 함께 &lt;a href=&quot;start-coroutine-unintercepted-or-return#kotlin.coroutines.experimental.intrinsics%24startCoroutineUninterceptedOrReturn%28kotlin.coroutines.SuspendFunction0%28%28kotlin.coroutines.experimental.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%2C+kotlin.coroutines.experimental.Continuation%28%28kotlin.coroutines.experimental.intrinsics.startCoroutineUninterceptedOrReturn.T%29%29%29%2Fcompletion&quot;&gt;완료되면 완료&lt;/a&gt; 계속이 호출됩니다. 이 함수는 &lt;a href=&quot;suspend-coroutine-or-return&quot;&gt;suspendCoroutineOrReturn&lt;/a&gt; 내부에서 사용하여 일시 중단 함수에 대한 참조를 사용하여 일시 중단 된 코 루틴 실행을 재개 하도록 설계되었습니다 .</target>
        </trans-unit>
        <trans-unit id="a33cea1b6a9bd48cd9741eb556f78b336e49b52e" translate="yes" xml:space="preserve">
          <source>State of the future object.</source>
          <target state="translated">미래 객체의 상태.</target>
        </trans-unit>
        <trans-unit id="00fd0f5644f4a68b8db2baa79325e9de7d191ef2" translate="yes" xml:space="preserve">
          <source>Static and shared libraries have the suffixes static and shared respectively, for example, &lt;code&gt;fooDebugStatic&lt;/code&gt; or &lt;code&gt;barReleaseShared&lt;/code&gt;.</source>
          <target state="translated">정적 및 공유 라이브러리에는 각각 static 및 shared 접미사가 있습니다 (예 : &lt;code&gt;fooDebugStatic&lt;/code&gt; 또는 &lt;code&gt;barReleaseShared&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="600b8907db339cd22478c83d4a16dd85a73015b0" translate="yes" xml:space="preserve">
          <source>Static fields</source>
          <target state="translated">정적 필드</target>
        </trans-unit>
        <trans-unit id="33a218e75ba6181a2de679fe4af45102826155a5" translate="yes" xml:space="preserve">
          <source>Static library.</source>
          <target state="translated">정적 라이브러리.</target>
        </trans-unit>
        <trans-unit id="d15bec36fb146b0a59873196f4b808af2a0c58d9" translate="yes" xml:space="preserve">
          <source>Static members</source>
          <target state="translated">정적 멤버</target>
        </trans-unit>
        <trans-unit id="3367f809c842440e588af1b9c4ce823b40a614e7" translate="yes" xml:space="preserve">
          <source>Static members of Java classes form &quot;companion objects&quot; for these classes. We cannot pass such a &quot;companion object&quot; around as a value, but can access the members explicitly, for example:</source>
          <target state="translated">Java 클래스의 정적 멤버는이 클래스에 대한 &quot;컴패니언 오브젝트&quot;를 형성합니다. 이러한 &quot;companion 객체&quot;를 값으로 전달할 수 없지만 다음과 같이 멤버에 명시 적으로 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="749a016bf10749d6bbdfc0717392432e9f0401f6" translate="yes" xml:space="preserve">
          <source>Static methods</source>
          <target state="translated">정적 메소드</target>
        </trans-unit>
        <trans-unit id="d553499a1ed80ace789bfb1505f062f70a9599b6" translate="yes" xml:space="preserve">
          <source>Static native library</source>
          <target state="translated">정적 네이티브 라이브러리</target>
        </trans-unit>
        <trans-unit id="931e7197a7d758327554f5adffb19528eb5a8632" translate="yes" xml:space="preserve">
          <source>Static typing and null safety help create reliable, maintainable code that is easy to troubleshoot.</source>
          <target state="translated">정적 타이핑 및 null 안전은 문제 해결이 쉬운 안정적이고 유지 관리 가능한 코드를 만드는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="352274d59d59b1511e7ddd7438d2c2b359144fe5" translate="yes" xml:space="preserve">
          <source>Status of different components</source>
          <target state="translated">다른 구성 요소의 상태</target>
        </trans-unit>
        <trans-unit id="f3807792854b99f68c6be94a83962b160d23fe45" translate="yes" xml:space="preserve">
          <source>Stay in the constant feedback loop with the users.</source>
          <target state="translated">사용자와 지속적인 피드백 루프를 유지하십시오.</target>
        </trans-unit>
        <trans-unit id="f94f58f50f4cb02a7cf2e081505d0705933f148e" translate="yes" xml:space="preserve">
          <source>Stepping</source>
          <target state="translated">Stepping</target>
        </trans-unit>
        <trans-unit id="2d96e356b3dfea348019e9d1d257295bebd82c9a" translate="yes" xml:space="preserve">
          <source>Stepping functions works mostly the same way as for C/C++ programs</source>
          <target state="translated">스테핑 기능은 C / C ++ 프로그램과 거의 동일한 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="1fdc6b688a5c8cce5acf4ba7f33e8a0452810157" translate="yes" xml:space="preserve">
          <source>Still, it's not 100% finished, so changes are possible (including ones based on your own feedback).</source>
          <target state="translated">그래도 100 % 완료되지 않았으므로 변경이 가능합니다 (자신의 피드백을 기반으로 한 변경 포함).</target>
        </trans-unit>
        <trans-unit id="9e092dda4f0e27d0c7686ddd00272079e678b6e6" translate="yes" xml:space="preserve">
          <source>Storage</source>
          <target state="translated">Storage</target>
        </trans-unit>
        <trans-unit id="248e9b3aa308183a170c36806544acb1d393c459" translate="yes" xml:space="preserve">
          <source>StorageEventInit</source>
          <target state="translated">StorageEventInit</target>
        </trans-unit>
        <trans-unit id="d976f838e65f2db3d7f099767b0928393c1ede54" translate="yes" xml:space="preserve">
          <source>Store old code style in project</source>
          <target state="translated">프로젝트에 이전 코드 스타일 저장</target>
        </trans-unit>
        <trans-unit id="6afbacec45c0da97dff5ccf3dbf2645d5876c3c5" translate="yes" xml:space="preserve">
          <source>Store the initial value of &lt;code&gt;a&lt;/code&gt; to a temporary storage &lt;code&gt;a0&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; 의 초기 값을 임시 스토리지 &lt;code&gt;a0&lt;/code&gt; 에 저장하십시오 .</target>
        </trans-unit>
        <trans-unit id="9c71e9de239b5ab938dbca4a1d875b22b4f56ace" translate="yes" xml:space="preserve">
          <source>Stores instance size of the type T: CEnumVar.</source>
          <target state="translated">유형 T : CEnumVar의 인스턴스 크기를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="1c3904cdae80dc0a8fc8d311b3ceb604faa99393" translate="yes" xml:space="preserve">
          <source>Stores the value of the property for the given object in this mutable map.</source>
          <target state="translated">지정된 객체의 속성 값을이 변경 가능한 맵에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="063a13497de8628ed966341d4c8998e048faac77" translate="yes" xml:space="preserve">
          <source>Storing Properties in a Map</source>
          <target state="translated">맵에 속성 저장</target>
        </trans-unit>
        <trans-unit id="ddb303d499265b7489a4f48bffe279ba6adc50f0" translate="yes" xml:space="preserve">
          <source>Storing properties in a map</source>
          <target state="translated">지도에 속성 저장</target>
        </trans-unit>
        <trans-unit id="cc60d9a373cacd1f7b4d2be35acf2bfd9970e460" translate="yes" xml:space="preserve">
          <source>Strictfp</source>
          <target state="translated">Strictfp</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="dcadc5a0cb117211f9dc789c191b1d6c306ecd43" translate="yes" xml:space="preserve">
          <source>String Interpolation</source>
          <target state="translated">문자열 보간</target>
        </trans-unit>
        <trans-unit id="18c909570fe3d2f04f7e3e21101c4ef09a029b7b" translate="yes" xml:space="preserve">
          <source>String Literals</source>
          <target state="translated">문자열 리터럴</target>
        </trans-unit>
        <trans-unit id="3ad53eca410dfbc39bc16b33326f447092d15b4c" translate="yes" xml:space="preserve">
          <source>String Templates</source>
          <target state="translated">문자열 템플릿</target>
        </trans-unit>
        <trans-unit id="3ce59ba99c8eaf2a5afe5adcf7f90b7c4f8b3415" translate="yes" xml:space="preserve">
          <source>String builder can be used to efficiently perform multiple string manipulation operations.</source>
          <target state="translated">문자열 작성기를 사용하여 여러 문자열 조작 작업을 효율적으로 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5993cb336c6391ee8eea94b873bb797a1c4d4619" translate="yes" xml:space="preserve">
          <source>String literals</source>
          <target state="translated">문자열 리터럴</target>
        </trans-unit>
        <trans-unit id="26999992a443711764128a5ebde38ee89dae6779" translate="yes" xml:space="preserve">
          <source>String literals may contain template expressions, i.e. pieces of code that are evaluated and whose results are concatenated into the string. A template expression starts with a dollar sign ($) and consists of either a simple name:</source>
          <target state="translated">문자열 리터럴에는 템플릿 표현식, 즉 평가되고 결과가 문자열로 연결된 코드 조각이 포함될 수 있습니다. 템플릿 표현식은 달러 기호 ($)로 시작하며 간단한 이름으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="8de7744f81c5ea96546b7ddeba1d815a5f60f342" translate="yes" xml:space="preserve">
          <source>String representation</source>
          <target state="translated">문자열 표현</target>
        </trans-unit>
        <trans-unit id="6ab7e78e76236d943760ced282c69d00f2ee64f3" translate="yes" xml:space="preserve">
          <source>String representation of the worker.</source>
          <target state="translated">작업자의 문자열 표현입니다.</target>
        </trans-unit>
        <trans-unit id="4f85bffe8cf536bd27d4c8a65ebe070b04592d3f" translate="yes" xml:space="preserve">
          <source>String templates</source>
          <target state="translated">문자열 템플릿</target>
        </trans-unit>
        <trans-unit id="7436274167a247aa32b0eb69c8fa150ce90cf60e" translate="yes" xml:space="preserve">
          <source>String to number conversions</source>
          <target state="translated">문자열을 숫자로 변환</target>
        </trans-unit>
        <trans-unit id="d8722e7c9e74dd4282c8ddb6aafb6678ffcf1c49" translate="yes" xml:space="preserve">
          <source>StringBuilder</source>
          <target state="translated">StringBuilder</target>
        </trans-unit>
        <trans-unit id="3816c4beac471c733eed1d91c213f8c2b6a29262" translate="yes" xml:space="preserve">
          <source>Strings</source>
          <target state="translated">Strings</target>
        </trans-unit>
        <trans-unit id="376d2dc017ddcafe576a8bb45c3839697d243c0f" translate="yes" xml:space="preserve">
          <source>Strings are represented by the type &lt;code&gt;String&lt;/code&gt;. Strings are immutable. Elements of a string are characters that can be accessed by the indexing operation: &lt;code&gt;s[i]&lt;/code&gt;. A string can be iterated over with a &lt;em&gt;for&lt;/em&gt;-loop:</source>
          <target state="translated">문자열은 &lt;code&gt;String&lt;/code&gt; 유형으로 표시됩니다 . 문자열은 변경할 수 없습니다. 문자열의 요소는 색인 작성 조작으로 액세스 할 수있는 문자입니다 : &lt;code&gt;s[i]&lt;/code&gt; . &lt;em&gt;for&lt;/em&gt; 루프 를 사용하여 문자열을 반복 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6f7691f2e802476360e0176ca90e2968711fe093" translate="yes" xml:space="preserve">
          <source>Strings from C and how they look in Kotlin/Native</source>
          <target state="translated">C의 문자열과 Kotlin / Native에서 어떻게 보이는지</target>
        </trans-unit>
        <trans-unit id="2684320b57a782ce0439d9845b025f4167f73160" translate="yes" xml:space="preserve">
          <source>Strong bidirectional character type &quot;AL&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 강력한 쌍방향 캐릭터 타입 「AL」</target>
        </trans-unit>
        <trans-unit id="8af8df666f0e8eca9822d09b9b728f2790d43a77" translate="yes" xml:space="preserve">
          <source>Strong bidirectional character type &quot;L&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 강력한 쌍방향 문자 타입 &quot;L&quot;</target>
        </trans-unit>
        <trans-unit id="277bd06a9fb3591003f711495ac46fc89282f28e" translate="yes" xml:space="preserve">
          <source>Strong bidirectional character type &quot;LRE&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 강력한 쌍방향 캐릭터 타입 「LRE」</target>
        </trans-unit>
        <trans-unit id="f0a8c58716e90117a1fa5949bd4edff7bafc489d" translate="yes" xml:space="preserve">
          <source>Strong bidirectional character type &quot;LRO&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 강력한 쌍방향 문자 타입 &quot;LRO&quot;</target>
        </trans-unit>
        <trans-unit id="5c434a125001d98e3d65585f819ed8840b4f8897" translate="yes" xml:space="preserve">
          <source>Strong bidirectional character type &quot;R&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 강력한 쌍방향 문자 타입 &quot;R&quot;</target>
        </trans-unit>
        <trans-unit id="64ad0d6aedac34d34b627e0784d46dea64c2ff5a" translate="yes" xml:space="preserve">
          <source>Strong bidirectional character type &quot;RLE&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 강력한 쌍방향 캐릭터 타입 「RLE」</target>
        </trans-unit>
        <trans-unit id="1665148f18e9a39912a6a12baccd3148269f2320" translate="yes" xml:space="preserve">
          <source>Strong bidirectional character type &quot;RLO&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 강력한 쌍방향 캐릭터 타입 「RLO」</target>
        </trans-unit>
        <trans-unit id="9c004726cb57880ed84082cc7d8ab781ff8b2f55" translate="yes" xml:space="preserve">
          <source>Stronger integrations for &lt;a href=&quot;https://github.com/Kotlin/dukat&quot;&gt;Dukat&lt;/a&gt;, the generator for Kotlin external declarations. External declarations can now be generated at build time, or can be manually generated via a Gradle task. Read more about how to use the integration &lt;a href=&quot;js-external-declarations-with-dukat&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Kotlin 외부 선언을위한 생성기 인 &lt;a href=&quot;https://github.com/Kotlin/dukat&quot;&gt;Dukat의&lt;/a&gt; 통합이 강화되었습니다 . 이제 외부 선언을 빌드시 생성하거나 Gradle 작업을 통해 수동으로 생성 할 수 있습니다. &lt;a href=&quot;js-external-declarations-with-dukat&quot;&gt;여기&lt;/a&gt; 에서 통합 사용 방법에 대해 자세히 알아보십시오 .</target>
        </trans-unit>
        <trans-unit id="f21f357479481b3172a23f12385bf19995dd2f48" translate="yes" xml:space="preserve">
          <source>Struct and Union types from C and how they look in Kotlin/Native</source>
          <target state="translated">C의 Struct 및 Union 유형과 Kotlin / Native의 모양</target>
        </trans-unit>
        <trans-unit id="af5b40acf56f32ead50b7b4376e35475ae8821af" translate="yes" xml:space="preserve">
          <source>Structs / unions are mapped to types having fields available via the dot notation, i.e. &lt;code&gt;someStructInstance.field1&lt;/code&gt;.</source>
          <target state="translated">Structs / union은 점 표기법을 통해 사용 가능한 필드가있는 유형 (예 : &lt;code&gt;someStructInstance.field1&lt;/code&gt; )에 맵핑 됩니다.</target>
        </trans-unit>
        <trans-unit id="024b6c74302356ab4e71438eaaf0b40da91567fc" translate="yes" xml:space="preserve">
          <source>Structural changes in the base list make the behavior of the view undefined.</source>
          <target state="translated">기본 목록의 구조적 변경으로 인해 뷰의 동작이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="72d92fad333f84fb34170c273e339309112411ea" translate="yes" xml:space="preserve">
          <source>Structural equality</source>
          <target state="translated">구조적 평등</target>
        </trans-unit>
        <trans-unit id="7d27109df9078a59c52f1f92f6addfe6d10368ae" translate="yes" xml:space="preserve">
          <source>Structural equality (a check for &lt;code&gt;equals()&lt;/code&gt;).</source>
          <target state="translated">구조적 동등성 ( &lt;code&gt;equals()&lt;/code&gt; 검사 )</target>
        </trans-unit>
        <trans-unit id="ece356b48420c60af23fc6b7ecae7a03ec149030" translate="yes" xml:space="preserve">
          <source>Structural equality comparisons are done with &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;, like in Python, but it's up to each class to define what that means, by &lt;a href=&quot;inheritance#overriding&quot;&gt;overriding&lt;/a&gt;&lt;a href=&quot;classes#inherited-built-in-functions&quot;&gt;&lt;code&gt;equals()&lt;/code&gt;&lt;/a&gt; (which will be called on the left operand with the right operand as the parameter) and &lt;code&gt;hashCode()&lt;/code&gt;. Most built-in collection types implement deep equality checks for these operators and functions. Reference comparisons - checking if two variables refer to the same object (the same as &lt;code&gt;is&lt;/code&gt; in Python) - are done with &lt;code&gt;===&lt;/code&gt; and &lt;code&gt;!==&lt;/code&gt;.</source>
          <target state="translated">파이썬에서와 같이 구조 평등 비교는 &lt;code&gt;==&lt;/code&gt; 및 &lt;code&gt;!=&lt;/code&gt; 으로 수행 되지만 &lt;a href=&quot;classes#inherited-built-in-functions&quot;&gt; &lt;code&gt;equals()&lt;/code&gt; &lt;/a&gt; 를 &lt;a href=&quot;inheritance#overriding&quot;&gt;재정&lt;/a&gt; 의하여 의미를 정의하는 것은 각 클래스에 달려 있습니다. 그리고 &lt;code&gt;hashCode()&lt;/code&gt; . 대부분의 기본 제공 컬렉션 유형은 이러한 연산자와 함수에 대해 심도 평등 검사를 구현합니다. 참조 비교 - 두 변수가 동일한 개체 (같은 참조하는 경우 확인 &lt;code&gt;is&lt;/code&gt; 파이썬) -으로 완료 &lt;code&gt;===&lt;/code&gt; 와 &lt;code&gt;!==&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b70b639ef5cff3c53b813230fbda1e132ca3cce" translate="yes" xml:space="preserve">
          <source>Structural equality has nothing to do with comparison defined by the &lt;code&gt;Comparable&amp;lt;...&amp;gt;&lt;/code&gt; interface, so only a custom &lt;code&gt;equals(Any?)&lt;/code&gt; implementation may affect the behavior of the operator.</source>
          <target state="translated">구조적 평등은 &lt;code&gt;Comparable&amp;lt;...&amp;gt;&lt;/code&gt; 인터페이스에 의해 정의 된 비교와 아무 관련이 없으므로 사용자 정의 &lt;code&gt;equals(Any?)&lt;/code&gt; 구현 만 연산자의 동작에 영향을 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b976e0b583b0412204edf019c0b11bd8b81727df" translate="yes" xml:space="preserve">
          <source>Structural equality is checked by the &lt;code&gt;==&lt;/code&gt; operation (and its negated counterpart &lt;code&gt;!=&lt;/code&gt;). By convention, an expression like &lt;code&gt;a == b&lt;/code&gt; is translated to:</source>
          <target state="translated">구조 평등은 &lt;code&gt;==&lt;/code&gt; 연산 (및 부정 된 대응 물 &lt;code&gt;!=&lt;/code&gt; ) 에 의해 점검됩니다 . 일반적으로 &lt;code&gt;a == b&lt;/code&gt; 와 같은 표현식은 다음과 같이 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="660ca66913fdaa764b314de4f4d616cb2af27fc3" translate="yes" xml:space="preserve">
          <source>Structured concurrency</source>
          <target state="translated">구조적 동시성</target>
        </trans-unit>
        <trans-unit id="688fd1f0d4f70b417561f286a2459a51d7a9bf8d" translate="yes" xml:space="preserve">
          <source>Structured concurrency with async</source>
          <target state="translated">비동기를 사용한 구조적 동시성</target>
        </trans-unit>
        <trans-unit id="ce867a84f68c1d0cd7e5d2e0a575c394cc078c03" translate="yes" xml:space="preserve">
          <source>StyleSheet</source>
          <target state="translated">StyleSheet</target>
        </trans-unit>
        <trans-unit id="105633f7a20c3c4e6cfe2fcb5bc3777e06065699" translate="yes" xml:space="preserve">
          <source>StyleSheetList</source>
          <target state="translated">StyleSheetList</target>
        </trans-unit>
        <trans-unit id="4eb481e8f0e6186576b990d8a8ee65c0bcaf3bd9" translate="yes" xml:space="preserve">
          <source>Subclasses of a class that implements an interface (in this case, &lt;code&gt;Car&lt;/code&gt;) are also considered to be implementing the interface.</source>
          <target state="translated">인터페이스 (이 경우 &lt;code&gt;Car&lt;/code&gt; ) 를 구현하는 클래스의 서브 클래스도 인터페이스를 구현하는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="82494d5df2327066831b19fcbdbc11f57f406da0" translate="yes" xml:space="preserve">
          <source>Subclassing</source>
          <target state="translated">Subclassing</target>
        </trans-unit>
        <trans-unit id="5aa09d55ccae6bc284a9aaa4b931ff34243aae33" translate="yes" xml:space="preserve">
          <source>Subclassing Kotlin classes and interfaces from Swift/Objective-C</source>
          <target state="translated">Swift / Objective-C에서 Kotlin 클래스 및 인터페이스 서브 클래 싱</target>
        </trans-unit>
        <trans-unit id="4c8bffd68e11c1e09416b7275b40472abdd31b0e" translate="yes" xml:space="preserve">
          <source>Subclassing Swift/Objective-C classes and protocols from Kotlin</source>
          <target state="translated">Kotlin의 Swift / Objective-C 클래스 및 프로토콜 서브 클래 싱</target>
        </trans-unit>
        <trans-unit id="d8cfc0d2ff946e39f440d5850a833061ce441784" translate="yes" xml:space="preserve">
          <source>Subtracts the other Char value from this value resulting an Int.</source>
          <target state="translated">이 값에서 다른 Char 값을 빼고 Int.</target>
        </trans-unit>
        <trans-unit id="f8fc787359f50113256ce34acd74e7ad27c2b7de" translate="yes" xml:space="preserve">
          <source>Subtracts the other Int value from this value resulting a Char.</source>
          <target state="translated">이 값에서 다른 Int 값을 빼면 Char가됩니다.</target>
        </trans-unit>
        <trans-unit id="cd1dd0acae6df690f4f408b7810c6a68a77d2c65" translate="yes" xml:space="preserve">
          <source>Subtracts the other value from this value.</source>
          <target state="translated">이 값에서 다른 값을 뺍니다.</target>
        </trans-unit>
        <trans-unit id="281078264fc551305c2d82e46c0dab3a6f90a54d" translate="yes" xml:space="preserve">
          <source>Successful completion</source>
          <target state="translated">성공적인 완료</target>
        </trans-unit>
        <trans-unit id="d6b1220988da8e4820eca8338c62f95c8d54d502" translate="yes" xml:space="preserve">
          <source>Such &lt;em&gt;smart casts&lt;/em&gt; work for &lt;a href=&quot;control-flow#when-expression&quot;&gt;&lt;em&gt;when&lt;/em&gt;-expressions&lt;/a&gt; and &lt;a href=&quot;control-flow#while-loops&quot;&gt;&lt;em&gt;while&lt;/em&gt;-loops&lt;/a&gt; as well:</source>
          <target state="translated">이러한 &lt;em&gt;스마트 캐스트에&lt;/em&gt; 대한 작업을 &lt;a href=&quot;control-flow#when-expression&quot;&gt;&lt;em&gt;할 때&lt;/em&gt; -expressions&lt;/a&gt; 하고 &lt;a href=&quot;control-flow#while-loops&quot;&gt;&lt;em&gt;있는 동안&lt;/em&gt; -loops&lt;/a&gt; 뿐만 아니라 :</target>
        </trans-unit>
        <trans-unit id="a6ca684a14efd3b57eb8a5d3ba3348ea50581bab" translate="yes" xml:space="preserve">
          <source>Such a chain returns &lt;em&gt;null&lt;/em&gt; if any of the properties in it is null.</source>
          <target state="translated">이러한 체인은 속성이 &lt;em&gt;null 인&lt;/em&gt; 경우 &lt;em&gt;null을&lt;/em&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7f52975c732e28d7449a1d2bd849f22d7254ffe5" translate="yes" xml:space="preserve">
          <source>Such a dependency can be included in a Podfile of an Xcode project and automatically built (and rebuilt) along with this project. As a result, importing to Xcode is simplified since there is no need to write corresponding Gradle tasks and Xcode build steps manually.</source>
          <target state="translated">이러한 종속성은 Xcode 프로젝트의 Podfile에 포함될 수 있으며이 프로젝트와 함께 자동으로 빌드 및 재 빌드 될 수 있습니다. 결과적으로 해당 Gradle 작업과 Xcode 빌드 단계를 수동으로 작성할 필요가 없으므로 Xcode로 가져 오기가 간단 해집니다.</target>
        </trans-unit>
        <trans-unit id="275498570896fad34600eda0578ce2760eeaa8db" translate="yes" xml:space="preserve">
          <source>Such annotation type should itself be annotated with both &lt;code&gt;@Nonnull&lt;/code&gt; (or its nickname) and &lt;code&gt;@TypeQualifierDefault(...)&lt;/code&gt; with one or more &lt;code&gt;ElementType&lt;/code&gt; values:</source>
          <target state="translated">이러한 주석 유형 자체 에는 하나 이상의 &lt;code&gt;ElementType&lt;/code&gt; 값이있는 &lt;code&gt;@Nonnull&lt;/code&gt; (또는 별명) 및 &lt;code&gt;@TypeQualifierDefault(...)&lt;/code&gt; 로 주석을 달아야 합니다.</target>
        </trans-unit>
        <trans-unit id="54a890751d7cb69dc2bb8082fffc6f90e74cda3e" translate="yes" xml:space="preserve">
          <source>Such common behaviours can be implemented as libraries using &lt;a href=&quot;delegated-properties&quot;&gt;&lt;em&gt;delegated properties&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">이러한 일반적인 동작은 &lt;a href=&quot;delegated-properties&quot;&gt;&lt;em&gt;위임 된 속성을&lt;/em&gt;&lt;/a&gt; 사용하여 라이브러리로 구현할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="71a7fa20221b612c2534c0cd56321d47af321a0e" translate="yes" xml:space="preserve">
          <source>Such objects can have supertypes:</source>
          <target state="translated">이러한 객체는 수퍼 타입을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="70d2b2ed000c8ab8416a2925902564c1eda90b74" translate="yes" xml:space="preserve">
          <source>Such properties can be used in annotations:</source>
          <target state="translated">이러한 속성은 주석에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1071ef3c60cf8dd3c256721ed0bebfd0d5200f8" translate="yes" xml:space="preserve">
          <source>Such returns (located in a lambda, but exiting the enclosing function) are called &lt;em&gt;non-local&lt;/em&gt; returns. We are used to this sort of construct in loops, which inline functions often enclose:</source>
          <target state="translated">이러한 리턴 (람다에 있지만 엔 클로징 함수를 종료)을 &lt;em&gt;로컬이 아닌&lt;/em&gt; 리턴 이라고 합니다. 인라인 함수는 종종 다음과 같은 루프 형태의 구성에 익숙합니다.</target>
        </trans-unit>
        <trans-unit id="10e6aa90785a792cb60500d5818fa4c115ff47c4" translate="yes" xml:space="preserve">
          <source>Such syntax is also known as &lt;em&gt;trailing lambda&lt;/em&gt;.</source>
          <target state="translated">이러한 구문은 &lt;em&gt;후미 람다&lt;/em&gt; 라고도 합니다.</target>
        </trans-unit>
        <trans-unit id="c8895d425ddb898eb0386c82032007c2c016e5af" translate="yes" xml:space="preserve">
          <source>Suffix to use for generated JavaScript files</source>
          <target state="translated">생성 된 JavaScript 파일에 사용할 접미사</target>
        </trans-unit>
        <trans-unit id="f20596f60d75184baac457dd39dfe5dbb7c92170" translate="yes" xml:space="preserve">
          <source>Suggested documentation pages:</source>
          <target state="translated">제안 된 문서 페이지 :</target>
        </trans-unit>
        <trans-unit id="12b71c3e0fe5f7c0b8d17cc03186e281412da4a8" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">Summary</target>
        </trans-unit>
        <trans-unit id="efddb0d943663d3990ff15feb5144465e26709a1" translate="yes" xml:space="preserve">
          <source>Superclass for all platform classes representing numeric values.</source>
          <target state="translated">숫자 값을 나타내는 모든 플랫폼 클래스의 수퍼 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="d57120c39b452641752cec548eba58dfe0d997dc" translate="yes" xml:space="preserve">
          <source>Supervision</source>
          <target state="translated">Supervision</target>
        </trans-unit>
        <trans-unit id="e8ca95dbcc7178511d7c5a9727cb4e64cd2491c0" translate="yes" xml:space="preserve">
          <source>Supervision job</source>
          <target state="translated">감독직</target>
        </trans-unit>
        <trans-unit id="b540bbae2b6598d9471d4e821a9a3c9f224811ce" translate="yes" xml:space="preserve">
          <source>Supervision scope</source>
          <target state="translated">감독 범위</target>
        </trans-unit>
        <trans-unit id="44228bb9b805267096502663a9f60eebe9337369" translate="yes" xml:space="preserve">
          <source>Support for ::foo as a shorthand for this::foo</source>
          <target state="translated">이를위한 약칭으로 :: foo 지원 :: foo</target>
        </trans-unit>
        <trans-unit id="d0c2aa432d624e03bde70166d9514ff6ad1db88d" translate="yes" xml:space="preserve">
          <source>Support for Kotlin&amp;rsquo;s suspending functions in Swift and Objective-C</source>
          <target state="translated">Swift 및 Objective-C에서 Kotlin의 일시 중지 기능 지원</target>
        </trans-unit>
        <trans-unit id="3ec47f1fa2e89d008f80cdf4b7103a20c0dbe0dc" translate="yes" xml:space="preserve">
          <source>Support for multiplatform programming is one of Kotlin&amp;rsquo;s key benefits. It reduces time spent writing and maintaining the same code for &lt;a href=&quot;mpp-supported-platforms&quot;&gt;different platforms&lt;/a&gt; while retaining the flexibility and benefits of native programming.</source>
          <target state="translated">멀티 플랫폼 프로그래밍 지원은 Kotlin의 주요 이점 중 하나입니다. 네이티브 프로그래밍의 유연성과 이점을 유지하면서 &lt;a href=&quot;mpp-supported-platforms&quot;&gt;다른 플랫폼에&lt;/a&gt; 대해 동일한 코드를 작성하고 유지하는 데 소요되는 시간을 줄 입니다.</target>
        </trans-unit>
        <trans-unit id="3339940e3b4d1b2f1f63ae89bd72c8651f6235d4" translate="yes" xml:space="preserve">
          <source>Support for multiplatform programming is one of Kotlin&amp;rsquo;s key benefits. It reduces time spent writing and maintaining the same code for &lt;a href=&quot;mpp-supported-platforms&quot;&gt;different platforms&lt;/a&gt; while retaining the flexibility and benefits of native programming. Learn more about &lt;a href=&quot;multiplatform&quot;&gt;Kotlin Mutliplatform benefits&lt;/a&gt;.</source>
          <target state="translated">멀티 플랫폼 프로그래밍 지원은 Kotlin의 주요 이점 중 하나입니다. 네이티브 프로그래밍의 유연성과 이점을 유지하면서 &lt;a href=&quot;mpp-supported-platforms&quot;&gt;다른 플랫폼에&lt;/a&gt; 대해 동일한 코드를 작성하고 유지하는 데 소요되는 시간을 줄 입니다. &lt;a href=&quot;multiplatform&quot;&gt;Kotlin Mutliplatform 혜택&lt;/a&gt; 에 대해 자세히 알아보세요 .</target>
        </trans-unit>
        <trans-unit id="11eb86f80e9c513cd771118d273f03b644cc87fb" translate="yes" xml:space="preserve">
          <source>Support for suspending functions in Swift and Objective-C</source>
          <target state="translated">Swift 및 Objective-C에서 기능 일시 중지 지원</target>
        </trans-unit>
        <trans-unit id="34c6c2ddc426343eed559ce47d4c777df69eba0c" translate="yes" xml:space="preserve">
          <source>Supported platforms</source>
          <target state="translated">지원되는 플랫폼</target>
        </trans-unit>
        <trans-unit id="9794d24ec85271049a86498f820c37d015564882" translate="yes" xml:space="preserve">
          <source>Supported types</source>
          <target state="translated">지원되는 유형</target>
        </trans-unit>
        <trans-unit id="93c79b3f7d0d1a76067ccba45bb58d73cfe3316b" translate="yes" xml:space="preserve">
          <source>Suppose there is a Java method that accepts an int array of indices:</source>
          <target state="translated">int 배열을 수용하는 Java 메소드가 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="0ca1c820ac8164eb818371a319e5876b522328ee" translate="yes" xml:space="preserve">
          <source>Suppose we have a generic interface &lt;code&gt;Source&amp;lt;T&amp;gt;&lt;/code&gt; that does not have any methods that take &lt;code&gt;T&lt;/code&gt; as a parameter, only methods that return &lt;code&gt;T&lt;/code&gt;:</source>
          <target state="translated">우리는 일반적인 인터페이스를 가지고 있다고 가정 &lt;code&gt;Source&amp;lt;T&amp;gt;&lt;/code&gt; 걸릴 어떤 방법이없는 그 &lt;code&gt;T&lt;/code&gt; 를 매개 변수로, 메소드 만 반환하는 &lt;code&gt;T&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d81855372fef77a8319ba3320877e631faefc705" translate="yes" xml:space="preserve">
          <source>Suppress</source>
          <target state="translated">Suppress</target>
        </trans-unit>
        <trans-unit id="74302714c32993ab6719979e3d35b0886ae84527" translate="yes" xml:space="preserve">
          <source>Suppress the compiler from displaying warnings during compilation.</source>
          <target state="translated">컴파일러가 컴파일 중에 경고를 표시하지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="f4bf603e39de5fe14652ee5e4d5bffe13ebca851" translate="yes" xml:space="preserve">
          <source>Suppresses all compilation warnings</source>
          <target state="translated">모든 컴파일 경고를 억제합니다</target>
        </trans-unit>
        <trans-unit id="c08ada99a3ce33d336392fa9e2fcc77dd914f220" translate="yes" xml:space="preserve">
          <source>Suppresses errors about variance conflict</source>
          <target state="translated">분산 충돌에 대한 오류를 억제합니다</target>
        </trans-unit>
        <trans-unit id="826a3782b77dd21352e84fb444cfe49b2d3d41ba" translate="yes" xml:space="preserve">
          <source>Suppresses the given compilation warnings in the annotated element.</source>
          <target state="translated">주석이 달린 요소에서 주어진 컴파일 경고를 억제합니다.</target>
        </trans-unit>
        <trans-unit id="69d0f54516180fa102c2933686469dcb8fed1c6f" translate="yes" xml:space="preserve">
          <source>Surrogate pairs included in this string builder are treated as single characters. Therefore, the order of the high-low surrogates is never reversed.</source>
          <target state="translated">이 문자열 작성기에 포함 된 서로 게이트 쌍은 단일 문자로 처리됩니다. 따라서 고 / 저 대리 순서는 절대로 바뀌지 않습니다.</target>
        </trans-unit>
        <trans-unit id="241d3fdbd44869e2a574d1386aad409e5e0ea8ca" translate="yes" xml:space="preserve">
          <source>Suspend conversion on callable references</source>
          <target state="translated">호출 가능한 참조에 대한 변환 일시 중지</target>
        </trans-unit>
        <trans-unit id="52d7c5ec374713f5f37d91138c052ccbb60ec732" translate="yes" xml:space="preserve">
          <source>Suspend functions are only allowed to be called from a coroutine or another suspend function</source>
          <target state="translated">일시 중단 기능은 코 루틴 또는 다른 일시 중단 기능에서만 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac8b279c6a3c1f3871f1125cc1498ab1f6a88def" translate="yes" xml:space="preserve">
          <source>SuspendFunction</source>
          <target state="translated">SuspendFunction</target>
        </trans-unit>
        <trans-unit id="ec4005f130005e7ee3fe9eb28e0b27154a02ee0d" translate="yes" xml:space="preserve">
          <source>Suspending functions</source>
          <target state="translated">서 스펜 딩 기능</target>
        </trans-unit>
        <trans-unit id="d52d9b4f1f762df95c3f2692f128dbd79352b8e8" translate="yes" xml:space="preserve">
          <source>Svetlana Isakova</source>
          <target state="translated">스베틀라나 이사 코바</target>
        </trans-unit>
        <trans-unit id="e1b1187bdbb9c730f8014294b12fac3d0e7be01a" translate="yes" xml:space="preserve">
          <source>Swapping two variables</source>
          <target state="translated">두 변수 교환</target>
        </trans-unit>
        <trans-unit id="112ab020698e5fc0f4baecd7821a512d8c419a69" translate="yes" xml:space="preserve">
          <source>Swift</source>
          <target state="translated">Swift</target>
        </trans-unit>
        <trans-unit id="a8109bd32e0a5f6c183b77a63fe28e74ded3e304" translate="yes" xml:space="preserve">
          <source>Swift via Objective-C</source>
          <target state="translated">Objective-C를 통한 Swift</target>
        </trans-unit>
        <trans-unit id="11e426a93e6bdc30eee83310a54fe55623d59394" translate="yes" xml:space="preserve">
          <source>Swift/Objective-C classes and protocols can be subclassed with a Kotlin &lt;code&gt;final&lt;/code&gt; class. Non-&lt;code&gt;final&lt;/code&gt; Kotlin classes inheriting Swift/Objective-C types aren't supported yet, so it is not possible to declare a complex class hierarchy inheriting Swift/Objective-C types.</source>
          <target state="translated">Swift / Objective-C 클래스 및 프로토콜은 Kotlin &lt;code&gt;final&lt;/code&gt; 클래스 로 서브 클래 싱 될 수 있습니다 . Swift / Objective-C 유형을 상속하는 비 &lt;code&gt;final&lt;/code&gt; Kotlin 클래스는 아직 지원되지 않으므로 Swift / Objective-C 유형을 상속하는 복잡한 클래스 계층 구조를 선언 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f62b613e64a0b39b8f91de500961ddd372e2c85a" translate="yes" xml:space="preserve">
          <source>Swift/Objective-C initializers are imported to Kotlin as constructors and factory methods named &lt;code&gt;create&lt;/code&gt;. The latter happens with initializers declared in the Objective-C category or as a Swift extension, because Kotlin has no concept of extension constructors.</source>
          <target state="translated">Swift / Objective-C 이니셜 라이저는 생성자 및 &lt;code&gt;create&lt;/code&gt; 라는 팩토리 메소드로 Kotlin에 가져옵니다 . 후자는 Objective-C 카테고리에서 선언 된 이니셜 라이저 또는 스위프트 확장으로 발생하는데, Kotlin은 확장 생성자 개념이 없기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="9d575759176a53333f2c52896d12c38987eec991" translate="yes" xml:space="preserve">
          <source>Swift/Objective-C interop</source>
          <target state="translated">스위프트 / Objective-C interop</target>
        </trans-unit>
        <trans-unit id="99720ddc441c1bfb4d0affa1772914ca5ac04545" translate="yes" xml:space="preserve">
          <source>Switch over a channel of deferred values</source>
          <target state="translated">지연된 값의 채널로 전환</target>
        </trans-unit>
        <trans-unit id="13fd4750b81466d157a12fc10d9a852e2caf99fa" translate="yes" xml:space="preserve">
          <source>Switch to the default formatting and make it consistent with Kotlin Coding Conventions in Kotlin 1.4</source>
          <target state="translated">기본 형식으로 전환하고 Kotlin 1.4의 Kotlin 코딩 규칙과 일치하도록</target>
        </trans-unit>
        <trans-unit id="61aa80a32f7f719d3326e90ee95ac7477fe0603f" translate="yes" xml:space="preserve">
          <source>Switching to the Kotlin Coding Conventions code style can be done in &lt;code&gt;Settings &amp;rarr; Editor &amp;rarr; Code Style &amp;rarr; Kotlin&lt;/code&gt; dialog. Switch scheme to &lt;em&gt;Project&lt;/em&gt; and activate &lt;code&gt;Set from... &amp;rarr; Predefined Style &amp;rarr; Kotlin Style Guide&lt;/code&gt;.</source>
          <target state="translated">Kotlin Coding Conventions 코드 스타일로 전환하려면 &lt;code&gt;Settings &amp;rarr; Editor &amp;rarr; Code Style &amp;rarr; Kotlin&lt;/code&gt; 대화 상자 에서 수행 할 수 있습니다 . 구성표를 &lt;em&gt;프로젝트로&lt;/em&gt; 전환 하고 다음 &lt;code&gt;Set from... &amp;rarr; Predefined Style &amp;rarr; Kotlin Style Guide&lt;/code&gt; 활성화 하십시오 .</target>
        </trans-unit>
        <trans-unit id="ce89d26b5b915bdbefeba3e3c1002ad16cf04461" translate="yes" xml:space="preserve">
          <source>SymbolName</source>
          <target state="translated">SymbolName</target>
        </trans-unit>
        <trans-unit id="b5a48d180aa190202bff35b0da6dd98c6f55f41a" translate="yes" xml:space="preserve">
          <source>Symbolicating iOS crash reports</source>
          <target state="translated">상징적 인 iOS 충돌 보고서</target>
        </trans-unit>
        <trans-unit id="1c380083ceced1c7e8bbc5bd15ca13f7adc39f96" translate="yes" xml:space="preserve">
          <source>Symmetric: for any non-null values &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;x.equals(y)&lt;/code&gt; should return true if and only if &lt;code&gt;y.equals(x)&lt;/code&gt; returns true.</source>
          <target state="translated">대칭은 : null 이외의 값에 &lt;code&gt;x&lt;/code&gt; 와 &lt;code&gt;y&lt;/code&gt; , &lt;code&gt;x.equals(y)&lt;/code&gt; 경우에만, true를 돌려 &lt;code&gt;y.equals(x)&lt;/code&gt; true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c195e4374c85d74cc43f4f08a33d51e3c51b4cfd" translate="yes" xml:space="preserve">
          <source>Synchronized</source>
          <target state="translated">Synchronized</target>
        </trans-unit>
        <trans-unit id="60526f7fe57071fddf6bf31004eca244e13fd625" translate="yes" xml:space="preserve">
          <source>Synthetic targets become inaccessible for Java sources at compile time while still being accessible for Kotlin sources. Marking target as synthetic is a binary compatible change, already compiled Java code will be able to access such target.</source>
          <target state="translated">컴파일 타임에 Java 소스에 대해 합성 대상에 액세스 할 수없고 Kotlin 소스에 계속 액세스 할 수 있습니다. 대상을 합성으로 표시하는 것은 이진 호환 변경이며 이미 컴파일 된 Java 코드는 이러한 대상에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8426ac9483ef9329287d13cda6dbc5c5b8457b87" translate="yes" xml:space="preserve">
          <source>System-related utility functions.</source>
          <target state="translated">시스템 관련 유틸리티 기능.</target>
        </trans-unit>
        <trans-unit id="7acd3724fef694b5c77a8242b8933516bfe3f06a" translate="yes" xml:space="preserve">
          <source>TERMINATE</source>
          <target state="translated">TERMINATE</target>
        </trans-unit>
        <trans-unit id="c2024afdc51720a7b9f26bd798eeb6515dee141f" translate="yes" xml:space="preserve">
          <source>THROWN</source>
          <target state="translated">THROWN</target>
        </trans-unit>
        <trans-unit id="aec59fbfc2f6181875490fd78c020230f3b1b1f7" translate="yes" xml:space="preserve">
          <source>TITLECASE_LETTER</source>
          <target state="translated">TITLECASE_LETTER</target>
        </trans-unit>
        <trans-unit id="b698c11e84460ed5999bfeb5cbf25b865c238f3c" translate="yes" xml:space="preserve">
          <source>TODO</source>
          <target state="translated">TODO</target>
        </trans-unit>
        <trans-unit id="6a05d02b340471018c943f805ab7f1309856273e" translate="yes" xml:space="preserve">
          <source>TODO(): Marking code as incomplete</source>
          <target state="translated">TODO () : 코드를 불완전한 것으로 표시</target>
        </trans-unit>
        <trans-unit id="3a36be7757d53df34ffbc16215cd6f9cfdd93b80" translate="yes" xml:space="preserve">
          <source>TODO: changing symbol name breaks the binary compatibility, so it should probably be allowed on &lt;code&gt;internal&lt;/code&gt; and &lt;code&gt;private&lt;/code&gt; functions only.</source>
          <target state="translated">TODO : 기호 이름을 변경하면 이진 호환성이 손상되므로 &lt;code&gt;internal&lt;/code&gt; 및 &lt;code&gt;private&lt;/code&gt; 함수에서만 허용되어야 합니다.</target>
        </trans-unit>
        <trans-unit id="f3830d7277fcff42c992ea836b9ff28598687e08" translate="yes" xml:space="preserve">
          <source>TODO: consider providing an adapter instead of subtyping &lt;a href=&quot;../-c-values/index&quot;&gt;CValues&lt;/a&gt;.</source>
          <target state="translated">TODO : &lt;a href=&quot;../-c-values/index&quot;&gt;CValues를 서브 타이핑&lt;/a&gt; 하는 대신 어댑터를 제공하는 것을 고려 하십시오 .</target>
        </trans-unit>
        <trans-unit id="40b96366fe4fb7eb04dbdc7b2c5d704e03c38057" translate="yes" xml:space="preserve">
          <source>TODO: the behavior of &lt;a href=&quot;../../kotlin/-any/equals#kotlin.Any%24equals%28kotlin.Any%29&quot;&gt;equals&lt;/a&gt;, &lt;a href=&quot;../../kotlin/-any/hash-code#kotlin.Any%24hashCode%28%29&quot;&gt;hashCode&lt;/a&gt; and &lt;a href=&quot;../../kotlin/-any/to-string#kotlin.Any%24toString%28%29&quot;&gt;toString&lt;/a&gt; differs on Native and JVM backends.</source>
          <target state="translated">TODO : &lt;a href=&quot;../../kotlin/-any/equals#kotlin.Any%24equals%28kotlin.Any%29&quot;&gt;equals&lt;/a&gt; , &lt;a href=&quot;../../kotlin/-any/hash-code#kotlin.Any%24hashCode%28%29&quot;&gt;hashCode&lt;/a&gt; 및 &lt;a href=&quot;../../kotlin/-any/to-string#kotlin.Any%24toString%28%29&quot;&gt;toString&lt;/a&gt; 의 동작은 기본 및 JVM 백엔드에서 다릅니다.</target>
        </trans-unit>
        <trans-unit id="b0e3df42ab82e6e186c0a86de01f03cd58ed5da4" translate="yes" xml:space="preserve">
          <source>TODO: the behavior of &lt;a href=&quot;../../kotlin/-any/equals#kotlin.Any%24equals(kotlin.Any?)&quot;&gt;equals&lt;/a&gt;, &lt;a href=&quot;../../kotlin/-any/hash-code#kotlin.Any%24hashCode()&quot;&gt;hashCode&lt;/a&gt; and &lt;a href=&quot;../../kotlin/-any/to-string#kotlin.Any%24toString()&quot;&gt;toString&lt;/a&gt; differs on Native and JVM backends.</source>
          <target state="translated">TODO : &lt;a href=&quot;../../kotlin/-any/equals#kotlin.Any%24equals(kotlin.Any?)&quot;&gt;equals&lt;/a&gt; , &lt;a href=&quot;../../kotlin/-any/hash-code#kotlin.Any%24hashCode()&quot;&gt;hashCode&lt;/a&gt; 및 &lt;a href=&quot;../../kotlin/-any/to-string#kotlin.Any%24toString()&quot;&gt;toString&lt;/a&gt; 의 동작은 네이티브 및 JVM 백엔드에서 다릅니다.</target>
        </trans-unit>
        <trans-unit id="aa57ca5da1542535d6e595c72a1049dfaa72214c" translate="yes" xml:space="preserve">
          <source>TOP_DOWN</source>
          <target state="translated">TOP_DOWN</target>
        </trans-unit>
        <trans-unit id="3fd18045f2522bb120b4e3ac843fcede30d5c942" translate="yes" xml:space="preserve">
          <source>TVOS</source>
          <target state="translated">TVOS</target>
        </trans-unit>
        <trans-unit id="6e9816a8e9d0388eecdb52866188c04e75e4b1b3" translate="yes" xml:space="preserve">
          <source>TYPE</source>
          <target state="translated">TYPE</target>
        </trans-unit>
        <trans-unit id="4f8e3ef2be07081eed30f4f241b8f6079253452d" translate="yes" xml:space="preserve">
          <source>TYPEALIAS</source>
          <target state="translated">TYPEALIAS</target>
        </trans-unit>
        <trans-unit id="74c2ff3e02a8146aa670c1188095f748d0498a87" translate="yes" xml:space="preserve">
          <source>TYPE_PARAMETER</source>
          <target state="translated">TYPE_PARAMETER</target>
        </trans-unit>
        <trans-unit id="9730d4326a7b8a0d13c2be3b7fe29b80ad152bf6" translate="yes" xml:space="preserve">
          <source>Table of Contents</source>
          <target state="translated">목차</target>
        </trans-unit>
        <trans-unit id="1a428989bd13dceabd89b698d9fa38eb8a0d175c" translate="yes" xml:space="preserve">
          <source>Table of contents</source>
          <target state="translated">목차</target>
        </trans-unit>
        <trans-unit id="321de0ab2873c1406451b4e621fed413b6b2ab1e" translate="yes" xml:space="preserve">
          <source>Tail recursive functions</source>
          <target state="translated">꼬리 재귀 함수</target>
        </trans-unit>
        <trans-unit id="2371ab50da6b9db0aea83641cb8925e9710f7c92" translate="yes" xml:space="preserve">
          <source>Take a look at the &lt;a href=&quot;https://www.jetbrains.com/help/education/learner-start-guide.html?section=Kotlin%20Koans&quot;&gt;Learner Start Guide&lt;/a&gt;, which will get you started with the Kotlin Koans course inside IntelliJ IDEA. Solve interactive coding challenges and get instant feedback right inside the IDE.</source>
          <target state="translated">IntelliJ IDEA 내에서 Kotlin Koans 과정을 시작하는 데 도움이되는 &lt;a href=&quot;https://www.jetbrains.com/help/education/learner-start-guide.html?section=Kotlin%20Koans&quot;&gt;학습자 시작 가이드를&lt;/a&gt; 살펴보세요 . 대화 형 코딩 문제를 해결하고 IDE 내에서 바로 피드백을 받으세요.</target>
        </trans-unit>
        <trans-unit id="20fa48deb639df41368610d6983f2e95bc62d9b3" translate="yes" xml:space="preserve">
          <source>Take a look at the behavior of the following code:</source>
          <target state="translated">다음 코드의 동작을 살펴보십시오.</target>
        </trans-unit>
        <trans-unit id="a34ab8557ec6518d7eec439be4e5bcf534a63994" translate="yes" xml:space="preserve">
          <source>Take and drop</source>
          <target state="translated">가져다 놓기</target>
        </trans-unit>
        <trans-unit id="1bbdcf12e57848561b81b3650e41362a19702c6a" translate="yes" xml:space="preserve">
          <source>Take for instance the following code</source>
          <target state="translated">다음 코드를 예로 들어 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="ffc4d467faa7814fe0541133e507fd8deafa41f3" translate="yes" xml:space="preserve">
          <source>Taking the above into account, given the following code (module name is &lt;code&gt;ConsoleOutput&lt;/code&gt;)</source>
          <target state="translated">다음 코드가 주어지면 위의 내용을 고려하십시오 (모듈 이름은 &lt;code&gt;ConsoleOutput&lt;/code&gt; 입니다 )</target>
        </trans-unit>
        <trans-unit id="61ad50a9b9189cc3cf1874568e35e7901ff4c982" translate="yes" xml:space="preserve">
          <source>Target</source>
          <target state="translated">Target</target>
        </trans-unit>
        <trans-unit id="e9c2cc44a1648fab93dfd7f8478951978cee81a6" translate="yes" xml:space="preserve">
          <source>Target Platforms</source>
          <target state="translated">대상 플랫폼</target>
        </trans-unit>
        <trans-unit id="196bafdadde82557d2b0566cbef9ba6c0b94014c" translate="yes" xml:space="preserve">
          <source>Target platform</source>
          <target state="translated">대상 플랫폼</target>
        </trans-unit>
        <trans-unit id="2c6651b7aa08a8550dea113571107b0c864ada23" translate="yes" xml:space="preserve">
          <source>Target platform/device</source>
          <target state="translated">대상 플랫폼 / 장치</target>
        </trans-unit>
        <trans-unit id="5197bbeee2aa4c81ab6b87af3427661b2367d52b" translate="yes" xml:space="preserve">
          <source>Target preset</source>
          <target state="translated">타겟 사전 설정</target>
        </trans-unit>
        <trans-unit id="b90d4eb8add71df31b69f210f7236efcc439a9ed" translate="yes" xml:space="preserve">
          <source>Target shortcut</source>
          <target state="translated">타겟 바로 가기</target>
        </trans-unit>
        <trans-unit id="77c4c4b87221968bd3a3894fe9c81710e28b33b7" translate="yes" xml:space="preserve">
          <source>Target version of the generated JVM bytecode</source>
          <target state="translated">생성 된 JVM 바이트 코드의 대상 버전</target>
        </trans-unit>
        <trans-unit id="b55ed86e9766080d6e500a070b6fef6b1986cd3f" translate="yes" xml:space="preserve">
          <source>Target version of the generated JVM bytecode (1.6, 1.8, 9, 10, 11 or 12), default is 1.6</source>
          <target state="translated">생성 된 JVM 바이트 코드의 대상 버전 (1.6, 1.8, 9, 10, 11 또는 12)이며 기본값은 1.6입니다.</target>
        </trans-unit>
        <trans-unit id="acb25c0cc9a94dfbf771ed70c544df0ff7fb25cc" translate="yes" xml:space="preserve">
          <source>Target-specific configuration.</source>
          <target state="translated">타겟 별 구성.</target>
        </trans-unit>
        <trans-unit id="b9f79302140e02579ecf20feab5f4ed0599b5178" translate="yes" xml:space="preserve">
          <source>Target-specific options, only applicable to the certain target can be specified as well, such as</source>
          <target state="translated">다음과 같이 특정 대상에만 적용 할 수있는 대상별 옵션을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="695467c9d75f99ef2a19dd30fa7e04f16b3ffed5" translate="yes" xml:space="preserve">
          <source>Target-specific sources for a compilation. &lt;em&gt;&amp;lt;targetName&amp;gt;&lt;/em&gt; is the name of a predefined target and &lt;em&gt;&amp;lt;compilationName&amp;gt;&lt;/em&gt; is the name of a compilation for this target. Examples: &lt;code&gt;jsTest&lt;/code&gt;, &lt;code&gt;jvmMain&lt;/code&gt;.</source>
          <target state="translated">컴파일의 대상별 소스입니다. &lt;em&gt;&amp;lt;targetName&amp;gt;&lt;/em&gt; 은 미리 정의 된 대상의 이름이고 &lt;em&gt;&amp;lt;compilationName&amp;gt;&lt;/em&gt; 은이 대상의 컴파일 이름입니다. 예 : &lt;code&gt;jsTest&lt;/code&gt; , &lt;code&gt;jvmMain&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fbb726beab60fbd5d494b96dfab27818ba4ef792" translate="yes" xml:space="preserve">
          <source>Targeting Android</source>
          <target state="translated">Android 타겟팅</target>
        </trans-unit>
        <trans-unit id="61435c5519fdf6e83f5be2de5ba7d3189d1e59db" translate="yes" xml:space="preserve">
          <source>Targeting JVM with Kotlin and Java source</source>
          <target state="translated">Kotlin 및 Java 소스를 사용하여 JVM 타겟팅</target>
        </trans-unit>
        <trans-unit id="eed4cc7b25a381102c782f5eee23b1557b5da0f0" translate="yes" xml:space="preserve">
          <source>Targeting JVM with Kotlin-only source</source>
          <target state="translated">Kotlin 전용 소스로 JVM 타겟팅</target>
        </trans-unit>
        <trans-unit id="6be3f820f9efacb8a325c313968a6aa3ca133310" translate="yes" xml:space="preserve">
          <source>Targeting JVM with Kotlin-only source and multiple roots</source>
          <target state="translated">Kotlin 전용 소스 및 다중 루트를 사용하여 대상 JVM</target>
        </trans-unit>
        <trans-unit id="2426095a82998267d53648372ee8cb2c93e603c9" translate="yes" xml:space="preserve">
          <source>Targeting JavaScript</source>
          <target state="translated">자바 스크립트 타겟팅</target>
        </trans-unit>
        <trans-unit id="7e517a21f1ce2b40c420e67981cb82c90d901d12" translate="yes" xml:space="preserve">
          <source>Targeting JavaScript with Prefix, PostFix and sourcemap options</source>
          <target state="translated">접두사, PostFix 및 소스 맵 옵션으로 JavaScript 타겟팅</target>
        </trans-unit>
        <trans-unit id="af5e0c13bd0213a07d67ab13adf84941ec88763a" translate="yes" xml:space="preserve">
          <source>Targeting JavaScript with single source folder</source>
          <target state="translated">단일 소스 폴더로 JavaScript 타겟팅</target>
        </trans-unit>
        <trans-unit id="f36e6891c319487c20f8187b941dcf72379e553c" translate="yes" xml:space="preserve">
          <source>Targeting JavaScript with single source folder and metaInfo option</source>
          <target state="translated">단일 소스 폴더 및 metaInfo 옵션을 사용하여 JavaScript 타겟팅</target>
        </trans-unit>
        <trans-unit id="51aaaf1ce12316c97c4129484dcd06dd799fd74b" translate="yes" xml:space="preserve">
          <source>Targeting multiple platforms</source>
          <target state="translated">여러 플랫폼 타겟팅</target>
        </trans-unit>
        <trans-unit id="9057192fad6052cc02e53869d22c36d08b376824" translate="yes" xml:space="preserve">
          <source>Targeting the JVM</source>
          <target state="translated">JVM 타겟팅</target>
        </trans-unit>
        <trans-unit id="e9c6bdd75b92fb92b0ec52b948e6ab977d88c1c8" translate="yes" xml:space="preserve">
          <source>Targeting the browser</source>
          <target state="translated">브라우저 타겟팅</target>
        </trans-unit>
        <trans-unit id="d35260a00f655f27edcc35a7eb16da44a4f671a6" translate="yes" xml:space="preserve">
          <source>Targets</source>
          <target state="translated">Targets</target>
        </trans-unit>
        <trans-unit id="52408046d668e5c8da292f381cd0a5534e2e8a07" translate="yes" xml:space="preserve">
          <source>Targets (e.g. Linux/x64 or iOS/arm64 etc)</source>
          <target state="translated">대상 (예 : Linux / x64 또는 iOS / arm64 등)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
