<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="kotlin">
    <body>
      <group id="kotlin">
        <trans-unit id="27ad261bc9c7d6cb765d0ea1438b3c8e987a6979" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;commonTest&lt;/code&gt;&lt;a href=&quot;#default-project-layout&quot;&gt;default source set&lt;/a&gt; is added to all test compilations, tests and test tools that are needed on all target platforms may be placed there.</source>
          <target state="translated">는 AS &lt;code&gt;commonTest&lt;/code&gt; &lt;a href=&quot;#default-project-layout&quot;&gt;기본 소스 세트가&lt;/a&gt; 모든 테스트 컴파일에 추가되고, 모든 대상 플랫폼에 필요한 테스트와 테스트 도구가 배치 될 수있다.</target>
        </trans-unit>
        <trans-unit id="5edd040d6f4c8ad9b18d73f7926255fa6764d0b8" translate="yes" xml:space="preserve">
          <source>As the command line parameter, use &lt;code&gt;-Pkotlin.incremental&lt;/code&gt; or &lt;code&gt;-Pkotlin.incremental.js&lt;/code&gt; with the boolean value reflecting the usage of incremental compilation.</source>
          <target state="translated">As the command line parameter, use &lt;code&gt;-Pkotlin.incremental&lt;/code&gt; or &lt;code&gt;-Pkotlin.incremental.js&lt;/code&gt; with the boolean value reflecting the usage of incremental compilation.</target>
        </trans-unit>
        <trans-unit id="5a2f37014fdc09535abad4023c6b450a2b899b17" translate="yes" xml:space="preserve">
          <source>As the platforms are different, targets are built in different ways as well and have various platform-specific settings. The Gradle plugin bundles a number of presets for the supported platforms.</source>
          <target state="translated">플랫폼이 다르므로 대상도 다른 방식으로 구축되며 다양한 플랫폼 별 설정이 있습니다. Gradle 플러그인은 지원되는 플랫폼에 대한 여러 사전 설정을 번들로 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c94dcb3870be9d6216468092f76cf2e236049a84" translate="yes" xml:space="preserve">
          <source>As the third parameter, specify the path to &lt;code&gt;Podspec&lt;/code&gt; of the local Pod using &lt;code&gt;project.file(..)&lt;/code&gt;.</source>
          <target state="translated">As the third parameter, specify the path to &lt;code&gt;Podspec&lt;/code&gt; of the local Pod using &lt;code&gt;project.file(..)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43e93e982fbf27b175ee52afaca49428156c5004" translate="yes" xml:space="preserve">
          <source>As this is key to understanding how Kotlin is moving forward, let's expand on these principles.</source>
          <target state="translated">이것이 Kotlin이 어떻게 발전하고 있는지 이해하는 데 중요하므로 이러한 원칙을 확장하겠습니다.</target>
        </trans-unit>
        <trans-unit id="d8a6951b471083df17ec063563955cea5aec3f48" translate="yes" xml:space="preserve">
          <source>As we can see, we've eliminated the explicit variable declarations in the Kotlin version, but everything else is pretty much verbatim to the C version. All the calls we'd expect in the &lt;code&gt;libcurl&lt;/code&gt; library are available in their Kotlin equivalent.</source>
          <target state="translated">보시다시피, Kotlin 버전에서 명시 적 변수 선언을 제거했지만 그 밖의 모든 것은 C 버전과 거의 동일합니다. &lt;code&gt;libcurl&lt;/code&gt; 라이브러리 에서 기대할 수있는 모든 호출 은 Kotlin에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="9beef94ae067e63cbd9e59d894b27cdc816aa2f7" translate="yes" xml:space="preserve">
          <source>As we have studied before, cancellation is a bidirectional relationship propagating through the whole coroutines hierarchy. But what if unidirectional cancellation is required?</source>
          <target state="translated">우리가 이전에 연구했듯이, 취소는 전체 코 루틴 계층을 통해 전파되는 양방향 관계입니다. 그러나 단방향 취소가 필요한 경우 어떻게해야합니까?</target>
        </trans-unit>
        <trans-unit id="1713b2a9d43cfa6a9db5c2c80eb267dd2e28729e" translate="yes" xml:space="preserve">
          <source>As we have studied before, cancellation is a bidirectional relationship propagating through the whole hierarchy of coroutines. Let us take a look at the case when unidirectional cancellation is required.</source>
          <target state="translated">As we have studied before, cancellation is a bidirectional relationship propagating through the whole hierarchy of coroutines. Let us take a look at the case when unidirectional cancellation is required.</target>
        </trans-unit>
        <trans-unit id="b64b2981e63e1536aa67f1172fa99896be6284dc" translate="yes" xml:space="preserve">
          <source>As we mentioned above, Kotlin does not have checked exceptions. So, normally, the Java signatures of Kotlin functions do not declare exceptions thrown. Thus if we have a function in Kotlin like this:</source>
          <target state="translated">위에서 언급했듯이 Kotlin은 예외를 확인하지 않았습니다. 따라서 일반적으로 Kotlin 함수의 Java 서명은 예외를 선언하지 않습니다. 따라서 Kotlin에 다음과 같은 기능이 있다면 :</target>
        </trans-unit>
        <trans-unit id="08396bfca73f3c35212459154b28f8878108768a" translate="yes" xml:space="preserve">
          <source>As we mentioned before, we stick to making things explicit in Kotlin. And unlike Java, Kotlin requires explicit modifiers for overridable members (we call them &lt;em&gt;open&lt;/em&gt;) and for overrides:</source>
          <target state="translated">앞에서 언급했듯이 Kotlin에서 명시 적으로 표현하는 것을 고수합니다. Java와 달리 Kotlin은 재정의 가능한 멤버 ( &lt;em&gt;열린&lt;/em&gt; 멤버라고 함 ) 및 재정의에 대해 명시적인 수정자를 필요로합니다 .</target>
        </trans-unit>
        <trans-unit id="df863543f29ddc3af4cf8577dbf69c3145ac20fd" translate="yes" xml:space="preserve">
          <source>As we mentioned before, we stick to making things explicit in Kotlin. So, Kotlin requires explicit modifiers for overridable members (we call them &lt;em&gt;open&lt;/em&gt;) and for overrides:</source>
          <target state="translated">As we mentioned before, we stick to making things explicit in Kotlin. So, Kotlin requires explicit modifiers for overridable members (we call them &lt;em&gt;open&lt;/em&gt;) and for overrides:</target>
        </trans-unit>
        <trans-unit id="0253e410893c125101fd61e2b655187a42457a6c" translate="yes" xml:space="preserve">
          <source>As we said above, the &lt;code&gt;[]&lt;/code&gt; operation stands for calls to member functions &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;set()&lt;/code&gt;.</source>
          <target state="translated">위에서 언급했듯이 &lt;code&gt;[]&lt;/code&gt; 연산은 멤버 함수 &lt;code&gt;get()&lt;/code&gt; 및 &lt;code&gt;set()&lt;/code&gt; 대한 호출을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="f6bc0d71d02feb935761c2fec09157ddb18fef0a" translate="yes" xml:space="preserve">
          <source>As with all-open, add the plugin JAR file to the compiler plugin classpath and specify annotations or presets:</source>
          <target state="translated">모두 열기와 마찬가지로 플러그인 JAR 파일을 컴파일러 플러그인 클래스 경로에 추가하고 주석 또는 사전 설정을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="e700fa017eccf7f4f99be1f93fd46c19e29e9465" translate="yes" xml:space="preserve">
          <source>As with all-open, add the plugin to the buildscript dependencies:</source>
          <target state="translated">모두 열기와 마찬가지로 빌드 스크립트 종속성에 플러그인을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="0ddb289577a5748be89057d32163008e7c2b82ca" translate="yes" xml:space="preserve">
          <source>As with other function literals, if the function takes one parameter (other than the receiver object that it is invoked on), the single parameter is implicitly called &lt;code&gt;it&lt;/code&gt;, unless you declare another name. If it takes more than one parameter, you must declare their names.</source>
          <target state="translated">다른 함수 리터럴과 마찬가지로 함수가 호출 된 수신자 오브젝트 이외의 하나의 매개 변수를 사용 &lt;code&gt;it&lt;/code&gt; 경우 다른 이름을 선언하지 않으면 단일 매개 변수가 내재적으로 호출 됩니다 . 둘 이상의 매개 변수를 사용하는 경우 해당 이름을 선언해야합니다.</target>
        </trans-unit>
        <trans-unit id="b55d293aa5b5fcb60313adc4451f1ab3f4ccc0ab" translate="yes" xml:space="preserve">
          <source>As with the &lt;em&gt;kotlin-spring&lt;/em&gt; plugin wrapped on top of &lt;em&gt;all-open&lt;/em&gt;, &lt;em&gt;kotlin-jpa&lt;/em&gt; is wrapped on top of &lt;em&gt;no-arg&lt;/em&gt;. The plugin specifies &lt;a href=&quot;http://docs.oracle.com/javaee/7/api/javax/persistence/Entity.html&quot;&gt;&lt;code&gt;@Entity&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;http://docs.oracle.com/javaee/7/api/javax/persistence/Embeddable.html&quot;&gt;&lt;code&gt;@Embeddable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.oracle.com/javaee/7/api/javax/persistence/MappedSuperclass.html&quot;&gt;&lt;code&gt;@MappedSuperclass&lt;/code&gt;&lt;/a&gt;&lt;em&gt;no-arg&lt;/em&gt; annotations automatically.</source>
          <target state="translated">As with the &lt;em&gt;kotlin-spring&lt;/em&gt; plugin wrapped on top of &lt;em&gt;all-open&lt;/em&gt;, &lt;em&gt;kotlin-jpa&lt;/em&gt; is wrapped on top of &lt;em&gt;no-arg&lt;/em&gt;. The plugin specifies &lt;a href=&quot;http://docs.oracle.com/javaee/7/api/javax/persistence/Entity.html&quot;&gt; &lt;code&gt;@Entity&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;http://docs.oracle.com/javaee/7/api/javax/persistence/Embeddable.html&quot;&gt; &lt;code&gt;@Embeddable&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;https://docs.oracle.com/javaee/7/api/javax/persistence/MappedSuperclass.html&quot;&gt; &lt;code&gt;@MappedSuperclass&lt;/code&gt; &lt;/a&gt;&lt;em&gt;no-arg&lt;/em&gt; annotations automatically.</target>
        </trans-unit>
        <trans-unit id="b3a2c907f41578ca82056398084f5bd35172b8f8" translate="yes" xml:space="preserve">
          <source>As with the &lt;em&gt;kotlin-spring&lt;/em&gt; plugin, &lt;em&gt;kotlin-jpa&lt;/em&gt; is a wrapped on top of &lt;em&gt;no-arg&lt;/em&gt;. The plugin specifies &lt;a href=&quot;http://docs.oracle.com/javaee/7/api/javax/persistence/Entity.html&quot;&gt;&lt;code&gt;@Entity&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;http://docs.oracle.com/javaee/7/api/javax/persistence/Embeddable.html&quot;&gt;&lt;code&gt;@Embeddable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.oracle.com/javaee/7/api/javax/persistence/MappedSuperclass.html&quot;&gt;&lt;code&gt;@MappedSuperclass&lt;/code&gt;&lt;/a&gt;&lt;em&gt;no-arg&lt;/em&gt; annotations automatically.</source>
          <target state="translated">과 마찬가지로 &lt;em&gt;코 틀린 스프링&lt;/em&gt; 플러그인, &lt;em&gt;코 틀린-JPA는&lt;/em&gt; (A)의 상단에 싸여있다 &lt;em&gt;인수 없음&lt;/em&gt; . 플러그인은 &lt;a href=&quot;http://docs.oracle.com/javaee/7/api/javax/persistence/Entity.html&quot;&gt; &lt;code&gt;@Entity&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;http://docs.oracle.com/javaee/7/api/javax/persistence/Embeddable.html&quot;&gt; &lt;code&gt;@Embeddable&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.oracle.com/javaee/7/api/javax/persistence/MappedSuperclass.html&quot;&gt; &lt;code&gt;@MappedSuperclass&lt;/code&gt; &lt;/a&gt;&lt;em&gt; 인수 없음&lt;/em&gt; 주석을 자동으로 지정합니다.</target>
        </trans-unit>
        <trans-unit id="68d1e9ff2648dcea56d6c6f57453efa33c7feb3b" translate="yes" xml:space="preserve">
          <source>As you can see in this example, the annotated function appears to be a part of the &lt;code&gt;@ExperimentalDateTime&lt;/code&gt; experimental API. So, the described way of acceptance propagates the experimental status to the code that uses an experimental API; its clients will be required to accept it as well. To use multiple experimental APIs, annotate the declaration with all their markers.</source>
          <target state="translated">이 예제에서 볼 수 있듯이 주석이 달린 함수는 &lt;code&gt;@ExperimentalDateTime&lt;/code&gt; 실험 API 의 일부인 것으로 보입니다 . 따라서 설명 된 수용 방법은 실험 상태를 실험 API를 사용하는 코드로 전파합니다. 고객도이를 수락해야합니다. 여러 실험 API를 사용하려면 모든 마커로 선언에 주석을 답니다.</target>
        </trans-unit>
        <trans-unit id="de975c29a6a909138faf44d3f2cde3bfe62948e4" translate="yes" xml:space="preserve">
          <source>As you can see in this example, the annotated function appears to be a part of the &lt;code&gt;@MyDateTime&lt;/code&gt; API. So, such an opt-in propagates the opt-in requirement to the client code; its clients will see the same warning message and be required to consent as well. To use multiple APIs that require opt-in, mark the declaration with all their opt-in requirement annotations.</source>
          <target state="translated">이 예에서 볼 수 있듯이 주석이 달린 함수는 &lt;code&gt;@MyDateTime&lt;/code&gt; API 의 일부로 나타납니다 . 따라서 이러한 옵트 인은 옵트 인 요구 사항을 클라이언트 코드로 전파합니다. 클라이언트에게 동일한 경고 메시지가 표시되고 동의가 필요합니다. 옵트 인이 필요한 여러 API를 사용하려면 모든 옵트 인 요구 사항 주석으로 선언을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="96ab440f7f6c78c46787713216e58c877b6cb628" translate="yes" xml:space="preserve">
          <source>As you can see, it prints:</source>
          <target state="translated">보시다시피 다음과 같이 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="cc87d19acb232a1d83499d511bd23cda3c0080c6" translate="yes" xml:space="preserve">
          <source>As you can see, now this loop is cancelled. &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/is-active.html&quot;&gt;isActive&lt;/a&gt; is an extension property available inside the coroutine via the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope/index.html&quot;&gt;CoroutineScope&lt;/a&gt; object.</source>
          <target state="translated">보다시피, 이제이 루프가 취소되었습니다. &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/is-active.html&quot;&gt;isActive&lt;/a&gt; 는 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope/index.html&quot;&gt;CoroutineScope&lt;/a&gt; 객체 를 통해 코 루틴 내에서 사용할 수있는 확장 속성 입니다.</target>
        </trans-unit>
        <trans-unit id="7352fb651c3772692a032dbe42546dd641670912" translate="yes" xml:space="preserve">
          <source>As you can see, only the first two coroutines had printed a message and the others were cancelled by a single invocation of &lt;code&gt;job.cancel()&lt;/code&gt; in &lt;code&gt;Activity.destroy()&lt;/code&gt;.</source>
          <target state="translated">보시다시피 처음 두 코 루틴이 메시지를 인쇄했으며 나머지는 &lt;code&gt;Activity.destroy()&lt;/code&gt; 에서 &lt;code&gt;job.cancel()&lt;/code&gt; 의 단일 호출로 취소되었습니다 .</target>
        </trans-unit>
        <trans-unit id="c55419c015865a616e5464887b91f2221ed1c04e" translate="yes" xml:space="preserve">
          <source>As you can see, only the first two coroutines print a message and the others are cancelled by a single invocation of &lt;code&gt;job.cancel()&lt;/code&gt; in &lt;code&gt;Activity.destroy()&lt;/code&gt;.</source>
          <target state="translated">As you can see, only the first two coroutines print a message and the others are cancelled by a single invocation of &lt;code&gt;job.cancel()&lt;/code&gt; in &lt;code&gt;Activity.destroy()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ec300122f188ea460c04062665423ae0b013340" translate="yes" xml:space="preserve">
          <source>As you may expect, it prints:</source>
          <target state="translated">예상대로 다음과 같이 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="f7b66783a2aeaef0abd85ccec69670f515a360a3" translate="yes" xml:space="preserve">
          <source>As you see, Kotlin aims to create very concise and readable JavaScript allowing us to interact with it as needed. One question of course is why go to all this trouble to as opposed to just use &lt;code&gt;console.log()&lt;/code&gt;. Obviously this is a very simple example that shows the basics of how it works and we've focused on analysing the output. As application complexity grows, the benefits of using Kotlin and static typing start to become more apparent.</source>
          <target state="translated">보시다시피 Kotlin은 필요에 따라 상호 작용할 수 있도록 매우 간결하고 읽기 쉬운 JavaScript를 만드는 것을 목표로합니다. 물론 한 가지 질문은 &lt;code&gt;console.log()&lt;/code&gt; 사용하는 대신이 모든 문제를 해결 해야하는 이유입니다 . 분명히 이것은 작동 방식의 기본 사항을 보여주는 매우 간단한 예이며 출력 분석에 중점을 두었습니다. 응용 프로그램의 복잡성이 증가함에 따라 Kotlin 및 정적 입력 사용의 이점이 더욱 분명해졌습니다.</target>
        </trans-unit>
        <trans-unit id="421389931a4f34efe05c30826b90917d2975e478" translate="yes" xml:space="preserve">
          <source>As you see, in some aspects lists are very similar to arrays. However, there is one important difference: an array's size is defined upon initialization and is never changed; in turn, a list doesn't have a predefined size; a list's size can be changed as a result of write operations: adding, updating, or removing elements.</source>
          <target state="translated">보시다시피 일부 측면에서 목록은 배열과 매우 유사합니다. 그러나 한 가지 중요한 차이점이 있습니다. 배열 크기는 초기화시 정의되며 변경되지 않습니다. 결과적으로 목록은 사전 정의 된 크기를 갖지 않습니다. 쓰기 작업 (요소 추가, 업데이트 또는 제거)의 결과로 목록의 크기를 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="534a9766ff6c74faf4c9a1438ecab93f1ee3f946" translate="yes" xml:space="preserve">
          <source>Aside from the new API, we've made some optimizations that reduce the resulting bytecode size. These optimizations are described in &lt;a href=&quot;https://blog.jetbrains.com/kotlin/2019/12/what-to-expect-in-kotlin-1-4-and-beyond/#delegated-properties&quot;&gt;this blog post&lt;/a&gt;.</source>
          <target state="translated">새로운 API 외에도 결과 바이트 코드 크기를 줄이는 몇 가지 최적화를 수행했습니다. 이러한 최적화는 &lt;a href=&quot;https://blog.jetbrains.com/kotlin/2019/12/what-to-expect-in-kotlin-1-4-and-beyond/#delegated-properties&quot;&gt;이 블로그 게시물에&lt;/a&gt; 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3292c12a856a02722a46d87471ff4e6faefa104" translate="yes" xml:space="preserve">
          <source>AssertionError</source>
          <target state="translated">AssertionError</target>
        </trans-unit>
        <trans-unit id="afab27ed2b3bea84dc85860592e64030242b513a" translate="yes" xml:space="preserve">
          <source>Assign the result of &lt;code&gt;a.inc()&lt;/code&gt; to &lt;code&gt;a&lt;/code&gt;;</source>
          <target state="translated">결과 할당 &lt;code&gt;a.inc()&lt;/code&gt; 에 &lt;code&gt;a&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="34d89e7d6622db7d49c6f03cc2b51debfd79dc46" translate="yes" xml:space="preserve">
          <source>Assign the result of &lt;code&gt;a0.inc()&lt;/code&gt; to &lt;code&gt;a&lt;/code&gt;;</source>
          <target state="translated">Assign the result of &lt;code&gt;a0.inc()&lt;/code&gt; to &lt;code&gt;a&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="bfc2ce14690efbfc3e5f03f1bd9d81c65e09d6d4" translate="yes" xml:space="preserve">
          <source>AssignedNodesOptions</source>
          <target state="translated">AssignedNodesOptions</target>
        </trans-unit>
        <trans-unit id="c3dff150477195e5af84d55a29e3417947cf6401" translate="yes" xml:space="preserve">
          <source>AssociatedObjectKey</source>
          <target state="translated">AssociatedObjectKey</target>
        </trans-unit>
        <trans-unit id="bc4637d011ec1e897c4f35d1c0564ca5d6270854" translate="yes" xml:space="preserve">
          <source>Associates the specified &lt;a href=&quot;../-mutable-map/put#kotlin.collections.MutableMap%24put%28kotlin.collections.MutableMap.K%2C+kotlin.collections.MutableMap.V%29%2Fvalue&quot;&gt;value&lt;/a&gt; with the specified &lt;a href=&quot;../-mutable-map/put#kotlin.collections.MutableMap%24put%28kotlin.collections.MutableMap.K%2C+kotlin.collections.MutableMap.V%29%2Fkey&quot;&gt;key&lt;/a&gt; in the map.</source>
          <target state="translated">지정된 &lt;a href=&quot;../-mutable-map/put#kotlin.collections.MutableMap%24put%28kotlin.collections.MutableMap.K%2C+kotlin.collections.MutableMap.V%29%2Fvalue&quot;&gt;값&lt;/a&gt; 을 맵 의 지정된 &lt;a href=&quot;../-mutable-map/put#kotlin.collections.MutableMap%24put%28kotlin.collections.MutableMap.K%2C+kotlin.collections.MutableMap.V%29%2Fkey&quot;&gt;키&lt;/a&gt; 와 연관시킵니다 .</target>
        </trans-unit>
        <trans-unit id="039c6decd3896a4156afbd4bf6a0ebad01f7c4c8" translate="yes" xml:space="preserve">
          <source>Associates the specified &lt;a href=&quot;../-mutable-map/put#kotlin.collections.MutableMap%24put(kotlin.collections.MutableMap.K,%20kotlin.collections.MutableMap.V)/value&quot;&gt;value&lt;/a&gt; with the specified &lt;a href=&quot;../-mutable-map/put#kotlin.collections.MutableMap%24put(kotlin.collections.MutableMap.K,%20kotlin.collections.MutableMap.V)/key&quot;&gt;key&lt;/a&gt; in the map.</source>
          <target state="translated">Associates the specified &lt;a href=&quot;../-mutable-map/put#kotlin.collections.MutableMap%24put(kotlin.collections.MutableMap.K,%20kotlin.collections.MutableMap.V)/value&quot;&gt;value&lt;/a&gt; with the specified &lt;a href=&quot;../-mutable-map/put#kotlin.collections.MutableMap%24put(kotlin.collections.MutableMap.K,%20kotlin.collections.MutableMap.V)/key&quot;&gt;key&lt;/a&gt; in the map.</target>
        </trans-unit>
        <trans-unit id="abf408e5ce9df9297b5724dfc0aa196f0ea492ef" translate="yes" xml:space="preserve">
          <source>Associates the specified &lt;a href=&quot;put#kotlin.collections.AbstractMutableMap%24put%28kotlin.collections.AbstractMutableMap.K%2C+kotlin.collections.AbstractMutableMap.V%29%2Fvalue&quot;&gt;value&lt;/a&gt; with the specified &lt;a href=&quot;put#kotlin.collections.AbstractMutableMap%24put%28kotlin.collections.AbstractMutableMap.K%2C+kotlin.collections.AbstractMutableMap.V%29%2Fkey&quot;&gt;key&lt;/a&gt; in the map.</source>
          <target state="translated">지정된 &lt;a href=&quot;put#kotlin.collections.AbstractMutableMap%24put%28kotlin.collections.AbstractMutableMap.K%2C+kotlin.collections.AbstractMutableMap.V%29%2Fvalue&quot;&gt;값&lt;/a&gt; 을 맵 의 지정된 &lt;a href=&quot;put#kotlin.collections.AbstractMutableMap%24put%28kotlin.collections.AbstractMutableMap.K%2C+kotlin.collections.AbstractMutableMap.V%29%2Fkey&quot;&gt;키&lt;/a&gt; 와 연관시킵니다 .</target>
        </trans-unit>
        <trans-unit id="71f97c4356aa08d827089563a0021dca22efc19a" translate="yes" xml:space="preserve">
          <source>Associates the specified &lt;a href=&quot;put#kotlin.collections.AbstractMutableMap%24put(kotlin.collections.AbstractMutableMap.K,%20kotlin.collections.AbstractMutableMap.V)/value&quot;&gt;value&lt;/a&gt; with the specified &lt;a href=&quot;put#kotlin.collections.AbstractMutableMap%24put(kotlin.collections.AbstractMutableMap.K,%20kotlin.collections.AbstractMutableMap.V)/key&quot;&gt;key&lt;/a&gt; in the map.</source>
          <target state="translated">Associates the specified &lt;a href=&quot;put#kotlin.collections.AbstractMutableMap%24put(kotlin.collections.AbstractMutableMap.K,%20kotlin.collections.AbstractMutableMap.V)/value&quot;&gt;value&lt;/a&gt; with the specified &lt;a href=&quot;put#kotlin.collections.AbstractMutableMap%24put(kotlin.collections.AbstractMutableMap.K,%20kotlin.collections.AbstractMutableMap.V)/key&quot;&gt;key&lt;/a&gt; in the map.</target>
        </trans-unit>
        <trans-unit id="4f6905f1353a5a56ec02146382ec893696f10bfb" translate="yes" xml:space="preserve">
          <source>Associates the specified &lt;a href=&quot;put#kotlin.collections.MutableMap%24put%28kotlin.collections.MutableMap.K%2C+kotlin.collections.MutableMap.V%29%2Fvalue&quot;&gt;value&lt;/a&gt; with the specified &lt;a href=&quot;put#kotlin.collections.MutableMap%24put%28kotlin.collections.MutableMap.K%2C+kotlin.collections.MutableMap.V%29%2Fkey&quot;&gt;key&lt;/a&gt; in the map.</source>
          <target state="translated">지정된 &lt;a href=&quot;put#kotlin.collections.MutableMap%24put%28kotlin.collections.MutableMap.K%2C+kotlin.collections.MutableMap.V%29%2Fvalue&quot;&gt;값&lt;/a&gt; 을 맵 의 지정된 &lt;a href=&quot;put#kotlin.collections.MutableMap%24put%28kotlin.collections.MutableMap.K%2C+kotlin.collections.MutableMap.V%29%2Fkey&quot;&gt;키&lt;/a&gt; 와 연관시킵니다 .</target>
        </trans-unit>
        <trans-unit id="474780bfd61f09d7e1a6cde45d5c2a71f5f24780" translate="yes" xml:space="preserve">
          <source>Associates the specified &lt;a href=&quot;put#kotlin.collections.MutableMap%24put(kotlin.collections.MutableMap.K,%20kotlin.collections.MutableMap.V)/value&quot;&gt;value&lt;/a&gt; with the specified &lt;a href=&quot;put#kotlin.collections.MutableMap%24put(kotlin.collections.MutableMap.K,%20kotlin.collections.MutableMap.V)/key&quot;&gt;key&lt;/a&gt; in the map.</source>
          <target state="translated">Associates the specified &lt;a href=&quot;put#kotlin.collections.MutableMap%24put(kotlin.collections.MutableMap.K,%20kotlin.collections.MutableMap.V)/value&quot;&gt;value&lt;/a&gt; with the specified &lt;a href=&quot;put#kotlin.collections.MutableMap%24put(kotlin.collections.MutableMap.K,%20kotlin.collections.MutableMap.V)/key&quot;&gt;key&lt;/a&gt; in the map.</target>
        </trans-unit>
        <trans-unit id="1948b8a73d1cd0190740c5b39d682043e8e45d4f" translate="yes" xml:space="preserve">
          <source>Association</source>
          <target state="translated">Association</target>
        </trans-unit>
        <trans-unit id="8395c0a0a207934d59566106bad22ec2ff5eb59e" translate="yes" xml:space="preserve">
          <source>Assume that we have two suspending functions defined elsewhere that do something useful like some kind of remote service call or computation. We just pretend they are useful, but actually each one just delays for a second for the purpose of this example:</source>
          <target state="translated">원격 서비스 호출이나 계산과 같은 유용한 기능을 수행하는 두 개의 일시 중단 함수가 있다고 가정합니다. 우리는 그것들이 유용하다고 가정하지만 실제로는 각각이 예제의 목적을 위해 잠시 지연됩니다.</target>
        </trans-unit>
        <trans-unit id="c3aa4978e4d58ec2c7d3b82f0965d81efb4db15b" translate="yes" xml:space="preserve">
          <source>Assume that you have a list of words. The code below filters the words longer than three characters and prints the lengths of first four such words.</source>
          <target state="translated">단어 목록이 있다고 가정하십시오. 아래 코드는 3자를 초과하는 단어를 필터링하고 처음 4 개의 단어 길이를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="4cd21d8e175e3ac0a1b9fe05cc33f184247d0b3e" translate="yes" xml:space="preserve">
          <source>Assume the &lt;code&gt;main&lt;/code&gt; entry point to be provided by external libraries.</source>
          <target state="translated">외부 라이브러리에서 제공 하는 &lt;code&gt;main&lt;/code&gt; 진입 점을 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="79861cda45d1d1336e91c18e019c28d9b3291f82" translate="yes" xml:space="preserve">
          <source>Assuming we have the following project layout</source>
          <target state="translated">다음과 같은 프로젝트 레이아웃이 있다고 가정</target>
        </trans-unit>
        <trans-unit id="d7a00b0d9f24fd10ce1bc320970a529790a5b81e" translate="yes" xml:space="preserve">
          <source>Async-style functions</source>
          <target state="translated">비동기식 기능</target>
        </trans-unit>
        <trans-unit id="5f0c15c7899512dbe26911df30eecdd90eaafd60" translate="yes" xml:space="preserve">
          <source>Async: returning a value from a coroutine</source>
          <target state="translated">비동기 : 코 루틴에서 값 반환</target>
        </trans-unit>
        <trans-unit id="4a98d707e385c86f0c101a642eb19f1b3d755a3e" translate="yes" xml:space="preserve">
          <source>Asynchronous Flow</source>
          <target state="translated">Asynchronous Flow</target>
        </trans-unit>
        <trans-unit id="8148eff566285bcd48743fb742f972c7a1dd962f" translate="yes" xml:space="preserve">
          <source>Asynchronous Programming</source>
          <target state="translated">비동기 프로그래밍</target>
        </trans-unit>
        <trans-unit id="bb7e30cd8cfe981829ae3dbd4f1b57e04eede4d9" translate="yes" xml:space="preserve">
          <source>Asynchronous Programming Techniques</source>
          <target state="translated">비동기 프로그래밍 기법</target>
        </trans-unit>
        <trans-unit id="e2607ac70e77e7024a19441f977aa15dcc598da2" translate="yes" xml:space="preserve">
          <source>Asynchronous or non-blocking programming is the new reality. Whether we're creating server-side, desktop or mobile applications, it's important that we provide an experience that is not only fluid from the user's perspective, but scalable when needed.</source>
          <target state="translated">비동기 또는 비 차단 프로그래밍이 새로운 현실입니다. 서버 쪽, 데스크톱 또는 모바일 응용 프로그램을 만들 때 사용자 관점에서 유동적 일뿐만 아니라 필요할 때 확장 가능한 환경을 제공하는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="8c962fbddfbed98bc56b92b68db40e062e436b77" translate="yes" xml:space="preserve">
          <source>Asynchronous timeout and resources</source>
          <target state="translated">Asynchronous timeout and resources</target>
        </trans-unit>
        <trans-unit id="c90a909b33ae5b355a043d0fe5cf66963c82e15f" translate="yes" xml:space="preserve">
          <source>At first sight, inline classes may appear to be very similar to &lt;a href=&quot;type-aliases&quot;&gt;type aliases&lt;/a&gt;. Indeed, both seem to introduce a new type and both will be represented as the underlying type at runtime.</source>
          <target state="translated">언뜻보기에 인라인 클래스는 &lt;a href=&quot;type-aliases&quot;&gt;타입 별칭&lt;/a&gt; 과 매우 유사한 것처럼 보일 수 있습니다 . 실제로 둘 다 새로운 유형을 도입하는 것으로 보이며 둘 다 런타임시 기본 유형으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="4c1c4f3d0549737a69f500db6e62443a19d51d14" translate="yes" xml:space="preserve">
          <source>At most one Java class (and as many Java interfaces as you like) can be a supertype for a class in Kotlin.</source>
          <target state="translated">최대 하나의 Java 클래스 (및 원하는만큼의 Java 인터페이스)는 Kotlin의 클래스에 대한 수퍼 타입이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ca268b94cd98a6448db35d4377a0662bccdcb59" translate="yes" xml:space="preserve">
          <source>At the call site, inline accessors are inlined as regular inline functions.</source>
          <target state="translated">콜 사이트에서 인라인 접근자는 일반 인라인 함수로 인라인됩니다.</target>
        </trans-unit>
        <trans-unit id="ee1f6327a5680b8affafb58ed8775299673d7bbf" translate="yes" xml:space="preserve">
          <source>At the call sites, which function to use is determined from the type of the arguments:</source>
          <target state="translated">콜 사이트에서 사용할 함수는 인수 유형에 따라 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="776e970e6527bb2e679d37cd7d85af476c65df75" translate="yes" xml:space="preserve">
          <source>At this point we can start writing Kotlin code. For this sample, we're going to write some code that will print a string out to the console window.</source>
          <target state="translated">이제 Kotlin 코드 작성을 시작할 수 있습니다. 이 샘플에서는 콘솔 창에 문자열을 출력하는 코드를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="4e8863167b77086ca7c7ae08d20e28d919c8bb33" translate="yes" xml:space="preserve">
          <source>At this point, we should be able to compile and run the Android application</source>
          <target state="translated">이제 Android 애플리케이션을 컴파일하고 실행할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="6242af7a693eecb27b33a26762af854b2d88d142" translate="yes" xml:space="preserve">
          <source>At this point, we should have a Gradle project that is ready to be opened in an IDE. IntelliJ IDEA (CLion, AppCode, or AndroidStudio) helps us to generate the &lt;a href=&quot;https://docs.gradle.org/current/userguide/gradle_wrapper.html&quot;&gt;Gradle Wrapper&lt;/a&gt; scripts for our project.</source>
          <target state="translated">이제 IDE에서 열 준비가 된 Gradle 프로젝트가 있어야합니다. IntelliJ IDEA (CLion, AppCode 또는 AndroidStudio) 는 프로젝트 의 &lt;a href=&quot;https://docs.gradle.org/current/userguide/gradle_wrapper.html&quot;&gt;Gradle Wrapper&lt;/a&gt; 스크립트 를 생성하는 데 도움이됩니다 .</target>
        </trans-unit>
        <trans-unit id="f92583dde928fd145b3d96c6ab04278084ac9ae1" translate="yes" xml:space="preserve">
          <source>At this time, JavaScript does not support the full Kotlin reflection API. The only supported part of the API is the &lt;code&gt;::class&lt;/code&gt; syntax which allows you to refer to the class of an instance, or the class corresponding to the given type. The value of a &lt;code&gt;::class&lt;/code&gt; expression is a stripped-down &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.reflect/-k-class/index&quot;&gt;KClass&lt;/a&gt; implementation that only supports the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.reflect/-k-class/simple-name&quot;&gt;simpleName&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.reflect/-k-class/is-instance&quot;&gt;isInstance&lt;/a&gt; members.</source>
          <target state="translated">현재 JavaScript는 전체 Kotlin 리플렉션 API를 지원하지 않습니다. API에서 유일하게 지원되는 부분은 &lt;code&gt;::class&lt;/code&gt; 구문으로, 인스턴스의 클래스 또는 주어진 유형에 해당하는 클래스를 참조 할 수 있습니다. &lt;code&gt;::class&lt;/code&gt; 표현식 의 값은 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.reflect/-k-class/simple-name&quot;&gt;simpleName&lt;/a&gt; 및 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.reflect/-k-class/is-instance&quot;&gt;isInstance&lt;/a&gt; 멤버 만 지원 하는 제거 된 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.reflect/-k-class/index&quot;&gt;KClass&lt;/a&gt; 구현입니다 .</target>
        </trans-unit>
        <trans-unit id="b1093ec23519e17835b710a2e546cfab3df5cdd9" translate="yes" xml:space="preserve">
          <source>Atomic Kotlin</source>
          <target state="translated">원자 코 틀린</target>
        </trans-unit>
        <trans-unit id="7d3ac242b6d27572d34300c15efdc9401c78d30a" translate="yes" xml:space="preserve">
          <source>Atomic lazy initializer, could be used in frozen objects, freezes initializing lambda, so use very carefully. Also, as with other uses of an &lt;a href=&quot;-atomic-reference/index&quot;&gt;AtomicReference&lt;/a&gt; may potentially leak memory, so it is recommended to use &lt;code&gt;atomicLazy&lt;/code&gt; in cases of objects living forever, such as object signletons, or in cases where it's guaranteed not to have cyclical garbage.</source>
          <target state="translated">원자 게으른 이니셜 라이저는 얼어 붙은 물체에 사용될 수 있으며 람다 초기화를 동결하므로 매우 신중하게 사용하십시오. 또한 &lt;a href=&quot;-atomic-reference/index&quot;&gt;AtomicReference&lt;/a&gt; 를 다른 용도 로 사용할 경우 메모리가 누수 될 수 있으므로 객체 사인 렛과 같이 영원히 존재하는 객체 또는 순환 가비지가 보장되지 않는 경우 &lt;code&gt;atomicLazy&lt;/code&gt; 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="aa8f18c35a25de30768b4c0929995f133f360d46" translate="yes" xml:space="preserve">
          <source>Atomic primitives and references</source>
          <target state="translated">Atomic primitives and references</target>
        </trans-unit>
        <trans-unit id="3e3527d53d19dec4d8e1e33d95793431aa83f1ca" translate="yes" xml:space="preserve">
          <source>Atomic values and freezing: atomics &lt;a href=&quot;-atomic-int/index&quot;&gt;AtomicInt&lt;/a&gt;, &lt;a href=&quot;-atomic-long/index&quot;&gt;AtomicLong&lt;/a&gt;, &lt;a href=&quot;-atomic-native-ptr/index&quot;&gt;AtomicNativePtr&lt;/a&gt; and &lt;a href=&quot;-atomic-reference/index&quot;&gt;AtomicReference&lt;/a&gt; are unique types with regard to freezing. Namely, they provide mutating operations, while can participate in frozen subgraphs. So shared frozen objects can have fields of atomic types.</source>
          <target state="translated">원자 값 및 동결 : 원자 &lt;a href=&quot;-atomic-int/index&quot;&gt;AtomicInt&lt;/a&gt; , &lt;a href=&quot;-atomic-long/index&quot;&gt;AtomicLong&lt;/a&gt; , &lt;a href=&quot;-atomic-native-ptr/index&quot;&gt;AtomicNativePtr&lt;/a&gt; 및 &lt;a href=&quot;-atomic-reference/index&quot;&gt;AtomicReference&lt;/a&gt; 는 동결과 관련하여 고유 한 유형입니다. 즉, 이들은 고정 된 하위 그래프에 참여할 수있는 동안 돌연변이 작업을 제공합니다. 따라서 공유 된 고정 객체는 원자 유형의 필드를 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff80b7bb0582527dccb6953af274f0c41a527a8d" translate="yes" xml:space="preserve">
          <source>Atomic values and freezing: atomics &lt;a href=&quot;../../kotlin.native.concurrent/-atomic-int/index&quot;&gt;AtomicInt&lt;/a&gt;, &lt;a href=&quot;../../kotlin.native.concurrent/-atomic-long/index&quot;&gt;AtomicLong&lt;/a&gt;, &lt;a href=&quot;../../kotlin.native.concurrent/-atomic-native-ptr/index&quot;&gt;AtomicNativePtr&lt;/a&gt; and &lt;a href=&quot;../../kotlin.native.concurrent/-atomic-reference/index&quot;&gt;AtomicReference&lt;/a&gt; are unique types with regard to freezing. Namely, they provide mutating operations, while can participate in frozen subgraphs. So shared frozen objects can have fields of atomic types.</source>
          <target state="translated">원자 값 및 동결 : 원자 &lt;a href=&quot;../../kotlin.native.concurrent/-atomic-int/index&quot;&gt;AtomicInt&lt;/a&gt; , &lt;a href=&quot;../../kotlin.native.concurrent/-atomic-long/index&quot;&gt;AtomicLong&lt;/a&gt; , &lt;a href=&quot;../../kotlin.native.concurrent/-atomic-native-ptr/index&quot;&gt;AtomicNativePtr&lt;/a&gt; 및 &lt;a href=&quot;../../kotlin.native.concurrent/-atomic-reference/index&quot;&gt;AtomicReference&lt;/a&gt; 는 동결과 관련하여 고유 한 유형입니다. 즉, 이들은 고정 된 하위 그래프에 참여할 수있는 동안 돌연변이 작업을 제공합니다. 따라서 공유 된 고정 객체는 원자 유형의 필드를 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3220b8f47f19733bfedcab3d792dd6ebcbb2870" translate="yes" xml:space="preserve">
          <source>Atomic values and freezing: atomics &lt;a href=&quot;index&quot;&gt;AtomicInt&lt;/a&gt;, &lt;a href=&quot;../-atomic-long/index&quot;&gt;AtomicLong&lt;/a&gt;, &lt;a href=&quot;../-atomic-native-ptr/index&quot;&gt;AtomicNativePtr&lt;/a&gt; and &lt;a href=&quot;../-atomic-reference/index&quot;&gt;AtomicReference&lt;/a&gt; are unique types with regard to freezing. Namely, they provide mutating operations, while can participate in frozen subgraphs. So shared frozen objects can have fields of atomic types.</source>
          <target state="translated">원자 값 및 동결 : 원자 &lt;a href=&quot;index&quot;&gt;AtomicInt&lt;/a&gt; , &lt;a href=&quot;../-atomic-long/index&quot;&gt;AtomicLong&lt;/a&gt; , &lt;a href=&quot;../-atomic-native-ptr/index&quot;&gt;AtomicNativePtr&lt;/a&gt; 및 &lt;a href=&quot;../-atomic-reference/index&quot;&gt;AtomicReference&lt;/a&gt; 는 동결과 관련하여 고유 한 유형입니다. 즉, 이들은 고정 된 하위 그래프에 참여할 수있는 동안 돌연변이 작업을 제공합니다. 따라서 공유 된 고정 객체는 원자 유형의 필드를 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d29876e6e5c1007b7487d4800ff3326a46fdfe37" translate="yes" xml:space="preserve">
          <source>AtomicInt</source>
          <target state="translated">AtomicInt</target>
        </trans-unit>
        <trans-unit id="c6711287dc9369302489e77fcf65d42a31c0643c" translate="yes" xml:space="preserve">
          <source>AtomicLong</source>
          <target state="translated">AtomicLong</target>
        </trans-unit>
        <trans-unit id="b10e4647607e2f28f754fdbd9c0031e65869ad2c" translate="yes" xml:space="preserve">
          <source>AtomicNativePtr</source>
          <target state="translated">AtomicNativePtr</target>
        </trans-unit>
        <trans-unit id="cd0e6702ca5c371f1347949dd4a2eec403216573" translate="yes" xml:space="preserve">
          <source>AtomicReference</source>
          <target state="translated">AtomicReference</target>
        </trans-unit>
        <trans-unit id="6b9263c0c045b4b22f5e194c58e2e0998a48c054" translate="yes" xml:space="preserve">
          <source>Attaches previously detached object subgraph created by &lt;a href=&quot;-detached-object-graph/index&quot;&gt;DetachedObjectGraph&lt;/a&gt;. Please note, that once object graph is attached, the DetachedObjectGraph.stable pointer does not have sense anymore, and shall be discarded.</source>
          <target state="translated">&lt;a href=&quot;-detached-object-graph/index&quot;&gt;DetachedObjectGraph가&lt;/a&gt; 작성한 이전에 분리 된 오브젝트 서브 그래프를 첨부합니다 . 일단 객체 그래프가 첨부되면 DetachedObjectGraph.stable 포인터는 더 이상 의미가 없으므로 폐기됩니다.</target>
        </trans-unit>
        <trans-unit id="dc219046f9dd12cc6f54ad2da0d81941959336bb" translate="yes" xml:space="preserve">
          <source>Attaches previously detached object subgraph created by &lt;a href=&quot;-detached-object-graph/index&quot;&gt;DetachedObjectGraph&lt;/a&gt;. Please note, that once object graph is attached, the DetachedObjectGraph.stable pointer does not make sense anymore, and shall be discarded, so attach of one DetachedObjectGraph object can only happen once.</source>
          <target state="translated">Attaches previously detached object subgraph created by &lt;a href=&quot;-detached-object-graph/index&quot;&gt;DetachedObjectGraph&lt;/a&gt;. Please note, that once object graph is attached, the DetachedObjectGraph.stable pointer does not make sense anymore, and shall be discarded, so attach of one DetachedObjectGraph object can only happen once.</target>
        </trans-unit>
        <trans-unit id="85360aaf61fcc41844144d2a436522c4272bcaf6" translate="yes" xml:space="preserve">
          <source>Attaches previously detached object subgraph created by &lt;a href=&quot;index&quot;&gt;DetachedObjectGraph&lt;/a&gt;. Please note, that once object graph is attached, the DetachedObjectGraph.stable pointer does not have sense anymore, and shall be discarded.</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;DetachedObjectGraph가&lt;/a&gt; 작성한 이전에 분리 된 오브젝트 서브 그래프를 첨부합니다 . 일단 객체 그래프가 첨부되면 DetachedObjectGraph.stable 포인터는 더 이상 의미가 없으므로 폐기됩니다.</target>
        </trans-unit>
        <trans-unit id="d464a203d18b4acdef1cb9b5e6d79361554aa421" translate="yes" xml:space="preserve">
          <source>Attaches previously detached object subgraph created by &lt;a href=&quot;index&quot;&gt;DetachedObjectGraph&lt;/a&gt;. Please note, that once object graph is attached, the DetachedObjectGraph.stable pointer does not make sense anymore, and shall be discarded, so attach of one DetachedObjectGraph object can only happen once.</source>
          <target state="translated">Attaches previously detached object subgraph created by &lt;a href=&quot;index&quot;&gt;DetachedObjectGraph&lt;/a&gt;. Please note, that once object graph is attached, the DetachedObjectGraph.stable pointer does not make sense anymore, and shall be discarded, so attach of one DetachedObjectGraph object can only happen once.</target>
        </trans-unit>
        <trans-unit id="3e04925abe583687ef35f1c1ca19b4070dadb97b" translate="yes" xml:space="preserve">
          <source>Attempts to access a member on a &lt;code&gt;null&lt;/code&gt; reference of a &lt;a href=&quot;java-interop#null-safety-and-platform-types&quot;&gt;platform type&lt;/a&gt;;</source>
          <target state="translated">&lt;a href=&quot;java-interop#null-safety-and-platform-types&quot;&gt;플랫폼 유형&lt;/a&gt; 의 &lt;code&gt;null&lt;/code&gt; 참조 에서 멤버에 액세스를 시도 합니다 .</target>
        </trans-unit>
        <trans-unit id="f38b115c0558078590578144f222487894baa182" translate="yes" xml:space="preserve">
          <source>Attempts to match the entire &lt;a href=&quot;match-entire#kotlin.text.Regex%24matchEntire%28kotlin.CharSequence%29%2Finput&quot;&gt;input&lt;/a&gt; CharSequence against the pattern.</source>
          <target state="translated">전체 &lt;a href=&quot;match-entire#kotlin.text.Regex%24matchEntire%28kotlin.CharSequence%29%2Finput&quot;&gt;입력&lt;/a&gt; CharSequence를 패턴 과 일치 시키려고합니다.</target>
        </trans-unit>
        <trans-unit id="3961ecca8671626370b3766776c20dc21550b18a" translate="yes" xml:space="preserve">
          <source>Attempts to match the entire &lt;a href=&quot;match-entire#kotlin.text.Regex%24matchEntire(kotlin.CharSequence)/input&quot;&gt;input&lt;/a&gt; CharSequence against the pattern.</source>
          <target state="translated">Attempts to match the entire &lt;a href=&quot;match-entire#kotlin.text.Regex%24matchEntire(kotlin.CharSequence)/input&quot;&gt;input&lt;/a&gt; CharSequence against the pattern.</target>
        </trans-unit>
        <trans-unit id="1e354738ed906b6023210a6af2ec10c3fd9cc557" translate="yes" xml:space="preserve">
          <source>Attempts to reduce storage used for this string builder.</source>
          <target state="translated">Attempts to reduce storage used for this string builder.</target>
        </trans-unit>
        <trans-unit id="0a3992a6a4aa368ee211c9a5ef66edcf44867dac" translate="yes" xml:space="preserve">
          <source>Attributes Common for JVM and JS</source>
          <target state="translated">JVM 및 JS에 공통적 인 속성</target>
        </trans-unit>
        <trans-unit id="19e61d54f451b94d2a537e89732db95c83678a6f" translate="yes" xml:space="preserve">
          <source>Attributes Common for JVM, JS, and JS DCE</source>
          <target state="translated">JVM, JS 및 JS DCE에 공통적 인 속성</target>
        </trans-unit>
        <trans-unit id="df5c20aa22a21e846f82b7e3de20a361b9409ec8" translate="yes" xml:space="preserve">
          <source>Attributes Specific for JS</source>
          <target state="translated">JS 전용 속성</target>
        </trans-unit>
        <trans-unit id="f2b02b6aea1831e52d168cd65816378536e73e3e" translate="yes" xml:space="preserve">
          <source>Attributes Specific for JVM</source>
          <target state="translated">JVM에 특정한 속성</target>
        </trans-unit>
        <trans-unit id="bc7039e1aba846721ec623985d2d40d6de32dcac" translate="yes" xml:space="preserve">
          <source>Attributes common for JVM and JS</source>
          <target state="translated">JVM 및 JS에 공통적 인 속성</target>
        </trans-unit>
        <trans-unit id="e487d31ee714c363147bda3038882243c57cd4e1" translate="yes" xml:space="preserve">
          <source>Attributes common for JVM, JS, and JS DCE</source>
          <target state="translated">Attributes common for JVM, JS, and JS DCE</target>
        </trans-unit>
        <trans-unit id="3a04a6e86e3fe7f9d64d5f2e9b362b660d514689" translate="yes" xml:space="preserve">
          <source>Attributes common for kotlinc and kotlin2js</source>
          <target state="translated">kotlinc 및 kotlin2js에 공통적 인 속성</target>
        </trans-unit>
        <trans-unit id="58a9f1cbcc06a3468059fe9cb6b0bd7ec18ece90" translate="yes" xml:space="preserve">
          <source>Attributes specific for JS</source>
          <target state="translated">JS에 특정한 속성</target>
        </trans-unit>
        <trans-unit id="3e62e54f4e49fd8be02c1ea2299e7299a8d38dee" translate="yes" xml:space="preserve">
          <source>Attributes specific for JVM</source>
          <target state="translated">JVM에 특정한 속성</target>
        </trans-unit>
        <trans-unit id="3d5b3075a05527543a3bd39690d4c8ec95539b60" translate="yes" xml:space="preserve">
          <source>Attributes used for &lt;a href=&quot;mpp-set-up-targets#distinguish-several-targets-for-one-platform&quot;&gt;disambiguating targets&lt;/a&gt; for a single platform.</source>
          <target state="translated">단일 플랫폼의 &lt;a href=&quot;mpp-set-up-targets#distinguish-several-targets-for-one-platform&quot;&gt;대상&lt;/a&gt; 을 명확하게 하는 데 사용되는 속성 입니다.</target>
        </trans-unit>
        <trans-unit id="4c30a80ce09bd22cb712da2e47c2b70c6a7dbc6d" translate="yes" xml:space="preserve">
          <source>AudioTrack</source>
          <target state="translated">AudioTrack</target>
        </trans-unit>
        <trans-unit id="6075948adfa60c73f74f563f8feb4a98403ab458" translate="yes" xml:space="preserve">
          <source>Augmented assignments</source>
          <target state="translated">증강 과제</target>
        </trans-unit>
        <trans-unit id="2eacac2b65755fe774c70b80986db46b1c410b0a" translate="yes" xml:space="preserve">
          <source>Authoring libraries for the IR compiler with backwards compatibility</source>
          <target state="translated">이전 버전과의 호환성이있는 IR 컴파일러 용 라이브러리 제작</target>
        </trans-unit>
        <trans-unit id="834e7a793c079da4161fe6e5f43f722449edfaff" translate="yes" xml:space="preserve">
          <source>Authors of existing projects may choose to explicitly declare using the old code style in a project (this way the project won't be affected by switching to the defaults in the future)</source>
          <target state="translated">기존 프로젝트 작성자는 프로젝트에서 이전 코드 스타일을 사용하여 명시 적으로 선언하도록 선택할 수 있습니다 (이 방법으로 향후 기본값으로 전환해도 프로젝트에 영향을 미치지 않음)</target>
        </trans-unit>
        <trans-unit id="698d12054509449dda459aba97ce14ac599bf62a" translate="yes" xml:space="preserve">
          <source>Authors of existing projects may choose to migrate to the Kotlin Coding Conventions</source>
          <target state="translated">기존 프로젝트의 저자는 Kotlin Coding Conventions로 마이그레이션을 선택할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="5b21b0d1957d77cbce2fde42083342b94ff6d7b9" translate="yes" xml:space="preserve">
          <source>AutofreeScope</source>
          <target state="translated">AutofreeScope</target>
        </trans-unit>
        <trans-unit id="ed639df7587daa7f0e2a83a2efdab37263d53336" translate="yes" xml:space="preserve">
          <source>Automatic Configuration</source>
          <target state="translated">자동 구성</target>
        </trans-unit>
        <trans-unit id="7dfb0b6ec5c8489060715d687318f1e8b5634fe0" translate="yes" xml:space="preserve">
          <source>Automatic generation of external declarations with Dukat</source>
          <target state="translated">Dukat으로 외부 선언 자동 생성</target>
        </trans-unit>
        <trans-unit id="f7df104fa9dfba3548d0c4684bc5a40afaa99b57" translate="yes" xml:space="preserve">
          <source>Automatically assigned ids are good when coroutines log often and you just need to correlate log records coming from the same coroutine. However, when a coroutine is tied to the processing of a specific request or doing some specific background task, it is better to name it explicitly for debugging purposes. The &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-name/index.html&quot;&gt;CoroutineName&lt;/a&gt; context element serves the same purpose as the thread name. It is included in the thread name that is executing this coroutine when the &lt;a href=&quot;#debugging-coroutines-and-threads&quot;&gt;debugging mode&lt;/a&gt; is turned on.</source>
          <target state="translated">Automatically assigned ids are good when coroutines log often and you just need to correlate log records coming from the same coroutine. However, when a coroutine is tied to the processing of a specific request or doing some specific background task, it is better to name it explicitly for debugging purposes. The &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-name/index.html&quot;&gt;CoroutineName&lt;/a&gt; context element serves the same purpose as the thread name. It is included in the thread name that is executing this coroutine when the &lt;a href=&quot;#debugging-coroutines-and-threads&quot;&gt;debugging mode&lt;/a&gt; is turned on.</target>
        </trans-unit>
        <trans-unit id="e62729f2b2555d5d8ac4915829fe367bb5ae7e91" translate="yes" xml:space="preserve">
          <source>Automatically assigned ids are good when coroutines log often and you just need to correlate log records coming from the same coroutine. However, when coroutine is tied to the processing of a specific request or doing some specific background task, it is better to name it explicitly for debugging purposes. &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-name/index.html&quot;&gt;CoroutineName&lt;/a&gt; context element serves the same function as a thread name. It'll get displayed in the thread name that is executing this coroutine when &lt;a href=&quot;#debugging-coroutines-and-threads&quot;&gt;debugging mode&lt;/a&gt; is turned on.</source>
          <target state="translated">코 루틴이 로그를 자주 기록 할 때 자동으로 할당 된 ID가 좋으며 동일한 코 루틴에서 오는 로그 레코드를 상관시키기 만하면됩니다. 그러나 코 루틴이 특정 요청의 처리 또는 특정 백그라운드 작업을 수행 할 때 디버깅 목적으로 명시 적으로 이름을 지정하는 것이 좋습니다. &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-name/index.html&quot;&gt;CoroutineName&lt;/a&gt; 컨텍스트 요소는 스레드 이름과 동일한 기능을 수행합니다. &lt;a href=&quot;#debugging-coroutines-and-threads&quot;&gt;디버깅 모드&lt;/a&gt; 가 켜져 있을 때이 코 루틴을 실행하는 스레드 이름으로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="dedf9e0b9e549511e84f9a55d3b042ca74de957a" translate="yes" xml:space="preserve">
          <source>Availability by default</source>
          <target state="translated">기본적으로 가용성</target>
        </trans-unit>
        <trans-unit id="7c0e3548596e9319d754a7ccf13706332d8c4cb9" translate="yes" xml:space="preserve">
          <source>Available at runtime but is not visible during compilation of any module.</source>
          <target state="translated">Available at runtime but is not visible during compilation of any module.</target>
        </trans-unit>
        <trans-unit id="c8cc7ec782d977d65ce99353082a5bdf17f287b4" translate="yes" xml:space="preserve">
          <source>Available for</source>
          <target state="translated">사용 가능</target>
        </trans-unit>
        <trans-unit id="19e5fd6a644635fee9a19be8333a112f913920e1" translate="yes" xml:space="preserve">
          <source>Available values are similar to Maven.</source>
          <target state="translated">사용 가능한 값은 Maven과 비슷합니다.</target>
        </trans-unit>
        <trans-unit id="925c5bacdb9d1f8779aa51c640f5ff726fe66e5b" translate="yes" xml:space="preserve">
          <source>Available values are: &lt;code&gt;plain&lt;/code&gt;, &lt;code&gt;amd&lt;/code&gt;, &lt;code&gt;commonjs&lt;/code&gt;, &lt;code&gt;umd&lt;/code&gt;.</source>
          <target state="translated">사용 가능한 값은 &lt;code&gt;plain&lt;/code&gt; , &lt;code&gt;amd&lt;/code&gt; , &lt;code&gt;commonjs&lt;/code&gt; , &lt;code&gt;umd&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="14ae1302612f3a72a72bfd1d8a4999912d2ff46d" translate="yes" xml:space="preserve">
          <source>Available values are: &lt;code&gt;umd&lt;/code&gt; (default), &lt;code&gt;commonjs&lt;/code&gt;, &lt;code&gt;amd&lt;/code&gt;, &lt;code&gt;plain&lt;/code&gt;.</source>
          <target state="translated">Available values are: &lt;code&gt;umd&lt;/code&gt; (default), &lt;code&gt;commonjs&lt;/code&gt; , &lt;code&gt;amd&lt;/code&gt; , &lt;code&gt;plain&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="163b0272f1313b7d3ab40d92011eb45565a061a9" translate="yes" xml:space="preserve">
          <source>Avoid using multiple labeled returns in a lambda. Consider restructuring the lambda so that it will have a single exit point. If that's not possible or not clear enough, consider converting the lambda into an anonymous function.</source>
          <target state="translated">람다에 여러 개의 레이블이 지정된 리턴을 사용하지 마십시오. 람다가 단일 종료점을 갖도록 재구성하십시오. 이것이 가능하지 않거나 명확하지 않은 경우 람다를 익명 함수로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="f61994132eb4d79c6aaf7ca511db5a42493392ec" translate="yes" xml:space="preserve">
          <source>Avoiding redundant constructs</source>
          <target state="translated">중복 구성 피하기</target>
        </trans-unit>
        <trans-unit id="d05fb01e0b399387c3a28586f5fd296e2670d6a3" translate="yes" xml:space="preserve">
          <source>BINARY</source>
          <target state="translated">BINARY</target>
        </trans-unit>
        <trans-unit id="40f11d3ad003725179d3a62fbf2b87b2339ec88d" translate="yes" xml:space="preserve">
          <source>BOTTOM_UP</source>
          <target state="translated">BOTTOM_UP</target>
        </trans-unit>
        <trans-unit id="ddfff385b1434a7625c985e9f1d31a3cd0752508" translate="yes" xml:space="preserve">
          <source>BOUNDARY_NEUTRAL</source>
          <target state="translated">BOUNDARY_NEUTRAL</target>
        </trans-unit>
        <trans-unit id="64dd60fe1a049fe6db3eb1369dec2e42bf428e21" translate="yes" xml:space="preserve">
          <source>Background</source>
          <target state="translated">Background</target>
        </trans-unit>
        <trans-unit id="1f8df48cbdf6e9bb3b2a296fc43fa4bd2dbc081a" translate="yes" xml:space="preserve">
          <source>Backing Fields</source>
          <target state="translated">백업 필드</target>
        </trans-unit>
        <trans-unit id="ba9525e05855250ce336ac7c2b4ab8bd18b3201d" translate="yes" xml:space="preserve">
          <source>Backing Properties</source>
          <target state="translated">백업 속성</target>
        </trans-unit>
        <trans-unit id="631fe8fd6cc851cadc4405bb7dd43652aea1c83c" translate="yes" xml:space="preserve">
          <source>BarProp</source>
          <target state="translated">BarProp</target>
        </trans-unit>
        <trans-unit id="69c20ffdfd0584cd6a1117171a685097ea27aca9" translate="yes" xml:space="preserve">
          <source>Base class for &lt;a href=&quot;-coroutine-context/-element/index&quot;&gt;CoroutineContext.Element&lt;/a&gt; implementations.</source>
          <target state="translated">&lt;a href=&quot;-coroutine-context/-element/index&quot;&gt;CoroutineContext.Element&lt;/a&gt; 구현을 위한 기본 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="15d35858275d06dd03861a24397a3ce986f4354b" translate="yes" xml:space="preserve">
          <source>Base class for &lt;a href=&quot;-coroutine-context/-key&quot;&gt;CoroutineContext.Key&lt;/a&gt; associated with polymorphic &lt;a href=&quot;-coroutine-context/-element/index&quot;&gt;CoroutineContext.Element&lt;/a&gt; implementation. Polymorphic element implementation implies delegating its &lt;a href=&quot;-coroutine-context/-element/get&quot;&gt;get&lt;/a&gt; and &lt;a href=&quot;-coroutine-context/-element/minus-key&quot;&gt;minusKey&lt;/a&gt; to &lt;a href=&quot;get-polymorphic-element&quot;&gt;getPolymorphicElement&lt;/a&gt; and &lt;a href=&quot;minus-polymorphic-key&quot;&gt;minusPolymorphicKey&lt;/a&gt; respectively.</source>
          <target state="translated">Base class for &lt;a href=&quot;-coroutine-context/-key&quot;&gt;CoroutineContext.Key&lt;/a&gt; associated with polymorphic &lt;a href=&quot;-coroutine-context/-element/index&quot;&gt;CoroutineContext.Element&lt;/a&gt; implementation. Polymorphic element implementation implies delegating its &lt;a href=&quot;-coroutine-context/-element/get&quot;&gt;get&lt;/a&gt; and &lt;a href=&quot;-coroutine-context/-element/minus-key&quot;&gt;minusKey&lt;/a&gt; to &lt;a href=&quot;get-polymorphic-element&quot;&gt;getPolymorphicElement&lt;/a&gt; and &lt;a href=&quot;minus-polymorphic-key&quot;&gt;minusPolymorphicKey&lt;/a&gt; respectively.</target>
        </trans-unit>
        <trans-unit id="7243152aff3a19217da0e810a6a6b21b0ed42228" translate="yes" xml:space="preserve">
          <source>Base class for &lt;a href=&quot;../-coroutine-context/-element/index&quot;&gt;CoroutineContext.Element&lt;/a&gt; implementations.</source>
          <target state="translated">&lt;a href=&quot;../-coroutine-context/-element/index&quot;&gt;CoroutineContext.Element&lt;/a&gt; 구현을 위한 기본 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="8f2c4f77a0b39ce265b5ad1137ab61069fa375b2" translate="yes" xml:space="preserve">
          <source>Base class for &lt;a href=&quot;../-coroutine-context/-key&quot;&gt;CoroutineContext.Key&lt;/a&gt; associated with polymorphic &lt;a href=&quot;../-coroutine-context/-element/index&quot;&gt;CoroutineContext.Element&lt;/a&gt; implementation. Polymorphic element implementation implies delegating its &lt;a href=&quot;../-coroutine-context/-element/get&quot;&gt;get&lt;/a&gt; and &lt;a href=&quot;../-coroutine-context/-element/minus-key&quot;&gt;minusKey&lt;/a&gt; to &lt;a href=&quot;../get-polymorphic-element&quot;&gt;getPolymorphicElement&lt;/a&gt; and &lt;a href=&quot;../minus-polymorphic-key&quot;&gt;minusPolymorphicKey&lt;/a&gt; respectively.</source>
          <target state="translated">다형성 &lt;a href=&quot;../-coroutine-context/-element/index&quot;&gt;CoroutineContext.Element&lt;/a&gt; 구현 과 관련된 &lt;a href=&quot;../-coroutine-context/-key&quot;&gt;CoroutineContext.Key의&lt;/a&gt; 기본 클래스입니다 . 다형성 요소 구현은 &lt;a href=&quot;../-coroutine-context/-element/get&quot;&gt;get&lt;/a&gt; 및 &lt;a href=&quot;../-coroutine-context/-element/minus-key&quot;&gt;minusKey&lt;/a&gt; 를 각각 &lt;a href=&quot;../get-polymorphic-element&quot;&gt;getPolymorphicElement&lt;/a&gt; 및 &lt;a href=&quot;../minus-polymorphic-key&quot;&gt;minusPolymorphicKey에&lt;/a&gt; 위임하는 것을 의미 합니다.</target>
        </trans-unit>
        <trans-unit id="3dbb332a4302b9a6be036aad90c3597ea0d446a7" translate="yes" xml:space="preserve">
          <source>Base class for &lt;a href=&quot;../../kotlin.coroutines.experimental/-coroutine-context/-element/index&quot;&gt;CoroutineContext.Element&lt;/a&gt; implementations.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.coroutines.experimental/-coroutine-context/-element/index&quot;&gt;CoroutineContext.Element&lt;/a&gt; 구현을 위한 기본 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="64721f5bd5bf9cb87511e3b2df6546bc5436e2d1" translate="yes" xml:space="preserve">
          <source>Base class for &lt;a href=&quot;../../kotlin.coroutines/-coroutine-context/-element/index&quot;&gt;CoroutineContext.Element&lt;/a&gt; implementations.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.coroutines/-coroutine-context/-element/index&quot;&gt;CoroutineContext.Element&lt;/a&gt; 구현을 위한 기본 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="5c6c4d1fa1cea7d643033e0cc686085c0784ff70" translate="yes" xml:space="preserve">
          <source>Base class for &lt;a href=&quot;../../kotlin.coroutines/-coroutine-context/-key&quot;&gt;CoroutineContext.Key&lt;/a&gt; associated with polymorphic &lt;a href=&quot;../../kotlin.coroutines/-coroutine-context/-element/index&quot;&gt;CoroutineContext.Element&lt;/a&gt; implementation. Polymorphic element implementation implies delegating its &lt;a href=&quot;../../kotlin.coroutines/-coroutine-context/-element/get&quot;&gt;get&lt;/a&gt; and &lt;a href=&quot;../../kotlin.coroutines/-coroutine-context/-element/minus-key&quot;&gt;minusKey&lt;/a&gt; to &lt;a href=&quot;../../kotlin.coroutines/get-polymorphic-element&quot;&gt;getPolymorphicElement&lt;/a&gt; and &lt;a href=&quot;../../kotlin.coroutines/minus-polymorphic-key&quot;&gt;minusPolymorphicKey&lt;/a&gt; respectively.</source>
          <target state="translated">Base class for &lt;a href=&quot;../../kotlin.coroutines/-coroutine-context/-key&quot;&gt;CoroutineContext.Key&lt;/a&gt; associated with polymorphic &lt;a href=&quot;../../kotlin.coroutines/-coroutine-context/-element/index&quot;&gt;CoroutineContext.Element&lt;/a&gt; implementation. Polymorphic element implementation implies delegating its &lt;a href=&quot;../../kotlin.coroutines/-coroutine-context/-element/get&quot;&gt;get&lt;/a&gt; and &lt;a href=&quot;../../kotlin.coroutines/-coroutine-context/-element/minus-key&quot;&gt;minusKey&lt;/a&gt; to &lt;a href=&quot;../../kotlin.coroutines/get-polymorphic-element&quot;&gt;getPolymorphicElement&lt;/a&gt; and &lt;a href=&quot;../../kotlin.coroutines/minus-polymorphic-key&quot;&gt;minusPolymorphicKey&lt;/a&gt; respectively.</target>
        </trans-unit>
        <trans-unit id="5734564e60f6d0468b2eba14396fc3fc48c4b1b3" translate="yes" xml:space="preserve">
          <source>Base interface implicitly implemented by all annotation interfaces. See &lt;a href=&quot;../../../../../../docs/reference/annotations&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information on annotations.</source>
          <target state="translated">기본 인터페이스는 모든 주석 인터페이스에 의해 암시 적으로 구현됩니다. 주석에 대한 자세한 내용 은 &lt;a href=&quot;../../../../../../docs/reference/annotations&quot;&gt;Kotlin 언어 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7fe2c7954cd1b89a648a9cad253d4aec1376c4b5" translate="yes" xml:space="preserve">
          <source>Base interface implicitly implemented by all annotation interfaces. See &lt;a href=&quot;../../../../../docs/reference/annotations&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information on annotations.</source>
          <target state="translated">기본 인터페이스는 모든 주석 인터페이스에 의해 암시 적으로 구현됩니다. 주석에 대한 자세한 내용 은 &lt;a href=&quot;../../../../../docs/reference/annotations&quot;&gt;Kotlin 언어 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="53bc813f0de4922a17c2d0a20db15ada1d790b5c" translate="yes" xml:space="preserve">
          <source>Base interface that can be used for implementing property delegate providers.</source>
          <target state="translated">Base interface that can be used for implementing property delegate providers.</target>
        </trans-unit>
        <trans-unit id="c59ba4cae5cc34265ab39cbd2c308fd7a43f2458" translate="yes" xml:space="preserve">
          <source>Base interface that can be used for implementing property delegates of read-only properties.</source>
          <target state="translated">읽기 전용 속성의 속성 대리자를 구현하는 데 사용할 수있는 기본 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="e91c5343b8946f864e8b656029fb53550538fd16" translate="yes" xml:space="preserve">
          <source>Base interface that can be used for implementing property delegates of read-write properties.</source>
          <target state="translated">읽기-쓰기 속성의 속성 대리자를 구현하는 데 사용할 수있는 기본 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="64373315f6e979efca96ab611c5eefc9e99553fc" translate="yes" xml:space="preserve">
          <source>Base of the natural logarithms, approximately 2.71828.</source>
          <target state="translated">자연 로그의 기초, 약 2.71828.</target>
        </trans-unit>
        <trans-unit id="2afb88d7964181bbca0fa9e83d658a614510bacd" translate="yes" xml:space="preserve">
          <source>Basecamp's Android app is &lt;a href=&quot;https://m.signalvnoise.com/how-we-made-basecamp-3s-android-app-100-kotlin-35e4e1c0ef12&quot;&gt;100% Kotlin code&lt;/a&gt;, and they report a huge difference in programmer happiness and great improvements in work quality and speed.</source>
          <target state="translated">Basecamp의 Android 앱은 &lt;a href=&quot;https://m.signalvnoise.com/how-we-made-basecamp-3s-android-app-100-kotlin-35e4e1c0ef12&quot;&gt;100 % Kotlin 코드&lt;/a&gt; 이며 프로그래머의 행복에 큰 차이가 있으며 작업 품질과 속도가 크게 향상 되었다고 보고합니다.</target>
        </trans-unit>
        <trans-unit id="15e10e999d9f45564ef18325b8fb75ba7dfdf012" translate="yes" xml:space="preserve">
          <source>Basic Syntax</source>
          <target state="translated">기본 구문</target>
        </trans-unit>
        <trans-unit id="0683d71248dcbb6ef209d3946391b3451983e5b6" translate="yes" xml:space="preserve">
          <source>Basic Types</source>
          <target state="translated">기본 유형</target>
        </trans-unit>
        <trans-unit id="095602bb1950fe3e722bc705ecbf84e81ffbfbce" translate="yes" xml:space="preserve">
          <source>Basic interop types</source>
          <target state="translated">기본 interop 유형</target>
        </trans-unit>
        <trans-unit id="31c67e8a76b1546e5e885d2ff65b10a2ec9660ee" translate="yes" xml:space="preserve">
          <source>Basic lifecycle tasks like &lt;code&gt;assemble&lt;/code&gt;, &lt;code&gt;build&lt;/code&gt;, and &lt;code&gt;clean&lt;/code&gt; are also available.</source>
          <target state="translated">&lt;code&gt;assemble&lt;/code&gt; , &lt;code&gt;build&lt;/code&gt; 및 &lt;code&gt;clean&lt;/code&gt; 와 같은 기본 수명주기 작업 도 가능합니다.</target>
        </trans-unit>
        <trans-unit id="bff9aacbc4e15b3e4592c41eb9ecf6abc207d35d" translate="yes" xml:space="preserve">
          <source>Basic primitives for creating and suspending coroutines: &lt;a href=&quot;-continuation/index&quot;&gt;Continuation&lt;/a&gt;, &lt;a href=&quot;-coroutine-context/index&quot;&gt;CoroutineContext&lt;/a&gt; interfaces, coroutine creation and suspension top-level functions.</source>
          <target state="translated">코 루틴 생성 및 일시 중단을위한 기본 기본 요소 : &lt;a href=&quot;-continuation/index&quot;&gt;연속&lt;/a&gt; , &lt;a href=&quot;-coroutine-context/index&quot;&gt;CoroutineContext&lt;/a&gt; 인터페이스, 코 루틴 생성 및 서스펜션 최상위 함수.</target>
        </trans-unit>
        <trans-unit id="3c4f90d8acc9678c79d53f447d2f3f8d0cca60ff" translate="yes" xml:space="preserve">
          <source>Basic primitives for creating and suspending coroutines: &lt;a href=&quot;api/latest/jvm/stdlib/kotlin.coroutines/-continuation/index&quot;&gt;Continuation&lt;/a&gt;, &lt;a href=&quot;api/latest/jvm/stdlib/kotlin.coroutines/-coroutine-context/index&quot;&gt;CoroutineContext&lt;/a&gt; interfaces, coroutine creation and suspension top-level functions.</source>
          <target state="translated">코 루틴 생성 및 일시 중단을위한 기본 기본 요소 : &lt;a href=&quot;api/latest/jvm/stdlib/kotlin.coroutines/-continuation/index&quot;&gt;연속&lt;/a&gt; , &lt;a href=&quot;api/latest/jvm/stdlib/kotlin.coroutines/-coroutine-context/index&quot;&gt;CoroutineContext&lt;/a&gt; 인터페이스, 코 루틴 생성 및 서스펜션 최상위 함수.</target>
        </trans-unit>
        <trans-unit id="ad5ff5967cd00f1b9a1ebc25862b124009e41b57" translate="yes" xml:space="preserve">
          <source>Basic terms</source>
          <target state="translated">기본 용어</target>
        </trans-unit>
        <trans-unit id="6af1132d5b79ef2d86c138cc84ba1a7c1c491b45" translate="yes" xml:space="preserve">
          <source>Basically this step is limited to defining the Step Name and the version of Kotlin we need. Tags can be used.</source>
          <target state="translated">기본적으로이 단계는 필요한 단계 이름과 Kotlin 버전을 정의하는 것으로 제한됩니다. 태그를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f93bc71aa464c43e8bc2736eb59d1de19d1609c" translate="yes" xml:space="preserve">
          <source>Basically, these functions do the same: execute a block of code on an object. What's different is how this object becomes available inside the block and what is the result of the whole expression.</source>
          <target state="translated">기본적으로 이러한 기능은 동일합니다. 객체에서 코드 블록을 실행합니다. 다른 점은이 객체가 블록 내에서 사용 가능 해지는 방식과 전체 표현식의 결과입니다.</target>
        </trans-unit>
        <trans-unit id="5fcebeefad3cdbbf8733aa928160dec7dc90c1a1" translate="yes" xml:space="preserve">
          <source>Basics</source>
          <target state="translated">Basics</target>
        </trans-unit>
        <trans-unit id="27757d2e54473d3cf22ab554f90a3e64a22141d2" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;T&lt;/code&gt; is used as a parameter type, it can't be covariant, and because it's used as a return type, it can't be contravariant. But if we only want to use the &lt;code&gt;get()&lt;/code&gt; function, we can project it covariantly with &lt;code&gt;out&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 는 매개 변수 유형으로 사용 되기 때문에 공변량 일 수 없으며 리턴 유형으로 사용되기 때문에 반 변량 일 수 없습니다. 우리 만 사용하려는 경우 그러나 &lt;code&gt;get()&lt;/code&gt; 함수를 우리는 함께 covariantly을 투사 할 수 &lt;code&gt;out&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="044cdf122b67c1432337900e8cfe71d6eac81889" translate="yes" xml:space="preserve">
          <source>Because JavaScript modules are usually dynamically typed and Kotlin is a statically typed language, we need to provide a kind of adapter. In Kotlin, such adapters are called &lt;em&gt;external declarations&lt;/em&gt;. For the &lt;code&gt;is-sorted&lt;/code&gt; package which offers only one function, this declaration is small to write. Inside the source folder, create a new file called &lt;code&gt;is-sorted.kt&lt;/code&gt;, and fill it with these contents:</source>
          <target state="translated">자바 스크립트 모듈은 일반적으로 동적 유형이 지정되고 Kotlin은 정적으로 유형이 지정된 언어이므로 일종의 어댑터를 제공해야합니다. Kotlin에서는 이러한 어댑터를 &lt;em&gt;외부 선언&lt;/em&gt; 이라고 합니다. 들어 &lt;code&gt;is-sorted&lt;/code&gt; 하는 이벤트 하나 개의 기능을 패키지로,이 선언은 쓰기에 작다. 소스 폴더 안에 &lt;code&gt;is-sorted.kt&lt;/code&gt; 라는 새 파일을 만들고 다음 내용으로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="2249ad42743195fa21c675ff00b5c5fb81328557" translate="yes" xml:space="preserve">
          <source>Because inline classes may be represented both as the underlying value and as a wrapper, &lt;a href=&quot;equality#referential-equality&quot;&gt;referential equality&lt;/a&gt; is pointless for them and is therefore prohibited.</source>
          <target state="translated">인라인 클래스는 기본 값과 래퍼로 표현 될 수 있으므로 &lt;a href=&quot;equality#referential-equality&quot;&gt;참조 평등&lt;/a&gt; 은 의미가 없으므로 금지됩니다.</target>
        </trans-unit>
        <trans-unit id="8ecc92fa6dcc83dc03cd63fb44c723b727cbd9ab" translate="yes" xml:space="preserve">
          <source>Because the JavaScript ecosystem has multiple ways of exposing functions in a package (for example through named or default exports), other npm packages might need a slightly altered structure for their external declarations.</source>
          <target state="translated">JavaScript 에코 시스템에는 패키지에서 함수를 노출하는 여러 방법이 있기 때문에 (예 : 명명 된 내보내기 또는 기본 내보내기를 통해) 다른 npm 패키지는 외부 선언에 대해 약간 변경된 구조가 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ca6f154cfc4c63e383cfc7b5ba39283960d1b9e" translate="yes" xml:space="preserve">
          <source>Because the parameter of &lt;code&gt;js&lt;/code&gt; is parsed at compile time and translated to JavaScript code &quot;as-is&quot;, it is required to be a string constant. So, the following code is incorrect:</source>
          <target state="translated">Because the parameter of &lt;code&gt;js&lt;/code&gt; is parsed at compile time and translated to JavaScript code &quot;as-is&quot;, it is required to be a string constant. So, the following code is incorrect:</target>
        </trans-unit>
        <trans-unit id="3b0d8a0e940588e3637555a402e45bcf798e5679" translate="yes" xml:space="preserve">
          <source>Because the scope functions are all quite similar in nature, it's important to understand the differences between them. There are two main differences between each scope function:</source>
          <target state="translated">스코프 기능은 본질적으로 매우 유사하기 때문에 그 기능의 차이점을 이해하는 것이 중요합니다. 각 범위 기능에는 두 가지 주요 차이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="819946568e5b0c80c753dc4720dc81fac4aa4556" translate="yes" xml:space="preserve">
          <source>Because the set of member functions of an object is constrained to be exactly the set of member functions that are declared at compile-time in the object's class and base classes, it's not possible to add new member functions to an object or to a class at runtime, so e.g. &lt;code&gt;p.leave = fun() { println(&quot;Bye!&quot;) }&lt;/code&gt; or anything of the sort won't compile.</source>
          <target state="translated">개체의 멤버 함수 집합은 개체 클래스 및 기본 클래스에서 컴파일 타임에 선언 된 멤버 함수 집합으로 제한되므로 새 멤버 함수를 개체 또는 클래스에 추가 할 수 없습니다 예를 들어 &lt;code&gt;p.leave = fun() { println(&quot;Bye!&quot;) }&lt;/code&gt; 또는 어떤 것도 컴파일되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8e9ea512eb79ca2592dd1a0e0d03d975a2b307ee" translate="yes" xml:space="preserve">
          <source>Because the set of properties of an object is constrained to be exactly the set of properties that are declared at compile-time in the object's class, it's not possible to add new properties to an object or to a class at runtime, so e.g. &lt;code&gt;a.nationality = &quot;Norwegian&quot;&lt;/code&gt; won't compile.</source>
          <target state="translated">객체의 속성 집합은 객체 클래스에서 컴파일 타임에 선언 된 속성 집합으로 제한되므로 런타임에 객체 또는 클래스에 새 속성을 추가 할 수 없습니다 &lt;code&gt;a.nationality = &quot;Norwegian&quot;&lt;/code&gt; 컴파일되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ad87165569409ac8f63f0b14ac5e97d48b36791d" translate="yes" xml:space="preserve">
          <source>Before Kotlin 1.2, interface members overriding Java-default methods while targeting JVM 1.6 produced a warning on super calls: &lt;code&gt;Super calls to Java default methods are deprecated in JVM target 1.6. Recompile with '-jvm-target 1.8'&lt;/code&gt;. In Kotlin 1.2, there's an &lt;strong&gt;error&lt;/strong&gt; instead, thus requiring any such code to be compiled with JVM target 1.8.</source>
          <target state="translated">Kotlin 1.2 이전에는 JVM 1.6을 대상으로하는 동안 Java 기본 메소드를 대체하는 인터페이스 멤버가 수퍼 호출에 대한 경고를 생성했습니다. &lt;code&gt;Super calls to Java default methods are deprecated in JVM target 1.6. Recompile with '-jvm-target 1.8'&lt;/code&gt; 에 대한 수퍼 호출 은 JVM 대상 1.6에서 더 이상 사용되지 않습니다. '-jvm-target 1.8'로 다시 컴파일하십시오 . Kotlin 1.2에는 대신 &lt;strong&gt;오류가&lt;/strong&gt; 있으므로 이러한 코드를 JVM 대상 1.8로 컴파일해야합니다.</target>
        </trans-unit>
        <trans-unit id="5a8a2d7d28618a51955572ee58c4cbbd5b340841" translate="yes" xml:space="preserve">
          <source>Before Kotlin 1.4.0, you could apply SAM (Single Abstract Method) conversions only &lt;a href=&quot;java-interop#sam-conversions&quot;&gt;when working with Java methods and Java interfaces from Kotlin&lt;/a&gt;. From now on, you can use SAM conversions for Kotlin interfaces as well. To do so, mark a Kotlin interface explicitly as functional with the &lt;code&gt;fun&lt;/code&gt; modifier.</source>
          <target state="translated">Kotlin 1.4.0 이전에는 Kotlin의 &lt;a href=&quot;java-interop#sam-conversions&quot;&gt;자바 메소드 및 자바 인터페이스로 작업 할&lt;/a&gt; 때만 SAM (Single Abstract Method) 변환을 적용 할 수있었습니다 . 이제부터는 Kotlin 인터페이스에도 SAM 변환을 사용할 수 있습니다. 이렇게하려면 &lt;code&gt;fun&lt;/code&gt; 수정자를 사용하여 Kotlin 인터페이스를 기능적으로 명시 적으로 표시하세요 .</target>
        </trans-unit>
        <trans-unit id="e306172d559087c1f5488fe960b3bc7709c9e7f1" translate="yes" xml:space="preserve">
          <source>Before explaining what coroutines are, let's briefly review some of the other solutions.</source>
          <target state="translated">코 루틴이 무엇인지 설명하기 전에 다른 솔루션 중 일부를 간단히 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="93e8eb7cb48937a7f7cda7db1b5cb495184a3434" translate="yes" xml:space="preserve">
          <source>Before reading this tutorial, please, look through &lt;a href=&quot;http://kotlinlang.org/docs/tutorials/javascript/getting-started-gradle/getting-started-with-gradle.html&quot;&gt;Kotlin and JavaScript for Gradle tutorial&lt;/a&gt;.</source>
          <target state="translated">이 튜토리얼을 읽기 전에 &lt;a href=&quot;http://kotlinlang.org/docs/tutorials/javascript/getting-started-gradle/getting-started-with-gradle.html&quot;&gt;Kotlin 및 JavaScript for Gradle tutorial을&lt;/a&gt; 살펴보십시오 .</target>
        </trans-unit>
        <trans-unit id="75adccbc8b940be9de2d4c0d6ecccaba4f5c3ad9" translate="yes" xml:space="preserve">
          <source>Before releasing stable versions, we usually publish a number of preview builds dubbed EAP (for &quot;Early Access Preview&quot;) that let us iterate faster and gather feedback from the community. EAPs of feature releases usually produce binaries that will be later rejected by the stable compiler to make sure that possible bugs in the binary format survive no longer than the preview period. Final Release Candidates normally do not bear this limitation.</source>
          <target state="translated">안정적인 버전을 출시하기 전에 일반적으로 EAP ( &quot;Early Access Preview&quot;)라는 여러 미리보기 빌드를 게시하여 커뮤니티에서 더 빠르게 반복하고 피드백을 수집 할 수 있습니다. 기능 릴리스의 EAP는 일반적으로 바이너리를 생성하여 바이너리 형식의 가능한 버그가 미리보기 기간보다 오래 지속되지 않도록하기 위해 안정적인 컴파일러에서 거부합니다. 최종 릴리즈 후보는 일반적으로이 제한을 갖지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3196802ef9383aefb50bf46ff14ca8ad89f70568" translate="yes" xml:space="preserve">
          <source>Before starting, you&amp;rsquo;ll need to configure your build script so that you can use Kotlin serialization tools in your project:</source>
          <target state="translated">시작하기 전에 프로젝트에서 Kotlin 직렬화 도구를 사용할 수 있도록 빌드 스크립트를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="f8753def1852fb24391129d524bf385a761d61d4" translate="yes" xml:space="preserve">
          <source>Begin with a small class or function with the annotations required for proper &lt;a href=&quot;../reference/java-interop&quot;&gt;interoperability with Java code&lt;/a&gt;.</source>
          <target state="translated">Begin with a small class or function with the annotations required for proper &lt;a href=&quot;../reference/java-interop&quot;&gt;interoperability with Java code&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f41ba730918fd1fccf5221281196b863dfda5c8a" translate="yes" xml:space="preserve">
          <source>Behavioral: a change is said to be behavioral-incompatible if one and the same program demonstrates different behavior before and after applying the change</source>
          <target state="translated">행동 : 하나의 동일한 프로그램이 변경을 적용하기 전과 후에 다른 동작을 보이는 경우 변경이 동작과 호환되지 않는다고합니다.</target>
        </trans-unit>
        <trans-unit id="f11d6d5b20ea9cb8285979e255f9168d0d1694aa" translate="yes" xml:space="preserve">
          <source>Being a JVM language, Kotlin gives you great performance and an ability to leverage an entire ecosystem of tried and true Java libraries.</source>
          <target state="translated">JVM 언어이기 때문에 Kotlin은 뛰어난 성능과 검증 된 진정한 Java 라이브러리의 전체 에코 시스템을 활용할 수있는 능력을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="dde6c943c606c3f296f259d96add15cf4fd1cf01" translate="yes" xml:space="preserve">
          <source>Being a statically typed language, Kotlin still has to interoperate with untyped or loosely typed environments, such as the JavaScript ecosystem. To facilitate these use cases, the &lt;code&gt;dynamic&lt;/code&gt; type is available in the language:</source>
          <target state="translated">정적으로 유형이 지정된 언어이기 때문에 Kotlin은 여전히 ​​JavaScript 생태계와 같이 유형이 지정되지 않았거나 느슨하게 유형이 지정된 환경과 상호 운용해야합니다. 이러한 사용 사례를 용이하게하기 위해 언어에서 &lt;code&gt;dynamic&lt;/code&gt; 유형을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5fb9c683c2e184695c7bfd7451bb04214a1765b5" translate="yes" xml:space="preserve">
          <source>Being abstract is the only way to &quot;escape&quot; from having to implement the members of your interfaces, by offloading the work onto your subclasses - if a subclass wants to be concrete, it must implement all the &quot;missing&quot; members.</source>
          <target state="translated">작업은 서브 클래스로 작업을 오프로드하여 인터페이스 멤버를 구현하지 않아도되는 &quot;탈출&quot;할 수있는 유일한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="5e543936a5d76f10477f647e41b14d63cbeb8898" translate="yes" xml:space="preserve">
          <source>Below are descriptions of the standard library functions for write operations available on mutable maps.</source>
          <target state="translated">다음은 변경 가능한 맵에서 사용 가능한 쓰기 작업을위한 표준 라이브러리 함수에 대한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="23c4bcd44ee8499dae4c538d99a1425ac42187bb" translate="yes" xml:space="preserve">
          <source>Below is a class that can be used for ordering versions that consist of the major and the minor part.</source>
          <target state="translated">다음은 메이저 및 마이너 파트로 구성된 버전을 주문하는 데 사용할 수있는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="01432299b2df31f0ad456d2e3dcfa35df72da82a" translate="yes" xml:space="preserve">
          <source>Below is a diagram of the Kotlin collection interfaces:</source>
          <target state="translated">다음은 Kotlin 컬렉션 인터페이스의 다이어그램입니다.</target>
        </trans-unit>
        <trans-unit id="c026f6562df5d012fc4b9945fc1f178ec6dd656c" translate="yes" xml:space="preserve">
          <source>Below is an example Counter class that starts at a given value and can be incremented using the overloaded &lt;code&gt;+&lt;/code&gt; operator:</source>
          <target state="translated">다음은 주어진 값에서 시작하고 오버로드 된 &lt;code&gt;+&lt;/code&gt; 연산자를 사용하여 증가시킬 수있는 카운터 클래스의 예입니다 .</target>
        </trans-unit>
        <trans-unit id="edbdfb6203a38d292de6b0369ed2a2c9ea024b9a" translate="yes" xml:space="preserve">
          <source>Below please find explanations of how the modifiers apply to different types of declaring scopes.</source>
          <target state="translated">아래에서 수정자가 다른 유형의 선언 범위에 적용되는 방법에 대한 설명을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="e718e4a6411058b2c976d01df8d5ee072a573bf8" translate="yes" xml:space="preserve">
          <source>Besides Gradle project features and improvements that are specific to &lt;a href=&quot;#kotlin-multiplatform&quot;&gt;Kotlin Multiplatform&lt;/a&gt;, &lt;a href=&quot;#kotlinjvm&quot;&gt;Kotlin/JVM&lt;/a&gt;, &lt;a href=&quot;#kotlinnative&quot;&gt;Kotlin/Native&lt;/a&gt;, and &lt;a href=&quot;#kotlinjs&quot;&gt;Kotlin/JS&lt;/a&gt;, there are several changes applicable to all Kotlin Gradle projects:</source>
          <target state="translated">&lt;a href=&quot;#kotlin-multiplatform&quot;&gt;Kotlin Multiplatform&lt;/a&gt; , &lt;a href=&quot;#kotlinjvm&quot;&gt;Kotlin / JVM&lt;/a&gt; , &lt;a href=&quot;#kotlinnative&quot;&gt;Kotlin / Native&lt;/a&gt; 및 &lt;a href=&quot;#kotlinjs&quot;&gt;Kotlin / JS&lt;/a&gt; 와 관련된 Gradle 프로젝트 기능 및 개선 사항 외에도 모든 Kotlin Gradle 프로젝트에 적용되는 몇 가지 변경 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a65fe305f30ed3d5d015c1d8ac222cdc8dd1b064" translate="yes" xml:space="preserve">
          <source>Besides calling &lt;code&gt;run&lt;/code&gt; on a receiver object, you can use it as a non-extension function. Non-extension &lt;code&gt;run&lt;/code&gt; lets you execute a block of several statements where an expression is required.</source>
          <target state="translated">수신자 오브젝트에서 &lt;code&gt;run&lt;/code&gt; 을 호출 하는 것 외에도 이를 비 확장 기능으로 사용할 수 있습니다. 비 확장 &lt;code&gt;run&lt;/code&gt; 사용하면 표현식이 필요한 여러 명령문 블록을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d8f399439321d69bb3aae1bdb5a53f11ee0da4c" translate="yes" xml:space="preserve">
          <source>Besides converting existing functionality to Kotlin, you can also enjoy the Kotlin specific support. For instance, you can declare tables as &lt;a href=&quot;../reference/data-classes&quot;&gt;data classes&lt;/a&gt;:</source>
          <target state="translated">기존 기능을 Kotlin으로 변환하는 것 외에도 Kotlin 특정 지원을 즐길 수 있습니다. 예를 들어, 테이블을 &lt;a href=&quot;../reference/data-classes&quot;&gt;데이터 클래스&lt;/a&gt; 로 선언 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="aff7edb23562b9eda43db64cb9a6ca2f1085bf7c" translate="yes" xml:space="preserve">
          <source>Besides regular dependencies, there are three more types of dependencies that can be used from the Gradle DSL. To learn more about when each type of dependency can best be used, have a look at the official documentation linked from npm:</source>
          <target state="translated">일반 종속성 외에도 Gradle DSL에서 사용할 수있는 세 가지 유형의 종속성이 더 있습니다. 각 유형의 종속성을 가장 잘 사용할 수있는시기에 대해 자세히 알아 보려면 npm에서 링크 된 공식 문서를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="f03b60f7e52b7ce49ed1e4f9fa511c452a2185bb" translate="yes" xml:space="preserve">
          <source>Beta</source>
          <target state="translated">Beta</target>
        </trans-unit>
        <trans-unit id="7926735646055aabbd4e967c6ef5b776640ea1e9" translate="yes" xml:space="preserve">
          <source>Beta status of unsigned integers</source>
          <target state="translated">Beta status of unsigned integers</target>
        </trans-unit>
        <trans-unit id="112397f331b5572dd703b4ebc9b4678c9fc92667" translate="yes" xml:space="preserve">
          <source>Better code generation</source>
          <target state="translated">더 나은 코드 생성</target>
        </trans-unit>
        <trans-unit id="c86cf42b6d1521ddffec24df6c2f562e7e466850" translate="yes" xml:space="preserve">
          <source>Better inference for delegated properties</source>
          <target state="translated">위임 된 속성에 대한 더 나은 추론</target>
        </trans-unit>
        <trans-unit id="daf5f256962e0bce3abff7235d6469a618bc9f29" translate="yes" xml:space="preserve">
          <source>Beware that dividing an integer by an integer produces an integer (like in Python 2, but unlike Python 3). If you want a floating-point result, at least one of the operands needs to be a floating-point number (and recall that like in most languages, floating-point operations are generally imprecise):</source>
          <target state="translated">정수를 정수로 나누면 정수 (Python 2와 같지만 Python 3과는 다름)가 생성됩니다. 부동 소수점 결과를 원하면 피연산자 중 하나 이상이 부동 소수점 숫자 여야합니다 (대부분의 언어에서와 같이 부동 소수점 연산은 일반적으로 정확하지 않음을 기억하십시오).</target>
        </trans-unit>
        <trans-unit id="9ee4e69876a3afeb1c1bb0bcf29fd55cda91de34" translate="yes" xml:space="preserve">
          <source>Beware using the annotated API especially if you're developing a library, since your library might become binary incompatible with the future versions of the standard library.</source>
          <target state="translated">라이브러리가 미래의 표준 라이브러리 버전과 호환되지 않을 수 있으므로 라이브러리를 개발하는 경우 주석이 달린 API를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f3c794f007343b969bc570c5dd057212ece700be" translate="yes" xml:space="preserve">
          <source>Binaries</source>
          <target state="translated">Binaries</target>
        </trans-unit>
        <trans-unit id="c66ee5bbf7e4118187340873748e37adbb358aa2" translate="yes" xml:space="preserve">
          <source>Binaries have a set of properties allowing one to configure them. The following options are available:</source>
          <target state="translated">바이너리에는 속성을 설정하여 구성 할 수 있습니다. 다음과 같은 옵션을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="72a460c436692a1a8c70072c89565ca2220867ee" translate="yes" xml:space="preserve">
          <source>Binaries: &lt;code&gt;0b00001011&lt;/code&gt;</source>
          <target state="translated">이진 : &lt;code&gt;0b00001011&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c098d684da3e34376aa8f819e499d4e82c11310f" translate="yes" xml:space="preserve">
          <source>Binary compatibility warnings</source>
          <target state="translated">이진 호환성 경고</target>
        </trans-unit>
        <trans-unit id="3bf343b36800fde304e974f199b2f7695ef2c754" translate="yes" xml:space="preserve">
          <source>Binary kind</source>
          <target state="translated">바이너리 종류</target>
        </trans-unit>
        <trans-unit id="b26f6c63a335a90adeeab8f4d5013e4f2efe2bec" translate="yes" xml:space="preserve">
          <source>Binary operations</source>
          <target state="translated">이진 연산</target>
        </trans-unit>
        <trans-unit id="f2a6d55277fe59460ac595b466dfa5b222b190df" translate="yes" xml:space="preserve">
          <source>Binary operators &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt; and infix functions &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, &lt;code&gt;xor&lt;/code&gt;, &lt;code&gt;shl&lt;/code&gt;, &lt;code&gt;shr&lt;/code&gt;;</source>
          <target state="translated">이진 연산자 &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;-&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;/&lt;/code&gt; , &lt;code&gt;%&lt;/code&gt; 와 중위 기능 &lt;code&gt;and&lt;/code&gt; , &lt;code&gt;or&lt;/code&gt; , &lt;code&gt;xor&lt;/code&gt; , &lt;code&gt;shl&lt;/code&gt; , &lt;code&gt;shr&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="20b00ae38326b542aedf0b482b6afe3e749095cb" translate="yes" xml:space="preserve">
          <source>Binary representation:</source>
          <target state="translated">이진 표현 :</target>
        </trans-unit>
        <trans-unit id="3dfefc606c6b6cb785b2fc9edff50a1793a08ceb" translate="yes" xml:space="preserve">
          <source>Binary search in sorted lists</source>
          <target state="translated">정렬 된 목록에서 이진 검색</target>
        </trans-unit>
        <trans-unit id="effd37854dc15cf0fa524eebd650b9512c09f83b" translate="yes" xml:space="preserve">
          <source>Binary search with &lt;em&gt;comparison&lt;/em&gt; function lets you find elements without providing explicit search values. Instead, it takes a comparison function mapping elements to &lt;code&gt;Int&lt;/code&gt; values and searches for the element where the function returns zero. The list must be sorted in the ascending order according to the provided function; in other words, the return values of comparison must grow from one list element to the next one.</source>
          <target state="translated">&lt;em&gt;비교&lt;/em&gt; 기능을 사용한 이진 검색을 사용하면 명시적인 검색 값을 제공하지 않고도 요소를 찾을 수 있습니다. 대신, 비교 함수 맵핑 요소를 &lt;code&gt;Int&lt;/code&gt; 값에 맵핑 하고 함수가 0을 리턴하는 요소를 검색합니다. 제공된 기능에 따라 목록이 오름차순으로 정렬되어야합니다. 다시 말해, 비교의 리턴 값은 하나의 목록 요소에서 다음 목록 요소로 증가해야합니다.</target>
        </trans-unit>
        <trans-unit id="db5f4be53358b6d2931c1b26250a31285c182825" translate="yes" xml:space="preserve">
          <source>Binary: two binary artifacts are said to be binary-compatible if interchanging them doesn't lead to loading or linkage errors</source>
          <target state="translated">이진 : 두 개의 이진 아티팩트가 교환되거나로드 또는 링크 오류가 발생하지 않으면 이진 호환 가능하다고합니다.</target>
        </trans-unit>
        <trans-unit id="ef29ec8d1db838c8e1a48ba8918f31da08b74947" translate="yes" xml:space="preserve">
          <source>BinaryType</source>
          <target state="translated">BinaryType</target>
        </trans-unit>
        <trans-unit id="132a07831ab659522a2e219295c928d9e3f5055c" translate="yes" xml:space="preserve">
          <source>Bit operations</source>
          <target state="translated">비트 작업</target>
        </trans-unit>
        <trans-unit id="2b237840996cac995b70318f64835abec7e9398b" translate="yes" xml:space="preserve">
          <source>Bit width</source>
          <target state="translated">비트 폭</target>
        </trans-unit>
        <trans-unit id="b4ef9f89df5e45033f2747be00f3790a8b4e3761" translate="yes" xml:space="preserve">
          <source>BitField</source>
          <target state="translated">BitField</target>
        </trans-unit>
        <trans-unit id="f8cd7716f7a5997d4efd153b8de6bda8ac575d3b" translate="yes" xml:space="preserve">
          <source>BitSet</source>
          <target state="translated">BitSet</target>
        </trans-unit>
        <trans-unit id="a36a25a1cccb68c7c87fcd879bbb216973e2de75" translate="yes" xml:space="preserve">
          <source>Bits</source>
          <target state="translated">Bits</target>
        </trans-unit>
        <trans-unit id="67445a8812f7cd259e3b6e21272d2fddff30a9e2" translate="yes" xml:space="preserve">
          <source>Bitwise operations</source>
          <target state="translated">비트 단위 연산</target>
        </trans-unit>
        <trans-unit id="c24315eb20cc1f5a565ec08f29abab31c0925f1a" translate="yes" xml:space="preserve">
          <source>Blob</source>
          <target state="translated">Blob</target>
        </trans-unit>
        <trans-unit id="e31b904ea0486cad654bda29fbbbc9b45336239c" translate="yes" xml:space="preserve">
          <source>BlobPropertyBag</source>
          <target state="translated">BlobPropertyBag</target>
        </trans-unit>
        <trans-unit id="70af3238de42da66beb5f354425347f373dca837" translate="yes" xml:space="preserve">
          <source>Block Tags</source>
          <target state="translated">블록 태그</target>
        </trans-unit>
        <trans-unit id="8542f6a0cf58945d2439e86f2f6015e3ec4398b4" translate="yes" xml:space="preserve">
          <source>Block comments in Kotlin can be nested.</source>
          <target state="translated">Block comments in Kotlin can be nested.</target>
        </trans-unit>
        <trans-unit id="b16d07cec726bb8e19bba1a595f5b311f2f811e3" translate="yes" xml:space="preserve">
          <source>Block pointer type</source>
          <target state="translated">블록 포인터 타입</target>
        </trans-unit>
        <trans-unit id="f3b461348854c06872102b7c71825cb31ea832d9" translate="yes" xml:space="preserve">
          <source>Blocks execution until the future is ready.</source>
          <target state="translated">미래가 준비 될 때까지 실행을 차단합니다.</target>
        </trans-unit>
        <trans-unit id="0b9d2b2362bc33581ba11fddcb0cf0590ebd3a7a" translate="yes" xml:space="preserve">
          <source>Blog</source>
          <target state="translated">Blog</target>
        </trans-unit>
        <trans-unit id="718a7e8a582e982e452dd5700addba4ffc1cf40d" translate="yes" xml:space="preserve">
          <source>Body</source>
          <target state="translated">Body</target>
        </trans-unit>
        <trans-unit id="4a7fdd8c17425252332ea0e89a35722b72d83135" translate="yes" xml:space="preserve">
          <source>Books</source>
          <target state="translated">Books</target>
        </trans-unit>
        <trans-unit id="b76ff4906f33c2dd97ddd929b9662ba8cac6174c" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="translated">Boolean</target>
        </trans-unit>
        <trans-unit id="bcac21aba714064e6b64ee7f175904786fbaa767" translate="yes" xml:space="preserve">
          <source>Boolean expressions are formed with &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; for logical AND, &lt;code&gt;||&lt;/code&gt; for logical OR, and &lt;code&gt;!&lt;/code&gt; for logical NOT. As in Python, &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt; are short-circuiting: they only evaluate the right-hand side if it's necessary to determine the outcome. Beware that the keywords &lt;code&gt;and&lt;/code&gt; and &lt;code&gt;or&lt;/code&gt; also exist, but they only perform &lt;em&gt;bitwise&lt;/em&gt; operations on integral values, and they do not short-circuit.</source>
          <target state="translated">부울 식은 논리 AND, &lt;code&gt;||&lt;/code&gt; 에 대해 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 로 구성됩니다. 논리 OR의 경우 &lt;code&gt;!&lt;/code&gt; 논리적 NOT. Python에서 와 같이 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 및 &lt;code&gt;||&lt;/code&gt; 단락이 있습니다. 결과를 결정해야하는 경우 오른쪽 만 평가합니다. 키워드 &lt;code&gt;and&lt;/code&gt; / &lt;code&gt;or&lt;/code&gt; 키워드 가 존재하지만 정수 값에 대해서만 &lt;em&gt;비트 단위&lt;/em&gt; 연산을 수행 하며 단락되지 않습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="61a088b0a156000801673ebe9758a3bc5e658a93" translate="yes" xml:space="preserve">
          <source>BooleanArray</source>
          <target state="translated">BooleanArray</target>
        </trans-unit>
        <trans-unit id="94ed6ad64eddcf16d738b1b685887dc56574c0f0" translate="yes" xml:space="preserve">
          <source>BooleanIterator</source>
          <target state="translated">BooleanIterator</target>
        </trans-unit>
        <trans-unit id="a07abf481bfcf1e7306014f6c27bb8804d578197" translate="yes" xml:space="preserve">
          <source>BooleanVar</source>
          <target state="translated">BooleanVar</target>
        </trans-unit>
        <trans-unit id="590cf12042dbc6ae4ccebcc55f169cf10900e4f8" translate="yes" xml:space="preserve">
          <source>BooleanVarOf</source>
          <target state="translated">BooleanVarOf</target>
        </trans-unit>
        <trans-unit id="0786cdff946e6084c50bb7df6cacd8ed965599fa" translate="yes" xml:space="preserve">
          <source>Booleans</source>
          <target state="translated">Booleans</target>
        </trans-unit>
        <trans-unit id="2b4e4ca9dd13df33b1f274e08ff704dbb23d3e35" translate="yes" xml:space="preserve">
          <source>Booleans are boxed if a nullable reference is needed.</source>
          <target state="translated">널 입력 가능 참조가 필요한 경우 부울은 상자로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="6a192a826b5af31fd1aa88b2c770d9045a0a1def" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-channel.html&quot;&gt;Channel()&lt;/a&gt; factory function and &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/produce.html&quot;&gt;produce&lt;/a&gt; builder take an optional &lt;code&gt;capacity&lt;/code&gt; parameter to specify &lt;em&gt;buffer size&lt;/em&gt;. Buffer allows senders to send multiple elements before suspending, similar to the &lt;code&gt;BlockingQueue&lt;/code&gt; with a specified capacity, which blocks when buffer is full.</source>
          <target state="translated">두 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-channel.html&quot;&gt;채널 ()&lt;/a&gt; 공장 기능과 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/produce.html&quot;&gt;생산&lt;/a&gt; 빌더는 옵션 걸릴 &lt;code&gt;capacity&lt;/code&gt; 지정하는 매개 변수 &lt;em&gt;크기 버퍼를&lt;/em&gt; . 버퍼는 지정된 용량 의 &lt;code&gt;BlockingQueue&lt;/code&gt; 와 유사하게 버퍼가 가득 찼을 때 차단 하는 발신자가 여러 요소를 일시 중단하기 전에 보낼 수 있도록 합니다.</target>
        </trans-unit>
        <trans-unit id="56678bcd37fdbd67057a57fd3f8c1ac179f5ab13" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/join.html&quot;&gt;join&lt;/a&gt; and &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/cancel-and-join.html&quot;&gt;cancelAndJoin&lt;/a&gt; wait for all finalization actions to complete, so the example above produces the following output:</source>
          <target state="translated">모두 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/join.html&quot;&gt;가입&lt;/a&gt; 과 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/cancel-and-join.html&quot;&gt;cancelAndJoin의&lt;/a&gt; 위의 예제는 다음과 같은 출력을 생성하므로, 전체에 대한 모든 마무리 작업을 위해 대기 :</target>
        </trans-unit>
        <trans-unit id="aaa3ae0941c1c63e8404db11c2c5822ea8776ac1" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;windowed#kotlin.collections%24windowed%28kotlin.collections.Iterable%28%28kotlin.collections.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fsize&quot;&gt;size&lt;/a&gt; and &lt;a href=&quot;windowed#kotlin.collections%24windowed%28kotlin.collections.Iterable%28%28kotlin.collections.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstep&quot;&gt;step&lt;/a&gt; must be positive and can be greater than the number of elements in this collection.</source>
          <target state="translated">모두 &lt;a href=&quot;windowed#kotlin.collections%24windowed%28kotlin.collections.Iterable%28%28kotlin.collections.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fsize&quot;&gt;크기&lt;/a&gt; 와 &lt;a href=&quot;windowed#kotlin.collections%24windowed%28kotlin.collections.Iterable%28%28kotlin.collections.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstep&quot;&gt;단계는&lt;/a&gt; 긍정적이어야하고이 컬렉션 중의 요소의 수보다 클 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="084d0f42a2f1fd2b3233b8ecf6d5d045540a6653" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;windowed#kotlin.collections%24windowed%28kotlin.collections.Iterable%28%28kotlin.collections.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.windowed.T%29%29%2C+kotlin.collections.windowed.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; and &lt;a href=&quot;windowed#kotlin.collections%24windowed%28kotlin.collections.Iterable%28%28kotlin.collections.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.windowed.T%29%29%2C+kotlin.collections.windowed.R%29%29%29%2Fstep&quot;&gt;step&lt;/a&gt; must be positive and can be greater than the number of elements in this collection.</source>
          <target state="translated">모두 &lt;a href=&quot;windowed#kotlin.collections%24windowed%28kotlin.collections.Iterable%28%28kotlin.collections.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.windowed.T%29%29%2C+kotlin.collections.windowed.R%29%29%29%2Fsize&quot;&gt;크기&lt;/a&gt; 와 &lt;a href=&quot;windowed#kotlin.collections%24windowed%28kotlin.collections.Iterable%28%28kotlin.collections.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.collections.windowed.T%29%29%2C+kotlin.collections.windowed.R%29%29%29%2Fstep&quot;&gt;단계는&lt;/a&gt; 긍정적이어야하고이 컬렉션 중의 요소의 수보다 클 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d0eabf144d8023ff8f6b640fc08ef1af59ff52b1" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;windowed#kotlin.collections%24windowed(kotlin.collections.Iterable((kotlin.collections.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/size&quot;&gt;size&lt;/a&gt; and &lt;a href=&quot;windowed#kotlin.collections%24windowed(kotlin.collections.Iterable((kotlin.collections.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/step&quot;&gt;step&lt;/a&gt; must be positive and can be greater than the number of elements in this collection.</source>
          <target state="translated">Both &lt;a href=&quot;windowed#kotlin.collections%24windowed(kotlin.collections.Iterable((kotlin.collections.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/size&quot;&gt;size&lt;/a&gt; and &lt;a href=&quot;windowed#kotlin.collections%24windowed(kotlin.collections.Iterable((kotlin.collections.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/step&quot;&gt;step&lt;/a&gt; must be positive and can be greater than the number of elements in this collection.</target>
        </trans-unit>
        <trans-unit id="0af0ae49c545b72fd3e3d56d5a9cc60d73808bcf" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;windowed#kotlin.collections%24windowed(kotlin.collections.Iterable((kotlin.collections.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.windowed.T)),%20kotlin.collections.windowed.R)))/size&quot;&gt;size&lt;/a&gt; and &lt;a href=&quot;windowed#kotlin.collections%24windowed(kotlin.collections.Iterable((kotlin.collections.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.windowed.T)),%20kotlin.collections.windowed.R)))/step&quot;&gt;step&lt;/a&gt; must be positive and can be greater than the number of elements in this collection.</source>
          <target state="translated">Both &lt;a href=&quot;windowed#kotlin.collections%24windowed(kotlin.collections.Iterable((kotlin.collections.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.windowed.T)),%20kotlin.collections.windowed.R)))/size&quot;&gt;size&lt;/a&gt; and &lt;a href=&quot;windowed#kotlin.collections%24windowed(kotlin.collections.Iterable((kotlin.collections.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean,%20kotlin.Function1((kotlin.collections.List((kotlin.collections.windowed.T)),%20kotlin.collections.windowed.R)))/step&quot;&gt;step&lt;/a&gt; must be positive and can be greater than the number of elements in this collection.</target>
        </trans-unit>
        <trans-unit id="f0718785d7a21f217dfdae0e623137151eb06714" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;windowed#kotlin.sequences%24windowed%28kotlin.sequences.Sequence%28%28kotlin.sequences.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fsize&quot;&gt;size&lt;/a&gt; and &lt;a href=&quot;windowed#kotlin.sequences%24windowed%28kotlin.sequences.Sequence%28%28kotlin.sequences.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstep&quot;&gt;step&lt;/a&gt; must be positive and can be greater than the number of elements in this sequence.</source>
          <target state="translated">두 &lt;a href=&quot;windowed#kotlin.sequences%24windowed%28kotlin.sequences.Sequence%28%28kotlin.sequences.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fsize&quot;&gt;크기&lt;/a&gt; 및 &lt;a href=&quot;windowed#kotlin.sequences%24windowed%28kotlin.sequences.Sequence%28%28kotlin.sequences.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstep&quot;&gt;단계&lt;/a&gt; 양수 여야하고,이 시퀀스의 요소의 수보다 클 수있다.</target>
        </trans-unit>
        <trans-unit id="e153c00b80d52af9d9d30cb6047f86b6a26f5f37" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;windowed#kotlin.sequences%24windowed%28kotlin.sequences.Sequence%28%28kotlin.sequences.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.windowed.T%29%29%2C+kotlin.sequences.windowed.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; and &lt;a href=&quot;windowed#kotlin.sequences%24windowed%28kotlin.sequences.Sequence%28%28kotlin.sequences.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.windowed.T%29%29%2C+kotlin.sequences.windowed.R%29%29%29%2Fstep&quot;&gt;step&lt;/a&gt; must be positive and can be greater than the number of elements in this sequence.</source>
          <target state="translated">두 &lt;a href=&quot;windowed#kotlin.sequences%24windowed%28kotlin.sequences.Sequence%28%28kotlin.sequences.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.windowed.T%29%29%2C+kotlin.sequences.windowed.R%29%29%29%2Fsize&quot;&gt;크기&lt;/a&gt; 및 &lt;a href=&quot;windowed#kotlin.sequences%24windowed%28kotlin.sequences.Sequence%28%28kotlin.sequences.windowed.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.collections.List%28%28kotlin.sequences.windowed.T%29%29%2C+kotlin.sequences.windowed.R%29%29%29%2Fstep&quot;&gt;단계&lt;/a&gt; 양수 여야하고,이 시퀀스의 요소의 수보다 클 수있다.</target>
        </trans-unit>
        <trans-unit id="d8ad1650acfe57bcad1b2d605f5d9abb55199c3d" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;windowed#kotlin.sequences%24windowed(kotlin.sequences.Sequence((kotlin.sequences.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/size&quot;&gt;size&lt;/a&gt; and &lt;a href=&quot;windowed#kotlin.sequences%24windowed(kotlin.sequences.Sequence((kotlin.sequences.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/step&quot;&gt;step&lt;/a&gt; must be positive and can be greater than the number of elements in this sequence.</source>
          <target state="translated">Both &lt;a href=&quot;windowed#kotlin.sequences%24windowed(kotlin.sequences.Sequence((kotlin.sequences.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/size&quot;&gt;size&lt;/a&gt; and &lt;a href=&quot;windowed#kotlin.sequences%24windowed(kotlin.sequences.Sequence((kotlin.sequences.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/step&quot;&gt;step&lt;/a&gt; must be positive and can be greater than the number of elements in this sequence.</target>
        </trans-unit>
        <trans-unit id="9771f55b53bc744e427d88f270d79d362084e7f4" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;windowed#kotlin.sequences%24windowed(kotlin.sequences.Sequence((kotlin.sequences.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean,%20kotlin.Function1((kotlin.collections.List((kotlin.sequences.windowed.T)),%20kotlin.sequences.windowed.R)))/size&quot;&gt;size&lt;/a&gt; and &lt;a href=&quot;windowed#kotlin.sequences%24windowed(kotlin.sequences.Sequence((kotlin.sequences.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean,%20kotlin.Function1((kotlin.collections.List((kotlin.sequences.windowed.T)),%20kotlin.sequences.windowed.R)))/step&quot;&gt;step&lt;/a&gt; must be positive and can be greater than the number of elements in this sequence.</source>
          <target state="translated">Both &lt;a href=&quot;windowed#kotlin.sequences%24windowed(kotlin.sequences.Sequence((kotlin.sequences.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean,%20kotlin.Function1((kotlin.collections.List((kotlin.sequences.windowed.T)),%20kotlin.sequences.windowed.R)))/size&quot;&gt;size&lt;/a&gt; and &lt;a href=&quot;windowed#kotlin.sequences%24windowed(kotlin.sequences.Sequence((kotlin.sequences.windowed.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean,%20kotlin.Function1((kotlin.collections.List((kotlin.sequences.windowed.T)),%20kotlin.sequences.windowed.R)))/step&quot;&gt;step&lt;/a&gt; must be positive and can be greater than the number of elements in this sequence.</target>
        </trans-unit>
        <trans-unit id="67539940f5aa420fb9707f75cbc306cea0396d84" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;windowed#kotlin.text%24windowed%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fsize&quot;&gt;size&lt;/a&gt; and &lt;a href=&quot;windowed#kotlin.text%24windowed%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstep&quot;&gt;step&lt;/a&gt; must be positive and can be greater than the number of elements in this char sequence.</source>
          <target state="translated">두 &lt;a href=&quot;windowed#kotlin.text%24windowed%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fsize&quot;&gt;크기&lt;/a&gt; 및 &lt;a href=&quot;windowed#kotlin.text%24windowed%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstep&quot;&gt;단계&lt;/a&gt; 양수 여야 이러한 문자 시퀀스의 요소의 수보다 클 수있다.</target>
        </trans-unit>
        <trans-unit id="cbced784a4e4808737c5eb9216375acd25dc2730" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;windowed#kotlin.text%24windowed%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.windowed.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; and &lt;a href=&quot;windowed#kotlin.text%24windowed%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.windowed.R%29%29%29%2Fstep&quot;&gt;step&lt;/a&gt; must be positive and can be greater than the number of elements in this char sequence.</source>
          <target state="translated">두 &lt;a href=&quot;windowed#kotlin.text%24windowed%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.windowed.R%29%29%29%2Fsize&quot;&gt;크기&lt;/a&gt; 및 &lt;a href=&quot;windowed#kotlin.text%24windowed%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.windowed.R%29%29%29%2Fstep&quot;&gt;단계&lt;/a&gt; 양수 여야 이러한 문자 시퀀스의 요소의 수보다 클 수있다.</target>
        </trans-unit>
        <trans-unit id="ab8e90c6489475f86d0d05c87a6bcb381c210ecd" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;windowed#kotlin.text%24windowed(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/size&quot;&gt;size&lt;/a&gt; and &lt;a href=&quot;windowed#kotlin.text%24windowed(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/step&quot;&gt;step&lt;/a&gt; must be positive and can be greater than the number of elements in this char sequence.</source>
          <target state="translated">Both &lt;a href=&quot;windowed#kotlin.text%24windowed(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/size&quot;&gt;size&lt;/a&gt; and &lt;a href=&quot;windowed#kotlin.text%24windowed(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/step&quot;&gt;step&lt;/a&gt; must be positive and can be greater than the number of elements in this char sequence.</target>
        </trans-unit>
        <trans-unit id="f2bea8d6b0fb22780d4bd290339057a8cfec7f97" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;windowed#kotlin.text%24windowed(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.windowed.R)))/size&quot;&gt;size&lt;/a&gt; and &lt;a href=&quot;windowed#kotlin.text%24windowed(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.windowed.R)))/step&quot;&gt;step&lt;/a&gt; must be positive and can be greater than the number of elements in this char sequence.</source>
          <target state="translated">Both &lt;a href=&quot;windowed#kotlin.text%24windowed(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.windowed.R)))/size&quot;&gt;size&lt;/a&gt; and &lt;a href=&quot;windowed#kotlin.text%24windowed(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.windowed.R)))/step&quot;&gt;step&lt;/a&gt; must be positive and can be greater than the number of elements in this char sequence.</target>
        </trans-unit>
        <trans-unit id="36b84c2b0b283f28a914a68615f6871a6a9ceceb" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fsize&quot;&gt;size&lt;/a&gt; and &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstep&quot;&gt;step&lt;/a&gt; must be positive and can be greater than the number of elements in this char sequence.</source>
          <target state="translated">두 &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fsize&quot;&gt;크기&lt;/a&gt; 및 &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstep&quot;&gt;단계&lt;/a&gt; 양수 여야 이러한 문자 시퀀스의 요소의 수보다 클 수있다.</target>
        </trans-unit>
        <trans-unit id="f6aa8dd9910fba9b4cf6489eeeb8c66c8fc69e23" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.windowedSequence.R%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; and &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.windowedSequence.R%29%29%29%2Fstep&quot;&gt;step&lt;/a&gt; must be positive and can be greater than the number of elements in this char sequence.</source>
          <target state="translated">두 &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.windowedSequence.R%29%29%29%2Fsize&quot;&gt;크기&lt;/a&gt; 및 &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Boolean%2C+kotlin.Function1%28%28kotlin.CharSequence%2C+kotlin.text.windowedSequence.R%29%29%29%2Fstep&quot;&gt;단계&lt;/a&gt; 양수 여야 이러한 문자 시퀀스의 요소의 수보다 클 수있다.</target>
        </trans-unit>
        <trans-unit id="c7cf261e95866f81c07fa4adbc9f77d8c40e7b20" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/size&quot;&gt;size&lt;/a&gt; and &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/step&quot;&gt;step&lt;/a&gt; must be positive and can be greater than the number of elements in this char sequence.</source>
          <target state="translated">Both &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/size&quot;&gt;size&lt;/a&gt; and &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean)/step&quot;&gt;step&lt;/a&gt; must be positive and can be greater than the number of elements in this char sequence.</target>
        </trans-unit>
        <trans-unit id="b33be4081d9d9107c78f1754dc20fc1c874f3478" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.windowedSequence.R)))/size&quot;&gt;size&lt;/a&gt; and &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.windowedSequence.R)))/step&quot;&gt;step&lt;/a&gt; must be positive and can be greater than the number of elements in this char sequence.</source>
          <target state="translated">Both &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.windowedSequence.R)))/size&quot;&gt;size&lt;/a&gt; and &lt;a href=&quot;windowed-sequence#kotlin.text%24windowedSequence(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Int,%20kotlin.Boolean,%20kotlin.Function1((kotlin.CharSequence,%20kotlin.text.windowedSequence.R)))/step&quot;&gt;step&lt;/a&gt; must be positive and can be greater than the number of elements in this char sequence.</target>
        </trans-unit>
        <trans-unit id="7d76727e25cbd1b3d5a88f50e15fcb2295a169f3" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;kotlin-platform-native&lt;/code&gt; and &lt;code&gt;kotlin-multiplatform&lt;/code&gt; plugins automatically set up artifact publication when the &lt;code&gt;maven-publish&lt;/code&gt; plugin is applied. See details about publication at the &lt;a href=&quot;../building-mpp-with-gradle#publishing-a-multiplatform-library&quot;&gt;corresponding page&lt;/a&gt;. Note that currently only Kotlin/Native libraries (&lt;code&gt;*.klib&lt;/code&gt;) can be published for native targets.</source>
          <target state="translated">두 &lt;code&gt;kotlin-platform-native&lt;/code&gt; 및 &lt;code&gt;kotlin-multiplatform&lt;/code&gt; 경우 플러그인은 자동으로 유물 게시를 설정 &lt;code&gt;maven-publish&lt;/code&gt; 플러그인에 적용된다. &lt;a href=&quot;../building-mpp-with-gradle#publishing-a-multiplatform-library&quot;&gt;해당 페이지&lt;/a&gt; 에서 발행에 대한 세부 사항을 참조 하십시오 . 현재 Kotlin / Native 라이브러리 ( &lt;code&gt;*.klib&lt;/code&gt; ) 만 기본 대상에 게시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9fb92b17ca6c1036361cb0bc273b8d539a33467" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;put()&lt;/code&gt; and &lt;code&gt;putAll()&lt;/code&gt; overwrite the values if the given keys already exist in the map. Thus, you can use them to update values of map entries.</source>
          <target state="translated">주어진 키가 맵에 이미 있으면 &lt;code&gt;putAll()&lt;/code&gt; &lt;code&gt;put()&lt;/code&gt; 및 putAll () 모두 값을 덮어 씁니다. 따라서이를 사용하여 맵 항목의 값을 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48a0c772d877c93acd537f9dd2917a2d330472b6" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;run()&lt;/code&gt; and &lt;code&gt;let()&lt;/code&gt; are also useful if you've got an expression that you need to use multiple times, but you don't care to come up with a variable name for it and make a null check:</source>
          <target state="translated">두 &lt;code&gt;run()&lt;/code&gt; 및 &lt;code&gt;let()&lt;/code&gt; 당신이 여러 번 사용할 필요가 있다는 식을 가지고있는 경우에 유용합니다,하지만 당신은 그것을위한 변수 이름으로 올 신경 및 null 체크를하지 않습니다</target>
        </trans-unit>
        <trans-unit id="f117f717287c089c5644336542c588b36df80762" translate="yes" xml:space="preserve">
          <source>Both comparator and comparison binary search can be performed for list ranges as well.</source>
          <target state="translated">비교기 및 비교 이진 검색 모두 목록 범위에 대해 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a526106bb7b07bc95406f9258d87ca517b94f4f7" translate="yes" xml:space="preserve">
          <source>Both files &lt;code&gt;sample-library.js&lt;/code&gt; and &lt;code&gt;sample-library.meta.js&lt;/code&gt; should be present in the latter case, because translated JavaScript file contains meta-information about inlining, which is needed by compiler.</source>
          <target state="translated">번역 된 JavaScript 파일에는 컴파일러가 필요로하는 인라이닝에 대한 메타 정보가 포함되어 있으므로 &lt;code&gt;sample-library.js&lt;/code&gt; 및 &lt;code&gt;sample-library.meta.js&lt;/code&gt; 파일 모두 후자의 경우에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="c369edaa82ba26ca01871646d635daa8f7504cc8" translate="yes" xml:space="preserve">
          <source>Both of these print &lt;code&gt;-2147483648&lt;/code&gt;, because only the lower 32 bits of the &quot;real&quot; result are stored.</source>
          <target state="translated">&quot;실제&quot;결과의 하위 32 비트 만 저장되기 때문에 이러한 print &lt;code&gt;-2147483648&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e964469a13a77088460de8cf5eddab2a6f999cc" translate="yes" xml:space="preserve">
          <source>Both scratches and worksheets use the compiled versions of connected modules. So, if you modify a module's source files, the changes will propagate to scratches and worksheets when you rebuild the module. To rebuild the module automatically before each run of a scratch or a worksheet, select &lt;strong&gt;Make before Run&lt;/strong&gt;.</source>
          <target state="translated">Both scratches and worksheets use the compiled versions of connected modules. So, if you modify a module's source files, the changes will propagate to scratches and worksheets when you rebuild the module. To rebuild the module automatically before each run of a scratch or a worksheet, select &lt;strong&gt;Make before Run&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="26aa585d7dfdc3090a2d9026c66329ae2663ea8a" translate="yes" xml:space="preserve">
          <source>Bound Class References (since 1.1)</source>
          <target state="translated">바운드 클래스 참조 (1.1 이후)</target>
        </trans-unit>
        <trans-unit id="d7e744f9846b986738e0816b29c63f14509b6745" translate="yes" xml:space="preserve">
          <source>Bound Function and Property References (since 1.1)</source>
          <target state="translated">바운드 함수 및 속성 참조 (1.1 이후)</target>
        </trans-unit>
        <trans-unit id="7b85b6504bf90c388faf780dc0b4dcabde2e43d2" translate="yes" xml:space="preserve">
          <source>Bound callable references</source>
          <target state="translated">바운드 호출 가능 참조</target>
        </trans-unit>
        <trans-unit id="85989aa9e94909d737a99ce977c8f0524b5f104a" translate="yes" xml:space="preserve">
          <source>Bound class references (since 1.1)</source>
          <target state="translated">Bound class references (since 1.1)</target>
        </trans-unit>
        <trans-unit id="c1d763c06ba5611d707eeed031c4378440dc7fb3" translate="yes" xml:space="preserve">
          <source>Bound constructor references</source>
          <target state="translated">바운드 생성자 참조</target>
        </trans-unit>
        <trans-unit id="17f0a15462df276172e8f66e25419c48cd9fc071" translate="yes" xml:space="preserve">
          <source>Bound function and property references (since 1.1)</source>
          <target state="translated">Bound function and property references (since 1.1)</target>
        </trans-unit>
        <trans-unit id="4b8b36c5403b746449d2c849c47bd500e35ca37c" translate="yes" xml:space="preserve">
          <source>BoxQuadOptions</source>
          <target state="translated">BoxQuadOptions</target>
        </trans-unit>
        <trans-unit id="5d13f522e9c8eabab2db0fea870c35c9728f8962" translate="yes" xml:space="preserve">
          <source>Break and Continue Labels</source>
          <target state="translated">라벨 끊기 및 계속</target>
        </trans-unit>
        <trans-unit id="d43675deb5ef1628dcb32f38b7fd8e07e8b0fe63" translate="yes" xml:space="preserve">
          <source>Break and continue in loops</source>
          <target state="translated">루프를 끊고 계속</target>
        </trans-unit>
        <trans-unit id="04af83c573ed28bad405a1a5e0302494812d756c" translate="yes" xml:space="preserve">
          <source>Breaking change: consistent behavior of x.equals(null) for platform types</source>
          <target state="translated">주요 변경 사항 : 플랫폼 유형에 대한 x.equals (null)의 일관된 동작</target>
        </trans-unit>
        <trans-unit id="95c82e98e38ccf406578979623b36433169e3065" translate="yes" xml:space="preserve">
          <source>Breaking change: fix for platform null escaping through an inlined extension receiver</source>
          <target state="translated">주요 변경 사항 : 인라인 확장 수신자를 통한 플랫폼 널 이스케이프 수정</target>
        </trans-unit>
        <trans-unit id="0010a4c886f7138072d6a665dfc42b5efd885875" translate="yes" xml:space="preserve">
          <source>Breaking change: sound smart casts after try blocks</source>
          <target state="translated">주요 변경 사항 : 시도 차단 후 사운드 스마트 캐스트</target>
        </trans-unit>
        <trans-unit id="21a8752f2df54d656b09cd2a499cb3a3403ec7ca" translate="yes" xml:space="preserve">
          <source>Breakpoints</source>
          <target state="translated">Breakpoints</target>
        </trans-unit>
        <trans-unit id="58a6acc8a3a172fc6d1c2687109f35019caa5d29" translate="yes" xml:space="preserve">
          <source>Bridging blocking and non-blocking worlds</source>
          <target state="translated">브리징 차단 및 비 블로킹 세계</target>
        </trans-unit>
        <trans-unit id="54a2cf5e634dbba0be2bf8a55f79252f5c790bdb" translate="yes" xml:space="preserve">
          <source>Browser</source>
          <target state="translated">Browser</target>
        </trans-unit>
        <trans-unit id="7475c559f920cf3e8c2289d36e877291196e4b98" translate="yes" xml:space="preserve">
          <source>Browser API and the DOM</source>
          <target state="translated">브라우저 API와 DOM</target>
        </trans-unit>
        <trans-unit id="0f0720a9ad7435d6e8488870e634845859b31b99" translate="yes" xml:space="preserve">
          <source>Browser for client-side scripting in browsers</source>
          <target state="translated">브라우저에서 클라이언트 측 스크립팅을위한 브라우저</target>
        </trans-unit>
        <trans-unit id="b2d0e321b1372a3d7d7a8f0627418b38b02bf979" translate="yes" xml:space="preserve">
          <source>Bruce Eckel says about checked exceptions:</source>
          <target state="translated">Bruce Eckel says about checked exceptions:</target>
        </trans-unit>
        <trans-unit id="c65e509230cb6459a020ee1e8509f0e4b332c107" translate="yes" xml:space="preserve">
          <source>Bruce Eckel says in &lt;a href=&quot;http://www.mindview.net/Etc/Discussions/CheckedExceptions&quot;&gt;Does Java need Checked Exceptions?&lt;/a&gt;:</source>
          <target state="translated">브루스 에켈 (Bruce Eckel)은 다음과 같이 말합니다 &lt;a href=&quot;http://www.mindview.net/Etc/Discussions/CheckedExceptions&quot;&gt;. &lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="8f18995239d394ba2c3e058f972459a83f3ee77b" translate="yes" xml:space="preserve">
          <source>BufferDataSource</source>
          <target state="translated">BufferDataSource</target>
        </trans-unit>
        <trans-unit id="7c439368b22bd9105160b523a76b1a5ac5f2d39e" translate="yes" xml:space="preserve">
          <source>Buffered channels</source>
          <target state="translated">버퍼링 된 채널</target>
        </trans-unit>
        <trans-unit id="23dd82d623fb976c8b655f70d02fd824c2106844" translate="yes" xml:space="preserve">
          <source>Buffering</source>
          <target state="translated">Buffering</target>
        </trans-unit>
        <trans-unit id="a2b034739fd2e5a6c3bf82c41ca659443bdf5bf6" translate="yes" xml:space="preserve">
          <source>Build final native binaries</source>
          <target state="translated">최종 네이티브 바이너리 빌드</target>
        </trans-unit>
        <trans-unit id="8caa35ead5cecc9e1f6a05e08148fc823defe29b" translate="yes" xml:space="preserve">
          <source>Build the code by clicking &lt;strong&gt;Build Project&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;프로젝트 빌드&lt;/strong&gt; 를 클릭하여 코드를 &lt;strong&gt;빌드하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="96c01304c46a6b11e05e7adffcd1bcc3b5093805" translate="yes" xml:space="preserve">
          <source>Build universal frameworks</source>
          <target state="translated">범용 프레임 워크 구축</target>
        </trans-unit>
        <trans-unit id="4d7e3d8248b285fabf4d3ba1bb2e29ec395538fa" translate="yes" xml:space="preserve">
          <source>Builder for a &lt;a href=&quot;../../kotlin.sequences/-sequence/index&quot;&gt;Sequence&lt;/a&gt; or an &lt;a href=&quot;../../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt;, provides &lt;a href=&quot;../../kotlin.coroutines.experimental/-sequence-builder/yield&quot;&gt;yield&lt;/a&gt; and &lt;a href=&quot;../../kotlin.coroutines.experimental/-sequence-builder/yield-all&quot;&gt;yieldAll&lt;/a&gt; suspension functions.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.sequences/-sequence/index&quot;&gt;Sequence&lt;/a&gt; 또는 &lt;a href=&quot;../../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; 용 Builder 는 &lt;a href=&quot;../../kotlin.coroutines.experimental/-sequence-builder/yield&quot;&gt;yield&lt;/a&gt; 및 &lt;a href=&quot;../../kotlin.coroutines.experimental/-sequence-builder/yield-all&quot;&gt;yieldAll&lt;/a&gt; 서스펜션 기능을 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="9afd64c1688d7dd0ee5eb541287de8d42f18fdac" translate="yes" xml:space="preserve">
          <source>Builder for a &lt;a href=&quot;../../kotlin.sequences/-sequence/index&quot;&gt;Sequence&lt;/a&gt; or an &lt;a href=&quot;../../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt;, provides &lt;a href=&quot;yield&quot;&gt;yield&lt;/a&gt; and &lt;a href=&quot;yield-all&quot;&gt;yieldAll&lt;/a&gt; suspension functions.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.sequences/-sequence/index&quot;&gt;Sequence&lt;/a&gt; 또는 &lt;a href=&quot;../../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; 용 Builder 는 &lt;a href=&quot;yield&quot;&gt;yield&lt;/a&gt; 및 &lt;a href=&quot;yield-all&quot;&gt;yieldAll&lt;/a&gt; 서스펜션 기능을 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="026aff5308e9d22f7a4347477af6718bf43f8f8e" translate="yes" xml:space="preserve">
          <source>Builder for a &lt;a href=&quot;../kotlin.sequences/-sequence/index&quot;&gt;Sequence&lt;/a&gt; or an &lt;a href=&quot;../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt;, provides &lt;a href=&quot;-sequence-builder/yield&quot;&gt;yield&lt;/a&gt; and &lt;a href=&quot;-sequence-builder/yield-all&quot;&gt;yieldAll&lt;/a&gt; suspension functions.</source>
          <target state="translated">&lt;a href=&quot;../kotlin.sequences/-sequence/index&quot;&gt;Sequence&lt;/a&gt; 또는 &lt;a href=&quot;../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; 용 Builder 는 &lt;a href=&quot;-sequence-builder/yield&quot;&gt;yield&lt;/a&gt; 및 &lt;a href=&quot;-sequence-builder/yield-all&quot;&gt;yieldAll&lt;/a&gt; 서스펜션 기능을 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="36be580e9634e896d771820f9a331961f506fb4f" translate="yes" xml:space="preserve">
          <source>Builder inference with non-nested recursive constraints</source>
          <target state="translated">중첩되지 않은 재귀 제약 조건이있는 빌더 추론</target>
        </trans-unit>
        <trans-unit id="74fa65e782a73e12d9efad27fd48f933ef1a66ba" translate="yes" xml:space="preserve">
          <source>Builder-style usage of methods that return &lt;code&gt;Unit&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Unit&lt;/code&gt; 을 돌려주는 메소드의 빌더 스타일 사용법</target>
        </trans-unit>
        <trans-unit id="4f75eae01b3871647125ffb7e5f534fa945932c0" translate="yes" xml:space="preserve">
          <source>BuilderInference</source>
          <target state="translated">BuilderInference</target>
        </trans-unit>
        <trans-unit id="8e1df15ede6103768476e38443a4cea475658893" translate="yes" xml:space="preserve">
          <source>Building Kotlin Multiplatform Projects</source>
          <target state="translated">코 틀린 멀티 플랫폼 프로젝트 구축</target>
        </trans-unit>
        <trans-unit id="52a49620e7d4a68e1a7b4934e6a2535a838bcfba" translate="yes" xml:space="preserve">
          <source>Building Multiplatform Projects with Gradle</source>
          <target state="translated">Gradle을 사용하여 멀티 플랫폼 프로젝트 빌드</target>
        </trans-unit>
        <trans-unit id="29d2e0ac69bee3e3a9008eab80d76ad558d8182c" translate="yes" xml:space="preserve">
          <source>Building a target requires compiling Kotlin once or multiple times. Each Kotlin compilation of a target may serve a different purpose (e.g. production code, tests) and incorporate different &lt;a href=&quot;#configuring-source-sets&quot;&gt;source sets&lt;/a&gt;. The compilations of a target may be accessed in the DSL, for example, to get the tasks, configure &lt;a href=&quot;using-gradle#compiler-options&quot;&gt;the Kotlin compiler options&lt;/a&gt; or get the dependency files and compilation outputs:</source>
          <target state="translated">대상을 빌드하려면 Kotlin을 한 번 또는 여러 번 컴파일해야합니다. 대상의 각 Kotlin 편집은 다른 목적 (예 : 생산 코드, 테스트)을 제공하고 다른 &lt;a href=&quot;#configuring-source-sets&quot;&gt;소스 세트를&lt;/a&gt; 통합 할 수 있습니다. 예를 들어, 작업을 얻 거나 &lt;a href=&quot;using-gradle#compiler-options&quot;&gt;Kotlin 컴파일러 옵션을&lt;/a&gt; 구성 하거나 종속성 파일 및 컴파일 출력 을 얻기 위해 DSL에서 대상의 컴파일에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e49a7ea18a2e71986e311061334985bdf1840d33" translate="yes" xml:space="preserve">
          <source>Building and running the application</source>
          <target state="translated">응용 프로그램 빌드 및 실행</target>
        </trans-unit>
        <trans-unit id="9d4aaba95715014b5a62cfbfad19c855e1d5d6de" translate="yes" xml:space="preserve">
          <source>Building channel producers</source>
          <target state="translated">채널 제작자 구축</target>
        </trans-unit>
        <trans-unit id="df07ae53e27f81198e41d13111e7b0f893c0314e" translate="yes" xml:space="preserve">
          <source>Building each target involves compiling Kotlin sources once or multiple times. In other words, a target may have one or more &lt;a href=&quot;#configuring-compilations&quot;&gt;compilations&lt;/a&gt;. For example, one compilation for production sources, the other for tests.</source>
          <target state="translated">각 대상을 빌드하려면 Kotlin 소스를 한 번 또는 여러 번 컴파일해야합니다. 즉, 대상에 하나 이상의 &lt;a href=&quot;#configuring-compilations&quot;&gt;컴파일&lt;/a&gt; 이있을 수 있습니다 . 예를 들어, 하나는 프로덕션 소스 용이고 다른 하나는 테스트 용입니다.</target>
        </trans-unit>
        <trans-unit id="b7c6bfdc6d8cd0cdba5e5c067b8cc97916e2d518" translate="yes" xml:space="preserve">
          <source>Building final native binaries</source>
          <target state="translated">최종 네이티브 바이너리 구축</target>
        </trans-unit>
        <trans-unit id="5e709ee9ec70ae35cbab41086a9a6fc112fdc7fe" translate="yes" xml:space="preserve">
          <source>Building the project</source>
          <target state="translated">프로젝트 구축</target>
        </trans-unit>
        <trans-unit id="623b2701cf5e32e580a01afa293e0ee5cc7757cd" translate="yes" xml:space="preserve">
          <source>Building universal frameworks</source>
          <target state="translated">보편적 인 프레임 워크 구축</target>
        </trans-unit>
        <trans-unit id="7dcb14b38faee04cddfaa60e935edb23af9abf88" translate="yes" xml:space="preserve">
          <source>Builds a &lt;a href=&quot;-sequence/index&quot;&gt;Sequence&lt;/a&gt; lazily yielding values one by one.</source>
          <target state="translated">값을 하나씩 차례로 산출 하는 &lt;a href=&quot;-sequence/index&quot;&gt;시퀀스&lt;/a&gt; 를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="60c09d8d72282ae2ff6808742ac433ed965bbc49" translate="yes" xml:space="preserve">
          <source>Builds a &lt;a href=&quot;../kotlin.sequences/-sequence/index&quot;&gt;Sequence&lt;/a&gt; lazily yielding values one by one.</source>
          <target state="translated">값을 하나씩 차례로 산출 하는 &lt;a href=&quot;../kotlin.sequences/-sequence/index&quot;&gt;시퀀스&lt;/a&gt; 를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="5c259a4879a1b60d577a4d4830ba75ce2a10c992" translate="yes" xml:space="preserve">
          <source>Builds a new read-only &lt;a href=&quot;-list/index#kotlin.collections.List&quot;&gt;List&lt;/a&gt; by populating a &lt;a href=&quot;-mutable-list/index#kotlin.collections.MutableList&quot;&gt;MutableList&lt;/a&gt; using the given &lt;a href=&quot;build-list#kotlin.collections%24buildList(kotlin.Function1((kotlin.collections.MutableList((kotlin.collections.buildList.E)),%20kotlin.Unit)))/builderAction&quot;&gt;builderAction&lt;/a&gt; and returning a read-only list with the same elements.</source>
          <target state="translated">Builds a new read-only &lt;a href=&quot;-list/index#kotlin.collections.List&quot;&gt;List&lt;/a&gt; by populating a &lt;a href=&quot;-mutable-list/index#kotlin.collections.MutableList&quot;&gt;MutableList&lt;/a&gt; using the given &lt;a href=&quot;build-list#kotlin.collections%24buildList(kotlin.Function1((kotlin.collections.MutableList((kotlin.collections.buildList.E)),%20kotlin.Unit)))/builderAction&quot;&gt;builderAction&lt;/a&gt; and returning a read-only list with the same elements.</target>
        </trans-unit>
        <trans-unit id="c310bceb0b05e6ecf3254a3a32180b92a7a1ffc4" translate="yes" xml:space="preserve">
          <source>Builds a new read-only &lt;a href=&quot;-list/index#kotlin.collections.List&quot;&gt;List&lt;/a&gt; by populating a &lt;a href=&quot;-mutable-list/index#kotlin.collections.MutableList&quot;&gt;MutableList&lt;/a&gt; using the given &lt;a href=&quot;build-list#kotlin.collections%24buildList(kotlin.Int,%20kotlin.Function1((kotlin.collections.MutableList((kotlin.collections.buildList.E)),%20kotlin.Unit)))/builderAction&quot;&gt;builderAction&lt;/a&gt; and returning a read-only list with the same elements.</source>
          <target state="translated">지정된 &lt;a href=&quot;build-list#kotlin.collections%24buildList(kotlin.Int,%20kotlin.Function1((kotlin.collections.MutableList((kotlin.collections.buildList.E)),%20kotlin.Unit)))/builderAction&quot;&gt;builderAction을&lt;/a&gt; 사용하여 &lt;a href=&quot;-mutable-list/index#kotlin.collections.MutableList&quot;&gt;MutableList&lt;/a&gt; 를 채우고 동일한 요소가있는 읽기 전용 목록을 리턴 하여 새 읽기 전용 &lt;a href=&quot;-list/index#kotlin.collections.List&quot;&gt;목록&lt;/a&gt; 을 빌드합니다 .</target>
        </trans-unit>
        <trans-unit id="9eda9f8a1ecf86e247a64f52482f39aefb83eff5" translate="yes" xml:space="preserve">
          <source>Builds a new read-only &lt;a href=&quot;-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; by populating a &lt;a href=&quot;-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; using the given &lt;a href=&quot;build-map#kotlin.collections%24buildMap(kotlin.Function1((kotlin.collections.MutableMap((kotlin.collections.buildMap.K,%20kotlin.collections.buildMap.V)),%20kotlin.Unit)))/builderAction&quot;&gt;builderAction&lt;/a&gt; and returning a read-only map with the same key-value pairs.</source>
          <target state="translated">Builds a new read-only &lt;a href=&quot;-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; by populating a &lt;a href=&quot;-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; using the given &lt;a href=&quot;build-map#kotlin.collections%24buildMap(kotlin.Function1((kotlin.collections.MutableMap((kotlin.collections.buildMap.K,%20kotlin.collections.buildMap.V)),%20kotlin.Unit)))/builderAction&quot;&gt;builderAction&lt;/a&gt; and returning a read-only map with the same key-value pairs.</target>
        </trans-unit>
        <trans-unit id="20c8e454ff638ffa025dc9e2118942582c3a3a0d" translate="yes" xml:space="preserve">
          <source>Builds a new read-only &lt;a href=&quot;-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; by populating a &lt;a href=&quot;-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; using the given &lt;a href=&quot;build-map#kotlin.collections%24buildMap(kotlin.Int,%20kotlin.Function1((kotlin.collections.MutableMap((kotlin.collections.buildMap.K,%20kotlin.collections.buildMap.V)),%20kotlin.Unit)))/builderAction&quot;&gt;builderAction&lt;/a&gt; and returning a read-only map with the same key-value pairs.</source>
          <target state="translated">새로운 읽기 전용 빌드 &lt;a href=&quot;-map/index#kotlin.collections.Map&quot;&gt;지도를&lt;/a&gt; 채워 &lt;a href=&quot;-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap을&lt;/a&gt; 주어진 사용 &lt;a href=&quot;build-map#kotlin.collections%24buildMap(kotlin.Int,%20kotlin.Function1((kotlin.collections.MutableMap((kotlin.collections.buildMap.K,%20kotlin.collections.buildMap.V)),%20kotlin.Unit)))/builderAction&quot;&gt;builderAction을&lt;/a&gt; 하고 읽기 전용 동일한 키 - 값 쌍으로지도를 반환.</target>
        </trans-unit>
        <trans-unit id="ee6309e22d6f84961af8f11bfaea49a7c4265dbb" translate="yes" xml:space="preserve">
          <source>Builds a new read-only &lt;a href=&quot;-set/index#kotlin.collections.Set&quot;&gt;Set&lt;/a&gt; by populating a &lt;a href=&quot;-mutable-set/index#kotlin.collections.MutableSet&quot;&gt;MutableSet&lt;/a&gt; using the given &lt;a href=&quot;build-set#kotlin.collections%24buildSet(kotlin.Function1((kotlin.collections.MutableSet((kotlin.collections.buildSet.E)),%20kotlin.Unit)))/builderAction&quot;&gt;builderAction&lt;/a&gt; and returning a read-only set with the same elements.</source>
          <target state="translated">Builds a new read-only &lt;a href=&quot;-set/index#kotlin.collections.Set&quot;&gt;Set&lt;/a&gt; by populating a &lt;a href=&quot;-mutable-set/index#kotlin.collections.MutableSet&quot;&gt;MutableSet&lt;/a&gt; using the given &lt;a href=&quot;build-set#kotlin.collections%24buildSet(kotlin.Function1((kotlin.collections.MutableSet((kotlin.collections.buildSet.E)),%20kotlin.Unit)))/builderAction&quot;&gt;builderAction&lt;/a&gt; and returning a read-only set with the same elements.</target>
        </trans-unit>
        <trans-unit id="0d68481fd2f698e039bc90883900f4ba075c709b" translate="yes" xml:space="preserve">
          <source>Builds a new read-only &lt;a href=&quot;-set/index#kotlin.collections.Set&quot;&gt;Set&lt;/a&gt; by populating a &lt;a href=&quot;-mutable-set/index#kotlin.collections.MutableSet&quot;&gt;MutableSet&lt;/a&gt; using the given &lt;a href=&quot;build-set#kotlin.collections%24buildSet(kotlin.Int,%20kotlin.Function1((kotlin.collections.MutableSet((kotlin.collections.buildSet.E)),%20kotlin.Unit)))/builderAction&quot;&gt;builderAction&lt;/a&gt; and returning a read-only set with the same elements.</source>
          <target state="translated">지정된 &lt;a href=&quot;build-set#kotlin.collections%24buildSet(kotlin.Int,%20kotlin.Function1((kotlin.collections.MutableSet((kotlin.collections.buildSet.E)),%20kotlin.Unit)))/builderAction&quot;&gt;builderAction을&lt;/a&gt; 사용하여 &lt;a href=&quot;-mutable-set/index#kotlin.collections.MutableSet&quot;&gt;MutableSet&lt;/a&gt; 을 채우고 동일한 요소가있는 읽기 전용 세트를 리턴 하여 새 읽기 전용 &lt;a href=&quot;-set/index#kotlin.collections.Set&quot;&gt;세트&lt;/a&gt; 를 빌드합니다 .</target>
        </trans-unit>
        <trans-unit id="c3321f7c232f47c1e35280ba87c98d1999d1ccb0" translate="yes" xml:space="preserve">
          <source>Builds an &lt;a href=&quot;../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; lazily yielding values one by one.</source>
          <target state="translated">반복적으로 값을 하나씩 산출 하는 &lt;a href=&quot;../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;반복자를&lt;/a&gt; 빌드합니다 .</target>
        </trans-unit>
        <trans-unit id="d5fa78f424d01a27d2f2abd602c868f2a2b0676c" translate="yes" xml:space="preserve">
          <source>Builds new string by populating newly created &lt;a href=&quot;-string-builder/index#kotlin.text.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt; initialized with the given &lt;a href=&quot;build-string#kotlin.text%24buildString%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.text.StringBuilder%2C+kotlin.Unit%29%29%29%2Fcapacity&quot;&gt;capacity&lt;/a&gt; using provided &lt;a href=&quot;build-string#kotlin.text%24buildString%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.text.StringBuilder%2C+kotlin.Unit%29%29%29%2FbuilderAction&quot;&gt;builderAction&lt;/a&gt; and then converting it to &lt;a href=&quot;../kotlin/-string/index#kotlin.String&quot;&gt;String&lt;/a&gt;.</source>
          <target state="translated">제공된 &lt;a href=&quot;build-string#kotlin.text%24buildString%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.text.StringBuilder%2C+kotlin.Unit%29%29%29%2FbuilderAction&quot;&gt;builderAction을&lt;/a&gt; 사용하여 지정된 &lt;a href=&quot;build-string#kotlin.text%24buildString%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.text.StringBuilder%2C+kotlin.Unit%29%29%29%2Fcapacity&quot;&gt;용량으로&lt;/a&gt; 초기화 된 새로 작성된 &lt;a href=&quot;-string-builder/index#kotlin.text.StringBuilder&quot;&gt;StringBuilder를 &lt;/a&gt;채우고 이를 &lt;a href=&quot;../kotlin/-string/index#kotlin.String&quot;&gt;String으로&lt;/a&gt; 변환 하여 새 문자열을 빌드합니다 .</target>
        </trans-unit>
        <trans-unit id="5b36e9184915e981f4e153b45acf1a5010f63351" translate="yes" xml:space="preserve">
          <source>Builds new string by populating newly created &lt;a href=&quot;-string-builder/index#kotlin.text.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt; initialized with the given &lt;a href=&quot;build-string#kotlin.text%24buildString(kotlin.Int,%20kotlin.Function1((kotlin.text.StringBuilder,%20kotlin.Unit)))/capacity&quot;&gt;capacity&lt;/a&gt; using provided &lt;a href=&quot;build-string#kotlin.text%24buildString(kotlin.Int,%20kotlin.Function1((kotlin.text.StringBuilder,%20kotlin.Unit)))/builderAction&quot;&gt;builderAction&lt;/a&gt; and then converting it to &lt;a href=&quot;../kotlin/-string/index#kotlin.String&quot;&gt;String&lt;/a&gt;.</source>
          <target state="translated">Builds new string by populating newly created &lt;a href=&quot;-string-builder/index#kotlin.text.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt; initialized with the given &lt;a href=&quot;build-string#kotlin.text%24buildString(kotlin.Int,%20kotlin.Function1((kotlin.text.StringBuilder,%20kotlin.Unit)))/capacity&quot;&gt;capacity&lt;/a&gt; using provided &lt;a href=&quot;build-string#kotlin.text%24buildString(kotlin.Int,%20kotlin.Function1((kotlin.text.StringBuilder,%20kotlin.Unit)))/builderAction&quot;&gt;builderAction&lt;/a&gt; and then converting it to &lt;a href=&quot;../kotlin/-string/index#kotlin.String&quot;&gt;String&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="2177c869da3da0786344d6fbb7b625c917d754f4" translate="yes" xml:space="preserve">
          <source>Builds new string by populating newly created &lt;a href=&quot;-string-builder/index#kotlin.text.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt; using provided &lt;a href=&quot;build-string#kotlin.text%24buildString%28kotlin.Function1%28%28kotlin.text.StringBuilder%2C+kotlin.Unit%29%29%29%2FbuilderAction&quot;&gt;builderAction&lt;/a&gt; and then converting it to &lt;a href=&quot;../kotlin/-string/index#kotlin.String&quot;&gt;String&lt;/a&gt;.</source>
          <target state="translated">제공된 &lt;a href=&quot;build-string#kotlin.text%24buildString%28kotlin.Function1%28%28kotlin.text.StringBuilder%2C+kotlin.Unit%29%29%29%2FbuilderAction&quot;&gt;builderAction을&lt;/a&gt; 사용하여 새로 작성된 &lt;a href=&quot;-string-builder/index#kotlin.text.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt; 를 채우고 이를 &lt;a href=&quot;../kotlin/-string/index#kotlin.String&quot;&gt;String으로&lt;/a&gt; 변환 하여 새 문자열을 빌드합니다 .</target>
        </trans-unit>
        <trans-unit id="fde4fd7cc2f74c0e17a9b96c27d4db226471d02b" translate="yes" xml:space="preserve">
          <source>Builds new string by populating newly created &lt;a href=&quot;-string-builder/index#kotlin.text.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt; using provided &lt;a href=&quot;build-string#kotlin.text%24buildString(kotlin.Function1((kotlin.text.StringBuilder,%20kotlin.Unit)))/builderAction&quot;&gt;builderAction&lt;/a&gt; and then converting it to &lt;a href=&quot;../kotlin/-string/index#kotlin.String&quot;&gt;String&lt;/a&gt;.</source>
          <target state="translated">Builds new string by populating newly created &lt;a href=&quot;-string-builder/index#kotlin.text.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt; using provided &lt;a href=&quot;build-string#kotlin.text%24buildString(kotlin.Function1((kotlin.text.StringBuilder,%20kotlin.Unit)))/builderAction&quot;&gt;builderAction&lt;/a&gt; and then converting it to &lt;a href=&quot;../kotlin/-string/index#kotlin.String&quot;&gt;String&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="bed258e5dc6c32d5eff629fad90cc90960dc9445" translate="yes" xml:space="preserve">
          <source>Built-in operations on booleans include</source>
          <target state="translated">부울에 내장 된 조작에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="47f3eaf9e71c91ab96d58774f250474e1243fc32" translate="yes" xml:space="preserve">
          <source>But as you remember, our API converts byte arrays to byte arrays in a different format and it is not easy to test byte arrays. So before we start writing a test, let's add the method &lt;code&gt;encodeToString&lt;/code&gt; with a default implementation to our &lt;code&gt;Base64Encoder&lt;/code&gt; interface:</source>
          <target state="translated">그러나 기억 하듯이 API는 바이트 배열을 다른 형식의 바이트 배열로 변환하므로 바이트 배열을 테스트하는 것은 쉽지 않습니다. 테스트 작성을 시작하기 전에 기본 구현으로 &lt;code&gt;encodeToString&lt;/code&gt; 메소드 를 &lt;code&gt;Base64Encoder&lt;/code&gt; 인터페이스에 추가해 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="6ed1ed74378c3be12bd20a7ee1d2d62f25fc3101" translate="yes" xml:space="preserve">
          <source>But how can code of the emitter encapsulate its exception handling behavior?</source>
          <target state="translated">그러나 이미 터의 코드는 어떻게 예외 처리 동작을 캡슐화 할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="46671e900bf9c5370c122e9fbedf49a147fc9abb" translate="yes" xml:space="preserve">
          <source>But if the function the lambda is passed to is inlined, the return can be inlined as well, so it is allowed:</source>
          <target state="translated">그러나 람다가 전달 된 함수가 인라인되면 반환도 인라인 될 수 있으므로 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="469a3ab76d91dc23561b9c2dd2b6f73190861246" translate="yes" xml:space="preserve">
          <source>But if the parameters may be inferred, e.g. from the constructor arguments or by some other means, one is allowed to omit the type arguments:</source>
          <target state="translated">그러나 매개 변수가 예를 들어 생성자 인수 또는 다른 수단으로 유추 될 수있는 경우, 유형 인수를 생략 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="371730e75c65ea86559a3bab20b4d1df590d8c70" translate="yes" xml:space="preserve">
          <source>But if you want to access the same property on &lt;code&gt;b&lt;/code&gt;, that would not be safe, and the compiler reports an error:</source>
          <target state="translated">그러나 &lt;code&gt;b&lt;/code&gt; 의 동일한 속성에 액세스하려는 경우 안전하지 않으며 컴파일러에서 오류를보고합니다.</target>
        </trans-unit>
        <trans-unit id="7b329900d92968a004b1366936090f97eaaa4da2" translate="yes" xml:space="preserve">
          <source>But it appears that in many cases this kind of overhead can be eliminated by inlining the lambda expressions. The functions shown below are good examples of this situation. I.e., the &lt;code&gt;lock()&lt;/code&gt; function could be easily inlined at call-sites. Consider the following case:</source>
          <target state="translated">그러나 많은 경우 람다 식을 인라인하여 이러한 종류의 오버 헤드를 제거 할 수있는 것으로 보입니다. 아래에 표시된 기능은 이러한 상황의 좋은 예입니다. 즉, &lt;code&gt;lock()&lt;/code&gt; 함수는 콜 사이트에서 쉽게 인라인 될 수 있습니다. 다음과 같은 경우를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="ca8031161b409294044618bf8d11e09390278df6" translate="yes" xml:space="preserve">
          <source>But the common code should somehow get an instance of this interface, for that purpose we define the factory object &lt;code&gt;Base64Factory&lt;/code&gt;:</source>
          <target state="translated">그러나 공통 코드는 어떻게 든이 인터페이스의 인스턴스를 &lt;code&gt;Base64Factory&lt;/code&gt; . 이 목적을 위해 팩토리 객체 Base64Factory를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="64c68a296346ddc7d2235bc8b60a6da50952f9db" translate="yes" xml:space="preserve">
          <source>But then, we can't do the following simple thing (which is perfectly safe):</source>
          <target state="translated">But then, we can't do the following simple thing (which is perfectly safe):</target>
        </trans-unit>
        <trans-unit id="4dc3ec007507d68d7b3e046b2209be5fde0773f0" translate="yes" xml:space="preserve">
          <source>But then, we would not be able to do the following simple thing (which is perfectly safe):</source>
          <target state="translated">그러나 우리는 다음과 같은 간단한 일을 할 수 없었습니다 (완전히 안전합니다).</target>
        </trans-unit>
        <trans-unit id="56acdaddb3309bc89f33e780815c7e14ac3ea05a" translate="yes" xml:space="preserve">
          <source>But we don't want to implement all the possible methods inside the class &lt;code&gt;List&lt;/code&gt;, right? This is where extensions help us.</source>
          <target state="translated">그러나 우리는 &lt;code&gt;List&lt;/code&gt; 클래스 내에서 가능한 모든 메소드를 구현하고 싶지 않습니다 . 이것이 확장이 우리를 돕는 곳입니다.</target>
        </trans-unit>
        <trans-unit id="82da50346400079fe12e5635e4dd6673e78ddff1" translate="yes" xml:space="preserve">
          <source>But we still need to access that property, right? There are a few ways of doing that.</source>
          <target state="translated">그러나 우리는 여전히 그 부동산에 접근해야합니까? 이를 수행하는 몇 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f69e49f3d3c341d43121910ff2da21d98a69781" translate="yes" xml:space="preserve">
          <source>But what if one does not want to print all exceptions to the console? &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-exception-handler/index.html&quot;&gt;CoroutineExceptionHandler&lt;/a&gt; context element is used as generic &lt;code&gt;catch&lt;/code&gt; block of coroutine where custom logging or exception handling may take place. It is similar to using &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#setUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)&quot;&gt;&lt;code&gt;Thread.uncaughtExceptionHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그러나 모든 예외를 콘솔에 인쇄하지 않으려면 어떻게해야합니까? &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-exception-handler/index.html&quot;&gt;CoroutineExceptionHandler&lt;/a&gt; 컨텍스트 요소는 사용자 정의 로깅 또는 예외 처리가 발생할 수있는 코 루틴의 일반 &lt;code&gt;catch&lt;/code&gt; 블록으로 사용됩니다 . &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#setUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)&quot;&gt; &lt;code&gt;Thread.uncaughtExceptionHandler&lt;/code&gt; &lt;/a&gt; 사용과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="4eeab717fbea77a855529c94381a85de48f5c2b4" translate="yes" xml:space="preserve">
          <source>But what if the extracted function contains a coroutine builder which is invoked on the current scope? In this case &lt;code&gt;suspend&lt;/code&gt; modifier on the extracted function is not enough. Making &lt;code&gt;doWorld&lt;/code&gt; an extension method on &lt;code&gt;CoroutineScope&lt;/code&gt; is one of the solutions, but it may not always be applicable as it does not make API clearer. The idiomatic solution is to have either an explicit &lt;code&gt;CoroutineScope&lt;/code&gt; as a field in a class containing the target function or an implicit one when the outer class implements &lt;code&gt;CoroutineScope&lt;/code&gt;. As a last resort, &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope.html&quot;&gt;CoroutineScope(coroutineContext)&lt;/a&gt; can be used, but such approach is structurally unsafe because you no longer have control on the scope of execution of this method. Only private APIs can use this builder.</source>
          <target state="translated">그러나 추출 된 함수에 현재 범위에서 호출되는 코 루틴 빌더가 포함되어 있으면 어떨까요? 이 경우 추출 된 함수에서 수정 자 &lt;code&gt;suspend&lt;/code&gt; 이 충분하지 않습니다. &lt;code&gt;CoroutineScope&lt;/code&gt; 에서 &lt;code&gt;doWorld&lt;/code&gt; 를 확장 메소드로 만드는 것이 솔루션 중 하나이지만 API가 더 명확하지는 않으므로 항상 적용 가능한 것은 아닙니다. 관용적 솔루션은 대상 함수를 포함하는 클래스의 필드로 명시 적 &lt;code&gt;CoroutineScope&lt;/code&gt; 를 갖거나 외부 클래스가 &lt;code&gt;CoroutineScope&lt;/code&gt; 를 구현할 때 암시 적을 갖는 것 입니다. 최후의 수단으로 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope.html&quot;&gt;CoroutineScope (coroutineContext)&lt;/a&gt;이 방법의 실행 범위를 더 이상 제어 할 수 없으므로 이러한 방법은 구조적으로 안전하지 않습니다. 개인 API 만이 빌더를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5719a29731535ebfb334e02c3962a1adab16839f" translate="yes" xml:space="preserve">
          <source>But what if the extracted function contains a coroutine builder which is invoked on the current scope? In this case, the &lt;code&gt;suspend&lt;/code&gt; modifier on the extracted function is not enough. Making &lt;code&gt;doWorld&lt;/code&gt; an extension method on &lt;code&gt;CoroutineScope&lt;/code&gt; is one of the solutions, but it may not always be applicable as it does not make the API clearer. The idiomatic solution is to have either an explicit &lt;code&gt;CoroutineScope&lt;/code&gt; as a field in a class containing the target function or an implicit one when the outer class implements &lt;code&gt;CoroutineScope&lt;/code&gt;. As a last resort, &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope.html&quot;&gt;CoroutineScope(coroutineContext)&lt;/a&gt; can be used, but such an approach is structurally unsafe because you no longer have control on the scope of execution of this method. Only private APIs can use this builder.</source>
          <target state="translated">But what if the extracted function contains a coroutine builder which is invoked on the current scope? In this case, the &lt;code&gt;suspend&lt;/code&gt; modifier on the extracted function is not enough. Making &lt;code&gt;doWorld&lt;/code&gt; an extension method on &lt;code&gt;CoroutineScope&lt;/code&gt; is one of the solutions, but it may not always be applicable as it does not make the API clearer. The idiomatic solution is to have either an explicit &lt;code&gt;CoroutineScope&lt;/code&gt; as a field in a class containing the target function or an implicit one when the outer class implements &lt;code&gt;CoroutineScope&lt;/code&gt; . As a last resort, &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope.html&quot;&gt;CoroutineScope(coroutineContext)&lt;/a&gt; can be used, but such an approach is structurally unsafe because you no longer have control on the scope of execution of this method. Only private APIs can use this builder.</target>
        </trans-unit>
        <trans-unit id="e588e3dc3f065dd5013e3fcfeb790a6dae76b4d0" translate="yes" xml:space="preserve">
          <source>ButterKnife</source>
          <target state="translated">ButterKnife</target>
        </trans-unit>
        <trans-unit id="14e7f1820e780372578ba3c1c94e440889709ae8" translate="yes" xml:space="preserve">
          <source>By applying the &lt;code&gt;@JsExport&lt;/code&gt; annotation to a top-level declaration (like a class or function), you make the Kotlin declaration available from JavaScript. The annotation exports all nested declarations with the name given in Kotlin. It can also be applied on file-level using &lt;code&gt;@file:JsExport&lt;/code&gt;.</source>
          <target state="translated">By applying the &lt;code&gt;@JsExport&lt;/code&gt; annotation to a top-level declaration (like a class or function), you make the Kotlin declaration available from JavaScript. The annotation exports all nested declarations with the name given in Kotlin. It can also be applied on file-level using &lt;code&gt;@file:JsExport&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="853613b8787fa7e892ce3e6d557ec64b8e4335c5" translate="yes" xml:space="preserve">
          <source>By convention, all sources are located in the &lt;code&gt;src/&amp;lt;target name&amp;gt;[Main|Test]/kotlin&lt;/code&gt; folders, where &lt;code&gt;main&lt;/code&gt; is for the source code and &lt;code&gt;test&lt;/code&gt; is for tests. &lt;code&gt;&amp;lt;target name&amp;gt;&lt;/code&gt; corresponds to the target platform (in this case &lt;code&gt;native&lt;/code&gt;), as specified in the build file.</source>
          <target state="translated">규칙에 따라 모든 소스는 &lt;code&gt;src/&amp;lt;target name&amp;gt;[Main|Test]/kotlin&lt;/code&gt; 폴더에 있습니다. 여기서 &lt;code&gt;main&lt;/code&gt; 은 소스 코드 용이고 &lt;code&gt;test&lt;/code&gt; 는 테스트 용입니다. &lt;code&gt;&amp;lt;target name&amp;gt;&lt;/code&gt; 은 빌드 파일에 지정된대로 대상 플랫폼 (이 경우 &lt;code&gt;native&lt;/code&gt; )에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="e315ba231d7689497d0c36cdb66e0b22d571cb74" translate="yes" xml:space="preserve">
          <source>By convention, implementations that install themselves as &lt;em&gt;the&lt;/em&gt; interceptor in the context with the &lt;a href=&quot;-key&quot;&gt;Key&lt;/a&gt; shall also scan the context for other element that implement &lt;a href=&quot;index&quot;&gt;ContinuationInterceptor&lt;/a&gt; interface and use their &lt;a href=&quot;intercept-continuation&quot;&gt;interceptContinuation&lt;/a&gt; functions, too.</source>
          <target state="translated">관례 적으로, &lt;a href=&quot;-key&quot;&gt;Key&lt;/a&gt; 와 관련 &lt;em&gt;하여&lt;/em&gt; 인터셉터 로 설치 되는 구현은 &lt;a href=&quot;index&quot;&gt;ContinuationInterceptor&lt;/a&gt; 인터페이스 를 구현 하고 &lt;a href=&quot;intercept-continuation&quot;&gt;interceptContinuation&lt;/a&gt; 함수를 사용하는 다른 요소에 대한 컨텍스트도 스캔해야 합니다.</target>
        </trans-unit>
        <trans-unit id="5c4ed021fd2dcd1ae3268fe77ea2a26b45ead19f" translate="yes" xml:space="preserve">
          <source>By convention, the entry point of a Kotlin program is a function with a signature like &lt;code&gt;main(args: Array&amp;lt;String&amp;gt;)&lt;/code&gt;, where &lt;code&gt;args&lt;/code&gt; represent the command-line arguments passed to the program. However, not every application supports command-line arguments, so this parameter often ends up not being used.</source>
          <target state="translated">일반적으로 Kotlin 프로그램의 진입 점은 &lt;code&gt;main(args: Array&amp;lt;String&amp;gt;)&lt;/code&gt; 과 같은 서명이있는 함수입니다. 여기서 &lt;code&gt;args&lt;/code&gt; 는 프로그램에 전달 된 명령 행 인수를 나타냅니다. 그러나 모든 응용 프로그램이 명령 행 인수를 지원하는 것은 아니므로이 매개 변수는 종종 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f6287d8db9dee67e36a09d069c69a41065a81f0d" translate="yes" xml:space="preserve">
          <source>By convention, the first paragraph of the documentation text (the block of text until the first blank line) is the summary description of the element, and the following text is the detailed description.</source>
          <target state="translated">일반적으로 문서 텍스트의 첫 번째 단락 (첫 번째 빈 줄까지의 텍스트 블록)은 요소의 요약 설명이며 다음 텍스트는 자세한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="e4d0ee6a3d773cd5fe33a5e915a48f340e15ef2b" translate="yes" xml:space="preserve">
          <source>By convention, the name of the setter parameter is &lt;code&gt;value&lt;/code&gt;, but you can choose a different name if you prefer.</source>
          <target state="translated">일반적으로 setter 매개 변수의 이름은 &lt;code&gt;value&lt;/code&gt; 이지만 원하는 경우 다른 이름을 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec639bb3beaf521b7aa292f8ea79f78cf22ae6b7" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;|&lt;/code&gt; is used as margin prefix, but you can choose another character and pass it as a parameter, like &lt;code&gt;trimMargin(&quot;&amp;gt;&quot;)&lt;/code&gt;.</source>
          <target state="translated">기본적으로 &lt;code&gt;|&lt;/code&gt; 는 마진 접두어로 사용되지만 다른 문자를 선택하여 &lt;code&gt;trimMargin(&quot;&amp;gt;&quot;)&lt;/code&gt; 과 같은 매개 변수로 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="99dac0c6c6d5404e704f288b84d13a1aa08cf418" translate="yes" xml:space="preserve">
          <source>By default Kotlin/Native compiler produces &lt;code&gt;.dSYM&lt;/code&gt; for release (i.e. optimized) binaries on Darwin platforms. This can be disabled with &lt;code&gt;-Xadd-light-debug=disable&lt;/code&gt; compiler flag. At the same time this option is disabled by default for other platforms, to enable it use &lt;code&gt;-Xadd-light-debug=enable&lt;/code&gt;. To control option in Gradle, use</source>
          <target state="translated">기본적으로 Kotlin / Native 컴파일러는 Darwin 플랫폼에서 릴리스 (예 : 최적화 된) 바이너리 용 &lt;code&gt;.dSYM&lt;/code&gt; 을 생성 합니다. &lt;code&gt;-Xadd-light-debug=disable&lt;/code&gt; 컴파일러 플래그 로 비활성화 할 수 있습니다 . &lt;code&gt;-Xadd-light-debug=enable&lt;/code&gt; 옵션은 다른 플랫폼에 대해 기본적으로 비활성화되어 있습니다 . 활성화 하려면 -Xadd-light-debug = enable을 사용하십시오 . Gradle에서 옵션을 제어하려면</target>
        </trans-unit>
        <trans-unit id="2157f3807036d87ee534a7dc55f304b05c3393dc" translate="yes" xml:space="preserve">
          <source>By default the Kotlin/Native compiler doesn't allow calling a non-designated Objective-C initializer as a &lt;code&gt;super(...)&lt;/code&gt; constructor. This behaviour can be inconvenient if the designated initializers aren't marked properly in the Objective-C library. Adding a &lt;code&gt;disableDesignatedInitializerChecks = true&lt;/code&gt; to the &lt;code&gt;.def&lt;/code&gt; file for this library would disable these compiler checks.</source>
          <target state="translated">Kotlin / Native 컴파일러는 기본적으로 지정되지 않은 Objective-C 초기화 프로그램을 &lt;code&gt;super(...)&lt;/code&gt; 생성자 로 호출 할 수 없습니다 . 지정된 초기화 프로그램이 Objective-C 라이브러리에서 올바르게 표시되지 않으면이 동작이 불편할 수 있습니다. 이 라이브러리 의 &lt;code&gt;.def&lt;/code&gt; 파일에 &lt;code&gt;disableDesignatedInitializerChecks = true&lt;/code&gt; 를 추가하면 이러한 컴파일러 검사가 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="3a8ae013521aa2113c5644b6f40df7e80be91d82" translate="yes" xml:space="preserve">
          <source>By default the plugin creates software components for the main and test source sets. You can access them via the &lt;code&gt;components&lt;/code&gt; container provided by Gradle or via the &lt;code&gt;component&lt;/code&gt; property of a corresponding source set:</source>
          <target state="translated">기본적으로 플러그인은 기본 및 테스트 소스 세트에 대한 소프트웨어 구성 요소를 작성합니다. Gradle에서 제공 하는 &lt;code&gt;components&lt;/code&gt; 컨테이너 또는 해당 소스 세트 의 &lt;code&gt;component&lt;/code&gt; 속성을 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d4dbe9f13a9e2b6944f1a197b2e0a3c54aaedc6f" translate="yes" xml:space="preserve">
          <source>By default the plugin downloads the Kotlin/Native compiler during the first run. If you have already downloaded the compiler manually you can specify the path to its root directory using &lt;code&gt;org.jetbrains.kotlin.native.home&lt;/code&gt; project property (e.g. in &lt;code&gt;gradle.properties&lt;/code&gt;).</source>
          <target state="translated">기본적으로 플러그인은 처음 실행하는 동안 Kotlin / Native 컴파일러를 다운로드합니다. 이미 컴파일러를 수동으로 다운로드 한 경우 &lt;code&gt;org.jetbrains.kotlin.native.home&lt;/code&gt; 프로젝트 속성 (예 : &lt;code&gt;gradle.properties&lt;/code&gt; )을 사용하여 루트 디렉토리의 경로를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1664eb337c008b6bc6ba3557bac64a2dbe807510" translate="yes" xml:space="preserve">
          <source>By default the production sources are located in &lt;code&gt;src/main/kotlin&lt;/code&gt; and the test sources - in &lt;code&gt;src/test/kotlin&lt;/code&gt;.</source>
          <target state="translated">기본적으로 프로덕션 소스는 &lt;code&gt;src/main/kotlin&lt;/code&gt; 에 있고 테스트 소스는 &lt;code&gt;src/test/kotlin&lt;/code&gt; 에 있습니다.</target>
        </trans-unit>
        <trans-unit id="76a5eff4cbb7d3b0eac8405bf73dd260a7e59b1d" translate="yes" xml:space="preserve">
          <source>By default, Android Extensions adds a hidden cache function and a storage field to each container (&lt;a href=&quot;https://developer.android.com/reference/android/app/Activity.html&quot;&gt;&lt;code&gt;Activity&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.android.com/reference/android/support/v4/app/Fragment.html&quot;&gt;&lt;code&gt;Fragment&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.android.com/reference/android/view/View.html&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; or a &lt;code&gt;LayoutContainer&lt;/code&gt; implementation) written in Kotlin. The method is pretty small so it does not increase the size of APK much.</source>
          <target state="translated">기본적으로 Android Extensions는 Kotlin으로 작성된 각 컨테이너 ( &lt;a href=&quot;https://developer.android.com/reference/android/app/Activity.html&quot;&gt; &lt;code&gt;Activity&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.android.com/reference/android/support/v4/app/Fragment.html&quot;&gt; &lt;code&gt;Fragment&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.android.com/reference/android/view/View.html&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;LayoutContainer&lt;/code&gt; 구현)에 숨겨진 캐시 기능 및 스토리지 필드를 추가합니다 . 이 방법은 매우 작기 때문에 APK 크기를 크게 늘리지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4d7bda9f81163a6a8962c92f55010d6ace9066d9" translate="yes" xml:space="preserve">
          <source>By default, Android Extensions plugin uses &lt;code&gt;HashMap&lt;/code&gt; as a backing storage, but you can switch to the &lt;code&gt;SparseArray&lt;/code&gt; implementation, or just switch off caching. The latter is especially useful when you use only the &lt;a href=&quot;#parcelable-implementations-generator&quot;&gt;Parcelable&lt;/a&gt; part of Android Extensions.</source>
          <target state="translated">기본적으로 Android Extensions 플러그인은 &lt;code&gt;HashMap&lt;/code&gt; 을 백업 저장소로 사용하지만 &lt;code&gt;SparseArray&lt;/code&gt; 구현으로 전환하거나 캐싱을 끌 수 있습니다. 후자는 Android Extensions 의 &lt;a href=&quot;#parcelable-implementations-generator&quot;&gt;Parcelable&lt;/a&gt; 부분 만 사용할 때 특히 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="f5c7e9870f7efc4c699314a7a24e7c0d58da9e16" translate="yes" xml:space="preserve">
          <source>By default, Gradle does not expand the JARs in the build process, so we need to add an additional step in our build to do so:</source>
          <target state="translated">기본적으로 Gradle은 빌드 프로세스에서 JAR을 확장하지 않으므로 빌드에 추가 단계를 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="b2d5deccfa850128fd02c305654ca46974c778f3" translate="yes" xml:space="preserve">
          <source>By default, Kotlin classes are final: they can&amp;rsquo;t be inherited. To make a class inheritable, mark it with the &lt;code&gt;open&lt;/code&gt; keyword.</source>
          <target state="translated">By default, Kotlin classes are final: they can&amp;rsquo;t be inherited. To make a class inheritable, mark it with the &lt;code&gt;open&lt;/code&gt; keyword.</target>
        </trans-unit>
        <trans-unit id="70d6cd4ae689d623400a5c3981b0fd105ebdc2ed" translate="yes" xml:space="preserve">
          <source>By default, Kotlin compiles down to Java (so you have the entire Java Standard Library available to you, and interacting with Java libraries is a breeze), so you now have a Java Archive (&lt;code&gt;program.jar&lt;/code&gt;) which includes the Java libraries that are necessary to support the Kotlin features (thanks to &lt;code&gt;-include-runtime&lt;/code&gt;), and you can run it using an out-of-the-box Java runtime:</source>
          <target state="translated">기본적으로 Kotlin은 Java로 컴파일하므로 전체 Java 표준 라이브러리를 사용할 수 있으며 Java 라이브러리와 상호 작용하는 것은 매우 간단합니다. 이제 Java 라이브러리 ( &lt;code&gt;program.jar&lt;/code&gt; )에 Java 라이브러리가 포함되어 있습니다. Kotlin 기능을 지원하는 데 필요하며 ( &lt;code&gt;-include-runtime&lt;/code&gt; 덕분에 ) 즉시 사용 가능한 Java 런타임을 사용하여 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7afb6f2771c4fbfd0553debf12349bf3e35e83f0" translate="yes" xml:space="preserve">
          <source>By default, Kotlin runs on JVM and gives direct access to a rich and efficient collections library with general-purpose collections and data-structures like dynamically-sized arrays (&lt;code&gt;ArrayList&lt;/code&gt;), hash-based maps and sets (&lt;code&gt;HashMap&lt;/code&gt;/&lt;code&gt;HashSet&lt;/code&gt;), tree-based ordered maps and sets (&lt;code&gt;TreeMap&lt;/code&gt;/&lt;code&gt;TreeSet&lt;/code&gt;), etc. Using a hash-set of integers to track values that were already reached while applying function &lt;code&gt;f&lt;/code&gt;, the straightforward imperative version of a solution to the problem can be written as shown below:</source>
          <target state="translated">기본적으로 Kotlin은 JVM에서 실행되며 동적 크기 배열 ( &lt;code&gt;ArrayList&lt;/code&gt; ), 해시 기반 맵 및 세트 ( &lt;code&gt;HashMap&lt;/code&gt; / &lt;code&gt;HashSet&lt;/code&gt; ), 트리- 기준으로 정렬지도와 세트 ( &lt;code&gt;TreeMap&lt;/code&gt; / &lt;code&gt;TreeSet&lt;/code&gt; 의 함수인가하면서 이미 도달 한 값을 추적하기 위해 정수의 해시 세트를 사용) 등의 &lt;code&gt;f&lt;/code&gt; 는 아래와 같이 기록 될 수없는 문제에 대한 솔루션의 직접적인 필수적 버전 :</target>
        </trans-unit>
        <trans-unit id="d92b23bfe8dd75221c0070051a895b75ef354d28" translate="yes" xml:space="preserve">
          <source>By default, a JVM target ignores Java sources and only compiles Kotlin source files.</source>
          <target state="translated">기본적으로 JVM 대상은 Java 소스를 무시하고 Kotlin 소스 파일 만 컴파일합니다.</target>
        </trans-unit>
        <trans-unit id="0d7b459f50f6b301332839edf04f6563052919e2" translate="yes" xml:space="preserve">
          <source>By default, a Kotlin/Native target is compiled down to a &lt;code&gt;*.klib&lt;/code&gt; library artifact, which can be consumed by Kotlin/Native itself as a dependency but cannot be executed or used as a native library.</source>
          <target state="translated">기본적으로 Kotlin / Native 타겟은 &lt;code&gt;*.klib&lt;/code&gt; 라이브러리 아티팩트 로 컴파일 되며, Kotlin / Native 자체에서 종속성으로 사용할 수 있지만 실행하거나 네이티브 라이브러리로 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="600c37294cf5ac736ca17273ccf4851a2f16d3e0" translate="yes" xml:space="preserve">
          <source>By default, a Kotlin/Native target is compiled down to a &lt;code&gt;*.klib&lt;/code&gt; library artifact, which can be consumed by Kotlin/Native itself as a dependency but cannot be executed or used as a native library. To declare final native binaries like executables or shared libraries a &lt;code&gt;binaries&lt;/code&gt; property of a native target is used. This property represents a collection of native binaries built for this target in addition to the default &lt;code&gt;*.klib&lt;/code&gt; artifact and provides a set of methods for declaring and configuring them.</source>
          <target state="translated">기본적으로 Kotlin / Native 대상은 &lt;code&gt;*.klib&lt;/code&gt; 라이브러리 아티팩트 로 컴파일 되어 Kotlin / Native 자체가 종속성으로 사용할 수 있지만 기본 라이브러리로 실행하거나 사용할 수는 없습니다. 실행 파일 또는 공유 라이브러리와 같은 최종 네이티브 바이너리를 선언하기 위해 네이티브 대상 의 &lt;code&gt;binaries&lt;/code&gt; 속성이 사용됩니다. 이 속성은 기본 &lt;code&gt;*.klib&lt;/code&gt; 아티팩트 외에이 대상에 대해 빌드 된 기본 바이너리의 모음을 나타내며 선언 및 구성을위한 일련의 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0818f89fe4783c774b6ab1d9e53a8860bf21f08c" translate="yes" xml:space="preserve">
          <source>By default, a sources JAR is added to each publication in addition to its main artifact. The sources JAR contains the sources used by the &lt;code&gt;main&lt;/code&gt; compilation of the target. If you also need to publish a documentation artifact (like a Javadoc JAR), you need to configure its build manually and add it as an artifact to the relevant publications, as shown below.</source>
          <target state="translated">기본적으로 소스 JAR은 기본 아티팩트 외에 각 발행물에 추가됩니다. 소스 JAR에는 대상 의 &lt;code&gt;main&lt;/code&gt; 컴파일에 사용되는 소스가 포함됩니다 . Javadoc JAR과 같은 문서 아티팩트도 공개해야하는 경우 빌드를 수동으로 구성하고 아래에 표시된대로 관련 서적에 아티팩트로 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="c8cb8e17403ff9cb715ea26c126be98970f587df" translate="yes" xml:space="preserve">
          <source>By default, an &lt;code&gt;external&lt;/code&gt; declaration is available regardless your target module system. However, by applying &lt;a href=&quot;../-js-module/index&quot;&gt;JsModule&lt;/a&gt; annotation you can make a declaration unavailable to &lt;em&gt;plain&lt;/em&gt; module system. Some JavaScript libraries are distributed both as a standalone downloadable piece of JavaScript and as a module available as an npm package. To tell the Kotlin compiler to accept both cases, you can augment &lt;a href=&quot;../-js-module/index&quot;&gt;JsModule&lt;/a&gt; with the &lt;code&gt;@JsNonModule&lt;/code&gt; annotation.</source>
          <target state="translated">기본적으로 대상 모듈 시스템에 관계없이 &lt;code&gt;external&lt;/code&gt; 선언을 사용할 수 있습니다. 그러나 &lt;a href=&quot;../-js-module/index&quot;&gt;JsModule&lt;/a&gt; 주석을 적용 하면 &lt;em&gt;일반&lt;/em&gt; 모듈 시스템 에서 선언을 사용할 수 없습니다 . 일부 JavaScript 라이브러리는 독립형 다운로드 가능한 JavaScript 및 npm 패키지로 사용 가능한 모듈로 배포됩니다. Kotlin 컴파일러가 두 경우 모두를 받도록 하려면 &lt;code&gt;@JsNonModule&lt;/code&gt; 주석으로 &lt;a href=&quot;../-js-module/index&quot;&gt;JsModule&lt;/a&gt; 을 보강 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="58c16e3eeeff5e380f1da54dc86032d6019e8115" translate="yes" xml:space="preserve">
          <source>By default, an Objective-C framework produced by Kotlin/Native supports only one platform. However, such frameworks can be merged into a single universal (fat) binary using the &lt;code&gt;lipo&lt;/code&gt; utility. Particularly, such an operation makes sense for 32-bit and 64-bit iOS frameworks. In this case the resulting universal framework can be used on both 32-bit and 64-bit devices.</source>
          <target state="translated">기본적으로 Kotlin / Native에서 생성 한 Objective-C 프레임 워크는 하나의 플랫폼 만 지원합니다. 그러나 이러한 프레임 워크는 &lt;code&gt;lipo&lt;/code&gt; 유틸리티를 사용하여 단일 범용 (지방) 이진으로 병합 될 수 있습니다 . 특히 이러한 작업은 32 비트 및 64 비트 iOS 프레임 워크에 적합합니다. 이 경우 결과 범용 프레임 워크는 32 비트 및 64 비트 장치 모두에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6954510030cab406f5ca0ac87adc218509cca524" translate="yes" xml:space="preserve">
          <source>By default, an Objective-C framework produced by Kotlin/Native supports only one platform. However, you can merge such frameworks into a single universal (fat) binary using the &lt;a href=&quot;https://llvm.org/docs/CommandGuide/llvm-lipo.html&quot;&gt;&lt;code&gt;lipo&lt;/code&gt; tool&lt;/a&gt;. This operation especially makes sense for 32-bit and 64-bit iOS frameworks. In this case, you can use the resulting universal framework on both 32-bit and 64-bit devices.</source>
          <target state="translated">기본적으로 Kotlin / Native에서 생성 한 Objective-C 프레임 워크는 하나의 플랫폼 만 지원합니다. 그러나 &lt;a href=&quot;https://llvm.org/docs/CommandGuide/llvm-lipo.html&quot;&gt; &lt;code&gt;lipo&lt;/code&gt; 도구를&lt;/a&gt; 사용하여 이러한 프레임 워크를 단일 범용 (팻) 바이너리로 병합 할 수 있습니다 . 이 작업은 특히 32 비트 및 64 비트 iOS 프레임 워크에 적합합니다. 이 경우 32 비트 및 64 비트 장치 모두에서 결과 범용 프레임 워크를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="12308601a82ae7783306b8c48240a870f666e7e4" translate="yes" xml:space="preserve">
          <source>By default, each project contains two source sets, &lt;code&gt;commonMain&lt;/code&gt; and &lt;code&gt;commonTest&lt;/code&gt;, where one can place all the code that should be shared between all of the target platforms. These source sets are added to each production and test compilation, respectively.</source>
          <target state="translated">기본적으로 각 프로젝트에는 두 개의 소스 세트 인 &lt;code&gt;commonMain&lt;/code&gt; 및 &lt;code&gt;commonTest&lt;/code&gt; 가 포함되어 있습니다 . 여기서 모든 대상 플랫폼간에 공유해야하는 모든 코드를 배치 할 수 있습니다. 이 소스 세트는 각 프로덕션 및 테스트 컴파일에 각각 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="a8ff5373098f1ac49033ea577ee0b1fe732c2dff" translate="yes" xml:space="preserve">
          <source>By default, each publication includes a sources JAR that contains the sources used by the main compilation of the target.</source>
          <target state="translated">기본적으로 각 게시에는 대상의 기본 컴파일에 사용되는 소스가 포함 된 소스 JAR이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b57d652a4688ee4db7e97bbfdf27f173a8187bc" translate="yes" xml:space="preserve">
          <source>By default, export works non-transitively. If a library &lt;code&gt;foo&lt;/code&gt; depending on library &lt;code&gt;bar&lt;/code&gt; is exported, only methods of &lt;code&gt;foo&lt;/code&gt; will be added in the output framework. This behaviour can by changed by the &lt;code&gt;transitiveExport&lt;/code&gt; flag.</source>
          <target state="translated">기본적으로 내보내기는 전 이적으로 작동합니다. 라이브러리 &lt;code&gt;bar&lt;/code&gt; 에 따라 라이브러리 &lt;code&gt;foo&lt;/code&gt; 를 내 보내면 출력 프레임 워크 에 &lt;code&gt;foo&lt;/code&gt; 메소드 만 추가됩니다. 이 동작은 &lt;code&gt;transitiveExport&lt;/code&gt; 플래그에 의해 변경 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="803fc94a2756f72f98051d5b5c3271f81a715fc7" translate="yes" xml:space="preserve">
          <source>By default, export works non-transitively. This means that if you export the library &lt;code&gt;foo&lt;/code&gt; depending on the library &lt;code&gt;bar&lt;/code&gt;, only methods of &lt;code&gt;foo&lt;/code&gt; are added to the output framework.</source>
          <target state="translated">기본적으로 내보내기는 비전 이적으로 작동합니다. 라이브러리 내 보내면 것을이 수단 &lt;code&gt;foo&lt;/code&gt; 는 라이브러리에 따라 &lt;code&gt;bar&lt;/code&gt; ,의 방법 &lt;code&gt;foo&lt;/code&gt; 출력 프레임 워크에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="f878eeb715782ef79a35a341bddc04ee6f954270" translate="yes" xml:space="preserve">
          <source>By default, no artifacts of an Android library are published. To publish artifacts produced by a set of &lt;a href=&quot;https://developer.android.com/studio/build/build-variants&quot;&gt;Android variants&lt;/a&gt;, specify the variant names in the Android target block as follows:</source>
          <target state="translated">기본적으로 Android 라이브러리의 아티팩트는 공개되지 않습니다. &lt;a href=&quot;https://developer.android.com/studio/build/build-variants&quot;&gt;Android 변형&lt;/a&gt; 세트에서 생성 된 아티팩트를 게시하려면 다음과 같이 Android 대상 블록에서 변형 이름을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="55262dfc9b0478a3f2135f74843ca220b0bf1756" translate="yes" xml:space="preserve">
          <source>By default, no artifacts of an Android library are published. To publish artifacts produced by a set of &lt;a href=&quot;https://developer.android.com/studio/build/build-variants&quot;&gt;Android variants&lt;/a&gt;, specify the variant names in the Android target block:</source>
          <target state="translated">기본적으로 Android 라이브러리의 아티팩트는 게시되지 않습니다. &lt;a href=&quot;https://developer.android.com/studio/build/build-variants&quot;&gt;Android 변형&lt;/a&gt; 집합에서 생성 된 아티팩트를 게시하려면 Android 대상 블록에 변형 이름을 지정하세요.</target>
        </trans-unit>
        <trans-unit id="d160a62c12242059269fd4a6087d4bcf60e47cc6" translate="yes" xml:space="preserve">
          <source>By default, the JVM target ignores Java sources and compiles only Kotlin source files.</source>
          <target state="translated">기본적으로 JVM 타겟은 자바 소스를 무시하고 Kotlin 소스 파일 만 컴파일합니다.</target>
        </trans-unit>
        <trans-unit id="b062ead1d5e30fda7c464836f72f0cccd9aaa11e" translate="yes" xml:space="preserve">
          <source>By default, the evaluation of lazy properties is &lt;strong&gt;synchronized&lt;/strong&gt;: the value is computed only in one thread, and all threads will see the same value. If the synchronization of initialization delegate is not required, so that multiple threads can execute it simultaneously, pass &lt;code&gt;LazyThreadSafetyMode.PUBLICATION&lt;/code&gt; as a parameter to the &lt;code&gt;lazy()&lt;/code&gt; function. And if you're sure that the initialization will always happen on a single thread, you can use &lt;code&gt;LazyThreadSafetyMode.NONE&lt;/code&gt; mode, which doesn't incur any thread-safety guarantees and the related overhead.</source>
          <target state="translated">기본적으로 지연 속성 평가는 &lt;strong&gt;동기화됩니다&lt;/strong&gt; . 값은 하나의 스레드에서만 계산되며 모든 스레드는 동일한 값을 보게됩니다. 초기화 대리의 동기화가 필요하지 않은 경우 여러 스레드가 동시에 실행할 수 있도록 &lt;code&gt;LazyThreadSafetyMode.PUBLICATION&lt;/code&gt; 을 매개 변수로 &lt;code&gt;lazy()&lt;/code&gt; 함수에 전달하십시오. 초기화가 항상 단일 스레드에서 발생한다고 확신하는 경우 &lt;code&gt;LazyThreadSafetyMode.NONE&lt;/code&gt; 모드를 사용 하면 스레드 안전 보장 및 관련 오버 헤드가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cf91dc8457f024db77525d6ee952007811f3f798" translate="yes" xml:space="preserve">
          <source>By default, the evaluation of lazy properties is &lt;strong&gt;synchronized&lt;/strong&gt;: the value is computed only in one thread, and all threads will see the same value. If the synchronization of initialization delegate is not required, so that multiple threads can execute it simultaneously, pass &lt;code&gt;LazyThreadSafetyMode.PUBLICATION&lt;/code&gt; as a parameter to the &lt;code&gt;lazy()&lt;/code&gt; function. And if you're sure that the initialization will always happen on the same thread as the one where you use the property, you can use &lt;code&gt;LazyThreadSafetyMode.NONE&lt;/code&gt;: it doesn't incur any thread-safety guarantees and the related overhead.</source>
          <target state="translated">By default, the evaluation of lazy properties is &lt;strong&gt;synchronized&lt;/strong&gt;: the value is computed only in one thread, and all threads will see the same value. If the synchronization of initialization delegate is not required, so that multiple threads can execute it simultaneously, pass &lt;code&gt;LazyThreadSafetyMode.PUBLICATION&lt;/code&gt; as a parameter to the &lt;code&gt;lazy()&lt;/code&gt; function. And if you're sure that the initialization will always happen on the same thread as the one where you use the property, you can use &lt;code&gt;LazyThreadSafetyMode.NONE&lt;/code&gt; : it doesn't incur any thread-safety guarantees and the related overhead.</target>
        </trans-unit>
        <trans-unit id="4cad3f33251c0fac382894f115102f9a78d8c7fd" translate="yes" xml:space="preserve">
          <source>By default, the name of our project's generated artifact (which is created through webpack) that needs to be referenced is our project name (in this case, &lt;code&gt;jsTutorial&lt;/code&gt;). If you've named your project &lt;code&gt;followAlong&lt;/code&gt;, make sure to embed &lt;code&gt;followAlong.js&lt;/code&gt; instead of &lt;code&gt;jsTutorial.js&lt;/code&gt;</source>
          <target state="translated">기본적으로 참조해야하는 프로젝트의 생성 된 아티팩트 (웹팩을 통해 생성됨)의 이름은 프로젝트 이름 (이 경우 &lt;code&gt;jsTutorial&lt;/code&gt; )입니다. 프로젝트 이름을 한 경우 &lt;code&gt;followAlong&lt;/code&gt; , 포함해야합니다 &lt;code&gt;followAlong.js&lt;/code&gt; 대신 &lt;code&gt;jsTutorial.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="99ffd3726db932db781eb6b6cabe9bafcd306993" translate="yes" xml:space="preserve">
          <source>By default, the resulting set of JavaScript files (your application together with all dependencies) can be found at path &lt;code&gt;$BUILD_DIR/min/&lt;/code&gt;, where &lt;code&gt;$BUILD_DIR&lt;/code&gt; is the path to generated JavaScript (usually, &lt;code&gt;build/classes/main&lt;/code&gt;).</source>
          <target state="translated">기본적으로 결과 JavaScript 파일 세트 (모든 종속성과 함께 애플리케이션)는 &lt;code&gt;$BUILD_DIR/min/&lt;/code&gt; 경로 에서 찾을 수 있습니다 . 여기서 &lt;code&gt;$BUILD_DIR&lt;/code&gt; 은 생성 된 JavaScript의 경로입니다 (일반적으로 &lt;code&gt;build/classes/main&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d906672b11a894bcc610e303cb7a7f8f05911f0d" translate="yes" xml:space="preserve">
          <source>By default, the results of a Kotlin/JS project build reside in the &lt;code&gt;/build/distribution&lt;/code&gt; directory within the project root.</source>
          <target state="translated">기본적으로 Kotlin / JS 프로젝트 빌드의 결과 는 프로젝트 루트 내의 &lt;code&gt;/build/distribution&lt;/code&gt; 디렉토리에 있습니다.</target>
        </trans-unit>
        <trans-unit id="3522669245270d01ba6f55d619e4fa3c3901597e" translate="yes" xml:space="preserve">
          <source>By default, we support running tests for JVM, JS, Android, Linux, Windows, macOS as well as iOS, watchOS, and tvOS simulators. To run tests for other Kotlin/Native targets, you need to configure them manually in an appropriate environment, emulator, or test framework.</source>
          <target state="translated">기본적으로 JVM, JS, Android, Linux, Windows, macOS는 물론 iOS, watchOS 및 tvOS 시뮬레이터에 대한 테스트 실행을 지원합니다. 다른 Kotlin / 네이티브 대상에 대한 테스트를 실행하려면 적절한 환경, 에뮬레이터 또는 테스트 프레임 워크에서 수동으로 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="480f0a18c9f3a940a2eced884a0c65112f353823" translate="yes" xml:space="preserve">
          <source>By default, your project will use Gradle with Kotlin DSL as the build system.</source>
          <target state="translated">기본적으로 프로젝트는 빌드 시스템으로 Kotlin DSL과 함께 Gradle을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ca655af32f89427d3dcb596e88184ba8ba8d34f8" translate="yes" xml:space="preserve">
          <source>By default, your project will use the Gradle build system with Kotlin DSL.</source>
          <target state="translated">기본적으로 프로젝트는 Kotlin DSL과 함께 Gradle 빌드 시스템을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="aefff3dc0262a1a9c9d1ef5a002b1c76f5499d68" translate="yes" xml:space="preserve">
          <source>By defining the &lt;code&gt;provideDelegate&lt;/code&gt; operator you can extend the logic of creating the object to which the property implementation is delegated. If the object used on the right hand side of &lt;code&gt;by&lt;/code&gt; defines &lt;code&gt;provideDelegate&lt;/code&gt; as a member or extension function, that function will be called to create the property delegate instance.</source>
          <target state="translated">&lt;code&gt;provideDelegate&lt;/code&gt; 연산자를 정의하면 특성 구현이 위임되는 오브젝트 작성 논리를 확장 할 수 있습니다. &lt;code&gt;by&lt;/code&gt; 의 오른쪽에 사용 된 객체가 &lt;code&gt;provideDelegate&lt;/code&gt; 를 멤버 또는 확장 함수로 정의 하면 해당 함수가 호출되어 속성 대리자 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="be5a6408a04e9b0b6fb327f3e01d634a5ce56957" translate="yes" xml:space="preserve">
          <source>By defining the &lt;code&gt;provideDelegate&lt;/code&gt; operator you can extend the logic of creating the object to which the property implementation is delegated. If the object used on the right-hand side of &lt;code&gt;by&lt;/code&gt; defines &lt;code&gt;provideDelegate&lt;/code&gt; as a member or extension function, that function will be called to create the property delegate instance.</source>
          <target state="translated">By defining the &lt;code&gt;provideDelegate&lt;/code&gt; operator you can extend the logic of creating the object to which the property implementation is delegated. If the object used on the right-hand side of &lt;code&gt;by&lt;/code&gt; defines &lt;code&gt;provideDelegate&lt;/code&gt; as a member or extension function, that function will be called to create the property delegate instance.</target>
        </trans-unit>
        <trans-unit id="1fb1d719255d6f672063d1b0db5ce7d1726ec1fa" translate="yes" xml:space="preserve">
          <source>By enabling the hierarchical structure along with its ability to use platform-dependent libraries in shared source sets, you can eliminate the need to use certain workarounds to get IDE support for sharing source sets among several native targets, for example &lt;code&gt;iosArm64&lt;/code&gt; and &lt;code&gt;iosX64&lt;/code&gt;:</source>
          <target state="translated">공유 소스 세트에서 플랫폼 종속 라이브러리를 사용할 수있는 기능과 함께 계층 구조를 활성화하면 여러 기본 대상 (예 : &lt;code&gt;iosArm64&lt;/code&gt; 및 &lt;code&gt;iosX64&lt;/code&gt; ) 간에 소스 세트를 공유하기위한 IDE 지원을 얻기 위해 특정 해결 방법을 사용할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="e3f73b3d35aaab73880900007b9ac145145bcdc1" translate="yes" xml:space="preserve">
          <source>By leveraging Kotlin's SAM conversion, you can write the following equivalent code instead:</source>
          <target state="translated">Kotlin의 SAM 변환을 활용하면 대신 다음과 같은 동등한 코드를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f4baa18a6ce640a87ee1469d12a17abf8cd0644" translate="yes" xml:space="preserve">
          <source>By the convention, all sources are located in the &lt;code&gt;src/&amp;lt;target name&amp;gt;[Main|Test]/kotlin&lt;/code&gt; folders. It creates &lt;em&gt;main&lt;/em&gt; and &lt;em&gt;test&lt;/em&gt; source sets for every target. Let's place the &lt;code&gt;hello.kt&lt;/code&gt; we previously created into the &lt;em&gt;main&lt;/em&gt; source set folder, which is &lt;code&gt;src/nativeMain/kotlin&lt;/code&gt;. The &lt;code&gt;nativeMain&lt;/code&gt; folder comes from the &lt;code&gt;&quot;native&quot;&lt;/code&gt; target name, which we specified in the build script above.</source>
          <target state="translated">규칙에 따라 모든 소스는 &lt;code&gt;src/&amp;lt;target name&amp;gt;[Main|Test]/kotlin&lt;/code&gt; 폴더에 있습니다. 모든 대상에 대한 &lt;em&gt;기본&lt;/em&gt; 및 &lt;em&gt;테스트&lt;/em&gt; 소스 세트를 작성 합니다. 하자의 장소 &lt;code&gt;hello.kt&lt;/code&gt; 우리가 이전에 만든 &lt;em&gt;주요&lt;/em&gt; 인 소스 세트 폴더, &lt;code&gt;src/nativeMain/kotlin&lt;/code&gt; . &lt;code&gt;nativeMain&lt;/code&gt; 의 폴더가에서 온다 &lt;code&gt;&quot;native&quot;&lt;/code&gt; 우리는 위의 빌드 스크립트에 지정된 대상 이름입니다.</target>
        </trans-unit>
        <trans-unit id="a0dfab771ea3973b4c2124bbf544d87ad089f95d" translate="yes" xml:space="preserve">
          <source>By using an &lt;em&gt;object expression&lt;/em&gt;, you can now define an anonymous, unnamed class and at the same time create one instance of it, called an &lt;em&gt;anonymous object&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;object expression&lt;/em&gt; 을 사용하면 익명의 명명되지 않은 클래스를 정의하고 동시에 &lt;em&gt;익명의 객체&lt;/em&gt; 라고하는 인스턴스를 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="448cce1bad11787a3aaaf6d4b14ff64be923694d" translate="yes" xml:space="preserve">
          <source>By using well-named functions as builders in combination with &lt;a href=&quot;lambdas#function-literals-with-receiver&quot;&gt;function literals with receiver&lt;/a&gt; it is possible to create type-safe, statically-typed builders in Kotlin.</source>
          <target state="translated">이름이 지정된 함수 &lt;a href=&quot;lambdas#function-literals-with-receiver&quot;&gt;를 리시버가&lt;/a&gt; 있는 함수 리터럴과 함께 빌더로 사용하면 Kotlin에서 형식이 안전한 정적 형식의 빌더를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7803ee252527503b67d1eeb0deb252622746cebd" translate="yes" xml:space="preserve">
          <source>Byte</source>
          <target state="translated">Byte</target>
        </trans-unit>
        <trans-unit id="8051f32f2b762ee221844914c1ad9edc1b014c6f" translate="yes" xml:space="preserve">
          <source>ByteArray</source>
          <target state="translated">ByteArray</target>
        </trans-unit>
        <trans-unit id="7ca4c3b5b837d26b47e13524a62d903214baaeb2" translate="yes" xml:space="preserve">
          <source>ByteIterator</source>
          <target state="translated">ByteIterator</target>
        </trans-unit>
        <trans-unit id="2e71678cd8d8c30b22ed7694dacffdc7ce8aac53" translate="yes" xml:space="preserve">
          <source>ByteVar</source>
          <target state="translated">ByteVar</target>
        </trans-unit>
        <trans-unit id="c3342bc2ee5e67573d8133bca38aac1e90aa9017" translate="yes" xml:space="preserve">
          <source>ByteVarOf</source>
          <target state="translated">ByteVarOf</target>
        </trans-unit>
        <trans-unit id="21abc86076158920e8e684ae35bd4456702276e8" translate="yes" xml:space="preserve">
          <source>Bytes are -128 through 127 due to Kotlin inheriting a bad design decision from Java. In order to get a traditional byte value between 0 and 255, keep the value as-is if it is positive, and add 256 if it is negative (so -128 is really 128, and -1 is really 255). See the section on &lt;a href=&quot;extension-functionsproperties&quot;&gt;extension functions&lt;/a&gt; for a neat workaround for this.</source>
          <target state="translated">Kotlin이 Java의 잘못된 디자인 결정을 상속하여 바이트 수는 -128에서 127입니다. 0에서 255 사이의 전통적인 바이트 값을 얻으려면 양수이면 값을 그대로 유지하고 음수이면 256을 더하십시오 (따라서 -128은 실제로 128, -1은 실제로 255). 이에 대한 간단한 해결 방법은 &lt;a href=&quot;extension-functionsproperties&quot;&gt;확장 기능&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="32b80dccfbc24b758f7138d1b71599f78bc68a2e" translate="yes" xml:space="preserve">
          <source>C Function Pointers in Kotlin</source>
          <target state="translated">코 틀린의 C 함수 포인터</target>
        </trans-unit>
        <trans-unit id="b1f95093d989b07d82ccf10194388dd2a80f5a48" translate="yes" xml:space="preserve">
          <source>C Interop documentation</source>
          <target state="translated">C Interop 설명서</target>
        </trans-unit>
        <trans-unit id="53cd5afff77d718a16da7a261addfd2e7a746175" translate="yes" xml:space="preserve">
          <source>C Type</source>
          <target state="translated">C 타입</target>
        </trans-unit>
        <trans-unit id="de0720287ff37b2cbfaaa0591ad328902d17057c" translate="yes" xml:space="preserve">
          <source>C compiler and linker options</source>
          <target state="translated">C 컴파일러 및 링커 옵션</target>
        </trans-unit>
        <trans-unit id="989fc820e5551195e144c9823e3208c797ab54ba" translate="yes" xml:space="preserve">
          <source>C data or code.</source>
          <target state="translated">C 데이터 또는 코드</target>
        </trans-unit>
        <trans-unit id="5c94a5c24eea74378442f31a2ec53ec9732a238c" translate="yes" xml:space="preserve">
          <source>C does not support objects either. People use function pointers to mimic object semantics. A function pointer is declared as follows &lt;code&gt;RETURN_TYPE (* FIELD_NAME)(PARAMETERS)&lt;/code&gt;. It is tricky to read, but we should be able to see function pointer fields in the structures above.</source>
          <target state="translated">C는 객체를 지원하지 않습니다. 사람들은 함수 의미를 사용하여 객체 의미를 모방합니다. 함수 포인터는 다음과 같이 선언됩니다. &lt;code&gt;RETURN_TYPE (* FIELD_NAME)(PARAMETERS)&lt;/code&gt; . 읽기 까다 롭지 만 위의 구조에서 함수 포인터 필드를 볼 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="1b6fc450a61cb16ec000b609a019e62ec3913527" translate="yes" xml:space="preserve">
          <source>C features</source>
          <target state="translated">C 특징</target>
        </trans-unit>
        <trans-unit id="bd7caae6d13d723e3e15fbc66010f92e50b10c54" translate="yes" xml:space="preserve">
          <source>C interop</source>
          <target state="translated">C interop</target>
        </trans-unit>
        <trans-unit id="b21396dc1ca712c25b956b5bcc452b8d7baa7f60" translate="yes" xml:space="preserve">
          <source>C null pointer is represented as Kotlin's &lt;code&gt;null&lt;/code&gt;, and the pointer type &lt;code&gt;CPointer&amp;lt;T&amp;gt;&lt;/code&gt; is not nullable, but the &lt;code&gt;CPointer&amp;lt;T&amp;gt;?&lt;/code&gt; is. The values of this type support all the Kotlin operations related to handling &lt;code&gt;null&lt;/code&gt;, e.g. &lt;code&gt;?:&lt;/code&gt;, &lt;code&gt;?.&lt;/code&gt;, &lt;code&gt;!!&lt;/code&gt; etc.:</source>
          <target state="translated">C null 포인터는 Kotlin의 &lt;code&gt;null&lt;/code&gt; 로 표시되며 포인터 유형 &lt;code&gt;CPointer&amp;lt;T&amp;gt;&lt;/code&gt; 는 nullable이 아니지만 &lt;code&gt;CPointer&amp;lt;T&amp;gt;?&lt;/code&gt; 입니다. 이 유형의 값은 &lt;code&gt;null&lt;/code&gt; 처리와 관련된 모든 Kotlin 작업을 지원합니다 ( 예 : &lt;code&gt;?:&lt;/code&gt; , &lt;code&gt;?.&lt;/code&gt; , &lt;code&gt;!!&lt;/code&gt; 기타.:</target>
        </trans-unit>
        <trans-unit id="dc151d62ad65e920410dab6555446bf11db7ddfd" translate="yes" xml:space="preserve">
          <source>C pointer.</source>
          <target state="translated">C 포인터.</target>
        </trans-unit>
        <trans-unit id="e117456e95203a35d890ff7b3058eb710d5d7f86" translate="yes" xml:space="preserve">
          <source>C types are mapped in the way we would expect, note that &lt;code&gt;char&lt;/code&gt; type is mapped to &lt;code&gt;kotlin.Byte&lt;/code&gt; as it is usually an 8-bit signed value.</source>
          <target state="translated">C 유형은 예상 한 방식으로 매핑됩니다. &lt;code&gt;char&lt;/code&gt; 유형 은 일반적으로 8 비트 부호있는 값이므로 &lt;code&gt;kotlin.Byte&lt;/code&gt; 에 매핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="2917e6fd0f3e33b19006bdd7164bba9ab07aabe5" translate="yes" xml:space="preserve">
          <source>C, &lt;a href=&quot;native/objc_interop&quot;&gt;Swift, and Objective-C&lt;/a&gt; frameworks</source>
          <target state="translated">C, &lt;a href=&quot;native/objc_interop&quot;&gt;Swift 및 Objective-C&lt;/a&gt; 프레임 워크</target>
        </trans-unit>
        <trans-unit id="1173dbb43313d07b70a93fae991af36789693f17" translate="yes" xml:space="preserve">
          <source>C:</source>
          <target state="translated">C:</target>
        </trans-unit>
        <trans-unit id="5587b0afcca208a7504cee0d2b70832d76010329" translate="yes" xml:space="preserve">
          <source>CANCELLED</source>
          <target state="translated">CANCELLED</target>
        </trans-unit>
        <trans-unit id="5cdc6fa477463d5f2868f0830b1453a306f2fa9f" translate="yes" xml:space="preserve">
          <source>CANON_EQ</source>
          <target state="translated">CANON_EQ</target>
        </trans-unit>
        <trans-unit id="05dff59689b060e392059bcb723a36e923fd7076" translate="yes" xml:space="preserve">
          <source>CASE_INSENSITIVE_ORDER</source>
          <target state="translated">CASE_INSENSITIVE_ORDER</target>
        </trans-unit>
        <trans-unit id="36b39d95fa7628fc8631aece6f093e7d75dfacd3" translate="yes" xml:space="preserve">
          <source>CArrayPointer</source>
          <target state="translated">CArrayPointer</target>
        </trans-unit>
        <trans-unit id="e4b88b5e5593a3b64f320de4f61462008b202dff" translate="yes" xml:space="preserve">
          <source>CArrayPointerVar</source>
          <target state="translated">CArrayPointerVar</target>
        </trans-unit>
        <trans-unit id="6042f4ccd2b35f8dec9caec98fc66b65acdc25f3" translate="yes" xml:space="preserve">
          <source>CCall</source>
          <target state="translated">CCall</target>
        </trans-unit>
        <trans-unit id="9eca1112729b385d925f7ae25bcbc3cfa491265b" translate="yes" xml:space="preserve">
          <source>CEnum</source>
          <target state="translated">CEnum</target>
        </trans-unit>
        <trans-unit id="b5455516170f19d109400c5956bbee35b500c4f2" translate="yes" xml:space="preserve">
          <source>CEnumEntryAlias</source>
          <target state="translated">CEnumEntryAlias</target>
        </trans-unit>
        <trans-unit id="97ed55287cc4662cda5b3b8fad77ea7ba3b0fe5e" translate="yes" xml:space="preserve">
          <source>CEnumVar</source>
          <target state="translated">CEnumVar</target>
        </trans-unit>
        <trans-unit id="8c0ccef330f1db9aa37890d372291089719b63f3" translate="yes" xml:space="preserve">
          <source>CEnumVarTypeSize</source>
          <target state="translated">CEnumVarTypeSize</target>
        </trans-unit>
        <trans-unit id="7877de4c10096f42fa8b542b38a0c8abfeff2993" translate="yes" xml:space="preserve">
          <source>CFunction</source>
          <target state="translated">CFunction</target>
        </trans-unit>
        <trans-unit id="de93d650439933a417e5398f479ee838df4cb4ca" translate="yes" xml:space="preserve">
          <source>CInterop support</source>
          <target state="translated">CInterop 지원</target>
        </trans-unit>
        <trans-unit id="7f6b300f54a9068bf063ea85746635fb73eebf11" translate="yes" xml:space="preserve">
          <source>CInterops</source>
          <target state="translated">CInterops</target>
        </trans-unit>
        <trans-unit id="bb95f17d9243e483e268617dbce738cf49527ccf" translate="yes" xml:space="preserve">
          <source>CLASS</source>
          <target state="translated">CLASS</target>
        </trans-unit>
        <trans-unit id="6f093241bd938f2c115d85f657fff3c48481dc1a" translate="yes" xml:space="preserve">
          <source>CName</source>
          <target state="translated">CName</target>
        </trans-unit>
        <trans-unit id="51a8d6928a4ece9bd6c2ffdeac4703a48f7264cc" translate="yes" xml:space="preserve">
          <source>COMBINING_SPACING_MARK</source>
          <target state="translated">COMBINING_SPACING_MARK</target>
        </trans-unit>
        <trans-unit id="05ea2aeebb1bcb2ad1032369d543dbd4fc81dbb5" translate="yes" xml:space="preserve">
          <source>COMMENTS</source>
          <target state="translated">COMMENTS</target>
        </trans-unit>
        <trans-unit id="a7a1e281255eb12f243d1fb22c16cfeb7bc92339" translate="yes" xml:space="preserve">
          <source>COMMON_NUMBER_SEPARATOR</source>
          <target state="translated">COMMON_NUMBER_SEPARATOR</target>
        </trans-unit>
        <trans-unit id="c52b56dab38211c04eda3b5b35db68636802626a" translate="yes" xml:space="preserve">
          <source>COMPUTED</source>
          <target state="translated">COMPUTED</target>
        </trans-unit>
        <trans-unit id="bdec3307bf74529afc89fcf1474e2489961239de" translate="yes" xml:space="preserve">
          <source>CONNECTOR_PUNCTUATION</source>
          <target state="translated">CONNECTOR_PUNCTUATION</target>
        </trans-unit>
        <trans-unit id="6ed66fd18a1b175704db533d3865fa2679863e6d" translate="yes" xml:space="preserve">
          <source>CONSTRUCTOR</source>
          <target state="translated">CONSTRUCTOR</target>
        </trans-unit>
        <trans-unit id="50978fadde69c77246ce999d9f431f618a6319de" translate="yes" xml:space="preserve">
          <source>CONTROL</source>
          <target state="translated">CONTROL</target>
        </trans-unit>
        <trans-unit id="8fc5c55e6034fd47125219962977975bff811433" translate="yes" xml:space="preserve">
          <source>COROUTINE_SUSPENDED</source>
          <target state="translated">COROUTINE_SUSPENDED</target>
        </trans-unit>
        <trans-unit id="12d1986fc613cfc336463178bd0f86eacc9cbec3" translate="yes" xml:space="preserve">
          <source>COpaque</source>
          <target state="translated">COpaque</target>
        </trans-unit>
        <trans-unit id="cd5d9c91d54b3f73460c195e4e84cb0b00e86b06" translate="yes" xml:space="preserve">
          <source>COpaquePointer</source>
          <target state="translated">COpaquePointer</target>
        </trans-unit>
        <trans-unit id="811c260ca26dab79423d1f8171bada67987007ff" translate="yes" xml:space="preserve">
          <source>COpaquePointerVar</source>
          <target state="translated">COpaquePointerVar</target>
        </trans-unit>
        <trans-unit id="397200d444a672cec5c5eef9dc97e880ce1e2e10" translate="yes" xml:space="preserve">
          <source>CPointed</source>
          <target state="translated">CPointed</target>
        </trans-unit>
        <trans-unit id="51b353fb033a73606eb39e50dc81f9d252aeb1f5" translate="yes" xml:space="preserve">
          <source>CPointer</source>
          <target state="translated">CPointer</target>
        </trans-unit>
        <trans-unit id="6700f1fe51b114e5e9c72c7a33e268ef1f8e7f70" translate="yes" xml:space="preserve">
          <source>CPointerVar</source>
          <target state="translated">CPointerVar</target>
        </trans-unit>
        <trans-unit id="e654c28678d1b6417437c0054f6dc4efab83dee4" translate="yes" xml:space="preserve">
          <source>CPointerVarOf</source>
          <target state="translated">CPointerVarOf</target>
        </trans-unit>
        <trans-unit id="1ac5a2a80e85c8edc6448983eac51d3f84788275" translate="yes" xml:space="preserve">
          <source>CPrimitiveVar</source>
          <target state="translated">CPrimitiveVar</target>
        </trans-unit>
        <trans-unit id="194e13da720a1f025685e5d677eba8a1aff3860a" translate="yes" xml:space="preserve">
          <source>CSS</source>
          <target state="translated">CSS</target>
        </trans-unit>
        <trans-unit id="4ede088fc94d65ce23fbc165eaec3b59039e24ed" translate="yes" xml:space="preserve">
          <source>CSSBoxType</source>
          <target state="translated">CSSBoxType</target>
        </trans-unit>
        <trans-unit id="6afd47d5b7f3283b8d6fd118a275b40e71737fbd" translate="yes" xml:space="preserve">
          <source>CSSRule</source>
          <target state="translated">CSSRule</target>
        </trans-unit>
        <trans-unit id="bbd7eff05e78b46aaddc0d7751b4d6b08b36df99" translate="yes" xml:space="preserve">
          <source>CSSRuleList</source>
          <target state="translated">CSSRuleList</target>
        </trans-unit>
        <trans-unit id="26b46bdb7c8c6ff7e33fbe0e36eb0872be8cd5fc" translate="yes" xml:space="preserve">
          <source>CSSStyleDeclaration</source>
          <target state="translated">CSSStyleDeclaration</target>
        </trans-unit>
        <trans-unit id="10fdabde5da32be8abb7d3568067d963d8ef529e" translate="yes" xml:space="preserve">
          <source>CString</source>
          <target state="translated">CString</target>
        </trans-unit>
        <trans-unit id="0f85a38172841ad31c3642b449845f7454ccd5c9" translate="yes" xml:space="preserve">
          <source>CStruct</source>
          <target state="translated">CStruct</target>
        </trans-unit>
        <trans-unit id="a5d88b1964f1a69d82c336a406f0c7e8b2a0458f" translate="yes" xml:space="preserve">
          <source>CStructVar</source>
          <target state="translated">CStructVar</target>
        </trans-unit>
        <trans-unit id="0eb9b33a40670abf39d39eecfb8c441213774695" translate="yes" xml:space="preserve">
          <source>CURRENCY_SYMBOL</source>
          <target state="translated">CURRENCY_SYMBOL</target>
        </trans-unit>
        <trans-unit id="e6303ccf1ceff324ad3a408b48244faf8b681b0a" translate="yes" xml:space="preserve">
          <source>CURRENT</source>
          <target state="translated">CURRENT</target>
        </trans-unit>
        <trans-unit id="04ae7b30c87d0340e26fda5fe5edc02b7d194589" translate="yes" xml:space="preserve">
          <source>CValue</source>
          <target state="translated">CValue</target>
        </trans-unit>
        <trans-unit id="33bc692b7f747be5f7df544e80eec98e4fe5fd4f" translate="yes" xml:space="preserve">
          <source>CValues</source>
          <target state="translated">CValues</target>
        </trans-unit>
        <trans-unit id="9b1b3ebea096ae4fd53f227491e30122cdb29201" translate="yes" xml:space="preserve">
          <source>CValuesRef</source>
          <target state="translated">CValuesRef</target>
        </trans-unit>
        <trans-unit id="c86e7f2f572ff3b939bce1942ef5b42273538c89" translate="yes" xml:space="preserve">
          <source>CVariable</source>
          <target state="translated">CVariable</target>
        </trans-unit>
        <trans-unit id="50338b3b242845e21a0ace9ae9684283d945fb52" translate="yes" xml:space="preserve">
          <source>Cache</source>
          <target state="translated">Cache</target>
        </trans-unit>
        <trans-unit id="7fab5893b3be679f8a5c05a77544ce77ef30648a" translate="yes" xml:space="preserve">
          <source>CacheBatchOperation</source>
          <target state="translated">CacheBatchOperation</target>
        </trans-unit>
        <trans-unit id="2e747bad89a09a29cc3a20eb8727ed9d9a9efd1f" translate="yes" xml:space="preserve">
          <source>CacheQueryOptions</source>
          <target state="translated">CacheQueryOptions</target>
        </trans-unit>
        <trans-unit id="403e16ddd46c6bceb2d1f1cd983fa06a75aa7c44" translate="yes" xml:space="preserve">
          <source>CacheStorage</source>
          <target state="translated">CacheStorage</target>
        </trans-unit>
        <trans-unit id="34db46b3147a9417752a73e6aa03523556aa3f74" translate="yes" xml:space="preserve">
          <source>Calculates the relative path for this file from &lt;a href=&quot;relative-to#kotlin.io%24relativeTo%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;base&lt;/a&gt; file. Note that the &lt;a href=&quot;relative-to#kotlin.io%24relativeTo%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;base&lt;/a&gt; file is treated as a directory. If this file matches the &lt;a href=&quot;relative-to#kotlin.io%24relativeTo%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;base&lt;/a&gt; file, then a &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/io/File.html&quot;&gt;File&lt;/a&gt; with empty path will be returned.</source>
          <target state="translated">&lt;a href=&quot;relative-to#kotlin.io%24relativeTo%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;기본&lt;/a&gt; 파일 에서이 파일의 상대 경로를 계산 합니다. 합니다 &lt;a href=&quot;relative-to#kotlin.io%24relativeTo%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;기본&lt;/a&gt; 파일 디렉토리로 처리됩니다. 이 파일이 &lt;a href=&quot;relative-to#kotlin.io%24relativeTo%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;기본&lt;/a&gt; 파일과 일치하면 경로가 비어 있는 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/io/File.html&quot;&gt;파일&lt;/a&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="06bbcd199ba3b0b2621818db0667d1fa032314ee" translate="yes" xml:space="preserve">
          <source>Calculates the relative path for this file from &lt;a href=&quot;relative-to#kotlin.io%24relativeTo(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; file. Note that the &lt;a href=&quot;relative-to#kotlin.io%24relativeTo(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; file is treated as a directory. If this file matches the &lt;a href=&quot;relative-to#kotlin.io%24relativeTo(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; file, then a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/io/File.html&quot;&gt;File&lt;/a&gt; with empty path will be returned.</source>
          <target state="translated">Calculates the relative path for this file from &lt;a href=&quot;relative-to#kotlin.io%24relativeTo(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; file. Note that the &lt;a href=&quot;relative-to#kotlin.io%24relativeTo(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; file is treated as a directory. If this file matches the &lt;a href=&quot;relative-to#kotlin.io%24relativeTo(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; file, then a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/io/File.html&quot;&gt;File&lt;/a&gt; with empty path will be returned.</target>
        </trans-unit>
        <trans-unit id="0b7d0c89204d227fe3ddb79ad5a1ca46cc60d22c" translate="yes" xml:space="preserve">
          <source>Calculates the relative path for this file from &lt;a href=&quot;relative-to-or-null#kotlin.io%24relativeToOrNull%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;base&lt;/a&gt; file. Note that the &lt;a href=&quot;relative-to-or-null#kotlin.io%24relativeToOrNull%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;base&lt;/a&gt; file is treated as a directory. If this file matches the &lt;a href=&quot;relative-to-or-null#kotlin.io%24relativeToOrNull%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;base&lt;/a&gt; file, then a &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/io/File.html&quot;&gt;File&lt;/a&gt; with empty path will be returned.</source>
          <target state="translated">&lt;a href=&quot;relative-to-or-null#kotlin.io%24relativeToOrNull%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;기본&lt;/a&gt; 파일 에서이 파일의 상대 경로를 계산 합니다. 합니다 &lt;a href=&quot;relative-to-or-null#kotlin.io%24relativeToOrNull%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;기본&lt;/a&gt; 파일 디렉토리로 처리됩니다. 이 파일이 &lt;a href=&quot;relative-to-or-null#kotlin.io%24relativeToOrNull%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;기본&lt;/a&gt; 파일과 일치하면 경로가 비어 있는 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/io/File.html&quot;&gt;파일&lt;/a&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="150b56463f9b2a1c3c346b10d895c602dd9b5a34" translate="yes" xml:space="preserve">
          <source>Calculates the relative path for this file from &lt;a href=&quot;relative-to-or-null#kotlin.io%24relativeToOrNull(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; file. Note that the &lt;a href=&quot;relative-to-or-null#kotlin.io%24relativeToOrNull(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; file is treated as a directory. If this file matches the &lt;a href=&quot;relative-to-or-null#kotlin.io%24relativeToOrNull(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; file, then a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/io/File.html&quot;&gt;File&lt;/a&gt; with empty path will be returned.</source>
          <target state="translated">Calculates the relative path for this file from &lt;a href=&quot;relative-to-or-null#kotlin.io%24relativeToOrNull(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; file. Note that the &lt;a href=&quot;relative-to-or-null#kotlin.io%24relativeToOrNull(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; file is treated as a directory. If this file matches the &lt;a href=&quot;relative-to-or-null#kotlin.io%24relativeToOrNull(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; file, then a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/io/File.html&quot;&gt;File&lt;/a&gt; with empty path will be returned.</target>
        </trans-unit>
        <trans-unit id="1db99d0e380dab5e2f3409e8414489a9a1c60607" translate="yes" xml:space="preserve">
          <source>Calculates the relative path for this file from &lt;a href=&quot;relative-to-or-self#kotlin.io%24relativeToOrSelf%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;base&lt;/a&gt; file. Note that the &lt;a href=&quot;relative-to-or-self#kotlin.io%24relativeToOrSelf%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;base&lt;/a&gt; file is treated as a directory. If this file matches the &lt;a href=&quot;relative-to-or-self#kotlin.io%24relativeToOrSelf%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;base&lt;/a&gt; file, then a &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/io/File.html&quot;&gt;File&lt;/a&gt; with empty path will be returned.</source>
          <target state="translated">&lt;a href=&quot;relative-to-or-self#kotlin.io%24relativeToOrSelf%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;기본&lt;/a&gt; 파일 에서이 파일의 상대 경로를 계산 합니다. 합니다 &lt;a href=&quot;relative-to-or-self#kotlin.io%24relativeToOrSelf%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;기본&lt;/a&gt; 파일 디렉토리로 처리됩니다. 이 파일이 &lt;a href=&quot;relative-to-or-self#kotlin.io%24relativeToOrSelf%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;기본&lt;/a&gt; 파일과 일치하면 경로가 비어 있는 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/io/File.html&quot;&gt;파일&lt;/a&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="94364f792b1cf1ff342e0b31333a6522ce54fbb1" translate="yes" xml:space="preserve">
          <source>Calculates the relative path for this file from &lt;a href=&quot;relative-to-or-self#kotlin.io%24relativeToOrSelf(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; file. Note that the &lt;a href=&quot;relative-to-or-self#kotlin.io%24relativeToOrSelf(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; file is treated as a directory. If this file matches the &lt;a href=&quot;relative-to-or-self#kotlin.io%24relativeToOrSelf(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; file, then a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/io/File.html&quot;&gt;File&lt;/a&gt; with empty path will be returned.</source>
          <target state="translated">Calculates the relative path for this file from &lt;a href=&quot;relative-to-or-self#kotlin.io%24relativeToOrSelf(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; file. Note that the &lt;a href=&quot;relative-to-or-self#kotlin.io%24relativeToOrSelf(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; file is treated as a directory. If this file matches the &lt;a href=&quot;relative-to-or-self#kotlin.io%24relativeToOrSelf(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; file, then a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/io/File.html&quot;&gt;File&lt;/a&gt; with empty path will be returned.</target>
        </trans-unit>
        <trans-unit id="58b40ce3a3c77f5f445a96771b2f292fe61e0a99" translate="yes" xml:space="preserve">
          <source>Calculates the relative path for this file from &lt;a href=&quot;to-relative-string#kotlin.io%24toRelativeString%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;base&lt;/a&gt; file. Note that the &lt;a href=&quot;to-relative-string#kotlin.io%24toRelativeString%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;base&lt;/a&gt; file is treated as a directory. If this file matches the &lt;a href=&quot;to-relative-string#kotlin.io%24toRelativeString%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;base&lt;/a&gt; file, then an empty string will be returned.</source>
          <target state="translated">&lt;a href=&quot;to-relative-string#kotlin.io%24toRelativeString%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;기본&lt;/a&gt; 파일 에서이 파일의 상대 경로를 계산 합니다. 합니다 &lt;a href=&quot;to-relative-string#kotlin.io%24toRelativeString%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;기본&lt;/a&gt; 파일 디렉토리로 처리됩니다. 이 파일이 &lt;a href=&quot;to-relative-string#kotlin.io%24toRelativeString%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;기본&lt;/a&gt; 파일과 일치하면 빈 문자열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1cf1bb02e2d297f5d8c6eed509ed4cd0c0ea77a5" translate="yes" xml:space="preserve">
          <source>Calculates the relative path for this file from &lt;a href=&quot;to-relative-string#kotlin.io%24toRelativeString(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; file. Note that the &lt;a href=&quot;to-relative-string#kotlin.io%24toRelativeString(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; file is treated as a directory. If this file matches the &lt;a href=&quot;to-relative-string#kotlin.io%24toRelativeString(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; file, then an empty string will be returned.</source>
          <target state="translated">Calculates the relative path for this file from &lt;a href=&quot;to-relative-string#kotlin.io%24toRelativeString(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; file. Note that the &lt;a href=&quot;to-relative-string#kotlin.io%24toRelativeString(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; file is treated as a directory. If this file matches the &lt;a href=&quot;to-relative-string#kotlin.io%24toRelativeString(java.io.File,%20java.io.File)/base&quot;&gt;base&lt;/a&gt; file, then an empty string will be returned.</target>
        </trans-unit>
        <trans-unit id="e4c23ba488daeba1fd770b81a98e5adb13047cfd" translate="yes" xml:space="preserve">
          <source>Calculates the remainder of dividing this value by the other value.</source>
          <target state="translated">이 값을 다른 값으로 나눈 나머지를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="136010536931db298ba82e97cf15dfc07366afae" translate="yes" xml:space="preserve">
          <source>Call sites of any declaration annotated with that marker should opt in to the API either by using &lt;a href=&quot;../-opt-in/index&quot;&gt;OptIn&lt;/a&gt;, or by being annotated with that marker themselves, effectively causing further propagation of the opt-in requirement.</source>
          <target state="translated">해당 마커로 주석이 달린 선언의 호출 사이트는 &lt;a href=&quot;../-opt-in/index&quot;&gt;OptIn&lt;/a&gt; 을 사용 하거나 해당 마커 자체로 주석을 달아 API에 옵트 인해야하므로 옵트 인 요구 사항이 추가로 전파됩니다.</target>
        </trans-unit>
        <trans-unit id="a475764779a5bd7a07bf3e88cacc4002108532f4" translate="yes" xml:space="preserve">
          <source>Callable reference improvements</source>
          <target state="translated">호출 가능한 참조 개선</target>
        </trans-unit>
        <trans-unit id="b02983a5c7bff13cbf34d935c1690e2b0833b943" translate="yes" xml:space="preserve">
          <source>Callable references</source>
          <target state="translated">호출 가능한 참조</target>
        </trans-unit>
        <trans-unit id="2f97a910b181d4f0a302c43f82374fb48021ade9" translate="yes" xml:space="preserve">
          <source>Callable references to constructors are typed as one of the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.reflect/-k-function/index&quot;&gt;&lt;code&gt;KFunction&amp;lt;out R&amp;gt;&lt;/code&gt;&lt;/a&gt; subtypes , depending on the parameter count.</source>
          <target state="translated">생성자에 대한 호출 가능한 참조 는 매개 변수 수에 따라 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.reflect/-k-function/index&quot;&gt; &lt;code&gt;KFunction&amp;lt;out R&amp;gt;&lt;/code&gt; &lt;/a&gt; 하위 유형 중 하나로 입력됩니다 .</target>
        </trans-unit>
        <trans-unit id="9fdc2cfe374fa5bde1e4e458854875e1709add1c" translate="yes" xml:space="preserve">
          <source>Callbacks</source>
          <target state="translated">Callbacks</target>
        </trans-unit>
        <trans-unit id="3b170cdb6d7fe5181c064cc641c4a8fbcb1cb38b" translate="yes" xml:space="preserve">
          <source>Callbacks are quite common in event-loop architectures such as JavaScript, but even there, generally people have moved away to using other approaches such as promises or reactive extensions.</source>
          <target state="translated">콜백은 JavaScript와 같은 이벤트 루프 아키텍처에서 매우 흔하지 만 일반적으로 약속이나 사후 확장과 같은 다른 접근 방식을 사용하는 사람들도 있습니다.</target>
        </trans-unit>
        <trans-unit id="91f63fb778fbf778d23c69d5a31e985a9cacf308" translate="yes" xml:space="preserve">
          <source>Calling</source>
          <target state="translated">Calling</target>
        </trans-unit>
        <trans-unit id="82ed7e2b6c90eb6b1070acfea5700f43fe78f19f" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;x.equals(null)&lt;/code&gt; on a platform type that is mapped to a Java primitive (&lt;code&gt;Int!&lt;/code&gt;, &lt;code&gt;Boolean!&lt;/code&gt;, &lt;code&gt;Short&lt;/code&gt;!, &lt;code&gt;Long!&lt;/code&gt;, &lt;code&gt;Float!&lt;/code&gt;, &lt;code&gt;Double!&lt;/code&gt;, &lt;code&gt;Char!&lt;/code&gt;) incorrectly returned &lt;code&gt;true&lt;/code&gt; when &lt;code&gt;x&lt;/code&gt; was null. Starting with Kotlin 1.2, calling &lt;code&gt;x.equals(...)&lt;/code&gt; on a null value of a platform type &lt;strong&gt;throws an NPE&lt;/strong&gt; (but &lt;code&gt;x == ...&lt;/code&gt; does not).</source>
          <target state="translated">통화 &lt;code&gt;x.equals(null)&lt;/code&gt; 자바 원시에 매핑 된 플랫폼 유형에 ( &lt;code&gt;Int!&lt;/code&gt; , &lt;code&gt;Boolean!&lt;/code&gt; , &lt;code&gt;Short&lt;/code&gt; !, &lt;code&gt;Long!&lt;/code&gt; , &lt;code&gt;Float!&lt;/code&gt; , &lt;code&gt;Double!&lt;/code&gt; , &lt;code&gt;Char!&lt;/code&gt; ) 잘못 반환 &lt;code&gt;true&lt;/code&gt; 때 &lt;code&gt;x&lt;/code&gt; 는 널 (null)이었다. Kotlin 1.2부터는 플랫폼 유형의 null 값에서 &lt;code&gt;x.equals(...)&lt;/code&gt; 를 호출 &lt;strong&gt;하면 NPE가 발생&lt;/strong&gt; 하지만 &lt;code&gt;x == ...&lt;/code&gt; 는 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ce77bd198c4fdd31f75068333f1e9ca1ead7f67d" translate="yes" xml:space="preserve">
          <source>Calling C, Objective-C, or Swift from Kotlin/Native is easy. Take a look at the &lt;a href=&quot;../../reference/native/c_interop&quot;&gt;C Interop documentation&lt;/a&gt; or &lt;a href=&quot;../../reference/native/objc_interop&quot;&gt;Objective-C and Swift&lt;/a&gt; interop documentation or check out one of our tutorials.</source>
          <target state="translated">Kotlin / Native에서 C, Objective-C 또는 Swift를 호출하는 것은 쉽습니다. 상기 살펴보세요 &lt;a href=&quot;../../reference/native/c_interop&quot;&gt;C Interop를 문서&lt;/a&gt; 또는 &lt;a href=&quot;../../reference/native/objc_interop&quot;&gt;목표 - C와 신속한&lt;/a&gt; 상호 운용성 설명서를하거나 자습서 중 하나를 체크 아웃.</target>
        </trans-unit>
        <trans-unit id="e0ba673bd2bca89bc54ee880f294a9f9f2f226e8" translate="yes" xml:space="preserve">
          <source>Calling Java code from Kotlin</source>
          <target state="translated">Kotlin에서 Java 코드 호출</target>
        </trans-unit>
        <trans-unit id="55681c13b88d07dfffc602e02788732270fea423" translate="yes" xml:space="preserve">
          <source>Calling JavaScript from Kotlin</source>
          <target state="translated">Kotlin에서 JavaScript 호출</target>
        </trans-unit>
        <trans-unit id="e2b579ea1f89a002387cd93af497b90a5db8539b" translate="yes" xml:space="preserve">
          <source>Calling Kotlin Code from Swift</source>
          <target state="translated">스위프트에서 코 틀린 코드 호출</target>
        </trans-unit>
        <trans-unit id="ce488fd0d2766e3fc2ba951609bc6095995c87b2" translate="yes" xml:space="preserve">
          <source>Calling Kotlin from Java</source>
          <target state="translated">Java에서 Kotlin 호출</target>
        </trans-unit>
        <trans-unit id="505017f99d543d9122c5b377a0db051dc35f2068" translate="yes" xml:space="preserve">
          <source>Calling Kotlin from JavaScript</source>
          <target state="translated">JavaScript에서 Kotlin 호출</target>
        </trans-unit>
        <trans-unit id="f134d5e9c204c2512c7e7ac6bc8abb68b3048346" translate="yes" xml:space="preserve">
          <source>Calling functions uses the traditional approach:</source>
          <target state="translated">함수 호출은 전통적인 접근 방식을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="4dcf024b98fbf79e6047b0b390a06b859f1d6c15" translate="yes" xml:space="preserve">
          <source>Calling member functions uses the dot notation:</source>
          <target state="translated">호출 멤버 함수는 점 표기법을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="52de33d500d0af2ca694a6ba9379af06dbd7ef41" translate="yes" xml:space="preserve">
          <source>Calling multiple methods on an object instance (&lt;code&gt;with&lt;/code&gt;)</source>
          <target state="translated">개체 인스턴스에서 여러 방법을 호출 ( &lt;code&gt;with&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="23a5f1fe47d421160cd29eb81450feac6c544139" translate="yes" xml:space="preserve">
          <source>Calling the superclass implementation</source>
          <target state="translated">수퍼 클래스 구현 호출</target>
        </trans-unit>
        <trans-unit id="49e8442ec63e1fb29a9465d7aac088d1059302a0" translate="yes" xml:space="preserve">
          <source>Calls a callable in the current suspend context. If the callable is not a suspend function, behaves as &lt;a href=&quot;../-k-callable/call&quot;&gt;KCallable.call&lt;/a&gt;. Otherwise, calls the suspend function with current continuation.</source>
          <target state="translated">Calls a callable in the current suspend context. If the callable is not a suspend function, behaves as &lt;a href=&quot;../-k-callable/call&quot;&gt;KCallable.call&lt;/a&gt;. Otherwise, calls the suspend function with current continuation.</target>
        </trans-unit>
        <trans-unit id="3a4f744b1c6bac7023f7c3b3cb69de59f8fcc6a3" translate="yes" xml:space="preserve">
          <source>Calls a callable in the current suspend context. If the callable is not a suspend function, behaves as &lt;a href=&quot;../-k-callable/call#kotlin.reflect.KCallable%24call%28kotlin.Array%28%28kotlin.Any%29%29%29&quot;&gt;KCallable.call&lt;/a&gt;. Otherwise, calls the suspend function with current continuation.</source>
          <target state="translated">현재 일시 중단 컨텍스트에서 호출 가능을 호출합니다. callable이 suspend 함수가 아닌 경우 &lt;a href=&quot;../-k-callable/call#kotlin.reflect.KCallable%24call%28kotlin.Array%28%28kotlin.Any%29%29%29&quot;&gt;KCallable.call로&lt;/a&gt; 작동합니다 . 그렇지 않으면 현재 연속으로 일시 중단 기능을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="d68fe333acf2d5e03e614e522823b9d64e49fa24" translate="yes" xml:space="preserve">
          <source>Calls a callable in the current suspend context. If the callable is not a suspend function, behaves as &lt;a href=&quot;../-k-callable/call-by&quot;&gt;KCallable.callBy&lt;/a&gt;. Otherwise, calls the suspend function with current continuation.</source>
          <target state="translated">현재 일시 중단 컨텍스트에서 콜 러블을 호출합니다. 콜 &lt;a href=&quot;../-k-callable/call-by&quot;&gt;러블&lt;/a&gt; 이 일시 중단 함수가 아닌 경우 KCallable.callBy로 동작합니다 . 그렇지 않으면 현재 연속으로 suspend 함수를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="00132c78556027adc964bfa694608b367cfeda30" translate="yes" xml:space="preserve">
          <source>Calls a callable in the current suspend context. If the callable is not a suspend function, behaves as &lt;a href=&quot;../-k-callable/call-by#kotlin.reflect.KCallable%24callBy%28kotlin.collections.Map%28%28kotlin.reflect.KParameter%2C+kotlin.Any%29%29%29&quot;&gt;KCallable.callBy&lt;/a&gt;. Otherwise, calls the suspend function with current continuation.</source>
          <target state="translated">현재 일시 중단 컨텍스트에서 호출 가능을 호출합니다. 콜 &lt;a href=&quot;../-k-callable/call-by#kotlin.reflect.KCallable%24callBy%28kotlin.collections.Map%28%28kotlin.reflect.KParameter%2C+kotlin.Any%29%29%29&quot;&gt;러블&lt;/a&gt; 이 suspend 함수가 아닌 경우 KCallable.callBy로 작동합니다 . 그렇지 않으면 현재 연속으로 일시 중단 기능을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="8f4300f049c1475df46042d7254c17d1beb9054d" translate="yes" xml:space="preserve">
          <source>Calls a callable in the current suspend context. If the callable is not a suspend function, behaves as &lt;a href=&quot;../kotlin.reflect/-k-callable/call&quot;&gt;KCallable.call&lt;/a&gt;. Otherwise, calls the suspend function with current continuation.</source>
          <target state="translated">현재 일시 중단 컨텍스트에서 콜 러블을 호출합니다. 콜 &lt;a href=&quot;../kotlin.reflect/-k-callable/call&quot;&gt;러블&lt;/a&gt; 이 일시 중단 함수가 아닌 경우 KCallable.call로 동작합니다 . 그렇지 않으면 현재 연속으로 suspend 함수를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="24bbbd79f6ee34dd23756da78c71e8b3fadd7434" translate="yes" xml:space="preserve">
          <source>Calls a callable in the current suspend context. If the callable is not a suspend function, behaves as &lt;a href=&quot;../kotlin.reflect/-k-callable/call#kotlin.reflect.KCallable%24call%28kotlin.Array%28%28kotlin.Any%29%29%29&quot;&gt;KCallable.call&lt;/a&gt;. Otherwise, calls the suspend function with current continuation.</source>
          <target state="translated">현재 일시 중단 컨텍스트에서 호출 가능을 호출합니다. callable이 suspend 함수가 아닌 경우 &lt;a href=&quot;../kotlin.reflect/-k-callable/call#kotlin.reflect.KCallable%24call%28kotlin.Array%28%28kotlin.Any%29%29%29&quot;&gt;KCallable.call로&lt;/a&gt; 작동합니다 . 그렇지 않으면 현재 연속으로 일시 중단 기능을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="af325880858eb6b1c7b61419993eb5f2c9b848ca" translate="yes" xml:space="preserve">
          <source>Calls a callable in the current suspend context. If the callable is not a suspend function, behaves as &lt;a href=&quot;../kotlin.reflect/-k-callable/call-by&quot;&gt;KCallable.callBy&lt;/a&gt;. Otherwise, calls the suspend function with current continuation.</source>
          <target state="translated">현재 일시 중단 컨텍스트에서 콜 러블을 호출합니다. 콜 &lt;a href=&quot;../kotlin.reflect/-k-callable/call-by&quot;&gt;러블&lt;/a&gt; 이 일시 중단 함수가 아닌 경우 KCallable.callBy로 동작합니다 . 그렇지 않으면 현재 연속으로 suspend 함수를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="bb25a28bd54b39c0b2369935d197104098befe35" translate="yes" xml:space="preserve">
          <source>Calls a callable in the current suspend context. If the callable is not a suspend function, behaves as &lt;a href=&quot;../kotlin.reflect/-k-callable/call-by#kotlin.reflect.KCallable%24callBy%28kotlin.collections.Map%28%28kotlin.reflect.KParameter%2C+kotlin.Any%29%29%29&quot;&gt;KCallable.callBy&lt;/a&gt;. Otherwise, calls the suspend function with current continuation.</source>
          <target state="translated">현재 일시 중단 컨텍스트에서 호출 가능을 호출합니다. 콜 &lt;a href=&quot;../kotlin.reflect/-k-callable/call-by#kotlin.reflect.KCallable%24callBy%28kotlin.collections.Map%28%28kotlin.reflect.KParameter%2C+kotlin.Any%29%29%29&quot;&gt;러블&lt;/a&gt; 이 suspend 함수가 아닌 경우 KCallable.callBy로 작동합니다 . 그렇지 않으면 현재 연속으로 일시 중단 기능을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="9c6a42fed689c0990336b51915a5518ec6d56b46" translate="yes" xml:space="preserve">
          <source>Calls a callable in the current suspend context. If the callable is not a suspend function, behaves as &lt;a href=&quot;call&quot;&gt;KCallable.call&lt;/a&gt;. Otherwise, calls the suspend function with current continuation.</source>
          <target state="translated">현재 일시 중단 컨텍스트에서 콜 러블을 호출합니다. 콜 &lt;a href=&quot;call&quot;&gt;러블&lt;/a&gt; 이 일시 중단 함수가 아닌 경우 KCallable.call로 동작합니다 . 그렇지 않으면 현재 연속으로 suspend 함수를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="16e87770726bc687dad9595b8d0ae9c25c719694" translate="yes" xml:space="preserve">
          <source>Calls a callable in the current suspend context. If the callable is not a suspend function, behaves as &lt;a href=&quot;call#kotlin.reflect.KCallable%24call%28kotlin.Array%28%28kotlin.Any%29%29%29&quot;&gt;KCallable.call&lt;/a&gt;. Otherwise, calls the suspend function with current continuation.</source>
          <target state="translated">현재 일시 중단 컨텍스트에서 호출 가능을 호출합니다. callable이 suspend 함수가 아닌 경우 &lt;a href=&quot;call#kotlin.reflect.KCallable%24call%28kotlin.Array%28%28kotlin.Any%29%29%29&quot;&gt;KCallable.call로&lt;/a&gt; 작동합니다 . 그렇지 않으면 현재 연속으로 일시 중단 기능을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="a58f9bdb67a9b5620cf00e886532cbcfdb449acc" translate="yes" xml:space="preserve">
          <source>Calls a callable in the current suspend context. If the callable is not a suspend function, behaves as &lt;a href=&quot;call-by&quot;&gt;KCallable.callBy&lt;/a&gt;. Otherwise, calls the suspend function with current continuation.</source>
          <target state="translated">현재 일시 중단 컨텍스트에서 콜 러블을 호출합니다. 콜 &lt;a href=&quot;call-by&quot;&gt;러블&lt;/a&gt; 이 일시 중단 함수가 아닌 경우 KCallable.callBy로 동작합니다 . 그렇지 않으면 현재 연속으로 suspend 함수를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="5fc64dbbecd3710045a5d9ca426204b2601ce7e2" translate="yes" xml:space="preserve">
          <source>Calls a callable in the current suspend context. If the callable is not a suspend function, behaves as &lt;a href=&quot;call-by#kotlin.reflect.KCallable%24callBy%28kotlin.collections.Map%28%28kotlin.reflect.KParameter%2C+kotlin.Any%29%29%29&quot;&gt;KCallable.callBy&lt;/a&gt;. Otherwise, calls the suspend function with current continuation.</source>
          <target state="translated">현재 일시 중단 컨텍스트에서 호출 가능을 호출합니다. 콜 &lt;a href=&quot;call-by#kotlin.reflect.KCallable%24callBy%28kotlin.collections.Map%28%28kotlin.reflect.KParameter%2C+kotlin.Any%29%29%29&quot;&gt;러블&lt;/a&gt; 이 suspend 함수가 아닌 경우 KCallable.callBy로 작동합니다 . 그렇지 않으면 현재 연속으로 일시 중단 기능을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="b4003362afd6410f2325ecf6e92e3ed0380c6d48" translate="yes" xml:space="preserve">
          <source>Calls of the function will be translated to an assignment of &lt;a href=&quot;set#kotlin.js.Json%24set%28kotlin.String%2C+kotlin.Any%29%2Fvalue&quot;&gt;value&lt;/a&gt; to the receiver indexed (with square brackets/index operation) with &lt;a href=&quot;set#kotlin.js.Json%24set%28kotlin.String%2C+kotlin.Any%29%2FpropertyName&quot;&gt;propertyName&lt;/a&gt;.</source>
          <target state="translated">함수의 호출은 &lt;a href=&quot;set#kotlin.js.Json%24set%28kotlin.String%2C+kotlin.Any%29%2FpropertyName&quot;&gt;propertyName으로&lt;/a&gt; 인덱스 된 (대괄호 / 인덱스 연산으로) 수신자에게 &lt;a href=&quot;set#kotlin.js.Json%24set%28kotlin.String%2C+kotlin.Any%29%2Fvalue&quot;&gt;값&lt;/a&gt; 을 할당하는 것으로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="45277522b9eeea26f4969e17974bd5fc6096a76a" translate="yes" xml:space="preserve">
          <source>Calls of the function will be translated to an assignment of &lt;a href=&quot;set#kotlin.js.Json%24set(kotlin.String,%20kotlin.Any?)/value&quot;&gt;value&lt;/a&gt; to the receiver indexed (with square brackets/index operation) with &lt;a href=&quot;set#kotlin.js.Json%24set(kotlin.String,%20kotlin.Any?)/propertyName&quot;&gt;propertyName&lt;/a&gt;.</source>
          <target state="translated">함수 호출은 &lt;a href=&quot;set#kotlin.js.Json%24set(kotlin.String,%20kotlin.Any?)/propertyName&quot;&gt;propertyName으로&lt;/a&gt; 인덱싱 된 (대괄호 / 인덱스 연산으로) 수신자에 대한 &lt;a href=&quot;set#kotlin.js.Json%24set(kotlin.String,%20kotlin.Any?)/value&quot;&gt;값&lt;/a&gt; 할당으로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="e1cb8690aabe43e450f25dd69e926af342fae97f" translate="yes" xml:space="preserve">
          <source>Calls the &lt;a href=&quot;../use-contents#kotlinx.cinterop%24useContents%28kotlinx.cinterop.CValue%28%28kotlinx.cinterop.useContents.T%29%29%2C+kotlin.Function1%28%28kotlinx.cinterop.useContents.T%2C+kotlinx.cinterop.useContents.R%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; with temporary copy if this value as receiver.</source>
          <target state="translated">이 값이 수신자 인 경우 임시 사본으로 &lt;a href=&quot;../use-contents#kotlinx.cinterop%24useContents%28kotlinx.cinterop.CValue%28%28kotlinx.cinterop.useContents.T%29%29%2C+kotlin.Function1%28%28kotlinx.cinterop.useContents.T%2C+kotlinx.cinterop.useContents.R%29%29%29%2Fblock&quot;&gt;블록&lt;/a&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="45183370c400997886f6171a671f1f8816539b27" translate="yes" xml:space="preserve">
          <source>Calls the &lt;a href=&quot;../use-contents#kotlinx.cinterop%24useContents(kotlinx.cinterop.CValue((kotlinx.cinterop.useContents.T)),%20kotlin.Function1((kotlinx.cinterop.useContents.T,%20kotlinx.cinterop.useContents.R)))/block&quot;&gt;block&lt;/a&gt; with temporary copy of this value as receiver.</source>
          <target state="translated">이 값의 임시 사본이 있는 &lt;a href=&quot;../use-contents#kotlinx.cinterop%24useContents(kotlinx.cinterop.CValue((kotlinx.cinterop.useContents.T)),%20kotlin.Function1((kotlinx.cinterop.useContents.T,%20kotlinx.cinterop.useContents.R)))/block&quot;&gt;블록&lt;/a&gt; 을 수신자로 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="94dbeffe712e1c2eb8705fe59d66bb4221e06dab" translate="yes" xml:space="preserve">
          <source>Calls the &lt;a href=&quot;use-contents#kotlinx.cinterop%24useContents%28kotlinx.cinterop.CValue%28%28kotlinx.cinterop.useContents.T%29%29%2C+kotlin.Function1%28%28kotlinx.cinterop.useContents.T%2C+kotlinx.cinterop.useContents.R%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; with temporary copy if this value as receiver.</source>
          <target state="translated">이 값이 수신자 인 경우 임시 사본으로 &lt;a href=&quot;use-contents#kotlinx.cinterop%24useContents%28kotlinx.cinterop.CValue%28%28kotlinx.cinterop.useContents.T%29%29%2C+kotlin.Function1%28%28kotlinx.cinterop.useContents.T%2C+kotlinx.cinterop.useContents.R%29%29%29%2Fblock&quot;&gt;블록&lt;/a&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="9852a8f33812c1134c8e6da645e1bdb807dcd40a" translate="yes" xml:space="preserve">
          <source>Calls the &lt;a href=&quot;use-contents#kotlinx.cinterop%24useContents(kotlinx.cinterop.CValue((kotlinx.cinterop.useContents.T)),%20kotlin.Function1((kotlinx.cinterop.useContents.T,%20kotlinx.cinterop.useContents.R)))/block&quot;&gt;block&lt;/a&gt; with temporary copy of this value as receiver.</source>
          <target state="translated">이 값의 임시 사본이 있는 &lt;a href=&quot;use-contents#kotlinx.cinterop%24useContents(kotlinx.cinterop.CValue((kotlinx.cinterop.useContents.T)),%20kotlin.Function1((kotlinx.cinterop.useContents.T,%20kotlinx.cinterop.useContents.R)))/block&quot;&gt;블록&lt;/a&gt; 을 수신자로 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="a9f7cbf9649ace2bd581cd617aa740588ac83868" translate="yes" xml:space="preserve">
          <source>Calls the &lt;a href=&quot;use-lines#kotlin.io%24useLines%28java.io.File%2C+java.nio.charset.Charset%2C+kotlin.Function1%28%28kotlin.sequences.Sequence%28%28kotlin.String%29%29%2C+kotlin.io.useLines.T%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; callback giving it a sequence of all the lines in this file and closes the reader once the processing is complete.</source>
          <target state="translated">&lt;a href=&quot;use-lines#kotlin.io%24useLines%28java.io.File%2C+java.nio.charset.Charset%2C+kotlin.Function1%28%28kotlin.sequences.Sequence%28%28kotlin.String%29%29%2C+kotlin.io.useLines.T%29%29%29%2Fblock&quot;&gt;블록&lt;/a&gt; 콜백을 호출 하여이 파일의 모든 행 시퀀스를 제공하고 처리가 완료되면 판독기를 닫습니다.</target>
        </trans-unit>
        <trans-unit id="5ade5306710622e3c8f930ff51884466e52db2fe" translate="yes" xml:space="preserve">
          <source>Calls the &lt;a href=&quot;use-lines#kotlin.io%24useLines%28java.io.Reader%2C+kotlin.Function1%28%28kotlin.sequences.Sequence%28%28kotlin.String%29%29%2C+kotlin.io.useLines.T%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; callback giving it a sequence of all the lines in this file and closes the reader once the processing is complete.</source>
          <target state="translated">&lt;a href=&quot;use-lines#kotlin.io%24useLines%28java.io.Reader%2C+kotlin.Function1%28%28kotlin.sequences.Sequence%28%28kotlin.String%29%29%2C+kotlin.io.useLines.T%29%29%29%2Fblock&quot;&gt;블록&lt;/a&gt; 콜백을 호출 하여이 파일의 모든 행 시퀀스를 제공하고 처리가 완료되면 판독기를 닫습니다.</target>
        </trans-unit>
        <trans-unit id="7641779d628967c9d3dca91996c711b5f4369b10" translate="yes" xml:space="preserve">
          <source>Calls the &lt;a href=&quot;use-lines#kotlin.io%24useLines(java.io.File,%20java.nio.charset.Charset,%20kotlin.Function1((kotlin.sequences.Sequence((kotlin.String)),%20kotlin.io.useLines.T)))/block&quot;&gt;block&lt;/a&gt; callback giving it a sequence of all the lines in this file and closes the reader once the processing is complete.</source>
          <target state="translated">이 파일에있는 모든 행의 시퀀스를 제공 하는 &lt;a href=&quot;use-lines#kotlin.io%24useLines(java.io.File,%20java.nio.charset.Charset,%20kotlin.Function1((kotlin.sequences.Sequence((kotlin.String)),%20kotlin.io.useLines.T)))/block&quot;&gt;블록&lt;/a&gt; 콜백을 호출하고 처리가 완료되면 판독기를 닫습니다.</target>
        </trans-unit>
        <trans-unit id="d2aba120e7c67b5bdfb5ca3d303cb48699ba0029" translate="yes" xml:space="preserve">
          <source>Calls the &lt;a href=&quot;use-lines#kotlin.io%24useLines(java.io.Reader,%20kotlin.Function1((kotlin.sequences.Sequence((kotlin.String)),%20kotlin.io.useLines.T)))/block&quot;&gt;block&lt;/a&gt; callback giving it a sequence of all the lines in this file and closes the reader once the processing is complete.</source>
          <target state="translated">이 파일에있는 모든 행의 시퀀스를 제공 하는 &lt;a href=&quot;use-lines#kotlin.io%24useLines(java.io.Reader,%20kotlin.Function1((kotlin.sequences.Sequence((kotlin.String)),%20kotlin.io.useLines.T)))/block&quot;&gt;블록&lt;/a&gt; 콜백을 호출하고 처리가 완료되면 판독기를 닫습니다.</target>
        </trans-unit>
        <trans-unit id="1889a6e188cd0f4fe350c88938dda5aa489e8804" translate="yes" xml:space="preserve">
          <source>Calls the specified function &lt;a href=&quot;../also#kotlin%24also%28kotlin.also.T%2C+kotlin.Function1%28%28kotlin.also.T%2C+kotlin.Unit%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; with &lt;code&gt;this&lt;/code&gt; value as its argument and returns &lt;code&gt;this&lt;/code&gt; value.</source>
          <target state="translated">지정된 함수 호출 &lt;a href=&quot;../also#kotlin%24also%28kotlin.also.T%2C+kotlin.Function1%28%28kotlin.also.T%2C+kotlin.Unit%29%29%29%2Fblock&quot;&gt;블록&lt;/a&gt; 과 &lt;code&gt;this&lt;/code&gt; 인수 및 반환 등의 값 &lt;code&gt;this&lt;/code&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="ffc5f83062a65033fb3fb5428ed9549f186874ee" translate="yes" xml:space="preserve">
          <source>Calls the specified function &lt;a href=&quot;../also#kotlin%24also(kotlin.also.T,%20kotlin.Function1((kotlin.also.T,%20kotlin.Unit)))/block&quot;&gt;block&lt;/a&gt; with &lt;code&gt;this&lt;/code&gt; value as its argument and returns &lt;code&gt;this&lt;/code&gt; value.</source>
          <target state="translated">지정된 함수 호출 &lt;a href=&quot;../also#kotlin%24also(kotlin.also.T,%20kotlin.Function1((kotlin.also.T,%20kotlin.Unit)))/block&quot;&gt;블록&lt;/a&gt; 과 &lt;code&gt;this&lt;/code&gt; 인수 및 반환 등의 값 &lt;code&gt;this&lt;/code&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="4ea4db9db43d6976110b20ce1acd16ddca65f35e" translate="yes" xml:space="preserve">
          <source>Calls the specified function &lt;a href=&quot;../apply#kotlin%24apply%28kotlin.apply.T%2C+kotlin.Function1%28%28kotlin.apply.T%2C+kotlin.Unit%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; with &lt;code&gt;this&lt;/code&gt; value as its receiver and returns &lt;code&gt;this&lt;/code&gt; value.</source>
          <target state="translated">지정된 함수 호출 &lt;a href=&quot;../apply#kotlin%24apply%28kotlin.apply.T%2C+kotlin.Function1%28%28kotlin.apply.T%2C+kotlin.Unit%29%29%29%2Fblock&quot;&gt;블록&lt;/a&gt; 과 &lt;code&gt;this&lt;/code&gt; 리시버 및 반환 등의 값 &lt;code&gt;this&lt;/code&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="f8555420120834a4078dc80bcef4a4cd29ecef03" translate="yes" xml:space="preserve">
          <source>Calls the specified function &lt;a href=&quot;../apply#kotlin%24apply(kotlin.apply.T,%20kotlin.Function1((kotlin.apply.T,%20kotlin.Unit)))/block&quot;&gt;block&lt;/a&gt; with &lt;code&gt;this&lt;/code&gt; value as its receiver and returns &lt;code&gt;this&lt;/code&gt; value.</source>
          <target state="translated">지정된 함수 호출 &lt;a href=&quot;../apply#kotlin%24apply(kotlin.apply.T,%20kotlin.Function1((kotlin.apply.T,%20kotlin.Unit)))/block&quot;&gt;블록&lt;/a&gt; 과 &lt;code&gt;this&lt;/code&gt; 리시버 및 반환 등의 값 &lt;code&gt;this&lt;/code&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="078209b9459654f8c9167df0074bae80bf4694eb" translate="yes" xml:space="preserve">
          <source>Calls the specified function &lt;a href=&quot;../let#kotlin%24let%28kotlin.let.T%2C+kotlin.Function1%28%28kotlin.let.T%2C+kotlin.let.R%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; with &lt;code&gt;this&lt;/code&gt; value as its argument and returns its result.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 값을 인수로 사용 하여 지정된 함수 &lt;a href=&quot;../let#kotlin%24let%28kotlin.let.T%2C+kotlin.Function1%28%28kotlin.let.T%2C+kotlin.let.R%29%29%29%2Fblock&quot;&gt;블록&lt;/a&gt; 을 호출 하고 결과를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d94a1c1fb801d6754021c308c6a900c4670c1ca7" translate="yes" xml:space="preserve">
          <source>Calls the specified function &lt;a href=&quot;../let#kotlin%24let(kotlin.let.T,%20kotlin.Function1((kotlin.let.T,%20kotlin.let.R)))/block&quot;&gt;block&lt;/a&gt; with &lt;code&gt;this&lt;/code&gt; value as its argument and returns its result.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 값을 인수로 사용 하여 지정된 함수 &lt;a href=&quot;../let#kotlin%24let(kotlin.let.T,%20kotlin.Function1((kotlin.let.T,%20kotlin.let.R)))/block&quot;&gt;블록&lt;/a&gt; 을 호출하고 그 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="413763cf663eeb76e4cbc6ba24b962a88418bb8c" translate="yes" xml:space="preserve">
          <source>Calls the specified function &lt;a href=&quot;../run#kotlin%24run%28kotlin.run.T%2C+kotlin.Function1%28%28kotlin.run.T%2C+kotlin.run.R%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; with &lt;code&gt;this&lt;/code&gt; value as its receiver and returns its result.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 값을 수신자로 하여 지정된 기능 &lt;a href=&quot;../run#kotlin%24run%28kotlin.run.T%2C+kotlin.Function1%28%28kotlin.run.T%2C+kotlin.run.R%29%29%29%2Fblock&quot;&gt;블록&lt;/a&gt; 을 호출 하고 결과를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="12a612c8e28140fc29ef9647026d723928878fe2" translate="yes" xml:space="preserve">
          <source>Calls the specified function &lt;a href=&quot;../run#kotlin%24run(kotlin.run.T,%20kotlin.Function1((kotlin.run.T,%20kotlin.run.R)))/block&quot;&gt;block&lt;/a&gt; with &lt;code&gt;this&lt;/code&gt; value as its receiver and returns its result.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 값을 수신자로 사용 하여 지정된 함수 &lt;a href=&quot;../run#kotlin%24run(kotlin.run.T,%20kotlin.Function1((kotlin.run.T,%20kotlin.run.R)))/block&quot;&gt;블록&lt;/a&gt; 을 호출하고 그 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ea859f4a518fc3a1215d13efa61a759c166edce2" translate="yes" xml:space="preserve">
          <source>Calls the specified function &lt;a href=&quot;../run-catching#kotlin%24runCatching%28kotlin.runCatching.T%2C+kotlin.Function1%28%28kotlin.runCatching.T%2C+kotlin.runCatching.R%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; with &lt;code&gt;this&lt;/code&gt; value as its receiver and returns its encapsulated result if invocation was successful, catching and encapsulating any thrown exception as a failure.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 값을 수신자로 사용 하여 지정된 함수 &lt;a href=&quot;../run-catching#kotlin%24runCatching%28kotlin.runCatching.T%2C+kotlin.Function1%28%28kotlin.runCatching.T%2C+kotlin.runCatching.R%29%29%29%2Fblock&quot;&gt;블록&lt;/a&gt; 을 호출하고 호출이 성공한 경우 캡슐화 된 결과를 리턴하고, 발생한 예외를 캐치 및 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="6c950c8cad5ae4a1157f188f4b2bc9789a0e2a03" translate="yes" xml:space="preserve">
          <source>Calls the specified function &lt;a href=&quot;../run-catching#kotlin%24runCatching(kotlin.runCatching.T,%20kotlin.Function1((kotlin.runCatching.T,%20kotlin.runCatching.R)))/block&quot;&gt;block&lt;/a&gt; with &lt;code&gt;this&lt;/code&gt; value as its receiver and returns its encapsulated result if invocation was successful, catching any &lt;a href=&quot;../-throwable/index#kotlin.Throwable&quot;&gt;Throwable&lt;/a&gt; exception that was thrown from the &lt;a href=&quot;../run-catching#kotlin%24runCatching(kotlin.runCatching.T,%20kotlin.Function1((kotlin.runCatching.T,%20kotlin.runCatching.R)))/block&quot;&gt;block&lt;/a&gt; function execution and encapsulating it as a failure.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 값을 수신자로 사용 하여 지정된 함수 &lt;a href=&quot;../run-catching#kotlin%24runCatching(kotlin.runCatching.T,%20kotlin.Function1((kotlin.runCatching.T,%20kotlin.runCatching.R)))/block&quot;&gt;블록&lt;/a&gt; 을 호출하고 호출이 성공한 경우 캡슐화 된 결과를 반환 하여 &lt;a href=&quot;../run-catching#kotlin%24runCatching(kotlin.runCatching.T,%20kotlin.Function1((kotlin.runCatching.T,%20kotlin.runCatching.R)))/block&quot;&gt;블록&lt;/a&gt; 함수 실행 에서 throw 된 모든 &lt;a href=&quot;../-throwable/index#kotlin.Throwable&quot;&gt;Throwable&lt;/a&gt; 예외를 포착 하고이를 실패로 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="27c2788fee2c255105b9cd867f454b646391c644" translate="yes" xml:space="preserve">
          <source>Calls the specified function &lt;a href=&quot;also#kotlin%24also%28kotlin.also.T%2C+kotlin.Function1%28%28kotlin.also.T%2C+kotlin.Unit%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; with &lt;code&gt;this&lt;/code&gt; value as its argument and returns &lt;code&gt;this&lt;/code&gt; value.</source>
          <target state="translated">지정된 함수 호출 &lt;a href=&quot;also#kotlin%24also%28kotlin.also.T%2C+kotlin.Function1%28%28kotlin.also.T%2C+kotlin.Unit%29%29%29%2Fblock&quot;&gt;블록&lt;/a&gt; 과 &lt;code&gt;this&lt;/code&gt; 인수 및 반환 등의 값 &lt;code&gt;this&lt;/code&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="c5cb87faa3b7d5deef0d5037fde19ccc9e576f83" translate="yes" xml:space="preserve">
          <source>Calls the specified function &lt;a href=&quot;also#kotlin%24also(kotlin.also.T,%20kotlin.Function1((kotlin.also.T,%20kotlin.Unit)))/block&quot;&gt;block&lt;/a&gt; with &lt;code&gt;this&lt;/code&gt; value as its argument and returns &lt;code&gt;this&lt;/code&gt; value.</source>
          <target state="translated">지정된 함수 호출 &lt;a href=&quot;also#kotlin%24also(kotlin.also.T,%20kotlin.Function1((kotlin.also.T,%20kotlin.Unit)))/block&quot;&gt;블록&lt;/a&gt; 과 &lt;code&gt;this&lt;/code&gt; 인수 및 반환 등의 값 &lt;code&gt;this&lt;/code&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="96d8292022e87d6802505e7709d15b67e7a571b1" translate="yes" xml:space="preserve">
          <source>Calls the specified function &lt;a href=&quot;apply#kotlin%24apply%28kotlin.apply.T%2C+kotlin.Function1%28%28kotlin.apply.T%2C+kotlin.Unit%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; with &lt;code&gt;this&lt;/code&gt; value as its receiver and returns &lt;code&gt;this&lt;/code&gt; value.</source>
          <target state="translated">지정된 함수 호출 &lt;a href=&quot;apply#kotlin%24apply%28kotlin.apply.T%2C+kotlin.Function1%28%28kotlin.apply.T%2C+kotlin.Unit%29%29%29%2Fblock&quot;&gt;블록&lt;/a&gt; 과 &lt;code&gt;this&lt;/code&gt; 리시버 및 반환 등의 값 &lt;code&gt;this&lt;/code&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="fe675097d84b997131f92033e3778ab8e56f6670" translate="yes" xml:space="preserve">
          <source>Calls the specified function &lt;a href=&quot;apply#kotlin%24apply(kotlin.apply.T,%20kotlin.Function1((kotlin.apply.T,%20kotlin.Unit)))/block&quot;&gt;block&lt;/a&gt; with &lt;code&gt;this&lt;/code&gt; value as its receiver and returns &lt;code&gt;this&lt;/code&gt; value.</source>
          <target state="translated">지정된 함수 호출 &lt;a href=&quot;apply#kotlin%24apply(kotlin.apply.T,%20kotlin.Function1((kotlin.apply.T,%20kotlin.Unit)))/block&quot;&gt;블록&lt;/a&gt; 과 &lt;code&gt;this&lt;/code&gt; 리시버 및 반환 등의 값 &lt;code&gt;this&lt;/code&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="45184693a76689b4b0ff8737b19972165c51ecf5" translate="yes" xml:space="preserve">
          <source>Calls the specified function &lt;a href=&quot;let#kotlin%24let%28kotlin.let.T%2C+kotlin.Function1%28%28kotlin.let.T%2C+kotlin.let.R%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; with &lt;code&gt;this&lt;/code&gt; value as its argument and returns its result.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 값을 인수로 사용 하여 지정된 함수 &lt;a href=&quot;let#kotlin%24let%28kotlin.let.T%2C+kotlin.Function1%28%28kotlin.let.T%2C+kotlin.let.R%29%29%29%2Fblock&quot;&gt;블록&lt;/a&gt; 을 호출 하고 결과를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="2cd09c65e920473de74f37f791d2d6974af63c14" translate="yes" xml:space="preserve">
          <source>Calls the specified function &lt;a href=&quot;let#kotlin%24let(kotlin.let.T,%20kotlin.Function1((kotlin.let.T,%20kotlin.let.R)))/block&quot;&gt;block&lt;/a&gt; with &lt;code&gt;this&lt;/code&gt; value as its argument and returns its result.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 값을 인수로 사용 하여 지정된 함수 &lt;a href=&quot;let#kotlin%24let(kotlin.let.T,%20kotlin.Function1((kotlin.let.T,%20kotlin.let.R)))/block&quot;&gt;블록&lt;/a&gt; 을 호출하고 그 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="61e00fb8b32476486f65ff02dfd2c83a03e55788" translate="yes" xml:space="preserve">
          <source>Calls the specified function &lt;a href=&quot;run#kotlin%24run%28kotlin.Function0%28%28kotlin.run.R%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; and returns its result.</source>
          <target state="translated">지정된 함수 &lt;a href=&quot;run#kotlin%24run%28kotlin.Function0%28%28kotlin.run.R%29%29%29%2Fblock&quot;&gt;블록을&lt;/a&gt; 호출 하고 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2f6f3e400e3e582d57d57f03511dcc626eae7637" translate="yes" xml:space="preserve">
          <source>Calls the specified function &lt;a href=&quot;run#kotlin%24run%28kotlin.run.T%2C+kotlin.Function1%28%28kotlin.run.T%2C+kotlin.run.R%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; with &lt;code&gt;this&lt;/code&gt; value as its receiver and returns its result.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 값을 수신자로 하여 지정된 기능 &lt;a href=&quot;run#kotlin%24run%28kotlin.run.T%2C+kotlin.Function1%28%28kotlin.run.T%2C+kotlin.run.R%29%29%29%2Fblock&quot;&gt;블록&lt;/a&gt; 을 호출 하고 결과를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="a5abd3bf2547ca51ee2777f95feb3288a2bda079" translate="yes" xml:space="preserve">
          <source>Calls the specified function &lt;a href=&quot;run#kotlin%24run(kotlin.Function0((kotlin.run.R)))/block&quot;&gt;block&lt;/a&gt; and returns its result.</source>
          <target state="translated">지정된 함수 &lt;a href=&quot;run#kotlin%24run(kotlin.Function0((kotlin.run.R)))/block&quot;&gt;블록을&lt;/a&gt; 호출하고 그 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8514d9dfffba91d4b5b353f2e13b2edb91c15585" translate="yes" xml:space="preserve">
          <source>Calls the specified function &lt;a href=&quot;run#kotlin%24run(kotlin.run.T,%20kotlin.Function1((kotlin.run.T,%20kotlin.run.R)))/block&quot;&gt;block&lt;/a&gt; with &lt;code&gt;this&lt;/code&gt; value as its receiver and returns its result.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 값을 수신자로 사용 하여 지정된 함수 &lt;a href=&quot;run#kotlin%24run(kotlin.run.T,%20kotlin.Function1((kotlin.run.T,%20kotlin.run.R)))/block&quot;&gt;블록&lt;/a&gt; 을 호출하고 그 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3b3fcd284f88793a9b63d88de44e6d5308af1e20" translate="yes" xml:space="preserve">
          <source>Calls the specified function &lt;a href=&quot;run-catching#kotlin%24runCatching%28kotlin.Function0%28%28kotlin.runCatching.R%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; and returns its encapsulated result if invocation was successful, catching and encapsulating any thrown exception as a failure.</source>
          <target state="translated">호출이 성공 하면 지정된 함수 &lt;a href=&quot;run-catching#kotlin%24runCatching%28kotlin.Function0%28%28kotlin.runCatching.R%29%29%29%2Fblock&quot;&gt;블록을&lt;/a&gt; 호출하고 캡슐화 된 결과를 리턴하고, 발생한 예외를 캐치하여 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="20026c2f1eb5224bc2c942ca5c2ec63f2a4a349d" translate="yes" xml:space="preserve">
          <source>Calls the specified function &lt;a href=&quot;run-catching#kotlin%24runCatching%28kotlin.runCatching.T%2C+kotlin.Function1%28%28kotlin.runCatching.T%2C+kotlin.runCatching.R%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; with &lt;code&gt;this&lt;/code&gt; value as its receiver and returns its encapsulated result if invocation was successful, catching and encapsulating any thrown exception as a failure.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 값을 수신자로 사용 하여 지정된 함수 &lt;a href=&quot;run-catching#kotlin%24runCatching%28kotlin.runCatching.T%2C+kotlin.Function1%28%28kotlin.runCatching.T%2C+kotlin.runCatching.R%29%29%29%2Fblock&quot;&gt;블록&lt;/a&gt; 을 호출하고 호출이 성공한 경우 캡슐화 된 결과를 리턴하고, 발생한 예외를 캐치 및 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="9e44496e77cdbedf1f9acc6231a02f20aaea70a5" translate="yes" xml:space="preserve">
          <source>Calls the specified function &lt;a href=&quot;run-catching#kotlin%24runCatching(kotlin.Function0((kotlin.runCatching.R)))/block&quot;&gt;block&lt;/a&gt; and returns its encapsulated result if invocation was successful, catching any &lt;a href=&quot;-throwable/index#kotlin.Throwable&quot;&gt;Throwable&lt;/a&gt; exception that was thrown from the &lt;a href=&quot;run-catching#kotlin%24runCatching(kotlin.Function0((kotlin.runCatching.R)))/block&quot;&gt;block&lt;/a&gt; function execution and encapsulating it as a failure.</source>
          <target state="translated">지정된 함수 &lt;a href=&quot;run-catching#kotlin%24runCatching(kotlin.Function0((kotlin.runCatching.R)))/block&quot;&gt;블록을&lt;/a&gt; 호출하고 호출이 성공하면 캡슐화 된 결과를 반환하고 , &lt;a href=&quot;run-catching#kotlin%24runCatching(kotlin.Function0((kotlin.runCatching.R)))/block&quot;&gt;블록&lt;/a&gt; 함수 실행 에서 throw 된 &lt;a href=&quot;-throwable/index#kotlin.Throwable&quot;&gt;Throwable&lt;/a&gt; 예외를 포착 하고이를 실패로 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="ed7300a67595764d318c95df0168542979bfaa75" translate="yes" xml:space="preserve">
          <source>Calls the specified function &lt;a href=&quot;run-catching#kotlin%24runCatching(kotlin.runCatching.T,%20kotlin.Function1((kotlin.runCatching.T,%20kotlin.runCatching.R)))/block&quot;&gt;block&lt;/a&gt; with &lt;code&gt;this&lt;/code&gt; value as its receiver and returns its encapsulated result if invocation was successful, catching any &lt;a href=&quot;-throwable/index#kotlin.Throwable&quot;&gt;Throwable&lt;/a&gt; exception that was thrown from the &lt;a href=&quot;run-catching#kotlin%24runCatching(kotlin.runCatching.T,%20kotlin.Function1((kotlin.runCatching.T,%20kotlin.runCatching.R)))/block&quot;&gt;block&lt;/a&gt; function execution and encapsulating it as a failure.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 값을 수신자로 사용 하여 지정된 함수 &lt;a href=&quot;run-catching#kotlin%24runCatching(kotlin.runCatching.T,%20kotlin.Function1((kotlin.runCatching.T,%20kotlin.runCatching.R)))/block&quot;&gt;블록&lt;/a&gt; 을 호출하고 호출이 성공한 경우 캡슐화 된 결과를 반환 하여 &lt;a href=&quot;run-catching#kotlin%24runCatching(kotlin.runCatching.T,%20kotlin.Function1((kotlin.runCatching.T,%20kotlin.runCatching.R)))/block&quot;&gt;블록&lt;/a&gt; 함수 실행 에서 throw 된 모든 &lt;a href=&quot;-throwable/index#kotlin.Throwable&quot;&gt;Throwable&lt;/a&gt; 예외를 포착 하고이를 실패로 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="784bc3faccb4d060019a3bd80a8875afbd2bb4a9" translate="yes" xml:space="preserve">
          <source>Calls the specified function &lt;a href=&quot;with#kotlin%24with%28kotlin.with.T%2C+kotlin.Function1%28%28kotlin.with.T%2C+kotlin.with.R%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; with the given &lt;a href=&quot;with#kotlin%24with%28kotlin.with.T%2C+kotlin.Function1%28%28kotlin.with.T%2C+kotlin.with.R%29%29%29%2Freceiver&quot;&gt;receiver&lt;/a&gt; as its receiver and returns its result.</source>
          <target state="translated">주어진 &lt;a href=&quot;with#kotlin%24with%28kotlin.with.T%2C+kotlin.Function1%28%28kotlin.with.T%2C+kotlin.with.R%29%29%29%2Freceiver&quot;&gt;수신자&lt;/a&gt; 를 수신자 로 하여 지정된 기능 &lt;a href=&quot;with#kotlin%24with%28kotlin.with.T%2C+kotlin.Function1%28%28kotlin.with.T%2C+kotlin.with.R%29%29%29%2Fblock&quot;&gt;블록&lt;/a&gt; 을 호출 하고 결과를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="5200d99ada72e1c325bc0c10302bd6c6c1f6ed11" translate="yes" xml:space="preserve">
          <source>Calls the specified function &lt;a href=&quot;with#kotlin%24with(kotlin.with.T,%20kotlin.Function1((kotlin.with.T,%20kotlin.with.R)))/block&quot;&gt;block&lt;/a&gt; with the given &lt;a href=&quot;with#kotlin%24with(kotlin.with.T,%20kotlin.Function1((kotlin.with.T,%20kotlin.with.R)))/receiver&quot;&gt;receiver&lt;/a&gt; as its receiver and returns its result.</source>
          <target state="translated">지정된 &lt;a href=&quot;with#kotlin%24with(kotlin.with.T,%20kotlin.Function1((kotlin.with.T,%20kotlin.with.R)))/receiver&quot;&gt;수신기&lt;/a&gt; 를 수신기 로 사용 하여 지정된 함수 &lt;a href=&quot;with#kotlin%24with(kotlin.with.T,%20kotlin.Function1((kotlin.with.T,%20kotlin.with.R)))/block&quot;&gt;블록&lt;/a&gt; 을 호출하고 그 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9f9c8aae32b643ccb905a50a88b964fcc563ff71" translate="yes" xml:space="preserve">
          <source>Calls this callable with the specified list of arguments and returns the result. Throws an exception if the number of specified arguments is not equal to the size of &lt;a href=&quot;../-k-callable/parameters&quot;&gt;parameters&lt;/a&gt;, or if their types do not match the types of the parameters.</source>
          <target state="translated">지정된 인수 목록을 사용하여이 콜 러블을 호출하고 결과를 반환합니다. 지정된 인수의 수가 &lt;a href=&quot;../-k-callable/parameters&quot;&gt;parameters&lt;/a&gt; 크기와 같지 않거나 유형이 매개 변수 유형과 일치하지 않는 경우 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="ddcef407507cfef2cb27a753812e5d889553da91" translate="yes" xml:space="preserve">
          <source>Calls this callable with the specified list of arguments and returns the result. Throws an exception if the number of specified arguments is not equal to the size of &lt;a href=&quot;parameters&quot;&gt;parameters&lt;/a&gt;, or if their types do not match the types of the parameters.</source>
          <target state="translated">지정된 인수 목록을 사용하여이 콜 러블을 호출하고 결과를 반환합니다. 지정된 인수의 수가 &lt;a href=&quot;parameters&quot;&gt;parameters&lt;/a&gt; 크기와 같지 않거나 유형이 매개 변수 유형과 일치하지 않는 경우 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="eb6c73d37b42595e7a7a81d2958c024f90c21195" translate="yes" xml:space="preserve">
          <source>Calls this callable with the specified list of arguments and returns the result. Throws an exception if the number of specified arguments is not equal to the size of &lt;a href=&quot;parameters#kotlin.reflect.KCallable%24parameters&quot;&gt;parameters&lt;/a&gt;, or if their types do not match the types of the parameters.</source>
          <target state="translated">지정된 인수 목록으로이 호출 가능을 호출하고 결과를 리턴합니다. 지정된 인수의 수가 &lt;a href=&quot;parameters#kotlin.reflect.KCallable%24parameters&quot;&gt;매개 변수&lt;/a&gt; 의 크기와 같지 않거나 해당 유형이 매개 변수 유형과 일치하지 않으면 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="8afb2db5cc87a799faf80833c9012f2a02d23010" translate="yes" xml:space="preserve">
          <source>Calls this callable with the specified mapping of parameters to arguments and returns the result. If a parameter is not found in the mapping and is not optional (as per &lt;a href=&quot;../-k-parameter/is-optional&quot;&gt;KParameter.isOptional&lt;/a&gt;), or its type does not match the type of the provided value, an exception is thrown.</source>
          <target state="translated">인수에 대한 매개 변수 매핑을 지정하여이 콜 러블을 호출하고 결과를 반환합니다. 매개 변수가 매핑에서 발견되지 않고 선택적이 아니 거나 ( &lt;a href=&quot;../-k-parameter/is-optional&quot;&gt;KParameter.isOptional에 따라&lt;/a&gt; ) 해당 유형이 제공된 값의 유형과 일치하지 않으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6dce76d0ae19257aa86c427d1a3622b123e09781" translate="yes" xml:space="preserve">
          <source>Calls this callable with the specified mapping of parameters to arguments and returns the result. If a parameter is not found in the mapping and is not optional (as per &lt;a href=&quot;../-k-parameter/is-optional#kotlin.reflect.KParameter%24isOptional&quot;&gt;KParameter.isOptional&lt;/a&gt;), or its type does not match the type of the provided value, an exception is thrown.</source>
          <target state="translated">지정된 매개 변수를 인수에 맵핑하여이 호출 가능을 호출하고 결과를 리턴합니다. 맵핑에 매개 변수가없고 선택 사항이 아니 거나 ( &lt;a href=&quot;../-k-parameter/is-optional#kotlin.reflect.KParameter%24isOptional&quot;&gt;KParameter.isOptional에 따라&lt;/a&gt; ) 해당 유형이 제공된 값의 유형과 일치하지 않으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="658854a7f04bb269a4ab8b8fa7d0698e8a68d048" translate="yes" xml:space="preserve">
          <source>Calls to the function will be translated to indexing operation (square brackets) on the receiver with &lt;a href=&quot;get#kotlin.js.Json%24get%28kotlin.String%29%2FpropertyName&quot;&gt;propertyName&lt;/a&gt; as the argument.</source>
          <target state="translated">함수에 대한 호출은 &lt;a href=&quot;get#kotlin.js.Json%24get%28kotlin.String%29%2FpropertyName&quot;&gt;속성&lt;/a&gt; 이름을 인수로하여 수신자에서 색인 작성 조작 (대괄호)으로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="4054b8674e66a28f5bcd000124d242189e7248a5" translate="yes" xml:space="preserve">
          <source>Calls to the function will be translated to indexing operation (square brackets) on the receiver with &lt;a href=&quot;get#kotlin.js.Json%24get(kotlin.String)/propertyName&quot;&gt;propertyName&lt;/a&gt; as the argument.</source>
          <target state="translated">함수 호출은 &lt;a href=&quot;get#kotlin.js.Json%24get(kotlin.String)/propertyName&quot;&gt;propertyName&lt;/a&gt; 을 인수로 사용하여 수신자의 인덱싱 작업 (대괄호)으로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="5742a45c495453ef8905065dcf3c63d2eacbb105" translate="yes" xml:space="preserve">
          <source>CallsInPlace</source>
          <target state="translated">CallsInPlace</target>
        </trans-unit>
        <trans-unit id="95efde3ceee47a98cbb5b9bd821507624396f907" translate="yes" xml:space="preserve">
          <source>Can I use Kotlin for Android development?</source>
          <target state="translated">Android 개발에 Kotlin을 사용할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="148f7ac58df24f13b1f6cc0a60796f4f33cd212c" translate="yes" xml:space="preserve">
          <source>Can I use Kotlin for desktop development?</source>
          <target state="translated">데스크탑 개발에 Kotlin을 사용할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="08f90b1cc445d8ce0dd63b8cd07c857dbc92b5d2" translate="yes" xml:space="preserve">
          <source>Can I use Kotlin for native development?</source>
          <target state="translated">네이티브 개발에 Kotlin을 사용할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="a52843acfecd2cf845ec7b9e2b53bc422496c48c" translate="yes" xml:space="preserve">
          <source>Can I use Kotlin for server-side development?</source>
          <target state="translated">Kotlin을 서버 측 개발에 사용할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="533a1197857a6f927ea423c7b5a49a935adb8221" translate="yes" xml:space="preserve">
          <source>Can I use Kotlin for web development?</source>
          <target state="translated">웹 개발에 Kotlin을 사용할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="360a50f0c5f3ebe39197bdda61c8cfca5bc66d4c" translate="yes" xml:space="preserve">
          <source>Can be called from JavaScript like this:</source>
          <target state="translated">다음과 같이 JavaScript에서 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e66b23e88be65c506d59a796243b08f90de6931b" translate="yes" xml:space="preserve">
          <source>Can be safely passed between workers, but &lt;a href=&quot;value&quot;&gt;value&lt;/a&gt; can only be accessed on the worker &lt;a href=&quot;index&quot;&gt;WorkerBoundReference&lt;/a&gt; was created on, unless the referred object is frozen too.</source>
          <target state="translated">워커간에 안전하게 전달할 수 있지만 참조 된 객체도 고정되지 않는 한 &lt;a href=&quot;index&quot;&gt;WorkerBoundReference&lt;/a&gt; 가 생성 된 워커에서만 &lt;a href=&quot;value&quot;&gt;값에&lt;/a&gt; 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2499f61f64f34b66ca45aa95905f2afd3ba979f4" translate="yes" xml:space="preserve">
          <source>Can be used as a function that takes 0 arguments and returns the value of the property type &lt;a href=&quot;-getter#R&quot;&gt;R&lt;/a&gt;.</source>
          <target state="translated">0 개의 인수를 사용하고 속성 유형 &lt;a href=&quot;-getter#R&quot;&gt;R&lt;/a&gt; 의 값을 반환하는 함수로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="462dfa03a916d1dcf1056942e46780c805e410cc" translate="yes" xml:space="preserve">
          <source>Can be used as a function that takes 0 arguments and returns the value of the property type &lt;a href=&quot;-getter#V&quot;&gt;V&lt;/a&gt;.</source>
          <target state="translated">0 인수를 취하고 속성 유형 &lt;a href=&quot;-getter#V&quot;&gt;V&lt;/a&gt; 의 값을 반환하는 함수로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1e80567b1ef5fffe902f192fbecd0fbc3aacc59f" translate="yes" xml:space="preserve">
          <source>Can be used as a function that takes an argument of type &lt;a href=&quot;-getter#D&quot;&gt;D&lt;/a&gt; (the first receiver), an argument of type &lt;a href=&quot;-getter#E&quot;&gt;E&lt;/a&gt; (the second receiver) and returns the value of the property type &lt;a href=&quot;-getter#R&quot;&gt;R&lt;/a&gt;.</source>
          <target state="translated">유형 &lt;a href=&quot;-getter#D&quot;&gt;D&lt;/a&gt; 의 인수 (첫 번째 수신자), 유형 &lt;a href=&quot;-getter#E&quot;&gt;E&lt;/a&gt; 의 인수 (두 번째 수신자)를 사용하여 특성 유형 &lt;a href=&quot;-getter#R&quot;&gt;R&lt;/a&gt; 의 값을 리턴 하는 함수로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9ca3802ad07f55ab1e95adbe2fb1ae42041c68ae" translate="yes" xml:space="preserve">
          <source>Can be used as a function that takes an argument of type &lt;a href=&quot;-getter#D&quot;&gt;D&lt;/a&gt; (the first receiver), an argument of type &lt;a href=&quot;-getter#E&quot;&gt;E&lt;/a&gt; (the second receiver) and returns the value of the property type &lt;a href=&quot;-getter#V&quot;&gt;V&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;-getter#D&quot;&gt;D&lt;/a&gt; 유형의 인수 (첫 번째 수신자), &lt;a href=&quot;-getter#E&quot;&gt;E&lt;/a&gt; 유형의 인수 (두 번째 수신자) 를 취하고 속성 유형 &lt;a href=&quot;-getter#V&quot;&gt;V&lt;/a&gt; 의 값을 반환 하는 함수로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9dbc541fe3c7dd68d1e4e23a374201f0ebf0aa5b" translate="yes" xml:space="preserve">
          <source>Can be used as a function that takes an argument of type &lt;a href=&quot;-getter#T&quot;&gt;T&lt;/a&gt; (the receiver) and returns the value of the property type &lt;a href=&quot;-getter#R&quot;&gt;R&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;-getter#T&quot;&gt;T&lt;/a&gt; 유형 (수신자) 의 인수 를 사용하고 속성 유형 &lt;a href=&quot;-getter#R&quot;&gt;R&lt;/a&gt; 의 값을 반환 하는 함수로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="beba68933be9fab0ec857b78311b31d55cf484f0" translate="yes" xml:space="preserve">
          <source>Can be used as a function that takes an argument of type &lt;a href=&quot;-getter#T&quot;&gt;T&lt;/a&gt; (the receiver) and returns the value of the property type &lt;a href=&quot;-getter#V&quot;&gt;V&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;-getter#T&quot;&gt;T&lt;/a&gt; 유형 (수신자) 의 인수를 취하고 속성 유형 &lt;a href=&quot;-getter#V&quot;&gt;V&lt;/a&gt; 의 값을 반환 하는 함수로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eb03f6cacb746652107428acca7dacd8ec8429f8" translate="yes" xml:space="preserve">
          <source>Can be used as a function that takes an argument of type &lt;a href=&quot;-setter#D&quot;&gt;D&lt;/a&gt; (the first receiver), an argument of type &lt;a href=&quot;-setter#E&quot;&gt;E&lt;/a&gt; (the second receiver), and the new property value and returns &lt;a href=&quot;../../kotlin/-unit/index#kotlin.Unit&quot;&gt;Unit&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;-setter#D&quot;&gt;D&lt;/a&gt; 유형의 인수 (첫 번째 수신자), &lt;a href=&quot;-setter#E&quot;&gt;E&lt;/a&gt; 유형의 인수 (두 번째 수신자) 및 새 특성 값 을 가져 와서 &lt;a href=&quot;../../kotlin/-unit/index#kotlin.Unit&quot;&gt;Unit을&lt;/a&gt; 리턴 하는 함수로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ae3115f15974deda92fe9f96be1fea591abfc2d5" translate="yes" xml:space="preserve">
          <source>Can be used as a function that takes new property value as an argument and returns &lt;a href=&quot;../../kotlin/-unit/index#kotlin.Unit&quot;&gt;Unit&lt;/a&gt;.</source>
          <target state="translated">새로운 속성 값을 인수로 받아서 &lt;a href=&quot;../../kotlin/-unit/index#kotlin.Unit&quot;&gt;Unit을&lt;/a&gt; 반환하는 함수로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2ca851a6bf9d692daa6259a9504e49f491303de2" translate="yes" xml:space="preserve">
          <source>Can be used as a function that takes the receiver and the new property value as arguments and returns &lt;a href=&quot;../../kotlin/-unit/index#kotlin.Unit&quot;&gt;Unit&lt;/a&gt;.</source>
          <target state="translated">수신자와 새로운 속성 값을 인수로 받아서 &lt;a href=&quot;../../kotlin/-unit/index#kotlin.Unit&quot;&gt;Unit을&lt;/a&gt; 반환하는 함수로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7211c19d616b685daa3bee14cbe71c749d10e4e0" translate="yes" xml:space="preserve">
          <source>CanPlayTypeResult</source>
          <target state="translated">CanPlayTypeResult</target>
        </trans-unit>
        <trans-unit id="f311addd351f862eae7f810f286dddb63f875658" translate="yes" xml:space="preserve">
          <source>Cancellable suspending functions throw &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-cancellation-exception/index.html&quot;&gt;CancellationException&lt;/a&gt; on cancellation which can be handled in the usual way. For example, &lt;code&gt;try {...} finally {...}&lt;/code&gt; expression and Kotlin &lt;code&gt;use&lt;/code&gt; function execute their finalization actions normally when a coroutine is cancelled:</source>
          <target state="translated">취소 가능한 일시 중단 함수 는 일반적인 방법으로 처리 할 수있는 취소시 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-cancellation-exception/index.html&quot;&gt;CancellationException&lt;/a&gt; 을 발생시킵니다. 예를 들어 &lt;code&gt;try {...} finally {...}&lt;/code&gt; 표현식을 시도 하고 Kotlin &lt;code&gt;use&lt;/code&gt; 함수는 코 루틴이 취소 될 때 정상적으로 종료 조치를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="fe5ceba59e434540bf707325daf265a730010867" translate="yes" xml:space="preserve">
          <source>Cancellation and Timeouts</source>
          <target state="translated">취소 및 시간 초과</target>
        </trans-unit>
        <trans-unit id="b910ee31a35d40d4412d731fa9087eb81dfa6d64" translate="yes" xml:space="preserve">
          <source>Cancellation and exceptions</source>
          <target state="translated">취소 및 예외</target>
        </trans-unit>
        <trans-unit id="bef7bb5e57e5a92b8be6213bc977ef4ea4184ce0" translate="yes" xml:space="preserve">
          <source>Cancellation and timeouts</source>
          <target state="translated">취소 및 타임 아웃</target>
        </trans-unit>
        <trans-unit id="e138f6c99c5aa83be543b10b0ca85c2c01e772b9" translate="yes" xml:space="preserve">
          <source>Cancellation exceptions are transparent and are unwrapped by default:</source>
          <target state="translated">취소 예외는 투명하며 기본적으로 언 래핑됩니다.</target>
        </trans-unit>
        <trans-unit id="0e726cdbe302223fdfbec98285ec520b533b2180" translate="yes" xml:space="preserve">
          <source>Cancellation exceptions are transparent and unwrapped by default:</source>
          <target state="translated">취소 예외는 기본적으로 투명하고 래핑되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="61d367778c32e9ef072df9163bc2b3e7c0641802" translate="yes" xml:space="preserve">
          <source>Cancellation is always propagated through coroutines hierarchy:</source>
          <target state="translated">취소는 항상 코 루틴 계층을 통해 전파됩니다.</target>
        </trans-unit>
        <trans-unit id="50c49fe010016b533aec86340ec9452f83af59c6" translate="yes" xml:space="preserve">
          <source>Cancellation is closely related to exceptions. Coroutines internally use &lt;code&gt;CancellationException&lt;/code&gt; for cancellation, these exceptions are ignored by all handlers, so they should be used only as the source of additional debug information, which can be obtained by &lt;code&gt;catch&lt;/code&gt; block. When a coroutine is cancelled using &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/cancel.html&quot;&gt;Job.cancel&lt;/a&gt;, it terminates, but it does not cancel its parent.</source>
          <target state="translated">취소는 예외와 밀접한 관련이 있습니다. 코 루틴은 내부적으로 &lt;code&gt;CancellationException&lt;/code&gt; 를 위해 CancellationException 을 사용합니다 . 이러한 예외는 모든 핸들러에서 무시되므로 &lt;code&gt;catch&lt;/code&gt; 블록에서 얻을 수있는 추가 디버그 정보의 소스로만 사용해야합니다 . &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/cancel.html&quot;&gt;Job.cancel을&lt;/a&gt; 사용하여 코 루틴을 취소 하면 종료되지만 부모는 취소되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="750aa75447df039f202611427dbb0083059a1aa1" translate="yes" xml:space="preserve">
          <source>Cancellation is cooperative</source>
          <target state="translated">취소는 협조적입니다</target>
        </trans-unit>
        <trans-unit id="af14cd9b3ef3f2d110e66bdaac2d65cd831b9258" translate="yes" xml:space="preserve">
          <source>Cancellation is tightly bound with exceptions. Coroutines internally use &lt;code&gt;CancellationException&lt;/code&gt; for cancellation, these exceptions are ignored by all handlers, so they should be used only as the source of additional debug information, which can be obtained by &lt;code&gt;catch&lt;/code&gt; block. When a coroutine is cancelled using &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/cancel.html&quot;&gt;Job.cancel&lt;/a&gt; without a cause, it terminates, but it does not cancel its parent. Cancelling without cause is a mechanism for parent to cancel its children without cancelling itself.</source>
          <target state="translated">취소는 예외가 있습니다. 코 루틴은 &lt;code&gt;CancellationException&lt;/code&gt; 위해 내부적으로 CancellationException 을 사용하므로 이러한 예외는 모든 처리기에서 무시되므로 &lt;code&gt;catch&lt;/code&gt; 블록 으로 얻을 수있는 추가 디버그 정보의 소스로만 사용해야합니다 . 원인없이 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/cancel.html&quot;&gt;Job.cancel&lt;/a&gt; 을 사용하여 코 루틴을 취소 하면 종료되지만 상위는 취소하지 않습니다. 이유없이 취소하는 것은 부모가 스스로를 취소하지 않고 자식을 취소하는 메커니즘입니다.</target>
        </trans-unit>
        <trans-unit id="8fe9cb2f4c068f9a53d28beb7e018a9bdfa65f1f" translate="yes" xml:space="preserve">
          <source>CancellationException</source>
          <target state="translated">CancellationException</target>
        </trans-unit>
        <trans-unit id="8f5bb7c3df9532ba67a3064437dfd961e456af82" translate="yes" xml:space="preserve">
          <source>Cancelling coroutine execution</source>
          <target state="translated">코 루틴 실행 취소</target>
        </trans-unit>
        <trans-unit id="f4a22d2703e3410da551d71a6a9f534ae02e9d30" translate="yes" xml:space="preserve">
          <source>Cannot be used in an inline function, to avoid binary compatibility issues.</source>
          <target state="translated">이진 호환성 문제를 피하기 위해 인라인 함수에서 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="5f8df748391820d506d96f090af9502a82b32c12" translate="yes" xml:space="preserve">
          <source>CanvasCompositing</source>
          <target state="translated">CanvasCompositing</target>
        </trans-unit>
        <trans-unit id="09942dc0221982f9890a721ea9f36de0a0e818a1" translate="yes" xml:space="preserve">
          <source>CanvasDirection</source>
          <target state="translated">CanvasDirection</target>
        </trans-unit>
        <trans-unit id="8003d7bd1cce03545167120ec47fae8bb4fd91bc" translate="yes" xml:space="preserve">
          <source>CanvasDrawImage</source>
          <target state="translated">CanvasDrawImage</target>
        </trans-unit>
        <trans-unit id="a7732c95e9547581d321c33e851ac915eb0c36fc" translate="yes" xml:space="preserve">
          <source>CanvasDrawPath</source>
          <target state="translated">CanvasDrawPath</target>
        </trans-unit>
        <trans-unit id="4cdc78c4d8f41c91bc82cadd87236babc0770643" translate="yes" xml:space="preserve">
          <source>CanvasFillRule</source>
          <target state="translated">CanvasFillRule</target>
        </trans-unit>
        <trans-unit id="47d85eb146ab47af64e67047d7b645121b5f2b8e" translate="yes" xml:space="preserve">
          <source>CanvasFillStrokeStyles</source>
          <target state="translated">CanvasFillStrokeStyles</target>
        </trans-unit>
        <trans-unit id="621b992ab00c21bac72e0f790c3f252cf5a61f87" translate="yes" xml:space="preserve">
          <source>CanvasFilters</source>
          <target state="translated">CanvasFilters</target>
        </trans-unit>
        <trans-unit id="d0160ae7ea0f13645922c9389a913a3bc5603942" translate="yes" xml:space="preserve">
          <source>CanvasGradient</source>
          <target state="translated">CanvasGradient</target>
        </trans-unit>
        <trans-unit id="f713d15048871df6207bfa21e089a2a692ef1053" translate="yes" xml:space="preserve">
          <source>CanvasHitRegion</source>
          <target state="translated">CanvasHitRegion</target>
        </trans-unit>
        <trans-unit id="8906f16f149f388a30a61d46fb6cec59ecccac6a" translate="yes" xml:space="preserve">
          <source>CanvasImageData</source>
          <target state="translated">CanvasImageData</target>
        </trans-unit>
        <trans-unit id="dff170cc018a3208226df1bb91e1d4672b08d3bd" translate="yes" xml:space="preserve">
          <source>CanvasImageSmoothing</source>
          <target state="translated">CanvasImageSmoothing</target>
        </trans-unit>
        <trans-unit id="4442be0dd384eafda26b362b05089ac6715c4e11" translate="yes" xml:space="preserve">
          <source>CanvasImageSource</source>
          <target state="translated">CanvasImageSource</target>
        </trans-unit>
        <trans-unit id="2bde5288ca2282e29c7d96d81e3a364f7aeca0c0" translate="yes" xml:space="preserve">
          <source>CanvasLineCap</source>
          <target state="translated">CanvasLineCap</target>
        </trans-unit>
        <trans-unit id="33f67d72895f7922cfe60454529fb14da6cb6065" translate="yes" xml:space="preserve">
          <source>CanvasLineJoin</source>
          <target state="translated">CanvasLineJoin</target>
        </trans-unit>
        <trans-unit id="9441f1e6fb843aa677da744a1a6205c97a2b8df5" translate="yes" xml:space="preserve">
          <source>CanvasPath</source>
          <target state="translated">CanvasPath</target>
        </trans-unit>
        <trans-unit id="2e69ad659a7d09f0fad96a6cd38fb311e9d69d40" translate="yes" xml:space="preserve">
          <source>CanvasPathDrawingStyles</source>
          <target state="translated">CanvasPathDrawingStyles</target>
        </trans-unit>
        <trans-unit id="216ebe743f70853d170a1e43971be0c6cfa00f5c" translate="yes" xml:space="preserve">
          <source>CanvasPattern</source>
          <target state="translated">CanvasPattern</target>
        </trans-unit>
        <trans-unit id="3d6c5455d9bd0b85606b3ec0266b9813b1897664" translate="yes" xml:space="preserve">
          <source>CanvasRect</source>
          <target state="translated">CanvasRect</target>
        </trans-unit>
        <trans-unit id="f70215f7e53a7e484dc4fde2bbe97c1b40d128c5" translate="yes" xml:space="preserve">
          <source>CanvasRenderingContext2D</source>
          <target state="translated">CanvasRenderingContext2D</target>
        </trans-unit>
        <trans-unit id="5e8eb1f25e845b2013b3cfae2b62f23783f07a41" translate="yes" xml:space="preserve">
          <source>CanvasRenderingContext2DSettings</source>
          <target state="translated">CanvasRenderingContext2DSettings</target>
        </trans-unit>
        <trans-unit id="d050c138d1cb0ac4e3c761bb874eb26de64c7578" translate="yes" xml:space="preserve">
          <source>CanvasShadowStyles</source>
          <target state="translated">CanvasShadowStyles</target>
        </trans-unit>
        <trans-unit id="b5dcc551f32fbcb66b28107f1a94f9404c7e21a8" translate="yes" xml:space="preserve">
          <source>CanvasState</source>
          <target state="translated">CanvasState</target>
        </trans-unit>
        <trans-unit id="d160f26dca4b3427d128c32e97fce1fcd3f5a667" translate="yes" xml:space="preserve">
          <source>CanvasText</source>
          <target state="translated">CanvasText</target>
        </trans-unit>
        <trans-unit id="ccd125296018ef8e9dfddc7e282e9e51504f9ab7" translate="yes" xml:space="preserve">
          <source>CanvasTextAlign</source>
          <target state="translated">CanvasTextAlign</target>
        </trans-unit>
        <trans-unit id="7454119991d0b51aaec0668356693b8452173d7c" translate="yes" xml:space="preserve">
          <source>CanvasTextBaseline</source>
          <target state="translated">CanvasTextBaseline</target>
        </trans-unit>
        <trans-unit id="bc3f1062e8215f9b7c927e44a40fdb603ee6b86d" translate="yes" xml:space="preserve">
          <source>CanvasTextDrawingStyles</source>
          <target state="translated">CanvasTextDrawingStyles</target>
        </trans-unit>
        <trans-unit id="7c4c59048c03e3b2409c317987dc831784584ec5" translate="yes" xml:space="preserve">
          <source>CanvasTransform</source>
          <target state="translated">CanvasTransform</target>
        </trans-unit>
        <trans-unit id="fa922e9c45ac10511c2e18fc1126b93ead7be130" translate="yes" xml:space="preserve">
          <source>CanvasUserInterface</source>
          <target state="translated">CanvasUserInterface</target>
        </trans-unit>
        <trans-unit id="ca09c54bff74a82bae543ebe259f7452ee8c5293" translate="yes" xml:space="preserve">
          <source>Capabilities</source>
          <target state="translated">Capabilities</target>
        </trans-unit>
        <trans-unit id="c1bbc81661c94e57ff41fa474b6205ffd488374e" translate="yes" xml:space="preserve">
          <source>Capturing &lt;code&gt;when&lt;/code&gt; subject in a variable</source>
          <target state="translated">변수에 주제가 &lt;code&gt;when&lt;/code&gt; 캡처</target>
        </trans-unit>
        <trans-unit id="dccd76a7be95de25448b988c15de0da9b509e4af" translate="yes" xml:space="preserve">
          <source>CaretPosition</source>
          <target state="translated">CaretPosition</target>
        </trans-unit>
        <trans-unit id="0afa595bc08d7c995d5d3fedf3540d8738e12b76" translate="yes" xml:space="preserve">
          <source>Carry on solving</source>
          <target state="translated">해결에 계속</target>
        </trans-unit>
        <trans-unit id="e0f540f92c7222f2992e0ffca4cb3124cdab0766" translate="yes" xml:space="preserve">
          <source>Casting</source>
          <target state="translated">Casting</target>
        </trans-unit>
        <trans-unit id="06a068efbf4ee6a1694ee9df6fe8df0a38390f0a" translate="yes" xml:space="preserve">
          <source>Casting a pointer (including &lt;code&gt;COpaquePointer&lt;/code&gt;) can be done with &lt;code&gt;.reinterpret&amp;lt;T&amp;gt;&lt;/code&gt;, e.g.:</source>
          <target state="translated">&lt;code&gt;.reinterpret&amp;lt;T&amp;gt;&lt;/code&gt; 로 포인터 캐스팅 ( &lt;code&gt;COpaquePointer&lt;/code&gt; 포함 )을 수행 할 수 있습니다 . 예 :</target>
        </trans-unit>
        <trans-unit id="afab4876a4ee3ad31a7923b8299c6fec530ae92d" translate="yes" xml:space="preserve">
          <source>Casting and type testing</source>
          <target state="translated">주조 및 유형 테스트</target>
        </trans-unit>
        <trans-unit id="f861ab8adce922ca7f2432dc6c09aa64671bd8a9" translate="yes" xml:space="preserve">
          <source>Casting between mapped types</source>
          <target state="translated">매핑 된 유형 간 캐스팅</target>
        </trans-unit>
        <trans-unit id="caada6c6ec79dcc030dc939a9522d494bdcf2121" translate="yes" xml:space="preserve">
          <source>Casts the given &lt;a href=&quot;../../kotlin.reflect.full/cast#kotlin.reflect.full%24cast%28kotlin.reflect.KClass%28%28kotlin.reflect.full.cast.T%29%29%2C+kotlin.Any%29%2Fvalue&quot;&gt;value&lt;/a&gt; to the class represented by this &lt;a href=&quot;index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; object. Throws an exception if the value is &lt;code&gt;null&lt;/code&gt; or if it is not an instance of this class.</source>
          <target state="translated">지정된 &lt;a href=&quot;../../kotlin.reflect.full/cast#kotlin.reflect.full%24cast%28kotlin.reflect.KClass%28%28kotlin.reflect.full.cast.T%29%29%2C+kotlin.Any%29%2Fvalue&quot;&gt;값&lt;/a&gt; 을이 &lt;a href=&quot;index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; 객체가 나타내는 클래스에 캐스트 합니다. 값이 &lt;code&gt;null&lt;/code&gt; 이거나이 클래스의 인스턴스가 아닌 경우 예외를 발생시킵니다 .</target>
        </trans-unit>
        <trans-unit id="dd85863a99d7bbf5fd5743853dfc458d904cbf86" translate="yes" xml:space="preserve">
          <source>Casts the given &lt;a href=&quot;../../kotlin.reflect.full/cast#kotlin.reflect.full%24cast(kotlin.reflect.KClass((kotlin.reflect.full.cast.T)),%20kotlin.Any?)/value&quot;&gt;value&lt;/a&gt; to the class represented by this &lt;a href=&quot;index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; object. Throws an exception if the value is &lt;code&gt;null&lt;/code&gt; or if it is not an instance of this class.</source>
          <target state="translated">주어진 &lt;a href=&quot;../../kotlin.reflect.full/cast#kotlin.reflect.full%24cast(kotlin.reflect.KClass((kotlin.reflect.full.cast.T)),%20kotlin.Any?)/value&quot;&gt;값&lt;/a&gt; 을이 &lt;a href=&quot;index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; 객체가 나타내는 클래스로 캐스팅 합니다. 값이 &lt;code&gt;null&lt;/code&gt; 이거나이 클래스의 인스턴스가 아닌 경우 예외를 throw합니다 .</target>
        </trans-unit>
        <trans-unit id="74705e4e7b829069cb479fae6235d3ffa245aae9" translate="yes" xml:space="preserve">
          <source>Casts the given &lt;a href=&quot;../../kotlin.reflect.full/safe-cast#kotlin.reflect.full%24safeCast%28kotlin.reflect.KClass%28%28kotlin.reflect.full.safeCast.T%29%29%2C+kotlin.Any%29%2Fvalue&quot;&gt;value&lt;/a&gt; to the class represented by this &lt;a href=&quot;index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; object. Returns &lt;code&gt;null&lt;/code&gt; if the value is &lt;code&gt;null&lt;/code&gt; or if it is not an instance of this class.</source>
          <target state="translated">지정된 &lt;a href=&quot;../../kotlin.reflect.full/safe-cast#kotlin.reflect.full%24safeCast%28kotlin.reflect.KClass%28%28kotlin.reflect.full.safeCast.T%29%29%2C+kotlin.Any%29%2Fvalue&quot;&gt;값&lt;/a&gt; 을이 &lt;a href=&quot;index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; 객체가 나타내는 클래스에 캐스트 합니다. 반환 값은 &lt;code&gt;null&lt;/code&gt; 값이있는 경우 &lt;code&gt;null&lt;/code&gt; 또는이 클래스의 인스턴스가 아닌 경우.</target>
        </trans-unit>
        <trans-unit id="a65a780dff7278e7485cb16d82c83a8674ad46a3" translate="yes" xml:space="preserve">
          <source>Casts the given &lt;a href=&quot;../../kotlin.reflect.full/safe-cast#kotlin.reflect.full%24safeCast(kotlin.reflect.KClass((kotlin.reflect.full.safeCast.T)),%20kotlin.Any?)/value&quot;&gt;value&lt;/a&gt; to the class represented by this &lt;a href=&quot;index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; object. Returns &lt;code&gt;null&lt;/code&gt; if the value is &lt;code&gt;null&lt;/code&gt; or if it is not an instance of this class.</source>
          <target state="translated">주어진 &lt;a href=&quot;../../kotlin.reflect.full/safe-cast#kotlin.reflect.full%24safeCast(kotlin.reflect.KClass((kotlin.reflect.full.safeCast.T)),%20kotlin.Any?)/value&quot;&gt;값&lt;/a&gt; 을이 &lt;a href=&quot;index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; 객체가 나타내는 클래스로 캐스팅 합니다. 반환 값은 &lt;code&gt;null&lt;/code&gt; 값이있는 경우 &lt;code&gt;null&lt;/code&gt; 또는이 클래스의 인스턴스가 아닌 경우.</target>
        </trans-unit>
        <trans-unit id="2ef0ad51b05bc848cbb4440e9fb5228987c93b14" translate="yes" xml:space="preserve">
          <source>Casts the given &lt;a href=&quot;../cast#kotlin.reflect%24cast(kotlin.reflect.KClass((kotlin.reflect.cast.T)),%20kotlin.Any?)/value&quot;&gt;value&lt;/a&gt; to the class represented by this &lt;a href=&quot;index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; object. Throws an exception if the value is &lt;code&gt;null&lt;/code&gt; or if it is not an instance of this class.</source>
          <target state="translated">주어진 &lt;a href=&quot;../cast#kotlin.reflect%24cast(kotlin.reflect.KClass((kotlin.reflect.cast.T)),%20kotlin.Any?)/value&quot;&gt;값&lt;/a&gt; 을이 &lt;a href=&quot;index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; 객체가 나타내는 클래스로 캐스팅 합니다. 값이 &lt;code&gt;null&lt;/code&gt; 이거나이 클래스의 인스턴스가 아닌 경우 예외를 throw합니다 .</target>
        </trans-unit>
        <trans-unit id="a84723f8e066188ff6d11965a76e9c3a3d0f8feb" translate="yes" xml:space="preserve">
          <source>Casts the given &lt;a href=&quot;../safe-cast#kotlin.reflect%24safeCast(kotlin.reflect.KClass((kotlin.reflect.safeCast.T)),%20kotlin.Any?)/value&quot;&gt;value&lt;/a&gt; to the class represented by this &lt;a href=&quot;index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; object. Returns &lt;code&gt;null&lt;/code&gt; if the value is &lt;code&gt;null&lt;/code&gt; or if it is not an instance of this class.</source>
          <target state="translated">주어진 &lt;a href=&quot;../safe-cast#kotlin.reflect%24safeCast(kotlin.reflect.KClass((kotlin.reflect.safeCast.T)),%20kotlin.Any?)/value&quot;&gt;값&lt;/a&gt; 을이 &lt;a href=&quot;index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; 객체가 나타내는 클래스로 캐스팅 합니다. 반환 값은 &lt;code&gt;null&lt;/code&gt; 값이있는 경우 &lt;code&gt;null&lt;/code&gt; 또는이 클래스의 인스턴스가 아닌 경우.</target>
        </trans-unit>
        <trans-unit id="596c5ef4cec8865a3fd608ea6b9c65d9b61064fa" translate="yes" xml:space="preserve">
          <source>Casts the given &lt;a href=&quot;cast#kotlin.reflect%24cast(kotlin.reflect.KClass((kotlin.reflect.cast.T)),%20kotlin.Any?)/value&quot;&gt;value&lt;/a&gt; to the class represented by this &lt;a href=&quot;-k-class/index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; object. Throws an exception if the value is &lt;code&gt;null&lt;/code&gt; or if it is not an instance of this class.</source>
          <target state="translated">주어진 &lt;a href=&quot;cast#kotlin.reflect%24cast(kotlin.reflect.KClass((kotlin.reflect.cast.T)),%20kotlin.Any?)/value&quot;&gt;값&lt;/a&gt; 을이 &lt;a href=&quot;-k-class/index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; 객체가 나타내는 클래스로 캐스팅 합니다. 값이 &lt;code&gt;null&lt;/code&gt; 이거나이 클래스의 인스턴스가 아닌 경우 예외를 throw합니다 .</target>
        </trans-unit>
        <trans-unit id="17806de484aeab3a47990b82b07a5ef37d5809dc" translate="yes" xml:space="preserve">
          <source>Casts the given &lt;a href=&quot;cast#kotlin.reflect.full%24cast%28kotlin.reflect.KClass%28%28kotlin.reflect.full.cast.T%29%29%2C+kotlin.Any%29%2Fvalue&quot;&gt;value&lt;/a&gt; to the class represented by this &lt;a href=&quot;../kotlin.reflect/-k-class/index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; object. Throws an exception if the value is &lt;code&gt;null&lt;/code&gt; or if it is not an instance of this class.</source>
          <target state="translated">지정된 &lt;a href=&quot;cast#kotlin.reflect.full%24cast%28kotlin.reflect.KClass%28%28kotlin.reflect.full.cast.T%29%29%2C+kotlin.Any%29%2Fvalue&quot;&gt;값&lt;/a&gt; 을이 &lt;a href=&quot;../kotlin.reflect/-k-class/index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; 객체가 나타내는 클래스에 캐스트 합니다. 값이 &lt;code&gt;null&lt;/code&gt; 이거나이 클래스의 인스턴스가 아닌 경우 예외를 발생시킵니다 .</target>
        </trans-unit>
        <trans-unit id="5c66e6c48d91abd62eee8af01bd34b324578314a" translate="yes" xml:space="preserve">
          <source>Casts the given &lt;a href=&quot;cast#kotlin.reflect.full%24cast(kotlin.reflect.KClass((kotlin.reflect.full.cast.T)),%20kotlin.Any?)/value&quot;&gt;value&lt;/a&gt; to the class represented by this &lt;a href=&quot;../kotlin.reflect/-k-class/index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; object. Throws an exception if the value is &lt;code&gt;null&lt;/code&gt; or if it is not an instance of this class.</source>
          <target state="translated">주어진 &lt;a href=&quot;cast#kotlin.reflect.full%24cast(kotlin.reflect.KClass((kotlin.reflect.full.cast.T)),%20kotlin.Any?)/value&quot;&gt;값&lt;/a&gt; 을이 &lt;a href=&quot;../kotlin.reflect/-k-class/index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; 객체가 나타내는 클래스로 캐스팅 합니다. 값이 &lt;code&gt;null&lt;/code&gt; 이거나이 클래스의 인스턴스가 아닌 경우 예외를 throw합니다 .</target>
        </trans-unit>
        <trans-unit id="d2c5eea39f56aca06d4e9aabc0ef67e4836c97ee" translate="yes" xml:space="preserve">
          <source>Casts the given &lt;a href=&quot;safe-cast#kotlin.reflect%24safeCast(kotlin.reflect.KClass((kotlin.reflect.safeCast.T)),%20kotlin.Any?)/value&quot;&gt;value&lt;/a&gt; to the class represented by this &lt;a href=&quot;-k-class/index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; object. Returns &lt;code&gt;null&lt;/code&gt; if the value is &lt;code&gt;null&lt;/code&gt; or if it is not an instance of this class.</source>
          <target state="translated">주어진 &lt;a href=&quot;safe-cast#kotlin.reflect%24safeCast(kotlin.reflect.KClass((kotlin.reflect.safeCast.T)),%20kotlin.Any?)/value&quot;&gt;값&lt;/a&gt; 을이 &lt;a href=&quot;-k-class/index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; 객체가 나타내는 클래스로 캐스팅 합니다. 반환 값은 &lt;code&gt;null&lt;/code&gt; 값이있는 경우 &lt;code&gt;null&lt;/code&gt; 또는이 클래스의 인스턴스가 아닌 경우.</target>
        </trans-unit>
        <trans-unit id="7f684f05770c5e5fe6227b88f6206195e8913c71" translate="yes" xml:space="preserve">
          <source>Casts the given &lt;a href=&quot;safe-cast#kotlin.reflect.full%24safeCast%28kotlin.reflect.KClass%28%28kotlin.reflect.full.safeCast.T%29%29%2C+kotlin.Any%29%2Fvalue&quot;&gt;value&lt;/a&gt; to the class represented by this &lt;a href=&quot;../kotlin.reflect/-k-class/index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; object. Returns &lt;code&gt;null&lt;/code&gt; if the value is &lt;code&gt;null&lt;/code&gt; or if it is not an instance of this class.</source>
          <target state="translated">지정된 &lt;a href=&quot;safe-cast#kotlin.reflect.full%24safeCast%28kotlin.reflect.KClass%28%28kotlin.reflect.full.safeCast.T%29%29%2C+kotlin.Any%29%2Fvalue&quot;&gt;값&lt;/a&gt; 을이 &lt;a href=&quot;../kotlin.reflect/-k-class/index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; 객체가 나타내는 클래스에 캐스트 합니다. 반환 값은 &lt;code&gt;null&lt;/code&gt; 값이있는 경우 &lt;code&gt;null&lt;/code&gt; 또는이 클래스의 인스턴스가 아닌 경우.</target>
        </trans-unit>
        <trans-unit id="17085f418a9e912754c58561f4d0bf75704f7eeb" translate="yes" xml:space="preserve">
          <source>Casts the given &lt;a href=&quot;safe-cast#kotlin.reflect.full%24safeCast(kotlin.reflect.KClass((kotlin.reflect.full.safeCast.T)),%20kotlin.Any?)/value&quot;&gt;value&lt;/a&gt; to the class represented by this &lt;a href=&quot;../kotlin.reflect/-k-class/index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; object. Returns &lt;code&gt;null&lt;/code&gt; if the value is &lt;code&gt;null&lt;/code&gt; or if it is not an instance of this class.</source>
          <target state="translated">주어진 &lt;a href=&quot;safe-cast#kotlin.reflect.full%24safeCast(kotlin.reflect.KClass((kotlin.reflect.full.safeCast.T)),%20kotlin.Any?)/value&quot;&gt;값&lt;/a&gt; 을이 &lt;a href=&quot;../kotlin.reflect/-k-class/index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; 객체가 나타내는 클래스로 캐스팅 합니다. 반환 값은 &lt;code&gt;null&lt;/code&gt; 값이있는 경우 &lt;code&gt;null&lt;/code&gt; 또는이 클래스의 인스턴스가 아닌 경우.</target>
        </trans-unit>
        <trans-unit id="87de4f35b1f56e4f943d85acc8373fc7700f69c4" translate="yes" xml:space="preserve">
          <source>Catching declaratively</source>
          <target state="translated">선언적으로 잡기</target>
        </trans-unit>
        <trans-unit id="d29e8d9bd82b9b52fa52ca384e6870b38cfc1fc9" translate="yes" xml:space="preserve">
          <source>Category member</source>
          <target state="translated">카테고리 멤버</target>
        </trans-unit>
        <trans-unit id="7ee6423dbf5769ec42af73fdd93989bd70c02881" translate="yes" xml:space="preserve">
          <source>Category members</source>
          <target state="translated">카테고리 멤버</target>
        </trans-unit>
        <trans-unit id="0864fac858ae3e068420c0d0cce435ab4447175e" translate="yes" xml:space="preserve">
          <source>Central Processor Unit architecture.</source>
          <target state="translated">중앙 프로세서 장치 아키텍처.</target>
        </trans-unit>
        <trans-unit id="f794caffb7bfcc084f55b05d1ca3fa848124a5e9" translate="yes" xml:space="preserve">
          <source>Certified Training</source>
          <target state="translated">공인 교육</target>
        </trans-unit>
        <trans-unit id="6f733b9e61cac0a722928e275d32ff698a66b2f1" translate="yes" xml:space="preserve">
          <source>Chained call wrapping</source>
          <target state="translated">체인 통화 포장</target>
        </trans-unit>
        <trans-unit id="3a4b881406e2ae26a9e2902309e8e6565af8fd5b" translate="yes" xml:space="preserve">
          <source>Change code in the &lt;code&gt;main()&lt;/code&gt; function:</source>
          <target state="translated">&lt;code&gt;main()&lt;/code&gt; 함수 에서 코드를 변경 합니다.</target>
        </trans-unit>
        <trans-unit id="4e75040feac6ee4bb2569d89ac315665cd50741f" translate="yes" xml:space="preserve">
          <source>Change initialization order of default values for tail-recursive optimized functions</source>
          <target state="translated">꼬리 재귀 최적화 함수의 기본값 초기화 순서 변경</target>
        </trans-unit>
        <trans-unit id="e4dc9a376c1de3440705bee8130001f0839ed8f4" translate="yes" xml:space="preserve">
          <source>Change the code in the &lt;code&gt;main()&lt;/code&gt; function:</source>
          <target state="translated">&lt;code&gt;main()&lt;/code&gt; 함수 에서 코드를 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="8c8d9bafca395fd68d0583bf246beaa81a14eb4c" translate="yes" xml:space="preserve">
          <source>Change the code of &lt;code&gt;styledDiv&lt;/code&gt; to show your name backwards.</source>
          <target state="translated">이름을 거꾸로 표시하려면 &lt;code&gt;styledDiv&lt;/code&gt; 코드를 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="05e60bcec0fc53366265012fa27c3b7a16dddc37" translate="yes" xml:space="preserve">
          <source>Changed behavior of signature-polymorphic calls to methods with a single vararg parameter to avoid wrapping the argument into another array</source>
          <target state="translated">인수를 다른 배열로 래핑하지 않도록 단일 vararg 매개 변수가있는 메서드에 대한 서명 다형성 호출의 동작을 변경했습니다.</target>
        </trans-unit>
        <trans-unit id="89047ec8287cdeae04e682f31396523718cf2fac" translate="yes" xml:space="preserve">
          <source>Changes in &lt;code&gt;both&lt;/code&gt; mode</source>
          <target state="translated">&lt;code&gt;both&lt;/code&gt; 모드의 변경 사항</target>
        </trans-unit>
        <trans-unit id="1e953b515f0be6159648a2b4236cb5ba2614361a" translate="yes" xml:space="preserve">
          <source>Changes related to Dukat</source>
          <target state="translated">Dukat 관련 변경 사항</target>
        </trans-unit>
        <trans-unit id="efb8483fa34f64960a5c03c627be6fd44b8b91e6" translate="yes" xml:space="preserve">
          <source>Changes related to npm dependency management</source>
          <target state="translated">npm 종속성 관리와 관련된 변경 사항</target>
        </trans-unit>
        <trans-unit id="f17288305c81b777b41af9eb4f0f45dfe5818909" translate="yes" xml:space="preserve">
          <source>Changes related to the Kotlin/JS IR compiler</source>
          <target state="translated">Kotlin / JS IR 컴파일러 관련 변경 사항</target>
        </trans-unit>
        <trans-unit id="408514ef0724e60f622a362d62d48e79d5764d84" translate="yes" xml:space="preserve">
          <source>Changes the interpretation of the pointed data or code.</source>
          <target state="translated">지정된 데이터 또는 코드의 해석을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="ce4866daf3ad76485c588ff66ed11dee1d37a911" translate="yes" xml:space="preserve">
          <source>Changes the value associated with the key of this entry.</source>
          <target state="translated">이 항목의 키와 관련된 값을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="dc88027e6a741f779cd748b3363d72a9b962829a" translate="yes" xml:space="preserve">
          <source>Changing formatting in an existing project is a far more demanding task, and should probably be started with discussing all the caveats with the team.</source>
          <target state="translated">기존 프로젝트에서 형식을 변경하는 것은 훨씬 까다로운 작업이므로 팀과 모든 경고에 대해 논의해야합니다.</target>
        </trans-unit>
        <trans-unit id="f608880dded647afc69260b9caee61cf457fbb6c" translate="yes" xml:space="preserve">
          <source>Changing private/internal APIs and other implementation details.</source>
          <target state="translated">개인 / 내부 API 및 기타 구현 세부 사항 변경</target>
        </trans-unit>
        <trans-unit id="82106f167628c6561286c36dfbc3393f7b40b4a7" translate="yes" xml:space="preserve">
          <source>Changing view caching strategy</source>
          <target state="translated">뷰 캐싱 전략 변경</target>
        </trans-unit>
        <trans-unit id="393cd35fac39b9caaf9b9071bd6fedd830588212" translate="yes" xml:space="preserve">
          <source>Channel basics</source>
          <target state="translated">채널 기본</target>
        </trans-unit>
        <trans-unit id="18e03e2a37ba37df713f9665ef752fb8b40fc1e8" translate="yes" xml:space="preserve">
          <source>Channels</source>
          <target state="translated">Channels</target>
        </trans-unit>
        <trans-unit id="108ee9713a43e6c2693880416acf1ae998bc68ce" translate="yes" xml:space="preserve">
          <source>Channels (experimental)</source>
          <target state="translated">채널 (실험)</target>
        </trans-unit>
        <trans-unit id="bf292fdd1f7874feb3dfc0dbb4202def57bef472" translate="yes" xml:space="preserve">
          <source>Channels are fair</source>
          <target state="translated">채널은 공정하다</target>
        </trans-unit>
        <trans-unit id="0f9ba953e35135a3f8ec268817cc92f2557202a9" translate="yes" xml:space="preserve">
          <source>Char</source>
          <target state="translated">Char</target>
        </trans-unit>
        <trans-unit id="60bf8f54a68be267ea77345590ac5cd8abb74e72" translate="yes" xml:space="preserve">
          <source>Char sequences and strings in addition have an &lt;code&gt;ifBlank&lt;/code&gt; extension that does the same thing as &lt;code&gt;ifEmpty&lt;/code&gt;, but checks for a string being all whitespace instead of empty.</source>
          <target state="translated">문자 시퀀스와 추가 문자열은이 &lt;code&gt;ifBlank&lt;/code&gt; 의 와 같은 일을 수행 확장 &lt;code&gt;ifEmpty&lt;/code&gt; 을 모든 공백 인 문자열 대신 빈에 대한,하지만 검사를.</target>
        </trans-unit>
        <trans-unit id="96e256b8b38d7493b5984a01d0b76b7f5e161e6b" translate="yes" xml:space="preserve">
          <source>CharArray</source>
          <target state="translated">CharArray</target>
        </trans-unit>
        <trans-unit id="21662f73ab2c143506e074e7125d2912962bc742" translate="yes" xml:space="preserve">
          <source>CharCategory</source>
          <target state="translated">CharCategory</target>
        </trans-unit>
        <trans-unit id="8641be6480d061955a6a6512333655fc98b529c1" translate="yes" xml:space="preserve">
          <source>CharDirectionality</source>
          <target state="translated">CharDirectionality</target>
        </trans-unit>
        <trans-unit id="824cfd3af26160879c2ac3cf561cedcd0a7c7144" translate="yes" xml:space="preserve">
          <source>CharIterator</source>
          <target state="translated">CharIterator</target>
        </trans-unit>
        <trans-unit id="a70f42f3e09977366c4370d5cd2eee5b60b64955" translate="yes" xml:space="preserve">
          <source>CharProgression</source>
          <target state="translated">CharProgression</target>
        </trans-unit>
        <trans-unit id="6cb20d661b17f81e907c62549a515c0ae1a62ae3" translate="yes" xml:space="preserve">
          <source>CharRange</source>
          <target state="translated">CharRange</target>
        </trans-unit>
        <trans-unit id="ee352e16ffeb4d6a086bccab16f296b15acb8cc9" translate="yes" xml:space="preserve">
          <source>CharSequence</source>
          <target state="translated">CharSequence</target>
        </trans-unit>
        <trans-unit id="9a15e38982ff9afc3765678f3881aff1f68a57d8" translate="yes" xml:space="preserve">
          <source>CharSequence.groupingBy</source>
          <target state="translated">CharSequence.groupingBy</target>
        </trans-unit>
        <trans-unit id="97d0ead8789ade10e4a920bf34f6297222355263" translate="yes" xml:space="preserve">
          <source>Character literals go in single quotes: &lt;code&gt;'1'&lt;/code&gt;. Special characters can be escaped using a backslash. The following escape sequences are supported: &lt;code&gt;\t&lt;/code&gt;, &lt;code&gt;\b&lt;/code&gt;, &lt;code&gt;\n&lt;/code&gt;, &lt;code&gt;\r&lt;/code&gt;, &lt;code&gt;\'&lt;/code&gt;, &lt;code&gt;\&quot;&lt;/code&gt;, &lt;code&gt;\\&lt;/code&gt; and &lt;code&gt;\$&lt;/code&gt;. To encode any other character, use the Unicode escape sequence syntax: &lt;code&gt;'\uFF00'&lt;/code&gt;.</source>
          <target state="translated">문자 리터럴은 작은 따옴표로 묶습니다 : &lt;code&gt;'1'&lt;/code&gt; . 백 슬래시를 사용하여 특수 문자를 이스케이프 할 수 있습니다. &lt;code&gt;\t&lt;/code&gt; , &lt;code&gt;\b&lt;/code&gt; , &lt;code&gt;\n&lt;/code&gt; , &lt;code&gt;\r&lt;/code&gt; , &lt;code&gt;\'&lt;/code&gt; , &lt;code&gt;\&quot;&lt;/code&gt; , &lt;code&gt;\\&lt;/code&gt; 및 &lt;code&gt;\$&lt;/code&gt; 이스케이프 시퀀스가 ​​지원됩니다. 다른 문자를 인코딩하려면 유니 코드 이스케이프 시퀀스 구문 &lt;code&gt;'\uFF00'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c42a0a3569b629a7af93ad1c987fd90967c0fca" translate="yes" xml:space="preserve">
          <source>Character.toTitleCase</source>
          <target state="translated">Character.toTitleCase</target>
        </trans-unit>
        <trans-unit id="fadd9e5c9325f42cc90e4dcfd5e60c57c2fbe46a" translate="yes" xml:space="preserve">
          <source>CharacterCodingException</source>
          <target state="translated">CharacterCodingException</target>
        </trans-unit>
        <trans-unit id="b6f59f08fd6d58c6725e21a9ec24e068148ec586" translate="yes" xml:space="preserve">
          <source>Characters</source>
          <target state="translated">Characters</target>
        </trans-unit>
        <trans-unit id="5bf45f96c6df26b4632980c61c8cdb78cca3a785" translate="yes" xml:space="preserve">
          <source>Characters are appended in order, starting at specified &lt;a href=&quot;append-range#kotlin.text%24appendRange(java.lang.StringBuilder,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Int)/startIndex&quot;&gt;startIndex&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;append-range#kotlin.text%24appendRange(java.lang.StringBuilder,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Int)/startIndex&quot;&gt;startIndex&lt;/a&gt; 에서 시작하여 문자가 순서대로 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="e9c2d8ccf17d46ee32ffd6555478a2a0d29174b4" translate="yes" xml:space="preserve">
          <source>Characters are appended in order, starting at specified &lt;a href=&quot;append-range#kotlin.text%24appendRange(kotlin.text.StringBuilder,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Int)/startIndex&quot;&gt;startIndex&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;append-range#kotlin.text%24appendRange(kotlin.text.StringBuilder,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Int)/startIndex&quot;&gt;startIndex&lt;/a&gt; 에서 시작하여 문자가 순서대로 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="aebd5119668faca0be1ed34e6635f5f07d62ef9e" translate="yes" xml:space="preserve">
          <source>Characters are appended in order, starting at specified &lt;a href=&quot;append-range#kotlin.text.StringBuilder%24appendRange(kotlin.CharArray,%20kotlin.Int,%20kotlin.Int)/startIndex&quot;&gt;startIndex&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;append-range#kotlin.text.StringBuilder%24appendRange(kotlin.CharArray,%20kotlin.Int,%20kotlin.Int)/startIndex&quot;&gt;startIndex&lt;/a&gt; 에서 시작하여 문자가 순서대로 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="d1e46233d431f9c51818e3cad5a41555704e7a02" translate="yes" xml:space="preserve">
          <source>Characters are appended in order, starting at the index 0.</source>
          <target state="translated">문자는 인덱스 0에서 시작하여 순서대로 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="fadf7e4792cf64d3aad517d37493baa9735d2001" translate="yes" xml:space="preserve">
          <source>Characters are represented by the type &lt;code&gt;Char&lt;/code&gt;. They can not be treated directly as numbers</source>
          <target state="translated">문자는 &lt;code&gt;Char&lt;/code&gt; 유형으로 표시됩니다 . 그들은 숫자로 직접 취급 될 수 없습니다</target>
        </trans-unit>
        <trans-unit id="23621907080a3a764c144af18d2a2f9bab0a9bbf" translate="yes" xml:space="preserve">
          <source>Charsets</source>
          <target state="translated">Charsets</target>
        </trans-unit>
        <trans-unit id="2c9a8a19d661b6c61dde01e1d01b64f74e2cb6a1" translate="yes" xml:space="preserve">
          <source>Check for index overflow in operations on very long sequences</source>
          <target state="translated">매우 긴 시퀀스에서 작업에서 인덱스 오버 플로우 확인</target>
        </trans-unit>
        <trans-unit id="6302726c69077b4ebc4c3c46eb49bb79de6c708d" translate="yes" xml:space="preserve">
          <source>Check if a number is out of range:</source>
          <target state="translated">숫자가 범위를 벗어 났는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="437dbbaade4ad3f4d69fe740f4906d71a2d5bd91" translate="yes" xml:space="preserve">
          <source>Check if a number is within a range using &lt;em&gt;in&lt;/em&gt; operator:</source>
          <target state="translated">&lt;em&gt;in&lt;/em&gt; 연산자를 사용하여 숫자가 범위 내에 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="6f1ff728312029597a3cdf34ffddcf123b633c0b" translate="yes" xml:space="preserve">
          <source>Check if byte order of the current platform is least significant byte (LSB) first, aka little endian.</source>
          <target state="translated">현재 플랫폼의 바이트 순서가 최하위 바이트 (LSB)인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="002be62cf9683291e0190eaeea12582af2b85579" translate="yes" xml:space="preserve">
          <source>Check if current architecture allows unaligned access to wider than byte locations.</source>
          <target state="translated">현재 아키텍처가 바이트보다 넓은 위치에 정렬되지 않은 액세스를 허용하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="d12264046294a607009128dce650e88cdebfb5ee" translate="yes" xml:space="preserve">
          <source>Check out Google's &lt;a href=&quot;https://developer.android.com/samples/index.html?language=kotlin&quot;&gt;sample projects written in Kotlin&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developer.android.com/samples/index.html?language=kotlin&quot;&gt;Kotlin으로 작성된&lt;/a&gt; Google의 샘플 프로젝트를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="32f9c2b405a5dcb99423a9a7deeb9fd7abfa9155" translate="yes" xml:space="preserve">
          <source>Check out Google's &lt;a href=&quot;https://developer.android.com/samples/index.html?language=kotlin&quot;&gt;sample projects written in Kotlin&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.android.com/samples/index.html?language=kotlin&quot;&gt;Kotlin으로 작성된&lt;/a&gt; Google 샘플 프로젝트를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="dd5227f9f4a39f59e3876127ca9d153d17114301" translate="yes" xml:space="preserve">
          <source>Check out Kotlin kernel's &lt;a href=&quot;https://github.com/Kotlin/kotlin-jupyter&quot;&gt;GitHub repo&lt;/a&gt; for installation instructions, documentation, and examples.</source>
          <target state="translated">설치 안내, 문서, 예시는 Kotlin 커널의 &lt;a href=&quot;https://github.com/Kotlin/kotlin-jupyter&quot;&gt;GitHub 저장소&lt;/a&gt; 를 확인하세요 .</target>
        </trans-unit>
        <trans-unit id="828f18a3be03d9146dec69ac49c4bd19ead986fc" translate="yes" xml:space="preserve">
          <source>Check out these community resources for more information:</source>
          <target state="translated">자세한 내용은 다음 커뮤니티 리소스를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="eaab21c120a02f8f271c9ce55ca3512ab2f45c52" translate="yes" xml:space="preserve">
          <source>Check task names</source>
          <target state="translated">작업 이름 확인</target>
        </trans-unit>
        <trans-unit id="c5e5903252d787f2e42789ac3746244fca14626d" translate="yes" xml:space="preserve">
          <source>Check that the provided name is not &lt;code&gt;null&lt;/code&gt; with the &lt;a href=&quot;../../reference/null-safety#safe-calls&quot;&gt;safe call operator &lt;code&gt;?.&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">제공된 이름이 아니라는 것을 확인 &lt;code&gt;null&lt;/code&gt; 와 &lt;a href=&quot;../../reference/null-safety#safe-calls&quot;&gt;안전 호출 연산자 &lt;code&gt;?.&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c7661384a3c3bb6e9a4e804c90aab56c34668852" translate="yes" xml:space="preserve">
          <source>Check the article on &lt;a href=&quot;js-modules&quot;&gt;JavaScript Modules&lt;/a&gt; for more information on the topic of JavaScript module systems.</source>
          <target state="translated">JavaScript 모듈 시스템 주제에 대한 자세한 내용 은 &lt;a href=&quot;js-modules&quot;&gt;JavaScript 모듈에&lt;/a&gt; 대한 기사를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="75ea8b1321f2ff23323e36e9007412f9ea7cb89d" translate="yes" xml:space="preserve">
          <source>Check the state of each coroutine.</source>
          <target state="translated">각 코 루틴의 상태를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="bdd6123137de702f436047140d71c49115801465" translate="yes" xml:space="preserve">
          <source>Check uploading to Bintray</source>
          <target state="translated">Bintray에 업로드 확인</target>
        </trans-unit>
        <trans-unit id="35422006e8d54d6f2507a81fb7e5e2f61dc9a1c2" translate="yes" xml:space="preserve">
          <source>Checked Exceptions</source>
          <target state="translated">확인 된 예외</target>
        </trans-unit>
        <trans-unit id="98a9a776f2f953ab47ef42b85ea71e9ed6294243" translate="yes" xml:space="preserve">
          <source>Checked exceptions</source>
          <target state="translated">확인 된 예외</target>
        </trans-unit>
        <trans-unit id="2ec920cf6ce1fcceef744b1c29c435b940c5e602" translate="yes" xml:space="preserve">
          <source>Checking element presence in a collection.</source>
          <target state="translated">컬렉션에서 요소가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="bb584694ea104d07fd8e3e713d92e78671008e54" translate="yes" xml:space="preserve">
          <source>Checking existence</source>
          <target state="translated">존재 확인</target>
        </trans-unit>
        <trans-unit id="982a79cfb4460f5939ed66b600c478a6fae01222" translate="yes" xml:space="preserve">
          <source>Checking for &lt;em&gt;null&lt;/em&gt; in conditions</source>
          <target state="translated">조건 에서 &lt;em&gt;널&lt;/em&gt; 확인</target>
        </trans-unit>
        <trans-unit id="1cb7384b892c58af751e12a8ef40d8881cb78d9e" translate="yes" xml:space="preserve">
          <source>Checking if a collection contains an object using &lt;em&gt;in&lt;/em&gt; operator:</source>
          <target state="translated">&lt;em&gt;in&lt;/em&gt; 연산자를 사용하여 컬렉션에 객체가 포함되어 있는지 확인 :</target>
        </trans-unit>
        <trans-unit id="235091c4a32de30040c5d6e2f8c341a72de7afe8" translate="yes" xml:space="preserve">
          <source>Checking whether a lateinit var is initialized</source>
          <target state="translated">lateinit var가 초기화되었는지 확인</target>
        </trans-unit>
        <trans-unit id="336ccf337bda950aa1251870eec811ff97defc2c" translate="yes" xml:space="preserve">
          <source>Checking whether a lateinit var is initialized (since 1.2)</source>
          <target state="translated">lateinit var가 초기화되었는지 확인 (1.2 이후)</target>
        </trans-unit>
        <trans-unit id="8307a11bdb066aa396828f11f29d2218a40cc7b1" translate="yes" xml:space="preserve">
          <source>Checks if all elements in the specified collection are contained in this collection.</source>
          <target state="translated">지정된 컬렉션의 모든 요소가이 컬렉션에 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="aadab33726938c4885c5b9db839a1f312e4be197" translate="yes" xml:space="preserve">
          <source>Checks if array can contain element of type &lt;a href=&quot;../../kotlin.jvm/is-array-of#T&quot;&gt;T&lt;/a&gt;.</source>
          <target state="translated">배열이 &lt;a href=&quot;../../kotlin.jvm/is-array-of#T&quot;&gt;T&lt;/a&gt; 유형의 요소를 포함 할 수 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="0a8cd7e5d1bb6108e937a6ba52d06771ed507424" translate="yes" xml:space="preserve">
          <source>Checks if array can contain element of type &lt;a href=&quot;is-array-of#T&quot;&gt;T&lt;/a&gt;.</source>
          <target state="translated">배열이 &lt;a href=&quot;is-array-of#T&quot;&gt;T&lt;/a&gt; 유형의 요소를 포함 할 수 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="1306a9d3f7c4c4e6912b118b0ddf002407e419eb" translate="yes" xml:space="preserve">
          <source>Checks if given object is null or frozen or permanent (i.e. instantiated at compile-time).</source>
          <target state="translated">주어진 객체가 null인지 또는 고정되어 있는지 또는 영구적인지 확인합니다 (예 : 컴파일 타임에 인스턴스화 됨).</target>
        </trans-unit>
        <trans-unit id="98b70cdece60c84edab0266cf8f6296652ba19f7" translate="yes" xml:space="preserve">
          <source>Checks if the codepoint specified is a supplementary codepoint or not.</source>
          <target state="translated">지정된 코드 포인트가 추가 코드 포인트인지 여부를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2a36d0e4973d0f3959414858b0a9dfbc86f01816" translate="yes" xml:space="preserve">
          <source>Checks if the map contains the given key.</source>
          <target state="translated">지도에 지정된 키가 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="061db2f7932872d8018e195128e8af7749c72a09" translate="yes" xml:space="preserve">
          <source>Checks if the progression is empty.</source>
          <target state="translated">진행률이 비어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="49a5b83beb19902a752e95a6b222e822bb90faea" translate="yes" xml:space="preserve">
          <source>Checks if the specified &lt;a href=&quot;../contains#kotlin.ranges%24contains%28kotlin.ranges.ClosedRange%28%28kotlin.Int%29%29%2C+kotlin.Byte%29%2Fvalue&quot;&gt;value&lt;/a&gt; belongs to this range.</source>
          <target state="translated">지정된 &lt;a href=&quot;../contains#kotlin.ranges%24contains%28kotlin.ranges.ClosedRange%28%28kotlin.Int%29%29%2C+kotlin.Byte%29%2Fvalue&quot;&gt;값&lt;/a&gt; 이이 범위에 속 하는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="93f5d1fa7ff37cab0ef52a384e6db4cc89e48d23" translate="yes" xml:space="preserve">
          <source>Checks if the specified &lt;a href=&quot;../contains#kotlin.ranges%24contains%28kotlin.ranges.ClosedRange%28%28kotlin.Long%29%29%2C+kotlin.Byte%29%2Fvalue&quot;&gt;value&lt;/a&gt; belongs to this range.</source>
          <target state="translated">지정된 &lt;a href=&quot;../contains#kotlin.ranges%24contains%28kotlin.ranges.ClosedRange%28%28kotlin.Long%29%29%2C+kotlin.Byte%29%2Fvalue&quot;&gt;값&lt;/a&gt; 이이 범위에 속 하는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="840e9154a8b92175f0142e2b663a2e04299744eb" translate="yes" xml:space="preserve">
          <source>Checks if the specified &lt;a href=&quot;../contains#kotlin.ranges%24contains%28kotlin.ranges.UIntRange%2C+kotlin.UByte%29%2Fvalue&quot;&gt;value&lt;/a&gt; belongs to this range.</source>
          <target state="translated">지정된 &lt;a href=&quot;../contains#kotlin.ranges%24contains%28kotlin.ranges.UIntRange%2C+kotlin.UByte%29%2Fvalue&quot;&gt;값&lt;/a&gt; 이이 범위에 속 하는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="d574ee7a2ac4727abd755f0c8adda4f55a25d2ed" translate="yes" xml:space="preserve">
          <source>Checks if the specified &lt;a href=&quot;../contains#kotlin.ranges%24contains%28kotlin.ranges.ULongRange%2C+kotlin.UByte%29%2Fvalue&quot;&gt;value&lt;/a&gt; belongs to this range.</source>
          <target state="translated">지정된 &lt;a href=&quot;../contains#kotlin.ranges%24contains%28kotlin.ranges.ULongRange%2C+kotlin.UByte%29%2Fvalue&quot;&gt;값&lt;/a&gt; 이이 범위에 속 하는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="1936ccf64ca123181f93507a9feb0eebbe57ba0a" translate="yes" xml:space="preserve">
          <source>Checks if the specified &lt;a href=&quot;../contains#kotlin.ranges%24contains(kotlin.ranges.ClosedRange((kotlin.Int)),%20kotlin.Byte)/value&quot;&gt;value&lt;/a&gt; belongs to this range.</source>
          <target state="translated">지정된 &lt;a href=&quot;../contains#kotlin.ranges%24contains(kotlin.ranges.ClosedRange((kotlin.Int)),%20kotlin.Byte)/value&quot;&gt;값&lt;/a&gt; 이이 범위에 속 하는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="40c6193935caffa8266610ec4c295ab9ce877dd9" translate="yes" xml:space="preserve">
          <source>Checks if the specified &lt;a href=&quot;../contains#kotlin.ranges%24contains(kotlin.ranges.ClosedRange((kotlin.Long)),%20kotlin.Byte)/value&quot;&gt;value&lt;/a&gt; belongs to this range.</source>
          <target state="translated">지정된 &lt;a href=&quot;../contains#kotlin.ranges%24contains(kotlin.ranges.ClosedRange((kotlin.Long)),%20kotlin.Byte)/value&quot;&gt;값&lt;/a&gt; 이이 범위에 속 하는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="f7f90822a2ae202417ab2157576d03082c497813" translate="yes" xml:space="preserve">
          <source>Checks if the specified &lt;a href=&quot;../contains#kotlin.ranges%24contains(kotlin.ranges.UIntRange,%20kotlin.UByte)/value&quot;&gt;value&lt;/a&gt; belongs to this range.</source>
          <target state="translated">지정된 &lt;a href=&quot;../contains#kotlin.ranges%24contains(kotlin.ranges.UIntRange,%20kotlin.UByte)/value&quot;&gt;값&lt;/a&gt; 이이 범위에 속 하는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="8676dcdaeb183d186eb71dfdb2616faaa6f1a300" translate="yes" xml:space="preserve">
          <source>Checks if the specified &lt;a href=&quot;../contains#kotlin.ranges%24contains(kotlin.ranges.ULongRange,%20kotlin.UByte)/value&quot;&gt;value&lt;/a&gt; belongs to this range.</source>
          <target state="translated">지정된 &lt;a href=&quot;../contains#kotlin.ranges%24contains(kotlin.ranges.ULongRange,%20kotlin.UByte)/value&quot;&gt;값&lt;/a&gt; 이이 범위에 속 하는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="c859b6673ae95dd6316ba57dbb605098f36c2242" translate="yes" xml:space="preserve">
          <source>Checks if the specified &lt;a href=&quot;contains#kotlin.ranges%24contains%28kotlin.ranges.ClosedRange%28%28kotlin.Int%29%29%2C+kotlin.Byte%29%2Fvalue&quot;&gt;value&lt;/a&gt; belongs to this range.</source>
          <target state="translated">지정된 &lt;a href=&quot;contains#kotlin.ranges%24contains%28kotlin.ranges.ClosedRange%28%28kotlin.Int%29%29%2C+kotlin.Byte%29%2Fvalue&quot;&gt;값&lt;/a&gt; 이이 범위에 속 하는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="3139767385b45f78f12bc1a4beeeb8dbf90719eb" translate="yes" xml:space="preserve">
          <source>Checks if the specified &lt;a href=&quot;contains#kotlin.ranges%24contains(kotlin.ranges.ClosedRange((kotlin.Int)),%20kotlin.Byte)/value&quot;&gt;value&lt;/a&gt; belongs to this range.</source>
          <target state="translated">지정된 &lt;a href=&quot;contains#kotlin.ranges%24contains(kotlin.ranges.ClosedRange((kotlin.Int)),%20kotlin.Byte)/value&quot;&gt;값&lt;/a&gt; 이이 범위에 속 하는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="6c4dc375b6189bd0d351b922264efc91169d72cb" translate="yes" xml:space="preserve">
          <source>Checks if the specified element is contained in this collection.</source>
          <target state="translated">지정된 요소가이 컬렉션에 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c2fcf22dd09b57d45aca55b0d4ee03697fcd22eb" translate="yes" xml:space="preserve">
          <source>Checks that the return type of the function is a subtype of &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">함수의 반환 유형이 &lt;code&gt;T&lt;/code&gt; 의 하위 유형인지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="e6db6a0fc051275ddea53d61be2db2cbb1e810ff" translate="yes" xml:space="preserve">
          <source>Checks whether the range is empty.</source>
          <target state="translated">범위가 비어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="784e01fd13af02a1546d65c30ddd520a4574740f" translate="yes" xml:space="preserve">
          <source>Checks whether the specified &lt;a href=&quot;../-closed-range/contains#kotlin.ranges.ClosedRange%24contains%28kotlin.ranges.ClosedRange.T%29%2Fvalue&quot;&gt;value&lt;/a&gt; belongs to the range.</source>
          <target state="translated">지정된 &lt;a href=&quot;../-closed-range/contains#kotlin.ranges.ClosedRange%24contains%28kotlin.ranges.ClosedRange.T%29%2Fvalue&quot;&gt;값&lt;/a&gt; 이 범위에 속 하는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="241a53048d89b8ec3653ae4a83dda4a4ea670a6f" translate="yes" xml:space="preserve">
          <source>Checks whether the specified &lt;a href=&quot;../-closed-range/contains#kotlin.ranges.ClosedRange%24contains(kotlin.ranges.ClosedRange.T)/value&quot;&gt;value&lt;/a&gt; belongs to the range.</source>
          <target state="translated">지정된 &lt;a href=&quot;../-closed-range/contains#kotlin.ranges.ClosedRange%24contains(kotlin.ranges.ClosedRange.T)/value&quot;&gt;값&lt;/a&gt; 이 범위에 속 하는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="377c8052c944d388ce9354706e2c9908f6cf58ae" translate="yes" xml:space="preserve">
          <source>Checks whether the specified &lt;a href=&quot;contains#kotlin.ranges.ClosedRange%24contains%28kotlin.ranges.ClosedRange.T%29%2Fvalue&quot;&gt;value&lt;/a&gt; belongs to the range.</source>
          <target state="translated">지정된 &lt;a href=&quot;contains#kotlin.ranges.ClosedRange%24contains%28kotlin.ranges.ClosedRange.T%29%2Fvalue&quot;&gt;값&lt;/a&gt; 이 범위에 속 하는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="78f8836bb253c6aaf309fd570c0d32734c368193" translate="yes" xml:space="preserve">
          <source>Checks whether the specified &lt;a href=&quot;contains#kotlin.ranges.ClosedRange%24contains(kotlin.ranges.ClosedRange.T)/value&quot;&gt;value&lt;/a&gt; belongs to the range.</source>
          <target state="translated">지정된 &lt;a href=&quot;contains#kotlin.ranges.ClosedRange%24contains(kotlin.ranges.ClosedRange.T)/value&quot;&gt;값&lt;/a&gt; 이 범위에 속 하는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="2d5a064f6bf5628b993a4a964a494b2ae945a7be" translate="yes" xml:space="preserve">
          <source>ChildNode</source>
          <target state="translated">ChildNode</target>
        </trans-unit>
        <trans-unit id="9ec69fceb9f11fc0aaaa5e9578e4b5c3b1f361a3" translate="yes" xml:space="preserve">
          <source>Children of a coroutine</source>
          <target state="translated">코 루틴의 아이들</target>
        </trans-unit>
        <trans-unit id="95dad7bbea504a28a666919c3c19bd3b56992309" translate="yes" xml:space="preserve">
          <source>Choose the dependency type based on your requirements.</source>
          <target state="translated">요구 사항에 따라 종속성 유형을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="7d19ab649c36f1e71753479734bc6ffb281cd6ce" translate="yes" xml:space="preserve">
          <source>Choosing &lt;code&gt;both&lt;/code&gt; as the compiler option (so that it will compile with both the legacy and the IR backend) means that some Gradle tasks are renamed to explicitly mark them as only affecting the legacy compilation. &lt;code&gt;compileKotlinJs&lt;/code&gt; is renamed to &lt;code&gt;compileKotlinJsLegacy&lt;/code&gt;, and &lt;code&gt;compileTestKotlinJs&lt;/code&gt; is renamed to &lt;code&gt;compileTestKotlinJsLegacy&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;both&lt;/code&gt; 컴파일러 옵션으로 선택하면 (레거시 및 IR 백엔드 모두로 컴파일되도록) 일부 Gradle 작업의 이름이 변경되어 기존 컴파일에만 영향을 미치는 것으로 명시 적으로 표시됩니다. &lt;code&gt;compileKotlinJs&lt;/code&gt; 가 로 이름이 변경되고 &lt;code&gt;compileKotlinJsLegacy&lt;/code&gt; 및 &lt;code&gt;compileTestKotlinJs&lt;/code&gt; 가 로 이름이 변경됩니다 &lt;code&gt;compileTestKotlinJsLegacy&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a86e600d651c7ed0e3f6d688622e1903715232e5" translate="yes" xml:space="preserve">
          <source>Choosing execution environment</source>
          <target state="translated">실행 환경 선택</target>
        </trans-unit>
        <trans-unit id="d1e180228c6e398b7ec6347f14f06e411633dcab" translate="yes" xml:space="preserve">
          <source>Choosing good names</source>
          <target state="translated">좋은 이름을 선택</target>
        </trans-unit>
        <trans-unit id="cb81b0ea51edd864a4d2b387a6128e8b39289c1e" translate="yes" xml:space="preserve">
          <source>Choosing the Target Module System</source>
          <target state="translated">대상 모듈 시스템 선택</target>
        </trans-unit>
        <trans-unit id="2d613e8cf4995ed4ea2074ffd09bb1edb2455897" translate="yes" xml:space="preserve">
          <source>Choosing the target module system</source>
          <target state="translated">대상 모듈 시스템 선택</target>
        </trans-unit>
        <trans-unit id="5294f3f6bd2303c17ec8c28def8c442c8afaed73" translate="yes" xml:space="preserve">
          <source>Choosing the target module system depends on your build environment:</source>
          <target state="translated">대상 모듈 시스템 선택은 빌드 환경에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="c2ada962c434eb1e78be70a26abac72b811941cd" translate="yes" xml:space="preserve">
          <source>Chunked</source>
          <target state="translated">Chunked</target>
        </trans-unit>
        <trans-unit id="355280bf7ee296c7cbd6b8ec30d87ef4a17e006a" translate="yes" xml:space="preserve">
          <source>Cinterop support</source>
          <target state="translated">Cinterop 지원</target>
        </trans-unit>
        <trans-unit id="963761801811c1bddaf2ec3c548b8a79c76cd5e4" translate="yes" xml:space="preserve">
          <source>Circular source set dependencies are prohibited.</source>
          <target state="translated">순환 소스 세트 종속성은 금지됩니다.</target>
        </trans-unit>
        <trans-unit id="24af4805460c6f81aecd55c0ccffcd29ad1751bd" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;AtomicReference&lt;/code&gt; can be used to publish the changed frozen state to other threads, and so build patterns like shared caches.</source>
          <target state="translated">클래스 &lt;code&gt;AtomicReference&lt;/code&gt; 를 사용하여 변경된 고정 상태를 다른 스레드에 게시하고 공유 캐시와 같은 패턴을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="26bc7eebf3d4e8cbe2b3a4171a8561966d397df1" translate="yes" xml:space="preserve">
          <source>Class Members</source>
          <target state="translated">반원</target>
        </trans-unit>
        <trans-unit id="de49d28923a369a4e8cc170c1f2aa1974a3997d6" translate="yes" xml:space="preserve">
          <source>Class References</source>
          <target state="translated">클래스 레퍼런스</target>
        </trans-unit>
        <trans-unit id="c06db6cb3409adf188ef08be3ccbdf1d0eca2e4d" translate="yes" xml:space="preserve">
          <source>Class WeakReference encapsulates weak reference to an object, which could be used to either retrieve a strong reference to an object, or return null, if object was already destoyed by the memory manager.</source>
          <target state="translated">클래스 WeakReference는 객체에 대한 약한 참조를 캡슐화합니다.이 참조는 객체에 대한 강한 참조를 검색하거나 메모리 관리자가 객체를 이미 제거한 경우 null을 반환하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e33345267f09a62cf04123d57a323a6bc3dd322d" translate="yes" xml:space="preserve">
          <source>Class WeakReference encapsulates weak reference to an object, which could be used to either retrieve a strong reference to an object, or return null, if object was already destroyed by the memory manager.</source>
          <target state="translated">WeakReference 클래스는 객체에 대한 약한 참조를 캡슐화합니다. 객체에 대한 강력한 참조를 검색하는 데 사용할 수 있거나, 객체가 이미 메모리 관리자에 의해 파괴 된 경우 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fa2cedf469d8336cd94fb0abbb0fd3104c6d13c2" translate="yes" xml:space="preserve">
          <source>Class header formatting</source>
          <target state="translated">클래스 헤더 형식</target>
        </trans-unit>
        <trans-unit id="3ca3662aaab3db7d7016712be4125f7cc47ad840" translate="yes" xml:space="preserve">
          <source>Class layout</source>
          <target state="translated">수업 레이아웃</target>
        </trans-unit>
        <trans-unit id="b847528b6f48fd68c33ba29cde1c7e26adff1eeb" translate="yes" xml:space="preserve">
          <source>Class members</source>
          <target state="translated">반원</target>
        </trans-unit>
        <trans-unit id="786c2c4cb21f1d18bde33c506a002d2c6a2d4d53" translate="yes" xml:space="preserve">
          <source>Class method or property</source>
          <target state="translated">수업 방법 또는 속성</target>
        </trans-unit>
        <trans-unit id="94d1096d6809cce30c8f55717f3794c953475dff" translate="yes" xml:space="preserve">
          <source>Class names should use &lt;code&gt;UpperCamelCase&lt;/code&gt;, just like in Python.</source>
          <target state="translated">클래스 이름은 Python과 마찬가지로 &lt;code&gt;UpperCamelCase&lt;/code&gt; 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="418f8d9fce3be7b19c0c8839c37326b2373f07e8" translate="yes" xml:space="preserve">
          <source>Class properties and parameters</source>
          <target state="translated">클래스 속성 및 매개 변수</target>
        </trans-unit>
        <trans-unit id="c9305cbcea295abc2f1a4bfcfed9c05191571c10" translate="yes" xml:space="preserve">
          <source>Class references</source>
          <target state="translated">클래스 참조</target>
        </trans-unit>
        <trans-unit id="739a5b9e91e2f2089f57793db0dfdcb96d4b25d5" translate="yes" xml:space="preserve">
          <source>Class representing abstract computation, whose result may become available in the future.</source>
          <target state="translated">추후에 사용 가능한 결과를 얻을 수있는 추상 계산을 나타내는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="3b4694a905056b637efc568c69caf57fafd23e49" translate="yes" xml:space="preserve">
          <source>Class representing worker.</source>
          <target state="translated">작업자를 나타내는 클래스.</target>
        </trans-unit>
        <trans-unit id="300a654eb5f94bcc3ea07a759e8fca72358640a2" translate="yes" xml:space="preserve">
          <source>Class, interface or object, annotation class is also included</source>
          <target state="translated">클래스, 인터페이스 또는 객체, 주석 클래스도 포함</target>
        </trans-unit>
        <trans-unit id="658f652cff731988820e41112c49edab3550929f" translate="yes" xml:space="preserve">
          <source>ClassCastException</source>
          <target state="translated">ClassCastException</target>
        </trans-unit>
        <trans-unit id="ed1846afee3be21521286932b99e2aeae9e6414a" translate="yes" xml:space="preserve">
          <source>Classes</source>
          <target state="translated">Classes</target>
        </trans-unit>
        <trans-unit id="a1cf3fc64b992150c2877b0a249fcfe3b1ca8ca9" translate="yes" xml:space="preserve">
          <source>Classes and Inheritance</source>
          <target state="translated">클래스와 상속</target>
        </trans-unit>
        <trans-unit id="40203bad124f05ed8e987740b6dd6f0b6724a055" translate="yes" xml:space="preserve">
          <source>Classes and Interfaces</source>
          <target state="translated">클래스와 인터페이스</target>
        </trans-unit>
        <trans-unit id="2902dddfe7eeba1a427ea8221c30e536b01ee124" translate="yes" xml:space="preserve">
          <source>Classes and Objects from Kotlin</source>
          <target state="translated">코 틀린의 클래스와 객체</target>
        </trans-unit>
        <trans-unit id="62ee3141d89c1d38f5b87e9404fe625db2c24e84" translate="yes" xml:space="preserve">
          <source>Classes and interfaces marked with this annotation are restricted when used as receivers for extension &lt;code&gt;suspend&lt;/code&gt; functions. These &lt;code&gt;suspend&lt;/code&gt; extensions can only invoke other member or extension &lt;code&gt;suspend&lt;/code&gt; functions on this particular receiver and are restricted from calling arbitrary suspension functions.</source>
          <target state="translated">이 주석으로 표시된 클래스와 인터페이스는 확장 &lt;code&gt;suspend&lt;/code&gt; 기능의 수신기로 사용될 때 제한됩니다 . 이러한 &lt;code&gt;suspend&lt;/code&gt; 확장 프로그램은 이 특정 수신기에서 다른 멤버 또는 확장 &lt;code&gt;suspend&lt;/code&gt; 기능 만 호출 할 수 있으며 임의의 일시 중단 기능을 호출 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9c91f6b9044a0f2b2db400d30e36f06c843be5ac" translate="yes" xml:space="preserve">
          <source>Classes and interfaces marked with this annotation are restricted when used as receivers for extension &lt;code&gt;suspend&lt;/code&gt; functions. These &lt;code&gt;suspend&lt;/code&gt; extensions can only invoke other member or extension &lt;code&gt;suspend&lt;/code&gt; functions on this particular receiver only and are restricted from calling arbitrary suspension functions.</source>
          <target state="translated">이 주석으로 표시된 클래스와 인터페이스는 확장 &lt;code&gt;suspend&lt;/code&gt; 기능의 수신기로 사용될 때 제한됩니다 . 이러한 &lt;code&gt;suspend&lt;/code&gt; 확장 프로그램은 이 특정 수신기에서만 다른 멤버 또는 확장 &lt;code&gt;suspend&lt;/code&gt; 기능 만 호출 할 수 있으며 임의의 일시 중단 기능을 호출 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6ea81b6f99457a55c5e36d73a36d9cdc43d87c81" translate="yes" xml:space="preserve">
          <source>Classes are declared with the &lt;code&gt;class&lt;/code&gt; keyword. A basic class without any properties or functions of its own looks like this:</source>
          <target state="translated">클래스는 &lt;code&gt;class&lt;/code&gt; 키워드 로 선언됩니다 . 자체 속성이나 기능이없는 기본 클래스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f0b20f200e8aa6bec8b3b657884db2f548fa3c4f" translate="yes" xml:space="preserve">
          <source>Classes can be nested in other classes:</source>
          <target state="translated">클래스는 다른 클래스에 중첩 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e459e3dc5d0120109463a734b201906c6c7bea8" translate="yes" xml:space="preserve">
          <source>Classes can contain:</source>
          <target state="translated">수업에는 다음이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f2b13ee61eb4f3131fd5ffd4139739484bc15d76" translate="yes" xml:space="preserve">
          <source>Classes in Kotlin are declared using the keyword &lt;em&gt;class&lt;/em&gt;:</source>
          <target state="translated">Kotlin의 클래스는 &lt;em&gt;class&lt;/em&gt; 키워드를 사용하여 선언됩니다 .</target>
        </trans-unit>
        <trans-unit id="aaa6d27710227b6755bbf2bf6817120e049c2431" translate="yes" xml:space="preserve">
          <source>Classes that don't declare a superclass implicitly inherit from &lt;code&gt;Any&lt;/code&gt;. The subclass must invoke one of the constructors of the base class, passing either parameters from its own constructor or constant values:</source>
          <target state="translated">슈퍼 클래스를 선언하지 않은 클래스는 암시 적으로 &lt;code&gt;Any&lt;/code&gt; 에서 상속받습니다 . 서브 클래스는 기본 클래스의 생성자 중 하나를 호출하여 자체 생성자의 매개 변수 또는 상수 값을 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="9f74da2d6fcc5b1e3989105668661996b416739b" translate="yes" xml:space="preserve">
          <source>Classes that inherit from this interface can be represented as a sequence of elements that can be iterated over and that supports removing elements during iteration.</source>
          <target state="translated">이 인터페이스에서 상속 된 클래스는 반복 될 수 있고 반복 중에 요소 제거를 지원하는 일련의 요소로 표현 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="218c90a3c100273875eb842b2e06a420616a00bf" translate="yes" xml:space="preserve">
          <source>Classes that inherit from this interface can be represented as a sequence of elements that can be iterated over.</source>
          <target state="translated">이 인터페이스에서 상속 된 클래스는 반복 될 수있는 일련의 요소로 표현 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="95d246c21ff1953254e36cf43d1e6189b1f2b589" translate="yes" xml:space="preserve">
          <source>Classes which inherit from this interface have a defined total ordering between their instances.</source>
          <target state="translated">이 인터페이스에서 상속 된 클래스는 인스턴스간에 정의 된 총 순서를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="c05bb6d369456665cb374adb88d5a5189bfc260d" translate="yes" xml:space="preserve">
          <source>Classes with a few primary constructor parameters can be written in a single line:</source>
          <target state="translated">몇 가지 기본 생성자 매개 변수가있는 클래스를 한 줄로 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="690d1266f3666bd04ed2310538c65ab6bbd96b89" translate="yes" xml:space="preserve">
          <source>Classes with longer headers should be formatted so that each primary constructor parameter is in a separate line with indentation. Also, the closing parenthesis should be on a new line. If we use inheritance, then the superclass constructor call or list of implemented interfaces should be located on the same line as the parenthesis:</source>
          <target state="translated">헤더가 긴 클래스는 각 기본 생성자 매개 변수가 들여 쓰기가있는 별도의 행에 있도록 형식화해야합니다. 또한 닫는 괄호는 새 줄에 있어야합니다. 상속을 사용하는 경우 수퍼 클래스 생성자 호출 또는 구현 된 인터페이스 목록은 괄호와 같은 줄에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="9ae3fa38ad86b1ad08d69c23b619b3f413fb2638" translate="yes" xml:space="preserve">
          <source>Classes, objects, interfaces, constructors, functions, properties and their setters can have &lt;em&gt;visibility modifiers&lt;/em&gt;. (Getters always have the same visibility as the property.) There are four visibility modifiers in Kotlin: &lt;code&gt;private&lt;/code&gt;, &lt;code&gt;protected&lt;/code&gt;, &lt;code&gt;internal&lt;/code&gt; and &lt;code&gt;public&lt;/code&gt;. The default visibility, used if there is no explicit modifier, is &lt;code&gt;public&lt;/code&gt;.</source>
          <target state="translated">클래스, 객체, 인터페이스, 생성자, 함수, 속성 및 해당 세터에는 &lt;em&gt;가시성 수정자가&lt;/em&gt; 있을 수 있습니다 . (Getters는 항상 속성과 가시성이 동일합니다.) Kotlin에는 &lt;code&gt;private&lt;/code&gt; , &lt;code&gt;protected&lt;/code&gt; , &lt;code&gt;internal&lt;/code&gt; 및 &lt;code&gt;public&lt;/code&gt; 네 가지 가시성 수정자가 있습니다. 명시적인 수정자가없는 경우 사용되는 기본 가시성은 &lt;code&gt;public&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5e5e844f4cc4472e8f387eb40fc372d9985361c9" translate="yes" xml:space="preserve">
          <source>Classification of sequences</source>
          <target state="translated">시퀀스의 분류</target>
        </trans-unit>
        <trans-unit id="30ca825b8bb5323b328e648a5d08ad44aff90650" translate="yes" xml:space="preserve">
          <source>Clears reference to an object.</source>
          <target state="translated">객체에 대한 참조를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="e8cf7637501db2656de0d7f42ee9a9c03c8b0b6b" translate="yes" xml:space="preserve">
          <source>Clears the bit specified</source>
          <target state="translated">지정된 비트를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="e0bcce62a3890dcc5973393a9163d78794eaca02" translate="yes" xml:space="preserve">
          <source>Clears the bits with indices between &lt;a href=&quot;clear#kotlin.native.BitSet%24clear%28kotlin.Int%2C+kotlin.Int%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;clear#kotlin.native.BitSet%24clear%28kotlin.Int%2C+kotlin.Int%29%2Fto&quot;&gt;to&lt;/a&gt; (exclusive) to the specified value.</source>
          <target state="translated">사이 인덱스와 비트를 클리어 &lt;a href=&quot;clear#kotlin.native.BitSet%24clear%28kotlin.Int%2C+kotlin.Int%29%2Ffrom&quot;&gt;행&lt;/a&gt; (포함)하고 &lt;a href=&quot;clear#kotlin.native.BitSet%24clear%28kotlin.Int%2C+kotlin.Int%29%2Fto&quot;&gt;로&lt;/a&gt; 지정된 값 (배타적).</target>
        </trans-unit>
        <trans-unit id="b68a01e37c95acc52cd4015d8d64aac3f1589882" translate="yes" xml:space="preserve">
          <source>Clears the bits with indices between &lt;a href=&quot;clear#kotlin.native.BitSet%24clear(kotlin.Int,%20kotlin.Int)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;clear#kotlin.native.BitSet%24clear(kotlin.Int,%20kotlin.Int)/to&quot;&gt;to&lt;/a&gt; (exclusive) to the specified value.</source>
          <target state="translated">&lt;a href=&quot;clear#kotlin.native.BitSet%24clear(kotlin.Int,%20kotlin.Int)/from&quot;&gt;from&lt;/a&gt; (포함)과 &lt;a href=&quot;clear#kotlin.native.BitSet%24clear(kotlin.Int,%20kotlin.Int)/to&quot;&gt;to&lt;/a&gt; (배타적) 사이의 인덱스가있는 비트를 지정된 값 까지 지 웁니다 .</target>
        </trans-unit>
        <trans-unit id="dc80672ef521efc0ef0a17410004a7d69a140be2" translate="yes" xml:space="preserve">
          <source>Clears the content of this string builder making it empty and returns this instance.</source>
          <target state="translated">이 문자열 작성기의 내용을 비우고이 인스턴스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d3d88a2c683fad64bf6150df6c700de5ce103013" translate="yes" xml:space="preserve">
          <source>Clears the content of this string builder making it empty.</source>
          <target state="translated">이 캐릭터 라인 빌더의 내용을 비워 비 웁니다.</target>
        </trans-unit>
        <trans-unit id="2d13337dc8859ed87029585721e2ef11de61d590" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Finish&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;마침을&lt;/strong&gt; 클릭 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="b3d9df2ae5ec674d48a2d08fb71c71060e9c1997" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Next&lt;/strong&gt;, and on the next screen click &lt;strong&gt;Finish&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;다음을&lt;/strong&gt; 클릭 하고 다음 화면에서 &lt;strong&gt;마침을&lt;/strong&gt; 클릭 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="5a907eabe68ccd173cd42bcd6494cdd0ccd78aef" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Next&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;다음을&lt;/strong&gt; 클릭 합니다.</target>
        </trans-unit>
        <trans-unit id="8545475c874d8cd5b229885080e6baa529daf756" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;OK&lt;/strong&gt; and here it is - your first Kotlin application for Android!</source>
          <target state="translated">&lt;strong&gt;확인을&lt;/strong&gt; 클릭하면 Android 용 첫 번째 Kotlin 응용 프로그램입니다!</target>
        </trans-unit>
        <trans-unit id="1bdd79b12628d8c4ec4226ff4207341dcb869ab8" translate="yes" xml:space="preserve">
          <source>Client</source>
          <target state="translated">Client</target>
        </trans-unit>
        <trans-unit id="c1ea43cc96b64c5b96e79af93399cf2b2084812b" translate="yes" xml:space="preserve">
          <source>Client &amp;mdash; Server</source>
          <target state="translated">클라이언트 서버</target>
        </trans-unit>
        <trans-unit id="3fefa8efc704dac1aaa32805e84422b049df0608" translate="yes" xml:space="preserve">
          <source>ClientQueryOptions</source>
          <target state="translated">ClientQueryOptions</target>
        </trans-unit>
        <trans-unit id="9308fa63d3b0d3f3953d6e8e033c4592e38c818c" translate="yes" xml:space="preserve">
          <source>ClientType</source>
          <target state="translated">ClientType</target>
        </trans-unit>
        <trans-unit id="28e22fe3dde53ce03b40861a4b22d205384bde66" translate="yes" xml:space="preserve">
          <source>Clients</source>
          <target state="translated">Clients</target>
        </trans-unit>
        <trans-unit id="3396ad3f61374789385264c17071d7920175b6b1" translate="yes" xml:space="preserve">
          <source>ClipboardEventInit</source>
          <target state="translated">ClipboardEventInit</target>
        </trans-unit>
        <trans-unit id="7297463a65daf3d1857f64c228deede347eddfef" translate="yes" xml:space="preserve">
          <source>ClipboardPermissionDescriptor</source>
          <target state="translated">ClipboardPermissionDescriptor</target>
        </trans-unit>
        <trans-unit id="04f6b3ea183eb9d70981161c4424a6cf525afd9f" translate="yes" xml:space="preserve">
          <source>Clock</source>
          <target state="translated">Clock</target>
        </trans-unit>
        <trans-unit id="352d68254a8dbdb5da50710c490a135fa2be0836" translate="yes" xml:space="preserve">
          <source>ClockMark</source>
          <target state="translated">ClockMark</target>
        </trans-unit>
        <trans-unit id="08901cb8f603fc4f56658ce59e856a8614c55bdc" translate="yes" xml:space="preserve">
          <source>CloseEventInit</source>
          <target state="translated">CloseEventInit</target>
        </trans-unit>
        <trans-unit id="5ef941e8317f9d6c1e61e23ae9571a727029b15a" translate="yes" xml:space="preserve">
          <source>Closeable.use calls Throwable.addSuppressed if available</source>
          <target state="translated">Closeable.use는 가능하면 Throwable.addSuppressed를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="5f1cfa5cccae266b661cf8d2e35cc3c9d6e700b9" translate="yes" xml:space="preserve">
          <source>ClosedFloatingPointRange</source>
          <target state="translated">ClosedFloatingPointRange</target>
        </trans-unit>
        <trans-unit id="e66ecb14f1e746c18112f64a72b8a97e74cd4009" translate="yes" xml:space="preserve">
          <source>ClosedRange</source>
          <target state="translated">ClosedRange</target>
        </trans-unit>
        <trans-unit id="60f8608476be28a4d9c3959f564fb6a26fd97ed9" translate="yes" xml:space="preserve">
          <source>Closing and iteration over channels</source>
          <target state="translated">채널을 통한 닫기 및 반복</target>
        </trans-unit>
        <trans-unit id="c63970fda29c5fc3fd5dcabe22511adc7684e67b" translate="yes" xml:space="preserve">
          <source>Closing resources with &lt;code&gt;finally&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;finally&lt;/code&gt; 리소스 닫기</target>
        </trans-unit>
        <trans-unit id="16b1546bfaf51b2730baa3cec8823ad69c6d520a" translate="yes" xml:space="preserve">
          <source>Closures</source>
          <target state="translated">Closures</target>
        </trans-unit>
        <trans-unit id="c48b7f655c90336133e0abdd77691431a8d756f1" translate="yes" xml:space="preserve">
          <source>CocoaPods Gradle plugin</source>
          <target state="translated">CocoaPods Gradle 플러그인</target>
        </trans-unit>
        <trans-unit id="382d31f023c9bcb43b5ca7cc209986730794a619" translate="yes" xml:space="preserve">
          <source>CocoaPods integration</source>
          <target state="translated">CocoaPods 통합</target>
        </trans-unit>
        <trans-unit id="0dc8282d7dc85c3178e5dfcd39b944dec26eb309" translate="yes" xml:space="preserve">
          <source>Code Style Migration Guide</source>
          <target state="translated">코드 스타일 마이그레이션 안내서</target>
        </trans-unit>
        <trans-unit id="6e1900956b7af4b3e764d0a9f1dd39862b2c3f3b" translate="yes" xml:space="preserve">
          <source>Code Style Support in IDE</source>
          <target state="translated">IDE에서 코드 스타일 지원</target>
        </trans-unit>
        <trans-unit id="95e2d4250e833bf800e26c20065cb31fb2944abe" translate="yes" xml:space="preserve">
          <source>Code and resources shared between all platforms. Available in all multiplatform projects. Used in all main &lt;a href=&quot;#compilations&quot;&gt;compilations&lt;/a&gt; of a project.</source>
          <target state="translated">모든 플랫폼간에 공유되는 코드 및 리소스. 모든 멀티 플랫폼 프로젝트에서 사용할 수 있습니다. 프로젝트의 모든 주요 &lt;a href=&quot;#compilations&quot;&gt;컴파일&lt;/a&gt; 에 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="689c8941933ed63c6b5bfe3e4d2d29363a21c8a4" translate="yes" xml:space="preserve">
          <source>Code in a derived class can call its superclass functions and property accessors implementations using the &lt;em&gt;super&lt;/em&gt; keyword:</source>
          <target state="translated">파생 클래스의 코드는 &lt;em&gt;super&lt;/em&gt; 키워드를 사용하여 &lt;em&gt;수퍼&lt;/em&gt; 클래스 함수 및 속성 접근 자 구현을 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="38b65f1911f810ba636b568c85967cb342529e39" translate="yes" xml:space="preserve">
          <source>Code inside the &lt;code&gt;flow { ... }&lt;/code&gt; builder block can suspend.</source>
          <target state="translated">&lt;code&gt;flow { ... }&lt;/code&gt; 빌더 블록 내부의 코드 가 일시 중단 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3feff91aa301fd63071554d4ba07806826f957f" translate="yes" xml:space="preserve">
          <source>Code inspections have different &lt;a href=&quot;https://www.jetbrains.com/help/idea/configuring-inspection-severities.html&quot;&gt;severity levels&lt;/a&gt;, to help you decide which suggestions to accept and which to ignore.</source>
          <target state="translated">코드 검사에는 수락 할 제안과 무시할 제안을 결정하는 데 도움 이되는 다양한 &lt;a href=&quot;https://www.jetbrains.com/help/idea/configuring-inspection-severities.html&quot;&gt;심각도 수준이&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="c53e7a06868b09a2cee74089e3be8ad4e179e690" translate="yes" xml:space="preserve">
          <source>Code that compiled and ran fine is now rejected with an error (at compile or link time). This includes removing language constructs and adding new restrictions.</source>
          <target state="translated">컴파일 및 정상적으로 실행 된 코드는 이제 오류 (컴파일 또는 링크 타임)와 함께 거부됩니다. 여기에는 언어 구문 제거 및 새로운 제한 추가가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="c855547cc4fe33e6d42489a2a61ab56ad1445b95" translate="yes" xml:space="preserve">
          <source>Code that executed normally is now throwing an exception.</source>
          <target state="translated">정상적으로 실행 된 코드에서 예외가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="f13c6d40584dcb243a09754125c5488f70e52a2c" translate="yes" xml:space="preserve">
          <source>Coding Conventions</source>
          <target state="translated">코딩 규칙</target>
        </trans-unit>
        <trans-unit id="c7c34570bc4ae5cf6513807cb1a8f5f2ea1eee4d" translate="yes" xml:space="preserve">
          <source>Coding conventions for libraries</source>
          <target state="translated">라이브러리 코딩 규칙</target>
        </trans-unit>
        <trans-unit id="bc3f46835837837b710b897deab33cc13b00336b" translate="yes" xml:space="preserve">
          <source>Collect the emitted values using the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/collect.html&quot;&gt;&lt;code&gt;collect()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/collect.html&quot;&gt; &lt;code&gt;collect()&lt;/code&gt; &lt;/a&gt; 함수를 사용하여 내 보낸 값을 수집 합니다.</target>
        </trans-unit>
        <trans-unit id="30c54a96f8011b39819ba18bcb53fcbb092d650d" translate="yes" xml:space="preserve">
          <source>Collection</source>
          <target state="translated">Collection</target>
        </trans-unit>
        <trans-unit id="14fdd8dcac971a994b5411211d8e00576a06662c" translate="yes" xml:space="preserve">
          <source>Collection Aggregate Operations</source>
          <target state="translated">수집 집계 작업</target>
        </trans-unit>
        <trans-unit id="4e0f5b0c66d1cd223759fde27b79982e1f6f14dc" translate="yes" xml:space="preserve">
          <source>Collection Operations Overview</source>
          <target state="translated">수집 작업 개요</target>
        </trans-unit>
        <trans-unit id="7df1eea5196a0f78eea81a1917411e169fb69417" translate="yes" xml:space="preserve">
          <source>Collection Ordering</source>
          <target state="translated">컬렉션 주문</target>
        </trans-unit>
        <trans-unit id="810938020ce0fa623bf8b6b80bc93b6eae4e2c5b" translate="yes" xml:space="preserve">
          <source>Collection Transformations</source>
          <target state="translated">컬렉션 변환</target>
        </trans-unit>
        <trans-unit id="397b4f490c84193b00e7ba069ff81641961e9bcd" translate="yes" xml:space="preserve">
          <source>Collection Write Operations</source>
          <target state="translated">컬렉션 쓰기 작업</target>
        </trans-unit>
        <trans-unit id="08d04ca5f235fcd82d2eb75492e8dd111912d256" translate="yes" xml:space="preserve">
          <source>Collection copying functions, such as &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/to-list&quot;&gt;&lt;code&gt;toList()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/to-mutable-list&quot;&gt;&lt;code&gt;toMutableList()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/to-set&quot;&gt;&lt;code&gt;toSet()&lt;/code&gt;&lt;/a&gt; and others, create a snapshot of a collection at a specific moment. Their result is a new collection of the same elements. If you add or remove elements from the original collection, this won't affect the copies. Copies may be changed independently of the source as well.</source>
          <target state="translated">&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/to-list&quot;&gt; &lt;code&gt;toList()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/to-mutable-list&quot;&gt; &lt;code&gt;toMutableList()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/to-set&quot;&gt; &lt;code&gt;toSet()&lt;/code&gt; &lt;/a&gt; 등과 같은 콜렉션 복사 함수 는 특정 순간에 콜렉션의 스냅 샷을 작성합니다. 결과는 동일한 요소의 새로운 모음입니다. 원본 컬렉션에서 요소를 추가하거나 제거해도 사본에는 영향을 미치지 않습니다. 사본은 소스와 독립적으로 변경 될 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b885525d98efe4aee3e905ef193585e65cdccdb1" translate="yes" xml:space="preserve">
          <source>Collection initialization can be used for restricting mutability. For example, if you create a &lt;code&gt;List&lt;/code&gt; reference to a &lt;code&gt;MutableList&lt;/code&gt;, the compiler will produce errors if you try to modify the collection through this reference.</source>
          <target state="translated">변경을 제한하기 위해 콜렉션 초기화를 사용할 수 있습니다. 예를 들어 &lt;code&gt;MutableList&lt;/code&gt; 에 대한 &lt;code&gt;List&lt;/code&gt; 참조를 작성하는 경우이 참조를 통해 콜렉션을 수정하려고하면 컴파일러에서 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4b32fbc1fca98bb132d9d320bd041ce9437c6dea" translate="yes" xml:space="preserve">
          <source>Collection literals (in annotations)</source>
          <target state="translated">컬렉션 리터럴 (주석)</target>
        </trans-unit>
        <trans-unit id="607dce0c5a77851f8dc9139664dff9aeab212d24" translate="yes" xml:space="preserve">
          <source>Collection of a flow always happens in the context of the calling coroutine. For example, if there is a &lt;code&gt;simple&lt;/code&gt; flow, then the following code runs in the context specified by the author of this code, regardless of the implementation details of the &lt;code&gt;simple&lt;/code&gt; flow:</source>
          <target state="translated">흐름의 수집은 항상 호출 코 루틴의 컨텍스트에서 발생합니다. 예를 들어 &lt;code&gt;simple&lt;/code&gt; 흐름 이있는 경우 다음 코드는 &lt;code&gt;simple&lt;/code&gt; 흐름 의 구현 세부 정보에 관계없이이 코드 작성자가 지정한 컨텍스트에서 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="7548e7d8a359f6eeb2acd80c812527da65246c55" translate="yes" xml:space="preserve">
          <source>Collection of annotations that allow to store constant values.</source>
          <target state="translated">상수 값을 저장할 수있는 주석 모음입니다.</target>
        </trans-unit>
        <trans-unit id="5313594c5a68a7bb87bfac9c6cddfb55726f67a0" translate="yes" xml:space="preserve">
          <source>Collection operations are declared in the standard library in two ways: &lt;a href=&quot;classes#class-members&quot;&gt;member functions&lt;/a&gt; of collection interfaces and &lt;a href=&quot;extensions#extension-functions&quot;&gt;extension functions&lt;/a&gt;.</source>
          <target state="translated">콜렉션 조작은 표준 라이브러리에서 두 가지 방식으로 선언됩니다. 콜렉션 인터페이스의 &lt;a href=&quot;classes#class-members&quot;&gt;멤버 함수&lt;/a&gt; 및 &lt;a href=&quot;extensions#extension-functions&quot;&gt;확장 함수&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="61d234098bb8881e194b33a0de7bd841e182dae0" translate="yes" xml:space="preserve">
          <source>Collection types</source>
          <target state="translated">수집 유형</target>
        </trans-unit>
        <trans-unit id="b784d66b099cfb0b75f9ec4453e5611fa5ec36fa" translate="yes" xml:space="preserve">
          <source>Collection types may be read-only or mutable in Kotlin, so Java's collections are mapped as follows (all Kotlin types in this table reside in the package &lt;code&gt;kotlin.collections&lt;/code&gt;):</source>
          <target state="translated">콜렉션 유형은 Kotlin에서 읽기 전용 또는 변경 가능할 수 있으므로 Java 콜렉션은 다음과 같이 맵핑됩니다 (이 테이블의 모든 Kotlin 유형은 &lt;code&gt;kotlin.collections&lt;/code&gt; 패키지에 있습니다 ).</target>
        </trans-unit>
        <trans-unit id="11f6cf75e8309dffe6f8bd94de9f9c6144ea6aed" translate="yes" xml:space="preserve">
          <source>Collection types, such as &lt;a href=&quot;-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt;, &lt;a href=&quot;-collection/index#kotlin.collections.Collection&quot;&gt;Collection&lt;/a&gt;, &lt;a href=&quot;-list/index#kotlin.collections.List&quot;&gt;List&lt;/a&gt;, &lt;a href=&quot;-set/index#kotlin.collections.Set&quot;&gt;Set&lt;/a&gt;, &lt;a href=&quot;-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; and related top-level and extension functions.</source>
          <target state="translated">&lt;a href=&quot;-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; , &lt;a href=&quot;-collection/index#kotlin.collections.Collection&quot;&gt;Collection&lt;/a&gt; , &lt;a href=&quot;-list/index#kotlin.collections.List&quot;&gt;List&lt;/a&gt; , &lt;a href=&quot;-set/index#kotlin.collections.Set&quot;&gt;Set&lt;/a&gt; , &lt;a href=&quot;-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; 및 관련 최상위 및 확장 기능과 같은 콜렉션 유형 .</target>
        </trans-unit>
        <trans-unit id="20db58b5028ac6359ceed98ae317efd3933eac12" translate="yes" xml:space="preserve">
          <source>Collection types, such as &lt;a href=&quot;api/latest/jvm/stdlib/kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt;, &lt;a href=&quot;api/latest/jvm/stdlib/kotlin.collections/-collection/index#kotlin.collections.Collection&quot;&gt;Collection&lt;/a&gt;, &lt;a href=&quot;api/latest/jvm/stdlib/kotlin.collections/-list/index#kotlin.collections.List&quot;&gt;List&lt;/a&gt;, &lt;a href=&quot;api/latest/jvm/stdlib/kotlin.collections/-set/index#kotlin.collections.Set&quot;&gt;Set&lt;/a&gt;, &lt;a href=&quot;api/latest/jvm/stdlib/kotlin.collections/-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; and related top-level and extension functions.</source>
          <target state="translated">&lt;a href=&quot;api/latest/jvm/stdlib/kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; , &lt;a href=&quot;api/latest/jvm/stdlib/kotlin.collections/-collection/index#kotlin.collections.Collection&quot;&gt;Collection&lt;/a&gt; , &lt;a href=&quot;api/latest/jvm/stdlib/kotlin.collections/-list/index#kotlin.collections.List&quot;&gt;List&lt;/a&gt; , &lt;a href=&quot;api/latest/jvm/stdlib/kotlin.collections/-set/index#kotlin.collections.Set&quot;&gt;Set&lt;/a&gt; , &lt;a href=&quot;api/latest/jvm/stdlib/kotlin.collections/-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; 및 관련 최상위 및 확장 기능과 같은 콜렉션 유형 .</target>
        </trans-unit>
        <trans-unit id="4bbb632f02fd69807705c0179999c17d35c93b0f" translate="yes" xml:space="preserve">
          <source>Collections</source>
          <target state="translated">Collections</target>
        </trans-unit>
        <trans-unit id="0479b59b3b214f741c9ee3783198a1f41ae247af" translate="yes" xml:space="preserve">
          <source>Collections are a common concept for most programming languages, so if you're familiar with, for example, Java or Python collections, you can skip this introduction and proceed to the detailed sections.</source>
          <target state="translated">컬렉션은 대부분의 프로그래밍 언어에 대한 일반적인 개념이므로 Java 또는 Python 컬렉션과 같이 익숙한 경우이 소개를 건너 뛰고 자세한 섹션으로 진행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8635b37eb9f58186e764d3c5e9b5b97675011777" translate="yes" xml:space="preserve">
          <source>Collections can be created in result of various operations on other collections. For example, &lt;a href=&quot;collection-filtering&quot;&gt;filtering&lt;/a&gt; a list creates a new list of elements that match the filter:</source>
          <target state="translated">다른 컬렉션에 대한 다양한 작업의 결과로 컬렉션을 만들 수 있습니다. 예를 들어, 목록을 &lt;a href=&quot;collection-filtering&quot;&gt;필터링&lt;/a&gt; 하면 필터와 일치하는 새 요소 목록이 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="ca034ff377a02843d71c95bb3a5df11322dddf18" translate="yes" xml:space="preserve">
          <source>Collections of Nullable Type</source>
          <target state="translated">널 입력 가능 유형의 콜렉션</target>
        </trans-unit>
        <trans-unit id="d085afa2c1e8ea27cf07a0cd0405069bc5a67554" translate="yes" xml:space="preserve">
          <source>Collections, maps, object arrays, char sequences, and sequences now have an &lt;code&gt;ifEmpty&lt;/code&gt; function, which allows specifying a fallback value that will be used instead of the receiver if it is empty:</source>
          <target state="translated">컬렉션, 맵, 객체 배열, 문자 시퀀스 및 시퀀스에는 이제 &lt;code&gt;ifEmpty&lt;/code&gt; 함수가있어 수신자가 비어있는 경우 수신기 대신 사용되는 폴백 값을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="01178594f1857a805ef4f0dd96a2eb02ccc63b6f" translate="yes" xml:space="preserve">
          <source>Collector try and catch</source>
          <target state="translated">수집가 시도 및 잡기</target>
        </trans-unit>
        <trans-unit id="ac30df75efbedb8442edcd22700caca733d79868" translate="yes" xml:space="preserve">
          <source>Colon</source>
          <target state="translated">Colon</target>
        </trans-unit>
        <trans-unit id="84d20491bee1cca222700aa29435b8f60c127a70" translate="yes" xml:space="preserve">
          <source>ColorSpaceConversion</source>
          <target state="translated">ColorSpaceConversion</target>
        </trans-unit>
        <trans-unit id="30d04e0fa9775766030300ce1babf8c3dc0c01f4" translate="yes" xml:space="preserve">
          <source>Combine</source>
          <target state="translated">Combine</target>
        </trans-unit>
        <trans-unit id="c7bfda196f4ddae8fef69a2e01292a44c62d2275" translate="yes" xml:space="preserve">
          <source>Combined, these mechanisms allow natural race-free programming with code reuse across platforms in MPP projects.</source>
          <target state="translated">이러한 메커니즘을 결합하면 MPP 프로젝트의 플랫폼간에 코드를 재사용하여 자연스러운 레이스 프리 프로그래밍이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="c48542a2c62cc4bc2dfea820e7587114391d017f" translate="yes" xml:space="preserve">
          <source>Combined, these mechanisms allow natural race-freeze programming with code reuse across platforms in MPP projects.</source>
          <target state="translated">이러한 메커니즘을 결합하면 MPP 프로젝트의 플랫폼에서 코드 재사용이 가능한 자연스러운 레이스 프리즈 프로그래밍이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="94a0b08038ced447ca0da39b325b928ab58d97f6" translate="yes" xml:space="preserve">
          <source>Combines this comparator and the given &lt;a href=&quot;../../kotlin.comparisons/then#kotlin.comparisons%24then%28kotlin.Comparator%28%28kotlin.comparisons.then.T%29%29%2C+kotlin.Comparator%28%28kotlin.comparisons.then.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt; such that the latter is applied only when the former considered values equal.</source>
          <target state="translated">이 비교기와 주어진 &lt;a href=&quot;../../kotlin.comparisons/then#kotlin.comparisons%24then%28kotlin.Comparator%28%28kotlin.comparisons.then.T%29%29%2C+kotlin.Comparator%28%28kotlin.comparisons.then.T%29%29%29%2Fcomparator&quot;&gt;비교기를&lt;/a&gt; 결합 하여 전자가 값이 동일하다고 간주되는 경우에만 후자를 적용합니다.</target>
        </trans-unit>
        <trans-unit id="f4ded846e966c56bbdc7aa091cefd2533d52d055" translate="yes" xml:space="preserve">
          <source>Combines this comparator and the given &lt;a href=&quot;../../kotlin.comparisons/then#kotlin.comparisons%24then(kotlin.Comparator((kotlin.comparisons.then.T)),%20kotlin.Comparator((kotlin.comparisons.then.T)))/comparator&quot;&gt;comparator&lt;/a&gt; such that the latter is applied only when the former considered values equal.</source>
          <target state="translated">이 비교기와 주어진 &lt;a href=&quot;../../kotlin.comparisons/then#kotlin.comparisons%24then(kotlin.Comparator((kotlin.comparisons.then.T)),%20kotlin.Comparator((kotlin.comparisons.then.T)))/comparator&quot;&gt;비교기를&lt;/a&gt; 결합 하여 전자가 동일한 값을 고려할 때만 후자가 적용되도록합니다.</target>
        </trans-unit>
        <trans-unit id="aa944040dfe0fb45014966e84a517fc243499d68" translate="yes" xml:space="preserve">
          <source>Combines this comparator and the given &lt;a href=&quot;../../kotlin.comparisons/then-descending#kotlin.comparisons%24thenDescending%28kotlin.Comparator%28%28kotlin.comparisons.thenDescending.T%29%29%2C+kotlin.Comparator%28%28kotlin.comparisons.thenDescending.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt; such that the latter is applied only when the former considered values equal.</source>
          <target state="translated">이 비교기와 주어진 &lt;a href=&quot;../../kotlin.comparisons/then-descending#kotlin.comparisons%24thenDescending%28kotlin.Comparator%28%28kotlin.comparisons.thenDescending.T%29%29%2C+kotlin.Comparator%28%28kotlin.comparisons.thenDescending.T%29%29%29%2Fcomparator&quot;&gt;비교기를&lt;/a&gt; 결합 하여 전자가 값이 동일하다고 간주되는 경우에만 후자를 적용합니다.</target>
        </trans-unit>
        <trans-unit id="d5df0607bfc7d07081d98f2232ec69dbb07df2bf" translate="yes" xml:space="preserve">
          <source>Combines this comparator and the given &lt;a href=&quot;../../kotlin.comparisons/then-descending#kotlin.comparisons%24thenDescending(kotlin.Comparator((kotlin.comparisons.thenDescending.T)),%20kotlin.Comparator((kotlin.comparisons.thenDescending.T)))/comparator&quot;&gt;comparator&lt;/a&gt; such that the latter is applied only when the former considered values equal.</source>
          <target state="translated">이 비교기와 주어진 &lt;a href=&quot;../../kotlin.comparisons/then-descending#kotlin.comparisons%24thenDescending(kotlin.Comparator((kotlin.comparisons.thenDescending.T)),%20kotlin.Comparator((kotlin.comparisons.thenDescending.T)))/comparator&quot;&gt;비교기를&lt;/a&gt; 결합 하여 전자가 동일한 값을 고려할 때만 후자가 적용되도록합니다.</target>
        </trans-unit>
        <trans-unit id="3182280e76b1e0ba69eeec6ebc5b81c116f7140b" translate="yes" xml:space="preserve">
          <source>Combines this comparator and the given &lt;a href=&quot;then#kotlin.comparisons%24then%28kotlin.Comparator%28%28kotlin.comparisons.then.T%29%29%2C+kotlin.Comparator%28%28kotlin.comparisons.then.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt; such that the latter is applied only when the former considered values equal.</source>
          <target state="translated">이 비교기와 주어진 &lt;a href=&quot;then#kotlin.comparisons%24then%28kotlin.Comparator%28%28kotlin.comparisons.then.T%29%29%2C+kotlin.Comparator%28%28kotlin.comparisons.then.T%29%29%29%2Fcomparator&quot;&gt;비교기를&lt;/a&gt; 결합 하여 전자가 값이 동일하다고 간주되는 경우에만 후자를 적용합니다.</target>
        </trans-unit>
        <trans-unit id="9d495df0f105ee355d124d99d113a730ad352880" translate="yes" xml:space="preserve">
          <source>Combines this comparator and the given &lt;a href=&quot;then#kotlin.comparisons%24then(kotlin.Comparator((kotlin.comparisons.then.T)),%20kotlin.Comparator((kotlin.comparisons.then.T)))/comparator&quot;&gt;comparator&lt;/a&gt; such that the latter is applied only when the former considered values equal.</source>
          <target state="translated">이 비교기와 주어진 &lt;a href=&quot;then#kotlin.comparisons%24then(kotlin.Comparator((kotlin.comparisons.then.T)),%20kotlin.Comparator((kotlin.comparisons.then.T)))/comparator&quot;&gt;비교기를&lt;/a&gt; 결합 하여 전자가 동일한 값을 고려할 때만 후자가 적용되도록합니다.</target>
        </trans-unit>
        <trans-unit id="c9d4be5d9d7dd44f3d11fc44a518f6dc297db260" translate="yes" xml:space="preserve">
          <source>Combines this comparator and the given &lt;a href=&quot;then-descending#kotlin.comparisons%24thenDescending%28kotlin.Comparator%28%28kotlin.comparisons.thenDescending.T%29%29%2C+kotlin.Comparator%28%28kotlin.comparisons.thenDescending.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt; such that the latter is applied only when the former considered values equal.</source>
          <target state="translated">이 비교기와 주어진 &lt;a href=&quot;then-descending#kotlin.comparisons%24thenDescending%28kotlin.Comparator%28%28kotlin.comparisons.thenDescending.T%29%29%2C+kotlin.Comparator%28%28kotlin.comparisons.thenDescending.T%29%29%29%2Fcomparator&quot;&gt;비교기를&lt;/a&gt; 결합 하여 전자가 값이 동일하다고 간주되는 경우에만 후자를 적용합니다.</target>
        </trans-unit>
        <trans-unit id="5ccbc9d8e07be78cc0f15a1badca7482d8313eac" translate="yes" xml:space="preserve">
          <source>Combines this comparator and the given &lt;a href=&quot;then-descending#kotlin.comparisons%24thenDescending(kotlin.Comparator((kotlin.comparisons.thenDescending.T)),%20kotlin.Comparator((kotlin.comparisons.thenDescending.T)))/comparator&quot;&gt;comparator&lt;/a&gt; such that the latter is applied only when the former considered values equal.</source>
          <target state="translated">이 비교기와 주어진 &lt;a href=&quot;then-descending#kotlin.comparisons%24thenDescending(kotlin.Comparator((kotlin.comparisons.thenDescending.T)),%20kotlin.Comparator((kotlin.comparisons.thenDescending.T)))/comparator&quot;&gt;비교기를&lt;/a&gt; 결합 하여 전자가 동일한 값을 고려할 때만 후자가 적용되도록합니다.</target>
        </trans-unit>
        <trans-unit id="655832d3fde30ed3652945719ee23489155c6d76" translate="yes" xml:space="preserve">
          <source>Combining context elements</source>
          <target state="translated">컨텍스트 요소 결합</target>
        </trans-unit>
        <trans-unit id="a678820233b37a0386d0e5144dbf7eca5694adea" translate="yes" xml:space="preserve">
          <source>Command line keys accepted by the compiler are also a kind of public API, and they are subject to the same considerations. Supported flags (those that don't have the &quot;-X&quot; or &quot;-XX&quot; prefix) can be added only in feature releases and should be properly deprecated before removing them. The &quot;-X&quot; and &quot;-XX&quot; flags are experimental and can be added and removed at any time.</source>
          <target state="translated">컴파일러에서 허용하는 명령 줄 키도 일종의 공개 API이며 동일한 고려 사항이 적용됩니다. 지원되는 플래그 ( &quot;-X&quot;또는 &quot;-XX&quot;접두어가없는 플래그)는 기능 릴리스에만 추가 할 수 있으며 제거하기 전에 사용되지 않아야합니다. &quot;-X&quot;및 &quot;-XX&quot;플래그는 실험용이므로 언제든지 추가 및 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="4252d4d3d86dacf947a846c649f1acc677e6bde8" translate="yes" xml:space="preserve">
          <source>Comments are initiated with &lt;code&gt;//&lt;/code&gt; and last until the end of the line. Block comments start with &lt;code&gt;/*&lt;/code&gt; and end with &lt;code&gt;*/&lt;/code&gt;.</source>
          <target state="translated">주석은 &lt;code&gt;//&lt;/code&gt; 로 시작 하여 줄 끝까지 지속됩니다. 블록 주석은 &lt;code&gt;/*&lt;/code&gt; 로 시작 하고 &lt;code&gt;*/&lt;/code&gt; 로 끝납니다 .</target>
        </trans-unit>
        <trans-unit id="0e642e061623271094dc7ea7c52704294acbde8e" translate="yes" xml:space="preserve">
          <source>Common code can rely on a set of libraries that cover everyday tasks such as &lt;a href=&quot;http://ktor.io/clients/http-client/multiplatform.html&quot;&gt;HTTP&lt;/a&gt;, &lt;a href=&quot;https://github.com/Kotlin/kotlinx.serialization&quot;&gt;serialization&lt;/a&gt;, and &lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines&quot;&gt;managing coroutines&lt;/a&gt;. Also, an extensive standard library is available on all platforms.</source>
          <target state="translated">공통 코드는 &lt;a href=&quot;http://ktor.io/clients/http-client/multiplatform.html&quot;&gt;HTTP&lt;/a&gt; , &lt;a href=&quot;https://github.com/Kotlin/kotlinx.serialization&quot;&gt;직렬화&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines&quot;&gt;코 루틴 관리&lt;/a&gt; 와 같은 일상적인 작업을 다루는 일련의 라이브러리에 의존 할 수 있습니다 . 또한 모든 플랫폼에서 광범위한 표준 라이브러리를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c5c47656459f60f0feb2f4e1b5c3e54f10a0bec" translate="yes" xml:space="preserve">
          <source>Common exception processing API</source>
          <target state="translated">공통 예외 처리 API</target>
        </trans-unit>
        <trans-unit id="eacd29e150bf7f4b19b8fab3eb797604a6c1b6f2" translate="yes" xml:space="preserve">
          <source>Common operations</source>
          <target state="translated">일반적인 작업</target>
        </trans-unit>
        <trans-unit id="e4d860d70b0968a7d424f45eff863ac62b72ef78" translate="yes" xml:space="preserve">
          <source>Common operations are available for both &lt;a href=&quot;collections-overview#collection-types&quot;&gt;read-only and mutable collections&lt;/a&gt;. Common operations fall into these groups:</source>
          <target state="translated">&lt;a href=&quot;collections-overview#collection-types&quot;&gt;읽기 전용 및 변경 가능한 콜렉션&lt;/a&gt; 모두에 대해 공통 조작을 사용할 수 있습니다 . 일반적인 작업은 다음 그룹에 속합니다.</target>
        </trans-unit>
        <trans-unit id="3d7376e670dd5b4d233ded9240542489681eaa53" translate="yes" xml:space="preserve">
          <source>Common options</source>
          <target state="translated">일반적인 옵션</target>
        </trans-unit>
        <trans-unit id="b40c16c809d9f085eed9e9310288c4891fccf0d2" translate="yes" xml:space="preserve">
          <source>Common part</source>
          <target state="translated">공통 부분</target>
        </trans-unit>
        <trans-unit id="330e83daddac4ff84e2b44a0b55bc7b1aba95130" translate="yes" xml:space="preserve">
          <source>Common supertype calculation with non-proper type and flexible one leads to incorrect results</source>
          <target state="translated">부적합한 유형과 유연한 유형을 사용하는 일반적인 상위 유형 계산으로 인해 잘못된 결과가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1e3fbd778f529cdfc6164142e4e619271f0a6312" translate="yes" xml:space="preserve">
          <source>Common target configuration</source>
          <target state="translated">공통 대상 구성</target>
        </trans-unit>
        <trans-unit id="bfd58ee3a270f3a931009900e1008d549bbd7453" translate="yes" xml:space="preserve">
          <source>Community</source>
          <target state="translated">Community</target>
        </trans-unit>
        <trans-unit id="dcd05a800dce1c0a95f1b07835a587a1fa065ad4" translate="yes" xml:space="preserve">
          <source>Community Resources</source>
          <target state="translated">커뮤니티 리소스</target>
        </trans-unit>
        <trans-unit id="dc7a4ca91615d001457aed95dcc1d27922425da6" translate="yes" xml:space="preserve">
          <source>Companion</source>
          <target state="translated">Companion</target>
        </trans-unit>
        <trans-unit id="76a9034ecffd7cb1dff04cfc41816a3e9b5f342f" translate="yes" xml:space="preserve">
          <source>Companion Object Extension Functions</source>
          <target state="translated">컴패니언 객체 확장 함수</target>
        </trans-unit>
        <trans-unit id="d19ba530b1f6d42ff6d0697705f54d0607d522fb" translate="yes" xml:space="preserve">
          <source>Companion Object Extensions</source>
          <target state="translated">컴패니언 개체 확장</target>
        </trans-unit>
        <trans-unit id="c87b5c0cdaaf86742b62731a09a76f2906230aa1" translate="yes" xml:space="preserve">
          <source>Companion Object Functions</source>
          <target state="translated">컴패니언 객체 함수</target>
        </trans-unit>
        <trans-unit id="35085e4e1da1c965bcb73671fc6cd5c4f3c137f0" translate="yes" xml:space="preserve">
          <source>Companion Object Properties</source>
          <target state="translated">컴패니언 객체 속성</target>
        </trans-unit>
        <trans-unit id="9ccecc23410a1a5c9603c9f119fb36ba0d3a90c6" translate="yes" xml:space="preserve">
          <source>Companion Objects</source>
          <target state="translated">동반자 객체</target>
        </trans-unit>
        <trans-unit id="3e9e294591e17be498c2998b9dcdd5d9948d5b40" translate="yes" xml:space="preserve">
          <source>Companion object</source>
          <target state="translated">컴패니언 객체</target>
        </trans-unit>
        <trans-unit id="db9f5302d7578c7b0b299e25c0dbce75c111a3fd" translate="yes" xml:space="preserve">
          <source>Companion object extensions</source>
          <target state="translated">컴패니언 개체 확장</target>
        </trans-unit>
        <trans-unit id="876a320a63980b4dbb6c30fb84d4a4bcffe205aa" translate="yes" xml:space="preserve">
          <source>Companion objects</source>
          <target state="translated">컴패니언 객체</target>
        </trans-unit>
        <trans-unit id="ef74a191950a837cb2f7a2546b6adc5ee933766b" translate="yes" xml:space="preserve">
          <source>Companion objects and their members can only be accessed via the containing class name, not via instances of the containing class. Kotlin does not support class-level functions that also can be overridden in subclasses (like &lt;code&gt;@classmethod&lt;/code&gt; in Python). If you try to redeclare a companion object in a subclass, you'll just shadow the one from the base class. If you need an overridable &quot;class-level&quot; function, make it an ordinary open function in which you do not access any instance members - you can override it in subclasses, and when you call it via an object instance, the override in the object's class will be called. It is possible, but inconvenient, to call functions via a class reference in Kotlin, so we won't cover that here.</source>
          <target state="translated">컴패니언 개체 및 해당 멤버는 포함 클래스의 인스턴스가 아닌 포함 클래스 이름을 통해서만 액세스 할 수 있습니다. Kotlin은 서브 클래스 ( Python의 &lt;code&gt;@classmethod&lt;/code&gt; ) 에서 재정의 될 수있는 클래스 수준 함수를 지원하지 않습니다 . 서브 클래스에서 컴패니언 객체를 다시 선언하려고하면 기본 클래스에서 컴패니언 객체를 그림자 처리하면됩니다. 재정의 가능한 &quot;클래스 수준&quot;함수가 필요한 경우, 인스턴스 멤버에 액세스 할 수없는 일반적인 개방 함수로 만드십시오. 서브 클래스에서 재정의 할 수 있으며 오브젝트 인스턴스를 통해 호출 할 때 오브젝트의 재정의 수업이 호출됩니다. Kotlin에서 클래스 참조를 통해 함수를 호출하는 것이 가능하지만 불편하므로 여기서는 다루지 않습니다.</target>
        </trans-unit>
        <trans-unit id="eadfd3f2fff5b46637c267d52d54cd4bbd4cc506" translate="yes" xml:space="preserve">
          <source>Comparable</source>
          <target state="translated">Comparable</target>
        </trans-unit>
        <trans-unit id="bd5dc2ff43c21afc00e56a2f75cce397b8506026" translate="yes" xml:space="preserve">
          <source>Comparator</source>
          <target state="translated">Comparator</target>
        </trans-unit>
        <trans-unit id="a3a836144d10521d89db63993e5f03ccdb20e02b" translate="yes" xml:space="preserve">
          <source>Comparator binary search</source>
          <target state="translated">비교기 이진 검색</target>
        </trans-unit>
        <trans-unit id="1b61c50cc69d4a3899d2e5255c211dd339b0f329" translate="yes" xml:space="preserve">
          <source>Compare the types of bound and the corresponding unbound references. Bound callable reference has its receiver &quot;attached&quot; to it, so the type of the receiver is no longer a parameter:</source>
          <target state="translated">바운드 유형과 해당 언 바운드 참조를 비교하십시오. 바운드 호출 가능 참조에 수신자가 &quot;연결되어&quot;있으므로 수신자 유형이 더 이상 매개 변수가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="3a0f7e5fa5fa9afa8cee3b2620aba881e90696fe" translate="yes" xml:space="preserve">
          <source>Compared to publishing a plain Kotlin/JVM or Java project, there is no need to create publications manually via the &lt;code&gt;publishing { ... }&lt;/code&gt; DSL. The publications are automatically created for each of the targets that can be built on the current host, except for the Android target, which needs an additional step to configure publishing, see &lt;a href=&quot;#publishing-android-libraries&quot;&gt;Publishing Android libraries&lt;/a&gt;.</source>
          <target state="translated">일반 Kotlin / JVM 또는 Java 프로젝트 공개와 비교하여 &lt;code&gt;publishing { ... }&lt;/code&gt; DSL을 통해 공개를 수동으로 작성할 필요가 없습니다 . 게시를 구성하기위한 추가 단계가 필요한 Android 대상을 제외하고 현재 호스트에서 빌드 할 수있는 각 대상에 대해 발행물이 자동으로 작성됩니다 ( &lt;a href=&quot;#publishing-android-libraries&quot;&gt;Android 라이브러리&lt;/a&gt; 공개 참조) .</target>
        </trans-unit>
        <trans-unit id="64852406255a9a4113e2f4981e16599f3cbd0bde" translate="yes" xml:space="preserve">
          <source>Compares its two arguments for order. Returns zero if the arguments are equal, a negative number if the first argument is less than the second, or a positive number if the first argument is greater than the second.</source>
          <target state="translated">순서에 대한 두 인수를 비교합니다. 인수가 같으면 0을, 첫 번째 인수가 두 번째 인수보다 작 으면 음수를, 첫 번째 인수가 두 번째 인수보다 크면 양수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="90c5ea08e5923926d850965758a29907d554080d" translate="yes" xml:space="preserve">
          <source>Compares this list with another list instance with the ordered structural equality.</source>
          <target state="translated">이 목록을 정렬 된 구조적 동등성을 가진 다른 목록 인스턴스와 비교합니다.</target>
        </trans-unit>
        <trans-unit id="950ffca5dd347a5c64e4906fa2cb58f36f144d25" translate="yes" xml:space="preserve">
          <source>Compares this list with other list instance with the ordered structural equality.</source>
          <target state="translated">이 목록을 다른 목록 인스턴스와 순서화 된 구조적 동등성과 비교합니다.</target>
        </trans-unit>
        <trans-unit id="554350438c48966aa52d911e0f5e0fb4bd143c4b" translate="yes" xml:space="preserve">
          <source>Compares this map with other instance with the ordered structural equality.</source>
          <target state="translated">이 맵을 다른 인스턴스와 순서가 지정된 구조적 평등과 비교합니다.</target>
        </trans-unit>
        <trans-unit id="fad1ea1a98575ba2e457b4fe384ad3fa1869af18" translate="yes" xml:space="preserve">
          <source>Compares this object with the specified object for order. Returns zero if this object is equal to the specified &lt;a href=&quot;../-comparable/compare-to#kotlin.Comparable%24compareTo%28kotlin.Comparable.T%29%2Fother&quot;&gt;other&lt;/a&gt; object, a negative number if it's less than &lt;a href=&quot;../-comparable/compare-to#kotlin.Comparable%24compareTo%28kotlin.Comparable.T%29%2Fother&quot;&gt;other&lt;/a&gt;, or a positive number if it's greater than &lt;a href=&quot;../-comparable/compare-to#kotlin.Comparable%24compareTo%28kotlin.Comparable.T%29%2Fother&quot;&gt;other&lt;/a&gt;.</source>
          <target state="translated">이 객체를 지정된 객체와 순서와 비교합니다. 이 객체가 지정된 같으면 0을 리턴 &lt;a href=&quot;../-comparable/compare-to#kotlin.Comparable%24compareTo%28kotlin.Comparable.T%29%2Fother&quot;&gt;다른&lt;/a&gt; 개체 미만이라면 음수 &lt;a href=&quot;../-comparable/compare-to#kotlin.Comparable%24compareTo%28kotlin.Comparable.T%29%2Fother&quot;&gt;다른&lt;/a&gt; 또는 양수의 그것보다 큰 경우에 &lt;a href=&quot;../-comparable/compare-to#kotlin.Comparable%24compareTo%28kotlin.Comparable.T%29%2Fother&quot;&gt;다른&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3190d62f4d131740bed2429e35fbc6ae47243c94" translate="yes" xml:space="preserve">
          <source>Compares this object with the specified object for order. Returns zero if this object is equal to the specified &lt;a href=&quot;../-comparable/compare-to#kotlin.Comparable%24compareTo(kotlin.Comparable.T)/other&quot;&gt;other&lt;/a&gt; object, a negative number if it's less than &lt;a href=&quot;../-comparable/compare-to#kotlin.Comparable%24compareTo(kotlin.Comparable.T)/other&quot;&gt;other&lt;/a&gt;, or a positive number if it's greater than &lt;a href=&quot;../-comparable/compare-to#kotlin.Comparable%24compareTo(kotlin.Comparable.T)/other&quot;&gt;other&lt;/a&gt;.</source>
          <target state="translated">주문을 위해이 객체를 지정된 객체와 비교합니다. 이 객체가 지정된 같으면 0을 리턴 &lt;a href=&quot;../-comparable/compare-to#kotlin.Comparable%24compareTo(kotlin.Comparable.T)/other&quot;&gt;다른&lt;/a&gt; 개체 미만이라면 음수 &lt;a href=&quot;../-comparable/compare-to#kotlin.Comparable%24compareTo(kotlin.Comparable.T)/other&quot;&gt;다른&lt;/a&gt; 또는 양수의 그것보다 큰 경우에 &lt;a href=&quot;../-comparable/compare-to#kotlin.Comparable%24compareTo(kotlin.Comparable.T)/other&quot;&gt;다른&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5e62d9fb41d6ea3aab1f9658eba34bea551e1eee" translate="yes" xml:space="preserve">
          <source>Compares this object with the specified object for order. Returns zero if this object is equal to the specified &lt;a href=&quot;compare-to#kotlin.Comparable%24compareTo%28kotlin.Comparable.T%29%2Fother&quot;&gt;other&lt;/a&gt; object, a negative number if it's less than &lt;a href=&quot;compare-to#kotlin.Comparable%24compareTo%28kotlin.Comparable.T%29%2Fother&quot;&gt;other&lt;/a&gt;, or a positive number if it's greater than &lt;a href=&quot;compare-to#kotlin.Comparable%24compareTo%28kotlin.Comparable.T%29%2Fother&quot;&gt;other&lt;/a&gt;.</source>
          <target state="translated">이 객체를 지정된 객체와 순서와 비교합니다. 이 객체가 지정된 같으면 0을 리턴 &lt;a href=&quot;compare-to#kotlin.Comparable%24compareTo%28kotlin.Comparable.T%29%2Fother&quot;&gt;다른&lt;/a&gt; 개체 미만이라면 음수 &lt;a href=&quot;compare-to#kotlin.Comparable%24compareTo%28kotlin.Comparable.T%29%2Fother&quot;&gt;다른&lt;/a&gt; 또는 양수의 그것보다 큰 경우에 &lt;a href=&quot;compare-to#kotlin.Comparable%24compareTo%28kotlin.Comparable.T%29%2Fother&quot;&gt;다른&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d66583657cf1725802888b3a5f1571777b852fdf" translate="yes" xml:space="preserve">
          <source>Compares this object with the specified object for order. Returns zero if this object is equal to the specified &lt;a href=&quot;compare-to#kotlin.Comparable%24compareTo(kotlin.Comparable.T)/other&quot;&gt;other&lt;/a&gt; object, a negative number if it's less than &lt;a href=&quot;compare-to#kotlin.Comparable%24compareTo(kotlin.Comparable.T)/other&quot;&gt;other&lt;/a&gt;, or a positive number if it's greater than &lt;a href=&quot;compare-to#kotlin.Comparable%24compareTo(kotlin.Comparable.T)/other&quot;&gt;other&lt;/a&gt;.</source>
          <target state="translated">주문을 위해이 객체를 지정된 객체와 비교합니다. 이 객체가 지정된 같으면 0을 리턴 &lt;a href=&quot;compare-to#kotlin.Comparable%24compareTo(kotlin.Comparable.T)/other&quot;&gt;다른&lt;/a&gt; 개체 미만이라면 음수 &lt;a href=&quot;compare-to#kotlin.Comparable%24compareTo(kotlin.Comparable.T)/other&quot;&gt;다른&lt;/a&gt; 또는 양수의 그것보다 큰 경우에 &lt;a href=&quot;compare-to#kotlin.Comparable%24compareTo(kotlin.Comparable.T)/other&quot;&gt;다른&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4b5c37294f97a14ae629288d725d46e480de8ba0" translate="yes" xml:space="preserve">
          <source>Compares this set with another set instance with the unordered structural equality.</source>
          <target state="translated">이 세트를 정렬되지 않은 구조적 동등성을 가진 다른 세트 인스턴스와 비교합니다.</target>
        </trans-unit>
        <trans-unit id="b1d4a384eb36feb8cf6fa29323cb0a2d21427812" translate="yes" xml:space="preserve">
          <source>Compares this set with other set instance with the unordered structural equality.</source>
          <target state="translated">이 세트를 정렬되지 않은 구조적 동등성을 가진 다른 세트 인스턴스와 비교합니다.</target>
        </trans-unit>
        <trans-unit id="0902f9812b6489157b65ec558bae4edb57728b49" translate="yes" xml:space="preserve">
          <source>Compares this value with the specified value for order.</source>
          <target state="translated">이 값을 지정된 주문 값과 비교합니다.</target>
        </trans-unit>
        <trans-unit id="f81e03368adc7d7de8bbaf5d665e6612de25e329" translate="yes" xml:space="preserve">
          <source>Compares this value with the specified value for order. Returns zero if this value is equal to the specified other value, a negative number if it's less than other, or a positive number if it's greater than other.</source>
          <target state="translated">이 값을 지정된 주문 값과 비교합니다. 이 값이 지정된 다른 값과 같으면 0을 리턴하고, 다른 것보다 작은 경우 음수, 다른 것보다 큰 경우 양수</target>
        </trans-unit>
        <trans-unit id="0a662e45ba9016359694e1a7e66831bc977f9c5a" translate="yes" xml:space="preserve">
          <source>Compares two nullable &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; values. Null is considered less than any value.</source>
          <target state="translated">두 개의 nullable &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;비교&lt;/a&gt; 가능 값을 비교 합니다. 널은 임의의 값보다 작은 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="7f648bb84bfe559e5adececde2ace1dcea302ece" translate="yes" xml:space="preserve">
          <source>Compares two strings lexicographically, optionally ignoring case differences.</source>
          <target state="translated">두 개의 문자열을 사전 식으로 비교하고 선택적으로 대소 문자를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="9f25fd793181363d5737ac8ecae01b8fe3b0b8a8" translate="yes" xml:space="preserve">
          <source>Compares two values of range domain type and returns true if first is less than or equal to second.</source>
          <target state="translated">범위 도메인 유형의 두 값을 비교하고 first가 second보다 작거나 같으면 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="4c5c61a1bffaec58b4b1260a6d8a25b5edf748b8" translate="yes" xml:space="preserve">
          <source>Compares two values using the specified &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.T%2C+kotlin.Comparator%28%28kotlin.comparisons.compareValuesBy.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.K%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function to calculate the result of the comparison. The function is applied to the given values &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.T%2C+kotlin.Comparator%28%28kotlin.comparisons.compareValuesBy.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.K%29%29%29%2Fa&quot;&gt;a&lt;/a&gt; and &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.T%2C+kotlin.Comparator%28%28kotlin.comparisons.compareValuesBy.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.K%29%29%29%2Fb&quot;&gt;b&lt;/a&gt; and return objects of type K which are then being compared with the given &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.T%2C+kotlin.Comparator%28%28kotlin.comparisons.compareValuesBy.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.K%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.T%2C+kotlin.Comparator%28%28kotlin.comparisons.compareValuesBy.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.K%29%29%29%2Fselector&quot;&gt;선택기&lt;/a&gt; 함수를 사용하여 두 값을 비교하여 비교 결과를 계산합니다. 이 함수는 주어진 값 &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.T%2C+kotlin.Comparator%28%28kotlin.comparisons.compareValuesBy.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.K%29%29%29%2Fa&quot;&gt;a&lt;/a&gt; 와 &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.T%2C+kotlin.Comparator%28%28kotlin.comparisons.compareValuesBy.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.K%29%29%29%2Fb&quot;&gt;b에&lt;/a&gt; 적용되고 K 유형의 객체를 반환하고 주어진 &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.T%2C+kotlin.Comparator%28%28kotlin.comparisons.compareValuesBy.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.K%29%29%29%2Fcomparator&quot;&gt;비교기&lt;/a&gt; 와 비교 됩니다.</target>
        </trans-unit>
        <trans-unit id="157ca1b58611e00213cf38840de0b28de263312a" translate="yes" xml:space="preserve">
          <source>Compares two values using the specified &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.T%2C+kotlin.Function1%28%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.Comparable%28%28kotlin.Any%29%29%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function to calculate the result of the comparison. The function is applied to the given values &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.T%2C+kotlin.Function1%28%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.Comparable%28%28kotlin.Any%29%29%29%29%29%2Fa&quot;&gt;a&lt;/a&gt; and &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.T%2C+kotlin.Function1%28%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.Comparable%28%28kotlin.Any%29%29%29%29%29%2Fb&quot;&gt;b&lt;/a&gt; and return &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; objects. The result of comparison of these &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; instances is returned.</source>
          <target state="translated">지정된 &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.T%2C+kotlin.Function1%28%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.Comparable%28%28kotlin.Any%29%29%29%29%29%2Fselector&quot;&gt;선택기&lt;/a&gt; 함수를 사용하여 두 값을 비교하여 비교 결과를 계산합니다. 함수는 주어진 값 &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.T%2C+kotlin.Function1%28%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.Comparable%28%28kotlin.Any%29%29%29%29%29%2Fa&quot;&gt;a&lt;/a&gt; 와 &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.T%2C+kotlin.Function1%28%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.Comparable%28%28kotlin.Any%29%29%29%29%29%2Fb&quot;&gt;b에&lt;/a&gt; 적용되고 &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; 객체를 반환 합니다. 이러한 &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; 인스턴스 를 비교 한 결과 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="37483468d1d0abbd548c19ce4f9a366c705b1b9d" translate="yes" xml:space="preserve">
          <source>Compares two values using the specified &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy(kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.T,%20kotlin.Comparator((kotlin.comparisons.compareValuesBy.K)),%20kotlin.Function1((kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.K)))/selector&quot;&gt;selector&lt;/a&gt; function to calculate the result of the comparison. The function is applied to the given values &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy(kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.T,%20kotlin.Comparator((kotlin.comparisons.compareValuesBy.K)),%20kotlin.Function1((kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.K)))/a&quot;&gt;a&lt;/a&gt; and &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy(kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.T,%20kotlin.Comparator((kotlin.comparisons.compareValuesBy.K)),%20kotlin.Function1((kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.K)))/b&quot;&gt;b&lt;/a&gt; and return objects of type K which are then being compared with the given &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy(kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.T,%20kotlin.Comparator((kotlin.comparisons.compareValuesBy.K)),%20kotlin.Function1((kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.K)))/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy(kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.T,%20kotlin.Comparator((kotlin.comparisons.compareValuesBy.K)),%20kotlin.Function1((kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.K)))/selector&quot;&gt;선택기&lt;/a&gt; 함수를 사용하여 두 값을 비교하여 비교 결과를 계산합니다. 함수는 주어진 값 &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy(kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.T,%20kotlin.Comparator((kotlin.comparisons.compareValuesBy.K)),%20kotlin.Function1((kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.K)))/a&quot;&gt;a&lt;/a&gt; 와 &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy(kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.T,%20kotlin.Comparator((kotlin.comparisons.compareValuesBy.K)),%20kotlin.Function1((kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.K)))/b&quot;&gt;b에&lt;/a&gt; 적용 되고 주어진 &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy(kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.T,%20kotlin.Comparator((kotlin.comparisons.compareValuesBy.K)),%20kotlin.Function1((kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.K)))/comparator&quot;&gt;비교기&lt;/a&gt; 와 비교되는 K 유형의 객체를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="fa8ff08d38091c1115590e83835880e44f71aa75" translate="yes" xml:space="preserve">
          <source>Compares two values using the specified &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy(kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.T,%20kotlin.Function1((kotlin.comparisons.compareValuesBy.T,%20kotlin.Comparable?((kotlin.Any?)))))/selector&quot;&gt;selector&lt;/a&gt; function to calculate the result of the comparison. The function is applied to the given values &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy(kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.T,%20kotlin.Function1((kotlin.comparisons.compareValuesBy.T,%20kotlin.Comparable?((kotlin.Any?)))))/a&quot;&gt;a&lt;/a&gt; and &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy(kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.T,%20kotlin.Function1((kotlin.comparisons.compareValuesBy.T,%20kotlin.Comparable?((kotlin.Any?)))))/b&quot;&gt;b&lt;/a&gt; and return &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; objects. The result of comparison of these &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; instances is returned.</source>
          <target state="translated">지정된 &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy(kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.T,%20kotlin.Function1((kotlin.comparisons.compareValuesBy.T,%20kotlin.Comparable?((kotlin.Any?)))))/selector&quot;&gt;선택기&lt;/a&gt; 함수를 사용하여 두 값을 비교하여 비교 결과를 계산합니다. 이 함수는 주어진 값 &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy(kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.T,%20kotlin.Function1((kotlin.comparisons.compareValuesBy.T,%20kotlin.Comparable?((kotlin.Any?)))))/a&quot;&gt;a&lt;/a&gt; 와 &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy(kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.T,%20kotlin.Function1((kotlin.comparisons.compareValuesBy.T,%20kotlin.Comparable?((kotlin.Any?)))))/b&quot;&gt;b에&lt;/a&gt; 적용되고 &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; 객체를 반환 합니다. 이러한 &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; 인스턴스 의 비교 결과 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="37750917f27b0d713270a6193d01e2df7708d622" translate="yes" xml:space="preserve">
          <source>Compares two values using the specified functions &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.T%2C+kotlin.Array%28%28kotlin.Function1%28%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.Comparable%28%28kotlin.Any%29%29%29%29%29%29%29%2Fselectors&quot;&gt;selectors&lt;/a&gt; to calculate the result of the comparison. The functions are called sequentially, receive the given values &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.T%2C+kotlin.Array%28%28kotlin.Function1%28%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.Comparable%28%28kotlin.Any%29%29%29%29%29%29%29%2Fa&quot;&gt;a&lt;/a&gt; and &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.T%2C+kotlin.Array%28%28kotlin.Function1%28%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.Comparable%28%28kotlin.Any%29%29%29%29%29%29%29%2Fb&quot;&gt;b&lt;/a&gt; and return &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; objects. As soon as the &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; instances returned by a function for &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.T%2C+kotlin.Array%28%28kotlin.Function1%28%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.Comparable%28%28kotlin.Any%29%29%29%29%29%29%29%2Fa&quot;&gt;a&lt;/a&gt; and &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.T%2C+kotlin.Array%28%28kotlin.Function1%28%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.Comparable%28%28kotlin.Any%29%29%29%29%29%29%29%2Fb&quot;&gt;b&lt;/a&gt; values do not compare as equal, the result of that comparison is returned.</source>
          <target state="translated">지정된 함수 &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.T%2C+kotlin.Array%28%28kotlin.Function1%28%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.Comparable%28%28kotlin.Any%29%29%29%29%29%29%29%2Fselectors&quot;&gt;선택기&lt;/a&gt; 를 사용하여 두 값을 비교하여 비교 결과를 계산합니다. 함수는 순차적으로 호출되며 주어진 값 &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.T%2C+kotlin.Array%28%28kotlin.Function1%28%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.Comparable%28%28kotlin.Any%29%29%29%29%29%29%29%2Fa&quot;&gt;a&lt;/a&gt; 와 &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.T%2C+kotlin.Array%28%28kotlin.Function1%28%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.Comparable%28%28kotlin.Any%29%29%29%29%29%29%29%2Fb&quot;&gt;b를&lt;/a&gt; 수신하고 &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; 객체를 반환 합니다. 곧만큼 &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;필적&lt;/a&gt; 하는 함수에 의해 리턴 인스턴스 및 &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.T%2C+kotlin.Array%28%28kotlin.Function1%28%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.Comparable%28%28kotlin.Any%29%29%29%29%29%29%29%2Fb&quot;&gt;b를&lt;/a&gt; 값이 동일하게 비교할 수없는, 즉 비교 결과가 반환된다.&lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.comparisons.compareValuesBy.T%2C+kotlin.Array%28%28kotlin.Function1%28%28kotlin.comparisons.compareValuesBy.T%2C+kotlin.Comparable%28%28kotlin.Any%29%29%29%29%29%29%29%2Fa&quot;&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d183853cdfa5f8cb9c81042f165476b1d4725c93" translate="yes" xml:space="preserve">
          <source>Compares two values using the specified functions &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy(kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.T,%20kotlin.Array((kotlin.Function1((kotlin.comparisons.compareValuesBy.T,%20kotlin.Comparable?((kotlin.Any?)))))))/selectors&quot;&gt;selectors&lt;/a&gt; to calculate the result of the comparison. The functions are called sequentially, receive the given values &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy(kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.T,%20kotlin.Array((kotlin.Function1((kotlin.comparisons.compareValuesBy.T,%20kotlin.Comparable?((kotlin.Any?)))))))/a&quot;&gt;a&lt;/a&gt; and &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy(kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.T,%20kotlin.Array((kotlin.Function1((kotlin.comparisons.compareValuesBy.T,%20kotlin.Comparable?((kotlin.Any?)))))))/b&quot;&gt;b&lt;/a&gt; and return &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; objects. As soon as the &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; instances returned by a function for &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy(kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.T,%20kotlin.Array((kotlin.Function1((kotlin.comparisons.compareValuesBy.T,%20kotlin.Comparable?((kotlin.Any?)))))))/a&quot;&gt;a&lt;/a&gt; and &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy(kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.T,%20kotlin.Array((kotlin.Function1((kotlin.comparisons.compareValuesBy.T,%20kotlin.Comparable?((kotlin.Any?)))))))/b&quot;&gt;b&lt;/a&gt; values do not compare as equal, the result of that comparison is returned.</source>
          <target state="translated">지정된 함수 &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy(kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.T,%20kotlin.Array((kotlin.Function1((kotlin.comparisons.compareValuesBy.T,%20kotlin.Comparable?((kotlin.Any?)))))))/selectors&quot;&gt;선택기&lt;/a&gt; 를 사용하여 두 값을 비교하여 비교 결과를 계산합니다. 함수는 순차적으로 호출되고 주어진 값 &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy(kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.T,%20kotlin.Array((kotlin.Function1((kotlin.comparisons.compareValuesBy.T,%20kotlin.Comparable?((kotlin.Any?)))))))/a&quot;&gt;a&lt;/a&gt; 와 &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy(kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.T,%20kotlin.Array((kotlin.Function1((kotlin.comparisons.compareValuesBy.T,%20kotlin.Comparable?((kotlin.Any?)))))))/b&quot;&gt;b를&lt;/a&gt; 받고 &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; 객체를 반환 합니다. 곧만큼 &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;필적&lt;/a&gt; 하는 함수에 의해 리턴 인스턴스 및 &lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy(kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.T,%20kotlin.Array((kotlin.Function1((kotlin.comparisons.compareValuesBy.T,%20kotlin.Comparable?((kotlin.Any?)))))))/b&quot;&gt;b를&lt;/a&gt; 값이 동일하게 비교할 수없는, 즉 비교 결과가 반환된다.&lt;a href=&quot;compare-values-by#kotlin.comparisons%24compareValuesBy(kotlin.comparisons.compareValuesBy.T,%20kotlin.comparisons.compareValuesBy.T,%20kotlin.Array((kotlin.Function1((kotlin.comparisons.compareValuesBy.T,%20kotlin.Comparable?((kotlin.Any?)))))))/a&quot;&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f19ef02e93e90774153bbd6ed5b2351ab977c73" translate="yes" xml:space="preserve">
          <source>Compares value with &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicInt%24compareAndSet%28kotlin.Int%2C+kotlin.Int%29%2Fexpected&quot;&gt;expected&lt;/a&gt; and replaces it with &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicInt%24compareAndSet%28kotlin.Int%2C+kotlin.Int%29%2Fnew&quot;&gt;new&lt;/a&gt; value if values matches.</source>
          <target state="translated">값을 &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicInt%24compareAndSet%28kotlin.Int%2C+kotlin.Int%29%2Fexpected&quot;&gt;예상&lt;/a&gt; 과 비교 하고 값이 일치하면 &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicInt%24compareAndSet%28kotlin.Int%2C+kotlin.Int%29%2Fnew&quot;&gt;새&lt;/a&gt; 값으로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="122c2094c70640e3a29b525f5d56c4b7da23db5b" translate="yes" xml:space="preserve">
          <source>Compares value with &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicInt%24compareAndSet(kotlin.Int,%20kotlin.Int)/expected&quot;&gt;expected&lt;/a&gt; and replaces it with &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicInt%24compareAndSet(kotlin.Int,%20kotlin.Int)/new&quot;&gt;new&lt;/a&gt; value if values matches.</source>
          <target state="translated">값을 &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicInt%24compareAndSet(kotlin.Int,%20kotlin.Int)/expected&quot;&gt;예상&lt;/a&gt; 값과 비교 하고 값이 일치하면 &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicInt%24compareAndSet(kotlin.Int,%20kotlin.Int)/new&quot;&gt;새&lt;/a&gt; 값으로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="114b395416b339651ce422a30a320138360279a3" translate="yes" xml:space="preserve">
          <source>Compares value with &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicLong%24compareAndSet%28kotlin.Long%2C+kotlin.Long%29%2Fexpected&quot;&gt;expected&lt;/a&gt; and replaces it with &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicLong%24compareAndSet%28kotlin.Long%2C+kotlin.Long%29%2Fnew&quot;&gt;new&lt;/a&gt; value if values matches.</source>
          <target state="translated">값을 &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicLong%24compareAndSet%28kotlin.Long%2C+kotlin.Long%29%2Fexpected&quot;&gt;예상&lt;/a&gt; 과 비교 하고 값이 일치하면 &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicLong%24compareAndSet%28kotlin.Long%2C+kotlin.Long%29%2Fnew&quot;&gt;새&lt;/a&gt; 값으로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="08fae007809725847c717758daed28aac6881680" translate="yes" xml:space="preserve">
          <source>Compares value with &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicLong%24compareAndSet(kotlin.Long,%20kotlin.Long)/expected&quot;&gt;expected&lt;/a&gt; and replaces it with &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicLong%24compareAndSet(kotlin.Long,%20kotlin.Long)/new&quot;&gt;new&lt;/a&gt; value if values matches.</source>
          <target state="translated">값을 &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicLong%24compareAndSet(kotlin.Long,%20kotlin.Long)/expected&quot;&gt;예상&lt;/a&gt; 값과 비교 하고 값이 일치하면 &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicLong%24compareAndSet(kotlin.Long,%20kotlin.Long)/new&quot;&gt;새&lt;/a&gt; 값으로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="33e79c385d1ecca7b6f773750807dda8a0dad45b" translate="yes" xml:space="preserve">
          <source>Compares value with &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicNativePtr%24compareAndSet%28kotlin.native.internal.NativePtr%2C+kotlin.native.internal.NativePtr%29%2Fexpected&quot;&gt;expected&lt;/a&gt; and replaces it with &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicNativePtr%24compareAndSet%28kotlin.native.internal.NativePtr%2C+kotlin.native.internal.NativePtr%29%2Fnew&quot;&gt;new&lt;/a&gt; value if values matches.</source>
          <target state="translated">값을 &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicNativePtr%24compareAndSet%28kotlin.native.internal.NativePtr%2C+kotlin.native.internal.NativePtr%29%2Fexpected&quot;&gt;예상&lt;/a&gt; 과 비교 하고 값이 일치하면 &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicNativePtr%24compareAndSet%28kotlin.native.internal.NativePtr%2C+kotlin.native.internal.NativePtr%29%2Fnew&quot;&gt;새&lt;/a&gt; 값으로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="641671a7e930f79d93f8b81544c884e5de8e5be9" translate="yes" xml:space="preserve">
          <source>Compares value with &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicNativePtr%24compareAndSet(kotlin.native.internal.NativePtr,%20kotlin.native.internal.NativePtr)/expected&quot;&gt;expected&lt;/a&gt; and replaces it with &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicNativePtr%24compareAndSet(kotlin.native.internal.NativePtr,%20kotlin.native.internal.NativePtr)/new&quot;&gt;new&lt;/a&gt; value if values matches.</source>
          <target state="translated">값을 &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicNativePtr%24compareAndSet(kotlin.native.internal.NativePtr,%20kotlin.native.internal.NativePtr)/expected&quot;&gt;예상&lt;/a&gt; 값과 비교 하고 값이 일치하면 &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicNativePtr%24compareAndSet(kotlin.native.internal.NativePtr,%20kotlin.native.internal.NativePtr)/new&quot;&gt;새&lt;/a&gt; 값으로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="aad19e0b08b9c2212fcd34b07492441394b43397" translate="yes" xml:space="preserve">
          <source>Compares value with &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicReference%24compareAndSet%28kotlin.native.concurrent.AtomicReference.T%2C+kotlin.native.concurrent.AtomicReference.T%29%2Fexpected&quot;&gt;expected&lt;/a&gt; and replaces it with &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicReference%24compareAndSet%28kotlin.native.concurrent.AtomicReference.T%2C+kotlin.native.concurrent.AtomicReference.T%29%2Fnew&quot;&gt;new&lt;/a&gt; value if values matches. Note that comparison is identity-based, not value-based.</source>
          <target state="translated">값을 &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicReference%24compareAndSet%28kotlin.native.concurrent.AtomicReference.T%2C+kotlin.native.concurrent.AtomicReference.T%29%2Fexpected&quot;&gt;예상&lt;/a&gt; 과 비교 하고 값이 일치하면 &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicReference%24compareAndSet%28kotlin.native.concurrent.AtomicReference.T%2C+kotlin.native.concurrent.AtomicReference.T%29%2Fnew&quot;&gt;새&lt;/a&gt; 값으로 바꿉니다 . 비교는 가치 기반이 아니라 신원 기반입니다.</target>
        </trans-unit>
        <trans-unit id="634e611a605af54462634d7b1cb590e3d8cd51dc" translate="yes" xml:space="preserve">
          <source>Compares value with &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicReference%24compareAndSet(kotlin.native.concurrent.AtomicReference.T,%20kotlin.native.concurrent.AtomicReference.T)/expected&quot;&gt;expected&lt;/a&gt; and replaces it with &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicReference%24compareAndSet(kotlin.native.concurrent.AtomicReference.T,%20kotlin.native.concurrent.AtomicReference.T)/new&quot;&gt;new&lt;/a&gt; value if values matches. Note that comparison is identity-based, not value-based.</source>
          <target state="translated">값을 &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicReference%24compareAndSet(kotlin.native.concurrent.AtomicReference.T,%20kotlin.native.concurrent.AtomicReference.T)/expected&quot;&gt;예상&lt;/a&gt; 값과 비교 하고 값이 일치하면 &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.AtomicReference%24compareAndSet(kotlin.native.concurrent.AtomicReference.T,%20kotlin.native.concurrent.AtomicReference.T)/new&quot;&gt;새&lt;/a&gt; 값으로 바꿉니다 . 비교는 값 기반이 아니라 ID 기반입니다.</target>
        </trans-unit>
        <trans-unit id="2a7c89f946d53823e11aac953b3de81b713a012b" translate="yes" xml:space="preserve">
          <source>Compares value with &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.FreezableAtomicReference%24compareAndSet%28kotlin.native.concurrent.FreezableAtomicReference.T%2C+kotlin.native.concurrent.FreezableAtomicReference.T%29%2Fexpected&quot;&gt;expected&lt;/a&gt; and replaces it with &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.FreezableAtomicReference%24compareAndSet%28kotlin.native.concurrent.FreezableAtomicReference.T%2C+kotlin.native.concurrent.FreezableAtomicReference.T%29%2Fnew&quot;&gt;new&lt;/a&gt; value if values matches. Note that comparison is identity-based, not value-based.</source>
          <target state="translated">값을 &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.FreezableAtomicReference%24compareAndSet%28kotlin.native.concurrent.FreezableAtomicReference.T%2C+kotlin.native.concurrent.FreezableAtomicReference.T%29%2Fexpected&quot;&gt;예상&lt;/a&gt; 과 비교 하고 값이 일치하면 &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.FreezableAtomicReference%24compareAndSet%28kotlin.native.concurrent.FreezableAtomicReference.T%2C+kotlin.native.concurrent.FreezableAtomicReference.T%29%2Fnew&quot;&gt;새&lt;/a&gt; 값으로 바꿉니다 . 비교는 가치 기반이 아니라 신원 기반입니다.</target>
        </trans-unit>
        <trans-unit id="55d02c9019a7783e00ea094b354c70b751af8100" translate="yes" xml:space="preserve">
          <source>Compares value with &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.FreezableAtomicReference%24compareAndSet(kotlin.native.concurrent.FreezableAtomicReference.T,%20kotlin.native.concurrent.FreezableAtomicReference.T)/expected&quot;&gt;expected&lt;/a&gt; and replaces it with &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.FreezableAtomicReference%24compareAndSet(kotlin.native.concurrent.FreezableAtomicReference.T,%20kotlin.native.concurrent.FreezableAtomicReference.T)/new&quot;&gt;new&lt;/a&gt; value if values matches. Note that comparison is identity-based, not value-based.</source>
          <target state="translated">값을 &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.FreezableAtomicReference%24compareAndSet(kotlin.native.concurrent.FreezableAtomicReference.T,%20kotlin.native.concurrent.FreezableAtomicReference.T)/expected&quot;&gt;예상&lt;/a&gt; 값과 비교 하고 값이 일치하면 &lt;a href=&quot;compare-and-set#kotlin.native.concurrent.FreezableAtomicReference%24compareAndSet(kotlin.native.concurrent.FreezableAtomicReference.T,%20kotlin.native.concurrent.FreezableAtomicReference.T)/new&quot;&gt;새&lt;/a&gt; 값으로 바꿉니다 . 비교는 값 기반이 아니라 ID 기반입니다.</target>
        </trans-unit>
        <trans-unit id="1602dbc0e7bd66fd4e6309d2ad105c28e4ed0d94" translate="yes" xml:space="preserve">
          <source>Compares value with &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicInt%24compareAndSwap%28kotlin.Int%2C+kotlin.Int%29%2Fexpected&quot;&gt;expected&lt;/a&gt; and replaces it with &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicInt%24compareAndSwap%28kotlin.Int%2C+kotlin.Int%29%2Fnew&quot;&gt;new&lt;/a&gt; value if values matches.</source>
          <target state="translated">값을 &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicInt%24compareAndSwap%28kotlin.Int%2C+kotlin.Int%29%2Fexpected&quot;&gt;예상&lt;/a&gt; 과 비교 하고 값이 일치하면 &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicInt%24compareAndSwap%28kotlin.Int%2C+kotlin.Int%29%2Fnew&quot;&gt;새&lt;/a&gt; 값으로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="ffaa182e5dad63cc785ffa110f53012280e9cbf0" translate="yes" xml:space="preserve">
          <source>Compares value with &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicInt%24compareAndSwap(kotlin.Int,%20kotlin.Int)/expected&quot;&gt;expected&lt;/a&gt; and replaces it with &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicInt%24compareAndSwap(kotlin.Int,%20kotlin.Int)/new&quot;&gt;new&lt;/a&gt; value if values matches.</source>
          <target state="translated">값을 &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicInt%24compareAndSwap(kotlin.Int,%20kotlin.Int)/expected&quot;&gt;예상&lt;/a&gt; 값과 비교 하고 값이 일치하면 &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicInt%24compareAndSwap(kotlin.Int,%20kotlin.Int)/new&quot;&gt;새&lt;/a&gt; 값으로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="4961582100958d9c1a4fbb8b107deca301459a31" translate="yes" xml:space="preserve">
          <source>Compares value with &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicLong%24compareAndSwap%28kotlin.Long%2C+kotlin.Long%29%2Fexpected&quot;&gt;expected&lt;/a&gt; and replaces it with &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicLong%24compareAndSwap%28kotlin.Long%2C+kotlin.Long%29%2Fnew&quot;&gt;new&lt;/a&gt; value if values matches.</source>
          <target state="translated">값을 &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicLong%24compareAndSwap%28kotlin.Long%2C+kotlin.Long%29%2Fexpected&quot;&gt;예상&lt;/a&gt; 과 비교 하고 값이 일치하면 &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicLong%24compareAndSwap%28kotlin.Long%2C+kotlin.Long%29%2Fnew&quot;&gt;새&lt;/a&gt; 값으로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="ae5592f9d27f36f934260b5d0a2dac2a166bee1c" translate="yes" xml:space="preserve">
          <source>Compares value with &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicLong%24compareAndSwap(kotlin.Long,%20kotlin.Long)/expected&quot;&gt;expected&lt;/a&gt; and replaces it with &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicLong%24compareAndSwap(kotlin.Long,%20kotlin.Long)/new&quot;&gt;new&lt;/a&gt; value if values matches.</source>
          <target state="translated">값을 &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicLong%24compareAndSwap(kotlin.Long,%20kotlin.Long)/expected&quot;&gt;예상&lt;/a&gt; 값과 비교 하고 값이 일치하면 &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicLong%24compareAndSwap(kotlin.Long,%20kotlin.Long)/new&quot;&gt;새&lt;/a&gt; 값으로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="3baa24475bea429cad0046c9c8bdc489c993284c" translate="yes" xml:space="preserve">
          <source>Compares value with &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicNativePtr%24compareAndSwap%28kotlin.native.internal.NativePtr%2C+kotlin.native.internal.NativePtr%29%2Fexpected&quot;&gt;expected&lt;/a&gt; and replaces it with &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicNativePtr%24compareAndSwap%28kotlin.native.internal.NativePtr%2C+kotlin.native.internal.NativePtr%29%2Fnew&quot;&gt;new&lt;/a&gt; value if values matches. If &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicNativePtr%24compareAndSwap%28kotlin.native.internal.NativePtr%2C+kotlin.native.internal.NativePtr%29%2Fnew&quot;&gt;new&lt;/a&gt; value is not null, it must be frozen or permanent object.</source>
          <target state="translated">값을 &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicNativePtr%24compareAndSwap%28kotlin.native.internal.NativePtr%2C+kotlin.native.internal.NativePtr%29%2Fexpected&quot;&gt;예상&lt;/a&gt; 과 비교 하고 값이 일치하면 &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicNativePtr%24compareAndSwap%28kotlin.native.internal.NativePtr%2C+kotlin.native.internal.NativePtr%29%2Fnew&quot;&gt;새&lt;/a&gt; 값으로 바꿉니다 . &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicNativePtr%24compareAndSwap%28kotlin.native.internal.NativePtr%2C+kotlin.native.internal.NativePtr%29%2Fnew&quot;&gt;새&lt;/a&gt; 값이 null이 아닌 경우 고정되거나 영구 객체 여야합니다.</target>
        </trans-unit>
        <trans-unit id="e463cd6317ab4b95b19892c38cdaa4d8f63ca8b9" translate="yes" xml:space="preserve">
          <source>Compares value with &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicNativePtr%24compareAndSwap(kotlin.native.internal.NativePtr,%20kotlin.native.internal.NativePtr)/expected&quot;&gt;expected&lt;/a&gt; and replaces it with &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicNativePtr%24compareAndSwap(kotlin.native.internal.NativePtr,%20kotlin.native.internal.NativePtr)/new&quot;&gt;new&lt;/a&gt; value if values matches. If &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicNativePtr%24compareAndSwap(kotlin.native.internal.NativePtr,%20kotlin.native.internal.NativePtr)/new&quot;&gt;new&lt;/a&gt; value is not null, it must be frozen or permanent object.</source>
          <target state="translated">값을 &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicNativePtr%24compareAndSwap(kotlin.native.internal.NativePtr,%20kotlin.native.internal.NativePtr)/expected&quot;&gt;예상&lt;/a&gt; 값과 비교 하고 값이 일치하면 &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicNativePtr%24compareAndSwap(kotlin.native.internal.NativePtr,%20kotlin.native.internal.NativePtr)/new&quot;&gt;새&lt;/a&gt; 값으로 바꿉니다 . 경우 &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicNativePtr%24compareAndSwap(kotlin.native.internal.NativePtr,%20kotlin.native.internal.NativePtr)/new&quot;&gt;새&lt;/a&gt; 값이 null이 아닌, 그것은 냉동 또는 고정 된 물체해야합니다.</target>
        </trans-unit>
        <trans-unit id="484ef8b88aa051d852de31e7d69a2ffe4361bc12" translate="yes" xml:space="preserve">
          <source>Compares value with &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicReference%24compareAndSwap%28kotlin.native.concurrent.AtomicReference.T%2C+kotlin.native.concurrent.AtomicReference.T%29%2Fexpected&quot;&gt;expected&lt;/a&gt; and replaces it with &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicReference%24compareAndSwap%28kotlin.native.concurrent.AtomicReference.T%2C+kotlin.native.concurrent.AtomicReference.T%29%2Fnew&quot;&gt;new&lt;/a&gt; value if values matches. Note that comparison is identity-based, not value-based. If &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicReference%24compareAndSwap%28kotlin.native.concurrent.AtomicReference.T%2C+kotlin.native.concurrent.AtomicReference.T%29%2Fnew&quot;&gt;new&lt;/a&gt; value is not null, it must be frozen or permanent object.</source>
          <target state="translated">값을 &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicReference%24compareAndSwap%28kotlin.native.concurrent.AtomicReference.T%2C+kotlin.native.concurrent.AtomicReference.T%29%2Fexpected&quot;&gt;예상&lt;/a&gt; 과 비교 하고 값이 일치하면 &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicReference%24compareAndSwap%28kotlin.native.concurrent.AtomicReference.T%2C+kotlin.native.concurrent.AtomicReference.T%29%2Fnew&quot;&gt;새&lt;/a&gt; 값으로 바꿉니다 . 비교는 가치 기반이 아니라 신원 기반입니다. &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicReference%24compareAndSwap%28kotlin.native.concurrent.AtomicReference.T%2C+kotlin.native.concurrent.AtomicReference.T%29%2Fnew&quot;&gt;새&lt;/a&gt; 값이 null이 아닌 경우 고정되거나 영구 객체 여야합니다.</target>
        </trans-unit>
        <trans-unit id="5f0d52e19d5f1b64fd9492dbea6f32f574826f3a" translate="yes" xml:space="preserve">
          <source>Compares value with &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicReference%24compareAndSwap(kotlin.native.concurrent.AtomicReference.T,%20kotlin.native.concurrent.AtomicReference.T)/expected&quot;&gt;expected&lt;/a&gt; and replaces it with &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicReference%24compareAndSwap(kotlin.native.concurrent.AtomicReference.T,%20kotlin.native.concurrent.AtomicReference.T)/new&quot;&gt;new&lt;/a&gt; value if values matches. Note that comparison is identity-based, not value-based. If &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicReference%24compareAndSwap(kotlin.native.concurrent.AtomicReference.T,%20kotlin.native.concurrent.AtomicReference.T)/new&quot;&gt;new&lt;/a&gt; value is not null, it must be frozen or permanent object.</source>
          <target state="translated">값을 &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicReference%24compareAndSwap(kotlin.native.concurrent.AtomicReference.T,%20kotlin.native.concurrent.AtomicReference.T)/expected&quot;&gt;예상&lt;/a&gt; 값과 비교 하고 값이 일치하면 &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicReference%24compareAndSwap(kotlin.native.concurrent.AtomicReference.T,%20kotlin.native.concurrent.AtomicReference.T)/new&quot;&gt;새&lt;/a&gt; 값으로 바꿉니다 . 비교는 값 기반이 아니라 ID 기반입니다. 경우 &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.AtomicReference%24compareAndSwap(kotlin.native.concurrent.AtomicReference.T,%20kotlin.native.concurrent.AtomicReference.T)/new&quot;&gt;새&lt;/a&gt; 값이 null이 아닌, 그것은 냉동 또는 고정 된 물체해야합니다.</target>
        </trans-unit>
        <trans-unit id="21c447a9330973c5bdffcbc899b7cdb768d02c0d" translate="yes" xml:space="preserve">
          <source>Compares value with &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.FreezableAtomicReference%24compareAndSwap%28kotlin.native.concurrent.FreezableAtomicReference.T%2C+kotlin.native.concurrent.FreezableAtomicReference.T%29%2Fexpected&quot;&gt;expected&lt;/a&gt; and replaces it with &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.FreezableAtomicReference%24compareAndSwap%28kotlin.native.concurrent.FreezableAtomicReference.T%2C+kotlin.native.concurrent.FreezableAtomicReference.T%29%2Fnew&quot;&gt;new&lt;/a&gt; value if values matches. If &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.FreezableAtomicReference%24compareAndSwap%28kotlin.native.concurrent.FreezableAtomicReference.T%2C+kotlin.native.concurrent.FreezableAtomicReference.T%29%2Fnew&quot;&gt;new&lt;/a&gt; value is not null and object is frozen, it must be frozen or permanent object.</source>
          <target state="translated">값을 &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.FreezableAtomicReference%24compareAndSwap%28kotlin.native.concurrent.FreezableAtomicReference.T%2C+kotlin.native.concurrent.FreezableAtomicReference.T%29%2Fexpected&quot;&gt;예상&lt;/a&gt; 과 비교 하고 값이 일치하면 &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.FreezableAtomicReference%24compareAndSwap%28kotlin.native.concurrent.FreezableAtomicReference.T%2C+kotlin.native.concurrent.FreezableAtomicReference.T%29%2Fnew&quot;&gt;새&lt;/a&gt; 값으로 바꿉니다 . 경우 &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.FreezableAtomicReference%24compareAndSwap%28kotlin.native.concurrent.FreezableAtomicReference.T%2C+kotlin.native.concurrent.FreezableAtomicReference.T%29%2Fnew&quot;&gt;새&lt;/a&gt; 값이 null가 아니고, 객체가 동결되고, 그것은 냉동 또는 고정 된 물체해야합니다.</target>
        </trans-unit>
        <trans-unit id="3166ae600cbed70025a084c9ac73393f6ff9ef73" translate="yes" xml:space="preserve">
          <source>Compares value with &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.FreezableAtomicReference%24compareAndSwap(kotlin.native.concurrent.FreezableAtomicReference.T,%20kotlin.native.concurrent.FreezableAtomicReference.T)/expected&quot;&gt;expected&lt;/a&gt; and replaces it with &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.FreezableAtomicReference%24compareAndSwap(kotlin.native.concurrent.FreezableAtomicReference.T,%20kotlin.native.concurrent.FreezableAtomicReference.T)/new&quot;&gt;new&lt;/a&gt; value if values matches. If &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.FreezableAtomicReference%24compareAndSwap(kotlin.native.concurrent.FreezableAtomicReference.T,%20kotlin.native.concurrent.FreezableAtomicReference.T)/new&quot;&gt;new&lt;/a&gt; value is not null and object is frozen, it must be frozen or permanent object.</source>
          <target state="translated">값을 &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.FreezableAtomicReference%24compareAndSwap(kotlin.native.concurrent.FreezableAtomicReference.T,%20kotlin.native.concurrent.FreezableAtomicReference.T)/expected&quot;&gt;예상&lt;/a&gt; 값과 비교 하고 값이 일치하면 &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.FreezableAtomicReference%24compareAndSwap(kotlin.native.concurrent.FreezableAtomicReference.T,%20kotlin.native.concurrent.FreezableAtomicReference.T)/new&quot;&gt;새&lt;/a&gt; 값으로 바꿉니다 . 경우 &lt;a href=&quot;compare-and-swap#kotlin.native.concurrent.FreezableAtomicReference%24compareAndSwap(kotlin.native.concurrent.FreezableAtomicReference.T,%20kotlin.native.concurrent.FreezableAtomicReference.T)/new&quot;&gt;새&lt;/a&gt; 값이 null가 아니고, 객체가 동결되고, 그것은 냉동 또는 고정 된 물체해야합니다.</target>
        </trans-unit>
        <trans-unit id="80878568dcf8cdef0c0a05309f6c5b18c8821730" translate="yes" xml:space="preserve">
          <source>Comparing floating-point values in array/list operations &lt;code&gt;contains&lt;/code&gt;, &lt;code&gt;indexOf&lt;/code&gt;, &lt;code&gt;lastIndexOf&lt;/code&gt;: IEEE 754 or total order</source>
          <target state="translated">배열 / 목록 연산의 부동 소수점 값 비교 &lt;code&gt;contains&lt;/code&gt; , &lt;code&gt;indexOf&lt;/code&gt; , &lt;code&gt;lastIndexOf&lt;/code&gt; : IEEE 754 또는 총 순서</target>
        </trans-unit>
        <trans-unit id="394e41048cbe310173033e7ae5f2b5a2434d911f" translate="yes" xml:space="preserve">
          <source>Comparison binary search</source>
          <target state="translated">이진 검색 비교</target>
        </trans-unit>
        <trans-unit id="9461d4c9f916ad7df5538225ed552fb6e7e3284b" translate="yes" xml:space="preserve">
          <source>Comparison operators</source>
          <target state="translated">비교 연산자</target>
        </trans-unit>
        <trans-unit id="43a1257c94c3625af3a4820651e77bb7e5919b78" translate="yes" xml:space="preserve">
          <source>Comparison operators: &lt;code&gt;a &amp;lt; b&lt;/code&gt;, &lt;code&gt;a &amp;gt; b&lt;/code&gt;, &lt;code&gt;a &amp;lt;= b&lt;/code&gt;, &lt;code&gt;a &amp;gt;= b&lt;/code&gt;</source>
          <target state="translated">비교 연산자 : &lt;code&gt;a &amp;lt; b&lt;/code&gt; , &lt;code&gt;a &amp;gt; b&lt;/code&gt; , &lt;code&gt;a &amp;lt;= b&lt;/code&gt; , &lt;code&gt;a &amp;gt;= b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c19d6a85cde6ffb47c0be3358e50362db268d22f" translate="yes" xml:space="preserve">
          <source>Comparison to Java Programming Language</source>
          <target state="translated">자바 프로그래밍 언어와 비교</target>
        </trans-unit>
        <trans-unit id="e46ee00fde40e955c86abe019a61121e06d653c9" translate="yes" xml:space="preserve">
          <source>Comparisons</source>
          <target state="translated">Comparisons</target>
        </trans-unit>
        <trans-unit id="3d10a17bbcafa253a2f547a4d3cdc2dcd9e8e67a" translate="yes" xml:space="preserve">
          <source>Compatibility Guide for Kotlin 1.3</source>
          <target state="translated">Kotlin 1.3 호환성 안내서</target>
        </trans-unit>
        <trans-unit id="c2085d01ad17cb0b63a6b887e6bb19cea5d153da" translate="yes" xml:space="preserve">
          <source>Compatibility Guide for Kotlin 1.4</source>
          <target state="translated">Kotlin 1.4 용 호환성 가이드</target>
        </trans-unit>
        <trans-unit id="ab158d92aa769c36330930aefe33be777405f096" translate="yes" xml:space="preserve">
          <source>Compatibility Modes</source>
          <target state="translated">호환성 모드</target>
        </trans-unit>
        <trans-unit id="b2517b7bfbaa93708ea0797f6a1a981a224cee59" translate="yes" xml:space="preserve">
          <source>Compatibility Tools</source>
          <target state="translated">호환성 도구</target>
        </trans-unit>
        <trans-unit id="34b34cfc79cdf5ed37d2daa31e31fa83771c6d05" translate="yes" xml:space="preserve">
          <source>Compatibility flags</source>
          <target state="translated">호환성 플래그</target>
        </trans-unit>
        <trans-unit id="24b1a563df927b79ff52059a6fe7f4f07f083c4d" translate="yes" xml:space="preserve">
          <source>Compatibility mode for default methods</source>
          <target state="translated">기본 방법에 대한 호환성 모드</target>
        </trans-unit>
        <trans-unit id="062a933f528dc14867f471c4122370c1ec7c48ea" translate="yes" xml:space="preserve">
          <source>Competitive Programming</source>
          <target state="translated">경쟁 프로그래밍</target>
        </trans-unit>
        <trans-unit id="4cef16aaddc5beb3a0a8c8c6dcb42ac7aa8951c6" translate="yes" xml:space="preserve">
          <source>Competitive programming and Kotlin</source>
          <target state="translated">경쟁 프로그래밍 및 코 틀린</target>
        </trans-unit>
        <trans-unit id="779435d938b5f4d4c99c8c653840aaa0d1d27f91" translate="yes" xml:space="preserve">
          <source>Competitive programming problems often have input like this:</source>
          <target state="translated">경쟁 프로그래밍 문제는 종종 다음과 같이 입력됩니다.</target>
        </trans-unit>
        <trans-unit id="e178d49b71d4ecab26f50049569e812934ed37d9" translate="yes" xml:space="preserve">
          <source>Compilation class path</source>
          <target state="translated">컴파일 클래스 경로</target>
        </trans-unit>
        <trans-unit id="1c0c507276bf46861806ab317f7cdd44980f2759" translate="yes" xml:space="preserve">
          <source>Compilation class path reference</source>
          <target state="translated">컴파일 클래스 경로 참조</target>
        </trans-unit>
        <trans-unit id="b58f06eef6df06da595c826427b93cb6862f54b2" translate="yes" xml:space="preserve">
          <source>Compilation for Android</source>
          <target state="translated">Android 용 컴파일</target>
        </trans-unit>
        <trans-unit id="d3be870260c0ea62d6c3e124ac53fc657c77c590" translate="yes" xml:space="preserve">
          <source>Compilation for production sources.</source>
          <target state="translated">프로덕션 소스를위한 컴파일.</target>
        </trans-unit>
        <trans-unit id="a4901a44835928e7cdebf0fb6e714edeaf154fbc" translate="yes" xml:space="preserve">
          <source>Compilation for tests.</source>
          <target state="translated">테스트를위한 컴파일.</target>
        </trans-unit>
        <trans-unit id="6d16c0407463669d4bc5c4636710756946dc69bc" translate="yes" xml:space="preserve">
          <source>Compilation of the source set hierarchy</source>
          <target state="translated">소스 세트 계층의 컴파일</target>
        </trans-unit>
        <trans-unit id="6f1bcfe5654cd53d1d14d6e8c4be0684b2f1f833" translate="yes" xml:space="preserve">
          <source>Compilation parameters</source>
          <target state="translated">컴파일 매개 변수</target>
        </trans-unit>
        <trans-unit id="f68b1d2759976ea8c34dc57780ddb466c7a03a88" translate="yes" xml:space="preserve">
          <source>Compilations</source>
          <target state="translated">Compilations</target>
        </trans-unit>
        <trans-unit id="ad873024a72e87749444bf639fc9df742a1707a3" translate="yes" xml:space="preserve">
          <source>Compile a Kotlin code to a dynamic library</source>
          <target state="translated">Kotlin 코드를 동적 라이브러리로 컴파일</target>
        </trans-unit>
        <trans-unit id="aca9e2814a2bbcc689598a15313b80870bd9b42e" translate="yes" xml:space="preserve">
          <source>Compile and run the example on &lt;a href=&quot;#compiling-and-running-the-example-on-linux-and-macos&quot;&gt;Linux and Mac&lt;/a&gt; and &lt;a href=&quot;#compiling-and-running-the-example-on-windows&quot;&gt;Windows&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#compiling-and-running-the-example-on-linux-and-macos&quot;&gt;Linux 및 Mac&lt;/a&gt; 및 &lt;a href=&quot;#compiling-and-running-the-example-on-windows&quot;&gt;Windows&lt;/a&gt; 에서 예제를 컴파일하고 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="72064d4a180ef02a39354f66176c84fb0548cba8" translate="yes" xml:space="preserve">
          <source>Compile avoidance for kapt (since 1.3.20)</source>
          <target state="translated">Kapt에 대한 컴파일 회피 (1.3.20부터)</target>
        </trans-unit>
        <trans-unit id="637ca42cdaeb5f5233631b33ebd2c16f708a9c4b" translate="yes" xml:space="preserve">
          <source>Compile tasks</source>
          <target state="translated">컴파일 작업</target>
        </trans-unit>
        <trans-unit id="2c768f7a37e574458b6ee2aa2ab089f36687acb2" translate="yes" xml:space="preserve">
          <source>Compile the annotation class declaration to JVM bytecode target version 1.8+. You can specify it with &lt;code&gt;-jvm-target=1.8&lt;/code&gt; compiler option.</source>
          <target state="translated">주석 클래스 선언을 JVM 바이트 코드 대상 버전 1.8 이상으로 컴파일하십시오. &lt;code&gt;-jvm-target=1.8&lt;/code&gt; 컴파일러 옵션으로 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1157490bdeb22d1be81765a13a1f71421f68d521" translate="yes" xml:space="preserve">
          <source>Compile the application using the Kotlin compiler</source>
          <target state="translated">Kotlin 컴파일러를 사용하여 응용 프로그램 컴파일</target>
        </trans-unit>
        <trans-unit id="03c89825c055435c615019680918f9ab6b1189e7" translate="yes" xml:space="preserve">
          <source>Compile the application using the Kotlin compiler:</source>
          <target state="translated">Kotlin 컴파일러를 사용하여 애플리케이션을 컴파일합니다.</target>
        </trans-unit>
        <trans-unit id="921b146c0daa1b58d05333210fa642b42a817c43" translate="yes" xml:space="preserve">
          <source>Compile the client:</source>
          <target state="translated">클라이언트를 컴파일하십시오.</target>
        </trans-unit>
        <trans-unit id="389cd3c1446277e674969f02ab46cba74928fdfe" translate="yes" xml:space="preserve">
          <source>Compile the code that uses the annotation to JVM bytecode target version 1.8+ (&lt;code&gt;-jvm-target=1.8&lt;/code&gt;) and add the &lt;code&gt;-Xemit-jvm-type-annotations&lt;/code&gt; compiler option.</source>
          <target state="translated">주석을 사용하는 코드를 JVM 바이트 코드 대상 버전 &lt;code&gt;-jvm-target=1.8&lt;/code&gt; ( -jvm-target = 1.8 )로 &lt;code&gt;-Xemit-jvm-type-annotations&lt;/code&gt; 하고 -Xemit-jvm-type-annotations 컴파일러 옵션을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="85980ca368c439d612a62feeb3c22d4520a3c93a" translate="yes" xml:space="preserve">
          <source>Compile the library using the JS compiler</source>
          <target state="translated">JS 컴파일러를 사용하여 라이브러리 컴파일</target>
        </trans-unit>
        <trans-unit id="9455252385aecb94fba3d661915044a88e56d259" translate="yes" xml:space="preserve">
          <source>Compile with library:</source>
          <target state="translated">라이브러리로 컴파일하십시오.</target>
        </trans-unit>
        <trans-unit id="d41acf091a6275283d4f6ccefb9d2a937d4b6b4a" translate="yes" xml:space="preserve">
          <source>Compile-Time Constants</source>
          <target state="translated">컴파일 타임 상수</target>
        </trans-unit>
        <trans-unit id="45e8f6255c13fb9a7dc368edbfb05a6cf3dba131" translate="yes" xml:space="preserve">
          <source>Compile-time dependency files (classpath) of the compilation.</source>
          <target state="translated">컴파일의 컴파일 시간 종속성 파일 (클래스 경로)입니다.</target>
        </trans-unit>
        <trans-unit id="6859c12396afd4e34b1e74dd8971983ccd5dfa77" translate="yes" xml:space="preserve">
          <source>Compiled module exposes declarations that are marked with this annotation without name mangling.</source>
          <target state="translated">컴파일 된 모듈은 이름 변경없이이 주석으로 표시된 선언을 노출합니다.</target>
        </trans-unit>
        <trans-unit id="c71bcef809f379ec55fc71d790cc965f078efdbd" translate="yes" xml:space="preserve">
          <source>Compiled scripts cache</source>
          <target state="translated">컴파일 된 스크립트 캐시</target>
        </trans-unit>
        <trans-unit id="4c9d1f2132e2efb7dc57350eb68c7776e6e8330e" translate="yes" xml:space="preserve">
          <source>Compiler Keys</source>
          <target state="translated">컴파일러 키</target>
        </trans-unit>
        <trans-unit id="f05a88eb5583088cfb5f3af23ae435a9c43d6850" translate="yes" xml:space="preserve">
          <source>Compiler Options</source>
          <target state="translated">컴파일러 옵션</target>
        </trans-unit>
        <trans-unit id="32539aebe8fbe50447702941623db72d336f1492" translate="yes" xml:space="preserve">
          <source>Compiler Plugin API</source>
          <target state="translated">컴파일러 플러그인 API</target>
        </trans-unit>
        <trans-unit id="a5def276d735f3ae52349ff4e9c00146dd7a2bd9" translate="yes" xml:space="preserve">
          <source>Compiler Plugins</source>
          <target state="translated">컴파일러 플러그인</target>
        </trans-unit>
        <trans-unit id="bc8b5071c8c3c33bba65f749d70114d9c5d960fa" translate="yes" xml:space="preserve">
          <source>Compiler arguments with delimiter characters must be passed in double quotes on Windows</source>
          <target state="translated">구분 문자가있는 컴파일러 인수는 Windows에서 큰 따옴표로 전달되어야합니다.</target>
        </trans-unit>
        <trans-unit id="99453b01ed9668395db52137ac95533f2bf523b4" translate="yes" xml:space="preserve">
          <source>Compiler configuration</source>
          <target state="translated">컴파일러 구성</target>
        </trans-unit>
        <trans-unit id="c8d36c73ee25d65a59259585e736e00c1c87f0a3" translate="yes" xml:space="preserve">
          <source>Compiler options</source>
          <target state="translated">컴파일러 옵션</target>
        </trans-unit>
        <trans-unit id="58286f40afa05dca408af3341cf6346fedc80e7f" translate="yes" xml:space="preserve">
          <source>Compiler options applied to the compilation. For the list of available options, see &lt;a href=&quot;using-gradle#compiler-options&quot;&gt;Compiler options&lt;/a&gt;.</source>
          <target state="translated">컴파일에 적용된 컴파일러 옵션입니다. 사용 가능한 옵션 목록은 &lt;a href=&quot;using-gradle#compiler-options&quot;&gt;컴파일러 옵션을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="16b09e47f86fe203e52b566517a38889f340853a" translate="yes" xml:space="preserve">
          <source>Compilers are complicated software and despite the best effort of their developers they have bugs. The bugs that cause the compiler itself to fail or report spurious errors or generate obviously failing code, though annoying and often embarrassing, are easy to fix, because the fixes do not constitute incompatible changes. Other bugs may cause the compiler to generate incorrect code that does not fail: e.g. by missing some errors in the source or simply generating wrong instructions. Fixes of such bugs are technically incompatible changes (some code used to compile fine, but now it won't any more), but we are inclined to fixing them as soon as possible to prevent the bad code patterns from spreading across user code. In our opinion, this serves the principle of Comfortable Updates, because fewer users have a chance of encountering the issue. Of course, this applies only to bugs that are found soon after appearing in a released version.</source>
          <target state="translated">컴파일러는 복잡한 소프트웨어이며 개발자의 최선의 노력에도 불구하고 버그가 있습니다. 컴파일러 자체가 실패하거나 허위 오류를보고하거나 명백히 실패하는 코드를 생성하는 버그는 수정이 호환되지 않는 변경을 구성하지 않기 때문에 성 가시고 창피합니다. 다른 버그로 인해 컴파일러가 실패하지 않는 잘못된 코드를 생성 할 수 있습니다 (예 : 소스에 일부 오류가 누락되었거나 단순히 잘못된 명령어 생성). 이러한 버그의 수정은 기술적으로 호환되지 않는 변경 사항입니다 (일부 코드는 정상적으로 컴파일하는 데 사용되지만 더 이상은 그렇지 않습니다). 그러나 잘못된 코드 패턴이 사용자 코드에 퍼지지 않도록 가능한 빨리 수정하는 경향이 있습니다. 우리는이 문제가 발생할 가능성이 적은 사용자가 많기 때문에 이것이 편안한 업데이트의 원칙에 해당한다고 생각합니다.물론 이것은 릴리스 된 버전에 나타난 직후에 발견 된 버그에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="97ea09b312879ce9df1eea948b56934aea9cfd0a" translate="yes" xml:space="preserve">
          <source>Compiling Kotlin and Java sources</source>
          <target state="translated">Kotlin 및 Java 소스 컴파일</target>
        </trans-unit>
        <trans-unit id="a5b70db1805f14583c6ebf2c8b0592b48de0d271" translate="yes" xml:space="preserve">
          <source>Compiling Kotlin only source code</source>
          <target state="translated">Kotlin 전용 소스 코드 컴파일</target>
        </trans-unit>
        <trans-unit id="53c9b57582db6dd7965be7474f98a3648d5b3eac" translate="yes" xml:space="preserve">
          <source>Compiling Kotlin/Native code and use it from Objective-C and Swift</source>
          <target state="translated">Kotlin / 네이티브 코드 컴파일 및 Objective-C 및 Swift에서 사용</target>
        </trans-unit>
        <trans-unit id="24c58b06b20f55df8f5651941f526a6d22d3c2a6" translate="yes" xml:space="preserve">
          <source>Compiling Kotlin/Native code to a dynamic library</source>
          <target state="translated">Kotlin / 네이티브 코드를 동적 라이브러리로 컴파일</target>
        </trans-unit>
        <trans-unit id="18b869d52ab1ba843901fab8ea31519950c8b6b2" translate="yes" xml:space="preserve">
          <source>Compiling a library</source>
          <target state="translated">라이브러리 컴파일</target>
        </trans-unit>
        <trans-unit id="90c6e7f353327a035e627969004330ddc56355a6" translate="yes" xml:space="preserve">
          <source>Compiling and Linking the library</source>
          <target state="translated">라이브러리 컴파일 및 링크</target>
        </trans-unit>
        <trans-unit id="9643908ac0d886939542952f3d3c8b6a519953e8" translate="yes" xml:space="preserve">
          <source>Compiling and Running the Example on Linux and macOS</source>
          <target state="translated">Linux 및 macOS에서 예제 컴파일 및 실행</target>
        </trans-unit>
        <trans-unit id="61bd878fa415faec28c9e1d212393df9d1902a99" translate="yes" xml:space="preserve">
          <source>Compiling and Running the Example on Windows</source>
          <target state="translated">Windows에서 예제 컴파일 및 실행</target>
        </trans-unit>
        <trans-unit id="611121f8b32170211272449e4fe516c23dddd7a0" translate="yes" xml:space="preserve">
          <source>Compiling and running</source>
          <target state="translated">컴파일과 실행</target>
        </trans-unit>
        <trans-unit id="76090c31043c794bd01d750fcccacffc090b28f7" translate="yes" xml:space="preserve">
          <source>Compiling the code from the console</source>
          <target state="translated">콘솔에서 코드 컴파일</target>
        </trans-unit>
        <trans-unit id="521ffb94c78fdf8a3052cd297cb2675a73929150" translate="yes" xml:space="preserve">
          <source>Complete list of elements and attributes are listed below:</source>
          <target state="translated">요소 및 속성의 전체 목록은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="21cfd8379bc4634b181519a0d820ba8172a94742" translate="yes" xml:space="preserve">
          <source>Complete the initial configuration, and when you add a new dependency to &lt;code&gt;cocoapods&lt;/code&gt;, just re-import the project in IntelliJ IDEA. The new dependency will be added automatically. No additional steps are required.</source>
          <target state="translated">초기 구성을 완료하고 &lt;code&gt;cocoapods&lt;/code&gt; 에 새 종속성을 추가 할 때 IntelliJ IDEA에서 프로젝트를 다시 가져 오면 됩니다. 새 종속성이 자동으로 추가됩니다. 추가 단계가 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="aec451d085d4fe32991339a518bc16961757e7c2" translate="yes" xml:space="preserve">
          <source>Components allow you to specify:</source>
          <target state="translated">구성 요소를 사용하면 다음을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="61a74e7ecbd3269e28edf0496ebb545abe2190a4" translate="yes" xml:space="preserve">
          <source>Composing Suspending Functions</source>
          <target state="translated">일시 중단 함수 구성</target>
        </trans-unit>
        <trans-unit id="acdb98958243be31e6bc491cc2789c3e62835935" translate="yes" xml:space="preserve">
          <source>Composing multiple flows</source>
          <target state="translated">여러 흐름 작성</target>
        </trans-unit>
        <trans-unit id="de3b78b60e965433479e052daac10341513ebaf0" translate="yes" xml:space="preserve">
          <source>Composing suspending functions</source>
          <target state="translated">서 스펜 딩 기능 구성</target>
        </trans-unit>
        <trans-unit id="aafa0c5cb88d6c36a279448a6ec0d00a0fb47e80" translate="yes" xml:space="preserve">
          <source>CompositionEventInit</source>
          <target state="translated">CompositionEventInit</target>
        </trans-unit>
        <trans-unit id="ed2ff637c10fb1755e29c0eb2376d67d8e5a91b4" translate="yes" xml:space="preserve">
          <source>Comprehensions</source>
          <target state="translated">Comprehensions</target>
        </trans-unit>
        <trans-unit id="fe16b2e419247b3bfe896053f1be0ce886d4de58" translate="yes" xml:space="preserve">
          <source>Computation thrown an exception.</source>
          <target state="translated">계산에서 예외가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="58754a33960f46b4b39aacc990f1c3553c4b3a27" translate="yes" xml:space="preserve">
          <source>Compute stable wrt potential object relocations by the memory manager identity hash code.</source>
          <target state="translated">메모리 관리자 ID 해시 코드로 안정적인 wrt 잠재적 개체 재배치를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="759dc563afcf1b09a8658d09f86d8312b1c74439" translate="yes" xml:space="preserve">
          <source>Computes &lt;code&gt;exp(x) - 1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;exp(x) - 1&lt;/code&gt; 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="ce188344a4a89cc27976c0691ae9673e3d851731" translate="yes" xml:space="preserve">
          <source>Computes &lt;code&gt;ln(a + 1)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ln(a + 1)&lt;/code&gt; 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="efd0d084b6901fa01fab237c8ae6254fe11544ba" translate="yes" xml:space="preserve">
          <source>Computes &lt;code&gt;ln(x + 1)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ln(x + 1)&lt;/code&gt; 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="479831737fe42b4ea79afaf5ab097fe283559461" translate="yes" xml:space="preserve">
          <source>Computes &lt;code&gt;sqrt(x^2 + y^2)&lt;/code&gt; without intermediate overflow or underflow.</source>
          <target state="translated">중간 오버플로 또는 언더 플로없이 &lt;code&gt;sqrt(x^2 + y^2)&lt;/code&gt; 를 계산 합니다.</target>
        </trans-unit>
        <trans-unit id="5be0681c128c3a53870b319fc23d03276a8e7b4e" translate="yes" xml:space="preserve">
          <source>Computes Euler's number &lt;code&gt;e&lt;/code&gt; raised to the power of the value &lt;a href=&quot;exp#kotlin.math%24exp%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt;.</source>
          <target state="translated">오일러의 수 &lt;code&gt;e&lt;/code&gt; 를 값 &lt;a href=&quot;exp#kotlin.math%24exp%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt; 의 거듭 제곱으로 계산 합니다.</target>
        </trans-unit>
        <trans-unit id="ff565ce1378d4b4e77be485afca24a6593e21665" translate="yes" xml:space="preserve">
          <source>Computes Euler's number &lt;code&gt;e&lt;/code&gt; raised to the power of the value &lt;a href=&quot;exp#kotlin.math%24exp(kotlin.Double)/x&quot;&gt;x&lt;/a&gt;.</source>
          <target state="translated">오일러의 수 &lt;code&gt;e&lt;/code&gt; 를 &lt;a href=&quot;exp#kotlin.math%24exp(kotlin.Double)/x&quot;&gt;x&lt;/a&gt; 값의 거듭 제곱으로 계산 합니다.</target>
        </trans-unit>
        <trans-unit id="d9ad220e09ce10c0b1d3278a7b9bc5abbed8425e" translate="yes" xml:space="preserve">
          <source>Computes the arc cosine of the value &lt;a href=&quot;acos#kotlin.math%24acos%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt;; the returned value is an angle in the range from &lt;code&gt;0.0&lt;/code&gt; to &lt;code&gt;PI&lt;/code&gt; radians.</source>
          <target state="translated">값 &lt;a href=&quot;acos#kotlin.math%24acos%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt; 의 아크 코사인을 계산합니다 . 반환 된 값은 &lt;code&gt;0.0&lt;/code&gt; 에서 &lt;code&gt;PI&lt;/code&gt; 라디안 범위의 각도입니다 .</target>
        </trans-unit>
        <trans-unit id="3ef2e10512a29d32338572f93ad63c9728db8f9b" translate="yes" xml:space="preserve">
          <source>Computes the arc cosine of the value &lt;a href=&quot;acos#kotlin.math%24acos(kotlin.Double)/x&quot;&gt;x&lt;/a&gt;; the returned value is an angle in the range from &lt;code&gt;0.0&lt;/code&gt; to &lt;code&gt;PI&lt;/code&gt; radians.</source>
          <target state="translated">&lt;a href=&quot;acos#kotlin.math%24acos(kotlin.Double)/x&quot;&gt;x&lt;/a&gt; 값의 아크 코사인을 계산합니다 . 반환 된 값은 &lt;code&gt;0.0&lt;/code&gt; 에서 &lt;code&gt;PI&lt;/code&gt; 라디안 범위의 각도입니다 .</target>
        </trans-unit>
        <trans-unit id="74694339d27a3650962ff09b8800075ae45ad99f" translate="yes" xml:space="preserve">
          <source>Computes the arc sine of the value &lt;a href=&quot;asin#kotlin.math%24asin%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt;; the returned value is an angle in the range from &lt;code&gt;-PI/2&lt;/code&gt; to &lt;code&gt;PI/2&lt;/code&gt; radians.</source>
          <target state="translated">값 &lt;a href=&quot;asin#kotlin.math%24asin%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt; 의 아크 사인을 계산합니다 . 반환 된 값은 &lt;code&gt;-PI/2&lt;/code&gt; 에서 &lt;code&gt;PI/2&lt;/code&gt; 라디안 범위의 각도입니다 .</target>
        </trans-unit>
        <trans-unit id="817e3000088c3f6197c39f1d89424b0d7031505a" translate="yes" xml:space="preserve">
          <source>Computes the arc sine of the value &lt;a href=&quot;asin#kotlin.math%24asin(kotlin.Double)/x&quot;&gt;x&lt;/a&gt;; the returned value is an angle in the range from &lt;code&gt;-PI/2&lt;/code&gt; to &lt;code&gt;PI/2&lt;/code&gt; radians.</source>
          <target state="translated">&lt;a href=&quot;asin#kotlin.math%24asin(kotlin.Double)/x&quot;&gt;x&lt;/a&gt; 값의 아크 사인을 계산합니다 . 반환 된 값은 &lt;code&gt;-PI/2&lt;/code&gt; 에서 &lt;code&gt;PI/2&lt;/code&gt; 라디안 범위의 각도입니다 .</target>
        </trans-unit>
        <trans-unit id="532ea78bf6018eae31bf9aaaf81b513fcdc6c52c" translate="yes" xml:space="preserve">
          <source>Computes the arc tangent of the value &lt;a href=&quot;atan#kotlin.math%24atan%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt;; the returned value is an angle in the range from &lt;code&gt;-PI/2&lt;/code&gt; to &lt;code&gt;PI/2&lt;/code&gt; radians.</source>
          <target state="translated">값 &lt;a href=&quot;atan#kotlin.math%24atan%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt; 의 아크 탄젠트를 계산합니다 . 반환 된 값은 &lt;code&gt;-PI/2&lt;/code&gt; 에서 &lt;code&gt;PI/2&lt;/code&gt; 라디안 범위의 각도입니다 .</target>
        </trans-unit>
        <trans-unit id="e82e5d15947d86a41fc39817b97e993fb6d7f7ba" translate="yes" xml:space="preserve">
          <source>Computes the arc tangent of the value &lt;a href=&quot;atan#kotlin.math%24atan(kotlin.Double)/x&quot;&gt;x&lt;/a&gt;; the returned value is an angle in the range from &lt;code&gt;-PI/2&lt;/code&gt; to &lt;code&gt;PI/2&lt;/code&gt; radians.</source>
          <target state="translated">&lt;a href=&quot;atan#kotlin.math%24atan(kotlin.Double)/x&quot;&gt;x&lt;/a&gt; 값의 아크 탄젠트를 계산합니다 . 반환 된 값은 &lt;code&gt;-PI/2&lt;/code&gt; 에서 &lt;code&gt;PI/2&lt;/code&gt; 라디안 범위의 각도입니다 .</target>
        </trans-unit>
        <trans-unit id="69aac902ae4280ae453dec3182b654f73bbda9ad" translate="yes" xml:space="preserve">
          <source>Computes the binary logarithm (base 2) of the value &lt;a href=&quot;log2#kotlin.math%24log2%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt;.</source>
          <target state="translated">값 &lt;a href=&quot;log2#kotlin.math%24log2%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt; 의 이진 로그 (기본 2)를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="85e5083b205858b8d6554074c5f24c2c0d243aa2" translate="yes" xml:space="preserve">
          <source>Computes the binary logarithm (base 2) of the value &lt;a href=&quot;log2#kotlin.math%24log2(kotlin.Double)/x&quot;&gt;x&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;log2#kotlin.math%24log2(kotlin.Double)/x&quot;&gt;x&lt;/a&gt; 값의 이진 로그 (밑이 2)를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="042db05e19a1f7f2f3a0240c225fe5c20d2af1c7" translate="yes" xml:space="preserve">
          <source>Computes the common logarithm (base 10) of the value &lt;a href=&quot;log10#kotlin.math%24log10%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt;.</source>
          <target state="translated">값 &lt;a href=&quot;log10#kotlin.math%24log10%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt; 의 상용 로그 (기본 10)를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="358cd53c9a53727494d1deec1d2bf4f91c153ed4" translate="yes" xml:space="preserve">
          <source>Computes the common logarithm (base 10) of the value &lt;a href=&quot;log10#kotlin.math%24log10(kotlin.Double)/x&quot;&gt;x&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;log10#kotlin.math%24log10(kotlin.Double)/x&quot;&gt;x&lt;/a&gt; 값의 상용 로그 (밑이 10)를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="801aeaf1ab4a7cad800d25e50ccf0797533b391d" translate="yes" xml:space="preserve">
          <source>Computes the cosine of the angle &lt;a href=&quot;cos#kotlin.math%24cos%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt; given in radians.</source>
          <target state="translated">라디안 으로 표시된 각도 &lt;a href=&quot;cos#kotlin.math%24cos%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt; 의 코사인을 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="75967952ccf7290b36f64f520e62146f8d0e2355" translate="yes" xml:space="preserve">
          <source>Computes the cosine of the angle &lt;a href=&quot;cos#kotlin.math%24cos(kotlin.Double)/x&quot;&gt;x&lt;/a&gt; given in radians.</source>
          <target state="translated">라디안으로 주어진 각도 &lt;a href=&quot;cos#kotlin.math%24cos(kotlin.Double)/x&quot;&gt;x&lt;/a&gt; 의 코사인을 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="af38d2adb7c5da916d562ba5ee7c65306c711eb7" translate="yes" xml:space="preserve">
          <source>Computes the hyperbolic cosine of the value &lt;a href=&quot;cosh#kotlin.math%24cosh%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt;.</source>
          <target state="translated">값 &lt;a href=&quot;cosh#kotlin.math%24cosh%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt; 의 쌍곡 코사인을 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="8d3d2706ff20a1ee67e304247843292649cbffc1" translate="yes" xml:space="preserve">
          <source>Computes the hyperbolic cosine of the value &lt;a href=&quot;cosh#kotlin.math%24cosh(kotlin.Double)/x&quot;&gt;x&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;cosh#kotlin.math%24cosh(kotlin.Double)/x&quot;&gt;x&lt;/a&gt; 값의 쌍곡 코사인을 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="16aaad9c9ae20d5e9d990484d6b0f9f0afca7da2" translate="yes" xml:space="preserve">
          <source>Computes the hyperbolic sine of the value &lt;a href=&quot;sinh#kotlin.math%24sinh%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt;.</source>
          <target state="translated">값 &lt;a href=&quot;sinh#kotlin.math%24sinh%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt; 의 쌍곡 사인을 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="78b628807a6fecfe918e09dfd809510ec5d17f64" translate="yes" xml:space="preserve">
          <source>Computes the hyperbolic sine of the value &lt;a href=&quot;sinh#kotlin.math%24sinh(kotlin.Double)/x&quot;&gt;x&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;sinh#kotlin.math%24sinh(kotlin.Double)/x&quot;&gt;x&lt;/a&gt; 값의 쌍곡 사인을 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="c20d0295e4a248227a3e536953ecd22b74af4ef1" translate="yes" xml:space="preserve">
          <source>Computes the hyperbolic tangent of the value &lt;a href=&quot;tanh#kotlin.math%24tanh%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt;.</source>
          <target state="translated">값 &lt;a href=&quot;tanh#kotlin.math%24tanh%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt; 의 쌍곡 탄젠트를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="50d64ffe4ed447458cc4f0117c28215b5f1f8bb6" translate="yes" xml:space="preserve">
          <source>Computes the hyperbolic tangent of the value &lt;a href=&quot;tanh#kotlin.math%24tanh(kotlin.Double)/x&quot;&gt;x&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;tanh#kotlin.math%24tanh(kotlin.Double)/x&quot;&gt;x&lt;/a&gt; 값의 쌍곡 탄젠트를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="f936970b16e260f28ce47fac9ff5ba6c59c3ffe0" translate="yes" xml:space="preserve">
          <source>Computes the inverse hyperbolic cosine of the value &lt;a href=&quot;acosh#kotlin.math%24acosh%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt;.</source>
          <target state="translated">값 &lt;a href=&quot;acosh#kotlin.math%24acosh%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt; 의 역 쌍곡 코사인을 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="148b6be4512caf33be7bd4a871031518ddd7c89e" translate="yes" xml:space="preserve">
          <source>Computes the inverse hyperbolic cosine of the value &lt;a href=&quot;acosh#kotlin.math%24acosh(kotlin.Double)/x&quot;&gt;x&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;acosh#kotlin.math%24acosh(kotlin.Double)/x&quot;&gt;x&lt;/a&gt; 값의 역 하이퍼 볼릭 코사인을 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="05dc7149a198d3bba80945f453fa01e84950b7d2" translate="yes" xml:space="preserve">
          <source>Computes the inverse hyperbolic sine of the value &lt;a href=&quot;asinh#kotlin.math%24asinh%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt;.</source>
          <target state="translated">값 &lt;a href=&quot;asinh#kotlin.math%24asinh%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt; 의 역 쌍곡 사인을 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="816d411034193e38cd91b9245d1ea6c543c03667" translate="yes" xml:space="preserve">
          <source>Computes the inverse hyperbolic sine of the value &lt;a href=&quot;asinh#kotlin.math%24asinh(kotlin.Double)/x&quot;&gt;x&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asinh#kotlin.math%24asinh(kotlin.Double)/x&quot;&gt;x&lt;/a&gt; 값의 역 쌍곡 사인을 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="0f04076888fda0550126c88212efd0073c87ccbf" translate="yes" xml:space="preserve">
          <source>Computes the inverse hyperbolic tangent of the value &lt;a href=&quot;atanh#kotlin.math%24atanh%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt;.</source>
          <target state="translated">값 &lt;a href=&quot;atanh#kotlin.math%24atanh%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt; 의 역 쌍곡 탄젠트를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="d48b27a27275e22603476c644267ad61d506f7d1" translate="yes" xml:space="preserve">
          <source>Computes the inverse hyperbolic tangent of the value &lt;a href=&quot;atanh#kotlin.math%24atanh(kotlin.Double)/x&quot;&gt;x&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;atanh#kotlin.math%24atanh(kotlin.Double)/x&quot;&gt;x&lt;/a&gt; 값의 역 쌍곡 탄젠트를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="78d9c99b5e12f4a5453810f3fc45aa422fcd4ced" translate="yes" xml:space="preserve">
          <source>Computes the logarithm of the value &lt;a href=&quot;log#kotlin.math%24log%28kotlin.Double%2C+kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt; to the given &lt;a href=&quot;log#kotlin.math%24log%28kotlin.Double%2C+kotlin.Double%29%2Fbase&quot;&gt;base&lt;/a&gt;.</source>
          <target state="translated">값의 대수 계산 &lt;a href=&quot;log#kotlin.math%24log%28kotlin.Double%2C+kotlin.Double%29%2Fx&quot;&gt;X&lt;/a&gt; 주어진 행 &lt;a href=&quot;log#kotlin.math%24log%28kotlin.Double%2C+kotlin.Double%29%2Fbase&quot;&gt;베이스&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9e24082c0bf6e60132029df213269f9cbe8eee03" translate="yes" xml:space="preserve">
          <source>Computes the logarithm of the value &lt;a href=&quot;log#kotlin.math%24log(kotlin.Double,%20kotlin.Double)/x&quot;&gt;x&lt;/a&gt; to the given &lt;a href=&quot;log#kotlin.math%24log(kotlin.Double,%20kotlin.Double)/base&quot;&gt;base&lt;/a&gt;.</source>
          <target state="translated">주어진 &lt;a href=&quot;log#kotlin.math%24log(kotlin.Double,%20kotlin.Double)/base&quot;&gt;밑에&lt;/a&gt; 대한 값 &lt;a href=&quot;log#kotlin.math%24log(kotlin.Double,%20kotlin.Double)/x&quot;&gt;x&lt;/a&gt; 의 로그를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="bbdf88dc8eaa810b9f221e162c0ae164bfccc030" translate="yes" xml:space="preserve">
          <source>Computes the natural logarithm (base &lt;code&gt;E&lt;/code&gt;) of the value &lt;a href=&quot;ln#kotlin.math%24ln%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt;.</source>
          <target state="translated">값 &lt;a href=&quot;ln#kotlin.math%24ln%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt; 의 자연 로그 (기본 &lt;code&gt;E&lt;/code&gt; )를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="c4083bc3cb7a7cd79e81e5c9139a5dc48a7261a4" translate="yes" xml:space="preserve">
          <source>Computes the natural logarithm (base &lt;code&gt;E&lt;/code&gt;) of the value &lt;a href=&quot;ln#kotlin.math%24ln(kotlin.Double)/x&quot;&gt;x&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;ln#kotlin.math%24ln(kotlin.Double)/x&quot;&gt;x&lt;/a&gt; 값 의 자연 로그 (밑 &lt;code&gt;E&lt;/code&gt; )를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="3658b7ea17138ddaaaa32aa6ade2835c3de87bc8" translate="yes" xml:space="preserve">
          <source>Computes the next item in the iterator.</source>
          <target state="translated">반복자의 다음 항목을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="b4a8f06d6424ce207fe2dbeb1673df11b4b022bd" translate="yes" xml:space="preserve">
          <source>Computes the positive square root of the value &lt;a href=&quot;sqrt#kotlin.math%24sqrt%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt;.</source>
          <target state="translated">값 &lt;a href=&quot;sqrt#kotlin.math%24sqrt%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt; 의 양의 제곱근을 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="9472eb21955f9b4592952edb9bf8ae5f60c43778" translate="yes" xml:space="preserve">
          <source>Computes the positive square root of the value &lt;a href=&quot;sqrt#kotlin.math%24sqrt(kotlin.Double)/x&quot;&gt;x&lt;/a&gt;.</source>
          <target state="translated">값 &lt;a href=&quot;sqrt#kotlin.math%24sqrt(kotlin.Double)/x&quot;&gt;x&lt;/a&gt; 의 양의 제곱근을 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="227fc806bb5cb8f94d8306fcd123a47201cc098d" translate="yes" xml:space="preserve">
          <source>Computes the remainder of division of this value by the &lt;a href=&quot;-i-e-e-erem#kotlin.math%24IEEErem%28kotlin.Double%2C+kotlin.Double%29%2Fdivisor&quot;&gt;divisor&lt;/a&gt; value according to the IEEE 754 standard.</source>
          <target state="translated">IEEE 754 표준에 &lt;a href=&quot;-i-e-e-erem#kotlin.math%24IEEErem%28kotlin.Double%2C+kotlin.Double%29%2Fdivisor&quot;&gt;따라이&lt;/a&gt; 값을 제수 값 으로 나눈 나머지를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="7f507c0eb9b4a99edc49474bb0338c726700d1d3" translate="yes" xml:space="preserve">
          <source>Computes the remainder of division of this value by the &lt;a href=&quot;-i-e-e-erem#kotlin.math%24IEEErem(kotlin.Double,%20kotlin.Double)/divisor&quot;&gt;divisor&lt;/a&gt; value according to the IEEE 754 standard.</source>
          <target state="translated">IEEE 754 표준에 따라 &lt;a href=&quot;-i-e-e-erem#kotlin.math%24IEEErem(kotlin.Double,%20kotlin.Double)/divisor&quot;&gt;제수&lt;/a&gt; 값 으로이 값을 나눈 나머지를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="7929cca41305f1b4a016af478fa8a663f57598a1" translate="yes" xml:space="preserve">
          <source>Computes the sine of the angle &lt;a href=&quot;sin#kotlin.math%24sin%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt; given in radians.</source>
          <target state="translated">라디안으로 주어진 각도 &lt;a href=&quot;sin#kotlin.math%24sin%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt; 의 사인을 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="105341cda1f54797ab2e70680187e6360edec2cd" translate="yes" xml:space="preserve">
          <source>Computes the sine of the angle &lt;a href=&quot;sin#kotlin.math%24sin(kotlin.Double)/x&quot;&gt;x&lt;/a&gt; given in radians.</source>
          <target state="translated">라디안으로 주어진 각도 &lt;a href=&quot;sin#kotlin.math%24sin(kotlin.Double)/x&quot;&gt;x&lt;/a&gt; 의 사인을 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="8f3573cd1d7c804fefd68285e96e557316e005d0" translate="yes" xml:space="preserve">
          <source>Computes the tangent of the angle &lt;a href=&quot;tan#kotlin.math%24tan%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt; given in radians.</source>
          <target state="translated">라디안으로 주어진 각도 &lt;a href=&quot;tan#kotlin.math%24tan%28kotlin.Double%29%2Fx&quot;&gt;x&lt;/a&gt; 의 탄젠트를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="3b9576488a97ba2e0d8923cbc9cc0de66a90a149" translate="yes" xml:space="preserve">
          <source>Computes the tangent of the angle &lt;a href=&quot;tan#kotlin.math%24tan(kotlin.Double)/x&quot;&gt;x&lt;/a&gt; given in radians.</source>
          <target state="translated">라디안으로 주어진 각도 &lt;a href=&quot;tan#kotlin.math%24tan(kotlin.Double)/x&quot;&gt;x&lt;/a&gt; 의 탄젠트를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="1aba6cf12cb1df84a02458cf394b58671b7b321d" translate="yes" xml:space="preserve">
          <source>Concatenates characters in this &lt;a href=&quot;../kotlin/-char-array/index#kotlin.CharArray&quot;&gt;CharArray&lt;/a&gt; into a String.</source>
          <target state="translated">이 &lt;a href=&quot;../kotlin/-char-array/index#kotlin.CharArray&quot;&gt;CharArray의&lt;/a&gt; 문자를 String 에 연결합니다 .</target>
        </trans-unit>
        <trans-unit id="1302f45c5af73878c717281df472074f24772f6b" translate="yes" xml:space="preserve">
          <source>Concatenates characters in this &lt;a href=&quot;../kotlin/-char-array/index#kotlin.CharArray&quot;&gt;CharArray&lt;/a&gt; or its subrange into a String.</source>
          <target state="translated">이 &lt;a href=&quot;../kotlin/-char-array/index#kotlin.CharArray&quot;&gt;CharArray&lt;/a&gt; 또는 그 하위 범위의 문자를 문자열로 연결합니다 .</target>
        </trans-unit>
        <trans-unit id="c78b957e6dcc9382fde9640b35614817fc42c4a2" translate="yes" xml:space="preserve">
          <source>Concatenates this Char and a String.</source>
          <target state="translated">이 Char와 String을 연결합니다.</target>
        </trans-unit>
        <trans-unit id="df062526a2314e0bee167c57d603eadf84e209c3" translate="yes" xml:space="preserve">
          <source>Concatenates this string with the string representation of the given &lt;a href=&quot;plus#kotlin%24plus%28kotlin.String%2C+kotlin.Any%29%2Fother&quot;&gt;other&lt;/a&gt; object. If either the receiver or the &lt;a href=&quot;plus#kotlin%24plus%28kotlin.String%2C+kotlin.Any%29%2Fother&quot;&gt;other&lt;/a&gt; object are null, they are represented as the string &quot;null&quot;.</source>
          <target state="translated">이 문자열을 지정된 &lt;a href=&quot;plus#kotlin%24plus%28kotlin.String%2C+kotlin.Any%29%2Fother&quot;&gt;다른&lt;/a&gt; 객체 의 문자열 표현과 연결 합니다. 수신자 또는 &lt;a href=&quot;plus#kotlin%24plus%28kotlin.String%2C+kotlin.Any%29%2Fother&quot;&gt;다른&lt;/a&gt; 오브젝트가 널인 경우 문자열 &quot;null&quot;로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="2ff85894052ad1bdb1158c8198936601e0ba0f35" translate="yes" xml:space="preserve">
          <source>Concatenates this string with the string representation of the given &lt;a href=&quot;plus#kotlin%24plus(kotlin.String?,%20kotlin.Any?)/other&quot;&gt;other&lt;/a&gt; object. If either the receiver or the &lt;a href=&quot;plus#kotlin%24plus(kotlin.String?,%20kotlin.Any?)/other&quot;&gt;other&lt;/a&gt; object are null, they are represented as the string &quot;null&quot;.</source>
          <target state="translated">이 문자열을 지정된 &lt;a href=&quot;plus#kotlin%24plus(kotlin.String?,%20kotlin.Any?)/other&quot;&gt;다른&lt;/a&gt; 개체 의 문자열 표현과 연결 합니다. 수신자 또는 &lt;a href=&quot;plus#kotlin%24plus(kotlin.String?,%20kotlin.Any?)/other&quot;&gt;다른&lt;/a&gt; 오브젝트가 널인 경우 문자열 &quot;null&quot;로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="fb9925476ea0dd2145e51293904563c663a79655" translate="yes" xml:space="preserve">
          <source>Concatenating mode is implemented by &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/flat-map-concat.html&quot;&gt;flatMapConcat&lt;/a&gt; and &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/flatten-concat.html&quot;&gt;flattenConcat&lt;/a&gt; operators. They are the most direct analogues of the corresponding sequence operators. They wait for the inner flow to complete before starting to collect the next one as the following example shows:</source>
          <target state="translated">연결 모드는 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/flat-map-concat.html&quot;&gt;flatMapConcat&lt;/a&gt; 및 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/flatten-concat.html&quot;&gt;flattenConcat&lt;/a&gt; 연산자로 구현됩니다 . 이들은 해당 시퀀스 연산자의 가장 직접적인 유사체입니다. 다음 예제와 같이 내부 흐름이 완료 될 때까지 기다렸다가 다음 흐름을 수집하기 시작합니다.</target>
        </trans-unit>
        <trans-unit id="8f444b9d5448ea57d949c47888a5c267129a7f51" translate="yes" xml:space="preserve">
          <source>Conceptually, &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/async.html&quot;&gt;async&lt;/a&gt; is just like &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/launch.html&quot;&gt;launch&lt;/a&gt;. It starts a separate coroutine which is a light-weight thread that works concurrently with all the other coroutines. The difference is that &lt;code&gt;launch&lt;/code&gt; returns a &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/index.html&quot;&gt;Job&lt;/a&gt; and does not carry any resulting value, while &lt;code&gt;async&lt;/code&gt; returns a &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/index.html&quot;&gt;Deferred&lt;/a&gt; &amp;mdash; a light-weight non-blocking future that represents a promise to provide a result later. You can use &lt;code&gt;.await()&lt;/code&gt; on a deferred value to get its eventual result, but &lt;code&gt;Deferred&lt;/code&gt; is also a &lt;code&gt;Job&lt;/code&gt;, so you can cancel it if needed.</source>
          <target state="translated">개념적으로 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/async.html&quot;&gt;비동기&lt;/a&gt; 는 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/launch.html&quot;&gt;launch&lt;/a&gt; 와 같습니다 . 다른 모든 코 루틴과 동시에 작동하는 경량 스레드 인 별도의 코 루틴을 시작합니다. 차이점은 &lt;code&gt;launch&lt;/code&gt; 가 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/index.html&quot;&gt;작업을&lt;/a&gt; 반환하고 결과 값을 전달하지 않는 반면, &lt;code&gt;async&lt;/code&gt; 는 나중에 결과를 제공하겠다는 약속을 나타내는 가벼운 비 차단 미래인 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/index.html&quot;&gt;Deferred를&lt;/a&gt; 반환 한다는 것입니다. 지연된 값에 &lt;code&gt;.await()&lt;/code&gt; 를 사용 하여 최종 결과를 얻을 수 있지만 &lt;code&gt;Deferred&lt;/code&gt; 도 &lt;code&gt;Job&lt;/code&gt; 이므로 필요한 경우 취소 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="741286a78a486044c8e70baf53ce8b42a09e5cfa" translate="yes" xml:space="preserve">
          <source>Conceptually, &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/async.html&quot;&gt;async&lt;/a&gt; is just like &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/launch.html&quot;&gt;launch&lt;/a&gt;. It starts a separate coroutine which is a light-weight thread that works concurrently with all the other coroutines. The difference is that &lt;code&gt;launch&lt;/code&gt; returns a &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/index.html&quot;&gt;Job&lt;/a&gt; and does not carry any resulting value, while &lt;code&gt;async&lt;/code&gt; returns a &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/index.html&quot;&gt;Deferred&lt;/a&gt; &amp;ndash; a light-weight non-blocking future that represents a promise to provide a result later. You can use &lt;code&gt;.await()&lt;/code&gt; on a deferred value to get its eventual result, but &lt;code&gt;Deferred&lt;/code&gt; is also a &lt;code&gt;Job&lt;/code&gt;, so you can cancel it if needed.</source>
          <target state="translated">개념적으로 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/async.html&quot;&gt;비동기&lt;/a&gt; 는 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/launch.html&quot;&gt;launch&lt;/a&gt; 와 같습니다 . 그것은 다른 모든 코 루틴과 동시에 작동하는 가벼운 실인 별도의 코 루틴을 시작합니다. 차이점은 &lt;code&gt;launch&lt;/code&gt; 가 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/index.html&quot;&gt;Job을&lt;/a&gt; 반환하고 결과 값을 전달하지 않는 반면 &lt;code&gt;async&lt;/code&gt; 는 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/index.html&quot;&gt;Deferred를&lt;/a&gt; 반환 한다는 것입니다. 이는 나중에 결과를 제공하겠다는 약속을 나타내는 경량 비 차단 미래입니다. 지연된 값에 &lt;code&gt;.await()&lt;/code&gt; 을 사용 하여 최종 결과를 얻을 수 있지만 &lt;code&gt;Deferred&lt;/code&gt; 도 &lt;code&gt;Job&lt;/code&gt; 이므로 필요한 경우 취소 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="04d6dddfd7d6fccb9f9797c14c7ae51504c95b2c" translate="yes" xml:space="preserve">
          <source>Conceptually, a &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-send-channel/close.html&quot;&gt;close&lt;/a&gt; is like sending a special close token to the channel. The iteration stops as soon as this close token is received, so there is a guarantee that all previously sent elements before the close are received:</source>
          <target state="translated">개념적으로 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-send-channel/close.html&quot;&gt;닫기&lt;/a&gt; 는 채널에 특별한 닫기 토큰을 보내는 것과 같습니다. 이 닫기 토큰이 수신 되 자마자 반복이 중지되므로 닫기 전에 이전에 보낸 모든 요소가 수신된다는 보장이 있습니다.</target>
        </trans-unit>
        <trans-unit id="0434df6a9465ae13aa06669a7769d87fb8625d68" translate="yes" xml:space="preserve">
          <source>Concrete type constructors</source>
          <target state="translated">콘크리트 타입 생성자</target>
        </trans-unit>
        <trans-unit id="17e44d30708beb60414b171dd076a3db769f9d9e" translate="yes" xml:space="preserve">
          <source>Concurrency in Kotlin/Native</source>
          <target state="translated">코 틀린 / 네이티브의 동시성</target>
        </trans-unit>
        <trans-unit id="0f9c420abbf1f3f22ec98382c17954b9c2cc5972" translate="yes" xml:space="preserve">
          <source>Concurrent getOrPut, that is safe for concurrent maps.</source>
          <target state="translated">동시 getOrPut. 동시 맵에 안전합니다.</target>
        </trans-unit>
        <trans-unit id="6d2e2eb8e58b21b66ed060a6e67917b441e9c1ac" translate="yes" xml:space="preserve">
          <source>Concurrent using async</source>
          <target state="translated">비동기를 사용하여 동시</target>
        </trans-unit>
        <trans-unit id="8c17ec700e8098781c5f019ea1f3a9c2803b50da" translate="yes" xml:space="preserve">
          <source>ConcurrentModificationException</source>
          <target state="translated">ConcurrentModificationException</target>
        </trans-unit>
        <trans-unit id="e428c12fd355944b5e6b7023bd80dd3c17b5aee5" translate="yes" xml:space="preserve">
          <source>Conditional expressions</source>
          <target state="translated">조건식</target>
        </trans-unit>
        <trans-unit id="e0b601d01602ccee0b95b13b09aba26c6be9c141" translate="yes" xml:space="preserve">
          <source>ConditionalEffect</source>
          <target state="translated">ConditionalEffect</target>
        </trans-unit>
        <trans-unit id="d6a56385d0729f6ff4bf27671cc845cb6f2cfde5" translate="yes" xml:space="preserve">
          <source>Conditionals</source>
          <target state="translated">Conditionals</target>
        </trans-unit>
        <trans-unit id="11c643274f03187b89a33e99682e1cfe14e02c3a" translate="yes" xml:space="preserve">
          <source>Configuration of &lt;a href=&quot;#binaries&quot;&gt;binaries&lt;/a&gt; to produce.</source>
          <target state="translated">생성 할 &lt;a href=&quot;#binaries&quot;&gt;바이너리&lt;/a&gt; 구성 .</target>
        </trans-unit>
        <trans-unit id="41ee2206f3ccc325441111ed1c7b37ef9b0dfab1" translate="yes" xml:space="preserve">
          <source>Configuration of &lt;a href=&quot;#cinterops&quot;&gt;interop with C libraries&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#cinterops&quot;&gt;C 라이브러리와&lt;/a&gt; 의 상호 운용성 구성 .</target>
        </trans-unit>
        <trans-unit id="76174a215ddd15204db430482df071ee5ebe1e24" translate="yes" xml:space="preserve">
          <source>Configuration of &lt;a href=&quot;javascript-dce&quot;&gt;Dead Code Elimination&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;javascript-dce&quot;&gt;데드 코드 제거&lt;/a&gt; 구성 .</target>
        </trans-unit>
        <trans-unit id="4b9f1d81c78ffbfad234d5994f6dacfa6f1cac25" translate="yes" xml:space="preserve">
          <source>Configuration of a target can include two parts:</source>
          <target state="translated">대상 구성에는 다음 두 부분이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="962c23935e2fb336e8df68bfe34992f75f3b95bc" translate="yes" xml:space="preserve">
          <source>Configuration of project bundling with &lt;a href=&quot;https://webpack.js.org/&quot;&gt;Webpack&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://webpack.js.org/&quot;&gt;Webpack을&lt;/a&gt; 사용한 프로젝트 번들링 구성 .</target>
        </trans-unit>
        <trans-unit id="746aaf3f5e42fcbc85a6ebe76a7f66df2faf7d69" translate="yes" xml:space="preserve">
          <source>Configuration of project running.</source>
          <target state="translated">실행중인 프로젝트의 구성.</target>
        </trans-unit>
        <trans-unit id="6f8efa8ecc028ee460e87bf6c21677d39f6e480f" translate="yes" xml:space="preserve">
          <source>Configuration of test execution.</source>
          <target state="translated">테스트 실행 구성.</target>
        </trans-unit>
        <trans-unit id="da5930dacfc0e77711a530435834e4fadac95089" translate="yes" xml:space="preserve">
          <source>Configuration of the Node.js target.</source>
          <target state="translated">Node.js 대상의 구성.</target>
        </trans-unit>
        <trans-unit id="4162b494957f130fca42f29700886252fd0682ea" translate="yes" xml:space="preserve">
          <source>Configuration of the browser target.</source>
          <target state="translated">브라우저 대상의 구성.</target>
        </trans-unit>
        <trans-unit id="76e78214ff40d8bc095faa7680fc4388b724169a" translate="yes" xml:space="preserve">
          <source>Configuration of webpack's CSS and style loaders from within the Gradle configuration via &lt;code&gt;cssSupport&lt;/code&gt;. Read more about using them &lt;a href=&quot;js-project-setup#configuring-css&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">를 통해 Gradle을 구성 내에서 웹팩의 CSS 스타일 로더의 구성 &lt;code&gt;cssSupport&lt;/code&gt; . &lt;a href=&quot;js-project-setup#configuring-css&quot;&gt;여기에서&lt;/a&gt; 사용 방법에 대해 자세히 알아보십시오 .</target>
        </trans-unit>
        <trans-unit id="91f1bd95ccc6a8bec32a00a221011deba48cdb53" translate="yes" xml:space="preserve">
          <source>Configurations of source sets are stored inside the corresponding blocks of &lt;code&gt;sourceSets&lt;/code&gt;. A source set has the following parameters:</source>
          <target state="translated">소스 세트의 구성은 &lt;code&gt;sourceSets&lt;/code&gt; 의 해당 블록 내에 저장됩니다 . 소스 세트에는 다음 매개 변수가 있습니다.</target>
        </trans-unit>
        <trans-unit id="92015b87c51e9a386b39b7390b3f804964403ad0" translate="yes" xml:space="preserve">
          <source>Configure &lt;code&gt;summary&lt;/code&gt;, &lt;code&gt;homepage&lt;/code&gt;, and &lt;code&gt;frameworkName&lt;/code&gt;of the &lt;code&gt;Podspec&lt;/code&gt; file in the &lt;code&gt;cocoapods&lt;/code&gt; block.</source>
          <target state="translated">구성 &lt;code&gt;summary&lt;/code&gt; , &lt;code&gt;homepage&lt;/code&gt; 및 &lt;code&gt;frameworkName&lt;/code&gt; 의 &lt;code&gt;Podspec&lt;/code&gt; 의 에서 파일 &lt;code&gt;cocoapods&lt;/code&gt; 의 블록.</target>
        </trans-unit>
        <trans-unit id="0a068a6c8767e4cb896a903ca1ebb5979eee6e24" translate="yes" xml:space="preserve">
          <source>Configure a Gradle project: apply the &lt;code&gt;org.jetbrains.kotlin.native.cocoapods&lt;/code&gt; plugin, add and configure the targets, and specify the required podspec fields.</source>
          <target state="translated">Gradle 프로젝트 구성 : &lt;code&gt;org.jetbrains.kotlin.native.cocoapods&lt;/code&gt; 플러그인을 적용 하고 대상을 추가 및 구성하고 필요한 podspec 필드를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="d5b7c663c93b74ea9a8ec7604dc3f1fa8e2b2c1c" translate="yes" xml:space="preserve">
          <source>Configure all compilations</source>
          <target state="translated">모든 편집 구성</target>
        </trans-unit>
        <trans-unit id="d0687b87c7557939d4cb8d9373e23689eeec535f" translate="yes" xml:space="preserve">
          <source>Configure compilations</source>
          <target state="translated">편집 구성</target>
        </trans-unit>
        <trans-unit id="f79d9504c85e509be1b8db72c24205b3525d65b7" translate="yes" xml:space="preserve">
          <source>Configure compilations for one target</source>
          <target state="translated">하나의 대상에 대한 컴파일 구성</target>
        </trans-unit>
        <trans-unit id="6bd1072fd2b16535210740116017ce97cd964c3a" translate="yes" xml:space="preserve">
          <source>Configure compiler options</source>
          <target state="translated">컴파일러 옵션 구성</target>
        </trans-unit>
        <trans-unit id="2edfc4c7917d51b33e1f56e1aa6b25b4bd8b5acf" translate="yes" xml:space="preserve">
          <source>Configure interop with native languages</source>
          <target state="translated">모국어로 Interop 구성</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
