<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="kotlin">
    <body>
      <group id="kotlin">
        <trans-unit id="6b648764c9172832601809bf4ba85852d95f06bd" translate="yes" xml:space="preserve">
          <source>Converts the characters in the specified array to a string.</source>
          <target state="translated">지정된 배열의 문자를 문자열로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="ef25864cfbbccc80a7d789f233ed22699c17e1fa" translate="yes" xml:space="preserve">
          <source>Converts the code points from a portion of the specified Unicode code point array to a string.</source>
          <target state="translated">코드 포인트를 지정된 유니 코드 코드 포인트 배열의 일부에서 문자열로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="ebf37eeb27c743abe362c3c8fa909e498b971046" translate="yes" xml:space="preserve">
          <source>Converts the codepoint specified to a char array. If the codepoint is not supplementary, the method will return an array with one element otherwise it will return an array A with a high surrogate in A0 and a low surrogate in A1.</source>
          <target state="translated">지정된 코드 포인트를 char 배열로 변환합니다. 코드 포인트가 보충적이지 않은 경우, 메소드는 요소가 하나 인 배열을 리턴하고 그렇지 않으면 A0에 높은 대리가 있고 A1에 낮은 대리가있는 배열 A를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="bfe48fc7d0ea9deb94382af816bda5d54724fe22" translate="yes" xml:space="preserve">
          <source>Converts the contents of the specified StringBuffer to a string.</source>
          <target state="translated">지정된 StringBuffer의 내용을 문자열로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="08cda6ea9084fbe2c17557f428a00635aab089d5" translate="yes" xml:space="preserve">
          <source>Converts the contents of the specified StringBuilder to a string.</source>
          <target state="translated">지정된 StringBuilder의 내용을 문자열로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="ed5895468be7340c500ceed8cc357bae8cc989c1" translate="yes" xml:space="preserve">
          <source>Converts the contents of this byte array to a string using the specified &lt;a href=&quot;../../kotlin.collections/to-string#kotlin.collections%24toString%28kotlin.ByteArray%2C+java.nio.charset.Charset%29%2Fcharset&quot;&gt;charset&lt;/a&gt;.</source>
          <target state="translated">이 바이트 배열의 내용을, 지정된 &lt;a href=&quot;../../kotlin.collections/to-string#kotlin.collections%24toString%28kotlin.ByteArray%2C+java.nio.charset.Charset%29%2Fcharset&quot;&gt;캐릭터 세트를&lt;/a&gt; 사용해 캐릭터 라인으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="1d8196baa74faed0d59d141dbd6c345719375cb6" translate="yes" xml:space="preserve">
          <source>Converts the contents of this byte array to a string using the specified &lt;a href=&quot;../../kotlin.collections/to-string#kotlin.collections%24toString(kotlin.ByteArray,%20java.nio.charset.Charset)/charset&quot;&gt;charset&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;../../kotlin.collections/to-string#kotlin.collections%24toString(kotlin.ByteArray,%20java.nio.charset.Charset)/charset&quot;&gt;charset를&lt;/a&gt; 사용하여이 바이트 배열의 내용을 문자열로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="0c64a04d6a6adc37c5c51a7a0afd5e90d467ea24" translate="yes" xml:space="preserve">
          <source>Converts the contents of this byte array to a string using the specified &lt;a href=&quot;to-string#kotlin.collections%24toString%28kotlin.ByteArray%2C+java.nio.charset.Charset%29%2Fcharset&quot;&gt;charset&lt;/a&gt;.</source>
          <target state="translated">이 바이트 배열의 내용을, 지정된 &lt;a href=&quot;to-string#kotlin.collections%24toString%28kotlin.ByteArray%2C+java.nio.charset.Charset%29%2Fcharset&quot;&gt;캐릭터 세트를&lt;/a&gt; 사용해 캐릭터 라인으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="b8d8edbad609e6d83025b22687c422dc74cc3fd9" translate="yes" xml:space="preserve">
          <source>Converts the contents of this byte array to a string using the specified &lt;a href=&quot;to-string#kotlin.collections%24toString(kotlin.ByteArray,%20java.nio.charset.Charset)/charset&quot;&gt;charset&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;to-string#kotlin.collections%24toString(kotlin.ByteArray,%20java.nio.charset.Charset)/charset&quot;&gt;charset를&lt;/a&gt; 사용하여이 바이트 배열의 내용을 문자열로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="5cac4b924c7a2ab88b0fa0f37f27e7926d48477a" translate="yes" xml:space="preserve">
          <source>Converts the data from a portion of the specified array of bytes to characters using the UTF-8 character set and returns the conversion result as a string.</source>
          <target state="translated">UTF-8 문자 세트를 사용하여 지정된 바이트 배열의 일부에서 문자로 데이터를 변환하고 변환 결과를 문자열로 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="2e6a15ffcfb6e19055b115b4231097e022b0ecbd" translate="yes" xml:space="preserve">
          <source>Converts the data from a portion of the specified array of bytes to characters using the specified character set and returns the conversion result as a string.</source>
          <target state="translated">지정된 문자 집합을 사용하여 지정된 바이트 배열의 일부에서 데이터를 문자로 변환하고 변환 결과를 문자열로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3aeb8ae0860f04eef6548e8f076050422d9abce6" translate="yes" xml:space="preserve">
          <source>Converts the data from the specified array of bytes to characters using the UTF-8 character set and returns the conversion result as a string.</source>
          <target state="translated">UTF-8 문자 세트를 사용하여 지정된 바이트 배열에서 문자로 데이터를 변환하고 변환 결과를 문자열로 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="77e58166bc067484b9610ee9f1909e1692337dcf" translate="yes" xml:space="preserve">
          <source>Converts the data from the specified array of bytes to characters using the specified character set and returns the conversion result as a string.</source>
          <target state="translated">지정된 문자 집합을 사용하여 지정된 바이트 배열의 데이터를 문자로 변환하고 변환 결과를 문자열로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7e27f69dc1660855073f92a603e9a0b124f7bc35" translate="yes" xml:space="preserve">
          <source>Converts the handle to C pointer.</source>
          <target state="translated">핸들을 C 포인터로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="375a7da246f6579b66fa38f8ebbcbd886bbc508b" translate="yes" xml:space="preserve">
          <source>Converts the result of &lt;a href=&quot;-reg-exp/exec&quot;&gt;RegExp.exec&lt;/a&gt; to an array where the first element contains the entire matched text and each subsequent element is the text matched by each capturing parenthesis.</source>
          <target state="translated">&lt;a href=&quot;-reg-exp/exec&quot;&gt;RegExp.exec&lt;/a&gt; 의 결과를 첫 번째 요소에 일치하는 전체 텍스트가 포함되고 각 후속 요소가 각 캡처 괄호로 일치하는 텍스트 인 배열로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="96d74e130d52556e77a5003d6b9e1d9adfebc0db" translate="yes" xml:space="preserve">
          <source>Converts the result of &lt;a href=&quot;../-reg-exp/exec&quot;&gt;RegExp.exec&lt;/a&gt; to an array where the first element contains the entire matched text and each subsequent element is the text matched by each capturing parenthesis.</source>
          <target state="translated">&lt;a href=&quot;../-reg-exp/exec&quot;&gt;RegExp.exec&lt;/a&gt; 의 결과를 첫 번째 요소에 일치하는 전체 텍스트가 포함되고 각 후속 요소가 각 캡처 괄호로 일치하는 텍스트 인 배열로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="44c56fe586055e067d90f9aa8d72c1731ac20563" translate="yes" xml:space="preserve">
          <source>Converts the string into a regular expression &lt;a href=&quot;-regex/index#kotlin.text.Regex&quot;&gt;Regex&lt;/a&gt; with the default options.</source>
          <target state="translated">기본 옵션을 사용 하여 문자열을 &lt;a href=&quot;-regex/index#kotlin.text.Regex&quot;&gt;정규식 Regex&lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="1498547639c62011c7b406410b167cd6e692677f" translate="yes" xml:space="preserve">
          <source>Converts the string into a regular expression &lt;a href=&quot;-regex/index#kotlin.text.Regex&quot;&gt;Regex&lt;/a&gt; with the specified set of &lt;a href=&quot;to-regex#kotlin.text%24toRegex%28kotlin.String%2C+kotlin.collections.Set%28%28kotlin.text.RegexOption%29%29%29%2Foptions&quot;&gt;options&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;to-regex#kotlin.text%24toRegex%28kotlin.String%2C+kotlin.collections.Set%28%28kotlin.text.RegexOption%29%29%29%2Foptions&quot;&gt;옵션&lt;/a&gt; 세트를 사용 하여 문자열을 &lt;a href=&quot;-regex/index#kotlin.text.Regex&quot;&gt;정규식 Regex&lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="25dfcd95b7fe2c5b43fd9bf3f43d3d8b77f49422" translate="yes" xml:space="preserve">
          <source>Converts the string into a regular expression &lt;a href=&quot;-regex/index#kotlin.text.Regex&quot;&gt;Regex&lt;/a&gt; with the specified set of &lt;a href=&quot;to-regex#kotlin.text%24toRegex(kotlin.String,%20kotlin.collections.Set((kotlin.text.RegexOption)))/options&quot;&gt;options&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;to-regex#kotlin.text%24toRegex(kotlin.String,%20kotlin.collections.Set((kotlin.text.RegexOption)))/options&quot;&gt;옵션&lt;/a&gt; 세트를 사용 하여 문자열을 &lt;a href=&quot;-regex/index#kotlin.text.Regex&quot;&gt;정규식 Regex&lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="8162dbdafd8fe2d85cee922dc1f9dfc17b8bc377" translate="yes" xml:space="preserve">
          <source>Converts the string into a regular expression &lt;a href=&quot;-regex/index#kotlin.text.Regex&quot;&gt;Regex&lt;/a&gt; with the specified single &lt;a href=&quot;to-regex#kotlin.text%24toRegex%28kotlin.String%2C+kotlin.text.RegexOption%29%2Foption&quot;&gt;option&lt;/a&gt;.</source>
          <target state="translated">지정된 단일 &lt;a href=&quot;to-regex#kotlin.text%24toRegex%28kotlin.String%2C+kotlin.text.RegexOption%29%2Foption&quot;&gt;옵션을 사용&lt;/a&gt; 하여 문자열을 &lt;a href=&quot;-regex/index#kotlin.text.Regex&quot;&gt;정규식 Regex&lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="a9fc97629a5e4b20ef3e39041f4660896c6e351f" translate="yes" xml:space="preserve">
          <source>Converts the string into a regular expression &lt;a href=&quot;-regex/index#kotlin.text.Regex&quot;&gt;Regex&lt;/a&gt; with the specified single &lt;a href=&quot;to-regex#kotlin.text%24toRegex(kotlin.String,%20kotlin.text.RegexOption)/option&quot;&gt;option&lt;/a&gt;.</source>
          <target state="translated">지정된 단일 &lt;a href=&quot;to-regex#kotlin.text%24toRegex(kotlin.String,%20kotlin.text.RegexOption)/option&quot;&gt;옵션을 사용&lt;/a&gt; 하여 문자열을 &lt;a href=&quot;-regex/index#kotlin.text.Regex&quot;&gt;정규식 Regex&lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="61234b6626dbcb963db925df08a4235e64ce2c87" translate="yes" xml:space="preserve">
          <source>Converts the string into a regular expression &lt;a href=&quot;../../kotlin.text/-regex/index#kotlin.text.Regex&quot;&gt;Regex&lt;/a&gt; with the default options.</source>
          <target state="translated">기본 옵션을 사용 하여 문자열을 &lt;a href=&quot;../../kotlin.text/-regex/index#kotlin.text.Regex&quot;&gt;정규식 Regex&lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="79313d3500183d8b4427b14e4ba2a233f9abbb87" translate="yes" xml:space="preserve">
          <source>Converts the string into a regular expression &lt;a href=&quot;../../kotlin.text/-regex/index#kotlin.text.Regex&quot;&gt;Regex&lt;/a&gt; with the specified set of &lt;a href=&quot;../../kotlin.text/to-regex#kotlin.text%24toRegex%28kotlin.String%2C+kotlin.collections.Set%28%28kotlin.text.RegexOption%29%29%29%2Foptions&quot;&gt;options&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;../../kotlin.text/to-regex#kotlin.text%24toRegex%28kotlin.String%2C+kotlin.collections.Set%28%28kotlin.text.RegexOption%29%29%29%2Foptions&quot;&gt;옵션&lt;/a&gt; 세트를 사용 하여 문자열을 &lt;a href=&quot;../../kotlin.text/-regex/index#kotlin.text.Regex&quot;&gt;정규식 Regex&lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="8e64e34214dddb6be8ff60bebd363538fe129137" translate="yes" xml:space="preserve">
          <source>Converts the string into a regular expression &lt;a href=&quot;../../kotlin.text/-regex/index#kotlin.text.Regex&quot;&gt;Regex&lt;/a&gt; with the specified set of &lt;a href=&quot;../../kotlin.text/to-regex#kotlin.text%24toRegex(kotlin.String,%20kotlin.collections.Set((kotlin.text.RegexOption)))/options&quot;&gt;options&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;../../kotlin.text/to-regex#kotlin.text%24toRegex(kotlin.String,%20kotlin.collections.Set((kotlin.text.RegexOption)))/options&quot;&gt;옵션&lt;/a&gt; 세트를 사용 하여 문자열을 &lt;a href=&quot;../../kotlin.text/-regex/index#kotlin.text.Regex&quot;&gt;정규식 Regex&lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="3bba1b4c11099c3322946f69e501472aed731ae3" translate="yes" xml:space="preserve">
          <source>Converts the string into a regular expression &lt;a href=&quot;../../kotlin.text/-regex/index#kotlin.text.Regex&quot;&gt;Regex&lt;/a&gt; with the specified single &lt;a href=&quot;../../kotlin.text/to-regex#kotlin.text%24toRegex%28kotlin.String%2C+kotlin.text.RegexOption%29%2Foption&quot;&gt;option&lt;/a&gt;.</source>
          <target state="translated">지정된 단일 &lt;a href=&quot;../../kotlin.text/to-regex#kotlin.text%24toRegex%28kotlin.String%2C+kotlin.text.RegexOption%29%2Foption&quot;&gt;옵션을 사용&lt;/a&gt; 하여 문자열을 &lt;a href=&quot;../../kotlin.text/-regex/index#kotlin.text.Regex&quot;&gt;정규식 Regex&lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="619e26d55f2f9ccd5ac6c73d0c702b6e3a15d69d" translate="yes" xml:space="preserve">
          <source>Converts the string into a regular expression &lt;a href=&quot;../../kotlin.text/-regex/index#kotlin.text.Regex&quot;&gt;Regex&lt;/a&gt; with the specified single &lt;a href=&quot;../../kotlin.text/to-regex#kotlin.text%24toRegex(kotlin.String,%20kotlin.text.RegexOption)/option&quot;&gt;option&lt;/a&gt;.</source>
          <target state="translated">지정된 단일 &lt;a href=&quot;../../kotlin.text/to-regex#kotlin.text%24toRegex(kotlin.String,%20kotlin.text.RegexOption)/option&quot;&gt;옵션을 사용&lt;/a&gt; 하여 문자열을 &lt;a href=&quot;../../kotlin.text/-regex/index#kotlin.text.Regex&quot;&gt;정규식 Regex&lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="7d51fd163229c5eb13b4cc566fe3afc7e84661ff" translate="yes" xml:space="preserve">
          <source>Converts the string into a regular expression &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;Pattern&lt;/a&gt; optionally with the specified &lt;a href=&quot;../../kotlin.text/to-pattern#kotlin.text%24toPattern%28kotlin.String%2C+kotlin.Int%29%2Fflags&quot;&gt;flags&lt;/a&gt; from &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;Pattern&lt;/a&gt; or'd together so that strings can be split or matched on.</source>
          <target state="translated">변환은 정규 표현식으로 문자열 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;패턴&lt;/a&gt; 선택적으로 지정된와 &lt;a href=&quot;../../kotlin.text/to-pattern#kotlin.text%24toPattern%28kotlin.String%2C+kotlin.Int%29%2Fflags&quot;&gt;플래그&lt;/a&gt; 의 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;패턴은&lt;/a&gt; 함께 그래서 문자열을 분할 또는에 일치 될 수 있음을 OR 연산.</target>
        </trans-unit>
        <trans-unit id="46405cfc78df4f2ae823eebfd0c2ce080986e457" translate="yes" xml:space="preserve">
          <source>Converts the string into a regular expression &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;Pattern&lt;/a&gt; optionally with the specified &lt;a href=&quot;to-pattern#kotlin.text%24toPattern%28kotlin.String%2C+kotlin.Int%29%2Fflags&quot;&gt;flags&lt;/a&gt; from &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;Pattern&lt;/a&gt; or'd together so that strings can be split or matched on.</source>
          <target state="translated">변환은 정규 표현식으로 문자열 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;패턴&lt;/a&gt; 선택적으로 지정된와 &lt;a href=&quot;to-pattern#kotlin.text%24toPattern%28kotlin.String%2C+kotlin.Int%29%2Fflags&quot;&gt;플래그&lt;/a&gt; 의 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;패턴은&lt;/a&gt; 함께 그래서 문자열을 분할 또는에 일치 될 수 있음을 OR 연산.</target>
        </trans-unit>
        <trans-unit id="fcc1fa5c0357f45fb69f2a22a5c4acc596c06111" translate="yes" xml:space="preserve">
          <source>Converts the string into a regular expression &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;Pattern&lt;/a&gt; optionally with the specified &lt;a href=&quot;../../kotlin.text/to-pattern#kotlin.text%24toPattern(kotlin.String,%20kotlin.Int)/flags&quot;&gt;flags&lt;/a&gt; from &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;Pattern&lt;/a&gt; or'd together so that strings can be split or matched on.</source>
          <target state="translated">문자열을 분할하거나 일치시킬 수 있도록 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;Pattern 또는 '&lt;/a&gt; d 에서 지정된 &lt;a href=&quot;../../kotlin.text/to-pattern#kotlin.text%24toPattern(kotlin.String,%20kotlin.Int)/flags&quot;&gt;플래그&lt;/a&gt; 를 선택적으로 사용 하여 문자열을 정규식 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;Pattern&lt;/a&gt; 으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="c7a3c17d795a3ca799ae6e0eddf2574d06b7db59" translate="yes" xml:space="preserve">
          <source>Converts the string into a regular expression &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;Pattern&lt;/a&gt; optionally with the specified &lt;a href=&quot;to-pattern#kotlin.text%24toPattern(kotlin.String,%20kotlin.Int)/flags&quot;&gt;flags&lt;/a&gt; from &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;Pattern&lt;/a&gt; or'd together so that strings can be split or matched on.</source>
          <target state="translated">문자열을 분할하거나 일치시킬 수 있도록 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;Pattern 또는 '&lt;/a&gt; d 에서 지정된 &lt;a href=&quot;to-pattern#kotlin.text%24toPattern(kotlin.String,%20kotlin.Int)/flags&quot;&gt;플래그&lt;/a&gt; 를 선택적으로 사용 하여 문자열을 정규식 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;Pattern&lt;/a&gt; 으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="d6329f0e2c6c8240d58991f5b97b3bc4ed462bd2" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;-byte/index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt; value to &lt;a href=&quot;-u-byte/index&quot;&gt;UByte&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;-byte/index#kotlin.Byte&quot;&gt;바이트&lt;/a&gt; 값을 &lt;a href=&quot;-u-byte/index&quot;&gt;UByte로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="f8d00ef3b9cbd4b78e96bfbd49630f151349d31d" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;-byte/index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt; value to &lt;a href=&quot;-u-int/index&quot;&gt;UInt&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;-byte/index#kotlin.Byte&quot;&gt;바이트&lt;/a&gt; 값을 &lt;a href=&quot;-u-int/index&quot;&gt;UInt로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="c56ccc96dfaf1cd66f56c0e7a4d0941e5c23a3b3" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;-byte/index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt; value to &lt;a href=&quot;-u-long/index&quot;&gt;ULong&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;-byte/index#kotlin.Byte&quot;&gt;바이트&lt;/a&gt; 값을 &lt;a href=&quot;-u-long/index&quot;&gt;ULong로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="af9f9c69478ba5851cef107059d4a6e5d7f140ec" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;-byte/index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt; value to &lt;a href=&quot;-u-short/index&quot;&gt;UShort&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;-byte/index#kotlin.Byte&quot;&gt;바이트&lt;/a&gt; 값을 &lt;a href=&quot;-u-short/index&quot;&gt;UShort로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="bb872fbba16a688dc32e7a6e0187f643780818e7" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; value to &lt;a href=&quot;-u-int/index&quot;&gt;UInt&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 값을 &lt;a href=&quot;-u-int/index&quot;&gt;UInt로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="e6b1f46210e3071ccc7a64db1c892cb62534a495" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; value to &lt;a href=&quot;-u-long/index&quot;&gt;ULong&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 값을 &lt;a href=&quot;-u-long/index&quot;&gt;ULong로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="5f1ce0bd9b83366cadf6be620fa899b9e2b9feab" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; value to &lt;a href=&quot;-u-int/index&quot;&gt;UInt&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 값을 &lt;a href=&quot;-u-int/index&quot;&gt;UInt로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="da9b06be278ec51a432799dbd96169fa5a1ee844" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; value to &lt;a href=&quot;-u-long/index&quot;&gt;ULong&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 값을 &lt;a href=&quot;-u-long/index&quot;&gt;ULong로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="0dadc58f69d6e674f0ea0ac99c6e9f9481d35237" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; value to &lt;a href=&quot;-u-byte/index&quot;&gt;UByte&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 값을 &lt;a href=&quot;-u-byte/index&quot;&gt;UByte로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="dd1d3ad7622a239dceb7b49fce05bddfece23abf" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; value to &lt;a href=&quot;-u-int/index&quot;&gt;UInt&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 값을 &lt;a href=&quot;-u-int/index&quot;&gt;UInt로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="a209b8f55bcf237b999580220b295d6e4e1c1c4c" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; value to &lt;a href=&quot;-u-long/index&quot;&gt;ULong&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 값을 &lt;a href=&quot;-u-long/index&quot;&gt;ULong로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="01834ed9c30d850d49db67396d6198c97fd80063" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; value to &lt;a href=&quot;-u-short/index&quot;&gt;UShort&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 값을 &lt;a href=&quot;-u-short/index&quot;&gt;UShort로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="75909aeb6f843f3cc1b4fe7a66daff152437fcc6" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; value to &lt;a href=&quot;-u-byte/index&quot;&gt;UByte&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 값을 &lt;a href=&quot;-u-byte/index&quot;&gt;UByte로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="451f9c9ec0b58a5a71f86e79bc11a58a50878817" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; value to &lt;a href=&quot;-u-int/index&quot;&gt;UInt&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 값을 &lt;a href=&quot;-u-int/index&quot;&gt;UInt로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="0e48a3415cbbebb0ee35773588e4d3ee7b630a6f" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; value to &lt;a href=&quot;-u-long/index&quot;&gt;ULong&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 값을 &lt;a href=&quot;-u-long/index&quot;&gt;ULong로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="6883dda88e41ed049601c15bfb48f8c3ef2c4140" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; value to &lt;a href=&quot;-u-short/index&quot;&gt;UShort&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 값을 &lt;a href=&quot;-u-short/index&quot;&gt;UShort로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="099cecb9d31a0c65fabe0d0e707d70213c9423d7" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; to a &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Properties.html&quot;&gt;Properties&lt;/a&gt; object.</source>
          <target state="translated">이 &lt;a href=&quot;-map/index#kotlin.collections.Map&quot;&gt;맵&lt;/a&gt; 을 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Properties.html&quot;&gt;Properties&lt;/a&gt; 객체 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="d2174408e62fd985a97391870d06d468348d3edb" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; to a &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt;. The resulting &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt; determines the equality and order of keys according to the sorting order provided by the given &lt;a href=&quot;to-sorted-map#kotlin.collections%24toSortedMap%28kotlin.collections.Map%28%28kotlin.collections.toSortedMap.K%2C+kotlin.collections.toSortedMap.V%29%29%2C+java.util.Comparator%28%28kotlin.collections.toSortedMap.K%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;-map/index#kotlin.collections.Map&quot;&gt;맵&lt;/a&gt; 을 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap로&lt;/a&gt; 변환합니다 . 결과 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt; 은 지정된 &lt;a href=&quot;to-sorted-map#kotlin.collections%24toSortedMap%28kotlin.collections.Map%28%28kotlin.collections.toSortedMap.K%2C+kotlin.collections.toSortedMap.V%29%29%2C+java.util.Comparator%28%28kotlin.collections.toSortedMap.K%29%29%29%2Fcomparator&quot;&gt;비교기에서&lt;/a&gt; 제공 한 정렬 순서에 따라 키의 동등성과 순서를 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="a826fa594e9a5783e10710582a273d6e9e278e1e" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; to a &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt;. The resulting &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt; determines the equality and order of keys according to their natural sorting order.</source>
          <target state="translated">이 &lt;a href=&quot;-map/index#kotlin.collections.Map&quot;&gt;맵&lt;/a&gt; 을 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap로&lt;/a&gt; 변환합니다 . 결과 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt; 은 자연 정렬 순서에 따라 키의 동등성과 순서를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="6b88d053148a8fe69c0d4d7428f08cee1f12c4cd" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; to a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Properties.html&quot;&gt;Properties&lt;/a&gt; object.</source>
          <target state="translated">이 &lt;a href=&quot;-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; 을 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Properties.html&quot;&gt;Properties&lt;/a&gt; 개체 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="ee0164e3fce0465fe4e4dd1e6801e5e1f57dd7ae" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; to a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt;. The resulting &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt; determines the equality and order of keys according to the sorting order provided by the given &lt;a href=&quot;to-sorted-map#kotlin.collections%24toSortedMap(kotlin.collections.Map((kotlin.collections.toSortedMap.K,%20kotlin.collections.toSortedMap.V)),%20java.util.Comparator((kotlin.collections.toSortedMap.K)))/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;-map/index#kotlin.collections.Map&quot;&gt;맵&lt;/a&gt; 을 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap로&lt;/a&gt; 변환합니다 . 결과 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt; 은 주어진 &lt;a href=&quot;to-sorted-map#kotlin.collections%24toSortedMap(kotlin.collections.Map((kotlin.collections.toSortedMap.K,%20kotlin.collections.toSortedMap.V)),%20java.util.Comparator((kotlin.collections.toSortedMap.K)))/comparator&quot;&gt;비교기가&lt;/a&gt; 제공하는 정렬 순서에 따라 키의 동일성과 순서를 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="f671699c7b8f02c18bb8b6179f6c21d865b32d2e" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; to a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt;. The resulting &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt; determines the equality and order of keys according to their natural sorting order.</source>
          <target state="translated">이 &lt;a href=&quot;-map/index#kotlin.collections.Map&quot;&gt;맵&lt;/a&gt; 을 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap로&lt;/a&gt; 변환합니다 . 결과 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt; 은 자연스러운 정렬 순서에 따라 키의 동일성과 순서를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="e39a05de91c48d5cff209991cb68d7de05605066" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; value to &lt;a href=&quot;-u-byte/index&quot;&gt;UByte&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; 값을 &lt;a href=&quot;-u-byte/index&quot;&gt;UByte로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="6cb7be2b09e8e18874f843b5f5fbd9d9c3b66999" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; value to &lt;a href=&quot;-u-int/index&quot;&gt;UInt&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; 값을 &lt;a href=&quot;-u-int/index&quot;&gt;UInt로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="db299127d69560ec28aaaa5739354fa1dde01750" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; value to &lt;a href=&quot;-u-long/index&quot;&gt;ULong&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; 값을 &lt;a href=&quot;-u-long/index&quot;&gt;ULong로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="844c677ca6503b621e780aa9c6c692649cb92f73" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; value to &lt;a href=&quot;-u-short/index&quot;&gt;UShort&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; 값을 &lt;a href=&quot;-u-short/index&quot;&gt;UShort로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="89e3692408ae7c4432100e64ffd2bcba107075e1" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;../-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; to a &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Properties.html&quot;&gt;Properties&lt;/a&gt; object.</source>
          <target state="translated">이 &lt;a href=&quot;../-map/index#kotlin.collections.Map&quot;&gt;맵&lt;/a&gt; 을 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Properties.html&quot;&gt;Properties&lt;/a&gt; 객체 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="ef0388a9f262553af9567c8d550ecddbb996b7b7" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;../-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; to a &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt;. The resulting &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt; determines the equality and order of keys according to the sorting order provided by the given &lt;a href=&quot;../to-sorted-map#kotlin.collections%24toSortedMap%28kotlin.collections.Map%28%28kotlin.collections.toSortedMap.K%2C+kotlin.collections.toSortedMap.V%29%29%2C+java.util.Comparator%28%28kotlin.collections.toSortedMap.K%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;../-map/index#kotlin.collections.Map&quot;&gt;맵&lt;/a&gt; 을 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap로&lt;/a&gt; 변환합니다 . 결과 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt; 은 지정된 &lt;a href=&quot;../to-sorted-map#kotlin.collections%24toSortedMap%28kotlin.collections.Map%28%28kotlin.collections.toSortedMap.K%2C+kotlin.collections.toSortedMap.V%29%29%2C+java.util.Comparator%28%28kotlin.collections.toSortedMap.K%29%29%29%2Fcomparator&quot;&gt;비교기에서&lt;/a&gt; 제공 한 정렬 순서에 따라 키의 동등성과 순서를 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="dd61047d97570107e7545de4bbb3ab59f43fc01e" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;../-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; to a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Properties.html&quot;&gt;Properties&lt;/a&gt; object.</source>
          <target state="translated">이 &lt;a href=&quot;../-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; 을 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Properties.html&quot;&gt;Properties&lt;/a&gt; 개체 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="a0ed8fd00e3d914d72af811ba2be11e2d9cbf5f0" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;../-map/index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; to a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt;. The resulting &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt; determines the equality and order of keys according to the sorting order provided by the given &lt;a href=&quot;../to-sorted-map#kotlin.collections%24toSortedMap(kotlin.collections.Map((kotlin.collections.toSortedMap.K,%20kotlin.collections.toSortedMap.V)),%20java.util.Comparator((kotlin.collections.toSortedMap.K)))/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;../-map/index#kotlin.collections.Map&quot;&gt;맵&lt;/a&gt; 을 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap로&lt;/a&gt; 변환합니다 . 결과 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt; 은 주어진 &lt;a href=&quot;../to-sorted-map#kotlin.collections%24toSortedMap(kotlin.collections.Map((kotlin.collections.toSortedMap.K,%20kotlin.collections.toSortedMap.V)),%20java.util.Comparator((kotlin.collections.toSortedMap.K)))/comparator&quot;&gt;비교기가&lt;/a&gt; 제공하는 정렬 순서에 따라 키의 동일성과 순서를 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="03551068c7f75d15f3d0f2996205d65708980598" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;java.util.regex.Pattern&lt;/a&gt; to an instance of &lt;a href=&quot;../-regex/index#kotlin.text.Regex&quot;&gt;Regex&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;java.util.regex.Pattern&lt;/a&gt; 을 &lt;a href=&quot;../-regex/index#kotlin.text.Regex&quot;&gt;Regex&lt;/a&gt; 인스턴스로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="21b74f60b85d87df063f6cf53380b49a7ec78e47" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;java.util.regex.Pattern&lt;/a&gt; to an instance of &lt;a href=&quot;../-regex/index#kotlin.text.Regex&quot;&gt;Regex&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;java.util.regex.Pattern&lt;/a&gt; 을 &lt;a href=&quot;../-regex/index#kotlin.text.Regex&quot;&gt;Regex&lt;/a&gt; 인스턴스로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="10020ef5191d7ef0fcfeb95c8c08081b010806a9" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UByte&lt;/a&gt; value to &lt;a href=&quot;../-byte/index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UByte&lt;/a&gt; 값을 &lt;a href=&quot;../-byte/index#kotlin.Byte&quot;&gt;Byte로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="eb165a9cfd8506d3a3f7ab72775108490b0c9237" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UByte&lt;/a&gt; value to &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UByte&lt;/a&gt; 값을 &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="f9c8a1f786325ffb1b5542c55ce1f2aacc540dff" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UByte&lt;/a&gt; value to &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UByte&lt;/a&gt; 값을 &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="762bbed5e67dab177d42ce7b96d5724f4da3355c" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UByte&lt;/a&gt; value to &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UByte&lt;/a&gt; 값을 &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="3cdd93b960c09944228f31dcd13ef127ba6b45dd" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UByte&lt;/a&gt; value to &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UByte&lt;/a&gt; 값을 &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="0718a60206cf389ca6713862dfa6d1cb7800eed4" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UByte&lt;/a&gt; value to &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UByte&lt;/a&gt; 값을 &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="5bacb423f13df3b2b507b71971cdbbde5d5a51a9" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UByte&lt;/a&gt; value to &lt;a href=&quot;../-u-int/index&quot;&gt;UInt&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UByte&lt;/a&gt; 값을 &lt;a href=&quot;../-u-int/index&quot;&gt;UInt로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="7ff0e9de506f161f7704139c4b970efc4cc1af4f" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UByte&lt;/a&gt; value to &lt;a href=&quot;../-u-long/index&quot;&gt;ULong&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UByte&lt;/a&gt; 값을 &lt;a href=&quot;../-u-long/index&quot;&gt;ULong로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="4c74bde5e37593812623056c80c58cab3b0ef7f0" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UByte&lt;/a&gt; value to &lt;a href=&quot;../-u-short/index&quot;&gt;UShort&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UByte&lt;/a&gt; 값을 &lt;a href=&quot;../-u-short/index&quot;&gt;UShort로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="df8f7ee20515515dd7b3753157cf7df2abd21d6c" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UInt&lt;/a&gt; value to &lt;a href=&quot;../-byte/index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UInt&lt;/a&gt; 값을 &lt;a href=&quot;../-byte/index#kotlin.Byte&quot;&gt;Byte로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="0ea665c51464c8bc219cc9a27ce2ce840910492a" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UInt&lt;/a&gt; value to &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UInt&lt;/a&gt; 값을 &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="9708ce2797a1bef078aaa07855fae1e7cbe3d8a8" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UInt&lt;/a&gt; value to &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UInt&lt;/a&gt; 값을 &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="2ba1483e2bbb838aaec2c419f0e2dc327b5b50c7" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UInt&lt;/a&gt; value to &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UInt&lt;/a&gt; 값을 &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="83c72ed714c117aebe57af8ee73b4d166a52ebd2" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UInt&lt;/a&gt; value to &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UInt&lt;/a&gt; 값을 &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="40e344ab98e133e3f3e02c281cbe66aa91cf5f26" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UInt&lt;/a&gt; value to &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UInt&lt;/a&gt; 값을 &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="1cd512d6ec26d8ee5c800d7d324b4131eb4e9288" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UInt&lt;/a&gt; value to &lt;a href=&quot;../-u-byte/index&quot;&gt;UByte&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UInt&lt;/a&gt; 값을 &lt;a href=&quot;../-u-byte/index&quot;&gt;UByte로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="61dd866867707a3ac51f81cef1cad4af63dc54a9" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UInt&lt;/a&gt; value to &lt;a href=&quot;../-u-long/index&quot;&gt;ULong&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UInt&lt;/a&gt; 값을 &lt;a href=&quot;../-u-long/index&quot;&gt;ULong로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="936b7e7d62d5ec2aa742aa48ac8bcea695fef9d8" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UInt&lt;/a&gt; value to &lt;a href=&quot;../-u-short/index&quot;&gt;UShort&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UInt&lt;/a&gt; 값을 &lt;a href=&quot;../-u-short/index&quot;&gt;UShort로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="19af68f7d8ff0dfca249844e2bf462d1a1f1beea" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;ULong&lt;/a&gt; value to &lt;a href=&quot;../-byte/index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;ULong&lt;/a&gt; 값을 &lt;a href=&quot;../-byte/index#kotlin.Byte&quot;&gt;Byte로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="438cf22c1793e6847bf50ce599030ddea74754a7" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;ULong&lt;/a&gt; value to &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;ULong&lt;/a&gt; 값을 &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="b2f61559eb9eca287c0ffeb14a371ccca3f3f084" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;ULong&lt;/a&gt; value to &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;ULong&lt;/a&gt; 값을 &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="5f1a534f73da599b03073fbf37cc69d76076bc95" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;ULong&lt;/a&gt; value to &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;ULong&lt;/a&gt; 값을 &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="b3f69c8bc360a7a497d2625e5fe98cac501411df" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;ULong&lt;/a&gt; value to &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;ULong&lt;/a&gt; 값을 &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="5154d06d6f21026fda384cd4172a950ac3d3faa0" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;ULong&lt;/a&gt; value to &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;ULong&lt;/a&gt; 값을 &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="68905f2a2e6af25692c57e6dbd0cec8a4582b839" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;ULong&lt;/a&gt; value to &lt;a href=&quot;../-u-byte/index&quot;&gt;UByte&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;ULong&lt;/a&gt; 값을 &lt;a href=&quot;../-u-byte/index&quot;&gt;UByte로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="406fd08db635fc0550552b061600a12ce2b22a6f" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;ULong&lt;/a&gt; value to &lt;a href=&quot;../-u-int/index&quot;&gt;UInt&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;ULong&lt;/a&gt; 값을 &lt;a href=&quot;../-u-int/index&quot;&gt;UInt로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="87428f0b26c5f5a096b4f164ca70530a3a366fc2" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;ULong&lt;/a&gt; value to &lt;a href=&quot;../-u-short/index&quot;&gt;UShort&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;ULong&lt;/a&gt; 값을 &lt;a href=&quot;../-u-short/index&quot;&gt;UShort로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="a17af29d8b1fdb0b9077a513c9c66353e8e64feb" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UShort&lt;/a&gt; value to &lt;a href=&quot;../-byte/index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UShort&lt;/a&gt; 값을 &lt;a href=&quot;../-byte/index#kotlin.Byte&quot;&gt;Byte로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="a53be1dbb1b2bb2eeac4d3b1c388b485bb88801f" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UShort&lt;/a&gt; value to &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UShort&lt;/a&gt; 값을 &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="5b4e20b177e373196d6121d54234cc7527f3edfe" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UShort&lt;/a&gt; value to &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UShort&lt;/a&gt; 값을 &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="612e1b3f7a6887b9e6c479ab086d63deeb783720" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UShort&lt;/a&gt; value to &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UShort&lt;/a&gt; 값을 &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="41415b25344e09b26ba57d917e78d1fcf0e0d68b" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UShort&lt;/a&gt; value to &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UShort&lt;/a&gt; 값을 &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long으로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="4e71ab83f6ce03f7be4aa599c8887906c9a9cebb" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UShort&lt;/a&gt; value to &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UShort&lt;/a&gt; 값을 &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="ff547cc51230068bd9f96f5da2b9a42517349085" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UShort&lt;/a&gt; value to &lt;a href=&quot;../-u-byte/index&quot;&gt;UByte&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UShort&lt;/a&gt; 값을 &lt;a href=&quot;../-u-byte/index&quot;&gt;UByte로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="f3508ba0395f05e13c962686c28e905624a9f1f7" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UShort&lt;/a&gt; value to &lt;a href=&quot;../-u-int/index&quot;&gt;UInt&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UShort&lt;/a&gt; 값을 &lt;a href=&quot;../-u-int/index&quot;&gt;UInt로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="24442243d66225a2559b7ed2dcb3087dd4e0e9de" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index&quot;&gt;UShort&lt;/a&gt; value to &lt;a href=&quot;../-u-long/index&quot;&gt;ULong&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UShort&lt;/a&gt; 값을 &lt;a href=&quot;../-u-long/index&quot;&gt;ULong으로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="ed1bea47db341fe5b6433b427c2aecace4b3bdaf" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt; value to &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Byte&quot;&gt;바이트&lt;/a&gt; 값을 &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="82331375224a6840fbb1fdb06804464cbd2fd32d" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt; value to &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Byte&quot;&gt;바이트&lt;/a&gt; 값을 &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="16c5c6764c88f8faa5ba88b30d06998f3a73fa47" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt; value to &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Byte&quot;&gt;바이트&lt;/a&gt; 값을 &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="bc4e54c68b025a318d84ad7c6a7f5773ecce8cd2" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt; value to &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Byte&quot;&gt;바이트&lt;/a&gt; 값을 &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="fc33a6d63c61ec02ed81f28860c6364dce1084b6" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt; value to &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Byte&quot;&gt;바이트&lt;/a&gt; 값을 &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="ea99307a2ff57d6f3edb36eaad84bf44e90aab35" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt; value to &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Byte&quot;&gt;바이트&lt;/a&gt; 값을 &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="db13d4ed88282ca1127df84cb48537bd6e91d888" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt; value to &lt;a href=&quot;../-u-byte/index&quot;&gt;UByte&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Byte&quot;&gt;바이트&lt;/a&gt; 값을 &lt;a href=&quot;../-u-byte/index&quot;&gt;UByte로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="34b65cd9f90cf611deebe62eba41f13ac773b825" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt; value to &lt;a href=&quot;../-u-int/index&quot;&gt;UInt&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Byte&quot;&gt;바이트&lt;/a&gt; 값을 &lt;a href=&quot;../-u-int/index&quot;&gt;UInt로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="c644a92c4bf1476dd5077218c28b9e63b4a73a1b" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt; value to &lt;a href=&quot;../-u-long/index&quot;&gt;ULong&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Byte&quot;&gt;바이트&lt;/a&gt; 값을 &lt;a href=&quot;../-u-long/index&quot;&gt;ULong로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="d3f40be083f4c9cca9e51bbff09baa7a2be8d9f4" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt; value to &lt;a href=&quot;../-u-short/index&quot;&gt;UShort&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Byte&quot;&gt;바이트&lt;/a&gt; 값을 &lt;a href=&quot;../-u-short/index&quot;&gt;UShort로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="16594e44cca75afa6b8e8b3dc8d564e9341e43d9" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Double&quot;&gt;Double&lt;/a&gt; value to &lt;a href=&quot;../-byte/index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 값을 &lt;a href=&quot;../-byte/index#kotlin.Byte&quot;&gt;Byte로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="bf8c6d3187b2e4580e689240fc3e6ce954da4f94" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Double&quot;&gt;Double&lt;/a&gt; value to &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 값을 &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="4a2e03bac82e7bc22505afb9480ce5e4d6c8d53a" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Double&quot;&gt;Double&lt;/a&gt; value to &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 값을 &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="0e0a0018946860dd637edcb709c7fa2baf873957" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Double&quot;&gt;Double&lt;/a&gt; value to &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 값을 &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="7186474b9b1539185177e7e38164d0312a70053b" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Double&quot;&gt;Double&lt;/a&gt; value to &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 값을 &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long으로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="ad1505e4a79b2ded006fddb7b0258f7ffcfeaad5" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Double&quot;&gt;Double&lt;/a&gt; value to &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 값을 &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="142baf8f06d3d147b581d6345d585d238fa17f84" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Double&quot;&gt;Double&lt;/a&gt; value to &lt;a href=&quot;../-u-int/index&quot;&gt;UInt&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 값을 &lt;a href=&quot;../-u-int/index&quot;&gt;UInt로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="65bb3223c7edc921c12950ed3fafc916f205c0d1" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Double&quot;&gt;Double&lt;/a&gt; value to &lt;a href=&quot;../-u-long/index&quot;&gt;ULong&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 값을 &lt;a href=&quot;../-u-long/index&quot;&gt;ULong로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="c4268a22f3f669a93d88d30750926e62546fc937" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Float&quot;&gt;Float&lt;/a&gt; value to &lt;a href=&quot;../-byte/index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 값을 &lt;a href=&quot;../-byte/index#kotlin.Byte&quot;&gt;Byte로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="4649848b74d446b646624c47711a6d140b9c4a7b" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Float&quot;&gt;Float&lt;/a&gt; value to &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 값을 &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="b3bec2b1ad5d4656dc3aedbc0d3fb03c23b26a30" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Float&quot;&gt;Float&lt;/a&gt; value to &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 값을 &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="5702d20ad6583af29447dc3d014cb375d15cbfb5" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Float&quot;&gt;Float&lt;/a&gt; value to &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 값을 &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="8c564dbeb637d0711228cdd74c5f900f84d905ef" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Float&quot;&gt;Float&lt;/a&gt; value to &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 값을 &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="523b1cdfe88d996990416501c3c13841d19592f7" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Float&quot;&gt;Float&lt;/a&gt; value to &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 값을 &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="76956d9f19b44729c650c6426ad109cb52da73f8" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Float&quot;&gt;Float&lt;/a&gt; value to &lt;a href=&quot;../-u-int/index&quot;&gt;UInt&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 값을 &lt;a href=&quot;../-u-int/index&quot;&gt;UInt로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="2ba9849497d5e37266ca852226c138a13da8b126" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Float&quot;&gt;Float&lt;/a&gt; value to &lt;a href=&quot;../-u-long/index&quot;&gt;ULong&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 값을 &lt;a href=&quot;../-u-long/index&quot;&gt;ULong로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="28183cacd30f64d1e49e67df3165c5991904a577" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Int&quot;&gt;Int&lt;/a&gt; value to &lt;a href=&quot;../-byte/index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 값을 &lt;a href=&quot;../-byte/index#kotlin.Byte&quot;&gt;Byte로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="d40cc94ff77f0d17647a2e9c62dce59d66ff8485" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Int&quot;&gt;Int&lt;/a&gt; value to &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 값을 &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="ef3ab9ee003faee129688b86055fac47f2b6b630" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Int&quot;&gt;Int&lt;/a&gt; value to &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 값을 &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="f11201156f37e1aedcda62bb2758df05d4dcbbb4" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Int&quot;&gt;Int&lt;/a&gt; value to &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 값을 &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="9aa52439345379683cdd0f5b3611fb65e4ec7b57" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Int&quot;&gt;Int&lt;/a&gt; value to &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 값을 &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long으로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="a2a6caa3545deaf5c82702a9cf8d6c02541114ba" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Int&quot;&gt;Int&lt;/a&gt; value to &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 값을 &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="fc7717d70c24bb9d4536a9061cc3261c41e1603d" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Int&quot;&gt;Int&lt;/a&gt; value to &lt;a href=&quot;../-u-byte/index&quot;&gt;UByte&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 값을 &lt;a href=&quot;../-u-byte/index&quot;&gt;UByte로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="508e6572e551ff78db571d082da657096ebfb373" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Int&quot;&gt;Int&lt;/a&gt; value to &lt;a href=&quot;../-u-int/index&quot;&gt;UInt&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 값을 &lt;a href=&quot;../-u-int/index&quot;&gt;UInt로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="dd8b76f415d845e59b75dcabc384dbd5c53ad027" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Int&quot;&gt;Int&lt;/a&gt; value to &lt;a href=&quot;../-u-long/index&quot;&gt;ULong&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 값을 &lt;a href=&quot;../-u-long/index&quot;&gt;ULong로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="d88d270b9cc20785e1537fc381c7ef7123ca7203" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Int&quot;&gt;Int&lt;/a&gt; value to &lt;a href=&quot;../-u-short/index&quot;&gt;UShort&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 값을 &lt;a href=&quot;../-u-short/index&quot;&gt;UShort로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="e9172effb16f5f7d1a4e095c35e86d1ef9db95d4" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Long&quot;&gt;Long&lt;/a&gt; value to &lt;a href=&quot;../-byte/index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 값을 &lt;a href=&quot;../-byte/index#kotlin.Byte&quot;&gt;Byte로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="1142b91f46f59ef48fd4e81acebd0e4c13997b96" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Long&quot;&gt;Long&lt;/a&gt; value to &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 값을 &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="6b881450728da2460f240f9d56c6572d14137bec" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Long&quot;&gt;Long&lt;/a&gt; value to &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 값을 &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="aa43407042ded32394b44267a044506501f0591e" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Long&quot;&gt;Long&lt;/a&gt; value to &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 값을 &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="3e34dca28b4f07577341d2f4a47115f14cb10ae0" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Long&quot;&gt;Long&lt;/a&gt; value to &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 값을 &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="533d184b8974cda4dd6f5d0d01f5b28efc2d725c" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Long&quot;&gt;Long&lt;/a&gt; value to &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 값을 &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="0849b69ad6332dcf4f326e1fd7759e072edf3617" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Long&quot;&gt;Long&lt;/a&gt; value to &lt;a href=&quot;../-u-byte/index&quot;&gt;UByte&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 값을 &lt;a href=&quot;../-u-byte/index&quot;&gt;UByte로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="86a4c2a33162cb6ff147082a89534c2f723ebf2e" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Long&quot;&gt;Long&lt;/a&gt; value to &lt;a href=&quot;../-u-int/index&quot;&gt;UInt&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 값을 &lt;a href=&quot;../-u-int/index&quot;&gt;UInt로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="bf0245e5f9b0da2ba922330ad089cb7c17444df7" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Long&quot;&gt;Long&lt;/a&gt; value to &lt;a href=&quot;../-u-long/index&quot;&gt;ULong&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 값을 &lt;a href=&quot;../-u-long/index&quot;&gt;ULong로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="9e44516a61a6285ff04a04a1a368dada663f6753" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Long&quot;&gt;Long&lt;/a&gt; value to &lt;a href=&quot;../-u-short/index&quot;&gt;UShort&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 값을 &lt;a href=&quot;../-u-short/index&quot;&gt;UShort로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="ac154c0699642ee90d550e5a9039d048b98e331b" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Short&quot;&gt;Short&lt;/a&gt; value to &lt;a href=&quot;../-byte/index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Short&quot;&gt;Short&lt;/a&gt; 값을 &lt;a href=&quot;../-byte/index#kotlin.Byte&quot;&gt;Byte로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="cf555ff4ec7216a51f8593e3f40b0e9e9b28b1ce" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Short&quot;&gt;Short&lt;/a&gt; value to &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Short&quot;&gt;Short&lt;/a&gt; 값을 &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="2d112c21ebb0e108a89673e479636748cb97fe58" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Short&quot;&gt;Short&lt;/a&gt; value to &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Short&quot;&gt;Short&lt;/a&gt; 값을 &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="06dd15d1310d559042d275ea0da4902c8b9e1e28" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Short&quot;&gt;Short&lt;/a&gt; value to &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Short&quot;&gt;Short&lt;/a&gt; 값을 &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="87d2768645249ab53f8c35f539a0e777e6170ce9" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Short&quot;&gt;Short&lt;/a&gt; value to &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Short&quot;&gt;Short&lt;/a&gt; 값을 &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="9f41bbfd5c085773e6eae2e488a277e31821b415" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Short&quot;&gt;Short&lt;/a&gt; value to &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Short&quot;&gt;Short&lt;/a&gt; 값을 &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="b343a17849a83145bff7b7b2b8de5c69a335f7b9" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Short&quot;&gt;Short&lt;/a&gt; value to &lt;a href=&quot;../-u-byte/index&quot;&gt;UByte&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Short&quot;&gt;Short&lt;/a&gt; 값을 &lt;a href=&quot;../-u-byte/index&quot;&gt;UByte로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="b887e8f397f867d22eb8b23f36034477ad8b43dc" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Short&quot;&gt;Short&lt;/a&gt; value to &lt;a href=&quot;../-u-int/index&quot;&gt;UInt&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Short&quot;&gt;Short&lt;/a&gt; 값을 &lt;a href=&quot;../-u-int/index&quot;&gt;UInt로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="42599bffaeccb864afbcd9d25ab92e1ffe8117e8" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Short&quot;&gt;Short&lt;/a&gt; value to &lt;a href=&quot;../-u-long/index&quot;&gt;ULong&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Short&quot;&gt;Short&lt;/a&gt; 값을 &lt;a href=&quot;../-u-long/index&quot;&gt;ULong로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="ac8eef3dadc39385c25efba8a55692a217b58531" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.Short&quot;&gt;Short&lt;/a&gt; value to &lt;a href=&quot;../-u-short/index&quot;&gt;UShort&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Short&quot;&gt;Short&lt;/a&gt; 값을 &lt;a href=&quot;../-u-short/index&quot;&gt;UShort로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="8d370f8ae5f2789e6a0a824468a82270e5507c76" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; to a &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Properties.html&quot;&gt;Properties&lt;/a&gt; object.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.collections.Map&quot;&gt;맵&lt;/a&gt; 을 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Properties.html&quot;&gt;Properties&lt;/a&gt; 객체 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="63e3b69be798f82bf8dcc6e18e0f3c555366c089" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; to a &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt;. The resulting &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt; determines the equality and order of keys according to the sorting order provided by the given &lt;a href=&quot;../to-sorted-map#kotlin.collections%24toSortedMap%28kotlin.collections.Map%28%28kotlin.collections.toSortedMap.K%2C+kotlin.collections.toSortedMap.V%29%29%2C+java.util.Comparator%28%28kotlin.collections.toSortedMap.K%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.collections.Map&quot;&gt;맵&lt;/a&gt; 을 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap로&lt;/a&gt; 변환합니다 . 결과 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt; 은 지정된 &lt;a href=&quot;../to-sorted-map#kotlin.collections%24toSortedMap%28kotlin.collections.Map%28%28kotlin.collections.toSortedMap.K%2C+kotlin.collections.toSortedMap.V%29%29%2C+java.util.Comparator%28%28kotlin.collections.toSortedMap.K%29%29%29%2Fcomparator&quot;&gt;비교기에서&lt;/a&gt; 제공 한 정렬 순서에 따라 키의 동등성과 순서를 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="5d46ee22669bafcbcb98ef47bba443142735e2ee" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; to a &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt;. The resulting &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt; determines the equality and order of keys according to their natural sorting order.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.collections.Map&quot;&gt;맵&lt;/a&gt; 을 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap로&lt;/a&gt; 변환합니다 . 결과 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt; 은 자연 정렬 순서에 따라 키의 동등성과 순서를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="6c634c334108115daebb12b3c102e8ab602450d2" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; to a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Properties.html&quot;&gt;Properties&lt;/a&gt; object.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; 을 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Properties.html&quot;&gt;Properties&lt;/a&gt; 개체 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="5782004b3edc011469c86034e9f14c660f02f45f" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; to a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt;. The resulting &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt; determines the equality and order of keys according to the sorting order provided by the given &lt;a href=&quot;../to-sorted-map#kotlin.collections%24toSortedMap(kotlin.collections.Map((kotlin.collections.toSortedMap.K,%20kotlin.collections.toSortedMap.V)),%20java.util.Comparator((kotlin.collections.toSortedMap.K)))/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.collections.Map&quot;&gt;맵&lt;/a&gt; 을 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap로&lt;/a&gt; 변환합니다 . 결과 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt; 은 주어진 &lt;a href=&quot;../to-sorted-map#kotlin.collections%24toSortedMap(kotlin.collections.Map((kotlin.collections.toSortedMap.K,%20kotlin.collections.toSortedMap.V)),%20java.util.Comparator((kotlin.collections.toSortedMap.K)))/comparator&quot;&gt;비교기가&lt;/a&gt; 제공하는 정렬 순서에 따라 키의 동일성과 순서를 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="f1304f37f4396c5c5c6e67d2d955ba493f90b7a8" translate="yes" xml:space="preserve">
          <source>Converts this &lt;a href=&quot;index#kotlin.collections.Map&quot;&gt;Map&lt;/a&gt; to a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt;. The resulting &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt; determines the equality and order of keys according to their natural sorting order.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.collections.Map&quot;&gt;맵&lt;/a&gt; 을 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap로&lt;/a&gt; 변환합니다 . 결과 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;SortedMap&lt;/a&gt; 은 자연스러운 정렬 순서에 따라 키의 동일성과 순서를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="a8c3ed1084507414829b6a1293abc49e3c9a448a" translate="yes" xml:space="preserve">
          <source>Converts this character to lowercase.</source>
          <target state="translated">이 문자를 소문자로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="1178536b620fc49753f9860575cfbd30567523d1" translate="yes" xml:space="preserve">
          <source>Converts this character to titlecase.</source>
          <target state="translated">이 문자를 제목으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="40ca5fefb86dc6ee3fc64665c45c6f7f7ac70628" translate="yes" xml:space="preserve">
          <source>Converts this character to uppercase.</source>
          <target state="translated">이 문자를 대문자로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="cf32b4f24dc3c43588abaf8cc8dd61e3c77cc1b2" translate="yes" xml:space="preserve">
          <source>Converts this pair into a list.</source>
          <target state="translated">이 쌍을 목록으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="318aa7cc92a2fbc30d52f746174fdd39e47421bb" translate="yes" xml:space="preserve">
          <source>Converts this triple into a list.</source>
          <target state="translated">이 트리플을리스트로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="16d16a21284f3a2d05c4348c8847e26b31c8adb8" translate="yes" xml:space="preserve">
          <source>Converts to &lt;a href=&quot;-stable-ref/index&quot;&gt;StableRef&lt;/a&gt; this opaque pointer produced by &lt;a href=&quot;-stable-ref/as-c-pointer&quot;&gt;StableRef.asCPointer&lt;/a&gt;.</source>
          <target state="translated">로 변환 &lt;a href=&quot;-stable-ref/index&quot;&gt;StableRef&lt;/a&gt; 에 의해 생산이 불투명 포인터 &lt;a href=&quot;-stable-ref/as-c-pointer&quot;&gt;StableRef.asCPointer&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="538328fb9cc5e93f28b925d51f8fdb4760dca274" translate="yes" xml:space="preserve">
          <source>Converts to &lt;a href=&quot;../-stable-ref/index&quot;&gt;StableRef&lt;/a&gt; this opaque pointer produced by &lt;a href=&quot;../-stable-ref/as-c-pointer&quot;&gt;StableRef.asCPointer&lt;/a&gt;.</source>
          <target state="translated">로 변환 &lt;a href=&quot;../-stable-ref/index&quot;&gt;StableRef&lt;/a&gt; 에 의해 생산이 불투명 포인터 &lt;a href=&quot;../-stable-ref/as-c-pointer&quot;&gt;StableRef.asCPointer&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2d1da2d27fd5a745dfabe4ed286808e066947367" translate="yes" xml:space="preserve">
          <source>Copies characters from this string builder into the &lt;a href=&quot;to-char-array#kotlin.text%24toCharArray(java.lang.StringBuilder,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/destination&quot;&gt;destination&lt;/a&gt; character array.</source>
          <target state="translated">이 문자열 작성기의 문자를 &lt;a href=&quot;to-char-array#kotlin.text%24toCharArray(java.lang.StringBuilder,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/destination&quot;&gt;대상&lt;/a&gt; 문자 배열 로 복사합니다 .</target>
        </trans-unit>
        <trans-unit id="92f26d1cc3b09255d6710981f57d323269412546" translate="yes" xml:space="preserve">
          <source>Copies characters from this string builder into the &lt;a href=&quot;to-char-array#kotlin.text%24toCharArray(kotlin.text.StringBuilder,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/destination&quot;&gt;destination&lt;/a&gt; character array.</source>
          <target state="translated">이 문자열 작성기의 문자를 &lt;a href=&quot;to-char-array#kotlin.text%24toCharArray(kotlin.text.StringBuilder,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/destination&quot;&gt;대상&lt;/a&gt; 문자 배열 로 복사합니다 .</target>
        </trans-unit>
        <trans-unit id="c4408736968b49fddfca14267f4769b0299f54dd" translate="yes" xml:space="preserve">
          <source>Copies characters from this string builder into the &lt;a href=&quot;to-char-array#kotlin.text.StringBuilder%24toCharArray(kotlin.CharArray,%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/destination&quot;&gt;destination&lt;/a&gt; character array.</source>
          <target state="translated">이 문자열 작성기의 문자를 &lt;a href=&quot;to-char-array#kotlin.text.StringBuilder%24toCharArray(kotlin.CharArray,%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/destination&quot;&gt;대상&lt;/a&gt; 문자 배열 로 복사합니다 .</target>
        </trans-unit>
        <trans-unit id="031b1105a619f000bd0ea3c4b75571ce9ff29d21" translate="yes" xml:space="preserve">
          <source>Copies characters from this string into the &lt;a href=&quot;../../kotlin.text/to-char-array#kotlin.text%24toCharArray%28kotlin.String%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Fdestination&quot;&gt;destination&lt;/a&gt; character array and returns that array.</source>
          <target state="translated">이 문자열의 문자를 &lt;a href=&quot;../../kotlin.text/to-char-array#kotlin.text%24toCharArray%28kotlin.String%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 문자 배열 로 복사 하고 해당 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4ece59472da770a49889a481287b92aed25a6535" translate="yes" xml:space="preserve">
          <source>Copies characters from this string into the &lt;a href=&quot;../../kotlin.text/to-char-array#kotlin.text%24toCharArray(kotlin.String,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/destination&quot;&gt;destination&lt;/a&gt; character array and returns that array.</source>
          <target state="translated">이 문자열의 문자를 &lt;a href=&quot;../../kotlin.text/to-char-array#kotlin.text%24toCharArray(kotlin.String,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/destination&quot;&gt;대상&lt;/a&gt; 문자 배열 로 복사 하고 해당 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="56d2e3c122db99c23c3e7325e8e1b3714fd1ac79" translate="yes" xml:space="preserve">
          <source>Copies characters from this string into the &lt;a href=&quot;to-char-array#kotlin.text%24toCharArray%28kotlin.String%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Fdestination&quot;&gt;destination&lt;/a&gt; character array and returns that array.</source>
          <target state="translated">이 문자열의 문자를 &lt;a href=&quot;to-char-array#kotlin.text%24toCharArray%28kotlin.String%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 문자 배열 로 복사 하고 해당 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1e201404e7b737eee8a9f5c200324001a17e58af" translate="yes" xml:space="preserve">
          <source>Copies characters from this string into the &lt;a href=&quot;to-char-array#kotlin.text%24toCharArray(kotlin.String,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/destination&quot;&gt;destination&lt;/a&gt; character array and returns that array.</source>
          <target state="translated">이 문자열의 문자를 &lt;a href=&quot;to-char-array#kotlin.text%24toCharArray(kotlin.String,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/destination&quot;&gt;대상&lt;/a&gt; 문자 배열 로 복사 하고 해당 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6d395527540762e8980d90854ddf113305a0c0c7" translate="yes" xml:space="preserve">
          <source>Copies range of mutable data to the byte array.</source>
          <target state="translated">가변 데이터 범위를 바이트 배열로 복사합니다.</target>
        </trans-unit>
        <trans-unit id="af5586ebaf0eef063fda6af77a76dfe04a0dbb42" translate="yes" xml:space="preserve">
          <source>Copies the data from this blob into a new &lt;a href=&quot;../../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;.</source>
          <target state="translated">이 Blob의 데이터를 새로운 &lt;a href=&quot;../../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray에&lt;/a&gt; 카피합니다 .</target>
        </trans-unit>
        <trans-unit id="c5c8ebd3b81f11f84546c2205280d5c52dc29044" translate="yes" xml:space="preserve">
          <source>Copies the data from this blob into a new &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt;.</source>
          <target state="translated">이 Blob의 데이터를 새로운 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray에&lt;/a&gt; 카피합니다 .</target>
        </trans-unit>
        <trans-unit id="a7f701ad2501d694cf92baff8abdb9484217fd99" translate="yes" xml:space="preserve">
          <source>Copies the data from this blob into a new UByteArray.</source>
          <target state="translated">이 Blob의 데이터를 새로운 UByteArray에 복사합니다.</target>
        </trans-unit>
        <trans-unit id="1e49f2878146a141f0218f944fbb4d182afaee77" translate="yes" xml:space="preserve">
          <source>Copies the values to placement and returns the pointer to the copy.</source>
          <target state="translated">값을 배치로 복사하고 포인터를 사본으로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="38085c557a3f9d48e5d36ea02c3f62afbe5b7d66" translate="yes" xml:space="preserve">
          <source>Copies this array or its subrange into the &lt;a href=&quot;../../kotlin.collections/copy-into#kotlin.collections%24copyInto%28kotlin.UByteArray%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Fdestination&quot;&gt;destination&lt;/a&gt; array and returns that array.</source>
          <target state="translated">이 배열 또는 그 하위 범위를 &lt;a href=&quot;../../kotlin.collections/copy-into#kotlin.collections%24copyInto%28kotlin.UByteArray%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 배열에 복사하고 해당 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="20aa70c081e2395bf1a557940df57893db110c64" translate="yes" xml:space="preserve">
          <source>Copies this array or its subrange into the &lt;a href=&quot;../../kotlin.collections/copy-into#kotlin.collections%24copyInto%28kotlin.UIntArray%2C+kotlin.UIntArray%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Fdestination&quot;&gt;destination&lt;/a&gt; array and returns that array.</source>
          <target state="translated">이 배열 또는 그 하위 범위를 &lt;a href=&quot;../../kotlin.collections/copy-into#kotlin.collections%24copyInto%28kotlin.UIntArray%2C+kotlin.UIntArray%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 배열에 복사하고 해당 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9df0d369a7a9fc17d2f789afec982635e6040334" translate="yes" xml:space="preserve">
          <source>Copies this array or its subrange into the &lt;a href=&quot;../../kotlin.collections/copy-into#kotlin.collections%24copyInto%28kotlin.ULongArray%2C+kotlin.ULongArray%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Fdestination&quot;&gt;destination&lt;/a&gt; array and returns that array.</source>
          <target state="translated">이 배열 또는 그 하위 범위를 &lt;a href=&quot;../../kotlin.collections/copy-into#kotlin.collections%24copyInto%28kotlin.ULongArray%2C+kotlin.ULongArray%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 배열에 복사하고 해당 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c2d73eaaf87c991279febe17c0310ab45cffc612" translate="yes" xml:space="preserve">
          <source>Copies this array or its subrange into the &lt;a href=&quot;../../kotlin.collections/copy-into#kotlin.collections%24copyInto%28kotlin.UShortArray%2C+kotlin.UShortArray%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Fdestination&quot;&gt;destination&lt;/a&gt; array and returns that array.</source>
          <target state="translated">이 배열 또는 그 하위 범위를 &lt;a href=&quot;../../kotlin.collections/copy-into#kotlin.collections%24copyInto%28kotlin.UShortArray%2C+kotlin.UShortArray%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 배열에 복사하고 해당 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f6f0408d85756991f1c8d15e42c49c5129743b61" translate="yes" xml:space="preserve">
          <source>Copies this array or its subrange into the &lt;a href=&quot;../../kotlin.collections/copy-into#kotlin.collections%24copyInto(kotlin.UByteArray,%20kotlin.UByteArray,%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/destination&quot;&gt;destination&lt;/a&gt; array and returns that array.</source>
          <target state="translated">이 배열 또는 하위 범위를 &lt;a href=&quot;../../kotlin.collections/copy-into#kotlin.collections%24copyInto(kotlin.UByteArray,%20kotlin.UByteArray,%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/destination&quot;&gt;대상&lt;/a&gt; 배열에 복사하고 해당 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="47b5a4f8205bef013926e6dad9cf234360639ae2" translate="yes" xml:space="preserve">
          <source>Copies this array or its subrange into the &lt;a href=&quot;../../kotlin.collections/copy-into#kotlin.collections%24copyInto(kotlin.UIntArray,%20kotlin.UIntArray,%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/destination&quot;&gt;destination&lt;/a&gt; array and returns that array.</source>
          <target state="translated">이 배열 또는 하위 범위를 &lt;a href=&quot;../../kotlin.collections/copy-into#kotlin.collections%24copyInto(kotlin.UIntArray,%20kotlin.UIntArray,%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/destination&quot;&gt;대상&lt;/a&gt; 배열에 복사하고 해당 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="42ee1857106532ba9bb981faf97d2f09c346a196" translate="yes" xml:space="preserve">
          <source>Copies this array or its subrange into the &lt;a href=&quot;../../kotlin.collections/copy-into#kotlin.collections%24copyInto(kotlin.ULongArray,%20kotlin.ULongArray,%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/destination&quot;&gt;destination&lt;/a&gt; array and returns that array.</source>
          <target state="translated">이 배열 또는 하위 범위를 &lt;a href=&quot;../../kotlin.collections/copy-into#kotlin.collections%24copyInto(kotlin.ULongArray,%20kotlin.ULongArray,%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/destination&quot;&gt;대상&lt;/a&gt; 배열에 복사하고 해당 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d1878dd4277545a666d91065db6f30fa2bc4ec64" translate="yes" xml:space="preserve">
          <source>Copies this array or its subrange into the &lt;a href=&quot;../../kotlin.collections/copy-into#kotlin.collections%24copyInto(kotlin.UShortArray,%20kotlin.UShortArray,%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/destination&quot;&gt;destination&lt;/a&gt; array and returns that array.</source>
          <target state="translated">이 배열 또는 하위 범위를 &lt;a href=&quot;../../kotlin.collections/copy-into#kotlin.collections%24copyInto(kotlin.UShortArray,%20kotlin.UShortArray,%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/destination&quot;&gt;대상&lt;/a&gt; 배열에 복사하고 해당 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bcb9d5a7a337266c77400cb5908d732ea834f2b3" translate="yes" xml:space="preserve">
          <source>Copies this array or its subrange into the &lt;a href=&quot;copy-into#kotlin.collections%24copyInto%28kotlin.Array%28%28kotlin.collections.copyInto.T%29%29%2C+kotlin.Array%28%28kotlin.collections.copyInto.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Fdestination&quot;&gt;destination&lt;/a&gt; array and returns that array.</source>
          <target state="translated">이 배열 또는 그 하위 범위를 &lt;a href=&quot;copy-into#kotlin.collections%24copyInto%28kotlin.Array%28%28kotlin.collections.copyInto.T%29%29%2C+kotlin.Array%28%28kotlin.collections.copyInto.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 배열에 복사하고 해당 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="31b5afc1a15aa1873990e18603826f30eedcb02d" translate="yes" xml:space="preserve">
          <source>Copies this array or its subrange into the &lt;a href=&quot;copy-into#kotlin.collections%24copyInto%28kotlin.UIntArray%2C+kotlin.UIntArray%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Fdestination&quot;&gt;destination&lt;/a&gt; array and returns that array.</source>
          <target state="translated">이 배열 또는 그 하위 범위를 &lt;a href=&quot;copy-into#kotlin.collections%24copyInto%28kotlin.UIntArray%2C+kotlin.UIntArray%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 배열에 복사하고 해당 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0def95cf8ea5cec8fe926742731a20315a7f0663" translate="yes" xml:space="preserve">
          <source>Copies this array or its subrange into the &lt;a href=&quot;copy-into#kotlin.collections%24copyInto(kotlin.Array((kotlin.collections.copyInto.T)),%20kotlin.Array((kotlin.collections.copyInto.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/destination&quot;&gt;destination&lt;/a&gt; array and returns that array.</source>
          <target state="translated">이 배열 또는 하위 범위를 &lt;a href=&quot;copy-into#kotlin.collections%24copyInto(kotlin.Array((kotlin.collections.copyInto.T)),%20kotlin.Array((kotlin.collections.copyInto.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/destination&quot;&gt;대상&lt;/a&gt; 배열에 복사하고 해당 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cbb8e49f830df23004ad117770ae1865400ee973" translate="yes" xml:space="preserve">
          <source>Copies this array or its subrange into the &lt;a href=&quot;copy-into#kotlin.collections%24copyInto(kotlin.UIntArray,%20kotlin.UIntArray,%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/destination&quot;&gt;destination&lt;/a&gt; array and returns that array.</source>
          <target state="translated">이 배열 또는 하위 범위를 &lt;a href=&quot;copy-into#kotlin.collections%24copyInto(kotlin.UIntArray,%20kotlin.UIntArray,%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/destination&quot;&gt;대상&lt;/a&gt; 배열에 복사하고 해당 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b7684104c4c37e8be48dc02f377a51efb96a66c2" translate="yes" xml:space="preserve">
          <source>Copies this file to the given &lt;a href=&quot;copy-to#kotlin.io%24copyTo%28java.io.File%2C+java.io.File%2C+kotlin.Boolean%2C+kotlin.Int%29%2Ftarget&quot;&gt;target&lt;/a&gt; file.</source>
          <target state="translated">이 파일을 지정된 &lt;a href=&quot;copy-to#kotlin.io%24copyTo%28java.io.File%2C+java.io.File%2C+kotlin.Boolean%2C+kotlin.Int%29%2Ftarget&quot;&gt;대상&lt;/a&gt; 파일에 복사 합니다.</target>
        </trans-unit>
        <trans-unit id="44599c55f9010d3200a35cef48e7f2badcd99e00" translate="yes" xml:space="preserve">
          <source>Copies this file to the given &lt;a href=&quot;copy-to#kotlin.io%24copyTo(java.io.File,%20java.io.File,%20kotlin.Boolean,%20kotlin.Int)/target&quot;&gt;target&lt;/a&gt; file.</source>
          <target state="translated">이 파일을 지정된 &lt;a href=&quot;copy-to#kotlin.io%24copyTo(java.io.File,%20java.io.File,%20kotlin.Boolean,%20kotlin.Int)/target&quot;&gt;대상&lt;/a&gt; 파일에 복사 합니다.</target>
        </trans-unit>
        <trans-unit id="e8cd30fc1f256331f027ecb6c7c91a1dd8eaf668" translate="yes" xml:space="preserve">
          <source>Copies this file with all its children to the specified destination &lt;a href=&quot;copy-recursively#kotlin.io%24copyRecursively%28java.io.File%2C+java.io.File%2C+kotlin.Boolean%2C+kotlin.Function2%28%28java.io.File%2C+java.io.IOException%2C+kotlin.io.OnErrorAction%29%29%29%2Ftarget&quot;&gt;target&lt;/a&gt; path. If some directories on the way to the destination are missing, then they will be created.</source>
          <target state="translated">이 파일을 모든 하위 항목과 함께 지정된 대상 &lt;a href=&quot;copy-recursively#kotlin.io%24copyRecursively%28java.io.File%2C+java.io.File%2C+kotlin.Boolean%2C+kotlin.Function2%28%28java.io.File%2C+java.io.IOException%2C+kotlin.io.OnErrorAction%29%29%29%2Ftarget&quot;&gt;대상&lt;/a&gt; 경로에 복사 합니다. 목적지로가는 도중에 일부 디렉토리가 누락되면 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="4b1545a4eaf66ae1344c7a3ff3bf2c86128cda66" translate="yes" xml:space="preserve">
          <source>Copies this file with all its children to the specified destination &lt;a href=&quot;copy-recursively#kotlin.io%24copyRecursively(java.io.File,%20java.io.File,%20kotlin.Boolean,%20kotlin.Function2((java.io.File,%20java.io.IOException,%20kotlin.io.OnErrorAction)))/target&quot;&gt;target&lt;/a&gt; path. If some directories on the way to the destination are missing, then they will be created.</source>
          <target state="translated">모든 하위 파일과 함께이 파일을 지정된 &lt;a href=&quot;copy-recursively#kotlin.io%24copyRecursively(java.io.File,%20java.io.File,%20kotlin.Boolean,%20kotlin.Function2((java.io.File,%20java.io.IOException,%20kotlin.io.OnErrorAction)))/target&quot;&gt;대상&lt;/a&gt; 경로에 복사 합니다. 목적지로가는 도중에 일부 디렉토리가 없으면 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="934e0e6627b5df1877d63246da8f82e102ba25f4" translate="yes" xml:space="preserve">
          <source>Copies this reader to the given &lt;a href=&quot;copy-to#kotlin.io%24copyTo%28java.io.Reader%2C+java.io.Writer%2C+kotlin.Int%29%2Fout&quot;&gt;out&lt;/a&gt; writer, returning the number of characters copied.</source>
          <target state="translated">복사 주어진이 독자 &lt;a href=&quot;copy-to#kotlin.io%24copyTo%28java.io.Reader%2C+java.io.Writer%2C+kotlin.Int%29%2Fout&quot;&gt;밖으로&lt;/a&gt; 복사 된 문자 수를 반환 작가.</target>
        </trans-unit>
        <trans-unit id="6f71426ec0a3dafc672493c2901b4443785156d0" translate="yes" xml:space="preserve">
          <source>Copies this reader to the given &lt;a href=&quot;copy-to#kotlin.io%24copyTo(java.io.Reader,%20java.io.Writer,%20kotlin.Int)/out&quot;&gt;out&lt;/a&gt; writer, returning the number of characters copied.</source>
          <target state="translated">복사 주어진이 독자 &lt;a href=&quot;copy-to#kotlin.io%24copyTo(java.io.Reader,%20java.io.Writer,%20kotlin.Int)/out&quot;&gt;밖으로&lt;/a&gt; 복사 된 문자 수를 반환 작가.</target>
        </trans-unit>
        <trans-unit id="63aa7450ed11efb3d0a2afd1f9939e460ce18f85" translate="yes" xml:space="preserve">
          <source>Copies this stream to the given output stream, returning the number of bytes copied</source>
          <target state="translated">이 스트림을 지정된 출력 스트림에 카피 해, 카피 된 바이트 수를 돌려줍니다</target>
        </trans-unit>
        <trans-unit id="7836cc3dea7633d00dd0da8725d14336615963a5" translate="yes" xml:space="preserve">
          <source>Copy the referenced values to &lt;a href=&quot;place#kotlinx.cinterop.CValues%24place%28kotlinx.cinterop.CPointer%28%28kotlinx.cinterop.CValues.T%29%29%29%2Fplacement&quot;&gt;placement&lt;/a&gt; and return placement pointer.</source>
          <target state="translated">참조 된 값을 &lt;a href=&quot;place#kotlinx.cinterop.CValues%24place%28kotlinx.cinterop.CPointer%28%28kotlinx.cinterop.CValues.T%29%29%29%2Fplacement&quot;&gt;게재 위치에&lt;/a&gt; 복사하고 게재 위치 포인터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="24024628fda784f05416e4ffb5f52d68d0a98fdc" translate="yes" xml:space="preserve">
          <source>Copy the referenced values to &lt;a href=&quot;place#kotlinx.cinterop.CValues%24place(kotlinx.cinterop.CPointer((kotlinx.cinterop.CValues.T)))/placement&quot;&gt;placement&lt;/a&gt; and return placement pointer.</source>
          <target state="translated">참조 된 값을 &lt;a href=&quot;place#kotlinx.cinterop.CValues%24place(kotlinx.cinterop.CPointer((kotlinx.cinterop.CValues.T)))/placement&quot;&gt;배치에&lt;/a&gt; 복사하고 배치 포인터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="43b7de9894fd26b8d14ca6988e963239baff6ad4" translate="yes" xml:space="preserve">
          <source>Copying</source>
          <target state="translated">Copying</target>
        </trans-unit>
        <trans-unit id="7d7803c14aedad319fb46b473cffc5e3dd9375e3" translate="yes" xml:space="preserve">
          <source>Copying elements between two existing arrays</source>
          <target state="translated">두 개의 기존 배열간에 요소 복사</target>
        </trans-unit>
        <trans-unit id="745c72ddd0406bd7fcb5d1a06199965dbd45e336" translate="yes" xml:space="preserve">
          <source>Core functions and types, available on all supported platforms.</source>
          <target state="translated">지원되는 모든 플랫폼에서 사용 가능한 핵심 기능 및 유형</target>
        </trans-unit>
        <trans-unit id="07f7c51a79f3b74262abee13daca7af2bf6a471d" translate="yes" xml:space="preserve">
          <source>Coroutine Basics</source>
          <target state="translated">코 루틴 기초</target>
        </trans-unit>
        <trans-unit id="de5fbc73674f16a9ae279895515d45d17b59af13" translate="yes" xml:space="preserve">
          <source>Coroutine Context and Dispatchers</source>
          <target state="translated">코 루틴 컨텍스트 및 디스패처</target>
        </trans-unit>
        <trans-unit id="488d33b81aac477d82e5eee9a1219eae6bf154bb" translate="yes" xml:space="preserve">
          <source>Coroutine basics</source>
          <target state="translated">코 루틴 기본</target>
        </trans-unit>
        <trans-unit id="c0b18d3ef9494a447cbe00d5fd68d69136ab4f1f" translate="yes" xml:space="preserve">
          <source>Coroutine builders come in two flavors: propagating exceptions automatically (&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/launch.html&quot;&gt;launch&lt;/a&gt; and &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/actor.html&quot;&gt;actor&lt;/a&gt;) or exposing them to users (&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/async.html&quot;&gt;async&lt;/a&gt; and &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/produce.html&quot;&gt;produce&lt;/a&gt;). The former treat exceptions as unhandled, similar to Java's &lt;code&gt;Thread.uncaughtExceptionHandler&lt;/code&gt;, while the latter are relying on the user to consume the final exception, for example via &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/await.html&quot;&gt;await&lt;/a&gt; or &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-receive-channel/receive.html&quot;&gt;receive&lt;/a&gt; (&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/produce.html&quot;&gt;produce&lt;/a&gt; and &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-receive-channel/receive.html&quot;&gt;receive&lt;/a&gt; are covered later in &lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines/blob/master/docs/channels.md&quot;&gt;Channels&lt;/a&gt; section).</source>
          <target state="translated">코 루틴 빌더는 예외를 자동으로 전파 ( &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/launch.html&quot;&gt;런치&lt;/a&gt; 및 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/actor.html&quot;&gt;액터&lt;/a&gt; )하거나 사용자에게 노출 ( &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/async.html&quot;&gt;비동기&lt;/a&gt; 및 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/produce.html&quot;&gt;생성&lt;/a&gt; )하는 두 가지 방식으로 제공됩니다 . 같은 전 치료 예외 자바 유사하게 처리되지 않은 &lt;code&gt;Thread.uncaughtExceptionHandler&lt;/code&gt; 후자를 통해 예를 들어, 최종 예외를 소비하는 사용자에 의존하면서, &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/await.html&quot;&gt;AWAIT&lt;/a&gt; 또는 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-receive-channel/receive.html&quot;&gt;수신&lt;/a&gt; ( &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/produce.html&quot;&gt;농산물&lt;/a&gt; 및 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-receive-channel/receive.html&quot;&gt;수신&lt;/a&gt; 뒷부분 덮여 &lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines/blob/master/docs/channels.md&quot;&gt;채널&lt;/a&gt; 부).</target>
        </trans-unit>
        <trans-unit id="8de1fd87aece486532efa53ddb54764b372e18cf" translate="yes" xml:space="preserve">
          <source>Coroutine builders come in two flavors: propagating exceptions automatically (&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/launch.html&quot;&gt;launch&lt;/a&gt; and &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/actor.html&quot;&gt;actor&lt;/a&gt;) or exposing them to users (&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/async.html&quot;&gt;async&lt;/a&gt; and &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/produce.html&quot;&gt;produce&lt;/a&gt;). When these builders are used to create a &lt;em&gt;root&lt;/em&gt; coroutine, that is not a &lt;em&gt;child&lt;/em&gt; of another coroutine, the former builders treat exceptions as &lt;strong&gt;uncaught&lt;/strong&gt; exceptions, similar to Java's &lt;code&gt;Thread.uncaughtExceptionHandler&lt;/code&gt;, while the latter are relying on the user to consume the final exception, for example via &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/await.html&quot;&gt;await&lt;/a&gt; or &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-receive-channel/receive.html&quot;&gt;receive&lt;/a&gt; (&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/produce.html&quot;&gt;produce&lt;/a&gt; and &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-receive-channel/receive.html&quot;&gt;receive&lt;/a&gt; are covered later in &lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines/blob/master/docs/channels.md&quot;&gt;Channels&lt;/a&gt; section).</source>
          <target state="translated">코 루틴 빌더는 두 가지 종류로 제공 : 자동 (예외를 전파 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/launch.html&quot;&gt;발사&lt;/a&gt; 및 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/actor.html&quot;&gt;배우&lt;/a&gt; ) 또는 사용자에게 노출 ( &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/async.html&quot;&gt;비동기&lt;/a&gt; 및 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/produce.html&quot;&gt;생산&lt;/a&gt; ). 이러한 빌더가 다른 코 루틴 의 &lt;em&gt;하위&lt;/em&gt; 가 아닌 &lt;em&gt;루트&lt;/em&gt; 코 루틴 을 생성하는 데 사용되는 경우, 전자 빌더는 Java의 &lt;code&gt;Thread.uncaughtExceptionHandler&lt;/code&gt; 와 유사하게 예외를 &lt;strong&gt;포착되지 않은&lt;/strong&gt; 예외 로 취급하고 후자는 최종 예외를 소비하기 위해 사용자에 의존합니다. 예를 들어 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/await.html&quot;&gt;대기&lt;/a&gt; 또는 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-receive-channel/receive.html&quot;&gt;수신을&lt;/a&gt; 통해 ( &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/produce.html&quot;&gt;생산&lt;/a&gt; 및 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-receive-channel/receive.html&quot;&gt;수신&lt;/a&gt; 은 나중에 &lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines/blob/master/docs/channels.md&quot;&gt;채널&lt;/a&gt; 에서 다룹니다.&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt; 부분).</target>
        </trans-unit>
        <trans-unit id="ae55e20ef228b2c55f40bd182d8e64807706ff67" translate="yes" xml:space="preserve">
          <source>Coroutine cancellation is &lt;em&gt;cooperative&lt;/em&gt;. A coroutine code has to cooperate to be cancellable. All the suspending functions in &lt;code&gt;kotlinx.coroutines&lt;/code&gt; are &lt;em&gt;cancellable&lt;/em&gt;. They check for cancellation of coroutine and throw &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-cancellation-exception/index.html&quot;&gt;CancellationException&lt;/a&gt; when cancelled. However, if a coroutine is working in a computation and does not check for cancellation, then it cannot be cancelled, like the following example shows:</source>
          <target state="translated">코 루틴 취소는 &lt;em&gt;협조적&lt;/em&gt; 입니다. 코 루틴 코드는 취소 할 수 있도록 협력해야합니다. &lt;code&gt;kotlinx.coroutines&lt;/code&gt; 의 모든 일시 중단 기능 은 &lt;em&gt;취소 가능&lt;/em&gt; 합니다. 코 루틴 취소를 확인하고 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-cancellation-exception/index.html&quot;&gt;취소&lt;/a&gt; 하면 CancellationException을 발생시킵니다. 그러나 코 루틴이 계산에서 작업 중이고 취소를 확인하지 않으면 다음 예제와 같이 취소 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f2f78af3d50f722ff2be6dbd1a1c4ff81d7274ea" translate="yes" xml:space="preserve">
          <source>Coroutine context and dispatchers</source>
          <target state="translated">코 루틴 컨텍스트 및 디스패처</target>
        </trans-unit>
        <trans-unit id="c68a8eee750a8dd9415478df2511d62b656d588b" translate="yes" xml:space="preserve">
          <source>Coroutine context includes a &lt;em&gt;coroutine dispatcher&lt;/em&gt; (see &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-dispatcher/index.html&quot;&gt;CoroutineDispatcher&lt;/a&gt;) that determines what thread or threads the corresponding coroutine uses for its execution. Coroutine dispatcher can confine coroutine execution to a specific thread, dispatch it to a thread pool, or let it run unconfined.</source>
          <target state="translated">&lt;em&gt;코 루틴&lt;/em&gt; 컨텍스트에는 해당 코 루틴이 실행에 사용하는 스레드 또는 스레드를 결정 하는 &lt;em&gt;코 루틴 디스패처&lt;/em&gt; ( &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-dispatcher/index.html&quot;&gt;CoroutineDispatcher&lt;/a&gt; 참조 )가 포함됩니다. 코 루틴 디스패처는 코 루틴 실행을 특정 스레드로 제한하거나 스레드 풀로 디스패치하거나 제한되지 않은 상태로 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4dc24e2f4ae97e390c52721b82db936df4647bc3" translate="yes" xml:space="preserve">
          <source>Coroutine scope</source>
          <target state="translated">코 루틴 범위</target>
        </trans-unit>
        <trans-unit id="83cdea3b203a75e2e59d9cb9bf5f4b5876f53bbd" translate="yes" xml:space="preserve">
          <source>CoroutineContext</source>
          <target state="translated">CoroutineContext</target>
        </trans-unit>
        <trans-unit id="de14c451c1c4b7eb60c957d86d407026834014d6" translate="yes" xml:space="preserve">
          <source>CoroutineExceptionHandler</source>
          <target state="translated">CoroutineExceptionHandler</target>
        </trans-unit>
        <trans-unit id="038697113018f4400bc94f1be4aebad0829b635a" translate="yes" xml:space="preserve">
          <source>Coroutines</source>
          <target state="translated">Coroutines</target>
        </trans-unit>
        <trans-unit id="f70cd799e42c613519a4f6f6196bf8f99b609221" translate="yes" xml:space="preserve">
          <source>Coroutines (experimental)</source>
          <target state="translated">코 루틴 (실험)</target>
        </trans-unit>
        <trans-unit id="17eb0eb281654e2476632d834b4078777adf318e" translate="yes" xml:space="preserve">
          <source>Coroutines ARE light-weight</source>
          <target state="translated">코 루틴은 경량입니다</target>
        </trans-unit>
        <trans-unit id="18c057afcb943ef68ee0e84673cd936b15d7e167" translate="yes" xml:space="preserve">
          <source>Coroutines Guide</source>
          <target state="translated">코 루틴 가이드</target>
        </trans-unit>
        <trans-unit id="fc561c9529c85e38b62084986087f837ee475e4a" translate="yes" xml:space="preserve">
          <source>Coroutines always execute in some context represented by a value of the &lt;a href=&quot;../../../api/latest/jvm/stdlib/kotlin.coroutines/-coroutine-context/index&quot;&gt;CoroutineContext&lt;/a&gt; type, defined in the Kotlin standard library.</source>
          <target state="translated">코 루틴은 항상 Kotlin 표준 라이브러리에 정의 된 &lt;a href=&quot;../../../api/latest/jvm/stdlib/kotlin.coroutines/-coroutine-context/index&quot;&gt;CoroutineContext&lt;/a&gt; 유형 의 값으로 표시되는 일부 컨텍스트에서 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="b11438e204fcc741c597672680760a97569b1a5a" translate="yes" xml:space="preserve">
          <source>Coroutines always execute in some context which is represented by the value of &lt;a href=&quot;../../../api/latest/jvm/stdlib/kotlin.coroutines/-coroutine-context/index&quot;&gt;CoroutineContext&lt;/a&gt; type, defined in the Kotlin standard library.</source>
          <target state="translated">코 루틴은 항상 Kotlin 표준 라이브러리에 정의 된 &lt;a href=&quot;../../../api/latest/jvm/stdlib/kotlin.coroutines/-coroutine-context/index&quot;&gt;CoroutineContext&lt;/a&gt; 유형 의 값으로 표시되는 일부 컨텍스트에서 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="4db985b5430709242f53d32010bc1ee352865aa3" translate="yes" xml:space="preserve">
          <source>Coroutines are not a new concept, let alone invented by Kotlin. They've been around for decades and are popular in some other programming languages such as Go. What is important to note though is that the way they're implemented in Kotlin, most of the functionality is delegated to libraries. In fact, beyond the &lt;code&gt;suspend&lt;/code&gt; keyword, no other keywords are added to the language. This is somewhat different from languages such as C# that have &lt;code&gt;async&lt;/code&gt; and &lt;code&gt;await&lt;/code&gt; as part of the syntax. With Kotlin, these are just library functions.</source>
          <target state="translated">코 루틴은 코 틀린이 발명 한 것은 물론 새로운 개념이 아닙니다. 그들은 수십 년 동안 사용되어 왔으며 Go와 같은 다른 프로그래밍 언어에서 인기가 있습니다. 중요한 점은 Kotlin에서 구현되는 방식으로 대부분의 기능이 라이브러리에 위임된다는 것입니다. 실제로 &lt;code&gt;suspend&lt;/code&gt; 키워드 외에 다른 키워드는 언어에 추가되지 않습니다. 이것은 구문의 일부로 &lt;code&gt;async&lt;/code&gt; 및 &lt;code&gt;await&lt;/code&gt; 하는 C #과 같은 언어와 약간 다릅니다 . Kotlin에서는 라이브러리 함수일뿐입니다.</target>
        </trans-unit>
        <trans-unit id="5c047beb51288550bcb6b0a89ea74095c9934f5d" translate="yes" xml:space="preserve">
          <source>Coroutines can be executed concurrently using a multi-threaded dispatcher like the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-default.html&quot;&gt;Dispatchers.Default&lt;/a&gt;. It presents all the usual concurrency problems. The main problem being synchronization of access to &lt;strong&gt;shared mutable state&lt;/strong&gt;. Some solutions to this problem in the land of coroutines are similar to the solutions in the multi-threaded world, but others are unique.</source>
          <target state="translated">코 루틴은 동시에 같은 멀티 스레드 디스패처 사용하여 실행할 수 있습니다 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-default.html&quot;&gt;Dispatchers.Default을&lt;/a&gt; . 모든 일반적인 동시성 문제를 나타냅니다. 주요 문제는 &lt;strong&gt;공유 가능한 변경 가능 상태&lt;/strong&gt; 에 대한 액세스 동기화입니다 . 코 루틴 땅 에서이 문제에 대한 일부 솔루션은 멀티 스레드 세계의 솔루션과 유사하지만 다른 솔루션은 독특합니다.</target>
        </trans-unit>
        <trans-unit id="c5d3d681c5130637b109912f58bfea4e0ad79d20" translate="yes" xml:space="preserve">
          <source>Coroutines can suspend on one thread and resume on another thread. Even with a single-threaded dispatcher it might be hard to figure out what coroutine was doing, where, and when. The common approach to debugging applications with threads is to print the thread name in the log file on each log statement. This feature is universally supported by logging frameworks. When using coroutines, the thread name alone does not give much of a context, so &lt;code&gt;kotlinx.coroutines&lt;/code&gt; includes debugging facilities to make it easier.</source>
          <target state="translated">코 루틴은 한 스레드에서 일시 중단되고 다른 스레드에서 다시 시작할 수 있습니다. 단일 스레드 디스패처를 사용하더라도 코 루틴이 수행 한 작업, 위치 및시기를 파악하기 어려울 수 있습니다. 스레드를 사용하여 응용 프로그램을 디버깅하는 일반적인 방법은 각 로그 문의 로그 파일에 스레드 이름을 인쇄하는 것입니다. 이 기능은 로깅 프레임 워크에서 보편적으로 지원됩니다. 코 루틴을 사용할 때 스레드 이름만으로는 많은 컨텍스트를 제공하지 않으므로 &lt;code&gt;kotlinx.coroutines&lt;/code&gt; 에는 디버깅 기능이 포함되어있어 쉽게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5f85421cfdb4651aa06a4546558f296e552244e" translate="yes" xml:space="preserve">
          <source>Coroutines can suspend on one thread and resume on another thread. Even with a single-threaded dispatcher it might be hard to figure out what the coroutine was doing, where, and when if you don't have special tooling.</source>
          <target state="translated">코 루틴은 한 스레드에서 일시 중지하고 다른 스레드에서 다시 시작할 수 있습니다. 단일 스레드 디스패처를 사용하더라도 특별한 도구가 없으면 코 루틴이 무엇을, 어디서, 언제 수행했는지 파악하기 어려울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="54c068979eafdf93112e49067229beaf3bd0b376" translate="yes" xml:space="preserve">
          <source>Coroutines design document (KEEP)</source>
          <target state="translated">코 루틴 디자인 문서 (KEEP)</target>
        </trans-unit>
        <trans-unit id="29e92235e236d690e45a83917ff98ce770ee3364" translate="yes" xml:space="preserve">
          <source>Coroutines for asynchronous programming and more</source>
          <target state="translated">비동기 프로그래밍 등을위한 코 루틴</target>
        </trans-unit>
        <trans-unit id="d62d01d81674c7a330eff86568c1aaa0fdaecddf" translate="yes" xml:space="preserve">
          <source>Coroutines for blocking operations (not covered in this document)</source>
          <target state="translated">작업 차단을위한 코 루틴 (이 문서에서 다루지 않음)</target>
        </trans-unit>
        <trans-unit id="524c405eded94ab85e93ce2860f0c5237ab058f8" translate="yes" xml:space="preserve">
          <source>Coroutines release</source>
          <target state="translated">코 루틴 출시</target>
        </trans-unit>
        <trans-unit id="e587bfd4202c296c7400dac9b4b1e3d54c24877d" translate="yes" xml:space="preserve">
          <source>Coroutines running in supervision scope do not propagate exceptions to their parent and are excluded from this rule. A further &lt;a href=&quot;#supervision&quot;&gt;Supervision&lt;/a&gt; section of this document gives more details.</source>
          <target state="translated">감독 범위에서 실행되는 코 루틴은 예외를 부모에게 전파하지 않으며이 규칙에서 제외됩니다. 이 문서 의 추가 &lt;a href=&quot;#supervision&quot;&gt;감독&lt;/a&gt; 섹션에서 자세한 내용을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b65c178b8ce5bd5320da54e168f72051952c0e11" translate="yes" xml:space="preserve">
          <source>Coroutines support</source>
          <target state="translated">코 루틴 지원</target>
        </trans-unit>
        <trans-unit id="69718206d1e176352af2a84d6ad9e3671c8b6d2b" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive least significant bits that are zero in the binary representation of this &lt;a href=&quot;-byte/index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;-byte/index#kotlin.Byte&quot;&gt;바이트&lt;/a&gt; 수 의 이진 표현에서 0 인 연속 최하위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="117674d7b1f37f29e45831b8e9c37c3362e3c0e8" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive least significant bits that are zero in the binary representation of this &lt;a href=&quot;-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 숫자 의 이진 표현에서 0 인 연속 최하위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="32c9a300e39326ed5ee430e219281ba253750ba6" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive least significant bits that are zero in the binary representation of this &lt;a href=&quot;-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 숫자 의 이진 표현에서 0 인 연속 최하위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="90c2866702b53e36a9683afc9b481380ca3fb6ee" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive least significant bits that are zero in the binary representation of this &lt;a href=&quot;-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; 숫자 의 이진 표현에서 0 인 연속 최하위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="2c1e077ecb2ce405f271d5e29b8dfda0d5c267ac" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive least significant bits that are zero in the binary representation of this &lt;a href=&quot;-u-byte/index&quot;&gt;UByte&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;-u-byte/index&quot;&gt;UByte&lt;/a&gt; 숫자 의 이진 표현에서 0 인 연속 최하위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="12796cc199e659ad130c7b2e7859c8bed992b614" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive least significant bits that are zero in the binary representation of this &lt;a href=&quot;-u-int/index&quot;&gt;UInt&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;-u-int/index&quot;&gt;UInt&lt;/a&gt; 숫자 의 이진 표현에서 0 인 연속 최하위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="f1b66eace4be74edffd84364bc9b57b5bbec3695" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive least significant bits that are zero in the binary representation of this &lt;a href=&quot;-u-long/index&quot;&gt;ULong&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;-u-long/index&quot;&gt;ULong&lt;/a&gt; 번호 의 이진 표현에서 0 인 연속 최하위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="61534bf4d09438c0bf2774f093fa023945f59ce9" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive least significant bits that are zero in the binary representation of this &lt;a href=&quot;-u-short/index&quot;&gt;UShort&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;-u-short/index&quot;&gt;UShort&lt;/a&gt; 숫자 의 이진 표현에서 0 인 연속 최하위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="8d0cf21b79346d2f3e24bde5ae21f92150052a89" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive least significant bits that are zero in the binary representation of this &lt;a href=&quot;index&quot;&gt;UByte&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UByte&lt;/a&gt; 숫자 의 이진 표현에서 0 인 연속 최하위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="c858931b5a9f4486e1f162a385e99c8d861384ea" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive least significant bits that are zero in the binary representation of this &lt;a href=&quot;index&quot;&gt;UInt&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UInt&lt;/a&gt; 숫자 의 이진 표현에서 0 인 연속 최하위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="3fa205f82f063e3cec99c0313e467b6e79793d71" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive least significant bits that are zero in the binary representation of this &lt;a href=&quot;index&quot;&gt;ULong&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;ULong&lt;/a&gt; 번호 의 이진 표현에서 0 인 연속 최하위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="801d829536be63f30f17da008c5ea8384c5685aa" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive least significant bits that are zero in the binary representation of this &lt;a href=&quot;index&quot;&gt;UShort&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UShort&lt;/a&gt; 숫자 의 이진 표현에서 0 인 연속 최하위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="fc422b337e9e6b75c861d7ab6df9551d4e5a06f9" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive least significant bits that are zero in the binary representation of this &lt;a href=&quot;index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Byte&quot;&gt;바이트&lt;/a&gt; 수 의 이진 표현에서 0 인 연속 최하위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="07f3506b3e99f95da34d0f1de954993fccf74aec" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive least significant bits that are zero in the binary representation of this &lt;a href=&quot;index#kotlin.Short&quot;&gt;Short&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Short&quot;&gt;Short&lt;/a&gt; 숫자 의 이진 표현에서 0 인 연속 최하위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="a7bcf5094c46cbab3bd22a917b56816c44358d9c" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive most significant bits that are zero in the binary representation of this &lt;a href=&quot;-byte/index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;-byte/index#kotlin.Byte&quot;&gt;바이트&lt;/a&gt; 수 의 이진 표현에서 0 인 연속 최상위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="61f5fb118c4583b63d47476a146f940bd05de1f2" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive most significant bits that are zero in the binary representation of this &lt;a href=&quot;-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 숫자 의 이진 표현에서 0 인 연속 최상위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="d07f23b49e40ee2ddff852a9dd4c1bf18b1ce080" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive most significant bits that are zero in the binary representation of this &lt;a href=&quot;-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 숫자 의 이진 표현에서 0 인 연속 최상위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="3da19e8b7e5bbf8fa92bfa57e539bc1d59d44119" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive most significant bits that are zero in the binary representation of this &lt;a href=&quot;-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; 숫자 의 이진 표현에서 0 인 연속 최상위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="abd6e138c867ee4ae563c097e86fe13749d2687f" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive most significant bits that are zero in the binary representation of this &lt;a href=&quot;-u-byte/index&quot;&gt;UByte&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;-u-byte/index&quot;&gt;UByte&lt;/a&gt; 숫자 의 2 진 표현에서 0 인 연속 최상위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="837e318fcd268ce5e7d7f69aa032b98ba2c4ad94" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive most significant bits that are zero in the binary representation of this &lt;a href=&quot;-u-int/index&quot;&gt;UInt&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;-u-int/index&quot;&gt;UInt&lt;/a&gt; 숫자 의 이진 표현에서 0 인 연속 최상위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="ec7bc6e1616ccb17c7d4026092f7cbcf65658be9" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive most significant bits that are zero in the binary representation of this &lt;a href=&quot;-u-long/index&quot;&gt;ULong&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;-u-long/index&quot;&gt;ULong&lt;/a&gt; 번호 의 이진 표현에서 0 인 연속 최상위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="4c6f7ce21f69f38e79a44e778d6c5c7764e8b741" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive most significant bits that are zero in the binary representation of this &lt;a href=&quot;-u-short/index&quot;&gt;UShort&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;-u-short/index&quot;&gt;UShort&lt;/a&gt; 번호 의 이진 표현에서 0 인 연속 최상위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="a1500ba1d4f8920faf3fdae0a47d981bd74e9cf1" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive most significant bits that are zero in the binary representation of this &lt;a href=&quot;index&quot;&gt;UByte&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UByte&lt;/a&gt; 숫자 의 2 진 표현에서 0 인 연속 최상위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="fb9a11ce37dd827e6e6806c93485bc84facb8900" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive most significant bits that are zero in the binary representation of this &lt;a href=&quot;index&quot;&gt;UInt&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UInt&lt;/a&gt; 숫자 의 이진 표현에서 0 인 연속 최상위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="6452cf7e8b02276e1a46d1f12d714e9c9fe6f75d" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive most significant bits that are zero in the binary representation of this &lt;a href=&quot;index&quot;&gt;ULong&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;ULong&lt;/a&gt; 번호 의 이진 표현에서 0 인 연속 최상위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="c7dbee613785dfe7252bf7c7853005c1bbfa9cce" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive most significant bits that are zero in the binary representation of this &lt;a href=&quot;index&quot;&gt;UShort&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UShort&lt;/a&gt; 번호 의 이진 표현에서 0 인 연속 최상위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="fa41667fcb15ff1c06ad5c91c1b9ab07ca241593" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive most significant bits that are zero in the binary representation of this &lt;a href=&quot;index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Byte&quot;&gt;바이트&lt;/a&gt; 수 의 이진 표현에서 0 인 연속 최상위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="8db3e86f9d4805fdb9578fb6d8044a6bcb6e3bec" translate="yes" xml:space="preserve">
          <source>Counts the number of consecutive most significant bits that are zero in the binary representation of this &lt;a href=&quot;index#kotlin.Short&quot;&gt;Short&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Short&quot;&gt;Short&lt;/a&gt; 숫자 의 이진 표현에서 0 인 연속 최상위 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="7e177e99cd92ca74b71072f60b4f1057cb5260b0" translate="yes" xml:space="preserve">
          <source>Counts the number of set bits in the binary representation of this &lt;a href=&quot;-byte/index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;-byte/index#kotlin.Byte&quot;&gt;바이트&lt;/a&gt; 수 의 이진 표현에서 설정된 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="31ed48ef1d910a3945b483910eb475f9d4541a68" translate="yes" xml:space="preserve">
          <source>Counts the number of set bits in the binary representation of this &lt;a href=&quot;-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 숫자 의 이진 표현에서 설정된 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="ab6a886451f700d4fcf5544802df965ba20486ab" translate="yes" xml:space="preserve">
          <source>Counts the number of set bits in the binary representation of this &lt;a href=&quot;-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 숫자 의 이진 표현에서 설정된 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="e1309271e2c183cc5e38399779fd96116cf86f40" translate="yes" xml:space="preserve">
          <source>Counts the number of set bits in the binary representation of this &lt;a href=&quot;-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; 숫자 의 이진 표현에서 설정된 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="8afa6e971cefc12b4024a0ac06719e5607ee90e9" translate="yes" xml:space="preserve">
          <source>Counts the number of set bits in the binary representation of this &lt;a href=&quot;-u-byte/index&quot;&gt;UByte&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;-u-byte/index&quot;&gt;UByte&lt;/a&gt; 숫자 의 이진 표현에서 설정된 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="cba2ea40b6e3bb960e20761001baae88ca0e8aa6" translate="yes" xml:space="preserve">
          <source>Counts the number of set bits in the binary representation of this &lt;a href=&quot;-u-int/index&quot;&gt;UInt&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;-u-int/index&quot;&gt;UInt&lt;/a&gt; 숫자 의 이진 표현에서 설정된 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="912febc5fdba34b6a9cd4b2d43613c39a8812eab" translate="yes" xml:space="preserve">
          <source>Counts the number of set bits in the binary representation of this &lt;a href=&quot;-u-long/index&quot;&gt;ULong&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;-u-long/index&quot;&gt;ULong&lt;/a&gt; 번호 의 이진 표현에서 설정된 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="5657beae4bc07eb3d307b5f21484d6c3396c160d" translate="yes" xml:space="preserve">
          <source>Counts the number of set bits in the binary representation of this &lt;a href=&quot;-u-short/index&quot;&gt;UShort&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;-u-short/index&quot;&gt;UShort&lt;/a&gt; 수 의 이진 표현에서 설정된 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="b06dca13a507daa81464af1881820f9c0333947a" translate="yes" xml:space="preserve">
          <source>Counts the number of set bits in the binary representation of this &lt;a href=&quot;index&quot;&gt;UByte&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UByte&lt;/a&gt; 숫자 의 이진 표현에서 설정된 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="19b968f066dc09ee37b4e223dc469eac1e751db2" translate="yes" xml:space="preserve">
          <source>Counts the number of set bits in the binary representation of this &lt;a href=&quot;index&quot;&gt;UInt&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UInt&lt;/a&gt; 숫자 의 이진 표현에서 설정된 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="5ee88b3e1ff7630125c419f469aee0433e5cc7b7" translate="yes" xml:space="preserve">
          <source>Counts the number of set bits in the binary representation of this &lt;a href=&quot;index&quot;&gt;ULong&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;ULong&lt;/a&gt; 번호 의 이진 표현에서 설정된 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="bb4662c6a6c049c429bf2885dbdc023728f5efc1" translate="yes" xml:space="preserve">
          <source>Counts the number of set bits in the binary representation of this &lt;a href=&quot;index&quot;&gt;UShort&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;index&quot;&gt;UShort&lt;/a&gt; 수 의 이진 표현에서 설정된 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="59b7e21f342732506b701290346f27a39fc16594" translate="yes" xml:space="preserve">
          <source>Counts the number of set bits in the binary representation of this &lt;a href=&quot;index#kotlin.Byte&quot;&gt;Byte&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Byte&quot;&gt;바이트&lt;/a&gt; 수 의 이진 표현에서 설정된 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="e94e8f22e6f08b303b4204b5efe885ad8aab6695" translate="yes" xml:space="preserve">
          <source>Counts the number of set bits in the binary representation of this &lt;a href=&quot;index#kotlin.Short&quot;&gt;Short&lt;/a&gt; number.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Short&quot;&gt;Short&lt;/a&gt; 숫자 의 이진 표현에서 설정된 비트 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="957837903cd94b6122acaacea1f97e9a38318b59" translate="yes" xml:space="preserve">
          <source>Course preview</source>
          <target state="translated">코스 미리보기</target>
        </trans-unit>
        <trans-unit id="713e659150b582227dba26f02546f157d5095e0e" translate="yes" xml:space="preserve">
          <source>Course sharing</source>
          <target state="translated">과정 공유</target>
        </trans-unit>
        <trans-unit id="c9a5f5e3171b167a66777539e7859c9c2caed37c" translate="yes" xml:space="preserve">
          <source>CpuArchitecture</source>
          <target state="translated">CpuArchitecture</target>
        </trans-unit>
        <trans-unit id="49fa03ca5c87e2795b965a0d3da7631c3ddda637" translate="yes" xml:space="preserve">
          <source>Create Kotlin Bindings</source>
          <target state="translated">코 틀린 바인딩 만들기</target>
        </trans-unit>
        <trans-unit id="9d8088e676a79ed3db90624b0c03aa7c25735128" translate="yes" xml:space="preserve">
          <source>Create a &lt;a href=&quot;#an-example-c-library&quot;&gt;tiny C Library&lt;/a&gt; that uses those types in exports</source>
          <target state="translated">내보내기에서 해당 유형을 사용 하는 &lt;a href=&quot;#an-example-c-library&quot;&gt;작은 C 라이브러리&lt;/a&gt; 작성</target>
        </trans-unit>
        <trans-unit id="f8bac16106ed6664484181d68f9e9e2c0d62eff8" translate="yes" xml:space="preserve">
          <source>Create a multiplatform project</source>
          <target state="translated">멀티 플랫폼 프로젝트 만들기</target>
        </trans-unit>
        <trans-unit id="2f73cbc9bf1b400650fbc510b2136e4b0fb7ef43" translate="yes" xml:space="preserve">
          <source>Create a new &lt;strong&gt;Project&lt;/strong&gt; from &lt;strong&gt;File | New&lt;/strong&gt;. Select the &lt;strong&gt;Kotlin | JVM | IDEA&lt;/strong&gt; project type.</source>
          <target state="translated">&lt;strong&gt;파일&lt;/strong&gt; 에서 새 &lt;strong&gt;프로젝트&lt;/strong&gt; 작성 &lt;strong&gt;| 새로운&lt;/strong&gt; . 선택 &lt;strong&gt;코 틀린를 | JVM | 아이디어&lt;/strong&gt; 프로젝트 유형.</target>
        </trans-unit>
        <trans-unit id="b387fae1dfdbaa2ea552ee0308066b684262e697" translate="yes" xml:space="preserve">
          <source>Create a new Kotlin file in the the source directory.</source>
          <target state="translated">소스 디렉토리에 새로운 Kotlin 파일을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="57882f77e70fe59c570a816d7ed116d608827479" translate="yes" xml:space="preserve">
          <source>Create a new Kotlin file under the source folder. It can be named anything. Let's call it &lt;em&gt;app&lt;/em&gt;.</source>
          <target state="translated">소스 폴더 아래에 새 Kotlin 파일을 작성하십시오. 이름을 지정할 수 있습니다. 그것을 &lt;em&gt;app&lt;/em&gt; 이라고합시다 .</target>
        </trans-unit>
        <trans-unit id="7dc7bf6ec975c7332f080d5bffbe257a81f6266d" translate="yes" xml:space="preserve">
          <source>Create a shared &lt;a href=&quot;#creating-the-shared-module&quot;&gt;Kotlin library&lt;/a&gt;</source>
          <target state="translated">공유 &lt;a href=&quot;#creating-the-shared-module&quot;&gt;코 틀린 라이브러리&lt;/a&gt; 만들기</target>
        </trans-unit>
        <trans-unit id="abf824f59aeaebd4ab126c30d8dcc38b46c3bd06" translate="yes" xml:space="preserve">
          <source>Create a simple application in Kotlin that displays &lt;code&gt;&quot;Hello, World!&quot;&lt;/code&gt;. Using our favorite editor, we create a new file called &lt;em&gt;hello.kt&lt;/em&gt; with the following content:</source>
          <target state="translated">Kotlin에서 &lt;code&gt;&quot;Hello, World!&quot;&lt;/code&gt; 를 표시하는 간단한 애플리케이션을 만듭니다 . . 우리가 선호하는 편집기를 사용 하여 다음 내용으로 &lt;em&gt;hello.kt&lt;/em&gt; 라는 새 파일을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="6d119b3c47e86d3eaaaca2ef0d300a8de3a82225" translate="yes" xml:space="preserve">
          <source>Create a simple application in Kotlin that displays Hello, World!. Using our favorite editor, we create a new file called &lt;em&gt;hello.kt&lt;/em&gt; with the following:</source>
          <target state="translated">Hello, World!를 표시하는 간단한 응용 프로그램을 Kotlin에 작성하십시오. 자주 사용하는 편집기를 사용 하여 다음과 같이 &lt;em&gt;hello.kt&lt;/em&gt; 라는 새 파일을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="c779978cd15e80c7848b661b50b4266af84f18a4" translate="yes" xml:space="preserve">
          <source>Create a very short program and place it into a &lt;code&gt;use.kt&lt;/code&gt; :</source>
          <target state="translated">매우 짧은 프로그램을 만들고 넣 &lt;code&gt;use.kt&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c30901f8e79c07b650d392851dba5f23fb1e4456" translate="yes" xml:space="preserve">
          <source>Create an &lt;a href=&quot;#creating-an-android-project&quot;&gt;Android app&lt;/a&gt; with Android Studio</source>
          <target state="translated">Android Studio 로 &lt;a href=&quot;#creating-an-android-project&quot;&gt;Android 앱&lt;/a&gt; 만들기</target>
        </trans-unit>
        <trans-unit id="5e84dbedb577719bd125c54ef40abdfb18caa138" translate="yes" xml:space="preserve">
          <source>Create an &lt;a href=&quot;#creating-ios-application&quot;&gt;iOS app&lt;/a&gt; with Xcode</source>
          <target state="translated">Xcode 로 &lt;a href=&quot;#creating-ios-application&quot;&gt;iOS 앱&lt;/a&gt; 만들기</target>
        </trans-unit>
        <trans-unit id="8f3695b6eead8b2f6e57f919db3733e1f70392e9" translate="yes" xml:space="preserve">
          <source>Create an Xcode project with a &lt;code&gt;Podfile&lt;/code&gt; if you haven&amp;rsquo;t done so yet.</source>
          <target state="translated">아직 수행하지 않은 경우 &lt;code&gt;Podfile&lt;/code&gt; 로 Xcode 프로젝트를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="1463d730117525918b282d8206cb8ffa83e4537a" translate="yes" xml:space="preserve">
          <source>Create an application targeting JavaScript</source>
          <target state="translated">JavaScript를 대상으로하는 응용 프로그램 만들기</target>
        </trans-unit>
        <trans-unit id="1648d0d9b67ce2b50357a189a915a46fa547d0ef" translate="yes" xml:space="preserve">
          <source>Create an application targeting JavaScript with Gradle</source>
          <target state="translated">Gradle을 사용하여 JavaScript를 대상으로하는 응용 프로그램 만들기</target>
        </trans-unit>
        <trans-unit id="18ba7e7065e3dcb9ba93c8a9e3b13a98ea50ebd8" translate="yes" xml:space="preserve">
          <source>Create an application targeting JavaScript with Maven</source>
          <target state="translated">Maven으로 JavaScript를 대상으로하는 응용 프로그램 만들기</target>
        </trans-unit>
        <trans-unit id="ac85c5bda01593ca991759b66b287f966e68351d" translate="yes" xml:space="preserve">
          <source>Create binom.kt:</source>
          <target state="translated">binom.kt를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="1c1d92dcc20f0c1ec1acfbb5b63d8f8fe66b8a77" translate="yes" xml:space="preserve">
          <source>Create build files</source>
          <target state="translated">빌드 파일 생성</target>
        </trans-unit>
        <trans-unit id="50d92457de8171c2272682141ed3ce6d5941164e" translate="yes" xml:space="preserve">
          <source>Create worker object from a C pointer.</source>
          <target state="translated">C 포인터에서 작업자 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="82342befb4dc9d4f2413f39a5cbde7aac37af38c" translate="yes" xml:space="preserve">
          <source>CreateKStringFromNSString</source>
          <target state="translated">CreateKStringFromNSString</target>
        </trans-unit>
        <trans-unit id="7ca49c300be73c418fc5577ebd27e2cd69f8b483" translate="yes" xml:space="preserve">
          <source>CreateNSStringFromKString</source>
          <target state="translated">CreateNSStringFromKString</target>
        </trans-unit>
        <trans-unit id="315cfb026c2a8766a5484df8abc6e26cfd6d4809" translate="yes" xml:space="preserve">
          <source>Created a multiplatform library with platform-specific implementations.</source>
          <target state="translated">플랫폼 별 구현으로 멀티 플랫폼 라이브러리를 만들었습니다.</target>
        </trans-unit>
        <trans-unit id="4224f4dfbc20ac0e91a1d773cb41d957f88da4aa" translate="yes" xml:space="preserve">
          <source>Creates &lt;a href=&quot;-immutable-blob/index&quot;&gt;ImmutableBlob&lt;/a&gt; out of compile-time constant data.</source>
          <target state="translated">컴파일 타임 상수 데이터에서 &lt;a href=&quot;-immutable-blob/index&quot;&gt;ImmutableBlob&lt;/a&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="e0d1d5c171ef9d65eff0fd5c9bfb5cf74814693b" translate="yes" xml:space="preserve">
          <source>Creates &lt;a href=&quot;index&quot;&gt;StableRef&lt;/a&gt; from given raw value.</source>
          <target state="translated">주어진 raw 값으로부터 &lt;a href=&quot;index&quot;&gt;StableRef&lt;/a&gt; 를 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="7b9a4bb97bbfc99973b1aa315a7f78d86f0988d8" translate="yes" xml:space="preserve">
          <source>Creates CharProgression within the specified bounds of a closed range.</source>
          <target state="translated">닫힌 범위의 지정된 범위 내에서 CharProgression을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="392faa1c3395ace39b6913b1b1b4eed5aeadbad1" translate="yes" xml:space="preserve">
          <source>Creates IntProgression within the specified bounds of a closed range.</source>
          <target state="translated">닫힌 범위의 지정된 범위 내에서 IntProgression을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="15f2e3b12b03eb5b06da4f8d03d39734fa8c6056" translate="yes" xml:space="preserve">
          <source>Creates LongProgression within the specified bounds of a closed range.</source>
          <target state="translated">닫힌 범위의 지정된 범위 내에서 LongProgression을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="fdf50fffe43e1e3a46c66db9191eed61cbd353ff" translate="yes" xml:space="preserve">
          <source>Creates UIntProgression within the specified bounds of a closed range.</source>
          <target state="translated">닫힌 범위의 지정된 범위 내에서 UIntProgression을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="7c089a9eca19e55a01bc4b771249748bcfc9b208" translate="yes" xml:space="preserve">
          <source>Creates ULongProgression within the specified bounds of a closed range.</source>
          <target state="translated">닫힌 범위의 지정된 범위 내에서 ULongProgression을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="4c84030baeecf88c1119726bc9eb0f01cb1f9536" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;-continuation/index&quot;&gt;Continuation&lt;/a&gt; instance with the given &lt;a href=&quot;-continuation#kotlin.coroutines%24Continuation%28kotlin.coroutines.CoroutineContext%2C+kotlin.Function1%28%28kotlin.Result%28%28kotlin.coroutines.Continuation.T%29%29%2C+kotlin.Unit%29%29%29%2Fcontext&quot;&gt;context&lt;/a&gt; and implementation of &lt;a href=&quot;-continuation#kotlin.coroutines%24Continuation%28kotlin.coroutines.CoroutineContext%2C+kotlin.Function1%28%28kotlin.Result%28%28kotlin.coroutines.Continuation.T%29%29%2C+kotlin.Unit%29%29%29%2FresumeWith&quot;&gt;resumeWith&lt;/a&gt; method.</source>
          <target state="translated">작성 &lt;a href=&quot;-continuation/index&quot;&gt;연속&lt;/a&gt; 주어진 인스턴스와 &lt;a href=&quot;-continuation#kotlin.coroutines%24Continuation%28kotlin.coroutines.CoroutineContext%2C+kotlin.Function1%28%28kotlin.Result%28%28kotlin.coroutines.Continuation.T%29%29%2C+kotlin.Unit%29%29%29%2Fcontext&quot;&gt;컨텍스트&lt;/a&gt; 및 구현 &lt;a href=&quot;-continuation#kotlin.coroutines%24Continuation%28kotlin.coroutines.CoroutineContext%2C+kotlin.Function1%28%28kotlin.Result%28%28kotlin.coroutines.Continuation.T%29%29%2C+kotlin.Unit%29%29%29%2FresumeWith&quot;&gt;resumeWith의&lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="a8ef90590fa5eff0c66d6a5922afcddff5e954f3" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;-continuation/index&quot;&gt;Continuation&lt;/a&gt; instance with the given &lt;a href=&quot;-continuation#kotlin.coroutines%24Continuation(kotlin.coroutines.CoroutineContext,%20kotlin.Function1((kotlin.Result((kotlin.coroutines.Continuation.T)),%20kotlin.Unit)))/context&quot;&gt;context&lt;/a&gt; and implementation of &lt;a href=&quot;-continuation#kotlin.coroutines%24Continuation(kotlin.coroutines.CoroutineContext,%20kotlin.Function1((kotlin.Result((kotlin.coroutines.Continuation.T)),%20kotlin.Unit)))/resumeWith&quot;&gt;resumeWith&lt;/a&gt; method.</source>
          <target state="translated">주어진 &lt;a href=&quot;-continuation#kotlin.coroutines%24Continuation(kotlin.coroutines.CoroutineContext,%20kotlin.Function1((kotlin.Result((kotlin.coroutines.Continuation.T)),%20kotlin.Unit)))/context&quot;&gt;컨텍스트&lt;/a&gt; 와 &lt;a href=&quot;-continuation#kotlin.coroutines%24Continuation(kotlin.coroutines.CoroutineContext,%20kotlin.Function1((kotlin.Result((kotlin.coroutines.Continuation.T)),%20kotlin.Unit)))/resumeWith&quot;&gt;resumeWith&lt;/a&gt; 메서드 구현을 사용하여 &lt;a href=&quot;-continuation/index&quot;&gt;Continuation&lt;/a&gt; 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="ba94b1bdd91c782dc9cdc12f7574d762598cfcc5" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source from a collection to be used later with one of group-and-fold operations using the specified &lt;a href=&quot;grouping-by#kotlin.collections%24groupingBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupingBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupingBy.T%2C+kotlin.collections.groupingBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function to extract a key from each element.</source>
          <target state="translated">만듭니다 &lt;a href=&quot;-grouping/index&quot;&gt;그룹화&lt;/a&gt; 집합의 소스는 지정된 사용 기 및 배 조작 중 하나 이상에 사용될 &lt;a href=&quot;grouping-by#kotlin.collections%24groupingBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupingBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupingBy.T%2C+kotlin.collections.groupingBy.K%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 각 요소로부터 키를 추출하는 기능.</target>
        </trans-unit>
        <trans-unit id="2b1bffcefa589c4a240dd14ee7d99d6bddf7ffe0" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source from a collection to be used later with one of group-and-fold operations using the specified &lt;a href=&quot;grouping-by#kotlin.collections%24groupingBy(kotlin.collections.Iterable((kotlin.collections.groupingBy.T)),%20kotlin.Function1((kotlin.collections.groupingBy.T,%20kotlin.collections.groupingBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function to extract a key from each element.</source>
          <target state="translated">지정된 &lt;a href=&quot;grouping-by#kotlin.collections%24groupingBy(kotlin.collections.Iterable((kotlin.collections.groupingBy.T)),%20kotlin.Function1((kotlin.collections.groupingBy.T,%20kotlin.collections.groupingBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수를 사용하여 각 요소에서 키를 추출하는 그룹 및 접기 작업 중 하나와 함께 나중에 사용할 컬렉션에서 &lt;a href=&quot;-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="4d0971bc7c74ac638e282632e324bd4dadbe0100" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source from an array to be used later with one of group-and-fold operations using the specified &lt;a href=&quot;grouping-by#kotlin.collections%24groupingBy%28kotlin.Array%28%28kotlin.collections.groupingBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupingBy.T%2C+kotlin.collections.groupingBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function to extract a key from each element.</source>
          <target state="translated">지정된 &lt;a href=&quot;grouping-by#kotlin.collections%24groupingBy%28kotlin.Array%28%28kotlin.collections.groupingBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupingBy.T%2C+kotlin.collections.groupingBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수를 사용하여 각 요소에서 키를 추출하기 위해 나중에 &lt;a href=&quot;-grouping/index&quot;&gt;그룹화&lt;/a&gt; 및 접기 작업 중 하나와 함께 사용할 그룹화 소스를 배열에서 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="d745f17626a25d6edd8179a0ce5f899a8111d92b" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source from an array to be used later with one of group-and-fold operations using the specified &lt;a href=&quot;grouping-by#kotlin.collections%24groupingBy(kotlin.Array((kotlin.collections.groupingBy.T)),%20kotlin.Function1((kotlin.collections.groupingBy.T,%20kotlin.collections.groupingBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function to extract a key from each element.</source>
          <target state="translated">지정된 &lt;a href=&quot;grouping-by#kotlin.collections%24groupingBy(kotlin.Array((kotlin.collections.groupingBy.T)),%20kotlin.Function1((kotlin.collections.groupingBy.T,%20kotlin.collections.groupingBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수를 사용하여 각 요소에서 키를 추출하는 그룹 및 접기 작업 중 하나와 함께 나중에 사용할 배열에서 &lt;a href=&quot;-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="a3f4e14b5e37d8b64a4cd1436d4ade3c1b62a298" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;-k-type/index#kotlin.reflect.KType&quot;&gt;KType&lt;/a&gt; instance with the given classifier, type arguments, nullability and annotations. If the number of passed type arguments is not equal to the total number of type parameters of a classifier, an exception is thrown. If any of the arguments does not satisfy the bounds of the corresponding type parameter, an exception is thrown.</source>
          <target state="translated">지정된 분류 자, 형식 인수, Null 허용 및 주석을 사용 하여 &lt;a href=&quot;-k-type/index#kotlin.reflect.KType&quot;&gt;KType&lt;/a&gt; 인스턴스를 만듭니다 . 전달 된 유형 인수의 수가 분류 자의 총 유형 매개 변수 수와 같지 않으면 예외가 발생합니다. 인수 중 하나라도 해당 유형 매개 변수의 경계를 만족하지 않으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="88ff334054686344d29f805df71cf51ae383b143" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../-grouping/index&quot;&gt;Grouping&lt;/a&gt; source from a collection to be used later with one of group-and-fold operations using the specified &lt;a href=&quot;../grouping-by#kotlin.collections%24groupingBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupingBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupingBy.T%2C+kotlin.collections.groupingBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function to extract a key from each element.</source>
          <target state="translated">만듭니다 &lt;a href=&quot;../-grouping/index&quot;&gt;그룹화&lt;/a&gt; 집합의 소스는 지정된 사용 기 및 배 조작 중 하나 이상에 사용될 &lt;a href=&quot;../grouping-by#kotlin.collections%24groupingBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupingBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupingBy.T%2C+kotlin.collections.groupingBy.K%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 각 요소로부터 키를 추출하는 기능.</target>
        </trans-unit>
        <trans-unit id="6bb527eca027016032226c535d07e9319e6305a0" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../-grouping/index&quot;&gt;Grouping&lt;/a&gt; source from a collection to be used later with one of group-and-fold operations using the specified &lt;a href=&quot;../grouping-by#kotlin.collections%24groupingBy(kotlin.collections.Iterable((kotlin.collections.groupingBy.T)),%20kotlin.Function1((kotlin.collections.groupingBy.T,%20kotlin.collections.groupingBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function to extract a key from each element.</source>
          <target state="translated">지정된 &lt;a href=&quot;../grouping-by#kotlin.collections%24groupingBy(kotlin.collections.Iterable((kotlin.collections.groupingBy.T)),%20kotlin.Function1((kotlin.collections.groupingBy.T,%20kotlin.collections.groupingBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수를 사용하여 각 요소에서 키를 추출하는 그룹 및 접기 작업 중 하나와 함께 나중에 사용할 컬렉션에서 &lt;a href=&quot;../-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="e4b9b8ba22196e6cd2c4310f7c529ba4c4b43f99" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../-k-type/index#kotlin.reflect.KType&quot;&gt;KType&lt;/a&gt; instance with the given classifier, type arguments, nullability and annotations. If the number of passed type arguments is not equal to the total number of type parameters of a classifier, an exception is thrown. If any of the arguments does not satisfy the bounds of the corresponding type parameter, an exception is thrown.</source>
          <target state="translated">지정된 분류 자, 형식 인수, Null 허용 및 주석을 사용 하여 &lt;a href=&quot;../-k-type/index#kotlin.reflect.KType&quot;&gt;KType&lt;/a&gt; 인스턴스를 만듭니다 . 전달 된 유형 인수의 수가 분류 자의 총 유형 매개 변수 수와 같지 않으면 예외가 발생합니다. 인수 중 하나라도 해당 유형 매개 변수의 경계를 만족하지 않으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a5e812ea209a1a00f4719b1ad0e484ea9c11f8b9" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../../kotlin.collections/-grouping/index&quot;&gt;Grouping&lt;/a&gt; source from a char sequence to be used later with one of group-and-fold operations using the specified &lt;a href=&quot;../../kotlin.text/grouping-by#kotlin.text%24groupingBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupingBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function to extract a key from each character.</source>
          <target state="translated">지정된 &lt;a href=&quot;../../kotlin.text/grouping-by#kotlin.text%24groupingBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupingBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수를 사용하여 각 문자에서 키를 추출하기 위해 나중에 문자 &lt;a href=&quot;../../kotlin.collections/-grouping/index&quot;&gt;그룹&lt;/a&gt; 에서 그룹화 소스를 작성 하여 그룹화 및 접기 조작 중 하나와 함께 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="f806bce82bdc41e241c077a0cca53099f2c8f846" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../../kotlin.collections/-grouping/index&quot;&gt;Grouping&lt;/a&gt; source from a char sequence to be used later with one of group-and-fold operations using the specified &lt;a href=&quot;../../kotlin.text/grouping-by#kotlin.text%24groupingBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupingBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function to extract a key from each character.</source>
          <target state="translated">지정된 &lt;a href=&quot;../../kotlin.text/grouping-by#kotlin.text%24groupingBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupingBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수를 사용하여 각 문자에서 키를 추출하는 그룹 및 접기 작업 중 하나와 함께 나중에 사용할 문자 시퀀스에서 &lt;a href=&quot;../../kotlin.collections/-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="a0a971debee1619358d0b369c4986a60b28fd19e" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../../kotlin.collections/-grouping/index&quot;&gt;Grouping&lt;/a&gt; source from a char sequence to be used later with one of group-and-fold operations using the specified &lt;a href=&quot;../grouping-by#kotlin.text%24groupingBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupingBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function to extract a key from each character.</source>
          <target state="translated">지정된 &lt;a href=&quot;../grouping-by#kotlin.text%24groupingBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupingBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수를 사용하여 각 문자에서 키를 추출하기 위해 나중에 문자 &lt;a href=&quot;../../kotlin.collections/-grouping/index&quot;&gt;그룹&lt;/a&gt; 에서 그룹화 소스를 작성 하여 그룹화 및 접기 조작 중 하나와 함께 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="632644fee7043abedd2ea4340d922e27820ae53a" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../../kotlin.collections/-grouping/index&quot;&gt;Grouping&lt;/a&gt; source from a char sequence to be used later with one of group-and-fold operations using the specified &lt;a href=&quot;../grouping-by#kotlin.text%24groupingBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupingBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function to extract a key from each character.</source>
          <target state="translated">지정된 &lt;a href=&quot;../grouping-by#kotlin.text%24groupingBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupingBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수를 사용하여 각 문자에서 키를 추출하는 그룹 및 접기 작업 중 하나와 함께 나중에 사용할 문자 시퀀스에서 &lt;a href=&quot;../../kotlin.collections/-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="cafe50bd430c526f2a334c126cfcfab30af3bccb" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../../kotlin.collections/-grouping/index&quot;&gt;Grouping&lt;/a&gt; source from a collection to be used later with one of group-and-fold operations using the specified &lt;a href=&quot;../../kotlin.collections/grouping-by#kotlin.collections%24groupingBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupingBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupingBy.T%2C+kotlin.collections.groupingBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function to extract a key from each element.</source>
          <target state="translated">만듭니다 &lt;a href=&quot;../../kotlin.collections/-grouping/index&quot;&gt;그룹화&lt;/a&gt; 집합의 소스는 지정된 사용 기 및 배 조작 중 하나 이상에 사용될 &lt;a href=&quot;../../kotlin.collections/grouping-by#kotlin.collections%24groupingBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupingBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupingBy.T%2C+kotlin.collections.groupingBy.K%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 각 요소로부터 키를 추출하는 기능.</target>
        </trans-unit>
        <trans-unit id="d836473fdeef37ac8f08534e57e57cda7db4c924" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../../kotlin.collections/-grouping/index&quot;&gt;Grouping&lt;/a&gt; source from a collection to be used later with one of group-and-fold operations using the specified &lt;a href=&quot;../../kotlin.collections/grouping-by#kotlin.collections%24groupingBy(kotlin.collections.Iterable((kotlin.collections.groupingBy.T)),%20kotlin.Function1((kotlin.collections.groupingBy.T,%20kotlin.collections.groupingBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function to extract a key from each element.</source>
          <target state="translated">지정된 &lt;a href=&quot;../../kotlin.collections/grouping-by#kotlin.collections%24groupingBy(kotlin.collections.Iterable((kotlin.collections.groupingBy.T)),%20kotlin.Function1((kotlin.collections.groupingBy.T,%20kotlin.collections.groupingBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수를 사용하여 각 요소에서 키를 추출하는 그룹 및 접기 작업 중 하나와 함께 나중에 사용할 컬렉션에서 &lt;a href=&quot;../../kotlin.collections/-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="3db92230190e30d124d98779dae31257b4e8c7f1" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../../kotlin.collections/-grouping/index&quot;&gt;Grouping&lt;/a&gt; source from a sequence to be used later with one of group-and-fold operations using the specified &lt;a href=&quot;../grouping-by#kotlin.sequences%24groupingBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupingBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupingBy.T%2C+kotlin.sequences.groupingBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function to extract a key from each element.</source>
          <target state="translated">만듭니다 &lt;a href=&quot;../../kotlin.collections/-grouping/index&quot;&gt;그룹화&lt;/a&gt; 시퀀스에서 소스 지정하여 그룹과 배 조작 중 하나 이상에 사용될 &lt;a href=&quot;../grouping-by#kotlin.sequences%24groupingBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupingBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupingBy.T%2C+kotlin.sequences.groupingBy.K%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 각 요소로부터 키를 추출하는 기능.</target>
        </trans-unit>
        <trans-unit id="65f57bc1d39644a2d28912ce431df82aa3a559dd" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../../kotlin.collections/-grouping/index&quot;&gt;Grouping&lt;/a&gt; source from a sequence to be used later with one of group-and-fold operations using the specified &lt;a href=&quot;../grouping-by#kotlin.sequences%24groupingBy(kotlin.sequences.Sequence((kotlin.sequences.groupingBy.T)),%20kotlin.Function1((kotlin.sequences.groupingBy.T,%20kotlin.sequences.groupingBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function to extract a key from each element.</source>
          <target state="translated">지정된 &lt;a href=&quot;../grouping-by#kotlin.sequences%24groupingBy(kotlin.sequences.Sequence((kotlin.sequences.groupingBy.T)),%20kotlin.Function1((kotlin.sequences.groupingBy.T,%20kotlin.sequences.groupingBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수를 사용하여 각 요소에서 키를 추출하는 그룹 및 접기 작업 중 하나로 나중에 사용할 시퀀스에서 &lt;a href=&quot;../../kotlin.collections/-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="b9ea2c106ac07df64166bad97ff929d5ae8c7dc6" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../../kotlin.collections/-grouping/index&quot;&gt;Grouping&lt;/a&gt; source from an array to be used later with one of group-and-fold operations using the specified &lt;a href=&quot;../../kotlin.collections/grouping-by#kotlin.collections%24groupingBy%28kotlin.Array%28%28kotlin.collections.groupingBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupingBy.T%2C+kotlin.collections.groupingBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function to extract a key from each element.</source>
          <target state="translated">지정된 &lt;a href=&quot;../../kotlin.collections/grouping-by#kotlin.collections%24groupingBy%28kotlin.Array%28%28kotlin.collections.groupingBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupingBy.T%2C+kotlin.collections.groupingBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수를 사용하여 각 요소에서 키를 추출하기 위해 나중에 &lt;a href=&quot;../../kotlin.collections/-grouping/index&quot;&gt;그룹화&lt;/a&gt; 및 접기 작업 중 하나와 함께 사용할 그룹화 소스를 배열에서 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="d6f00ac5accc5dd283634f4721f5e19adc789a3e" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../../kotlin.collections/-grouping/index&quot;&gt;Grouping&lt;/a&gt; source from an array to be used later with one of group-and-fold operations using the specified &lt;a href=&quot;../../kotlin.collections/grouping-by#kotlin.collections%24groupingBy(kotlin.Array((kotlin.collections.groupingBy.T)),%20kotlin.Function1((kotlin.collections.groupingBy.T,%20kotlin.collections.groupingBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function to extract a key from each element.</source>
          <target state="translated">지정된 &lt;a href=&quot;../../kotlin.collections/grouping-by#kotlin.collections%24groupingBy(kotlin.Array((kotlin.collections.groupingBy.T)),%20kotlin.Function1((kotlin.collections.groupingBy.T,%20kotlin.collections.groupingBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수를 사용하여 각 요소에서 키를 추출하는 그룹 및 접기 작업 중 하나와 함께 나중에 사용할 배열에서 &lt;a href=&quot;../../kotlin.collections/-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="60ec39f917e531e20fbc88bde8a3e31b7e22ba5c" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../../kotlin.sequences/-sequence/index&quot;&gt;Sequence&lt;/a&gt; instance that wraps the original array returning its elements when being iterated.</source>
          <target state="translated">반복 될 때 요소를 반환하는 원래 배열을 래핑 하는 &lt;a href=&quot;../../kotlin.sequences/-sequence/index&quot;&gt;Sequence&lt;/a&gt; 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="e81c2c23eb6ba0490d9985becedd2dcb998fd275" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../../kotlin.sequences/-sequence/index&quot;&gt;Sequence&lt;/a&gt; instance that wraps the original char sequence returning its characters when being iterated.</source>
          <target state="translated">반복 될 때 문자를 반환하는 원래 문자 시퀀스를 래핑 하는 &lt;a href=&quot;../../kotlin.sequences/-sequence/index&quot;&gt;Sequence&lt;/a&gt; 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="bd7df767db8fbb90f0bb139176e0861dc6a24a1a" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../../kotlin.sequences/-sequence/index&quot;&gt;Sequence&lt;/a&gt; instance that wraps the original collection returning its elements when being iterated.</source>
          <target state="translated">반복 될 때 요소를 반환하는 원래 컬렉션을 래핑 하는 &lt;a href=&quot;../../kotlin.sequences/-sequence/index&quot;&gt;Sequence&lt;/a&gt; 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="9cd2c5c33c0069fa021ae9691a39717fff8a6ad0" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../../kotlin.sequences/-sequence/index&quot;&gt;Sequence&lt;/a&gt; instance that wraps the original map returning its entries when being iterated.</source>
          <target state="translated">반복 될 때 원래 맵을 감싸서 해당 항목을 반환 하는 &lt;a href=&quot;../../kotlin.sequences/-sequence/index&quot;&gt;Sequence&lt;/a&gt; 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="739f6d05dc2bc3cd37228269cbeed28c3dfe3e9f" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../kotlin.collections/-grouping/index&quot;&gt;Grouping&lt;/a&gt; source from a char sequence to be used later with one of group-and-fold operations using the specified &lt;a href=&quot;grouping-by#kotlin.text%24groupingBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupingBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function to extract a key from each character.</source>
          <target state="translated">지정된 &lt;a href=&quot;grouping-by#kotlin.text%24groupingBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupingBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수를 사용하여 각 문자에서 키를 추출하기 위해 나중에 문자 &lt;a href=&quot;../kotlin.collections/-grouping/index&quot;&gt;그룹&lt;/a&gt; 에서 그룹화 소스를 작성 하여 그룹화 및 접기 조작 중 하나와 함께 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="fafc0b14952cc68931e6ad3960c48c6309102f6c" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../kotlin.collections/-grouping/index&quot;&gt;Grouping&lt;/a&gt; source from a char sequence to be used later with one of group-and-fold operations using the specified &lt;a href=&quot;grouping-by#kotlin.text%24groupingBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupingBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function to extract a key from each character.</source>
          <target state="translated">지정된 &lt;a href=&quot;grouping-by#kotlin.text%24groupingBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupingBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수를 사용하여 각 문자에서 키를 추출하는 그룹 및 접기 작업 중 하나와 함께 나중에 사용할 문자 시퀀스에서 &lt;a href=&quot;../kotlin.collections/-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="69aa1f5401745cb3c91d69636b630bee309942e4" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../kotlin.collections/-grouping/index&quot;&gt;Grouping&lt;/a&gt; source from a sequence to be used later with one of group-and-fold operations using the specified &lt;a href=&quot;grouping-by#kotlin.sequences%24groupingBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupingBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupingBy.T%2C+kotlin.sequences.groupingBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function to extract a key from each element.</source>
          <target state="translated">만듭니다 &lt;a href=&quot;../kotlin.collections/-grouping/index&quot;&gt;그룹화&lt;/a&gt; 시퀀스에서 소스 지정하여 그룹과 배 조작 중 하나 이상에 사용될 &lt;a href=&quot;grouping-by#kotlin.sequences%24groupingBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupingBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupingBy.T%2C+kotlin.sequences.groupingBy.K%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 각 요소로부터 키를 추출하는 기능.</target>
        </trans-unit>
        <trans-unit id="b96b48ac8629e7a48061db1777b83d5169185c21" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../kotlin.collections/-grouping/index&quot;&gt;Grouping&lt;/a&gt; source from a sequence to be used later with one of group-and-fold operations using the specified &lt;a href=&quot;grouping-by#kotlin.sequences%24groupingBy(kotlin.sequences.Sequence((kotlin.sequences.groupingBy.T)),%20kotlin.Function1((kotlin.sequences.groupingBy.T,%20kotlin.sequences.groupingBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function to extract a key from each element.</source>
          <target state="translated">지정된 &lt;a href=&quot;grouping-by#kotlin.sequences%24groupingBy(kotlin.sequences.Sequence((kotlin.sequences.groupingBy.T)),%20kotlin.Function1((kotlin.sequences.groupingBy.T,%20kotlin.sequences.groupingBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수를 사용하여 각 요소에서 키를 추출하는 그룹 및 접기 작업 중 하나로 나중에 사용할 시퀀스에서 &lt;a href=&quot;../kotlin.collections/-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="a915c44b780dc1f4be79e5778f5401133efe3afc" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../kotlin.reflect/-k-type/index#kotlin.reflect.KType&quot;&gt;KType&lt;/a&gt; instance with the given classifier, type arguments, nullability and annotations. If the number of passed type arguments is not equal to the total number of type parameters of a classifier, an exception is thrown. If any of the arguments does not satisfy the bounds of the corresponding type parameter, an exception is thrown.</source>
          <target state="translated">지정된 분류 자, 형식 인수, Null 허용 및 주석을 사용 하여 &lt;a href=&quot;../kotlin.reflect/-k-type/index#kotlin.reflect.KType&quot;&gt;KType&lt;/a&gt; 인스턴스를 만듭니다 . 전달 된 유형 인수의 수가 분류 자의 총 유형 매개 변수 수와 같지 않으면 예외가 발생합니다. 인수 중 하나라도 해당 유형 매개 변수의 경계를 만족하지 않으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2a8a102be327bb8334c4009d1453299a3f54a4c2" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../kotlin.sequences/-sequence/index&quot;&gt;Sequence&lt;/a&gt; instance that wraps the original array returning its elements when being iterated.</source>
          <target state="translated">반복 될 때 요소를 반환하는 원래 배열을 래핑 하는 &lt;a href=&quot;../kotlin.sequences/-sequence/index&quot;&gt;Sequence&lt;/a&gt; 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="662f9659933fe1bd73e7dad8d3993ef9307b8e65" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../kotlin.sequences/-sequence/index&quot;&gt;Sequence&lt;/a&gt; instance that wraps the original char sequence returning its characters when being iterated.</source>
          <target state="translated">반복 될 때 문자를 반환하는 원래 문자 시퀀스를 래핑 하는 &lt;a href=&quot;../kotlin.sequences/-sequence/index&quot;&gt;Sequence&lt;/a&gt; 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="518584979389799c3488317188a4b0257566e764" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../kotlin.sequences/-sequence/index&quot;&gt;Sequence&lt;/a&gt; instance that wraps the original collection returning its elements when being iterated.</source>
          <target state="translated">반복 될 때 요소를 반환하는 원래 컬렉션을 래핑 하는 &lt;a href=&quot;../kotlin.sequences/-sequence/index&quot;&gt;Sequence&lt;/a&gt; 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="04564311fa8813eda4e9ddb8cd9983d56c9cb852" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;../kotlin.sequences/-sequence/index&quot;&gt;Sequence&lt;/a&gt; instance that wraps the original map returning its entries when being iterated.</source>
          <target state="translated">반복 될 때 원래 맵을 감싸서 해당 항목을 반환 하는 &lt;a href=&quot;../kotlin.sequences/-sequence/index&quot;&gt;Sequence&lt;/a&gt; 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="b3e27671f8855843eb7b6d9fbe9f45137fabe0f9" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Random.html&quot;&gt;java.util.Random&lt;/a&gt; instance that uses the specified Kotlin Random generator as a randomness source.</source>
          <target state="translated">지정된 Kotlin Random 생성기를 임의성 소스로 사용 하는 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Random.html&quot;&gt;java.util.Random&lt;/a&gt; 인스턴스를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="04aa0979dc65350b0e4393b0c260c9c3c8a8d278" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Random.html&quot;&gt;java.util.Random&lt;/a&gt; instance that uses the specified Kotlin Random generator as a randomness source.</source>
          <target state="translated">지정된 Kotlin Random 생성기를 임의성 소스로 사용 하는 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Random.html&quot;&gt;java.util.Random&lt;/a&gt; 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="b55adce55a351382836196aab87ce56b0741713f" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;podspec&lt;/code&gt; task which generates a &lt;a href=&quot;https://guides.cocoapods.org/syntax/podspec.html&quot;&gt;Podspec&lt;/a&gt; file for the project.</source>
          <target state="translated">프로젝트에 대한 &lt;a href=&quot;https://guides.cocoapods.org/syntax/podspec.html&quot;&gt;Podspec&lt;/a&gt; 파일을 생성하는 &lt;code&gt;podspec&lt;/code&gt; 작업을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="c1e559e3d1943846f76b7787b09f45df25057ec8" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;podspec&lt;/code&gt; task which generates a &lt;a href=&quot;https://guides.cocoapods.org/syntax/podspec.html&quot;&gt;podspec&lt;/a&gt; file for the given project.</source>
          <target state="translated">지정된 프로젝트에 대한 &lt;a href=&quot;https://guides.cocoapods.org/syntax/podspec.html&quot;&gt;podspec&lt;/a&gt; 파일을 생성하는 &lt;code&gt;podspec&lt;/code&gt; 작업을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="b68185abe78fa3b870812a30241bfea5b174fd9a" translate="yes" xml:space="preserve">
          <source>Creates a Kotlin Random instance that uses the specified &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Random.html&quot;&gt;java.util.Random&lt;/a&gt; generator as a randomness source.</source>
          <target state="translated">지정된 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Random.html&quot;&gt;java.util.Random&lt;/a&gt; 생성기를 임의성 소스로 사용하는 Kotlin Random 인스턴스를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="4c86aeaaf3b49f52564a27a95193b5e11568c754" translate="yes" xml:space="preserve">
          <source>Creates a Kotlin Random instance that uses the specified &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Random.html&quot;&gt;java.util.Random&lt;/a&gt; generator as a randomness source.</source>
          <target state="translated">지정된 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Random.html&quot;&gt;java.util.Random&lt;/a&gt; 생성기를 임의성 소스로 사용하는 Kotlin Random 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="9991422186ea3d0131cdb6b1f0f14d0edfd8cb42" translate="yes" xml:space="preserve">
          <source>Creates a Sequence instance that wraps the original stream iterating through its elements.</source>
          <target state="translated">요소를 반복하는 원래 스트림을 래핑하는 Sequence 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="6906679f43bf3d500884626859023b6f86e5fafe" translate="yes" xml:space="preserve">
          <source>Creates a bit set of given &lt;a href=&quot;-init-#kotlin.native.BitSet%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Boolean%29%29%29%2Flength&quot;&gt;length&lt;/a&gt; filling elements using &lt;a href=&quot;-init-#kotlin.native.BitSet%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Boolean%29%29%29%2Finitializer&quot;&gt;initializer&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;-init-#kotlin.native.BitSet%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Boolean%29%29%29%2Finitializer&quot;&gt;이니셜 라이저를&lt;/a&gt; 사용하여 주어진 &lt;a href=&quot;-init-#kotlin.native.BitSet%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Boolean%29%29%29%2Flength&quot;&gt;길이의&lt;/a&gt; 채우는 요소 의 비트 세트를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="920b14faba2365caa7bf242e5de620912eb7bac5" translate="yes" xml:space="preserve">
          <source>Creates a bit set of given length filling elements using initializer</source>
          <target state="translated">이니셜 라이저를 사용하여 주어진 길이 채우기 요소의 비트 세트를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="b723f33c6209ecd11cc418a1ac7483c5dc6ccb2c" translate="yes" xml:space="preserve">
          <source>Creates a buffered input stream wrapping this stream.</source>
          <target state="translated">이 스트림을 랩하는 버퍼 입력 스트림을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="02e5f4a04aaf07e8f96bcda81f75ff0ee8894f1c" translate="yes" xml:space="preserve">
          <source>Creates a buffered output stream wrapping this stream.</source>
          <target state="translated">이 스트림을 랩하는 버퍼 된 출력 스트림을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="6d783f7e0b8cd1235d9036987f04d7ad311aa111" translate="yes" xml:space="preserve">
          <source>Creates a buffered reader on this input stream using UTF-8 or the specified &lt;a href=&quot;buffered-reader#kotlin.io%24bufferedReader%28java.io.InputStream%2C+java.nio.charset.Charset%29%2Fcharset&quot;&gt;charset&lt;/a&gt;.</source>
          <target state="translated">UTF-8 또는 지정된 &lt;a href=&quot;buffered-reader#kotlin.io%24bufferedReader%28java.io.InputStream%2C+java.nio.charset.Charset%29%2Fcharset&quot;&gt;charset&lt;/a&gt; 를 사용해이 입력 스트림에 버퍼 리더를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="3d530840bedb0f3b17e5bd24bd31af4bc508ea56" translate="yes" xml:space="preserve">
          <source>Creates a buffered reader on this input stream using UTF-8 or the specified &lt;a href=&quot;buffered-reader#kotlin.io%24bufferedReader(java.io.InputStream,%20java.nio.charset.Charset)/charset&quot;&gt;charset&lt;/a&gt;.</source>
          <target state="translated">UTF-8 또는 지정된 &lt;a href=&quot;buffered-reader#kotlin.io%24bufferedReader(java.io.InputStream,%20java.nio.charset.Charset)/charset&quot;&gt;charset를&lt;/a&gt; 사용하여이 입력 스트림에 버퍼링 된 판독기를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="ef54069b2ccbac62e608d68206571e1cad0ec2de" translate="yes" xml:space="preserve">
          <source>Creates a buffered writer on this output stream using UTF-8 or the specified &lt;a href=&quot;buffered-writer#kotlin.io%24bufferedWriter%28java.io.OutputStream%2C+java.nio.charset.Charset%29%2Fcharset&quot;&gt;charset&lt;/a&gt;.</source>
          <target state="translated">UTF-8 또는 지정된 &lt;a href=&quot;buffered-writer#kotlin.io%24bufferedWriter%28java.io.OutputStream%2C+java.nio.charset.Charset%29%2Fcharset&quot;&gt;charset&lt;/a&gt; 를 사용해이 출력 스트림에 버퍼 라이터를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="ec897d98a113e25b4e7bbc755380c714b15aa20f" translate="yes" xml:space="preserve">
          <source>Creates a buffered writer on this output stream using UTF-8 or the specified &lt;a href=&quot;buffered-writer#kotlin.io%24bufferedWriter(java.io.OutputStream,%20java.nio.charset.Charset)/charset&quot;&gt;charset&lt;/a&gt;.</source>
          <target state="translated">UTF-8 또는 지정된 &lt;a href=&quot;buffered-writer#kotlin.io%24bufferedWriter(java.io.OutputStream,%20java.nio.charset.Charset)/charset&quot;&gt;charset를&lt;/a&gt; 사용하여이 출력 스트림에 버퍼링 된 작성기를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="4ff09e485f42806596e1125038763ec44dd738a1" translate="yes" xml:space="preserve">
          <source>Creates a byte array of the specified &lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;, filled with random bytes.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.Int%29%2Fsize&quot;&gt;크기&lt;/a&gt; 의 바이트 배열을 임의의 바이트로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="8ba6e5b84125a75e0737f6c5cf98935eb1d16c1f" translate="yes" xml:space="preserve">
          <source>Creates a byte array of the specified &lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes(kotlin.Int)/size&quot;&gt;size&lt;/a&gt;, filled with random bytes.</source>
          <target state="translated">임의의 바이트로 채워진 지정된 &lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes(kotlin.Int)/size&quot;&gt;크기&lt;/a&gt; 의 바이트 배열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="0f60ac0ae603373b0e4a140b918c71b41f8429eb" translate="yes" xml:space="preserve">
          <source>Creates a byte array of the specified &lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;, filled with random bytes.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.Int%29%2Fsize&quot;&gt;크기&lt;/a&gt; 의 바이트 배열을 임의의 바이트로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="5f8d6a107494fa6f8fa52cd97a5bdd8a808d3ddd" translate="yes" xml:space="preserve">
          <source>Creates a byte array of the specified &lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes(kotlin.Int)/size&quot;&gt;size&lt;/a&gt;, filled with random bytes.</source>
          <target state="translated">임의의 바이트로 채워진 지정된 &lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes(kotlin.Int)/size&quot;&gt;크기&lt;/a&gt; 의 바이트 배열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="2752bb526d653dc1c635fb7f3f75f19fd7ee9890" translate="yes" xml:space="preserve">
          <source>Creates a comparator comparing values after the primary comparator defined them equal. It uses the &lt;a href=&quot;../../kotlin.comparisons/then-by#kotlin.comparisons%24thenBy%28kotlin.Comparator%28%28kotlin.comparisons.thenBy.T%29%29%2C+kotlin.Comparator%28%28kotlin.comparisons.thenBy.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.thenBy.T%2C+kotlin.comparisons.thenBy.K%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function to transform values and then compares them with the given &lt;a href=&quot;../../kotlin.comparisons/then-by#kotlin.comparisons%24thenBy%28kotlin.Comparator%28%28kotlin.comparisons.thenBy.T%29%29%2C+kotlin.Comparator%28%28kotlin.comparisons.thenBy.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.thenBy.T%2C+kotlin.comparisons.thenBy.K%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">1 차 비교기가 값을 동일하게 정의한 후 값을 비교하는 비교기를 작성합니다. &lt;a href=&quot;../../kotlin.comparisons/then-by#kotlin.comparisons%24thenBy%28kotlin.Comparator%28%28kotlin.comparisons.thenBy.T%29%29%2C+kotlin.Comparator%28%28kotlin.comparisons.thenBy.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.thenBy.T%2C+kotlin.comparisons.thenBy.K%29%29%29%2Fselector&quot;&gt;선택기&lt;/a&gt; 함수를 사용하여 값을 변환 한 다음 지정된 &lt;a href=&quot;../../kotlin.comparisons/then-by#kotlin.comparisons%24thenBy%28kotlin.Comparator%28%28kotlin.comparisons.thenBy.T%29%29%2C+kotlin.Comparator%28%28kotlin.comparisons.thenBy.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.thenBy.T%2C+kotlin.comparisons.thenBy.K%29%29%29%2Fcomparator&quot;&gt;비교기&lt;/a&gt; 와 비교 합니다.</target>
        </trans-unit>
        <trans-unit id="b7edbf9a75bd0a47037546d240fc701dcec399c5" translate="yes" xml:space="preserve">
          <source>Creates a comparator comparing values after the primary comparator defined them equal. It uses the &lt;a href=&quot;../../kotlin.comparisons/then-by#kotlin.comparisons%24thenBy(kotlin.Comparator((kotlin.comparisons.thenBy.T)),%20kotlin.Comparator((kotlin.comparisons.thenBy.K)),%20kotlin.Function1((kotlin.comparisons.thenBy.T,%20kotlin.comparisons.thenBy.K)))/selector&quot;&gt;selector&lt;/a&gt; function to transform values and then compares them with the given &lt;a href=&quot;../../kotlin.comparisons/then-by#kotlin.comparisons%24thenBy(kotlin.Comparator((kotlin.comparisons.thenBy.T)),%20kotlin.Comparator((kotlin.comparisons.thenBy.K)),%20kotlin.Function1((kotlin.comparisons.thenBy.T,%20kotlin.comparisons.thenBy.K)))/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">기본 비교기가 값을 동일하게 정의한 후 값을 비교하는 비교기를 만듭니다. &lt;a href=&quot;../../kotlin.comparisons/then-by#kotlin.comparisons%24thenBy(kotlin.Comparator((kotlin.comparisons.thenBy.T)),%20kotlin.Comparator((kotlin.comparisons.thenBy.K)),%20kotlin.Function1((kotlin.comparisons.thenBy.T,%20kotlin.comparisons.thenBy.K)))/selector&quot;&gt;선택기&lt;/a&gt; 함수를 사용하여 값을 변환 한 다음 주어진 &lt;a href=&quot;../../kotlin.comparisons/then-by#kotlin.comparisons%24thenBy(kotlin.Comparator((kotlin.comparisons.thenBy.T)),%20kotlin.Comparator((kotlin.comparisons.thenBy.K)),%20kotlin.Function1((kotlin.comparisons.thenBy.T,%20kotlin.comparisons.thenBy.K)))/comparator&quot;&gt;비교기&lt;/a&gt; 와 비교 합니다.</target>
        </trans-unit>
        <trans-unit id="437bbde90ef751a43e615307f4ecb1ca68343a88" translate="yes" xml:space="preserve">
          <source>Creates a comparator comparing values after the primary comparator defined them equal. It uses the &lt;a href=&quot;then-by#kotlin.comparisons%24thenBy%28kotlin.Comparator%28%28kotlin.comparisons.thenBy.T%29%29%2C+kotlin.Comparator%28%28kotlin.comparisons.thenBy.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.thenBy.T%2C+kotlin.comparisons.thenBy.K%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function to transform values and then compares them with the given &lt;a href=&quot;then-by#kotlin.comparisons%24thenBy%28kotlin.Comparator%28%28kotlin.comparisons.thenBy.T%29%29%2C+kotlin.Comparator%28%28kotlin.comparisons.thenBy.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.thenBy.T%2C+kotlin.comparisons.thenBy.K%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">1 차 비교기가 값을 동일하게 정의한 후 값을 비교하는 비교기를 작성합니다. &lt;a href=&quot;then-by#kotlin.comparisons%24thenBy%28kotlin.Comparator%28%28kotlin.comparisons.thenBy.T%29%29%2C+kotlin.Comparator%28%28kotlin.comparisons.thenBy.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.thenBy.T%2C+kotlin.comparisons.thenBy.K%29%29%29%2Fselector&quot;&gt;선택기&lt;/a&gt; 함수를 사용하여 값을 변환 한 다음 지정된 &lt;a href=&quot;then-by#kotlin.comparisons%24thenBy%28kotlin.Comparator%28%28kotlin.comparisons.thenBy.T%29%29%2C+kotlin.Comparator%28%28kotlin.comparisons.thenBy.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.thenBy.T%2C+kotlin.comparisons.thenBy.K%29%29%29%2Fcomparator&quot;&gt;비교기&lt;/a&gt; 와 비교 합니다.</target>
        </trans-unit>
        <trans-unit id="b247c790f0cd108524e9fcc7e12e28539b83a515" translate="yes" xml:space="preserve">
          <source>Creates a comparator comparing values after the primary comparator defined them equal. It uses the &lt;a href=&quot;then-by#kotlin.comparisons%24thenBy(kotlin.Comparator((kotlin.comparisons.thenBy.T)),%20kotlin.Comparator((kotlin.comparisons.thenBy.K)),%20kotlin.Function1((kotlin.comparisons.thenBy.T,%20kotlin.comparisons.thenBy.K)))/selector&quot;&gt;selector&lt;/a&gt; function to transform values and then compares them with the given &lt;a href=&quot;then-by#kotlin.comparisons%24thenBy(kotlin.Comparator((kotlin.comparisons.thenBy.T)),%20kotlin.Comparator((kotlin.comparisons.thenBy.K)),%20kotlin.Function1((kotlin.comparisons.thenBy.T,%20kotlin.comparisons.thenBy.K)))/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">기본 비교기가 값을 동일하게 정의한 후 값을 비교하는 비교기를 만듭니다. &lt;a href=&quot;then-by#kotlin.comparisons%24thenBy(kotlin.Comparator((kotlin.comparisons.thenBy.T)),%20kotlin.Comparator((kotlin.comparisons.thenBy.K)),%20kotlin.Function1((kotlin.comparisons.thenBy.T,%20kotlin.comparisons.thenBy.K)))/selector&quot;&gt;선택기&lt;/a&gt; 함수를 사용하여 값을 변환 한 다음 주어진 &lt;a href=&quot;then-by#kotlin.comparisons%24thenBy(kotlin.Comparator((kotlin.comparisons.thenBy.T)),%20kotlin.Comparator((kotlin.comparisons.thenBy.K)),%20kotlin.Function1((kotlin.comparisons.thenBy.T,%20kotlin.comparisons.thenBy.K)))/comparator&quot;&gt;비교기&lt;/a&gt; 와 비교 합니다.</target>
        </trans-unit>
        <trans-unit id="a9756e57bcd8b39843005d9a26a8e0cc125ce95b" translate="yes" xml:space="preserve">
          <source>Creates a comparator comparing values after the primary comparator defined them equal. It uses the function to transform value to a &lt;a href=&quot;../-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; instance for comparison.</source>
          <target state="translated">1 차 비교기가 값을 동일하게 정의한 후 값을 비교하는 비교기를 작성합니다. 이 함수를 사용하여 &lt;a href=&quot;../-comparable/index#kotlin.Comparable&quot;&gt;비교&lt;/a&gt; 를 위해 값을 Comparable 인스턴스 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="b221d975446e3f61da129a08f7c9a060501b2d65" translate="yes" xml:space="preserve">
          <source>Creates a comparator comparing values after the primary comparator defined them equal. It uses the function to transform value to a &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; instance for comparison.</source>
          <target state="translated">1 차 비교기가 값을 동일하게 정의한 후 값을 비교하는 비교기를 작성합니다. 이 함수를 사용하여 &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;비교&lt;/a&gt; 를 위해 값을 Comparable 인스턴스 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="d4b8c8bc72de8f382fbf1328b3ece8383ddba142" translate="yes" xml:space="preserve">
          <source>Creates a comparator using the &lt;a href=&quot;compare-by#kotlin.comparisons%24compareBy%28kotlin.Comparator%28%28kotlin.comparisons.compareBy.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.compareBy.T%2C+kotlin.comparisons.compareBy.K%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function to transform values being compared and then applying the specified &lt;a href=&quot;compare-by#kotlin.comparisons%24compareBy%28kotlin.Comparator%28%28kotlin.comparisons.compareBy.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.compareBy.T%2C+kotlin.comparisons.compareBy.K%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt; to compare transformed values.</source>
          <target state="translated">&lt;a href=&quot;compare-by#kotlin.comparisons%24compareBy%28kotlin.Comparator%28%28kotlin.comparisons.compareBy.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.compareBy.T%2C+kotlin.comparisons.compareBy.K%29%29%29%2Fselector&quot;&gt;선택기&lt;/a&gt; 함수를 사용하여 비교 중인 값을 변환 한 다음 지정된 &lt;a href=&quot;compare-by#kotlin.comparisons%24compareBy%28kotlin.Comparator%28%28kotlin.comparisons.compareBy.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.compareBy.T%2C+kotlin.comparisons.compareBy.K%29%29%29%2Fcomparator&quot;&gt;비교기&lt;/a&gt; 를 적용하여 변환 된 값을 비교 하는 비교기를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="f8a02c58f29088b5fd8565ee25fdf652184609a1" translate="yes" xml:space="preserve">
          <source>Creates a comparator using the &lt;a href=&quot;compare-by#kotlin.comparisons%24compareBy(kotlin.Comparator((kotlin.comparisons.compareBy.K)),%20kotlin.Function1((kotlin.comparisons.compareBy.T,%20kotlin.comparisons.compareBy.K)))/selector&quot;&gt;selector&lt;/a&gt; function to transform values being compared and then applying the specified &lt;a href=&quot;compare-by#kotlin.comparisons%24compareBy(kotlin.Comparator((kotlin.comparisons.compareBy.K)),%20kotlin.Function1((kotlin.comparisons.compareBy.T,%20kotlin.comparisons.compareBy.K)))/comparator&quot;&gt;comparator&lt;/a&gt; to compare transformed values.</source>
          <target state="translated">&lt;a href=&quot;compare-by#kotlin.comparisons%24compareBy(kotlin.Comparator((kotlin.comparisons.compareBy.K)),%20kotlin.Function1((kotlin.comparisons.compareBy.T,%20kotlin.comparisons.compareBy.K)))/selector&quot;&gt;선택기&lt;/a&gt; 함수를 사용하여 비교기를 만들어 비교 중인 값을 변환 한 다음 지정된 &lt;a href=&quot;compare-by#kotlin.comparisons%24compareBy(kotlin.Comparator((kotlin.comparisons.compareBy.K)),%20kotlin.Function1((kotlin.comparisons.compareBy.T,%20kotlin.comparisons.compareBy.K)))/comparator&quot;&gt;비교기&lt;/a&gt; 를 적용하여 변환 된 값을 비교합니다.</target>
        </trans-unit>
        <trans-unit id="bc0a7b339fb6fc2980f3b6df72a66efe1b459c19" translate="yes" xml:space="preserve">
          <source>Creates a comparator using the function to transform value to a &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; instance for comparison.</source>
          <target state="translated">&lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;비교할&lt;/a&gt; 함수를 사용하여 값을 Comparable 인스턴스 로 변환하는 비교기를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="4f464fbe2077e390d38f0ddfeb2adb488fcf7353" translate="yes" xml:space="preserve">
          <source>Creates a comparator using the primary comparator and function to calculate a result of comparison.</source>
          <target state="translated">기본 비교기와 함수를 사용하여 비교 결과를 계산하는 비교기를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="1f3e0c7c9159a90dfafa91fb49f54d483439a5dd" translate="yes" xml:space="preserve">
          <source>Creates a comparator using the sequence of functions to calculate a result of comparison. The functions are called sequentially, receive the given values &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; and return &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; objects. As soon as the &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; instances returned by a function for &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; values do not compare as equal, the result of that comparison is returned from the &lt;a href=&quot;../kotlin/-comparator/index#kotlin.Comparator&quot;&gt;Comparator&lt;/a&gt;.</source>
          <target state="translated">일련의 함수를 사용하여 비교 결과를 계산하는 비교기를 작성합니다. 함수는 순차적으로 호출되며 주어진 값 &lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 를 수신하고 &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; 객체를 반환 합니다. 곧만큼 &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;필적&lt;/a&gt; 하는 함수에 의해 리턴 인스턴스 및 &lt;code&gt;b&lt;/code&gt; 를 값이 동일하게 비교할 수없는, 그 비교 결과로부터 반환 &lt;a href=&quot;../kotlin/-comparator/index#kotlin.Comparator&quot;&gt;비교기&lt;/a&gt; . &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e64dbe5845aca2835b8fa31ada504da975f9839" translate="yes" xml:space="preserve">
          <source>Creates a contravariant projection of a given type, denoted by the &lt;code&gt;in&lt;/code&gt; modifier applied to a type. For example, in the type &lt;code&gt;MutableList&amp;lt;in Number&amp;gt;&lt;/code&gt;, &lt;code&gt;in Number&lt;/code&gt; is a contravariant projection of the type of class &lt;code&gt;Number&lt;/code&gt;.</source>
          <target state="translated">에 의해 표시된 소정의 타입의 투영 contravariant 생성 &lt;code&gt;in&lt;/code&gt; 개질제 유형에 적용한다. 예를 들어, 타입 &lt;code&gt;MutableList&amp;lt;in Number&amp;gt;&lt;/code&gt; , &lt;code&gt;in Number&lt;/code&gt; 클래스의 타입의 투영이다 contravariant &lt;code&gt;Number&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8dc7c1d079b3be8f599a56d30e59bab8ccaf8d6f" translate="yes" xml:space="preserve">
          <source>Creates a coroutine with receiver type &lt;a href=&quot;create-coroutine#R&quot;&gt;R&lt;/a&gt; and result type &lt;a href=&quot;create-coroutine#T&quot;&gt;T&lt;/a&gt;. This function creates a new, fresh instance of suspendable computation every time it is invoked.</source>
          <target state="translated">수신자 유형 &lt;a href=&quot;create-coroutine#R&quot;&gt;R&lt;/a&gt; 및 결과 유형 &lt;a href=&quot;create-coroutine#T&quot;&gt;T&lt;/a&gt; 로 코 루틴을 작성 합니다. 이 함수는 호출 할 때마다 새롭고 새로운 일시 중지 가능한 계산 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="c4ee94a21c96cc013e227089655f3d37d040410a" translate="yes" xml:space="preserve">
          <source>Creates a coroutine with receiver type &lt;a href=&quot;create-coroutine-unchecked#R&quot;&gt;R&lt;/a&gt; and result type &lt;a href=&quot;create-coroutine-unchecked#T&quot;&gt;T&lt;/a&gt;. This function creates a new, fresh instance of suspendable computation every time it is invoked.</source>
          <target state="translated">수신자 유형 &lt;a href=&quot;create-coroutine-unchecked#R&quot;&gt;R&lt;/a&gt; 및 결과 유형 &lt;a href=&quot;create-coroutine-unchecked#T&quot;&gt;T&lt;/a&gt; 로 코 루틴을 작성 합니다. 이 함수는 호출 할 때마다 새롭고 새로운 일시 중지 가능한 계산 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="edc97106bb8f7e4d9fdf4be7f626492af4def9b9" translate="yes" xml:space="preserve">
          <source>Creates a coroutine without a receiver and with result type &lt;a href=&quot;create-coroutine#T&quot;&gt;T&lt;/a&gt;. This function creates a new, fresh instance of suspendable computation every time it is invoked.</source>
          <target state="translated">수신자가없고 결과 유형이 &lt;a href=&quot;create-coroutine#T&quot;&gt;T 인&lt;/a&gt; 코 루틴을 작성합니다 . 이 함수는 호출 할 때마다 새롭고 새로운 일시 중지 가능한 계산 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="acd316b572376197b1cffba0505a12f5f05084e5" translate="yes" xml:space="preserve">
          <source>Creates a coroutine without receiver and with result type &lt;a href=&quot;create-coroutine#T&quot;&gt;T&lt;/a&gt;. This function creates a new, fresh instance of suspendable computation every time it is invoked.</source>
          <target state="translated">수신자가없고 결과 유형이 &lt;a href=&quot;create-coroutine#T&quot;&gt;T 인&lt;/a&gt; 코 루틴을 작성 합니다. 이 함수는 호출 할 때마다 새롭고 새로운 일시 중지 가능한 계산 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="cb203953494dbedb8d81f04bdf3c7dafc9226ca3" translate="yes" xml:space="preserve">
          <source>Creates a coroutine without receiver and with result type &lt;a href=&quot;create-coroutine-unchecked#T&quot;&gt;T&lt;/a&gt;. This function creates a new, fresh instance of suspendable computation every time it is invoked.</source>
          <target state="translated">수신자가없고 결과 유형이 &lt;a href=&quot;create-coroutine-unchecked#T&quot;&gt;T 인&lt;/a&gt; 코 루틴을 작성 합니다. 이 함수는 호출 할 때마다 새롭고 새로운 일시 중지 가능한 계산 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="9a1b8420f22fbe199c166e300125173dd2de04ca" translate="yes" xml:space="preserve">
          <source>Creates a covariant projection of a given type, denoted by the &lt;code&gt;out&lt;/code&gt; modifier applied to a type. For example, in the type &lt;code&gt;Array&amp;lt;out Number&amp;gt;&lt;/code&gt;, &lt;code&gt;out Number&lt;/code&gt; is a covariant projection of the type of class &lt;code&gt;Number&lt;/code&gt;.</source>
          <target state="translated">지정된 유형의 공변량 투영을 작성합니다 (유형에 적용된 &lt;code&gt;out&lt;/code&gt; 수정 자 표시) . 예를 들어, &lt;code&gt;Array&amp;lt;out Number&amp;gt;&lt;/code&gt; 유형 에서 &lt;code&gt;out Number&lt;/code&gt; 는 &lt;code&gt;Number&lt;/code&gt; 클래스 유형의 공변량 투영입니다 .</target>
        </trans-unit>
        <trans-unit id="4da2ba084cb71b747469ba21d7f73874da3efd5d" translate="yes" xml:space="preserve">
          <source>Creates a descending comparator comparing values after the primary comparator defined them equal. It uses the &lt;a href=&quot;../../kotlin.comparisons/then-by-descending#kotlin.comparisons%24thenByDescending%28kotlin.Comparator%28%28kotlin.comparisons.thenByDescending.T%29%29%2C+kotlin.Comparator%28%28kotlin.comparisons.thenByDescending.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.thenByDescending.T%2C+kotlin.comparisons.thenByDescending.K%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function to transform values and then compares them with the given &lt;a href=&quot;../../kotlin.comparisons/then-by-descending#kotlin.comparisons%24thenByDescending%28kotlin.Comparator%28%28kotlin.comparisons.thenByDescending.T%29%29%2C+kotlin.Comparator%28%28kotlin.comparisons.thenByDescending.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.thenByDescending.T%2C+kotlin.comparisons.thenByDescending.K%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">1 차 비교기가 값을 동일하게 정의한 후 값을 비교하는 내림차순 비교기를 작성합니다. &lt;a href=&quot;../../kotlin.comparisons/then-by-descending#kotlin.comparisons%24thenByDescending%28kotlin.Comparator%28%28kotlin.comparisons.thenByDescending.T%29%29%2C+kotlin.Comparator%28%28kotlin.comparisons.thenByDescending.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.thenByDescending.T%2C+kotlin.comparisons.thenByDescending.K%29%29%29%2Fselector&quot;&gt;선택기&lt;/a&gt; 함수를 사용하여 값을 변환 한 다음 지정된 &lt;a href=&quot;../../kotlin.comparisons/then-by-descending#kotlin.comparisons%24thenByDescending%28kotlin.Comparator%28%28kotlin.comparisons.thenByDescending.T%29%29%2C+kotlin.Comparator%28%28kotlin.comparisons.thenByDescending.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.thenByDescending.T%2C+kotlin.comparisons.thenByDescending.K%29%29%29%2Fcomparator&quot;&gt;비교기&lt;/a&gt; 와 비교 합니다.</target>
        </trans-unit>
        <trans-unit id="03ef2ad36b960a734046f758721a1bb5b91bb8f2" translate="yes" xml:space="preserve">
          <source>Creates a descending comparator comparing values after the primary comparator defined them equal. It uses the &lt;a href=&quot;../../kotlin.comparisons/then-by-descending#kotlin.comparisons%24thenByDescending(kotlin.Comparator((kotlin.comparisons.thenByDescending.T)),%20kotlin.Comparator((kotlin.comparisons.thenByDescending.K)),%20kotlin.Function1((kotlin.comparisons.thenByDescending.T,%20kotlin.comparisons.thenByDescending.K)))/selector&quot;&gt;selector&lt;/a&gt; function to transform values and then compares them with the given &lt;a href=&quot;../../kotlin.comparisons/then-by-descending#kotlin.comparisons%24thenByDescending(kotlin.Comparator((kotlin.comparisons.thenByDescending.T)),%20kotlin.Comparator((kotlin.comparisons.thenByDescending.K)),%20kotlin.Function1((kotlin.comparisons.thenByDescending.T,%20kotlin.comparisons.thenByDescending.K)))/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">기본 비교기가 값을 동일하게 정의한 후 값을 비교하는 내림차순 비교기를 만듭니다. &lt;a href=&quot;../../kotlin.comparisons/then-by-descending#kotlin.comparisons%24thenByDescending(kotlin.Comparator((kotlin.comparisons.thenByDescending.T)),%20kotlin.Comparator((kotlin.comparisons.thenByDescending.K)),%20kotlin.Function1((kotlin.comparisons.thenByDescending.T,%20kotlin.comparisons.thenByDescending.K)))/selector&quot;&gt;선택기&lt;/a&gt; 함수를 사용하여 값을 변환 한 다음 주어진 &lt;a href=&quot;../../kotlin.comparisons/then-by-descending#kotlin.comparisons%24thenByDescending(kotlin.Comparator((kotlin.comparisons.thenByDescending.T)),%20kotlin.Comparator((kotlin.comparisons.thenByDescending.K)),%20kotlin.Function1((kotlin.comparisons.thenByDescending.T,%20kotlin.comparisons.thenByDescending.K)))/comparator&quot;&gt;비교기&lt;/a&gt; 와 비교 합니다.</target>
        </trans-unit>
        <trans-unit id="d6a639896eb24d58cdbfc5289f33584eead8ea6b" translate="yes" xml:space="preserve">
          <source>Creates a descending comparator comparing values after the primary comparator defined them equal. It uses the &lt;a href=&quot;then-by-descending#kotlin.comparisons%24thenByDescending%28kotlin.Comparator%28%28kotlin.comparisons.thenByDescending.T%29%29%2C+kotlin.Comparator%28%28kotlin.comparisons.thenByDescending.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.thenByDescending.T%2C+kotlin.comparisons.thenByDescending.K%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function to transform values and then compares them with the given &lt;a href=&quot;then-by-descending#kotlin.comparisons%24thenByDescending%28kotlin.Comparator%28%28kotlin.comparisons.thenByDescending.T%29%29%2C+kotlin.Comparator%28%28kotlin.comparisons.thenByDescending.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.thenByDescending.T%2C+kotlin.comparisons.thenByDescending.K%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">1 차 비교기가 값을 동일하게 정의한 후 값을 비교하는 내림차순 비교기를 작성합니다. &lt;a href=&quot;then-by-descending#kotlin.comparisons%24thenByDescending%28kotlin.Comparator%28%28kotlin.comparisons.thenByDescending.T%29%29%2C+kotlin.Comparator%28%28kotlin.comparisons.thenByDescending.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.thenByDescending.T%2C+kotlin.comparisons.thenByDescending.K%29%29%29%2Fselector&quot;&gt;선택기&lt;/a&gt; 함수를 사용하여 값을 변환 한 다음 지정된 &lt;a href=&quot;then-by-descending#kotlin.comparisons%24thenByDescending%28kotlin.Comparator%28%28kotlin.comparisons.thenByDescending.T%29%29%2C+kotlin.Comparator%28%28kotlin.comparisons.thenByDescending.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.thenByDescending.T%2C+kotlin.comparisons.thenByDescending.K%29%29%29%2Fcomparator&quot;&gt;비교기&lt;/a&gt; 와 비교 합니다.</target>
        </trans-unit>
        <trans-unit id="db69e075b120e59a950b6018f2270bb04f6f422c" translate="yes" xml:space="preserve">
          <source>Creates a descending comparator comparing values after the primary comparator defined them equal. It uses the &lt;a href=&quot;then-by-descending#kotlin.comparisons%24thenByDescending(kotlin.Comparator((kotlin.comparisons.thenByDescending.T)),%20kotlin.Comparator((kotlin.comparisons.thenByDescending.K)),%20kotlin.Function1((kotlin.comparisons.thenByDescending.T,%20kotlin.comparisons.thenByDescending.K)))/selector&quot;&gt;selector&lt;/a&gt; function to transform values and then compares them with the given &lt;a href=&quot;then-by-descending#kotlin.comparisons%24thenByDescending(kotlin.Comparator((kotlin.comparisons.thenByDescending.T)),%20kotlin.Comparator((kotlin.comparisons.thenByDescending.K)),%20kotlin.Function1((kotlin.comparisons.thenByDescending.T,%20kotlin.comparisons.thenByDescending.K)))/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">기본 비교기가 값을 동일하게 정의한 후 값을 비교하는 내림차순 비교기를 만듭니다. &lt;a href=&quot;then-by-descending#kotlin.comparisons%24thenByDescending(kotlin.Comparator((kotlin.comparisons.thenByDescending.T)),%20kotlin.Comparator((kotlin.comparisons.thenByDescending.K)),%20kotlin.Function1((kotlin.comparisons.thenByDescending.T,%20kotlin.comparisons.thenByDescending.K)))/selector&quot;&gt;선택기&lt;/a&gt; 함수를 사용하여 값을 변환 한 다음 주어진 &lt;a href=&quot;then-by-descending#kotlin.comparisons%24thenByDescending(kotlin.Comparator((kotlin.comparisons.thenByDescending.T)),%20kotlin.Comparator((kotlin.comparisons.thenByDescending.K)),%20kotlin.Function1((kotlin.comparisons.thenByDescending.T,%20kotlin.comparisons.thenByDescending.K)))/comparator&quot;&gt;비교기&lt;/a&gt; 와 비교 합니다.</target>
        </trans-unit>
        <trans-unit id="08c1c1f6f84d7c518a34681936bed81333dbded3" translate="yes" xml:space="preserve">
          <source>Creates a descending comparator using the &lt;a href=&quot;compare-by-descending#kotlin.comparisons%24compareByDescending%28kotlin.Comparator%28%28kotlin.comparisons.compareByDescending.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.compareByDescending.T%2C+kotlin.comparisons.compareByDescending.K%29%29%29%2Fselector&quot;&gt;selector&lt;/a&gt; function to transform values being compared and then applying the specified &lt;a href=&quot;compare-by-descending#kotlin.comparisons%24compareByDescending%28kotlin.Comparator%28%28kotlin.comparisons.compareByDescending.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.compareByDescending.T%2C+kotlin.comparisons.compareByDescending.K%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt; to compare transformed values.</source>
          <target state="translated">&lt;a href=&quot;compare-by-descending#kotlin.comparisons%24compareByDescending%28kotlin.Comparator%28%28kotlin.comparisons.compareByDescending.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.compareByDescending.T%2C+kotlin.comparisons.compareByDescending.K%29%29%29%2Fselector&quot;&gt;선택기&lt;/a&gt; 함수를 사용하여 비교 중인 값을 변환 한 다음 지정된 &lt;a href=&quot;compare-by-descending#kotlin.comparisons%24compareByDescending%28kotlin.Comparator%28%28kotlin.comparisons.compareByDescending.K%29%29%2C+kotlin.Function1%28%28kotlin.comparisons.compareByDescending.T%2C+kotlin.comparisons.compareByDescending.K%29%29%29%2Fcomparator&quot;&gt;비교기&lt;/a&gt; 를 적용하여 변환 된 값을 비교하는 내림차순 비교기를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="2aa828bedbbfa343dac62850074c9d58994ef7b1" translate="yes" xml:space="preserve">
          <source>Creates a descending comparator using the &lt;a href=&quot;compare-by-descending#kotlin.comparisons%24compareByDescending(kotlin.Comparator((kotlin.comparisons.compareByDescending.K)),%20kotlin.Function1((kotlin.comparisons.compareByDescending.T,%20kotlin.comparisons.compareByDescending.K)))/selector&quot;&gt;selector&lt;/a&gt; function to transform values being compared and then applying the specified &lt;a href=&quot;compare-by-descending#kotlin.comparisons%24compareByDescending(kotlin.Comparator((kotlin.comparisons.compareByDescending.K)),%20kotlin.Function1((kotlin.comparisons.compareByDescending.T,%20kotlin.comparisons.compareByDescending.K)))/comparator&quot;&gt;comparator&lt;/a&gt; to compare transformed values.</source>
          <target state="translated">&lt;a href=&quot;compare-by-descending#kotlin.comparisons%24compareByDescending(kotlin.Comparator((kotlin.comparisons.compareByDescending.K)),%20kotlin.Function1((kotlin.comparisons.compareByDescending.T,%20kotlin.comparisons.compareByDescending.K)))/selector&quot;&gt;선택기&lt;/a&gt; 함수를 사용하여 내림차순 비교기를 만들어 비교 되는 값을 변환 한 다음 지정된 &lt;a href=&quot;compare-by-descending#kotlin.comparisons%24compareByDescending(kotlin.Comparator((kotlin.comparisons.compareByDescending.K)),%20kotlin.Function1((kotlin.comparisons.compareByDescending.T,%20kotlin.comparisons.compareByDescending.K)))/comparator&quot;&gt;비교기&lt;/a&gt; 를 적용하여 변환 된 값을 비교합니다.</target>
        </trans-unit>
        <trans-unit id="610f17be372bd8ff142c0de92b8592cdefbfb04e" translate="yes" xml:space="preserve">
          <source>Creates a descending comparator using the function to transform value to a &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; instance for comparison.</source>
          <target state="translated">비교를 위해 값을 &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; 인스턴스 로 변환하는 함수를 사용하여 내림차순 비교기를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="1169ca5b4d218df72e3d55f28b654a04e361d220" translate="yes" xml:space="preserve">
          <source>Creates a descending comparator using the primary comparator and the function to transform value to a &lt;a href=&quot;../-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; instance for comparison.</source>
          <target state="translated">기본 비교기와 &lt;a href=&quot;../-comparable/index#kotlin.Comparable&quot;&gt;비교&lt;/a&gt; 를 위해 값을 Comparable 인스턴스 로 변환하는 함수를 사용하여 내림차순 비교기를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="5e08e5191b05900d484b7a8df5b4407c0a747783" translate="yes" xml:space="preserve">
          <source>Creates a descending comparator using the primary comparator and the function to transform value to a &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; instance for comparison.</source>
          <target state="translated">기본 비교기와 &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;비교&lt;/a&gt; 를 위해 값을 Comparable 인스턴스 로 변환하는 함수를 사용하여 내림차순 비교기를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="21d14111c2592fb2d131db9d28b5b48ea47928bc" translate="yes" xml:space="preserve">
          <source>Creates a handle for given object.</source>
          <target state="translated">주어진 객체에 대한 핸들을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="5d2d90c73d7cc40d6b52756dec7e348fff94e85a" translate="yes" xml:space="preserve">
          <source>Creates a new array of the specified &lt;a href=&quot;-init-#kotlin.BooleanArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Boolean%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt;, where each element is calculated by calling the specified &lt;a href=&quot;-init-#kotlin.BooleanArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Boolean%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; function. The &lt;a href=&quot;-init-#kotlin.BooleanArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Boolean%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; function returns an array element given its index.</source>
          <target state="translated">지정된 &lt;a href=&quot;-init-#kotlin.BooleanArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Boolean%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; 함수를 호출하여 각 요소가 계산되는 지정된 &lt;a href=&quot;-init-#kotlin.BooleanArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Boolean%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; 의 새 배열을 작성합니다 . &lt;a href=&quot;-init-#kotlin.BooleanArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Boolean%29%29%29%2Finit&quot;&gt;초기화&lt;/a&gt; 함수 인덱스 주어진 배열 요소를 반환한다.</target>
        </trans-unit>
        <trans-unit id="3c23474a20cf9587b02e1ec5d6a4b830d14c566d" translate="yes" xml:space="preserve">
          <source>Creates a new array of the specified &lt;a href=&quot;-init-#kotlin.ByteArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Byte%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt;, where each element is calculated by calling the specified &lt;a href=&quot;-init-#kotlin.ByteArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Byte%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; function. The &lt;a href=&quot;-init-#kotlin.ByteArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Byte%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; function returns an array element given its index.</source>
          <target state="translated">지정된 &lt;a href=&quot;-init-#kotlin.ByteArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Byte%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; 함수를 호출하여 각 요소가 계산되는 지정된 &lt;a href=&quot;-init-#kotlin.ByteArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Byte%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; 의 새 배열을 작성합니다 . &lt;a href=&quot;-init-#kotlin.ByteArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Byte%29%29%29%2Finit&quot;&gt;초기화&lt;/a&gt; 함수 인덱스 주어진 배열 요소를 반환한다.</target>
        </trans-unit>
        <trans-unit id="933c6b4a4a7614e18952767e526443281baa544f" translate="yes" xml:space="preserve">
          <source>Creates a new array of the specified &lt;a href=&quot;-init-#kotlin.CharArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Char%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt;, where each element is calculated by calling the specified &lt;a href=&quot;-init-#kotlin.CharArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Char%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; function. The &lt;a href=&quot;-init-#kotlin.CharArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Char%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; function returns an array element given its index.</source>
          <target state="translated">지정된 &lt;a href=&quot;-init-#kotlin.CharArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Char%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; 함수를 호출하여 각 요소가 계산되는 지정된 &lt;a href=&quot;-init-#kotlin.CharArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Char%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; 의 새 배열을 작성합니다 . &lt;a href=&quot;-init-#kotlin.CharArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Char%29%29%29%2Finit&quot;&gt;초기화&lt;/a&gt; 함수 인덱스 주어진 배열 요소를 반환한다.</target>
        </trans-unit>
        <trans-unit id="0c3b3219ca36e88cb3e3e1af31bcf7641239e46c" translate="yes" xml:space="preserve">
          <source>Creates a new array of the specified &lt;a href=&quot;-init-#kotlin.DoubleArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Double%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt;, where each element is calculated by calling the specified &lt;a href=&quot;-init-#kotlin.DoubleArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Double%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; function. The &lt;a href=&quot;-init-#kotlin.DoubleArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Double%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; function returns an array element given its index.</source>
          <target state="translated">지정된 &lt;a href=&quot;-init-#kotlin.DoubleArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Double%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; 함수를 호출하여 각 요소가 계산되는 지정된 &lt;a href=&quot;-init-#kotlin.DoubleArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Double%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; 의 새 배열을 작성합니다 . &lt;a href=&quot;-init-#kotlin.DoubleArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Double%29%29%29%2Finit&quot;&gt;초기화&lt;/a&gt; 함수 인덱스 주어진 배열 요소를 반환한다.</target>
        </trans-unit>
        <trans-unit id="e8019861ff960363890abb4338f1fd5843f4f3b5" translate="yes" xml:space="preserve">
          <source>Creates a new array of the specified &lt;a href=&quot;-init-#kotlin.FloatArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Float%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt;, where each element is calculated by calling the specified &lt;a href=&quot;-init-#kotlin.FloatArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Float%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; function. The &lt;a href=&quot;-init-#kotlin.FloatArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Float%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; function returns an array element given its index.</source>
          <target state="translated">지정된 &lt;a href=&quot;-init-#kotlin.FloatArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Float%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; 함수를 호출하여 각 요소가 계산되는 지정된 &lt;a href=&quot;-init-#kotlin.FloatArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Float%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; 의 새 배열을 작성합니다 . &lt;a href=&quot;-init-#kotlin.FloatArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Float%29%29%29%2Finit&quot;&gt;초기화&lt;/a&gt; 함수 인덱스 주어진 배열 요소를 반환한다.</target>
        </trans-unit>
        <trans-unit id="fe06df7fbf2779edbacfb12f0514b9261d0f75fd" translate="yes" xml:space="preserve">
          <source>Creates a new array of the specified &lt;a href=&quot;-init-#kotlin.IntArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt;, where each element is calculated by calling the specified &lt;a href=&quot;-init-#kotlin.IntArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; function. The &lt;a href=&quot;-init-#kotlin.IntArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; function returns an array element given its index.</source>
          <target state="translated">지정된 &lt;a href=&quot;-init-#kotlin.IntArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; 함수를 호출하여 각 요소가 계산되는 지정된 &lt;a href=&quot;-init-#kotlin.IntArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; 의 새 배열을 작성합니다 . &lt;a href=&quot;-init-#kotlin.IntArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+%29%29%29%2Finit&quot;&gt;초기화&lt;/a&gt; 함수 인덱스 주어진 배열 요소를 반환한다.</target>
        </trans-unit>
        <trans-unit id="06b192055a27867e0b10405e0302a3df530b06ff" translate="yes" xml:space="preserve">
          <source>Creates a new array of the specified &lt;a href=&quot;-init-#kotlin.LongArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Long%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt;, where each element is calculated by calling the specified &lt;a href=&quot;-init-#kotlin.LongArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Long%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; function. The &lt;a href=&quot;-init-#kotlin.LongArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Long%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; function returns an array element given its index.</source>
          <target state="translated">지정된 &lt;a href=&quot;-init-#kotlin.LongArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Long%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; 함수를 호출하여 각 요소가 계산되는 지정된 &lt;a href=&quot;-init-#kotlin.LongArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Long%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; 의 새 배열을 작성합니다 . &lt;a href=&quot;-init-#kotlin.LongArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Long%29%29%29%2Finit&quot;&gt;초기화&lt;/a&gt; 함수 인덱스 주어진 배열 요소를 반환한다.</target>
        </trans-unit>
        <trans-unit id="ae244027d0eb770b84c4ed52b346b61f9e498283" translate="yes" xml:space="preserve">
          <source>Creates a new array of the specified &lt;a href=&quot;-init-#kotlin.ShortArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Short%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt;, where each element is calculated by calling the specified &lt;a href=&quot;-init-#kotlin.ShortArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Short%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; function. The &lt;a href=&quot;-init-#kotlin.ShortArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Short%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; function returns an array element given its index.</source>
          <target state="translated">지정된 &lt;a href=&quot;-init-#kotlin.ShortArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Short%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; 함수를 호출하여 각 요소가 계산되는 지정된 &lt;a href=&quot;-init-#kotlin.ShortArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Short%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; 의 새 배열을 작성합니다 . &lt;a href=&quot;-init-#kotlin.ShortArray%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Short%29%29%29%2Finit&quot;&gt;초기화&lt;/a&gt; 함수 인덱스 주어진 배열 요소를 반환한다.</target>
        </trans-unit>
        <trans-unit id="ccfd454cd5d06849324a9d1537ad9a48560d1c78" translate="yes" xml:space="preserve">
          <source>Creates a new array of the specified &lt;a href=&quot;-init-#kotlin.UByteArray%24%3Cinit%3E%28kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;, with all elements initialized to zero.</source>
          <target state="translated">모든 요소를 ​​0으로 초기화 하여 지정된 &lt;a href=&quot;-init-#kotlin.UByteArray%24%3Cinit%3E%28kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt; 의 새 배열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="a70d2b5c5e57695110218f82f2e7d2ddc9e12bd8" translate="yes" xml:space="preserve">
          <source>Creates a new array of the specified &lt;a href=&quot;-init-#kotlin.UIntArray%24%3Cinit%3E%28kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;, with all elements initialized to zero.</source>
          <target state="translated">모든 요소를 ​​0으로 초기화 하여 지정된 &lt;a href=&quot;-init-#kotlin.UIntArray%24%3Cinit%3E%28kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt; 의 새 배열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="7176e460555588c9dcec17c208148daf55a9c506" translate="yes" xml:space="preserve">
          <source>Creates a new array of the specified &lt;a href=&quot;-init-#kotlin.ULongArray%24%3Cinit%3E%28kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;, with all elements initialized to zero.</source>
          <target state="translated">모든 요소를 ​​0으로 초기화 하여 지정된 &lt;a href=&quot;-init-#kotlin.ULongArray%24%3Cinit%3E%28kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt; 의 새 배열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="f922396ad3988071f6ee7ac80056f45bddfc686f" translate="yes" xml:space="preserve">
          <source>Creates a new array of the specified &lt;a href=&quot;-init-#kotlin.UShortArray%24%3Cinit%3E%28kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;, with all elements initialized to zero.</source>
          <target state="translated">모든 요소를 ​​0으로 초기화 하여 지정된 &lt;a href=&quot;-init-#kotlin.UShortArray%24%3Cinit%3E%28kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt; 의 새 배열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="a05aba02571b41290a3fc9be2be455379023f82f" translate="yes" xml:space="preserve">
          <source>Creates a new array of the specified &lt;a href=&quot;-u-byte-array#kotlin%24UByteArray(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.UByte)))/size&quot;&gt;size&lt;/a&gt;, where each element is calculated by calling the specified &lt;a href=&quot;-u-byte-array#kotlin%24UByteArray(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.UByte)))/init&quot;&gt;init&lt;/a&gt; function.</source>
          <target state="translated">지정된 &lt;a href=&quot;-u-byte-array#kotlin%24UByteArray(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.UByte)))/init&quot;&gt;init&lt;/a&gt; 함수를 호출하여 각 요소가 계산되는 지정된 &lt;a href=&quot;-u-byte-array#kotlin%24UByteArray(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.UByte)))/size&quot;&gt;크기&lt;/a&gt; 의 새 배열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="1472adf1e43999a2601608bfd67d46c446c3dbab" translate="yes" xml:space="preserve">
          <source>Creates a new array of the specified &lt;a href=&quot;-u-int-array#kotlin%24UIntArray(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.UInt)))/size&quot;&gt;size&lt;/a&gt;, where each element is calculated by calling the specified &lt;a href=&quot;-u-int-array#kotlin%24UIntArray(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.UInt)))/init&quot;&gt;init&lt;/a&gt; function.</source>
          <target state="translated">지정된 &lt;a href=&quot;-u-int-array#kotlin%24UIntArray(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.UInt)))/init&quot;&gt;init&lt;/a&gt; 함수를 호출하여 각 요소가 계산되는 지정된 &lt;a href=&quot;-u-int-array#kotlin%24UIntArray(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.UInt)))/size&quot;&gt;크기&lt;/a&gt; 의 새 배열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="7a034646204e0702233297241c49fd2f9f58b817" translate="yes" xml:space="preserve">
          <source>Creates a new array of the specified &lt;a href=&quot;-u-long-array#kotlin%24ULongArray(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.ULong)))/size&quot;&gt;size&lt;/a&gt;, where each element is calculated by calling the specified &lt;a href=&quot;-u-long-array#kotlin%24ULongArray(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.ULong)))/init&quot;&gt;init&lt;/a&gt; function.</source>
          <target state="translated">지정된 &lt;a href=&quot;-u-long-array#kotlin%24ULongArray(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.ULong)))/init&quot;&gt;init&lt;/a&gt; 함수를 호출하여 각 요소가 계산되는 지정된 &lt;a href=&quot;-u-long-array#kotlin%24ULongArray(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.ULong)))/size&quot;&gt;크기&lt;/a&gt; 의 새 배열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="e2a6453dc551e72c83253228c4abcdfa4f30d492" translate="yes" xml:space="preserve">
          <source>Creates a new array of the specified &lt;a href=&quot;-u-short-array#kotlin%24UShortArray(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.UShort)))/size&quot;&gt;size&lt;/a&gt;, where each element is calculated by calling the specified &lt;a href=&quot;-u-short-array#kotlin%24UShortArray(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.UShort)))/init&quot;&gt;init&lt;/a&gt; function.</source>
          <target state="translated">지정된 &lt;a href=&quot;-u-short-array#kotlin%24UShortArray(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.UShort)))/init&quot;&gt;init&lt;/a&gt; 함수를 호출하여 각 요소가 계산되는 지정된 &lt;a href=&quot;-u-short-array#kotlin%24UShortArray(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.UShort)))/size&quot;&gt;크기&lt;/a&gt; 의 새 배열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="75393640cd8c1c22c6358e7367ee5306c2f93063" translate="yes" xml:space="preserve">
          <source>Creates a new array of the specified &lt;a href=&quot;size#kotlin.BooleanArray%24size&quot;&gt;size&lt;/a&gt;, with all elements initialized to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">모든 요소가 &lt;code&gt;false&lt;/code&gt; 로 초기화 된 상태 에서 지정된 &lt;a href=&quot;size#kotlin.BooleanArray%24size&quot;&gt;크기&lt;/a&gt; 의 새 배열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="13e7ab0c49f192cb2e943a12e20257581c7542d5" translate="yes" xml:space="preserve">
          <source>Creates a new array of the specified &lt;a href=&quot;size#kotlin.ByteArray%24size&quot;&gt;size&lt;/a&gt;, with all elements initialized to zero.</source>
          <target state="translated">모든 요소를 ​​0으로 초기화 하여 지정된 &lt;a href=&quot;size#kotlin.ByteArray%24size&quot;&gt;size&lt;/a&gt; 의 새 배열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="c0dabd1cc6ea0de12858ff543c3aba05246eb330" translate="yes" xml:space="preserve">
          <source>Creates a new array of the specified &lt;a href=&quot;size#kotlin.CharArray%24size&quot;&gt;size&lt;/a&gt;, with all elements initialized to null char (`\u0000').</source>
          <target state="translated">모든 요소가 null 문자 (`\ u0000 ')로 초기화되어 지정된 &lt;a href=&quot;size#kotlin.CharArray%24size&quot;&gt;크기&lt;/a&gt; 의 새 배열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="7f4299f721b7db0eee157952a011704a526e05aa" translate="yes" xml:space="preserve">
          <source>Creates a new array of the specified &lt;a href=&quot;size#kotlin.DoubleArray%24size&quot;&gt;size&lt;/a&gt;, with all elements initialized to zero.</source>
          <target state="translated">모든 요소를 ​​0으로 초기화 하여 지정된 &lt;a href=&quot;size#kotlin.DoubleArray%24size&quot;&gt;size&lt;/a&gt; 의 새 배열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="a26a1bb7c96a412b2951e14ef20a87abd6b42ae0" translate="yes" xml:space="preserve">
          <source>Creates a new array of the specified &lt;a href=&quot;size#kotlin.FloatArray%24size&quot;&gt;size&lt;/a&gt;, with all elements initialized to zero.</source>
          <target state="translated">모든 요소를 ​​0으로 초기화 하여 지정된 &lt;a href=&quot;size#kotlin.FloatArray%24size&quot;&gt;size&lt;/a&gt; 의 새 배열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="dec92119abac8b2c5d351ad30c73052bf09a104f" translate="yes" xml:space="preserve">
          <source>Creates a new array of the specified &lt;a href=&quot;size#kotlin.IntArray%24size&quot;&gt;size&lt;/a&gt;, with all elements initialized to zero.</source>
          <target state="translated">모든 요소를 ​​0으로 초기화 하여 지정된 &lt;a href=&quot;size#kotlin.IntArray%24size&quot;&gt;size&lt;/a&gt; 의 새 배열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="90493d5efba9db90072e431f7382eefc8c9d4a09" translate="yes" xml:space="preserve">
          <source>Creates a new array of the specified &lt;a href=&quot;size#kotlin.LongArray%24size&quot;&gt;size&lt;/a&gt;, with all elements initialized to zero.</source>
          <target state="translated">모든 요소를 ​​0으로 초기화 하여 지정된 &lt;a href=&quot;size#kotlin.LongArray%24size&quot;&gt;size&lt;/a&gt; 의 새 배열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="07ffaab1882dd6e54aea342ab264d1e69be560a8" translate="yes" xml:space="preserve">
          <source>Creates a new array of the specified &lt;a href=&quot;size#kotlin.ShortArray%24size&quot;&gt;size&lt;/a&gt;, with all elements initialized to zero.</source>
          <target state="translated">모든 요소를 ​​0으로 초기화 하여 지정된 &lt;a href=&quot;size#kotlin.ShortArray%24size&quot;&gt;size&lt;/a&gt; 의 새 배열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="76bc023939f68a17e3b1c026ad3f48cd7ed69b65" translate="yes" xml:space="preserve">
          <source>Creates a new array of the specified size, where each element is calculated by calling the specified init function.</source>
          <target state="translated">지정된 init 함수를 호출하여 각 요소가 계산되는 지정된 크기의 새 배열을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="dbadb31a11998eeb9ada0039f08ac9ee3232c35a" translate="yes" xml:space="preserve">
          <source>Creates a new array of the specified size, with all elements initialized to zero.</source>
          <target state="translated">모든 요소가 0으로 초기화 된 지정된 크기의 새 배열을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="cae0bc8c1497e7322fa2123b84e5aa0516225e1b" translate="yes" xml:space="preserve">
          <source>Creates a new array with the specified &lt;a href=&quot;-init-#kotlin.Array%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Array.T%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt;, where each element is calculated by calling the specified &lt;a href=&quot;-init-#kotlin.Array%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Array.T%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; function. The &lt;a href=&quot;-init-#kotlin.Array%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Array.T%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; function returns an array element given its index.</source>
          <target state="translated">지정된 &lt;a href=&quot;-init-#kotlin.Array%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Array.T%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; 로 새 배열을 작성합니다 . 여기서 지정된 &lt;a href=&quot;-init-#kotlin.Array%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Array.T%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; 함수를 호출하여 각 요소가 계산됩니다 . &lt;a href=&quot;-init-#kotlin.Array%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Array.T%29%29%29%2Finit&quot;&gt;초기화&lt;/a&gt; 함수 인덱스 주어진 배열 요소를 반환한다.</target>
        </trans-unit>
        <trans-unit id="d8c1e31a74afbd8fcbaa091e933c5de852e00044" translate="yes" xml:space="preserve">
          <source>Creates a new array with the specified size, where each element is calculated by calling the specified init function.</source>
          <target state="translated">지정된 init 함수를 호출하여 각 요소가 계산되는 지정된 크기의 새 배열을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="ab1ccd07c16963dfbbae2eca4187884ce731da23" translate="yes" xml:space="preserve">
          <source>Creates a new atomic reference pointing to given ref.</source>
          <target state="translated">주어진 ref를 가리키는 새로운 원자 참조를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="094002edba929b45302d78d7f130a3c3ae88cfe5" translate="yes" xml:space="preserve">
          <source>Creates a new byte input stream for the string.</source>
          <target state="translated">캐릭터 라인의 새로운 바이트 입력 스트림을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="773f6d9c07e374d95a9ac38b7e7a46a6d376f26f" translate="yes" xml:space="preserve">
          <source>Creates a new element with the specified &lt;a href=&quot;create-element#kotlin.dom%24createElement%28org.w3c.dom.Document%2C+kotlin.String%2C+kotlin.Function1%28%28org.w3c.dom.Element%2C+kotlin.Unit%29%29%29%2Fname&quot;&gt;name&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;create-element#kotlin.dom%24createElement%28org.w3c.dom.Document%2C+kotlin.String%2C+kotlin.Function1%28%28org.w3c.dom.Element%2C+kotlin.Unit%29%29%29%2Fname&quot;&gt;name&lt;/a&gt; 로 새로운 요소를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="9d52765fe7a92d72fb801dede60e1be121a6f6f8" translate="yes" xml:space="preserve">
          <source>Creates a new element with the specified &lt;a href=&quot;create-element#kotlin.dom%24createElement(org.w3c.dom.Document,%20kotlin.String,%20kotlin.Function1((org.w3c.dom.Element,%20kotlin.Unit)))/name&quot;&gt;name&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;create-element#kotlin.dom%24createElement(org.w3c.dom.Document,%20kotlin.String,%20kotlin.Function1((org.w3c.dom.Element,%20kotlin.Unit)))/name&quot;&gt;이름&lt;/a&gt; 으로 새 요소를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="7d35d6404436829492ca63a13901956680de4557" translate="yes" xml:space="preserve">
          <source>Creates a new empty file in the specified &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fdirectory&quot;&gt;directory&lt;/a&gt;, using the given &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fsuffix&quot;&gt;suffix&lt;/a&gt; to generate its name.</source>
          <target state="translated">주어진 &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fprefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fsuffix&quot;&gt;접미사&lt;/a&gt; 를 사용하여 지정된 &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fdirectory&quot;&gt;디렉토리&lt;/a&gt; 에 새 빈 파일을 작성하여 이름을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="279fe0ad30345620c74436b39c620a95e765b15f" translate="yes" xml:space="preserve">
          <source>Creates a new empty file in the specified &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile(kotlin.String,%20kotlin.String?,%20java.io.File?)/directory&quot;&gt;directory&lt;/a&gt;, using the given &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile(kotlin.String,%20kotlin.String?,%20java.io.File?)/prefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile(kotlin.String,%20kotlin.String?,%20java.io.File?)/suffix&quot;&gt;suffix&lt;/a&gt; to generate its name.</source>
          <target state="translated">지정된 &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile(kotlin.String,%20kotlin.String?,%20java.io.File?)/prefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile(kotlin.String,%20kotlin.String?,%20java.io.File?)/suffix&quot;&gt;접미사&lt;/a&gt; 를 사용하여 이름을 생성 하여 지정된 &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile(kotlin.String,%20kotlin.String?,%20java.io.File?)/directory&quot;&gt;디렉토리&lt;/a&gt; 에 새 빈 파일을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="3be915cdb55ee753492d95c64ae617555eb0c41f" translate="yes" xml:space="preserve">
          <source>Creates a new instance of Pair.</source>
          <target state="translated">Pair의 새 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="0bb4856bdc46ca7d1c7fbbeb2ff951b68bffff1c" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the &lt;a href=&quot;-lazy/index&quot;&gt;Lazy&lt;/a&gt; that is already initialized with the specified &lt;a href=&quot;lazy-of#kotlin%24lazyOf%28kotlin.lazyOf.T%29%2Fvalue&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;lazy-of#kotlin%24lazyOf%28kotlin.lazyOf.T%29%2Fvalue&quot;&gt;값으로&lt;/a&gt; 이미 초기화 된 &lt;a href=&quot;-lazy/index&quot;&gt;Lazy&lt;/a&gt; 의 새 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="0f2e8a4883f611d48ddc7adc044e75fd5583f004" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the &lt;a href=&quot;-lazy/index&quot;&gt;Lazy&lt;/a&gt; that is already initialized with the specified &lt;a href=&quot;lazy-of#kotlin%24lazyOf(kotlin.lazyOf.T)/value&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;lazy-of#kotlin%24lazyOf(kotlin.lazyOf.T)/value&quot;&gt;값으로&lt;/a&gt; 이미 초기화 된 &lt;a href=&quot;-lazy/index&quot;&gt;Lazy&lt;/a&gt; 의 새 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="8a0e78d2026fcad97ea8766fd09c93f7da71948b" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the &lt;a href=&quot;-lazy/index&quot;&gt;Lazy&lt;/a&gt; that uses the specified initialization function &lt;a href=&quot;lazy#kotlin%24lazy%28kotlin.Any%2C+kotlin.Function0%28%28kotlin.lazy.T%29%29%29%2Finitializer&quot;&gt;initializer&lt;/a&gt;.</source>
          <target state="translated">지정된 초기화 함수 &lt;a href=&quot;lazy#kotlin%24lazy%28kotlin.Any%2C+kotlin.Function0%28%28kotlin.lazy.T%29%29%29%2Finitializer&quot;&gt;initializer&lt;/a&gt; 를 사용하는 &lt;a href=&quot;-lazy/index&quot;&gt;Lazy&lt;/a&gt; 의 새로운 인스턴스를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="fb16c3f2717890b8f48f940a06e7912bdd69eb1d" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the &lt;a href=&quot;-lazy/index&quot;&gt;Lazy&lt;/a&gt; that uses the specified initialization function &lt;a href=&quot;lazy#kotlin%24lazy%28kotlin.LazyThreadSafetyMode%2C+kotlin.Function0%28%28kotlin.lazy.T%29%29%29%2Finitializer&quot;&gt;initializer&lt;/a&gt;.</source>
          <target state="translated">지정된 초기화 함수 &lt;a href=&quot;lazy#kotlin%24lazy%28kotlin.LazyThreadSafetyMode%2C+kotlin.Function0%28%28kotlin.lazy.T%29%29%29%2Finitializer&quot;&gt;initializer&lt;/a&gt; 를 사용하는 &lt;a href=&quot;-lazy/index&quot;&gt;Lazy&lt;/a&gt; 의 새로운 인스턴스를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="f74769f1056b34d7b009cb33f8dd18bd8109be82" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the &lt;a href=&quot;-lazy/index&quot;&gt;Lazy&lt;/a&gt; that uses the specified initialization function &lt;a href=&quot;lazy#kotlin%24lazy(kotlin.Any?,%20kotlin.Function0((kotlin.lazy.T)))/initializer&quot;&gt;initializer&lt;/a&gt;.</source>
          <target state="translated">지정된 초기화 함수 &lt;a href=&quot;lazy#kotlin%24lazy(kotlin.Any?,%20kotlin.Function0((kotlin.lazy.T)))/initializer&quot;&gt;initializer&lt;/a&gt; 를 사용하는 &lt;a href=&quot;-lazy/index&quot;&gt;Lazy&lt;/a&gt; 의 새 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="9c60f1f9bfa207b9cbadabd2c5309c895992670c" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the &lt;a href=&quot;-lazy/index&quot;&gt;Lazy&lt;/a&gt; that uses the specified initialization function &lt;a href=&quot;lazy#kotlin%24lazy(kotlin.LazyThreadSafetyMode,%20kotlin.Function0((kotlin.lazy.T)))/initializer&quot;&gt;initializer&lt;/a&gt;.</source>
          <target state="translated">지정된 초기화 함수 &lt;a href=&quot;lazy#kotlin%24lazy(kotlin.LazyThreadSafetyMode,%20kotlin.Function0((kotlin.lazy.T)))/initializer&quot;&gt;initializer&lt;/a&gt; 를 사용하는 &lt;a href=&quot;-lazy/index&quot;&gt;Lazy&lt;/a&gt; 의 새 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="1748d3db046b4bfe3e82a73f2e0b3c88bbe1d6bd" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the Lazy that uses the specified initialization function &lt;a href=&quot;lazy#kotlin%24lazy%28kotlin.Any%2C+kotlin.Function0%28%28kotlin.lazy.T%29%29%29%2Finitializer&quot;&gt;initializer&lt;/a&gt; and the default thread-safety mode LazyThreadSafetyMode.SYNCHRONIZED.</source>
          <target state="translated">지정된 초기화 함수 &lt;a href=&quot;lazy#kotlin%24lazy%28kotlin.Any%2C+kotlin.Function0%28%28kotlin.lazy.T%29%29%29%2Finitializer&quot;&gt;이니셜 라이저&lt;/a&gt; 와 기본 스레드 안전 모드 LazyThreadSafetyMode.SYNCHRONIZED 를 사용하는 Lazy의 새 인스턴스를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="767611255b8aff309580876f69b49470b6e8452c" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the Lazy that uses the specified initialization function &lt;a href=&quot;lazy#kotlin%24lazy%28kotlin.Function0%28%28kotlin.lazy.T%29%29%29%2Finitializer&quot;&gt;initializer&lt;/a&gt; and the default thread-safety mode LazyThreadSafetyMode.SYNCHRONIZED.</source>
          <target state="translated">지정된 초기화 함수 &lt;a href=&quot;lazy#kotlin%24lazy%28kotlin.Function0%28%28kotlin.lazy.T%29%29%29%2Finitializer&quot;&gt;이니셜 라이저&lt;/a&gt; 와 기본 스레드 안전 모드 LazyThreadSafetyMode.SYNCHRONIZED 를 사용하는 Lazy의 새 인스턴스를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="750254128ad78a40149d641d558a44da0327448a" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the Lazy that uses the specified initialization function &lt;a href=&quot;lazy#kotlin%24lazy%28kotlin.Function0%28%28kotlin.lazy.T%29%29%29%2Finitializer&quot;&gt;initializer&lt;/a&gt;.</source>
          <target state="translated">지정된 초기화 함수 &lt;a href=&quot;lazy#kotlin%24lazy%28kotlin.Function0%28%28kotlin.lazy.T%29%29%29%2Finitializer&quot;&gt;initializer&lt;/a&gt; 를 사용하는 Lazy의 새로운 인스턴스를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="abb6450a6dd93d10749fe7f87fca9df21370f835" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the Lazy that uses the specified initialization function &lt;a href=&quot;lazy#kotlin%24lazy%28kotlin.LazyThreadSafetyMode%2C+kotlin.Function0%28%28kotlin.lazy.T%29%29%29%2Finitializer&quot;&gt;initializer&lt;/a&gt; and thread-safety &lt;a href=&quot;lazy#kotlin%24lazy%28kotlin.LazyThreadSafetyMode%2C+kotlin.Function0%28%28kotlin.lazy.T%29%29%29%2Fmode&quot;&gt;mode&lt;/a&gt;.</source>
          <target state="translated">지정된 초기화 함수 &lt;a href=&quot;lazy#kotlin%24lazy%28kotlin.LazyThreadSafetyMode%2C+kotlin.Function0%28%28kotlin.lazy.T%29%29%29%2Finitializer&quot;&gt;이니셜 라이저&lt;/a&gt; 및 스레드 안전 &lt;a href=&quot;lazy#kotlin%24lazy%28kotlin.LazyThreadSafetyMode%2C+kotlin.Function0%28%28kotlin.lazy.T%29%29%29%2Fmode&quot;&gt;모드&lt;/a&gt; 를 사용하는 Lazy의 새 인스턴스를 작성 합니다 .</target>
        </trans-unit>
        <trans-unit id="da3653035faa4f1df658443cfe467f281729c8c8" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the Lazy that uses the specified initialization function &lt;a href=&quot;lazy#kotlin%24lazy(kotlin.Any?,%20kotlin.Function0((kotlin.lazy.T)))/initializer&quot;&gt;initializer&lt;/a&gt; and the default thread-safety mode LazyThreadSafetyMode.SYNCHRONIZED.</source>
          <target state="translated">지정된 초기화 함수 &lt;a href=&quot;lazy#kotlin%24lazy(kotlin.Any?,%20kotlin.Function0((kotlin.lazy.T)))/initializer&quot;&gt;이니셜 라이저&lt;/a&gt; 및 기본 스레드 안전 모드 LazyThreadSafetyMode.SYNCHRONIZED 를 사용하는 Lazy의 새 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="cabb285ff6d28bb9d1703a8d1fcc1e0e7530414f" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the Lazy that uses the specified initialization function &lt;a href=&quot;lazy#kotlin%24lazy(kotlin.Function0((kotlin.lazy.T)))/initializer&quot;&gt;initializer&lt;/a&gt; and the default thread-safety mode LazyThreadSafetyMode.SYNCHRONIZED.</source>
          <target state="translated">지정된 초기화 함수 &lt;a href=&quot;lazy#kotlin%24lazy(kotlin.Function0((kotlin.lazy.T)))/initializer&quot;&gt;이니셜 라이저&lt;/a&gt; 및 기본 스레드 안전 모드 LazyThreadSafetyMode.SYNCHRONIZED 를 사용하는 Lazy의 새 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="83f35e69107a7d90b3fa4912b13caa5a58f8cb4c" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the Lazy that uses the specified initialization function &lt;a href=&quot;lazy#kotlin%24lazy(kotlin.Function0((kotlin.lazy.T)))/initializer&quot;&gt;initializer&lt;/a&gt;.</source>
          <target state="translated">지정된 초기화 함수 &lt;a href=&quot;lazy#kotlin%24lazy(kotlin.Function0((kotlin.lazy.T)))/initializer&quot;&gt;initializer&lt;/a&gt; 를 사용하는 Lazy의 새 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="ca75d31b7baebd9679aa725048dc985511e0d1da" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the Lazy that uses the specified initialization function &lt;a href=&quot;lazy#kotlin%24lazy(kotlin.LazyThreadSafetyMode,%20kotlin.Function0((kotlin.lazy.T)))/initializer&quot;&gt;initializer&lt;/a&gt; and thread-safety &lt;a href=&quot;lazy#kotlin%24lazy(kotlin.LazyThreadSafetyMode,%20kotlin.Function0((kotlin.lazy.T)))/mode&quot;&gt;mode&lt;/a&gt;.</source>
          <target state="translated">지정된 초기화 함수 &lt;a href=&quot;lazy#kotlin%24lazy(kotlin.LazyThreadSafetyMode,%20kotlin.Function0((kotlin.lazy.T)))/initializer&quot;&gt;이니셜 라이저&lt;/a&gt; 및 스레드 안전 &lt;a href=&quot;lazy#kotlin%24lazy(kotlin.LazyThreadSafetyMode,%20kotlin.Function0((kotlin.lazy.T)))/mode&quot;&gt;모드&lt;/a&gt; 를 사용하는 Lazy의 새 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="f9a87da56e3512465442eda22db5206f792d34f4" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the class, calling a constructor which either has no parameters or all parameters of which are optional (see &lt;a href=&quot;../-k-parameter/is-optional&quot;&gt;KParameter.isOptional&lt;/a&gt;). If there are no or many such constructors, an exception is thrown.</source>
          <target state="translated">매개 변수가 없거나 모든 매개 변수가 선택 사항 인 생성자를 호출하여 클래스의 새 인스턴스를 만듭니다 ( &lt;a href=&quot;../-k-parameter/is-optional&quot;&gt;KParameter.isOptional&lt;/a&gt; 참조 ). 그러한 생성자가 없거나 많으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f1d80650e8afda8287b07d198e3a312a3254f30f" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the class, calling a constructor which either has no parameters or all parameters of which are optional (see &lt;a href=&quot;../-k-parameter/is-optional#kotlin.reflect.KParameter%24isOptional&quot;&gt;KParameter.isOptional&lt;/a&gt;). If there are no or many such constructors, an exception is thrown.</source>
          <target state="translated">매개 변수가 없거나 모든 매개 변수가 선택적인 생성자를 호출하여 클래스의 새 인스턴스를 작성합니다 ( &lt;a href=&quot;../-k-parameter/is-optional#kotlin.reflect.KParameter%24isOptional&quot;&gt;KParameter.isOptional&lt;/a&gt; 참조 ). 그러한 생성자가 없거나 많은 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="26eaaeb42b6f3002601777a736339f7218125396" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the class, calling a constructor which either has no parameters or all parameters of which are optional (see &lt;a href=&quot;../kotlin.reflect/-k-parameter/is-optional&quot;&gt;KParameter.isOptional&lt;/a&gt;). If there are no or many such constructors, an exception is thrown.</source>
          <target state="translated">매개 변수가 없거나 모든 매개 변수가 선택 사항 인 생성자를 호출하여 클래스의 새 인스턴스를 만듭니다 ( &lt;a href=&quot;../kotlin.reflect/-k-parameter/is-optional&quot;&gt;KParameter.isOptional&lt;/a&gt; 참조 ). 그러한 생성자가 없거나 많으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a142b06f24e7eba5f28eca5f74f822738d122242" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the class, calling a constructor which either has no parameters or all parameters of which are optional (see &lt;a href=&quot;../kotlin.reflect/-k-parameter/is-optional#kotlin.reflect.KParameter%24isOptional&quot;&gt;KParameter.isOptional&lt;/a&gt;). If there are no or many such constructors, an exception is thrown.</source>
          <target state="translated">매개 변수가 없거나 모든 매개 변수가 선택적인 생성자를 호출하여 클래스의 새 인스턴스를 작성합니다 ( &lt;a href=&quot;../kotlin.reflect/-k-parameter/is-optional#kotlin.reflect.KParameter%24isOptional&quot;&gt;KParameter.isOptional&lt;/a&gt; 참조 ). 그러한 생성자가 없거나 많은 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e0bf5fa296bf46b8e41a66d670c2d19066742c9b" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the specialized implementation of &lt;a href=&quot;-hash-set/index#kotlin.collections.HashSet&quot;&gt;HashSet&lt;/a&gt; with the specified String elements, which elements the keys as properties of JS object without hashing them.</source>
          <target state="translated">지정된 String 요소를 사용하여 &lt;a href=&quot;-hash-set/index#kotlin.collections.HashSet&quot;&gt;HashSet&lt;/a&gt; 의 특수화 된 구현의 새 인스턴스를 작성합니다.이 인스턴스 는 키를 해시하지 않고 JS 오브젝트의 특성으로 키를 요소 화합니다.</target>
        </trans-unit>
        <trans-unit id="bd1880abf2d59f480a7adc32aa9cb53106a72d0c" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the specialized implementation of &lt;a href=&quot;-linked-hash-set/index#kotlin.collections.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; with the specified String elements, which elements the keys as properties of JS object without hashing them.</source>
          <target state="translated">지정된 String 요소를 사용하여 &lt;a href=&quot;-linked-hash-set/index#kotlin.collections.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; 의 특수 구현의 새 인스턴스를 작성합니다.이 인스턴스 는 키를 해시하지 않고 JS 오브젝트의 특성으로 키를 요소 화합니다.</target>
        </trans-unit>
        <trans-unit id="96d12f3e0fb4f287852c93fc17e1e04e510f7384" translate="yes" xml:space="preserve">
          <source>Creates a new mutable list with the specified &lt;a href=&quot;-mutable-list#kotlin.collections%24MutableList%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.MutableList.T%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt;, where each element is calculated by calling the specified &lt;a href=&quot;-mutable-list#kotlin.collections%24MutableList%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.MutableList.T%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; function. The &lt;a href=&quot;-mutable-list#kotlin.collections%24MutableList%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.MutableList.T%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; function returns a list element given its index.</source>
          <target state="translated">지정된 &lt;a href=&quot;-mutable-list#kotlin.collections%24MutableList%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.MutableList.T%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; 로 새로운 가변 목록을 작성합니다 . 여기서 각 요소는 지정된 &lt;a href=&quot;-mutable-list#kotlin.collections%24MutableList%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.MutableList.T%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; 함수를 호출하여 계산됩니다 . &lt;a href=&quot;-mutable-list#kotlin.collections%24MutableList%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.MutableList.T%29%29%29%2Finit&quot;&gt;초기화&lt;/a&gt; 함수는 인덱스 주어진 목록의 요소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="33c6fcb9155cc194dbcbb94917fd729a3ef45d90" translate="yes" xml:space="preserve">
          <source>Creates a new mutable list with the specified &lt;a href=&quot;-mutable-list#kotlin.collections%24MutableList(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.MutableList.T)))/size&quot;&gt;size&lt;/a&gt;, where each element is calculated by calling the specified &lt;a href=&quot;-mutable-list#kotlin.collections%24MutableList(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.MutableList.T)))/init&quot;&gt;init&lt;/a&gt; function.</source>
          <target state="translated">지정된 &lt;a href=&quot;-mutable-list#kotlin.collections%24MutableList(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.MutableList.T)))/init&quot;&gt;init&lt;/a&gt; 함수를 호출하여 각 요소를 계산 하는 지정된 &lt;a href=&quot;-mutable-list#kotlin.collections%24MutableList(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.MutableList.T)))/size&quot;&gt;크기&lt;/a&gt; 로 새 변경 가능한 목록을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="53e5c25ab3c48d6a2a122b95fbe680e0d340fa52" translate="yes" xml:space="preserve">
          <source>Creates a new read-only list with the specified &lt;a href=&quot;-list#kotlin.collections%24List%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.List.T%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt;, where each element is calculated by calling the specified &lt;a href=&quot;-list#kotlin.collections%24List%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.List.T%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; function. The &lt;a href=&quot;-list#kotlin.collections%24List%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.List.T%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; function returns a list element given its index.</source>
          <target state="translated">지정된 &lt;a href=&quot;-list#kotlin.collections%24List%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.List.T%29%29%29%2Fsize&quot;&gt;size&lt;/a&gt; 로 새로운 읽기 전용 목록을 작성합니다 . 여기서 각 요소는 지정된 &lt;a href=&quot;-list#kotlin.collections%24List%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.List.T%29%29%29%2Finit&quot;&gt;init&lt;/a&gt; 함수를 호출하여 계산됩니다 . &lt;a href=&quot;-list#kotlin.collections%24List%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.List.T%29%29%29%2Finit&quot;&gt;초기화&lt;/a&gt; 함수는 인덱스 주어진 목록의 요소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="80e031d1468313ee96b4973350064da9bbc13067" translate="yes" xml:space="preserve">
          <source>Creates a new read-only list with the specified &lt;a href=&quot;-list#kotlin.collections%24List(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.List.T)))/size&quot;&gt;size&lt;/a&gt;, where each element is calculated by calling the specified &lt;a href=&quot;-list#kotlin.collections%24List(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.List.T)))/init&quot;&gt;init&lt;/a&gt; function.</source>
          <target state="translated">지정된 &lt;a href=&quot;-list#kotlin.collections%24List(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.List.T)))/size&quot;&gt;크기&lt;/a&gt; 로 새 읽기 전용 목록을 만듭니다. 여기서 각 요소는 지정된 &lt;a href=&quot;-list#kotlin.collections%24List(kotlin.Int,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.List.T)))/init&quot;&gt;init&lt;/a&gt; 함수를 호출하여 계산됩니다 .</target>
        </trans-unit>
        <trans-unit id="0e8c79199cef48d3e8e2b1a00e4e97a2340e9df0" translate="yes" xml:space="preserve">
          <source>Creates a new read-only map by replacing or adding an entry to this map from a given key-value &lt;a href=&quot;../plus#kotlin.collections%24plus%28kotlin.collections.Map%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%2C+kotlin.Pair%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%29%2Fpair&quot;&gt;pair&lt;/a&gt;.</source>
          <target state="translated">지정된 키-값 &lt;a href=&quot;../plus#kotlin.collections%24plus%28kotlin.collections.Map%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%2C+kotlin.Pair%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%29%2Fpair&quot;&gt;쌍&lt;/a&gt; 에서이 맵에 항목을 바꾸거나 추가하여 새로운 읽기 전용 맵을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="ec46f423b923da0c27029aab6bc23f9901978b9b" translate="yes" xml:space="preserve">
          <source>Creates a new read-only map by replacing or adding an entry to this map from a given key-value &lt;a href=&quot;../plus#kotlin.collections%24plus(kotlin.collections.Map((kotlin.collections.plus.K,%20kotlin.collections.plus.V)),%20kotlin.Pair((kotlin.collections.plus.K,%20kotlin.collections.plus.V)))/pair&quot;&gt;pair&lt;/a&gt;.</source>
          <target state="translated">주어진 키-값 &lt;a href=&quot;../plus#kotlin.collections%24plus(kotlin.collections.Map((kotlin.collections.plus.K,%20kotlin.collections.plus.V)),%20kotlin.Pair((kotlin.collections.plus.K,%20kotlin.collections.plus.V)))/pair&quot;&gt;쌍&lt;/a&gt; 에서이지도에 항목을 대체하거나 추가하여 새로운 읽기 전용지도를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="ba6c3570e5978afd93feb966355a73010b9a6e44" translate="yes" xml:space="preserve">
          <source>Creates a new read-only map by replacing or adding an entry to this map from a given key-value &lt;a href=&quot;plus#kotlin.collections%24plus%28kotlin.collections.Map%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%2C+kotlin.Pair%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%29%2Fpair&quot;&gt;pair&lt;/a&gt;.</source>
          <target state="translated">지정된 키-값 &lt;a href=&quot;plus#kotlin.collections%24plus%28kotlin.collections.Map%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%2C+kotlin.Pair%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%29%2Fpair&quot;&gt;쌍&lt;/a&gt; 에서이 맵에 항목을 바꾸거나 추가하여 새로운 읽기 전용 맵을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="111204a9fad951b2f801d801b6be437663f361a5" translate="yes" xml:space="preserve">
          <source>Creates a new read-only map by replacing or adding an entry to this map from a given key-value &lt;a href=&quot;plus#kotlin.collections%24plus(kotlin.collections.Map((kotlin.collections.plus.K,%20kotlin.collections.plus.V)),%20kotlin.Pair((kotlin.collections.plus.K,%20kotlin.collections.plus.V)))/pair&quot;&gt;pair&lt;/a&gt;.</source>
          <target state="translated">주어진 키-값 &lt;a href=&quot;plus#kotlin.collections%24plus(kotlin.collections.Map((kotlin.collections.plus.K,%20kotlin.collections.plus.V)),%20kotlin.Pair((kotlin.collections.plus.K,%20kotlin.collections.plus.V)))/pair&quot;&gt;쌍&lt;/a&gt; 에서이지도에 항목을 대체하거나 추가하여 새로운 읽기 전용지도를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="eaa088433894fdcbf05b2e06fc5b1d498c92eb15" translate="yes" xml:space="preserve">
          <source>Creates a new read-only map by replacing or adding entries to this map from a given array of key-value &lt;a href=&quot;../plus#kotlin.collections%24plus%28kotlin.collections.Map%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%2C+kotlin.Array%28%28kotlin.Pair%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%29%29%29%2Fpairs&quot;&gt;pairs&lt;/a&gt;.</source>
          <target state="translated">지정된 키-값 &lt;a href=&quot;../plus#kotlin.collections%24plus%28kotlin.collections.Map%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%2C+kotlin.Array%28%28kotlin.Pair%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%29%29%29%2Fpairs&quot;&gt;쌍의&lt;/a&gt; 배열에서이 맵에 항목을 바꾸거나 추가하여 새로운 읽기 전용 맵을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="8df1544d9aab5bbebc99363058bf2b23c73ea3c5" translate="yes" xml:space="preserve">
          <source>Creates a new read-only map by replacing or adding entries to this map from a given array of key-value &lt;a href=&quot;../plus#kotlin.collections%24plus(kotlin.collections.Map((kotlin.collections.plus.K,%20kotlin.collections.plus.V)),%20kotlin.Array((kotlin.Pair((kotlin.collections.plus.K,%20kotlin.collections.plus.V)))))/pairs&quot;&gt;pairs&lt;/a&gt;.</source>
          <target state="translated">지정된 키-값 &lt;a href=&quot;../plus#kotlin.collections%24plus(kotlin.collections.Map((kotlin.collections.plus.K,%20kotlin.collections.plus.V)),%20kotlin.Array((kotlin.Pair((kotlin.collections.plus.K,%20kotlin.collections.plus.V)))))/pairs&quot;&gt;쌍&lt;/a&gt; 배열에서이 맵에 항목을 대체하거나 추가하여 새 읽기 전용 맵을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="0bac830615cded3702e3e1dd4dd4a3fcc20ac86c" translate="yes" xml:space="preserve">
          <source>Creates a new read-only map by replacing or adding entries to this map from a given array of key-value &lt;a href=&quot;plus#kotlin.collections%24plus%28kotlin.collections.Map%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%2C+kotlin.Array%28%28kotlin.Pair%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%29%29%29%2Fpairs&quot;&gt;pairs&lt;/a&gt;.</source>
          <target state="translated">지정된 키-값 &lt;a href=&quot;plus#kotlin.collections%24plus%28kotlin.collections.Map%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%2C+kotlin.Array%28%28kotlin.Pair%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%29%29%29%2Fpairs&quot;&gt;쌍의&lt;/a&gt; 배열에서이 맵에 항목을 바꾸거나 추가하여 새로운 읽기 전용 맵을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="cdc3eed44bbc143ccdf084758f6e3cc31e8dd44d" translate="yes" xml:space="preserve">
          <source>Creates a new read-only map by replacing or adding entries to this map from a given array of key-value &lt;a href=&quot;plus#kotlin.collections%24plus(kotlin.collections.Map((kotlin.collections.plus.K,%20kotlin.collections.plus.V)),%20kotlin.Array((kotlin.Pair((kotlin.collections.plus.K,%20kotlin.collections.plus.V)))))/pairs&quot;&gt;pairs&lt;/a&gt;.</source>
          <target state="translated">지정된 키-값 &lt;a href=&quot;plus#kotlin.collections%24plus(kotlin.collections.Map((kotlin.collections.plus.K,%20kotlin.collections.plus.V)),%20kotlin.Array((kotlin.Pair((kotlin.collections.plus.K,%20kotlin.collections.plus.V)))))/pairs&quot;&gt;쌍&lt;/a&gt; 배열에서이 맵에 항목을 대체하거나 추가하여 새 읽기 전용 맵을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="095201c1d44abc006a8ece15cd4ac6bca17acd05" translate="yes" xml:space="preserve">
          <source>Creates a new read-only map by replacing or adding entries to this map from a given collection of key-value &lt;a href=&quot;../plus#kotlin.collections%24plus%28kotlin.collections.Map%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%2C+kotlin.collections.Iterable%28%28kotlin.Pair%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%29%29%29%2Fpairs&quot;&gt;pairs&lt;/a&gt;.</source>
          <target state="translated">지정된 키-값 &lt;a href=&quot;../plus#kotlin.collections%24plus%28kotlin.collections.Map%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%2C+kotlin.collections.Iterable%28%28kotlin.Pair%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%29%29%29%2Fpairs&quot;&gt;쌍&lt;/a&gt; 모음에서이 맵에 항목을 바꾸거나 추가하여 새로운 읽기 전용 맵을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="3bd97d7a76e826c27f2aa1d6902ae6bbfba1861a" translate="yes" xml:space="preserve">
          <source>Creates a new read-only map by replacing or adding entries to this map from a given collection of key-value &lt;a href=&quot;../plus#kotlin.collections%24plus(kotlin.collections.Map((kotlin.collections.plus.K,%20kotlin.collections.plus.V)),%20kotlin.collections.Iterable((kotlin.Pair((kotlin.collections.plus.K,%20kotlin.collections.plus.V)))))/pairs&quot;&gt;pairs&lt;/a&gt;.</source>
          <target state="translated">지정된 키-값 &lt;a href=&quot;../plus#kotlin.collections%24plus(kotlin.collections.Map((kotlin.collections.plus.K,%20kotlin.collections.plus.V)),%20kotlin.collections.Iterable((kotlin.Pair((kotlin.collections.plus.K,%20kotlin.collections.plus.V)))))/pairs&quot;&gt;쌍&lt;/a&gt; 모음에서이 맵에 항목을 대체하거나 추가하여 새 읽기 전용 맵을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="90e62b9d968cef9cf6543661b27fc145e75c42e2" translate="yes" xml:space="preserve">
          <source>Creates a new read-only map by replacing or adding entries to this map from a given collection of key-value &lt;a href=&quot;plus#kotlin.collections%24plus%28kotlin.collections.Map%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%2C+kotlin.collections.Iterable%28%28kotlin.Pair%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%29%29%29%2Fpairs&quot;&gt;pairs&lt;/a&gt;.</source>
          <target state="translated">지정된 키-값 &lt;a href=&quot;plus#kotlin.collections%24plus%28kotlin.collections.Map%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%2C+kotlin.collections.Iterable%28%28kotlin.Pair%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%29%29%29%2Fpairs&quot;&gt;쌍&lt;/a&gt; 모음에서이 맵에 항목을 바꾸거나 추가하여 새로운 읽기 전용 맵을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="3fbded5243f2fc581e0fde2fcf69fb22df0acd08" translate="yes" xml:space="preserve">
          <source>Creates a new read-only map by replacing or adding entries to this map from a given collection of key-value &lt;a href=&quot;plus#kotlin.collections%24plus(kotlin.collections.Map((kotlin.collections.plus.K,%20kotlin.collections.plus.V)),%20kotlin.collections.Iterable((kotlin.Pair((kotlin.collections.plus.K,%20kotlin.collections.plus.V)))))/pairs&quot;&gt;pairs&lt;/a&gt;.</source>
          <target state="translated">지정된 키-값 &lt;a href=&quot;plus#kotlin.collections%24plus(kotlin.collections.Map((kotlin.collections.plus.K,%20kotlin.collections.plus.V)),%20kotlin.collections.Iterable((kotlin.Pair((kotlin.collections.plus.K,%20kotlin.collections.plus.V)))))/pairs&quot;&gt;쌍&lt;/a&gt; 모음에서이 맵에 항목을 대체하거나 추가하여 새 읽기 전용 맵을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="12b397d82510840cca4db1e2fc44deb9d99ffc71" translate="yes" xml:space="preserve">
          <source>Creates a new read-only map by replacing or adding entries to this map from a given sequence of key-value &lt;a href=&quot;../plus#kotlin.collections%24plus%28kotlin.collections.Map%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%2C+kotlin.sequences.Sequence%28%28kotlin.Pair%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%29%29%29%2Fpairs&quot;&gt;pairs&lt;/a&gt;.</source>
          <target state="translated">주어진 키-값 &lt;a href=&quot;../plus#kotlin.collections%24plus%28kotlin.collections.Map%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%2C+kotlin.sequences.Sequence%28%28kotlin.Pair%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%29%29%29%2Fpairs&quot;&gt;쌍의&lt;/a&gt; 시퀀스에서이 맵에 항목을 바꾸거나 추가하여 새로운 읽기 전용 맵을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="ab5e628c71e730e6e9012cbb6a1e39ad714a0466" translate="yes" xml:space="preserve">
          <source>Creates a new read-only map by replacing or adding entries to this map from a given sequence of key-value &lt;a href=&quot;../plus#kotlin.collections%24plus(kotlin.collections.Map((kotlin.collections.plus.K,%20kotlin.collections.plus.V)),%20kotlin.sequences.Sequence((kotlin.Pair((kotlin.collections.plus.K,%20kotlin.collections.plus.V)))))/pairs&quot;&gt;pairs&lt;/a&gt;.</source>
          <target state="translated">지정된 키-값 &lt;a href=&quot;../plus#kotlin.collections%24plus(kotlin.collections.Map((kotlin.collections.plus.K,%20kotlin.collections.plus.V)),%20kotlin.sequences.Sequence((kotlin.Pair((kotlin.collections.plus.K,%20kotlin.collections.plus.V)))))/pairs&quot;&gt;쌍&lt;/a&gt; 시퀀스에서이 맵에 항목을 대체하거나 추가하여 새 읽기 전용 맵을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="7e700079a920b36bf678e1eb84c3699ff393d9cc" translate="yes" xml:space="preserve">
          <source>Creates a new read-only map by replacing or adding entries to this map from a given sequence of key-value &lt;a href=&quot;plus#kotlin.collections%24plus%28kotlin.collections.Map%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%2C+kotlin.sequences.Sequence%28%28kotlin.Pair%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%29%29%29%2Fpairs&quot;&gt;pairs&lt;/a&gt;.</source>
          <target state="translated">주어진 키-값 &lt;a href=&quot;plus#kotlin.collections%24plus%28kotlin.collections.Map%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%2C+kotlin.sequences.Sequence%28%28kotlin.Pair%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%29%29%29%2Fpairs&quot;&gt;쌍의&lt;/a&gt; 시퀀스에서이 맵에 항목을 바꾸거나 추가하여 새로운 읽기 전용 맵을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="05bd3b85d7653c04d156497cffe0cc973435d3f6" translate="yes" xml:space="preserve">
          <source>Creates a new read-only map by replacing or adding entries to this map from a given sequence of key-value &lt;a href=&quot;plus#kotlin.collections%24plus(kotlin.collections.Map((kotlin.collections.plus.K,%20kotlin.collections.plus.V)),%20kotlin.sequences.Sequence((kotlin.Pair((kotlin.collections.plus.K,%20kotlin.collections.plus.V)))))/pairs&quot;&gt;pairs&lt;/a&gt;.</source>
          <target state="translated">지정된 키-값 &lt;a href=&quot;plus#kotlin.collections%24plus(kotlin.collections.Map((kotlin.collections.plus.K,%20kotlin.collections.plus.V)),%20kotlin.sequences.Sequence((kotlin.Pair((kotlin.collections.plus.K,%20kotlin.collections.plus.V)))))/pairs&quot;&gt;쌍&lt;/a&gt; 시퀀스에서이 맵에 항목을 대체하거나 추가하여 새 읽기 전용 맵을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="3764440baf9b618bc0480e2f9968a2ee1df73e30" translate="yes" xml:space="preserve">
          <source>Creates a new read-only map by replacing or adding entries to this map from another &lt;a href=&quot;../plus#kotlin.collections%24plus%28kotlin.collections.Map%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%2C+kotlin.collections.Map%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%29%2Fmap&quot;&gt;map&lt;/a&gt;.</source>
          <target state="translated">다른 &lt;a href=&quot;../plus#kotlin.collections%24plus%28kotlin.collections.Map%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%2C+kotlin.collections.Map%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%29%2Fmap&quot;&gt;맵&lt;/a&gt; 에서이 맵에 항목을 바꾸거나 추가하여 새로운 읽기 전용 맵을 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="8778840d43574cdc2094bea358e0c9b2f36082d5" translate="yes" xml:space="preserve">
          <source>Creates a new read-only map by replacing or adding entries to this map from another &lt;a href=&quot;../plus#kotlin.collections%24plus(kotlin.collections.Map((kotlin.collections.plus.K,%20kotlin.collections.plus.V)),%20kotlin.collections.Map((kotlin.collections.plus.K,%20kotlin.collections.plus.V)))/map&quot;&gt;map&lt;/a&gt;.</source>
          <target state="translated">다른 &lt;a href=&quot;../plus#kotlin.collections%24plus(kotlin.collections.Map((kotlin.collections.plus.K,%20kotlin.collections.plus.V)),%20kotlin.collections.Map((kotlin.collections.plus.K,%20kotlin.collections.plus.V)))/map&quot;&gt;지도&lt;/a&gt; 에서이지도에 항목을 대체하거나 추가하여 새 읽기 전용지도를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="0429ee3549d049b2b5374ff4b3b841261d5606fe" translate="yes" xml:space="preserve">
          <source>Creates a new read-only map by replacing or adding entries to this map from another &lt;a href=&quot;plus#kotlin.collections%24plus%28kotlin.collections.Map%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%2C+kotlin.collections.Map%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%29%2Fmap&quot;&gt;map&lt;/a&gt;.</source>
          <target state="translated">다른 &lt;a href=&quot;plus#kotlin.collections%24plus%28kotlin.collections.Map%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%2C+kotlin.collections.Map%28%28kotlin.collections.plus.K%2C+kotlin.collections.plus.V%29%29%29%2Fmap&quot;&gt;맵&lt;/a&gt; 에서이 맵에 항목을 바꾸거나 추가하여 새로운 읽기 전용 맵을 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="e192db5700219fd73b6c765c03b8a12c5834f6fe" translate="yes" xml:space="preserve">
          <source>Creates a new read-only map by replacing or adding entries to this map from another &lt;a href=&quot;plus#kotlin.collections%24plus(kotlin.collections.Map((kotlin.collections.plus.K,%20kotlin.collections.plus.V)),%20kotlin.collections.Map((kotlin.collections.plus.K,%20kotlin.collections.plus.V)))/map&quot;&gt;map&lt;/a&gt;.</source>
          <target state="translated">다른 &lt;a href=&quot;plus#kotlin.collections%24plus(kotlin.collections.Map((kotlin.collections.plus.K,%20kotlin.collections.plus.V)),%20kotlin.collections.Map((kotlin.collections.plus.K,%20kotlin.collections.plus.V)))/map&quot;&gt;지도&lt;/a&gt; 에서이지도에 항목을 대체하거나 추가하여 새 읽기 전용지도를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="aea7a2bfe7072b83c65dc43a354854089f4ff9b0" translate="yes" xml:space="preserve">
          <source>Creates a new reader for the string.</source>
          <target state="translated">문자열의 새 리더를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="7cdbd405c4867dc3b4b226db49f07a881daa33df" translate="yes" xml:space="preserve">
          <source>Creates a range from this &lt;a href=&quot;../-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; value to the specified &lt;a href=&quot;../../kotlin.ranges/range-to#kotlin.ranges%24rangeTo%28kotlin.ranges.rangeTo.T%2C+kotlin.ranges.rangeTo.T%29%2Fthat&quot;&gt;that&lt;/a&gt; value.</source>
          <target state="translated">이 범위에서 작성 &lt;a href=&quot;../-comparable/index#kotlin.Comparable&quot;&gt;필적&lt;/a&gt; 값을 지정 &lt;a href=&quot;../../kotlin.ranges/range-to#kotlin.ranges%24rangeTo%28kotlin.ranges.rangeTo.T%2C+kotlin.ranges.rangeTo.T%29%2Fthat&quot;&gt;하는&lt;/a&gt; 값.</target>
        </trans-unit>
        <trans-unit id="70eb9e9f209b05583dfb1bbbd8a272eba3615a8f" translate="yes" xml:space="preserve">
          <source>Creates a range from this &lt;a href=&quot;../-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; value to the specified &lt;a href=&quot;../../kotlin.ranges/range-to#kotlin.ranges%24rangeTo(kotlin.ranges.rangeTo.T,%20kotlin.ranges.rangeTo.T)/that&quot;&gt;that&lt;/a&gt; value.</source>
          <target state="translated">이 범위에서 작성 &lt;a href=&quot;../-comparable/index#kotlin.Comparable&quot;&gt;필적&lt;/a&gt; 값을 지정 &lt;a href=&quot;../../kotlin.ranges/range-to#kotlin.ranges%24rangeTo(kotlin.ranges.rangeTo.T,%20kotlin.ranges.rangeTo.T)/that&quot;&gt;하는&lt;/a&gt; 값.</target>
        </trans-unit>
        <trans-unit id="48c6ad739435cd3d41dd7c8c98aad2ece4ebf5ae" translate="yes" xml:space="preserve">
          <source>Creates a range from this &lt;a href=&quot;../../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; value to the specified &lt;a href=&quot;../../kotlin.ranges/range-to#kotlin.ranges%24rangeTo%28kotlin.ranges.rangeTo.T%2C+kotlin.ranges.rangeTo.T%29%2Fthat&quot;&gt;that&lt;/a&gt; value.</source>
          <target state="translated">이 범위에서 작성 &lt;a href=&quot;../../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;필적&lt;/a&gt; 값을 지정 &lt;a href=&quot;../../kotlin.ranges/range-to#kotlin.ranges%24rangeTo%28kotlin.ranges.rangeTo.T%2C+kotlin.ranges.rangeTo.T%29%2Fthat&quot;&gt;하는&lt;/a&gt; 값.</target>
        </trans-unit>
        <trans-unit id="44c5c418e26ffafea3b96405153f66557a85208b" translate="yes" xml:space="preserve">
          <source>Creates a range from this &lt;a href=&quot;../../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; value to the specified &lt;a href=&quot;../../kotlin.ranges/range-to#kotlin.ranges%24rangeTo(kotlin.ranges.rangeTo.T,%20kotlin.ranges.rangeTo.T)/that&quot;&gt;that&lt;/a&gt; value.</source>
          <target state="translated">이 범위에서 작성 &lt;a href=&quot;../../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;필적&lt;/a&gt; 값을 지정 &lt;a href=&quot;../../kotlin.ranges/range-to#kotlin.ranges%24rangeTo(kotlin.ranges.rangeTo.T,%20kotlin.ranges.rangeTo.T)/that&quot;&gt;하는&lt;/a&gt; 값.</target>
        </trans-unit>
        <trans-unit id="c88695d33a9eeee1b1d760dadf6dc2193f747f81" translate="yes" xml:space="preserve">
          <source>Creates a range from this &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; value to the specified &lt;a href=&quot;range-to#kotlin.ranges%24rangeTo%28kotlin.ranges.rangeTo.T%2C+kotlin.ranges.rangeTo.T%29%2Fthat&quot;&gt;that&lt;/a&gt; value.</source>
          <target state="translated">이 범위에서 작성 &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;필적&lt;/a&gt; 값을 지정 &lt;a href=&quot;range-to#kotlin.ranges%24rangeTo%28kotlin.ranges.rangeTo.T%2C+kotlin.ranges.rangeTo.T%29%2Fthat&quot;&gt;하는&lt;/a&gt; 값.</target>
        </trans-unit>
        <trans-unit id="16bccac310ce309fbd12f91dab01bfc07cd5db65" translate="yes" xml:space="preserve">
          <source>Creates a range from this &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; value to the specified &lt;a href=&quot;range-to#kotlin.ranges%24rangeTo(kotlin.ranges.rangeTo.T,%20kotlin.ranges.rangeTo.T)/that&quot;&gt;that&lt;/a&gt; value.</source>
          <target state="translated">이 범위에서 작성 &lt;a href=&quot;../kotlin/-comparable/index#kotlin.Comparable&quot;&gt;필적&lt;/a&gt; 값을 지정 &lt;a href=&quot;range-to#kotlin.ranges%24rangeTo(kotlin.ranges.rangeTo.T,%20kotlin.ranges.rangeTo.T)/that&quot;&gt;하는&lt;/a&gt; 값.</target>
        </trans-unit>
        <trans-unit id="e72d73dc19cd786a8d35a4c0de15fa2cb9c9b967" translate="yes" xml:space="preserve">
          <source>Creates a range from this &lt;a href=&quot;../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; value to the specified &lt;a href=&quot;range-to#kotlin.ranges%24rangeTo%28kotlin.Double%2C+kotlin.Double%29%2Fthat&quot;&gt;that&lt;/a&gt; value.</source>
          <target state="translated">이 &lt;a href=&quot;../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 값에서 지정된 &lt;a href=&quot;range-to#kotlin.ranges%24rangeTo%28kotlin.Double%2C+kotlin.Double%29%2Fthat&quot;&gt;해당&lt;/a&gt; 값 까지의 범위를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="eb046fd4608e586d02578aec2ff191c2404f2ec2" translate="yes" xml:space="preserve">
          <source>Creates a range from this &lt;a href=&quot;../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; value to the specified &lt;a href=&quot;range-to#kotlin.ranges%24rangeTo(kotlin.Double,%20kotlin.Double)/that&quot;&gt;that&lt;/a&gt; value.</source>
          <target state="translated">이 &lt;a href=&quot;../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 값에서 지정된 &lt;a href=&quot;range-to#kotlin.ranges%24rangeTo(kotlin.Double,%20kotlin.Double)/that&quot;&gt;해당&lt;/a&gt; 값 까지의 범위를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="436c4ecc959e22a0faea01e852a798065c2c6320" translate="yes" xml:space="preserve">
          <source>Creates a range from this &lt;a href=&quot;../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; value to the specified &lt;a href=&quot;range-to#kotlin.ranges%24rangeTo%28kotlin.Float%2C+kotlin.Float%29%2Fthat&quot;&gt;that&lt;/a&gt; value.</source>
          <target state="translated">이 &lt;a href=&quot;../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 값 으로부터 지정된 값까지의 범위 &lt;a href=&quot;range-to#kotlin.ranges%24rangeTo%28kotlin.Float%2C+kotlin.Float%29%2Fthat&quot;&gt;를 작성&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="c573a43f750aca82a033c0496d5bd91e6a55177e" translate="yes" xml:space="preserve">
          <source>Creates a range from this &lt;a href=&quot;../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; value to the specified &lt;a href=&quot;range-to#kotlin.ranges%24rangeTo(kotlin.Float,%20kotlin.Float)/that&quot;&gt;that&lt;/a&gt; value.</source>
          <target state="translated">이 &lt;a href=&quot;../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 값에서 지정된 &lt;a href=&quot;range-to#kotlin.ranges%24rangeTo(kotlin.Float,%20kotlin.Float)/that&quot;&gt;해당&lt;/a&gt; 값 까지의 범위를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="a05d37161247d9c5c1a614a6c2660c1e640f1ea3" translate="yes" xml:space="preserve">
          <source>Creates a range from this &lt;a href=&quot;index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; value to the specified &lt;a href=&quot;../../kotlin.ranges/range-to#kotlin.ranges%24rangeTo%28kotlin.ranges.rangeTo.T%2C+kotlin.ranges.rangeTo.T%29%2Fthat&quot;&gt;that&lt;/a&gt; value.</source>
          <target state="translated">이 범위에서 작성 &lt;a href=&quot;index#kotlin.Comparable&quot;&gt;필적&lt;/a&gt; 값을 지정 &lt;a href=&quot;../../kotlin.ranges/range-to#kotlin.ranges%24rangeTo%28kotlin.ranges.rangeTo.T%2C+kotlin.ranges.rangeTo.T%29%2Fthat&quot;&gt;하는&lt;/a&gt; 값.</target>
        </trans-unit>
        <trans-unit id="9d1d21e596b73720a67e74296595bbc27d88914a" translate="yes" xml:space="preserve">
          <source>Creates a range from this &lt;a href=&quot;index#kotlin.Comparable&quot;&gt;Comparable&lt;/a&gt; value to the specified &lt;a href=&quot;../../kotlin.ranges/range-to#kotlin.ranges%24rangeTo(kotlin.ranges.rangeTo.T,%20kotlin.ranges.rangeTo.T)/that&quot;&gt;that&lt;/a&gt; value.</source>
          <target state="translated">이 범위에서 작성 &lt;a href=&quot;index#kotlin.Comparable&quot;&gt;필적&lt;/a&gt; 값을 지정 &lt;a href=&quot;../../kotlin.ranges/range-to#kotlin.ranges%24rangeTo(kotlin.ranges.rangeTo.T,%20kotlin.ranges.rangeTo.T)/that&quot;&gt;하는&lt;/a&gt; 값.</target>
        </trans-unit>
        <trans-unit id="c12e03873d85053c809cccc6f9f7e38cfa5f87d9" translate="yes" xml:space="preserve">
          <source>Creates a range from this &lt;a href=&quot;index#kotlin.Double&quot;&gt;Double&lt;/a&gt; value to the specified &lt;a href=&quot;../../kotlin.ranges/range-to#kotlin.ranges%24rangeTo%28kotlin.Double%2C+kotlin.Double%29%2Fthat&quot;&gt;that&lt;/a&gt; value.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 값에서 지정된 &lt;a href=&quot;../../kotlin.ranges/range-to#kotlin.ranges%24rangeTo%28kotlin.Double%2C+kotlin.Double%29%2Fthat&quot;&gt;해당&lt;/a&gt; 값 까지의 범위를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="99c7f5de35d206aedaab99cde4803e61080f4053" translate="yes" xml:space="preserve">
          <source>Creates a range from this &lt;a href=&quot;index#kotlin.Double&quot;&gt;Double&lt;/a&gt; value to the specified &lt;a href=&quot;../../kotlin.ranges/range-to#kotlin.ranges%24rangeTo(kotlin.Double,%20kotlin.Double)/that&quot;&gt;that&lt;/a&gt; value.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 값에서 지정된 &lt;a href=&quot;../../kotlin.ranges/range-to#kotlin.ranges%24rangeTo(kotlin.Double,%20kotlin.Double)/that&quot;&gt;해당&lt;/a&gt; 값 까지의 범위를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="229e61d97eda13aee7a4e51caffb3e80ec2ee4e2" translate="yes" xml:space="preserve">
          <source>Creates a range from this &lt;a href=&quot;index#kotlin.Float&quot;&gt;Float&lt;/a&gt; value to the specified &lt;a href=&quot;../../kotlin.ranges/range-to#kotlin.ranges%24rangeTo(kotlin.Float,%20kotlin.Float)/that&quot;&gt;that&lt;/a&gt; value.</source>
          <target state="translated">이 &lt;a href=&quot;index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 값에서 지정된 &lt;a href=&quot;../../kotlin.ranges/range-to#kotlin.ranges%24rangeTo(kotlin.Float,%20kotlin.Float)/that&quot;&gt;해당&lt;/a&gt; 값 까지의 범위를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="69127242f595e31b0d5c97c767fe214c09a2f560" translate="yes" xml:space="preserve">
          <source>Creates a range from this value to the specified &lt;a href=&quot;range-to#kotlin.Byte%24rangeTo%28kotlin.Byte%29%2Fother&quot;&gt;other&lt;/a&gt; value.</source>
          <target state="translated">이 값에서 지정된 &lt;a href=&quot;range-to#kotlin.Byte%24rangeTo%28kotlin.Byte%29%2Fother&quot;&gt;다른&lt;/a&gt; 값 까지의 범위를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="545fbaf841dce84f233d074466edb954370f12a9" translate="yes" xml:space="preserve">
          <source>Creates a range from this value to the specified &lt;a href=&quot;range-to#kotlin.Byte%24rangeTo(kotlin.Byte)/other&quot;&gt;other&lt;/a&gt; value.</source>
          <target state="translated">이 값에서 지정된 &lt;a href=&quot;range-to#kotlin.Byte%24rangeTo(kotlin.Byte)/other&quot;&gt;다른&lt;/a&gt; 값 까지의 범위를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="867fe5818c99e3c289d1a2ad3271b73dfafd7b66" translate="yes" xml:space="preserve">
          <source>Creates a range from this value to the specified &lt;a href=&quot;range-to#kotlin.Char%24rangeTo%28kotlin.Char%29%2Fother&quot;&gt;other&lt;/a&gt; value.</source>
          <target state="translated">이 값에서 지정된 &lt;a href=&quot;range-to#kotlin.Char%24rangeTo%28kotlin.Char%29%2Fother&quot;&gt;다른&lt;/a&gt; 값 까지의 범위를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="e7033c222f8183214259106ab0db02717d61f628" translate="yes" xml:space="preserve">
          <source>Creates a range from this value to the specified &lt;a href=&quot;range-to#kotlin.Char%24rangeTo(kotlin.Char)/other&quot;&gt;other&lt;/a&gt; value.</source>
          <target state="translated">이 값에서 지정된 &lt;a href=&quot;range-to#kotlin.Char%24rangeTo(kotlin.Char)/other&quot;&gt;다른&lt;/a&gt; 값 까지의 범위를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="6f6e1bc27d4504ab3378725f845f543832d3b271" translate="yes" xml:space="preserve">
          <source>Creates a range from this value to the specified &lt;a href=&quot;range-to#kotlin.Int%24rangeTo%28kotlin.Byte%29%2Fother&quot;&gt;other&lt;/a&gt; value.</source>
          <target state="translated">이 값에서 지정된 &lt;a href=&quot;range-to#kotlin.Int%24rangeTo%28kotlin.Byte%29%2Fother&quot;&gt;다른&lt;/a&gt; 값 까지의 범위를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="69fa2c496d6fc9db6c37e0958f3a8db912d664d3" translate="yes" xml:space="preserve">
          <source>Creates a range from this value to the specified &lt;a href=&quot;range-to#kotlin.Int%24rangeTo(kotlin.Byte)/other&quot;&gt;other&lt;/a&gt; value.</source>
          <target state="translated">이 값에서 지정된 &lt;a href=&quot;range-to#kotlin.Int%24rangeTo(kotlin.Byte)/other&quot;&gt;다른&lt;/a&gt; 값 까지의 범위를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="a382abbec8d18d71d564ec014ae6a833cb6693c3" translate="yes" xml:space="preserve">
          <source>Creates a range from this value to the specified &lt;a href=&quot;range-to#kotlin.Long%24rangeTo%28kotlin.Byte%29%2Fother&quot;&gt;other&lt;/a&gt; value.</source>
          <target state="translated">이 값에서 지정된 &lt;a href=&quot;range-to#kotlin.Long%24rangeTo%28kotlin.Byte%29%2Fother&quot;&gt;다른&lt;/a&gt; 값 까지의 범위를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="c1e1360365bee71e5994a502ef0dc6bc4b722ed9" translate="yes" xml:space="preserve">
          <source>Creates a range from this value to the specified &lt;a href=&quot;range-to#kotlin.Long%24rangeTo(kotlin.Byte)/other&quot;&gt;other&lt;/a&gt; value.</source>
          <target state="translated">이 값에서 지정된 &lt;a href=&quot;range-to#kotlin.Long%24rangeTo(kotlin.Byte)/other&quot;&gt;다른&lt;/a&gt; 값 까지의 범위를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="90dac3fb7c52ac068e598a2819e4fb636e131bd2" translate="yes" xml:space="preserve">
          <source>Creates a range from this value to the specified &lt;a href=&quot;range-to#kotlin.Short%24rangeTo%28kotlin.Byte%29%2Fother&quot;&gt;other&lt;/a&gt; value.</source>
          <target state="translated">이 값에서 지정된 &lt;a href=&quot;range-to#kotlin.Short%24rangeTo%28kotlin.Byte%29%2Fother&quot;&gt;다른&lt;/a&gt; 값 까지의 범위를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="e6247d4ff3341fddf55db593415aa4c50b5b8318" translate="yes" xml:space="preserve">
          <source>Creates a range from this value to the specified &lt;a href=&quot;range-to#kotlin.Short%24rangeTo(kotlin.Byte)/other&quot;&gt;other&lt;/a&gt; value.</source>
          <target state="translated">이 값에서 지정된 &lt;a href=&quot;range-to#kotlin.Short%24rangeTo(kotlin.Byte)/other&quot;&gt;다른&lt;/a&gt; 값 까지의 범위를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="480caa3257af00a15672c102af13602590eaf6a1" translate="yes" xml:space="preserve">
          <source>Creates a range from this value to the specified &lt;a href=&quot;range-to#kotlin.UByte%24rangeTo%28kotlin.UByte%29%2Fother&quot;&gt;other&lt;/a&gt; value.</source>
          <target state="translated">이 값에서 지정된 &lt;a href=&quot;range-to#kotlin.UByte%24rangeTo%28kotlin.UByte%29%2Fother&quot;&gt;다른&lt;/a&gt; 값 까지의 범위를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="b7b70e3a152b159654237a0dea3c753e0e313f3a" translate="yes" xml:space="preserve">
          <source>Creates a range from this value to the specified &lt;a href=&quot;range-to#kotlin.UByte%24rangeTo(kotlin.UByte)/other&quot;&gt;other&lt;/a&gt; value.</source>
          <target state="translated">이 값에서 지정된 &lt;a href=&quot;range-to#kotlin.UByte%24rangeTo(kotlin.UByte)/other&quot;&gt;다른&lt;/a&gt; 값 까지의 범위를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="1a48d402c44cffa041bb4732d45060e022142bc9" translate="yes" xml:space="preserve">
          <source>Creates a range from this value to the specified &lt;a href=&quot;range-to#kotlin.UInt%24rangeTo%28kotlin.UInt%29%2Fother&quot;&gt;other&lt;/a&gt; value.</source>
          <target state="translated">이 값에서 지정된 &lt;a href=&quot;range-to#kotlin.UInt%24rangeTo%28kotlin.UInt%29%2Fother&quot;&gt;다른&lt;/a&gt; 값 까지의 범위를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="b59f046284c8ae711b80281f989e2a6e68c0893e" translate="yes" xml:space="preserve">
          <source>Creates a range from this value to the specified &lt;a href=&quot;range-to#kotlin.UInt%24rangeTo(kotlin.UInt)/other&quot;&gt;other&lt;/a&gt; value.</source>
          <target state="translated">이 값에서 지정된 &lt;a href=&quot;range-to#kotlin.UInt%24rangeTo(kotlin.UInt)/other&quot;&gt;다른&lt;/a&gt; 값 까지의 범위를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="400297d439dd12c5786720faa2ee51d9916e9f71" translate="yes" xml:space="preserve">
          <source>Creates a range from this value to the specified &lt;a href=&quot;range-to#kotlin.ULong%24rangeTo%28kotlin.ULong%29%2Fother&quot;&gt;other&lt;/a&gt; value.</source>
          <target state="translated">이 값에서 지정된 &lt;a href=&quot;range-to#kotlin.ULong%24rangeTo%28kotlin.ULong%29%2Fother&quot;&gt;다른&lt;/a&gt; 값 까지의 범위를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="ee60bd3fee8716d51d26da9b03cde219b73a1156" translate="yes" xml:space="preserve">
          <source>Creates a range from this value to the specified &lt;a href=&quot;range-to#kotlin.ULong%24rangeTo(kotlin.ULong)/other&quot;&gt;other&lt;/a&gt; value.</source>
          <target state="translated">이 값에서 지정된 &lt;a href=&quot;range-to#kotlin.ULong%24rangeTo(kotlin.ULong)/other&quot;&gt;다른&lt;/a&gt; 값 까지의 범위를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="f5bf93f29c009da396eb80d328f5e16d29fc495b" translate="yes" xml:space="preserve">
          <source>Creates a range from this value to the specified &lt;a href=&quot;range-to#kotlin.UShort%24rangeTo%28kotlin.UShort%29%2Fother&quot;&gt;other&lt;/a&gt; value.</source>
          <target state="translated">이 값에서 지정된 &lt;a href=&quot;range-to#kotlin.UShort%24rangeTo%28kotlin.UShort%29%2Fother&quot;&gt;다른&lt;/a&gt; 값 까지의 범위를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="1a75531ab5aa2147df18bfa4c5c2973c7e472878" translate="yes" xml:space="preserve">
          <source>Creates a range from this value to the specified &lt;a href=&quot;range-to#kotlin.UShort%24rangeTo(kotlin.UShort)/other&quot;&gt;other&lt;/a&gt; value.</source>
          <target state="translated">이 값에서 지정된 &lt;a href=&quot;range-to#kotlin.UShort%24rangeTo(kotlin.UShort)/other&quot;&gt;다른&lt;/a&gt; 값 까지의 범위를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="9d40d77d6342bc80eccf1dd333ac4382ef615984" translate="yes" xml:space="preserve">
          <source>Creates a reader on this input stream using UTF-8 or the specified &lt;a href=&quot;reader#kotlin.io%24reader%28java.io.InputStream%2C+java.nio.charset.Charset%29%2Fcharset&quot;&gt;charset&lt;/a&gt;.</source>
          <target state="translated">UTF-8 또는 지정된 &lt;a href=&quot;reader#kotlin.io%24reader%28java.io.InputStream%2C+java.nio.charset.Charset%29%2Fcharset&quot;&gt;charset&lt;/a&gt; 를 사용해이 입력 스트림에 리더를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="a41dbccb3c365aefa8b548a9fc813227a67cdeac" translate="yes" xml:space="preserve">
          <source>Creates a reader on this input stream using UTF-8 or the specified &lt;a href=&quot;reader#kotlin.io%24reader(java.io.InputStream,%20java.nio.charset.Charset)/charset&quot;&gt;charset&lt;/a&gt;.</source>
          <target state="translated">UTF-8 또는 지정된 &lt;a href=&quot;reader#kotlin.io%24reader(java.io.InputStream,%20java.nio.charset.Charset)/charset&quot;&gt;charset를&lt;/a&gt; 사용하여이 입력 스트림에 판독기를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="fa712ca33dbc67f75d0005860e70434224919f86" translate="yes" xml:space="preserve">
          <source>Creates a regular expression from the specified &lt;a href=&quot;-init-#kotlin.text.Regex%24%3Cinit%3E%28kotlin.String%29%2Fpattern&quot;&gt;pattern&lt;/a&gt; string and the default options.</source>
          <target state="translated">지정된 &lt;a href=&quot;-init-#kotlin.text.Regex%24%3Cinit%3E%28kotlin.String%29%2Fpattern&quot;&gt;패턴&lt;/a&gt; 문자열과 기본 옵션 에서 정규식을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="d2464d40c22ddaf0c4521eba56a7e2acd0ad38fb" translate="yes" xml:space="preserve">
          <source>Creates a regular expression from the specified &lt;a href=&quot;-init-#kotlin.text.Regex%24%3Cinit%3E%28kotlin.String%2C+kotlin.collections.Set%28%28kotlin.text.RegexOption%29%29%29%2Fpattern&quot;&gt;pattern&lt;/a&gt; string and the specified set of &lt;a href=&quot;-init-#kotlin.text.Regex%24%3Cinit%3E%28kotlin.String%2C+kotlin.collections.Set%28%28kotlin.text.RegexOption%29%29%29%2Foptions&quot;&gt;options&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;-init-#kotlin.text.Regex%24%3Cinit%3E%28kotlin.String%2C+kotlin.collections.Set%28%28kotlin.text.RegexOption%29%29%29%2Fpattern&quot;&gt;패턴&lt;/a&gt; 문자열과 지정된 &lt;a href=&quot;-init-#kotlin.text.Regex%24%3Cinit%3E%28kotlin.String%2C+kotlin.collections.Set%28%28kotlin.text.RegexOption%29%29%29%2Foptions&quot;&gt;옵션&lt;/a&gt; 세트 에서 정규식을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="09c1334fd4affff6ed086642a36083707ac52b33" translate="yes" xml:space="preserve">
          <source>Creates a regular expression from the specified &lt;a href=&quot;-init-#kotlin.text.Regex%24%3Cinit%3E%28kotlin.String%2C+kotlin.text.RegexOption%29%2Fpattern&quot;&gt;pattern&lt;/a&gt; string and the specified single &lt;a href=&quot;-init-#kotlin.text.Regex%24%3Cinit%3E%28kotlin.String%2C+kotlin.text.RegexOption%29%2Foption&quot;&gt;option&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;-init-#kotlin.text.Regex%24%3Cinit%3E%28kotlin.String%2C+kotlin.text.RegexOption%29%2Fpattern&quot;&gt;패턴&lt;/a&gt; 문자열과 지정된 단일 &lt;a href=&quot;-init-#kotlin.text.Regex%24%3Cinit%3E%28kotlin.String%2C+kotlin.text.RegexOption%29%2Foption&quot;&gt;옵션&lt;/a&gt; 에서 정규식을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="8abf792554eaecc46ab0ff7d864a0bc878ae12d5" translate="yes" xml:space="preserve">
          <source>Creates a regular expression from the specified &lt;a href=&quot;-regex_0#kotlin.text%24Regex_0%28kotlin.String%2C+kotlin.text.RegexOption%29%2Fpattern&quot;&gt;pattern&lt;/a&gt; string and the specified single &lt;a href=&quot;-regex_0#kotlin.text%24Regex_0%28kotlin.String%2C+kotlin.text.RegexOption%29%2Foption&quot;&gt;option&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;-regex_0#kotlin.text%24Regex_0%28kotlin.String%2C+kotlin.text.RegexOption%29%2Fpattern&quot;&gt;패턴&lt;/a&gt; 문자열과 지정된 단일 &lt;a href=&quot;-regex_0#kotlin.text%24Regex_0%28kotlin.String%2C+kotlin.text.RegexOption%29%2Foption&quot;&gt;옵션&lt;/a&gt; 에서 정규식을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="db1550c49feac13c627aa0c5352e76ba4397546f" translate="yes" xml:space="preserve">
          <source>Creates a regular expression from the specified &lt;a href=&quot;-regex_0#kotlin.text%24Regex_0(kotlin.String,%20kotlin.text.RegexOption)/pattern&quot;&gt;pattern&lt;/a&gt; string and the specified single &lt;a href=&quot;-regex_0#kotlin.text%24Regex_0(kotlin.String,%20kotlin.text.RegexOption)/option&quot;&gt;option&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;-regex_0#kotlin.text%24Regex_0(kotlin.String,%20kotlin.text.RegexOption)/pattern&quot;&gt;패턴&lt;/a&gt; 문자열과 지정된 단일 &lt;a href=&quot;-regex_0#kotlin.text%24Regex_0(kotlin.String,%20kotlin.text.RegexOption)/option&quot;&gt;옵션&lt;/a&gt; 에서 정규식을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="bcce3ee9e380bf45fbbee7a355338a99e0849a42" translate="yes" xml:space="preserve">
          <source>Creates a regular expression from the specified &lt;a href=&quot;-regex_1#kotlin.text%24Regex_1%28kotlin.String%29%2Fpattern&quot;&gt;pattern&lt;/a&gt; string and the default options.</source>
          <target state="translated">지정된 &lt;a href=&quot;-regex_1#kotlin.text%24Regex_1%28kotlin.String%29%2Fpattern&quot;&gt;패턴&lt;/a&gt; 문자열과 기본 옵션 에서 정규식을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="e7734bc77bb203248848c57febb57ccb94ce94e4" translate="yes" xml:space="preserve">
          <source>Creates a regular expression from the specified &lt;a href=&quot;-regex_1#kotlin.text%24Regex_1(kotlin.String)/pattern&quot;&gt;pattern&lt;/a&gt; string and the default options.</source>
          <target state="translated">지정된 &lt;a href=&quot;-regex_1#kotlin.text%24Regex_1(kotlin.String)/pattern&quot;&gt;패턴&lt;/a&gt; 문자열과 기본 옵션 에서 정규식을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="8fafdd869e84a358be5e0ae8ace73705c55dfe13" translate="yes" xml:space="preserve">
          <source>Creates a regular expression from the specified &lt;a href=&quot;pattern#kotlin.text.Regex%24pattern&quot;&gt;pattern&lt;/a&gt; string and the specified set of &lt;a href=&quot;options#kotlin.text.Regex%24options&quot;&gt;options&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;pattern#kotlin.text.Regex%24pattern&quot;&gt;패턴&lt;/a&gt; 문자열과 지정된 &lt;a href=&quot;options#kotlin.text.Regex%24options&quot;&gt;옵션&lt;/a&gt; 세트 에서 정규식을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="c3cd854004515635857bf06ea19150799b10a4cf" translate="yes" xml:space="preserve">
          <source>Creates a regular expression from the specified pattern string and the default options.</source>
          <target state="translated">지정된 패턴 문자열과 기본 옵션에서 정규식을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="aa71cad032458a0880dae0611335b2204ef5cb06" translate="yes" xml:space="preserve">
          <source>Creates a regular expression from the specified pattern string and the specified set of options.</source>
          <target state="translated">지정된 패턴 문자열과 지정된 옵션 집합에서 정규식을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="d945dc20d8b9debe20d01d75138010e89547994c" translate="yes" xml:space="preserve">
          <source>Creates a regular expression from the specified pattern string and the specified single option.</source>
          <target state="translated">지정된 패턴 문자열과 지정된 단일 옵션에서 정규식을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="c08707fb6015c2734c1228d6f1905569253ef223" translate="yes" xml:space="preserve">
          <source>Creates a sequence that returns all elements from this iterator. The sequence is constrained to be iterated only once.</source>
          <target state="translated">이 이터레이터에서 모든 요소를 ​​반환하는 시퀀스를 만듭니다. 시퀀스는 한 번만 반복되도록 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="69f96a0bc7d3dcead19c1cf7bf0e1bea346cedf1" translate="yes" xml:space="preserve">
          <source>Creates a sequence that returns all values from this enumeration. The sequence is constrained to be iterated only once.</source>
          <target state="translated">이 열거에서 모든 값을 반환하는 시퀀스를 만듭니다. 시퀀스는 한 번만 반복되도록 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="c4e91a8a5360a9b887f4a6f9dac1446bc61a4f07" translate="yes" xml:space="preserve">
          <source>Creates a sequence that returns the specified values.</source>
          <target state="translated">지정된 값을 반환하는 시퀀스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="1a10948e2dd791471f8ddc3b2e085347f1c7710e" translate="yes" xml:space="preserve">
          <source>Creates a sequential &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html&quot;&gt;Stream&lt;/a&gt; instance that produces elements from the original sequence.</source>
          <target state="translated">원래 시퀀스에서 요소를 생성하는 순차적 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html&quot;&gt;스트림&lt;/a&gt; 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="b676ea5af53d42f1c323754d6cc1d29dfa65f66f" translate="yes" xml:space="preserve">
          <source>Creates a sequential &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html&quot;&gt;Stream&lt;/a&gt; instance that produces elements from the original sequence.</source>
          <target state="translated">원래 시퀀스에서 요소를 생성하는 순차 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html&quot;&gt;Stream&lt;/a&gt; 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="6fb8af385d590efbb670e788f86874b75af65b31" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="c2aaece5d33b8fff12da2c768c024eafdb0a3d5b" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.BooleanArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.BooleanArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.BooleanArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.BooleanArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.BooleanArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.BooleanArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="d8ca8d32b53a94047e4555627b85314b0e578315" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ByteArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ByteArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ByteArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ByteArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ByteArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ByteArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="e6c5b98ccb1a724d6ce8cafad0f9447bafa63273" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.CharArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.CharArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.CharArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.CharArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.CharArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.CharArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="392769d12f9ea9ef7593ddf2cb6dda9e0d233ad5" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.DoubleArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.DoubleArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.DoubleArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.DoubleArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.DoubleArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.DoubleArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="122ade18023237924aa9b58f517ead97b9cfc70b" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.FloatArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.FloatArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.FloatArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.FloatArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.FloatArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.FloatArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="910c48ed78011762a3175eb3f63c11f106df4662" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.IntArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.IntArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.IntArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.IntArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.IntArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.IntArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="fdbb6ef3499ca688d357860a4fc82265cf978400" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.LongArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.LongArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.LongArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.LongArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.LongArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.LongArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="c0946e45d76e5f16ab029ffab975c37ed42c50c1" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ShortArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ShortArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ShortArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ShortArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ShortArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ShortArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="3f6d0cb0a5c2f441a885d455bad637adb6fad484" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="f766b3763212e6812ef83d6138620c09f2653e14" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.Array((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/separator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.Array((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/prefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.Array((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/postfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.Array((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/separator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.Array((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/prefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.Array((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/postfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="c161c58017ed06e497d87f28141ceb07fefe5332" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.BooleanArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Boolean,%20kotlin.CharSequence)))/separator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.BooleanArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Boolean,%20kotlin.CharSequence)))/prefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.BooleanArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Boolean,%20kotlin.CharSequence)))/postfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.BooleanArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Boolean,%20kotlin.CharSequence)))/separator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.BooleanArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Boolean,%20kotlin.CharSequence)))/prefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.BooleanArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Boolean,%20kotlin.CharSequence)))/postfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="7d7acb83ea8f5f4daa65e459a4ac443ef0cc9a35" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.ByteArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Byte,%20kotlin.CharSequence)))/separator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.ByteArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Byte,%20kotlin.CharSequence)))/prefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.ByteArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Byte,%20kotlin.CharSequence)))/postfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.ByteArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Byte,%20kotlin.CharSequence)))/separator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.ByteArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Byte,%20kotlin.CharSequence)))/prefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.ByteArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Byte,%20kotlin.CharSequence)))/postfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="803456c7a9af288186a179600620bf0286eb397b" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.CharArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Char,%20kotlin.CharSequence)))/separator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.CharArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Char,%20kotlin.CharSequence)))/prefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.CharArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Char,%20kotlin.CharSequence)))/postfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.CharArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Char,%20kotlin.CharSequence)))/separator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.CharArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Char,%20kotlin.CharSequence)))/prefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.CharArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Char,%20kotlin.CharSequence)))/postfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="dc026b2e63260c528e0d2188505a491cd7ba49cb" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.DoubleArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Double,%20kotlin.CharSequence)))/separator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.DoubleArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Double,%20kotlin.CharSequence)))/prefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.DoubleArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Double,%20kotlin.CharSequence)))/postfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.DoubleArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Double,%20kotlin.CharSequence)))/separator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.DoubleArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Double,%20kotlin.CharSequence)))/prefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.DoubleArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Double,%20kotlin.CharSequence)))/postfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="a9f5081c6c2078f6417a4273c3bf8164835d0cad" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.FloatArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Float,%20kotlin.CharSequence)))/separator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.FloatArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Float,%20kotlin.CharSequence)))/prefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.FloatArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Float,%20kotlin.CharSequence)))/postfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.FloatArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Float,%20kotlin.CharSequence)))/separator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.FloatArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Float,%20kotlin.CharSequence)))/prefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.FloatArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Float,%20kotlin.CharSequence)))/postfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="b50831e7f6d5e23c19f753ecbf5ca78efcb084c1" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.IntArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Int,%20kotlin.CharSequence)))/separator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.IntArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Int,%20kotlin.CharSequence)))/prefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.IntArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Int,%20kotlin.CharSequence)))/postfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.IntArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Int,%20kotlin.CharSequence)))/separator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.IntArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Int,%20kotlin.CharSequence)))/prefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.IntArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Int,%20kotlin.CharSequence)))/postfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="e771c4a804cd7249463cbf36785ac105d78f8667" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.LongArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Long,%20kotlin.CharSequence)))/separator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.LongArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Long,%20kotlin.CharSequence)))/prefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.LongArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Long,%20kotlin.CharSequence)))/postfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.LongArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Long,%20kotlin.CharSequence)))/separator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.LongArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Long,%20kotlin.CharSequence)))/prefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.LongArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Long,%20kotlin.CharSequence)))/postfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="7b85cc58422952ccbed850a3c1056ab4ce94449b" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.ShortArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Short,%20kotlin.CharSequence)))/separator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.ShortArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Short,%20kotlin.CharSequence)))/prefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.ShortArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Short,%20kotlin.CharSequence)))/postfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.ShortArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Short,%20kotlin.CharSequence)))/separator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.ShortArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Short,%20kotlin.CharSequence)))/prefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.ShortArray,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.Short,%20kotlin.CharSequence)))/postfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="468d3280b0fddaa6c14d43d091a4a8676cbe3e90" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.collections.Iterable((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/separator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.collections.Iterable((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/prefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.collections.Iterable((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/postfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.collections.Iterable((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/separator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.collections.Iterable((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/prefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString(kotlin.collections.Iterable((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/postfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="33bf12f4596aaf05b08ba2925c99a7f6aff94970" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="0cf07614bd0a569a5566eaa495c85e52562af919" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../join-to-string#kotlin.collections%24joinToString(kotlin.collections.Iterable((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/separator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../join-to-string#kotlin.collections%24joinToString(kotlin.collections.Iterable((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/prefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../join-to-string#kotlin.collections%24joinToString(kotlin.collections.Iterable((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/postfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../join-to-string#kotlin.collections%24joinToString(kotlin.collections.Iterable((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/separator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../join-to-string#kotlin.collections%24joinToString(kotlin.collections.Iterable((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/prefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../join-to-string#kotlin.collections%24joinToString(kotlin.collections.Iterable((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/postfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="53421e6af67f0166f040610347e545df09d5f04d" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="1e1193c6ba34dd5844c8bb10689de730d3d45a21" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../join-to-string#kotlin.sequences%24joinToString(kotlin.sequences.Sequence((kotlin.sequences.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.sequences.joinToString.T,%20kotlin.CharSequence)))/separator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../join-to-string#kotlin.sequences%24joinToString(kotlin.sequences.Sequence((kotlin.sequences.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.sequences.joinToString.T,%20kotlin.CharSequence)))/prefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../join-to-string#kotlin.sequences%24joinToString(kotlin.sequences.Sequence((kotlin.sequences.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.sequences.joinToString.T,%20kotlin.CharSequence)))/postfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../join-to-string#kotlin.sequences%24joinToString(kotlin.sequences.Sequence((kotlin.sequences.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.sequences.joinToString.T,%20kotlin.CharSequence)))/separator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../join-to-string#kotlin.sequences%24joinToString(kotlin.sequences.Sequence((kotlin.sequences.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.sequences.joinToString.T,%20kotlin.CharSequence)))/prefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../join-to-string#kotlin.sequences%24joinToString(kotlin.sequences.Sequence((kotlin.sequences.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.sequences.joinToString.T,%20kotlin.CharSequence)))/postfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="1d127f8330415a3b27cc71efb91ce835b353621f" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="a0f6569fb5272165dd76933b9a1e478819e8f89e" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString(kotlin.Array((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/separator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString(kotlin.Array((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/prefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString(kotlin.Array((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/postfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;join-to-string#kotlin.collections%24joinToString(kotlin.Array((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/separator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString(kotlin.Array((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/prefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString(kotlin.Array((kotlin.collections.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.collections.joinToString.T,%20kotlin.CharSequence)))/postfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="6a6f0bf2831cb91fc3b0ee9c00139b11c87fda84" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="3386180b90e8e8d04df2ccf88d7b66c78b57fd00" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString(kotlin.sequences.Sequence((kotlin.sequences.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.sequences.joinToString.T,%20kotlin.CharSequence)))/separator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString(kotlin.sequences.Sequence((kotlin.sequences.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.sequences.joinToString.T,%20kotlin.CharSequence)))/prefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString(kotlin.sequences.Sequence((kotlin.sequences.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.sequences.joinToString.T,%20kotlin.CharSequence)))/postfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString(kotlin.sequences.Sequence((kotlin.sequences.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.sequences.joinToString.T,%20kotlin.CharSequence)))/separator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString(kotlin.sequences.Sequence((kotlin.sequences.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.sequences.joinToString.T,%20kotlin.CharSequence)))/prefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString(kotlin.sequences.Sequence((kotlin.sequences.joinToString.T)),%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.CharSequence,%20kotlin.Int,%20kotlin.CharSequence,%20kotlin.Function1?((kotlin.sequences.joinToString.T,%20kotlin.CharSequence)))/postfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="961d50f105a5368c306a59a3a778f2a1e173556d" translate="yes" xml:space="preserve">
          <source>Creates a thread that runs the specified &lt;a href=&quot;thread#kotlin.concurrent%24thread%28kotlin.Boolean%2C+kotlin.Boolean%2C+java.lang.ClassLoader%2C+kotlin.String%2C+kotlin.Int%2C+kotlin.Function0%28%28kotlin.Unit%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; of code.</source>
          <target state="translated">지정된 코드 &lt;a href=&quot;thread#kotlin.concurrent%24thread%28kotlin.Boolean%2C+kotlin.Boolean%2C+java.lang.ClassLoader%2C+kotlin.String%2C+kotlin.Int%2C+kotlin.Function0%28%28kotlin.Unit%29%29%29%2Fblock&quot;&gt;블록&lt;/a&gt; 을 실행하는 스레드를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="68050d0e734d715dc995593ba1b728719e970b17" translate="yes" xml:space="preserve">
          <source>Creates a thread that runs the specified &lt;a href=&quot;thread#kotlin.concurrent%24thread(kotlin.Boolean,%20kotlin.Boolean,%20java.lang.ClassLoader?,%20kotlin.String?,%20kotlin.Int,%20kotlin.Function0((kotlin.Unit)))/block&quot;&gt;block&lt;/a&gt; of code.</source>
          <target state="translated">지정된 코드 &lt;a href=&quot;thread#kotlin.concurrent%24thread(kotlin.Boolean,%20kotlin.Boolean,%20java.lang.ClassLoader?,%20kotlin.String?,%20kotlin.Int,%20kotlin.Function0((kotlin.Unit)))/block&quot;&gt;블록&lt;/a&gt; 을 실행하는 스레드를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="b554e982400d94f6f75670ce9427f55496eabfd8" translate="yes" xml:space="preserve">
          <source>Creates a timer that executes the specified &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; periodically, starting at the specified &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2FstartAt&quot;&gt;startAt&lt;/a&gt; date and with the interval of &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;period&lt;/a&gt; milliseconds between the start of the previous task and the start of the next one.</source>
          <target state="translated">지정된 &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2FstartAt&quot;&gt;startAt&lt;/a&gt; 날짜 부터 시작하여 이전 작업의 시작과 다음 작업의 시작 사이 의 &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;기간 (&lt;/a&gt; 밀리 초) 간격 으로 지정된 &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;작업을&lt;/a&gt; 주기적으로 실행하는 타이머를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="b6b7cd792eb1db8af927227f480c30bfc46524f6" translate="yes" xml:space="preserve">
          <source>Creates a timer that executes the specified &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; periodically, starting after the specified &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2FinitialDelay&quot;&gt;initialDelay&lt;/a&gt; (expressed in milliseconds) and with the interval of &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;period&lt;/a&gt; milliseconds between the start of the previous task and the start of the next one.</source>
          <target state="translated">지정된 &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2FinitialDelay&quot;&gt;initialDelay&lt;/a&gt; 이후 (밀리 초로 표시됨) 시작하여 이전 작업의 시작과 다음 작업의 시작 사이 의 &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;기간 (&lt;/a&gt; 밀리 초) 간격 으로 지정된 &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;작업을&lt;/a&gt; 주기적으로 실행하는 타이머를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="48ecb76142ab62e46ec92c9e42f9761c360d1ca5" translate="yes" xml:space="preserve">
          <source>Creates a timer that executes the specified &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer(kotlin.String?,%20kotlin.Boolean,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;action&lt;/a&gt; periodically, starting at the specified &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer(kotlin.String?,%20kotlin.Boolean,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/startAt&quot;&gt;startAt&lt;/a&gt; date and with the interval of &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer(kotlin.String?,%20kotlin.Boolean,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/period&quot;&gt;period&lt;/a&gt; milliseconds between the start of the previous task and the start of the next one.</source>
          <target state="translated">지정된 &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer(kotlin.String?,%20kotlin.Boolean,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/startAt&quot;&gt;startAt&lt;/a&gt; 날짜 에서 시작하여 이전 작업의 시작과 다음 작업의 시작 사이 의 &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer(kotlin.String?,%20kotlin.Boolean,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/period&quot;&gt;기간 (&lt;/a&gt; 밀리 초) 간격 으로 지정된 &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer(kotlin.String?,%20kotlin.Boolean,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;작업을&lt;/a&gt; 주기적으로 실행하는 타이머를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="88353c6bb535fccc2b10cca426ff76959d7e1f0b" translate="yes" xml:space="preserve">
          <source>Creates a timer that executes the specified &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer(kotlin.String?,%20kotlin.Boolean,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;action&lt;/a&gt; periodically, starting after the specified &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer(kotlin.String?,%20kotlin.Boolean,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/initialDelay&quot;&gt;initialDelay&lt;/a&gt; (expressed in milliseconds) and with the interval of &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer(kotlin.String?,%20kotlin.Boolean,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/period&quot;&gt;period&lt;/a&gt; milliseconds between the start of the previous task and the start of the next one.</source>
          <target state="translated">지정된 실행 타이머 작성 &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer(kotlin.String?,%20kotlin.Boolean,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;작업을&lt;/a&gt; 지정된 후부터 주기적 &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer(kotlin.String?,%20kotlin.Boolean,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/initialDelay&quot;&gt;initialDelay의&lt;/a&gt; (밀리 초 단위로 표현됨)과의 간격을 &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer(kotlin.String?,%20kotlin.Boolean,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/period&quot;&gt;주기&lt;/a&gt; 이전 작업의 시작과 다음의 시작 사이 밀리.</target>
        </trans-unit>
        <trans-unit id="fb76987705fc2f86a024f4c3aed9429cf6412ea9" translate="yes" xml:space="preserve">
          <source>Creates a timer that executes the specified &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; periodically, starting at the specified &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2FstartAt&quot;&gt;startAt&lt;/a&gt; date and with the interval of &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;period&lt;/a&gt; milliseconds between the end of the previous task and the start of the next one.</source>
          <target state="translated">지정된 시간을 실행하는 타이머를 만듭니다. &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;&lt;/a&gt;지정된 &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2FstartAt&quot;&gt;startAt&lt;/a&gt; 날짜 부터 시작 하여 이전 작업의 끝과 다음 작업의 시작 사이 의 &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;시간&lt;/a&gt; 간격 ( 밀리 초) 으로 작업을 주기적으로 .</target>
        </trans-unit>
        <trans-unit id="e1cc24eca493343d12e2c45fe050ec2bb11d812a" translate="yes" xml:space="preserve">
          <source>Creates a timer that executes the specified &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; periodically, starting after the specified &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2FinitialDelay&quot;&gt;initialDelay&lt;/a&gt; (expressed in milliseconds) and with the interval of &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;period&lt;/a&gt; milliseconds between the end of the previous task and the start of the next one.</source>
          <target state="translated">지정된 &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2FinitialDelay&quot;&gt;initialDelay&lt;/a&gt; 이후 (밀리 초로 표시됨) 시작하여 이전 작업의 끝과 다음 작업의 시작 사이 의 &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;기간 (&lt;/a&gt; 밀리 초) 간격 으로 지정된 &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;작업을&lt;/a&gt; 주기적으로 실행하는 타이머를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="9efed1e92814174bdae51364afa15a81b24e64ef" translate="yes" xml:space="preserve">
          <source>Creates a timer that executes the specified &lt;a href=&quot;timer#kotlin.concurrent%24timer(kotlin.String?,%20kotlin.Boolean,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;action&lt;/a&gt; periodically, starting at the specified &lt;a href=&quot;timer#kotlin.concurrent%24timer(kotlin.String?,%20kotlin.Boolean,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/startAt&quot;&gt;startAt&lt;/a&gt; date and with the interval of &lt;a href=&quot;timer#kotlin.concurrent%24timer(kotlin.String?,%20kotlin.Boolean,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/period&quot;&gt;period&lt;/a&gt; milliseconds between the end of the previous task and the start of the next one.</source>
          <target state="translated">지정된 &lt;a href=&quot;timer#kotlin.concurrent%24timer(kotlin.String?,%20kotlin.Boolean,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/startAt&quot;&gt;startAt&lt;/a&gt; 날짜 에서 시작하여 이전 작업의 끝과 다음 작업의 시작 사이 의 &lt;a href=&quot;timer#kotlin.concurrent%24timer(kotlin.String?,%20kotlin.Boolean,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/period&quot;&gt;기간 (&lt;/a&gt; 밀리 초) 간격 으로 지정된 &lt;a href=&quot;timer#kotlin.concurrent%24timer(kotlin.String?,%20kotlin.Boolean,%20java.util.Date,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;작업을&lt;/a&gt; 주기적으로 실행하는 타이머를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="22770c831fe911c8f44e130668f6358652ebb9ea" translate="yes" xml:space="preserve">
          <source>Creates a timer that executes the specified &lt;a href=&quot;timer#kotlin.concurrent%24timer(kotlin.String?,%20kotlin.Boolean,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;action&lt;/a&gt; periodically, starting after the specified &lt;a href=&quot;timer#kotlin.concurrent%24timer(kotlin.String?,%20kotlin.Boolean,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/initialDelay&quot;&gt;initialDelay&lt;/a&gt; (expressed in milliseconds) and with the interval of &lt;a href=&quot;timer#kotlin.concurrent%24timer(kotlin.String?,%20kotlin.Boolean,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/period&quot;&gt;period&lt;/a&gt; milliseconds between the end of the previous task and the start of the next one.</source>
          <target state="translated">지정된 실행 타이머 작성 &lt;a href=&quot;timer#kotlin.concurrent%24timer(kotlin.String?,%20kotlin.Boolean,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/action&quot;&gt;작업을&lt;/a&gt; 지정된 후부터 주기적 &lt;a href=&quot;timer#kotlin.concurrent%24timer(kotlin.String?,%20kotlin.Boolean,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/initialDelay&quot;&gt;initialDelay의&lt;/a&gt; (밀리 초 단위로 표현됨)과의 간격을 &lt;a href=&quot;timer#kotlin.concurrent%24timer(kotlin.String?,%20kotlin.Boolean,%20kotlin.Long,%20kotlin.Long,%20kotlin.Function1((java.util.TimerTask,%20kotlin.Unit)))/period&quot;&gt;주기&lt;/a&gt; 이전 작업의 끝과 다음의 시작 사이 밀리.</target>
        </trans-unit>
        <trans-unit id="093f8c11b75317d2e1034076b3fef44bec50f9c8" translate="yes" xml:space="preserve">
          <source>Creates a tuple of type &lt;a href=&quot;-pair/index&quot;&gt;Pair&lt;/a&gt; from this and &lt;a href=&quot;to#kotlin%24to%28kotlin.to.A%2C+kotlin.to.B%29%2Fthat&quot;&gt;that&lt;/a&gt;.</source>
          <target state="translated">이것과 이것으로부터 &lt;a href=&quot;-pair/index&quot;&gt;Pair&lt;/a&gt; 형의 튜플을 작성 &lt;a href=&quot;to#kotlin%24to%28kotlin.to.A%2C+kotlin.to.B%29%2Fthat&quot;&gt;합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b80ded4c9a15d33d52f100adf7fd8e72702c865e" translate="yes" xml:space="preserve">
          <source>Creates a tuple of type &lt;a href=&quot;-pair/index&quot;&gt;Pair&lt;/a&gt; from this and &lt;a href=&quot;to#kotlin%24to(kotlin.to.A,%20kotlin.to.B)/that&quot;&gt;that&lt;/a&gt;.</source>
          <target state="translated">this와 &lt;a href=&quot;to#kotlin%24to(kotlin.to.A,%20kotlin.to.B)/that&quot;&gt;that&lt;/a&gt; 에서 &lt;a href=&quot;-pair/index&quot;&gt;Pair&lt;/a&gt; 유형의 튜플을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="9e557cb5662bab6115beaaccbd8865ba55632474" translate="yes" xml:space="preserve">
          <source>Creates a tuple of type &lt;a href=&quot;../-pair/index&quot;&gt;Pair&lt;/a&gt; from this and &lt;a href=&quot;../to#kotlin%24to%28kotlin.to.A%2C+kotlin.to.B%29%2Fthat&quot;&gt;that&lt;/a&gt;.</source>
          <target state="translated">이것과 이것으로부터 &lt;a href=&quot;../-pair/index&quot;&gt;Pair&lt;/a&gt; 형의 튜플을 작성 &lt;a href=&quot;../to#kotlin%24to%28kotlin.to.A%2C+kotlin.to.B%29%2Fthat&quot;&gt;합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="79c5a4be087c1ace591c89ea6cdaa0290289b135" translate="yes" xml:space="preserve">
          <source>Creates a tuple of type &lt;a href=&quot;../-pair/index&quot;&gt;Pair&lt;/a&gt; from this and &lt;a href=&quot;../to#kotlin%24to(kotlin.to.A,%20kotlin.to.B)/that&quot;&gt;that&lt;/a&gt;.</source>
          <target state="translated">this와 &lt;a href=&quot;../to#kotlin%24to(kotlin.to.A,%20kotlin.to.B)/that&quot;&gt;that&lt;/a&gt; 에서 &lt;a href=&quot;../-pair/index&quot;&gt;Pair&lt;/a&gt; 유형의 튜플을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="d31ca5b8fb7cb661b0a0559a6ffa2e4d118216c5" translate="yes" xml:space="preserve">
          <source>Creates a version from &lt;a href=&quot;-init-#kotlin.KotlinVersion%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Int%29%2Fmajor&quot;&gt;major&lt;/a&gt; and &lt;a href=&quot;-init-#kotlin.KotlinVersion%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Int%29%2Fminor&quot;&gt;minor&lt;/a&gt; components, leaving &lt;a href=&quot;patch&quot;&gt;patch&lt;/a&gt; component zero.</source>
          <target state="translated">&lt;a href=&quot;patch&quot;&gt;패치&lt;/a&gt; 구성 요소를 0으로 남겨두고 &lt;a href=&quot;-init-#kotlin.KotlinVersion%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Int%29%2Fmajor&quot;&gt;주요&lt;/a&gt; 구성 요소 와 &lt;a href=&quot;-init-#kotlin.KotlinVersion%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Int%29%2Fminor&quot;&gt;보조&lt;/a&gt; 구성 요소 에서 버전을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="e669f229b644b1604e4140c0742c32b89805e029" translate="yes" xml:space="preserve">
          <source>Creates a version from all three components.</source>
          <target state="translated">세 구성 요소 모두에서 버전을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="ac2f08fc68ede75588eeb623f5f45d20b5ceb0d1" translate="yes" xml:space="preserve">
          <source>Creates a version from major and minor components, leaving &lt;a href=&quot;patch&quot;&gt;patch&lt;/a&gt; component zero.</source>
          <target state="translated">주 구성 요소와 부 구성 요소에서 버전을 만들고 &lt;a href=&quot;patch&quot;&gt;패치&lt;/a&gt; 구성 요소는 0으로 둡니다 .</target>
        </trans-unit>
        <trans-unit id="2dcf822c9cd329c7445d6ff9e19773c5fd906c6f" translate="yes" xml:space="preserve">
          <source>Creates a weak reference object pointing to an object. Weak reference doesn't prevent removing object, and is nullified once object is collected.</source>
          <target state="translated">객체를 가리키는 약한 참조 객체를 만듭니다. 약한 참조는 객체 제거를 방해하지 않으며 객체가 수집되면 무효화됩니다.</target>
        </trans-unit>
        <trans-unit id="08834c5b02522e602df7f666ff21e2b712f70f4d" translate="yes" xml:space="preserve">
          <source>Creates a writer on this output stream using UTF-8 or the specified &lt;a href=&quot;writer#kotlin.io%24writer%28java.io.OutputStream%2C+java.nio.charset.Charset%29%2Fcharset&quot;&gt;charset&lt;/a&gt;.</source>
          <target state="translated">UTF-8 또는 지정된 것을 사용하여이 출력 스트림에 기록기를 작성합니다. &lt;a href=&quot;writer#kotlin.io%24writer%28java.io.OutputStream%2C+java.nio.charset.Charset%29%2Fcharset&quot;&gt; charset&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8363f5438cc275faa2bd9be6d8024711b56f26cb" translate="yes" xml:space="preserve">
          <source>Creates a writer on this output stream using UTF-8 or the specified &lt;a href=&quot;writer#kotlin.io%24writer(java.io.OutputStream,%20java.nio.charset.Charset)/charset&quot;&gt;charset&lt;/a&gt;.</source>
          <target state="translated">UTF-8 또는 지정된 &lt;a href=&quot;writer#kotlin.io%24writer(java.io.OutputStream,%20java.nio.charset.Charset)/charset&quot;&gt;charset을&lt;/a&gt; 사용하여이 출력 스트림에 작성기를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="c33cb35dd07a8560f5c0b436709cb377baedb202" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that wraps the original array returning its elements when being iterated.</source>
          <target state="translated">을 만듭니다 &lt;a href=&quot;-iterable/index#kotlin.collections.Iterable&quot;&gt;&lt;/a&gt;반복 될 때 요소를 반환하는 원래 배열을 래핑 Iterable 인스턴스를 .</target>
        </trans-unit>
        <trans-unit id="1680a341d81bcb160ec9d7cebf2ed92a5836bc28" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that wraps the original map returning its entries when being iterated.</source>
          <target state="translated">을 만듭니다 &lt;a href=&quot;-iterable/index#kotlin.collections.Iterable&quot;&gt;&lt;/a&gt;반복 될 때 항목을 리턴하는 원래 맵을 랩핑 Iterable 인스턴스를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="149cf06530ff5aac4f9f616f618bccac279e8cbe" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that wraps the original map returning its entries when being iterated.</source>
          <target state="translated">을 만듭니다 &lt;a href=&quot;../-iterable/index#kotlin.collections.Iterable&quot;&gt;&lt;/a&gt;반복 될 때 항목을 리턴하는 원래 맵을 랩핑 Iterable 인스턴스를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="070be7e77def6a0cfe7d0bff29e15fd8cf571104" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; for an &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Enumeration.html&quot;&gt;java.util.Enumeration&lt;/a&gt;, allowing to use it in &lt;code&gt;for&lt;/code&gt; loops.</source>
          <target state="translated">작성 &lt;a href=&quot;../-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator를&lt;/a&gt; 에 대한 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Enumeration.html&quot;&gt;java.util.Enumeration&lt;/a&gt; 에서 사용할 수 있도록, &lt;code&gt;for&lt;/code&gt; 루프.</target>
        </trans-unit>
        <trans-unit id="b8a1194086a80869bf5e32cf4ec1fe05b73b952f" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; for an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Enumeration.html&quot;&gt;java.util.Enumeration&lt;/a&gt;, allowing to use it in &lt;code&gt;for&lt;/code&gt; loops.</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; 루프 에서 사용할 수 있도록 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Enumeration.html&quot;&gt;java.util.Enumeration에&lt;/a&gt; 대한 &lt;a href=&quot;../-iterator/index#kotlin.collections.Iterator&quot;&gt;반복기&lt;/a&gt; 를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="fa7eeb353dcc0402efb954b10c4fd7f83f4abed5" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that wraps the original array returning its elements when being iterated.</source>
          <target state="translated">을 만듭니다 &lt;a href=&quot;../../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;&lt;/a&gt;반복 될 때 요소를 반환하는 원래 배열을 래핑 Iterable 인스턴스를 .</target>
        </trans-unit>
        <trans-unit id="1457740b35add09bc88a207588a58d86ab4affbf" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that wraps the original char sequence returning its characters when being iterated.</source>
          <target state="translated">을 만듭니다 &lt;a href=&quot;../../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;&lt;/a&gt;반복 될 때 문자를 리턴하는 원래 문자 순서를 랩핑 Iterable 인스턴스를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="e6010c6545edd6fc6d3f14f22fb1ca3547170f9a" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that wraps the original sequence returning its elements when being iterated.</source>
          <target state="translated">을 만듭니다 &lt;a href=&quot;../../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;&lt;/a&gt;반복 될 때 요소를 리턴하는 원래 순서를 랩핑 Iterable 인스턴스를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="8a00321f1e8128ded8335b65d0bdc746d39b6544" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; for iterating over the elements of the array.</source>
          <target state="translated">을 만듭니다 &lt;a href=&quot;../../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;&lt;/a&gt;배열의 요소를 반복하기 반복자 를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="492310e5133c7f522fd7194dc1b4f2fe454b95ef" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that wraps the original char sequence returning its characters when being iterated.</source>
          <target state="translated">&lt;a href=&quot;../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable을&lt;/a&gt; 만듭니다.반복 될 때 문자를 리턴하는 원래 문자 순서를 랩핑 인스턴스를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="7c69e13959a1cb87462b9abe6172dae182fbc836" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that wraps the original sequence returning its elements when being iterated.</source>
          <target state="translated">&lt;a href=&quot;../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable을&lt;/a&gt; 만듭니다.반복 될 때 요소를 리턴하는 원래 순서를 랩핑 인스턴스를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="f45143f46c7813f66f23de46756b62bdb63f01ad" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;index#kotlin.collections.ArrayList&quot;&gt;ArrayList&lt;/a&gt; filled from the &lt;a href=&quot;-init-#kotlin.collections.ArrayList%24%3Cinit%3E%28kotlin.collections.Collection%28%28kotlin.collections.ArrayList.E%29%29%29%2Felements&quot;&gt;elements&lt;/a&gt; collection.</source>
          <target state="translated">&lt;a href=&quot;-init-#kotlin.collections.ArrayList%24%3Cinit%3E%28kotlin.collections.Collection%28%28kotlin.collections.ArrayList.E%29%29%29%2Felements&quot;&gt;요소로&lt;/a&gt; 채워진 &lt;a href=&quot;index#kotlin.collections.ArrayList&quot;&gt;ArrayList&lt;/a&gt; 를 만듭니다. 컬렉션 .</target>
        </trans-unit>
        <trans-unit id="f101e154a9bf2df59a230e397dfc3ad640ae49fd" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;index#kotlin.collections.ArrayList&quot;&gt;ArrayList&lt;/a&gt; filled from the elements collection.</source>
          <target state="translated">요소 컬렉션에서 채워진 &lt;a href=&quot;index#kotlin.collections.ArrayList&quot;&gt;ArrayList&lt;/a&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="172a80649f231445c9b3b536887e042187ed6835" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;a href=&quot;index#kotlin.collections.ArrayList&quot;&gt;ArrayList&lt;/a&gt;.</source>
          <target state="translated">빈 &lt;a href=&quot;index#kotlin.collections.ArrayList&quot;&gt;ArrayList를&lt;/a&gt; 만듭니다. 합니다.</target>
        </trans-unit>
        <trans-unit id="11e2e30d68d8dcfe4321ef61fa43b8effe23946d" translate="yes" xml:space="preserve">
          <source>Creates an empty directory in the specified &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fdirectory&quot;&gt;directory&lt;/a&gt;, using the given &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fsuffix&quot;&gt;suffix&lt;/a&gt; to generate its name.</source>
          <target state="translated">지정된에 빈 디렉토리를 작성 &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fdirectory&quot;&gt;디렉토리&lt;/a&gt; 주어진 사용하여 &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fprefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fsuffix&quot;&gt;접미사&lt;/a&gt; 의 이름을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="09998a85b9506314015b672a3492b2b77eca53c3" translate="yes" xml:space="preserve">
          <source>Creates an empty directory in the specified &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir(kotlin.String,%20kotlin.String?,%20java.io.File?)/directory&quot;&gt;directory&lt;/a&gt;, using the given &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir(kotlin.String,%20kotlin.String?,%20java.io.File?)/prefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir(kotlin.String,%20kotlin.String?,%20java.io.File?)/suffix&quot;&gt;suffix&lt;/a&gt; to generate its name.</source>
          <target state="translated">지정된에 빈 디렉토리를 작성 &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir(kotlin.String,%20kotlin.String?,%20java.io.File?)/directory&quot;&gt;디렉토리&lt;/a&gt; (가) 주어진 사용하여 &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir(kotlin.String,%20kotlin.String?,%20java.io.File?)/prefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir(kotlin.String,%20kotlin.String?,%20java.io.File?)/suffix&quot;&gt;접미사&lt;/a&gt; 의 이름을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d575cfdf73a5eabdc9d28072dc08ca9284b5430" translate="yes" xml:space="preserve">
          <source>Creates an input stream for reading data from the specified portion of this byte array.</source>
          <target state="translated">이 바이트 배열의 지정된 부분으로부터 데이터를 읽어 들이기위한 입력 스트림을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="a498de335a1698d89734ca7ad1c696c8486a6bef" translate="yes" xml:space="preserve">
          <source>Creates an input stream for reading data from this byte array.</source>
          <target state="translated">이 바이트 배열로부터 데이터를 읽어 들이기위한 입력 스트림을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="fb004f78e15245ed4e66faeef95b32cc7865a03a" translate="yes" xml:space="preserve">
          <source>Creates an instance of &lt;a href=&quot;-k-type/index#kotlin.reflect.KType&quot;&gt;KType&lt;/a&gt; with the given classifier, substituting all its type parameters with star projections. The resulting type is not marked as nullable and does not have any annotations.</source>
          <target state="translated">주어진 분류 &lt;a href=&quot;-k-type/index#kotlin.reflect.KType&quot;&gt;자를&lt;/a&gt; 사용하여 KType 의 인스턴스를 작성 하고 모든 유형 매개 변수를 별 투영으로 대체합니다. 결과 유형은 널 입력 가능으로 표시되지 않으며 주석이 없습니다.</target>
        </trans-unit>
        <trans-unit id="fe0687a80da60c10e60a92c94c276de185e697c0" translate="yes" xml:space="preserve">
          <source>Creates an instance of &lt;a href=&quot;../-k-type/index#kotlin.reflect.KType&quot;&gt;KType&lt;/a&gt; with the given classifier, substituting all its type parameters with star projections. The resulting type is not marked as nullable and does not have any annotations.</source>
          <target state="translated">&lt;a href=&quot;../-k-type/index#kotlin.reflect.KType&quot;&gt;KType&lt;/a&gt; 의 인스턴스를 만듭니다.주어진 분류 사용하여 하고 모든 유형 매개 변수를 별 투영으로 대체합니다. 결과 유형은 널 입력 가능으로 표시되지 않으며 주석이 없습니다.</target>
        </trans-unit>
        <trans-unit id="355c4798f5b6985e9a80d39a2ff6cceacda541d9" translate="yes" xml:space="preserve">
          <source>Creates an instance of &lt;a href=&quot;../kotlin.reflect/-k-type/index#kotlin.reflect.KType&quot;&gt;KType&lt;/a&gt; with the given classifier, substituting all its type parameters with star projections. The resulting type is not marked as nullable and does not have any annotations.</source>
          <target state="translated">&lt;a href=&quot;../kotlin.reflect/-k-type/index#kotlin.reflect.KType&quot;&gt;KType&lt;/a&gt; 의 인스턴스를 만듭니다.주어진 분류 사용하여 하고 모든 유형 매개 변수를 별 투영으로 대체합니다. 결과 유형은 널 입력 가능으로 표시되지 않으며 주석이 없습니다.</target>
        </trans-unit>
        <trans-unit id="032d8f86211f8339b60701af86804b368db5583d" translate="yes" xml:space="preserve">
          <source>Creates an invariant projection of a given type. Invariant projection is just the type itself, without any use-site variance modifiers applied to it. For example, in the type &lt;code&gt;Set&amp;lt;String&amp;gt;&lt;/code&gt;, &lt;code&gt;String&lt;/code&gt; is an invariant projection of the type represented by the class &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">주어진 유형의 고정 투영을 만듭니다. 불변 투영은 사용 사이트 분산 수정자가 적용되지 않은 유형 자체입니다. 예를 들어, &lt;code&gt;Set&amp;lt;String&amp;gt;&lt;/code&gt; 유형 에서 &lt;code&gt;String&lt;/code&gt; 은 &lt;code&gt;String&lt;/code&gt; 클래스가 나타내는 유형의 고정 투영법입니다. .</target>
        </trans-unit>
        <trans-unit id="188d52b577049ed907518d59faef4a28341b3019" translate="yes" xml:space="preserve">
          <source>Creates an iterator for iterating over the elements of the array.</source>
          <target state="translated">배열의 요소를 반복하기위한 반복자를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="062635b077927c6a08e98c1db093e6513c40efaf" translate="yes" xml:space="preserve">
          <source>Creates an iterator over the elements of the array.</source>
          <target state="translated">배열의 요소에 대해 반복자를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="644a56faf95e507b15f944cadf10fa550567091b" translate="yes" xml:space="preserve">
          <source>Creates an unsigned byte array of the specified &lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;, filled with random bytes.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.Int%29%2Fsize&quot;&gt;크기&lt;/a&gt; 의 부호없는 바이트 배열을 만듭니다. 임의 바이트로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="66877aac03887813f9ba24a7ef0c8a4d6fb5139d" translate="yes" xml:space="preserve">
          <source>Creates an unsigned byte array of the specified &lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes(kotlin.random.Random,%20kotlin.Int)/size&quot;&gt;size&lt;/a&gt;, filled with random bytes.</source>
          <target state="translated">임의의 바이트로 채워진 지정된 &lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes(kotlin.random.Random,%20kotlin.Int)/size&quot;&gt;크기&lt;/a&gt; 의 부호없는 바이트 배열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="5d694a0ec93b05884276d54e792b91045a2ba907" translate="yes" xml:space="preserve">
          <source>Creates an unsigned byte array of the specified &lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;, filled with random bytes.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.Int%29%2Fsize&quot;&gt;크기&lt;/a&gt; 의 부호없는 바이트 배열을 임의 바이트로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="312022f67eebf04031c78688e7942ddd84bdc791" translate="yes" xml:space="preserve">
          <source>Creates an unsigned byte array of the specified &lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes(kotlin.random.Random,%20kotlin.Int)/size&quot;&gt;size&lt;/a&gt;, filled with random bytes.</source>
          <target state="translated">임의의 바이트로 채워진 지정된 &lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes(kotlin.random.Random,%20kotlin.Int)/size&quot;&gt;크기&lt;/a&gt; 의 부호없는 바이트 배열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="a05c8d617f3a8328401bb99287d4b9dbf5e98b4f" translate="yes" xml:space="preserve">
          <source>Creates detached object graph from value stored earlier in a C raw pointer.</source>
          <target state="translated">C 원시 포인터에 이전에 저장된 값에서 분리 된 객체 그래프를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="905e0440a71b39cacb8983c47ad7865cd04540fa" translate="yes" xml:space="preserve">
          <source>Creates stable pointer to object, ensuring associated object subgraph is disjoint in specified mode (&lt;a href=&quot;../-transfer-mode/-s-a-f-e&quot;&gt;TransferMode.SAFE&lt;/a&gt; by default). Raw value returned by &lt;a href=&quot;as-c-pointer&quot;&gt;asCPointer&lt;/a&gt; could be stored to a C variable or passed to another Kotlin machine.</source>
          <target state="translated">객체에 대한 안정적인 포인터를 만들어 관련 객체 하위 그래프가 지정된 모드 ( 기본적으로 &lt;a href=&quot;../-transfer-mode/-s-a-f-e&quot;&gt;TransferMode.SAFE)&lt;/a&gt; 에서 분리되도록합니다 . &lt;a href=&quot;as-c-pointer&quot;&gt;asCPointer&lt;/a&gt; 가 리턴 한 원시 값 은 C 변수에 저장되거나 다른 Kotlin 시스템으로 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="271a82431d9fa97eadc8deb6264e0ef2cc38dd8a" translate="yes" xml:space="preserve">
          <source>Creates text node and append it to the element.</source>
          <target state="translated">텍스트 노드를 만들어 요소에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="1f355103d2a3e17a85828cdb67583359d0f4c05a" translate="yes" xml:space="preserve">
          <source>Creates unintercepted coroutine with receiver type &lt;a href=&quot;create-coroutine-unintercepted#R&quot;&gt;R&lt;/a&gt; and result type &lt;a href=&quot;create-coroutine-unintercepted#T&quot;&gt;T&lt;/a&gt;. This function creates a new, fresh instance of suspendable computation every time it is invoked.</source>
          <target state="translated">수신자 유형 &lt;a href=&quot;create-coroutine-unintercepted#R&quot;&gt;R&lt;/a&gt; 및 결과 유형 &lt;a href=&quot;create-coroutine-unintercepted#T&quot;&gt;T로&lt;/a&gt; 인터셉트되지 않은 코 루틴을 작성 합니다. 이 함수는 호출 할 때마다 새롭고 새로운 일시 중단 가능한 계산 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="fabe2dc686b2babe37e5f9906683b798fcbfe5dc" translate="yes" xml:space="preserve">
          <source>Creates unintercepted coroutine without receiver and with result type &lt;a href=&quot;create-coroutine-unintercepted#T&quot;&gt;T&lt;/a&gt;. This function creates a new, fresh instance of suspendable computation every time it is invoked.</source>
          <target state="translated">수신자없이 결과 유형 &lt;a href=&quot;create-coroutine-unintercepted#T&quot;&gt;T로&lt;/a&gt; 인터셉트되지 않은 코 루틴을 작성 합니다. 이 함수는 호출 할 때마다 새롭고 새로운 일시 중단 가능한 계산 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="99e17083ff94e8a04031aab60bd2f3b8b0074a79" translate="yes" xml:space="preserve">
          <source>Creating DTOs (POJOs/POCOs)</source>
          <target state="translated">DTO 생성 (POJO / POCO)</target>
        </trans-unit>
        <trans-unit id="5bbe6928a3475f1c1aa37bc2aaf2197e1a851133" translate="yes" xml:space="preserve">
          <source>Creating Hello Kotlin</source>
          <target state="translated">헬로 코 틀린 만들기</target>
        </trans-unit>
        <trans-unit id="6e33ab19ca394fb84e75cdfb2328b03878878c15" translate="yes" xml:space="preserve">
          <source>Creating JavaScript libraries and Node.js files</source>
          <target state="translated">JavaScript 라이브러리 및 Node.js 파일 만들기</target>
        </trans-unit>
        <trans-unit id="f2eb45b71e49bc3b558945f74db4b24998a792a4" translate="yes" xml:space="preserve">
          <source>Creating Kotlin code that targets client-side JavaScript</source>
          <target state="translated">클라이언트 측 JavaScript를 대상으로하는 Kotlin 코드 작성</target>
        </trans-unit>
        <trans-unit id="a015a191b6c32e9034c4dc69a4a8a6547fa7dde4" translate="yes" xml:space="preserve">
          <source>Creating Kotlin code that targets server-side JavaScript</source>
          <target state="translated">서버 측 JavaScript를 대상으로하는 Kotlin 코드 작성</target>
        </trans-unit>
        <trans-unit id="ce8b88f0d45a9e05a0acb80a3544621deee4515d" translate="yes" xml:space="preserve">
          <source>Creating Struct and Union as &lt;code&gt;CValuesRef&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CValuesRef&amp;lt;T&amp;gt;&lt;/code&gt; 로 구조 및 결합 작성</target>
        </trans-unit>
        <trans-unit id="d764e4c4091cd3af83661688bcd0070b7840795b" translate="yes" xml:space="preserve">
          <source>Creating Web Applications with Http Servlets</source>
          <target state="translated">Http 서블릿을 사용하여 웹 응용 프로그램 만들기</target>
        </trans-unit>
        <trans-unit id="91bc9208620d0b7ac0d6d70d7371878e3ca740f1" translate="yes" xml:space="preserve">
          <source>Creating a &lt;code&gt;CValue&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CValue&amp;lt;T&amp;gt;&lt;/code&gt; 생성</target>
        </trans-unit>
        <trans-unit id="51e9c1badeade62d27e067d5b5176d5eeee96439" translate="yes" xml:space="preserve">
          <source>Creating a Greeting Data Class and Controller</source>
          <target state="translated">인사말 데이터 클래스 및 컨트롤러 만들기</target>
        </trans-unit>
        <trans-unit id="8f60dc47b51c5c7184e8e31baa8a1934331bcbcb" translate="yes" xml:space="preserve">
          <source>Creating a Home Controller</source>
          <target state="translated">홈 컨트롤러 만들기</target>
        </trans-unit>
        <trans-unit id="1fe7f636b4c3cc8163ad15d02aafbd937ce7ecd6" translate="yes" xml:space="preserve">
          <source>Creating a Kotlin JavaScript library with the Command Line Compiler</source>
          <target state="translated">명령 행 컴파일러를 사용하여 Kotlin JavaScript 라이브러리 작성</target>
        </trans-unit>
        <trans-unit id="9f4b0b2d75c9d2d6bc7c0ed8f0a2631a3ad378b3" translate="yes" xml:space="preserve">
          <source>Creating a Kotlin Library</source>
          <target state="translated">코 틀린 라이브러리 만들기</target>
        </trans-unit>
        <trans-unit id="4ea74668de10780b6390b876111ed84510c44765" translate="yes" xml:space="preserve">
          <source>Creating a Kotlin/JavaScript library</source>
          <target state="translated">Kotlin / JavaScript 라이브러리 작성</target>
        </trans-unit>
        <trans-unit id="3b2f68c77cb636dbe2bb3b1e6af8eba12852848e" translate="yes" xml:space="preserve">
          <source>Creating a Kotlin/Native Gradle project</source>
          <target state="translated">Kotlin / Native Gradle 프로젝트 생성</target>
        </trans-unit>
        <trans-unit id="d576ba59729b1adb7aa8a2fbb7114d10ccbd15fe" translate="yes" xml:space="preserve">
          <source>Creating a RESTful Web Service with Spring Boot</source>
          <target state="translated">Spring Boot로 RESTful 웹 서비스 생성</target>
        </trans-unit>
        <trans-unit id="875d1659f0b60a210ae22470241a1b0564c004f8" translate="yes" xml:space="preserve">
          <source>Creating a course</source>
          <target state="translated">코스 만들기</target>
        </trans-unit>
        <trans-unit id="5779ce31675e4f49452cfd03428b18f0bba00725" translate="yes" xml:space="preserve">
          <source>Creating a new project</source>
          <target state="translated">새로운 프로젝트 만들기</target>
        </trans-unit>
        <trans-unit id="91b3670f50a7235a62e631529cda3b62ff015b13" translate="yes" xml:space="preserve">
          <source>Creating a project</source>
          <target state="translated">프로젝트 만들기</target>
        </trans-unit>
        <trans-unit id="c4b23bfacf5d34c9319619616d3245375600ea1d" translate="yes" xml:space="preserve">
          <source>Creating a singleton</source>
          <target state="translated">싱글 톤 만들기</target>
        </trans-unit>
        <trans-unit id="091fcca5c001dbc9b7d735a1d55ab5a5f4b3212a" translate="yes" xml:space="preserve">
          <source>Creating an Android Project</source>
          <target state="translated">안드로이드 프로젝트 만들기</target>
        </trans-unit>
        <trans-unit id="5ae79fb1befc41c8a93a37b1959402c84de925a8" translate="yes" xml:space="preserve">
          <source>Creating an application targeting JavaScript</source>
          <target state="translated">JavaScript를 대상으로하는 응용 프로그램 만들기</target>
        </trans-unit>
        <trans-unit id="167edf949ab29cb746f1e2434beb01cf91923a77" translate="yes" xml:space="preserve">
          <source>Creating and running a first application</source>
          <target state="translated">첫 번째 응용 프로그램 작성 및 실행</target>
        </trans-unit>
        <trans-unit id="7db9641b9acaee33541f0e9bb9b9a0db5d222f13" translate="yes" xml:space="preserve">
          <source>Creating and running the first application</source>
          <target state="translated">첫 번째 응용 프로그램 만들기 및 실행</target>
        </trans-unit>
        <trans-unit id="2e35af553b908f12f967abdeca1be7c9c53f4314" translate="yes" xml:space="preserve">
          <source>Creating basic classes and their instances</source>
          <target state="translated">기본 클래스 및 해당 인스턴스 만들기</target>
        </trans-unit>
        <trans-unit id="23c2235d034bfd3052d33a35f0e2f156cf20e65b" translate="yes" xml:space="preserve">
          <source>Creating basic classes and their instances:</source>
          <target state="translated">기본 클래스 및 해당 인스턴스 작성 :</target>
        </trans-unit>
        <trans-unit id="335208229c2cc5f4aeb2d1831c924860ce5407da" translate="yes" xml:space="preserve">
          <source>Creating bindings for a new library</source>
          <target state="translated">새 라이브러리에 대한 바인딩 작성</target>
        </trans-unit>
        <trans-unit id="25d8af1fe3f9177178c334372ae34f6512d705aa" translate="yes" xml:space="preserve">
          <source>Creating iOS Application</source>
          <target state="translated">iOS 애플리케이션 생성</target>
        </trans-unit>
        <trans-unit id="0bbcbdde173cc3954b14384f94eda12495115411" translate="yes" xml:space="preserve">
          <source>Creating instances of classes</source>
          <target state="translated">클래스 인스턴스 만들기</target>
        </trans-unit>
        <trans-unit id="8d7ec9f8d0cf9f3525b2c0412bcadf2bb077691e" translate="yes" xml:space="preserve">
          <source>Creating instances of nested, inner and anonymous inner classes is described in &lt;a href=&quot;nested-classes&quot;&gt;Nested classes&lt;/a&gt;.</source>
          <target state="translated">중첩, 내부 및 익명 내부 클래스의 인스턴스 작성은 중첩 클래스에 설명되어 &lt;a href=&quot;nested-classes&quot;&gt;있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6ec55b6c63e301cb9aca12340ee39058119de416" translate="yes" xml:space="preserve">
          <source>Creating marker annotations</source>
          <target state="translated">마커 주석 만들기</target>
        </trans-unit>
        <trans-unit id="9d617173515b440c011c25a9478a996b59b03e82" translate="yes" xml:space="preserve">
          <source>Creating the Application class</source>
          <target state="translated">응용 프로그램 클래스 만들기</target>
        </trans-unit>
        <trans-unit id="a47a8f67c031f93257fd589df0322e2bc8af9dd3" translate="yes" xml:space="preserve">
          <source>Creating the Shared Module</source>
          <target state="translated">공유 모듈 생성</target>
        </trans-unit>
        <trans-unit id="d2a463d1fd54eb7d11c92e0e71b86fed201fe30d" translate="yes" xml:space="preserve">
          <source>Current Limitations</source>
          <target state="translated">전류 제한</target>
        </trans-unit>
        <trans-unit id="dc62b829e9922c472e0def8fba9fe4f58a170596" translate="yes" xml:space="preserve">
          <source>Current Stability of Kotlin Components</source>
          <target state="translated">Kotlin 구성 요소의 현재 안정성</target>
        </trans-unit>
        <trans-unit id="0ff7a081ba1fcd225575a0f0c0cb2159f7a7e349" translate="yes" xml:space="preserve">
          <source>Current data size, may concurrently change later on.</source>
          <target state="translated">현재 데이터 크기는 나중에 동시에 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="713b07e9490d702bdceb690d20d9ed5d803c5412" translate="yes" xml:space="preserve">
          <source>Currently the Kotlin/Native compiler produces debug info compatible with the DWARF 2 specification, so modern debugger tools can perform the following operations:</source>
          <target state="translated">현재 Kotlin / Native 컴파일러는 DWARF 2 사양과 호환되는 디버그 정보를 생성하므로 최신 디버거 도구는 다음 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b8f71c2668c0aed64bb077872227679b7061883" translate="yes" xml:space="preserve">
          <source>Currently you should not use DCE tool if your project is a shared library. It's only applicable when you are developing an application (which may use shared libraries). The reason is: DCE does not know which parts of the library are going to be used by the user's application.</source>
          <target state="translated">현재 프로젝트가 공유 라이브러리 인 경우 DCE 도구를 사용하지 않아야합니다. 응용 프로그램을 개발할 때만 적용됩니다 (공유 라이브러리를 사용할 수 있음). 그 이유는 다음과 같습니다. DCE는 사용자 응용 프로그램이 라이브러리의 어떤 부분을 사용할지 알지 못합니다.</target>
        </trans-unit>
        <trans-unit id="6e2f7653e302d483564689cc3c76773c62c4fd47" translate="yes" xml:space="preserve">
          <source>Currently, scratches are supported only in Kotlin/JVM projects.</source>
          <target state="translated">현재 스크래치는 Kotlin / JVM 프로젝트에서만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="292aba6163db8b0b2f940f22522e29628d2e30c7" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;Parceler&lt;/code&gt;s</source>
          <target state="translated">사용자 정의 &lt;code&gt;Parceler&lt;/code&gt; 의</target>
        </trans-unit>
        <trans-unit id="1c4db5c4b660736d3dbab3d8b61e303bbf6919b6" translate="yes" xml:space="preserve">
          <source>Custom Contracts</source>
          <target state="translated">맞춤 계약</target>
        </trans-unit>
        <trans-unit id="8865a3a68c9544ac12367c763b6303a7435e3ab1" translate="yes" xml:space="preserve">
          <source>Custom comparators are also handy when a list uses an order different from natural one, for example, a case-insensitive order for &lt;code&gt;String&lt;/code&gt; elements.</source>
          <target state="translated">사용자 정의 비교기는 목록이 자연과 다른 순서를 사용하는 경우에도 편리합니다 (예 : &lt;code&gt;String&lt;/code&gt; 요소 의 대소 문자를 구분하지 않는 순서) .</target>
        </trans-unit>
        <trans-unit id="77242d32f849b7b91b473376230b5128e0904393" translate="yes" xml:space="preserve">
          <source>Custom contracts are introduced by the call to &lt;code&gt;contract&lt;/code&gt; stdlib function, which provides DSL scope:</source>
          <target state="translated">DSL 범위를 제공하는 &lt;code&gt;contract&lt;/code&gt; stdlib 기능 호출에 의해 사용자 정의 계약이 도입됩니다 .</target>
        </trans-unit>
        <trans-unit id="5aa1de640fb90d00ad86e2515a356290d45d70d9" translate="yes" xml:space="preserve">
          <source>Custom orders</source>
          <target state="translated">맞춤 주문</target>
        </trans-unit>
        <trans-unit id="510dabf7252835d9978c83c5ec9c6ce309cf2f03" translate="yes" xml:space="preserve">
          <source>Custom source sets created in addition to the &lt;a href=&quot;#default-project-layout&quot;&gt;default ones&lt;/a&gt; should be explicitly included into the dependencies hierarchy to be able to use declarations from other source sets and, most importantly, to take part in compilations. Most often, they need a &lt;code&gt;dependsOn(commonMain)&lt;/code&gt; or &lt;code&gt;dependsOn(commonTest)&lt;/code&gt; statement, and some of the default platform-specific source sets should depend on the custom ones, directly or indirectly:</source>
          <target state="translated">&lt;a href=&quot;#default-project-layout&quot;&gt;기본&lt;/a&gt; 소스 외에 생성 된 사용자 정의 소스 세트 는 다른 소스 세트의 선언을 사용하고 가장 중요하게는 컴파일에 참여할 수 있도록 종속성 계층 구조에 명시 적으로 포함되어야합니다. 대부분의 경우 &lt;code&gt;dependsOn(commonMain)&lt;/code&gt; 또는 &lt;code&gt;dependsOn(commonTest)&lt;/code&gt; 문이 필요하며 기본 플랫폼 별 소스 세트 중 일부는 직접 또는 간접적으로 사용자 정의 소스에 의존해야합니다.</target>
        </trans-unit>
        <trans-unit id="9641d220de46bb82adcd91404005a9e912f6654c" translate="yes" xml:space="preserve">
          <source>CustomElementRegistry</source>
          <target state="translated">CustomElementRegistry</target>
        </trans-unit>
        <trans-unit id="e3ae39135530349988b9f2b37312a7da38d5e9d7" translate="yes" xml:space="preserve">
          <source>CustomEventInit</source>
          <target state="translated">CustomEventInit</target>
        </trans-unit>
        <trans-unit id="b7ddd78bc2d738dd5f328a3913edbca0e62d37a2" translate="yes" xml:space="preserve">
          <source>DASH_PUNCTUATION</source>
          <target state="translated">DASH_PUNCTUATION</target>
        </trans-unit>
        <trans-unit id="7da9e660ee43ba312a0eadb9e2826cd368fadd30" translate="yes" xml:space="preserve">
          <source>DBFlow</source>
          <target state="translated">DBFlow</target>
        </trans-unit>
        <trans-unit id="fa4185d299a864320463795980d92616fe160a5f" translate="yes" xml:space="preserve">
          <source>DBFlow defines a bunch of extensions to make its usage in Kotlin more idiomatic, which you can include in your dependencies:</source>
          <target state="translated">DBFlow는 Kotlin에서의 사용을보다 관용적으로 만들기 위해 확장을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="aa3a5ae3d36048343f3b6ed675a6abcebd03915b" translate="yes" xml:space="preserve">
          <source>DCE does not perform minification (uglification) of your code by removing unnecessary whitespaces and shortening identifiers. You should use existing tools, like UglifyJS (https://github.com/mishoo/UglifyJS2) or Google Closure Compiler (https://developers.google.com/closure/compiler/) for this purpose.</source>
          <target state="translated">DCE는 불필요한 공백을 제거하고 식별자를 단축하여 코드의 축소 (추적 화)를 수행하지 않습니다. 이를 위해 UglifyJS (https://github.com/mishoo/UglifyJS2) 또는 Google Closure Compiler (https://developers.google.com/closure/compiler/)와 같은 기존 도구를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="607449471dd18a1ecd5a210d9b9d39d34771a6f4" translate="yes" xml:space="preserve">
          <source>DCE tool is currently available from Gradle.</source>
          <target state="translated">DCE 도구는 현재 Gradle에서 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="7bafdff61869a500494f4a0443ee9c0bfcb64720" translate="yes" xml:space="preserve">
          <source>DECIMAL_DIGIT_NUMBER</source>
          <target state="translated">DECIMAL_DIGIT_NUMBER</target>
        </trans-unit>
        <trans-unit id="1902b4c2b3614e4e710b092597e72b666f4e62de" translate="yes" xml:space="preserve">
          <source>DEFAULT_BUFFER_SIZE</source>
          <target state="translated">DEFAULT_BUFFER_SIZE</target>
        </trans-unit>
        <trans-unit id="7e26ca86e8689fde0bc1ba61a994c9cf74dbfa68" translate="yes" xml:space="preserve">
          <source>DOMImplementation</source>
          <target state="translated">DOMImplementation</target>
        </trans-unit>
        <trans-unit id="0bc9f0b62530ff017c6c91b4fa67c96e2492460d" translate="yes" xml:space="preserve">
          <source>DOMMatrixReadOnly</source>
          <target state="translated">DOMMatrixReadOnly</target>
        </trans-unit>
        <trans-unit id="bc2d230be05641f6476890725cf77245ddd0cd4e" translate="yes" xml:space="preserve">
          <source>DOMParser</source>
          <target state="translated">DOMParser</target>
        </trans-unit>
        <trans-unit id="536b73091cfe45ef69242c6db35a7b5fd376f931" translate="yes" xml:space="preserve">
          <source>DOMPointInit</source>
          <target state="translated">DOMPointInit</target>
        </trans-unit>
        <trans-unit id="909d75ad6b7731c724935a96a7082a7facdae2f6" translate="yes" xml:space="preserve">
          <source>DOMPointReadOnly</source>
          <target state="translated">DOMPointReadOnly</target>
        </trans-unit>
        <trans-unit id="a1e260231ffc7b5f77e0bbbf92dae64bd48ff67c" translate="yes" xml:space="preserve">
          <source>DOMQuad</source>
          <target state="translated">DOMQuad</target>
        </trans-unit>
        <trans-unit id="a696856663e8dc6d97e69006973f485c1eba6bf1" translate="yes" xml:space="preserve">
          <source>DOMRectInit</source>
          <target state="translated">DOMRectInit</target>
        </trans-unit>
        <trans-unit id="bf4907ee992b8f11e57a77ebeb8fe2280a9a7950" translate="yes" xml:space="preserve">
          <source>DOMRectList</source>
          <target state="translated">DOMRectList</target>
        </trans-unit>
        <trans-unit id="702ea8983cf1fffc7b15b640c87fdb73f01dfc97" translate="yes" xml:space="preserve">
          <source>DOMRectReadOnly</source>
          <target state="translated">DOMRectReadOnly</target>
        </trans-unit>
        <trans-unit id="8832c7fde3b423da65a9f5b85c41f43c7152cddc" translate="yes" xml:space="preserve">
          <source>DOMStringMap</source>
          <target state="translated">DOMStringMap</target>
        </trans-unit>
        <trans-unit id="dc3bf6edffd07dfbe381f9aa7a7c4de309f1c584" translate="yes" xml:space="preserve">
          <source>DOMTokenList</source>
          <target state="translated">DOMTokenList</target>
        </trans-unit>
        <trans-unit id="50637fefb475f90055c63ca741f15faf0c2d8aa9" translate="yes" xml:space="preserve">
          <source>DOT_MATCHES_ALL</source>
          <target state="translated">DOT_MATCHES_ALL</target>
        </trans-unit>
        <trans-unit id="8ab5faf932ad8859edda84dc1b3b557d86d509cc" translate="yes" xml:space="preserve">
          <source>DSL example</source>
          <target state="translated">DSL 예</target>
        </trans-unit>
        <trans-unit id="8e0e5961c9dc8c314c3d9bec3aebc5d5dceab1d6" translate="yes" xml:space="preserve">
          <source>Dagger</source>
          <target state="translated">Dagger</target>
        </trans-unit>
        <trans-unit id="8f5dcead155abae58e4489a3bd3c744c03583ea7" translate="yes" xml:space="preserve">
          <source>Dagger generates an implementation of &lt;code&gt;CoffeeShop&lt;/code&gt; that allows you to get a fully-injected &lt;code&gt;CoffeeMaker&lt;/code&gt;. You can navigate and see the implementation of &lt;code&gt;DaggerCoffeeShop&lt;/code&gt; if you open the project in IDE.</source>
          <target state="translated">Dagger 는 완전히 주입 된 &lt;code&gt;CoffeeMaker&lt;/code&gt; 를 얻을 수있는 &lt;code&gt;CoffeeShop&lt;/code&gt; 의 구현을 생성합니다 . IDE에서 프로젝트를 열면 &lt;code&gt;DaggerCoffeeShop&lt;/code&gt; 의 구현을 탐색하고 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f20dcbd9b08fb9703f8879bef939587ab26fc293" translate="yes" xml:space="preserve">
          <source>Data Binding</source>
          <target state="translated">데이터 바인딩</target>
        </trans-unit>
        <trans-unit id="c54003d0e1fe3378d8a6f8ba0f92ff9d2ae47e4b" translate="yes" xml:space="preserve">
          <source>Data Classes</source>
          <target state="translated">데이터 클래스</target>
        </trans-unit>
        <trans-unit id="25c88740923ece15a2d16cf6a1e52ff72c24402d" translate="yes" xml:space="preserve">
          <source>Data Classes and Destructuring Declarations</source>
          <target state="translated">데이터 클래스 및 파괴 선언</target>
        </trans-unit>
        <trans-unit id="d329cacaecc37bed4e5fba53c74606c0aee9908a" translate="yes" xml:space="preserve">
          <source>Data class overriding &lt;code&gt;copy&lt;/code&gt;</source>
          <target state="translated">데이터 클래스 재정의 &lt;code&gt;copy&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c96c362523b5e527c7fdde02d69ed5a5b708cdc" translate="yes" xml:space="preserve">
          <source>Data class representing a result of executing an action, along with the duration of elapsed time interval.</source>
          <target state="translated">경과 시간 간격과 함께 작업 실행 결과를 나타내는 데이터 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="ab038a7b945db81e2822af6bc55e7e1f6c35643c" translate="yes" xml:space="preserve">
          <source>Data class representing a value from a collection or sequence, along with its index in that collection or sequence.</source>
          <target state="translated">컬렉션 또는 시퀀스의 인덱스와 함께 컬렉션 또는 시퀀스의 값을 나타내는 데이터 클래스</target>
        </trans-unit>
        <trans-unit id="8d0d0dc2f1ce54673556eb82f08e78cb7b578e8e" translate="yes" xml:space="preserve">
          <source>Data classes</source>
          <target state="translated">데이터 클래스</target>
        </trans-unit>
        <trans-unit id="b34a69fadee2adf638bc56a02902a4fe355613a2" translate="yes" xml:space="preserve">
          <source>Data classes cannot be abstract, open, sealed or inner;</source>
          <target state="translated">데이터 클래스는 추상, 공개, 봉인 또는 내부 일 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="425b14cd89372a10529ed16926e15bcdbfff8b02" translate="yes" xml:space="preserve">
          <source>DataTransfer</source>
          <target state="translated">DataTransfer</target>
        </trans-unit>
        <trans-unit id="8b221a5dbde46295ca9b03d3ef95bf345bc17788" translate="yes" xml:space="preserve">
          <source>DataTransferItem</source>
          <target state="translated">DataTransferItem</target>
        </trans-unit>
        <trans-unit id="f7120cb47ca5a4d617a103230733edaf9acbcdf2" translate="yes" xml:space="preserve">
          <source>DataTransferItemList</source>
          <target state="translated">DataTransferItemList</target>
        </trans-unit>
        <trans-unit id="16dcedc9e32ace9d82832081fe934341dd1cd877" translate="yes" xml:space="preserve">
          <source>DataView</source>
          <target state="translated">DataView</target>
        </trans-unit>
        <trans-unit id="eb9a4bc1c0c153e4e4b042a79113b815b7e3021d" translate="yes" xml:space="preserve">
          <source>Date</source>
          <target state="translated">Date</target>
        </trans-unit>
        <trans-unit id="846d191ced329d2097943633bca6335b1f9262d7" translate="yes" xml:space="preserve">
          <source>Dead code elimination is often also called 'tree shaking'.</source>
          <target state="translated">데드 코드 제거는 종종 '트리 떨림'이라고도합니다.</target>
        </trans-unit>
        <trans-unit id="0c1e9ddea0de0b23e31feaa4dc074a8f7479dfd8" translate="yes" xml:space="preserve">
          <source>Dealing with compiler bugs</source>
          <target state="translated">컴파일러 버그 다루기</target>
        </trans-unit>
        <trans-unit id="0fbdd5ca2957e4874b16a85b82aca02e4bd258fd" translate="yes" xml:space="preserve">
          <source>Debug the application</source>
          <target state="translated">응용 프로그램 디버그</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="66abfad53a2d8c7fd31179cc45507c14c6aaafb0" translate="yes" xml:space="preserve">
          <source>Debugging Kotlin in browser</source>
          <target state="translated">브라우저에서 Kotlin 디버깅</target>
        </trans-unit>
        <trans-unit id="626734da9fe68917919a5a44392d04c3162eb224" translate="yes" xml:space="preserve">
          <source>Debugging coroutines and threads</source>
          <target state="translated">코 루틴 및 스레드 디버깅</target>
        </trans-unit>
        <trans-unit id="f5b699f98a2551f1c0a872e7cffc95e49c88762b" translate="yes" xml:space="preserve">
          <source>Debugging in Chrome DevTools</source>
          <target state="translated">Chrome DevTools에서 디버깅</target>
        </trans-unit>
        <trans-unit id="58840807a07f5fa12aded8d821166eef8128db32" translate="yes" xml:space="preserve">
          <source>Debugging mode is also turned on when JVM is run with &lt;code&gt;-ea&lt;/code&gt; option. You can read more about debugging facilities in the documentation of the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-d-e-b-u-g_-p-r-o-p-e-r-t-y_-n-a-m-e.html&quot;&gt;DEBUG_PROPERTY_NAME&lt;/a&gt; property.</source>
          <target state="translated">디버깅 모드는 JVM이 &lt;code&gt;-ea&lt;/code&gt; 옵션으로 실행될 때도 켜집니다 . &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-d-e-b-u-g_-p-r-o-p-e-r-t-y_-n-a-m-e.html&quot;&gt;DEBUG_PROPERTY_NAME&lt;/a&gt; 속성 문서에서 디버깅 기능에 대해 자세히 알아볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="01215d60a71f32827f8a67f7496424403c10a94c" translate="yes" xml:space="preserve">
          <source>Debugging the application</source>
          <target state="translated">응용 프로그램 디버깅</target>
        </trans-unit>
        <trans-unit id="4d65f5b5da7a4a2049f711daa098ee70aa82ecc5" translate="yes" xml:space="preserve">
          <source>Debugging using logging</source>
          <target state="translated">로깅을 사용하여 디버깅</target>
        </trans-unit>
        <trans-unit id="237be5a4295f1b90ed939309ffb7be8a9e830c97" translate="yes" xml:space="preserve">
          <source>Debugging with IDEA</source>
          <target state="translated">IDEA로 디버깅</target>
        </trans-unit>
        <trans-unit id="d1a765028806b38683097ff056ea9879f27c3607" translate="yes" xml:space="preserve">
          <source>Debugging works for versions 1.3.8 or later of &lt;code&gt;kotlinx-coroutines-core&lt;/code&gt;.</source>
          <target state="translated">디버깅은 &lt;code&gt;kotlinx-coroutines-core&lt;/code&gt; 버전 1.3.8 이상에서 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="3912e18782d3c525391b6b1fc52f0f97dc357833" translate="yes" xml:space="preserve">
          <source>Decimal digits</source>
          <target state="translated">십진수</target>
        </trans-unit>
        <trans-unit id="6bd2b2a5baac6419baf232311ddedcb455f71727" translate="yes" xml:space="preserve">
          <source>Decimals: &lt;code&gt;123&lt;/code&gt;</source>
          <target state="translated">소수 : &lt;code&gt;123&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9594d42d905843075ce48e892e70d108c93bc849" translate="yes" xml:space="preserve">
          <source>Decision Making</source>
          <target state="translated">의사 결정</target>
        </trans-unit>
        <trans-unit id="d6f37721bc043c8dd7475e584d1b0bdd4b256c24" translate="yes" xml:space="preserve">
          <source>Declaration</source>
          <target state="translated">Declaration</target>
        </trans-unit>
        <trans-unit id="1783c331796c466fc89ce660373b5909402350f2" translate="yes" xml:space="preserve">
          <source>Declaration and instantiation</source>
          <target state="translated">선언과 인스턴스화</target>
        </trans-unit>
        <trans-unit id="69526f363f4c1c4bb90a49bf84072799c864d489" translate="yes" xml:space="preserve">
          <source>Declaration-site covariance and contravariance</source>
          <target state="translated">선언 사이트 공분산 및 공분산</target>
        </trans-unit>
        <trans-unit id="f5efd46800538f85d7e67a47b7a6cad936953d2e" translate="yes" xml:space="preserve">
          <source>Declaration-site variance</source>
          <target state="translated">선언 사이트 차이</target>
        </trans-unit>
        <trans-unit id="0d879e5bd2107e7fcc43b998dbd9566dd52996e4" translate="yes" xml:space="preserve">
          <source>Declaration-site variance &amp;amp; Type projections</source>
          <target state="translated">선언 사이트 차이 및 유형 예측</target>
        </trans-unit>
        <trans-unit id="bfd9dd188823ff26f847ebb4d0225407c0d4d7aa" translate="yes" xml:space="preserve">
          <source>Declaration-site variance of this type parameter. See the &lt;a href=&quot;../../../../../../docs/reference/generics#declaration-site-variance&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">이 형식 매개 변수의 선언 사이트 차이 자세한 내용은 &lt;a href=&quot;../../../../../../docs/reference/generics#declaration-site-variance&quot;&gt;Kotlin 언어 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9ce1aefa86e8746e05050d3834bd558b2d5da0b5" translate="yes" xml:space="preserve">
          <source>Declare a function as infix only when it works on two objects which play a similar role. Good examples: &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;to&lt;/code&gt;, &lt;code&gt;zip&lt;/code&gt;. Bad example: &lt;code&gt;add&lt;/code&gt;.</source>
          <target state="translated">비슷한 역할을하는 두 개체에서 작동 할 때만 함수를 삽입으로 선언하십시오. 좋은 예 : &lt;code&gt;and&lt;/code&gt; , &lt;code&gt;to&lt;/code&gt; , &lt;code&gt;zip&lt;/code&gt; . 나쁜 예 : &lt;code&gt;add&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8141e317efc56ee18697750584f177cb4fa4437e" translate="yes" xml:space="preserve">
          <source>Declaring (static) members of a class</source>
          <target state="translated">클래스의 (정적) 멤버 선언</target>
        </trans-unit>
        <trans-unit id="6efca92889af37277cb00d1a93da58f85c0f3dff" translate="yes" xml:space="preserve">
          <source>Declaring Extensions as Members</source>
          <target state="translated">확장을 멤버로 선언</target>
        </trans-unit>
        <trans-unit id="a629716d1d1a36db6105b259501576be00e22498" translate="yes" xml:space="preserve">
          <source>Declaring Properties</source>
          <target state="translated">속성 선언</target>
        </trans-unit>
        <trans-unit id="4d179adca795cf882d1e2fcb4c827a032f922f7d" translate="yes" xml:space="preserve">
          <source>Declaring binaries</source>
          <target state="translated">바이너리 선언</target>
        </trans-unit>
        <trans-unit id="620a6e3114ffae727f51628166f711b5519951a5" translate="yes" xml:space="preserve">
          <source>Declaring extensions as members</source>
          <target state="translated">회원으로 확장 선언</target>
        </trans-unit>
        <trans-unit id="03687cebdb8a1a45896ded70c2c26f49424f77f2" translate="yes" xml:space="preserve">
          <source>Declaring optional parameters</source>
          <target state="translated">선택적 매개 변수 선언</target>
        </trans-unit>
        <trans-unit id="9e7e78b012b62dce6c259a2e257e3457ddce8d5e" translate="yes" xml:space="preserve">
          <source>Declaring variables</source>
          <target state="translated">변수 선언</target>
        </trans-unit>
        <trans-unit id="50ca464d8d74ab7e8696b7fc5d01d47f9bc40078" translate="yes" xml:space="preserve">
          <source>Decodes a string from the bytes in UTF-8 encoding in this array or its subrange.</source>
          <target state="translated">이 배열 또는 하위 범위의 UTF-8 인코딩으로 바이트에서 문자열을 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="7e46395c4d726e7a7fb17f6abe4fd713dce2ee80" translate="yes" xml:space="preserve">
          <source>Decodes a string from the bytes in UTF-8 encoding in this array or its subrange. Bytes following the first occurrence of &lt;code&gt;0&lt;/code&gt; byte, if it occurs, are not decoded.</source>
          <target state="translated">이 배열 또는 하위 범위에있는 UTF-8 인코딩의 바이트에서 문자열을 디코딩합니다. &lt;code&gt;0&lt;/code&gt; 바이트 가 처음 발생하는 이후의 바이트는 디코딩되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a88fac956a784fdf0af3aaafc7b7cbaaa44dc2d4" translate="yes" xml:space="preserve">
          <source>Decodes a string from the bytes in UTF-8 encoding in this array.</source>
          <target state="translated">이 배열에서 UTF-8 인코딩으로 바이트에서 문자열을 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="00733b81ed5b59ee841f36071e027b0b9efd12c7" translate="yes" xml:space="preserve">
          <source>Decodes a string from the bytes in UTF-8 encoding in this array. Bytes following the first occurrence of &lt;code&gt;0&lt;/code&gt; byte, if it occurs, are not decoded.</source>
          <target state="translated">이 배열의 UTF-8 인코딩으로 된 바이트에서 문자열을 디코딩합니다. &lt;code&gt;0&lt;/code&gt; 바이트 가 처음 발생하는 이후의 바이트는 디코딩되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="367cc2e5fdfe082bdc453ff9e067bf533453c0ed" translate="yes" xml:space="preserve">
          <source>Decrements this value.</source>
          <target state="translated">이 값을 줄입니다.</target>
        </trans-unit>
        <trans-unit id="c6763c63e480b6aa1f2eebe6f3923a7dbc558e61" translate="yes" xml:space="preserve">
          <source>Decrements value by one.</source>
          <target state="translated">값을 1 씩 줄입니다.</target>
        </trans-unit>
        <trans-unit id="362fa11da711e14e2d5d97575df1ec885663f298" translate="yes" xml:space="preserve">
          <source>DeepRecursiveFunction</source>
          <target state="translated">DeepRecursiveFunction</target>
        </trans-unit>
        <trans-unit id="f9e279356c939f8c20da5a6e852234097aaec0a3" translate="yes" xml:space="preserve">
          <source>DeepRecursiveScope</source>
          <target state="translated">DeepRecursiveScope</target>
        </trans-unit>
        <trans-unit id="808d7dca8a74d84af27a2d6602c3d786de45fe1e" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Default</target>
        </trans-unit>
        <trans-unit id="9a38baf3b03048f37add45c1488d99b0fdacb170" translate="yes" xml:space="preserve">
          <source>Default Arguments</source>
          <target state="translated">기본 인수</target>
        </trans-unit>
        <trans-unit id="004333fa2e938db560bd7c551693ae782059af6f" translate="yes" xml:space="preserve">
          <source>Default Imports</source>
          <target state="translated">기본 수입</target>
        </trans-unit>
        <trans-unit id="74dd2556fd5dce92b9c4d8ff65a0c66dd460a66b" translate="yes" xml:space="preserve">
          <source>Default Project Layout</source>
          <target state="translated">기본 프로젝트 레이아웃</target>
        </trans-unit>
        <trans-unit id="7078198f7cae420890a1abe183a812a6a35f8ed6" translate="yes" xml:space="preserve">
          <source>Default Value</source>
          <target state="translated">기본값</target>
        </trans-unit>
        <trans-unit id="6bcca2541d3f4eb99df509a0ef05a98d2f536b6d" translate="yes" xml:space="preserve">
          <source>Default arguments</source>
          <target state="translated">기본 인수</target>
        </trans-unit>
        <trans-unit id="6d72a87e6ca669498157e500dc90d1e5fa61249d" translate="yes" xml:space="preserve">
          <source>Default implementation does nothing.</source>
          <target state="translated">기본 구현은 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f56ba5ccdc01660a00f065dbd818701d68a03ff1" translate="yes" xml:space="preserve">
          <source>Default implementations with optional more specialized overrides is another bonus of the multiplatform library. Now, when we have a string-based API, we can cover it with basic tests:</source>
          <target state="translated">선택적인보다 특수한 재정의를 사용한 기본 구현은 멀티 플랫폼 라이브러리의 또 다른 보너스입니다. 이제 문자열 기반 API가 있으면 기본 테스트로이를 다룰 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb00dac1a7ec814c3f0bfabcc91fd624f09d93ae" translate="yes" xml:space="preserve">
          <source>Default methods are available only for targets JVM 1.8 and above.</source>
          <target state="translated">기본 메소드는 대상 JVM 1.8 이상에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f529b0fd28579227a1a938ed1cf822b7ce635b0" translate="yes" xml:space="preserve">
          <source>Default methods in interfaces</source>
          <target state="translated">인터페이스의 기본 메소드</target>
        </trans-unit>
        <trans-unit id="00510f3c2eb3ca8fa74448310c01822126885a11" translate="yes" xml:space="preserve">
          <source>Default parameter values</source>
          <target state="translated">기본 매개 변수 값</target>
        </trans-unit>
        <trans-unit id="bdffe654f8554300a98d2acefcbbf1d894339b2b" translate="yes" xml:space="preserve">
          <source>Default value</source>
          <target state="translated">기본값</target>
        </trans-unit>
        <trans-unit id="0c247591a0ec421cf213df87f5cfab736920f65f" translate="yes" xml:space="preserve">
          <source>Default values are defined using the &lt;strong&gt;=&lt;/strong&gt; after type along with the value.</source>
          <target state="translated">기본값은 값 과 함께 &lt;strong&gt;=&lt;/strong&gt; after type을 사용하여 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="c5a4ca79fc3b9dc619dfd98357c74e615190760f" translate="yes" xml:space="preserve">
          <source>Default values for function parameters</source>
          <target state="translated">기능 매개 변수의 기본값</target>
        </trans-unit>
        <trans-unit id="a52d4d2896f5b9308cd4cda93ca25ef7bdc3eb13" translate="yes" xml:space="preserve">
          <source>DeferScope</source>
          <target state="translated">DeferScope</target>
        </trans-unit>
        <trans-unit id="d36a311eae80bac3cfeb88f38f8a93405c81d66a" translate="yes" xml:space="preserve">
          <source>Deferred values can be selected using &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/on-await.html&quot;&gt;onAwait&lt;/a&gt; clause. Let us start with an async function that returns a deferred string value after a random delay:</source>
          <target state="translated">지연된 값은 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/on-await.html&quot;&gt;onAwait&lt;/a&gt; 절을 사용하여 선택할 수 있습니다 . 임의 지연 후 지연된 문자열 값을 반환하는 비동기 함수로 시작하겠습니다.</target>
        </trans-unit>
        <trans-unit id="f715ef459873f316a735356bea952722b1f87891" translate="yes" xml:space="preserve">
          <source>Deferred values provide a convenient way to transfer a single value between coroutines. Channels provide a way to transfer a stream of values.</source>
          <target state="translated">지연된 값은 코 루틴간에 단일 값을 전송하는 편리한 방법을 제공합니다. 채널은 값 스트림을 전송하는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="10af19f21c0846e0d21d57d9441a6d4f9e9e3e9c" translate="yes" xml:space="preserve">
          <source>Define the version of Kotlin you want to use via a &lt;em&gt;kotlin.version&lt;/em&gt; property:</source>
          <target state="translated">&lt;em&gt;kotlin.version&lt;/em&gt; 속성을 통해 사용하려는 Kotlin의 버전을 정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="77aca330a4e05fb517c27c2c89fd3ce2409fc765" translate="yes" xml:space="preserve">
          <source>Define whether the &lt;code&gt;main&lt;/code&gt; function should be called upon execution</source>
          <target state="translated">실행시 &lt;code&gt;main&lt;/code&gt; 함수를 호출해야하는지 여부를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="514b4f71892156e68e25a0f7cdf2686bfd0ac421" translate="yes" xml:space="preserve">
          <source>Defines deep recursive function that keeps its stack on the heap, which allows very deep recursive computations that do not use the actual call stack. To initiate a call to this deep recursive function use its &lt;a href=&quot;../invoke&quot;&gt;invoke&lt;/a&gt; function. As a rule of thumb, it should be used if recursion goes deeper than a thousand calls.</source>
          <target state="translated">스택을 힙에 유지하는 깊은 재귀 함수를 정의하여 실제 호출 스택을 사용하지 않는 매우 깊은 재귀 계산을 허용합니다. 이 깊은 재귀 함수에 대한 호출을 시작하려면 &lt;a href=&quot;../invoke&quot;&gt;invoke&lt;/a&gt; 함수를 사용하십시오. 경험상 재귀가 천 호출보다 더 깊어지는 경우에 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="b0008fa33e8a183e16bb250fb4103e2596c5a749" translate="yes" xml:space="preserve">
          <source>Defines deep recursive function that keeps its stack on the heap, which allows very deep recursive computations that do not use the actual call stack. To initiate a call to this deep recursive function use its &lt;a href=&quot;invoke&quot;&gt;invoke&lt;/a&gt; function. As a rule of thumb, it should be used if recursion goes deeper than a thousand calls.</source>
          <target state="translated">스택을 힙에 유지하는 깊은 재귀 함수를 정의하여 실제 호출 스택을 사용하지 않는 매우 깊은 재귀 계산을 허용합니다. 이 깊은 재귀 함수에 대한 호출을 시작하려면 &lt;a href=&quot;invoke&quot;&gt;invoke&lt;/a&gt; 함수를 사용하십시오. 경험상 재귀가 천 호출보다 더 깊어지는 경우에 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="a45e6f082f931e76cc35b1d2866f81758dc21207" translate="yes" xml:space="preserve">
          <source>Defines names for Unicode symbols used in proper Typography.</source>
          <target state="translated">올바른 타이포그래피에 사용되는 유니 코드 기호의 이름을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="eaf85480139ce8b3345d7674369f7104c63e0e8b" translate="yes" xml:space="preserve">
          <source>Defining functions</source>
          <target state="translated">함수 정의</target>
        </trans-unit>
        <trans-unit id="02462ee7bb41afbb3da00beda231ae5b090fc04c" translate="yes" xml:space="preserve">
          <source>Defining packages</source>
          <target state="translated">패키지 정의</target>
        </trans-unit>
        <trans-unit id="f9a8e79df5bf3ca302b1d914723d2b6350c0ffd5" translate="yes" xml:space="preserve">
          <source>Defining the project and dependencies</source>
          <target state="translated">프로젝트 및 의존성 정의</target>
        </trans-unit>
        <trans-unit id="6fb23f37daf93108649d6a0aadfd418fba192724" translate="yes" xml:space="preserve">
          <source>Defining variables</source>
          <target state="translated">변수 정의</target>
        </trans-unit>
        <trans-unit id="55341770817a3767f3abf6b917b16dc6cad31ecd" translate="yes" xml:space="preserve">
          <source>Definition file hints</source>
          <target state="translated">정의 파일 힌트</target>
        </trans-unit>
        <trans-unit id="86fdbca0dd71baf05d4d0e731fea35018ff2b87d" translate="yes" xml:space="preserve">
          <source>Deinitializes Kotlin runtime for the current thread, if was inited.</source>
          <target state="translated">현재 스레드가 초기화 된 경우 Kotlin 런타임을 초기화 해제합니다.</target>
        </trans-unit>
        <trans-unit id="fe29e0100b7c53c0878c3c06b46d6e0e4d9d6924" translate="yes" xml:space="preserve">
          <source>Deinitializes Kotlin runtime for the current thread, if was inited. Cannot be called from Kotlin frames holding references, thus deprecated.</source>
          <target state="translated">초기화 된 경우 현재 스레드의 Kotlin 런타임을 초기화합니다. 참조가있는 Kotlin 프레임에서 호출 할 수 없으므로 지원 중단되었습니다.</target>
        </trans-unit>
        <trans-unit id="8cf0fe100bdde85b284c9b3460b06f6be544fd3e" translate="yes" xml:space="preserve">
          <source>Delaying for a time while another coroutine is working is not a good approach. Let's explicitly wait (in a non-blocking way) until the background &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/index.html&quot;&gt;Job&lt;/a&gt; that we have launched is complete:</source>
          <target state="translated">다른 코 루틴이 작동하는 동안 시간이 지연되는 것은 좋은 방법이 아닙니다. 우리가 시작한 백그라운드 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/index.html&quot;&gt;작업&lt;/a&gt; 이 완료 될 때까지 (비 차단 방식으로) 명시 적으로 기다리겠습니다 .</target>
        </trans-unit>
        <trans-unit id="d9eb1a11956e5cc888e4d13347657ff7ef90d5aa" translate="yes" xml:space="preserve">
          <source>Delegated Properties</source>
          <target state="translated">위임 된 속성</target>
        </trans-unit>
        <trans-unit id="82c1773025dcf386373e640047e7d3b6ec4c2f26" translate="yes" xml:space="preserve">
          <source>Delegated properties</source>
          <target state="translated">위임 된 속성</target>
        </trans-unit>
        <trans-unit id="1a873edd160a55e0483eb179209876956ff30b1f" translate="yes" xml:space="preserve">
          <source>Delegated properties are described on a separate page: &lt;a href=&quot;delegated-properties&quot;&gt;Delegated Properties&lt;/a&gt;.</source>
          <target state="translated">위임 된 속성은 별도의 페이지에 설명되어 있습니다 : &lt;a href=&quot;delegated-properties&quot;&gt;위임 된 속성&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8363eb20dcbf9367e655b3c4cc23c2a2d59d977e" translate="yes" xml:space="preserve">
          <source>Delegated properties take values from this map (by the string keys &amp;ndash;&amp;ndash; names of properties):</source>
          <target state="translated">위임 된 속성은이 맵에서 값을 가져옵니다 (문자열 키 &amp;ndash; 속성 이름).</target>
        </trans-unit>
        <trans-unit id="7dcccba4f8856a9df41efcf1d5ea4f2cfd327cec" translate="yes" xml:space="preserve">
          <source>Delegates</source>
          <target state="translated">Delegates</target>
        </trans-unit>
        <trans-unit id="509857f02e6464952baced1d7f02c780c507a53d" translate="yes" xml:space="preserve">
          <source>Delegating to another property</source>
          <target state="translated">다른 속성에 위임</target>
        </trans-unit>
        <trans-unit id="710ea31c1844269e394476da1f1443e6ca2a3b36" translate="yes" xml:space="preserve">
          <source>Delegation</source>
          <target state="translated">Delegation</target>
        </trans-unit>
        <trans-unit id="76a4d95cde894c1d7bc38dcf7ee5a2700580fa21" translate="yes" xml:space="preserve">
          <source>Delete this file with all its children. Note that if this operation fails then partial deletion may have taken place.</source>
          <target state="translated">모든 자식과 함께이 파일을 삭제하십시오. 이 작업이 실패하면 부분 삭제가 발생했을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="12b5aeca69dae0e0c7deaf5c22ac0279d161947f" translate="yes" xml:space="preserve">
          <source>Denotes an &lt;code&gt;external&lt;/code&gt; declaration that can be used without module system.</source>
          <target state="translated">모듈 시스템없이 사용할 수 있는 &lt;code&gt;external&lt;/code&gt; 선언을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="2a32014ccda5a7ce6f1870686c19e3803d7e50c8" translate="yes" xml:space="preserve">
          <source>Denotes an &lt;code&gt;external&lt;/code&gt; declaration that must be imported from native JavaScript library.</source>
          <target state="translated">기본 JavaScript 라이브러리에서 가져와야 하는 &lt;code&gt;external&lt;/code&gt; 선언을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="a9d8c3e5eaa871efaf4e38b3faebe3a5cfb460c2" translate="yes" xml:space="preserve">
          <source>Denotes property that is an alias to some enum entry.</source>
          <target state="translated">일부 열거 형 항목의 별칭 인 속성을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="bbf64a22a95358bfa04118b993ea2161656f19a2" translate="yes" xml:space="preserve">
          <source>Dependencies (including interop ones)</source>
          <target state="translated">종속성 (인터럽트 포함)</target>
        </trans-unit>
        <trans-unit id="6aee742fa33aa11fbc680a59d219de7616a030a1" translate="yes" xml:space="preserve">
          <source>Dependencies are specified per source set as follows:</source>
          <target state="translated">소스 세트당 종속성은 다음과 같이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="a1bf8971a01b6d47d63607bf14877619e76a3c41" translate="yes" xml:space="preserve">
          <source>Dependency declaration is also possible in the component block:</source>
          <target state="translated">구성 요소 블록에서 종속성 선언도 가능합니다.</target>
        </trans-unit>
        <trans-unit id="5c3220b06dbcd459280c92713b2c1ed6a55ef5b2" translate="yes" xml:space="preserve">
          <source>Dependency on the standard library</source>
          <target state="translated">표준 라이브러리에 대한 종속성</target>
        </trans-unit>
        <trans-unit id="de369dee35f7b238a8ba322a7f7eb2035e869a3e" translate="yes" xml:space="preserve">
          <source>Dependency types</source>
          <target state="translated">종속성 유형</target>
        </trans-unit>
        <trans-unit id="abf1cafa99bad52c146b0b65fffac99f8c472ae1" translate="yes" xml:space="preserve">
          <source>Depending on the selected &lt;a href=&quot;js-modules&quot;&gt;JavaScript Module&lt;/a&gt; system, the Kotlin/JS compiler generates different output. But in general, the Kotlin compiler generates normal JavaScript classes, functions and properties, which you can freely use from JavaScript code. There are some subtle things you should remember, though.</source>
          <target state="translated">선택한 &lt;a href=&quot;js-modules&quot;&gt;자바 스크립트 모듈&lt;/a&gt; 시스템에 따라 Kotlin / JS 컴파일러는 다른 출력을 생성합니다. 그러나 일반적으로 Kotlin 컴파일러는 일반 자바 스크립트 클래스, 함수 및 속성을 생성하므로 자바 스크립트 코드에서 자유롭게 사용할 수 있습니다. 하지만 기억해야 할 몇 가지 미묘한 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2558bbd35c8640c622365be8cd60ab5693f2bed" translate="yes" xml:space="preserve">
          <source>Depending on the target platform, we use different &lt;a href=&quot;../../reference/building-mpp-with-gradle&quot;&gt;functions&lt;/a&gt;, e.g. &lt;code&gt;macosX64&lt;/code&gt;, &lt;code&gt;mingwX64&lt;/code&gt;, &lt;code&gt;linuxX64&lt;/code&gt;, &lt;code&gt;iosX64&lt;/code&gt;, to create the Kotlin target. The function name is the platform which we are compiling our code for. These functions optionally take the target name as a parameter, which is &lt;code&gt;&quot;native&quot;&lt;/code&gt; in our case. The specified &lt;em&gt;target name&lt;/em&gt; is used to generate the source paths and task names in the project.</source>
          <target state="translated">대상 플랫폼에 따라 &lt;code&gt;macosX64&lt;/code&gt; , &lt;code&gt;mingwX64&lt;/code&gt; , &lt;code&gt;linuxX64&lt;/code&gt; , &lt;code&gt;iosX64&lt;/code&gt; 와 같은 다른 &lt;a href=&quot;../../reference/building-mpp-with-gradle&quot;&gt;기능&lt;/a&gt; 을 사용하여 Kotlin 대상을 만듭니다. 함수 이름은 코드를 컴파일하는 플랫폼입니다. 이러한 함수는 선택적으로 대상 이름을 매개 변수로 사용하는데,이 경우 &lt;code&gt;&quot;native&quot;&lt;/code&gt; 입니다. 지정된 &lt;em&gt;대상 이름&lt;/em&gt; 은 프로젝트에서 소스 경로 및 작업 이름을 생성하는 데 사용됩니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8048405643ba6bef25d30dfe59095c956c725378" translate="yes" xml:space="preserve">
          <source>Depending on the variant, the build generates the framework into the &lt;code&gt;build/bin/native/debugFramework&lt;/code&gt; and &lt;code&gt;build/bin/native/releaseFramework&lt;/code&gt; folders. Let's see what is inside</source>
          <target state="translated">변형에 따라 빌드는 &lt;code&gt;build/bin/native/debugFramework&lt;/code&gt; 및 &lt;code&gt;build/bin/native/releaseFramework&lt;/code&gt; 폴더에 프레임 워크를 생성합니다 . 안에 무엇이 있는지 보자</target>
        </trans-unit>
        <trans-unit id="fd240734ea7f9aac8502f58690979935a598f718" translate="yes" xml:space="preserve">
          <source>Depending on your project and purposes, you can add dependencies between:</source>
          <target state="translated">프로젝트 및 목적에 따라 다음 사이에 종속성을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="798b9e0b080bdadd97be30e380836acd3d374644" translate="yes" xml:space="preserve">
          <source>Deploying Kotlin Server-side Applications</source>
          <target state="translated">Kotlin 서버 측 응용 프로그램 배포</target>
        </trans-unit>
        <trans-unit id="527600bf0272b6bf3abcb495a99c6ee346bb82b2" translate="yes" xml:space="preserve">
          <source>Deprecated</source>
          <target state="translated">Deprecated</target>
        </trans-unit>
        <trans-unit id="302492c12a53b4d434a03ea744269ffb1d2b42ce" translate="yes" xml:space="preserve">
          <source>Deprecated element will not be accessible from code.</source>
          <target state="translated">더 이상 사용되지 않는 요소는 코드에서 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="04985d606d209354e4c0bdf6e1358ebf8a4ccb08" translate="yes" xml:space="preserve">
          <source>Deprecated support for experimental coroutines, provided for compatibility. It's recommended to migrate to &lt;code&gt;kotlin.coroutines.intrinsics&lt;/code&gt; API.</source>
          <target state="translated">호환성을 위해 제공된 실험 코 루틴에 대한 지원이 중단되었습니다. &lt;code&gt;kotlin.coroutines.intrinsics&lt;/code&gt; API 로 마이그레이션하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="539273974a9ae804f07b5878e48f50da514e14b9" translate="yes" xml:space="preserve">
          <source>Deprecated support for experimental coroutines, provided for compatibility. It's recommended to migrate to &lt;code&gt;kotlin.coroutines&lt;/code&gt; API.</source>
          <target state="translated">호환성을 위해 제공된 실험 코 루틴에 대한 지원이 중단되었습니다. &lt;code&gt;kotlin.coroutines&lt;/code&gt; API 로 마이그레이션하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="4fa23318a4b6178ce051cb815252ebf5d70b48b2" translate="yes" xml:space="preserve">
          <source>DeprecatedSinceKotlin</source>
          <target state="translated">DeprecatedSinceKotlin</target>
        </trans-unit>
        <trans-unit id="7df2a723d463ebf5da79b9a658bebb4606c0e28d" translate="yes" xml:space="preserve">
          <source>Deprecation: data classes overriding copy</source>
          <target state="translated">지원 중단 : 복사를 재정의하는 데이터 클래스</target>
        </trans-unit>
        <trans-unit id="36624958c874d1922e4fbf19d0e3b3799f091c9f" translate="yes" xml:space="preserve">
          <source>Deprecation: inner classes of generic classes extending Throwable</source>
          <target state="translated">더 이상 사용되지 않음 : Throwable을 확장하는 일반 클래스의 내부 클래스</target>
        </trans-unit>
        <trans-unit id="ab28aea81dcb8e631e0158a588b35c6b9bb8c716" translate="yes" xml:space="preserve">
          <source>Deprecation: mutating backing field of a read-only property</source>
          <target state="translated">지원 중단 : 읽기 전용 속성의 백업 필드 변경</target>
        </trans-unit>
        <trans-unit id="f4f6df8fbf57a2ccc2c0341033eadbab83bb2bcd" translate="yes" xml:space="preserve">
          <source>Deprecation: nested types in enum entries</source>
          <target state="translated">지원 중단 : 열거 형 항목의 중첩 유형</target>
        </trans-unit>
        <trans-unit id="dbc762089c0916158a95b8d950c6a5e3683d4b1c" translate="yes" xml:space="preserve">
          <source>Deprecation: single named argument for vararg</source>
          <target state="translated">지원 중단 : vararg에 대한 단일 명명 된 인수</target>
        </trans-unit>
        <trans-unit id="4d159ac4945dc04545976d85f5f34241d79b594a" translate="yes" xml:space="preserve">
          <source>DeprecationLevel</source>
          <target state="translated">DeprecationLevel</target>
        </trans-unit>
        <trans-unit id="ab7b1741687e161f8bb2328b955c7ab64f3aedb3" translate="yes" xml:space="preserve">
          <source>Depth-first search, directory is visited AFTER its files</source>
          <target state="translated">깊이 우선 검색, 파일 후 디렉토리 방문</target>
        </trans-unit>
        <trans-unit id="037651e19b37eabb46e3b048f4a22f02596ad647" translate="yes" xml:space="preserve">
          <source>Depth-first search, directory is visited BEFORE its files</source>
          <target state="translated">깊이 우선 검색, 파일보다 먼저 디렉토리를 방문</target>
        </trans-unit>
        <trans-unit id="43cf02d877c19ac2bb2e51c8f7a4fd7d94a2052a" translate="yes" xml:space="preserve">
          <source>Derived class initialization order</source>
          <target state="translated">파생 클래스 초기화 순서</target>
        </trans-unit>
        <trans-unit id="c17a281db8e4c73087d63b2afbb53608f2f24527" translate="yes" xml:space="preserve">
          <source>Deriving a data class from a type that already has a &lt;code&gt;copy(...)&lt;/code&gt; function with a matching signature is deprecated in Kotlin 1.2 and is prohibited in Kotlin 1.3.</source>
          <target state="translated">일치하는 서명을 가진 &lt;code&gt;copy(...)&lt;/code&gt; 함수 가있는 유형에서 데이터 클래스를 파생하는 것은 Kotlin 1.2에서 더 이상 사용되지 않으며 Kotlin 1.3에서는 금지됩니다.</target>
        </trans-unit>
        <trans-unit id="2fd3bd3e6afc045bfbcd4e36b1046fe4a31118e1" translate="yes" xml:space="preserve">
          <source>Describes a situation when a function returns normally with a given return value.</source>
          <target state="translated">주어진 반환 값으로 함수가 정상적으로 반환되는 상황을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="b7f74295d186c5835da5910c6ecd9b24295b6889" translate="yes" xml:space="preserve">
          <source>Describes a situation when a function returns normally with any non-null return value.</source>
          <target state="translated">널이 아닌 리턴 값으로 함수가 정상적으로 리턴하는 상황을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="02faff5cf391486d94200363ccf97c36a29845f3" translate="yes" xml:space="preserve">
          <source>Describes a situation when a function returns normally with any value that is not &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">함수가 &lt;code&gt;null&lt;/code&gt; 이 아닌 값으로 정상적으로 반환되는 상황을 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="fa1d7eb3bb3131462f668f204cbd6cc484b77f8b" translate="yes" xml:space="preserve">
          <source>Describes a situation when a function returns normally with the specified return &lt;a href=&quot;returns#kotlin.contracts.ContractBuilder%24returns%28kotlin.Any%29%2Fvalue&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">지정된 반환 &lt;a href=&quot;returns#kotlin.contracts.ContractBuilder%24returns%28kotlin.Any%29%2Fvalue&quot;&gt;값&lt;/a&gt; 으로 함수가 정상적으로 반환되는 상황을 설명 합니다 .</target>
        </trans-unit>
        <trans-unit id="2e72f4550005fb87b99c664819eabfded02c1b4e" translate="yes" xml:space="preserve">
          <source>Describes a situation when a function returns normally with the specified return &lt;a href=&quot;returns#kotlin.contracts.ContractBuilder%24returns(kotlin.Any?)/value&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">함수가 지정된 반환 &lt;a href=&quot;returns#kotlin.contracts.ContractBuilder%24returns(kotlin.Any?)/value&quot;&gt;값&lt;/a&gt; 과 함께 정상적으로 반환되는 상황을 설명 합니다 .</target>
        </trans-unit>
        <trans-unit id="bf479a0d235c44afe79c60e873b396d3193fd49c" translate="yes" xml:space="preserve">
          <source>Describes a situation when a function returns normally, without any exceptions thrown.</source>
          <target state="translated">예외가 발생하지 않고 함수가 정상적으로 반환되는 상황을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="f44a08ce0f89af19669256282bdc397b2f00cd00" translate="yes" xml:space="preserve">
          <source>Destination *.js file for the compilation result</source>
          <target state="translated">컴파일 결과의 대상 * .js 파일</target>
        </trans-unit>
        <trans-unit id="d6eb84b30671924abdb086ad3eb7958b9baa8de6" translate="yes" xml:space="preserve">
          <source>Destination directory or .jar file name</source>
          <target state="translated">대상 디렉토리 또는 .jar 파일 이름</target>
        </trans-unit>
        <trans-unit id="2a8acf95fbf5e4a22b63df20b3c2077c316bd245" translate="yes" xml:space="preserve">
          <source>Destination file</source>
          <target state="translated">대상 파일</target>
        </trans-unit>
        <trans-unit id="cf51fcb4adddfb6b7992e0883887b8a2af792726" translate="yes" xml:space="preserve">
          <source>Destructured</source>
          <target state="translated">Destructured</target>
        </trans-unit>
        <trans-unit id="56ca5e0437411ccbc6fa42dbc7ea25edfbc879d6" translate="yes" xml:space="preserve">
          <source>Destructuring Declarations</source>
          <target state="translated">파괴 선언</target>
        </trans-unit>
        <trans-unit id="b2708574b2f6b3cedd7dfbcd2ea4d478e9e42e2a" translate="yes" xml:space="preserve">
          <source>Destructuring declarations</source>
          <target state="translated">구조화 선언</target>
        </trans-unit>
        <trans-unit id="cc6c207f956f982b3f9eceae519287e9d31fdc71" translate="yes" xml:space="preserve">
          <source>Destructuring declarations also work in &lt;em&gt;for&lt;/em&gt;-loops: when you say:</source>
          <target state="translated">파괴 선언도 &lt;em&gt;for&lt;/em&gt; -loops 에서 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="9538600b70248a80970283859082e44f96e1adf1" translate="yes" xml:space="preserve">
          <source>Destructuring in Lambdas (since 1.1)</source>
          <target state="translated">람다에서의 파괴 (1.1 이후)</target>
        </trans-unit>
        <trans-unit id="c0617ad55d1641d3908e28bec4940aeb15edea5a" translate="yes" xml:space="preserve">
          <source>Destructuring in lambdas</source>
          <target state="translated">람다에서 파괴</target>
        </trans-unit>
        <trans-unit id="194fbab7abe4ad4d976eef9a3150ec1ded7d903e" translate="yes" xml:space="preserve">
          <source>Destructuring in lambdas (since 1.1)</source>
          <target state="translated">람다에서의 파괴 (1.1 이후)</target>
        </trans-unit>
        <trans-unit id="50273607265bc87623bc4400b2ab41906200ad2d" translate="yes" xml:space="preserve">
          <source>Destructuring in lambdas is described as a part of &lt;a href=&quot;multi-declarations#destructuring-in-lambdas-since-11&quot;&gt;destructuring declarations&lt;/a&gt;.</source>
          <target state="translated">람다에서의 &lt;a href=&quot;multi-declarations#destructuring-in-lambdas-since-11&quot;&gt;파괴&lt;/a&gt; 는 파괴 선언 의 일부로 설명됩니다 .</target>
        </trans-unit>
        <trans-unit id="5f5676f43d2a6ac041f3d4e368178eea5400c5c1" translate="yes" xml:space="preserve">
          <source>Detached object graph encapsulates transferrable detached subgraph which cannot be accessed externally, until it is attached with the &lt;a href=&quot;../../kotlin.native.concurrent/attach&quot;&gt;attach&lt;/a&gt; extension function.</source>
          <target state="translated">분리 된 오브젝트 그래프는 &lt;a href=&quot;../../kotlin.native.concurrent/attach&quot;&gt;첨부&lt;/a&gt; 확장 기능으로 첨부 될 때까지 외부에서 액세스 할 수없는 전송 가능한 분리 된 서브 그래프를 캡슐화 합니다.</target>
        </trans-unit>
        <trans-unit id="e51248e3fd7469c27661bd0ad8a1f6c2c6d61d10" translate="yes" xml:space="preserve">
          <source>Detached object graph encapsulates transferrable detached subgraph which cannot be accessed externally, until it is attached with the &lt;a href=&quot;../attach&quot;&gt;attach&lt;/a&gt; extension function.</source>
          <target state="translated">분리 된 오브젝트 그래프는 &lt;a href=&quot;../attach&quot;&gt;첨부&lt;/a&gt; 확장 기능으로 첨부 될 때까지 외부에서 액세스 할 수없는 전송 가능한 분리 된 서브 그래프를 캡슐화 합니다.</target>
        </trans-unit>
        <trans-unit id="462de32668c565664db0ea11ad515a3cedf31db9" translate="yes" xml:space="preserve">
          <source>Detached object graph encapsulates transferrable detached subgraph which cannot be accessed externally, until it is attached with the &lt;a href=&quot;attach&quot;&gt;attach&lt;/a&gt; extension function.</source>
          <target state="translated">분리 된 오브젝트 그래프는 &lt;a href=&quot;attach&quot;&gt;첨부&lt;/a&gt; 확장 기능으로 첨부 될 때까지 외부에서 액세스 할 수없는 전송 가능한 분리 된 서브 그래프를 캡슐화 합니다.</target>
        </trans-unit>
        <trans-unit id="83d50b55671877d18384e9fd282e401c50dca26f" translate="yes" xml:space="preserve">
          <source>DetachedObjectGraph</source>
          <target state="translated">DetachedObjectGraph</target>
        </trans-unit>
        <trans-unit id="6bbf8be755a774a0bbcfcc9129bcb43de6794477" translate="yes" xml:space="preserve">
          <source>Detects a common minimal indent like it does &lt;a href=&quot;../../kotlin.text/trim-indent&quot;&gt;trimIndent&lt;/a&gt; and replaces it with the specified &lt;a href=&quot;../../kotlin.text/replace-indent#kotlin.text%24replaceIndent%28kotlin.String%2C+kotlin.String%29%2FnewIndent&quot;&gt;newIndent&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.text/trim-indent&quot;&gt;trimIndent&lt;/a&gt; 와 같이 일반적인 최소 들여 쓰기를 감지 하여 지정된 &lt;a href=&quot;../../kotlin.text/replace-indent#kotlin.text%24replaceIndent%28kotlin.String%2C+kotlin.String%29%2FnewIndent&quot;&gt;newIndent로 바꿉니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a4fce990fdbceabe6ff76e966d5cb26d773acb41" translate="yes" xml:space="preserve">
          <source>Detects a common minimal indent like it does &lt;a href=&quot;../../kotlin.text/trim-indent&quot;&gt;trimIndent&lt;/a&gt; and replaces it with the specified &lt;a href=&quot;../../kotlin.text/replace-indent#kotlin.text%24replaceIndent(kotlin.String,%20kotlin.String)/newIndent&quot;&gt;newIndent&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.text/trim-indent&quot;&gt;trimIndent&lt;/a&gt; 처럼 일반적인 최소 들여 쓰기를 감지 하여 지정된 &lt;a href=&quot;../../kotlin.text/replace-indent#kotlin.text%24replaceIndent(kotlin.String,%20kotlin.String)/newIndent&quot;&gt;newIndent로 바꿉니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="759cb23e79d0bcfe352dd1767c40f4e86484c2f6" translate="yes" xml:space="preserve">
          <source>Detects a common minimal indent like it does &lt;a href=&quot;trim-indent&quot;&gt;trimIndent&lt;/a&gt; and replaces it with the specified &lt;a href=&quot;replace-indent#kotlin.text%24replaceIndent%28kotlin.String%2C+kotlin.String%29%2FnewIndent&quot;&gt;newIndent&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;trim-indent&quot;&gt;trimIndent&lt;/a&gt; 와 같이 일반적인 최소 들여 쓰기를 감지 하여 지정된 &lt;a href=&quot;replace-indent#kotlin.text%24replaceIndent%28kotlin.String%2C+kotlin.String%29%2FnewIndent&quot;&gt;newIndent로 바꿉니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dbefeecba273879a0b2bd2c34dde8aa67c3481df" translate="yes" xml:space="preserve">
          <source>Detects a common minimal indent like it does &lt;a href=&quot;trim-indent&quot;&gt;trimIndent&lt;/a&gt; and replaces it with the specified &lt;a href=&quot;replace-indent#kotlin.text%24replaceIndent(kotlin.String,%20kotlin.String)/newIndent&quot;&gt;newIndent&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;trim-indent&quot;&gt;trimIndent&lt;/a&gt; 처럼 일반적인 최소 들여 쓰기를 감지 하여 지정된 &lt;a href=&quot;replace-indent#kotlin.text%24replaceIndent(kotlin.String,%20kotlin.String)/newIndent&quot;&gt;newIndent로 바꿉니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4de7f3cf3b3fe1a56ea6af47ee3d2b8568ca59d8" translate="yes" xml:space="preserve">
          <source>Detects a common minimal indent of all the input lines, removes it from every line and also removes the first and the last lines if they are blank (notice difference blank vs empty).</source>
          <target state="translated">모든 입력 라인의 공통 최소 들여 쓰기를 감지하고 모든 라인에서이를 제거하고 비어있는 경우 첫 번째와 마지막 라인을 제거합니다 (공백 차이와 비어 있음).</target>
        </trans-unit>
        <trans-unit id="448573a1acf6c0d0a632e432c77153d554bb05ed" translate="yes" xml:space="preserve">
          <source>Detects indent by &lt;a href=&quot;../../kotlin.text/replace-indent-by-margin#kotlin.text%24replaceIndentByMargin%28kotlin.String%2C+kotlin.String%2C+kotlin.String%29%2FmarginPrefix&quot;&gt;marginPrefix&lt;/a&gt; as it does &lt;a href=&quot;../../kotlin.text/trim-margin&quot;&gt;trimMargin&lt;/a&gt; and replace it with &lt;a href=&quot;../../kotlin.text/replace-indent-by-margin#kotlin.text%24replaceIndentByMargin%28kotlin.String%2C+kotlin.String%2C+kotlin.String%29%2FnewIndent&quot;&gt;newIndent&lt;/a&gt;.</source>
          <target state="translated">감지에 의해 들여 &lt;a href=&quot;../../kotlin.text/replace-indent-by-margin#kotlin.text%24replaceIndentByMargin%28kotlin.String%2C+kotlin.String%2C+kotlin.String%29%2FmarginPrefix&quot;&gt;marginPrefix&lt;/a&gt; 이처럼 &lt;a href=&quot;../../kotlin.text/trim-margin&quot;&gt;trimMargin를&lt;/a&gt; 하고로 교체 &lt;a href=&quot;../../kotlin.text/replace-indent-by-margin#kotlin.text%24replaceIndentByMargin%28kotlin.String%2C+kotlin.String%2C+kotlin.String%29%2FnewIndent&quot;&gt;newIndent&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b072feb65459e9cdea55611df39fc4252f5075a8" translate="yes" xml:space="preserve">
          <source>Detects indent by &lt;a href=&quot;../../kotlin.text/replace-indent-by-margin#kotlin.text%24replaceIndentByMargin(kotlin.String,%20kotlin.String,%20kotlin.String)/marginPrefix&quot;&gt;marginPrefix&lt;/a&gt; as it does &lt;a href=&quot;../../kotlin.text/trim-margin&quot;&gt;trimMargin&lt;/a&gt; and replace it with &lt;a href=&quot;../../kotlin.text/replace-indent-by-margin#kotlin.text%24replaceIndentByMargin(kotlin.String,%20kotlin.String,%20kotlin.String)/newIndent&quot;&gt;newIndent&lt;/a&gt;.</source>
          <target state="translated">감지에 의해 들여 &lt;a href=&quot;../../kotlin.text/replace-indent-by-margin#kotlin.text%24replaceIndentByMargin(kotlin.String,%20kotlin.String,%20kotlin.String)/marginPrefix&quot;&gt;marginPrefix&lt;/a&gt; 이처럼 &lt;a href=&quot;../../kotlin.text/trim-margin&quot;&gt;trimMargin를&lt;/a&gt; 하고로 교체 &lt;a href=&quot;../../kotlin.text/replace-indent-by-margin#kotlin.text%24replaceIndentByMargin(kotlin.String,%20kotlin.String,%20kotlin.String)/newIndent&quot;&gt;newIndent&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ff27fb1c919a6e53c31b55dac2dc76b1369ccaaa" translate="yes" xml:space="preserve">
          <source>Detects indent by &lt;a href=&quot;replace-indent-by-margin#kotlin.text%24replaceIndentByMargin%28kotlin.String%2C+kotlin.String%2C+kotlin.String%29%2FmarginPrefix&quot;&gt;marginPrefix&lt;/a&gt; as it does &lt;a href=&quot;trim-margin&quot;&gt;trimMargin&lt;/a&gt; and replace it with &lt;a href=&quot;replace-indent-by-margin#kotlin.text%24replaceIndentByMargin%28kotlin.String%2C+kotlin.String%2C+kotlin.String%29%2FnewIndent&quot;&gt;newIndent&lt;/a&gt;.</source>
          <target state="translated">감지에 의해 들여 &lt;a href=&quot;replace-indent-by-margin#kotlin.text%24replaceIndentByMargin%28kotlin.String%2C+kotlin.String%2C+kotlin.String%29%2FmarginPrefix&quot;&gt;marginPrefix&lt;/a&gt; 이처럼 &lt;a href=&quot;trim-margin&quot;&gt;trimMargin를&lt;/a&gt; 하고로 교체 &lt;a href=&quot;replace-indent-by-margin#kotlin.text%24replaceIndentByMargin%28kotlin.String%2C+kotlin.String%2C+kotlin.String%29%2FnewIndent&quot;&gt;newIndent&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="957b555b8011b70f944e66d5ce8844445dc41336" translate="yes" xml:space="preserve">
          <source>Detects indent by &lt;a href=&quot;replace-indent-by-margin#kotlin.text%24replaceIndentByMargin(kotlin.String,%20kotlin.String,%20kotlin.String)/marginPrefix&quot;&gt;marginPrefix&lt;/a&gt; as it does &lt;a href=&quot;trim-margin&quot;&gt;trimMargin&lt;/a&gt; and replace it with &lt;a href=&quot;replace-indent-by-margin#kotlin.text%24replaceIndentByMargin(kotlin.String,%20kotlin.String,%20kotlin.String)/newIndent&quot;&gt;newIndent&lt;/a&gt;.</source>
          <target state="translated">감지에 의해 들여 &lt;a href=&quot;replace-indent-by-margin#kotlin.text%24replaceIndentByMargin(kotlin.String,%20kotlin.String,%20kotlin.String)/marginPrefix&quot;&gt;marginPrefix&lt;/a&gt; 이처럼 &lt;a href=&quot;trim-margin&quot;&gt;trimMargin를&lt;/a&gt; 하고로 교체 &lt;a href=&quot;replace-indent-by-margin#kotlin.text%24replaceIndentByMargin(kotlin.String,%20kotlin.String,%20kotlin.String)/newIndent&quot;&gt;newIndent&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a6284a1d1ed8d8ad6502082e3f3348005e4c0a88" translate="yes" xml:space="preserve">
          <source>Determines how an annotation is stored in binary output.</source>
          <target state="translated">주석이 이진 출력에 저장되는 방식을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="9f4e38e8239446bc3109f6d54600b9fa68f13c81" translate="yes" xml:space="preserve">
          <source>Determines the type of &lt;code&gt;a&lt;/code&gt;, let it be &lt;code&gt;T&lt;/code&gt;;</source>
          <target state="translated">의 종류를 결정 &lt;code&gt;a&lt;/code&gt; , 그것은하자 &lt;code&gt;T&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="ff108cd0ac89424a1c63e0b7e9d4faaa9fdae2f9" translate="yes" xml:space="preserve">
          <source>Determines whether a character is whitespace according to the Unicode standard. Returns &lt;code&gt;true&lt;/code&gt; if the character is whitespace.</source>
          <target state="translated">유니 코드 표준에 따라 문자가 공백인지 여부를 결정합니다. 문자가 공백 &lt;code&gt;true&lt;/code&gt; 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="0df44ea37c46de95961847be769d2295c4d4c5d1" translate="yes" xml:space="preserve">
          <source>Determines whether this file belongs to the same root as &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;other&lt;/a&gt; and ends with all components of &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;other&lt;/a&gt; in the same order. So if &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;other&lt;/a&gt; has N components, last N components of &lt;code&gt;this&lt;/code&gt; must be the same as in &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;other&lt;/a&gt;. For relative &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;other&lt;/a&gt;, &lt;code&gt;this&lt;/code&gt; can belong to any root.</source>
          <target state="translated">이 파일이 다른 파일과 동일한 루트에 속해 있는지 확인하고 &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;다른&lt;/a&gt; 순서 로 &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;다른&lt;/a&gt; 모든 구성 요소로 끝납니다 . 그렇다면 &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;다른&lt;/a&gt; N 구성 요소를 가지고, 마지막 N 성분 &lt;code&gt;this&lt;/code&gt; 에서와 동일해야합니다 &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;다른&lt;/a&gt; . relative &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;other의&lt;/a&gt; 경우 &lt;code&gt;this&lt;/code&gt; 모든 루트에 속할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ee5af4d40a725a47aaa12e8449a8958a9500874" translate="yes" xml:space="preserve">
          <source>Determines whether this file belongs to the same root as &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20kotlin.String)/other&quot;&gt;other&lt;/a&gt; and ends with all components of &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20kotlin.String)/other&quot;&gt;other&lt;/a&gt; in the same order. So if &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20kotlin.String)/other&quot;&gt;other&lt;/a&gt; has N components, last N components of &lt;code&gt;this&lt;/code&gt; must be the same as in &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20kotlin.String)/other&quot;&gt;other&lt;/a&gt;. For relative &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20kotlin.String)/other&quot;&gt;other&lt;/a&gt;, &lt;code&gt;this&lt;/code&gt; can belong to any root.</source>
          <target state="translated">이 파일이 같은 루트에 속하는지 여부를 결정 &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20kotlin.String)/other&quot;&gt;기타&lt;/a&gt; 의 모든 구성 요소와 끝 &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20kotlin.String)/other&quot;&gt;다른&lt;/a&gt; 같은 순서로한다. 그렇다면 &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20kotlin.String)/other&quot;&gt;다른&lt;/a&gt; N 구성 요소를 가지고, 마지막 N 성분 &lt;code&gt;this&lt;/code&gt; 에서와 동일해야합니다 &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20kotlin.String)/other&quot;&gt;다른&lt;/a&gt; . relative &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20kotlin.String)/other&quot;&gt;other의&lt;/a&gt; 경우 &lt;code&gt;this&lt;/code&gt; 모든 루트에 속할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff4cb6550bb3b4d85086ff0926bfdfd7ced324ad" translate="yes" xml:space="preserve">
          <source>Determines whether this file belongs to the same root as &lt;a href=&quot;starts-with#kotlin.io%24startsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt; and starts with all components of &lt;a href=&quot;starts-with#kotlin.io%24startsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt; in the same order. So if &lt;a href=&quot;starts-with#kotlin.io%24startsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt; has N components, first N components of &lt;code&gt;this&lt;/code&gt; must be the same as in &lt;a href=&quot;starts-with#kotlin.io%24startsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt;.</source>
          <target state="translated">이 파일이 다른 파일과 동일한 루트에 속해 있는지 확인하고 &lt;a href=&quot;starts-with#kotlin.io%24startsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;다른&lt;/a&gt; 순서 로 &lt;a href=&quot;starts-with#kotlin.io%24startsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;다른&lt;/a&gt; 모든 구성 요소로 시작합니다 . 그렇다면 &lt;a href=&quot;starts-with#kotlin.io%24startsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;다른&lt;/a&gt; N 개의 구성 요소가의 첫 번째 N 성분 &lt;code&gt;this&lt;/code&gt; 에서와 동일해야합니다 &lt;a href=&quot;starts-with#kotlin.io%24startsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;다른&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cc598e8b70ddb22f67801f0d7ca9c59c0d756264" translate="yes" xml:space="preserve">
          <source>Determines whether this file belongs to the same root as &lt;a href=&quot;starts-with#kotlin.io%24startsWith(java.io.File,%20java.io.File)/other&quot;&gt;other&lt;/a&gt; and starts with all components of &lt;a href=&quot;starts-with#kotlin.io%24startsWith(java.io.File,%20java.io.File)/other&quot;&gt;other&lt;/a&gt; in the same order. So if &lt;a href=&quot;starts-with#kotlin.io%24startsWith(java.io.File,%20java.io.File)/other&quot;&gt;other&lt;/a&gt; has N components, first N components of &lt;code&gt;this&lt;/code&gt; must be the same as in &lt;a href=&quot;starts-with#kotlin.io%24startsWith(java.io.File,%20java.io.File)/other&quot;&gt;other&lt;/a&gt;.</source>
          <target state="translated">이 파일이 같은 루트에 속하는지 여부를 결정합니다 &lt;a href=&quot;starts-with#kotlin.io%24startsWith(java.io.File,%20java.io.File)/other&quot;&gt;다른&lt;/a&gt; 과의 모든 구성 요소와 함께 시작하는 &lt;a href=&quot;starts-with#kotlin.io%24startsWith(java.io.File,%20java.io.File)/other&quot;&gt;다른&lt;/a&gt; 같은 순서로한다. 그렇다면 &lt;a href=&quot;starts-with#kotlin.io%24startsWith(java.io.File,%20java.io.File)/other&quot;&gt;다른&lt;/a&gt; N 개의 구성 요소가의 첫 번째 N 성분 &lt;code&gt;this&lt;/code&gt; 에서와 동일해야합니다 &lt;a href=&quot;starts-with#kotlin.io%24startsWith(java.io.File,%20java.io.File)/other&quot;&gt;다른&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d6bf88572f43737b0b427a9e321cfca77dbc5372" translate="yes" xml:space="preserve">
          <source>Determines whether this file has a root or it represents a relative path.</source>
          <target state="translated">이 파일에 루트가 있는지 또는 상대 경로를 나타내는 지 판별합니다.</target>
        </trans-unit>
        <trans-unit id="dddc6211c132c415993b584dc730f460ec7ab7d4" translate="yes" xml:space="preserve">
          <source>Determines whether this file path ends with the path of &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt; file.</source>
          <target state="translated">이 파일 경로가 &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;다른&lt;/a&gt; 파일 의 경로로 끝나는 지 여부를 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="7d53e3eb414534546fd56b4b23076e8e16cb6e97" translate="yes" xml:space="preserve">
          <source>Determines whether this file path ends with the path of &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20java.io.File)/other&quot;&gt;other&lt;/a&gt; file.</source>
          <target state="translated">이 파일 경로가 &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20java.io.File)/other&quot;&gt;다른&lt;/a&gt; 파일 의 경로로 끝나는 지 여부를 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="80f261b6ba4ad9cd101519ca55f6e50d58c5295e" translate="yes" xml:space="preserve">
          <source>Development mode</source>
          <target state="translated">개발 모드</target>
        </trans-unit>
        <trans-unit id="860e1f95d3a8d20be2e3e527091c855f4e981bdb" translate="yes" xml:space="preserve">
          <source>Dictionary</source>
          <target state="translated">Dictionary</target>
        </trans-unit>
        <trans-unit id="66334f39b8b0fe14f26e33cf08b74cb64a672551" translate="yes" xml:space="preserve">
          <source>Differences between &quot;Kotlin Coding Conventions&quot; and &quot;IntelliJ IDEA default code style&quot;</source>
          <target state="translated">&quot;코 틀린 코딩 규칙&quot;과 &quot;IntelliJ IDEA 기본 코드 스타일&quot;의 차이점</target>
        </trans-unit>
        <trans-unit id="4d052b9389172aa17e8d031bb01ccb4301b35447" translate="yes" xml:space="preserve">
          <source>Different APIs. Usually there's a need to learn a completely new API such as &lt;code&gt;thenCompose&lt;/code&gt; or &lt;code&gt;thenAccept&lt;/code&gt;, which can also vary across platforms.</source>
          <target state="translated">다른 API. 일반적으로 플랫폼마다 다를 수있는 &lt;code&gt;thenCompose&lt;/code&gt; 또는 &lt;code&gt;thenAccept&lt;/code&gt; 와 같은 완전히 새로운 API를 배워야합니다 .</target>
        </trans-unit>
        <trans-unit id="1f9f0627015d50fd47a8bae9f4260f05c039adc0" translate="yes" xml:space="preserve">
          <source>Different programming model. Similar to callbacks, the programming model moves away from a top-down imperative approach to a compositional model with chained calls. Traditional program structures such as loops, exception handling, etc. usually are no longer valid in this model.</source>
          <target state="translated">다른 프로그래밍 모델. 콜백과 유사하게 프로그래밍 모델은 하향식 명령 방식에서 체인 호출이있는 구성 모델로 이동합니다. 루프, 예외 처리 등과 같은 기존 프로그램 구조는 일반적으로이 모델에서 더 이상 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5b6ebe83d80fe2194d1dbdb6663e40c82621031e" translate="yes" xml:space="preserve">
          <source>Difficulty of nested callbacks. Usually a function that is used as a callback, often ends up needing its own callback. This leads to a series of nested callbacks which lead to incomprehensible code. The pattern is often referred to as the titled christmas tree (brace represent branches of the tree).</source>
          <target state="translated">중첩 된 콜백의 어려움 일반적으로 콜백으로 사용되는 함수는 종종 자체 콜백이 필요합니다. 이로 인해 일련의 중첩 된 콜백이 발생하여 이해할 수없는 코드가 생성됩니다. 이 패턴은 종종 제목이 지정된 크리스마스 트리라고합니다 (중괄호는 나무의 가지를 나타냄).</target>
        </trans-unit>
        <trans-unit id="07461fdd8bbd77721cfe447edf9e4bd20cbd0023" translate="yes" xml:space="preserve">
          <source>Directory structure</source>
          <target state="translated">디렉토리 구조</target>
        </trans-unit>
        <trans-unit id="cafb3aec55e92698494c582358ea45304a23574b" translate="yes" xml:space="preserve">
          <source>Disable internal declaration export</source>
          <target state="translated">내부 선언 내보내기 비활성화</target>
        </trans-unit>
        <trans-unit id="89bc8aeaa612d38672a0eab465e27f64f1716e6f" translate="yes" xml:space="preserve">
          <source>Disabling DCE</source>
          <target state="translated">DCE 비활성화</target>
        </trans-unit>
        <trans-unit id="78dfcd9c50f960bd4c21e40451e983a8a020ea02" translate="yes" xml:space="preserve">
          <source>Disambiguating targets</source>
          <target state="translated">명확한 목표</target>
        </trans-unit>
        <trans-unit id="78a8653f70041e9014354e7e97dbb680df00d5a7" translate="yes" xml:space="preserve">
          <source>Discontinued deprecated artifacts in the compiler distribution</source>
          <target state="translated">컴파일러 배포에서 더 이상 사용되지 않는 아티팩트</target>
        </trans-unit>
        <trans-unit id="e9bbf50fb8b45100c1b7a2539b0951ff336c730d" translate="yes" xml:space="preserve">
          <source>Dispatchers and threads</source>
          <target state="translated">디스패처 및 스레드</target>
        </trans-unit>
        <trans-unit id="3b6491a4ba67aed4b435bfa8449b41c8a6251b06" translate="yes" xml:space="preserve">
          <source>Disposes the handle. It must not be &lt;a href=&quot;get&quot;&gt;used&lt;/a&gt; after that.</source>
          <target state="translated">손잡이를 버립니다. 그 후에는 &lt;a href=&quot;get&quot;&gt;사용&lt;/a&gt; 해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="6ee7951db01f07d84c88c38e4f1920c53234ce4b" translate="yes" xml:space="preserve">
          <source>Disposes the handle. It must not be used after that.</source>
          <target state="translated">손잡이를 버립니다. 그 후에는 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="ec06ecc113854f061fc6d9ffbd14d296f147a792" translate="yes" xml:space="preserve">
          <source>Distinctions</source>
          <target state="translated">Distinctions</target>
        </trans-unit>
        <trans-unit id="76ea7428fc14a51fd5358254584c79f7dac47e89" translate="yes" xml:space="preserve">
          <source>Divides this value by the other value.</source>
          <target state="translated">이 값을 다른 값으로 나눕니다.</target>
        </trans-unit>
        <trans-unit id="a08f058a478a470c3a7a8adec3edbb9fede3af2f" translate="yes" xml:space="preserve">
          <source>Division of integers</source>
          <target state="translated">정수 나누기</target>
        </trans-unit>
        <trans-unit id="c9aa55dcc69c2c71abf561fe3b47e1527e2ddf90" translate="yes" xml:space="preserve">
          <source>Do not forget about &lt;a href=&quot;http://www.oracle.com/technetwork/java/effectivejava-136174.html&quot;&gt;Effective Java, 3rd Edition&lt;/a&gt;, Item 13: &lt;em&gt;Override clone judiciously&lt;/em&gt;.</source>
          <target state="translated">에 대해 잊지 마세요 &lt;a href=&quot;http://www.oracle.com/technetwork/java/effectivejava-136174.html&quot;&gt;효과적인 자바, 제 3 판&lt;/a&gt; , 항목 13 : &lt;em&gt;재정의 복제를 신중하게&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="7b23d9bbdfefc85d448394a6669411db77eac0ed" translate="yes" xml:space="preserve">
          <source>Do not give up early! Make all the exercises green to finish the course:</source>
          <target state="translated">일찍 포기하지 마십시오! 코스를 마치려면 모든 운동을 녹색으로 만드십시오.</target>
        </trans-unit>
        <trans-unit id="604339b2897e84ca95cb164180153aa9b92f9ccd" translate="yes" xml:space="preserve">
          <source>Do not put a space before &lt;code&gt;?&lt;/code&gt; used to mark a nullable type: &lt;code&gt;String?&lt;/code&gt;</source>
          <target state="translated">전에 공백을 두지 &lt;code&gt;?&lt;/code&gt; 널 입력 가능 유형을 표시하는 데 사용됨 : &lt;code&gt;String?&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2993b64fe7851ac2250a1c240b336811f7c23e79" translate="yes" xml:space="preserve">
          <source>Do not put a space before an opening parenthesis in a primary constructor declaration, method declaration or method call.</source>
          <target state="translated">기본 생성자 선언, 메소드 선언 또는 메소드 호출에서 여는 괄호 앞에 공백을 넣지 마십시오.</target>
        </trans-unit>
        <trans-unit id="8d290ff51e50bef19d6cbbe1bd2888eebc0c194a" translate="yes" xml:space="preserve">
          <source>Do not put spaces around &lt;code&gt;::&lt;/code&gt;: &lt;code&gt;Foo::class&lt;/code&gt;, &lt;code&gt;String::length&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;::&lt;/code&gt; : &lt;code&gt;Foo::class&lt;/code&gt; , &lt;code&gt;String::length&lt;/code&gt; 주위에 공백을 두지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="179e75f1f327ede1a349a061a2361c0d22573c01" translate="yes" xml:space="preserve">
          <source>Do not put spaces around angle brackets used to specify type parameters: &lt;code&gt;class Map&amp;lt;K, V&amp;gt; { ... }&lt;/code&gt;</source>
          <target state="translated">형식 매개 변수를 지정하는 데 사용되는 꺾쇠 괄호 주위에 공백을 두지 마십시오. &lt;code&gt;class Map&amp;lt;K, V&amp;gt; { ... }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7137f35d14dec35ee4b39dcac073fc47b316a778" translate="yes" xml:space="preserve">
          <source>Do not put spaces around unary operators (&lt;code&gt;a++&lt;/code&gt;)</source>
          <target state="translated">단항 연산자 주위에 공백을 두지 마십시오 ( &lt;code&gt;a++&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="6e9b4539b3571ad32d2b8cdfaf5ea9faf65838d1" translate="yes" xml:space="preserve">
          <source>Do not sort the method declarations alphabetically or by visibility, and do not separate regular methods from extension methods. Instead, put related stuff together, so that someone reading the class from top to bottom can follow the logic of what's happening. Choose an order (either higher-level stuff first, or vice versa) and stick to it.</source>
          <target state="translated">메서드 선언을 알파벳순 또는 가시성별로 정렬하지 말고 일반 메서드를 확장 메서드와 분리하지 마십시오. 대신, 관련 자료를 함께 모아서 누군가가 위에서 아래로 수업을 읽고 무슨 일이 일어나는지 논리를 따를 수 있도록하십시오. 주문을 선택하고 (높은 수준의 물건을 먼저 선택하거나 그 반대로) 고수하십시오.</target>
        </trans-unit>
        <trans-unit id="559fcccf797927f3cddbdb303b4454b8fc3cbb07" translate="yes" xml:space="preserve">
          <source>Do not sort the method declarations alphabetically or by visibility, and do not separate regular methods from extension methods. Instead, put related stuff together, so that someone reading the class from top to bottom would be able to follow the logic of what's happening. Choose an order (either higher-level stuff first, or vice versa) and stick to it.</source>
          <target state="translated">메소드 선언을 알파벳순 또는 가시성으로 정렬하지 말고 일반 메소드를 확장 메소드와 분리하지 마십시오. 대신, 관련 내용을 종합하여 클래스를 위에서 아래로 읽는 사람이 일어나고있는 논리를 따를 수있게하십시오. 주문을 선택하고 (높은 수준의 물건을 먼저 또는 그 반대로) 주문을 고수하십시오.</target>
        </trans-unit>
        <trans-unit id="d82e8757015cafb43eb445e49f46aa2d15a58e76" translate="yes" xml:space="preserve">
          <source>Do not use a labeled return for the last statement in a lambda.</source>
          <target state="translated">람다에서 마지막 명령문에 레이블이 지정된 리턴을 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="8b093a7f1f8da84ae28f1d6753e11ea7dd1547d7" translate="yes" xml:space="preserve">
          <source>Do not use this function for huge files.</source>
          <target state="translated">대용량 파일에는이 기능을 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="85fefe68a555a105dd9589b0f57bd9ed3b04f5a7" translate="yes" xml:space="preserve">
          <source>DocumentAndElementEventHandlers</source>
          <target state="translated">DocumentAndElementEventHandlers</target>
        </trans-unit>
        <trans-unit id="88f69bef493fba89ab946f2e087d0caf9b90e0d2" translate="yes" xml:space="preserve">
          <source>DocumentOrShadowRoot</source>
          <target state="translated">DocumentOrShadowRoot</target>
        </trans-unit>
        <trans-unit id="a5b968a6e012d1d2b06fecbe3c39c573a6d9708c" translate="yes" xml:space="preserve">
          <source>DocumentReadyState</source>
          <target state="translated">DocumentReadyState</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="3a0cc390f81644d0680cc454c11e51496fd81c3b" translate="yes" xml:space="preserve">
          <source>Documentation comments</source>
          <target state="translated">설명서 주석</target>
        </trans-unit>
        <trans-unit id="1d333cf81bf3bb582cb06ede8c39d94e4346b195" translate="yes" xml:space="preserve">
          <source>Documentation for a module as a whole, as well as packages in that module, is provided as a separate Markdown file, and the paths to that file is passed to Dokka using the &lt;code&gt;-include&lt;/code&gt; command line parameter or the corresponding parameters in Ant, Maven and Gradle plugins.</source>
          <target state="translated">해당 모듈의 패키지뿐만 아니라 전체 모듈에 대한 문서는 별도의 Markdown 파일로 제공되며, &lt;code&gt;-include&lt;/code&gt; 명령 줄 매개 변수 또는 Ant, Maven 및 Gradle 플러그인.</target>
        </trans-unit>
        <trans-unit id="c94081ae91f83b17508d2459face00f433d22c6e" translate="yes" xml:space="preserve">
          <source>Documenting Kotlin Code</source>
          <target state="translated">코 틀린 코드 문서화</target>
        </trans-unit>
        <trans-unit id="8c20c134ae35dfbe8a7fe9c597283d56bb78d09f" translate="yes" xml:space="preserve">
          <source>Documents a value parameter of a function or a type parameter of a class, property or function. To better separate the parameter name from the description, if you prefer, you can enclose the name of the parameter in brackets. The following two syntaxes are therefore equivalent:</source>
          <target state="translated">함수의 값 매개 변수 또는 클래스, 특성 또는 함수의 유형 매개 변수를 문서화합니다. 매개 변수 이름을 설명과 더 잘 구분하기 위해 원하는 경우 매개 변수 이름을 대괄호로 묶을 수 있습니다. 따라서 다음 두 구문은 동일합니다.</target>
        </trans-unit>
        <trans-unit id="49266f90cef3d806f5f34a15d2664c581545c97e" translate="yes" xml:space="preserve">
          <source>Documents an exception which can be thrown by a method. Since Kotlin does not have checked exceptions, there is also no expectation that all possible exceptions are documented, but you can still use this tag when it provides useful information for users of the class.</source>
          <target state="translated">메소드에 의해 발생 될 수있는 예외를 문서화합니다. Kotlin은 예외를 확인하지 않았으므로 가능한 모든 예외가 문서화 될 것으로 기대하지는 않지만이 태그가 클래스 사용자에게 유용한 정보를 제공 할 때이 태그를 계속 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f6db0f5a7306be8cd64173e0c7fabd018386d71f" translate="yes" xml:space="preserve">
          <source>Documents the primary constructor of a class.</source>
          <target state="translated">클래스의 기본 생성자를 문서화합니다.</target>
        </trans-unit>
        <trans-unit id="f18adbc267f261936f87731208bbfa516fad1be0" translate="yes" xml:space="preserve">
          <source>Documents the property of a class which has the specified name. This tag can be used for documenting properties declared in the primary constructor, where putting a doc comment directly before the property definition would be awkward.</source>
          <target state="translated">지정된 이름을 가진 클래스의 속성을 문서화합니다. 이 태그는 기본 생성자에서 선언 된 속성을 문서화하는 데 사용할 수 있습니다. 여기서 속성 정의 바로 앞에 문서 주석을 추가하는 것이 어색합니다.</target>
        </trans-unit>
        <trans-unit id="774992180b38d059386d310b9315ed0fe28476af" translate="yes" xml:space="preserve">
          <source>Documents the receiver of an extension function.</source>
          <target state="translated">확장 기능의 수신자를 문서화합니다.</target>
        </trans-unit>
        <trans-unit id="0a4c7c3dcf046f9c233cfa23a0f24a10a1a0bcd9" translate="yes" xml:space="preserve">
          <source>Documents the return value of a function.</source>
          <target state="translated">함수의 반환 값을 문서화합니다.</target>
        </trans-unit>
        <trans-unit id="1579785071cbfbf4e7cf75bf97e1c2e46cae5d8d" translate="yes" xml:space="preserve">
          <source>Does Kotlin have a community?</source>
          <target state="translated">코 틀린에는 커뮤니티가 있습니까?</target>
        </trans-unit>
        <trans-unit id="c6727f8ad39827f1d374d3416d8e2fc42be6ad25" translate="yes" xml:space="preserve">
          <source>Does Kotlin only target Java 6?</source>
          <target state="translated">Kotlin은 Java 6 만 대상으로합니까?</target>
        </trans-unit>
        <trans-unit id="f4ca2d4d9c6a0c693699a0dd9feaad71d708bcfe" translate="yes" xml:space="preserve">
          <source>Does not include the Kotlin standard library into the classpath</source>
          <target state="translated">Kotlin 표준 라이브러리를 클래스 경로에 포함하지 않습니다</target>
        </trans-unit>
        <trans-unit id="9aa04937c3ddf9e2d3322525b4be262d35b62fb0" translate="yes" xml:space="preserve">
          <source>Does nothing if this &lt;a href=&quot;-throwable/index#kotlin.Throwable&quot;&gt;Throwable&lt;/a&gt; is frozen.</source>
          <target state="translated">이 &lt;a href=&quot;-throwable/index#kotlin.Throwable&quot;&gt;Throwable&lt;/a&gt; 이 동결 되면 아무것도하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="0df838f2d48c7a75f0c511870710f77ac1d49718" translate="yes" xml:space="preserve">
          <source>Does nothing in this ArrayList implementation.</source>
          <target state="translated">이 ArrayList 구현에서는 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d376b12cffa9053a97f54b84ba604bc1a38aab9f" translate="yes" xml:space="preserve">
          <source>Doesn't affect a line if it doesn't contain &lt;a href=&quot;trim-margin#kotlin.text%24trimMargin%28kotlin.String%2C+kotlin.String%29%2FmarginPrefix&quot;&gt;marginPrefix&lt;/a&gt; except the first and the last blank lines.</source>
          <target state="translated">첫 번째 및 마지막 빈 행을 제외하고 &lt;a href=&quot;trim-margin#kotlin.text%24trimMargin%28kotlin.String%2C+kotlin.String%29%2FmarginPrefix&quot;&gt;marginPrefix를&lt;/a&gt; 포함하지 않으면 행에 영향을 미치지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="dd31ca70ad0570a1bf3bc87e951fa9cc78672183" translate="yes" xml:space="preserve">
          <source>Doesn't affect a line if it doesn't contain &lt;a href=&quot;trim-margin#kotlin.text%24trimMargin(kotlin.String,%20kotlin.String)/marginPrefix&quot;&gt;marginPrefix&lt;/a&gt; except the first and the last blank lines.</source>
          <target state="translated">첫 번째와 마지막 빈 줄을 제외하고 &lt;a href=&quot;trim-margin#kotlin.text%24trimMargin(kotlin.String,%20kotlin.String)/marginPrefix&quot;&gt;marginPrefix를&lt;/a&gt; 포함하지 않으면 줄에 영향을주지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="86d1050237805f5bef98fed1545d38f678ca7c28" translate="yes" xml:space="preserve">
          <source>Doesn't preserve the original line endings.</source>
          <target state="translated">원래 줄 끝을 유지하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fc3ec45270b94cffd4726d4162504d2aed8286b8" translate="yes" xml:space="preserve">
          <source>Dokka has plugins for Gradle, Maven and Ant, so you can integrate documentation generation into your build process.</source>
          <target state="translated">Dokka에는 Gradle, Maven 및 Ant 용 플러그인이 있으므로 문서 생성을 빌드 프로세스에 통합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd5381d99d194a4d81dc7f4dd92bfabdb57e5cac" translate="yes" xml:space="preserve">
          <source>Don't automatically include Kotlin reflection into the classpath</source>
          <target state="translated">클래스 경로에 Kotlin 리플렉션을 자동으로 포함하지 마세요.</target>
        </trans-unit>
        <trans-unit id="c98d3a970399fb558acfc91b4ac26c182311c495" translate="yes" xml:space="preserve">
          <source>Don't automatically include the Java runtime into the classpath</source>
          <target state="translated">Java 런타임을 클래스 경로에 자동으로 포함하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="8dfb15ddc927064c5cb06d6d0cc22a8a68b514ba" translate="yes" xml:space="preserve">
          <source>Don't automatically include the Kotlin/JVM stdlib and Kotlin reflection into the classpath</source>
          <target state="translated">Kotlin / JVM stdlib 및 Kotlin 리플렉션을 클래스 경로에 자동으로 포함하지 마세요.</target>
        </trans-unit>
        <trans-unit id="61fae55b5c1e79c15bd500f368caefde5efaed1f" translate="yes" xml:space="preserve">
          <source>Don't automatically include the default Kotlin/JS stdlib into compilation dependencies</source>
          <target state="translated">기본 Kotlin / JS stdlib를 컴파일 종속성에 자동으로 포함하지 마세요.</target>
        </trans-unit>
        <trans-unit id="674f2329cf52ca826ca203f63d16149b6c868108" translate="yes" xml:space="preserve">
          <source>Don't declare a method as infix if it mutates the receiver object.</source>
          <target state="translated">수신자 객체를 변경하는 경우 메소드를 삽입으로 선언하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="a7a55dbdf1fc21a3e4b49e71c869049035a76573" translate="yes" xml:space="preserve">
          <source>Don't forget to configure the &lt;a href=&quot;#configuring-dependencies&quot;&gt;standard library dependency&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#configuring-dependencies&quot;&gt;표준 라이브러리 종속성&lt;/a&gt; 을 구성하는 것을 잊지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="132cf6d69030e700977aad13556944c950e60fe4" translate="yes" xml:space="preserve">
          <source>Don't include Java runtime into classpath</source>
          <target state="translated">클래스 경로에 Java 런타임을 포함시키지 마십시오</target>
        </trans-unit>
        <trans-unit id="d50dd4cf2ca5f8bf68edff09c5759784aab7da7d" translate="yes" xml:space="preserve">
          <source>Don't include Kotlin reflection implementation into classpath</source>
          <target state="translated">Kotlin 리플렉션 구현을 클래스 경로에 포함시키지 마십시오</target>
        </trans-unit>
        <trans-unit id="aad1adc11555491a7924a835262ebc43c948200a" translate="yes" xml:space="preserve">
          <source>Don't include Kotlin runtime into classpath</source>
          <target state="translated">클래스 경로에 Kotlin 런타임을 포함시키지 마십시오</target>
        </trans-unit>
        <trans-unit id="6c7fd93bb25d5d75ea22611e7f245e65f975c074" translate="yes" xml:space="preserve">
          <source>Don't put a space before &lt;code&gt;:&lt;/code&gt; when it separates a declaration and its type.</source>
          <target state="translated">앞에 공백을 넣지 마십시오 &lt;code&gt;:&lt;/code&gt; 그것은 선언과 유형을 분리 할 때.</target>
        </trans-unit>
        <trans-unit id="646bf03016f3edf964253fb0fc3017c3c4d08276" translate="yes" xml:space="preserve">
          <source>Don't split lines if the resulting two lines are also grammatically valid on their own (even if it results in a compilation error that is not directly related to the grammar of Kotlin). The following does not actually return the result of &lt;code&gt;foo()&lt;/code&gt; - it returns a special value called &lt;code&gt;Unit&lt;/code&gt;, which we'll cover later, and &lt;code&gt;foo()&lt;/code&gt; is never called.</source>
          <target state="translated">결과적인 두 줄이 문법적으로도 유효한 경우에는 줄을 나누지 마십시오 (코 틀린 문법과 직접 관련이없는 컴파일 오류가 발생하더라도). 다음은 실제의 결과를 반환하지 않습니다 &lt;code&gt;foo()&lt;/code&gt; -이 특별한라는 값 반환 &lt;code&gt;Unit&lt;/code&gt; 나중에 다룰 것이다, 그리고 &lt;code&gt;foo()&lt;/code&gt; 호출되지 않습니다를.</target>
        </trans-unit>
        <trans-unit id="09fb3893d047a836791635a0443cc9216f51e6ba" translate="yes" xml:space="preserve">
          <source>Don't use bundled Kotlin stdlib</source>
          <target state="translated">번들 Kotlin stdlib를 사용하지 마십시오</target>
        </trans-unit>
        <trans-unit id="f80cdcceee4d91537ff77825073b7036b585b343" translate="yes" xml:space="preserve">
          <source>Don't use curly braces when inserting a simple variable into a string template. Use curly braces only for longer expressions.</source>
          <target state="translated">문자열 템플릿에 간단한 변수를 삽입 할 때는 중괄호를 사용하지 마십시오. 더 긴 표현식에만 중괄호를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="81581597044514bf54d4f97266022fc991f3915e" translate="yes" xml:space="preserve">
          <source>Double</source>
          <target state="translated">Double</target>
        </trans-unit>
        <trans-unit id="3194951241cacbdd98f1aed6e5b2b42bebedb241" translate="yes" xml:space="preserve">
          <source>DoubleArray</source>
          <target state="translated">DoubleArray</target>
        </trans-unit>
        <trans-unit id="1827d562954cd23e4834e09f0e32e9b3e42fc4a5" translate="yes" xml:space="preserve">
          <source>DoubleIterator</source>
          <target state="translated">DoubleIterator</target>
        </trans-unit>
        <trans-unit id="da5c3eafb2a6fab1f0d485bd24e020a7bf7031cc" translate="yes" xml:space="preserve">
          <source>DoubleRange</source>
          <target state="translated">DoubleRange</target>
        </trans-unit>
        <trans-unit id="3cde05be63ba29d6e9c3dc318400a51421d14bf6" translate="yes" xml:space="preserve">
          <source>DoubleVar</source>
          <target state="translated">DoubleVar</target>
        </trans-unit>
        <trans-unit id="103746b98e5ac528917ab1d3e59fe03baca4727b" translate="yes" xml:space="preserve">
          <source>DoubleVarOf</source>
          <target state="translated">DoubleVarOf</target>
        </trans-unit>
        <trans-unit id="f56bdf21350350a8a2323dd95680e9a746286046" translate="yes" xml:space="preserve">
          <source>Doubles by default: &lt;code&gt;123.5&lt;/code&gt;, &lt;code&gt;123.5e10&lt;/code&gt;</source>
          <target state="translated">기본적으로 배가 : &lt;code&gt;123.5&lt;/code&gt; , &lt;code&gt;123.5e10&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="140001432d798891428681194a9dfa55bddb4614" translate="yes" xml:space="preserve">
          <source>Download and install &lt;a href=&quot;https://developer.android.com/studio/index.html&quot;&gt;Android Studio&lt;/a&gt; which includes Kotlin support out of the box.</source>
          <target state="translated">즉시 Kotlin 지원이 포함 된 &lt;a href=&quot;https://developer.android.com/studio/index.html&quot;&gt;Android Studio&lt;/a&gt; 를 다운로드하여 설치 하십시오.</target>
        </trans-unit>
        <trans-unit id="0e8ca4fb0a389212c6ed052ff927d2cd7c7cd549" translate="yes" xml:space="preserve">
          <source>Download and install the meta-runner.</source>
          <target state="translated">메타 러너를 다운로드하여 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="750aecff5e7115d4f4f730e3be7ef5843044e79b" translate="yes" xml:space="preserve">
          <source>Downloading the compiler</source>
          <target state="translated">컴파일러 다운로드</target>
        </trans-unit>
        <trans-unit id="5eeb55c228b8b7544858818654ad72eab39ff75d" translate="yes" xml:space="preserve">
          <source>DragEventInit</source>
          <target state="translated">DragEventInit</target>
        </trans-unit>
        <trans-unit id="0bb2f18a9f2730ea509eb82acef7cda97c4ce41d" translate="yes" xml:space="preserve">
          <source>DslMarker</source>
          <target state="translated">DslMarker</target>
        </trans-unit>
        <trans-unit id="51d0193dc58bcee14c37411c06f30d06e100a34c" translate="yes" xml:space="preserve">
          <source>Due to different representations, smaller types are not subtypes of bigger ones. If they were, we would have troubles of the following sort:</source>
          <target state="translated">다른 표현으로 인해 작은 유형은 더 큰 유형의 하위 유형이 아닙니다. 그렇다면 다음과 같은 문제가 생길 것입니다.</target>
        </trans-unit>
        <trans-unit id="81075e498615cc7a7ea41929fa4088ae475a42e9" translate="yes" xml:space="preserve">
          <source>Due to the current limitations, some tasks configured by the Java plugin are disabled, and the corresponding tasks added by the Kotlin plugin are used instead:</source>
          <target state="translated">현재 제한 사항으로 인해 Java 플러그인으로 구성된 일부 태스크가 사용 안함으로 설정되고 Kotlin 플러그인으로 추가 된 해당 태스크가 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5407d1d0ad8a8c1986bf04088f64de3c1cea4067" translate="yes" xml:space="preserve">
          <source>Due to the key access to elements, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/plus&quot;&gt;&lt;code&gt;plus&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;+&lt;/code&gt;) and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/minus&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;-&lt;/code&gt;) operators work for maps differently than for other collections. &lt;code&gt;plus&lt;/code&gt; returns a &lt;code&gt;Map&lt;/code&gt; that contains elements of its both operands: a &lt;code&gt;Map&lt;/code&gt; on the left and a &lt;code&gt;Pair&lt;/code&gt; or another &lt;code&gt;Map&lt;/code&gt; on the right. When the right-hand side operand contains entries with keys present in the left-hand side &lt;code&gt;Map&lt;/code&gt;, the result map contains the entries from the right side.</source>
          <target state="translated">요소에 대한 주요 액세스 권한으로 인해 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/plus&quot;&gt; &lt;code&gt;plus&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;+&lt;/code&gt; ) 및 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/minus&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;-&lt;/code&gt; ) 연산자는 다른 컬렉션과 다르게지도에서 작동합니다. &lt;code&gt;plus&lt;/code&gt; 는 두 피연산자 ( 왼쪽에 있는 &lt;code&gt;Map&lt;/code&gt; 과 오른쪽에있는 한 &lt;code&gt;Pair&lt;/code&gt; 또는 다른 &lt;code&gt;Map&lt;/code&gt; 요소가 포함 된 &lt;code&gt;Map&lt;/code&gt; 을 반환합니다 . 오른쪽 피연산자가 왼쪽 &lt;code&gt;Map&lt;/code&gt; 에 키 가있는 항목을 포함하는 경우 결과 맵에는 오른쪽의 항목이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="5959cafc90b9976fab302fc450377426e53fb1b1" translate="yes" xml:space="preserve">
          <source>Due to the similar nature of scope functions, choosing the right one for your case can be a bit tricky. The choice mainly depends on your intent and the consistency of use in your project. Below we'll provide detailed descriptions of the distinctions between scope functions and the conventions on their usage.</source>
          <target state="translated">스코프 기능의 특성이 비슷하기 때문에 귀하의 경우에 적합한 기능을 선택하는 것은 약간 까다로울 수 있습니다. 선택은 주로 프로젝트의 의도와 사용 일관성에 달려 있습니다. 아래에서는 범위 함수와 사용법에 대한 규칙의 차이점에 대한 자세한 설명을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1370004da76fa4f3b7a5180fd5436065ef4c7d5b" translate="yes" xml:space="preserve">
          <source>Duration</source>
          <target state="translated">Duration</target>
        </trans-unit>
        <trans-unit id="0fbfccbcc20a7e61c6ff4ea80152137fa3847246" translate="yes" xml:space="preserve">
          <source>DurationUnit</source>
          <target state="translated">DurationUnit</target>
        </trans-unit>
        <trans-unit id="fbcac33cd2aae5fd2f5bd43d61fe4687672d037d" translate="yes" xml:space="preserve">
          <source>During an instance initialization, the initializer blocks are executed in the same order as they appear in the class body, interleaved with the property initializers:</source>
          <target state="translated">인스턴스 초기화 중에 이니셜 라이저 블록은 클래스 본문에 나타나는 순서대로 속성 이니셜 라이저와 인터리브됩니다.</target>
        </trans-unit>
        <trans-unit id="89eca32e31f17a93e4068b4794aa9a7213518c8c" translate="yes" xml:space="preserve">
          <source>During construction of a new instance of a derived class, the base class initialization is done as the first step (preceded only by evaluation of the arguments for the base class constructor) and thus happens before the initialization logic of the derived class is run.</source>
          <target state="translated">파생 클래스의 새 인스턴스를 생성하는 동안 기본 클래스 초기화는 첫 번째 단계 (기본 클래스 생성자에 대한 인수 평가로만 수행됨)로 수행되므로 파생 클래스의 초기화 논리가 실행되기 전에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="95b790ad62c861c84e10d2d8a95af1b4cc85369a" translate="yes" xml:space="preserve">
          <source>Dynamic Type</source>
          <target state="translated">다이나믹 타입</target>
        </trans-unit>
        <trans-unit id="1bec92c134e4881eaaf2a6bd7cba072fefd54d18" translate="yes" xml:space="preserve">
          <source>Dynamic libraries are the main way to use Kotlin code from existing programs. We can use them to share our code with many platforms or languages, including JVM, &lt;a href=&quot;https://github.com/JetBrains/kotlin-native/blob/master/samples/python_extension/src/main/c/kotlin_bridge.c&quot;&gt;Python&lt;/a&gt;, iOS, Android, and others.</source>
          <target state="translated">동적 라이브러리는 기존 프로그램에서 Kotlin 코드를 사용하는 주요 방법입니다. 우리는 그것들을 사용하여 JVM을 포함한 많은 플랫폼이나 언어와 코드를 공유 할 수 있습니다.&lt;a href=&quot;https://github.com/JetBrains/kotlin-native/blob/master/samples/python_extension/src/main/c/kotlin_bridge.c&quot;&gt; Python&lt;/a&gt; , iOS, Android .</target>
        </trans-unit>
        <trans-unit id="e0184adedf913b076626646d3f52c3b49c39ad6d" translate="yes" xml:space="preserve">
          <source>E</source>
          <target state="translated">E</target>
        </trans-unit>
        <trans-unit id="d15caa4e4c433db64527c708d6ce618053bc66c0" translate="yes" xml:space="preserve">
          <source>E.g. for next code:</source>
          <target state="translated">예를 들어 다음 코드 :</target>
        </trans-unit>
        <trans-unit id="79ee0da987021d140e8d6e8587c39d867fd71006" translate="yes" xml:space="preserve">
          <source>E.g. for the following code:</source>
          <target state="translated">예를 들어 다음 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b7871ed9065f6c83f82cacf6677e3ec16560ecab" translate="yes" xml:space="preserve">
          <source>EAP Builds</source>
          <target state="translated">EAP 빌드</target>
        </trans-unit>
        <trans-unit id="5bc604777adb22ae457a5473c397202e00689e23" translate="yes" xml:space="preserve">
          <source>EMPTY</source>
          <target state="translated">EMPTY</target>
        </trans-unit>
        <trans-unit id="889059f5218ab9af9e50be715febbbf437573234" translate="yes" xml:space="preserve">
          <source>ENCLOSING_MARK</source>
          <target state="translated">ENCLOSING_MARK</target>
        </trans-unit>
        <trans-unit id="2c9d04702f9d8be59da552603a90ac3e455ad308" translate="yes" xml:space="preserve">
          <source>END_PUNCTUATION</source>
          <target state="translated">END_PUNCTUATION</target>
        </trans-unit>
        <trans-unit id="0b99cebe565822c64ac5d84aecb00fe40e59cbd3" translate="yes" xml:space="preserve">
          <source>ERROR</source>
          <target state="translated">ERROR</target>
        </trans-unit>
        <trans-unit id="6f46563c4624929c3ea8e9a78058aa4bc6526dff" translate="yes" xml:space="preserve">
          <source>EUROPEAN_NUMBER</source>
          <target state="translated">EUROPEAN_NUMBER</target>
        </trans-unit>
        <trans-unit id="adc4803227e466e80770cf89d11f810e3a1d1985" translate="yes" xml:space="preserve">
          <source>EUROPEAN_NUMBER_SEPARATOR</source>
          <target state="translated">EUROPEAN_NUMBER_SEPARATOR</target>
        </trans-unit>
        <trans-unit id="6c73ba19807e39fecfb3120a9d4be19db919b958" translate="yes" xml:space="preserve">
          <source>EUROPEAN_NUMBER_TERMINATOR</source>
          <target state="translated">EUROPEAN_NUMBER_TERMINATOR</target>
        </trans-unit>
        <trans-unit id="b9318e8dd43cf90dac164eaf28c412c8270bd081" translate="yes" xml:space="preserve">
          <source>EXACTLY_ONCE</source>
          <target state="translated">EXACTLY_ONCE</target>
        </trans-unit>
        <trans-unit id="891bbd450e125f5b1ee12d035ddc1a7eef7a872c" translate="yes" xml:space="preserve">
          <source>EXPRESSION</source>
          <target state="translated">EXPRESSION</target>
        </trans-unit>
        <trans-unit id="822c0f907a120edc9af6756a2f2ce2c284f197c5" translate="yes" xml:space="preserve">
          <source>EXTENSION_RECEIVER</source>
          <target state="translated">EXTENSION_RECEIVER</target>
        </trans-unit>
        <trans-unit id="9fa15ceb7fbfcb040793c598863789e6ad8dddde" translate="yes" xml:space="preserve">
          <source>Each compilation has a default source set, which is the place for sources and dependencies that are specific to that compilation. The default source set is also used for directing other source sets to the compilation by the means of the &quot;depends on&quot; relation.</source>
          <target state="translated">각 컴파일에는 기본 소스 세트가 있으며,이 소스 세트는 해당 컴파일과 관련된 소스 및 종속성의 위치입니다. 기본 소스 세트는 &quot;종속&quot;관계를 통해 다른 소스 세트를 컴파일하도록 지시하는 데에도 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="75794b79a3c7503d4cb9fd0d66eb5e355e381841" translate="yes" xml:space="preserve">
          <source>Each compilation is accompanied by a default &lt;a href=&quot;#configuring-source-sets&quot;&gt;source set&lt;/a&gt;, which is created automatically and should be used for sources and dependencies that are specific to that compilation. The default source set for a compilation &lt;code&gt;foo&lt;/code&gt; of a target &lt;code&gt;bar&lt;/code&gt; has the name &lt;code&gt;barFoo&lt;/code&gt;. It can also be accessed from a compilation using &lt;code&gt;defaultSourceSet&lt;/code&gt;:</source>
          <target state="translated">각 컴파일에는 자동으로 작성되는 기본 &lt;a href=&quot;#configuring-source-sets&quot;&gt;소스 세트&lt;/a&gt; 가 수반되며 해당 컴파일과 관련된 소스 및 종속성에 사용해야합니다. 대상 &lt;code&gt;bar&lt;/code&gt; 의 컴파일 &lt;code&gt;foo&lt;/code&gt; 에 대한 기본 소스 세트 의 이름은 &lt;code&gt;barFoo&lt;/code&gt; 입니다. &lt;code&gt;defaultSourceSet&lt;/code&gt; 를 사용하여 컴파일에서 액세스 할 수도 있습니다. .</target>
        </trans-unit>
        <trans-unit id="9d4e8f2c9423cf7f3b3e960de1520a01d1b94247" translate="yes" xml:space="preserve">
          <source>Each element in the list gets replaced with the &lt;a href=&quot;fill#kotlin.collections%24fill%28kotlin.collections.MutableList%28%28kotlin.collections.fill.T%29%29%2C+kotlin.collections.fill.T%29%2Fvalue&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">목록의 각 요소는 &lt;a href=&quot;fill#kotlin.collections%24fill%28kotlin.collections.MutableList%28%28kotlin.collections.fill.T%29%29%2C+kotlin.collections.fill.T%29%2Fvalue&quot;&gt;값으로&lt;/a&gt; 대체됩니다 .</target>
        </trans-unit>
        <trans-unit id="e60782d97a3b87e45f3ed2164be5389474f77db8" translate="yes" xml:space="preserve">
          <source>Each element in the list gets replaced with the &lt;a href=&quot;fill#kotlin.collections%24fill(kotlin.collections.MutableList((kotlin.collections.fill.T)),%20kotlin.collections.fill.T)/value&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">목록의 각 요소는 &lt;a href=&quot;fill#kotlin.collections%24fill(kotlin.collections.MutableList((kotlin.collections.fill.T)),%20kotlin.collections.fill.T)/value&quot;&gt;값으로&lt;/a&gt; 대체됩니다 .</target>
        </trans-unit>
        <trans-unit id="5e2c66324047aba6ab2a31ade0c6e2c38c1338ce" translate="yes" xml:space="preserve">
          <source>Each enum constant is an object. Enum constants are separated with commas.</source>
          <target state="translated">각 열거 형 상수는 객체입니다. 열거 형 상수는 쉼표로 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="288c78381723c563253b7eae6cda31fe87af7cc5" translate="yes" xml:space="preserve">
          <source>Each factory method exists in several versions. Consider them by example of the &lt;code&gt;executable&lt;/code&gt; method. All the same versions are available for all other factory methods.</source>
          <target state="translated">각 팩토리 메소드는 여러 버전으로 존재합니다. &lt;code&gt;executable&lt;/code&gt; 예제로 고려하십시오 방법의 . 다른 모든 팩토리 메소드에 대해 동일한 버전을 모두 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="286c3a296e5ddc0501582b309ba3224c6f8b3201" translate="yes" xml:space="preserve">
          <source>Each of the created frameworks contains the header file in &lt;code&gt;&amp;lt;Framework&amp;gt;/Headers/Demo.h&lt;/code&gt;. The headers do not depend on the target platform (at least with Kotlin/Native v.0.9.2). It contains the definitions for our Kotlin code and a few Kotlin-wide declarations.</source>
          <target state="translated">작성된 각 프레임 워크는 &lt;code&gt;&amp;lt;Framework&amp;gt;/Headers/Demo.h&lt;/code&gt; 에 헤더 파일을 포함합니다. 있습니다. 헤더는 대상 플랫폼에 의존하지 않습니다 (적어도 Kotlin / Native v.0.9.2에서는). 여기에는 Kotlin 코드에 대한 정의와 Kotlin 전체 선언이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ac0799f6a9a4112f1d8fe7504939fbe4d8034de" translate="yes" xml:space="preserve">
          <source>Each source set by default has its Kotlin sources under &lt;code&gt;src/&amp;lt;sourceSetName&amp;gt;/kotlin&lt;/code&gt; directory and the resources under &lt;code&gt;src/&amp;lt;sourceSetName&amp;gt;/resources&lt;/code&gt;.</source>
          <target state="translated">기본적으로 각 소스 세트에는 &lt;code&gt;src/&amp;lt;sourceSetName&amp;gt;/kotlin&lt;/code&gt; 디렉토리에 Kotlin 소스가 있고 &lt;code&gt;src/&amp;lt;sourceSetName&amp;gt;/resources&lt;/code&gt; 에 리소스가 있습니다.</target>
        </trans-unit>
        <trans-unit id="36c270f1772f1e5369f05b1e129b1452732ce2bc" translate="yes" xml:space="preserve">
          <source>Each source set has a default source directory for Kotlin sources: &lt;code&gt;src/&amp;lt;source set name&amp;gt;/kotlin&lt;/code&gt;. To add Kotlin source directories and resources to a source set, use its &lt;code&gt;kotlin&lt;/code&gt; and &lt;code&gt;resources&lt;/code&gt;&lt;code&gt;SourceDirectorySet&lt;/code&gt;s:</source>
          <target state="translated">각 소스 세트에는 Kotlin 소스에 대한 기본 소스 디렉토리가 있습니다 ( &lt;code&gt;src/&amp;lt;source set name&amp;gt;/kotlin&lt;/code&gt; ) . Kotlin 소스 디렉토리 및 자원을 소스 세트에 추가하려면 해당 &lt;code&gt;kotlin&lt;/code&gt; 및 &lt;code&gt;resources&lt;/code&gt; &lt;code&gt;SourceDirectorySet&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="eccbae19f1793e2279bb379096b38a15107b788c" translate="yes" xml:space="preserve">
          <source>Each target includes two &lt;strong&gt;compilations&lt;/strong&gt;: &lt;code&gt;main&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; compiling product and test sources respectively. A compilation is an abstraction over a compiler invocation and described at the &lt;a href=&quot;../building-mpp-with-gradle#configuring-compilations&quot;&gt;corresponding page&lt;/a&gt;.</source>
          <target state="translated">각 대상이 포함되어 &lt;strong&gt;컴파일&lt;/strong&gt; : &lt;code&gt;main&lt;/code&gt; 와 &lt;code&gt;test&lt;/code&gt; 를 각각 컴파일 제품 및 테스트 소스를. 컴파일은 컴파일러 호출에 대한 추상화이며 &lt;a href=&quot;../building-mpp-with-gradle#configuring-compilations&quot;&gt;해당 페이지에&lt;/a&gt; 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="77cf02692234ad5fe03dd42180cdec6debe9dfd2" translate="yes" xml:space="preserve">
          <source>Earlier, Kotlin used assignments made inside a &lt;code&gt;try&lt;/code&gt; block for smart casts after the block, which could break type- and null-safety and lead to runtime failures. This release fixes this issue, making the smart casts more strict, but breaking some code that relied on such smart casts.</source>
          <target state="translated">이전에 Kotlin 은 블록 뒤의 스마트 캐스트를 위해 &lt;code&gt;try&lt;/code&gt; 블록 내부에 지정된 할당을 사용 하여 형식 및 null 안전성을 손상시키고 런타임 오류를 유발할 수있었습니다. 이 릴리스에서는이 문제가 해결되어 스마트 캐스트가 더 엄격 해지지 만 스마트 캐스트에 의존하는 일부 코드는 깨졌습니다.</target>
        </trans-unit>
        <trans-unit id="f3c53eb8a62fd350a8b808a2e8ad6882452c7601" translate="yes" xml:space="preserve">
          <source>Eclipse (&lt;code&gt;org.eclipse.jdt.annotation&lt;/code&gt;)</source>
          <target state="translated">이클립스 ( &lt;code&gt;org.eclipse.jdt.annotation&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f826de78acd8f38e6169a9c35ab6797dfa00210d" translate="yes" xml:space="preserve">
          <source>EduTools plugin</source>
          <target state="translated">EduTools 플러그인</target>
        </trans-unit>
        <trans-unit id="720b5dbc53190f0e13902f7885ccaf43bb9991de" translate="yes" xml:space="preserve">
          <source>Effect</source>
          <target state="translated">Effect</target>
        </trans-unit>
        <trans-unit id="4ef1415307c2764c7902e5073b06866fb4ef3897" translate="yes" xml:space="preserve">
          <source>Eight-bit UCS Transformation Format.</source>
          <target state="translated">8 비트 UCS 변환 형식.</target>
        </trans-unit>
        <trans-unit id="49fa9fd831096c82ab950bc7aa0a0a7ef8a10998" translate="yes" xml:space="preserve">
          <source>Element</source>
          <target state="translated">Element</target>
        </trans-unit>
        <trans-unit id="cffab4c6beb33b9e8e4dde3262e3a725abe28506" translate="yes" xml:space="preserve">
          <source>ElementCSSInlineStyle</source>
          <target state="translated">ElementCSSInlineStyle</target>
        </trans-unit>
        <trans-unit id="d137eed0ce5cd2a4cfee42d7643ae2ba8d6dc32f" translate="yes" xml:space="preserve">
          <source>ElementContentEditable</source>
          <target state="translated">ElementContentEditable</target>
        </trans-unit>
        <trans-unit id="ff19e297eb7330b9b685e8eed6956f8d8853a66a" translate="yes" xml:space="preserve">
          <source>ElementCreationOptions</source>
          <target state="translated">ElementCreationOptions</target>
        </trans-unit>
        <trans-unit id="70696a12cee77679875477bdbc5af610150a683d" translate="yes" xml:space="preserve">
          <source>ElementDefinitionOptions</source>
          <target state="translated">ElementDefinitionOptions</target>
        </trans-unit>
        <trans-unit id="46e6c77a0a1d3415576cf0983505dda61b4a49a4" translate="yes" xml:space="preserve">
          <source>Elements in the set returned are sorted according to the given &lt;a href=&quot;to-sorted-set#kotlin.collections%24toSortedSet%28kotlin.Array%28%28kotlin.collections.toSortedSet.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.toSortedSet.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">반환 된 세트의 요소는 주어진 &lt;a href=&quot;to-sorted-set#kotlin.collections%24toSortedSet%28kotlin.Array%28%28kotlin.collections.toSortedSet.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.toSortedSet.T%29%29%29%2Fcomparator&quot;&gt;비교기&lt;/a&gt; 에 따라 정렬됩니다 .</target>
        </trans-unit>
        <trans-unit id="42fc185bd5603498be6d88e73ff301a6e93664ee" translate="yes" xml:space="preserve">
          <source>Elements in the set returned are sorted according to the given &lt;a href=&quot;to-sorted-set#kotlin.collections%24toSortedSet(kotlin.Array((kotlin.collections.toSortedSet.T)),%20java.util.Comparator((kotlin.collections.toSortedSet.T)))/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">반환 된 집합의 요소는 주어진 &lt;a href=&quot;to-sorted-set#kotlin.collections%24toSortedSet(kotlin.Array((kotlin.collections.toSortedSet.T)),%20java.util.Comparator((kotlin.collections.toSortedSet.T)))/comparator&quot;&gt;비교 자&lt;/a&gt; 에 따라 정렬됩니다 .</target>
        </trans-unit>
        <trans-unit id="d06fd310678899c14b842666da4910c5ad079e70" translate="yes" xml:space="preserve">
          <source>Elements in the set returned are sorted according to the given &lt;a href=&quot;to-sorted-set#kotlin.sequences%24toSortedSet%28kotlin.sequences.Sequence%28%28kotlin.sequences.toSortedSet.T%29%29%2C+java.util.Comparator%28%28kotlin.sequences.toSortedSet.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">반환 된 세트의 요소는 주어진 &lt;a href=&quot;to-sorted-set#kotlin.sequences%24toSortedSet%28kotlin.sequences.Sequence%28%28kotlin.sequences.toSortedSet.T%29%29%2C+java.util.Comparator%28%28kotlin.sequences.toSortedSet.T%29%29%29%2Fcomparator&quot;&gt;비교기&lt;/a&gt; 에 따라 정렬됩니다 .</target>
        </trans-unit>
        <trans-unit id="8eb7f36f073426852c41e8becb133d76878ac985" translate="yes" xml:space="preserve">
          <source>Elements in the set returned are sorted according to the given &lt;a href=&quot;to-sorted-set#kotlin.sequences%24toSortedSet(kotlin.sequences.Sequence((kotlin.sequences.toSortedSet.T)),%20java.util.Comparator((kotlin.sequences.toSortedSet.T)))/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">반환 된 집합의 요소는 주어진 &lt;a href=&quot;to-sorted-set#kotlin.sequences%24toSortedSet(kotlin.sequences.Sequence((kotlin.sequences.toSortedSet.T)),%20java.util.Comparator((kotlin.sequences.toSortedSet.T)))/comparator&quot;&gt;비교 자&lt;/a&gt; 에 따라 정렬됩니다 .</target>
        </trans-unit>
        <trans-unit id="6a88cb2b3693e123208ae8e724fc1dc0faa56c45" translate="yes" xml:space="preserve">
          <source>Elvis Operator</source>
          <target state="translated">엘비스 운영자</target>
        </trans-unit>
        <trans-unit id="9435fb78efed9559ebdda8817e66f5e037cdb9f1" translate="yes" xml:space="preserve">
          <source>Elvis operator</source>
          <target state="translated">엘비스 연산자</target>
        </trans-unit>
        <trans-unit id="f3781e102266b0236e1e2f34ca15a94bcf3b30be" translate="yes" xml:space="preserve">
          <source>Embed source files into source map</source>
          <target state="translated">소스 파일을 소스 맵에 포함</target>
        </trans-unit>
        <trans-unit id="b467d1b8b6b53bb5ecc32ca24a87b2fec5e550f4" translate="yes" xml:space="preserve">
          <source>Embeds the body of the function with the specified qualified name into the documentation for the current element, in order to show an example of how the element could be used.</source>
          <target state="translated">요소의 사용 방법에 대한 예를 보여주기 위해 지정된 규정 된 이름의 함수 본문을 현재 요소의 문서에 포함시킵니다.</target>
        </trans-unit>
        <trans-unit id="efffc6ff2c76faf4e3da9bd05908f46360ee6c19" translate="yes" xml:space="preserve">
          <source>Empty classes aren't very interesting, so let's make a class with some &lt;em&gt;properties&lt;/em&gt;:</source>
          <target state="translated">빈 클래스는별로 흥미롭지 않으므로 몇 가지 &lt;em&gt;속성을&lt;/em&gt; 가진 클래스를 만들어 봅시다 .</target>
        </trans-unit>
        <trans-unit id="9fd5e5efc84f85d37ba0aa6b82181d579d9cc263" translate="yes" xml:space="preserve">
          <source>Empty collections</source>
          <target state="translated">빈 컬렉션</target>
        </trans-unit>
        <trans-unit id="b427299e75fecbaeeb3025bf821643b8a411487f" translate="yes" xml:space="preserve">
          <source>EmptyCoroutineContext</source>
          <target state="translated">EmptyCoroutineContext</target>
        </trans-unit>
        <trans-unit id="7ef2ebecc0cb97c031b733c92b842fed11b529d2" translate="yes" xml:space="preserve">
          <source>Enable &lt;code&gt;invokeInitializers&lt;/code&gt; option if you want the plugin to run the initialization logic from the synthetic constructor. Starting from Kotlin 1.1.3-2, it is disabled by default because of &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-18667&quot;&gt;&lt;code&gt;KT-18667&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-18668&quot;&gt;&lt;code&gt;KT-18668&lt;/code&gt;&lt;/a&gt; which will be addressed in the future.</source>
          <target state="translated">플러그인이 합성 생성자에서 초기화 로직을 실행하도록하려면 &lt;code&gt;invokeInitializers&lt;/code&gt; 옵션을 사용하십시오 . Kotlin 1.1.3-2부터는 향후 해결 될 &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-18667&quot;&gt; &lt;code&gt;KT-18667&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-18668&quot;&gt; &lt;code&gt;KT-18668&lt;/code&gt; &lt;/a&gt; 18668로 인해 기본적으로 비활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e3ada3d12644276d91abd790279f716fabc7767" translate="yes" xml:space="preserve">
          <source>Enable the official code style formatting by default starting from Kotlin 1.3 and only for new projects (old formatting can be enabled manually)</source>
          <target state="translated">Kotlin 1.3부터 ​​기본적으로 공식 코드 스타일 형식을 사용하도록 설정하고 새 프로젝트에 대해서만 사용 가능합니다 (오래된 형식은 수동으로 사용 가능).</target>
        </trans-unit>
        <trans-unit id="900f496f052ef1aab784a6675a6acce778d1fbc7" translate="yes" xml:space="preserve">
          <source>Enable verbose logging output</source>
          <target state="translated">자세한 로깅 출력 사용</target>
        </trans-unit>
        <trans-unit id="a7fde85fed255437f0dd6f222439a91515a76d1e" translate="yes" xml:space="preserve">
          <source>Enabled &lt;a href=&quot;compiler-plugins&quot;&gt;compiler plugins&lt;/a&gt;</source>
          <target state="translated">활성화 된 &lt;a href=&quot;compiler-plugins&quot;&gt;컴파일러 플러그인&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9bf2d1d72b43d7d00f66dc3259477d82291aac64" translate="yes" xml:space="preserve">
          <source>Enables Unix lines mode. In this mode, only the &lt;code&gt;'\n'&lt;/code&gt; is recognized as a line terminator.</source>
          <target state="translated">유닉스 라인 모드를 활성화합니다. 이 모드에서는 &lt;code&gt;'\n'&lt;/code&gt; 만 줄 종결 자로 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="c6a24259091d007977acf52d96a64c638d463fb7" translate="yes" xml:space="preserve">
          <source>Enables case-insensitive matching.</source>
          <target state="translated">대소 문자를 구분하지 않는 일치를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="78ad37c7bf7b510807eb5d75d95837985737627a" translate="yes" xml:space="preserve">
          <source>Enables case-insensitive matching. Case comparison is Unicode-aware.</source>
          <target state="translated">대소 문자를 구분하지 않는 일치를 사용합니다. 대소 문자 비교는 유니 코드를 인식합니다.</target>
        </trans-unit>
        <trans-unit id="acf6c9c494a0dbe1b691aa73b8db57947f65afe5" translate="yes" xml:space="preserve">
          <source>Enables equivalence by canonical decomposition.</source>
          <target state="translated">표준 분해로 동등성을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="ad1614448b99ab93c2cc9d0947ca3d403238fc64" translate="yes" xml:space="preserve">
          <source>Enables literal parsing of the pattern.</source>
          <target state="translated">패턴의 리터럴 구문 분석을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="35ed1f408c376283e160007e24f8a96d620e43ac" translate="yes" xml:space="preserve">
          <source>Enables multiline mode.</source>
          <target state="translated">여러 줄 모드를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="9c69716941257f6354b7ba74fb8c88366e9a7ce0" translate="yes" xml:space="preserve">
          <source>Enables overload selection based on the type of the value returned from lambda argument.</source>
          <target state="translated">람다 인수에서 반환 된 값의 유형에 따라 오버로드 선택을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="e1fe51857b55253ff73a9a2c9a2797fa93ec4f62" translate="yes" xml:space="preserve">
          <source>Enables the mode, when the expression &lt;code&gt;.&lt;/code&gt; matches any character, including a line terminator.</source>
          <target state="translated">expression 일 때 모드를 사용합니다 &lt;code&gt;.&lt;/code&gt; 줄 종결자를 포함하여 모든 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="61f7fcd5b0acf58febf20a27beceef248b4d79e1" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;%&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal에 &lt;/a&gt; &lt;code&gt;%&lt;/code&gt; 연산자를 사용할 수 있습니다 인스턴스에 .</target>
        </trans-unit>
        <trans-unit id="62bf98501f48e3d6638ee31f3dc892382fa44291" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;%&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger에 &lt;/a&gt; &lt;code&gt;%&lt;/code&gt; 연산자를 사용할 수 있습니다 인스턴스에 .</target>
        </trans-unit>
        <trans-unit id="57949ff0aa0de61ec0848892760c1340aa9fa8d9" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;%&lt;/code&gt; operator for &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; 인스턴스에 &lt;code&gt;%&lt;/code&gt; 연산자를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="d7528ed5b87c4525bfa980541359077b4cf0f6fd" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;%&lt;/code&gt; operator for &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; 인스턴스에 &lt;code&gt;%&lt;/code&gt; 연산자를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="2d1b9cc0653169cdbc8b16ab42133b95b5cf62f4" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;*&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal에 &lt;/a&gt; &lt;code&gt;*&lt;/code&gt; 연산자를 사용할 수 있습니다. 인스턴스에 .</target>
        </trans-unit>
        <trans-unit id="5ec13935d7b12f8e2621b695798cfa9b310f73fb" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;*&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger에 &lt;/a&gt; &lt;code&gt;*&lt;/code&gt; 연산자를 사용할 수 있습니다. 인스턴스에 .</target>
        </trans-unit>
        <trans-unit id="d46c8aa8149937e6a4b0bd97459fea05220843c3" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;*&lt;/code&gt; operator for &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; 인스턴스에 &lt;code&gt;*&lt;/code&gt; 연산자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a970c3613f15c73aaa9b8ab9b919c85aa16fce1a" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;*&lt;/code&gt; operator for &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; 인스턴스에 &lt;code&gt;*&lt;/code&gt; 연산자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e37cfaa4aac0c14e26761c88a4f12883f051a221" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;++&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; 인스턴스에 &lt;code&gt;++&lt;/code&gt; 연산자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e3557d9ff01ae05d68591a3792043b181231e776" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;++&lt;/code&gt; operator for &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; 인스턴스에 &lt;code&gt;++&lt;/code&gt; 연산자를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="555142761ca7eeae74a0001576503c4b52c6bb64" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;+&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; 인스턴스에 &lt;code&gt;+&lt;/code&gt; 연산자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="29fba93702bc6b00c98feb4e72c2ec9eb8f81ccd" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;+&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; 인스턴스에 &lt;code&gt;+&lt;/code&gt; 연산자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3755e683d5491063cddfbbd9c01f36b980ea6899" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;+&lt;/code&gt; operator for &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; 인스턴스에 &lt;code&gt;+&lt;/code&gt; 연산자 사용을 활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="082be1127092f7f7dc43ba8cc3096d69bf2451dd" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;+&lt;/code&gt; operator for &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; 인스턴스에 &lt;code&gt;+&lt;/code&gt; 연산자 사용을 활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="fcf0418be3e06165ed8f8e668f6264a1c55f1b34" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;--&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; 인스턴스에 &lt;code&gt;--&lt;/code&gt; 연산자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="31f51eb2ceecfe34e59bc3e333f0c9ee65fbe812" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;--&lt;/code&gt; operator for &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; 인스턴스에 &lt;code&gt;--&lt;/code&gt; 연산자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b49eba52d9e61697c4a01ae81da160684a8c5dc4" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;-&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; 인스턴스에 &lt;code&gt;-&lt;/code&gt; 연산자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c18f83d2751070b0c6b30dfd072daf35ed4491cb" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;-&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; 인스턴스에 &lt;code&gt;-&lt;/code&gt; 연산자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d54edf756b6f5666acfbafa10f190b04503b33e7" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;-&lt;/code&gt; operator for &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; 인스턴스에 &lt;code&gt;-&lt;/code&gt; 연산자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ad834c83051dc10a56fd5d25a20072f6cc0d6c31" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;-&lt;/code&gt; operator for &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; 인스턴스에 &lt;code&gt;-&lt;/code&gt; 연산자를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="b6c04c1288775e71e51d15fbd313526f30534dc7" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;/&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal에 &lt;/a&gt; &lt;code&gt;/&lt;/code&gt; 연산자를 사용할 수 있습니다 인스턴스에 .</target>
        </trans-unit>
        <trans-unit id="171342186cc81da13932d358e9a0092fadcfbb7a" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;/&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; 인스턴스에 &lt;code&gt;/&lt;/code&gt; 연산자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2ea694da25909c4083ac3a1129df81e0118009a6" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;/&lt;/code&gt; operator for &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; 인스턴스에 &lt;code&gt;/&lt;/code&gt; 연산자를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="3fdbc8f3931f730359f1f80f446a80704e888f16" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;/&lt;/code&gt; operator for &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; 인스턴스에 &lt;code&gt;/&lt;/code&gt; 연산자를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="e3a4e4af45919dede2113503a360a311d9019c1b" translate="yes" xml:space="preserve">
          <source>Enables the use of the unary &lt;code&gt;++&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; 인스턴스에 단항 &lt;code&gt;++&lt;/code&gt; 연산자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="59d4e0f4ca721e25206c6fda8b65999aa611d4a1" translate="yes" xml:space="preserve">
          <source>Enables the use of the unary &lt;code&gt;++&lt;/code&gt; operator for &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; 인스턴스에 대해 단항 &lt;code&gt;++&lt;/code&gt; 연산자를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="b5570f7243cf037a733dec49cf6fb8b5598cc3a3" translate="yes" xml:space="preserve">
          <source>Enables the use of the unary &lt;code&gt;--&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">단항의 사용 가능 &lt;code&gt;--&lt;/code&gt; 을위한 운영자 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;의 BigDecimal&lt;/a&gt; 인스턴스를.</target>
        </trans-unit>
        <trans-unit id="0785764d928d1e213e9ba9ec294fa6fe27e9e0b3" translate="yes" xml:space="preserve">
          <source>Enables the use of the unary &lt;code&gt;--&lt;/code&gt; operator for &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; 인스턴스에 단항 &lt;code&gt;--&lt;/code&gt; 연산자 사용을 활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="e9b98fdf874bdeafb9768bfd23933d4615cfabba" translate="yes" xml:space="preserve">
          <source>Enables the use of the unary &lt;code&gt;-&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">단항의 사용 가능 &lt;code&gt;-&lt;/code&gt; 을위한 운영자 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;의 BigDecimal&lt;/a&gt; 인스턴스를.</target>
        </trans-unit>
        <trans-unit id="d61e047cb21f08becc143f5a52736e7568f9aa72" translate="yes" xml:space="preserve">
          <source>Enables the use of the unary &lt;code&gt;-&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">단항의 사용 가능 &lt;code&gt;-&lt;/code&gt; 을위한 운영자 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;의 BigInteger의&lt;/a&gt; 인스턴스를.</target>
        </trans-unit>
        <trans-unit id="a8c6bf6035e11706f984956df5006b469e307905" translate="yes" xml:space="preserve">
          <source>Enables the use of the unary &lt;code&gt;-&lt;/code&gt; operator for &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">단항의 사용 가능 &lt;code&gt;-&lt;/code&gt; 을위한 운영자 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;의 BigDecimal&lt;/a&gt; 인스턴스를.</target>
        </trans-unit>
        <trans-unit id="f2c84ef33147ee1f9da78bbf03ed208f23bb7cbd" translate="yes" xml:space="preserve">
          <source>Enables the use of the unary &lt;code&gt;-&lt;/code&gt; operator for &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">단항의 사용 가능 &lt;code&gt;-&lt;/code&gt; 을위한 운영자 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;의 BigInteger의&lt;/a&gt; 인스턴스를.</target>
        </trans-unit>
        <trans-unit id="58552fd26e8fa7feb843fdef8d3ce44846b1f9a3" translate="yes" xml:space="preserve">
          <source>Enabling experimental features</source>
          <target state="translated">실험 기능 사용</target>
        </trans-unit>
        <trans-unit id="a2160f17d2ae78d8c1999579cd89331a1a4bc482" translate="yes" xml:space="preserve">
          <source>Enabling inline classes in Gradle</source>
          <target state="translated">Gradle에서 인라인 클래스 활성화</target>
        </trans-unit>
        <trans-unit id="fe70bb6ac7d4b1f90b3d1f54131e739ff3ec604d" translate="yes" xml:space="preserve">
          <source>Enabling inline classes in Gradle:</source>
          <target state="translated">Gradle에서 인라인 클래스 활성화하기 :</target>
        </trans-unit>
        <trans-unit id="2cddaef1b3907935b6973e0af7177c7b41cc1be4" translate="yes" xml:space="preserve">
          <source>Enabling inline classes in Maven</source>
          <target state="translated">Maven에서 인라인 클래스 활성화</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
