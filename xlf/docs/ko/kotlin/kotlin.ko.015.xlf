<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="kotlin">
    <body>
      <group id="kotlin">
        <trans-unit id="e993bf612bf1600b9ce9618843fca0af6ca52f9c" translate="yes" xml:space="preserve">
          <source>For a typical Unix library with a config script, the &lt;code&gt;compilerOpts&lt;/code&gt; will likely contain the output of a config script with the &lt;code&gt;--cflags&lt;/code&gt; flag (maybe without exact paths).</source>
          <target state="translated">구성 스크립트가있는 일반적인 Unix 라이브러리의 경우 &lt;code&gt;compilerOpts&lt;/code&gt; 에 &lt;code&gt;--cflags&lt;/code&gt; 플래그 가있는 구성 스크립트 출력이 포함될 수 있습니다 (정확한 경로 가 없을 수 있음 ).</target>
        </trans-unit>
        <trans-unit id="f0ffc38ab87aa0a2254afe0dac4d4f4abe21ea7b" translate="yes" xml:space="preserve">
          <source>For additional details, please consult the &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/scripting-support.md&quot;&gt;KEEP-75&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/scripting-support.md&quot;&gt;KEEP-75&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="86c5db154bc4017f6e19e21eebb42b806549c22c" translate="yes" xml:space="preserve">
          <source>For advanced usage, for example for integration with logging MDC, transactional contexts or any other libraries which internally use thread-locals for passing data, see documentation for &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-thread-context-element/index.html&quot;&gt;ThreadContextElement&lt;/a&gt; interface that should be implemented.</source>
          <target state="translated">예를 들어 MDC 로깅, 트랜잭션 컨텍스트 또는 내부적으로 데이터 전달을 위해 스레드 로컬을 사용하는 다른 라이브러리와의 통합과 같은 고급 사용법에 대해서는 구현해야하는 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-thread-context-element/index.html&quot;&gt;ThreadContextElement&lt;/a&gt; 인터페이스의 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f5bd8b47abaf885ba369c4b552650b5e600bab97" translate="yes" xml:space="preserve">
          <source>For advanced usage, for example for integration with logging MDC, transactional contexts or any other libraries which internally use thread-locals for passing data, see the documentation of the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-thread-context-element/index.html&quot;&gt;ThreadContextElement&lt;/a&gt; interface that should be implemented.</source>
          <target state="translated">예를 들어 로깅 MDC, 트랜잭션 컨텍스트 또는 데이터 전달을 위해 내부적으로 스레드 로컬을 사용하는 기타 라이브러리와의 통합과 같은 고급 사용에 대해서는 구현해야하는 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-thread-context-element/index.html&quot;&gt;ThreadContextElement&lt;/a&gt; 인터페이스 의 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d1b6d864741b47438551c8743952cc88342b08e2" translate="yes" xml:space="preserve">
          <source>For all &lt;code&gt;Unix&lt;/code&gt; or &lt;code&gt;Windows&lt;/code&gt; based targets (including &lt;code&gt;Android&lt;/code&gt; and &lt;code&gt;iPhone&lt;/code&gt;) we provide the &lt;code&gt;posix&lt;/code&gt; platform lib. It contains bindings to platform's implementation of &lt;code&gt;POSIX&lt;/code&gt; standard.</source>
          <target state="translated">모든 &lt;code&gt;Unix&lt;/code&gt; 또는 &lt;code&gt;Windows&lt;/code&gt; 기반 대상 ( &lt;code&gt;Android&lt;/code&gt; 및 &lt;code&gt;iPhone&lt;/code&gt; 포함 )에 대해 &lt;code&gt;posix&lt;/code&gt; 플랫폼 lib를 제공합니다 . 여기에는 플랫폼의 &lt;code&gt;POSIX&lt;/code&gt; 표준 구현에 대한 바인딩이 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="637ba86f66e04bfb5c21e0d443fd411f1ae0d969" translate="yes" xml:space="preserve">
          <source>For an example of CocoaPods integration, refer to the &lt;a href=&quot;https://github.com/JetBrains/kotlin-native/tree/master/samples/cocoapods&quot;&gt;&lt;code&gt;cocoapods&lt;/code&gt;&lt;/a&gt; sample.</source>
          <target state="translated">CocoaPods 통합의 예는 &lt;a href=&quot;https://github.com/JetBrains/kotlin-native/tree/master/samples/cocoapods&quot;&gt; &lt;code&gt;cocoapods&lt;/code&gt; &lt;/a&gt; 샘플을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cdf11697a4677fb9ee8260c3dad7ad63798e47a6" translate="yes" xml:space="preserve">
          <source>For an extension property:</source>
          <target state="translated">확장 속성의 경우 :</target>
        </trans-unit>
        <trans-unit id="48c56f8a9eb62b42d56ef6f7aeb1acb05ae54735" translate="yes" xml:space="preserve">
          <source>For backwards compatibility, when using the legacy compiler for Kotlin/JS, including or omitting &lt;code&gt;binaries.executable()&lt;/code&gt; will have no effect &amp;ndash; executable files will be generated in either case. To make the legacy backend stop producing executable files without the presence of &lt;code&gt;binaries.executable()&lt;/code&gt; (for example, to improve build times where runnable artifacts aren't required), set &lt;code&gt;kotlin.js.generate.executable.default=false&lt;/code&gt; in your &lt;code&gt;gradle.properties&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b6ee394141461f71e0ce2d3f94fa8ad9908ffc" translate="yes" xml:space="preserve">
          <source>For bigger collections, you may want to specify the &lt;code&gt;limit&lt;/code&gt; &amp;ndash; a number of elements that will be included into result. If the collection size exceeds the &lt;code&gt;limit&lt;/code&gt;, all the other elements will be replaced with a single value of the &lt;code&gt;truncated&lt;/code&gt; argument.</source>
          <target state="translated">더 큰 컬렉션의 경우 &lt;code&gt;limit&lt;/code&gt; 를 지정하여 결과에 포함될 여러 요소 를 지정할 수 있습니다. 컬렉션 크기가 &lt;code&gt;limit&lt;/code&gt; 를 초과하면 다른 모든 요소가 &lt;code&gt;truncated&lt;/code&gt; 인수 의 단일 값으로 대체됩니다 .</target>
        </trans-unit>
        <trans-unit id="f52bff34c82e9bbe7354a0901ea870b0a36772f0" translate="yes" xml:space="preserve">
          <source>For binaries configuration, the following parameters are available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="595ad7dde734d66ff98543167d7cda57403ac6a6" translate="yes" xml:space="preserve">
          <source>For browser targets, the Kotlin/JS plugin uses the widely known &lt;a href=&quot;https://webpack.js.org/&quot;&gt;webpack&lt;/a&gt; module bundler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a1218f3526712fb0bcb85917ba83277f653cbd2" translate="yes" xml:space="preserve">
          <source>For build authors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e3bf0b5fcc62065d6ab9b8f87609a556bce363" translate="yes" xml:space="preserve">
          <source>For building executable JavaScript artifacts through webpack, the Kotlin/JS plugin contains the &lt;code&gt;browserDevelopmentWebpack&lt;/code&gt; and &lt;code&gt;browserProductionWebpack&lt;/code&gt; Gradle tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694ca7b8850a82c8e256d49268391f7fa91d2fc1" translate="yes" xml:space="preserve">
          <source>For building maps with collection elements as values, there is the function &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate-by&quot;&gt;&lt;code&gt;associateBy()&lt;/code&gt;&lt;/a&gt;. It takes a function that returns a key based on an element's value. If two elements are equal, only the last one remains in the map. &lt;code&gt;associateBy()&lt;/code&gt; can also be called with a value transformation function.</source>
          <target state="translated">콜렉션 요소를 값으로 사용하여 맵을 빌드하는 경우 connectBy &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate-by&quot;&gt; &lt;code&gt;associateBy()&lt;/code&gt; &lt;/a&gt; 함수가 있습니다 . 요소의 값을 기준으로 키를 반환하는 함수를 사용합니다. 두 요소가 같으면 마지막 요소 만 맵에 남아 있습니다. 값 변환 함수를 사용하여 &lt;code&gt;associateBy()&lt;/code&gt; 를 호출 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f47b960e3cf1bba7f7326ae02c9c3b8dd9fb72b5" translate="yes" xml:space="preserve">
          <source>For certain collection operations, there is an option to specify the &lt;em&gt;destination&lt;/em&gt; object. Destination is a mutable collection to which the function appends its resulting items instead of returning them in a new object. For performing operations with destinations, there are separate functions with the &lt;code&gt;To&lt;/code&gt; postfix in their names, for example, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/filter-to&quot;&gt;&lt;code&gt;filterTo()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate-to&quot;&gt;&lt;code&gt;associateTo()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate&quot;&gt;&lt;code&gt;associate()&lt;/code&gt;&lt;/a&gt;. These functions take the destination collection as an additional parameter.</source>
          <target state="translated">특정 수집 작업에는 &lt;em&gt;대상&lt;/em&gt; 객체 를 지정하는 옵션이 있습니다. 대상은 함수가 결과 항목을 새 객체로 반환하지 않고 추가하는 변경 가능한 컬렉션입니다. 대상으로 작업을 수행하는 경우, 별도의 기능으로 거기 &lt;code&gt;To&lt;/code&gt; , 예를 들어 이름에 접미사가, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/filter-to&quot;&gt; &lt;code&gt;filterTo()&lt;/code&gt; &lt;/a&gt; 대신에 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate-to&quot;&gt; &lt;code&gt;associateTo()&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate&quot;&gt; &lt;code&gt;associate()&lt;/code&gt; &lt;/a&gt; . 이 함수는 대상 컬렉션을 추가 매개 변수로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="02887bdbee3c2022f2023698adee356772aedd2e" translate="yes" xml:space="preserve">
          <source>For certain operations, there are pairs of functions for performing the same operation: one applies the operation in-place and the other returns the result as a separate collection. For example, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort&quot;&gt;&lt;code&gt;sort()&lt;/code&gt;&lt;/a&gt; sorts a mutable collection in-place, so it's state changes; &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt; creates a new collection that contains the same elements in the sorted order.</source>
          <target state="translated">특정 작업에는 동일한 작업을 수행하기위한 기능 쌍이 있습니다. 하나는 작업을 제자리에 적용하고 다른 하나는 결과를 별도의 컬렉션으로 반환합니다. 예를 들어 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort&quot;&gt; &lt;code&gt;sort()&lt;/code&gt; &lt;/a&gt; 는 변경 가능한 컬렉션을 내부에서 정렬하므로 상태가 변경됩니다. &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt; 는 정렬 된 순서로 동일한 요소를 포함하는 새 컬렉션을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="9dfed0b94e755921f99e0c6db40aa33e6c8d1e4f" translate="yes" xml:space="preserve">
          <source>For certain operations, there are pairs of functions for performing the same operation: one applies the operation in-place and the other returns the result as a separate collection. For example, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort&quot;&gt;&lt;code&gt;sort()&lt;/code&gt;&lt;/a&gt; sorts a mutable collection in-place, so its state changes; &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt; creates a new collection that contains the same elements in the sorted order.</source>
          <target state="translated">특정 작업의 경우 동일한 작업을 수행하기위한 함수 쌍이 있습니다. 하나는 작업을 제자리에 적용하고 다른 하나는 결과를 별도의 컬렉션으로 반환합니다. 예를 들어, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort&quot;&gt; &lt;code&gt;sort()&lt;/code&gt; &lt;/a&gt; 는 변경 가능한 컬렉션을 제자리에서 정렬하므로 상태가 변경됩니다. &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt; 는 정렬 된 순서로 동일한 요소를 포함하는 새 컬렉션을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="b47aa3d5261111e5dc0cf33a82d66cb2c8e5c3fe" translate="yes" xml:space="preserve">
          <source>For classes with a long supertype list, put a line break after the colon and align all supertype names horizontally:</source>
          <target state="translated">긴 수퍼 타입 ​​목록이있는 클래스의 경우 콜론 뒤에 줄 바꿈을 넣고 모든 수퍼 타입 ​​이름을 가로로 정렬하십시오.</target>
        </trans-unit>
        <trans-unit id="f5426c4f7933a1cb4871210952ed14cb2d0d066b" translate="yes" xml:space="preserve">
          <source>For classifiers representing type parameters, the type argument list must always be empty. For classes, the type argument list should contain arguments for the type parameters of the class. If the class is &lt;code&gt;inner&lt;/code&gt;, the list should follow with arguments for the type parameters of its outer class, and so forth until a class is not &lt;code&gt;inner&lt;/code&gt;, or is declared on the top level.</source>
          <target state="translated">형식 매개 변수를 나타내는 분류 자의 경우 형식 인수 목록은 항상 비어 있어야합니다. 클래스의 경우 형식 인수 목록에는 클래스의 형식 매개 변수에 대한 인수가 포함되어야합니다. 클래스 인 경우 &lt;code&gt;inner&lt;/code&gt; 클래스가 아닌 때까지, 목록 등의 외부 클래스의 형식 매개 변수에 대한 인수를 따르해야하고 &lt;code&gt;inner&lt;/code&gt; 또는 최상위에 선언됩니다.</target>
        </trans-unit>
        <trans-unit id="7beaf78c1b305ea0eab1379a4e304ae50d262ca8" translate="yes" xml:space="preserve">
          <source>For common combinations of targets, you can create a hierarchical structure with &lt;a href=&quot;mpp-share-on-platforms#use-target-shortcuts&quot;&gt;target shortcuts&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed9eeecc6a0d768124a687f0cde43ed7908087f9" translate="yes" xml:space="preserve">
          <source>For completeness: it is also possible (but discouraged) to split the declaration and the initial assignment, and even to initialize in multiple places based on some condition. You can only read the variable at a point where the compiler can prove that every possible execution path will have initialized it. If you're creating a read-only variable in this way, you must also ensure that every possible execution path assigns to it &lt;em&gt;exactly&lt;/em&gt; once.</source>
          <target state="translated">완전성을 위해 : 선언과 초기 할당을 분리하고 어떤 조건에 따라 여러 곳에서 초기화하는 것도 가능하지만 권장하지 않습니다. 컴파일러는 가능한 모든 실행 경로가 초기화되었음을 증명할 수있는 지점에서만 변수를 읽을 수 있습니다. 이런 방식으로 읽기 전용 변수를 작성하는 경우 가능한 모든 실행 경로가 &lt;em&gt;정확히&lt;/em&gt; 한 번만 지정되도록해야 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="79ee8b4421a58fb8d8446ab0d337de5ea30eee34" translate="yes" xml:space="preserve">
          <source>For consistency with array literals in annotations, passing a single item for a vararg parameter in the named form (&lt;code&gt;foo(items = i)&lt;/code&gt;) has been deprecated. Please use the spread operator with the corresponding array factory functions:</source>
          <target state="translated">주석의 배열 리터럴과 일관성을 유지하기 위해 이름이 지정된 형식 ( &lt;code&gt;foo(items = i)&lt;/code&gt; ) 으로 vararg 매개 변수에 단일 항목을 전달하는 것은 더 이상 사용되지 않습니다. 해당 배열 팩토리 기능과 함께 스프레드 연산자를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="17a65370b0052e81251cc519469f54908fa09134" translate="yes" xml:space="preserve">
          <source>For convenience, the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/flow.html&quot;&gt;flow&lt;/a&gt; builder performs additional &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/ensure-active.html&quot;&gt;ensureActive&lt;/a&gt; checks for cancellation on each emitted value. It means that a busy loop emitting from a &lt;code&gt;flow { ... }&lt;/code&gt; is cancellable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afef4be80502f3cfdb78878e430e782b609b8c37" translate="yes" xml:space="preserve">
          <source>For convenience, these functions return the destination collection back, so you can create it right in the corresponding argument of the function call:</source>
          <target state="translated">편의상 이러한 함수는 대상 컬렉션을 다시 반환하므로 함수 호출의 해당 인수에서 바로 컬렉션을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b434cd5b8ed34d1f894873e141d8af5c3688e3d4" translate="yes" xml:space="preserve">
          <source>For curly braces, put the opening brace in the end of the line where the construct begins, and the closing brace on a separate line aligned horizontally with the opening construct.</source>
          <target state="translated">중괄호의 경우, 구조가 시작되는 줄의 끝에 여는 지지대를 배치하고 여는 구조와 수평으로 정렬 된 별도의 선에 닫는 지지대를 놓습니다.</target>
        </trans-unit>
        <trans-unit id="43952d27570c840abe79a5442e35760596171a6d" translate="yes" xml:space="preserve">
          <source>For custom compilations, you need to set up all dependencies manually. The default source set of a custom compilation does not depend on the &lt;code&gt;commonMain&lt;/code&gt; and the &lt;code&gt;commonTest&lt;/code&gt; source sets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19a64fc7bea10f2735062a2c907700c0ef67633d" translate="yes" xml:space="preserve">
          <source>For debug build it embeds placeholder LLVM IR data as a marker.</source>
          <target state="translated">디버그 빌드의 경우 자리 표시 자 LLVM IR 데이터를 마커로 포함합니다.</target>
        </trans-unit>
        <trans-unit id="f7296b3affa034e56286c14adf5ca5d09604d26c" translate="yes" xml:space="preserve">
          <source>For decades, as developers we are confronted with a problem to solve - how to prevent our applications from blocking. Whether we're developing desktop, mobile, or even server-side applications, we want to avoid having the user wait or what's worse cause bottlenecks that would prevent an application from scaling.</source>
          <target state="translated">수십 년 동안 개발자로서 우리는 응용 프로그램을 차단하는 방법을 해결하는 문제에 직면했습니다. 데스크톱, 모바일 또는 서버 쪽 응용 프로그램을 개발하든 사용자가 기다리지 않도록하거나 병목 현상을 일으켜 응용 프로그램의 확장을 방해하는 원인을 피하려고합니다.</target>
        </trans-unit>
        <trans-unit id="ccfb1bd3bd7bfd74cbd5fb080764cd427aa918e5" translate="yes" xml:space="preserve">
          <source>For depending on JavaScript packages from npm, the Gradle DSL exposes an &lt;code&gt;npm&lt;/code&gt; function that allows us to specify packages we want to import from npm. Let us consider the import of an NPM package called &lt;a href=&quot;https://www.npmjs.com/package/is-sorted&quot;&gt;&lt;code&gt;is-sorted&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5618ea5aa387ca3d934fa7059f4ea5eb2684f42" translate="yes" xml:space="preserve">
          <source>For detailed usage information see the documentation for &lt;a href=&quot;../../../../../docs/reference/scope-functions#also&quot;&gt;scope functions&lt;/a&gt;.</source>
          <target state="translated">자세한 사용법 정보는 &lt;a href=&quot;../../../../../docs/reference/scope-functions#also&quot;&gt;범위 기능&lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1d58fbd0a86a8a8236e1ea5cfe8098c23478de1f" translate="yes" xml:space="preserve">
          <source>For detailed usage information see the documentation for &lt;a href=&quot;../../../../../docs/reference/scope-functions#apply&quot;&gt;scope functions&lt;/a&gt;.</source>
          <target state="translated">자세한 사용법 정보는 &lt;a href=&quot;../../../../../docs/reference/scope-functions#apply&quot;&gt;범위 기능&lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="757a87b936de48b2ca7dbd30472b34156baef56a" translate="yes" xml:space="preserve">
          <source>For detailed usage information see the documentation for &lt;a href=&quot;../../../../../docs/reference/scope-functions#let&quot;&gt;scope functions&lt;/a&gt;.</source>
          <target state="translated">자세한 사용법 정보는 &lt;a href=&quot;../../../../../docs/reference/scope-functions#let&quot;&gt;범위 기능&lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9afaf366ae8ced14236278d07ef496e91fa87059" translate="yes" xml:space="preserve">
          <source>For detailed usage information see the documentation for &lt;a href=&quot;../../../../../docs/reference/scope-functions#run&quot;&gt;scope functions&lt;/a&gt;.</source>
          <target state="translated">자세한 사용법 정보는 &lt;a href=&quot;../../../../../docs/reference/scope-functions#run&quot;&gt;범위 기능&lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c60faedb0188f0b5a90fa8dfbfa95ce16294c10e" translate="yes" xml:space="preserve">
          <source>For detailed usage information see the documentation for &lt;a href=&quot;../../../../../docs/reference/scope-functions#with&quot;&gt;scope functions&lt;/a&gt;.</source>
          <target state="translated">자세한 사용법 정보는 &lt;a href=&quot;../../../../../docs/reference/scope-functions#with&quot;&gt;범위 기능&lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="028e4a57b533fce9ed58d13b3dddb5fa9f3454af" translate="yes" xml:space="preserve">
          <source>For details on using &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/plus-assign&quot;&gt;&lt;code&gt;plusAssign&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;+=&lt;/code&gt;) and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/minus-assign&quot;&gt;&lt;code&gt;minusAssign&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;-=&lt;/code&gt;) operators on mutable maps, see &lt;a href=&quot;#map-write-operations&quot;&gt;Map write operations&lt;/a&gt; below.</source>
          <target state="translated">변경 가능한 맵에서 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/plus-assign&quot;&gt; &lt;code&gt;plusAssign&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;+=&lt;/code&gt; ) 및 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/minus-assign&quot;&gt; &lt;code&gt;minusAssign&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;-=&lt;/code&gt; ) 연산자 사용에 대한 자세한 내용은 아래 &lt;a href=&quot;#map-write-operations&quot;&gt;맵 쓰기 작업을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a0931a279af808bfe00c2a0d994687a2bad1f41e" translate="yes" xml:space="preserve">
          <source>For each compilation, there is a default source set under the name composed as &lt;code&gt;&amp;lt;targetName&amp;gt;&amp;lt;CompilationName&amp;gt;&lt;/code&gt;. This default source set participates in the compilation, and thus it should be used for the platform-specific code and dependencies, and for adding other source sets to the compilation by the means of 'depends on'. For example, a project with targets &lt;code&gt;jvm6&lt;/code&gt; (JVM) and &lt;code&gt;nodeJs&lt;/code&gt; (JS) will have source sets: &lt;code&gt;commonMain&lt;/code&gt;, &lt;code&gt;commonTest&lt;/code&gt;, &lt;code&gt;jvm6Main&lt;/code&gt;, &lt;code&gt;jvm6Test&lt;/code&gt;, &lt;code&gt;nodeJsMain&lt;/code&gt;, &lt;code&gt;nodeJsTest&lt;/code&gt;.</source>
          <target state="translated">각 컴파일마다 &lt;code&gt;&amp;lt;targetName&amp;gt;&amp;lt;CompilationName&amp;gt;&lt;/code&gt; 으로 구성된 이름 아래에 기본 소스 세트가 있습니다. 이 기본 소스 세트는 컴파일에 참여하므로 플랫폼 별 코드 및 종속성 및 'depends on'을 통해 다른 소스 세트를 컴파일에 추가하는 데 사용해야합니다. 예를 들어, 대상 &lt;code&gt;jvm6&lt;/code&gt; (JVM) 및 &lt;code&gt;nodeJs&lt;/code&gt; (JS)가 있는 프로젝트에는 &lt;code&gt;commonMain&lt;/code&gt; , &lt;code&gt;commonTest&lt;/code&gt; , &lt;code&gt;jvm6Main&lt;/code&gt; , &lt;code&gt;jvm6Test&lt;/code&gt; , &lt;code&gt;nodeJsMain&lt;/code&gt; , &lt;code&gt;nodeJsTest&lt;/code&gt; 소스 세트가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a971809f1d47fbd85329764ce9196c05695ed736" translate="yes" xml:space="preserve">
          <source>For each key, there is always a single value associated with it. You can add and remove whole entries.</source>
          <target state="translated">각 키에는 항상 하나의 값이 연결되어 있습니다. 전체 항목을 추가 및 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a05b0dfb8b82378844bf815d925e39ae6cc816c" translate="yes" xml:space="preserve">
          <source>For each target, default compilations include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61b2fa33634d8be8df9db15d8bbf16aa0c02b58e" translate="yes" xml:space="preserve">
          <source>For each target, specify the minimum target version for the Pod library.</source>
          <target state="translated">각 대상에 대해 Pod 라이브러리의 최소 대상 버전을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="6341909ad40b37a6ea351364219d03a48215039d" translate="yes" xml:space="preserve">
          <source>For enum constants, it's OK to use either uppercase underscore-separated names (&lt;code&gt;enum class Color { RED, GREEN }&lt;/code&gt;) or regular camel-case names starting with an uppercase first letter, depending on the usage.</source>
          <target state="translated">열거 형 상수의 경우 사용법에 따라 대문자 밑줄로 구분 된 이름 ( &lt;code&gt;enum class Color { RED, GREEN }&lt;/code&gt; ) 또는 첫 번째 대문자로 시작하는 일반 낙타 이름을 사용해도됩니다.</target>
        </trans-unit>
        <trans-unit id="f9d32997cfc2635d965d79f6a6f0696c8adae072" translate="yes" xml:space="preserve">
          <source>For enum constants, it's OK to use either uppercase underscore-separated names (&lt;code&gt;enum class Color { RED, GREEN }&lt;/code&gt;) or regular camel-humps names starting with an uppercase letter, depending on the usage.</source>
          <target state="translated">열거 형 상수의 경우 사용법에 따라 대문자 밑줄로 구분 된 이름 ( &lt;code&gt;enum class Color { RED, GREEN }&lt;/code&gt; ) 또는 대문자로 시작하는 일반 낙타 혹 이름을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="3cdc85f184c2ea8335df38fe8b455a7815ab1f41" translate="yes" xml:space="preserve">
          <source>For every parameter with a default value, this will generate one additional overload, which has this parameter and all parameters to the right of it in the parameter list removed. In this example, the following will be generated:</source>
          <target state="translated">기본값이있는 모든 매개 변수에 대해이 매개 변수와 매개 변수 목록에서 오른쪽에있는 모든 매개 변수가 제거 된 추가 과부하가 생성됩니다. 이 예에서는 다음이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="94b950f7e09b83a55502571aef5cf0416b4ce619" translate="yes" xml:space="preserve">
          <source>For every set of &lt;code&gt;.h&lt;/code&gt; files, we will be using the &lt;code&gt;cinterop&lt;/code&gt;&lt;a href=&quot;../../reference/native/c_interop&quot;&gt;C Libraries&lt;/a&gt; from Kotlin/Native to generate a Kotlin/Native library, or &lt;code&gt;.klib&lt;/code&gt;. The generated library will bridge calls from Kotlin/Native to C. It includes respective Kotlin declarations for the definitions form the &lt;code&gt;.h&lt;/code&gt; files. It is only necessary to have a &lt;code&gt;.h&lt;/code&gt; file to run the &lt;code&gt;cinterop&lt;/code&gt; tool. And we do not need to create a &lt;code&gt;lib.c&lt;/code&gt; file, unless we want to compile and run the example. More details on this are covered in the &lt;a href=&quot;../../reference/native/c_interop&quot;&gt;C Libraries&lt;/a&gt; page. It is enough for the tutorial to create the &lt;code&gt;lib.def&lt;/code&gt; file with the following content:</source>
          <target state="translated">모든 &lt;code&gt;.h&lt;/code&gt; 파일 세트에 대해 Kotlin / Native 의 &lt;code&gt;cinterop&lt;/code&gt; &lt;a href=&quot;../../reference/native/c_interop&quot;&gt;C 라이브러리&lt;/a&gt; 를 사용하여 Kotlin / Native 라이브러리 또는 &lt;code&gt;.klib&lt;/code&gt; 를 생성합니다 . 생성 된 라이브러리는 Kotlin / Native에서 C로 호출을 연결합니다. 여기에는 &lt;code&gt;.h&lt;/code&gt; 파일 형식의 정의에 대한 각 Kotlin 선언이 포함됩니다 . &lt;code&gt;cinterop&lt;/code&gt; 도구 를 실행하려면 &lt;code&gt;.h&lt;/code&gt; 파일 만 있으면됩니다 . 예제를 컴파일하고 실행하지 않는 한 &lt;code&gt;lib.c&lt;/code&gt; 파일 을 만들 필요가 없습니다 . 이에 대한 자세한 내용은 &lt;a href=&quot;../../reference/native/c_interop&quot;&gt;C 라이브러리&lt;/a&gt; 페이지 에서 다룹니다 . 학습서가 다음 컨텐츠로 &lt;code&gt;lib.def&lt;/code&gt; 파일 을 작성하면 충분 합니다.</target>
        </trans-unit>
        <trans-unit id="a79d24b8ae547d8a56979a7932df7c035d95e45d" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;compileDebugKlibraryMacos_x64KotlinNative&lt;/code&gt;, &lt;code&gt;compileTestDebugKotlinNative&lt;/code&gt;.</source>
          <target state="translated">예를 들어 &lt;code&gt;compileDebugKlibraryMacos_x64KotlinNative&lt;/code&gt; , &lt;code&gt;compileTestDebugKotlinNative&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="90fea239952b564e524c37f54598a7c5cbd251b7" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;private&lt;/code&gt; could be used to define a property or helper function that is needed by several functions in one file, or a complex type returned by one of your private functions, without leaking them to the rest of the codebase:</source>
          <target state="translated">예를 들어, &lt;code&gt;private&lt;/code&gt; 을 사용하면 한 파일의 여러 함수에 필요한 속성이나 도우미 함수를 정의하거나 나머지 코드베이스로 누설하지 않고 개인 함수 중 하나에서 반환하는 복잡한 형식을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="41b672a7205fead42e4ee031049451669f4c3977" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;var firstName: String&lt;/code&gt; gets compiled to the following Java declarations:</source>
          <target state="translated">예를 들어, &lt;code&gt;var firstName: String&lt;/code&gt; 은 다음 Java 선언으로 컴파일됩니다.</target>
        </trans-unit>
        <trans-unit id="b015d6c9c8e4cfb6e57ed2e9d18be371370522a7" translate="yes" xml:space="preserve">
          <source>For example, a flow of incoming requests can be mapped to the results with the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/map.html&quot;&gt;map&lt;/a&gt; operator, even when performing a request is a long-running operation that is implemented by a suspending function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e26c3138f6c624545fd6a6aad2743d30af7ee6e" translate="yes" xml:space="preserve">
          <source>For example, adding &lt;code&gt;-Xjsr305=ignore -Xjsr305=under-migration:ignore -Xjsr305=@org.library.MyNullable:warn&lt;/code&gt; to the compiler arguments makes the compiler generate warnings for inappropriate usages of types annotated by &lt;code&gt;@org.library.MyNullable&lt;/code&gt; and ignore all other JSR-305 annotations.</source>
          <target state="translated">예를 들어, &lt;code&gt;-Xjsr305=ignore -Xjsr305=under-migration:ignore -Xjsr305=@org.library.MyNullable:warn&lt;/code&gt; 을 컴파일러 인수에 추가하면 컴파일러가 &lt;code&gt;@org.library.MyNullable&lt;/code&gt; 및 Annotation으로 주석이 지정된 유형의 부적절한 사용법에 대한 경고를 생성합니다. 다른 모든 JSR-305 주석은 무시하십시오.</target>
        </trans-unit>
        <trans-unit id="62105b32ee578f8ede398419b9b2ca8e4ed39f3b" translate="yes" xml:space="preserve">
          <source>For example, adding the following Java class:</source>
          <target state="translated">예를 들어, 다음 Java 클래스를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="dab56c033fb818b17a2304677b82687c948e0a7a" translate="yes" xml:space="preserve">
          <source>For example, all Kotlin/Native features are available in the &lt;code&gt;desktopMain&lt;/code&gt; source set, which targets the Linux (&lt;code&gt;linuxX64&lt;/code&gt;), Windows (&lt;code&gt;mingwX64&lt;/code&gt;), and macOS (&lt;code&gt;macosX64&lt;/code&gt;) platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4193b4063b3d43ab900d6cd8095c217fab2d7411" translate="yes" xml:space="preserve">
          <source>For example, assume that you write several modules in Kotlin and then want to access them from Swift. Since usage of several Kotlin/Native frameworks in one Swift application is limited, you can create a single umbrella framework and export all these modules to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="832f00e15259c77d71ad8af88dd5a825997e47be" translate="yes" xml:space="preserve">
          <source>For example, check out the following source set hierarchy from the &lt;code&gt;kotlinx.coroutines&lt;/code&gt; repository:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704304023cf4cdbc372fedca8efa4ba9b344de40" translate="yes" xml:space="preserve">
          <source>For example, consider a module is named &lt;code&gt;kotlin-js-example&lt;/code&gt; and it contains a function named &lt;code&gt;toKeep&lt;/code&gt; in package &lt;code&gt;org.jetbrains.kotlin.examples&lt;/code&gt;. Use the following line:</source>
          <target state="translated">예를 들어, 모듈의 이름은 고려 &lt;code&gt;kotlin-js-example&lt;/code&gt; 그것은라는 기능이 포함되어 &lt;code&gt;toKeep&lt;/code&gt; 패키지에 &lt;code&gt;org.jetbrains.kotlin.examples&lt;/code&gt; 을 . 다음 줄을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f3edd241ab90f88264f0969b091157c28f1ba684" translate="yes" xml:space="preserve">
          <source>For example, consider a testing library that supports both JUnit and TestNG in the two targets. The library author needs to add an attribute to both targets as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641f2a599c75215e05083918246b0bfa315daf1f" translate="yes" xml:space="preserve">
          <source>For example, consider the following Kotlin functional interface:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7088c82187d69fd24c496d5effb5a4129e5f41" translate="yes" xml:space="preserve">
          <source>For example, create two iOS targets and the shared source set shown above with the &lt;code&gt;ios()&lt;/code&gt; shortcut:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ebd0312e545c856b21c7f39080892fd1e967e8" translate="yes" xml:space="preserve">
          <source>For example, here we imitate a closeable resource with the &lt;code&gt;Resource&lt;/code&gt; class, that simply keeps track of how many times it was created by incrementing the &lt;code&gt;acquired&lt;/code&gt; counter and decrementing this counter from its &lt;code&gt;close&lt;/code&gt; function. Let us run a lot of coroutines with the small timeout try acquire this resource from inside of the &lt;code&gt;withTimeout&lt;/code&gt; block after a bit of delay and release it from outside.</source>
          <target state="translated">예를 들어, 여기서는 &lt;code&gt;acquired&lt;/code&gt; 카운터 를 증가시키고 &lt;code&gt;close&lt;/code&gt; 기능 에서이 카운터를 감소 시켜 생성 된 횟수를 추적 하는 &lt;code&gt;Resource&lt;/code&gt; 클래스 를 사용하여 닫기 가능한 리소스를 모방 합니다. 작은 시간 제한으로 많은 코 루틴을 실행 해 보겠습니다 . 약간의 지연 후 &lt;code&gt;withTimeout&lt;/code&gt; 블록 내부에서이 리소스를 획득 하고 외부에서 해제 해보 십시오.</target>
        </trans-unit>
        <trans-unit id="f909490e8018194092afc3fb5cdc677fa190965f" translate="yes" xml:space="preserve">
          <source>For example, here's how you can import JQuery into a Kotlin module:</source>
          <target state="translated">예를 들어, JQuery를 Kotlin 모듈로 가져 오는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="37483cc9fb0f554ae163c5d459de77c734124a8f" translate="yes" xml:space="preserve">
          <source>For example, if OV = 1.0 and NV = 1.1, you can observe one of the following warnings:</source>
          <target state="translated">예를 들어, OV = 1.0 및 NV = 1.1 인 경우 다음 경고 중 하나를 관찰 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="71d788a0eff469c098e19a9c059288c083d43fb6" translate="yes" xml:space="preserve">
          <source>For example, if the numbers in the previous example update every 300ms, but strings update every 400 ms, then zipping them using the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/zip.html&quot;&gt;zip&lt;/a&gt; operator will still produce the same result, albeit results that are printed every 400 ms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e6d325fa34b0e3eb5a531fab7231604b20e54f9" translate="yes" xml:space="preserve">
          <source>For example, if you choose &quot;Kotlin (Multiplatform Library)&quot;, a library project is created that has three &lt;a href=&quot;#setting-up-targets&quot;&gt;targets&lt;/a&gt;, one for the JVM, one for JS, and one for the Native platform that you are using. These are configured in the &lt;code&gt;build.gradle&lt;/code&gt; script in the following way:</source>
          <target state="translated">예를 들어, &quot;Kotlin (Multiplatform Library)&quot;을 선택 하면 JVM, JS 및 기본 플랫폼에 대한 세 개의 &lt;a href=&quot;#setting-up-targets&quot;&gt;대상&lt;/a&gt; 이있는 라이브러리 프로젝트가 작성 됩니다. 이들은 다음과 같은 방식으로 &lt;code&gt;build.gradle&lt;/code&gt; 스크립트에서 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="f4f19f17d1d471a4b54188968d5495addb34fb43" translate="yes" xml:space="preserve">
          <source>For example, if you have &lt;code&gt;nativeDarwinMain&lt;/code&gt; that is a parent of &lt;code&gt;watchosMain&lt;/code&gt; and &lt;code&gt;iosMain&lt;/code&gt;, where &lt;code&gt;iosMain&lt;/code&gt; has two children &amp;ndash; &lt;code&gt;iosArm64Main&lt;/code&gt; and &lt;code&gt;iosX64Main&lt;/code&gt;, you can use platform-dependent libraries only for &lt;code&gt;iosMain&lt;/code&gt; but not for &lt;code&gt;nativeDarwinMain&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e2cac3c12317d19b9429bd6c154e728f55e225b" translate="yes" xml:space="preserve">
          <source>For example, if you want to check the property name before binding, you can write something like this:</source>
          <target state="translated">예를 들어 바인딩하기 전에 속성 이름을 확인하려면 다음과 같이 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd11627eb611c930e53508e1deef1d4547d10fe0" translate="yes" xml:space="preserve">
          <source>For example, if you want to share code among native Linux, Windows, and macOS targets &amp;ndash; &lt;code&gt;linuxX64M&lt;/code&gt;, &lt;code&gt;mingwX64&lt;/code&gt;, and &lt;code&gt;macosX64&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e2d9ddd64f99c42afbd7403a3cecd42303d49b" translate="yes" xml:space="preserve">
          <source>For example, if you work a lot with bytes, you might want to easily get an unsigned byte in the range 0 through 255 instead of the default -128 through 127 (the result will have to be in the form of a &lt;code&gt;Short&lt;/code&gt;/&lt;code&gt;Int&lt;/code&gt;/&lt;code&gt;Long&lt;/code&gt;, though). &lt;code&gt;Byte&lt;/code&gt; is a built-in class that you can't modify, but you can define this extension function:</source>
          <target state="translated">예를 들어, 바이트로 많은 작업을 수행하는 경우 기본값 -128에서 127 대신 0에서 255 사이의 부호없는 바이트를 쉽게 얻을 수 있습니다 (결과는 &lt;code&gt;Short&lt;/code&gt; / &lt;code&gt;Int&lt;/code&gt; / &lt;code&gt;Long&lt;/code&gt; ,)하지만. &lt;code&gt;Byte&lt;/code&gt; 는 수정할 수없는 내장 클래스이지만이 확장 함수를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7c94e1bdf5706711377f851804de2d7e3ef7d31" translate="yes" xml:space="preserve">
          <source>For example, if you write this Kotlin function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d29cc5c415555f3f9e9c97d761b31bad39ad3e" translate="yes" xml:space="preserve">
          <source>For example, in a typical multiplatform project targeting iOS, there are two iOS-related targets: one for iOS ARM64 devices, and the other for the x64 simulator. They have separate platform-specific source sets, but in practice, there is rarely a need for different code for the device and simulator, and their dependencies are much alike. So iOS-specific code could be shared between them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b38005442c4371bb1bab78bfe3bd82fa513f037" translate="yes" xml:space="preserve">
          <source>For example, in a typical multiplatform project targeting iOS, there are two iOS-related targets: one is for iOS ARM64 devices, the other is for the x64 simulator. They have separate platform-specific source sets, but in practice there is rarely a need for different code for the device and simulator, and their dependencies are much the same. So iOS-specific code could be shared between them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2ee7ccaf73dc899619ee5d9d39c7987e388739" translate="yes" xml:space="preserve">
          <source>For example, in the following case there will be no backing field:</source>
          <target state="translated">예를 들어 다음과 같은 경우에는 지원 입력란이 없습니다.</target>
        </trans-unit>
        <trans-unit id="eba5f31b0d0acfc6c9acba65d0abda157299e8d3" translate="yes" xml:space="preserve">
          <source>For example, let us emit the text on catching an exception:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a9c780158db1fc47c1a136b933a65ecc526133e" translate="yes" xml:space="preserve">
          <source>For example, let's make our example a bit more complicated:</source>
          <target state="translated">예를 들어, 예제를 좀 더 복잡하게 만들겠습니다.</target>
        </trans-unit>
        <trans-unit id="c1839f64eb2ce7573d6701acab747bd62c3838e1" translate="yes" xml:space="preserve">
          <source>For example, on JVM, &lt;a href=&quot;index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; instances for a primitive type (&lt;code&gt;int&lt;/code&gt;) and the corresponding wrapper type (&lt;code&gt;java.lang.Integer&lt;/code&gt;) are considered equal, because they have the same fully qualified name &quot;kotlin.Int&quot;.</source>
          <target state="translated">예를 들어, JVM에서 기본 유형 ( &lt;code&gt;int&lt;/code&gt; ) 및 해당 랩퍼 유형 ( &lt;code&gt;java.lang.Integer&lt;/code&gt; )의 &lt;a href=&quot;index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; 인스턴스 는 동일한 완전한 이름 &quot;kotlin.Int&quot;를 갖기 때문에 동일한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="a79b9d46260c03cdda6e9ce2b8598593f9f9afa0" translate="yes" xml:space="preserve">
          <source>For example, take a look at the following recursive tree class and a deeply recursive instance of this tree with 100K nodes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36dc75e0d04d01c4a44b30e1411da2ccccd856ca" translate="yes" xml:space="preserve">
          <source>For example, the C function returning values through pointer parameters can be used like</source>
          <target state="translated">예를 들어 포인터 매개 변수를 통해 값을 반환하는 C 함수는 다음과 같이 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="079a917fd14fe02e329ee98416d6d8eaef4f6689" translate="yes" xml:space="preserve">
          <source>For example, the following Kotlin code:</source>
          <target state="translated">예를 들어 다음 Kotlin 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="441a501295e750bc3dd6bc99e258a8fc324e751a" translate="yes" xml:space="preserve">
          <source>For example, to create a custom compilation for integration tests of the &lt;code&gt;jvm()&lt;/code&gt; target, add a new item to the &lt;code&gt;compilations&lt;/code&gt; collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17bc9d0385f8ddb156c83471c2dbea8b14c1add0" translate="yes" xml:space="preserve">
          <source>For example, to create a target for each of the Kotlin/Native supported platforms (see below), use this code:</source>
          <target state="translated">예를 들어, Kotlin / Native 지원 플랫폼 (아래 참조) 각각에 대한 대상을 작성하려면 다음 코드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="17b4ffea3f831eaa0dd821feed12e719a49e8b8e" translate="yes" xml:space="preserve">
          <source>For example, to disable DCE based on a custom condition for the &lt;code&gt;main&lt;/code&gt; source set and always for the &lt;code&gt;test&lt;/code&gt; code, add the following lines to the build script:</source>
          <target state="translated">예를 들어, &lt;code&gt;main&lt;/code&gt; 소스 세트 및 항상 &lt;code&gt;test&lt;/code&gt; 코드 에 대한 사용자 정의 조건에 따라 DCE를 사용하지 않으 려면 빌드 스크립트에 다음 행을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="c1fc9a8c70cfcfdd6cead18244a7f9b16785d956" translate="yes" xml:space="preserve">
          <source>For example, to test the shared code in &lt;code&gt;commonMain&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1984d74c07cbb7e1c0e09e9461fdcf6834185b4f" translate="yes" xml:space="preserve">
          <source>For example, to use a custom registry for npm packages, add the following line to a file called &lt;code&gt;.yarnrc&lt;/code&gt; in the project root:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912a24bde5d1d28481923f565b9636c709d4bec9" translate="yes" xml:space="preserve">
          <source>For example, using &lt;code&gt;transform&lt;/code&gt; we can emit a string before performing a long-running asynchronous request and follow it with a response:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea832a104c40fd95a84c4acdc0a08b99ee9f0124" translate="yes" xml:space="preserve">
          <source>For example, we can add UTF-16 tests on JVM. Just follow the same steps as before, but create file in &lt;code&gt;jvmTest/kotlin/jetbrains/base64&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="54035fabb34ea56c34478a1b8f067c284fb150fe" translate="yes" xml:space="preserve">
          <source>For floating-point numbers, Kotlin provides types &lt;code&gt;Float&lt;/code&gt; and &lt;code&gt;Double&lt;/code&gt;. According to the &lt;a href=&quot;https://en.wikipedia.org/wiki/IEEE_754&quot;&gt;IEEE 754 standard&lt;/a&gt;, floating point types differ by their &lt;em&gt;decimal place&lt;/em&gt;, that is, how many decimal digits they can store. &lt;code&gt;Float&lt;/code&gt; reflects the IEEE 754 &lt;em&gt;single precision&lt;/em&gt;, while &lt;code&gt;Double&lt;/code&gt; provides &lt;em&gt;double precision&lt;/em&gt;.</source>
          <target state="translated">부동 소수점 숫자의 경우 Kotlin은 &lt;code&gt;Float&lt;/code&gt; 및 &lt;code&gt;Double&lt;/code&gt; 유형을 제공합니다 . 에 따르면 &lt;a href=&quot;https://en.wikipedia.org/wiki/IEEE_754&quot;&gt;IEEE 754 표준&lt;/a&gt; , 부동 소수점 형식은 차이가 &lt;em&gt;소수점 자리&lt;/em&gt; 가 저장할 수있는 얼마나 많은 소수점 자리 숫자입니다. &lt;code&gt;Float&lt;/code&gt; 는 IEEE 754 &lt;em&gt;단 정밀도를&lt;/em&gt; 반영하는 반면 &lt;code&gt;Double&lt;/code&gt; 은 &lt;em&gt;배정 밀도를&lt;/em&gt; 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="4bbcf5e1acf1d0538a87cdcded2402b6469d470f" translate="yes" xml:space="preserve">
          <source>For fully stable versions of the compiler the default binary compatibility protocol is the following:</source>
          <target state="translated">완전히 안정적인 버전의 컴파일러의 경우 기본 이진 호환성 프로토콜은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e8f9fdf99c65b69f7ad811712f6d29d4c6cae3b0" translate="yes" xml:space="preserve">
          <source>For functional interfaces, you can use SAM conversions that help make your code more concise and readable by using &lt;a href=&quot;lambdas#lambda-expressions-and-anonymous-functions&quot;&gt;lambda expressions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1890ad53fa33283873fb912de74957d361b6491e" translate="yes" xml:space="preserve">
          <source>For generic functions, using &lt;a href=&quot;inline-functions#reified-type-parameters&quot;&gt;reified type parameters&lt;/a&gt; makes the casts such as &lt;code&gt;arg as T&lt;/code&gt; checked, unless &lt;code&gt;arg&lt;/code&gt;'s type has &lt;em&gt;its own&lt;/em&gt; type arguments that are erased.</source>
          <target state="translated">일반 함수의 경우, &lt;code&gt;arg&lt;/code&gt; 유형 &lt;em&gt;에 자체&lt;/em&gt; 유형 인수가 지워지지 않는 한, &lt;a href=&quot;inline-functions#reified-type-parameters&quot;&gt;reified type 매개 변수를&lt;/a&gt; 사용하면 &lt;code&gt;arg as T&lt;/code&gt; 와 같은 캐스트 가 T로 검사 됩니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="38b15e10dc47b42201678c7bc8e7f549631406db" translate="yes" xml:space="preserve">
          <source>For information on how to do use each of these tutorials refer to the corresponding section:</source>
          <target state="translated">이러한 각 자습서를 사용하는 방법에 대한 정보는 해당 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="53871db63838c21ea25dd734e891b1c31c10f9df" translate="yes" xml:space="preserve">
          <source>For inline markup, KDoc uses the regular &lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax&quot;&gt;Markdown&lt;/a&gt; syntax, extended to support a shorthand syntax for linking to other elements in the code.</source>
          <target state="translated">인라인 마크 업의 경우 KDoc은 코드의 다른 요소에 연결하기위한 간단한 구문을 지원하도록 확장 된 일반 &lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax&quot;&gt;마크 다운&lt;/a&gt; 구문을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="0a82fb018c66cd1ea1c613ead3f02864bd52e930" translate="yes" xml:space="preserve">
          <source>For instance, given</source>
          <target state="translated">예를 들어, 주어진</target>
        </trans-unit>
        <trans-unit id="54fe8967f6394a3362a64d10de78a37ca1295329" translate="yes" xml:space="preserve">
          <source>For instance, when you use Spring, you don't need all the classes to be open, but only classes annotated with specific annotations like &lt;code&gt;@Configuration&lt;/code&gt; or &lt;code&gt;@Service&lt;/code&gt;. &lt;em&gt;All-open&lt;/em&gt; allows to specify such annotations.</source>
          <target state="translated">예를 들어 Spring을 사용할 때 모든 클래스를 열 필요는 없지만 &lt;code&gt;@Configuration&lt;/code&gt; 또는 &lt;code&gt;@Service&lt;/code&gt; 와 같은 특정 주석으로 주석이 달린 클래스 만 필요합니다 . &lt;em&gt;All-open&lt;/em&gt; 은 이러한 주석을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1db2f3f2ab1b3b066a571a2d1a44758b0ea7e142" translate="yes" xml:space="preserve">
          <source>For integer numbers, there are four types with different sizes and, hence, value ranges.</source>
          <target state="translated">정수의 경우 크기가 다른 네 가지 유형이 있으므로 값 범위가 다릅니다.</target>
        </trans-unit>
        <trans-unit id="b48041b0df69211410cfeb0283fb34b1d30b60cd" translate="yes" xml:space="preserve">
          <source>For interaction with the Document Object Model (DOM), we can use the variable &lt;code&gt;document&lt;/code&gt;. For example, we can set the background color of our website through this object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aaad9d147155eb1a6a3e244f5b9a2a8a6e149b0" translate="yes" xml:space="preserve">
          <source>For iterating mutable collections, there is &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-iterator/index&quot;&gt;&lt;code&gt;MutableIterator&lt;/code&gt;&lt;/a&gt; that extends &lt;code&gt;Iterator&lt;/code&gt; with the element removal function &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-iterator/remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt;. So, you can remove elements from a collection while iterating it.</source>
          <target state="translated">변경 가능한 컬렉션을 반복하기 위해 요소 제거 함수 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-iterator/remove&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Iterator&lt;/code&gt; 를 확장하는 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-iterator/index&quot;&gt; &lt;code&gt;MutableIterator&lt;/code&gt; &lt;/a&gt; 가 있습니다. 따라서 컬렉션을 반복하면서 컬렉션에서 요소를 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9623eecb005f28baef52cb3adf2863355f3a393f" translate="yes" xml:space="preserve">
          <source>For kotlin versions 1.1.50+/1.2, the default behavior is the same to &lt;code&gt;-Xjsr305=warn&lt;/code&gt;. The &lt;code&gt;strict&lt;/code&gt; value should be considered experimental (more checks may be added to it in the future).</source>
          <target state="translated">kotlin 버전 1.1.50 + / 1.2의 경우 기본 동작은 &lt;code&gt;-Xjsr305=warn&lt;/code&gt; 과 동일합니다 . &lt;code&gt;strict&lt;/code&gt; 값 (더 점검이 미래에 추가 될 수있다) 실험 고려되어야한다.</target>
        </trans-unit>
        <trans-unit id="92918a6e1f987473f03db07133dbcec4ea949af8" translate="yes" xml:space="preserve">
          <source>For library authors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc59502f4a11ebcb9c7bb01b708f5f38029db03" translate="yes" xml:space="preserve">
          <source>For lists, there is a constructor that takes the list size and the initializer function that defines the element value based on its index.</source>
          <target state="translated">목록의 경우 목록 크기를 사용하는 생성자와 색인을 기반으로 요소 값을 정의하는 이니셜 라이저 함수가 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf7a2b59658422559e19da1a59a94b59966b8fc1" translate="yes" xml:space="preserve">
          <source>For lists, there is a special iterator implementation: &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/index&quot;&gt;&lt;code&gt;ListIterator&lt;/code&gt;&lt;/a&gt;. It supports iterating lists in both directions: forwards and backwards. Backward iteration is implemented by the functions &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/has-previous&quot;&gt;&lt;code&gt;hasPrevious()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/previous&quot;&gt;&lt;code&gt;previous()&lt;/code&gt;&lt;/a&gt;. Additionally, the &lt;code&gt;ListIterator&lt;/code&gt; provides information about the element indices with the functions &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/next-index&quot;&gt;&lt;code&gt;nextIndex()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/previous-index&quot;&gt;&lt;code&gt;previousIndex()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">리스트에는 특별한 반복자 구현이 있습니다 : &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/index&quot;&gt; &lt;code&gt;ListIterator&lt;/code&gt; &lt;/a&gt; . 순방향 및 역방향의 양방향 목록 반복을 지원합니다. 뒤로 반복은 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/has-previous&quot;&gt; &lt;code&gt;hasPrevious()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/previous&quot;&gt; &lt;code&gt;previous()&lt;/code&gt; &lt;/a&gt; 함수로 구현됩니다 . 또한 &lt;code&gt;ListIterator&lt;/code&gt; 는 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/next-index&quot;&gt; &lt;code&gt;nextIndex()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/previous-index&quot;&gt; &lt;code&gt;previousIndex()&lt;/code&gt; &lt;/a&gt; 함수를 사용하여 요소 색인에 대한 정보를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="2613f4bb9152895d1f3da19c9b902595c6bf07de" translate="yes" xml:space="preserve">
          <source>For longer documentation comments, place the opening &lt;code&gt;/**&lt;/code&gt; on a separate line and begin each subsequent line with an asterisk:</source>
          <target state="translated">더 긴 문서 설명을 보려면, &lt;code&gt;/**&lt;/code&gt; 를 별도의 줄에 놓고 각 후속 줄을 별표로 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="65b1c9d3c495af1a58e2d00003c1736af99c56da" translate="yes" xml:space="preserve">
          <source>For medium and large projects the decision may be tough. If you are not ready to update many files right away you may decide to migrate module by module, or continue with gradual migration for modified files only.</source>
          <target state="translated">중간 규모 및 대규모 프로젝트의 경우 결정이 어려울 수 있습니다. 많은 파일을 즉시 업데이트 할 준비가되지 않은 경우 모듈별로 모듈을 마이그레이션하거나 수정 된 파일에 대해서만 점진적 마이그레이션을 계속할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e162067bf7e3d179878c919852cbcdf24e4f2f1f" translate="yes" xml:space="preserve">
          <source>For members declared inside a class:</source>
          <target state="translated">클래스 안에서 선언 된 멤버의 경우 :</target>
        </trans-unit>
        <trans-unit id="a09f3bfd60f839007a27ec3a24559d939b2a35e4" translate="yes" xml:space="preserve">
          <source>For more complex properties, always put &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; keywords on separate lines:</source>
          <target state="translated">보다 복잡한 속성의 경우 항상 &lt;code&gt;get&lt;/code&gt; 및 &lt;code&gt;set&lt;/code&gt; 키워드를 별도의 줄에 넣으십시오 .</target>
        </trans-unit>
        <trans-unit id="2c6d11cb317dc6418f5fe966cb7b00efa9ca9a48" translate="yes" xml:space="preserve">
          <source>For more complicated problems, Kotlin's extensive library of functional operations on collections comes in handy to minimize the boilerplate and turn the code into a linear top-to-bottom and left-to-right fluent data transformation pipeline. For example, the &lt;a href=&quot;http://codeforces.com/contest/1157/problem/B&quot;&gt;Problem B: Long Number&lt;/a&gt; problem takes a simple greedy algorithm to implement and it can be written using this style without a single mutable variable:</source>
          <target state="translated">보다 복잡한 문제를 해결하기 위해 Kotlin의 컬렉션에 대한 광범위한 기능 작업 라이브러리는 상용구를 최소화하고 코드를 선형 상단에서 하단 및 왼쪽에서 오른쪽으로 유창한 데이터 변환 파이프 라인으로 전환하는 데 편리합니다. 예를 들어, &lt;a href=&quot;http://codeforces.com/contest/1157/problem/B&quot;&gt;문제 B : 긴 숫자&lt;/a&gt; 문제는 간단한 욕심 알고리즘을 구현하는 데 단일 가변 변수없이이 스타일을 사용하여 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d5be25e2749170b42cd19e1cf3cada665918b60" translate="yes" xml:space="preserve">
          <source>For more detailed information about how to configure the Kotlin/JS IR compiler backend, check out the &lt;a href=&quot;js-ir-compiler&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c7b26bf892e65f4f2f16ff179ebd4da28ea9ec" translate="yes" xml:space="preserve">
          <source>For more details about compatibility issues, see the &lt;code&gt;@JvmDefault&lt;/code&gt;&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-default/index&quot;&gt;reference page&lt;/a&gt;.</source>
          <target state="translated">호환성 문제에 대한 자세한 내용은 &lt;code&gt;@JvmDefault&lt;/code&gt; &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-default/index&quot;&gt;참조 페이지를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c2b8ad66e41103aa7e5d576dd41cf032d9cca536" translate="yes" xml:space="preserve">
          <source>For more details about interface delegation in Kotlin, see &lt;a href=&quot;delegation&quot;&gt;Delegation&lt;/a&gt;.</source>
          <target state="translated">코 틀린의 인터페이스 위임에 대한 자세한 내용은 참조 &lt;a href=&quot;delegation&quot;&gt;위임&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ce1f981fa10cfa942808a2637bc3ff1812b1b1ea" translate="yes" xml:space="preserve">
          <source>For more details about the explicit API mode, see the &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/explicit-api-mode.md&quot;&gt;KEEP&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f99246268b944cbfb72319adef4c2c06f42700a" translate="yes" xml:space="preserve">
          <source>For more details, see &lt;a href=&quot;visibility-modifiers#constructors&quot;&gt;Visibility Modifiers&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;visibility-modifiers#constructors&quot;&gt;가시성 수정 자를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1f8c202f6d3fc629243929f6137d51db369ef6ba" translate="yes" xml:space="preserve">
          <source>For more information about &lt;code&gt;dynamic&lt;/code&gt; see the &lt;a href=&quot;../../reference/dynamic-type&quot;&gt;reference documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;dynamic&lt;/code&gt; 대한 자세한 내용은 &lt;a href=&quot;../../reference/dynamic-type&quot;&gt;참조 설명서를 참조&lt;/a&gt; 하십시오 .</target>
        </trans-unit>
        <trans-unit id="976d63a365da3100af6d9872785a7fc0f872d0e7" translate="yes" xml:space="preserve">
          <source>For more information about configuring Gradle to target JavaScript please see &lt;a href=&quot;getting-started-gradle/getting-started-with-gradle&quot;&gt;Getting Started with Gradle&lt;/a&gt;.</source>
          <target state="translated">JavaScript를 대상으로 Gradle을 구성하는 방법에 대한 자세한 내용은 Gradle &lt;a href=&quot;getting-started-gradle/getting-started-with-gradle&quot;&gt;시작하기&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2981d53b555f0875e9e5d88dcca8e5fb54c959d4" translate="yes" xml:space="preserve">
          <source>For more information about crash report symbolication, see the &lt;a href=&quot;native/ios_symbolication&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437cfd1c20eb87cedbe5a61e205f4604fde6642f" translate="yes" xml:space="preserve">
          <source>For more information about default methods in the Java interop, see the &lt;a href=&quot;java-to-kotlin-interop#default-methods-in-interfaces&quot;&gt;documentation&lt;/a&gt; and &lt;a href=&quot;https://blog.jetbrains.com/kotlin/2020/07/kotlin-1-4-m3-generating-default-methods-in-interfaces/&quot;&gt;this blog post&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="774ea3611b559f29112516a74e5203a4072ea27e" translate="yes" xml:space="preserve">
          <source>For more information about delegated properties, see the &lt;a href=&quot;delegated-properties&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ff59fd7a11f10a9972c2d13b56cf93a2a27bb8" translate="yes" xml:space="preserve">
          <source>For more information about operations on collections in Kotlin, see &lt;a href=&quot;collection-operations&quot;&gt;Collection Operations Overview&lt;/a&gt;.</source>
          <target state="translated">Kotlin의 콜렉션에 대한 조작에 대한 자세한 정보는 &lt;a href=&quot;collection-operations&quot;&gt;콜렉션 조작 개요를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8ad663ec8a76f7146da194b1a118509a5854befa" translate="yes" xml:space="preserve">
          <source>For more information about serialization in Kotlin, see the &lt;a href=&quot;https://github.com/Kotlin/kotlinx.serialization/blob/master/docs/serialization-guide.md&quot;&gt;Kotlin Serialization Guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6f131a11bc8f9aee46dcc694fdd53ec967e63c" translate="yes" xml:space="preserve">
          <source>For more information about the different types of module outputs, please see &lt;a href=&quot;../working-with-modules/working-with-modules&quot;&gt;Working with Modules&lt;/a&gt;</source>
          <target state="translated">다양한 유형의 모듈 출력에 대한 자세한 내용은 모듈 &lt;a href=&quot;../working-with-modules/working-with-modules&quot;&gt;작업을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3a2cd17b7118c2ca168f9271f65f8c844c0e1452" translate="yes" xml:space="preserve">
          <source>For more information about using suspending functions in Swift and Objective-C, see the &lt;a href=&quot;native/objc_interop&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a670969bcee8de36de21a8b92e43600ead5d941" translate="yes" xml:space="preserve">
          <source>For more information on classes and overriding members see &lt;a href=&quot;classes&quot;&gt;Classes&lt;/a&gt; and &lt;a href=&quot;classes#inheritance&quot;&gt;Inheritance&lt;/a&gt;.</source>
          <target state="translated">클래스 및 재정의 멤버에 대한 자세한 내용은 &lt;a href=&quot;classes&quot;&gt;클래스&lt;/a&gt; 및 &lt;a href=&quot;classes#inheritance&quot;&gt;상속을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4f493af417c0883b703c110e5ef635256b757a3b" translate="yes" xml:space="preserve">
          <source>For more information on generic functions see &lt;a href=&quot;generics&quot;&gt;Generics&lt;/a&gt;.</source>
          <target state="translated">일반적인 함수에 대한 자세한 내용은 다음을 참조 &lt;a href=&quot;generics&quot;&gt;제네릭을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="303071782df80a3b92a14b04beb4abef6a8308f2" translate="yes" xml:space="preserve">
          <source>For more information on the output generated and the instructions for running the application, please see &lt;a href=&quot;../kotlin-to-javascript/kotlin-to-javascript&quot;&gt;Kotlin to JavaScript&lt;/a&gt;</source>
          <target state="translated">생성 된 출력 및 응용 프로그램 실행 지침에 대한 자세한 내용은 &lt;a href=&quot;../kotlin-to-javascript/kotlin-to-javascript&quot;&gt;Kotlin to JavaScript&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bc5273660a5131db46416a5fa7a3772f1b529324" translate="yes" xml:space="preserve">
          <source>For more information on the output generated please see &lt;a href=&quot;../kotlin-to-javascript/kotlin-to-javascript&quot;&gt;Kotlin to JavaScript&lt;/a&gt;</source>
          <target state="translated">생성 된 출력에 대한 자세한 정보는 &lt;a href=&quot;../kotlin-to-javascript/kotlin-to-javascript&quot;&gt;Kotlin to JavaScript&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="daef8b2b4fbdfb10968e7ab8682260feb7d3ad24" translate="yes" xml:space="preserve">
          <source>For more information regarding Coroutines and the different possibilities, check out the reference guide.</source>
          <target state="translated">코 루틴 및 다양한 가능성에 대한 자세한 내용은 참조 안내서를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b15215288bf8795d3069346c3f31ed3415c1f91f" translate="yes" xml:space="preserve">
          <source>For more information, please refer to the &lt;a href=&quot;coroutines-overview&quot;&gt;coroutine documentation&lt;/a&gt; and &lt;a href=&quot;../tutorials/coroutines/coroutines-basic-jvm&quot;&gt;tutorial&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;coroutines-overview&quot;&gt;코 루틴 문서&lt;/a&gt; 및 &lt;a href=&quot;../tutorials/coroutines/coroutines-basic-jvm&quot;&gt;자습서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6eeee62282cd6eaa33fb5a1d8b69933a3a3935f0" translate="yes" xml:space="preserve">
          <source>For more information, please refer to the &lt;a href=&quot;multiplatform&quot;&gt;Multiplatform Programming documentation&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;multiplatform&quot;&gt;멀티 플랫폼 프로그래밍 문서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="da87ece52c9509e3c187c92dff775cc4483c1807" translate="yes" xml:space="preserve">
          <source>For more specific cases, there are the functions &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/reduce&quot;&gt;&lt;code&gt;reduce()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/fold&quot;&gt;&lt;code&gt;fold()&lt;/code&gt;&lt;/a&gt; that apply the provided operation to the collection elements sequentially and return the accumulated result. The operation takes two arguments: the previously accumulated value and the collection element.</source>
          <target state="translated">보다 구체적인 경우, 제공된 오퍼레이션을 콜렉션 요소에 순차적으로 적용하고 누적 된 결과를 리턴하는 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/reduce&quot;&gt; &lt;code&gt;reduce()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/fold&quot;&gt; &lt;code&gt;fold()&lt;/code&gt; &lt;/a&gt; 함수가 있습니다. 연산에는 이전에 누적 된 값과 수집 요소라는 두 가지 인수가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d19f8fc3604cb87e709d44b3b66040f7f67ddb86" translate="yes" xml:space="preserve">
          <source>For multiplatform project authors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd634783b30e7c10ec073f2f6cf67643a4b61ca" translate="yes" xml:space="preserve">
          <source>For multiplatform projects, &lt;code&gt;@JsExport&lt;/code&gt; is available in common code as well. It only has an effect when compiling for the JavaScript target, and allows you to also export Kotlin declarations that are not platform specific.</source>
          <target state="translated">다중 플랫폼 프로젝트의 경우 &lt;code&gt;@JsExport&lt;/code&gt; 는 공통 코드에서도 사용할 수 있습니다. 자바 스크립트 타겟 용으로 컴파일 할 때만 영향을 미치며 플랫폼별로 다르지 않은 Kotlin 선언을 내보낼 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab0c4227fc15976eb92034e00419c20be38f5f2a" translate="yes" xml:space="preserve">
          <source>For multiple interfaces, the superclass constructor call should be located first and then each interface should be located in a different line:</source>
          <target state="translated">여러 인터페이스의 경우 수퍼 클래스 생성자 호출을 먼저 찾은 다음 각 인터페이스를 다른 줄에 배치해야합니다.</target>
        </trans-unit>
        <trans-unit id="bb77545005b94c54066e9d9c8881eb5ff714309f" translate="yes" xml:space="preserve">
          <source>For mutable collections, there are also &lt;em&gt;write operations&lt;/em&gt; that change the collection state. Such operations include adding, removing, and updating elements. Write operations are listed in the &lt;a href=&quot;collection-write&quot;&gt;Write operations&lt;/a&gt; and corresponding sections of &lt;a href=&quot;list-operations#list-write-operations&quot;&gt;List specific operations&lt;/a&gt; and &lt;a href=&quot;map-operations#map-write-operations&quot;&gt;Map specific operations&lt;/a&gt;.</source>
          <target state="translated">변경 가능한 콜렉션의 경우 콜렉션 상태를 변경하는 &lt;em&gt;쓰기 조작&lt;/em&gt; 도 있습니다. 이러한 작업에는 요소 추가, 제거 및 업데이트가 포함됩니다. 쓰기 작업은 &lt;a href=&quot;collection-write&quot;&gt;쓰기 작업&lt;/a&gt; 및 &lt;a href=&quot;list-operations#list-write-operations&quot;&gt;목록 특정 작업&lt;/a&gt; 및 &lt;a href=&quot;map-operations#map-write-operations&quot;&gt;맵 특정 작업&lt;/a&gt; 의 해당 섹션에 나열 됩니다 .</target>
        </trans-unit>
        <trans-unit id="a3baf3d21508354b592c545c75eff6db0181b447" translate="yes" xml:space="preserve">
          <source>For native targets, the following specific blocks are available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2264476b9fddb2a93fca3dc48b27fc02f976f3a9" translate="yes" xml:space="preserve">
          <source>For other arguments that have an array type, you need to use the array literal syntax (since Kotlin 1.2) or &lt;code&gt;arrayOf(...)&lt;/code&gt;:</source>
          <target state="translated">배열 유형을 가진 다른 인수의 경우 배열 리터럴 구문 (Kotlin 1.2 이후) 또는 &lt;code&gt;arrayOf(...)&lt;/code&gt; 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="23d69b931aacad631808b0d57da21604bca264bd" translate="yes" xml:space="preserve">
          <source>For other combinations of targets, &lt;a href=&quot;mpp-share-on-platforms#configure-the-hierarchical-structure-manually&quot;&gt;create a hierarchy manually&lt;/a&gt; by connecting the source sets with the &lt;code&gt;dependsOn&lt;/code&gt; relation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db60979da7e995256bb86e6d0277cb6571c18a2c" translate="yes" xml:space="preserve">
          <source>For pattern syntax reference see &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;Pattern&lt;/a&gt;.</source>
          <target state="translated">패턴 구문 참조는 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;Pattern을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c6f6d754aa9e873410fd58f825ac72cd1786f800" translate="yes" xml:space="preserve">
          <source>For pattern syntax reference see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#Special_characters_meaning_in_regular_expressions&quot;&gt;MDN RegExp&lt;/a&gt; and &lt;a href=&quot;https://www.w3schools.com/jsref/jsref_obj_regexp.asp&quot;&gt;http://www.w3schools.com/jsref/jsref_obj_regexp.asp&lt;/a&gt;.</source>
          <target state="translated">패턴 구문 참조는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#Special_characters_meaning_in_regular_expressions&quot;&gt;MDN RegExp&lt;/a&gt; 및 &lt;a href=&quot;https://www.w3schools.com/jsref/jsref_obj_regexp.asp&quot;&gt;http://www.w3schools.com/jsref/jsref_obj_regexp.asp를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b0eaf01be18c0882488e465a91d26ab2e3e6ce42" translate="yes" xml:space="preserve">
          <source>For pattern syntax reference see &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;Pattern&lt;/a&gt;.</source>
          <target state="translated">패턴 구문 참조는 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html&quot;&gt;Pattern을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ce3c36f8dd721e91073e813fbaba0f4b4aa22ac4" translate="yes" xml:space="preserve">
          <source>For platform-specific source sets, the corresponding platform-specific variant of the library is used, while a common standard library is added to the rest. The Kotlin Gradle plugin will select the appropriate JVM standard library depending on the &lt;code&gt;kotlinOptions.jvmTarget&lt;/code&gt;&lt;a href=&quot;#compiler-options&quot;&gt;compiler option&lt;/a&gt; of your Gradle build script.</source>
          <target state="translated">플랫폼 별 소스 세트의 경우 라이브러리의 해당 플랫폼 별 변형이 사용되며 나머지에는 공통 표준 라이브러리가 추가됩니다. Kotlin Gradle 플러그인은 Gradle 빌드 스크립트 의 &lt;code&gt;kotlinOptions.jvmTarget&lt;/code&gt; &lt;a href=&quot;#compiler-options&quot;&gt;컴파일러 옵션&lt;/a&gt; 에 따라 적절한 JVM 표준 라이브러리를 선택합니다 .</target>
        </trans-unit>
        <trans-unit id="2ad60b45085c8a5cd8e2d844183f41dcb5d2f438" translate="yes" xml:space="preserve">
          <source>For platform-specific source sets, the corresponding platform-specific variant of the library is used, while a common standard library is added to the rest. The Kotlin Gradle plugin will select the appropriate JVM standard library depending on the &lt;code&gt;kotlinOptions.jvmTarget&lt;/code&gt;&lt;a href=&quot;using-gradle#compiler-options&quot;&gt;compiler option&lt;/a&gt; of your Gradle build script</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9e0b7f10700913df962ae53ccb14ac8eace34e" translate="yes" xml:space="preserve">
          <source>For platform-specific source sets, the corresponding platform-specific variant of the library is used, while a common standard library is added to the rest. The Kotlin Gradle plugin will select the appropriate JVM standard library depending on the &lt;code&gt;kotlinOptions.jvmTarget&lt;/code&gt;&lt;a href=&quot;using-gradle#compiler-options&quot;&gt;compiler option&lt;/a&gt; of your Gradle build script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d4a54b61c92df737ecca3a9a2524b44eaf0db8" translate="yes" xml:space="preserve">
          <source>For properties with an initializer, if the initializer is long, add a line break after the equals sign and indent the initializer by four spaces:</source>
          <target state="translated">이니셜 라이저가있는 속성의 경우, 이니셜 라이저가 긴 경우 등호 뒤에 줄 바꿈을 추가하고 이니셜 라이저를 4 개의 공백만큼 들여 쓰기하십시오.</target>
        </trans-unit>
        <trans-unit id="9cdedbb82fb399140c8019e32038b4c4f46e6185" translate="yes" xml:space="preserve">
          <source>For properties with the getter defined as an expression body, the property type can now be omitted:</source>
          <target state="translated">getter가 표현식 본문으로 정의 된 속성의 경우 이제 속성 유형을 생략 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1513b20a53870cfed16fd2ad458f8813cde7ede7" translate="yes" xml:space="preserve">
          <source>For release build it embeds bitcode as data.</source>
          <target state="translated">릴리스 빌드의 경우 비트 코드를 데이터로 포함합니다.</target>
        </trans-unit>
        <trans-unit id="6714a4c30aef88bcbb0d4874a73165632b296c1c" translate="yes" xml:space="preserve">
          <source>For removing multiple elements at once, there are the following functions :</source>
          <target state="translated">한 번에 여러 요소를 제거하기 위해 다음 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="20c6c845cf3cf8582150c5ac201bc9cf26d68f44" translate="yes" xml:space="preserve">
          <source>For removing the first and the last element, there are handy shortcuts &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-list/remove-first&quot;&gt;&lt;code&gt;removeFirst()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-list/remove-last&quot;&gt;&lt;code&gt;removeLast()&lt;/code&gt;&lt;/a&gt;. Note that on empty lists, they throw an exception. To receive &lt;code&gt;null&lt;/code&gt; instead, use &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-list/remove-first-or-null&quot;&gt;&lt;code&gt;removeFirstOrNull()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-list/remove-last-or-null&quot;&gt;&lt;code&gt;removeLastOrNull()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">첫 번째 요소와 마지막 요소를 제거하기위한 편리한 단축키 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-list/remove-first&quot;&gt; &lt;code&gt;removeFirst()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-list/remove-last&quot;&gt; &lt;code&gt;removeLast()&lt;/code&gt; &lt;/a&gt; 있습니다. 빈 목록에서는 예외가 발생합니다. 대신 &lt;code&gt;null&lt;/code&gt; 을 받으려면 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-list/remove-first-or-null&quot;&gt; &lt;code&gt;removeFirstOrNull()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-list/remove-last-or-null&quot;&gt; &lt;code&gt;removeLastOrNull()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1b7f712789e7f5f5055614d3977263a4adb68a2d" translate="yes" xml:space="preserve">
          <source>For retrieving a value from a map, you must provide its key as an argument of the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-map/get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; function. The shorthand &lt;code&gt;[key]&lt;/code&gt; syntax is also supported. If the given key is not found, it returns &lt;code&gt;null&lt;/code&gt;. There is also the function &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/get-value&quot;&gt;&lt;code&gt;getValue()&lt;/code&gt;&lt;/a&gt; which has slightly different behavior: it throws an exception if the key is not found in the map. Additionally, you have two more options to handle the key absence:</source>
          <target state="translated">맵에서 값을 검색하려면 해당 키를 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-map/get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; 함수 의 인수로 제공해야합니다 . 속기 &lt;code&gt;[key]&lt;/code&gt; 구문도 지원됩니다. 주어진 키를 찾지 못하면 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 . 동작이 약간 다른 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/get-value&quot;&gt; &lt;code&gt;getValue()&lt;/code&gt; &lt;/a&gt; 함수도 있습니다. 맵에서 키를 찾을 수 없으면 예외가 발생합니다. 또한 키 부재를 처리하는 두 가지 옵션이 더 있습니다.</target>
        </trans-unit>
        <trans-unit id="c741843158ffd3467a54ce4487c7800f9e54c35c" translate="yes" xml:space="preserve">
          <source>For retrieving an element at a specific position, there is the function &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/element-at&quot;&gt;&lt;code&gt;elementAt()&lt;/code&gt;&lt;/a&gt;. Call it with the integer number as an argument, and you'll receive the collection element at the given position. The first element has the position &lt;code&gt;0&lt;/code&gt;, and the last one is &lt;code&gt;(size - 1)&lt;/code&gt;.</source>
          <target state="translated">특정 위치에서 요소를 검색하기 위해 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/element-at&quot;&gt; &lt;code&gt;elementAt()&lt;/code&gt; &lt;/a&gt; 함수가 있습니다. 정수로 인수로 호출하면 주어진 위치에서 컬렉션 요소를받습니다. 첫 번째 요소의 위치는 &lt;code&gt;0&lt;/code&gt; 이고 마지막 요소 는 &lt;code&gt;(size - 1)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="177b96a956022c6a52f796ebedecaf88b1699bf5" translate="yes" xml:space="preserve">
          <source>For running Kotlin/JS projects in the browser, this task is an alias for the &lt;code&gt;browserDevelopmentRun&lt;/code&gt; task (which is also available in Kotlin multiplatform projects). It uses the &lt;a href=&quot;https://webpack.js.org/configuration/dev-server/&quot;&gt;webpack-dev-server&lt;/a&gt; to serve your JavaScript artifacts. If you want to customize the configuration used by &lt;code&gt;webpack-dev-server&lt;/code&gt;, for example adjust the port the server runs on, use the &lt;a href=&quot;#configuring-webpack-bundling&quot;&gt;webpack configuration file&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c64711b2649e9f3a84ca6b11f111e405fc7f95" translate="yes" xml:space="preserve">
          <source>For running Kotlin/JS projects targeting Node.js, the &lt;code&gt;run&lt;/code&gt; task is an alias for the &lt;code&gt;nodeRun&lt;/code&gt; task (which is also available in Kotlin multiplatform projects).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f72bc3d35de51eeefae32ef505b9dad8fdaea6a" translate="yes" xml:space="preserve">
          <source>For running browser tests, the plugin uses &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/lkgr/headless/README.md&quot;&gt;Headless Chrome&lt;/a&gt; by default. You can also choose other browser to run tests in, by adding the corresponding entries inside the &lt;code&gt;useKarma&lt;/code&gt; section of the build script:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b392cd856b69f2efecba62da2529ccf97edcdc2b" translate="yes" xml:space="preserve">
          <source>For some reason you want to rename declaration, e.g. there's common term in JavaScript for a concept provided by the declaration, which in uncommon in Kotlin.</source>
          <target state="translated">어떤 이유로 선언의 이름을 바꾸려고합니다. 예를 들어 JavaScript에서 선언에 의해 제공되는 개념에 대한 일반적인 용어가 있습니다. Kotlin에서는 드문 경우입니다.</target>
        </trans-unit>
        <trans-unit id="8158db5e8b246ddad0b2dfbfdebcbf1b90125c6f" translate="yes" xml:space="preserve">
          <source>For some specific use cases, creating a custom compilation may be required. This can be done within the target's &lt;code&gt;compilations&lt;/code&gt; domain object collection. Note that the dependencies need to be set up manually for all custom compilations, and the usage of a custom compilation's outputs is up to the build author. For example, consider a custom compilation for integration tests of a &lt;code&gt;jvm()&lt;/code&gt; target:</source>
          <target state="translated">특정 사용 사례의 경우 사용자 지정 컴파일을 만들어야 할 수도 있습니다. 이는 대상의 &lt;code&gt;compilations&lt;/code&gt; 도메인 개체 컬렉션 내에서 수행 할 수 있습니다 . 모든 사용자 정의 컴파일에 대해 종속성을 수동으로 설정해야하며 사용자 정의 컴파일의 출력 사용법은 빌드 작성자에게 달려 있습니다. 예를 들어, &lt;code&gt;jvm()&lt;/code&gt; 대상 의 통합 테스트를위한 사용자 정의 컴파일을 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="8f20399dce7cafc92e613f156c508b5fbaf82b80" translate="yes" xml:space="preserve">
          <source>For sorting in custom orders or sorting non-comparable objects, there are the functions &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted-by&quot;&gt;&lt;code&gt;sortedBy()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted-by-descending&quot;&gt;&lt;code&gt;sortedByDescending()&lt;/code&gt;&lt;/a&gt;. They take a selector function that maps collection elements to &lt;code&gt;Comparable&lt;/code&gt; values and sort the collection in natural order of that values.</source>
          <target state="translated">사용자 지정 순서로 정렬하거나 비교할 수없는 객체를 정렬하기 위해 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted-by&quot;&gt; &lt;code&gt;sortedBy()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted-by-descending&quot;&gt; &lt;code&gt;sortedByDescending()&lt;/code&gt; &lt;/a&gt; 함수가 있습니다 . 컬렉션 요소를 &lt;code&gt;Comparable&lt;/code&gt; 값에 매핑하고 컬렉션을 해당 값의 자연스러운 순서로 정렬 하는 선택기 기능 을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="8e605d5e5cf082abe698fb8f0e26e6a4f93c3d7f" translate="yes" xml:space="preserve">
          <source>For testing shared code, you can use &lt;a href=&quot;mpp-connect-to-apis&quot;&gt;actual declarations&lt;/a&gt; in your tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c12102ea94e6d5c34aa4e1cb45ef7a132aadee" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;@JvmDefault&lt;/code&gt; annotation to take effect, the interface must be compiled with an &lt;code&gt;-Xjvm-default&lt;/code&gt; argument. Depending on the case of adding the annotation, specify one of the argument values:</source>
          <target state="translated">를 들어 &lt;code&gt;@JvmDefault&lt;/code&gt; 의 주석을 적용하려면, 인터페이스는 사용하여 컴파일해야합니다 &lt;code&gt;-Xjvm-default&lt;/code&gt; 인수입니다. 주석을 추가하는 경우에 따라 인수 값 중 하나를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="da62afa580a98e0eb59438fc6f192b8b9be1b649" translate="yes" xml:space="preserve">
          <source>For the &lt;em&gt;prefix&lt;/em&gt; forms &lt;code&gt;++a&lt;/code&gt; and &lt;code&gt;--a&lt;/code&gt; resolution works the same way, and the effect is:</source>
          <target state="translated">를 들어 &lt;em&gt;접두사&lt;/em&gt; 형태 &lt;code&gt;++a&lt;/code&gt; 및 &lt;code&gt;--a&lt;/code&gt; 해상도는 동일한 방식으로 작동하고, 효과가 있습니다 :</target>
        </trans-unit>
        <trans-unit id="1f7fafe2033f8e575628eabc01789127498dbf01" translate="yes" xml:space="preserve">
          <source>For the CLI, you can compile using gradle as stated in the README (and if you get errors, you can try to do a &lt;code&gt;./gradlew clean&lt;/code&gt;):</source>
          <target state="translated">CLI의 경우 README에 설명 된대로 gradle을 사용하여 컴파일 할 수 있습니다 (오류가 발생하면 &lt;code&gt;./gradlew clean&lt;/code&gt; 을 시도 할 수 있음 ).</target>
        </trans-unit>
        <trans-unit id="6b5978de1c0c3fb2925d795946fd3b784f2b5a41" translate="yes" xml:space="preserve">
          <source>For the assignment operations, e.g. &lt;code&gt;a += b&lt;/code&gt;, the compiler performs the following steps:</source>
          <target state="translated">할당 작업 (예 : &lt;code&gt;a += b&lt;/code&gt; )의 경우 컴파일러는 다음 단계를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="eef30e92a5e5bf4ce6600a6919ba767de7c0b702" translate="yes" xml:space="preserve">
          <source>For the declarative approach, flow has &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/on-completion.html&quot;&gt;onCompletion&lt;/a&gt; intermediate operator that is invoked when the flow has completely collected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="539d8e13c53ef4abbcf027a9d0068c7cc4e5769d" translate="yes" xml:space="preserve">
          <source>For the details on &lt;code&gt;plus&lt;/code&gt; and &lt;code&gt;minus&lt;/code&gt; operators for maps, see &lt;a href=&quot;map-operations&quot;&gt;Map Specific Operations&lt;/a&gt;. The &lt;a href=&quot;operator-overloading#assignments&quot;&gt;augmented assignment operators&lt;/a&gt;&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/plus-assign&quot;&gt;&lt;code&gt;plusAssign&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;+=&lt;/code&gt;) and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/minus-assign&quot;&gt;&lt;code&gt;minusAssign&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;-=&lt;/code&gt;) are also defined for collections. However, for read-only collections, they actually use the &lt;code&gt;plus&lt;/code&gt; or &lt;code&gt;minus&lt;/code&gt; operators and try to assign the result to the same variable. Thus, they are available only on &lt;code&gt;var&lt;/code&gt; read-only collections. For mutable collections, they modify the collection if it's a &lt;code&gt;val&lt;/code&gt;. For more details see &lt;a href=&quot;collection-write&quot;&gt;Collection Write Operations&lt;/a&gt;.</source>
          <target state="translated">맵의 &lt;code&gt;plus&lt;/code&gt; 및 &lt;code&gt;minus&lt;/code&gt; 연산자에 대한 자세한 내용 은 &lt;a href=&quot;map-operations&quot;&gt;맵 특정 작업을&lt;/a&gt; 참조하십시오 . &lt;a href=&quot;operator-overloading#assignments&quot;&gt;증강 대입 연산자 &lt;/a&gt;&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/plus-assign&quot;&gt; &lt;code&gt;plusAssign&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;+=&lt;/code&gt; )와 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/minus-assign&quot;&gt; &lt;code&gt;minusAssign&lt;/code&gt; 는&lt;/a&gt; ( &lt;code&gt;-=&lt;/code&gt; )도 컬렉션에 대해 정의된다. 그러나 읽기 전용 콜렉션의 경우 실제로 &lt;code&gt;plus&lt;/code&gt; 또는 &lt;code&gt;minus&lt;/code&gt; 연산자를 사용 하고 결과를 동일한 변수에 지정하려고합니다. 따라서 &lt;code&gt;var&lt;/code&gt; 읽기 전용 컬렉션에서만 사용할 수 있습니다 . 변경 가능한 컬렉션의 경우 컬렉션이 &lt;code&gt;val&lt;/code&gt; 인 경우 컬렉션을 수정합니다 . 자세한 내용은 &lt;a href=&quot;collection-write&quot;&gt;컬렉션 쓰기 작업을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="99ae6cfe21ef096005ae65ac105caaba34a120b7" translate="yes" xml:space="preserve">
          <source>For the list of group-and-fold operations available, see the &lt;a href=&quot;#extension-functions&quot;&gt;extension functions&lt;/a&gt; for &lt;code&gt;Grouping&lt;/code&gt;.</source>
          <target state="translated">사용 가능한 그룹 및 접기 작업 목록은 &lt;code&gt;Grouping&lt;/code&gt; &lt;a href=&quot;#extension-functions&quot;&gt;확장 기능&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3d997519fcd24d20831bd6eeaa31e67ced9c303f" translate="yes" xml:space="preserve">
          <source>For the operations in this table, the compiler just resolves the expression in the &lt;em&gt;Translated to&lt;/em&gt; column.</source>
          <target state="translated">이 테이블의 작업에서 컴파일러는 &lt;em&gt;Translated to&lt;/em&gt; 열의 표현식 만 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="fbe0069c2060f259a02cd894aa164e3831bd4221" translate="yes" xml:space="preserve">
          <source>For the opposite conversion, to turn a pointer into a by-value variable, we call the &lt;code&gt;readValue()&lt;/code&gt; extension function:</source>
          <target state="translated">반대 변환을 위해 포인터를 &lt;code&gt;readValue()&lt;/code&gt; 변수로 바꾸 려면 readValue () 확장 함수를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="8f7d074241fa549a9ea4f9b661cdc64b28a3c053" translate="yes" xml:space="preserve">
          <source>For these purposes &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-supervisor-job.html&quot;&gt;SupervisorJob&lt;/a&gt; can be used. It is similar to a regular &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job.html&quot;&gt;Job&lt;/a&gt; with the only exception that cancellation is propagated only downwards. It is easy to demonstrate with an example:</source>
          <target state="translated">이러한 목적으로 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-supervisor-job.html&quot;&gt;SupervisorJob을&lt;/a&gt; 사용할 수 있습니다. 취소가 아래쪽으로 만 전파된다는 점만 제외 하면 일반 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job.html&quot;&gt;작업&lt;/a&gt; 과 비슷합니다 . 예제를 통해 쉽게 설명 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df1761b46b93e575c969c1e93c41c9c609214097" translate="yes" xml:space="preserve">
          <source>For this reason, you should probably not use a function with side effects as a default value initializer, as the side effects will happen on every call. If you just reference a variable instead of calling a function, the same variable will be read every time the function is invoked: &lt;code&gt;numbers: MutableList&amp;lt;Int&amp;gt; = myMutableList&lt;/code&gt;. If the variable is immutable, each call will see the same value (but if the value itself is mutable, it might change between calls), and if the variable is mutable, each call will see the current value of the variable. Needless to say, these situations easily lead to confusion, so a default value initializer should be either a constant or a function call that always produces a new object with the same value.</source>
          <target state="translated">따라서 모든 호출에서 부작용이 발생하므로 부작용이있는 함수를 기본값 이니셜 라이저로 사용해서는 안됩니다. 함수를 호출하는 대신 변수를 참조하면 함수를 호출 할 때마다 같은 변수를 읽습니다. &lt;code&gt;numbers: MutableList&amp;lt;Int&amp;gt; = myMutableList&lt;/code&gt; . 변수가 변경 불가능한 경우 각 호출에 동일한 값이 표시되지만 (값 자체가 변경 가능하면 호출간에 변경 될 수 있음) 변수가 변경 가능하면 각 호출에 변수의 현재 값이 표시됩니다. 말할 필요도없이, 이러한 상황은 쉽게 혼동 될 수 있으므로 기본값 이니셜 라이저는 항상 같은 값을 가진 새 객체를 생성하는 상수 또는 함수 호출이어야합니다.</target>
        </trans-unit>
        <trans-unit id="d3b653bd00b4026d91ae27cf19e170d9e5fafb1f" translate="yes" xml:space="preserve">
          <source>For this tutorial, we want to minimize Android project changes, so we add an ordinary dependency from that project to the &lt;code&gt;SharedCode&lt;/code&gt; project. It is also possible to use the &lt;code&gt;kotlin-multiplatform&lt;/code&gt; plugin directly in an Android Gradle project, instead of the &lt;code&gt;kotlin-android&lt;/code&gt; plugin. For more information, please refer to the &lt;a href=&quot;../../reference/multiplatform&quot;&gt;Multiplatform Projects&lt;/a&gt; documentation.</source>
          <target state="translated">이 학습서에서는 Android 프로젝트 변경 사항을 최소화하기 위해 해당 프로젝트에서 &lt;code&gt;SharedCode&lt;/code&gt; 프로젝트 로의 일반적인 종속성을 추가합니다 . &lt;code&gt;kotlin-android&lt;/code&gt; 플러그인 대신 Android Gradle 프로젝트에서 &lt;code&gt;kotlin-multiplatform&lt;/code&gt; 플러그인을 직접 사용할 수도 있습니다 . 자세한 정보는 &lt;a href=&quot;../../reference/multiplatform&quot;&gt;멀티 플랫폼 프로젝트&lt;/a&gt; 문서 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="acfdc01062f9c91e04e30ba794fa72188e1b8e21" translate="yes" xml:space="preserve">
          <source>For those who are familiar with &lt;a href=&quot;https://www.reactive-streams.org/&quot;&gt;Reactive Streams&lt;/a&gt; or reactive frameworks such as RxJava and project Reactor, design of the Flow may look very familiar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e99967fe57ee7a76a36c8deadb4fec1ccb4886b" translate="yes" xml:space="preserve">
          <source>For traversing collection elements, the Kotlin standard library supports the commonly used mechanism of &lt;em&gt;iterators&lt;/em&gt; &amp;ndash; objects that provide access to the elements sequentially without exposing the underlying structure of the collection. Iterators are useful when you need to process all the elements of a collection one-by-one, for example, print values or make similar updates to them.</source>
          <target state="translated">콜렉션 요소를 순회하기 위해 Kotlin 표준 라이브러리는 일반적으로 사용되는 &lt;em&gt;반복자&lt;/em&gt; 메커니즘을 지원합니다. 오브젝트의 기본 구조를 노출시키지 않고 순차적으로 요소에 액세스 할 수있는 오브젝트입니다. 반복자는 컬렉션의 모든 요소를 ​​하나씩 처리해야하는 경우에 유용합니다 (예 : 값 인쇄 또는 유사한 업데이트 수행).</target>
        </trans-unit>
        <trans-unit id="2f68c0b5ebbd06a7445ef5ecca5d9e9d637d9dcb" translate="yes" xml:space="preserve">
          <source>For types that have both representations, the one with a &quot;lvalue&quot; has a mutable &lt;code&gt;.value&lt;/code&gt; property for accessing the value.</source>
          <target state="translated">두 표현이 모두있는 유형의 경우 &quot;lvalue&quot;가있는 유형 에는 값에 액세스하기위한 가변 &lt;code&gt;.value&lt;/code&gt; 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1e4f115384861adef16b8b2baffe917e562f4a0" translate="yes" xml:space="preserve">
          <source>For unit testing support, you also need to add a dependency on the &lt;code&gt;kotlin-test-js&lt;/code&gt; artifact.</source>
          <target state="translated">단위 테스트 지원을 위해서는 &lt;code&gt;kotlin-test-js&lt;/code&gt; 아티팩트 에 대한 종속성도 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0441f5dbcdbec58d034875acaee6d1d01ac9a695" translate="yes" xml:space="preserve">
          <source>For using the Kotlin/JS target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f1af20e4840cf70de949b8090232e61a581d9c" translate="yes" xml:space="preserve">
          <source>For variables initialized with fractional numbers, the compiler infers the &lt;code&gt;Double&lt;/code&gt; type. To explicitly specify the &lt;code&gt;Float&lt;/code&gt; type for a value, add the suffix &lt;code&gt;f&lt;/code&gt; or &lt;code&gt;F&lt;/code&gt;. If such a value contains more than 6-7 decimal digits, it will be rounded.</source>
          <target state="translated">분수로 초기화 된 변수의 경우 컴파일러는 &lt;code&gt;Double&lt;/code&gt; 유형을 유추합니다 . 값 의 &lt;code&gt;Float&lt;/code&gt; 유형 을 명시 적으로 지정하려면 접미사 &lt;code&gt;f&lt;/code&gt; 또는 &lt;code&gt;F&lt;/code&gt; 를 추가하십시오 . 이러한 값에 6-7 개 이상의 십진수가 포함 된 경우 반올림됩니다.</target>
        </trans-unit>
        <trans-unit id="529daec5f1bf826a76cdf0d941f5076d7ea34e5f" translate="yes" xml:space="preserve">
          <source>For very simple read-only properties, consider one-line formatting:</source>
          <target state="translated">매우 간단한 읽기 전용 속성의 경우 한 줄 형식을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="83137f4dfe213a5a0a964cbac5ecfb9914d1da73" translate="yes" xml:space="preserve">
          <source>Forbid spread operator in signature-polymorphic calls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dd63779dfda05c2ef28c4628ee7e9d8efbf8130" translate="yes" xml:space="preserve">
          <source>Forces the compiler to use specified symbol name for the target &lt;code&gt;external&lt;/code&gt; function.</source>
          <target state="translated">컴파일러가 대상 &lt;code&gt;external&lt;/code&gt; 함수에 지정된 심볼 이름을 사용하도록합니다 .</target>
        </trans-unit>
        <trans-unit id="e69b34f01c97f652d8ef9e0c92a45af9259da382" translate="yes" xml:space="preserve">
          <source>ForeignFetchEventInit</source>
          <target state="translated">ForeignFetchEventInit</target>
        </trans-unit>
        <trans-unit id="75d9182c3bec31e50516efc67fc31601b8525430" translate="yes" xml:space="preserve">
          <source>ForeignFetchOptions</source>
          <target state="translated">ForeignFetchOptions</target>
        </trans-unit>
        <trans-unit id="12a487ec9be62c993fa0b4647bb4e76b66ee7f98" translate="yes" xml:space="preserve">
          <source>ForeignFetchResponse</source>
          <target state="translated">ForeignFetchResponse</target>
        </trans-unit>
        <trans-unit id="b92b85002a3fb316a5c6e08beb73b6cb9ed9d64d" translate="yes" xml:space="preserve">
          <source>FormData</source>
          <target state="translated">FormData</target>
        </trans-unit>
        <trans-unit id="2804d9f16a38553f8238529c90d66e7d7426c150" translate="yes" xml:space="preserve">
          <source>Formats</source>
          <target state="translated">Formats</target>
        </trans-unit>
        <trans-unit id="841f832857c780b47f478b4f21d34d8995af64b8" translate="yes" xml:space="preserve">
          <source>Formatting</source>
          <target state="translated">Formatting</target>
        </trans-unit>
        <trans-unit id="ce0f3fcfa3eec092a3013ce4a7b42696b94dcbc1" translate="yes" xml:space="preserve">
          <source>Formatting control flow statements</source>
          <target state="translated">제어 플로우 명령문 형식화</target>
        </trans-unit>
        <trans-unit id="0bdf2028ee128cef1644ccdc1afa0bcfab5ad779" translate="yes" xml:space="preserve">
          <source>Fortunately, there is a meta-runner already available that takes care of most of the manual work. If not familiar with the concept of TeamCity meta-runners, check the &lt;a href=&quot;https://confluence.jetbrains.com/display/TCD9/Working+with+Meta-Runner&quot;&gt;documentation&lt;/a&gt;. They are very easy and powerful way to introduce custom Runners without the need to write plugins</source>
          <target state="translated">다행히도 대부분의 수동 작업을 처리하는 메타 러너가 이미 있습니다. TeamCity 메타 러너 개념에 익숙하지 않은 경우 &lt;a href=&quot;https://confluence.jetbrains.com/display/TCD9/Working+with+Meta-Runner&quot;&gt;설명서를&lt;/a&gt; 확인하십시오 . 플러그인을 작성할 필요없이 커스텀 러너를 소개하는 매우 쉽고 강력한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="cf1d2c9702ec3c2c9c19d4853cd487b92618fb0c" translate="yes" xml:space="preserve">
          <source>Forum</source>
          <target state="translated">Forum</target>
        </trans-unit>
        <trans-unit id="3c108296aa2c6b7ffe348740261e9186846c294a" translate="yes" xml:space="preserve">
          <source>FrameType</source>
          <target state="translated">FrameType</target>
        </trans-unit>
        <trans-unit id="3fff0cc68f4be81edcb85632753b99c277aa4fa3" translate="yes" xml:space="preserve">
          <source>Frameworks for Server-side Development with Kotlin</source>
          <target state="translated">Kotlin을 사용한 서버 측 개발 프레임 워크</target>
        </trans-unit>
        <trans-unit id="e358664f6beffa8d97e25ecdeedb921b3ec65678" translate="yes" xml:space="preserve">
          <source>Freezable atomic reference is similar to the regular atomic reference, but until frozen behaves like regular box for a reference. After freezing it behaves like an atomic reference, and can only hold a reference to a frozen object.</source>
          <target state="translated">Freezable 원자 참조는 일반 원자 참조와 유사하지만 frozen이 참조를위한 일반 상자처럼 작동 할 때까지 작동합니다. 고정 후에는 원자 참조처럼 동작하며 고정 된 개체에 대한 참조 만 보유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c02f140d4e1c43d1f955dd72be8623c93c3777d5" translate="yes" xml:space="preserve">
          <source>FreezableAtomicReference</source>
          <target state="translated">FreezableAtomicReference</target>
        </trans-unit>
        <trans-unit id="80447dec7b683323831bc3898e849011567bb9dd" translate="yes" xml:space="preserve">
          <source>Freezes object subgraph reachable from this object. Frozen objects can be freely shared between threads/workers.</source>
          <target state="translated">이 개체에서 도달 할 수있는 개체 하위 그래프를 고정합니다. 고정 된 객체는 스레드 / 작업자간에 자유롭게 공유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5732305dc8d6bdd9feedc8e8feab21d51a4ad6a" translate="yes" xml:space="preserve">
          <source>Freezing is a runtime operation making a given object subgraph immutable, by modifying the object header so that future mutation attempts throw an &lt;code&gt;InvalidMutabilityException&lt;/code&gt;. It is deep, so if an object has a pointer to other objects - transitive closure of such objects will be frozen. Freezing is a one way transformation, frozen objects cannot be unfrozen. Frozen objects have a nice property that due to their immutability, they can be freely shared between multiple workers/threads without breaking the &quot;mutable XOR shared&quot; invariant.</source>
          <target state="translated">Freezing은 미래의 돌연변이 시도가 &lt;code&gt;InvalidMutabilityException&lt;/code&gt; 을 발생 시키도록 오브젝트 헤더를 수정하여 주어진 오브젝트 서브 그래프를 변경할 수없는 런타임 조작 입니다. 깊기 때문에 객체에 다른 객체에 대한 포인터가 있으면 해당 객체의 전이 폐쇄가 고정됩니다. 고정은 단방향 변환이며 고정 된 개체는 고정 해제 할 수 없습니다. 고정 된 객체는 불변성으로 인해 &quot;변경 가능한 XOR 공유&quot;불변을 중단하지 않고 여러 작업자 / 스레드간에 자유롭게 공유 할 수있는 훌륭한 속성을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="080e2c352b2e6ce4d98cbfd75308fccd2d13b6e7" translate="yes" xml:space="preserve">
          <source>FreezingException</source>
          <target state="translated">FreezingException</target>
        </trans-unit>
        <trans-unit id="3270d126408ac9c895b73a16eb41ad3bd68810c6" translate="yes" xml:space="preserve">
          <source>Frequently - especially if you want a complex return type from a function or a complex key for a map - you'll want a quick and dirty class which only contains some properties, but is still comparable for equality and is usable as a map key. If you create a &lt;em&gt;data class&lt;/em&gt;, you'll get automatic implementations of the following functions: &lt;code&gt;toString()&lt;/code&gt; (which will produce a string containing all the property names and values), &lt;code&gt;equals()&lt;/code&gt; (which will do a per-property &lt;code&gt;equals()&lt;/code&gt;), &lt;code&gt;hashCode()&lt;/code&gt; (which will hash the individual properties and combine the hashes), and the functions that are required to enable Kotlin to destructure an instance of the class into a declaration (&lt;code&gt;component1()&lt;/code&gt;, &lt;code&gt;component2()&lt;/code&gt;, etc.):</source>
          <target state="translated">종종-특히 함수의 복잡한 반환 유형이나 맵의 복잡한 키를 원할 경우 일부 속성 만 포함하지만 여전히 동등성과 비교 가능하고 맵 키로 사용할 수있는 빠르고 더러운 클래스를 원할 것입니다. &lt;em&gt;데이터 클래스&lt;/em&gt; 를 만들면 다음 속성을 자동으로 구현합니다. &lt;code&gt;toString()&lt;/code&gt; (모든 속성 이름과 값을 포함하는 문자열을 생성합니다), &lt;code&gt;equals()&lt;/code&gt; (속성 별 &lt;code&gt;equals()&lt;/code&gt; ), &lt;code&gt;hashCode()&lt;/code&gt; (개별 속성을 해시하고 해시를 결합 함) 및 Kotlin이 클래스의 인스턴스를 선언 ( &lt;code&gt;component1()&lt;/code&gt; 으로 구조화하는 데 필요한 함수 , &lt;code&gt;component2()&lt;/code&gt; 등) :</target>
        </trans-unit>
        <trans-unit id="eeaebac0ea185354ca4da1eed41ca0237a76e360" translate="yes" xml:space="preserve">
          <source>Frequently, global variables are a source of unintended concurrency issues, so &lt;em&gt;Kotlin/Native&lt;/em&gt; implements the following mechanisms to prevent the unintended sharing of state via global objects:</source>
          <target state="translated">전역 변수는 의도하지 않은 동시성 문제의 원인이되기 때문에 &lt;em&gt;Kotlin / Native&lt;/em&gt; 는 전역 객체를 통해 의도하지 않은 상태 공유를 방지하기 위해 다음과 같은 메커니즘을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="6f534b1669d028d05de6c4f01c61b4cbefdfc68b" translate="yes" xml:space="preserve">
          <source>Frequently, you'll find that during the lifetime of your variable, it only ever needs to refer to one object. Then, you can declare it with &lt;code&gt;val&lt;/code&gt; (for &quot;value&quot;) instead:</source>
          <target state="translated">종종 변수의 수명 동안 하나의 객체 만 참조하면된다는 것을 알게 될 것입니다. 그런 다음 대신 &lt;code&gt;val&lt;/code&gt; ( &quot;value&quot;)로 선언 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7f1dacd0361126bb8241eaf5f54839027d1b83de" translate="yes" xml:space="preserve">
          <source>From &lt;code&gt;Iterable&lt;/code&gt;</source>
          <target state="translated">에서 &lt;code&gt;Iterable&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e903d5d97686e54561b32d3001611ffcc2e0a685" translate="yes" xml:space="preserve">
          <source>From Gradle</source>
          <target state="translated">Gradle에서</target>
        </trans-unit>
        <trans-unit id="2c1510bd121f7b4adb08915128573cbc22353dad" translate="yes" xml:space="preserve">
          <source>From IntelliJ IDEA</source>
          <target state="translated">IntelliJ IDEA에서</target>
        </trans-unit>
        <trans-unit id="46a2318d1812b0419db3c6cf8e568ded984d2f97" translate="yes" xml:space="preserve">
          <source>From Kotlin they will be accessible by the same name &lt;code&gt;filterValid&lt;/code&gt;, but from Java it will be &lt;code&gt;filterValid&lt;/code&gt; and &lt;code&gt;filterValidInt&lt;/code&gt;.</source>
          <target state="translated">Kotlin에서는 같은 이름으로 &lt;code&gt;filterValid&lt;/code&gt; 에 액세스 할 수 있지만 Java에서는 &lt;code&gt;filterValid&lt;/code&gt; 및 &lt;code&gt;filterValidInt&lt;/code&gt; 가 됩니다.</target>
        </trans-unit>
        <trans-unit id="4b86aa5caa340495b300dfdb7661e78f45617313" translate="yes" xml:space="preserve">
          <source>From Maven</source>
          <target state="translated">메이븐에서</target>
        </trans-unit>
        <trans-unit id="348ba1b21583b3d0701a95f3c648fcbdd98f155f" translate="yes" xml:space="preserve">
          <source>From building data pipelines to productionizing machine learning models, Kotlin can be a great choice for working with data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63be8821b7dae58ac3edb96332553cab8bfda471" translate="yes" xml:space="preserve">
          <source>From chunks</source>
          <target state="translated">청크에서</target>
        </trans-unit>
        <trans-unit id="7ab268169d69c739813b410b45da09fd14cd394a" translate="yes" xml:space="preserve">
          <source>From elements</source>
          <target state="translated">요소에서</target>
        </trans-unit>
        <trans-unit id="99d7bcb17fff71b248e97c870c311e513e0173a5" translate="yes" xml:space="preserve">
          <source>From function</source>
          <target state="translated">기능에서</target>
        </trans-unit>
        <trans-unit id="318000773f13f97f5d3182522f9781bea9ccfb76" translate="yes" xml:space="preserve">
          <source>From now on, instead of specifying dependencies on different variants of the same library in shared and platform-specific source sets where it is used, you should specify a dependency only once in the shared source set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ee5e7942ed964b13119f8bb7d31b29207aa3b2" translate="yes" xml:space="preserve">
          <source>From the root project folder, execute the build by running</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b57207ffe105a985227c26ccdced3c28406c1e" translate="yes" xml:space="preserve">
          <source>Full definition of the &lt;code&gt;com.example.html&lt;/code&gt; package</source>
          <target state="translated">&lt;code&gt;com.example.html&lt;/code&gt; 패키지 의 전체 정의</target>
        </trans-unit>
        <trans-unit id="aad1c0dafbf03119fdcdb3c699f48901b1590080" translate="yes" xml:space="preserve">
          <source>Full kotlinx.coroutines API reference</source>
          <target state="translated">전체 kotlinx.coroutines API 참조</target>
        </trans-unit>
        <trans-unit id="3bac36b2b7a23e52c764a12f2d4d0fc0a7a0e4d8" translate="yes" xml:space="preserve">
          <source>Fully qualified name of the package this class is located in, from Kotlin's point of view, or empty string if this name does not differ from the JVM's package FQ name. These names can be different in case the JvmPackageName annotation is used. Note that this information is also stored in the corresponding module's &lt;code&gt;.kotlin_module&lt;/code&gt; file.</source>
          <target state="translated">이 클래스가 위치한 패키지의 완전한 이름은 Kotlin의 관점에서 보거나이 이름이 JVM의 패키지 FQ 이름과 다르지 않은 경우 빈 문자열입니다. JvmPackageName 주석이 사용되는 경우 이러한 이름이 다를 수 있습니다. 이 정보는 해당 모듈의 &lt;code&gt;.kotlin_module&lt;/code&gt; 파일 에도 저장 됩니다.</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="1dcdfd2ec9069a64630d38318805ac58f78ebc9a" translate="yes" xml:space="preserve">
          <source>Function (constructors are not included)</source>
          <target state="translated">기능 (생성자 포함되지 않음)</target>
        </trans-unit>
        <trans-unit id="035787f0ca20d22e08021c39f72834469799520f" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;max&lt;/code&gt; is a higher-order function, it takes a function value as the second argument. This second argument is an expression that is itself a function, i.e. a function literal, which is equivalent to the following named function:</source>
          <target state="translated">함수 &lt;code&gt;max&lt;/code&gt; 는 고차 함수이며 함수 값을 두 번째 인수로 사용합니다. 이 두 번째 인수는 그 자체가 함수 인 표현식입니다. 즉 함수 리터럴은 다음과 같은 명명 된 함수와 같습니다.</target>
        </trans-unit>
        <trans-unit id="751924331feba79685bd7ca453e7d70d1ee39798" translate="yes" xml:space="preserve">
          <source>Function Declarations</source>
          <target state="translated">함수 선언</target>
        </trans-unit>
        <trans-unit id="da9189d87675a5d44e6310e344886c7fd0a3671f" translate="yes" xml:space="preserve">
          <source>Function References</source>
          <target state="translated">기능 참조</target>
        </trans-unit>
        <trans-unit id="5c8224fb885f624660db62da8b1055688dda11c3" translate="yes" xml:space="preserve">
          <source>Function Scope</source>
          <target state="translated">기능 범위</target>
        </trans-unit>
        <trans-unit id="2267d63b26917f9a3715a86c5fd0aa733935b6e4" translate="yes" xml:space="preserve">
          <source>Function Usage</source>
          <target state="translated">기능 사용법</target>
        </trans-unit>
        <trans-unit id="cf18ccbe7924a806aa4ee8d2ed664f4d998e37b0" translate="yes" xml:space="preserve">
          <source>Function corresponding to JavaScript's &lt;code&gt;typeof&lt;/code&gt; operator</source>
          <target state="translated">JavaScript의 &lt;code&gt;typeof&lt;/code&gt; 연산자에 해당하는 기능</target>
        </trans-unit>
        <trans-unit id="301ffb948f7d729015635b11db6553b40624b34f" translate="yes" xml:space="preserve">
          <source>Function declarations</source>
          <target state="translated">함수 선언</target>
        </trans-unit>
        <trans-unit id="b95c3bae5d82738e59f8b16d63717ed67c934752" translate="yes" xml:space="preserve">
          <source>Function formatting</source>
          <target state="translated">함수 형식</target>
        </trans-unit>
        <trans-unit id="ce6e413c01f8f88615ada6c7f6d349f7800231ea" translate="yes" xml:space="preserve">
          <source>Function having two &lt;code&gt;Int&lt;/code&gt; parameters with &lt;code&gt;Int&lt;/code&gt; return type:</source>
          <target state="translated">&lt;code&gt;Int&lt;/code&gt; 리턴 유형의 두 개의 &lt;code&gt;Int&lt;/code&gt; 매개 변수가있는 함수 :</target>
        </trans-unit>
        <trans-unit id="ca665affb7c73b78ff26c871ee3d6b8618de47f7" translate="yes" xml:space="preserve">
          <source>Function literals with receiver</source>
          <target state="translated">수신자와 함수 리터럴</target>
        </trans-unit>
        <trans-unit id="d74aadb0539e8ce0c16c1f970d53120878cd40d9" translate="yes" xml:space="preserve">
          <source>Function literals: lambda expressions and anonymous functions</source>
          <target state="translated">함수 리터럴 : 람다 식 및 익명 함수</target>
        </trans-unit>
        <trans-unit id="dbfe0bee331f156c7ece93de6926384c2e325f16" translate="yes" xml:space="preserve">
          <source>Function names</source>
          <target state="translated">기능 이름</target>
        </trans-unit>
        <trans-unit id="f8d62ea92d3791c590b8073632a146bf910c0f88" translate="yes" xml:space="preserve">
          <source>Function names should use &lt;code&gt;lowerCamelCase&lt;/code&gt; instead of &lt;code&gt;snake_case&lt;/code&gt;.</source>
          <target state="translated">함수 이름은 &lt;code&gt;snake_case&lt;/code&gt; 대신 &lt;code&gt;lowerCamelCase&lt;/code&gt; 를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="2357eb920295d3ee4fd2746f790b824f9b769058" translate="yes" xml:space="preserve">
          <source>Function parameters are defined using Pascal notation, i.e. &lt;em&gt;name&lt;/em&gt;: &lt;em&gt;type&lt;/em&gt;. Parameters are separated using commas. Each parameter must be explicitly typed:</source>
          <target state="translated">함수 매개 변수는 파스칼 표기법, 즉 &lt;em&gt;name&lt;/em&gt; : &lt;em&gt;type을&lt;/em&gt; 사용하여 정의됩니다 . 매개 변수는 쉼표로 구분됩니다. 각 매개 변수는 명시 적으로 입력해야합니다.</target>
        </trans-unit>
        <trans-unit id="5edd24c452ecd10a54093010f4990be666666f06" translate="yes" xml:space="preserve">
          <source>Function parameters can be named when calling functions. This is very convenient when a function has a high number of parameters or default ones.</source>
          <target state="translated">함수를 호출 할 때 함수 매개 변수의 이름을 지정할 수 있습니다. 함수에 많은 수의 매개 변수 또는 기본 매개 변수가있는 경우 매우 편리합니다.</target>
        </trans-unit>
        <trans-unit id="85a49cc1f92d081670928800342e92a2a2ac7f85" translate="yes" xml:space="preserve">
          <source>Function parameters can have default values, which are used when a corresponding argument is omitted. This allows for a reduced number of overloads compared to other languages:</source>
          <target state="translated">함수 매개 변수는 기본값을 가질 수 있으며, 해당 인수가 생략 될 때 사용됩니다. 이를 통해 다른 언어에 비해 오버로드 수가 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="e96c3516563981053065b8dc40dcff2e71feb85b" translate="yes" xml:space="preserve">
          <source>Function parameters can have default values, which are used when you skip the corresponding argument. This reduces a number of overloads compared to other languages:</source>
          <target state="translated">함수 매개 변수는 해당 인수를 건너 뛸 때 사용되는 기본값을 가질 수 있습니다. 이렇게하면 다른 언어에 비해 많은 과부하가 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="807c42249b0922157615f7450853ad54609a2512" translate="yes" xml:space="preserve">
          <source>Function pointers from C and how they look in Kotlin/Native</source>
          <target state="translated">C의 함수 포인터와 코 틀린 / 네이티브에서의 모양</target>
        </trans-unit>
        <trans-unit id="0f181fa3f949ca58e990503187b232168a8466d0" translate="yes" xml:space="preserve">
          <source>Function references</source>
          <target state="translated">함수 참조</target>
        </trans-unit>
        <trans-unit id="e9bdf065ac1d9b004b177e363e9f91fbf2b96350" translate="yes" xml:space="preserve">
          <source>Function references belong to one of the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.reflect/-k-function/index&quot;&gt;&lt;code&gt;KFunction&amp;lt;out R&amp;gt;&lt;/code&gt;&lt;/a&gt; subtypes, depending on the parameter count, e.g. &lt;code&gt;KFunction3&amp;lt;T1, T2, T3, R&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">함수 참조 는 매개 변수 개수에 따라 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.reflect/-k-function/index&quot;&gt; &lt;code&gt;KFunction&amp;lt;out R&amp;gt;&lt;/code&gt; &lt;/a&gt; 하위 유형 중 하나에 속합니다 ( 예 : &lt;code&gt;KFunction3&amp;lt;T1, T2, T3, R&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="264093b03d43cb82bc00558bf0d7756dc478b24e" translate="yes" xml:space="preserve">
          <source>Function references in &lt;code&gt;Unit&lt;/code&gt;-returning functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a31212b4d92d1dae20ef3440ad0c5dd83c9e9ba8" translate="yes" xml:space="preserve">
          <source>Function returning no meaningful value:</source>
          <target state="translated">의미있는 값을 반환하지 않는 함수 :</target>
        </trans-unit>
        <trans-unit id="14644346bcc70a878c3eb265226005a7304bec16" translate="yes" xml:space="preserve">
          <source>Function scope</source>
          <target state="translated">기능 범위</target>
        </trans-unit>
        <trans-unit id="5f274445178a53837ad18098a8c7a5d6fc400cb9" translate="yes" xml:space="preserve">
          <source>Function selection</source>
          <target state="translated">기능 선택</target>
        </trans-unit>
        <trans-unit id="bc031b64c0889a188091b33b3ffbe9e95dc3e702" translate="yes" xml:space="preserve">
          <source>Function type</source>
          <target state="translated">기능 유형</target>
        </trans-unit>
        <trans-unit id="4cf28af51590dee95695351a40b2cc8d5c35812e" translate="yes" xml:space="preserve">
          <source>Function types</source>
          <target state="translated">기능 유형</target>
        </trans-unit>
        <trans-unit id="856adb0347c3f4becd32b9cb22d963c4fe41d845" translate="yes" xml:space="preserve">
          <source>Function types can be combined using parentheses: &lt;code&gt;(Int) -&amp;gt; ((Int) -&amp;gt; Unit)&lt;/code&gt;</source>
          <target state="translated">괄호를 사용하여 함수 유형을 결합 할 수 있습니다. &lt;code&gt;(Int) -&amp;gt; ((Int) -&amp;gt; Unit)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c9bebe6feed7f92b3e31e52ccb139bfa1b01661" translate="yes" xml:space="preserve">
          <source>Function types can optionally have an additional &lt;em&gt;receiver&lt;/em&gt; type, which is specified before a dot in the notation: the type &lt;code&gt;A.(B) -&amp;gt; C&lt;/code&gt; represents functions that can be called on a receiver object of &lt;code&gt;A&lt;/code&gt; with a parameter of &lt;code&gt;B&lt;/code&gt; and return a value of &lt;code&gt;C&lt;/code&gt;. &lt;a href=&quot;#function-literals-with-receiver&quot;&gt;Function literals with receiver&lt;/a&gt; are often used along with these types.</source>
          <target state="translated">함수 유형은 선택적으로 추가 &lt;em&gt;수신자&lt;/em&gt; 유형을 가질 수 있으며 , 이는 표기법에서 점 앞에 지정됩니다. 유형 &lt;code&gt;A.(B) -&amp;gt; C&lt;/code&gt; 는 &lt;code&gt;B&lt;/code&gt; 의 매개 변수를 사용하여 &lt;code&gt;A&lt;/code&gt; 의 수신자 오브젝트에서 호출 될 수있는 함수를 나타냅니다 . &lt;code&gt;C&lt;/code&gt; 의 값 . &lt;a href=&quot;#function-literals-with-receiver&quot;&gt;리시버&lt;/a&gt; 가있는 함수 리터럴 은 종종 이러한 유형과 함께 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3a236cb6147e5b9e87701e732d2fc9707c91fce8" translate="yes" xml:space="preserve">
          <source>Function types with exportable parameters and return types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b10d6ef38e7c4bcdf1e94d9d7f107eefec065bab" translate="yes" xml:space="preserve">
          <source>Function usage</source>
          <target state="translated">기능 사용</target>
        </trans-unit>
        <trans-unit id="2bd25700768632f324f5f85576fee01ec4787a93" translate="yes" xml:space="preserve">
          <source>Function value parameters</source>
          <target state="translated">기능 값 매개 변수</target>
        </trans-unit>
        <trans-unit id="cbb0a89a817f8245fd4501f682c4b83cd600158e" translate="yes" xml:space="preserve">
          <source>Function with an expression body and inferred return type:</source>
          <target state="translated">표현식 본문 및 유추 된 리턴 유형이있는 함수 :</target>
        </trans-unit>
        <trans-unit id="e254dfa27f4d6e6266ffbc98f2d086a9dc8f4acb" translate="yes" xml:space="preserve">
          <source>Functional (SAM) interfaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93672d0aa15105591a1cf3d6e6a482dc5530d9e4" translate="yes" xml:space="preserve">
          <source>Functional interfaces and &lt;a href=&quot;type-aliases&quot;&gt;type aliases&lt;/a&gt; serve different purposes. Type aliases are just names for existing types &amp;ndash; they don't create a new type, while functional interfaces do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73de24a0af3f203a01aaaae900771b18c9b4be5f" translate="yes" xml:space="preserve">
          <source>Functional interfaces vs. type aliases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="616348e4102e287bce650e93d6e6f0f3f64bef4a" translate="yes" xml:space="preserve">
          <source>Functional operators example: Long Number problem</source>
          <target state="translated">함수 연산자 예 : Long Number problem</target>
        </trans-unit>
        <trans-unit id="deb4e042b9d6249db97e6680ab8276b237985bd9" translate="yes" xml:space="preserve">
          <source>Functional programming</source>
          <target state="translated">기능적 프로그래밍</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="c6cf63bb2db24e88a231a0809e16881a5299ada5" translate="yes" xml:space="preserve">
          <source>Functions &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/first&quot;&gt;&lt;code&gt;first()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/last&quot;&gt;&lt;code&gt;last()&lt;/code&gt;&lt;/a&gt; also let you search a collection for elements matching a given predicate. When you call &lt;code&gt;first()&lt;/code&gt; with a predicate that tests a collection element, you'll receive the first element on which the predicate yields &lt;code&gt;true&lt;/code&gt;. In turn, &lt;code&gt;last()&lt;/code&gt; with a predicate returns the last element matching it.</source>
          <target state="translated">&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/first&quot;&gt; &lt;code&gt;first()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/last&quot;&gt; &lt;code&gt;last()&lt;/code&gt; &lt;/a&gt; 함수를 사용 하면 주어진 술어와 일치하는 요소에 대한 콜렉션을 검색 할 수도 있습니다. 컬렉션 요소를 테스트하는 조건 자와 함께 &lt;code&gt;first()&lt;/code&gt; 를 호출 하면 조건자가 &lt;code&gt;true&lt;/code&gt; 인 첫 번째 요소가 수신됩니다 . 결과적으로 술어가있는 &lt;code&gt;last()&lt;/code&gt; 는 일치하는 마지막 요소를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="9672456d84600d7933765df2e67cde51c9146628" translate="yes" xml:space="preserve">
          <source>Functions act similarly to properties, but can be referenced as two different kinds of types.</source>
          <target state="translated">함수는 속성과 비슷하게 작동하지만 서로 다른 두 종류의 유형으로 참조 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="38e0c96376951cc87589b6bdee7b1ee1c34c4cd2" translate="yes" xml:space="preserve">
          <source>Functions and annotations specific to the Java platform.</source>
          <target state="translated">Java 플랫폼에 특정한 기능 및 주석.</target>
        </trans-unit>
        <trans-unit id="af02c4bbfc0fd5d261d9a7c1341f5f36cb64fc58" translate="yes" xml:space="preserve">
          <source>Functions and other APIs specific to the JavaScript platform.</source>
          <target state="translated">JavaScript 플랫폼에 특정한 기능 및 기타 API.</target>
        </trans-unit>
        <trans-unit id="1363a53b7740a8dfedddc08cb1096432aefce24a" translate="yes" xml:space="preserve">
          <source>Functions are called the same way as in Python:</source>
          <target state="translated">함수는 파이썬에서와 같은 방식으로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="ffffe56cc8b206d4da2960cd6acff3498dd8bab0" translate="yes" xml:space="preserve">
          <source>Functions are declared with the &lt;code&gt;fun&lt;/code&gt; keyword. For the parameters, you must declare not only their names, but also their types, and you must declare the type of the value the function is intending to return. The body of the function is usually a &lt;em&gt;block&lt;/em&gt;, which is enclosed in curly braces:</source>
          <target state="translated">&lt;code&gt;fun&lt;/code&gt; 키워드로 함수가 선언됩니다 . 매개 변수의 경우 이름뿐만 아니라 유형도 선언해야하며 함수가 리턴 할 값의 유형을 선언해야합니다. 함수의 본문은 일반적으로 &lt;em&gt;블록&lt;/em&gt; 이며 중괄호로 묶습니다.</target>
        </trans-unit>
        <trans-unit id="c5cabb16d69d786b4868a7a6a2bf74508116eaf0" translate="yes" xml:space="preserve">
          <source>Functions can be inlined and never get called directly (which happens always except for few situations).</source>
          <target state="translated">함수는 인라인 될 수 있으며 직접 호출되지는 않습니다 (몇 가지 상황을 제외하고는 항상 발생 함).</target>
        </trans-unit>
        <trans-unit id="8ec68d70c5ce9191111e899674a4b364e187fad0" translate="yes" xml:space="preserve">
          <source>Functions can have generic parameters which are specified using angle brackets before the function name:</source>
          <target state="translated">함수는 함수 이름 앞에 꺾쇠 괄호를 사용하여 지정된 일반 매개 변수를 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d36d4585288cfb6e198289cffbd8d27eb25dfa0" translate="yes" xml:space="preserve">
          <source>Functions for string manipulations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb364910311fce703048fea10e4d919d72d59716" translate="yes" xml:space="preserve">
          <source>Functions for working with text and regular expressions.</source>
          <target state="translated">텍스트 및 정규식 작업을위한 함수입니다.</target>
        </trans-unit>
        <trans-unit id="e3e99c9a98e038eb3f95a845b33675a2ad31ed19" translate="yes" xml:space="preserve">
          <source>Functions in Kotlin are declared using the &lt;code&gt;fun&lt;/code&gt; keyword:</source>
          <target state="translated">Kotlin의 함수는 &lt;code&gt;fun&lt;/code&gt; 키워드를 사용하여 선언됩니다 .</target>
        </trans-unit>
        <trans-unit id="d223cff044f05e7b30816ce62b78775dd0b163cd" translate="yes" xml:space="preserve">
          <source>Functions in Kotlin are declared using the &lt;em&gt;fun&lt;/em&gt; keyword:</source>
          <target state="translated">Kotlin의 함수는 &lt;em&gt;fun&lt;/em&gt; 키워드를 사용하여 선언됩니다 .</target>
        </trans-unit>
        <trans-unit id="abcf79c145a0740ce76ae03026a3b5f6a374058e" translate="yes" xml:space="preserve">
          <source>Functions marked with the &lt;em&gt;infix&lt;/em&gt; keyword can also be called using the infix notation (omitting the dot and the parentheses for the call). Infix functions must satisfy the following requirements:</source>
          <target state="translated">&lt;em&gt;infix&lt;/em&gt; 키워드 로 표시된 함수 는 또한 접두사 표기법을 사용하여 호출 할 수 있습니다 (호의 점과 괄호 생략). 삽입 기능은 다음 요구 사항을 충족해야합니다.</target>
        </trans-unit>
        <trans-unit id="10e994cc2b3874457f1a3b7ea19e8f59d42dc03b" translate="yes" xml:space="preserve">
          <source>Functions vs Properties</source>
          <target state="translated">기능 대 속성</target>
        </trans-unit>
        <trans-unit id="605aecda5c91b6b9048a949e9a032b635cbf0a1c" translate="yes" xml:space="preserve">
          <source>Functions with big arity</source>
          <target state="translated">큰 arity를 ​​가진 기능</target>
        </trans-unit>
        <trans-unit id="4263c3e1bd4e555556b6d00bf49afae16b33edd0" translate="yes" xml:space="preserve">
          <source>Functions with block body must always specify return types explicitly, unless it's intended for them to return &lt;code&gt;Unit&lt;/code&gt;, &lt;a href=&quot;#unit-returning-functions&quot;&gt;in which case it is optional&lt;/a&gt;. Kotlin does not infer return types for functions with block bodies because such functions may have complex control flow in the body, and the return type will be non-obvious to the reader (and sometimes even for the compiler).</source>
          <target state="translated">그들에게 반환 할 의도하지 않는 블록 몸의 기능은 항상 명시 적으로 반환 유형을 지정해야합니다 &lt;code&gt;Unit&lt;/code&gt; , &lt;a href=&quot;#unit-returning-functions&quot;&gt;옵션이되고있는 경우에&lt;/a&gt; . Kotlin은 블록 본문이있는 함수에 대해 반환 형식을 유추하지 않습니다. 이러한 함수는 본문에 복잡한 제어 흐름이있을 수 있으며 반환 형식은 독자에게는 분명하지 않으며 때로는 컴파일러에도 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="869c75fbf27b8cca960a9441a8a796e1012f6db9" translate="yes" xml:space="preserve">
          <source>Functions with destination are available for filtering, association, grouping, flattening, and other operations. For the complete list of destination operations see the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/index&quot;&gt;Kotlin collections reference&lt;/a&gt;.</source>
          <target state="translated">대상이있는 기능은 필터링, 연결, 그룹화, 병합 및 기타 작업에 사용할 수 있습니다. 대상 작업의 전체 목록은 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/index&quot;&gt;Kotlin 컬렉션 참조를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ec474f22ddefd224ff67020fbb6ae2182e01b1bd" translate="yes" xml:space="preserve">
          <source>Functions, properties and classes, objects and interfaces can be declared on the &quot;top-level&quot;, i.e. directly inside a package:</source>
          <target state="translated">함수, 속성 및 클래스, 객체 및 인터페이스는 &quot;최상위&quot;, 즉 패키지 내부에서 선언 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="64bb8f0fe0b9db02fc735271491aea4157abc344" translate="yes" xml:space="preserve">
          <source>Further discussion</source>
          <target state="translated">심도 깊은 논의</target>
        </trans-unit>
        <trans-unit id="96c5f382ec6718fb0998748d71e7d0240a9b8b4e" translate="yes" xml:space="preserve">
          <source>Further we describe the conventions that regulate operator overloading for different operators.</source>
          <target state="translated">또한 다른 연산자에 대한 연산자 과부하를 규제하는 규칙에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="047ca54032a1756c098d3bc1a941a0ed8e583df8" translate="yes" xml:space="preserve">
          <source>Future</source>
          <target state="translated">Future</target>
        </trans-unit>
        <trans-unit id="bdeb21a050e1ff6f2a23beb6e6f7287a62d029a3" translate="yes" xml:space="preserve">
          <source>Future is cancelled.</source>
          <target state="translated">미래가 취소되었습니다.</target>
        </trans-unit>
        <trans-unit id="62f3171baa5c0fb94afa3426a227046e9f1a7e06" translate="yes" xml:space="preserve">
          <source>Future is scheduled for execution.</source>
          <target state="translated">미래는 집행 될 예정이다.</target>
        </trans-unit>
        <trans-unit id="195b2c4ef0b579e6fc4df56af690cec04f2f5bb0" translate="yes" xml:space="preserve">
          <source>Future result is computed.</source>
          <target state="translated">향후 결과가 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="99e54311d7d01d796e399d911a504c91ce32cd9c" translate="yes" xml:space="preserve">
          <source>FutureState</source>
          <target state="translated">FutureState</target>
        </trans-unit>
        <trans-unit id="e9808cbd1900d3da5151bc3f2b38f18d4b846b48" translate="yes" xml:space="preserve">
          <source>Futures, Promises et al.</source>
          <target state="translated">선물, Promises et al.</target>
        </trans-unit>
        <trans-unit id="d302df4ce43907abad06f077688fdd515b323131" translate="yes" xml:space="preserve">
          <source>Futures, Promises et. al</source>
          <target state="translated">선물, 약속 외. 알</target>
        </trans-unit>
        <trans-unit id="6dbbfe6588647d02744e6218e0591657f4ee2019" translate="yes" xml:space="preserve">
          <source>Garbage Collection and Reference Counting</source>
          <target state="translated">가비지 수집 및 참조 횟수</target>
        </trans-unit>
        <trans-unit id="5537dfcf4040a457bb174bf6d48eae1b56f94aab" translate="yes" xml:space="preserve">
          <source>General category &quot;Cc&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「Cc」</target>
        </trans-unit>
        <trans-unit id="3580200580fcd436242306f983f3b3507549a6d0" translate="yes" xml:space="preserve">
          <source>General category &quot;Cf&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「Cf」</target>
        </trans-unit>
        <trans-unit id="fd1d6d98583bd5d286c8c74c0b9f29ebf1956524" translate="yes" xml:space="preserve">
          <source>General category &quot;Cn&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「Cn」</target>
        </trans-unit>
        <trans-unit id="3a106be07363c0507044c963eabc93ed51c9f075" translate="yes" xml:space="preserve">
          <source>General category &quot;Co&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「Co」</target>
        </trans-unit>
        <trans-unit id="03ca4907122b18ef856396c0fa40bcff775e3854" translate="yes" xml:space="preserve">
          <source>General category &quot;Cs&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「Cs」</target>
        </trans-unit>
        <trans-unit id="00468af6d9083b471cf09e0ab8f92739e492618c" translate="yes" xml:space="preserve">
          <source>General category &quot;Ll&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「L1」</target>
        </trans-unit>
        <trans-unit id="257f5f2650986b8ae0295dd63b1dad60b91f932e" translate="yes" xml:space="preserve">
          <source>General category &quot;Lm&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「Lm」</target>
        </trans-unit>
        <trans-unit id="914f6778c8d6a3a8826bf16e80d3412755d054b5" translate="yes" xml:space="preserve">
          <source>General category &quot;Lo&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「Lo」</target>
        </trans-unit>
        <trans-unit id="fb8a22c756350d8003ac24a1929c70ad4b9d0b0b" translate="yes" xml:space="preserve">
          <source>General category &quot;Lt&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「Lt」</target>
        </trans-unit>
        <trans-unit id="0f887a16535e642a6540462856260b3a206e313f" translate="yes" xml:space="preserve">
          <source>General category &quot;Lu&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「Lu」</target>
        </trans-unit>
        <trans-unit id="1fb16989d2201c63c16c857610395df222c44d9f" translate="yes" xml:space="preserve">
          <source>General category &quot;Mc&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「Mc」</target>
        </trans-unit>
        <trans-unit id="db22004b965686c72aef5fe1a6705573f3aea2fc" translate="yes" xml:space="preserve">
          <source>General category &quot;Me&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「Me」</target>
        </trans-unit>
        <trans-unit id="e13b65d112880a2a8f689b8c3e69658f87c69992" translate="yes" xml:space="preserve">
          <source>General category &quot;Mn&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「Mn」</target>
        </trans-unit>
        <trans-unit id="7274a78e11b5a951cd6f03c870bd0ccefdda3504" translate="yes" xml:space="preserve">
          <source>General category &quot;Nd&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「Nd」</target>
        </trans-unit>
        <trans-unit id="dcce571b632cd78adf2562075b5c74018107e4e8" translate="yes" xml:space="preserve">
          <source>General category &quot;Nl&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「N1」</target>
        </trans-unit>
        <trans-unit id="9d69dc6d8d9257de7ff5da721565e07f739f0467" translate="yes" xml:space="preserve">
          <source>General category &quot;No&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「No」</target>
        </trans-unit>
        <trans-unit id="e6d7f297a1537c8c470bb1754fefd41df20e32ee" translate="yes" xml:space="preserve">
          <source>General category &quot;Pc&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「Pc」</target>
        </trans-unit>
        <trans-unit id="6c9a46645388b12163772f1307cbfed28e013f2b" translate="yes" xml:space="preserve">
          <source>General category &quot;Pd&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「Pd」</target>
        </trans-unit>
        <trans-unit id="047b798db60291a961bbe18b169d957b5e8f2ac5" translate="yes" xml:space="preserve">
          <source>General category &quot;Pe&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「Pe」</target>
        </trans-unit>
        <trans-unit id="3be1b8cac97eeb03e34849d57e62caad6a798de0" translate="yes" xml:space="preserve">
          <source>General category &quot;Pf&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「Pf」</target>
        </trans-unit>
        <trans-unit id="f28cc64fbce4cdefe6051ea49212cc4fe7ae6e3b" translate="yes" xml:space="preserve">
          <source>General category &quot;Pi&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「Pi」</target>
        </trans-unit>
        <trans-unit id="ea0f8c2c8c4aaf5e8874fc537f1b92fabfd83b14" translate="yes" xml:space="preserve">
          <source>General category &quot;Po&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「Po」</target>
        </trans-unit>
        <trans-unit id="e6ac096a85e292ce39b00b857c0903ea5e39458f" translate="yes" xml:space="preserve">
          <source>General category &quot;Ps&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「Ps」</target>
        </trans-unit>
        <trans-unit id="2b08ccd66bb2e2119f27b38b956c87ccafcd1bbc" translate="yes" xml:space="preserve">
          <source>General category &quot;Sc&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「Sc」</target>
        </trans-unit>
        <trans-unit id="875265e6a3ae354a48ee9b551342c6834462859a" translate="yes" xml:space="preserve">
          <source>General category &quot;Sk&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「Sk」</target>
        </trans-unit>
        <trans-unit id="1fe1e30af0d3ea99f97e67460fef543e37c2753b" translate="yes" xml:space="preserve">
          <source>General category &quot;Sm&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「Sm」</target>
        </trans-unit>
        <trans-unit id="443a5fada001e01121a65d80a1d54f9e97daa061" translate="yes" xml:space="preserve">
          <source>General category &quot;So&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「So」</target>
        </trans-unit>
        <trans-unit id="32eb327deae57fb982c7872b593b2b6b26bc8a9b" translate="yes" xml:space="preserve">
          <source>General category &quot;Zl&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「Zl」</target>
        </trans-unit>
        <trans-unit id="91da17fb5fbcd7c99bc1b5e9d498abeba9e0df66" translate="yes" xml:space="preserve">
          <source>General category &quot;Zp&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「Zp」</target>
        </trans-unit>
        <trans-unit id="117612c710e794318f15c0e6f4ab0b9c45c47361" translate="yes" xml:space="preserve">
          <source>General category &quot;Zs&quot; in the Unicode specification.</source>
          <target state="translated">Unicode 사양의 범용 카테고리 「Zs」</target>
        </trans-unit>
        <trans-unit id="20e6f238bae1caf72a2ca34c802a17fadd4cc9c3" translate="yes" xml:space="preserve">
          <source>Generally Swift argument labels and Objective-C selector pieces are mapped to Kotlin parameter names. Anyway these two concepts have different semantics, so sometimes Swift/Objective-C methods can be imported with a clashing Kotlin signature. In this case the clashing methods can be called from Kotlin using named arguments, e.g.:</source>
          <target state="translated">일반적으로 Swift 인수 레이블 및 Objective-C 선택기 조각은 Kotlin 매개 변수 이름에 매핑됩니다. 어쨌든이 두 개념은 서로 다른 의미를 가지므로 때로는 충돌하는 Kotlin 서명으로 Swift / Objective-C 메서드를 가져올 수 있습니다. 이 경우 Kotlin에서 명명 된 인수를 사용하여 충돌 방법을 호출 할 수 있습니다. 예 :</target>
        </trans-unit>
        <trans-unit id="f0cc05fd19df56e0eacc01af5e8e38d1225bfd83" translate="yes" xml:space="preserve">
          <source>Generally, avoid using &lt;code&gt;@param&lt;/code&gt; and &lt;code&gt;@return&lt;/code&gt; tags. Instead, incorporate the description of parameters and return values directly into the documentation comment, and add links to parameters wherever they are mentioned. Use &lt;code&gt;@param&lt;/code&gt; and &lt;code&gt;@return&lt;/code&gt; only when a lengthy description is required which doesn't fit into the flow of the main text.</source>
          <target state="translated">일반적으로 &lt;code&gt;@param&lt;/code&gt; 및 &lt;code&gt;@return&lt;/code&gt; 태그를 사용하지 마십시오 . 대신 매개 변수에 대한 설명과 값을 문서 주석에 직접 반환하고 언급 된 모든 위치에 매개 변수에 대한 링크를 추가하십시오. 본문의 흐름에 맞지 않는 긴 설명이 필요한 경우에만 &lt;code&gt;@param&lt;/code&gt; 및 &lt;code&gt;@return&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="29e3d514d55b6125bea56dda15b26eafa5f39066" translate="yes" xml:space="preserve">
          <source>Generally, the contents of a class is sorted in the following order:</source>
          <target state="translated">일반적으로 클래스의 내용은 다음 순서로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="d7fbe705690a6a1b73ca822febf65f9f439edf39" translate="yes" xml:space="preserve">
          <source>Generate .meta.js and .kjsm files with metadata. Use to create a library</source>
          <target state="translated">메타 데이터로 .meta.js 및 .kjsm 파일을 생성하십시오. 라이브러리를 만드는 데 사용</target>
        </trans-unit>
        <trans-unit id="001f8d08da61693a2c46468f4e9518d481110b30" translate="yes" xml:space="preserve">
          <source>Generate &lt;code&gt;.meta.js&lt;/code&gt; and &lt;code&gt;.kjsm&lt;/code&gt; files with metadata. Use this option when creating a JS library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="749ba44f18bc31e5613803f750e487c856af288a" translate="yes" xml:space="preserve">
          <source>Generate JS files for specific ECMA version</source>
          <target state="translated">특정 ECMA 버전에 대한 JS 파일 생성</target>
        </trans-unit>
        <trans-unit id="baffdfbdc7b7e90b403385bcfcad05060b54977d" translate="yes" xml:space="preserve">
          <source>Generate code for &lt;code&gt;a.plusAssign(b)&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;a.plusAssign(b)&lt;/code&gt; 대한 코드 생성 ;</target>
        </trans-unit>
        <trans-unit id="ca6737eca8bb7217a2a3d4f7aeadd4eef8e6cc44" translate="yes" xml:space="preserve">
          <source>Generate metadata for Java 1.8 reflection on method parameters</source>
          <target state="translated">메소드 매개 변수에 대한 Java 1.8 반영을위한 메타 데이터 생성</target>
        </trans-unit>
        <trans-unit id="737f7f190ef8fe985e848f35532ca3dd4e01d4a2" translate="yes" xml:space="preserve">
          <source>Generate metadata for Java 1.8 reflection on method parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183b9e807d281d2fcdfa940f891802dccbfe3d82" translate="yes" xml:space="preserve">
          <source>Generate no warnings</source>
          <target state="translated">경고를 생성하지 않습니다</target>
        </trans-unit>
        <trans-unit id="f70272b5aac2f09d0427a00ddf047afb46876629" translate="yes" xml:space="preserve">
          <source>Generate release &lt;code&gt;.dSYM&lt;/code&gt;s on Apple targets by default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250c962bc08b9b28e2eca7ecd5b00831756e4a37" translate="yes" xml:space="preserve">
          <source>Generate source map</source>
          <target state="translated">소스 맵 생성</target>
        </trans-unit>
        <trans-unit id="805c7fcf649a526b73dcdaa07f01ce7a66754439" translate="yes" xml:space="preserve">
          <source>Generate the source map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e121fd0c11320ddcadbde030de322eb06e47f01" translate="yes" xml:space="preserve">
          <source>Generated Framework Headers</source>
          <target state="translated">생성 된 프레임 워크 헤더</target>
        </trans-unit>
        <trans-unit id="f04b94c66b16d00a648fc6082eb3dfa21457f5ac" translate="yes" xml:space="preserve">
          <source>Generated Headers File</source>
          <target state="translated">생성 된 헤더 파일</target>
        </trans-unit>
        <trans-unit id="a484168d1b1d183dbb0f84d7d08359bdb29df447" translate="yes" xml:space="preserve">
          <source>Generated overloads for &lt;code&gt;@JvmOverloads&lt;/code&gt; on &lt;code&gt;open&lt;/code&gt; methods should be &lt;code&gt;final&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d946501e1e2ba7debd1406d8e243b228d0da85d2" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed between &lt;a href=&quot;../kotlin/-u-int/-m-i-n_-v-a-l-u-e&quot;&gt;UInt.MIN_VALUE&lt;/a&gt; and &lt;a href=&quot;../kotlin/-u-int/-m-a-x_-v-a-l-u-e&quot;&gt;UInt.MAX_VALUE&lt;/a&gt; (inclusive).</source>
          <target state="translated">&lt;a href=&quot;../kotlin/-u-int/-m-i-n_-v-a-l-u-e&quot;&gt;UInt.MIN_VALUE&lt;/a&gt; 와 &lt;a href=&quot;../kotlin/-u-int/-m-a-x_-v-a-l-u-e&quot;&gt;UInt.MAX_VALUE&lt;/a&gt; 사이에 균일하게 분포 된 &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; 임의 값을 생성합니다 (포함).</target>
        </trans-unit>
        <trans-unit id="5d92e2b8d802695176ccf8af3fa819c75baf685e" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%29%2Funtil&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">생성 &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UINT&lt;/a&gt; 균등 분배하여 임의의 값 &lt;code&gt;0&lt;/code&gt; (포함) 지정된 &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%29%2Funtil&quot;&gt;까지&lt;/a&gt; 바인딩 (배타적).</target>
        </trans-unit>
        <trans-unit id="a2c3610e21da179f1a8b45bbc1ed74b6576d1b06" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; (포함)과 지정된 &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt)/until&quot;&gt;until&lt;/a&gt; bound (배타적) 사이에 균일하게 분포 된 &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; 임의 값을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="c16c379abe1c61ef584ef9af40918bcd9ec2f049" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%2C+kotlin.UInt%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%2C+kotlin.UInt%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%2C+kotlin.UInt%29%2Ffrom&quot;&gt;from&lt;/a&gt; (포함)과 &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%2C+kotlin.UInt%29%2Funtil&quot;&gt;until&lt;/a&gt; (제외) 범위 사이에 균일하게 분포 된 &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; 임의 값을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="a6ba1fbed8d9e3fac55680d552d3665d4e152493" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt,%20kotlin.UInt)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt,%20kotlin.UInt)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt,%20kotlin.UInt)/from&quot;&gt;from&lt;/a&gt; (포함) 및 &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt,%20kotlin.UInt)/until&quot;&gt;until&lt;/a&gt; (배타적) 경계 사이에 균일하게 분포 된 &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; 임의 값을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="4c70c93a911c0b7e6438702d76fce2c8ea628c12" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.ranges.UIntRange%29%2Frange&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</source>
          <target state="translated">생성 &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UINT&lt;/a&gt; 균일 분포 지정된 랜덤 값 &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.ranges.UIntRange%29%2Frange&quot;&gt;범위&lt;/a&gt; : 발 &lt;code&gt;range.start&lt;/code&gt; 포함하는 &lt;code&gt;range.endInclusive&lt;/code&gt; 포함.</target>
        </trans-unit>
        <trans-unit id="8dd65cae72f943e49cc2ae41331bf9d1f69250ba" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.ranges.UIntRange)/range&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</source>
          <target state="translated">생성 &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UINT&lt;/a&gt; 균일 분포 지정된 랜덤 값 &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.ranges.UIntRange)/range&quot;&gt;범위&lt;/a&gt; : 발 &lt;code&gt;range.start&lt;/code&gt; 포함하는 &lt;code&gt;range.endInclusive&lt;/code&gt; 포함.</target>
        </trans-unit>
        <trans-unit id="757b30cdacd9eaaf9012afe9c2732ea102b190e3" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed between &lt;a href=&quot;../kotlin/-u-long/-m-i-n_-v-a-l-u-e&quot;&gt;ULong.MIN_VALUE&lt;/a&gt; and &lt;a href=&quot;../kotlin/-u-long/-m-a-x_-v-a-l-u-e&quot;&gt;ULong.MAX_VALUE&lt;/a&gt; (inclusive).</source>
          <target state="translated">&lt;a href=&quot;../kotlin/-u-long/-m-i-n_-v-a-l-u-e&quot;&gt;ULong.MIN_VALUE&lt;/a&gt; 와 &lt;a href=&quot;../kotlin/-u-long/-m-a-x_-v-a-l-u-e&quot;&gt;ULong.MAX_VALUE&lt;/a&gt; 사이에 균일하게 분포 된 &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; 랜덤 값을 생성합니다 (포함).</target>
        </trans-unit>
        <trans-unit id="fa35e4a57d086459b2d86d7150d6deae9f1ebdac" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%29%2Funtil&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">생성 &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULONG&lt;/a&gt; 임의의 균등 분배 값 &lt;code&gt;0&lt;/code&gt; (포함) 지정된 &lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%29%2Funtil&quot;&gt;까지&lt;/a&gt; 바인딩 (배타적).</target>
        </trans-unit>
        <trans-unit id="33144cb69e6dde064e67678e0b37e02227d2556e" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">생성 &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULONG&lt;/a&gt; 임의의 균등 분배 값 &lt;code&gt;0&lt;/code&gt; (포함) 지정된 &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong)/until&quot;&gt;까지&lt;/a&gt; 바인딩 (배타적).</target>
        </trans-unit>
        <trans-unit id="86a5293679cfc4d641d91c7745d099cc5355381d" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%2C+kotlin.ULong%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%2C+kotlin.ULong%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">생성 &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULONG&lt;/a&gt; 임의의 값이 균일 지정된 사이에 분포 &lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%2C+kotlin.ULong%29%2Ffrom&quot;&gt;에서&lt;/a&gt; (포함)과 &lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%2C+kotlin.ULong%29%2Funtil&quot;&gt;까지&lt;/a&gt; (제외) 경계입니다.</target>
        </trans-unit>
        <trans-unit id="571c162bfe41b0090519000961409bf2cf295446" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong,%20kotlin.ULong)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong,%20kotlin.ULong)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong,%20kotlin.ULong)/from&quot;&gt;from&lt;/a&gt; (포함) 및 &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong,%20kotlin.ULong)/until&quot;&gt;until&lt;/a&gt; (배타적) 경계 사이에 균일하게 분포 된 &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; 임의 값을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="a6da6d1f8e6d83268cfddc1ca01d028666d50d99" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ranges.ULongRange%29%2Frange&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</source>
          <target state="translated">생성 &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULONG&lt;/a&gt; 균일 분포 지정된 임의의 값 &lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ranges.ULongRange%29%2Frange&quot;&gt;의 범위&lt;/a&gt; 에서 : &lt;code&gt;range.start&lt;/code&gt; 를 포함하는 &lt;code&gt;range.endInclusive&lt;/code&gt; 를 포함한다.</target>
        </trans-unit>
        <trans-unit id="5e80f4926dc7d92cc6dee1e8e9af3efd28995f96" translate="yes" xml:space="preserve">
          <source>Generates a &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ranges.ULongRange)/range&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</source>
          <target state="translated">생성 &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULONG&lt;/a&gt; 균일 분포 지정된 임의의 값 &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ranges.ULongRange)/range&quot;&gt;의 범위&lt;/a&gt; 에서 : &lt;code&gt;range.start&lt;/code&gt; 를 포함하는 &lt;code&gt;range.endInclusive&lt;/code&gt; 를 포함한다.</target>
        </trans-unit>
        <trans-unit id="9d6b5d91e9590b09d5869bda06c3e6b0bf73ab0a" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between 0 (inclusive) and &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive).</source>
          <target state="translated">0 (포함)과 &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%29%2Funtil&quot;&gt;까지&lt;/a&gt; (제외) 사이에 균일하게 분포 된 &lt;code&gt;Double&lt;/code&gt; 난수 값을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="91641ec2d14eb7e455748acbcf43e0b4c007143e" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between 0 (inclusive) and &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble(kotlin.Double)/until&quot;&gt;until&lt;/a&gt; (exclusive).</source>
          <target state="translated">0 (포함)과 &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble(kotlin.Double)/until&quot;&gt;until&lt;/a&gt; (제외) 사이에 균일하게 분포 된 &lt;code&gt;Double&lt;/code&gt; 임의 값을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="ec5869eeef0508f5a390633c4af337b342951d4d" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between 0 (inclusive) and &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive).</source>
          <target state="translated">0 (포함)과 &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%29%2Funtil&quot;&gt;까지&lt;/a&gt; (제외) 사이에 균일하게 분포 된 &lt;code&gt;Double&lt;/code&gt; 난수 값을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="68dd638f66fc56c5c11edb82000c96813df7cf4b" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between 0 (inclusive) and &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble(kotlin.Double)/until&quot;&gt;until&lt;/a&gt; (exclusive).</source>
          <target state="translated">0 (포함)과 &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble(kotlin.Double)/until&quot;&gt;until&lt;/a&gt; (제외) 사이에 균일하게 분포 된 &lt;code&gt;Double&lt;/code&gt; 임의 값을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="23183f2a00cc05d170d3187fadb1b4c9530eeaa1" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%2C+kotlin.Double%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%2C+kotlin.Double%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%2C+kotlin.Double%29%2Ffrom&quot;&gt;from&lt;/a&gt; (포함)과 &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%2C+kotlin.Double%29%2Funtil&quot;&gt;until&lt;/a&gt; (제외) 범위 사이에 균일하게 분포 된 &lt;code&gt;Double&lt;/code&gt; 난수 값을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="ef7ac639e2e7ec84ae2359772ffc6d7c437f649c" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble(kotlin.Double,%20kotlin.Double)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble(kotlin.Double,%20kotlin.Double)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">생성 &lt;code&gt;Double&lt;/code&gt; 균일 지정된 사이에 분산 임의의 값 &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble(kotlin.Double,%20kotlin.Double)/from&quot;&gt;에서&lt;/a&gt; (포함)과 &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble(kotlin.Double,%20kotlin.Double)/until&quot;&gt;까지&lt;/a&gt; (제외) 경계를.</target>
        </trans-unit>
        <trans-unit id="2c885277e3d75b6a7d820f8993b27b0ea1ed1831" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%2C+kotlin.Double%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%2C+kotlin.Double%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%2C+kotlin.Double%29%2Ffrom&quot;&gt;from&lt;/a&gt; (포함)과 &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%2C+kotlin.Double%29%2Funtil&quot;&gt;until&lt;/a&gt; (제외) 범위 사이에 균일하게 분포 된 &lt;code&gt;Double&lt;/code&gt; 난수 값을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="a4f7d5668372b6590c7eb64a6f021af20dc8aa57" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Double&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble(kotlin.Double,%20kotlin.Double)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble(kotlin.Double,%20kotlin.Double)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">생성 &lt;code&gt;Double&lt;/code&gt; 균일 지정된 사이에 분산 임의의 값 &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble(kotlin.Double,%20kotlin.Double)/from&quot;&gt;에서&lt;/a&gt; (포함)과 &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble(kotlin.Double,%20kotlin.Double)/until&quot;&gt;까지&lt;/a&gt; (제외) 경계를.</target>
        </trans-unit>
        <trans-unit id="5a6b4f88da0f76f60921086afa057e783981746d" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong%28kotlin.Long%29%2Funtil&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">생성 &lt;code&gt;Long&lt;/code&gt; 균일하게 분배 임의의 값 &lt;code&gt;0&lt;/code&gt; (포함) 및 지정된 &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong%28kotlin.Long%29%2Funtil&quot;&gt;때까지&lt;/a&gt; 바인딩 (독점).</target>
        </trans-unit>
        <trans-unit id="4198d2f02645aa2957746f80f20b6382783fc050" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong(kotlin.Long)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; (포함)과 지정된 &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong(kotlin.Long)/until&quot;&gt;until&lt;/a&gt; bound (제외) 사이에 균일하게 분포 된 &lt;code&gt;Long&lt;/code&gt; 임의 값을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="60c65d3b69ec73d8ccba96a172c16774c259c15d" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong%28kotlin.Long%29%2Funtil&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">생성 &lt;code&gt;Long&lt;/code&gt; 균일하게 분배 임의의 값 &lt;code&gt;0&lt;/code&gt; (포함) 및 지정된 &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong%28kotlin.Long%29%2Funtil&quot;&gt;때까지&lt;/a&gt; 바인딩 (독점).</target>
        </trans-unit>
        <trans-unit id="d96f28ee28e4008fd557d78da4f4444c595a9d9c" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong(kotlin.Long)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; (포함)과 지정된 &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong(kotlin.Long)/until&quot;&gt;until&lt;/a&gt; bound (제외) 사이에 균일하게 분포 된 &lt;code&gt;Long&lt;/code&gt; 임의 값을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="ab109e5e8d3d0e327a16d9897abb1724c9e3febe" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between &lt;code&gt;Long.MIN_VALUE&lt;/code&gt; and &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; (inclusive).</source>
          <target state="translated">&lt;code&gt;Long.MIN_VALUE&lt;/code&gt; 와 &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; 사이에 균일하게 분포 된 &lt;code&gt;Long&lt;/code&gt; 임의 값을 생성합니다 (포함).</target>
        </trans-unit>
        <trans-unit id="e607b06de9bc2f244a31f0349072809203ea1b71" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong%28kotlin.Long%2C+kotlin.Long%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong%28kotlin.Long%2C+kotlin.Long%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong%28kotlin.Long%2C+kotlin.Long%29%2Ffrom&quot;&gt;시작&lt;/a&gt; (포함)과 &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong%28kotlin.Long%2C+kotlin.Long%29%2Funtil&quot;&gt;끝&lt;/a&gt; (제외) 범위 사이에 균일하게 분포 된 &lt;code&gt;Long&lt;/code&gt; 임의 값을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="f753b1cf30a047d83984aa4faf8120492d72c062" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong(kotlin.Long,%20kotlin.Long)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong(kotlin.Long,%20kotlin.Long)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">생성 &lt;code&gt;Long&lt;/code&gt; 임의의 값이 균일 지정된 사이에 분포 &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong(kotlin.Long,%20kotlin.Long)/from&quot;&gt;에서&lt;/a&gt; (포함)과 &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong(kotlin.Long,%20kotlin.Long)/until&quot;&gt;까지&lt;/a&gt; (제외) 경계입니다.</target>
        </trans-unit>
        <trans-unit id="e9f12bef09f7fda69f9bcf34d36b4a468e06795d" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong%28kotlin.Long%2C+kotlin.Long%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong%28kotlin.Long%2C+kotlin.Long%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong%28kotlin.Long%2C+kotlin.Long%29%2Ffrom&quot;&gt;시작&lt;/a&gt; (포함)과 &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong%28kotlin.Long%2C+kotlin.Long%29%2Funtil&quot;&gt;끝&lt;/a&gt; (제외) 범위 사이에 균일하게 분포 된 &lt;code&gt;Long&lt;/code&gt; 임의 값을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="8243c6d6b812487d1a1813dc5042ebef33d06cec" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong(kotlin.Long,%20kotlin.Long)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong(kotlin.Long,%20kotlin.Long)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">생성 &lt;code&gt;Long&lt;/code&gt; 임의의 값이 균일 지정된 사이에 분포 &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong(kotlin.Long,%20kotlin.Long)/from&quot;&gt;에서&lt;/a&gt; (포함)과 &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong(kotlin.Long,%20kotlin.Long)/until&quot;&gt;까지&lt;/a&gt; (제외) 경계입니다.</target>
        </trans-unit>
        <trans-unit id="2ca32feb98c1f1a296ae0d442d2374d09519129f" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-long#kotlin.random%24nextLong%28kotlin.random.Random%2C+kotlin.ranges.LongRange%29%2Frange&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</source>
          <target state="translated">생성 &lt;code&gt;Long&lt;/code&gt; 균일하게 지정된 배포 임의의 값 &lt;a href=&quot;next-long#kotlin.random%24nextLong%28kotlin.random.Random%2C+kotlin.ranges.LongRange%29%2Frange&quot;&gt;의 범위&lt;/a&gt; 에서 : &lt;code&gt;range.start&lt;/code&gt; 의 포함에 &lt;code&gt;range.endInclusive&lt;/code&gt; 를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="fe2ce194a7ecf13435936d2c4bee554f03333334" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;Long&lt;/code&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-long#kotlin.random%24nextLong(kotlin.random.Random,%20kotlin.ranges.LongRange)/range&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</source>
          <target state="translated">생성 &lt;code&gt;Long&lt;/code&gt; 균일하게 지정된 배포 임의의 값 &lt;a href=&quot;next-long#kotlin.random%24nextLong(kotlin.random.Random,%20kotlin.ranges.LongRange)/range&quot;&gt;의 범위&lt;/a&gt; 에서 : &lt;code&gt;range.start&lt;/code&gt; 의 포함에 &lt;code&gt;range.endInclusive&lt;/code&gt; 를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="0f136df27ab0868f4bf0a7576712f622b78145c2" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt%28kotlin.Int%29%2Funtil&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">생성 &lt;code&gt;Int&lt;/code&gt; 임의의 균등 분배 값 &lt;code&gt;0&lt;/code&gt; (포함) 지정된 &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt%28kotlin.Int%29%2Funtil&quot;&gt;까지&lt;/a&gt; 바인딩 (배타적).</target>
        </trans-unit>
        <trans-unit id="67f97d87f9890969756382145b17b9c9839973c1" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt(kotlin.Int)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; (포함)과 지정된 &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt(kotlin.Int)/until&quot;&gt;until&lt;/a&gt; bound (배타적) 사이에 균일하게 분포 된 &lt;code&gt;Int&lt;/code&gt; 임의 값을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="ec98b0a06fdbd7a82ef2f666365c49873e613a82" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt%28kotlin.Int%29%2Funtil&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">생성 &lt;code&gt;Int&lt;/code&gt; 임의의 균등 분배 값 &lt;code&gt;0&lt;/code&gt; (포함) 지정된 &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt%28kotlin.Int%29%2Funtil&quot;&gt;까지&lt;/a&gt; 바인딩 (배타적).</target>
        </trans-unit>
        <trans-unit id="51d973853786060c9dde56f61e8065ed21f9c9aa" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between &lt;code&gt;0&lt;/code&gt; (inclusive) and the specified &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt(kotlin.Int)/until&quot;&gt;until&lt;/a&gt; bound (exclusive).</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; (포함)과 지정된 &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt(kotlin.Int)/until&quot;&gt;until&lt;/a&gt; bound (배타적) 사이에 균일하게 분포 된 &lt;code&gt;Int&lt;/code&gt; 임의 값을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="04f70d4706957e55f4983127f5ed29b9491f0f07" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between &lt;code&gt;Int.MIN_VALUE&lt;/code&gt; and &lt;code&gt;Int.MAX_VALUE&lt;/code&gt; (inclusive).</source>
          <target state="translated">&lt;code&gt;Int.MIN_VALUE&lt;/code&gt; 와 &lt;code&gt;Int.MAX_VALUE&lt;/code&gt; 사이에 균일하게 분포 된 &lt;code&gt;Int&lt;/code&gt; 난수 값을 생성합니다 (포함).</target>
        </trans-unit>
        <trans-unit id="476b2cb5400c0e512ae51d0729074ed01ac8bda4" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt%28kotlin.Int%2C+kotlin.Int%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt%28kotlin.Int%2C+kotlin.Int%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt%28kotlin.Int%2C+kotlin.Int%29%2Ffrom&quot;&gt;from&lt;/a&gt; (포함)과 &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt%28kotlin.Int%2C+kotlin.Int%29%2Funtil&quot;&gt;until&lt;/a&gt; (제외) 경계 사이에 균일하게 분포 된 &lt;code&gt;Int&lt;/code&gt; 난수 값을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="38beaf15a8b3cdd762f7d06821c7323070497438" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt(kotlin.Int,%20kotlin.Int)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt(kotlin.Int,%20kotlin.Int)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt(kotlin.Int,%20kotlin.Int)/from&quot;&gt;from&lt;/a&gt; (포함 ) 경계 와 &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt(kotlin.Int,%20kotlin.Int)/until&quot;&gt;until&lt;/a&gt; (제외) 경계 사이에 균일하게 분포 된 &lt;code&gt;Int&lt;/code&gt; 임의 값을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="0de235eec64bc5d3abe57854cae11f52092981c6" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt%28kotlin.Int%2C+kotlin.Int%29%2Ffrom&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt%28kotlin.Int%2C+kotlin.Int%29%2Funtil&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt%28kotlin.Int%2C+kotlin.Int%29%2Ffrom&quot;&gt;from&lt;/a&gt; (포함)과 &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt%28kotlin.Int%2C+kotlin.Int%29%2Funtil&quot;&gt;until&lt;/a&gt; (제외) 경계 사이에 균일하게 분포 된 &lt;code&gt;Int&lt;/code&gt; 난수 값을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="9cab4b63cd5507a5459c8b009d31e0176441cc9b" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed between the specified &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt(kotlin.Int,%20kotlin.Int)/from&quot;&gt;from&lt;/a&gt; (inclusive) and &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt(kotlin.Int,%20kotlin.Int)/until&quot;&gt;until&lt;/a&gt; (exclusive) bounds.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt(kotlin.Int,%20kotlin.Int)/from&quot;&gt;from&lt;/a&gt; (포함 ) 경계 와 &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt(kotlin.Int,%20kotlin.Int)/until&quot;&gt;until&lt;/a&gt; (제외) 경계 사이에 균일하게 분포 된 &lt;code&gt;Int&lt;/code&gt; 임의 값을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="1c5044362d31a36128faeaa0ad8440d54a5b8752" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-int#kotlin.random%24nextInt%28kotlin.random.Random%2C+kotlin.ranges.IntRange%29%2Frange&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</source>
          <target state="translated">생성 &lt;code&gt;Int&lt;/code&gt; 균일 분포 지정된 임의의 값 &lt;a href=&quot;next-int#kotlin.random%24nextInt%28kotlin.random.Random%2C+kotlin.ranges.IntRange%29%2Frange&quot;&gt;의 범위&lt;/a&gt; 에서 : &lt;code&gt;range.start&lt;/code&gt; 를 포함하는 &lt;code&gt;range.endInclusive&lt;/code&gt; 를 포함한다.</target>
        </trans-unit>
        <trans-unit id="ec707b0430137fd2aa951b831dba3c6acda44ab7" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; random value uniformly distributed in the specified &lt;a href=&quot;next-int#kotlin.random%24nextInt(kotlin.random.Random,%20kotlin.ranges.IntRange)/range&quot;&gt;range&lt;/a&gt;: from &lt;code&gt;range.start&lt;/code&gt; inclusive to &lt;code&gt;range.endInclusive&lt;/code&gt; inclusive.</source>
          <target state="translated">생성 &lt;code&gt;Int&lt;/code&gt; 균일 분포 지정된 임의의 값 &lt;a href=&quot;next-int#kotlin.random%24nextInt(kotlin.random.Random,%20kotlin.ranges.IntRange)/range&quot;&gt;의 범위&lt;/a&gt; 에서 : &lt;code&gt;range.start&lt;/code&gt; 를 포함하는 &lt;code&gt;range.endInclusive&lt;/code&gt; 를 포함한다.</target>
        </trans-unit>
        <trans-unit id="0409d26d25d18313944791fd4e9f7071a9c95419" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; whose lower &lt;a href=&quot;../next-bits#kotlin.random.Random%24nextBits%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; bits are filled with random values and the remaining upper bits are zero.</source>
          <target state="translated">하위 &lt;a href=&quot;../next-bits#kotlin.random.Random%24nextBits%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; 비트가 임의의 값으로 채워지고 나머지 상위 비트가 0 인 &lt;code&gt;Int&lt;/code&gt; 를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="786960366d9c75f4e056e7152000d23d9f8dd21c" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; whose lower &lt;a href=&quot;../next-bits#kotlin.random.Random%24nextBits(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; bits are filled with random values and the remaining upper bits are zero.</source>
          <target state="translated">하위 &lt;a href=&quot;../next-bits#kotlin.random.Random%24nextBits(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; 비트가 임의의 값으로 채워지고 나머지 상위 비트가 0 인 &lt;code&gt;Int&lt;/code&gt; 를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="ed35029e5017af43b400a43a4628d6b0d880f06d" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; whose lower &lt;a href=&quot;next-bits#kotlin.random.Random%24nextBits%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; bits are filled with random values and the remaining upper bits are zero.</source>
          <target state="translated">하위 &lt;a href=&quot;next-bits#kotlin.random.Random%24nextBits%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; 비트가 임의의 값으로 채워지고 나머지 상위 비트가 0 인 &lt;code&gt;Int&lt;/code&gt; 를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="5c4a56d82e432c297805d4d085dc1fe917016419" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;Int&lt;/code&gt; whose lower &lt;a href=&quot;next-bits#kotlin.random.Random%24nextBits(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; bits are filled with random values and the remaining upper bits are zero.</source>
          <target state="translated">하위 &lt;a href=&quot;next-bits#kotlin.random.Random%24nextBits(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; 비트가 임의의 값으로 채워지고 나머지 상위 비트가 0 인 &lt;code&gt;Int&lt;/code&gt; 를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="1fd83bc9d972c10c11aa356e5d5814078cadb5db" translate="yes" xml:space="preserve">
          <source>Generating Bindings</source>
          <target state="translated">바인딩 생성</target>
        </trans-unit>
        <trans-unit id="1b570d05016f6a7ca8005a2f5e7a392d74fdcfce" translate="yes" xml:space="preserve">
          <source>Generating Documentation</source>
          <target state="translated">문서 생성</target>
        </trans-unit>
        <trans-unit id="d383d1659362e7239295fb9a0f5f6c1929f87149" translate="yes" xml:space="preserve">
          <source>Generating Kotlin sources</source>
          <target state="translated">코 틀린 소스 생성</target>
        </trans-unit>
        <trans-unit id="8551aaa91b99dd56e53754d86f9c806a66101455" translate="yes" xml:space="preserve">
          <source>Generating documentation</source>
          <target state="translated">문서 생성</target>
        </trans-unit>
        <trans-unit id="2c97da3b7f822c06e7d5650b0879d8583f711e9f" translate="yes" xml:space="preserve">
          <source>Generating external declarations at build time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b50b1155789f10b71f1d8e7eed8e5f96125848" translate="yes" xml:space="preserve">
          <source>Generating markup with Kotlin code, such as &lt;a href=&quot;https://github.com/Kotlin/kotlinx.html&quot;&gt;HTML&lt;/a&gt; or XML;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Kotlin/kotlinx.html&quot;&gt;HTML&lt;/a&gt; 또는 XML 과 같은 Kotlin 코드를 사용하여 마크 업 생성</target>
        </trans-unit>
        <trans-unit id="ecabf0ae993c552c88079cae877c4784c545939c" translate="yes" xml:space="preserve">
          <source>Generating source map</source>
          <target state="translated">소스 맵 생성</target>
        </trans-unit>
        <trans-unit id="c551db814cb760b3eeb8c8927c9cd28545c1386e" translate="yes" xml:space="preserve">
          <source>Generating the Documentation</source>
          <target state="translated">문서 생성</target>
        </trans-unit>
        <trans-unit id="2968d68104a89b44e3e96456644969cfbe30ace4" translate="yes" xml:space="preserve">
          <source>Generation of default methods is only possible with JVM target bytecode version 1.8 (&lt;code&gt;-jvm-target 1.8&lt;/code&gt;) or higher.</source>
          <target state="translated">기본 메소드 생성은 JVM 대상 바이트 코드 버전 1.8 ( &lt;code&gt;-jvm-target 1.8&lt;/code&gt; ) 이상 에서만 가능합니다 .</target>
        </trans-unit>
        <trans-unit id="83082f46072d254fd933bf6e78414552f2b12960" translate="yes" xml:space="preserve">
          <source>Generic Functions</source>
          <target state="translated">일반 함수</target>
        </trans-unit>
        <trans-unit id="c22e5721464820e7a81c36569ec53083ecc8eb34" translate="yes" xml:space="preserve">
          <source>Generic constraints</source>
          <target state="translated">일반 제약</target>
        </trans-unit>
        <trans-unit id="cce03127b5a38d4eca19d77a229234d826517c5d" translate="yes" xml:space="preserve">
          <source>Generic enum value access</source>
          <target state="translated">일반 열거 형 값 액세스</target>
        </trans-unit>
        <trans-unit id="acc8a030fcc7a80f6f90bb435dde9b34b92c8a04" translate="yes" xml:space="preserve">
          <source>Generic feature support for Objc and Swift differ from Kotlin, so the translation will inevitably lose some information, but the features supported retain meaningful information.</source>
          <target state="translated">Objc 및 Swift에 대한 일반 기능 지원은 Kotlin과 다르므로 번역시 일부 정보가 손실되지만 지원되는 기능은 의미있는 정보를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="bac5ea8efabcabc15d0439c3f90e7862ba42db2b" translate="yes" xml:space="preserve">
          <source>Generic feature support for Objective-C and Swift differ from Kotlin, so the translation will inevitably lose some information, but the features supported retain meaningful information.</source>
          <target state="translated">Objective-C 및 Swift에 대한 일반 기능 지원은 Kotlin과 다르므로 번역에서 필연적으로 일부 정보가 손실되지만 지원되는 기능은 의미있는 정보를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="37f5365cdbef14515226dcd384583192170cc525" translate="yes" xml:space="preserve">
          <source>Generic functions</source>
          <target state="translated">일반 함수</target>
        </trans-unit>
        <trans-unit id="e385420208351239c9848b5aa01ee2121d573c3a" translate="yes" xml:space="preserve">
          <source>Generic type parameter (unsupported yet)</source>
          <target state="translated">일반 유형 매개 변수 (아직 지원되지 않음)</target>
        </trans-unit>
        <trans-unit id="92a2f746b7830fb83eba6c4cddd355833efd75f2" translate="yes" xml:space="preserve">
          <source>Generic type parameters</source>
          <target state="translated">일반 유형 매개 변수</target>
        </trans-unit>
        <trans-unit id="4f81bf48fda6a667e13ada0305e9584972f3dbe7" translate="yes" xml:space="preserve">
          <source>Generic types used for Java interoperation with incorrect nullability, e.g. a piece of Java code might add &lt;code&gt;null&lt;/code&gt; into a Kotlin &lt;code&gt;MutableList&amp;lt;String&amp;gt;&lt;/code&gt;, meaning that &lt;code&gt;MutableList&amp;lt;String?&amp;gt;&lt;/code&gt; should be used for working with it;</source>
          <target state="translated">잘못된 &lt;code&gt;MutableList&amp;lt;String&amp;gt;&lt;/code&gt; 과 함께 Java 상호 운용에 사용되는 일반 유형 (예 : Java 코드 일부가 Kotlin MutableList &amp;lt;String&amp;gt; 에 &lt;code&gt;null&lt;/code&gt; 을 추가 할 수 있습니다 . 즉, &lt;code&gt;MutableList&amp;lt;String?&amp;gt;&lt;/code&gt; 을 사용하여 작업해야합니다.</target>
        </trans-unit>
        <trans-unit id="80dadd86173d0ff3979257793d4e45beb238b6a2" translate="yes" xml:space="preserve">
          <source>Generics</source>
          <target state="translated">Generics</target>
        </trans-unit>
        <trans-unit id="cca07acad0dc1efd73fdb4cb240cc7cfd1e90717" translate="yes" xml:space="preserve">
          <source>Generics are currently not enabled by default. To have the framework header written with generics, add an experimental flag to the compiler config:</source>
          <target state="translated">제네릭은 현재 기본적으로 활성화되어 있지 않습니다. 프레임 워크 헤더를 제네릭으로 작성하려면 컴파일러 설정에 실험 플래그를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="55fd76732b46ad77052ac2d3873198cc27caa1b6" translate="yes" xml:space="preserve">
          <source>Generics can only be defined on classes, not on interfaces (protocols in Objc and Swift) or functions.</source>
          <target state="translated">제네릭은 인터페이스 (Objc 및 Swift의 프로토콜) 또는 함수가 아닌 클래스에서만 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7dda3c2f67629977875e11f967ee30a54f78a53" translate="yes" xml:space="preserve">
          <source>Generics can only be defined on classes, not on interfaces (protocols in Objective-C and Swift) or functions.</source>
          <target state="translated">제네릭은 인터페이스 (Objective-C 및 Swift의 프로토콜) 또는 함수가 아닌 클래스에서만 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e94ba5be90faaf690548102545dc0952f060022" translate="yes" xml:space="preserve">
          <source>GeometryUtils</source>
          <target state="translated">GeometryUtils</target>
        </trans-unit>
        <trans-unit id="4e3fb78e17a8387a0dee01367cbbd69a1775c579" translate="yes" xml:space="preserve">
          <source>Get a byte from the mutable data.</source>
          <target state="translated">변경 가능한 데이터에서 바이트를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="bfab0204422bfeb94ae7d9f7a9237c9d9a1e7ba4" translate="yes" xml:space="preserve">
          <source>Get a full report that contains the state of each coroutine and its stack. To obtain it, right-click inside the &lt;strong&gt;Coroutines&lt;/strong&gt; tab, and then click &lt;strong&gt;Get Coroutines Dump&lt;/strong&gt;.</source>
          <target state="translated">각 코 루틴의 상태와 스택이 포함 된 전체 보고서를 가져옵니다. 이를 얻으려면 &lt;strong&gt;Coroutines&lt;/strong&gt; 탭 내부를 마우스 오른쪽 버튼으로 클릭 한 다음 &lt;strong&gt;Get Coroutines Dump&lt;/strong&gt; 를 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="97255b26e50ef02686cad7f6fc1ee00930f7d4a3" translate="yes" xml:space="preserve">
          <source>Get first item of a possibly empty collection</source>
          <target state="translated">비어있는 컬렉션의 첫 번째 항목 가져 오기</target>
        </trans-unit>
        <trans-unit id="f94eb63ea7b5c688c7d367da8144aa72283d06a2" translate="yes" xml:space="preserve">
          <source>Get started with Kotlin Multiplatform Mobile (KMM)</source>
          <target state="translated">Kotlin Multiplatform Mobile (KMM) 시작하기</target>
        </trans-unit>
        <trans-unit id="faf571ccb638eecee3197f110247a2246bab11e9" translate="yes" xml:space="preserve">
          <source>Get started with Kotlin/JS for React</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3e1f71917fbb03ccf0e7c1221d8ba9c76bdecf" translate="yes" xml:space="preserve">
          <source>Get started with Kotlin/Native using IntelliJ IDEA</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e1b35c387fa63896999438c72ee91795fb8ecd" translate="yes" xml:space="preserve">
          <source>GetNotificationOptions</source>
          <target state="translated">GetNotificationOptions</target>
        </trans-unit>
        <trans-unit id="00112e9e707db49f0a0f93f1ee129c6efe3c1bc4" translate="yes" xml:space="preserve">
          <source>GetRootNodeOptions</source>
          <target state="translated">GetRootNodeOptions</target>
        </trans-unit>
        <trans-unit id="0c7c6733bfd36f14bb53c13bb7a5f327d6e85555" translate="yes" xml:space="preserve">
          <source>GetSVGDocument</source>
          <target state="translated">GetSVGDocument</target>
        </trans-unit>
        <trans-unit id="1c29cd0a72813c07e82b51cdf61ab34e19b8d38a" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-char-at#kotlin.native%24getCharAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-char-at#kotlin.native%24getCharAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="49b054960ff26f54ffbb1b4ce10fe0dffa2b6894" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-char-at#kotlin.native%24getCharAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-char-at#kotlin.native%24getCharAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="12c146ab92ff828f48210bfc29f2a0b851cff183" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-double-at#kotlin.native%24getDoubleAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-double-at#kotlin.native%24getDoubleAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 을 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="1f529825faff1b1381005dfcdc07db44e0dce4c5" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-double-at#kotlin.native%24getDoubleAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-double-at#kotlin.native%24getDoubleAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 을 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="c613a964720f0d6b16c4f6f3e24ca409a93e230b" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-float-at#kotlin.native%24getFloatAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-float-at#kotlin.native%24getFloatAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="601935ff15204ec1fc75fdb33f0ddb75d3c32e1e" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-float-at#kotlin.native%24getFloatAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-float-at#kotlin.native%24getFloatAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="e40860a0e917d0b30df1c353bdab3718cc1a5cae" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-int-at#kotlin.native%24getIntAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-int-at#kotlin.native%24getIntAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="57657e63af1c3d11183b11147cc642f679e87be6" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-int-at#kotlin.native%24getIntAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-int-at#kotlin.native%24getIntAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="ba9e4dffcc804ef80ace24233a9a283d9ee2413e" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-long-at#kotlin.native%24getLongAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-long-at#kotlin.native%24getLongAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 을 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="e34ce9f4a9cf96bdfab2bc1915bf1ef9c4aa59b4" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-long-at#kotlin.native%24getLongAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-long-at#kotlin.native%24getLongAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 을 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="050c879d6a9b25698d6d451f3f94af42b69689a3" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-short-at#kotlin.native%24getShortAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">가져옵니다 &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;쇼트&lt;/a&gt; 의에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;이 ByteArray&lt;/a&gt; 지정된 인덱스에서 바이트 버퍼 &lt;a href=&quot;../../kotlin.native/get-short-at#kotlin.native%24getShortAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d86e4ff6a657a1b0f2d8a5e25ddfb8a897e55615" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-short-at#kotlin.native%24getShortAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-short-at#kotlin.native%24getShortAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="a3b81bd33b6cd037160b4cec0ac8e3dda6d1f79b" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-char-at#kotlin.native%24getCharAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-char-at#kotlin.native%24getCharAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../kotlin/-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="1f8022c3c9bee45cfe140c1c30cf3fdd5eed4178" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-char-at#kotlin.native%24getCharAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-char-at#kotlin.native%24getCharAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../kotlin/-char/index#kotlin.Char&quot;&gt;Char&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="0a9274c2e88dd117f1562e9fb7853c1bb8a76f52" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-double-at#kotlin.native%24getDoubleAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-double-at#kotlin.native%24getDoubleAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 을 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="b2c0932268f392529c7267cbe6bd33aacf1c5ac0" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-double-at#kotlin.native%24getDoubleAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-double-at#kotlin.native%24getDoubleAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 을 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="05f14be5d64ee1f27a2c3eebdfd84da241f1b7b5" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-float-at#kotlin.native%24getFloatAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-float-at#kotlin.native%24getFloatAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="b47fbfb16819fea890346bf56370b10e0fe6b09d" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-float-at#kotlin.native%24getFloatAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-float-at#kotlin.native%24getFloatAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="19b181f7974529f4fcfdfb7c7df609deb054c407" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-int-at#kotlin.native%24getIntAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-int-at#kotlin.native%24getIntAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../kotlin/-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="cba0729c202f994b45075bee2a230e3b803ee8d9" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-int-at#kotlin.native%24getIntAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-int-at#kotlin.native%24getIntAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../kotlin/-int/index#kotlin.Int&quot;&gt;Int&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="58b0897e8884a67298867d9626c28bef8ba34b98" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-long-at#kotlin.native%24getLongAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-long-at#kotlin.native%24getLongAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../kotlin/-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 을 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="65ded6c3e5b39175169799b69105c25d38f74bba" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-long-at#kotlin.native%24getLongAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-long-at#kotlin.native%24getLongAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../kotlin/-long/index#kotlin.Long&quot;&gt;Long&lt;/a&gt; 을 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="77ab2f99d15b02d7c8aede4c088766c187e76fbe" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-short-at#kotlin.native%24getShortAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">가져옵니다 &lt;a href=&quot;../kotlin/-short/index#kotlin.Short&quot;&gt;쇼트&lt;/a&gt; 의에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;이 ByteArray&lt;/a&gt; 지정된 인덱스에서 바이트 버퍼 &lt;a href=&quot;get-short-at#kotlin.native%24getShortAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eba163b6256c35de7fd91af80a6a1ec957825686" translate="yes" xml:space="preserve">
          <source>Gets &lt;a href=&quot;../kotlin/-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-short-at#kotlin.native%24getShortAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-short-at#kotlin.native%24getShortAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 &lt;a href=&quot;../kotlin/-short/index#kotlin.Short&quot;&gt;Short&lt;/a&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="ceba4e0c24f35bc1d24919beac99894fff5cc49e" translate="yes" xml:space="preserve">
          <source>Gets UByte out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-byte-at#kotlin.native%24getUByteAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-u-byte-at#kotlin.native%24getUByteAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UByte를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="6a93b4ec86defaa569a52c059d53e5a7d37d3efa" translate="yes" xml:space="preserve">
          <source>Gets UByte out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-byte-at#kotlin.native%24getUByteAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-u-byte-at#kotlin.native%24getUByteAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UByte를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="5443eaf1f8b4d504383ed266ef07407ecf2dec10" translate="yes" xml:space="preserve">
          <source>Gets UByte out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-byte-at#kotlin.native%24getUByteAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-u-byte-at#kotlin.native%24getUByteAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UByte를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="8e7128204fcd595b514aaa5f54b40f869da3aa3a" translate="yes" xml:space="preserve">
          <source>Gets UByte out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-byte-at#kotlin.native%24getUByteAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-u-byte-at#kotlin.native%24getUByteAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UByte를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="5e56c63ae7abdc2f655dc5a3867f58e6cf8f10ec" translate="yes" xml:space="preserve">
          <source>Gets UInt out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-int-at#kotlin.native%24getUIntAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-u-int-at#kotlin.native%24getUIntAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UInt를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="ff166f5e64d8705b447c57cacfb6ac60ac2b7a3b" translate="yes" xml:space="preserve">
          <source>Gets UInt out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-int-at#kotlin.native%24getUIntAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-u-int-at#kotlin.native%24getUIntAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UInt를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="ff8bb654dc35893343272fb488280f04d13917e5" translate="yes" xml:space="preserve">
          <source>Gets UInt out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-int-at#kotlin.native%24getUIntAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-u-int-at#kotlin.native%24getUIntAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UInt를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="68b8029657597c84d727421ce61c5d52481aff8a" translate="yes" xml:space="preserve">
          <source>Gets UInt out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-int-at#kotlin.native%24getUIntAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-u-int-at#kotlin.native%24getUIntAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UInt를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="ad23f949f964388c3320ca1484e325ac9c528b96" translate="yes" xml:space="preserve">
          <source>Gets ULong out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-long-at#kotlin.native%24getULongAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-u-long-at#kotlin.native%24getULongAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 ULong을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7fb406360458354dbfa0420bae21a2778069a23b" translate="yes" xml:space="preserve">
          <source>Gets ULong out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-long-at#kotlin.native%24getULongAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-u-long-at#kotlin.native%24getULongAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 ULong을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="f09eaa4ed41d19ee2683030c8f94ad668353d816" translate="yes" xml:space="preserve">
          <source>Gets ULong out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-long-at#kotlin.native%24getULongAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-u-long-at#kotlin.native%24getULongAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 ULong을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="546d4f2ac7bd7483f85b8483d95f71b63a5930e9" translate="yes" xml:space="preserve">
          <source>Gets ULong out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-long-at#kotlin.native%24getULongAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-u-long-at#kotlin.native%24getULongAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 ULong을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="f6b5923edb949a03319c75e067d0d3d389ef5b5b" translate="yes" xml:space="preserve">
          <source>Gets UShort out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-short-at#kotlin.native%24getUShortAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-u-short-at#kotlin.native%24getUShortAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UShort를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="62b82e9e716ae2481105eecd5dcfe6a4d4473d82" translate="yes" xml:space="preserve">
          <source>Gets UShort out of the &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;get-u-short-at#kotlin.native%24getUShortAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;get-u-short-at#kotlin.native%24getUShortAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;../kotlin/-byte-array/index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UShort를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="359c6d06bf5b44e59852ecd275fcbab50a57e29e" translate="yes" xml:space="preserve">
          <source>Gets UShort out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-short-at#kotlin.native%24getUShortAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-u-short-at#kotlin.native%24getUShortAt%28kotlin.ByteArray%2C+kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 에서 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UShort를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="19122847839d9371ee42bcdf3b7ae24fbf838432" translate="yes" xml:space="preserve">
          <source>Gets UShort out of the &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; byte buffer at specified index &lt;a href=&quot;../../kotlin.native/get-u-short-at#kotlin.native%24getUShortAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;index&lt;/a&gt;</source>
          <target state="translated">지정된 인덱스 &lt;a href=&quot;../../kotlin.native/get-u-short-at#kotlin.native%24getUShortAt(kotlin.ByteArray,%20kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 의 &lt;a href=&quot;index#kotlin.ByteArray&quot;&gt;ByteArray&lt;/a&gt; 바이트 버퍼에서 UShort를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="11cb5c2d4da49e0fbbf552dbf506006785cc6aec" translate="yes" xml:space="preserve">
          <source>Gets a sequence for visiting this directory and all its content in bottom-up order. Depth-first search is used and directories are visited after all their files.</source>
          <target state="translated">이 디렉토리 및 모든 컨텐츠를 상향식 순서로 방문하기위한 순서를 가져옵니다. 깊이 우선 검색이 사용되며 모든 파일 다음에 디렉토리가 방문됩니다.</target>
        </trans-unit>
        <trans-unit id="de21168140d7a6ffec2aa5d645b81cfb0b1d5ead" translate="yes" xml:space="preserve">
          <source>Gets a sequence for visiting this directory and all its content in top-down order. Depth-first search is used and directories are visited before all their files.</source>
          <target state="translated">이 디렉토리 및 모든 해당 컨텐츠를 위에서 아래로 방문하는 순서를 가져옵니다. 깊이 우선 검색이 사용되며 모든 파일보다 먼저 디렉토리를 방문합니다.</target>
        </trans-unit>
        <trans-unit id="8c112a6c105dbc16e8786834f4d9d438ca98749b" translate="yes" xml:space="preserve">
          <source>Gets a sequence for visiting this directory and all its content.</source>
          <target state="translated">이 디렉토리 및 모든 컨텐츠를 방문하기위한 순서를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="ba0bb49ff92219d8b958b11eef51aa366e859249" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether this node is a TEXT_NODE or a CDATA_SECTION_NODE.</source>
          <target state="translated">이 노드가 TEXT_NODE인지 또는 CDATA_SECTION_NODE인지를 나타내는 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="194ae6961c389bb66dfbaf6c24ca4f8b25cffd7f" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether this node is an &lt;a href=&quot;https://kotlinlang.org/api/latest/jvm/stdlib/org.w3c.dom/-element/index.html&quot;&gt;Element&lt;/a&gt;.</source>
          <target state="translated">이 노드가 &lt;a href=&quot;https://kotlinlang.org/api/latest/jvm/stdlib/org.w3c.dom/-element/index.html&quot;&gt;Element&lt;/a&gt; 인지를 나타내는 값을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="31dbfb91c70eeb1c5307d3ad1bfaea63d69faa0e" translate="yes" xml:space="preserve">
          <source>Gets current system time in microseconds since certain moment in the past, only delta between two subsequent calls makes sense.</source>
          <target state="translated">과거의 특정 순간부터 현재 시스템 시간을 마이크로 초 단위로 가져옵니다. 두 번의 호출 사이의 델타 만 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="0809d536712c860de45cf5b17c686273bac85a06" translate="yes" xml:space="preserve">
          <source>Gets current system time in milliseconds since certain moment in the past, only delta between two subsequent calls makes sense.</source>
          <target state="translated">과거의 특정 순간부터 현재 시스템 시간을 밀리 초 단위로 가져옵니다. 이후의 두 호출 사이의 델타 만 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a307890a113e29c1affbb02eeed92e0fe3c13424" translate="yes" xml:space="preserve">
          <source>Gets current system time in nanoseconds since certain moment in the past, only delta between two subsequent calls makes sense.</source>
          <target state="translated">과거의 특정 순간부터 현재 시스템 시간을 나노초 단위로 가져옵니다. 두 번의 호출 사이의 델타 만 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3c82af36761705f1895b7f6ddac8345e79e3d55" translate="yes" xml:space="preserve">
          <source>Gets the entire content of this file as a String using UTF-8 or specified &lt;a href=&quot;read-text#kotlin.io%24readText%28java.io.File%2C+java.nio.charset.Charset%29%2Fcharset&quot;&gt;charset&lt;/a&gt;.</source>
          <target state="translated">UTF-8 또는 지정된 &lt;a href=&quot;read-text#kotlin.io%24readText%28java.io.File%2C+java.nio.charset.Charset%29%2Fcharset&quot;&gt;문자 세트를&lt;/a&gt; 사용하여이 파일의 전체 컨텐츠를 문자열로 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="e6040e7906d6549ba4f60e8b187589a139f31acf" translate="yes" xml:space="preserve">
          <source>Gets the entire content of this file as a String using UTF-8 or specified &lt;a href=&quot;read-text#kotlin.io%24readText(java.io.File,%20java.nio.charset.Charset)/charset&quot;&gt;charset&lt;/a&gt;.</source>
          <target state="translated">UTF-8 또는 지정된 &lt;a href=&quot;read-text#kotlin.io%24readText(java.io.File,%20java.nio.charset.Charset)/charset&quot;&gt;charset을&lt;/a&gt; 사용하여이 파일의 전체 내용을 String으로 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="95b4415867bb0e04fef4852f7d8e7b04b048c510" translate="yes" xml:space="preserve">
          <source>Gets the entire content of this file as a byte array.</source>
          <target state="translated">이 파일의 전체 내용을 바이트 배열로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7163713dcc358cd25d8cb51e383949b943ff7b3c" translate="yes" xml:space="preserve">
          <source>Gets the lazily initialized value of the current Lazy instance. Once the value was initialized it must not change during the rest of lifetime of this Lazy instance.</source>
          <target state="translated">현재 Lazy 인스턴스의 지연 초기화 된 값을 가져옵니다. 일단 값이 초기화되면이 Lazy 인스턴스의 나머지 수명 동안 변경되지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="37c41acddc812cd7a66c995087ca7ce3dbb73e5d" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../../kotlin/-boolean/index#kotlin.Boolean&quot;&gt;Boolean&lt;/a&gt; value.</source>
          <target state="translated">다음 임의의 &lt;a href=&quot;../../../kotlin/-boolean/index#kotlin.Boolean&quot;&gt;부울&lt;/a&gt; 값을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="30956cdd85522de8900f766117ac0700a203fc7b" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; value uniformly distributed between 0 (inclusive) and 1 (exclusive).</source>
          <target state="translated">0 (포함)과 1 (제외) 사이에 균일하게 분포 된 다음 임의의 &lt;a href=&quot;../../../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 값을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="309ef06192b09598fcb2a4953632ab464eb205c6" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; value uniformly distributed between 0 (inclusive) and 1 (exclusive).</source>
          <target state="translated">0 (포함)과 1 (제외) 사이에 균일하게 분포 된 다음 임의의 &lt;a href=&quot;../../../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 값을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="f13b624fdef9631938704e53303259adbf3d3008" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-boolean/index#kotlin.Boolean&quot;&gt;Boolean&lt;/a&gt; value.</source>
          <target state="translated">다음 임의의 &lt;a href=&quot;../../kotlin/-boolean/index#kotlin.Boolean&quot;&gt;부울&lt;/a&gt; 값을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="9c1a73c830924c485c129aec0e959e687729be76" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; value uniformly distributed between 0 (inclusive) and 1 (exclusive).</source>
          <target state="translated">0 (포함)과 1 (제외) 사이에 균일하게 분포 된 다음 임의의 &lt;a href=&quot;../../kotlin/-double/index#kotlin.Double&quot;&gt;Double&lt;/a&gt; 값을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="78b55d267d8cb8da4eb67367038fae92883ffba8" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; value uniformly distributed between 0 (inclusive) and 1 (exclusive).</source>
          <target state="translated">0 (포함)과 1 (제외) 사이에 균일하게 분포 된 다음 임의의 &lt;a href=&quot;../../kotlin/-float/index#kotlin.Float&quot;&gt;Float&lt;/a&gt; 값을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="6b069452c867cc34d833fd1f74484a4bac1b8d73" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;../next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.ranges.UIntRange%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.ranges.UIntRange%29%2Frange&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="1cbd1bb5d2125b2f551302a9b943746f99e58ea5" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;../next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.ranges.UIntRange)/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.ranges.UIntRange)/range&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="37e9ce94104e274134ae5cd0024dee2a28d8b36a" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator in the specified range.</source>
          <target state="translated">지정된 범위의 난수 생성기에서 다음 난수 &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="3c9db191e67fe2d032c273f05c4c2a95b4fca99e" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;../next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">바인딩 &lt;a href=&quot;../next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%29%2Funtil&quot;&gt;될 때까지&lt;/a&gt; 지정된 수보다 작은 난수 생성기에서 다음 임의의 &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="7e363c5a913bdff96b90480285006c531367f387" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;../next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt)/until&quot;&gt;until&lt;/a&gt; bound 보다 작은 난수 생성기에서 다음 난수 &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="df0f8f4c47ad4633251926059d24e74bd095651a" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator.</source>
          <target state="translated">난수 &lt;a href=&quot;../../kotlin/-u-int/index&quot;&gt;생성기&lt;/a&gt; 에서 다음 난수 UInt 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="e7793f99b74ab0789880c106b3979b40f240bb01" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;../next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ranges.ULongRange%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ranges.ULongRange%29%2Frange&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 임의의 &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="96ee62ed14f41b8d4642283e30c55973f533b66b" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;../next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ranges.ULongRange)/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ranges.ULongRange)/range&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="c6382977c67f7a868b05c20e430ee75137588175" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator in the specified range.</source>
          <target state="translated">지정된 범위의 난수 생성기에서 다음 임의의 &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="7ac3458718ad9505600ca7fb8773a471b9e50892" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;../next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 숫자보다 작을 &lt;a href=&quot;../next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%29%2Funtil&quot;&gt;때까지&lt;/a&gt; 난수 생성기에서 다음 임의의 &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="43d4e8c3597f77c95aa5cdbd79821205a9767f82" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;../next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong)/until&quot;&gt;until&lt;/a&gt; bound 보다 작은 난수 생성기에서 다음 난수 &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="a54b4e342c19fcbe2f3af7a96c78016cc14cedb3" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator.</source>
          <target state="translated">난수 &lt;a href=&quot;../../kotlin/-u-long/index&quot;&gt;생성기&lt;/a&gt; 에서 다음 임의의 ULong 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="929b9e532a5b7b161a700de08add954ec6d36ca6" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.ranges.UIntRange%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.ranges.UIntRange%29%2Frange&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="0ef5d04545551739de14c6fd65488dd540a1a244" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.ranges.UIntRange)/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.ranges.UIntRange)/range&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="471972f13ea37f1c27e3718fc1a40679cedb0068" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator in the specified range.</source>
          <target state="translated">지정된 범위의 난수 생성기에서 다음 난수 &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="f11249e53ff101c876fd8a178739950955288fdc" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">바인딩 &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt%28kotlin.random.Random%2C+kotlin.UInt%29%2Funtil&quot;&gt;될 때까지&lt;/a&gt; 지정된 수보다 작은 난수 생성기에서 다음 임의의 &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="72c3593c40d15b89dc5054e7a9b34c0485042b1b" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-u-int#kotlin.random%24nextUInt(kotlin.random.Random,%20kotlin.UInt)/until&quot;&gt;until&lt;/a&gt; bound 보다 작은 난수 생성기에서 다음 난수 &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="8d7b64258910d1f8e7e95f6885bafd4b7d6aef91" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;UInt&lt;/a&gt; from the random number generator.</source>
          <target state="translated">난수 &lt;a href=&quot;../kotlin/-u-int/index&quot;&gt;생성기&lt;/a&gt; 에서 다음 난수 UInt 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="6066b9becb7346790721071986c20dd5acb6de18" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ranges.ULongRange%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ranges.ULongRange%29%2Frange&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 임의의 &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="378a74bcb0a7a649e96155198b63424181554331" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator in the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ranges.ULongRange)/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ranges.ULongRange)/range&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="9b589f8eef60bcd4b38db2895bff627da29fcfcd" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator in the specified range.</source>
          <target state="translated">지정된 범위의 난수 생성기에서 다음 임의의 &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="112333309fc46102c0a0448255000cc3c9ba3f69" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 숫자보다 작을 &lt;a href=&quot;next-u-long#kotlin.random%24nextULong%28kotlin.random.Random%2C+kotlin.ULong%29%2Funtil&quot;&gt;때까지&lt;/a&gt; 난수 생성기에서 다음 임의의 &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="db08580ed0422c907bcb2dfa0d4162e33db438fd" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator less than the specified &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-u-long#kotlin.random%24nextULong(kotlin.random.Random,%20kotlin.ULong)/until&quot;&gt;until&lt;/a&gt; bound 보다 작은 난수 생성기에서 다음 난수 &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="76b0c05fa65e814a57c8a2da06ad7a361405834e" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;ULong&lt;/a&gt; from the random number generator.</source>
          <target state="translated">난수 &lt;a href=&quot;../kotlin/-u-long/index&quot;&gt;생성기&lt;/a&gt; 에서 다음 임의의 ULong 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="04f34e55827ddb4623c3b83662a56026854407e8" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../next-bits#kotlin.random.Random%24nextBits%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">다음 임의의 &lt;a href=&quot;../next-bits#kotlin.random.Random%24nextBits%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="5fca2f68d8d64cc86694d0727b45f2e6693c49d0" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;../next-bits#kotlin.random.Random%24nextBits(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">다음 임의의 &lt;a href=&quot;../next-bits#kotlin.random.Random%24nextBits(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="2faba648c909e55694100a5c0c3e4adf90257566" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;next-bits#kotlin.random.Random%24nextBits%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">다음 임의의 &lt;a href=&quot;next-bits#kotlin.random.Random%24nextBits%28kotlin.Int%29%2FbitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="b7b16619da193b089c5042ce71e53f3064e3c961" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;a href=&quot;next-bits#kotlin.random.Random%24nextBits(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; number of bits.</source>
          <target state="translated">다음 임의의 &lt;a href=&quot;next-bits#kotlin.random.Random%24nextBits(kotlin.Int)/bitCount&quot;&gt;bitCount&lt;/a&gt; 비트 수를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="9028d1dcb4cef84a31ee55278bbac6ae5357d31d" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Double&lt;/code&gt; from the random number generator in the specified range.</source>
          <target state="translated">지정된 범위의 난수 생성기에서 다음 난수 &lt;code&gt;Double&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="f543f8df7361b2bb53169e28e58d78384cbc4fc5" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Int&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;../next-int#kotlin.random%24nextInt%28kotlin.random.Random%2C+kotlin.ranges.IntRange%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-int#kotlin.random%24nextInt%28kotlin.random.Random%2C+kotlin.ranges.IntRange%29%2Frange&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;code&gt;Int&lt;/code&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="63158e16fc626408ed0826d6bb4bd9b1ba5c2f26" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Int&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;../next-int#kotlin.random%24nextInt(kotlin.random.Random,%20kotlin.ranges.IntRange)/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-int#kotlin.random%24nextInt(kotlin.random.Random,%20kotlin.ranges.IntRange)/range&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;code&gt;Int&lt;/code&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="0308952d598f94e2695c06c2f23d1a62905b0bee" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Int&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;next-int#kotlin.random%24nextInt%28kotlin.random.Random%2C+kotlin.ranges.IntRange%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-int#kotlin.random%24nextInt%28kotlin.random.Random%2C+kotlin.ranges.IntRange%29%2Frange&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;code&gt;Int&lt;/code&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="7907a96413297312e1e976c02f529646c93d27e4" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Int&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;next-int#kotlin.random%24nextInt(kotlin.random.Random,%20kotlin.ranges.IntRange)/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-int#kotlin.random%24nextInt(kotlin.random.Random,%20kotlin.ranges.IntRange)/range&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;code&gt;Int&lt;/code&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="f1e1e810f585a0afdffc6e7c00adc9f1a30bb15d" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Int&lt;/code&gt; from the random number generator in the specified range.</source>
          <target state="translated">지정된 범위의 난수 생성기에서 다음 난수 &lt;code&gt;Int&lt;/code&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="705882ad155ff18dc9f97216330472b8c8b24ba3" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Int&lt;/code&gt; from the random number generator.</source>
          <target state="translated">난수 생성기에서 다음 난수 &lt;code&gt;Int&lt;/code&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="d1ca0ffd7d53e1b5ad497b30e898b764bfc015ac" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Long&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;../next-long#kotlin.random%24nextLong%28kotlin.random.Random%2C+kotlin.ranges.LongRange%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-long#kotlin.random%24nextLong%28kotlin.random.Random%2C+kotlin.ranges.LongRange%29%2Frange&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;code&gt;Long&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="0fd24d7fee903ddf723690241e58e954bd6839f4" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Long&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;../next-long#kotlin.random%24nextLong(kotlin.random.Random,%20kotlin.ranges.LongRange)/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-long#kotlin.random%24nextLong(kotlin.random.Random,%20kotlin.ranges.LongRange)/range&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;code&gt;Long&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="e5fb6f9e1469c44b19d531da2765acbd786f7313" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Long&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;next-long#kotlin.random%24nextLong%28kotlin.random.Random%2C+kotlin.ranges.LongRange%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-long#kotlin.random%24nextLong%28kotlin.random.Random%2C+kotlin.ranges.LongRange%29%2Frange&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;code&gt;Long&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="5d2057722dcae282a0c74257d1e7116deff3b0d0" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Long&lt;/code&gt; from the random number generator in the specified &lt;a href=&quot;next-long#kotlin.random%24nextLong(kotlin.random.Random,%20kotlin.ranges.LongRange)/range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-long#kotlin.random%24nextLong(kotlin.random.Random,%20kotlin.ranges.LongRange)/range&quot;&gt;범위&lt;/a&gt; 의 난수 생성기에서 다음 난수 &lt;code&gt;Long&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="7b1e8d7297c8baa2df40c7c82c7aad1283ee0ef7" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Long&lt;/code&gt; from the random number generator in the specified range.</source>
          <target state="translated">지정된 범위의 난수 생성기에서 다음 난수 &lt;code&gt;Long&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="c21be4abd909031b3586371d1970672e7e168e9a" translate="yes" xml:space="preserve">
          <source>Gets the next random &lt;code&gt;Long&lt;/code&gt; from the random number generator.</source>
          <target state="translated">난수 생성기에서 다음 난수 &lt;code&gt;Long&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="b6be61594fa2dd329ed385c4171b2602f61166a8" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Double&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">바운드 &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%29%2Funtil&quot;&gt;될 때까지&lt;/a&gt; 지정된 수보다 작은 난수 생성기에서 다음 임의의 음이 아닌 &lt;code&gt;Double&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="35de7abd6d78c66b02dede8c8258919512d6312a" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Double&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble(kotlin.Double)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 값보다 작을 &lt;a href=&quot;../next-double#kotlin.random.Random%24nextDouble(kotlin.Double)/until&quot;&gt;때까지&lt;/a&gt; 난수 생성기에서 음이 아닌 임의의 &lt;code&gt;Double&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="0c9a1bb80dc61d4350189c8d53a1723a1ce8bab5" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Double&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">바운드 &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble%28kotlin.Double%29%2Funtil&quot;&gt;될 때까지&lt;/a&gt; 지정된 수보다 작은 난수 생성기에서 다음 임의의 음이 아닌 &lt;code&gt;Double&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="f519f9abf3df48b71bc5c4b424ff0e45b077d44a" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Double&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble(kotlin.Double)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 값보다 작을 &lt;a href=&quot;next-double#kotlin.random.Random%24nextDouble(kotlin.Double)/until&quot;&gt;때까지&lt;/a&gt; 난수 생성기에서 음이 아닌 임의의 &lt;code&gt;Double&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="4284455c3c686da2f5f0607a4e4f8fdbd0d56bd4" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Int&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt%28kotlin.Int%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">바인딩 &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt%28kotlin.Int%29%2Funtil&quot;&gt;될 때까지&lt;/a&gt; 지정된 수보다 작은 난수 생성기에서 다음 임의의 음이 아닌 &lt;code&gt;Int&lt;/code&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="d665eceea8128cbcca937a41290f9a04d16c5c2c" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Int&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt(kotlin.Int)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 범위 보다 작은 난수 생성기에서 음이 아닌 임의의 다음 &lt;code&gt;Int&lt;/code&gt; 를 가져옵니다 .Gets the next random non-negative Int from the random number generator less than the specified &lt;a href=&quot;../next-int#kotlin.random.Random%24nextInt(kotlin.Int)/until&quot;&gt;until&lt;/a&gt; bound.</target>
        </trans-unit>
        <trans-unit id="8bd8c79c3e21d295fb1c15cde569828a6e0d3051" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Int&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt%28kotlin.Int%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">바인딩 &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt%28kotlin.Int%29%2Funtil&quot;&gt;될 때까지&lt;/a&gt; 지정된 수보다 작은 난수 생성기에서 다음 임의의 음이 아닌 &lt;code&gt;Int&lt;/code&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="3eef112031f60dafb1489e4454a7c2aa6f439cae" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Int&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt(kotlin.Int)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 범위 보다 작은 난수 생성기에서 음이 아닌 임의의 다음 &lt;code&gt;Int&lt;/code&gt; 를 가져옵니다 .Gets the next random non-negative Int from the random number generator less than the specified &lt;a href=&quot;next-int#kotlin.random.Random%24nextInt(kotlin.Int)/until&quot;&gt;until&lt;/a&gt; bound.</target>
        </trans-unit>
        <trans-unit id="403ac94b16c81a69dd16b254f1801320c57f5111" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Long&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong%28kotlin.Long%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 숫자보다 작을 &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong%28kotlin.Long%29%2Funtil&quot;&gt;때까지&lt;/a&gt; 난수 생성기에서 다음 임의의 음이 아닌 &lt;code&gt;Long&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="887a28c24ae21edb0753e6ee220f0b99ae1bf479" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Long&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong(kotlin.Long)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 값보다 작을 &lt;a href=&quot;../next-long#kotlin.random.Random%24nextLong(kotlin.Long)/until&quot;&gt;때까지&lt;/a&gt; 난수 생성기에서 음이 아닌 임의의 다음 &lt;code&gt;Long&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="9c0e48933f74bb2c6310b971048738f978b109d0" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Long&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong%28kotlin.Long%29%2Funtil&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 숫자보다 작을 &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong%28kotlin.Long%29%2Funtil&quot;&gt;때까지&lt;/a&gt; 난수 생성기에서 다음 임의의 음이 아닌 &lt;code&gt;Long&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="f20a65909641053c65fe2a0983e412bff5b8c000" translate="yes" xml:space="preserve">
          <source>Gets the next random non-negative &lt;code&gt;Long&lt;/code&gt; from the random number generator less than the specified &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong(kotlin.Long)/until&quot;&gt;until&lt;/a&gt; bound.</source>
          <target state="translated">지정된 값보다 작을 &lt;a href=&quot;next-long#kotlin.random.Random%24nextLong(kotlin.Long)/until&quot;&gt;때까지&lt;/a&gt; 난수 생성기에서 음이 아닌 임의의 다음 &lt;code&gt;Long&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="2b7e0a9f8042c263c6cd6468bf56dde544cd8ae0" translate="yes" xml:space="preserve">
          <source>Gets the value in the current thread's copy of this thread-local variable or replaces the value with the result of calling &lt;a href=&quot;get-or-set#kotlin.concurrent%24getOrSet%28java.lang.ThreadLocal%28%28kotlin.concurrent.getOrSet.T%29%29%2C+kotlin.Function0%28%28kotlin.concurrent.getOrSet.T%29%29%29%2Fdefault&quot;&gt;default&lt;/a&gt; function in case if that value was &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 스레드 로컬 변수의 현재 스레드 사본에서 값을 가져 오거나 해당 값이 &lt;code&gt;null&lt;/code&gt; 인 경우 &lt;a href=&quot;get-or-set#kotlin.concurrent%24getOrSet%28java.lang.ThreadLocal%28%28kotlin.concurrent.getOrSet.T%29%29%2C+kotlin.Function0%28%28kotlin.concurrent.getOrSet.T%29%29%29%2Fdefault&quot;&gt;기본&lt;/a&gt; 함수 를 호출 한 결과로 값을 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="a337436a44db6e3083d5164f17cd53641525b567" translate="yes" xml:space="preserve">
          <source>Gets the value in the current thread's copy of this thread-local variable or replaces the value with the result of calling &lt;a href=&quot;get-or-set#kotlin.concurrent%24getOrSet(java.lang.ThreadLocal((kotlin.concurrent.getOrSet.T)),%20kotlin.Function0((kotlin.concurrent.getOrSet.T)))/default&quot;&gt;default&lt;/a&gt; function in case if that value was &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 스레드 로컬 변수의 현재 스레드 복사본에서 값을 가져 오거나 해당 값이 &lt;code&gt;null&lt;/code&gt; 인 경우 &lt;a href=&quot;get-or-set#kotlin.concurrent%24getOrSet(java.lang.ThreadLocal((kotlin.concurrent.getOrSet.T)),%20kotlin.Function0((kotlin.concurrent.getOrSet.T)))/default&quot;&gt;기본&lt;/a&gt; 함수 를 호출 한 결과로 값을 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="96857c88cebeabc578d887e01fbcb2fd02cbcdb7" translate="yes" xml:space="preserve">
          <source>Getter</source>
          <target state="translated">Getter</target>
        </trans-unit>
        <trans-unit id="163dc52918f86c26710b8acaf72b5734b1cf27d1" translate="yes" xml:space="preserve">
          <source>Getter of the property is a &lt;code&gt;get&lt;/code&gt; method declared alongside the property.</source>
          <target state="translated">속성의 Getter는 속성 과 함께 선언 된 &lt;code&gt;get&lt;/code&gt; 메서드입니다.</target>
        </trans-unit>
        <trans-unit id="4ed1aac47efbb51b56ad6a6f326722a1c1c048e0" translate="yes" xml:space="preserve">
          <source>Getters and Setters</source>
          <target state="translated">게터와 세터</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">시작하기</target>
        </trans-unit>
        <trans-unit id="f2a96e364f18ce2cf12d58c581b9f77f01d71c61" translate="yes" xml:space="preserve">
          <source>Getting Started with Eclipse IDE</source>
          <target state="translated">Eclipse IDE 시작하기</target>
        </trans-unit>
        <trans-unit id="42cf14ca65905dcfc442ada3294d53e40371efdc" translate="yes" xml:space="preserve">
          <source>Getting Started with Gradle</source>
          <target state="translated">Gradle 시작하기</target>
        </trans-unit>
        <trans-unit id="13f4cc71ba71e855fd6ee40fe700d140aa4d0403" translate="yes" xml:space="preserve">
          <source>Getting Started with IntelliJ IDEA</source>
          <target state="translated">IntelliJ IDEA 시작하기</target>
        </trans-unit>
        <trans-unit id="09a6c0662ea8b013dc38e6e6c3267f9f99f71bbe" translate="yes" xml:space="preserve">
          <source>Getting Started with Kotlin</source>
          <target state="translated">Kotlin 시작하기</target>
        </trans-unit>
        <trans-unit id="984760bee6820a43a1176969d0eb8e8758e08f83" translate="yes" xml:space="preserve">
          <source>Getting Started with Kotlin and JavaScript with Gradle</source>
          <target state="translated">Gradle로 Kotlin 및 JavaScript 시작하기</target>
        </trans-unit>
        <trans-unit id="5dd4a2a2de278dbd47a7cbdaa4c4b6745d4a19be" translate="yes" xml:space="preserve">
          <source>Getting Started with Kotlin and JavaScript with IntelliJ IDEA</source>
          <target state="translated">IntelliJ IDEA를 사용하여 Kotlin 및 JavaScript 시작</target>
        </trans-unit>
        <trans-unit id="1d48ae394054c582aa04c2975c93978aeac99618" translate="yes" xml:space="preserve">
          <source>Getting Started with Kotlin and JavaScript with Maven</source>
          <target state="translated">Maven으로 Kotlin 및 JavaScript 시작하기</target>
        </trans-unit>
        <trans-unit id="cd4b0c856208f741f17d1a02da2b24b267c56935" translate="yes" xml:space="preserve">
          <source>Getting Started with Kotlin to JavaScript</source>
          <target state="translated">Kotlin에서 JavaScript로 시작하기</target>
        </trans-unit>
        <trans-unit id="1a2d1df7c699bc1c3627a59dee9f5d675ea4ab4d" translate="yes" xml:space="preserve">
          <source>Getting Started with Kotlin/JS</source>
          <target state="translated">Kotlin / JS 시작하기</target>
        </trans-unit>
        <trans-unit id="646a49e49eae55b672b6de83fc26901b5720412e" translate="yes" xml:space="preserve">
          <source>Getting Started with Maven</source>
          <target state="translated">Maven 시작하기</target>
        </trans-unit>
        <trans-unit id="da6eb7f117bc1433780193d58fd1a8c334269d93" translate="yes" xml:space="preserve">
          <source>Getting Started with the Command Line</source>
          <target state="translated">명령 행 시작하기</target>
        </trans-unit>
        <trans-unit id="77195551022e69f3fe692e55f18a442cb14d057e" translate="yes" xml:space="preserve">
          <source>Getting around</source>
          <target state="translated">둘러보기</target>
        </trans-unit>
        <trans-unit id="d966aa4c0cb6af87411922025d607a28da9dadc4" translate="yes" xml:space="preserve">
          <source>Getting representation of the object variable (var) could also be done using the built-in runtime function &lt;code&gt;Konan_DebugPrint&lt;/code&gt; (this approach also works for gdb, using a module of command syntax):</source>
          <target state="translated">내장 런타임 함수 &lt;code&gt;Konan_DebugPrint&lt;/code&gt; 를 사용하여 객체 변수 (var)를 표시 할 수도 있습니다 (이 방법은 명령 구문 모듈을 사용하여 gdb에서도 작동 함).</target>
        </trans-unit>
        <trans-unit id="76e7a3a3f9c225fe820ba7e9cff10ea2a73b79a1" translate="yes" xml:space="preserve">
          <source>Getting started</source>
          <target state="translated">시작하기</target>
        </trans-unit>
        <trans-unit id="52be919dd9daef1b311b120fb6fe20a334a24e25" translate="yes" xml:space="preserve">
          <source>Getting started with Android and Kotlin</source>
          <target state="translated">Android 및 Kotlin 시작하기</target>
        </trans-unit>
        <trans-unit id="49b001fc8041567a39e8397d73aa6f1db38cee63" translate="yes" xml:space="preserve">
          <source>Getting started with Kotlin</source>
          <target state="translated">Kotlin 시작하기</target>
        </trans-unit>
        <trans-unit id="a8fef841204af009adaf90bc21fac5ecb522d4af" translate="yes" xml:space="preserve">
          <source>Getting the Ant Tasks</source>
          <target state="translated">개미 작업 얻기</target>
        </trans-unit>
        <trans-unit id="afad882b9cc056965179ab8ca4d21bd55cf909e2" translate="yes" xml:space="preserve">
          <source>Give your project a name and select an SDK version for it.</source>
          <target state="translated">프로젝트 이름을 지정하고 SDK 버전을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="ed8daa798a5b15bec0a3209902f2dd5b84e2b411" translate="yes" xml:space="preserve">
          <source>Given a string &lt;code&gt;s&lt;/code&gt;, you can get a &lt;code&gt;ByteArray&lt;/code&gt; with the UTF-8 encoding of the string by calling &lt;code&gt;s.toByteArray()&lt;/code&gt;, or you can specify another encoding, e.g. &lt;code&gt;s.toByteArray(Charsets.US_ASCII)&lt;/code&gt; - just like &lt;code&gt;encode()&lt;/code&gt; in Python. Given a byte array &lt;code&gt;b&lt;/code&gt; that contains a UTF-8-encoded string, you can get a &lt;code&gt;String&lt;/code&gt; by calling &lt;code&gt;String(b)&lt;/code&gt;; if you've got a different encoding, use e.g. &lt;code&gt;String(b, Charsets.US_ASCII)&lt;/code&gt;, just like &lt;code&gt;decode()&lt;/code&gt; in Python. You can also call e.g. &lt;code&gt;b.toString(Charsets.US_ASCII)&lt;/code&gt;, but do &lt;em&gt;not&lt;/em&gt; call &lt;code&gt;b.toString()&lt;/code&gt; without parameters (this will just print an internal reference to the byte array).</source>
          <target state="translated">문자열을 감안할 &lt;code&gt;s&lt;/code&gt; , 당신이 얻을 수있는 &lt;code&gt;ByteArray&lt;/code&gt; 호출하여 문자열의 UTF-8 인코딩을 &lt;code&gt;s.toByteArray()&lt;/code&gt; , 또는 다른 인코딩, 예를 지정할 수 있습니다 &lt;code&gt;s.toByteArray(Charsets.US_ASCII)&lt;/code&gt; -처럼 &lt;code&gt;encode()&lt;/code&gt; 에서 파이썬. UTF-8로 인코딩 된 문자열을 포함 하는 바이트 배열 &lt;code&gt;b&lt;/code&gt; 가 주어지면 &lt;code&gt;String(b)&lt;/code&gt; 호출 하여 &lt;code&gt;String&lt;/code&gt; 을 얻을 수 있습니다 . 다른 인코딩을 사용하는 경우 Python의 &lt;code&gt;decode()&lt;/code&gt; 와 같이 &lt;code&gt;String(b, Charsets.US_ASCII)&lt;/code&gt; . 또한 예를 들어 호출 할 수 있습니다 &lt;code&gt;b.toString(Charsets.US_ASCII)&lt;/code&gt; ,하지만 할 &lt;em&gt;수 없습니다&lt;/em&gt; 전화&lt;em&gt;&lt;/em&gt; &lt;code&gt;b.toString()&lt;/code&gt; 매개 변수없이 (바이트 배열에 대한 내부 참조를 인쇄합니다).</target>
        </trans-unit>
        <trans-unit id="d52776ec9b50b7e842377169a2dc0f87740730c0" translate="yes" xml:space="preserve">
          <source>Given an &lt;a href=&quot;-iterable#kotlin.collections%24Iterable%28kotlin.Function0%28%28kotlin.collections.Iterator%28%28kotlin.collections.Iterable.T%29%29%29%29%29%2Fiterator&quot;&gt;iterator&lt;/a&gt; function constructs an &lt;a href=&quot;-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that returns values through the &lt;a href=&quot;-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; provided by that function.</source>
          <target state="translated">주어진 &lt;a href=&quot;-iterable#kotlin.collections%24Iterable%28kotlin.Function0%28%28kotlin.collections.Iterator%28%28kotlin.collections.Iterable.T%29%29%29%29%29%2Fiterator&quot;&gt;iterator&lt;/a&gt; 함수 는 해당 함수가 제공 하는 &lt;a href=&quot;-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator를&lt;/a&gt; 통해 값을 리턴 하는 &lt;a href=&quot;-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; 인스턴스를 구성 합니다.</target>
        </trans-unit>
        <trans-unit id="7be3632c2382671a0f603162342cc595556f496f" translate="yes" xml:space="preserve">
          <source>Given an &lt;a href=&quot;-iterable#kotlin.collections%24Iterable(kotlin.Function0((kotlin.collections.Iterator((kotlin.collections.Iterable.T)))))/iterator&quot;&gt;iterator&lt;/a&gt; function constructs an &lt;a href=&quot;-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that returns values through the &lt;a href=&quot;-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; provided by that function.</source>
          <target state="translated">&lt;a href=&quot;-iterable#kotlin.collections%24Iterable(kotlin.Function0((kotlin.collections.Iterator((kotlin.collections.Iterable.T)))))/iterator&quot;&gt;반복기&lt;/a&gt; 함수가 주어진 경우 해당 함수에서 제공 하는 &lt;a href=&quot;-iterator/index#kotlin.collections.Iterator&quot;&gt;반복기를&lt;/a&gt; 통해 값을 반환 하는 &lt;a href=&quot;-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; 인스턴스를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="6f0cc0f079c270a0f9cdb6aa220795e4826b92e8" translate="yes" xml:space="preserve">
          <source>Given an &lt;a href=&quot;-sequence#kotlin.sequences%24Sequence%28kotlin.Function0%28%28kotlin.collections.Iterator%28%28kotlin.sequences.Sequence.T%29%29%29%29%29%2Fiterator&quot;&gt;iterator&lt;/a&gt; function constructs a &lt;a href=&quot;-sequence/index&quot;&gt;Sequence&lt;/a&gt; that returns values through the &lt;a href=&quot;../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; provided by that function. The values are evaluated lazily, and the sequence is potentially infinite.</source>
          <target state="translated">주어진 &lt;a href=&quot;-sequence#kotlin.sequences%24Sequence%28kotlin.Function0%28%28kotlin.collections.Iterator%28%28kotlin.sequences.Sequence.T%29%29%29%29%29%2Fiterator&quot;&gt;iterator&lt;/a&gt; 함수 는 해당 함수에서 제공 하는 &lt;a href=&quot;../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator를&lt;/a&gt; 통해 값을 반환 하는 &lt;a href=&quot;-sequence/index&quot;&gt;Sequence&lt;/a&gt; 를 구성 합니다. 값은 느리게 평가되며 시퀀스는 잠재적으로 무한합니다.</target>
        </trans-unit>
        <trans-unit id="0edbc663583339d7367d2349ea7bf1cd8b018d4d" translate="yes" xml:space="preserve">
          <source>Given an &lt;a href=&quot;-sequence#kotlin.sequences%24Sequence(kotlin.Function0((kotlin.collections.Iterator((kotlin.sequences.Sequence.T)))))/iterator&quot;&gt;iterator&lt;/a&gt; function constructs a &lt;a href=&quot;-sequence/index&quot;&gt;Sequence&lt;/a&gt; that returns values through the &lt;a href=&quot;../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; provided by that function. The values are evaluated lazily, and the sequence is potentially infinite.</source>
          <target state="translated">&lt;a href=&quot;-sequence#kotlin.sequences%24Sequence(kotlin.Function0((kotlin.collections.Iterator((kotlin.sequences.Sequence.T)))))/iterator&quot;&gt;반복기&lt;/a&gt; 함수가 주어진 경우 해당 함수에서 제공 하는 &lt;a href=&quot;../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;반복기를&lt;/a&gt; 통해 값을 반환 하는 &lt;a href=&quot;-sequence/index&quot;&gt;시퀀스&lt;/a&gt; 를 생성 합니다. 값은 느리게 평가되며 시퀀스는 잠재적으로 무한합니다.</target>
        </trans-unit>
        <trans-unit id="c485d6c75b301df13711cf1468e06dd2f21a2da3" translate="yes" xml:space="preserve">
          <source>Given an &lt;code&gt;R&lt;/code&gt; instance, &lt;code&gt;KProperty1&amp;lt;R, V&amp;gt;&lt;/code&gt; will let you read the value that the property has in that instance by calling &lt;code&gt;get()&lt;/code&gt;, and &lt;code&gt;KMutableProperty1&amp;lt;R, V&amp;gt;&lt;/code&gt; will also let you change the property value in the instance by calling &lt;code&gt;set()&lt;/code&gt;. Using this, we can start writing functions that manipulate properties without knowing in advance which property (or which class) they are going to deal with:</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; 인스턴스가 주어진 경우 &lt;code&gt;KProperty1&amp;lt;R, V&amp;gt;&lt;/code&gt; 하면 &lt;code&gt;get()&lt;/code&gt; 을 호출하여 해당 인스턴스에 특성 값이있는 값을 읽을 수 있으며 &lt;code&gt;KMutableProperty1&amp;lt;R, V&amp;gt;&lt;/code&gt; 를 사용하면 인스턴스의 특성 값을 다음과 같이 호출하여 변경할 수 있습니다. &lt;code&gt;set()&lt;/code&gt; . 이를 사용하여 처리 할 속성 (또는 클래스)을 미리 알지 않고도 속성을 조작하는 함수를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e5731d4bf9c4d88436dc7528815df264748c74c" translate="yes" xml:space="preserve">
          <source>Given that, the compiler prohibits &lt;em&gt;is&lt;/em&gt;-checks that cannot be performed at runtime due to type erasure, such as &lt;code&gt;ints is List&amp;lt;Int&amp;gt;&lt;/code&gt; or &lt;code&gt;list is T&lt;/code&gt; (type parameter). You can, however, check an instance against a &lt;a href=&quot;generics#star-projections&quot;&gt;star-projected type&lt;/a&gt;:</source>
          <target state="translated">컴파일러 &lt;em&gt;는 &lt;/em&gt; &lt;code&gt;ints is List&amp;lt;Int&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;list is T&lt;/code&gt; (type parameter) 와 같이 유형 삭제로 인해 런타임에 수행 할 수없는 -checks를 금지 합니다. 그러나 &lt;a href=&quot;generics#star-projections&quot;&gt;별 투영 된 유형&lt;/a&gt; 에 대해 인스턴스를 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d14fa916aad304abf9368effaed2af1c9cae9a7d" translate="yes" xml:space="preserve">
          <source>Given the following function:</source>
          <target state="translated">다음과 같은 기능이 주어집니다.</target>
        </trans-unit>
        <trans-unit id="3bccba6c1d0dad412745ca499dd4881c9a868243" translate="yes" xml:space="preserve">
          <source>Gives a declaration (a function, a property or a class) specific name in JavaScript.</source>
          <target state="translated">JavaScript에서 선언 (함수, 속성 또는 클래스) 특정 이름을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="881cfc245c723cf7c3f61576f22801ef2e3c72b2" translate="yes" xml:space="preserve">
          <source>Global Declarations from Kotlin</source>
          <target state="translated">코 틀린의 글로벌 선언</target>
        </trans-unit>
        <trans-unit id="659f27a0f1f897cced3c75d045ad40fe242c727f" translate="yes" xml:space="preserve">
          <source>Global coroutines are like daemon threads</source>
          <target state="translated">글로벌 코 루틴은 데몬 스레드와 같습니다</target>
        </trans-unit>
        <trans-unit id="d468d0378c00d1e27a28a236d7de95756c08f8c9" translate="yes" xml:space="preserve">
          <source>Global functions &lt;code&gt;forInts&lt;/code&gt;, &lt;code&gt;forFloats&lt;/code&gt;, or &lt;code&gt;strings&lt;/code&gt; are turned into the functions pointers in the &lt;code&gt;kotlin.root.example&lt;/code&gt; anonymous struct.</source>
          <target state="translated">&lt;code&gt;forInts&lt;/code&gt; , &lt;code&gt;forFloats&lt;/code&gt; 또는 &lt;code&gt;strings&lt;/code&gt; 전역 함수 는 &lt;code&gt;kotlin.root.example&lt;/code&gt; anonymous 구조체 의 함수 포인터로 바뀝니다 .</target>
        </trans-unit>
        <trans-unit id="30cadf19adfad41f8a6e59daa5ff3a3d48ba595c" translate="yes" xml:space="preserve">
          <source>Global variables and singletons</source>
          <target state="translated">전역 변수와 싱글 톤</target>
        </trans-unit>
        <trans-unit id="1044c240904be1204cda061e8f188ed693002d4b" translate="yes" xml:space="preserve">
          <source>GlobalEventHandlers</source>
          <target state="translated">GlobalEventHandlers</target>
        </trans-unit>
        <trans-unit id="baed9919f2e4f46815715dc91aa4078ed633aaf4" translate="yes" xml:space="preserve">
          <source>GlobalPerformance</source>
          <target state="translated">GlobalPerformance</target>
        </trans-unit>
        <trans-unit id="765216c578e052557132746a69028e4fe8edce22" translate="yes" xml:space="preserve">
          <source>Go on to the next task with the &lt;strong&gt;Next&lt;/strong&gt; icon at the top of &lt;strong&gt;Task Description&lt;/strong&gt; panel:</source>
          <target state="translated">&lt;strong&gt;작업 설명&lt;/strong&gt; 패널 상단에 있는 &lt;strong&gt;다음&lt;/strong&gt; 아이콘 을 사용하여 다음 작업으로 넘어갑니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5f3e2d1c4c51aa19411eef4446fc3ed3a3fbd788" translate="yes" xml:space="preserve">
          <source>Go through and accept the default configuration, then click &lt;strong&gt;Finish&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dc56189f84c8bd9505ed21d652da81943de515c" translate="yes" xml:space="preserve">
          <source>Go to &lt;strong&gt;Preferences -&amp;gt; Plugins&lt;/strong&gt; (or &lt;strong&gt;Configure -&amp;gt; Plugins&lt;/strong&gt; from the &lt;strong&gt;Welcome Screen&lt;/strong&gt;), press &lt;strong&gt;Install JetBrains Plugin&amp;hellip;&lt;/strong&gt; and search for EduTools plugin:</source>
          <target state="translated">이동 &lt;strong&gt;환경 설정 -&amp;gt; 플러그인&lt;/strong&gt; (또는 &lt;strong&gt;구성 -&amp;gt; 플러그인&lt;/strong&gt; 로부터 &lt;strong&gt;시작 화면&lt;/strong&gt; )을 눌러 &lt;strong&gt;JetBrains의 플러그인 설치 ...&lt;/strong&gt; 및 플러그인 EduTools 검색 :</target>
        </trans-unit>
        <trans-unit id="891a1edb814b257caca47fbe98d9f5d5b15c6d14" translate="yes" xml:space="preserve">
          <source>Go to &lt;strong&gt;View -&amp;gt; Tool Windows -&amp;gt; Project&lt;/strong&gt; to look at the course structure:</source>
          <target state="translated">코스 구조 를 &lt;strong&gt;보려면보기-&amp;gt; 도구 창-&amp;gt; 프로젝트&lt;/strong&gt; 로 이동 하십시오.</target>
        </trans-unit>
        <trans-unit id="c27811348e0f42b5d50dfc6beb14f03482678a47" translate="yes" xml:space="preserve">
          <source>Go to any &lt;code&gt;.kt&lt;/code&gt; file and rename the package with the IntelliJ IDEA action &lt;strong&gt;Refactor&lt;/strong&gt; | &lt;strong&gt;Rename&lt;/strong&gt; action to &lt;code&gt;org.jetbrains.base64&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06d828f9fe55d8ce78c63f895a57df7399b093e1" translate="yes" xml:space="preserve">
          <source>Go to the browser and enjoy the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8165d64dbe21ad94145d018a811b3d046578b825" translate="yes" xml:space="preserve">
          <source>Google Cloud Platform offers a series of tutorials for deploying Kotlin applications to GCP, both for &lt;a href=&quot;https://cloud.google.com/community/tutorials/kotlin-ktor-app-engine-java8&quot;&gt;Ktor and App Engine&lt;/a&gt; and &lt;a href=&quot;https://cloud.google.com/community/tutorials/kotlin-springboot-app-engine-java8&quot;&gt;Spring and App engine&lt;/a&gt;. In addition there is an &lt;a href=&quot;https://codelabs.developers.google.com/codelabs/cloud-spring-cloud-gcp-kotlin&quot;&gt;interactive code lab&lt;/a&gt; for deploying a Kotlin Spring application.</source>
          <target state="translated">Google Cloud Platform은 &lt;a href=&quot;https://cloud.google.com/community/tutorials/kotlin-ktor-app-engine-java8&quot;&gt;Ktor 및 App Engine&lt;/a&gt; 과 &lt;a href=&quot;https://cloud.google.com/community/tutorials/kotlin-springboot-app-engine-java8&quot;&gt;Spring 및 App 엔진&lt;/a&gt; 모두에서 Kotlin 애플리케이션을 GCP에 배포하기위한 일련의 자습서를 제공합니다 . 또한 Kotlin Spring 애플리케이션을 배포하기위한 &lt;a href=&quot;https://codelabs.developers.google.com/codelabs/cloud-spring-cloud-gcp-kotlin&quot;&gt;대화식 코드 랩&lt;/a&gt; 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f426be61bd7a1e2a2ad7e39cb0258e09623e3b4d" translate="yes" xml:space="preserve">
          <source>Gradle</source>
          <target state="translated">Gradle</target>
        </trans-unit>
        <trans-unit id="6134eca2b360f22c2387c3051541c510c1250e3f" translate="yes" xml:space="preserve">
          <source>Gradle Build Cache Support (since 1.2.20)</source>
          <target state="translated">Gradle 빌드 캐시 지원 (1.2.20부터)</target>
        </trans-unit>
        <trans-unit id="c7cb10f96b225f304e707e064e5400d18a33549a" translate="yes" xml:space="preserve">
          <source>Gradle Plugin</source>
          <target state="translated">그레들 플러그인</target>
        </trans-unit>
        <trans-unit id="277f29d49197aac9cb14a4370ca7921f6b1ecad2" translate="yes" xml:space="preserve">
          <source>Gradle build cache support</source>
          <target state="translated">Gradle 빌드 캐시 지원</target>
        </trans-unit>
        <trans-unit id="35d1c8165e4e67c09f92e3d5f647ffd5441e58ba" translate="yes" xml:space="preserve">
          <source>Gradle build cache support (since 1.2.20)</source>
          <target state="translated">Gradle 빌드 캐시 지원 (1.2.20부터)</target>
        </trans-unit>
        <trans-unit id="a0575dd3e951b41de498712d03d4e2bfef8d7b1f" translate="yes" xml:space="preserve">
          <source>Gradle function</source>
          <target state="translated">그래들 기능</target>
        </trans-unit>
        <trans-unit id="d3a9f6031ee84eef8cc0f71b7cc016500786fd72" translate="yes" xml:space="preserve">
          <source>Gradle module metadata provides rich publishing and dependency resolution features that are used in Kotlin Multiplatform Projects. In Gradle 6.0 and above, module metadata is used in dependency resolution and included in publications by default. Thus, once you update to Gradle 6.0, you can remove &lt;code&gt;enableFeaturePreview(&quot;GRADLE_METADATA&quot;)&lt;/code&gt; from the project&amp;rsquo;s &lt;code&gt;settings.gradle&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e8f2626ed20cf2fef59f13d2bd987a20f6e43c4" translate="yes" xml:space="preserve">
          <source>Gradle module metadata provides rich publishing and dependency resolution features that are used in Kotlin multiplatform projects to simplify dependencies configuration for build authors. In particular, the publications of a multiplatform library may include a special 'root' module that stands for the whole library and is automatically resolved to the appropriate platform-specific artifacts when added as a dependency, as described below.</source>
          <target state="translated">Gradle 모듈 메타 데이터는 Kotlin 멀티 플랫폼 프로젝트에서 빌드 제작자의 종속성 구성을 단순화하는 데 사용되는 풍부한 게시 및 종속성 해결 기능을 제공합니다. 특히, 멀티 플랫폼 라이브러리의 발행물은 전체 라이브러리를 나타내는 특수한 '루트'모듈을 포함 할 수 있으며 아래 설명 된대로 종속성으로 추가 될 때 적절한 플랫폼 별 아티팩트로 자동 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="86031b6812dfd2337c5860974fdf8e6ac4495090" translate="yes" xml:space="preserve">
          <source>Gradle project improvements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0735888b18954fa286b0b5708d1a00215213bb3" translate="yes" xml:space="preserve">
          <source>Gradle supports two languages for build scripts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd0f11cc0565eea500951b2cff526bf32d99bc4" translate="yes" xml:space="preserve">
          <source>Gradle supports two languages for the build scripts. We have the following options:</source>
          <target state="translated">Gradle은 빌드 스크립트에 두 가지 언어를 지원합니다. 다음과 같은 옵션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d87bf69ff6157578fc2fcd2ba9dd05978704f9c9" translate="yes" xml:space="preserve">
          <source>Gradle task for compiling Kotlin sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a09374e25b0d58ba0d749966f8a7d5f70a1922d" translate="yes" xml:space="preserve">
          <source>Gradually change the return type of collection &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; functions to non-nullable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f71244b324fcc1c6b328413612267429db191347" translate="yes" xml:space="preserve">
          <source>Graduation of experimental API</source>
          <target state="translated">실험 API의 졸업</target>
        </trans-unit>
        <trans-unit id="dc1c6d4a7505aca84258226a0109982d4ee37319" translate="yes" xml:space="preserve">
          <source>Groovy language is the oldest supported scripting language for Gradle, it leverages the power of the dynamic typing and runtime features of the language. Sometimes it can be harder to maintain Groovy build scripts. IDEs are struggling to get through the dynamism of Groovy to provide helpful insights or code completion.</source>
          <target state="translated">Groovy 언어는 Gradle에서 지원되는 가장 오래된 스크립팅 언어이며 언어의 동적 타이핑 및 런타임 기능을 활용합니다. 때로는 Groovy 빌드 스크립트를 유지 관리하기가 더 어려울 수 있습니다. IDE는 Groovy의 역 동성을 극복하여 유용한 통찰력 또는 코드 완성을 제공하기 위해 고심하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7214450a2aa2acc2aff209936d73e98c04d25cc" translate="yes" xml:space="preserve">
          <source>Groovy scripts in &lt;code&gt;build.gradle&lt;/code&gt; files</source>
          <target state="translated">&lt;code&gt;build.gradle&lt;/code&gt; 파일의 Groovy 스크립트</target>
        </trans-unit>
        <trans-unit id="2ae6967b07a45b63c8543a6c5e34052414ba32af" translate="yes" xml:space="preserve">
          <source>Grouping</source>
          <target state="translated">Grouping</target>
        </trans-unit>
        <trans-unit id="f580fcf315dbe0e3aac37a8e051a65190b4d82e6" translate="yes" xml:space="preserve">
          <source>Grouping function calls on an object: &lt;code&gt;with&lt;/code&gt;</source>
          <target state="translated">객체에 함수 호출을 그룹화 : &lt;code&gt;with&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a1bb9860eb5022e44d178a9eaf4fcdc57655695f" translate="yes" xml:space="preserve">
          <source>Groups are indexed from 1 to the count of groups in the regular expression. A group with the index 0 corresponds to the entire match.</source>
          <target state="translated">그룹은 정규식에서 1부터 그룹 수까지 색인화됩니다. 인덱스가 0 인 그룹은 전체 일치 항목에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="ac61ad0a10837ed5627a2dd0ab6b66c7c3e0676f" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and returns a map where each group key is associated with a list of corresponding characters.</source>
          <target state="translated">각 문자에 적용된 주어진 &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 리턴 한 키를 사용하여 원래 문자 순서의 문자를 그룹화하고 각 그룹 키가 해당 문자 목록과 연관된 맵을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d2d350494754a3bd923f181a90224cb9cf590352" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and returns a map where each group key is associated with a list of corresponding characters.</source>
          <target state="translated">각 문자에 적용된 주어진 &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 원래 문자 시퀀스의 문자를 그룹화하고 각 그룹 키가 해당 문자 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7cf73cc29f8dbedce10d3ff42ded5a6b73eda280" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and puts to the &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding characters.</source>
          <target state="translated">각 문자에 적용되는 주어진 &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 리턴 한 키를 사용하여 원래 문자 순서의 문자를 그룹화하고 해당 문자 목록과 연관된 각 그룹 키를 &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="346fca99a847fd81522697719b47e4d9be2925a6" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and puts to the &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding characters.</source>
          <target state="translated">각 문자에 적용된 주어진 &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 문자 시퀀스의 문자를 그룹화하고 해당 문자 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="16819263b803ee1d619eddf7cea3cc3aa1ddb8a9" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and returns a map where each group key is associated with a list of corresponding characters.</source>
          <target state="translated">각 문자에 적용된 주어진 &lt;a href=&quot;../group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 리턴 한 키를 사용하여 원래 문자 순서의 문자를 그룹화하고 각 그룹 키가 해당 문자 목록과 연관된 맵을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="ec9462a902044081c941bc01dd80fd18c25a3c6d" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and returns a map where each group key is associated with a list of corresponding characters.</source>
          <target state="translated">각 문자에 적용된 주어진 &lt;a href=&quot;../group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 원래 문자 시퀀스의 문자를 그룹화하고 각 그룹 키가 해당 문자 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="834ceb29666dfabc2774c58d68cddf77c4b7e8b3" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and puts to the &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding characters.</source>
          <target state="translated">각 문자에 적용되는 주어진 &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 리턴 한 키를 사용하여 원래 문자 순서의 문자를 그룹화하고 해당 문자 목록과 연관된 각 그룹 키를 &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="8faec9e70e853d1243873896887d86f6b26a40a1" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and puts to the &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding characters.</source>
          <target state="translated">각 문자에 적용된 주어진 &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 문자 시퀀스의 문자를 그룹화하고 해당 문자 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="a3b218745ea0cc39939249fc515c9fb52230dc23" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and returns a map where each group key is associated with a list of corresponding characters.</source>
          <target state="translated">각 문자에 적용된 주어진 &lt;a href=&quot;group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 리턴 한 키를 사용하여 원래 문자 순서의 문자를 그룹화하고 각 그룹 키가 해당 문자 목록과 연관된 맵을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="aa607dec624fa976f2dc35e62083c3f589864460" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and returns a map where each group key is associated with a list of corresponding characters.</source>
          <target state="translated">각 문자에 적용된 주어진 &lt;a href=&quot;group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 원래 문자 시퀀스의 문자를 그룹화하고 각 그룹 키가 해당 문자 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="eab6055c069a2c7df989a9febe4f384188c0c9be" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and puts to the &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding characters.</source>
          <target state="translated">각 문자에 적용되는 주어진 &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 리턴 한 키를 사용하여 원래 문자 순서의 문자를 그룹화하고 해당 문자 목록과 연관된 각 그룹 키를 &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="1e1722772c9fcdf13c173da691f7ed416bf37de8" translate="yes" xml:space="preserve">
          <source>Groups characters of the original char sequence by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each character and puts to the &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding characters.</source>
          <target state="translated">각 문자에 적용된 주어진 &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 문자 시퀀스의 문자를 그룹화하고 해당 문자 목록과 관련된 각 그룹 키를 &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="beb10184b9eaf2a19d2c8a85f0dcc9de8f275a3d" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;aggregate#kotlin.collections%24aggregate%28kotlin.collections.Grouping%28%28kotlin.collections.aggregate.T%2C+kotlin.collections.aggregate.K%29%29%2C+kotlin.Function4%28%28kotlin.collections.aggregate.K%2C+kotlin.collections.aggregate.R%2C+kotlin.collections.aggregate.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregate.R%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map.</source>
          <target state="translated">키로 &lt;a href=&quot;-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 이전에 누적 된 값과 현재 요소를 인수로 전달하여 각 그룹의 요소에 &lt;a href=&quot;aggregate#kotlin.collections%24aggregate%28kotlin.collections.Grouping%28%28kotlin.collections.aggregate.T%2C+kotlin.collections.aggregate.K%29%29%2C+kotlin.Function4%28%28kotlin.collections.aggregate.K%2C+kotlin.collections.aggregate.R%2C+kotlin.collections.aggregate.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregate.R%29%29%29%2Foperation&quot;&gt;작업&lt;/a&gt; 을 순차적으로 적용 하고 결과를 새 맵에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="f52b84e4a22cd7031d4c054373f2b53b2bcd58e6" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;aggregate#kotlin.collections%24aggregate(kotlin.collections.Grouping((kotlin.collections.aggregate.T,%20kotlin.collections.aggregate.K)),%20kotlin.Function4((kotlin.collections.aggregate.K,%20kotlin.collections.aggregate.R?,%20kotlin.collections.aggregate.T,%20kotlin.Boolean,%20kotlin.collections.aggregate.R)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map.</source>
          <target state="translated">&lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소에 순차적으로 &lt;a href=&quot;aggregate#kotlin.collections%24aggregate(kotlin.collections.Grouping((kotlin.collections.aggregate.T,%20kotlin.collections.aggregate.K)),%20kotlin.Function4((kotlin.collections.aggregate.K,%20kotlin.collections.aggregate.R?,%20kotlin.collections.aggregate.T,%20kotlin.Boolean,%20kotlin.collections.aggregate.R)))/operation&quot;&gt;작업&lt;/a&gt; 을 적용 하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 새 맵에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="d78b573eb1ea66f3add23f57f9a4df87cbfded46" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">키로 &lt;a href=&quot;-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 이전에 누적 된 값과 현재 요소를 인수로 전달하여 각 그룹의 요소에 &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Foperation&quot;&gt;작업&lt;/a&gt; 을 순차적으로 적용 하고 결과를 지정된 &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="c31631c151a343f9c8b5dabb1281b5c29af9a273" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/destination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">&lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소에 순차적으로 &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/operation&quot;&gt;작업&lt;/a&gt; 을 적용 하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 지정된 &lt;a href=&quot;aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/destination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="76bb6c1807250140b502881e8ffed09dd4b1fd1b" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.Function2%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.T%2C+kotlin.collections.fold.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is provided by &lt;a href=&quot;fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.Function2%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.T%2C+kotlin.collections.fold.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2FinitialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</source>
          <target state="translated">키로 &lt;a href=&quot;-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 이전에 누적 된 값과 현재 요소를 인수로 전달하여 각 그룹의 요소에 &lt;a href=&quot;fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.Function2%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.T%2C+kotlin.collections.fold.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2Foperation&quot;&gt;작업&lt;/a&gt; 을 순차적으로 적용 하고 결과를 새 맵에 저장합니다. 누산기의 초기 값은 &lt;a href=&quot;fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.Function2%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.T%2C+kotlin.collections.fold.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2FinitialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; 함수 에 의해 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="c65c91e0b49e269f0aacbdeb1e8b6110be08d78b" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.collections.fold.R%2C+kotlin.Function2%28%28kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the same &lt;a href=&quot;fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.collections.fold.R%2C+kotlin.Function2%28%28kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2FinitialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</source>
          <target state="translated">키로 &lt;a href=&quot;-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 이전에 누적 된 값과 현재 요소를 인수로 전달하여 각 그룹의 요소에 &lt;a href=&quot;fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.collections.fold.R%2C+kotlin.Function2%28%28kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2Foperation&quot;&gt;작업&lt;/a&gt; 을 순차적으로 적용 하고 결과를 새 맵에 저장합니다. 누산기의 초기 값은 각 그룹에 대해 동일한 &lt;a href=&quot;fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.collections.fold.R%2C+kotlin.Function2%28%28kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2FinitialValue&quot;&gt;initialValue&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="14438b03252190d88b47c52214444da5b75cf170" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.Function2((kotlin.collections.fold.K,%20kotlin.collections.fold.T,%20kotlin.collections.fold.R)),%20kotlin.Function3((kotlin.collections.fold.K,%20kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is provided by &lt;a href=&quot;fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.Function2((kotlin.collections.fold.K,%20kotlin.collections.fold.T,%20kotlin.collections.fold.R)),%20kotlin.Function3((kotlin.collections.fold.K,%20kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/initialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소에 순차적으로 &lt;a href=&quot;fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.Function2((kotlin.collections.fold.K,%20kotlin.collections.fold.T,%20kotlin.collections.fold.R)),%20kotlin.Function3((kotlin.collections.fold.K,%20kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/operation&quot;&gt;작업&lt;/a&gt; 을 적용 하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 새 맵에 저장합니다. 누산기의 초기 값은 &lt;a href=&quot;fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.Function2((kotlin.collections.fold.K,%20kotlin.collections.fold.T,%20kotlin.collections.fold.R)),%20kotlin.Function3((kotlin.collections.fold.K,%20kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/initialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; 함수 에 의해 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="3eb5e77739fb3f0557d67687ad744f1af73c24b7" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.collections.fold.R,%20kotlin.Function2((kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the same &lt;a href=&quot;fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.collections.fold.R,%20kotlin.Function2((kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/initialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</source>
          <target state="translated">&lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소에 순차적으로 &lt;a href=&quot;fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.collections.fold.R,%20kotlin.Function2((kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/operation&quot;&gt;작업&lt;/a&gt; 을 적용 하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 새 맵에 저장합니다. 누산기의 초기 값은 각 그룹에 대해 동일한 &lt;a href=&quot;fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.collections.fold.R,%20kotlin.Function2((kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/initialValue&quot;&gt;initialValue&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9854f2468f181697be0f2d6e46ea0904ecd6079d" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is provided by &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2FinitialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</source>
          <target state="translated">키로 &lt;a href=&quot;-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 이전에 누적 된 값과 현재 요소를 인수로 전달하여 각 그룹의 요소에 &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Foperation&quot;&gt;작업&lt;/a&gt; 을 순차적으로 적용 하고 결과를 지정된 &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다 . 누산기의 초기 값은 &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2FinitialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; 함수 에 의해 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="889e9070bf99aa4bd4efd50edeaf2a68bfa9907b" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the same &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2FinitialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</source>
          <target state="translated">키로 &lt;a href=&quot;-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 이전에 누적 된 값과 현재 요소를 인수로 전달하여 각 그룹의 요소에 &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Foperation&quot;&gt;작업&lt;/a&gt; 을 순차적으로 적용 하고 결과를 지정된 &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다 . 누산기의 초기 값은 각 그룹에 대해 동일한 &lt;a href=&quot;fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2FinitialValue&quot;&gt;initialValue&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e26bb9c412996b6a5418cd0809fc777fed178a94" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is provided by &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/initialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소에 순차적으로 &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/operation&quot;&gt;작업&lt;/a&gt; 을 적용 하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 지정된 &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다 . 누산기의 초기 값은 &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/initialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; 함수 에 의해 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="37f0fd67f4552217edda6f5fb57f461c21447dcd" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the same &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/initialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</source>
          <target state="translated">&lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소에 순차적으로 &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/operation&quot;&gt;작업&lt;/a&gt; 을 적용 하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 지정된 &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다 . 누산기의 초기 값은 각 그룹에 대해 동일한 &lt;a href=&quot;fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/initialValue&quot;&gt;initialValue&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="83efeb50c4e9dec95e37f4820667b4239119591b" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;reduce#kotlin.collections%24reduce%28kotlin.collections.Grouping%28%28kotlin.collections.reduce.T%2C+kotlin.collections.reduce.K%29%29%2C+kotlin.Function3%28%28kotlin.collections.reduce.K%2C+kotlin.collections.reduce.S%2C+kotlin.collections.reduce.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the first element of the group.</source>
          <target state="translated">&lt;a href=&quot;-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 키로 그룹화 하고 그룹의 두 번째 요소부터 순차적으로 각 그룹의 요소에 축소 &lt;a href=&quot;reduce#kotlin.collections%24reduce%28kotlin.collections.Grouping%28%28kotlin.collections.reduce.T%2C+kotlin.collections.reduce.K%29%29%2C+kotlin.Function3%28%28kotlin.collections.reduce.K%2C+kotlin.collections.reduce.S%2C+kotlin.collections.reduce.T%2C+%29%29%29%2Foperation&quot;&gt;연산&lt;/a&gt; 을 적용하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 새 맵에 저장합니다. 누산기의 초기 값은 그룹의 첫 번째 요소입니다.</target>
        </trans-unit>
        <trans-unit id="2bf19ea4b61cd9873e10f6e15627becebec930bc" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;reduce#kotlin.collections%24reduce(kotlin.collections.Grouping((kotlin.collections.reduce.T,%20kotlin.collections.reduce.K)),%20kotlin.Function3((kotlin.collections.reduce.K,%20kotlin.collections.reduce.S,%20kotlin.collections.reduce.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the first element of the group.</source>
          <target state="translated">&lt;a href=&quot;-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 그룹의 두 번째 요소부터 순차적으로 각 그룹의 요소에 축소 &lt;a href=&quot;reduce#kotlin.collections%24reduce(kotlin.collections.Grouping((kotlin.collections.reduce.T,%20kotlin.collections.reduce.K)),%20kotlin.Function3((kotlin.collections.reduce.K,%20kotlin.collections.reduce.S,%20kotlin.collections.reduce.T,%20)))/operation&quot;&gt;연산&lt;/a&gt; 을 적용하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 새 맵에 저장합니다. 누산기의 초기 값은 그룹의 첫 번째 요소입니다.</target>
        </trans-unit>
        <trans-unit id="933500c1ca8e977ee9b0687537291630d3768a4b" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the first element of the group.</source>
          <target state="translated">&lt;a href=&quot;-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 키로 그룹화 하고 그룹의 두 번째 요소부터 순차적으로 각 그룹의 요소에 축소 &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Foperation&quot;&gt;조작&lt;/a&gt; 을 적용하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 제공된 &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다. . 누산기의 초기 값은 그룹의 첫 번째 요소입니다.</target>
        </trans-unit>
        <trans-unit id="6807429f4d55a1f34d26de339744b2d8d2671f2b" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the first element of the group.</source>
          <target state="translated">&lt;a href=&quot;-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 그룹의 두 번째 요소부터 순차적으로 각 그룹의 요소에 축소 &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/operation&quot;&gt;연산&lt;/a&gt; 을 적용하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 지정된 &lt;a href=&quot;reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/destination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다. . 누산기의 초기 값은 그룹의 첫 번째 요소입니다.</target>
        </trans-unit>
        <trans-unit id="015ae8e55e1e1ac2045e4141888e3b1d7417038b" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and counts elements in each group to the given &lt;a href=&quot;each-count-to#kotlin.collections%24eachCountTo%28kotlin.collections.Grouping%28%28kotlin.collections.eachCountTo.T%2C+kotlin.collections.eachCountTo.K%29%29%2C+kotlin.collections.eachCountTo.M%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">키별로 &lt;a href=&quot;-grouping/index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 각 그룹의 요소를 지정된 &lt;a href=&quot;each-count-to#kotlin.collections%24eachCountTo%28kotlin.collections.Grouping%28%28kotlin.collections.eachCountTo.T%2C+kotlin.collections.eachCountTo.K%29%29%2C+kotlin.collections.eachCountTo.M%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵으로 계산합니다.</target>
        </trans-unit>
        <trans-unit id="83005e92a6cd8a98b424194ea12d5c603886f856" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; source by key and counts elements in each group to the given &lt;a href=&quot;each-count-to#kotlin.collections%24eachCountTo(kotlin.collections.Grouping((kotlin.collections.eachCountTo.T,%20kotlin.collections.eachCountTo.K)),%20kotlin.collections.eachCountTo.M)/destination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">&lt;a href=&quot;-grouping/index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소를 지정된 &lt;a href=&quot;each-count-to#kotlin.collections%24eachCountTo(kotlin.collections.Grouping((kotlin.collections.eachCountTo.T,%20kotlin.collections.eachCountTo.K)),%20kotlin.collections.eachCountTo.M)/destination&quot;&gt;대상&lt;/a&gt; 맵으로 계산합니다.</target>
        </trans-unit>
        <trans-unit id="490f294445acd743261ddc1eb23853d6e61b542c" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../aggregate#kotlin.collections%24aggregate%28kotlin.collections.Grouping%28%28kotlin.collections.aggregate.T%2C+kotlin.collections.aggregate.K%29%29%2C+kotlin.Function4%28%28kotlin.collections.aggregate.K%2C+kotlin.collections.aggregate.R%2C+kotlin.collections.aggregate.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregate.R%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map.</source>
          <target state="translated">키로 &lt;a href=&quot;index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 이전에 누적 된 값과 현재 요소를 인수로 전달하여 각 그룹의 요소에 &lt;a href=&quot;../aggregate#kotlin.collections%24aggregate%28kotlin.collections.Grouping%28%28kotlin.collections.aggregate.T%2C+kotlin.collections.aggregate.K%29%29%2C+kotlin.Function4%28%28kotlin.collections.aggregate.K%2C+kotlin.collections.aggregate.R%2C+kotlin.collections.aggregate.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregate.R%29%29%29%2Foperation&quot;&gt;작업&lt;/a&gt; 을 순차적으로 적용 하고 결과를 새 맵에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="e84b78281375756fcdd0beb8006d504c305de7bb" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../aggregate#kotlin.collections%24aggregate(kotlin.collections.Grouping((kotlin.collections.aggregate.T,%20kotlin.collections.aggregate.K)),%20kotlin.Function4((kotlin.collections.aggregate.K,%20kotlin.collections.aggregate.R?,%20kotlin.collections.aggregate.T,%20kotlin.Boolean,%20kotlin.collections.aggregate.R)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map.</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소에 순차적으로 &lt;a href=&quot;../aggregate#kotlin.collections%24aggregate(kotlin.collections.Grouping((kotlin.collections.aggregate.T,%20kotlin.collections.aggregate.K)),%20kotlin.Function4((kotlin.collections.aggregate.K,%20kotlin.collections.aggregate.R?,%20kotlin.collections.aggregate.T,%20kotlin.Boolean,%20kotlin.collections.aggregate.R)))/operation&quot;&gt;작업&lt;/a&gt; 을 적용 하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 새 맵에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="d0d422dce75fcd6501bddf563bfffca9153d62f0" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">키로 &lt;a href=&quot;index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 이전에 누적 된 값과 현재 요소를 인수로 전달하여 각 그룹의 요소에 &lt;a href=&quot;../aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Foperation&quot;&gt;작업&lt;/a&gt; 을 순차적으로 적용 하고 결과를 지정된 &lt;a href=&quot;../aggregate-to#kotlin.collections%24aggregateTo%28kotlin.collections.Grouping%28%28kotlin.collections.aggregateTo.T%2C+kotlin.collections.aggregateTo.K%29%29%2C+kotlin.collections.aggregateTo.M%2C+kotlin.Function4%28%28kotlin.collections.aggregateTo.K%2C+kotlin.collections.aggregateTo.R%2C+kotlin.collections.aggregateTo.T%2C+kotlin.Boolean%2C+kotlin.collections.aggregateTo.R%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="49043aae2ae8239d9ff33b791e426da2b7ddd9cd" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/destination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소에 순차적으로 &lt;a href=&quot;../aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/operation&quot;&gt;작업&lt;/a&gt; 을 적용 하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 지정된 &lt;a href=&quot;../aggregate-to#kotlin.collections%24aggregateTo(kotlin.collections.Grouping((kotlin.collections.aggregateTo.T,%20kotlin.collections.aggregateTo.K)),%20kotlin.collections.aggregateTo.M,%20kotlin.Function4((kotlin.collections.aggregateTo.K,%20kotlin.collections.aggregateTo.R?,%20kotlin.collections.aggregateTo.T,%20kotlin.Boolean,%20kotlin.collections.aggregateTo.R)))/destination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="b3acede8354576676a7060a6788281a42ba83ce9" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.Function2%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.T%2C+kotlin.collections.fold.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is provided by &lt;a href=&quot;../fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.Function2%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.T%2C+kotlin.collections.fold.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2FinitialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</source>
          <target state="translated">키로 &lt;a href=&quot;index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 이전에 누적 된 값과 현재 요소를 인수로 전달하여 각 그룹의 요소에 &lt;a href=&quot;../fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.Function2%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.T%2C+kotlin.collections.fold.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2Foperation&quot;&gt;작업&lt;/a&gt; 을 순차적으로 적용 하고 결과를 새 맵에 저장합니다. 누산기의 초기 값은 &lt;a href=&quot;../fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.Function2%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.T%2C+kotlin.collections.fold.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.fold.K%2C+kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2FinitialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; 함수 에 의해 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="bee30654191ef79d0432bd589fd07c4fc64c2c69" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.collections.fold.R%2C+kotlin.Function2%28%28kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the same &lt;a href=&quot;../fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.collections.fold.R%2C+kotlin.Function2%28%28kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2FinitialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</source>
          <target state="translated">키로 &lt;a href=&quot;index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 이전에 누적 된 값과 현재 요소를 인수로 전달하여 각 그룹의 요소에 &lt;a href=&quot;../fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.collections.fold.R%2C+kotlin.Function2%28%28kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2Foperation&quot;&gt;작업&lt;/a&gt; 을 순차적으로 적용 하고 결과를 새 맵에 저장합니다. 누산기의 초기 값은 각 그룹에 대해 동일한 &lt;a href=&quot;../fold#kotlin.collections%24fold%28kotlin.collections.Grouping%28%28kotlin.collections.fold.T%2C+kotlin.collections.fold.K%29%29%2C+kotlin.collections.fold.R%2C+kotlin.Function2%28%28kotlin.collections.fold.R%2C+kotlin.collections.fold.T%2C+%29%29%29%2FinitialValue&quot;&gt;initialValue&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6f872af8fb0409f68f45c9a310c99062b4c6acbb" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.Function2((kotlin.collections.fold.K,%20kotlin.collections.fold.T,%20kotlin.collections.fold.R)),%20kotlin.Function3((kotlin.collections.fold.K,%20kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is provided by &lt;a href=&quot;../fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.Function2((kotlin.collections.fold.K,%20kotlin.collections.fold.T,%20kotlin.collections.fold.R)),%20kotlin.Function3((kotlin.collections.fold.K,%20kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/initialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소에 순차적으로 &lt;a href=&quot;../fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.Function2((kotlin.collections.fold.K,%20kotlin.collections.fold.T,%20kotlin.collections.fold.R)),%20kotlin.Function3((kotlin.collections.fold.K,%20kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/operation&quot;&gt;작업&lt;/a&gt; 을 적용 하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 새 맵에 저장합니다. 누산기의 초기 값은 &lt;a href=&quot;../fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.Function2((kotlin.collections.fold.K,%20kotlin.collections.fold.T,%20kotlin.collections.fold.R)),%20kotlin.Function3((kotlin.collections.fold.K,%20kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/initialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; 함수 에 의해 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="6207086f6f3ad1a2f4fe638d7281a6d2d2a6bfde" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.collections.fold.R,%20kotlin.Function2((kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the same &lt;a href=&quot;../fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.collections.fold.R,%20kotlin.Function2((kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/initialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소에 순차적으로 &lt;a href=&quot;../fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.collections.fold.R,%20kotlin.Function2((kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/operation&quot;&gt;작업&lt;/a&gt; 을 적용 하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 새 맵에 저장합니다. 누산기의 초기 값은 각 그룹에 대해 동일한 &lt;a href=&quot;../fold#kotlin.collections%24fold(kotlin.collections.Grouping((kotlin.collections.fold.T,%20kotlin.collections.fold.K)),%20kotlin.collections.fold.R,%20kotlin.Function2((kotlin.collections.fold.R,%20kotlin.collections.fold.T,%20)))/initialValue&quot;&gt;initialValue&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0ed265b07fc8dddafb0187a982928efab397ce8f" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is provided by &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2FinitialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</source>
          <target state="translated">키로 &lt;a href=&quot;index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 이전에 누적 된 값과 현재 요소를 인수로 전달하여 각 그룹의 요소에 &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Foperation&quot;&gt;작업&lt;/a&gt; 을 순차적으로 적용 하고 결과를 지정된 &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다 . 누산기의 초기 값은 &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.Function2%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.R%29%29%2C+kotlin.Function3%28%28kotlin.collections.foldTo.K%2C+kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2FinitialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; 함수 에 의해 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="993e5ec052dbbeb5a3ec6c7dcfcb192706c6c5a9" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the same &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2FinitialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</source>
          <target state="translated">키로 &lt;a href=&quot;index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 이전에 누적 된 값과 현재 요소를 인수로 전달하여 각 그룹의 요소에 &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Foperation&quot;&gt;작업&lt;/a&gt; 을 순차적으로 적용 하고 결과를 지정된 &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다 . 누산기의 초기 값은 각 그룹에 대해 동일한 &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo%28kotlin.collections.Grouping%28%28kotlin.collections.foldTo.T%2C+kotlin.collections.foldTo.K%29%29%2C+kotlin.collections.foldTo.M%2C+kotlin.collections.foldTo.R%2C+kotlin.Function2%28%28kotlin.collections.foldTo.R%2C+kotlin.collections.foldTo.T%2C+%29%29%29%2FinitialValue&quot;&gt;initialValue&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cdd2d8ebf8c1d61fb92c6427de8b3e55569c3960" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is provided by &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/initialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소에 순차적으로 &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/operation&quot;&gt;작업&lt;/a&gt; 을 적용 하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 지정된 &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다 . 누산기의 초기 값은 &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.Function2((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.R)),%20kotlin.Function3((kotlin.collections.foldTo.K,%20kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/initialValueSelector&quot;&gt;initialValueSelector&lt;/a&gt; 함수 에 의해 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="e51ab8517eab3bfe25b9b0a9c43678a44556ea4c" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the same &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/initialValue&quot;&gt;initialValue&lt;/a&gt; for each group.</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소에 순차적으로 &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/operation&quot;&gt;작업&lt;/a&gt; 을 적용 하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 지정된 &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/destination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다 . 누산기의 초기 값은 각 그룹에 대해 동일한 &lt;a href=&quot;../fold-to#kotlin.collections%24foldTo(kotlin.collections.Grouping((kotlin.collections.foldTo.T,%20kotlin.collections.foldTo.K)),%20kotlin.collections.foldTo.M,%20kotlin.collections.foldTo.R,%20kotlin.Function2((kotlin.collections.foldTo.R,%20kotlin.collections.foldTo.T,%20)))/initialValue&quot;&gt;initialValue&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c13abf5bc4eeafadf280004e040101dde3fb83cb" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;../reduce#kotlin.collections%24reduce%28kotlin.collections.Grouping%28%28kotlin.collections.reduce.T%2C+kotlin.collections.reduce.K%29%29%2C+kotlin.Function3%28%28kotlin.collections.reduce.K%2C+kotlin.collections.reduce.S%2C+kotlin.collections.reduce.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the first element of the group.</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 키로 그룹화 하고 그룹의 두 번째 요소부터 순차적으로 각 그룹의 요소에 축소 &lt;a href=&quot;../reduce#kotlin.collections%24reduce%28kotlin.collections.Grouping%28%28kotlin.collections.reduce.T%2C+kotlin.collections.reduce.K%29%29%2C+kotlin.Function3%28%28kotlin.collections.reduce.K%2C+kotlin.collections.reduce.S%2C+kotlin.collections.reduce.T%2C+%29%29%29%2Foperation&quot;&gt;연산&lt;/a&gt; 을 적용하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 새 맵에 저장합니다. 누산기의 초기 값은 그룹의 첫 번째 요소입니다.</target>
        </trans-unit>
        <trans-unit id="701b0d8ef55ce90cadb15bc8ef5711de7e64828b" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;../reduce#kotlin.collections%24reduce(kotlin.collections.Grouping((kotlin.collections.reduce.T,%20kotlin.collections.reduce.K)),%20kotlin.Function3((kotlin.collections.reduce.K,%20kotlin.collections.reduce.S,%20kotlin.collections.reduce.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in a new map. An initial value of accumulator is the first element of the group.</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;그룹화&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 그룹의 두 번째 요소부터 순차적으로 각 그룹의 요소에 축소 &lt;a href=&quot;../reduce#kotlin.collections%24reduce(kotlin.collections.Grouping((kotlin.collections.reduce.T,%20kotlin.collections.reduce.K)),%20kotlin.Function3((kotlin.collections.reduce.K,%20kotlin.collections.reduce.S,%20kotlin.collections.reduce.T,%20)))/operation&quot;&gt;연산&lt;/a&gt; 을 적용하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 새 맵에 저장합니다. 누산기의 초기 값은 그룹의 첫 번째 요소입니다.</target>
        </trans-unit>
        <trans-unit id="abbc3f18ca4e8fe2849f2e16a8381bdec04177da" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;../reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Foperation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the first element of the group.</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 키로 그룹화 하고 그룹의 두 번째 요소부터 순차적으로 각 그룹의 요소에 축소 &lt;a href=&quot;../reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Foperation&quot;&gt;조작&lt;/a&gt; 을 적용하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 제공된 &lt;a href=&quot;../reduce-to#kotlin.collections%24reduceTo%28kotlin.collections.Grouping%28%28kotlin.collections.reduceTo.T%2C+kotlin.collections.reduceTo.K%29%29%2C+kotlin.collections.reduceTo.M%2C+kotlin.Function3%28%28kotlin.collections.reduceTo.K%2C+kotlin.collections.reduceTo.S%2C+kotlin.collections.reduceTo.T%2C+%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다. . 누산기의 초기 값은 그룹의 첫 번째 요소입니다.</target>
        </trans-unit>
        <trans-unit id="8e5e985f01683758c44d7c9923fccb94f2cf72aa" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and applies the reducing &lt;a href=&quot;../reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/operation&quot;&gt;operation&lt;/a&gt; to the elements of each group sequentially starting from the second element of the group, passing the previously accumulated value and the current element as arguments, and stores the results in the given &lt;a href=&quot;../reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/destination&quot;&gt;destination&lt;/a&gt; map. An initial value of accumulator is the first element of the group.</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;그룹화&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 그룹의 두 번째 요소부터 순차적으로 각 그룹의 요소에 축소 &lt;a href=&quot;../reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/operation&quot;&gt;연산&lt;/a&gt; 을 적용하여 이전에 누적 된 값과 현재 요소를 인수로 전달하고 결과를 지정된 &lt;a href=&quot;../reduce-to#kotlin.collections%24reduceTo(kotlin.collections.Grouping((kotlin.collections.reduceTo.T,%20kotlin.collections.reduceTo.K)),%20kotlin.collections.reduceTo.M,%20kotlin.Function3((kotlin.collections.reduceTo.K,%20kotlin.collections.reduceTo.S,%20kotlin.collections.reduceTo.T,%20)))/destination&quot;&gt;대상&lt;/a&gt; 맵 에 저장합니다. . 누산기의 초기 값은 그룹의 첫 번째 요소입니다.</target>
        </trans-unit>
        <trans-unit id="def242ad6826d52ffd2160988337cd2d241e310d" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and counts elements in each group to the given &lt;a href=&quot;../each-count-to#kotlin.collections%24eachCountTo%28kotlin.collections.Grouping%28%28kotlin.collections.eachCountTo.T%2C+kotlin.collections.eachCountTo.K%29%29%2C+kotlin.collections.eachCountTo.M%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">키별로 &lt;a href=&quot;index&quot;&gt;그룹화&lt;/a&gt; 소스 에서 요소를 그룹화 하고 각 그룹의 요소를 지정된 &lt;a href=&quot;../each-count-to#kotlin.collections%24eachCountTo%28kotlin.collections.Grouping%28%28kotlin.collections.eachCountTo.T%2C+kotlin.collections.eachCountTo.K%29%29%2C+kotlin.collections.eachCountTo.M%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵으로 계산합니다.</target>
        </trans-unit>
        <trans-unit id="75c6f356334d079413ca86cb4f880a11e2068327" translate="yes" xml:space="preserve">
          <source>Groups elements from the &lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; source by key and counts elements in each group to the given &lt;a href=&quot;../each-count-to#kotlin.collections%24eachCountTo(kotlin.collections.Grouping((kotlin.collections.eachCountTo.T,%20kotlin.collections.eachCountTo.K)),%20kotlin.collections.eachCountTo.M)/destination&quot;&gt;destination&lt;/a&gt; map.</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;Grouping&lt;/a&gt; 소스의 요소를 키별로 그룹화 하고 각 그룹의 요소를 지정된 &lt;a href=&quot;../each-count-to#kotlin.collections%24eachCountTo(kotlin.collections.Grouping((kotlin.collections.eachCountTo.T,%20kotlin.collections.eachCountTo.K)),%20kotlin.collections.eachCountTo.M)/destination&quot;&gt;대상&lt;/a&gt; 맵으로 계산합니다.</target>
        </trans-unit>
        <trans-unit id="33bdc57b4803e7486893c856c65f9f2dc83d888d" translate="yes" xml:space="preserve">
          <source>Groups elements from the Grouping source by key and counts elements in each group.</source>
          <target state="translated">키로 그룹화 소스에서 요소를 그룹화하고 각 그룹의 요소를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="0049cbdd9a79fa0c1c0a57f41eb649c85fb3f9da" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1c51d9088c4daf2245ac28bdf16088c56db1ffb6" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.BooleanArray%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.BooleanArray%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b2c08078d6fe0e8e94be2dbd5c83cf3ded89183e" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ByteArray%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ByteArray%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2114e4aff30894275945688a229421607cdf62f9" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.CharArray%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.CharArray%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a2bb5c5822f15801f72e694bf63c203633cabb8e" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.DoubleArray%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.DoubleArray%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fdef4c643a8c0c33ffb57b3bbff3489b47f9e492" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.FloatArray%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.FloatArray%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5aef18a32d519975f70caf15dc5e44830c8833f7" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.IntArray%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.IntArray%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5f139e736a7f90fc2da9b03415aad0910e913890" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.LongArray%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.LongArray%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ae18d1f7b9a9fac041c1f739af868e400dd69900" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ShortArray%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ShortArray%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4f3177e8bbafa7ae57628d22bf32feb937052adf" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UByteArray%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UByteArray%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bb266de87014489fcf7146d343f2089ced330186" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UIntArray%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UIntArray%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ed7d644cb34fbeb886322ce233475a7ba83b2351" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ULongArray%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ULongArray%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="82394286609da7139425ea67f88a8ceec3cb07d3" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UShortArray%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UShortArray%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="00be0847533736b989db053061f9d8259f5ad30c" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="851dc2a7f0b5bf3f0550eb1666343fa4298b77e7" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.BooleanArray,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.BooleanArray,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d0686021f7dd8de62016ee3edbfb2fd36fd9af47" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ByteArray,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ByteArray,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b4485e588db84ca7c3dfeb796a75f2b1646eaa90" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.CharArray,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.CharArray,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="35d37c5aeaf63c6b99ac03443d5c7d6fc8c4ed69" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.DoubleArray,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.DoubleArray,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="42dd362008c94e1c24999bff86f64540a0d78915" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.FloatArray,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.FloatArray,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="73a2fc8ff63aac6c8ba7ba540f42315241f445a4" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.IntArray,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.IntArray,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9cd16b19000fbfd1271e5a6063fe1f5998f36bd0" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.LongArray,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.LongArray,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="aee9f29d1a17ba05da4ea0df4b3ad33e9ce1ac9f" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ShortArray,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ShortArray,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7d8d6b89a1ffd4edf5f704956fd67152bc730c30" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UByteArray,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UByteArray,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6fc1d1216ab12356ac9f4534f9863816b14f47b5" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UIntArray,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UIntArray,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0e559ac6014c6475b204e822ee249f10246561c0" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ULongArray,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ULongArray,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="40daa48f46aa32fde5690ab8a81a97501bd4554d" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UShortArray,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UShortArray,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b97359dd418232f3e9dfba4839af5b34080c030a" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="ce5a0635a524f1fec495708d53a45e84dfbe68b5" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="958569e0463e46cabce02a2bbd6365d74a9b357e" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="f0fb79969db9482e65fa3420c1d0bf7843b07e7f" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="306933cb3933a6a1a74b8d42cc0396d5c33a34dc" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="565bf8325f2e55755766a63645c8ab50123f18b5" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="391eb4b360ddda6247da1f2acec1ff424920a711" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="4eaa4fffc174c3473d3d102b97c7875e8172a200" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="48d9c4775abfc93a0b1d431d33160466750f89f2" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="b8605775196a80b16b6519486fb7c28367deeec5" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="0dc001caed09ffefd53b93e3197a629ed1fc0ec4" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="a72b276dac35986efed8b6df558338b126cfdf57" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="0226904415121a1435b0100b90ba0df857d6c486" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="b26d70081c9844a17a1b7dedbd25e3b5d8bccd9e" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="53ca44e9009ee71d251a3b844ed67db64fe945a2" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="bd9cf0053728f15d0a04e11c79ecb2b08f4e2d79" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="4e23304eaf85eacc24085e9d44044b80eba0d853" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="b8e21cc415d3a6b7422e1cb1cc57bc3a34816407" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="a673bcb10b2afd9a53d6e2930f5d472748f33ab3" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="2fa4db2d190a336a56066a41714cf2d0d9833be3" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="3dbdb6025dfcd229b2af63a2bcf4111f0cc34cac" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="5946536c3ea37e9763e0415867c32eaeeeb97963" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="68e74c2740eed77d8bcefc6f236f43775a6ec431" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="184e8c08bebdae365e9e5a2e376642b16492ef98" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="c50753c669c09345d773fbfb1fe3a6cc83d1bbc8" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="819cc0bf941cc430b4e7d67fbb606c3dc00fce1e" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="f1ea1983ee1ace62ea4d7847ae47f2af29e3e8b7" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="60057156284b20a226c459687a5df5375c98b407" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6f9c701e783385331f9ae2fa7a4574978463d51e" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="c4346532147f3b7227b76a9ea9ccb0dcb1ef48ff" translate="yes" xml:space="preserve">
          <source>Groups elements of the original array by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 배열의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="aeab561390722ea1c65c8dd6cb19582a63491afa" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 기준으로 원본 컬렉션의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된지도를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6b223949c43afb147fd558310083444af5573fdc" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 컬렉션의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="517d4d0a40fb4e4ebf5b17ce5e285bf3ea95e744" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 기준으로 원본 컬렉션의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="fdb96cee8b23426759c383481c1e9e091bac835b" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 컬렉션의 요소를 그룹화하고 해당 요소 목록과 연결된 각 그룹 키를 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="18645dce0a179d46721040a013c7c2aaf281e353" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 기준으로 원본 컬렉션의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된지도를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7d871694cc7e99432d86f1ef7a7307d8a0b67f70" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 컬렉션의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="839f3ff0a4b21a3fb439fd9a44418a2158e05fa4" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 기준으로 원본 컬렉션의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="d8afc4e0571a5dbffbed0463fbf8088fa2876f03" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 컬렉션의 요소를 그룹화하고 해당 요소 목록과 연결된 각 그룹 키를 &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="33bf3bb48ad29661f3baae393a0cc99f73167717" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 기준으로 원본 컬렉션의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된지도를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f3f8482249d4dd70954b6803191cd2679b868e2c" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 컬렉션의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7931ac3eb2cb1ac7f85b3778bd370248cf181321" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 기준으로 원본 컬렉션의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="0994ec7bb2bbbda52f55efe47fea24be4785b00e" translate="yes" xml:space="preserve">
          <source>Groups elements of the original collection by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 컬렉션의 요소를 그룹화하고 해당 요소 목록과 연결된 각 그룹 키를 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="b738b8d42d76ab1d26042cd7bca1712e233e1b00" translate="yes" xml:space="preserve">
          <source>Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 시퀀스의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9c21c1183dc7cdbc83cbd116e0d231316200c5ff" translate="yes" xml:space="preserve">
          <source>Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 시퀀스의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="97ac36e3e9fd52501da0a3b987cc43c0293e964d" translate="yes" xml:space="preserve">
          <source>Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 기준으로 원래 시퀀스의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="0849a7627e44c1cb08f9cd081b09688106279546" translate="yes" xml:space="preserve">
          <source>Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 시퀀스의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="8a8875f0180052555387882539b34b0e16ba24e2" translate="yes" xml:space="preserve">
          <source>Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 사용하여 원래 시퀀스의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1ef7e07bd10fd401a375bd880a4a64dce16aa688" translate="yes" xml:space="preserve">
          <source>Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and returns a map where each group key is associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 시퀀스의 요소를 그룹화하고 각 그룹 키가 해당 요소 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="05b9a5d5612ee02f871ecbd0b90c1f1934726c0f" translate="yes" xml:space="preserve">
          <source>Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키를 기준으로 원래 시퀀스의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%29%2Fdestination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="a84388243a1cb9bf17e3b36ea4d2ca2d008c524e" translate="yes" xml:space="preserve">
          <source>Groups elements of the original sequence by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to each element and puts to the &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding elements.</source>
          <target state="translated">각 요소에 적용된 주어진 &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수에 의해 반환 된 키로 원래 시퀀스의 요소를 그룹화하고 해당 요소 목록과 관련된 각 그룹 키를 &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)))/destination&quot;&gt;대상&lt;/a&gt; 맵에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="0c13d802fc83fb417f4db679bc54a8b8dd9c4cd6" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="edf45bfebe04f5e0932aa2ebd24d8f8ad23cf236" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.BooleanArray%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.BooleanArray%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.BooleanArray%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.BooleanArray%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="ec68bf694aaedf58fbfabe0c2f60c18f77929117" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ByteArray%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ByteArray%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ByteArray%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ByteArray%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="30925fcc6b9f20201f2ddac9f2047ff0b5d9574b" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.CharArray%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.CharArray%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.CharArray%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.CharArray%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="9e12a790fbd231e076f738a178fccc8139b8c554" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.DoubleArray%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.DoubleArray%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.DoubleArray%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.DoubleArray%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="5a588399d89bc5711966ed2730aedf4dbbc22c98" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.FloatArray%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.FloatArray%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.FloatArray%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.FloatArray%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="bef79b8ef9f6baedb0d78a983d328c8bf8fa09e0" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.IntArray%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.IntArray%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.IntArray%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.IntArray%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="4a9b47e51433f950b5a1bd41c28bae6d294580d6" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.LongArray%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.LongArray%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.LongArray%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.LongArray%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="5d0867a1b19df800095755738cbfc807be904120" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ShortArray%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ShortArray%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ShortArray%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ShortArray%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="b833a48470c0f3342699c408599dfb224a17fc29" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UByteArray%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UByteArray%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UByteArray%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UByteArray%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="9323fc10d5fdfdc6ca5c0862bd237bce5d316229" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UIntArray%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UIntArray%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UIntArray%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UIntArray%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="262fd693f93c7d8fc592a4a596034da2937b873c" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ULongArray%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ULongArray%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ULongArray%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.ULongArray%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="105d959656cfbe5d1a8214c7c01d2e5689ed25e9" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UShortArray%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UShortArray%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UShortArray%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.UShortArray%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="ecf4088d9c38778f598151be7feb7b7774df4498" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키를 사용하여 원래의 집합의 각 요소에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="3e818374c832f11ad7cf45f6178a91f51d726c8f" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d43c17790dc4757831d2cc50497c2e18b09d0601" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.BooleanArray,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.BooleanArray,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.BooleanArray,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.BooleanArray,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="37b71ce400ec291fcef9e599c5f9caee14462f98" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ByteArray,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ByteArray,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ByteArray,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ByteArray,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7a48686c2dea60384d7268be3076663be02e3ccc" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.CharArray,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.CharArray,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.CharArray,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.CharArray,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dff2bb1f566c5a3bc8920566b9e44fc8cc19de29" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.DoubleArray,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.DoubleArray,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.DoubleArray,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.DoubleArray,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="073f6639c0e8a5161ab11731ee32de336db0b24c" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.FloatArray,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.FloatArray,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.FloatArray,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.FloatArray,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2b5328206de5ee8f25250e777d0ce8504c619ffd" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.IntArray,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.IntArray,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.IntArray,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.IntArray,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="93bcc37951503ce8f435d9dd7f415ef907f2fe04" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.LongArray,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.LongArray,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.LongArray,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.LongArray,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8481a8141b9fca364a117ac317145fcddcdce0b8" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ShortArray,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ShortArray,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ShortArray,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ShortArray,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="99a29eff32f18cebce5eaf3017168b185cd4d887" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UByteArray,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UByteArray,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UByteArray,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UByteArray,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f60c8c1cf857e5f500c8a1f4ff2857524de2f085" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UIntArray,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UIntArray,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UIntArray,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UIntArray,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6a9e85939866bd6c507e4c0389b8135268fd91e3" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ULongArray,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ULongArray,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ULongArray,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.ULongArray,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ff37a5858a1e7cdefab2bfcf1039804f418f1712" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UShortArray,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UShortArray,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UShortArray,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.UShortArray,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3514bab0fde26cbf388eca1ef93294598a9e6f13" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키를 사용하여 원래의 집합의 각 요소에인가 &lt;a href=&quot;../../kotlin.collections/group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="5e14e17af229b7a64cd72c9e61381d31167b02c6" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="15afb1e1aafcde9c9f0c493b7b5514d708c3ef21" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.BooleanArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="6102f783ca6b80ae09922c8a9d4c9e3a06950b2c" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="bfd1d751a5b539bd58d073a68e86a87eda78d821" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.CharArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="6c7492e3646e11be56f82e0e3e11b83b12c93472" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.DoubleArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="90040553349b0e00671106e1fa0d8a198cb768af" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.FloatArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="75946a44f171c6d433da12b2a5c3adcb053d5d8a" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.IntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="1388bb95a8bb43baa4d446382e92690f393842e5" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.LongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="f797f7632480a1a27f645be371f21e618e72d2f2" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="b8aa35750fe93dcea4289b1f9976ae9787e28035" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UByteArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UByte%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="1211c1d0459b8fb7bd06c13ce866bd49a3af49e8" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UIntArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UInt%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="2ded10c3a8711d6ea075fd3e37b8a98fb491c5ce" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.ULongArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.ULong%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="5f2aa4bf740741abbe1bf0a2e26d33e482572358" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.UShortArray%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.UShort%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="e91b7e58de38408e07d485e9a36d764d14890a9f" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키를 사용하여 원래의 집합의 각 요소에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="8cb093e9d155f168a630e7aede8f7059f633d240" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="0ad68d3c5e60aee8250b8e17e15b15cb8ac4b1d9" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.BooleanArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Boolean,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="aa4f46661a4e5ec7b0630ffeb46eda4ee66f8d8a" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Byte,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="d4ffea609218a4d7817e1121f93a4a9aa8b0ff47" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.CharArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="6cfbc51899fa056af66031ae18cb2a4d364ca8ce" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.DoubleArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Double,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="2d7afd4e18186602c7c9f75a9c192d4e83926abd" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.FloatArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Float,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="5b63fd1cf47e396ac9cd84945487e899d4160ec0" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.IntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Int,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="728c3ca682cd740058691866d114df4ed247906f" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.LongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Long,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="5bd4c94b207344d45b189203d30c685f9860f5aa" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.Short,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="6472f8a967cf6245c2c00dbcf7377ea042439d61" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UByteArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UByte,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="be7a0bcafa14a0c8d1d1eaf216c7892b7844065a" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UIntArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UInt,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="7b2063272bc8475372d68ba6f4e291ce4eb4f944" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.ULongArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.ULong,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="7979b93d1658f4ea63f4b83055a526a207587537" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.UShortArray,%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.UShort,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="824c5d62bf5b4938a4aae65549bdfbedd3c690ae" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키를 사용하여 원래의 집합의 각 요소에인가 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../../kotlin.collections/group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="d4f604c6cf9776efcb0fe97f434c98f29bdb30c9" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 일본어 문자 시퀀스의 각 문자에인가 &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 캐릭터 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="62f5eace8d7430a4c5c2bea936df42368df12f17" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 문자 시퀀스의 각 문자에 적용된 &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 문자에 적용된 주어진 &lt;a href=&quot;../../kotlin.text/group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="171645e45f713d2812e6be2c0af2d2e851f725e7" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and puts to the &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 일본어 문자 시퀀스의 각 문자에인가 &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 문자 및 풋인가 기능 &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="f5eb122ee5f9296f4be7fb1d730758d514d26017" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and puts to the &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 일본어 문자 시퀀스의 각 문자에인가 &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 문자 및 풋인가 기능 &lt;a href=&quot;../../kotlin.text/group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="4b7ae2e49f1074a964984328edf28807a4559cf8" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키를 사용하여 원래의 집합의 각 요소에인가 &lt;a href=&quot;../group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="a583367e4596cea2375c96d5c33bbaf2492abbd6" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키를 사용하여 원래의 집합의 각 요소에인가 &lt;a href=&quot;../group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="c42e35967e0dd9f88938b50e060ea0e9bc5436b8" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 오리지널 시퀀스의 각 요소에인가 &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="5aa63f587015029a0ef487442013804505efc6db" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 시퀀스의 각 요소에 적용된 &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;../group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d328f2ed4366d09469e07761469f5b31429bef7f" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 일본어 문자 시퀀스의 각 문자에인가 &lt;a href=&quot;../group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 캐릭터 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="d301c21048ea8a999d42d1f7ed4ef685c21030dc" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 문자 시퀀스의 각 문자에 적용된 &lt;a href=&quot;../group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 문자에 적용된 주어진 &lt;a href=&quot;../group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="91a56fc90f80e9983e4d12c68b952245f2c4863d" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키를 사용하여 원래의 집합의 각 요소에인가 &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="c05ad7e6c70a3d43eb32106de6b5bf5c6da323a0" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키를 사용하여 원래의 집합의 각 요소에인가 &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="6133e7ffcba60e8c7ca183d8754244013dee3051" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 오리지널 시퀀스의 각 요소에인가 &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="47265c2657b6a926528cb7d9c427b73abe06c12c" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 오리지널 시퀀스의 각 요소에인가 &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;../group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="c3249a0b5205f9c05c4f99cd18f9870458d31e02" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and puts to the &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 일본어 문자 시퀀스의 각 문자에인가 &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 문자 및 풋인가 기능 &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="166baa96ab7a1a69b981ec5750e0ff539841a42e" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and puts to the &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 일본어 문자 시퀀스의 각 문자에인가 &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 문자 및 풋인가 기능 &lt;a href=&quot;../group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="b4efab6e1ea870536f5cc2e69ae3873ac048af7c" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.Array%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="c30df3e35a857b962ce402eb2bfb40bad2ff2661" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키를 사용하여 원래의 집합의 각 요소에인가 &lt;a href=&quot;group-by#kotlin.collections%24groupBy%28kotlin.collections.Iterable%28%28kotlin.collections.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupBy.T%2C+kotlin.collections.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="df1154b067448259d39461c53e341dd45348e7a5" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 배열의 각 요소에 적용된 &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.Array((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b77cbf8ddc40afafa0077e39bfc24f8a3bb62261" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키를 사용하여 원래의 집합의 각 요소에인가 &lt;a href=&quot;group-by#kotlin.collections%24groupBy(kotlin.collections.Iterable((kotlin.collections.groupBy.T)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.K)),%20kotlin.Function1((kotlin.collections.groupBy.T,%20kotlin.collections.groupBy.V)))/keySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="cbab5fc57f5e6a44c19a84ad4fa26397fdc1c1ad" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 오리지널 시퀀스의 각 요소에인가 &lt;a href=&quot;group-by#kotlin.sequences%24groupBy%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupBy.T%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupBy.T%2C+kotlin.sequences.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 요소 및 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="e85ec99a0a08aeac0d7277d4be8d9ac8b851d048" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 시퀀스의 각 요소에 적용된 &lt;a href=&quot;group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 요소에 적용된 주어진 &lt;a href=&quot;group-by#kotlin.sequences%24groupBy(kotlin.sequences.Sequence((kotlin.sequences.groupBy.T)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.K)),%20kotlin.Function1((kotlin.sequences.groupBy.T,%20kotlin.sequences.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="82fd00734c32884d111e62bfa57dfd2543bb77c1" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 일본어 문자 시퀀스의 각 문자에인가 &lt;a href=&quot;group-by#kotlin.text%24groupBy%28kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupBy.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에의&lt;/a&gt; 캐릭터 복귀 각 그룹 키 값에 대응하는리스트와 연관된지도를 적용 기능.</target>
        </trans-unit>
        <trans-unit id="2812e3260030a692b4e5a1c003e7b35b693912d7" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and returns a map where each group key is associated with a list of corresponding values.</source>
          <target state="translated">원래 문자 시퀀스의 각 문자에 적용된 &lt;a href=&quot;group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; 함수가 반환 한 값을 문자에 적용된 주어진 &lt;a href=&quot;group-by#kotlin.text%24groupBy(kotlin.CharSequence,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupBy.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; 함수가 반환 한 키로 그룹화하고 각 그룹 키가 해당 값 목록과 연결된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="61af8b8644747449b7ea854a912826205e29374c" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.Array%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="57b7411c62c1b48f7b2329cc0f360e751a1d5f04" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키를 사용하여 원래의 집합의 각 요소에인가 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo%28kotlin.collections.Iterable%28%28kotlin.collections.groupByTo.T%29%29%2C+kotlin.collections.groupByTo.M%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.collections.groupByTo.T%2C+kotlin.collections.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="886377e472e1a87f40381595e3ac451afa5c137f" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original array by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 원래의 배열의 각 소자에인가 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.Array((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="f5c8eadbdf334cd6d3c254e2f98e976036a64579" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original collection by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키를 사용하여 원래의 집합의 각 요소에인가 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;group-by-to#kotlin.collections%24groupByTo(kotlin.collections.Iterable((kotlin.collections.groupByTo.T)),%20kotlin.collections.groupByTo.M,%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.K)),%20kotlin.Function1((kotlin.collections.groupByTo.T,%20kotlin.collections.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="ec746744415ac5324814073f398ea295c5d97be1" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 오리지널 시퀀스의 각 요소에인가 &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo%28kotlin.sequences.Sequence%28%28kotlin.sequences.groupByTo.T%29%29%2C+kotlin.sequences.groupByTo.M%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.sequences.groupByTo.T%2C+kotlin.sequences.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="8bebc800c05ec839bcf0d26565459321def9c6f6" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each element of the original sequence by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the element and puts to the &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 오리지널 시퀀스의 각 요소에인가 &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 요소 및 풋인가 기능 &lt;a href=&quot;group-by-to#kotlin.sequences%24groupByTo(kotlin.sequences.Sequence((kotlin.sequences.groupByTo.T)),%20kotlin.sequences.groupByTo.M,%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.K)),%20kotlin.Function1((kotlin.sequences.groupByTo.T,%20kotlin.sequences.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="a5af5557d5a229c09e04a3dabd9144f68eed9121" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and puts to the &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2Fdestination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FvalueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 일본어 문자 시퀀스의 각 문자에인가 &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2FkeySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 문자 및 풋인가 기능 &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo%28kotlin.CharSequence%2C+kotlin.text.groupByTo.M%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.K%29%29%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.text.groupByTo.V%29%29%29%2Fdestination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="045313e9d37e7902173be877c270d12d829e38f8" translate="yes" xml:space="preserve">
          <source>Groups values returned by the &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/valueTransform&quot;&gt;valueTransform&lt;/a&gt; function applied to each character of the original char sequence by the key returned by the given &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/keySelector&quot;&gt;keySelector&lt;/a&gt; function applied to the character and puts to the &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/destination&quot;&gt;destination&lt;/a&gt; map each group key associated with a list of corresponding values.</source>
          <target state="translated">에 의해 반환되는 그룹 값 &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/valueTransform&quot;&gt;valueTransform의&lt;/a&gt; 함수는 주어진 의해 리턴 된 키에 의해 일본어 문자 시퀀스의 각 문자에인가 &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/keySelector&quot;&gt;KeySelector에를&lt;/a&gt; 받는 문자 및 풋인가 기능 &lt;a href=&quot;group-by-to#kotlin.text%24groupByTo(kotlin.CharSequence,%20kotlin.text.groupByTo.M,%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.K)),%20kotlin.Function1((kotlin.Char,%20kotlin.text.groupByTo.V)))/destination&quot;&gt;목적지&lt;/a&gt; 대응하는 값들의리스트와 관련된 각 그룹 키 매핑.</target>
        </trans-unit>
        <trans-unit id="0b4e0ad36013170249087a39af06addff8702427" translate="yes" xml:space="preserve">
          <source>Guide to UI programming with coroutines</source>
          <target state="translated">코 루틴을 사용한 UI 프로그래밍 가이드</target>
        </trans-unit>
        <trans-unit id="ffcd6fd3be2b8e68d56b152d3c64c5bfe63651d1" translate="yes" xml:space="preserve">
          <source>Guide to reactive streams with coroutines</source>
          <target state="translated">코 루틴이 포함 된 반응성 스트림 안내</target>
        </trans-unit>
        <trans-unit id="1ba3456507ad0628ffef08bfa52a7b0cd368f255" translate="yes" xml:space="preserve">
          <source>HIDDEN</source>
          <target state="translated">HIDDEN</target>
        </trans-unit>
        <trans-unit id="0d32529c866e8eac25caf2442d2cc1202e340175" translate="yes" xml:space="preserve">
          <source>HOURS</source>
          <target state="translated">HOURS</target>
        </trans-unit>
        <trans-unit id="cb19a6374948586d14e2b1a2c546309492910187" translate="yes" xml:space="preserve">
          <source>HTMLAllCollection</source>
          <target state="translated">HTMLAllCollection</target>
        </trans-unit>
        <trans-unit id="4c52783da612b22fe54d1b6ac95e715dd9c1b742" translate="yes" xml:space="preserve">
          <source>HTMLCollection</source>
          <target state="translated">HTMLCollection</target>
        </trans-unit>
        <trans-unit id="4160c6e1a844a0e46d0b25c230278933561d83be" translate="yes" xml:space="preserve">
          <source>HTMLHyperlinkElementUtils</source>
          <target state="translated">HTMLHyperlinkElementUtils</target>
        </trans-unit>
        <trans-unit id="5afa4ce27f1e140932faf73c7ec2657e9e9fb1a9" translate="yes" xml:space="preserve">
          <source>HTMLOrSVGImageElement</source>
          <target state="translated">HTMLOrSVGImageElement</target>
        </trans-unit>
        <trans-unit id="e4260e00d7ae68e26d8b2788375dd101818548cd" translate="yes" xml:space="preserve">
          <source>HTMLOrSVGScriptElement</source>
          <target state="translated">HTMLOrSVGScriptElement</target>
        </trans-unit>
        <trans-unit id="f5e84acdec73cacccdd6a0e6708e899e233ab5ef" translate="yes" xml:space="preserve">
          <source>Hadi Hariri, Edoardo Vacchi, S&amp;eacute;bastien Deleuze</source>
          <target state="translated">하디 하리리, 에도아르도 바치, 세바스티앙 델 루제</target>
        </trans-unit>
        <trans-unit id="c0a888dd9c427e4a217a64402be233d1b8e8282e" translate="yes" xml:space="preserve">
          <source>Handling signature clashes with &lt;code&gt;@JvmName&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@JvmName&lt;/code&gt; 과의 서명 충돌 처리</target>
        </trans-unit>
        <trans-unit id="6a7b0d82dac8b36df9262e7f047f7d42bc13f6ba" translate="yes" xml:space="preserve">
          <source>Hands-on Labs</source>
          <target state="translated">실습 랩</target>
        </trans-unit>
        <trans-unit id="f5b53691461c367d22af5a5d9ea5e5bdb4bd573d" translate="yes" xml:space="preserve">
          <source>Hands-on experience is the way to master your Kotlin skills on real examples right in the browser:</source>
          <target state="translated">실제 경험은 브라우저에서 실제 예제를 통해 Kotlin 기술을 습득 할 수있는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="c7e218e13ccebeed31dc7c2a8e9a7a5d7435f040" translate="yes" xml:space="preserve">
          <source>Hands-on labs are long-form tutorials that help you get to know a technology by guiding you through a self-contained project related to a specific topic.</source>
          <target state="translated">실습 랩은 특정 주제와 관련된 자체 포함 된 프로젝트를 안내하여 기술을 익히는 데 도움이되는 긴 형식의 자습서입니다.</target>
        </trans-unit>
        <trans-unit id="a27e0d652450f11c5a65726ad51c1e32bfd59aa5" translate="yes" xml:space="preserve">
          <source>Hands-on labs for Kotlin/JS</source>
          <target state="translated">Kotlin / JS 실습</target>
        </trans-unit>
        <trans-unit id="a9b3bcc1c1b6077725b43c7b2b03b2329c85a7d0" translate="yes" xml:space="preserve">
          <source>Hard Keywords</source>
          <target state="translated">어려운 키워드</target>
        </trans-unit>
        <trans-unit id="97a2b75e2d466574b1a6c8cc957b97c7acf70c1a" translate="yes" xml:space="preserve">
          <source>Hash table based implementation of the &lt;a href=&quot;-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; interface, which additionally preserves the insertion order of entries during the iteration.</source>
          <target state="translated">반복하는 동안 항목의 삽입 순서를 추가로 유지하는 &lt;a href=&quot;-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; 인터페이스 의 해시 테이블 기반 구현 .</target>
        </trans-unit>
        <trans-unit id="d0ceb916e1d644fa6b5389696f5076cf8fd624c1" translate="yes" xml:space="preserve">
          <source>Hash table based implementation of the &lt;a href=&quot;-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; 인터페이스 의 해시 테이블 기반 구현 .</target>
        </trans-unit>
        <trans-unit id="16326864f33a381692b73eed3eeaf677ec94bad6" translate="yes" xml:space="preserve">
          <source>Hash table based implementation of the &lt;a href=&quot;../-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; interface, which additionally preserves the insertion order of entries during the iteration.</source>
          <target state="translated">반복하는 동안 항목의 삽입 순서를 추가로 유지하는 &lt;a href=&quot;../-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; 인터페이스 의 해시 테이블 기반 구현 .</target>
        </trans-unit>
        <trans-unit id="f0bdef08fd6dd05500473c598e6d74a82da5a9fd" translate="yes" xml:space="preserve">
          <source>Hash table based implementation of the &lt;a href=&quot;../-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;../-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; 인터페이스 의 해시 테이블 기반 구현 .</target>
        </trans-unit>
        <trans-unit id="7ea419b54a457cb3c6c5cc65609c5ace43529e56" translate="yes" xml:space="preserve">
          <source>Hash table based implementation of the &lt;a href=&quot;../../kotlin.collections/-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; interface, which additionally preserves the insertion order of entries during the iteration.</source>
          <target state="translated">반복하는 동안 항목의 삽입 순서를 추가로 유지하는 &lt;a href=&quot;../../kotlin.collections/-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; 인터페이스 의 해시 테이블 기반 구현 .</target>
        </trans-unit>
        <trans-unit id="c5be46be14f718f12035351a7fec221127466ed7" translate="yes" xml:space="preserve">
          <source>Hash table based implementation of the &lt;a href=&quot;../../kotlin.collections/-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/-mutable-map/index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; 인터페이스 의 해시 테이블 기반 구현 .</target>
        </trans-unit>
        <trans-unit id="9b4378e29bed19a0caf75d9accb188eba1f1cb68" translate="yes" xml:space="preserve">
          <source>Hash table based implementation of the &lt;a href=&quot;index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; interface, which additionally preserves the insertion order of entries during the iteration.</source>
          <target state="translated">반복하는 동안 항목의 삽입 순서를 추가로 유지하는 &lt;a href=&quot;index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; 인터페이스 의 해시 테이블 기반 구현 .</target>
        </trans-unit>
        <trans-unit id="158ac569cb9477fc0e1256d1493d1370cd5b34b5" translate="yes" xml:space="preserve">
          <source>Hash table based implementation of the &lt;a href=&quot;index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;index#kotlin.collections.MutableMap&quot;&gt;MutableMap&lt;/a&gt; 인터페이스 의 해시 테이블 기반 구현 .</target>
        </trans-unit>
        <trans-unit id="aa8c17a3b1dda3ebc62cb63e33bdab65004a22b7" translate="yes" xml:space="preserve">
          <source>HashChangeEventInit</source>
          <target state="translated">HashChangeEventInit</target>
        </trans-unit>
        <trans-unit id="ba62d7b8d0b157f714c6a6132554b38789c6ada5" translate="yes" xml:space="preserve">
          <source>HashMap</source>
          <target state="translated">HashMap</target>
        </trans-unit>
        <trans-unit id="cac17f9bdb6febebe0052a72f2ab8a6828d20944" translate="yes" xml:space="preserve">
          <source>HashSet</source>
          <target state="translated">HashSet</target>
        </trans-unit>
        <trans-unit id="8503ede3ea63ea360679c1a7bb9c6feb415c1aeb" translate="yes" xml:space="preserve">
          <source>Have fun!</source>
          <target state="translated">즐기세요!</target>
        </trans-unit>
        <trans-unit id="614c8c725939c1409d2367860130473abc3d4ef4" translate="yes" xml:space="preserve">
          <source>Having multiple files which have the same generated Java class name (the same package and the same name or the same &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-name/index&quot;&gt;&lt;code&gt;@JvmName&lt;/code&gt;&lt;/a&gt; annotation) is normally an error. However, the compiler has the ability to generate a single Java facade class which has the specified name and contains all the declarations from all the files which have that name. To enable the generation of such a facade, use the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-multifile-class/index&quot;&gt;&lt;code&gt;@JvmMultifileClass&lt;/code&gt;&lt;/a&gt; annotation in all of the files.</source>
          <target state="translated">동일한 생성 된 Java 클래스 이름 (동일한 패키지 및 동일한 이름 또는 동일한 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-name/index&quot;&gt; &lt;code&gt;@JvmName&lt;/code&gt; &lt;/a&gt; 주석) 을 갖는 여러 파일을 갖는 것은 일반적으로 오류입니다. 그러나 컴파일러는 지정된 이름을 가지며 해당 이름을 가진 모든 파일의 모든 선언을 포함하는 단일 Java 파사드 클래스를 생성 할 수 있습니다. 이러한 파사드를 생성하려면 모든 파일에서 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-multifile-class/index&quot;&gt; &lt;code&gt;@JvmMultifileClass&lt;/code&gt; &lt;/a&gt; 주석을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="1f242aabecbf270e9098f316d26a6f3578a9273f" translate="yes" xml:space="preserve">
          <source>Having the &lt;code&gt;lengthComparator&lt;/code&gt;, you are able to arrange strings by their length instead of the default lexicographical order.</source>
          <target state="translated">갖는 &lt;code&gt;lengthComparator&lt;/code&gt; 을 대신 기본 사전 순의 그 길이로 문자열을 정렬 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c0eaa8edf655cc1e8de855aec9d918e7b1ea95d" translate="yes" xml:space="preserve">
          <source>Having the ability to iterate in both directions, means the &lt;code&gt;ListIterator&lt;/code&gt; can still be used after it reaches the last element.</source>
          <target state="translated">양방향으로 반복 할 수있는 기능은 &lt;code&gt;ListIterator&lt;/code&gt; 가 마지막 요소에 도달 한 후에도 계속 사용할 수 있음을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="90be45baa04a9d5a158798fb0b4bf37260137255" translate="yes" xml:space="preserve">
          <source>Having the receiver as the return value, you can easily include &lt;code&gt;apply&lt;/code&gt; into call chains for more complex processing.</source>
          <target state="translated">수신자를 반환 값으로 설정하면 보다 복잡한 처리를 위해 콜 체인에 쉽게 &lt;code&gt;apply&lt;/code&gt; 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e0d9450925442ce470d2e864cab9481d218ffe6d" translate="yes" xml:space="preserve">
          <source>Header files under the covers</source>
          <target state="translated">표지 아래의 헤더 파일</target>
        </trans-unit>
        <trans-unit id="520de7443d00d6ff4dc3ababbbf6cfbe0b74f4ec" translate="yes" xml:space="preserve">
          <source>Headers</source>
          <target state="translated">Headers</target>
        </trans-unit>
        <trans-unit id="9ed4e25a00846b8efd8b4c649f7a88f722c16c20" translate="yes" xml:space="preserve">
          <source>Hello Kotlin/Native</source>
          <target state="translated">안녕하세요 Kotlin / Native</target>
        </trans-unit>
        <trans-unit id="4aa431cc733d86f8c5a98e712c70b132d3671c4f" translate="yes" xml:space="preserve">
          <source>Hello Kotlin/Native using Command Line Compiler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3628475129b7d03ffe4afe3ff3fd3fb746caedb" translate="yes" xml:space="preserve">
          <source>Hello Kotlin/Native using Gradle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4d55a8d778e5022fab701977c5d840bbc486d0" translate="yes" xml:space="preserve">
          <source>Hello World</source>
          <target state="translated">안녕하세요 월드</target>
        </trans-unit>
        <trans-unit id="ff5585f75c04b35aa1980b334e869011a0d42614" translate="yes" xml:space="preserve">
          <source>Helper functions for creating &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html&quot;&gt;Comparator&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html&quot;&gt;Comparator&lt;/a&gt; 인스턴스 를 만들기위한 도우미 기능</target>
        </trans-unit>
        <trans-unit id="4ba5653c21422f1b85430fd5794566088974aa2d" translate="yes" xml:space="preserve">
          <source>Helper functions for creating &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html&quot;&gt;Comparator&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html&quot;&gt;Comparator&lt;/a&gt; 인스턴스 생성을위한 도우미 기능 .</target>
        </trans-unit>
        <trans-unit id="aadf38d42c47f2942d053ad710757cc1b854fee0" translate="yes" xml:space="preserve">
          <source>Helper functions for creating Comparator instances.</source>
          <target state="translated">Comparator 인스턴스를 만들기위한 도우미 기능</target>
        </trans-unit>
        <trans-unit id="0b73fa64c5ddbe065b8467f94a6ebd4f7c1823cc" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;::isOdd&lt;/code&gt; is a value of function type &lt;code&gt;(Int) -&amp;gt; Boolean&lt;/code&gt;.</source>
          <target state="translated">여기서 &lt;code&gt;::isOdd&lt;/code&gt; 는 함수 유형 &lt;code&gt;(Int) -&amp;gt; Boolean&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="41ccfd26f5a19a10fbdd491b940c29702e4e0642" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;runBlocking&amp;lt;Unit&amp;gt; { ... }&lt;/code&gt; works as an adaptor that is used to start the top-level main coroutine. We explicitly specify its &lt;code&gt;Unit&lt;/code&gt; return type, because a well-formed &lt;code&gt;main&lt;/code&gt; function in Kotlin has to return &lt;code&gt;Unit&lt;/code&gt;.</source>
          <target state="translated">여기서 &lt;code&gt;runBlocking&amp;lt;Unit&amp;gt; { ... }&lt;/code&gt; 은 최상위 주 코 루틴을 시작하는 데 사용되는 어댑터로 작동합니다. 우리는 명시 적으로 지정 &lt;code&gt;Unit&lt;/code&gt; 가 잘 형성하기 때문에, 반환 형식을 &lt;code&gt;main&lt;/code&gt; 코 틀린에 함수가 반환하는 &lt;code&gt;Unit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73ec159c610c0bde512d4dd98796481a0f1dd9af" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;startOtherActivity&lt;/code&gt; is a method defined in our &lt;code&gt;MainActivity&lt;/code&gt;:</source>
          <target state="translated">여기서 &lt;code&gt;startOtherActivity&lt;/code&gt; 는 &lt;code&gt;MainActivity&lt;/code&gt; 에 정의 된 메소드입니다 .</target>
        </trans-unit>
        <trans-unit id="64e9f395cb5a12a58f09dadd871e66a32af07cec" translate="yes" xml:space="preserve">
          <source>Here an interop library will be built and added in the component dependencies.</source>
          <target state="translated">여기에서는 interop 라이브러리가 구성 요소 종속성에 빌드되고 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="9817b024dae16b279b9de34a5943e840e3c6c191" translate="yes" xml:space="preserve">
          <source>Here is a list of the available options:</source>
          <target state="translated">사용 가능한 옵션 목록은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3964503de4031e1f67f448283c7c7436d1b66391" translate="yes" xml:space="preserve">
          <source>Here is a short guide for choosing scope functions depending on the intended purpose:</source>
          <target state="translated">다음은 의도 된 목적에 따라 범위 기능을 선택하기위한 간단한 안내서입니다.</target>
        </trans-unit>
        <trans-unit id="ffc12a7f4c76f906c5fdb788b5e01253afdd3556" translate="yes" xml:space="preserve">
          <source>Here is an example of a Kotlin interface with a default method:</source>
          <target state="translated">다음은 기본 메소드가있는 Kotlin 인터페이스의 예입니다.</target>
        </trans-unit>
        <trans-unit id="354b21831f3e1d3354009c224825e8899e667c5d" translate="yes" xml:space="preserve">
          <source>Here is an example of a function literal with receiver along with its type, where &lt;code&gt;plus&lt;/code&gt; is called on the receiver object:</source>
          <target state="translated">다음은 수신자와 함께 유형이있는 함수 리터럴의 예입니다. 여기서 수신자 오브젝트 에서 &lt;code&gt;plus&lt;/code&gt; 가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9cbaae661e521db61b00232121154a0bc978c4dc" translate="yes" xml:space="preserve">
          <source>Here is how you can encode options by yourself:</source>
          <target state="translated">옵션을 직접 인코딩하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bcb68cd11077c1a66dff0232c6f982357e38486f" translate="yes" xml:space="preserve">
          <source>Here is how you can pass arbitrary options to javac:</source>
          <target state="translated">javac에 임의의 옵션을 전달하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8b5c51aaaea8e6fb9ff9f4bba92240eccf7a3b31" translate="yes" xml:space="preserve">
          <source>Here is the complete list of bitwise operations (available for &lt;code&gt;Int&lt;/code&gt; and &lt;code&gt;Long&lt;/code&gt; only):</source>
          <target state="translated">비트 단위 연산의 전체 목록은 다음과 같습니다 ( &lt;code&gt;Int&lt;/code&gt; 및 &lt;code&gt;Long&lt;/code&gt; 에만 사용 가능).</target>
        </trans-unit>
        <trans-unit id="56019f0e43274837fd8fced2fec882756323dc6f" translate="yes" xml:space="preserve">
          <source>Here is the list of the most significant changes to the Kotlin standard library in 1.4.0:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5968a2159afa31759e26f3ea13b246a929d737" translate="yes" xml:space="preserve">
          <source>Here the constructor is private. By default, all constructors are &lt;code&gt;public&lt;/code&gt;, which effectively amounts to them being visible everywhere where the class is visible (i.e. a constructor of an &lt;code&gt;internal&lt;/code&gt; class is only visible within the same module).</source>
          <target state="translated">여기서 생성자는 비공개입니다. 기본적으로 모든 생성자는 &lt;code&gt;public&lt;/code&gt; 이며, 클래스가 표시되는 모든 곳에서 효과적으로 표시됩니다 (예 : &lt;code&gt;internal&lt;/code&gt; 클래스 의 생성자 는 동일한 모듈 내에서만 표시됨).</target>
        </trans-unit>
        <trans-unit id="f0628102a9e16610a1147c5ea146af2767dcf266" translate="yes" xml:space="preserve">
          <source>Here the type argument of the resulting sequence is inferred to &lt;code&gt;String&lt;/code&gt; from the argument of the &lt;a href=&quot;../../kotlin.sequences/-sequence-scope/yield&quot;&gt;SequenceScope.yield&lt;/a&gt; function, that is called inside the lambda passed to &lt;a href=&quot;../../kotlin.sequences/sequence&quot;&gt;sequence&lt;/a&gt;.</source>
          <target state="translated">여기서 결과 시퀀스의 형식 인수 는 &lt;a href=&quot;../../kotlin.sequences/-sequence-scope/yield&quot;&gt;SequenceScope.yield&lt;/a&gt; 함수 의 인수에서 &lt;code&gt;String&lt;/code&gt; 으로 추론됩니다 . 이는 &lt;a href=&quot;../../kotlin.sequences/sequence&quot;&gt;sequence에&lt;/a&gt; 전달 된 람다 내부에서 호출 됩니다 .</target>
        </trans-unit>
        <trans-unit id="5ed150d2efdc560bc0c053dcbb778cf03c9077fc" translate="yes" xml:space="preserve">
          <source>Here we call a transform function on an element first, and then build a pair from the properties of that function's result.</source>
          <target state="translated">여기에서는 먼저 요소에 대해 변형 함수를 호출 한 다음 해당 함수의 결과 속성에서 쌍을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="2cbc4d7a889a0c905e849d457558acb812460a70" translate="yes" xml:space="preserve">
          <source>Here we can use the &lt;a href=&quot;https://developer.apple.com/documentation/uikit/uidevice?language=objc&quot;&gt;UIDevice&lt;/a&gt; class from the Apple UIKit Framework, which is not available in Java, it is only usable in Swift and Objective-C. Kotlin/Native compiler comes with a set of pre-imported frameworks, so we can use the UIKit Framework without additional steps. Objective-C and Swift Interop is covered in details in the &lt;a href=&quot;../../reference/native/objc_interop&quot;&gt;documentation&lt;/a&gt;</source>
          <target state="translated">여기서는 Java에서는 사용할 수없는 Apple UIKit Framework 의 &lt;a href=&quot;https://developer.apple.com/documentation/uikit/uidevice?language=objc&quot;&gt;UIDevice&lt;/a&gt; 클래스를 사용할 수 있으며 Swift 및 Objective-C에서만 사용할 수 있습니다. Kotlin / Native 컴파일러에는 미리 가져온 프레임 워크가 제공되므로 추가 단계없이 UIKit 프레임 워크를 사용할 수 있습니다. Objective-C 및 Swift Interop은 &lt;a href=&quot;../../reference/native/objc_interop&quot;&gt;설명서&lt;/a&gt; 에 자세히 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2251b76155288ed7475b3b229f327779f9362db1" translate="yes" xml:space="preserve">
          <source>Here we make use of Java's &lt;em&gt;wildcards types&lt;/em&gt; (&lt;code&gt;? extends Base&lt;/code&gt;) to emulate declaration-site variance through use-site variance, because it is all Java has.</source>
          <target state="translated">여기서는 Java의 &lt;em&gt;와일드 카드 유형&lt;/em&gt; ( &lt;code&gt;? extends Base&lt;/code&gt; )을 사용하여 모든 Java가 있기 때문에 사용 사이트 차이를 통해 선언 사이트 차이를 에뮬레이션합니다.</target>
        </trans-unit>
        <trans-unit id="f338597b8ea0d5b8d01fd5c7c715bf06c34ca072" translate="yes" xml:space="preserve">
          <source>Here we provide basic information about learning Kotlin with the EduTools plugin.</source>
          <target state="translated">여기에서는 EduTools 플러그인으로 Kotlin 학습에 대한 기본 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="303358f917fac47ec5578a6e0fa150481911ae89" translate="yes" xml:space="preserve">
          <source>Here we provide basic information about teaching Kotlin with the EduTools plugin.</source>
          <target state="translated">여기에서는 EduTools 플러그인으로 Kotlin을 가르치는 방법에 대한 기본 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1ef65687c96ed79c329d047f1e866230a83d8fdd" translate="yes" xml:space="preserve">
          <source>Here we run into the same familiar problem: &lt;code&gt;Array&amp;lt;T&amp;gt;&lt;/code&gt; is &lt;strong&gt;invariant&lt;/strong&gt; in &lt;code&gt;T&lt;/code&gt;, thus neither of &lt;code&gt;Array&amp;lt;Int&amp;gt;&lt;/code&gt; and &lt;code&gt;Array&amp;lt;Any&amp;gt;&lt;/code&gt; is a subtype of the other. Why? Again, because copy &lt;strong&gt;might&lt;/strong&gt; be doing bad things, i.e. it might attempt to &lt;strong&gt;write&lt;/strong&gt;, say, a String to &lt;code&gt;from&lt;/code&gt;, and if we actually passed an array of &lt;code&gt;Int&lt;/code&gt; there, a &lt;code&gt;ClassCastException&lt;/code&gt; would have been thrown sometime later.</source>
          <target state="translated">여기서 우리는 똑같은 친숙한 문제를 &lt;strong&gt;겪&lt;/strong&gt; 습니다 : &lt;code&gt;Array&amp;lt;T&amp;gt;&lt;/code&gt; 는 &lt;code&gt;T&lt;/code&gt; 에서 &lt;strong&gt;변하지&lt;/strong&gt; 않으므로 &lt;code&gt;Array&amp;lt;Int&amp;gt;&lt;/code&gt; 및 &lt;code&gt;Array&amp;lt;Any&amp;gt;&lt;/code&gt; 는 다른 것의 하위 유형이 아닙니다 . 왜? 복사하기 때문에 다시 &lt;strong&gt;수도&lt;/strong&gt; 나쁜 일을 할, 즉 그것을 시도 할 수 있습니다 &lt;strong&gt;쓰기&lt;/strong&gt; 로 말하자면, 문자열 &lt;code&gt;from&lt;/code&gt; , 우리는 실제의 배열을 통과하면 &lt;code&gt;Int&lt;/code&gt; 이하는 &lt;code&gt;ClassCastException&lt;/code&gt; 이는 언젠가 나중에 발생되었을 것입니다.&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="35c15034dc107b5dfe7ca81016a55158d3c1422e" translate="yes" xml:space="preserve">
          <source>Here we start a coroutine that waits for 1 second and prints &lt;code&gt;Hello&lt;/code&gt;.</source>
          <target state="translated">여기서 우리는 1 초 동안 대기하고 &lt;code&gt;Hello&lt;/code&gt; 를 인쇄하는 코 루틴을 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="a39b3fc4994029915e40feeb64b4f5236e8052fc" translate="yes" xml:space="preserve">
          <source>Here we summarize requirements to delegate objects.</source>
          <target state="translated">여기에서는 객체를 위임하기위한 요구 사항을 요약합니다.</target>
        </trans-unit>
        <trans-unit id="d5b472ee7ff40bf88f4ec29f0eda10fcaca784a6" translate="yes" xml:space="preserve">
          <source>Here we use service function &lt;code&gt;usePinned&lt;/code&gt;, which pins an object, executes block and unpins it on normal and exception paths.</source>
          <target state="translated">여기서는 서비스 함수 &lt;code&gt;usePinned&lt;/code&gt; 를 사용 하여 객체를 고정하고 블록을 실행하고 일반 및 예외 경로에서 고정 해제합니다.</target>
        </trans-unit>
        <trans-unit id="e4f4aba80443aa3eb8e2f7ea243b14bbcc6a9610" translate="yes" xml:space="preserve">
          <source>Here's a list of &lt;code&gt;Product&lt;/code&gt; instances that aren't &lt;code&gt;Comparable&lt;/code&gt; and a &lt;code&gt;Comparator&lt;/code&gt; that defines the order: product &lt;code&gt;p1&lt;/code&gt; precedes product &lt;code&gt;p2&lt;/code&gt; if &lt;code&gt;p1&lt;/code&gt;'s price is less than &lt;code&gt;p2&lt;/code&gt;'s price. So, having a list sorted ascending according to this order, we use &lt;code&gt;binarySearch()&lt;/code&gt; to find the index of the specified &lt;code&gt;Product&lt;/code&gt;.</source>
          <target state="translated">다음 목록의 &lt;code&gt;Product&lt;/code&gt; 하지 않은 경우 &lt;code&gt;Comparable&lt;/code&gt; 와 &lt;code&gt;Comparator&lt;/code&gt; 순서를 정의합니다 제품 &lt;code&gt;p1&lt;/code&gt; 선행 제품 &lt;code&gt;p2&lt;/code&gt; 경우 &lt;code&gt;p1&lt;/code&gt; 의 가격은 11보다 &lt;code&gt;p2&lt;/code&gt; 의 가격 '. 따라서이 순서에 따라 오름차순으로 정렬 된 목록이 있으면 &lt;code&gt;binarySearch()&lt;/code&gt; 를 사용 하여 지정된 &lt;code&gt;Product&lt;/code&gt; 의 인덱스를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="d6299908e8e92ed259a89571d944697ef58fb31f" translate="yes" xml:space="preserve">
          <source>Here's a quick guide to these stability levels and their meaning:</source>
          <target state="translated">다음은 이러한 안정성 수준과 그 의미에 대한 빠른 가이드입니다.</target>
        </trans-unit>
        <trans-unit id="efbc73d5132802ac71f5934ce19cbcd5fb8b7408" translate="yes" xml:space="preserve">
          <source>Here's a small DSL example for constructing tree structures:</source>
          <target state="translated">다음은 트리 구조를 구성하는 작은 DSL 예입니다.</target>
        </trans-unit>
        <trans-unit id="deacdfc6a74517cf99346be6c831a7d4dcdbaad3" translate="yes" xml:space="preserve">
          <source>Here's a typical usage of a scope function:</source>
          <target state="translated">스코프 함수의 일반적인 사용법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b32f6d706eff957c972b3e1645609c6f0f0e541d" translate="yes" xml:space="preserve">
          <source>Here's an example content of the file:</source>
          <target state="translated">파일 내용의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a5606f252ecc2ad174dea4647e01f60d2aaeb354" translate="yes" xml:space="preserve">
          <source>Here's an example of a class documented using KDoc:</source>
          <target state="translated">다음은 KDoc을 사용하여 문서화 된 클래스의 예입니다.</target>
        </trans-unit>
        <trans-unit id="3c3d7fa503d9b11d735a1dcda178f0b19a2cefe9" translate="yes" xml:space="preserve">
          <source>Here's an example of code sharing and interaction between the common and platform logic in a minimalistic logging framework. The common code would look like this:</source>
          <target state="translated">다음은 최소한의 로깅 프레임 워크에서 공통 로직과 플랫폼 로직 간의 코드 공유 및 상호 작용에 대한 예입니다. 일반적인 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="30b994f56b0ee580bb2d52aad3f9e3570f83d7b9" translate="yes" xml:space="preserve">
          <source>Here's an illustration of what a project targeting the JVM and JS looks like:</source>
          <target state="translated">다음은 JVM 및 JS를 대상으로하는 프로젝트의 모습을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="83fd9bccf96ff2476fc784803b5af28e61092dd2" translate="yes" xml:space="preserve">
          <source>Here's another example of code sharing and interaction between the common and platform logic in a minimalistic logging framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc7be004e2e60aa56a1148a79def1e9ee80e98df" translate="yes" xml:space="preserve">
          <source>Here's how to use all-open with Maven:</source>
          <target state="translated">Maven에서 올 오픈을 사용하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c1c3f3dd507e26d2dcc90d9449cf5588ff4d3164" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;async { ... }&lt;/code&gt; starts a coroutine and, when we use &lt;code&gt;await()&lt;/code&gt;, the execution of the coroutine is suspended while the operation being awaited is executed, and is resumed (possibly on a different thread) when the operation being awaited completes.</source>
          <target state="translated">여기서 &lt;code&gt;async { ... }&lt;/code&gt; 는 코 루틴을 시작하고 &lt;code&gt;await()&lt;/code&gt; 사용할 때 기다리는 오퍼레이션이 실행되는 동안 코 루틴 실행이 일시 중단되고 오퍼레이션이 대기 중일 때 재개 될 수 있습니다 (아마 다른 스레드에서) 완료합니다.</target>
        </trans-unit>
        <trans-unit id="24f1b6a4e672cb4df34dbd0c1ed96ab04f2d6a88" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;name&lt;/code&gt; must be a string, &lt;code&gt;age&lt;/code&gt; must be an integer, and the function must return a string. However, you can also make a oneliner function, where the body simply is the expression whose result is to be returned. In that case, the return type is inferred, and an equals sign is used to indicate that it's a oneliner:</source>
          <target state="translated">여기서 &lt;code&gt;name&lt;/code&gt; 은 문자열 이어야 하고 &lt;code&gt;age&lt;/code&gt; 는 정수 여야하며 함수는 문자열을 반환해야합니다. 그러나 oneliner 함수를 만들 수도 있습니다. 여기서 본문은 단순히 결과를 반환 할 식입니다. 이 경우 반환 유형이 유추되며 등호를 사용하여 oneliner임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b47502105661e1b046d12435cd46d97524cb6677" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;jvmMain&lt;/code&gt; source set provides &lt;a href=&quot;platform-specific-declarations&quot;&gt;plaform-specific implementations&lt;/a&gt; for the expected API in the shared &lt;code&gt;commonMain&lt;/code&gt; sources. This is how the code is shared between the platforms in a flexible way with platform-specific implementations where needed.</source>
          <target state="translated">여기에서 &lt;code&gt;jvmMain&lt;/code&gt; 소스 세트는 공유 &lt;code&gt;commonMain&lt;/code&gt; 소스 의 예상 API에 대한 &lt;a href=&quot;platform-specific-declarations&quot;&gt;플랫폼 별 구현&lt;/a&gt; 을 제공 합니다. 이것이 필요한 경우 플랫폼 별 구현을 통해 유연한 방식으로 플랫폼간에 코드를 공유하는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="1a4b7aa1a5f137db0fd44fc2a6d9f303d3f93187" translate="yes" xml:space="preserve">
          <source>Here, the two targets, &lt;code&gt;jvm&lt;/code&gt; and &lt;code&gt;js&lt;/code&gt;, each compile the production and test sources, and some of the sources are shared. This layout is achieved by just creating the two targets, with no additional configuration for the compilations and source sets: those are &lt;a href=&quot;#default-project-layout&quot;&gt;created by default&lt;/a&gt; for these targets.</source>
          <target state="translated">여기서 두 대상인 &lt;code&gt;jvm&lt;/code&gt; 및 &lt;code&gt;js&lt;/code&gt; 는 각각 프로덕션 및 테스트 소스를 컴파일하며 일부 소스는 공유됩니다. 이 레이아웃은 컴파일 및 소스 세트에 대한 추가 구성없이 두 대상을 작성하기 만하면 &lt;a href=&quot;#default-project-layout&quot;&gt;됩니다. 기본적&lt;/a&gt; 으로이 대상에 대해 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="873b8d686246b463c295f204a9ac94e12e662907" translate="yes" xml:space="preserve">
          <source>Here, we walk up a tree and use reflection to check if a node has a certain type. It&amp;rsquo;s all fine, but the call site is not very pretty:</source>
          <target state="translated">여기에서 트리를 걸어서 리플렉션을 사용하여 노드에 특정 유형이 있는지 확인합니다. 괜찮지 만 전화 사이트는 그리 예쁘지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c26c5c5e687a30b11835307ebbf485121ab5d535" translate="yes" xml:space="preserve">
          <source>Here, we're saying that the type parameter of &lt;code&gt;from&lt;/code&gt; must be a subtype of the type parameter of &lt;code&gt;to&lt;/code&gt;. This function will accept e.g. a &lt;code&gt;Bowl&amp;lt;Apple&amp;gt;&lt;/code&gt; as &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;Bowl&amp;lt;Fruit&amp;gt;&lt;/code&gt; as &lt;code&gt;to&lt;/code&gt;. The price we're paying for using the &lt;code&gt;out&lt;/code&gt; projection is that we can't call &lt;code&gt;add()&lt;/code&gt; on &lt;code&gt;from()&lt;/code&gt;, since we don't know its true type parameter and we would therefore risk adding incompatible fruits to it.</source>
          <target state="translated">여기서 &lt;code&gt;from&lt;/code&gt; 의 type 매개 변수는 &lt;code&gt;to&lt;/code&gt; 의 type 매개 변수의 하위 유형이어야합니다 . 이 함수는 예를 들어 &lt;code&gt;Bowl&amp;lt;Apple&amp;gt;&lt;/code&gt; 을 &lt;code&gt;from&lt;/code&gt; 으로 , &lt;code&gt;Bowl&amp;lt;Fruit&amp;gt;&lt;/code&gt; 로 &lt;code&gt;to&lt;/code&gt; 입니다. &lt;code&gt;out&lt;/code&gt; 프로젝션 을 사용하여 지불하는 가격은 &lt;code&gt;from()&lt;/code&gt; &lt;code&gt;add()&lt;/code&gt; 를 호출 할 수 없다는 것입니다 . 왜냐하면 실제 유형 매개 변수를 알 수 없으므로 호환되지 않는 과일을 추가 할 위험이 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="fd526ef99a476acb9c78bf5c9a11e6ea0860b857" translate="yes" xml:space="preserve">
          <source>Hexadecimals: &lt;code&gt;0x0F&lt;/code&gt;</source>
          <target state="translated">16 진법 : &lt;code&gt;0x0F&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e743a6dd1ed04ccfc1e8f392cdfb6f69810adb21" translate="yes" xml:space="preserve">
          <source>Hide &lt;code&gt;Throwable.addSuppressed&lt;/code&gt; member and prefer extension instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30fe03c33b8a84674c73678ff4c5b2d65ac121be" translate="yes" xml:space="preserve">
          <source>Higher-Order Functions</source>
          <target state="translated">더 높은 주문 기능</target>
        </trans-unit>
        <trans-unit id="a41e5f0f0a047564f4254bac665f73f90f95046f" translate="yes" xml:space="preserve">
          <source>Higher-Order Functions and Lambdas</source>
          <target state="translated">고차 함수 및 람다</target>
        </trans-unit>
        <trans-unit id="67ee6db3881c67f5daa465a08c67e8184f10a9cd" translate="yes" xml:space="preserve">
          <source>Higher-Order functions and Lambdas are explained in &lt;a href=&quot;lambdas&quot;&gt;their own section&lt;/a&gt;.</source>
          <target state="translated">상위 주문 기능 및 Lambdas는 &lt;a href=&quot;lambdas&quot;&gt;자체 섹션에&lt;/a&gt; 설명되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3315df05d0375ffe4bdc179f9ca2be5169f2a805" translate="yes" xml:space="preserve">
          <source>Higher-order functions and lambdas</source>
          <target state="translated">고차 함수와 람다</target>
        </trans-unit>
        <trans-unit id="72139434928027cd54d82a5ef7b3629d508b0f44" translate="yes" xml:space="preserve">
          <source>Higher-order functions implementing idiomatic patterns (&lt;a href=&quot;api/latest/jvm/stdlib/kotlin/let&quot;&gt;let&lt;/a&gt;, &lt;a href=&quot;api/latest/jvm/stdlib/kotlin/apply&quot;&gt;apply&lt;/a&gt;, use, &lt;a href=&quot;api/latest/jvm/stdlib/kotlin/synchronized#kotlin%24synchronized%28kotlin.Any%2C+kotlin.Function0%28%28kotlin.synchronized.R%29%29%29&quot;&gt;synchronized&lt;/a&gt;, etc).</source>
          <target state="translated">관용적 패턴 ( &lt;a href=&quot;api/latest/jvm/stdlib/kotlin/let&quot;&gt;let&lt;/a&gt; , &lt;a href=&quot;api/latest/jvm/stdlib/kotlin/apply&quot;&gt;apply&lt;/a&gt; , use, &lt;a href=&quot;api/latest/jvm/stdlib/kotlin/synchronized#kotlin%24synchronized%28kotlin.Any%2C+kotlin.Function0%28%28kotlin.synchronized.R%29%29%29&quot;&gt;synchronized&lt;/a&gt; 등)을 구현하는 고차 함수 .</target>
        </trans-unit>
        <trans-unit id="71b2c72211319ad783a149c79b7dc2ab70c6fe85" translate="yes" xml:space="preserve">
          <source>Higher-order functions implementing idiomatic patterns (&lt;a href=&quot;api/latest/jvm/stdlib/kotlin/let&quot;&gt;let&lt;/a&gt;, &lt;a href=&quot;api/latest/jvm/stdlib/kotlin/apply&quot;&gt;apply&lt;/a&gt;, use, &lt;a href=&quot;api/latest/jvm/stdlib/kotlin/synchronized#kotlin%24synchronized(kotlin.Any,%20kotlin.Function0((kotlin.synchronized.R)))&quot;&gt;synchronized&lt;/a&gt;, etc).</source>
          <target state="translated">관용적 패턴을 구현하는 고차 함수 ( &lt;a href=&quot;api/latest/jvm/stdlib/kotlin/let&quot;&gt;let&lt;/a&gt; , &lt;a href=&quot;api/latest/jvm/stdlib/kotlin/apply&quot;&gt;apply&lt;/a&gt; , use, &lt;a href=&quot;api/latest/jvm/stdlib/kotlin/synchronized#kotlin%24synchronized(kotlin.Any,%20kotlin.Function0((kotlin.synchronized.R)))&quot;&gt;synchronous&lt;/a&gt; 등).</target>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="translated">History</target>
        </trans-unit>
        <trans-unit id="0eb3ee7e7a16153c8f6a87abb16da40d619a3efa" translate="yes" xml:space="preserve">
          <source>HitRegionOptions</source>
          <target state="translated">HitRegionOptions</target>
        </trans-unit>
        <trans-unit id="b24cd4dd561003744f6839bba6f0b01af01e9c66" translate="yes" xml:space="preserve">
          <source>Homebrew</source>
          <target state="translated">Homebrew</target>
        </trans-unit>
        <trans-unit id="cbfc13df571c4c83d93997bf94e3b83b772c380a" translate="yes" xml:space="preserve">
          <source>Horizontal whitespace</source>
          <target state="translated">수평 공백</target>
        </trans-unit>
        <trans-unit id="86ddaf47a34381dda708ccb6f4f8d658790bbfa0" translate="yes" xml:space="preserve">
          <source>How Struct and Union types are mapped</source>
          <target state="translated">Struct 및 Union 유형이 매핑되는 방법</target>
        </trans-unit>
        <trans-unit id="35c4267f2ce497ed96e9a713e96604a9eab77acf" translate="yes" xml:space="preserve">
          <source>How it can be used</source>
          <target state="translated">사용 방법</target>
        </trans-unit>
        <trans-unit id="1dd6a17cb4033f4f74df1bb6912b8a28a8074084" translate="yes" xml:space="preserve">
          <source>How it works</source>
          <target state="translated">작동 원리</target>
        </trans-unit>
        <trans-unit id="602a8f7c41c71250fa416b68c4f67d256ca06632" translate="yes" xml:space="preserve">
          <source>How to Start</source>
          <target state="translated">시작하는 방법</target>
        </trans-unit>
        <trans-unit id="0243beebd793612aa2ee36e3e4f3c0c11cc4db4e" translate="yes" xml:space="preserve">
          <source>How to construct DOM elements using kotlinx.html and Kotlin DSLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39cfe6bd350237cc427201fbd0b25630bfc08c1" translate="yes" xml:space="preserve">
          <source>How to debug Kotlin/JS code using the browser developer tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766024c3d172acd05a99a55de2575e5c42211fab" translate="yes" xml:space="preserve">
          <source>How to interact with browser-specific APIs from Kotlin, and how do we work with the Document Object Model (DOM).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e595bb7e86e937a4e874393a96a5363dcaedf4" translate="yes" xml:space="preserve">
          <source>How to run a Kotlin/JS program that was created using the Gradle plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4836632c6daf79f375cd1f8eccb1a6fce84d803" translate="yes" xml:space="preserve">
          <source>How to run tests for the Kotlin/JS target using test runners in Gradle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db32bf41278eb29cd396ae9617e7fe8df893782" translate="yes" xml:space="preserve">
          <source>How to set up the local development environment for automatic recompilation and reloading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a300459d78bbcb70e72c699d68bbe2c60d99400e" translate="yes" xml:space="preserve">
          <source>How to start</source>
          <target state="translated">시작하는 방법</target>
        </trans-unit>
        <trans-unit id="dd45fd3f2e347de26d6cbb92c276978c2dd03be8" translate="yes" xml:space="preserve">
          <source>How to use</source>
          <target state="translated">사용하는 방법</target>
        </trans-unit>
        <trans-unit id="c8dac9e108cb40b7e0a9d87700f138976ecc8ddc" translate="yes" xml:space="preserve">
          <source>How to use Struct and Union type from Kotlin</source>
          <target state="translated">Kotlin에서 Struct 및 Union 유형을 사용하는 방법</target>
        </trans-unit>
        <trans-unit id="6eb76bcb0980c7013f0d079912759039bd94ad75" translate="yes" xml:space="preserve">
          <source>How to use npm packages from a Kotlin/JS Gradle project and how do we interact with them from Kotlin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87da5869c150f567fc13bde03027b7419ad453eb" translate="yes" xml:space="preserve">
          <source>How would we do this from Kotlin given that the function &lt;code&gt;dataTable()&lt;/code&gt; does not exist, and calling it would give a compiler error?</source>
          <target state="translated">&lt;code&gt;dataTable()&lt;/code&gt; 함수 가 존재하지 않고이를 호출하면 컴파일러 오류가 발생 한다는 것을 감안할 때 Kotlin에서 어떻게해야 합니까?</target>
        </trans-unit>
        <trans-unit id="be0464a11908e8c7b9be38021ee672219ffad064" translate="yes" xml:space="preserve">
          <source>However in the following case:</source>
          <target state="translated">그러나 다음과 같은 경우 :</target>
        </trans-unit>
        <trans-unit id="ad02680cd2b83239f918c8dcc7a44484db377d03" translate="yes" xml:space="preserve">
          <source>However, JavaScript is a dynamically typed language, which means it does not check types at compile time. You can freely talk to JavaScript from Kotlin via &lt;a href=&quot;dynamic-type&quot;&gt;dynamic&lt;/a&gt; types. If you want to use the full power of the Kotlin type system, you can create external declarations for JavaScript libraries which will be understood by the Kotlin compiler and the surrounding tooling.</source>
          <target state="translated">그러나 JavaScript는 동적으로 입력되는 언어이므로 컴파일 타임에 유형을 확인하지 않습니다. &lt;a href=&quot;dynamic-type&quot;&gt;동적&lt;/a&gt; 유형을 통해 Kotlin에서 JavaScript와 자유롭게 대화 할 수 있습니다. Kotlin 유형 시스템의 모든 기능을 사용하려면 Kotlin 컴파일러 및 주변 도구에서 이해할 수있는 자바 스크립트 라이브러리에 대한 외부 선언을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="08aa25ee369322b7c9cce859c3276910252c6990" translate="yes" xml:space="preserve">
          <source>However, a &lt;code&gt;project('...')&lt;/code&gt; dependency on another multiplatform project is resolved to an appropriate target automatically. It is enough to specify a single &lt;code&gt;project('...')&lt;/code&gt; dependency in a source set's dependencies, and the compilations that include the source set will receive a corresponding platform-specific artifact of that project, given that it has a compatible target:</source>
          <target state="translated">그러나 다른 다중 플랫폼 프로젝트에 대한 &lt;code&gt;project('...')&lt;/code&gt; 종속성은 적절한 대상으로 자동 해결됩니다. 소스 세트의 종속성에서 단일 &lt;code&gt;project('...')&lt;/code&gt; 종속성 을 지정하면 충분 하며, 소스 세트를 포함하는 컴파일은 호환 가능한 대상이있는 경우 해당 프로젝트의 해당 플랫폼 별 아티팩트를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="9f0073d145a72380a67857aa70bcd14c61466462" translate="yes" xml:space="preserve">
          <source>However, as soon as these checks are extracted in a separate function, all the smartcasts immediately disappear:</source>
          <target state="translated">그러나 이러한 검사가 별도의 기능으로 추출 되 자마자 모든 스마트 캐스트가 즉시 사라집니다.</target>
        </trans-unit>
        <trans-unit id="070f5cebd5d9214c243e1534bfda4f0cf0927625" translate="yes" xml:space="preserve">
          <source>However, compile avoidance can't be used for annotation processors discovered in the compile classpath since &lt;em&gt;any changes&lt;/em&gt; in them require running the annotation processing tasks.</source>
          <target state="translated">그러나 컴파일 회피 이후 컴파일 클래스 경로에서 발견 된 주석 프로세서를 사용할 수 없습니다 &lt;em&gt;변경&lt;/em&gt; 그들이 주석 처리 작업을 실행이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="b08734b9aff767eee11e08eafa8988bd2c1174ca" translate="yes" xml:space="preserve">
          <source>However, dependencies on such a multiplatform library may be ambiguous and may thus fail to resolve because there is not enough information to decide which of the targets to choose.</source>
          <target state="translated">그러나 이러한 다중 플랫폼 라이브러리에 대한 종속성은 모호 할 수 있으므로 선택할 대상을 결정하기에 충분한 정보가 없기 때문에 해결하지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="479fa5ba0f8e1b445bab5b40d926a5ca86729d0e" translate="yes" xml:space="preserve">
          <source>However, if the mutability of the list is unknown or the source is not a list at all, &lt;code&gt;reversed()&lt;/code&gt; is more preferable since its result is a copy that won't change in the future.</source>
          <target state="translated">그러나 목록의 변경 가능성을 알 수 없거나 소스가 전혀 목록이 아닌 경우 &lt;code&gt;reversed()&lt;/code&gt; 가 더 바람직합니다. 결과는 나중에 변경되지 않는 사본이기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="09fa8d58225957d34b7eea70bb62562ee76d26df" translate="yes" xml:space="preserve">
          <source>However, if we derive &lt;em&gt;D&lt;/em&gt; from &lt;em&gt;A&lt;/em&gt; and &lt;em&gt;B&lt;/em&gt;, we need to implement all the methods which we have inherited from multiple interfaces, and to specify how exactly &lt;em&gt;D&lt;/em&gt; should implement them. This rule applies both to methods for which we've inherited a single implementation (&lt;em&gt;bar()&lt;/em&gt;) and multiple implementations (&lt;em&gt;foo()&lt;/em&gt;).</source>
          <target state="translated">그러나 &lt;em&gt;A&lt;/em&gt; 와 &lt;em&gt;B&lt;/em&gt; 에서 &lt;em&gt;D&lt;/em&gt; 를 파생 시키면 여러 인터페이스에서 상속 한 모든 메서드를 구현하고 &lt;em&gt;D&lt;/em&gt; 가 정확히 어떻게 구현해야하는지 지정 해야합니다. 이 규칙은 단일 구현 ( &lt;em&gt;bar ()&lt;/em&gt; )과 여러 구현 ( &lt;em&gt;foo ()&lt;/em&gt; )을 상속 한 메소드 모두에 적용됩니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f5c2b71d2c4944197bf814089efe3e169f6241a1" translate="yes" xml:space="preserve">
          <source>However, it's perfectly OK for extension functions to overload member functions which have the same name but a different signature:</source>
          <target state="translated">그러나 확장 함수가 이름은 같지만 서명이 다른 멤버 함수에 과부하가 걸리는 것은 완벽합니다.</target>
        </trans-unit>
        <trans-unit id="b6b84920563bfcc2aefa1cdbb2f79f49d112f69c" translate="yes" xml:space="preserve">
          <source>However, most other flow operators do not do additional cancellation checks on their own for performance reasons. For example, if you use &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/kotlin.ranges.-int-range/as-flow.html&quot;&gt;IntRange.asFlow&lt;/a&gt; extension to write the same busy loop and don't suspend anywhere, then there are no checks for cancellation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebade98d4850f4f9cc04221f98a7dccbdf5346e7" translate="yes" xml:space="preserve">
          <source>However, note that there are some limitations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7211de00f87035400862ba49948436c704051e31" translate="yes" xml:space="preserve">
          <source>However, on the JVM you can have members of companion objects generated as real static methods and fields, if you use the &lt;code&gt;@JvmStatic&lt;/code&gt; annotation. See the &lt;a href=&quot;java-to-kotlin-interop#static-fields&quot;&gt;Java interoperability&lt;/a&gt; section for more details.</source>
          <target state="translated">그러나 &lt;code&gt;@JvmStatic&lt;/code&gt; 어노테이션 을 사용하는 경우 JVM에서 컴패니언 오브젝트의 멤버를 실제 정적 메소드 및 필드로 생성 할 수 있습니다 . 자세한 내용은 &lt;a href=&quot;java-to-kotlin-interop#static-fields&quot;&gt;Java 상호 운용성&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2c6ec492a393170936fcd33d66c559dd167d5e00" translate="yes" xml:space="preserve">
          <source>However, the change doesn&amp;rsquo;t currently affect:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bad521f56fe8a915aa6062aecd121e23b4faae6" translate="yes" xml:space="preserve">
          <source>However, the crucial difference is that type aliases are &lt;em&gt;assignment-compatible&lt;/em&gt; with their underlying type (and with other type aliases with the same underlying type), while inline classes are not.</source>
          <target state="translated">그러나 중요한 차이점은 형식 별칭이 기본 형식 (및 기본 형식이 같은 다른 형식 별칭)과 &lt;em&gt;할당 호환&lt;/em&gt; 되지만 인라인 클래스는 그렇지 않다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="8dd1f3cacf0fcb4414c2d1a278f7fbd543f3b7f6" translate="yes" xml:space="preserve">
          <source>However, the lifetime of allocated memory is often bound to the lexical scope. It is possible to define such scope with &lt;code&gt;memScoped { ... }&lt;/code&gt;. Inside the braces, the temporary placement is available as an implicit receiver, so it is possible to allocate native memory with &lt;code&gt;alloc&lt;/code&gt; and &lt;code&gt;allocArray&lt;/code&gt;, and the allocated memory will be automatically freed after leaving the scope.</source>
          <target state="translated">그러나 할당 된 메모리 수명은 종종 어휘 범위에 바인딩됩니다. &lt;code&gt;memScoped { ... }&lt;/code&gt; 이러한 범위를 정의 할 수 있습니다 . 중괄호 안에서 임시 배치는 암시 적 수신자로 사용 가능하므로 &lt;code&gt;alloc&lt;/code&gt; 및 &lt;code&gt;allocArray&lt;/code&gt; 로 기본 메모리를 할당 할 수 있으며 할당 된 메모리는 범위를 벗어나면 자동으로 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="ca15a50ae448289a07aa099c12bd615c3214db22" translate="yes" xml:space="preserve">
          <source>However, the long-running CPU-consuming code might need to be executed in the context of &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-default.html&quot;&gt;Dispatchers.Default&lt;/a&gt; and UI-updating code might need to be executed in the context of &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-main.html&quot;&gt;Dispatchers.Main&lt;/a&gt;. Usually, &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/with-context.html&quot;&gt;withContext&lt;/a&gt; is used to change the context in the code using Kotlin coroutines, but code in the &lt;code&gt;flow { ... }&lt;/code&gt; builder has to honor the context preservation property and is not allowed to &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/-flow-collector/emit.html&quot;&gt;emit&lt;/a&gt; from a different context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae0918f5641e63c3a09e5fadf6918891cd0a9092" translate="yes" xml:space="preserve">
          <source>However, there are some restrictions for inline class members:</source>
          <target state="translated">그러나 인라인 클래스 멤버에게는 몇 가지 제한 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="4dea4b6485490d55c315e723b0e2a381616b34cd" translate="yes" xml:space="preserve">
          <source>However, this computation blocks the main thread that is running the code. When these values are computed by asynchronous code we can mark the &lt;code&gt;simple&lt;/code&gt; function with a &lt;code&gt;suspend&lt;/code&gt; modifier, so that it can perform its work without blocking and return the result as a list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982bf0758421af7f56223ac97a5942a5eb849e7c" translate="yes" xml:space="preserve">
          <source>However, to support generic use cases and provide total ordering, when the operands are &lt;strong&gt;not&lt;/strong&gt; statically typed as floating point numbers (e.g. &lt;code&gt;Any&lt;/code&gt;, &lt;code&gt;Comparable&amp;lt;...&amp;gt;&lt;/code&gt;, a type parameter), the operations use the &lt;code&gt;equals&lt;/code&gt; and &lt;code&gt;compareTo&lt;/code&gt; implementations for &lt;code&gt;Float&lt;/code&gt; and &lt;code&gt;Double&lt;/code&gt;, which disagree with the standard, so that:</source>
          <target state="translated">그러나, 일반적인 사용 사례를 지원하고 피연산자가 될 때, 전체 순서를 제공 &lt;strong&gt;하지&lt;/strong&gt; 정적으로 부동 소수점 숫자로 입력 (예를 들어, &lt;code&gt;Any&lt;/code&gt; , &lt;code&gt;Comparable&amp;lt;...&amp;gt;&lt;/code&gt; , 유형 매개 변수), 작업은 사용 &lt;code&gt;equals&lt;/code&gt; 와 &lt;code&gt;compareTo&lt;/code&gt; 구현을 &lt;code&gt;Float&lt;/code&gt; 와 &lt;code&gt;Double&lt;/code&gt; 은 표준에 동의하지 않으므로 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5ca45e03bc21f5ab9507a309528260ebbde146f9" translate="yes" xml:space="preserve">
          <source>However, when &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-global-scope/index.html&quot;&gt;GlobalScope&lt;/a&gt; is used to launch a coroutine, it is not tied to the scope it was launched from and operates independently.</source>
          <target state="translated">그러나 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-global-scope/index.html&quot;&gt;GlobalScope&lt;/a&gt; 를 사용하여 코 루틴을 시작하면 해당 범위가 시작되고 독립적으로 작동하는 범위에 묶이지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6fa46c9cc480889e14a2ca5e9982d4d494a04611" translate="yes" xml:space="preserve">
          <source>However, when &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-global-scope/index.html&quot;&gt;GlobalScope&lt;/a&gt; is used to launch a coroutine, there is no parent for the job of the new coroutine. It is therefore not tied to the scope it was launched from and operates independently.</source>
          <target state="translated">그러나 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-global-scope/index.html&quot;&gt;GlobalScope&lt;/a&gt; 를 사용하여 코 루틴을 시작하면 새 코 루틴의 작업에 대한 부모가 없습니다. 따라서 시작된 범위에 묶여 있지 않고 독립적으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="4d1d9b7a2bcd9b2aa8b62eaa04c9b3c6ae4ca870" translate="yes" xml:space="preserve">
          <source>However, when calling it with non-default, the call would look something like:</source>
          <target state="translated">그러나 기본값이 아닌 상태로 호출하면 다음과 같이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="1c3dc2decd5535513b89bb659e9efd6ecfebaffd" translate="yes" xml:space="preserve">
          <source>However, when using a &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/combine.html&quot;&gt;combine&lt;/a&gt; operator here instead of a &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/zip.html&quot;&gt;zip&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c85468492872696cce76d8471e59f791f6d182b2" translate="yes" xml:space="preserve">
          <source>However, you can't spread a map into a function call and expect the values in the map to be passed to the parameters named by the keys - the names of the parameters must be known at compile time. If you need runtime-defined parameter names, your function must either take a map or take &lt;code&gt;vararg kwargs: Pair&amp;lt;String, X&amp;gt;&lt;/code&gt; (where &lt;code&gt;X&lt;/code&gt; is the &quot;lowest common denominator&quot; of the parameter types, in the worst case &lt;code&gt;Any?&lt;/code&gt; - be prepared to have to typecast the parameter values, and note that you'll lose type safety). You can call such a function like this: &lt;code&gt;foo(&quot;bar&quot; to 42, &quot;test&quot; to &quot;hello&quot;)&lt;/code&gt;, since &lt;code&gt;to&lt;/code&gt; is an &lt;a href=&quot;classes#infix-functions&quot;&gt;infix function&lt;/a&gt; that creates a &lt;code&gt;Pair&lt;/code&gt;.</source>
          <target state="translated">그러나 맵을 함수 호출로 펼칠 수 없으며 맵의 값이 키로 명명 된 매개 변수로 전달 될 것으로 예상합니다. 매개 변수의 이름은 컴파일시 알아야합니다. 당신이 매개 변수 이름을 정의 런타임이 필요한 경우, 기능 중지도를 취하거나 취해야 &lt;code&gt;vararg kwargs: Pair&amp;lt;String, X&amp;gt;&lt;/code&gt; 여기서 ( &lt;code&gt;X&lt;/code&gt; 는 최악의 경우 매개 변수 유형의 &quot;가장 낮은 공통 분모&quot;이다 &lt;code&gt;Any?&lt;/code&gt; - 수 매개 변수 값을 타입 캐스트해야하고 타입 안전을 잃을 수 있습니다). :이 같은 이러한 함수를 호출 할 수 있습니다 &lt;code&gt;foo(&quot;bar&quot; to 42, &quot;test&quot; to &quot;hello&quot;)&lt;/code&gt; 이후 &lt;code&gt;to&lt;/code&gt; 이다 &lt;a href=&quot;classes#infix-functions&quot;&gt;중위 기능&lt;/a&gt; 생성 &lt;code&gt;Pair&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8531a005c4e1249c38eb76c35700e47d28dd56c4" translate="yes" xml:space="preserve">
          <source>However, you cannot change the type of a variable: &lt;code&gt;number&lt;/code&gt; can only ever refer to &lt;code&gt;Int&lt;/code&gt; values, and &lt;code&gt;message&lt;/code&gt; can only ever refer to &lt;code&gt;String&lt;/code&gt; values, so both &lt;code&gt;number = &quot;Test&quot;&lt;/code&gt; and &lt;code&gt;message = 3&lt;/code&gt; are illegal and will produce syntax errors.</source>
          <target state="translated">그러나 변수 유형은 변경할 수 없습니다. &lt;code&gt;number&lt;/code&gt; 는 &lt;code&gt;Int&lt;/code&gt; 값만 참조 하고 &lt;code&gt;message&lt;/code&gt; 는 &lt;code&gt;String&lt;/code&gt; 값만 참조 할 수 있으므로 &lt;code&gt;number = &quot;Test&quot;&lt;/code&gt; 및 &lt;code&gt;message = 3&lt;/code&gt; 은 모두 불법이며 구문 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3027d872a38e795211cb7e3ae47043fbab5b615d" translate="yes" xml:space="preserve">
          <source>Hyperbolic: &lt;code&gt;cosh&lt;/code&gt;, &lt;code&gt;sinh&lt;/code&gt;, &lt;code&gt;tanh&lt;/code&gt; and their inverse: &lt;code&gt;acosh&lt;/code&gt;, &lt;code&gt;asinh&lt;/code&gt;, &lt;code&gt;atanh&lt;/code&gt;</source>
          <target state="translated">쌍곡선 : &lt;code&gt;cosh&lt;/code&gt; , &lt;code&gt;sinh&lt;/code&gt; , &lt;code&gt;tanh&lt;/code&gt; 및 그 반대 : &lt;code&gt;acosh&lt;/code&gt; , &lt;code&gt;asinh&lt;/code&gt; , &lt;code&gt;atanh&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a21e8428249ae48d17127a95118ae2f24cfd3ac4" translate="yes" xml:space="preserve">
          <source>I.e. if &lt;code&gt;a&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, it calls the &lt;code&gt;equals(Any?)&lt;/code&gt; function, otherwise (i.e. &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;) it checks that &lt;code&gt;b&lt;/code&gt; is referentially equal to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">즉, &lt;code&gt;a&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 이 아닌 경우 &lt;code&gt;equals(Any?)&lt;/code&gt; 함수를 호출합니다 . 그렇지 않은 경우 (즉 &lt;code&gt;a&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 인 경우 ) &lt;code&gt;b&lt;/code&gt; 가 참조 적으로 &lt;code&gt;null&lt;/code&gt; 과 같은지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="6b4059c9b5820041f826f688b6e57c7201e42d5f" translate="yes" xml:space="preserve">
          <source>IDE</source>
          <target state="translated">IDE</target>
        </trans-unit>
        <trans-unit id="574c819e8b68fbc5deeb72ec7f823f930d288043" translate="yes" xml:space="preserve">
          <source>IDEA has built-in &lt;a href=&quot;https://www.jetbrains.com/help/idea/converting-a-java-file-to-kotlin-file.html&quot;&gt;Java-to-Kotlin converter&lt;/a&gt;. It can be used by people familiar with Java to learn the corresponding Kotlin syntactic constructions, but it is not perfect and it is still worth familiarizing yourself with Kotlin and learning the &lt;a href=&quot;../reference/idioms&quot;&gt;Kotlin idioms&lt;/a&gt;.</source>
          <target state="translated">IDEA에는 &lt;a href=&quot;https://www.jetbrains.com/help/idea/converting-a-java-file-to-kotlin-file.html&quot;&gt;Java-Kotlin 변환기&lt;/a&gt; 가 내장되어 있습니다. Java에 익숙한 사람들이 해당 Kotlin 구문 구성을 배우는 데 사용할 수 있지만 완벽하지는 않지만 Kotlin에 익숙해지고 &lt;a href=&quot;../reference/idioms&quot;&gt;Kotlin 관용구를&lt;/a&gt; 배우는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="3e8437143d4c208041b9e7dc73001eda18b471b7" translate="yes" xml:space="preserve">
          <source>IEEErem</source>
          <target state="translated">IEEErem</target>
        </trans-unit>
        <trans-unit id="a479a89af81322719229d26626e9261747f5e247" translate="yes" xml:space="preserve">
          <source>IGNORE_CASE</source>
          <target state="translated">IGNORE_CASE</target>
        </trans-unit>
        <trans-unit id="6fca55ca3c828a46bfe96a10e69f572b61ce540c" translate="yes" xml:space="preserve">
          <source>IN</source>
          <target state="translated">IN</target>
        </trans-unit>
        <trans-unit id="e5e4713ba8f441acc2311c63185a8591a20ddcaf" translate="yes" xml:space="preserve">
          <source>INFINITE</source>
          <target state="translated">INFINITE</target>
        </trans-unit>
        <trans-unit id="d60d89994c2165dbb5cb15c0ca6a53ef57dbf709" translate="yes" xml:space="preserve">
          <source>INITIAL_QUOTE_PUNCTUATION</source>
          <target state="translated">INITIAL_QUOTE_PUNCTUATION</target>
        </trans-unit>
        <trans-unit id="4c38beffa49b3c4e833b61ab982e642ee37bd833" translate="yes" xml:space="preserve">
          <source>INSTANCE</source>
          <target state="translated">INSTANCE</target>
        </trans-unit>
        <trans-unit id="bc0a7fedf606734e8b8a7a6a0423b5fd26cf0e94" translate="yes" xml:space="preserve">
          <source>INTERNAL</source>
          <target state="translated">INTERNAL</target>
        </trans-unit>
        <trans-unit id="3abcb72b954677e513cd35785ddfd45da21ba7df" translate="yes" xml:space="preserve">
          <source>INVALID</source>
          <target state="translated">INVALID</target>
        </trans-unit>
        <trans-unit id="6309dcdb883fbfdbdd8583370627de3f62431921" translate="yes" xml:space="preserve">
          <source>INVARIANT</source>
          <target state="translated">INVARIANT</target>
        </trans-unit>
        <trans-unit id="74b5e33e6c2950450e841be55ad77a9a298f6e82" translate="yes" xml:space="preserve">
          <source>IO API for working with files and streams.</source>
          <target state="translated">파일 및 스트림 작업을위한 IO API.</target>
        </trans-unit>
        <trans-unit id="d4ba35793b9b14a1c9dfe7552c4aadb3500b92b0" translate="yes" xml:space="preserve">
          <source>IOS</source>
          <target state="translated">IOS</target>
        </trans-unit>
        <trans-unit id="880aaed583c06128d0dabc74c31f4f9c0f838de0" translate="yes" xml:space="preserve">
          <source>ISO Latin Alphabet No. 1, a.k.a. ISO-LATIN-1.</source>
          <target state="translated">ISO 라틴 알파벳 번호 1, 일명 ISO-LATIN-1.</target>
        </trans-unit>
        <trans-unit id="7ed18c6c7ea70ff1be77a3ecb9a66a126984e1e5" translate="yes" xml:space="preserve">
          <source>ISO_8859_1</source>
          <target state="translated">ISO_8859_1</target>
        </trans-unit>
        <trans-unit id="c252e4ebc2a8a2a4f6c18e35a3c3483e483dd246" translate="yes" xml:space="preserve">
          <source>Id and version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a51ffb1e3f01b30accf6df0d2f721e7f26e556" translate="yes" xml:space="preserve">
          <source>Ideally, a new version of a library can be used as a &quot;drop-in replacement&quot; for an older version. This means that upgrading a binary dependency should not break anything, even if the application is not recompiled (this is possible under dynamic linking).</source>
          <target state="translated">이상적으로 새 버전의 라이브러리를 이전 버전의 &quot;드롭 인 대체&quot;로 사용할 수 있습니다. 즉, 응용 프로그램을 다시 컴파일하지 않아도 바이너리 종속성을 업그레이드해도 아무런 문제가 발생하지 않아야합니다 (동적 연결에서 가능).</target>
        </trans-unit>
        <trans-unit id="859ba4fec3728f6f969697355896871c211c1e1f" translate="yes" xml:space="preserve">
          <source>Ideally, every incompatible change should be announced through a compile-time warning reported in the problematic code (usually referred to as a &lt;em&gt;deprecation warning&lt;/em&gt;) and accompanied with automated migration aids. So, the ideal migration workflow goes as follows:</source>
          <target state="translated">이상적으로, 호환되지 않는 모든 변경 사항은 문제 코드에보고 된 컴파일 타임 경고 (일반적으로 &lt;em&gt;사용 중단 경고&lt;/em&gt; 라고 함)를 통해 자동 마이그레이션 지원 도구와 함께 발표되어야합니다 . 따라서 이상적인 마이그레이션 워크 플로는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="087a9655745fc0cab55d8e68ef13c11042591cc2" translate="yes" xml:space="preserve">
          <source>Idiomatic use of language features</source>
          <target state="translated">언어 기능의 관용적 사용</target>
        </trans-unit>
        <trans-unit id="ec04bd386a626dbd6df1f3954dfd578f058ce091" translate="yes" xml:space="preserve">
          <source>Idioms</source>
          <target state="translated">Idioms</target>
        </trans-unit>
        <trans-unit id="3da115646ac4bed9a99193bb94e35bef8ed64988" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;append#kotlin.text.StringBuilder%24append(kotlin.String?)/value&quot;&gt;value&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt; are appended.</source>
          <target state="translated">경우 &lt;a href=&quot;append#kotlin.text.StringBuilder%24append(kotlin.String?)/value&quot;&gt;값&lt;/a&gt; 이다 &lt;code&gt;null&lt;/code&gt; , 4 개 문자 &lt;code&gt;&quot;null&quot;&lt;/code&gt; 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="7116ccfc9bfe7776006467cfb0a446f8b7f1a57f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.Array%28%28kotlin.collections.copyOf.T%29%29%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with &lt;code&gt;null&lt;/code&gt; values.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.Array%28%28kotlin.collections.copyOf.T%29%29%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 큰 경우, 복사 어레이 내의 여분의 요소로 채워진다 &lt;code&gt;null&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="10756c73471a82f7019c38192c8009852ba15419" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.Array%28%28kotlin.collections.copyOf.T%29%29%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.Array%28%28kotlin.collections.copyOf.T%29%29%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.Array%28%28kotlin.collections.copyOf.T%29%29%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 작은, 복사 배열이 잘린다 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.Array%28%28kotlin.collections.copyOf.T%29%29%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="51af16ecd7473c2e5424019e748ee393e778bc49" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.BooleanArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with &lt;code&gt;false&lt;/code&gt; values.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.BooleanArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 큰 경우, 복사 어레이 내의 여분의 요소로 채워진다 &lt;code&gt;false&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="c1e121c8e99f645abbf72f057357f99718caaa2f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.BooleanArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.BooleanArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.BooleanArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 작은, 복사 배열이 잘린다 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.BooleanArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1f2abba5d06a22a16ee639e853c70cb9ca87180f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.ByteArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with zero values.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.ByteArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 큰 경우, 복사 어레이 내의 여분의 요소는 제로 값으로 채워진다.</target>
        </trans-unit>
        <trans-unit id="f9cc62e5c68b22296cffe98ca0d3ae74a9771f17" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.ByteArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.ByteArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.ByteArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 작은, 복사 배열이 잘린다 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.ByteArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="54313bea7a81301c76111eaa07088a4a9fb7c12c" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.CharArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with null char (&lt;code&gt;\u0000&lt;/code&gt;) values.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.CharArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 큰 경우, 복사 배열의 추가 요소는 널 문자 (로 채워진다 &lt;code&gt;\u0000&lt;/code&gt; ) 값.</target>
        </trans-unit>
        <trans-unit id="b0875c9b1dc49854df801a1cc12ab6317eaea969" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.CharArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.CharArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.CharArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 작은, 복사 배열이 잘린다 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.CharArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ada9d3a67b3da1ac031d4b8eab6aa15e10e6f505" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.UIntArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with zero values.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.UIntArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 큰 경우, 복사 어레이 내의 여분의 요소는 제로 값으로 채워진다.</target>
        </trans-unit>
        <trans-unit id="a4d533ebbe21d5f918e9006bf160fa180cce3bde" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.UIntArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.UIntArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.UIntArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 작은, 복사 배열이 잘린다 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf%28kotlin.UIntArray%2C+kotlin.Int%29%2FnewSize&quot;&gt;newSize와&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c42a89a0a4cd96e24df901b9aa82a05f84012972" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.Array((kotlin.collections.copyOf.T)),%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with &lt;code&gt;null&lt;/code&gt; values.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.Array((kotlin.collections.copyOf.T)),%20kotlin.Int)/newSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 큰 경우, 복사 어레이 내의 여분의 요소로 채워진다 &lt;code&gt;null&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="409249b4b39897fe51824168aaadc0a266615ba8" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.Array((kotlin.collections.copyOf.T)),%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.Array((kotlin.collections.copyOf.T)),%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.Array((kotlin.collections.copyOf.T)),%20kotlin.Int)/newSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 작은, 복사 배열이 잘린다 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.Array((kotlin.collections.copyOf.T)),%20kotlin.Int)/newSize&quot;&gt;newSize와&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="45aac04fd71dfd2bc26c11ffe78da83301480137" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.BooleanArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with &lt;code&gt;false&lt;/code&gt; values.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.BooleanArray,%20kotlin.Int)/newSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 큰 경우, 복사 어레이 내의 여분의 요소로 채워진다 &lt;code&gt;false&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="60377e3a2ee5c9d0582df5e7225fd81cf996b18d" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.BooleanArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.BooleanArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.BooleanArray,%20kotlin.Int)/newSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 작은, 복사 배열이 잘린다 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.BooleanArray,%20kotlin.Int)/newSize&quot;&gt;newSize와&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3b05c8bbd75503d8e6a757c4ffaee353008eb06a" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.ByteArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with zero values.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.ByteArray,%20kotlin.Int)/newSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 큰 경우, 복사 어레이 내의 여분의 요소는 제로 값으로 채워진다.</target>
        </trans-unit>
        <trans-unit id="d68f7fc720a43801d5ec0fb8e11c4ff714977108" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.ByteArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.ByteArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.ByteArray,%20kotlin.Int)/newSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 작은, 복사 배열이 잘린다 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.ByteArray,%20kotlin.Int)/newSize&quot;&gt;newSize와&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="08338744c1d3dc8e1c228b11670b7813cf32d8d5" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.CharArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with null char (&lt;code&gt;\u0000&lt;/code&gt;) values.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.CharArray,%20kotlin.Int)/newSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 큰 경우, 복사 배열의 추가 요소는 널 문자 (로 채워진다 &lt;code&gt;\u0000&lt;/code&gt; ) 값.</target>
        </trans-unit>
        <trans-unit id="9db2ce53e2a43334e6fe2a23124f9533508dd54b" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.CharArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.CharArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.CharArray,%20kotlin.Int)/newSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 작은, 복사 배열이 잘린다 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.CharArray,%20kotlin.Int)/newSize&quot;&gt;newSize와&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="06592245364633ec4f7c7e7a9181301a3b171e05" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.UIntArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is greater than the size of the original array, the extra elements in the copy array are filled with zero values.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.UIntArray,%20kotlin.Int)/newSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 큰 경우, 복사 어레이 내의 여분의 요소는 제로 값으로 채워진다.</target>
        </trans-unit>
        <trans-unit id="7eec95129b2717b835f1bfade38acd0752e1f4d7" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.UIntArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt; is less than the size of the original array, the copy array is truncated to the &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.UIntArray,%20kotlin.Int)/newSize&quot;&gt;newSize&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.UIntArray,%20kotlin.Int)/newSize&quot;&gt;newSize와이&lt;/a&gt; 원의 배열의 크기보다 작은, 복사 배열이 잘린다 &lt;a href=&quot;copy-of#kotlin.collections%24copyOf(kotlin.UIntArray,%20kotlin.Int)/newSize&quot;&gt;newSize와&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="323d80bac9fea71a1cf91f72104d4ae325480945" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; is not specified then some unspecified name will be used. If &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fsuffix&quot;&gt;suffix&lt;/a&gt; is not specified then &quot;.tmp&quot; will be used. If &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fdirectory&quot;&gt;directory&lt;/a&gt; is not specified then the default temporary-file directory will be used.</source>
          <target state="translated">경우 &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fprefix&quot;&gt;접두사가&lt;/a&gt; 지정되지 일부 지정되지 않은 이름이 사용됩니다. 경우 &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fsuffix&quot;&gt;접미사가&lt;/a&gt; 지정되지 &quot;.TMP은&quot;사용됩니다. 경우 &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fdirectory&quot;&gt;디렉토리가&lt;/a&gt; 지정되지 기본 임시 파일 디렉토리가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b99190d89c3b360b3a835806e0662622d3cf0dbf" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir(kotlin.String,%20kotlin.String?,%20java.io.File?)/prefix&quot;&gt;prefix&lt;/a&gt; is not specified then some unspecified string will be used. If &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir(kotlin.String,%20kotlin.String?,%20java.io.File?)/suffix&quot;&gt;suffix&lt;/a&gt; is not specified then &quot;.tmp&quot; will be used. If &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir(kotlin.String,%20kotlin.String?,%20java.io.File?)/directory&quot;&gt;directory&lt;/a&gt; is not specified then the default temporary-file directory will be used.</source>
          <target state="translated">경우 &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir(kotlin.String,%20kotlin.String?,%20java.io.File?)/prefix&quot;&gt;접두사가&lt;/a&gt; 지정되지 일부 지정되지 않은 문자열이 사용됩니다. 경우 &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir(kotlin.String,%20kotlin.String?,%20java.io.File?)/suffix&quot;&gt;접미사가&lt;/a&gt; 지정되지 &quot;.TMP은&quot;사용됩니다. 경우 &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir(kotlin.String,%20kotlin.String?,%20java.io.File?)/directory&quot;&gt;디렉토리가&lt;/a&gt; 지정되지 기본 임시 파일 디렉토리가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="58f46707a7046964465798b99af9c1e475421494" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; is not specified then some unspecified name will be used. If &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fsuffix&quot;&gt;suffix&lt;/a&gt; is not specified then &quot;.tmp&quot; will be used. If &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fdirectory&quot;&gt;directory&lt;/a&gt; is not specified then the default temporary-file directory will be used.</source>
          <target state="translated">경우 &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fprefix&quot;&gt;접두사가&lt;/a&gt; 지정되지 일부 지정되지 않은 이름이 사용됩니다. 경우 &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fsuffix&quot;&gt;접미사가&lt;/a&gt; 지정되지 &quot;.TMP은&quot;사용됩니다. 경우 &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fdirectory&quot;&gt;디렉토리가&lt;/a&gt; 지정되지 기본 임시 파일 디렉토리가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="93e080d1cace70a7bf233d5a4555f4d07357dc7a" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile(kotlin.String,%20kotlin.String?,%20java.io.File?)/prefix&quot;&gt;prefix&lt;/a&gt; is not specified then some unspecified string will be used. If &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile(kotlin.String,%20kotlin.String?,%20java.io.File?)/suffix&quot;&gt;suffix&lt;/a&gt; is not specified then &quot;.tmp&quot; will be used. If &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile(kotlin.String,%20kotlin.String?,%20java.io.File?)/directory&quot;&gt;directory&lt;/a&gt; is not specified then the default temporary-file directory will be used.</source>
          <target state="translated">경우 &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile(kotlin.String,%20kotlin.String?,%20java.io.File?)/prefix&quot;&gt;접두사가&lt;/a&gt; 지정되지 일부 지정되지 않은 문자열이 사용됩니다. 경우 &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile(kotlin.String,%20kotlin.String?,%20java.io.File?)/suffix&quot;&gt;접미사가&lt;/a&gt; 지정되지 &quot;.TMP은&quot;사용됩니다. 경우 &lt;a href=&quot;create-temp-file#kotlin.io%24createTempFile(kotlin.String,%20kotlin.String?,%20java.io.File?)/directory&quot;&gt;디렉토리가&lt;/a&gt; 지정되지 기본 임시 파일 디렉토리가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="39f8f458ec615b321af11d61c4b5bbe5ba0596a6" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt; is rooted path it must be equal to this. If &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt; is relative path then last N components of &lt;code&gt;this&lt;/code&gt; must be the same as all components in &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt;, where N is the number of components in &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;다른&lt;/a&gt; 경로를 뿌리는이 동일해야합니다. 경우 &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;다른&lt;/a&gt; 상대 경로는 다음의 마지막 N 성분 &lt;code&gt;this&lt;/code&gt; 모든 구성 요소와 동일해야 &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;다른&lt;/a&gt; N은 구성 요소의 개수, &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;다른&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="59d70d8b4ea0e7645f189a9d7bf64c9955918ff9" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20java.io.File)/other&quot;&gt;other&lt;/a&gt; is rooted path it must be equal to this. If &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20java.io.File)/other&quot;&gt;other&lt;/a&gt; is relative path then last N components of &lt;code&gt;this&lt;/code&gt; must be the same as all components in &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20java.io.File)/other&quot;&gt;other&lt;/a&gt;, where N is the number of components in &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20java.io.File)/other&quot;&gt;other&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20java.io.File)/other&quot;&gt;다른&lt;/a&gt; 경로를 뿌리는이 동일해야합니다. 경우 &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20java.io.File)/other&quot;&gt;다른&lt;/a&gt; 상대 경로는 다음의 마지막 N 성분 &lt;code&gt;this&lt;/code&gt; 모든 구성 요소와 동일해야 &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20java.io.File)/other&quot;&gt;다른&lt;/a&gt; N은 구성 요소의 개수, &lt;a href=&quot;ends-with#kotlin.io%24endsWith(java.io.File,%20java.io.File)/other&quot;&gt;다른&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="df00345c684b508fceaa49f4842de52e91ae93ec" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;find-associated-object#T&quot;&gt;T&lt;/a&gt; is an @&lt;a href=&quot;-associated-object-key/index#kotlin.reflect.AssociatedObjectKey&quot;&gt;AssociatedObjectKey&lt;/a&gt;-annotated annotation class and &lt;a href=&quot;find-associated-object/-this-&quot;&gt;this&lt;/a&gt; class is annotated with @&lt;a href=&quot;find-associated-object#T&quot;&gt;T&lt;/a&gt; (&lt;code&gt;S::class&lt;/code&gt;), returns object &lt;code&gt;S&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;find-associated-object#T&quot;&gt;T는&lt;/a&gt; 것입니다 @ &lt;a href=&quot;-associated-object-key/index#kotlin.reflect.AssociatedObjectKey&quot;&gt;AssociatedObjectKey은&lt;/a&gt; 주석 클래스를 -annotated하고 &lt;a href=&quot;find-associated-object/-this-&quot;&gt;이&lt;/a&gt; 클래스는 @와 주석이 &lt;a href=&quot;find-associated-object#T&quot;&gt;T&lt;/a&gt; ( &lt;code&gt;S::class&lt;/code&gt; ), 반환 객체 &lt;code&gt;S&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="3f51d056b5749a61a78e491d362e33bcfd18e1b8" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;get-original-kotlin-class#kotlinx.cinterop%24getOriginalKotlinClass(kotlinx.cinterop.ObjCClass)/objCClass&quot;&gt;objCClass&lt;/a&gt; is a class generated to Objective-C header for Kotlin class, returns &lt;a href=&quot;../kotlin.reflect/-k-class/index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; for that original Kotlin class.</source>
          <target state="translated">&lt;a href=&quot;get-original-kotlin-class#kotlinx.cinterop%24getOriginalKotlinClass(kotlinx.cinterop.ObjCClass)/objCClass&quot;&gt;objCClass&lt;/a&gt; 가 Kotlin 클래스의 Objective-C 헤더에 생성 된 클래스 인 경우 원래 Kotlin 클래스에 대해 &lt;a href=&quot;../kotlin.reflect/-k-class/index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ac8f4b48d7ad52ef413b5d46f6ee7b18429f8a5c" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;get-original-kotlin-class#kotlinx.cinterop%24getOriginalKotlinClass(kotlinx.cinterop.ObjCProtocol)/objCProtocol&quot;&gt;objCProtocol&lt;/a&gt; is a protocol generated to Objective-C header for Kotlin class, returns &lt;a href=&quot;../kotlin.reflect/-k-class/index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; for that original Kotlin class.</source>
          <target state="translated">&lt;a href=&quot;get-original-kotlin-class#kotlinx.cinterop%24getOriginalKotlinClass(kotlinx.cinterop.ObjCProtocol)/objCProtocol&quot;&gt;objCProtocol&lt;/a&gt; 이 Kotlin 클래스의 Objective-C 헤더에 생성 된 프로토콜 인 경우 원래 Kotlin 클래스에 대해 &lt;a href=&quot;../kotlin.reflect/-k-class/index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="81624da05304cb9c4f3d0bda93d35dac96653765" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;insert#kotlin.text.StringBuilder%24insert(kotlin.Int,%20kotlin.String?)/value&quot;&gt;value&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt; are inserted.</source>
          <target state="translated">경우 &lt;a href=&quot;insert#kotlin.text.StringBuilder%24insert(kotlin.Int,%20kotlin.String?)/value&quot;&gt;값&lt;/a&gt; 이다 &lt;code&gt;null&lt;/code&gt; , 4 개 문자 &lt;code&gt;&quot;null&quot;&lt;/code&gt; 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="9c3436ce672978ed57529bad76b43af3b8c8d35f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;with-sign#kotlin.math%24withSign%28kotlin.Double%2C+kotlin.Double%29%2Fsign&quot;&gt;sign&lt;/a&gt; is &lt;code&gt;NaN&lt;/code&gt; the sign of the result is undefined.</source>
          <target state="translated">경우 &lt;a href=&quot;with-sign#kotlin.math%24withSign%28kotlin.Double%2C+kotlin.Double%29%2Fsign&quot;&gt;기호&lt;/a&gt; 입니다 &lt;code&gt;NaN&lt;/code&gt; 의 결과의 부호는 정의되지 않는다.</target>
        </trans-unit>
        <trans-unit id="0919bd45dfd5813545ade9fbc603f875245cc160" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;with-sign#kotlin.math%24withSign(kotlin.Double,%20kotlin.Double)/sign&quot;&gt;sign&lt;/a&gt; is &lt;code&gt;NaN&lt;/code&gt; the sign of the result is undefined.</source>
          <target state="translated">경우 &lt;a href=&quot;with-sign#kotlin.math%24withSign(kotlin.Double,%20kotlin.Double)/sign&quot;&gt;기호&lt;/a&gt; 입니다 &lt;code&gt;NaN&lt;/code&gt; 의 결과의 부호는 정의되지 않는다.</target>
        </trans-unit>
        <trans-unit id="97bd02530a6e92760dbfeb249a29a66473663604" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Car&lt;/code&gt; does nothing, it will inherit this function as-is, and it will return a message with the car's horsepowers and max speed. If we want a car-specific message, &lt;code&gt;Car&lt;/code&gt; can override the function by redeclaring it with the &lt;code&gt;override&lt;/code&gt; keyword:</source>
          <target state="translated">경우 &lt;code&gt;Car&lt;/code&gt; 아무것도하지 않는,있는 그대로가이 기능을 상속하고, 차의 horsepowers 및 최대 속도로 메시지를 반환합니다. 자동차 관련 메시지를 원하는 경우 , &lt;code&gt;override&lt;/code&gt; 키워드를 사용하여 &lt;code&gt;Car&lt;/code&gt; 를 사용하여 함수를 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6b65a764a6e57020469ed37fe85c746bc23325c2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;T&lt;/code&gt; is contravariant: is it okay that the user of my class thinks that &lt;code&gt;T&lt;/code&gt; in this position is a &lt;code&gt;Subtype&lt;/code&gt;, while in reality, it's a &lt;code&gt;Supertype&lt;/code&gt;?</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 가 반 변형 인 경우 : 내 클래스의 사용자 가이 위치의 &lt;code&gt;T&lt;/code&gt; 가 &lt;code&gt;Subtype&lt;/code&gt; 이라고 생각하는 것이 좋습니다 . 실제로는 &lt;code&gt;Supertype&lt;/code&gt; 입니까?</target>
        </trans-unit>
        <trans-unit id="7f4b2a8362f8c8da16a2daf58794c2f8fb9ef78c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;T&lt;/code&gt; is covariant: is it okay that the user of my class thinks that &lt;code&gt;T&lt;/code&gt; in this position is a &lt;code&gt;Supertype&lt;/code&gt;, while in reality, it's a &lt;code&gt;Subtype&lt;/code&gt;?</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 가 공변량 인 경우 : 내 클래스의 사용자 가이 위치의 &lt;code&gt;T&lt;/code&gt; 가 &lt;code&gt;Supertype&lt;/code&gt; &lt;code&gt;Subtype&lt;/code&gt; 이라고 생각하는 것이 좋지만 , 실제로는 서브 타입 입니까?</target>
        </trans-unit>
        <trans-unit id="bfd51f1001dac80c99a4bb3dda8e4e82d6a1ba60" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;maybeNull&lt;/code&gt; is null, the function won't be called, and &lt;code&gt;result&lt;/code&gt; will be null; otherwise, it will be the return value of &lt;code&gt;functionThatCanNotHandleNull(this)&lt;/code&gt;, where &lt;code&gt;this&lt;/code&gt; refers to &lt;code&gt;maybeNull&lt;/code&gt;. You can chain &lt;code&gt;run()&lt;/code&gt; calls with &lt;code&gt;?.&lt;/code&gt; - each one will be called on the previous result if it's not null:</source>
          <target state="translated">경우 &lt;code&gt;maybeNull&lt;/code&gt; 가 null의 경우,이 함수가 호출되지 않으며, &lt;code&gt;result&lt;/code&gt; null가됩니다; 그렇지 않은 경우의 반환 값이됩니다 &lt;code&gt;functionThatCanNotHandleNull(this)&lt;/code&gt; , &lt;code&gt;this&lt;/code&gt; 지칭 &lt;code&gt;maybeNull&lt;/code&gt; . &lt;code&gt;run()&lt;/code&gt; 호출을 &lt;code&gt;?.&lt;/code&gt; 연결할 수 있습니다 . -null이 아닌 경우 이전 결과에서 각각 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="1fae05b8006d19a81c7cfe4f83b2f0b20d1eb681" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;output&lt;/code&gt; is a .jar file, whether Kotlin runtime library is included in the jar</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; 이 .jar 파일 인 경우 Kotlin 런타임 라이브러리가 jar에 포함되는지 여부</target>
        </trans-unit>
        <trans-unit id="76b835947859ca1b8bd986c559c1ae81675e7041" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;this&lt;/em&gt; has no qualifiers, it refers to the &lt;em&gt;innermost enclosing scope&lt;/em&gt;. To refer to &lt;em&gt;this&lt;/em&gt; in other scopes, &lt;em&gt;label qualifiers&lt;/em&gt; are used:</source>
          <target state="translated">경우 &lt;em&gt;이&lt;/em&gt; 아무런 규정이 없다, 그것은을 의미 &lt;em&gt;안쪽 바깥 쪽 범위&lt;/em&gt; . 참조하려면 &lt;em&gt;이&lt;/em&gt; 다른 범위에서, &lt;em&gt;라벨 규정이&lt;/em&gt; 사용된다 :</target>
        </trans-unit>
        <trans-unit id="61eed3660645882617baf218a091099d9cf2b60b" translate="yes" xml:space="preserve">
          <source>If Expression</source>
          <target state="translated">식</target>
        </trans-unit>
        <trans-unit id="067406276e7bea71dbdf3fc57b0b60425f4f81e1" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;headerFilter&lt;/code&gt; is not specified, then all headers are included.</source>
          <target state="translated">경우 &lt;code&gt;headerFilter&lt;/code&gt; 가 지정되어 있지 않은 경우, 모든 헤더가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1d473c7be95157741f59b453932617b9a2d63b7" translate="yes" xml:space="preserve">
          <source>If a Java method returns void, it will return &lt;code&gt;Unit&lt;/code&gt; when called from Kotlin. If, by any chance, someone uses that return value, it will be assigned at the call site by the Kotlin compiler, since the value itself is known in advance (being &lt;code&gt;Unit&lt;/code&gt;).</source>
          <target state="translated">Java 메소드가 void를 리턴 하면 Kotlin에서 호출 될 때 &lt;code&gt;Unit&lt;/code&gt; 을 리턴 합니다. 만일 누군가가 그 리턴 값을 사용한다면, Kotlin 컴파일러에 의해 콜 사이트에서 그 값이 할당 될 것입니다. 그 값 자체는 미리 알려져 있기 때문입니다 ( &lt;code&gt;Unit&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="40ec1cb51b1e7e966d4cdec7135acdd24d93310b" translate="yes" xml:space="preserve">
          <source>If a Kotlin file contains a single class (potentially with related top-level declarations), its name should be the same as the name of the class, with the .kt extension appended. If a file contains multiple classes, or only top-level declarations, choose a name describing what the file contains, and name the file accordingly. Use camel humps with an uppercase first letter (e.g. &lt;code&gt;ProcessDeclarations.kt&lt;/code&gt;).</source>
          <target state="translated">Kotlin 파일에 단일 클래스 (잠재적으로 관련된 최상위 레벨 선언이있는)가 포함 된 경우, 해당 이름은 .kt 확장자가 추가 된 클래스 이름과 같아야합니다. 파일에 여러 클래스가 포함되어 있거나 최상위 수준 선언 만있는 경우 파일에 포함 된 내용을 설명하는 이름을 선택하고 그에 따라 파일 이름을 지정하십시오. 대문자 첫 글자가 포함 된 낙타 혹을 사용하십시오 (예 : &lt;code&gt;ProcessDeclarations.kt&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a5f29e49b7a1540ab6955bac6bab0b557adcfa46" translate="yes" xml:space="preserve">
          <source>If a Kotlin file contains a single class (potentially with related top-level declarations), its name should be the same as the name of the class, with the .kt extension appended. If a file contains multiple classes, or only top-level declarations, choose a name describing what the file contains, and name the file accordingly. Use the &lt;a href=&quot;https://en.wikipedia.org/wiki/Camel_case&quot;&gt;camel case&lt;/a&gt; with an uppercase first letter (for example, &lt;code&gt;ProcessDeclarations.kt&lt;/code&gt;).</source>
          <target state="translated">Kotlin 파일에 단일 클래스 (관련 최상위 수준 선언 포함)가 포함 된 경우 파일 이름은 .kt 확장자가 추가 된 클래스 이름과 동일해야합니다. 파일에 여러 클래스가 포함되어 있거나 최상위 선언 만있는 경우 파일에 포함 된 내용을 설명하는 이름을 선택하고 그에 따라 파일 이름을 지정합니다. 첫 번째 대문자와 함께 &lt;a href=&quot;https://en.wikipedia.org/wiki/Camel_case&quot;&gt;카멜 케이스&lt;/a&gt; 를 사용합니다 (예 : &lt;code&gt;ProcessDeclarations.kt&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d499261dcf077150b8a893ee60227455c9e843ed" translate="yes" xml:space="preserve">
          <source>If a Kotlin/Native module uses a CocoaPods library, you can build this module only from an Xcode project. Otherwise the CocoaPods library cannot be resolved by the Kotlin/Native infrastructure.</source>
          <target state="translated">Kotlin / Native 모듈이 CocoaPods 라이브러리를 사용하는 경우 Xcode 프로젝트에서만이 모듈을 빌드 할 수 있습니다. 그렇지 않으면 Kotlin / Native 인프라에서 CocoaPods 라이브러리를 확인할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c57e5e1c183d06345fa4f91784753426d2cd7cbe" translate="yes" xml:space="preserve">
          <source>If a class has a &lt;a href=&quot;object-declarations#companion-objects&quot;&gt;companion object&lt;/a&gt; defined, you can also define extension functions and properties for the companion object. Just like regular members of the companion object, they can be called using only the class name as the qualifier:</source>
          <target state="translated">클래스에 &lt;a href=&quot;object-declarations#companion-objects&quot;&gt;컴패니언 객체가&lt;/a&gt; 정의 되어있는 경우 컴패니언 객체에 대한 확장 함수 및 속성도 정의 할 수 있습니다. 컴패니언 객체의 일반 멤버와 마찬가지로 클래스 이름 만 한정자로 사용하여 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a60ec0b587e0996e818004264195b3afcc09cec1" translate="yes" xml:space="preserve">
          <source>If a class has a &lt;a href=&quot;object-declarations#companion-objects&quot;&gt;companion object&lt;/a&gt; defined, you can also define extension functions and properties for the companion object:</source>
          <target state="translated">클래스에 &lt;a href=&quot;object-declarations#companion-objects&quot;&gt;컴패니언 객체가&lt;/a&gt; 정의되어 있으면 컴패니언 객체의 확장 함수 및 속성을 정의 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="4764e437b4a8e0194f97255ccbb034043a390f71" translate="yes" xml:space="preserve">
          <source>If a class has a member function, and an extension function is defined which has the same receiver type, the same name is applicable to given arguments, the &lt;strong&gt;member always wins&lt;/strong&gt;. For example:</source>
          <target state="translated">클래스에 멤버 함수가 있고 동일한 수신자 유형을 가진 확장 함수가 정의 된 경우 주어진 인수에 동일한 이름이 적용 가능하고 &lt;strong&gt;멤버가 항상 승리&lt;/strong&gt; 합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9198c3448fff5eb29091025ac1cdca923057a3b0" translate="yes" xml:space="preserve">
          <source>If a class has a member function, and an extension function is defined which has the same receiver type, the same name, and is applicable to given arguments, the &lt;strong&gt;member always wins&lt;/strong&gt;. For example:</source>
          <target state="translated">클래스에 멤버 함수가 있고 동일한 수신자 유형, 동일한 이름을 가지며 주어진 인수에 적용 가능한 확장 함수가 정의 된 경우 &lt;strong&gt;멤버는 항상 승리&lt;/strong&gt; 합니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="b0751c2dcab880d762e9ac5f2b150da0f43d1aeb" translate="yes" xml:space="preserve">
          <source>If a class has two properties which are conceptually the same but one is part of a public API and another is an implementation detail, use an underscore as the prefix for the name of the private property:</source>
          <target state="translated">클래스에 개념적으로 동일하지만 하나는 공용 API의 일부이고 다른 하나는 구현 세부 사항 인 두 개의 특성이있는 경우 개인 특성 이름의 접 두부로 밑줄을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="62aeef1d35409f9d2a0e16b783bc032764ff6cdc" translate="yes" xml:space="preserve">
          <source>If a class or a function from a library is marked by its author as experimental, using it in your code will produce warnings or compilation errors unless you explicitly accept their experimental status. There are several ways to accept the experimental status of API elements; all of them are applicable without technical limitations. You are free to choose the way that you find best for your situation.</source>
          <target state="translated">라이브러리의 클래스 또는 함수가 작성자에 의해 실험적인 것으로 표시되는 경우 코드에서 클래스 또는 함수를 사용하면 실험 상태를 명시 적으로 허용하지 않는 한 경고 또는 컴파일 오류가 발생합니다. API 요소의 실험 상태를 수용하는 방법에는 여러 가지가 있습니다. 이들 모두는 기술적 제한없이 적용 가능합니다. 상황에 가장 적합한 방법을 자유롭게 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b68424f5ba6a2078bd8f39139d9b1b4eecca3f3f" translate="yes" xml:space="preserve">
          <source>If a component of the destructured parameter is unused, you can replace it with the underscore to avoid inventing its name:</source>
          <target state="translated">비 구조화 된 매개 변수의 구성 요소를 사용하지 않는 경우 이름을 발명하지 않도록 밑줄로 바꿀 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="69396f6988ae56a2b749974b16702f3935d83bf9" translate="yes" xml:space="preserve">
          <source>If a coroutine encounters an exception other than &lt;code&gt;CancellationException&lt;/code&gt;, it cancels its parent with that exception. This behaviour cannot be overridden and is used to provide stable coroutines hierarchies for &lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines/blob/master/docs/composing-suspending-functions.md#structured-concurrency-with-async&quot;&gt;structured concurrency&lt;/a&gt;. &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-exception-handler/index.html&quot;&gt;CoroutineExceptionHandler&lt;/a&gt; implementation is not used for child coroutines.</source>
          <target state="translated">코 루틴이 &lt;code&gt;CancellationException&lt;/code&gt; 이외의 예외를 만나면 해당 예외 와 함께 부모를 취소합니다. 이 동작은 재정의 할 수 없으며 &lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines/blob/master/docs/composing-suspending-functions.md#structured-concurrency-with-async&quot;&gt;구조화 된 동시성&lt;/a&gt; 을위한 안정적인 코 루틴 계층을 제공하는 데 사용 됩니다 . &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-exception-handler/index.html&quot;&gt;CoroutineExceptionHandler&lt;/a&gt; 구현은 자식 코 루틴에 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c6f280ee1c596a483e44dc5cd919a56f36a6fc8d" translate="yes" xml:space="preserve">
          <source>If a coroutine encounters exception other than &lt;code&gt;CancellationException&lt;/code&gt;, it cancels its parent with that exception. This behaviour cannot be overridden and is used to provide stable coroutines hierarchies for &lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines/blob/master/docs/composing-suspending-functions.md#structured-concurrency-with-async&quot;&gt;structured concurrency&lt;/a&gt; which do not depend on &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-exception-handler/index.html&quot;&gt;CoroutineExceptionHandler&lt;/a&gt; implementation. The original exception is handled by the parent when all its children terminate.</source>
          <target state="translated">코 루틴에서 &lt;code&gt;CancellationException&lt;/code&gt; 이외의 예외가 발생하면 해당 예외로 상위 항목을 취소합니다. 이 동작은 재정의 할 수 없으며 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-exception-handler/index.html&quot;&gt;CoroutineExceptionHandler&lt;/a&gt; 구현에 의존하지 않는 &lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines/blob/master/docs/composing-suspending-functions.md#structured-concurrency-with-async&quot;&gt;구조적 동시성에&lt;/a&gt; 대해 안정적인 코 루틴 계층을 제공하는 데 사용됩니다 . 원래 예외는 모든 자식이 종료 될 때 부모에 의해 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="d2d462cd8e9ba3b7d699994700c496f2c560b29d" translate="yes" xml:space="preserve">
          <source>If a declaration has multiple modifiers, always put them in the following order:</source>
          <target state="translated">선언에 수정자가 여러 개 있으면 항상 다음 순서로 배치하십시오.</target>
        </trans-unit>
        <trans-unit id="1c324efe9f900ec5ab9502805d87c655d837da4d" translate="yes" xml:space="preserve">
          <source>If a default parameter precedes a parameter with no default value, the default value can only be used by calling the function with &lt;a href=&quot;#named-arguments&quot;&gt;named arguments&lt;/a&gt;:</source>
          <target state="translated">기본 매개 변수가 기본값이없는 매개 변수보다 앞에 오는 경우 &lt;a href=&quot;#named-arguments&quot;&gt;명명 된 인수를&lt;/a&gt; 사용하여 함수를 호출해야만 기본값을 사용할 수 있습니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
