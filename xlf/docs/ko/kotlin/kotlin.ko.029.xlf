<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="kotlin">
    <body>
      <group id="kotlin">
        <trans-unit id="36819db18efcb8496bc5a919d2b1549693e0dfdd" translate="yes" xml:space="preserve">
          <source>XMLSerializer</source>
          <target state="translated">XMLSerializer</target>
        </trans-unit>
        <trans-unit id="1c63b87d580535129b13b917078f7e9138c16556" translate="yes" xml:space="preserve">
          <source>Xcode and Framework Dependencies</source>
          <target state="translated">Xcode 및 프레임 워크 종속성</target>
        </trans-unit>
        <trans-unit id="7dcbf45e2c42b26cfe9acfb1f45de05857973a2a" translate="yes" xml:space="preserve">
          <source>Xcode doesn't seem to properly decode stack trace elements of inlined function calls (these aren't only Kotlin &lt;code&gt;inline&lt;/code&gt; functions but also functions that are inlined when optimizing machine code). So some stack trace elements may be missing. If this is the case, consider using &lt;code&gt;lldb&lt;/code&gt; to process crash report that is already symbolicated by Xcode, for example:</source>
          <target state="translated">Xcode가 인라인 함수 호출의 스택 추적 요소를 제대로 디코딩하지 않는 것 같습니다 (이는 Kotlin &lt;code&gt;inline&lt;/code&gt; 함수뿐 아니라 기계어 코드를 최적화 할 때 인라인되는 함수입니다). 따라서 일부 스택 추적 요소가 누락 될 수 있습니다. 이 경우 &lt;code&gt;lldb&lt;/code&gt; 를 사용하여 Xcode로 이미 기호화 된 충돌 보고서를 처리하는 것이 좋습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="732d08a53b0b27c00ea6c38c4e10dc1ae027367a" translate="yes" xml:space="preserve">
          <source>Xcode for MacOS Target</source>
          <target state="translated">MacOS 대상 용 Xcode</target>
        </trans-unit>
        <trans-unit id="3a7ca3b71d6353cbeb0a7191c9ae7d613e2072fe" translate="yes" xml:space="preserve">
          <source>Xcode for iOS Targets</source>
          <target state="translated">iOS 대상 용 Xcode</target>
        </trans-unit>
        <trans-unit id="10b6ea98a131afdfd6c5823985ffcb4d7db24754" translate="yes" xml:space="preserve">
          <source>Yan Zhulanow</source>
          <target state="translated">얀 줄라 노프</target>
        </trans-unit>
        <trans-unit id="5397e0583f14f6c88de06b1ef28f460a1fb5b0ae" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Yes</target>
        </trans-unit>
        <trans-unit id="c6b7a6f0d9b6f5b060d650b3d18fe5423f38f5f8" translate="yes" xml:space="preserve">
          <source>Yes. In addition to using for backend web, you can also use Kotlin/JS for client-side web. Kotlin can use definitions from &lt;a href=&quot;http://definitelytyped.org&quot;&gt;DefinitelyTyped&lt;/a&gt; to get static typing for common JavaScript libraries, and it is compatible with existing module systems such as AMD and CommonJS. For more information check out &lt;a href=&quot;js-overview&quot;&gt;the resource on client-side development&lt;/a&gt;.</source>
          <target state="translated">예. 백엔드 웹에 사용하는 것 외에도 클라이언트 측 웹에 Kotlin / JS를 사용할 수 있습니다. Kotlin은 &lt;a href=&quot;http://definitelytyped.org&quot;&gt;DefinitelyTyped의&lt;/a&gt; 정의를 사용 하여 일반적인 JavaScript 라이브러리에 대한 정적 입력을 얻을 수 있으며 AMD 및 CommonJS와 같은 기존 모듈 시스템과 호환됩니다. 자세한 정보 &lt;a href=&quot;js-overview&quot;&gt;는 클라이언트 측 개발에 대한 자원을&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="24ef19bd981996fb3975b390fdf4e389e302f664" translate="yes" xml:space="preserve">
          <source>Yes. Kotlin has a very vibrant community. Kotlin developers hang out on the &lt;a href=&quot;http://discuss.kotlinlang.org&quot;&gt;Kotlin forums&lt;/a&gt;, &lt;a href=&quot;http://stackoverflow.com/questions/tagged/kotlin&quot;&gt;StackOverflow&lt;/a&gt; and more actively on the &lt;a href=&quot;http://slack.kotlinlang.org&quot;&gt;Kotlin Slack&lt;/a&gt; (with close to 20000 members as of October 2018).</source>
          <target state="translated">예. 코 틀린은 매우 활기찬 커뮤니티를 가지고 있습니다. Kotlin 개발자는 &lt;a href=&quot;http://discuss.kotlinlang.org&quot;&gt;Kotlin 포럼&lt;/a&gt; , &lt;a href=&quot;http://stackoverflow.com/questions/tagged/kotlin&quot;&gt;StackOverflow&lt;/a&gt; 및 &lt;a href=&quot;http://slack.kotlinlang.org&quot;&gt;Kotlin Slack&lt;/a&gt; 에 더욱 적극적으로 참여합니다 (2018 년 10 월 기준으로 약 20000 명).</target>
        </trans-unit>
        <trans-unit id="eff3e318f84c4cc9d6e232c833a673793a1fdf5a" translate="yes" xml:space="preserve">
          <source>Yes. Kotlin has a very vibrant community. Kotlin developers hang out on the &lt;a href=&quot;http://discuss.kotlinlang.org&quot;&gt;Kotlin forums&lt;/a&gt;, &lt;a href=&quot;http://stackoverflow.com/questions/tagged/kotlin&quot;&gt;StackOverflow&lt;/a&gt; and more actively on the &lt;a href=&quot;http://slack.kotlinlang.org&quot;&gt;Kotlin Slack&lt;/a&gt; (with close to 30000 members as of April 2020).</source>
          <target state="translated">예. Kotlin에는 매우 활기찬 커뮤니티가 있습니다. Kotlin 개발자는 &lt;a href=&quot;http://discuss.kotlinlang.org&quot;&gt;Kotlin 포럼&lt;/a&gt; , &lt;a href=&quot;http://stackoverflow.com/questions/tagged/kotlin&quot;&gt;StackOverflow&lt;/a&gt; 및 &lt;a href=&quot;http://slack.kotlinlang.org&quot;&gt;Kotlin Slack&lt;/a&gt; 에서 더 활발하게 활동합니다 (2020 년 4 월 현재 30000 명에 가까운 회원).</target>
        </trans-unit>
        <trans-unit id="9c3a4c2db5e8dd0d2cb7f40d618381241d23fdb5" translate="yes" xml:space="preserve">
          <source>Yes. Kotlin is 100% compatible with the JVM and as such you can use any existing frameworks such as Spring Boot, vert.x or JSF. In addition there are specific frameworks written in Kotlin such as &lt;a href=&quot;http://github.com/kotlin/ktor&quot;&gt;Ktor&lt;/a&gt;. For more information check out &lt;a href=&quot;server-overview&quot;&gt;the resource on server-side development&lt;/a&gt;.</source>
          <target state="translated">예. Kotlin은 JVM과 100 % 호환되므로 Spring Boot, vert.x 또는 JSF와 같은 기존 프레임 워크를 사용할 수 있습니다. 또한 &lt;a href=&quot;http://github.com/kotlin/ktor&quot;&gt;Ktor&lt;/a&gt; 와 같은 Kotlin으로 작성된 특정 프레임 워크가 있습니다. 자세한 정보 &lt;a href=&quot;server-overview&quot;&gt;는 서버 측 개발 자원을&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="394e7e23081bdb6d99bfe5b20e776940a0eddfc7" translate="yes" xml:space="preserve">
          <source>Yes. Kotlin is 100% interoperable with the Java programming language and major emphasis has been placed on making sure that your existing codebase can interact properly with Kotlin. You can easily call Kotlin code from Java and Java code from Kotlin. This makes adoption much easier and lower-risk. There&amp;rsquo;s also an automated Java-to-Kotlin converter built into the IDE that simplifies migration of existing code.</source>
          <target state="translated">예. Kotlin은 Java 프로그래밍 언어와 100 % 상호 운용되며 기존 코드베이스가 Kotlin과 올바르게 상호 작용할 수 있도록하는 데 중점을두고 있습니다. Java의 Kotlin 코드와 Kotlin의 Java 코드를 쉽게 호출 할 수 있습니다. 이를 통해 채택이 훨씬 쉽고 위험이 적습니다. 또한 기존 코드의 마이그레이션을 단순화하는 자동화 된 Java-Kotlin 변환기가 IDE에 내장되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a17fa4b35c62003c3a9f7533fe6e9c37272164c" translate="yes" xml:space="preserve">
          <source>Yes. Kotlin is free, has been free and will remain free. It is developed under the Apache 2.0 license and the source code is available &lt;a href=&quot;https://github.com/jetbrains/kotlin&quot;&gt;on GitHub&lt;/a&gt;.</source>
          <target state="translated">예. 코 틀린은 자유롭고 자유롭고 자유로울 것입니다. Apache 2.0 라이센스로 개발되었으며 소스 코드는 &lt;a href=&quot;https://github.com/jetbrains/kotlin&quot;&gt;GitHub에서&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="94a7986414ee52d128b983f272b2ad70c6da6d23" translate="yes" xml:space="preserve">
          <source>Yes. Kotlin is supported as a first-class language on Android. There are hundreds of applications already using Kotlin for Android, such as Basecamp, Pinterest and more. For more information check out &lt;a href=&quot;android-overview&quot;&gt;the resource on Android development&lt;/a&gt;.</source>
          <target state="translated">예. Kotlin은 Android에서 일류 언어로 지원됩니다. 베이스 캠프, Pinterest 등과 같은 Android 용 Kotlin을 이미 사용하고있는 수백 개의 애플리케이션이 있습니다. 자세한 내용 &lt;a href=&quot;android-overview&quot;&gt;은 Android 개발 리소스를&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="274a0b95b655ed64a6efffee34c2a68aaf45a096" translate="yes" xml:space="preserve">
          <source>Yes. Kotlin/Native is available as a part of Kotlin project. It compiles Kotlin to native code that can run without a VM. It is still in beta, but you can already try it on popular desktop and mobile platforms and even some IoT devices. For more information, check out the &lt;a href=&quot;native-overview&quot;&gt;Kotlin/Native documentation&lt;/a&gt;.</source>
          <target state="translated">예. Kotlin / Native는 Kotlin 프로젝트의 일부로 사용할 수 있습니다. Kotlin을 VM없이 실행할 수있는 네이티브 코드로 컴파일합니다. 아직 베타 버전이지만 널리 사용되는 데스크톱 및 모바일 플랫폼과 일부 IoT 장치에서 이미 사용해 볼 수 있습니다. 자세한 내용은 &lt;a href=&quot;native-overview&quot;&gt;Kotlin / Native 문서를&lt;/a&gt; 확인하세요 .</target>
        </trans-unit>
        <trans-unit id="28cb538590ffcbd4b0b44f9f9e65a37e67d87b7d" translate="yes" xml:space="preserve">
          <source>Yes. The most active Kotlin account is &lt;a href=&quot;https://twitter.com/kotlin&quot;&gt;on Twitter&lt;/a&gt;.</source>
          <target state="translated">예. 가장 활발한 Kotlin 계정은 &lt;a href=&quot;https://twitter.com/kotlin&quot;&gt;Twitter에&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="dca77782c9a250224765e2008d4c84fd762a0d93" translate="yes" xml:space="preserve">
          <source>Yes. The official annual &lt;a href=&quot;https://kotlinconf.com/&quot;&gt;KotlinConf&lt;/a&gt; is hosted by JetBrains. It has taken place in San-Francisco in &lt;a href=&quot;https://kotlinconf.com/2017/&quot;&gt;2017&lt;/a&gt; and in Amsterdam in 2018. Kotlin is also being covered in different conferences worldwide. You can find a list of &lt;a href=&quot;https://kotlinlang.org/community/talks.html?time=upcoming&quot;&gt;upcoming talks on the web site&lt;/a&gt;.</source>
          <target state="translated">예. 공식 연례 &lt;a href=&quot;https://kotlinconf.com/&quot;&gt;KotlinConf&lt;/a&gt; 는 JetBrains가 주최합니다. 코 틀린은 &lt;a href=&quot;https://kotlinconf.com/2017/&quot;&gt;2017 년&lt;/a&gt; 샌프란시스코 와 2018 년 암스테르담에서 열렸다 . &lt;a href=&quot;https://kotlinlang.org/community/talks.html?time=upcoming&quot;&gt;웹 사이트에서 예정된 대화&lt;/a&gt; 목록을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8c278e2f4da0bfe99800e689c9bf58dc3c9371bf" translate="yes" xml:space="preserve">
          <source>Yes. The official annual &lt;a href=&quot;https://kotlinconf.com/&quot;&gt;KotlinConf&lt;/a&gt; is hosted by JetBrains. It took place in San-Francisco in &lt;a href=&quot;https://kotlinconf.com/2017/&quot;&gt;2017&lt;/a&gt;, Amsterdam in &lt;a href=&quot;https://kotlinconf.com/2018/&quot;&gt;2018&lt;/a&gt;, and Copenhagen in &lt;a href=&quot;https://kotlinconf.com/2019/&quot;&gt;2019&lt;/a&gt;. Kotlin is also being covered in different conferences worldwide. You can find a list of &lt;a href=&quot;https://kotlinlang.org/community/talks.html?time=upcoming&quot;&gt;upcoming talks on the web site&lt;/a&gt;.</source>
          <target state="translated">예. 공식 연례 &lt;a href=&quot;https://kotlinconf.com/&quot;&gt;KotlinConf&lt;/a&gt; 는 JetBrains에서 주최합니다. &lt;a href=&quot;https://kotlinconf.com/2017/&quot;&gt;2017 년&lt;/a&gt; 샌프란시스코 , &lt;a href=&quot;https://kotlinconf.com/2018/&quot;&gt;2018 년&lt;/a&gt; 암스테르담 , &lt;a href=&quot;https://kotlinconf.com/2019/&quot;&gt;2019 년&lt;/a&gt; 코펜하겐에서 열렸습니다 . Kotlin은 전 세계 여러 회의에서도 다루어지고 있습니다. &lt;a href=&quot;https://kotlinlang.org/community/talks.html?time=upcoming&quot;&gt;웹 사이트에서 예정된 강연&lt;/a&gt; 목록을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="acc7e1273f0c7c021fb0eb154bd30f632b5979c1" translate="yes" xml:space="preserve">
          <source>Yes. There are many User Groups and Meetups now focused exclusively around Kotlin. You can find &lt;a href=&quot;https://kotlinlang.org/user-groups/user-group-list.html&quot;&gt;a list on the web site&lt;/a&gt;. In addition there are community organised &lt;a href=&quot;https://kotlinlang.org/community/events.html&quot;&gt;Kotlin Nights&lt;/a&gt; events around the world.</source>
          <target state="translated">예. 이제 Kotlin에만 초점을 맞춘 많은 사용자 그룹과 모임이 있습니다. &lt;a href=&quot;https://kotlinlang.org/user-groups/user-group-list.html&quot;&gt;웹 사이트에서 목록을&lt;/a&gt; 찾을 수 있습니다 . 또한 전 세계에서 커뮤니티가 조직 한 &lt;a href=&quot;https://kotlinlang.org/community/events.html&quot;&gt;Kotlin Nights&lt;/a&gt; 이벤트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="245f2a5591a9c4d3569894353e1f2cf56a21fb18" translate="yes" xml:space="preserve">
          <source>Yes. There are many User Groups and Meetups now focused exclusively around Kotlin. You can find &lt;a href=&quot;https://kotlinlang.org/user-groups/user-group-list.html&quot;&gt;a list on the web site&lt;/a&gt;. In addition there are community organised &lt;a href=&quot;https://kotlinlang.org/community/kotlin-nights.html&quot;&gt;Kotlin Nights&lt;/a&gt; events around the world.</source>
          <target state="translated">예. Kotlin을 중심으로 많은 사용자 그룹과 Meetup이 있습니다. &lt;a href=&quot;https://kotlinlang.org/user-groups/user-group-list.html&quot;&gt;웹 사이트에서 목록을&lt;/a&gt; 찾을 수 있습니다 . 또한 전 세계에 커뮤니티 구성 &lt;a href=&quot;https://kotlinlang.org/community/kotlin-nights.html&quot;&gt;Kotlin Nights&lt;/a&gt; 이벤트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="26bf688303ceb780f3d0c7dbc40853123225c437" translate="yes" xml:space="preserve">
          <source>Yes. You can use any Java UI framework such as JavaFx, Swing or other. In addition there are Kotlin specific frameworks such as &lt;a href=&quot;https://github.com/edvin/tornadofx&quot;&gt;TornadoFX&lt;/a&gt;.</source>
          <target state="translated">예. JavaFx, Swing 또는 기타와 같은 Java UI 프레임 워크를 사용할 수 있습니다. 또한 &lt;a href=&quot;https://github.com/edvin/tornadofx&quot;&gt;TornadoFX&lt;/a&gt; 와 같은 Kotlin 관련 프레임 워크가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6d46727d9cbc5b42400b7033c423aa9ae8e2e2c7" translate="yes" xml:space="preserve">
          <source>Yet another version is &lt;code&gt;with()&lt;/code&gt;, which you can also use to avoid coming up with a variable name for an expression, but only if you know that its result will be non-null:</source>
          <target state="translated">또 다른 버전은 &lt;code&gt;with()&lt;/code&gt; 이며, 표현식의 변수 이름이 나오지 않도록하는 데 사용할 수 있지만 결과가 널이 아님 을 알고있는 경우에만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6645373aa19d277d4be38cd447e02f606199d919" translate="yes" xml:space="preserve">
          <source>Yields a collections of values to the &lt;a href=&quot;../../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; being built and suspends until all these values are iterated and the next one is requested.</source>
          <target state="translated">빌드중인 &lt;a href=&quot;../../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; 에 값 콜렉션을 생성 하고 이러한 모든 값이 반복되고 다음 값이 요청 될 때까지 일시 중단됩니다.</target>
        </trans-unit>
        <trans-unit id="dea7ede9ec104387fb1609c7bda3174d6b55a932" translate="yes" xml:space="preserve">
          <source>Yields a collections of values to the &lt;a href=&quot;../../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; being built.</source>
          <target state="translated">빌드중인 &lt;a href=&quot;../../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;반복자&lt;/a&gt; 에 값 모음을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="5bb64263f34a1036737ff6affb76d9c6aca92b5e" translate="yes" xml:space="preserve">
          <source>Yields a value to the &lt;a href=&quot;../../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; being built and suspends until the next value is requested.</source>
          <target state="translated">빌드중인 &lt;a href=&quot;../../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; 에 값을 생성 하고 다음 값이 요청 될 때까지 일시 중단합니다.</target>
        </trans-unit>
        <trans-unit id="ecaa73b411ba3d85fb72c340d0006f2cb62ea630" translate="yes" xml:space="preserve">
          <source>Yields a value to the &lt;a href=&quot;../../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; being built.</source>
          <target state="translated">빌드중인 &lt;a href=&quot;../../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;반복기&lt;/a&gt; 에 값을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="05fdedd2dc5a0d174b59f8e50970bf9a2634ba23" translate="yes" xml:space="preserve">
          <source>Yields all values from the &lt;code&gt;iterator&lt;/code&gt; to the &lt;a href=&quot;../../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; being built and suspends until all these values are iterated and the next one is requested.</source>
          <target state="translated">로부터 수확량 모든 값을 &lt;code&gt;iterator&lt;/code&gt; 받는 &lt;a href=&quot;../../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;반복자가&lt;/a&gt; 건설되고 일시 중단이 모든 값이 반복 될 때까지하고 다음 요청합니다.</target>
        </trans-unit>
        <trans-unit id="d5b7d32bb963fafb74937e16dd39bc1436006180" translate="yes" xml:space="preserve">
          <source>Yields all values from the &lt;code&gt;iterator&lt;/code&gt; to the &lt;a href=&quot;../../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; being built.</source>
          <target state="translated">로부터 수확량 모든 값을 &lt;code&gt;iterator&lt;/code&gt; 받는 &lt;a href=&quot;../../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;반복자가&lt;/a&gt; 건설되고.</target>
        </trans-unit>
        <trans-unit id="212c4574faa5981056973317a8194c4f7193f00f" translate="yes" xml:space="preserve">
          <source>Yields potentially infinite sequence of values to the &lt;a href=&quot;../../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; being built and suspends until all these values are iterated and the next one is requested.</source>
          <target state="translated">잠재적으로 무한한 값의 시퀀스를 빌드중인 &lt;a href=&quot;../../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; 에 생성하고 모든 값이 반복되고 다음 값이 요청 될 때까지 일시 중단됩니다.</target>
        </trans-unit>
        <trans-unit id="cbe0f5f8c7f37c7f0116dd89dfbe4311362f100e" translate="yes" xml:space="preserve">
          <source>Yields potentially infinite sequence of values to the &lt;a href=&quot;../../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; being built.</source>
          <target state="translated">잠재적으로 무한한 값의 시퀀스를 빌드중인 &lt;a href=&quot;../../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;반복자&lt;/a&gt; 에게 양도합니다.</target>
        </trans-unit>
        <trans-unit id="ac334ed8ed56d40bbf0b004222da8a5cfbbfd85a" translate="yes" xml:space="preserve">
          <source>You &lt;em&gt;catch&lt;/em&gt; it with &lt;code&gt;try&lt;/code&gt;/&lt;code&gt;catch&lt;/code&gt; (which corresponds to &lt;code&gt;try&lt;/code&gt;/&lt;code&gt;except&lt;/code&gt; in Python):</source>
          <target state="translated">당신은 &lt;em&gt;잡을&lt;/em&gt; 그것을 &lt;code&gt;try&lt;/code&gt; / &lt;code&gt;catch&lt;/code&gt; (대응 &lt;code&gt;try&lt;/code&gt; / &lt;code&gt;except&lt;/code&gt; 파이썬) :</target>
        </trans-unit>
        <trans-unit id="20636499bb6197906e978100ce69432c0dbbf03f" translate="yes" xml:space="preserve">
          <source>You also can get the plugin from a Bintray repository. In addition to releases, this repo contains old and development versions of the plugin which are not available at the plugin portal. To get the plugin from the Bintray repo, include the following snippet in your build script:</source>
          <target state="translated">Bintray 저장소에서 플러그인을 얻을 수도 있습니다. 릴리스 외에도이 저장소에는 플러그인 포털에서 사용할 수없는 이전 및 개발 버전의 플러그인이 포함되어 있습니다. Bintray 저장소에서 플러그인을 얻으려면 빌드 스크립트에 다음 스 니펫을 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="0bd59105ffa9efa21fb641f8c45d6c9ac73339d5" translate="yes" xml:space="preserve">
          <source>You also need to change the standard library dependency:</source>
          <target state="translated">또한 표준 라이브러리 종속성을 변경해야합니다.</target>
        </trans-unit>
        <trans-unit id="59851ac9df137cd5c9b4c0e172112ccd99536cb5" translate="yes" xml:space="preserve">
          <source>You also need to create a custom compilation in other cases, for example, if you want to combine compilations for different JVM versions in your final artifact, or you have already set up source sets in Gradle and want to migrate to a multiplatform project.</source>
          <target state="translated">예를 들어 최종 아티팩트에서 여러 JVM 버전에 대한 컴파일을 결합하려는 경우 또는 Gradle에서 이미 소스 세트를 설정했고 다중 플랫폼 프로젝트로 마이그레이션하려는 경우와 같이 다른 경우에도 사용자 지정 컴파일을 만들어야합니다.</target>
        </trans-unit>
        <trans-unit id="dd7185b5af3c9b502ebe182035feee9fe5ae4238" translate="yes" xml:space="preserve">
          <source>You are using a shared library which provides much more functions than you actually need. For example, standard library (&lt;code&gt;kotlin.js&lt;/code&gt;) contains functions for manipulating lists, arrays, char sequences, adapters for DOM, etc, which together gives about 1.3 mb file. A simple &quot;Hello, world&quot; application only requires console routines, which is only few kilobytes for the entire file.</source>
          <target state="translated">실제로 필요한 것보다 훨씬 많은 기능을 제공하는 공유 라이브러리를 사용하고 있습니다. 예를 들어, 표준 라이브러리 ( &lt;code&gt;kotlin.js&lt;/code&gt; )에는 목록, 배열, 문자 시퀀스, DOM 용 어댑터 등을 조작하는 함수가 포함되어 있으며 약 1.3MB의 파일을 제공합니다. 간단한 &quot;Hello, world&quot;응용 프로그램에는 전체 파일에 대해 몇 킬로바이트에 불과한 콘솔 루틴 만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="b8b4afbb85cff2cc0020a27f512803eb4412e431" translate="yes" xml:space="preserve">
          <source>You are writing a JavaScript library in Kotlin. The compiler produces mangled names for functions with parameters, which is unnatural for usual JavaScript developer. You can put &lt;code&gt;@JsName(...)&lt;/code&gt; on functions you want to be available from JavaScript.</source>
          <target state="translated">Kotlin에서 JavaScript 라이브러리를 작성 중입니다. 컴파일러는 매개 변수가있는 함수에 대해 맹 글링 된 이름을 생성하므로 일반적인 JavaScript 개발자에게는 부자연 스럽습니다. JavaScript에서 사용하려는 함수 에 &lt;code&gt;@JsName(...)&lt;/code&gt; 을 넣을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ced0770441d0915c8fa664292551f8ce4944dcdf" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;collection-filtering&quot;&gt;filter&lt;/a&gt; maps with the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; function as well as other collections. When calling &lt;code&gt;filter()&lt;/code&gt; on a map, pass to it a predicate with a &lt;code&gt;Pair&lt;/code&gt; as an argument. This enables you to use both the key and the value in the filtering predicate.</source>
          <target state="translated">&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt; 함수와 다른 컬렉션을 사용하여 맵을 &lt;a href=&quot;collection-filtering&quot;&gt;필터링&lt;/a&gt; 할 수 있습니다 . 맵에서 &lt;code&gt;filter()&lt;/code&gt; 를 호출 할 때 &lt;code&gt;Pair&lt;/code&gt; 를 인수로 사용하여 술어를 전달하십시오. 이를 통해 필터링 술어에서 키와 값을 모두 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4fcfb45a0610fdc2391139036cf25bd7d22d475c" translate="yes" xml:space="preserve">
          <source>You can access binaries to &lt;a href=&quot;mpp-dsl-reference#native-targets&quot;&gt;configure them&lt;/a&gt; or get their properties (for example, the path to an output file).</source>
          <target state="translated">바이너리에 액세스하여이를 &lt;a href=&quot;mpp-dsl-reference#native-targets&quot;&gt;구성&lt;/a&gt; 하거나 속성 (예 : 출력 파일의 경로)을 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2e820083848cc9c7893f4e761376a7b0f3da495" translate="yes" xml:space="preserve">
          <source>You can achieve the same result by replacing &lt;code&gt;GlobalScope.launch { ... }&lt;/code&gt; with &lt;code&gt;thread { ... }&lt;/code&gt;, and &lt;code&gt;delay(...)&lt;/code&gt; with &lt;code&gt;Thread.sleep(...)&lt;/code&gt;. Try it (don't forget to import &lt;code&gt;kotlin.concurrent.thread&lt;/code&gt;).</source>
          <target state="translated">넌 대체하여 동일한 결과를 얻을 수 &lt;code&gt;GlobalScope.launch { ... }&lt;/code&gt; 와 &lt;code&gt;thread { ... }&lt;/code&gt; , 및 &lt;code&gt;delay(...)&lt;/code&gt; 와 &lt;code&gt;Thread.sleep(...)&lt;/code&gt; . 시도해보세요 ( &lt;code&gt;kotlin.concurrent.thread&lt;/code&gt; 가져 오기를 잊지 마세요 ).</target>
        </trans-unit>
        <trans-unit id="d1a23fe5d1d1e3de8d1267cdf9c63fb6bfb3657e" translate="yes" xml:space="preserve">
          <source>You can achieve the same result replacing &lt;code&gt;GlobalScope.launch { ... }&lt;/code&gt; with &lt;code&gt;thread { ... }&lt;/code&gt; and &lt;code&gt;delay(...)&lt;/code&gt; with &lt;code&gt;Thread.sleep(...)&lt;/code&gt;. Try it.</source>
          <target state="translated">&lt;code&gt;GlobalScope.launch { ... }&lt;/code&gt; 를 &lt;code&gt;thread { ... }&lt;/code&gt; , &lt;code&gt;delay(...)&lt;/code&gt; 를 &lt;code&gt;Thread.sleep(...)&lt;/code&gt; 바꾸는 것과 동일한 결과를 얻을 수 있습니다 . 시도 해봐.</target>
        </trans-unit>
        <trans-unit id="3fd88375bd9e2c5b29ff9f3b08642ce7f7c017ff" translate="yes" xml:space="preserve">
          <source>You can add dependencies between a Kotlin project and Pod libraries &lt;a href=&quot;#add-a-dependency-on-a-pod-library-from-the-cocoapods-repository&quot;&gt;stored in the CocoaPods repository&lt;/a&gt; and &lt;a href=&quot;#add-a-dependency-on-a-pod-library-stored-locally&quot;&gt;stored locally&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#add-a-dependency-on-a-pod-library-from-the-cocoapods-repository&quot;&gt;CocoaPods 저장소&lt;/a&gt; 에 &lt;a href=&quot;#add-a-dependency-on-a-pod-library-stored-locally&quot;&gt;저장되고 로컬에 &lt;/a&gt;저장된 Kotlin 프로젝트와 Pod 라이브러리간에 종속성을 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="51d0ee73e90bc91209e1143bf1f6f915646c4f0e" translate="yes" xml:space="preserve">
          <source>You can add dependencies between:</source>
          <target state="translated">다음 사이에 종속성을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="21454e9c251b213f70afb9f37d911faebff85725" translate="yes" xml:space="preserve">
          <source>You can add local dependencies on subspecs as well.</source>
          <target state="translated">하위 사양에 대한 로컬 종속성도 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d15acbb4cdb6c3c4e966030e9de49a55048d947e" translate="yes" xml:space="preserve">
          <source>You can add targets when &lt;a href=&quot;mpp-create-lib&quot;&gt;creating a project with the Project Wizard&lt;/a&gt;. If you need to add a target later, you can do this manually using target presets for &lt;a href=&quot;mpp-supported-platforms&quot;&gt;supported platforms&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;mpp-create-lib&quot;&gt;프로젝트 마법사로 프로젝트를 만들&lt;/a&gt; 때 대상을 추가 할 수 있습니다 . 나중에 대상을 추가해야하는 경우 &lt;a href=&quot;mpp-supported-platforms&quot;&gt;지원되는 플랫폼에&lt;/a&gt; 대한 대상 사전 설정을 사용하여 수동으로이 작업을 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f49897e744e728ec20d12fac4cd3875a577907cf" translate="yes" xml:space="preserve">
          <source>You can also add dependencies between a Kotlin Pod and multiple Xcode projects. However, in this case you need to add a dependency by calling &lt;code&gt;pod install&lt;/code&gt; manually for each Xcode project. In other cases, it's done automatically.</source>
          <target state="translated">Kotlin Pod와 여러 Xcode 프로젝트간에 종속성을 추가 할 수도 있습니다. 그러나이 경우 각 Xcode 프로젝트에 대해 수동으로 &lt;code&gt;pod install&lt;/code&gt; 을 호출하여 종속성을 추가해야합니다 . 다른 경우에는 자동으로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="168bdb5a3d0877f2176a248baedeba05daed06ea" translate="yes" xml:space="preserve">
          <source>You can also add dependencies on subspecs. {:.note} &amp;gt;</source>
          <target state="translated">하위 사양에 대한 종속성을 추가 할 수도 있습니다. {: .note}&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d1a895a76bcd4f509dec7a0fd73ea28f4e99e2fe" translate="yes" xml:space="preserve">
          <source>You can also add elements using the in-place version of the &lt;a href=&quot;collection-plus-minus&quot;&gt;&lt;code&gt;plus&lt;/code&gt; operator&lt;/a&gt; - &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/plus-assign&quot;&gt;&lt;code&gt;plusAssign&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;+=&lt;/code&gt;) When applied to a mutable collection, &lt;code&gt;+=&lt;/code&gt; appends the second operand (an element or another collection) to the end of the collection.</source>
          <target state="translated">당신은 또한의 제자리 버전 사용 요소를 추가 할 수 &lt;a href=&quot;collection-plus-minus&quot;&gt; &lt;code&gt;plus&lt;/code&gt; 연산자&lt;/a&gt; - &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/plus-assign&quot;&gt; &lt;code&gt;plusAssign&lt;/code&gt; 을&lt;/a&gt; ( &lt;code&gt;+=&lt;/code&gt; ) 변경 가능한 컬렉션에 적용될 때, &lt;code&gt;+=&lt;/code&gt; 컬렉션의 끝에 번째 피연산자 (요소 또는 다른 콜렉션)을 추가한다.</target>
        </trans-unit>
        <trans-unit id="1579ab1f702efb6978b9fa8cb8a57432117ebf84" translate="yes" xml:space="preserve">
          <source>You can also add new entries to maps using the shorthand operator form. There are two ways:</source>
          <target state="translated">속기 연산자 양식을 사용하여 맵에 새 항목을 추가 할 수도 있습니다. 두 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="adb889488eca1142a852ebbb14e0d834dba4b9c0" translate="yes" xml:space="preserve">
          <source>You can also annotate an entire property, which marks both of its accessors as inline:</source>
          <target state="translated">또한 전체 속성에 주석을 달아 두 접근자를 모두 인라인으로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="477575bcb670c8439b1fc52bd518e44ccc2ddf70" translate="yes" xml:space="preserve">
          <source>You can also annotate property accessors:</source>
          <target state="translated">속성 접근 자에 주석을 달 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f30e63cc3e4c4de61df6778a57b26bb1dfe528da" translate="yes" xml:space="preserve">
          <source>You can also apply a transformation for the returned chunks right away. To do this, provide the transformation as a lambda function when calling &lt;code&gt;chunked()&lt;/code&gt;. The lambda argument is a chunk of the collection. When &lt;code&gt;chunked()&lt;/code&gt; is called with a transformation, the chunks are short-living &lt;code&gt;List&lt;/code&gt;s that should be consumed right in that lambda.</source>
          <target state="translated">반환 된 청크에 대한 변환을 즉시 적용 할 수도 있습니다. 이렇게하려면 &lt;code&gt;chunked()&lt;/code&gt; 호출 할 때 람다 함수로 변환을 제공하십시오 . 람다 인수는 컬렉션의 덩어리입니다. &lt;code&gt;chunked()&lt;/code&gt; 가 변환과 함께 호출 되면 청크 는 해당 람다에서 바로 소비해야하는 수명이 짧은 &lt;code&gt;List&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2ad24675b1668123f94f30c44f5729969a10ff3a" translate="yes" xml:space="preserve">
          <source>You can also apply it manually.</source>
          <target state="translated">수동으로 적용 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="87eeb187e68c5f9473b80d0e63a9192e7b1d8796" translate="yes" xml:space="preserve">
          <source>You can also apply operations that take element indices as parameters. For this purpose, use functions &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/reduce-indexed&quot;&gt;&lt;code&gt;reduceIndexed()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/fold-indexed&quot;&gt;&lt;code&gt;foldIndexed()&lt;/code&gt;&lt;/a&gt; passing element index as the first argument of the operation.</source>
          <target state="translated">요소 색인을 매개 변수로 사용하는 조작을 적용 할 수도 있습니다. 이를 위해, 요소 인덱스를 작업의 첫 번째 인수로 전달하는 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/reduce-indexed&quot;&gt; &lt;code&gt;reduceIndexed()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/fold-indexed&quot;&gt; &lt;code&gt;foldIndexed()&lt;/code&gt; &lt;/a&gt; 함수를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="6d71d6f7a2f235cf3ce1a4d8edf316e19e2e9bf7" translate="yes" xml:space="preserve">
          <source>You can also call &lt;code&gt;groupBy()&lt;/code&gt; with a second lambda argument &amp;ndash; a value transformation function. In the result map of &lt;code&gt;groupBy()&lt;/code&gt; with two lambdas, the keys produced by &lt;code&gt;keySelector&lt;/code&gt; function are mapped to the results of the value transformation function instead of the original elements.</source>
          <target state="translated">값 변환 함수 인 두 번째 람다 인수와 함께 &lt;code&gt;groupBy()&lt;/code&gt; 를 호출 할 수도 있습니다. 결과 맵 &lt;code&gt;groupBy()&lt;/code&gt; 두 람다와,에 의해 생성 된 키 &lt;code&gt;keySelector&lt;/code&gt; 함수 값 변환 함수의 결과가 아닌 원래의 요소에 매핑된다.</target>
        </trans-unit>
        <trans-unit id="d6ac39eb3039023d51fc93537a1642524f6dac92" translate="yes" xml:space="preserve">
          <source>You can also call &lt;code&gt;zip()&lt;/code&gt; with a transformation function that takes two parameters: the receiver element and the argument element. In this case, the result &lt;code&gt;List&lt;/code&gt; contains the return values of the transformation function called on pairs of the receiver and the argument elements with the same positions.</source>
          <target state="translated">수신자 요소와 인수 요소의 두 가지 매개 변수를 취하는 변환 함수를 사용하여 &lt;code&gt;zip()&lt;/code&gt; 을 호출 할 수도 있습니다 . 이 경우 결과 &lt;code&gt;List&lt;/code&gt; 에는 수신자 쌍과 동일한 위치의 인수 요소에서 호출 된 변환 함수의 리턴 값이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="06eddb42c9d5d39acddb3dc075d1e5535447aa7c" translate="yes" xml:space="preserve">
          <source>You can also configure methods as listeners, using ButterKnife annotations:</source>
          <target state="translated">ButterKnife 주석을 사용하여 메소드를 리스너로 구성 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9854f94b3be3057e487d0c38a88479319254e4d7" translate="yes" xml:space="preserve">
          <source>You can also create a range with the &lt;code&gt;..&lt;/code&gt; operator - but beware that unlike Python's &lt;code&gt;range()&lt;/code&gt;, it &lt;em&gt;includes&lt;/em&gt; its endpoint:</source>
          <target state="translated">당신은 또한에 범위를 만들 수 있습니다 &lt;code&gt;..&lt;/code&gt; 연산자를 -하지만 파이썬과는 달리 그 조심 &lt;code&gt;range()&lt;/code&gt; , 그것은 &lt;em&gt;포함&lt;/em&gt; 엔드 포인트를 :</target>
        </trans-unit>
        <trans-unit id="b01ffb71985befae27400d94f54d18868e1d008e" translate="yes" xml:space="preserve">
          <source>You can also create properties that don't actually have a backing field, but just reference another property:</source>
          <target state="translated">실제로 백업 필드가 없지만 다른 속성을 참조하는 속성을 만들 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="4af224bc6be9c332db31b6b3f2da882deddc6220" translate="yes" xml:space="preserve">
          <source>You can also declare binaries with custom names.</source>
          <target state="translated">사용자 지정 이름으로 바이너리를 선언 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9876dea255568f0e9f5817ed679358dffc4d305" translate="yes" xml:space="preserve">
          <source>You can also get a reference to a top-level property by just prefixing the property name with &lt;code&gt;::&lt;/code&gt; (e.g. &lt;code&gt;::foo&lt;/code&gt;), and its type will be &lt;code&gt;KProperty0&amp;lt;V&amp;gt;&lt;/code&gt; or &lt;code&gt;KMutableProperty0&amp;lt;V&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">속성 이름 앞에 &lt;code&gt;::&lt;/code&gt; (예 : &lt;code&gt;::foo&lt;/code&gt; )를 접두사하여 최상위 속성에 대한 참조를 얻을 수도 있으며 해당 유형은 &lt;code&gt;KProperty0&amp;lt;V&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;KMutableProperty0&amp;lt;V&amp;gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cd738fa7f281a55ddbbe638aa35ad90cd0ffea2e" translate="yes" xml:space="preserve">
          <source>You can also give a function type an alternative name by using &lt;a href=&quot;type-aliases&quot;&gt;a type alias&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;type-aliases&quot;&gt;유형 별명&lt;/a&gt; 을 사용하여 함수 유형에 대체 이름을 지정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9adcc759cc78f4446ab3576eac4b1cf6e582a715" translate="yes" xml:space="preserve">
          <source>You can also join &lt;a href=&quot;https://kotlinlang.slack.com/archives/C0B8L3U69&quot;&gt;#javascript&lt;/a&gt; channel in the official &lt;a href=&quot;https://surveys.jetbrains.com/s3/kotlin-slack-sign-up&quot;&gt;Kotlin Slack&lt;/a&gt; and chat with the community and the team.</source>
          <target state="translated">공식 &lt;a href=&quot;https://surveys.jetbrains.com/s3/kotlin-slack-sign-up&quot;&gt;Kotlin Slack&lt;/a&gt; 에서 &lt;a href=&quot;https://kotlinlang.slack.com/archives/C0B8L3U69&quot;&gt;#javascript&lt;/a&gt; 채널에 가입 하여 커뮤니티 및 팀과 채팅 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="30267895fe14d4682d4d9e9bc2650785a139abc6" translate="yes" xml:space="preserve">
          <source>You can also learn how to create and run multiplatform tests in &lt;a href=&quot;../tutorials/mpp/multiplatform-library#testing&quot;&gt;this tutorial&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../tutorials/mpp/multiplatform-library#testing&quot;&gt;이 자습서&lt;/a&gt; 에서 다중 플랫폼 테스트를 만들고 실행하는 방법을 배울 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="74404a834bf0e74cd0e4122118cbbb2c71b4c293" translate="yes" xml:space="preserve">
          <source>You can also mark the entire property as &lt;code&gt;inline&lt;/code&gt; - then the modifier is applied to both accessors.</source>
          <target state="translated">전체 속성을 &lt;code&gt;inline&lt;/code&gt; 으로 표시 한 다음 수정자가 두 접근 자 모두에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="a69cb31647703eccb51f230a5b88b00de025b9d6" translate="yes" xml:space="preserve">
          <source>You can also open the Kotlin runtime configuration manually from &lt;strong&gt;Tools | Kotlin | Configure Kotlin in Project&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;도구 | 도구&lt;/strong&gt; 에서 Kotlin 런타임 구성을 수동으로 열 수도 있습니다. &lt;strong&gt;코 틀린 | &lt;/strong&gt;&lt;strong&gt;프로젝트에서 Kotlin을 구성하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="cef97ca53a3adcc1e56d72ff09576acc7a561b8f" translate="yes" xml:space="preserve">
          <source>You can also override a &lt;code&gt;val&lt;/code&gt; property with a &lt;code&gt;var&lt;/code&gt; property, but not vice versa. This is allowed because a &lt;code&gt;val&lt;/code&gt; property essentially declares a &lt;code&gt;get&lt;/code&gt; method, and overriding it as a &lt;code&gt;var&lt;/code&gt; additionally declares a &lt;code&gt;set&lt;/code&gt; method in the derived class.</source>
          <target state="translated">&lt;code&gt;val&lt;/code&gt; 속성을 &lt;code&gt;var&lt;/code&gt; 속성으로 재정의 할 수도 있지만 그 반대의 경우는 불가능합니다. 이는 &lt;code&gt;val&lt;/code&gt; 속성이 기본적으로 &lt;code&gt;get&lt;/code&gt; 메서드를 선언하고 이를 &lt;code&gt;var&lt;/code&gt; 로 재정의 하면 파생 클래스에서 &lt;code&gt;set&lt;/code&gt; 메서드를 추가로 선언 하기 때문에 허용 됩니다.</target>
        </trans-unit>
        <trans-unit id="543ab3c4f9a33042aa74e4d9fa902bff3c643714" translate="yes" xml:space="preserve">
          <source>You can also override a &lt;code&gt;val&lt;/code&gt; property with a &lt;code&gt;var&lt;/code&gt; property, but not vice versa. This is allowed because a &lt;code&gt;val&lt;/code&gt; property essentially declares a getter method, and overriding it as a &lt;code&gt;var&lt;/code&gt; additionally declares a setter method in the derived class.</source>
          <target state="translated">&lt;code&gt;val&lt;/code&gt; 속성을 &lt;code&gt;var&lt;/code&gt; 속성으로 재정의 할 수 있지만 그 반대의 경우는 마찬가지입니다. &lt;code&gt;val&lt;/code&gt; 속성은 기본적으로 getter 메서드를 선언하고 &lt;code&gt;var&lt;/code&gt; 로 재정의 하면 파생 클래스에서 setter 메서드를 추가로 선언 하기 때문에 허용 됩니다.</target>
        </trans-unit>
        <trans-unit id="3c789f98902f6c1abece4260e84f28d461388682" translate="yes" xml:space="preserve">
          <source>You can also pass multiple argument files, for example, to separate compiler options from source files.</source>
          <target state="translated">예를 들어 소스 파일에서 컴파일러 옵션을 분리하기 위해 여러 인수 파일을 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a9ed363abda3efb36f0e02f2e9b1f8761b2aff4" translate="yes" xml:space="preserve">
          <source>You can also publish variants grouped by the product flavor, so that the outputs of the different build types are placed in a single module, with the build type becoming a classifier for the artifacts (the release build type is still published with no classifier). This mode is disabled by default and can be enabled as follows:</source>
          <target state="translated">또한 제품 버전별로 그룹화 된 변형을 게시 할 수 있으므로 여러 빌드 유형의 출력이 단일 모듈에 배치되고 빌드 유형이 아티팩트의 분류자가됩니다 (릴리스 빌드 유형은 여전히 ​​분류 자없이 게시 됨). 이 모드는 기본적으로 비활성화되어 있으며 다음과 같이 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3dbab914e9e2a4fe151632f660311ed513d1aa3c" translate="yes" xml:space="preserve">
          <source>You can also reference a member property directly on an object, in which case you get a member function reference that is already bound to its receiver, so that you don't need the receiver type in the signature. Here's an example of both approaches:</source>
          <target state="translated">객체에서 직접 멤버 속성을 참조 할 수도 있습니다.이 경우 서명자에 수신기 유형이 필요하지 않도록 수신기에 이미 바인딩 된 멤버 함수 참조를 가져옵니다. 다음은 두 가지 접근 방식의 예입니다.</target>
        </trans-unit>
        <trans-unit id="215e6014bf6ec41103d16f2d278bf6634f19962f" translate="yes" xml:space="preserve">
          <source>You can also remove entries from a mutable map by their keys or values. To do this, call &lt;code&gt;remove()&lt;/code&gt; on the map's keys or values providing the key or the value of an entry. When called on values, &lt;code&gt;remove()&lt;/code&gt; removes only the first entry with the given value.</source>
          <target state="translated">키 또는 값으로 변경 가능한 맵에서 항목을 제거 할 수도 있습니다. 이를 위해서는 맵의 키 또는 항목의 키 또는 값을 제공하는 값에서 &lt;code&gt;remove()&lt;/code&gt; 를 호출 하십시오 . 값에서 호출되면 &lt;code&gt;remove()&lt;/code&gt; 는 주어진 값을 가진 첫 번째 항목 만 제거합니다.</target>
        </trans-unit>
        <trans-unit id="79d6832d5546a194f20fbce955ffbc1cf7bc28bd" translate="yes" xml:space="preserve">
          <source>You can also run Kotlin compilers manually from the command line as described in the &lt;a href=&quot;../tutorials/command-line&quot;&gt;Working with command-line compiler&lt;/a&gt; tutorial.</source>
          <target state="translated">&lt;a href=&quot;../tutorials/command-line&quot;&gt;명령 줄 컴파일러 사용&lt;/a&gt; 가이드에 설명 된대로 명령 줄에서 Kotlin 컴파일러를 수동으로 실행할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dd3aecc40ba142d4a156abf8622fbe638a727172" translate="yes" xml:space="preserve">
          <source>You can also serialize object collections, such as lists, in a single call.</source>
          <target state="translated">단일 호출로 목록과 같은 개체 컬렉션을 직렬화 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc06ea6d4b9b58dc8ef4177aedfae035788a2330" translate="yes" xml:space="preserve">
          <source>You can also specify an index range to search in: in this case, the function searches only between two provided indices.</source>
          <target state="translated">검색 할 인덱스 범위를 지정할 수도 있습니다.이 경우 함수는 제공된 두 인덱스 사이에서만 검색합니다.</target>
        </trans-unit>
        <trans-unit id="a298d024f26e002e396a26eea69c8b9df1b40247" translate="yes" xml:space="preserve">
          <source>You can also specify the name of the module being compiled as the &lt;code&gt;moduleName&lt;/code&gt; attribute:</source>
          <target state="translated">&lt;code&gt;moduleName&lt;/code&gt; 속성 으로 컴파일 할 모듈의 이름을 지정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2dbc4c2e767a06cb3df9fc177b8a8d4b1c447349" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;java-interop#sam-conversions&quot;&gt;SAM conversions for Java interfaces&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;java-interop#sam-conversions&quot;&gt;Java 인터페이스에 대해 SAM 변환을&lt;/a&gt; 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="aaffcf2e7604a7174a9dca3a9bdb61e147c77730" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;as&lt;/code&gt; to cast to a nullable type. The difference between this and the previous &lt;code&gt;as?&lt;/code&gt; cast is that this one will fail if &lt;code&gt;x&lt;/code&gt; is a non-null instance of another type than &lt;code&gt;Person&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; 를 사용 하여 널 입력 가능 유형으로 캐스트 할 수도 있습니다 . 이것과 이전의 차이점은 &lt;code&gt;as?&lt;/code&gt; 캐스트는 &lt;code&gt;x&lt;/code&gt; 가 &lt;code&gt;Person&lt;/code&gt; 이외의 다른 유형의 null이 아닌 인스턴스 인 경우 실패합니다 .</target>
        </trans-unit>
        <trans-unit id="8c3464ac1404ed2e38a3e5c4a687460c4848e47d" translate="yes" xml:space="preserve">
          <source>You can also use predicates to define the number of elements for taking or dropping. There are four functions similar to the ones described above:</source>
          <target state="translated">술어를 사용하여 가져 오거나 제거 할 요소 수를 정의 할 수도 있습니다. 위에서 설명한 것과 비슷한 네 가지 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="061472843b7d351b73c9ba2a9154644f13c942ac" translate="yes" xml:space="preserve">
          <source>You can also use qualified names in the links. Note that, unlike JavaDoc, qualified names always use the dot character to separate the components, even before a method name:</source>
          <target state="translated">링크에서 규정 된 이름을 사용할 수도 있습니다. JavaDoc과 달리 규정 된 이름은 항상 점 문자를 사용하여 메소드 이름 앞에도 구성 요소를 분리합니다.</target>
        </trans-unit>
        <trans-unit id="d1e5a6eb3c7515c3ebb20654865be10f6160d3f1" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;kotlin&lt;/code&gt; script to run binaries produced by the Kotlin compiler:</source>
          <target state="translated">&lt;code&gt;kotlin&lt;/code&gt; 스크립트를 사용 하여 Kotlin 컴파일러에서 생성 한 바이너리를 실행할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="122dcfb555b3c43bd275a0557785754f761978a7" translate="yes" xml:space="preserve">
          <source>You can always write your own library providing a common API and implementing it differently on every platform.</source>
          <target state="translated">공통 API를 제공하고 모든 플랫폼에서 다르게 구현하는 라이브러리를 언제든지 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="43ada5583998cbabe417a283a42826c326118a44" translate="yes" xml:space="preserve">
          <source>You can attach the plugin by providing the path to its JAR file using the &lt;code&gt;Xplugin&lt;/code&gt; kotlinc option:</source>
          <target state="translated">&lt;code&gt;Xplugin&lt;/code&gt; kotlinc 옵션을 사용하여 JAR 파일의 경로를 제공하여 플러그인을 첨부 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="45fd1d031ca2916e040c2fa7f5d1560599c72070" translate="yes" xml:space="preserve">
          <source>You can bind a listener to run an action when a specific event happens:</source>
          <target state="translated">특정 이벤트가 발생할 때 리스너를 바인딩하여 조치를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d24aee85b2d05426abbc889ca1665a7bac05d58" translate="yes" xml:space="preserve">
          <source>You can browse the converted &lt;a href=&quot;https://github.com/JetBrains/kotlin-examples/tree/master/gradle/android-dbflow&quot;&gt;sample application&lt;/a&gt;.</source>
          <target state="translated">변환 된 &lt;a href=&quot;https://github.com/JetBrains/kotlin-examples/tree/master/gradle/android-dbflow&quot;&gt;샘플 응용 프로그램을&lt;/a&gt; 찾아 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="057805c0fc21528426864b29c11d4383214a4ee6" translate="yes" xml:space="preserve">
          <source>You can build other Linux targets on any supported host.</source>
          <target state="translated">지원되는 모든 호스트에서 다른 Linux 대상을 빌드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5fbc8ecf93cfa8cb3fcd3479a48e4bf02d4e6cf" translate="yes" xml:space="preserve">
          <source>You can build the 32-bit target on any supported host.</source>
          <target state="translated">지원되는 모든 호스트에서 32 비트 대상을 빌드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="119e02c115bb496d963aeca4e26bb853a72fa1a0" translate="yes" xml:space="preserve">
          <source>You can call a variadic function with one array (but not a list or any other iterable) that contains all the variadic arguments, by &lt;em&gt;spreading&lt;/em&gt; it with the &lt;code&gt;*&lt;/code&gt; operator (same syntax as Python):</source>
          <target state="translated">하나 개의 배열을 갖는 가변 함수를 호출 (그러나리스트 또는 다른 반복 가능한)가, 모든 가변 인자를 포함 할 수 &lt;em&gt;확산&lt;/em&gt; 함께 &lt;code&gt;*&lt;/code&gt; 연산자 (파이썬 동일 구문)</target>
        </trans-unit>
        <trans-unit id="174aa71bd42d85212bb93925c278e6e822b6c906" translate="yes" xml:space="preserve">
          <source>You can change the caching strategy globally or per container. This also requires switching on the &lt;a href=&quot;#enabling-experimental-features&quot;&gt;experimental mode&lt;/a&gt;.</source>
          <target state="translated">캐싱 전략을 전체적으로 또는 컨테이너별로 변경할 수 있습니다. 또한 &lt;a href=&quot;#enabling-experimental-features&quot;&gt;실험 모드를 켜야합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2744aca9b02917d6b1f0e26df9505f24ed044415" translate="yes" xml:space="preserve">
          <source>You can change this behavior using the &lt;code&gt;transitiveExport&lt;/code&gt; flag. If set to &lt;code&gt;true&lt;/code&gt;, the declarations of the library &lt;code&gt;bar&lt;/code&gt; are exported as well.</source>
          <target state="translated">&lt;code&gt;transitiveExport&lt;/code&gt; 플래그를 사용하여이 동작을 변경할 수 있습니다 . &lt;code&gt;true&lt;/code&gt; 로 설정 하면 라이브러리 &lt;code&gt;bar&lt;/code&gt; 의 선언 도 함께 내보내집니다.</target>
        </trans-unit>
        <trans-unit id="f63a12896fc2a9819448369bf1f2eb61e4acbca5" translate="yes" xml:space="preserve">
          <source>You can compile your Kotlin projects to JavaScript modules for various popular module systems. We currently support the following configurations for JavaScript modules:</source>
          <target state="translated">Kotlin 프로젝트를 다양한 인기 모듈 시스템 용 자바 스크립트 모듈로 컴파일 할 수 있습니다. 현재 JavaScript 모듈에 대해 다음 구성을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="ab9c36b5ddec92d68530baf5655376c6d587e87e" translate="yes" xml:space="preserve">
          <source>You can concatenate strings using the &lt;code&gt;+&lt;/code&gt; operator. This also works for concatenating strings with values of other types, as long as the first element in the expression is a string:</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; 연산자를 사용하여 문자열을 연결할 수 있습니다 . 표현식의 첫 번째 요소가 문자열 인 한 다른 유형의 값으로 문자열을 연결하는 데에도 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="352fb7e028c5d13429a46361c92bd207929f9099" translate="yes" xml:space="preserve">
          <source>You can configure how artifacts are produced in:</source>
          <target state="translated">아티팩트가 생성되는 방법을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd2aaeebf04fd016dd4b88eaaddf89115872468a" translate="yes" xml:space="preserve">
          <source>You can control the increment with &lt;code&gt;step&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;step&lt;/code&gt; 하여 증분을 제어 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ddfded7f1474ad5091070fdce96610e7a72ff566" translate="yes" xml:space="preserve">
          <source>You can create a new multiplatform project in the IDE by selecting one of the multiplatform project templates in the New Project dialog under the &quot;Kotlin&quot; section.</source>
          <target state="translated">&quot;Kotlin&quot;섹션 아래의 새 프로젝트 대화 상자에서 멀티 플랫폼 프로젝트 템플릿 중 하나를 선택하여 IDE에서 새 멀티 플랫폼 프로젝트를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="98d1378ca1f526733a85698a32d391a8a0727bda" translate="yes" xml:space="preserve">
          <source>You can create delegates as anonymous objects without creating new classes using the interfaces &lt;code&gt;ReadOnlyProperty&lt;/code&gt; and &lt;code&gt;ReadWriteProperty&lt;/code&gt; from the Kotlin standard library. They provide the required methods: &lt;code&gt;getValue()&lt;/code&gt; is declared in &lt;code&gt;ReadOnlyProperty&lt;/code&gt;; &lt;code&gt;ReadWriteProperty&lt;/code&gt; extends it and adds &lt;code&gt;setValue()&lt;/code&gt;. Thus, you can pass a &lt;code&gt;ReadWriteProperty&lt;/code&gt; whenever a &lt;code&gt;ReadOnlyProperty&lt;/code&gt; is expected.</source>
          <target state="translated">Kotlin 표준 라이브러리의 &lt;code&gt;ReadOnlyProperty&lt;/code&gt; 및 &lt;code&gt;ReadWriteProperty&lt;/code&gt; 인터페이스를 사용하여 새 클래스를 만들지 않고도 대리자를 익명 개체로 만들 수 있습니다 . 필요한 메소드를 제공합니다. &lt;code&gt;getValue()&lt;/code&gt; 는 &lt;code&gt;ReadOnlyProperty&lt;/code&gt; 에서 선언됩니다 . &lt;code&gt;ReadWriteProperty&lt;/code&gt; 는이를 확장하고 &lt;code&gt;setValue()&lt;/code&gt; 추가합니다 . 따라서 &lt;code&gt;ReadOnlyProperty&lt;/code&gt; 가 예상 될 때마다 &lt;code&gt;ReadWriteProperty&lt;/code&gt; 를 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d2c95ed2af5b3d950c38152129afcaf03041a554" translate="yes" xml:space="preserve">
          <source>You can declare local variables as delegated properties. For instance, you can make a local variable lazy:</source>
          <target state="translated">지역 변수를 위임 된 속성으로 선언 할 수 있습니다. 예를 들어 지역 변수를 게으르게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="da365b8ea88f3ecefef0f71a19ad5bac59582573" translate="yes" xml:space="preserve">
          <source>You can declare properties in interfaces. A property declared in an interface can either be abstract, or it can provide implementations for accessors. Properties declared in interfaces can't have backing fields, and therefore accessors declared in interfaces can't reference them.</source>
          <target state="translated">인터페이스에서 속성을 선언 할 수 있습니다. 인터페이스에 선언 된 속성은 추상적이거나 접근자를위한 구현을 제공 할 수 있습니다. 인터페이스에 선언 된 속성은 지원 필드를 가질 수 없으므로 인터페이스에 선언 된 접근자는이를 참조 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2dc0facb64d375d7c12335b57efc8e15a15a3d57" translate="yes" xml:space="preserve">
          <source>You can designate a one-parameter member function or &lt;a href=&quot;extension-functionsproperties&quot;&gt;extension function&lt;/a&gt; for use as an infix operator, which can be useful if you're designing a DSL. The left operand will become &lt;code&gt;this&lt;/code&gt;, and the right operand will become the parameter. If you do this inside a &lt;code&gt;Person&lt;/code&gt; class that has got a &lt;code&gt;name&lt;/code&gt; property:</source>
          <target state="translated">중위 연산자로 사용하기 위해 1 매개 변수 멤버 함수 또는 &lt;a href=&quot;extension-functionsproperties&quot;&gt;확장 함수&lt;/a&gt; 를 지정할 수 있습니다. 이는 DSL을 설계 할 때 유용합니다. 왼쪽 피연산자는 &lt;code&gt;this&lt;/code&gt; 가되고 오른쪽 피연산자는 매개 변수가됩니다. &lt;code&gt;name&lt;/code&gt; 속성 이 있는 &lt;code&gt;Person&lt;/code&gt; 클래스 내에서이 작업을 수행하는 경우 :</target>
        </trans-unit>
        <trans-unit id="e5a96dcfadfdfe2e89cfe5307620c6ee2e16fbc0" translate="yes" xml:space="preserve">
          <source>You can detect the platform in the script, introduce a flag such as &lt;code&gt;isMainHost&lt;/code&gt; and set it to &lt;code&gt;true&lt;/code&gt; for the main target platform. Alternatively, you can pass the flag from an external source, for example, from CI configuration.</source>
          <target state="translated">스크립트에서 플랫폼을 감지하고 &lt;code&gt;isMainHost&lt;/code&gt; 와 같은 플래그를 도입 하고 기본 대상 플랫폼에 대해 &lt;code&gt;true&lt;/code&gt; 로 설정할 수 있습니다. 또는 외부 소스 (예 : CI 구성)에서 플래그를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a51b330a0d31c28f24bb34789cd60447658bdbac" translate="yes" xml:space="preserve">
          <source>You can do string interpolation with &lt;code&gt;$&lt;/code&gt;, and use curly braces for expressions:</source>
          <target state="translated">&lt;code&gt;$&lt;/code&gt; 로 문자열 보간을 수행 하고 표현식에 중괄호를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c019092d33c8462d9241d066b02878b47a5fbd84" translate="yes" xml:space="preserve">
          <source>You can drop the lambda if there is no need for &lt;a href=&quot;mpp-dsl-reference#native-targets&quot;&gt;additional configuration&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;mpp-dsl-reference#native-targets&quot;&gt;추가 구성이&lt;/a&gt; 필요하지 않은 경우 람다를 삭제할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2676c0c594f8f762012b9a1cc82627600997fba1" translate="yes" xml:space="preserve">
          <source>You can easily extend JavaScript classes as if they were Kotlin classes. Just define an &lt;code&gt;external open&lt;/code&gt; class and extend it by a non-&lt;code&gt;external&lt;/code&gt; class. For example:</source>
          <target state="translated">자바 스크립트 클래스는 마치 Kotlin 클래스 인 것처럼 쉽게 확장 할 수 있습니다. 그냥 정의 &lt;code&gt;external open&lt;/code&gt; 클래스와 비하여 확장 &lt;code&gt;external&lt;/code&gt; 클래스입니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="14cf0cd2f79ac876b33edfcde686a695fa7f4dd8" translate="yes" xml:space="preserve">
          <source>You can easily extend JavaScript classes as they were Kotlin classes. Just define an &lt;code&gt;external&lt;/code&gt; class and extend it by non-&lt;code&gt;external&lt;/code&gt; class. For example:</source>
          <target state="translated">Kotlin 클래스처럼 JavaScript 클래스를 쉽게 확장 할 수 있습니다. 그냥 정의 &lt;code&gt;external&lt;/code&gt; 클래스 및 비하여 확장 &lt;code&gt;external&lt;/code&gt; 클래스입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2e3cc2b854dd8c8b5f8d721e5d8aeb0e2d4a1c82" translate="yes" xml:space="preserve">
          <source>You can enter the name without the &lt;strong&gt;.kt&lt;/strong&gt; extension. Eclipse will add it automatically.</source>
          <target state="translated">&lt;strong&gt;.kt&lt;/strong&gt; 확장자 없이 이름을 입력 할 수 있습니다 . Eclipse가 자동으로 추가합니다.</target>
        </trans-unit>
        <trans-unit id="e694f97130b04f75faefe5b3d01ee7079e2c707a" translate="yes" xml:space="preserve">
          <source>You can export maven dependencies, but due to current limitations of Gradle metadata, such a dependency should be either a platform dependency (for example, &lt;code&gt;kotlinx-coroutines-core-native_debug_macos_x64&lt;/code&gt; instead of &lt;code&gt;kotlinx-coroutines-core-native&lt;/code&gt;) or be exported transitively.</source>
          <target state="translated">Maven 종속성을 내보낼 수 있지만 Gradle 메타 데이터의 현재 제한으로 인해 이러한 종속성은 플랫폼 종속성 (예 : &lt;code&gt;kotlinx-coroutines-core-native_debug_macos_x64&lt;/code&gt; 대신 kotlinx-coroutines-core-native_debug_macos_x64 )이거나 전 이적으로 내 &lt;code&gt;kotlinx-coroutines-core-native&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="fce686c028f557ca005a863c0effd0fea1ca6773" translate="yes" xml:space="preserve">
          <source>You can export only &lt;a href=&quot;using-gradle#dependency-types&quot;&gt;&lt;code&gt;api&lt;/code&gt; dependencies&lt;/a&gt; of the corresponding source set.</source>
          <target state="translated">해당 소스 세트의 &lt;a href=&quot;using-gradle#dependency-types&quot;&gt; &lt;code&gt;api&lt;/code&gt; 종속성&lt;/a&gt; 만 내보낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b547c56bdabc1a2ed049f71133cea17e4efbb17f" translate="yes" xml:space="preserve">
          <source>You can find a complete sample project showing the use of Kotlin, Maven and Dagger in the &lt;a href=&quot;https://github.com/JetBrains/kotlin-examples/tree/master/maven/dagger-maven-example&quot;&gt;Kotlin examples repository&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/JetBrains/kotlin-examples/tree/master/maven/dagger-maven-example&quot;&gt;Kotlin 예제 저장소&lt;/a&gt; 에서 Kotlin, Maven 및 Dagger의 사용을 보여주는 완전한 샘플 프로젝트를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b818b22946bf5779a33eba24384933cbaa67bbfa" translate="yes" xml:space="preserve">
          <source>You can find a sample project &lt;a href=&quot;https://github.com/Kotlin/kotlin-with-cocoapods-sample&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Kotlin/kotlin-with-cocoapods-sample&quot;&gt;여기&lt;/a&gt; 에서 샘플 프로젝트를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d68b6cd5317576034f1a384ac6c9a489e198d6e4" translate="yes" xml:space="preserve">
          <source>You can find a sample project &lt;a href=&quot;https://github.com/Kotlin/multitarget-xcode-with-kotlin-cocoapods-sample&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Kotlin/multitarget-xcode-with-kotlin-cocoapods-sample&quot;&gt;여기&lt;/a&gt; 에서 샘플 프로젝트를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="48fa38ae5b4c2dfde58b4810d79092c01260633e" translate="yes" xml:space="preserve">
          <source>You can find an example project &lt;a href=&quot;https://github.com/JetBrains/kotlin-examples/tree/master/gradle/android-databinding&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/JetBrains/kotlin-examples/tree/master/gradle/android-databinding&quot;&gt;여기&lt;/a&gt; 에서 예제 프로젝트를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ddbd7e0ea74b2e0ab17f7760ef7bbb97244a6706" translate="yes" xml:space="preserve">
          <source>You can find the complete sample in the &lt;a href=&quot;https://github.com/JetBrains/kotlin-examples/tree/master/gradle/kotlin-code-generation&quot;&gt;kotlin-examples&lt;/a&gt; Github repository.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/JetBrains/kotlin-examples/tree/master/gradle/kotlin-code-generation&quot;&gt;kotlin-examples&lt;/a&gt; Github 리포지토리 에서 전체 샘플을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1e7e7bc8e734b7c2c5fd901f4c24a00930756202" translate="yes" xml:space="preserve">
          <source>You can find the full list in the &lt;a href=&quot;https://github.com/JetBrains/kotlin/blob/master/core/compiler.common.jvm/src/org/jetbrains/kotlin/load/java/JvmAnnotationNames.kt&quot;&gt;Kotlin compiler source code&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/JetBrains/kotlin/blob/master/core/compiler.common.jvm/src/org/jetbrains/kotlin/load/java/JvmAnnotationNames.kt&quot;&gt;Kotlin 컴파일러 소스 코드&lt;/a&gt; 에서 전체 목록을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c2f9f0b2ef164a4a49704ff24d04568c7bf180c4" translate="yes" xml:space="preserve">
          <source>You can find the full list in the &lt;a href=&quot;https://github.com/JetBrains/kotlin/blob/master/core/descriptors.jvm/src/org/jetbrains/kotlin/load/java/JvmAnnotationNames.kt&quot;&gt;Kotlin compiler source code&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/JetBrains/kotlin/blob/master/core/descriptors.jvm/src/org/jetbrains/kotlin/load/java/JvmAnnotationNames.kt&quot;&gt;Kotlin 컴파일러 소스 코드&lt;/a&gt; 에서 전체 목록을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fb2b5209dedc3d786cb53f689e3a8eb73c251e0e" translate="yes" xml:space="preserve">
          <source>You can finish creating the project by clicking &lt;strong&gt;Finish&lt;/strong&gt; on the next screen or configure it if necessary:</source>
          <target state="translated">다음 화면에서 &lt;strong&gt;완료&lt;/strong&gt; 를 클릭하여 프로젝트 생성을 완료 하거나 필요한 경우 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3da459de16a2b0b14d75a8dc46a8b9ba69c6e61" translate="yes" xml:space="preserve">
          <source>You can generate separate documentation files in HTML format from KDoc by using a tool called &lt;a href=&quot;https://github.com/Kotlin/dokka/blob/master/README.md&quot;&gt;Dokka&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Kotlin/dokka/blob/master/README.md&quot;&gt;Dokka&lt;/a&gt; 라는 도구를 사용하여 KDoc에서 HTML 형식으로 별도의 문서 파일을 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="95e437d51040c5e7ac957e0296dbc0aac8d65c6d" translate="yes" xml:space="preserve">
          <source>You can get a binary by its unique name. This name is based on the name prefix (if it is specified), build type, and binary kind following the pattern: &lt;code&gt;&amp;lt;optional-name-prefix&amp;gt;&amp;lt;build-type&amp;gt;&amp;lt;binary-kind&amp;gt;&lt;/code&gt;, for example, &lt;code&gt;releaseFramework&lt;/code&gt; or &lt;code&gt;testDebugExecutable&lt;/code&gt;.</source>
          <target state="translated">고유 한 이름으로 바이너리를 얻을 수 있습니다. 이 이름은 &lt;code&gt;&amp;lt;optional-name-prefix&amp;gt;&amp;lt;build-type&amp;gt;&amp;lt;binary-kind&amp;gt;&lt;/code&gt; 패턴을 따르는 이름 접두사 (지정된 경우), 빌드 유형 및 바이너리 종류를 기반으로합니다 ( 예 : &lt;code&gt;releaseFramework&lt;/code&gt; 또는 &lt;code&gt;testDebugExecutable&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="7f9b510f84fc577507c905ac3f8a66f73202ea19" translate="yes" xml:space="preserve">
          <source>You can get a reference to an top-level function by prefixing the function name with &lt;code&gt;::&lt;/code&gt; (e.g. &lt;code&gt;::foo&lt;/code&gt;).</source>
          <target state="translated">함수 이름 앞에 &lt;code&gt;::&lt;/code&gt; (예 : &lt;code&gt;::foo&lt;/code&gt; ) 를 붙여 최상위 레벨 함수에 대한 참조를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fb5040e4ce0c6be83ae6a507dd2ae4caffae8262" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-01.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-01.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="289355ac82905323bc3e6db14275c8e1d64bc9dd" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-02.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-02.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d9db0ec8ed7e5a137d78fcbcf78b00ffef15bb73" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-02b.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-02b.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7504e90bc78ac8e1e827d94755d029f2a70e9ec7" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-03.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-03.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="15972c4d1d5ace70f0796e80b6752bc455b74214" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-03s.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-03s.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="04b5fdbc2edde73bf9b29b7002e9ec1bda302370" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-04.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-04.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3f0ae3242c00a4efbd3629df19a7651a0d5d3b7c" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-05.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-05.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6c9950637fb883f830cd4d5d6bfe89d8b885f156" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-06.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-06.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f55faf309e3a411237bfe68b3501a7a0f4822814" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-07.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-07.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="65d366eaa04a18211e7d291c47b7c4e8f1c6cb48" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-01.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-01.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bebe513b9446165c131af295b2af0ba33d89f2ae" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-02.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-02.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e2ad2a825e6ebc94668813805795391a0d24021a" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-03.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-03.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f04345eabdd82d4839be11bdd0967ee09b654924" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-04.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-04.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a4c5a82139aba5235c807c89158bcd15ed7d9b6d" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-05.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-05.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bb367370fd9d8d021b7ee5cfc2c62d2dbc56f27d" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-06.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-06.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="79cd2934b9969a22d58de02b2e44b63d4d08e5d5" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-07.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-07.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="931cd04e1a1bd650054424994fe70842bb76150c" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-01.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-01.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="86075ccf397503ed7f3e3fb202d844e5d305af29" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-02.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-02.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9004cc2196e24855c295db89987e20e9a2296995" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-03.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-03.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dcbdfc8d24a674cf4f51e958ccadce1c01a4e184" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-04.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-04.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4258ca4466310c4f7a93cfa3d8290d62ff54c989" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-05.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-05.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="58d30d3e14f9f916a5805cf5d2405f1e91b9643c" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-06.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-06.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="733ba55f623fbbcc2955de0dcaa16c6bd63329e5" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-07.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-07.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ab503781dfb2b075e187982b4c6c57b5798c884c" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-08.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-08.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="93e7e6948b6c4bfbb1840683463325f59ccdbdf2" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-09.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-09.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e3af3574d4e2c3f58ae7faace27ec421581768c6" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-10.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-10.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6e0b622d2be41ac6b3d2addd5637784e10365774" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-compose-01.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-compose-01.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5ea3c2251bfa3f5fc98f1871b382da40839f1467" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-compose-02.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-compose-02.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="697f41135445d2667267ee098075b43b678f3741" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-compose-03.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-compose-03.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a44dffc51236c2396c82567902d4df845e94ab6b" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-compose-04.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-compose-04.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d894537aaa21998eec1c6f7420524bb0cd5fdcf7" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-compose-05.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-compose-05.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cc40524ffb9a4d180e44ab29e010fd8b66a072ca" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-compose-06.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-compose-06.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7a2a8f22198166e8ee35c46ec0078e14c2f3b4dc" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-01.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-01.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="56ddad5b70ea0625ccb412757dab2ad0d123bc90" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-02.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-02.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a868e726502149255f9b6280395e564d56e71080" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-03.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-03.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f313c7ae1388c6deed6a540c0e882cb797e0dcce" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-04.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-04.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4d4c8f44daaf04fe503d9aad322b490c0054a75e" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-05.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-05.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f2a60d15d60bd984b3b0707b47db30db57236195" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-06.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-06.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="823af7ecfd5e4ebaf0e75d7495144df7b2140395" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-07.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-07.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="65f8f02babc44676f8deecc327d1b96484bbaf0d" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-08.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-08.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1b14d62f21fc211d5cd7a6e4a6ee166168031016" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-09.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-09.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5ee5b8b31d3dd8c558553e54c7c554318cd77d66" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-10.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-10.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5f834208b5d5274705abd7b8034880364254f5b2" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-11.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-11.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="405b1a590a8ffccb67b9dff1a0e773fff7fa112a" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-exceptions-01.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-exceptions-01.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="035157e8b8ddfc1b1e7b82c110a358d6381147fd" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-exceptions-02.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-exceptions-02.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0cc75839b30dbaf4cce06930dc98de3511f2ea2f" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-exceptions-03.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-exceptions-03.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9ca7105123ca361a99b83ad5ac18a03001881620" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-exceptions-04.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-exceptions-04.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ec0723216ecf6b0869056e95bb649ea2944b83ee" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-exceptions-05.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-exceptions-05.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a78cb96342f637d31897c41d8e3056fc80c67794" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-exceptions-06.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-exceptions-06.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8f4db3f38dc0cb1f94bc57f6a1c7461389a3a9d2" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-select-01.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-select-01.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2e72757191d8dfad283a049294c51a1bf11bb4ff" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-select-02.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-select-02.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cb646283732f943a4b9110ae6fc4bb981587cb4a" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-select-03.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-select-03.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e5b7b3810bc06ce9bfde1b5abfd161185487c6e1" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-select-04.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-select-04.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1207ecc526b7dbeb9423163dc31ee095118fa672" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-select-05.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-select-05.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bf434cd562f83b4e4940c7e5ef332c435df1f374" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-supervision-01.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-supervision-01.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f8005d743ef79714402c0344a853b42e7a9cc0bd" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-supervision-02.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-supervision-02.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="849ec96d14f78ed438c468ea90a9b6cef732f4c6" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-supervision-03.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-supervision-03.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="05c31c98507194a943d2ef674985b9ae59d05c31" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-01.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-01.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="da118e754a1abfb45b4360bf16326bfbba640497" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-02.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-02.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fe057c8759f0a19bd1e4d5fce3c901ceff6a466b" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-03.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-03.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6ff8f734ac32e0143e71db015aa04ecabddcf9d4" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-04.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-04.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ccc382ea609f0ce68e6e549ac970e39f01e5aa3a" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-05.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-05.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="88f618b0cb771a17ed61b1a95bd63c480f17e88e" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-06.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-06.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eeac2031d2d5441de9d25546c1ee8acfe2107eef" translate="yes" xml:space="preserve">
          <source>You can get full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-07.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-07.kt&quot;&gt;여기에서&lt;/a&gt; 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="19734a701a0ce26ddd6513a731d4957a073d1d46" translate="yes" xml:space="preserve">
          <source>You can get reference to its &lt;code&gt;name&lt;/code&gt; property like this:</source>
          <target state="translated">다음 과 같이 &lt;code&gt;name&lt;/code&gt; 속성에 대한 참조를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a76fdbd686f7e9cdf69758f71d6a118ceb73d47a" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-01.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-01.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f81c574993fbc6e4290c77aea2a1b0ba0ba51573" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-02.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-02.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="94af07133bc9071d2e6b5c4ce1e018fd4ce88c85" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-03.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-03.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e496abd555065de94d667aee39a7b000334407c4" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-04.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-04.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a89c7a8c2384cf22d4fd5ca0804b3718fe59aa67" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-05.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-05.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="caa58b003cc673652e0373777b14793e09cbd168" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-06.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-06.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ae9e9f0cc2fc58001324c7e9b86d33967383654a" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-07.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-07.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cbca22da6ef8654b16885b9b4b6e0f999527e88a" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-08.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-08.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="db8cc3536110fc609135c5f7f61a61c18021aeda" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-09.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-basic-09.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2011fc3c096333305a18269f51841dc30e6ea03a" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-01.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-01.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7b5a1bb104e4c48f0823e19173d24038bcfd0160" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-02.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-02.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dd06b839c1db433ba194b1abab0c87d5190645f7" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-03.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-03.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6bdeb9c10a9bfcb31f066f6b659e899c8c3dfad3" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-04.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-04.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b6bc2a11de64299a77cd93498247840f4dee2807" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-05.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-05.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0a5ce88801212e4ef037029a3ac6968e3d20ac96" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-06.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-06.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f5294a8e438c0cb5c21f0aae2a3b9f850284e512" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-07.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-07.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2ad7908c0bf0000d7cda89cfe829b621becd4a94" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-08.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-08.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="211e13f2a6d660103d746246715465e46ce60479" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-09.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-cancel-09.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bf4bca4e1ee52bb4dfc9789e264c0de0d56291ff" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-01.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-01.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d49c5e793488db959770746c7b4a124c288e8abb" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-02.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-02.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7282999bffa848b173d8501dd299ad893529d4e9" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-03.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-03.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1df7a979d8055c65dcb842e68aa83bf1498ef17c" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-04.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-04.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="681ee2654eb899faef9835ed4f7462393db29d57" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-05.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-05.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="82a2ee3bb81466731e3b1b8e70c00d2a9e4fe639" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-06.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-06.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2ae4d7b4269f15269cf4bd18bc149088c90345db" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-07.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-07.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="06a86784eb51b3689a9606d56fcbd5850d6e7eb1" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-08.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-08.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="37ed86796d35f9463986715bc461588673bce25e" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-09.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-09.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b03f75d1ba17b38464611e736f0d4b3a2896b6b8" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-10.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-channel-10.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6394ee7a6269a4f3faabd166139774539ffe0d17" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-compose-01.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-compose-01.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="41c97957dd735ef154a0331d52a6c013fa78d6aa" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-compose-02.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-compose-02.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="93a96592496247d941339ace976aec49bdfec49a" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-compose-03.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-compose-03.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fae23c9c8de49427da4fc17874848304fa057260" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-compose-04.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-compose-04.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="784f00bda666b479e35ec8ff8b5649f08a4bc213" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-compose-05.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-compose-05.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="26d039426fc794412798cccf343380a882dd20c2" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-compose-06.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-compose-06.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a25bcde91750fcbffffaa1cb26972d8e8683def8" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-01.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-01.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="73686bde31670f2d5f001b75e93440ac0ec59cbc" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-02.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-02.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="93ff4cc29a43327eee3fa201e71bbeb50f2ce07c" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-03.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-03.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3c7a2121d9c8c566db6b24f5d1bb944fc7cea45c" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-04.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-04.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="812e99ce30640e9075b9483ceab45f956fd8fbe4" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-05.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-05.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9890b783e28c0ff5e874e08a5097eee1cbf8136c" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-06.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-06.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="94367c90540f84886d9d9dab99acf0da1d0c4c3c" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-07.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-07.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eb1efed6b1e723c9886325207ef8849bbaf02818" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-08.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-08.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7b9e588430d9c2cc5b59bc9ad91a0bd2909cb9ea" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-09.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-09.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eb6387568470f1d61f7b009e95cc74e6ba99ed32" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-10.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-10.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0ea5d54217aed853b0644d485e5417b74387b46f" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-11.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-context-11.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dbe9058c96c19bf0be111f29074f2633080b5dd3" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-exceptions-01.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-exceptions-01.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a13dc61f87c3b0b882f9e334d42e6f5f9e64f346" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-exceptions-02.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-exceptions-02.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ecb83ed93f3f12cd8023cf05ffe21c090bc91188" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-exceptions-03.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-exceptions-03.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8f99e0d1e006eafd562a9fa2be6a8dd64ada13dd" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-exceptions-04.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-exceptions-04.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="46fabd4ed1a822431cd52765c14e71cce44c9579" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-exceptions-05.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-exceptions-05.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9c638e06f7ce08295a876dc2eb791263022004f5" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-exceptions-06.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-exceptions-06.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="de48df51c6c1d7786a71a18b71b4bbba308e649f" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-select-01.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-select-01.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8a1e89564beb4c80678f62353d794be6615e3613" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-select-02.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-select-02.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d344e42f486ed9ac4efce1d653935a63ab83ebd1" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-select-03.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-select-03.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cb75e7a42ba6b956d6fadf13f881f55b0f715192" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-select-04.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-select-04.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d08da7c966e1599fb8e7dc75624cccfc78d17860" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-select-05.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-select-05.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4bc2cc50ce457da29396ea0d3d33f66429e76a23" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-supervision-01.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-supervision-01.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6c2adf76667c6f0fb9a8e32876513ca26e9ff917" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-supervision-02.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-supervision-02.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="77dbe086c55eddb778161200a3bf363beacf7291" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-supervision-03.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-supervision-03.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="47c84a8625ffae31b463d9e185bd472cd1fa1c3f" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-01.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-01.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b8f928a05fe7a01def414611e515a1b206e28f5a" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-02.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-02.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bb469b7d343f50c50ba4ed96df1b98d3bb483bd9" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-03.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-03.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="82cc964f15c6b887f224b4606b2b08b5f4ef7498" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-04.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-04.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="12d338a3ac143c5520de1239b84de0bd600784b6" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-05.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-05.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="19ec75dcda21ea09192d67f044614b2f3ee88459" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-06.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-06.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4f5161508758d5c523bebc177366be7047bb670c" translate="yes" xml:space="preserve">
          <source>You can get the full code &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-07.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-sync-07.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e3c16ced1038a28bd95f6c01f05a086cfaa60479" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-01.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-01.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="33b13af02c496db8e0635eab816db71a2e2d1f48" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-02.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-02.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6983a572597fcb78151c73f4b71bdade7a60eb1a" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-03.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-03.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b84f8e138cd549694f52ce1043c49b6e3aeffb19" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-04.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-04.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6dace2efcf5629ccb63e0c046e5415a776a20792" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-05.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-05.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9cdb4ad8658963aae21760a9a819513dadef9425" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-06.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-06.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4a02f22e3279b71e7890fa341a60f9f67d21a999" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-07.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-07.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="27a2af12c12c3a8d3b05f22034174e9944a1d84a" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-08.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-08.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="470a37bcb35f130b2bb0aab8167e7f27ba63522f" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-09.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-09.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="24c89423f70a261dabfa07520cf1d8907f8f647b" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-10.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-10.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="963ae99c540ce3267692a9933fdd60c83da53164" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-11.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-11.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="23627fd8ccf8c84f48a9f394566e454eae0d4406" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-12.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-12.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a6a394831734099f1a72671ce42379af69140253" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-13.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-13.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f6e14d102dd9d08a22ce7edafb562f3059c24724" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-14.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-14.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3375a1575b819ecdcc0fda61e0c422794db66718" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-15.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-15.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="01713310140a7b55ff5f6ddab6969bb8858f8dfa" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-16.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-16.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a23e34f650c1c897790682289332a0cfbe9542aa" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-17.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-17.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5f04a9c36c686ed6e0c4954987bc8f344ea51a26" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-18.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-18.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a12e120aa6fe58d4618e24c1922a2e50c3919d9a" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-19.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-19.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a93f04f149031b606d9db0ad435172125d0262f1" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-20.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-20.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ce6f63746faac26114cbede784a2f8ac83f2626b" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-21.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-21.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="504cf41949d0d4886eb239a6bd5dd347cfabd6ff" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-22.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-22.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c842cb7d1757710f77959f43da2aef0defbfe0ff" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-23.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-23.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c63ee47bef8a52ca2b85c8f936e2678970cd197a" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-24.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-24.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5731d397d48bf7e8d71c292048feac0778872f51" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-25.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-25.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d15f8478252b9ab2fceaf395ea0ddeb271b52324" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-26.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-26.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="57cee373d24a85d7eac44dc910d7eb965b1ba67e" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-27.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-27.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="398b013d90c3ebbad12557923f38c8d55e533105" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-28.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-28.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="738c84912d623ad4ff5970a7c8db949d4fd1609c" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-29.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-29.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dd5a06b0af2032ccea5b93c6600caa78fc7af6f6" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-30.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-30.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e313bda7b283eb8378a7a0293b2b80cd20dce443" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-31.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-31.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c16160556653c40ddad25df8dc601706385f05c4" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-32.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-32.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d3e8190885794a9b5899536b2b4b02f0ac41f65a" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-33.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-33.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="08437d4ef95960d165848f283c77eee81d732890" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-34.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-34.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f2cba99effedf50248f63a027c490abefcb5ce39" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-35.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-35.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f9d139a8eb10b2aa7da5df2e2a9314a8c357da9d" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-36.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-36.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9335c0334ca8aba2fa6a9a3d35aad0889587937c" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-37.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-37.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1d11ae91d8d994eefad82f3cdcb58f31c9cf2a76" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-38.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-38.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d25bb25c654351342bf60a8e047fddb2f6d2ff21" translate="yes" xml:space="preserve">
          <source>You can get the full code from &lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-39.kt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/test/guide/example-flow-39.kt&quot;&gt;여기&lt;/a&gt; 에서 전체 코드를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1ca4e90c659377b1f8ac8a4b48d3ff66d9036928" translate="yes" xml:space="preserve">
          <source>You can get the reference to a class of a specific object with the same &lt;code&gt;::class&lt;/code&gt; syntax by using the object as a receiver:</source>
          <target state="translated">객체를 수신자로 사용하여 &lt;code&gt;::class&lt;/code&gt; 구문 이 동일한 특정 객체의 클래스에 대한 참조를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="83ce5924a4cb77a6210ebd37693fdc10e92e7301" translate="yes" xml:space="preserve">
          <source>You can get the size/length of a collection &lt;code&gt;c&lt;/code&gt; with &lt;code&gt;c.size&lt;/code&gt; (except for string objects, where you for legacy Java reasons must use &lt;code&gt;s.length&lt;/code&gt; instead).</source>
          <target state="translated">당신은 컬렉션의 크기 / 길이 얻을 수 있습니다 &lt;code&gt;c&lt;/code&gt; 와 &lt;code&gt;c.size&lt;/code&gt; 를 (사용해야을 기존 자바 이유로 문자열 개체를 제외하고 &lt;code&gt;s.length&lt;/code&gt; 을 대신).</target>
        </trans-unit>
        <trans-unit id="3505d8e1784f4793f4b7be9d231c78696b8fcfdc" translate="yes" xml:space="preserve">
          <source>You can have a shared source set for the following combinations of targets:</source>
          <target state="translated">다음과 같은 대상 조합에 대해 공유 소스 세트를 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa16f7442b79f32a2e9a2e80895ba7c2e1dcd589" translate="yes" xml:space="preserve">
          <source>You can have new names for inner and nested classes:</source>
          <target state="translated">내부 및 중첩 클래스의 새 이름을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9f00669e901b06cfde4cb5d5edc21ea5bd75642" translate="yes" xml:space="preserve">
          <source>You can have several targets for one platform in a multiplatform library. For example, these targets can provide the same API but use different libraries during runtime, such as testing frameworks and logging solutions. Dependencies on such a multiplatform library may fail to resolve because it isn&amp;rsquo;t clear which target to choose.</source>
          <target state="translated">다중 플랫폼 라이브러리에서 하나의 플랫폼에 대해 여러 대상을 가질 수 있습니다. 예를 들어 이러한 대상은 동일한 API를 제공 할 수 있지만 테스트 프레임 워크 및 로깅 솔루션과 같은 런타임 동안 다른 라이브러리를 사용할 수 있습니다. 이러한 다중 플랫폼 라이브러리에 대한 종속성은 선택할 대상이 명확하지 않기 때문에 해결되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc9c20b2fda9a8d15545332a2ff6e1d40410b9c1" translate="yes" xml:space="preserve">
          <source>You can inline some JavaScript code into your Kotlin code using the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.js/js&quot;&gt;&lt;code&gt;js(&quot;...&quot;)&lt;/code&gt;&lt;/a&gt; function. For example:</source>
          <target state="translated">&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.js/js&quot;&gt; &lt;code&gt;js(&quot;...&quot;)&lt;/code&gt; &lt;/a&gt; 함수를 사용하여 일부 자바 스크립트 코드를 Kotlin 코드에 인라인 할 수 있습니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="4f53a8d23cba7d9bd1275e4d37f76d00800886a3" translate="yes" xml:space="preserve">
          <source>You can inline some JavaScript code into your Kotlin code using the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.js/js&quot;&gt;js(&quot;&amp;hellip;&quot;)&lt;/a&gt; function. For example:</source>
          <target state="translated">&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.js/js&quot;&gt;js ( &quot;&amp;hellip;&quot;)&lt;/a&gt; 함수를 사용하여 일부 JavaScript 코드를 Kotlin 코드에 인라인 할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f47796d4b0fb532ca1bc556bac27b46887679240" translate="yes" xml:space="preserve">
          <source>You can iterate over a map in several different ways, depending on whether you want the keys, the values, or both:</source>
          <target state="translated">키, 값 또는 둘 모두를 원하는지 여부에 따라 여러 가지 방법으로 맵을 반복 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b0c8e8b13d40f2c58ec894753da0831f964ab17" translate="yes" xml:space="preserve">
          <source>You can manage Pod dependencies directly in IntelliJ IDEA and enjoy all the additional features such as code highlighting and completion. You can build the whole Kotlin project with Gradle and not ever have to switch to Xcode. Use Xcode only when you need to write Swift/Objective-C code or run your application on a simulator or device.</source>
          <target state="translated">IntelliJ IDEA에서 직접 Pod 종속성을 관리하고 코드 강조 표시 및 완성과 같은 모든 추가 기능을 즐길 수 있습니다. Gradle을 사용하여 전체 Kotlin 프로젝트를 빌드 할 수 있으며 Xcode로 전환 할 필요가 없습니다. Swift / Objective-C 코드를 작성하거나 시뮬레이터 또는 장치에서 애플리케이션을 실행해야하는 경우에만 Xcode를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a25da8f2a9aa9d800da31acb5dadbc2f52f9d6b6" translate="yes" xml:space="preserve">
          <source>You can now check whether a lateinit var has been initialized using &lt;code&gt;isInitialized&lt;/code&gt; on the property reference:</source>
          <target state="translated">이제 속성 참조에서 &lt;code&gt;isInitialized&lt;/code&gt; 를 사용하여 lateinit var가 초기화되었는지 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="54766d5d66f97aaff7dc379143fdd1ab648fb893" translate="yes" xml:space="preserve">
          <source>You can now consume the Java сlass from Kotlin or vice versa without any further actions.</source>
          <target state="translated">이제 추가 조치없이 Kotlin에서 Java를 또는 그 반대로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dae752ea380d04735dfaf15ed2f82c8bcd6c4fbd" translate="yes" xml:space="preserve">
          <source>You can now describe declarations which should be imported from JavaScript modules more precisely. If you add the &lt;code&gt;@JsModule(&quot;&amp;lt;module-name&amp;gt;&quot;)&lt;/code&gt; annotation on an external declaration it will be properly imported to a module system (either CommonJS or AMD) during the compilation. For example, with CommonJS the declaration will be imported via &lt;code&gt;require(...)&lt;/code&gt; function. Additionally, if you want to import a declaration either as a module or as a global JavaScript object, you can use the &lt;code&gt;@JsNonModule&lt;/code&gt; annotation.</source>
          <target state="translated">이제 JavaScript 모듈에서 가져와야하는 선언을보다 정확하게 설명 할 수 있습니다. 당신이 추가하면 &lt;code&gt;@JsModule(&quot;&amp;lt;module-name&amp;gt;&quot;)&lt;/code&gt; 외부 선언에 주석을이를 제대로 컴파일시 모듈 시스템 (CommonJS 또는 AMD 중 하나)로 가져올 수 있습니다. 예를 들어 CommonJS를 사용하면 &lt;code&gt;require(...)&lt;/code&gt; 함수 를 통해 선언을 가져옵니다 . 또한 선언을 모듈 또는 전역 JavaScript 객체로 가져 오려면 &lt;code&gt;@JsNonModule&lt;/code&gt; 주석을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5e29c74e4a2a8ef54240764f7edbbe3ee0c38e34" translate="yes" xml:space="preserve">
          <source>You can now mark property accessors with the &lt;code&gt;inline&lt;/code&gt; modifier if the properties don't have a backing field. Such accessors are compiled in the same way as &lt;a href=&quot;inline-functions&quot;&gt;inline functions&lt;/a&gt;.</source>
          <target state="translated">속성 에 지원 필드가없는 경우 속성 접근 자를 &lt;code&gt;inline&lt;/code&gt; 수정 자로 표시 할 수 있습니다 . 이러한 접근자는 &lt;a href=&quot;inline-functions&quot;&gt;인라인 함수&lt;/a&gt; 와 같은 방식으로 컴파일됩니다 .</target>
        </trans-unit>
        <trans-unit id="5894c4d75202ebe97c4e4207a411e9e04878ae01" translate="yes" xml:space="preserve">
          <source>You can now serialize an instance of this class by calling &lt;code&gt;Json.encodeToString()&lt;/code&gt;.</source>
          <target state="translated">이제 &lt;code&gt;Json.encodeToString()&lt;/code&gt; 을 호출 하여이 클래스의 인스턴스를 직렬화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="731c21c9266361cc04bba584e1b813d21461bb53" translate="yes" xml:space="preserve">
          <source>You can now use the &lt;a href=&quot;delegated-properties&quot;&gt;delegated property&lt;/a&gt; syntax with local variables. One possible use is defining a lazily evaluated local variable:</source>
          <target state="translated">이제 지역 변수와 함께 &lt;a href=&quot;delegated-properties&quot;&gt;위임 된 속성&lt;/a&gt; 구문을 사용할 수 있습니다 . 한 가지 가능한 용도는 지연 평가 된 지역 변수를 정의하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="2d2debd7bdb710fb4b3a520a0a14978615f28fb9" translate="yes" xml:space="preserve">
          <source>You can now use the &lt;a href=&quot;multi-declarations&quot;&gt;destructuring declaration&lt;/a&gt; syntax to unpack the arguments passed to a lambda. Here's an example:</source>
          <target state="translated">이제 &lt;a href=&quot;multi-declarations&quot;&gt;destructuring 선언&lt;/a&gt; 구문을 사용하여 람다에 전달 된 인수의 압축을 풀 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ecb49bad6212d472340febef9c4a92c2dc37fdc2" translate="yes" xml:space="preserve">
          <source>You can now use the &lt;code&gt;::&lt;/code&gt; operator to get a &lt;a href=&quot;reflection#function-references&quot;&gt;member reference&lt;/a&gt; pointing to a method or property of a specific object instance. Previously this could only be expressed with a lambda. Here's an example:</source>
          <target state="translated">&lt;code&gt;::&lt;/code&gt; 연산자를 사용하여 특정 객체 인스턴스의 메서드 또는 속성을 가리키는 &lt;a href=&quot;reflection#function-references&quot;&gt;멤버 참조&lt;/a&gt; 를 가져올 수 있습니다 . 이전에는 람다로만 표현할 수있었습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d29b3920ed542fcf775bc602cd0e8501f358d14c" translate="yes" xml:space="preserve">
          <source>You can only create one Android target per Gradle subproject.</source>
          <target state="translated">Gradle 하위 프로젝트 당 하나의 Android 대상 만 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ceea1bc16cd15000fe1af05ee40d4a687405be5" translate="yes" xml:space="preserve">
          <source>You can pass a &lt;a href=&quot;#variable-number-of-arguments-varargs&quot;&gt;variable number of arguments (&lt;code&gt;vararg&lt;/code&gt;)&lt;/a&gt; with names using the &lt;code&gt;spread&lt;/code&gt; operator:</source>
          <target state="translated">&lt;code&gt;spread&lt;/code&gt; 연산자를 사용하여 이름과 함께 &lt;a href=&quot;#variable-number-of-arguments-varargs&quot;&gt;가변 개수의 인수 ( &lt;code&gt;vararg&lt;/code&gt; )&lt;/a&gt; 를 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b847d0da651df7d068d98a219a497acc5b29966c" translate="yes" xml:space="preserve">
          <source>You can play with &lt;a href=&quot;https://play.kotlinlang.org/koans&quot;&gt;Koans online&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://play.kotlinlang.org/koans&quot;&gt;Koans를 온라인으로&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0f9b2799acc934043b5a12499acb26bb13304416" translate="yes" xml:space="preserve">
          <source>You can project a type with &lt;strong&gt;in&lt;/strong&gt; as well:</source>
          <target state="translated">&lt;strong&gt;in&lt;/strong&gt; 을 사용 하여 유형을 투영 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="d0a18810b807899fc87347674789ae25b08a8358" translate="yes" xml:space="preserve">
          <source>You can provide different aliases for function types:</source>
          <target state="translated">함수 유형에 다른 별명을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd0a1aba542cd9a7769563e8de879353b2b7bebd" translate="yes" xml:space="preserve">
          <source>You can publish a multiplatform library to a Maven repository with the &lt;a href=&quot;https://docs.gradle.org/current/userguide/publishing_maven.html&quot;&gt;&lt;code&gt;maven-publish&lt;/code&gt; Gradle plugin&lt;/a&gt;. Specify the group, version, and the &lt;a href=&quot;https://docs.gradle.org/current/userguide/publishing_maven.html#publishing_maven:repositories&quot;&gt;repositories&lt;/a&gt; where the library should be published. The plugin creates publications automatically.</source>
          <target state="translated">&lt;a href=&quot;https://docs.gradle.org/current/userguide/publishing_maven.html&quot;&gt; &lt;code&gt;maven-publish&lt;/code&gt; Gradle 플러그인을 사용&lt;/a&gt; 하여 멀티 플랫폼 라이브러리를 Maven 저장소에 게시 할 수 있습니다 . 라이브러리를 게시해야하는 그룹, 버전 및 &lt;a href=&quot;https://docs.gradle.org/current/userguide/publishing_maven.html#publishing_maven:repositories&quot;&gt;리포지토리를&lt;/a&gt; 지정합니다 . 플러그인은 발행물을 자동으로 생성합니다.</target>
        </trans-unit>
        <trans-unit id="2ac995756fb4e6ea0b39f2996ee45ae6f8c9a51b" translate="yes" xml:space="preserve">
          <source>You can read more about debugging facilities in the documentation for &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/new-coroutine-context.html&quot;&gt;newCoroutineContext&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/new-coroutine-context.html&quot;&gt;newCoroutineContext&lt;/a&gt; 함수 의 문서에서 디버깅 기능에 대한 자세한 내용을 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2f87c72b40bcba9466f0aa96e194f1acd6171e91" translate="yes" xml:space="preserve">
          <source>You can refer to an instance method of a particular object:</source>
          <target state="translated">특정 객체의 인스턴스 메소드를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ff80c89cfeb733bb184d40dfed14def09cc94ad" translate="yes" xml:space="preserve">
          <source>You can remove leading whitespace with &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.text/trim-margin&quot;&gt;&lt;code&gt;trimMargin()&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.text/trim-margin&quot;&gt; &lt;code&gt;trimMargin()&lt;/code&gt; &lt;/a&gt; 함수를 사용 하여 선행 공백을 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="57882cb74d776bc5fbc33f0c06b3fd9ea47ae4fa" translate="yes" xml:space="preserve">
          <source>You can restrict the types that can be used for a generic type parameter, by specifying that it must be an instance of a specific type or of a subclass thereof. If you've got a class or interface called &lt;code&gt;Vehicle&lt;/code&gt;, you can do:</source>
          <target state="translated">특정 유형 또는 서브 클래스의 인스턴스 여야하도록 지정하여 일반 유형 매개 변수에 사용할 수있는 유형을 제한 할 수 있습니다. &lt;code&gt;Vehicle&lt;/code&gt; 이라는 클래스 또는 인터페이스가있는 경우 다음 을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="789020964fbfabd177e25bb41fd30d8a78fe24ad" translate="yes" xml:space="preserve">
          <source>You can retrieve all possible ranges of the collection elements of a given size. The function for getting them is called &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/windowed&quot;&gt;&lt;code&gt;windowed()&lt;/code&gt;&lt;/a&gt;: it returns a list of element ranges that you would see if you were looking at the collection through a sliding window of the given size. Unlike &lt;code&gt;chunked()&lt;/code&gt;, &lt;code&gt;windowed()&lt;/code&gt; returns element ranges (&lt;em&gt;windows&lt;/em&gt;) starting from &lt;em&gt;each&lt;/em&gt; collection element. All the windows are returned as elements of a single &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">주어진 크기의 컬렉션 요소의 가능한 모든 범위를 검색 할 수 있습니다. 그것들을 얻는 함수는 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/windowed&quot;&gt; &lt;code&gt;windowed()&lt;/code&gt; &lt;/a&gt; 이라고 불리며 주어진 크기의 슬라이딩 윈도우를 통해 컬렉션을 볼 때 볼 수있는 요소 범위 목록을 반환합니다. 달리 &lt;code&gt;chunked()&lt;/code&gt; , &lt;code&gt;windowed()&lt;/code&gt; 반환 요소의 범위 ( &lt;em&gt;창&lt;/em&gt; 에서 시작) &lt;em&gt;각&lt;/em&gt; 콜렉션 요소를. 모든 윈도우는 단일 &lt;code&gt;List&lt;/code&gt; 의 요소로 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="6748314d7eef0a810faa12036433f144a6967ecd" translate="yes" xml:space="preserve">
          <source>You can retrieve the collection in the reversed order using the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/reversed&quot;&gt;&lt;code&gt;reversed()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/reversed&quot;&gt; &lt;code&gt;reversed()&lt;/code&gt; &lt;/a&gt; 함수를 사용하여 역순으로 컬렉션을 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0ebe55f9564d5e3ad7a74adc929dc591d4502a37" translate="yes" xml:space="preserve">
          <source>You can run and see that it prints three lines and terminates:</source>
          <target state="translated">당신은 실행하고 세 줄을 인쇄하고 종료하는 것을 볼 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="a4055bad5b7cd18147cf02892590f9fd8b7c0981" translate="yes" xml:space="preserve">
          <source>You can see the result in the &lt;strong&gt;Run&lt;/strong&gt; tool window.</source>
          <target state="translated">&lt;strong&gt;실행&lt;/strong&gt; 도구 창 에서 결과를 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3899a5e7f5d4504a18c48d8a47079578d26a1217" translate="yes" xml:space="preserve">
          <source>You can share your learning materials publicly or privately with your students or co-workers on &lt;a href=&quot;https://stepik.org/&quot;&gt;Stepik&lt;/a&gt;, a learning management and MOOC platform. Or you can save your course as an archive file.</source>
          <target state="translated">학습 관리 및 MOOC 플랫폼 인 &lt;a href=&quot;https://stepik.org/&quot;&gt;Stepik&lt;/a&gt; 에서 학생 또는 동료와 학습 자료를 공개 또는 비공개로 공유 할 수 있습니다 . 또는 코스를 보관 파일로 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe3fa0ef816d4ce0761831d438c956e302f11467" translate="yes" xml:space="preserve">
          <source>You can simply distribute two JS files, &lt;code&gt;sample-library.js&lt;/code&gt; and &lt;code&gt;sample-library.meta.js&lt;/code&gt;. The former file contains translated JavaScript code, the latter file contains some meta-information about Kotlin code, which is needed by compiler.</source>
          <target state="translated">두 개의 JS 파일 ( &lt;code&gt;sample-library.js&lt;/code&gt; 및 &lt;code&gt;sample-library.meta.js&lt;/code&gt; )을 간단히 분배 할 수 있습니다 . 전자 파일에는 번역 된 JavaScript 코드가 포함되어 있고 후자에는 Kotlin 코드에 대한 메타 정보가 포함되어 있으며 이는 컴파일러에 필요합니다.</target>
        </trans-unit>
        <trans-unit id="9802ac6f09d28b3393604c88088a4755169899f0" translate="yes" xml:space="preserve">
          <source>You can skip all arguments with default values:</source>
          <target state="translated">기본값으로 모든 인수를 건너 뛸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca3e35674130ecc1b7284fff81c3f8b8d2f6e75b" translate="yes" xml:space="preserve">
          <source>You can skip some arguments with default values. However, after the first skipped argument, you must name all subsequent arguments:</source>
          <target state="translated">기본값으로 일부 인수를 건너 뛸 수 있습니다. 그러나 첫 번째 건너 뛴 인수 다음에 모든 후속 인수의 이름을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="9a70114b280771bfb0e542769ce612067e9f2042" translate="yes" xml:space="preserve">
          <source>You can solve the tasks right inside IntelliJ IDEA or Android Studio by &lt;a href=&quot;https://www.jetbrains.com/help/education/install-edutools-plugin.html&quot;&gt;installing the EduTools plugin&lt;/a&gt; and &lt;a href=&quot;https://www.jetbrains.com/help/education/learner-start-guide.html?section=Kotlin%20Koans&quot;&gt;choosing Kotlin Koans course&lt;/a&gt;.</source>
          <target state="translated">다음과 같은 방법으로 우측하게 IntelliJ IDEA 또는 Android 스튜디오 내부 작업을 해결할 수있는 &lt;a href=&quot;https://www.jetbrains.com/help/education/install-edutools-plugin.html&quot;&gt;플러그인 EduTools를 설치&lt;/a&gt; 하고 &lt;a href=&quot;https://www.jetbrains.com/help/education/learner-start-guide.html?section=Kotlin%20Koans&quot;&gt;물론 코 틀린 화두를 선택&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bbe78124b1333b52b02931bdbaa673cb561f22ab" translate="yes" xml:space="preserve">
          <source>You can specify all-open annotations directly, using the &lt;code&gt;annotation&lt;/code&gt; plugin option, or enable the &quot;preset&quot;. The only preset available now for all-open is &lt;code&gt;spring&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;annotation&lt;/code&gt; 플러그인 옵션을 사용하여 모든 열린 주석을 직접 지정 하거나 &quot;사전 설정&quot;을 활성화 할 수 있습니다. 올 오픈에 사용할 수있는 유일한 사전 설정은 &lt;code&gt;spring&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="140c32456b0cffdded25a70c4ca8d344cddeb018" translate="yes" xml:space="preserve">
          <source>You can specify for which build types to create binaries. In the following example, only the &lt;code&gt;debug&lt;/code&gt; executable is created.</source>
          <target state="translated">바이너리를 생성 할 빌드 유형을 지정할 수 있습니다. 다음 예에서는 &lt;code&gt;debug&lt;/code&gt; 실행 파일 만 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="7416a7c10099b29e76cc99c3e549a1054543d7c3" translate="yes" xml:space="preserve">
          <source>You can specify the type for the whole destructured parameter or for a specific component separately:</source>
          <target state="translated">전체 비 구조화 된 매개 변수 또는 특정 구성 요소의 유형을 별도로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0633e65106ef7169029e57bed473202743744981" translate="yes" xml:space="preserve">
          <source>You can then create an instance of this class in a way that looks similar to Python, as if the class were a function (but this is just syntactic sugar - unlike Python, classes in Kotlin aren't really functions):</source>
          <target state="translated">그런 다음 클래스가 함수 인 것처럼 파이썬과 유사한 방식으로이 클래스의 인스턴스를 만들 수 있습니다 (그러나 이것은 파이썬과 달리 구문 설탕 일뿐입니다. 코 틀린의 클래스는 실제로 기능하지 않습니다).</target>
        </trans-unit>
        <trans-unit id="1e547a35ed713e9c8b9e49c90fb3cf2b6f5f0a68" translate="yes" xml:space="preserve">
          <source>You can then set the `KONAN_HOME` env variable to the generated `dist` folder in the git repository.</source>
          <target state="translated">그런 다음`KONAN_HOME` env 변수를 git 저장소에서 생성 된`dist` 폴더로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="732a5c0ea87c071108a555367b1d7a6c08977e9e" translate="yes" xml:space="preserve">
          <source>You can try out the new Kotlin Project Wizard by working through these tutorials:</source>
          <target state="translated">다음 가이드를 따라 작업하여 새로운 Kotlin 프로젝트 마법사를 사용해 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ccd9500cae6bd4a4f06bc298d420ccf8008a9fc0" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;https://kotlinlang.org/lp/mobile/&quot;&gt;Kotlin Multiplatform Mobile (KMM)&lt;/a&gt; to create multiplatform mobile applications with code shared between Android and iOS.</source>
          <target state="translated">당신이 사용할 수있는 &lt;a href=&quot;https://kotlinlang.org/lp/mobile/&quot;&gt;코 틀린 멀티 플랫폼 모바일 (KMM)를&lt;/a&gt; 코드는 Android 및 iOS 공유와 멀티 플랫폼 모바일 애플리케이션을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a480cf5c4022e8a46684909d2ad120edebcedbd" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;cssSupport.mode&lt;/code&gt; to specify how encountered CSS should be handled. The following values are available:</source>
          <target state="translated">&lt;code&gt;cssSupport.mode&lt;/code&gt; 를 사용 하여 CSS 처리 방법을 지정할 수 있습니다 . 다음 값을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a5febffcbd27e0bfeb6dfce6d095ec23ee8186a5" translate="yes" xml:space="preserve">
          <source>You can use a &lt;a href=&quot;coding-conventions#trailing-commas&quot;&gt;trailing comma&lt;/a&gt; when you declare class properties:</source>
          <target state="translated">클래스 속성을 선언 할 때 &lt;a href=&quot;coding-conventions#trailing-commas&quot;&gt;후행 쉼표를&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6e29d0a03a21f3d0a0a32f4c42d96da6209cd788" translate="yes" xml:space="preserve">
          <source>You can use a &lt;a href=&quot;coding-conventions#trailing-commas&quot;&gt;trailing comma&lt;/a&gt; when you declare function parameters:</source>
          <target state="translated">함수 매개 변수를 선언 할 때 &lt;a href=&quot;coding-conventions#trailing-commas&quot;&gt;후행 쉼표를&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5a56286d617c39a79010145fd236059551e9d2c9" translate="yes" xml:space="preserve">
          <source>You can use a Kotlin Multiplatform project with native targets as a CocoaPods dependency (Kotlin Pod). You can include such a dependency in the Podfile of the Xcode project by its name and path to the project directory containing the generated Podspec. This dependency will be automatically built (and rebuilt) along with this project. Such an approach simplifies importing to Xcode by removing a need to write the corresponding Gradle tasks and Xcode build steps manually.</source>
          <target state="translated">네이티브 대상이있는 Kotlin Multiplatform 프로젝트를 CocoaPods 종속성 (Kotlin Pod)으로 사용할 수 있습니다. 생성 된 Podspec을 포함하는 프로젝트 디렉터리에 대한 이름 및 경로로 Xcode 프로젝트의 Podfile에 이러한 종속성을 포함 할 수 있습니다. 이 종속성은이 프로젝트와 함께 자동으로 빌드 (및 다시 빌드)됩니다. 이러한 접근 방식은 해당 Gradle 작업 및 Xcode 빌드 단계를 수동으로 작성할 필요가 없으므로 Xcode로 가져 오기를 단순화합니다.</target>
        </trans-unit>
        <trans-unit id="3beb69f616d3e2cb4ca5a614c3bc9660589f8475" translate="yes" xml:space="preserve">
          <source>You can use code compiled by the new JVM IR backend only if you've enabled the new backend. Otherwise, you will get an error. Considering this, we don't recommend that library authors switch to the new backend in production.</source>
          <target state="translated">새 백엔드를 활성화 한 경우에만 새 JVM IR 백엔드로 컴파일 된 코드를 사용할 수 있습니다. 그렇지 않으면 오류가 발생합니다. 이를 고려하여 라이브러리 작성자가 프로덕션에서 새로운 백엔드로 전환하는 것은 권장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="84b5b4981768244e96b9ae4cc88970e7940d7cab" translate="yes" xml:space="preserve">
          <source>You can use different member references &lt;code&gt;animal::meow&lt;/code&gt; and &lt;code&gt;animal::woof&lt;/code&gt; after the animal variable has been smart cast to specific types &lt;code&gt;Cat&lt;/code&gt; and &lt;code&gt;Dog&lt;/code&gt;. After type checks, you can access member references corresponding to subtypes.</source>
          <target state="translated">동물 변수가 특정 유형 &lt;code&gt;Cat&lt;/code&gt; 및 &lt;code&gt;Dog&lt;/code&gt; 로 스마트 캐스트 된 후 다른 멤버 참조 &lt;code&gt;animal::meow&lt;/code&gt; 및 &lt;code&gt;animal::woof&lt;/code&gt; 사용할 수 있습니다 . 유형 검사 후 하위 유형에 해당하는 멤버 참조에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="876452eafe63d003438a007f9bfa87db834c622f" translate="yes" xml:space="preserve">
          <source>You can use interfaces to express this concept in statically typed Kotlin:</source>
          <target state="translated">인터페이스를 사용하여 정적으로 형식화 된 Kotlin에서이 개념을 표현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e15874f9bc935793ad5f69866127e1d7ac121de3" translate="yes" xml:space="preserve">
          <source>You can use platform-dependent libraries like Foundation, UIKit, and POSIX in source sets shared among several native targets. This helps you share more native code without being limited by platform-specific dependencies.</source>
          <target state="translated">여러 기본 대상간에 공유되는 소스 세트에서 Foundation, UIKit 및 POSIX와 같은 플랫폼 종속 라이브러리를 사용할 수 있습니다. 이를 통해 플랫폼 별 종속성의 제한없이 더 많은 네이티브 코드를 공유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b22ee36db65368e420ae9235f971843a5ca631f" translate="yes" xml:space="preserve">
          <source>You can use platform-dependent libraries, such as &lt;code&gt;Foundation&lt;/code&gt;, &lt;code&gt;UIKit&lt;/code&gt;, and &lt;code&gt;posix&lt;/code&gt;, in source sets shared among several native targets. This can help you share more native code without being limited by platform-specific dependencies.</source>
          <target state="translated">여러 기본 대상간에 공유되는 소스 세트에서 &lt;code&gt;Foundation&lt;/code&gt; , &lt;code&gt;UIKit&lt;/code&gt; 및 &lt;code&gt;posix&lt;/code&gt; 와 같은 플랫폼 종속 라이브러리를 사용할 수 있습니다 . 이를 통해 플랫폼 별 종속성의 제한없이 더 많은 네이티브 코드를 공유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ab66a95c7e7438fc7cd3a432ce354e9488d354e" translate="yes" xml:space="preserve">
          <source>You can use shorthand for a dependency on a Kotlin module, for example, kotlin(&quot;test&quot;) for &quot;org.jetbrains.kotlin:kotlin-test&quot;.</source>
          <target state="translated">예를 들어 &quot;org.jetbrains.kotlin : kotlin-test&quot;의 경우 kotlin ( &quot;test&quot;)와 같이 Kotlin 모듈에 대한 종속성에 대한 속기를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="23d004a67942f457544cc50dda56e14265bcec61" translate="yes" xml:space="preserve">
          <source>You can use the destructuring declarations syntax for lambda parameters. If a lambda has a parameter of the &lt;code&gt;Pair&lt;/code&gt; type (or &lt;code&gt;Map.Entry&lt;/code&gt;, or any other type that has the appropriate &lt;code&gt;componentN&lt;/code&gt; functions), you can introduce several new parameters instead of one by putting them in parentheses:</source>
          <target state="translated">람다 매개 변수에 구조적 선언 구문을 사용할 수 있습니다. 람다에 &lt;code&gt;Pair&lt;/code&gt; 유형 (또는 &lt;code&gt;Map.Entry&lt;/code&gt; 또는 적절한 &lt;code&gt;componentN&lt;/code&gt; 함수 가있는 다른 유형 )의 매개 변수가있는 경우 괄호 안에 넣어 여러 개의 새로운 매개 변수를 도입 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0ca9b36d5ce508c6e2fa139586844d7ef2aba4c" translate="yes" xml:space="preserve">
          <source>You can use the flag &lt;code&gt;kotlin.js.generate.externals&lt;/code&gt; in your &lt;code&gt;gradle.properties&lt;/code&gt; file to set the generator's behavior for all npm dependencies simultaneously. As usual, individual explicit settings take precedence over this general flag.</source>
          <target state="translated">당신은 플래그 사용할 수 있습니다 &lt;code&gt;kotlin.js.generate.externals&lt;/code&gt; 을 당신에 &lt;code&gt;gradle.properties&lt;/code&gt; 에 동시에 모든 NPM 종속성을 발전기의 동작을 설정하는 파일입니다. 평소와 같이 개별 명시 적 설정이이 일반 플래그보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="8c11e18313954b2584c083398c6917fa55f5abe3" translate="yes" xml:space="preserve">
          <source>You can use the following test in &lt;code&gt;commonTest&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;commonTest&lt;/code&gt; 에서 다음 테스트를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="facd6d40eb3f5564626d77aed93f4d7d3b04da04" translate="yes" xml:space="preserve">
          <source>You can use these declarations in your application like this:</source>
          <target state="translated">다음과 같이 응용 프로그램에서 이러한 선언을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a1afc08c8a0b8d39d787e322fba33a21d586609" translate="yes" xml:space="preserve">
          <source>You can use this for creating instances of SAM interfaces:</source>
          <target state="translated">이를 사용하여 SAM 인터페이스 인스턴스를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba1f6362f79761437c8552b587d3323476eb24dd" translate="yes" xml:space="preserve">
          <source>You can use this function for huge files.</source>
          <target state="translated">대용량 파일에이 기능을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2655719e1444a54d71751742c8066c44b2c42f4" translate="yes" xml:space="preserve">
          <source>You can use underscores to make number constants more readable:</source>
          <target state="translated">밑줄을 사용하여 숫자 상수를 더 읽기 쉽게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a2d5af3d5d920600db45ce7403b1bbc2d4143bf" translate="yes" xml:space="preserve">
          <source>You can write your custom tests using EduTools testing framework to automatically verify the learner's solution. Every task has a &lt;code&gt;Tests.kt&lt;/code&gt; file already filled in with a test template that you will need to modify:</source>
          <target state="translated">EduTools 테스트 프레임 워크를 사용하여 사용자 정의 테스트를 작성하여 학습자의 솔루션을 자동으로 확인할 수 있습니다. 모든 작업에는 수정해야 할 테스트 템플릿으로 채워진 &lt;code&gt;Tests.kt&lt;/code&gt; 파일이 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b76a989e0326042cd6ca07e425888cc3592b0ef" translate="yes" xml:space="preserve">
          <source>You can't override a function with default arguments.</source>
          <target state="translated">기본 인수로 함수를 재정의 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="bd1d4c1d4d4bd7a8c7ec8e7cf6cca11032b78ede" translate="yes" xml:space="preserve">
          <source>You could also &lt;strong&gt;share business logic between your web interface and mobile apps&lt;/strong&gt; for Android and iOS, and avoid duplicating commonly used functionality like providing abstractions around REST API endpoints, user authentication, or your domain models.</source>
          <target state="translated">또한 &lt;strong&gt;웹 인터페이스와&lt;/strong&gt; Android 및 iOS 용 &lt;strong&gt;모바일 앱간에 비즈니스 로직&lt;/strong&gt; 을 &lt;strong&gt;공유&lt;/strong&gt; 하고 REST API 엔드 포인트, 사용자 인증 또는 도메인 모델에 대한 추상화 제공과 같이 일반적으로 사용되는 기능의 복제를 방지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac91b17cf6089c6783b65faf12362194a2bd6d1a" translate="yes" xml:space="preserve">
          <source>You could describe it from Kotlin as follows:</source>
          <target state="translated">Kotlin에서 다음과 같이 설명 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1192cca4ed39c2b80b09c21cde4372aab2020231" translate="yes" xml:space="preserve">
          <source>You could have said &lt;code&gt;${this.name}&lt;/code&gt;, but that's redundant and generally discouraged. Oneliner functions can be declared with an &lt;code&gt;=&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;${this.name}&lt;/code&gt; 이라고 말했을 수도 있지만 중복되고 일반적으로 권장되지 않습니다. Oneliner 함수는 &lt;code&gt;=&lt;/code&gt; 로 선언 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e67a1051e5024516f72dbdcff59af1daa5ee2c3c" translate="yes" xml:space="preserve">
          <source>You don't have to write your whole application in Kotlin/JS, either &amp;ndash; you can also &lt;strong&gt;generate libraries from your Kotlin code&lt;/strong&gt; that can be consumed as modules from any code base written in JavaScript or TypeScript, regardless of other frameworks or technologies used. This approach of &lt;strong&gt;creating hybrid applications&lt;/strong&gt; allows you to leverage the competencies that you and your team might already have around web development, while helping you &lt;strong&gt;reduce the amount of duplicated work&lt;/strong&gt;, and making it easier to keep your web target consistent with other targets of your application.</source>
          <target state="translated">Kotlin / JS로 전체 애플리케이션을 작성할 필요도 없습니다 . 사용 된 다른 프레임 워크 나 기술에 관계없이 JavaScript 또는 TypeScript로 작성된 모든 코드베이스에서 모듈로 사용할 수있는 &lt;strong&gt;Kotlin 코드에서 라이브러리를 생성&lt;/strong&gt; 할 수도 있습니다. &lt;strong&gt;하이브리드 애플리케이션&lt;/strong&gt; 을 &lt;strong&gt;만드는&lt;/strong&gt; 이 접근 방식을 사용하면 귀하와 귀하의 팀이 이미 웹 개발에 대해 갖고있을 수있는 역량을 활용하는 동시에 &lt;strong&gt;중복 작업의 양&lt;/strong&gt; 을 &lt;strong&gt;줄이고&lt;/strong&gt; 웹 타겟을 애플리케이션의 다른 타겟과 더 쉽게 일치시킬 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="a43eb2d8768ac5031fa984ae424d3f7c70dba636" translate="yes" xml:space="preserve">
          <source>You enable the library using the same configuration as in Java:</source>
          <target state="translated">Java에서와 동일한 구성을 사용하여 라이브러리를 사용 가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="8c5b9dd560be06ac6111cb55eef0859721717b5b" translate="yes" xml:space="preserve">
          <source>You may use the Gradle plugin to build &lt;em&gt;Kotlin/Native&lt;/em&gt; projects. Builds of the plugin are &lt;a href=&quot;https://plugins.gradle.org/plugin/org.jetbrains.kotlin.platform.native&quot;&gt;available&lt;/a&gt; at the Gradle plugin portal, so you can apply it using Gradle plugin DSL:</source>
          <target state="translated">Gradle 플러그인을 사용하여 &lt;em&gt;Kotlin / Native&lt;/em&gt; 프로젝트 를 빌드 할 수 있습니다 . 플러그인 빌드는 Gradle 플러그인 포털에서 &lt;a href=&quot;https://plugins.gradle.org/plugin/org.jetbrains.kotlin.platform.native&quot;&gt;사용할 수&lt;/a&gt; 있으므로 Gradle 플러그인 DSL을 사용하여 플러그인을 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b93d76ae603f78021ce86cac8be9e4dcecceb84" translate="yes" xml:space="preserve">
          <source>You may use this function on huge files.</source>
          <target state="translated">이 기능은 대용량 파일에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="26741d0eb2f430b13eb338fb534b1d58b417b964" translate="yes" xml:space="preserve">
          <source>You may want to compile Kotlin to JavaScript in the following scenarios:</source>
          <target state="translated">다음 시나리오에서 Kotlin을 JavaScript로 컴파일 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd8dfdd1c0f8996254d209cb42f90a05bff6adc1" translate="yes" xml:space="preserve">
          <source>You no longer need to declare a dependency on the &lt;code&gt;stdlib&lt;/code&gt; library in any Kotlin Gradle project, including a multiplatform one. The dependency is added by default.</source>
          <target state="translated">더 이상 멀티 플랫폼 프로젝트를 포함하여 모든 Kotlin Gradle 프로젝트에서 &lt;code&gt;stdlib&lt;/code&gt; 라이브러리에 대한 종속성을 선언 할 필요가 없습니다 . 종속성은 기본적으로 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="6b21c94af91224b474e097b0c6083e60a97489de" translate="yes" xml:space="preserve">
          <source>You obtain the reference to an exact class of an object, for instance &lt;code&gt;GoodWidget&lt;/code&gt; or &lt;code&gt;BadWidget&lt;/code&gt;, despite the type of the receiver expression (&lt;code&gt;Widget&lt;/code&gt;).</source>
          <target state="translated">수신자 표현식의 유형 ( &lt;code&gt;Widget&lt;/code&gt; ) 에도 불구하고 &lt;code&gt;GoodWidget&lt;/code&gt; 또는 &lt;code&gt;BadWidget&lt;/code&gt; 과 같은 정확한 객체 클래스에 대한 참조를 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="5f5ea4954dc8e7b48442b69f94773e6e96784e4d" translate="yes" xml:space="preserve">
          <source>You often need to create several native targets that could potentially reuse a lot of the common logic and third-party APIs.</source>
          <target state="translated">많은 공통 논리 및 타사 API를 잠재적으로 재사용 할 수있는 여러 기본 대상을 만들어야하는 경우가 많습니다.</target>
        </trans-unit>
        <trans-unit id="b2c587862a005ee493b0885e4c7d9ec14d2c421f" translate="yes" xml:space="preserve">
          <source>You should also &lt;strong&gt;Load Script Configurations&lt;/strong&gt; for newly created scripts or when you open a project with new Kotlin plugin for the first time.</source>
          <target state="translated">또한 새로 생성 된 스크립트 또는 새 Kotlin 플러그인으로 프로젝트를 처음 열 때 &lt;strong&gt;스크립트 구성&lt;/strong&gt; 을 &lt;strong&gt;로드&lt;/strong&gt; 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e9d1097215c7ce79f8eea707d8c49c4f618bc709" translate="yes" xml:space="preserve">
          <source>You should declare it like this in Kotlin:</source>
          <target state="translated">Kotlin에서 다음과 같이 선언해야합니다.</target>
        </trans-unit>
        <trans-unit id="ba5ac69fce378c46fdc793e82851d4f52cbab648" translate="yes" xml:space="preserve">
          <source>You should have the &lt;code&gt;curl&lt;/code&gt; library binaries on Windows to make the sample work. You may build &lt;code&gt;curl&lt;/code&gt; from &lt;a href=&quot;https://curl.haxx.se/download.html&quot;&gt;sources&lt;/a&gt; on Windows (you'll need Visual Studio or Windows SDK Commandline tools), for more details, see the &lt;a href=&quot;https://jonnyzzz.com/blog/2018/10/29/kn-libcurl-windows/&quot;&gt;related blog post&lt;/a&gt;. Alternatively, you may also want to consider a &lt;a href=&quot;https://www.msys2.org/&quot;&gt;MinGW/MSYS2&lt;/a&gt;&lt;code&gt;curl&lt;/code&gt; binary.</source>
          <target state="translated">당신은해야 &lt;code&gt;curl&lt;/code&gt; 샘플 작업을 만들기 위해 Windows에서 라이브러리 바이너리를. Windows의 &lt;a href=&quot;https://curl.haxx.se/download.html&quot;&gt;소스&lt;/a&gt; 에서 &lt;code&gt;curl&lt;/code&gt; 을 만들 수 있습니다 (Visual Studio 또는 Windows SDK 명령 줄 도구 필요). 자세한 내용은 &lt;a href=&quot;https://jonnyzzz.com/blog/2018/10/29/kn-libcurl-windows/&quot;&gt;관련 블로그 게시물을&lt;/a&gt; 참조하십시오 . 또는 &lt;a href=&quot;https://www.msys2.org/&quot;&gt;MinGW / MSYS2 &lt;/a&gt; &lt;code&gt;curl&lt;/code&gt; 바이너리 를 고려할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d2c16cfd868158d17c8a943cc0fe8583db109224" translate="yes" xml:space="preserve">
          <source>You use &lt;code&gt;ButterKnife&lt;/code&gt; with Kotlin in the same way as you use it with Java. Let's see first the changes in the Gradle build script, and then highlight some of the differences in the code.</source>
          <target state="translated">당신은 사용 &lt;code&gt;ButterKnife&lt;/code&gt; 를 자바와 함께 사용과 같은 방법으로 코 틀린와 함께. Gradle 빌드 스크립트의 변경 사항을 먼저 확인한 다음 코드의 몇 가지 차이점을 강조하겠습니다.</target>
        </trans-unit>
        <trans-unit id="3766e71e623980c3885401351e9207e799d15efc" translate="yes" xml:space="preserve">
          <source>You use the &lt;code&gt;@{}&lt;/code&gt; syntax for writing expressions, which can now refer Kotlin &lt;a href=&quot;../reference/properties&quot;&gt;properties&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;@{}&lt;/code&gt; 구문을 사용하여 표현식을 작성합니다. 이제 Kotlin &lt;a href=&quot;../reference/properties&quot;&gt;속성을&lt;/a&gt; 참조 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a497f7ed92f5402cfa3e5f8988aebdb94a83d67a" translate="yes" xml:space="preserve">
          <source>You will learn step-by-step how to create a multiplatform library which can be used from any other common code (for example, shared with Android and iOS). You will also learn how to write tests which will be executed on all platforms and use an efficient implementation provided by a specific platform.</source>
          <target state="translated">다른 공통 코드 (예 : Android 및 iOS와 공유)에서 사용할 수있는 다중 플랫폼 라이브러리를 만드는 방법을 단계별로 배웁니다. 또한 모든 플랫폼에서 실행될 테스트를 작성하고 특정 플랫폼에서 제공하는 효율적인 구현을 사용하는 방법도 배웁니다.</target>
        </trans-unit>
        <trans-unit id="a474a53ecaed65b062638e934eef0f223d3a63a4" translate="yes" xml:space="preserve">
          <source>You will only see the changes if your previous application is still running. If you've stopped your application, &lt;a href=&quot;#run-the-application&quot;&gt;run it again&lt;/a&gt;.</source>
          <target state="translated">이전 애플리케이션이 아직 실행중인 경우에만 변경 사항이 표시됩니다. 애플리케이션을 중지 한 경우 &lt;a href=&quot;#run-the-application&quot;&gt;다시 실행합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="930a92a49ace40ec6eff45ed4a9bc1cfef616c40" translate="yes" xml:space="preserve">
          <source>You will see the changes only if your previous application is still running. If you've stopped your application, &lt;a href=&quot;#run-the-application&quot;&gt;run it again&lt;/a&gt;.</source>
          <target state="translated">이전 애플리케이션이 아직 실행중인 경우에만 변경 사항이 표시됩니다. 애플리케이션을 중지 한 경우 &lt;a href=&quot;#run-the-application&quot;&gt;다시 실행합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7371a5eb40e8898444843c355b1f44f0b507ad58" translate="yes" xml:space="preserve">
          <source>You will see the following result:</source>
          <target state="translated">다음과 같은 결과가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="4b2268e558ec35f555fdcd469173c6075c0c72b9" translate="yes" xml:space="preserve">
          <source>Your default web browser opens the URL &lt;a href=&quot;http://localhost:8080/&quot;&gt;http://localhost:8080/&lt;/a&gt; with your frontend application.</source>
          <target state="translated">기본 웹 브라우저는 프런트 엔드 애플리케이션과 함께 URL &lt;a href=&quot;http://localhost:8080/&quot;&gt;http : // localhost : 8080 /&lt;/a&gt; 을 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="0118c0fbc8648cd3beb9e0293fd3f787a8fa6a4d" translate="yes" xml:space="preserve">
          <source>Your first coroutine</source>
          <target state="translated">첫 코 루틴</target>
        </trans-unit>
        <trans-unit id="064165739c6cf301db05217984d7500f088d1114" translate="yes" xml:space="preserve">
          <source>Your first coroutine with Kotlin</source>
          <target state="translated">코 틀린과의 첫 번째 코 루틴</target>
        </trans-unit>
        <trans-unit id="3ed65e70ed561eb2cb21d652c38e1ee2dc56dd3d" translate="yes" xml:space="preserve">
          <source>Your project opens. By default, you see the file &lt;code&gt;build.gradle.kts&lt;/code&gt;, which is the build script created by the Project Wizard based on your configuration. It includes the &lt;a href=&quot;../../reference/js-project-setup&quot;&gt;&lt;code&gt;kotlin(&quot;js&quot;)&lt;/code&gt; plugin and dependencies&lt;/a&gt; required for your frontend application.</source>
          <target state="translated">프로젝트가 열립니다. 기본적으로 구성에 따라 프로젝트 마법사에서 만든 빌드 스크립트 인 &lt;code&gt;build.gradle.kts&lt;/code&gt; 파일이 표시 됩니다. 여기에는 프런트 엔드 애플리케이션에 필요한 &lt;a href=&quot;../../reference/js-project-setup&quot;&gt; &lt;code&gt;kotlin(&quot;js&quot;)&lt;/code&gt; 플러그인 및 종속성&lt;/a&gt; 이 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="1c49551cd7f5684dfdca2b7936c1aec79a3f519a" translate="yes" xml:space="preserve">
          <source>Your project will open. By default, the wizard creates the necessary &lt;code&gt;main.kt&lt;/code&gt; file with code that prints &quot;Hello, Kotlin/Native!&quot; to the standard output.</source>
          <target state="translated">프로젝트가 열립니다. 기본적으로 마법사 는 &quot;Hello, Kotlin / Native!&quot;를 인쇄하는 코드를 사용하여 필요한 &lt;code&gt;main.kt&lt;/code&gt; 파일을 생성합니다 . 표준 출력에.</target>
        </trans-unit>
        <trans-unit id="17de8e33491fc965af6de37193cb17b51a26f550" translate="yes" xml:space="preserve">
          <source>Your project will open. By default, you see the file &lt;code&gt;build.gradle.kts&lt;/code&gt;, which is the build script created by the Project Wizard based on your configuration. It includes the &lt;code&gt;kotlin(&quot;jvm&quot;)&lt;/code&gt; plugin and dependencies required for your console application.</source>
          <target state="translated">프로젝트가 열립니다. 기본적으로 구성에 따라 프로젝트 마법사에서 만든 빌드 스크립트 인 &lt;code&gt;build.gradle.kts&lt;/code&gt; 파일이 표시 됩니다. 여기에는 콘솔 애플리케이션에 필요한 &lt;code&gt;kotlin(&quot;jvm&quot;)&lt;/code&gt; 플러그인 및 종속성 이 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="c66f81aee47f8cf3c5b0a673bd5e10d082523708" translate="yes" xml:space="preserve">
          <source>Your second option is the safe call operator, written &lt;code&gt;?.&lt;/code&gt;:</source>
          <target state="translated">두 번째 옵션은 &lt;code&gt;?.&lt;/code&gt; 작성된 안전한 통화 연산자 입니다. :</target>
        </trans-unit>
        <trans-unit id="1a272fd282089fe514817567377ca24b72d0625f" translate="yes" xml:space="preserve">
          <source>ZERO</source>
          <target state="translated">ZERO</target>
        </trans-unit>
        <trans-unit id="7e10955c6db01ee31c7b2037a4c9efd0b842f9d1" translate="yes" xml:space="preserve">
          <source>Zeppelin Kotlin interpreter</source>
          <target state="translated">Zeppelin Kotlin 인터프리터</target>
        </trans-unit>
        <trans-unit id="7b93081b4ec78bda06922bbc837b7a1c49e2d4cd" translate="yes" xml:space="preserve">
          <source>Zero shows that the objects are equal.</source>
          <target state="translated">0은 객체가 동일 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="aec742c8cd57ac5fee0ad76b17e91c6d76608cb3" translate="yes" xml:space="preserve">
          <source>Zip</source>
          <target state="translated">Zip</target>
        </trans-unit>
        <trans-unit id="281d4deef155f3f504d99a312a022a397d572373" translate="yes" xml:space="preserve">
          <source>Zipping</source>
          <target state="translated">Zipping</target>
        </trans-unit>
        <trans-unit id="db0ab1ea3b89573c3806bcc4be61b05ee7dfc9db" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;#lambda-expressions-and-anonymous-functions&quot;&gt;lambda expression&lt;/a&gt;: &lt;code&gt;{ a, b -&amp;gt; a + b }&lt;/code&gt;,</source>
          <target state="translated">&lt;a href=&quot;#lambda-expressions-and-anonymous-functions&quot;&gt;람다 식&lt;/a&gt; : &lt;code&gt;{ a, b -&amp;gt; a + b }&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="d5fdde91811b69b04ede32d835a02536728560c3" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;reflection#constructor-references&quot;&gt;constructor&lt;/a&gt;: &lt;code&gt;::Regex&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;reflection#constructor-references&quot;&gt;생성자&lt;/a&gt; : &lt;code&gt;::Regex&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3be8c6cb619e66b7398f6c57a357792c88952e03" translate="yes" xml:space="preserve">
          <source>a Gradle source set (with the exception that the &lt;code&gt;test&lt;/code&gt; source set can access the internal declarations of &lt;code&gt;main&lt;/code&gt;);</source>
          <target state="translated">Gradle 소스 세트 ( &lt;code&gt;test&lt;/code&gt; 소스 세트가 &lt;code&gt;main&lt;/code&gt; 의 내부 선언에 액세스 할 수있는 것을 제외하고 );</target>
        </trans-unit>
        <trans-unit id="6ea4172f05fe4c59558e323ef1e65baba446fc35" translate="yes" xml:space="preserve">
          <source>a Maven project;</source>
          <target state="translated">메이븐 프로젝트;</target>
        </trans-unit>
        <trans-unit id="3cef41f069ab7f0be06801bac69c1eb253bf07ce" translate="yes" xml:space="preserve">
          <source>a combination of the above with the help of logic operators (&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;, &lt;code&gt;||&lt;/code&gt;, &lt;code&gt;!&lt;/code&gt;).</source>
          <target state="translated">논리 연산자의 도움으로 위의 조합 ( &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; , &lt;code&gt;||&lt;/code&gt; , &lt;code&gt;!&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c216f9ceb0d2c025a8045de346af1e1ed342ea19" translate="yes" xml:space="preserve">
          <source>a companion object is initialized when the corresponding class is loaded (resolved), matching the semantics of a Java static initializer.</source>
          <target state="translated">컴패니언 객체는 해당 클래스가로드 (해결) 될 때 초기화되어 Java 정적 초기화 프로그램의 의미와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="5763b5bf1ff8e2f4d89a930f47fa97efef000a76" translate="yes" xml:space="preserve">
          <source>a compilation per &lt;a href=&quot;https://developer.android.com/studio/build/build-variants&quot;&gt;Android build variant&lt;/a&gt;, for Android targets;</source>
          <target state="translated">안드로이드 타겟에 대한 안드로이드 &lt;a href=&quot;https://developer.android.com/studio/build/build-variants&quot;&gt;빌드 변형&lt;/a&gt; 에 대한 컴파일 ;</target>
        </trans-unit>
        <trans-unit id="cfa67951d1da3973eab1458e918a2e45dac85b91" translate="yes" xml:space="preserve">
          <source>a function that is invoked on each element with the following parameters:</source>
          <target state="translated">다음 매개 변수를 사용하여 각 요소에서 호출되는 함수 :</target>
        </trans-unit>
        <trans-unit id="ec405522ff527497ff17775c820e65265640a333" translate="yes" xml:space="preserve">
          <source>a function that provides an initial value of accumulator for each group. It's invoked with parameters:</source>
          <target state="translated">각 그룹에 대해 초기 누산기 값을 제공하는 기능. 매개 변수로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="6a29df4a3e564aaf01a307c63d14b0eb7f37752a" translate="yes" xml:space="preserve">
          <source>a member or an extension property of another class</source>
          <target state="translated">다른 클래스의 멤버 또는 확장 속성</target>
        </trans-unit>
        <trans-unit id="c8364c11f30755e5de625497fd4c46fd19c6c665" translate="yes" xml:space="preserve">
          <source>a member or an extension property of the same class</source>
          <target state="translated">동일한 클래스의 멤버 또는 확장 속성</target>
        </trans-unit>
        <trans-unit id="b8c5262916f1b8fb83979fdfeffc171cb9ddf6ee" translate="yes" xml:space="preserve">
          <source>a product executable</source>
          <target state="translated">제품 실행 파일</target>
        </trans-unit>
        <trans-unit id="1eb5fec2744a5df7613a55d7fd97938d085b6455" translate="yes" xml:space="preserve">
          <source>a set of files compiled with one invocation of the &lt;code&gt;&amp;lt;kotlinc&amp;gt;&lt;/code&gt; Ant task.</source>
          <target state="translated">&lt;code&gt;&amp;lt;kotlinc&amp;gt;&lt;/code&gt; Ant 태스크 를 한 번 호출하여 컴파일 된 파일 세트 .</target>
        </trans-unit>
        <trans-unit id="ac635be4ff6768ba4f0e6821a42e6c26cbee7aea" translate="yes" xml:space="preserve">
          <source>a shared native library</source>
          <target state="translated">공유 네이티브 라이브러리</target>
        </trans-unit>
        <trans-unit id="5203164bee4f705b722f4678f3ba0818f9183a28" translate="yes" xml:space="preserve">
          <source>a stable API may include experimental classes or functions;</source>
          <target state="translated">안정적인 API에는 실험 클래스 또는 함수가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f6c668749f80dbe624db92b5624533dc7bed0652" translate="yes" xml:space="preserve">
          <source>a stable command-line tool may have experimental options.</source>
          <target state="translated">안정적인 명령 줄 도구에는 실험적인 옵션이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e38aa2f4cc17009da31a45d6655103b1dbbb91ee" translate="yes" xml:space="preserve">
          <source>a stable compiler may have an experimental feature;</source>
          <target state="translated">안정적인 컴파일러에는 실험적인 기능이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="701a65cb432dba43dbb98d8a177f9f52b2dd4e36" translate="yes" xml:space="preserve">
          <source>a static library or &lt;a href=&quot;../tutorials/native/dynamic-libraries&quot;&gt;dynamic&lt;/a&gt; library with C headers for C/C++ projects</source>
          <target state="translated">C / C ++ 프로젝트를위한 C 헤더가 있는 정적 라이브러리 또는 &lt;a href=&quot;../tutorials/native/dynamic-libraries&quot;&gt;동적&lt;/a&gt; 라이브러리</target>
        </trans-unit>
        <trans-unit id="0c6ad2d0dc561335290a4e742ce75b5d5eb677bc" translate="yes" xml:space="preserve">
          <source>a static native library</source>
          <target state="translated">정적 네이티브 라이브러리</target>
        </trans-unit>
        <trans-unit id="87b718bcbf2c59c9593a70b0056793afd5f5b6bc" translate="yes" xml:space="preserve">
          <source>a test executable</source>
          <target state="translated">테스트 실행 파일</target>
        </trans-unit>
        <trans-unit id="be4719b22e9ab0eec8b76ed66944edf9cae5f9ba" translate="yes" xml:space="preserve">
          <source>a top-level property</source>
          <target state="translated">최상위 속성</target>
        </trans-unit>
        <trans-unit id="0a1ad7c981433eb18f5bb4beb412f4b822f36e18" translate="yes" xml:space="preserve">
          <source>a top-level, local, member, or extension &lt;a href=&quot;reflection#function-references&quot;&gt;function&lt;/a&gt;: &lt;code&gt;::isOdd&lt;/code&gt;, &lt;code&gt;String::toInt&lt;/code&gt;,</source>
          <target state="translated">최상위, 로컬, 멤버 또는 확장 &lt;a href=&quot;reflection#function-references&quot;&gt;함수&lt;/a&gt; : &lt;code&gt;::isOdd&lt;/code&gt; , &lt;code&gt;String::toInt&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="8a55b2b451f366e6acdc077667b33fceb5f746aa" translate="yes" xml:space="preserve">
          <source>a top-level, member, or extension &lt;a href=&quot;reflection#property-references&quot;&gt;property&lt;/a&gt;: &lt;code&gt;List&amp;lt;Int&amp;gt;::size&lt;/code&gt;,</source>
          <target state="translated">최상위, 멤버 또는 확장 &lt;a href=&quot;reflection#property-references&quot;&gt;속성&lt;/a&gt; : &lt;code&gt;List&amp;lt;Int&amp;gt;::size&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="e0a4bd2f03d342add0da0301667dca1acef11783" translate="yes" xml:space="preserve">
          <source>a value of this type can be assigned to any variable or passed anywhere as a parameter;</source>
          <target state="translated">이 유형의 값은 모든 변수에 지정되거나 매개 변수로 어디서나 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="82451b41fd7878180b6aa2b54e369cbec4e8032c" translate="yes" xml:space="preserve">
          <source>abs</source>
          <target state="translated">abs</target>
        </trans-unit>
        <trans-unit id="a38e6be0a8275f0f8f8df385b4d9e29da1b09865" translate="yes" xml:space="preserve">
          <source>absoluteValue</source>
          <target state="translated">absoluteValue</target>
        </trans-unit>
        <trans-unit id="328f0742cf74e8ffdb253376b1803615055e215b" translate="yes" xml:space="preserve">
          <source>acos</source>
          <target state="translated">acos</target>
        </trans-unit>
        <trans-unit id="5df0277ec86f188e0c797c5782ceb42dc25bb36a" translate="yes" xml:space="preserve">
          <source>acosh</source>
          <target state="translated">acosh</target>
        </trans-unit>
        <trans-unit id="58d1bbce297de3c304a9fefc3b483181872a5c6b" translate="yes" xml:space="preserve">
          <source>add</source>
          <target state="translated">add</target>
        </trans-unit>
        <trans-unit id="318a91f914a1780bb1e7755e8919d76e20093be8" translate="yes" xml:space="preserve">
          <source>addAll</source>
          <target state="translated">addAll</target>
        </trans-unit>
        <trans-unit id="7cf2f8276fd01514c07bc807e1405777d71c37f4" translate="yes" xml:space="preserve">
          <source>addAndGet</source>
          <target state="translated">addAndGet</target>
        </trans-unit>
        <trans-unit id="4606cae7f1920e3c492cfaeabdc8c17954ded6e2" translate="yes" xml:space="preserve">
          <source>addClass</source>
          <target state="translated">addClass</target>
        </trans-unit>
        <trans-unit id="fe76e1aad3a922b9e194f50cbef04d33dfcae2a4" translate="yes" xml:space="preserve">
          <source>addFirst</source>
          <target state="translated">addFirst</target>
        </trans-unit>
        <trans-unit id="234a5630ad644c13ab253cf82be9c9cfab7d410c" translate="yes" xml:space="preserve">
          <source>addLast</source>
          <target state="translated">addLast</target>
        </trans-unit>
        <trans-unit id="f179eaa645f7985474cc04b5e60426c65c05a493" translate="yes" xml:space="preserve">
          <source>addSuppressed</source>
          <target state="translated">addSuppressed</target>
        </trans-unit>
        <trans-unit id="c6c47d546ffe4e4d136cefd2422498568e06e672" translate="yes" xml:space="preserve">
          <source>added Kotlin multiplatform sub-project</source>
          <target state="translated">Kotlin 멀티 플랫폼 하위 프로젝트 추가</target>
        </trans-unit>
        <trans-unit id="15bb255576365959d15d1ba0f61d1742186e35ec" translate="yes" xml:space="preserve">
          <source>addressOf</source>
          <target state="translated">addressOf</target>
        </trans-unit>
        <trans-unit id="4a29d6a8dff5ab62bcf1df299be3ef1791b0652f" translate="yes" xml:space="preserve">
          <source>after the &lt;code&gt;object&lt;/code&gt; keyword.</source>
          <target state="translated">애프터 &lt;code&gt;object&lt;/code&gt; 키워드.</target>
        </trans-unit>
        <trans-unit id="a185ad3d25566e49abd2d52b23a900eef246c09a" translate="yes" xml:space="preserve">
          <source>afterChange</source>
          <target state="translated">afterChange</target>
        </trans-unit>
        <trans-unit id="e1ffb566107019d0965a193140bb5793546fb17e" translate="yes" xml:space="preserve">
          <source>aggregate</source>
          <target state="translated">aggregate</target>
        </trans-unit>
        <trans-unit id="1ee63dc77b3b7de9b8dca82c119914b383c98f8e" translate="yes" xml:space="preserve">
          <source>aggregateTo</source>
          <target state="translated">aggregateTo</target>
        </trans-unit>
        <trans-unit id="ae21c64a87f6bb0b8e16e55c48be4cc638d7bd3f" translate="yes" xml:space="preserve">
          <source>align</source>
          <target state="translated">align</target>
        </trans-unit>
        <trans-unit id="d01b6dc7e5c1dc550fefdbeec9b9ad81a8e5fa49" translate="yes" xml:space="preserve">
          <source>alignOf</source>
          <target state="translated">alignOf</target>
        </trans-unit>
        <trans-unit id="d87c448044defb778f33158d8ccf94a20531d600" translate="yes" xml:space="preserve">
          <source>all</source>
          <target state="translated">all</target>
        </trans-unit>
        <trans-unit id="53d4f3afda088ae08570675b500e19665f2556ab" translate="yes" xml:space="preserve">
          <source>all &lt;code&gt;Serializable&lt;/code&gt; (yes, &lt;code&gt;Date&lt;/code&gt; is supported too) and &lt;code&gt;Parcelable&lt;/code&gt; implementations;</source>
          <target state="translated">모든 &lt;code&gt;Serializable&lt;/code&gt; (예, &lt;code&gt;Date&lt;/code&gt; 도 지원됨) 및 &lt;code&gt;Parcelable&lt;/code&gt; 구현;</target>
        </trans-unit>
        <trans-unit id="57460a43b0a54e64b9d561a505866b6fe427cdc0" translate="yes" xml:space="preserve">
          <source>all native targets</source>
          <target state="translated">모든 기본 목표</target>
        </trans-unit>
        <trans-unit id="567d31b25403e303e02a9d0cd7c6bca266f8406e" translate="yes" xml:space="preserve">
          <source>all native targets except &lt;code&gt;wasm32&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;wasm32&lt;/code&gt; 를 제외한 모든 기본 대상</target>
        </trans-unit>
        <trans-unit id="1b1cd4d3ac4bba77f6172f8f43f91ab71b7b2ff9" translate="yes" xml:space="preserve">
          <source>allSuperclasses</source>
          <target state="translated">allSuperclasses</target>
        </trans-unit>
        <trans-unit id="18b9e6caabcba945a991e0cd3d7c862214846c56" translate="yes" xml:space="preserve">
          <source>allSupertypes</source>
          <target state="translated">allSupertypes</target>
        </trans-unit>
        <trans-unit id="acaab3b723a4d70b19f7b4e34895a97f703f7ab8" translate="yes" xml:space="preserve">
          <source>alloc</source>
          <target state="translated">alloc</target>
        </trans-unit>
        <trans-unit id="3ffbdb1287c0ec908e798069f7b5b6cd647d2dd3" translate="yes" xml:space="preserve">
          <source>allocArray</source>
          <target state="translated">allocArray</target>
        </trans-unit>
        <trans-unit id="13f640b0f3927286e812e84309afe8b28790adaf" translate="yes" xml:space="preserve">
          <source>allocArrayOf</source>
          <target state="translated">allocArrayOf</target>
        </trans-unit>
        <trans-unit id="68b6999bea7ec23dab1df9d25c9d8d43490d4501" translate="yes" xml:space="preserve">
          <source>allocArrayOfPointersTo</source>
          <target state="translated">allocArrayOfPointersTo</target>
        </trans-unit>
        <trans-unit id="3e675f64256a7074b1cd6ed0b61e9f712b2d1c3b" translate="yes" xml:space="preserve">
          <source>allocPointerTo</source>
          <target state="translated">allocPointerTo</target>
        </trans-unit>
        <trans-unit id="b27fc7658a1c0a12e498b8ef2d8c58cf474a3988" translate="yes" xml:space="preserve">
          <source>allocateArena</source>
          <target state="translated">allocateArena</target>
        </trans-unit>
        <trans-unit id="3f035f4821b920000c4dc57b8a573b78cd240fe5" translate="yes" xml:space="preserve">
          <source>allowedTargets</source>
          <target state="translated">allowedTargets</target>
        </trans-unit>
        <trans-unit id="e41321b88a98b2528581510ee2783da5a594399e" translate="yes" xml:space="preserve">
          <source>allowing a variable number of arguments to be passed to the function:</source>
          <target state="translated">가변 개수의 인수를 함수에 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="15613c9daf7be7fcb772872dcb7b03a4e457705b" translate="yes" xml:space="preserve">
          <source>almostEqual</source>
          <target state="translated">almostEqual</target>
        </trans-unit>
        <trans-unit id="09706c418809f1f4cfda992435ca1438eddaaeed" translate="yes" xml:space="preserve">
          <source>also</source>
          <target state="translated">also</target>
        </trans-unit>
        <trans-unit id="14c0a47f154cbfb352fb525cf3adf02f2ba7fb02" translate="yes" xml:space="preserve">
          <source>also(), takeIf() and takeUnless()</source>
          <target state="translated">또한 (), takeIf () 및 takeUnless ()</target>
        </trans-unit>
        <trans-unit id="1ea0b794e1acd33fc0e733b79c72bf9252569c11" translate="yes" xml:space="preserve">
          <source>amd</source>
          <target state="translated">amd</target>
        </trans-unit>
        <trans-unit id="65f59ec6b1ecd6170d5044474043cca9560a8071" translate="yes" xml:space="preserve">
          <source>amp</source>
          <target state="translated">amp</target>
        </trans-unit>
        <trans-unit id="748306aa1450ae801d48f09bbe9f30d902ac2696" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;#anonymous-functions&quot;&gt;anonymous function&lt;/a&gt;: &lt;code&gt;fun(s: String): Int { return s.toIntOrNull() ?: 0 }&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;#anonymous-functions&quot;&gt;익명 함수&lt;/a&gt; : &lt;code&gt;fun(s: String): Int { return s.toIntOrNull() ?: 0 }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7c2bfe77e768cc843bc33835f60f4705da91fc6a" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;../tutorials/native/apple-framework&quot;&gt;Apple framework&lt;/a&gt; for Swift and Objective-C projects</source>
          <target state="translated">&lt;a href=&quot;../tutorials/native/apple-framework&quot;&gt;애플 프레임 워크&lt;/a&gt; 스위프트와 오브젝티브 C 프로젝트</target>
        </trans-unit>
        <trans-unit id="098eb6a40c78dac1cc64803040ad60dce3785241" translate="yes" xml:space="preserve">
          <source>an IntelliJ IDEA module;</source>
          <target state="translated">IntelliJ IDEA 모듈;</target>
        </trans-unit>
        <trans-unit id="2b31d36cd498faa4713070b8daf870772d8a8963" translate="yes" xml:space="preserve">
          <source>an Objective-C framework</source>
          <target state="translated">Objective-C 프레임 워크</target>
        </trans-unit>
        <trans-unit id="acdec22f38192426233167a7509f5e1ce2912740" translate="yes" xml:space="preserve">
          <source>an executable for many &lt;a href=&quot;#target-platforms&quot;&gt;platforms&lt;/a&gt;</source>
          <target state="translated">많은 &lt;a href=&quot;#target-platforms&quot;&gt;플랫폼을&lt;/a&gt; 위한 실행 파일</target>
        </trans-unit>
        <trans-unit id="291bf94ec0c80baf0c0420518e8a22aa64da17ed" translate="yes" xml:space="preserve">
          <source>an implicit receiver may &lt;em&gt;belong to a DSL @X&lt;/em&gt; if marked with a corresponding DSL marker annotation</source>
          <target state="translated">해당 DSL 마커 주석으로 표시된 경우 암시 적 수신자가 &lt;em&gt;DSL @X에 속할&lt;/em&gt; 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="777d98d7103bfb49eb493b2de98200165f430e0f" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;@Test&lt;/code&gt;/&lt;code&gt;@Ignore&lt;/code&gt;/&lt;code&gt;@BeforeTest&lt;/code&gt;/&lt;code&gt;@AfterTest&lt;/code&gt; annotations in the common tests.</source>
          <target state="translated">및 &lt;code&gt;@Test&lt;/code&gt; / &lt;code&gt;@Ignore&lt;/code&gt; / &lt;code&gt;@BeforeTest&lt;/code&gt; / &lt;code&gt;@AfterTest&lt;/code&gt; 주석 일반적인 테스트한다.</target>
        </trans-unit>
        <trans-unit id="8621fe68c40fa5805eb8859391e6e6e8fc33f3f7" translate="yes" xml:space="preserve">
          <source>and call them like this:</source>
          <target state="translated">다음과 같이 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="592751918d30cbc057657d8fce04b9434ed048dc" translate="yes" xml:space="preserve">
          <source>and can be called like</source>
          <target state="translated">그리고 같이 불릴 수 있습니다</target>
        </trans-unit>
        <trans-unit id="2d31babf72302bfb29bfe1c901b1534e2d630175" translate="yes" xml:space="preserve">
          <source>and if we do not need all arguments:</source>
          <target state="translated">모든 주장이 필요하지 않은 경우 :</target>
        </trans-unit>
        <trans-unit id="64323b21a780fd8756eab4b3d9fc208d8fab2bae" translate="yes" xml:space="preserve">
          <source>and so, C headers on Linux will be analyzed with &lt;code&gt;-DBAR=bar -DFOO=foo1&lt;/code&gt; and on macOS with &lt;code&gt;-DBAR=bar -DFOO=foo2&lt;/code&gt;. Note that any definition file option can have both common and the platform-specific part.</source>
          <target state="translated">따라서 Linux의 C 헤더는 &lt;code&gt;-DBAR=bar -DFOO=foo1&lt;/code&gt; 로 , macOS에서는 &lt;code&gt;-DBAR=bar -DFOO=foo2&lt;/code&gt; 로 분석 됩니다. 모든 정의 파일 옵션은 공통 및 플랫폼 별 부분을 모두 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b17ec45624ae824bb7f0b363eed2cf7c4375821" translate="yes" xml:space="preserve">
          <source>and use it like</source>
          <target state="translated">그리고 그것을 사용하십시오</target>
        </trans-unit>
        <trans-unit id="607cd50b5f31073f72a143721418f64264c6b5d1" translate="yes" xml:space="preserve">
          <source>andNot</source>
          <target state="translated">andNot</target>
        </trans-unit>
        <trans-unit id="e4bbe5b7a4c1eb55652965aee885dd59bd2ee7f4" translate="yes" xml:space="preserve">
          <source>android</source>
          <target state="translated">android</target>
        </trans-unit>
        <trans-unit id="2176178d9a1267f9972b60b688ea08f7721e0a9a" translate="yes" xml:space="preserve">
          <source>annotation classes</source>
          <target state="translated">주석 클래스</target>
        </trans-unit>
        <trans-unit id="a9e5f9afd9cad2a64404b10f028dccdce2a16c1b" translate="yes" xml:space="preserve">
          <source>annotationClass</source>
          <target state="translated">annotationClass</target>
        </trans-unit>
        <trans-unit id="516d70777b5ffab32d73d264205e523acd04b40b" translate="yes" xml:space="preserve">
          <source>annotations</source>
          <target state="translated">annotations</target>
        </trans-unit>
        <trans-unit id="64670be62ed95254299152ade38c05aeda22d367" translate="yes" xml:space="preserve">
          <source>annotations of type parameters and their bounds (TypeVariable.getAnnotation, TypeVariable.getAnnotations, TypeVariable.getDeclaredAnnotations, TypeVariable.getAnnotatedBounds)</source>
          <target state="translated">유형 매개 변수 및 해당 경계의 주석 (TypeVariable.getAnnotation, TypeVariable.getAnnotations, TypeVariable.getDeclaredAnnotations, TypeVariable.getAnnotatedBounds)</target>
        </trans-unit>
        <trans-unit id="c5fe0200d1c7a5139bd18fd22268c4ca8bf45e90" translate="yes" xml:space="preserve">
          <source>any</source>
          <target state="translated">any</target>
        </trans-unit>
        <trans-unit id="3ce55e2bcdc6298789158358ce12f5f130cd9f67" translate="yes" xml:space="preserve">
          <source>any value can be assigned to a variable of type &lt;code&gt;dynamic&lt;/code&gt; or passed to a function that takes &lt;code&gt;dynamic&lt;/code&gt; as a parameter;</source>
          <target state="translated">모든 값은 &lt;code&gt;dynamic&lt;/code&gt; 유형의 변수에 지정 하거나 &lt;code&gt;dynamic&lt;/code&gt; 을 매개 변수로 사용하는 함수에 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9ef26354a9cd113d5bb9e77251a6442203f1d937" translate="yes" xml:space="preserve">
          <source>apiVersion</source>
          <target state="translated">apiVersion</target>
        </trans-unit>
        <trans-unit id="db43bff34c78044870bc6b1ae2aa16902bb1bb8a" translate="yes" xml:space="preserve">
          <source>append</source>
          <target state="translated">append</target>
        </trans-unit>
        <trans-unit id="ab507f18acd407483a52f31652781818fbd14a1d" translate="yes" xml:space="preserve">
          <source>appendBytes</source>
          <target state="translated">appendBytes</target>
        </trans-unit>
        <trans-unit id="8817c05daf950ac138029a01716d816fe0899ed0" translate="yes" xml:space="preserve">
          <source>appendElement</source>
          <target state="translated">appendElement</target>
        </trans-unit>
        <trans-unit id="e1a2744c01610741f085816bb428eaf6f4e656db" translate="yes" xml:space="preserve">
          <source>appendLine</source>
          <target state="translated">appendLine</target>
        </trans-unit>
        <trans-unit id="ca324b92ff833ea88bc7fc47a1e26991c317f869" translate="yes" xml:space="preserve">
          <source>appendRange</source>
          <target state="translated">appendRange</target>
        </trans-unit>
        <trans-unit id="fb40f92769d2885e61f2ec793aab2cbe9c78ab13" translate="yes" xml:space="preserve">
          <source>appendText</source>
          <target state="translated">appendText</target>
        </trans-unit>
        <trans-unit id="be7d0f89ba62b578f1cd8a48d2181c321e1082e5" translate="yes" xml:space="preserve">
          <source>appendln</source>
          <target state="translated">appendln</target>
        </trans-unit>
        <trans-unit id="69f45da1683c501696ebfa086d25192af3807dc6" translate="yes" xml:space="preserve">
          <source>apply</source>
          <target state="translated">apply</target>
        </trans-unit>
        <trans-unit id="bbcfcdbce6005afa669d007b07c4e2fceb8d0c73" translate="yes" xml:space="preserve">
          <source>arena</source>
          <target state="translated">arena</target>
        </trans-unit>
        <trans-unit id="3030e728f154bf51419109efb93b6b8aeec9a976" translate="yes" xml:space="preserve">
          <source>args</source>
          <target state="translated">args</target>
        </trans-unit>
        <trans-unit id="536f158f6dfd529865dcb865a97bb16804e34d70" translate="yes" xml:space="preserve">
          <source>arguments</source>
          <target state="translated">arguments</target>
        </trans-unit>
        <trans-unit id="27e05c3c9e9a43c137fb422319f51eaa31dcc788" translate="yes" xml:space="preserve">
          <source>arrayListOf</source>
          <target state="translated">arrayListOf</target>
        </trans-unit>
        <trans-unit id="d905653b11628ddf35a4db09cf63c6574a0e9940" translate="yes" xml:space="preserve">
          <source>arrayMemberAt</source>
          <target state="translated">arrayMemberAt</target>
        </trans-unit>
        <trans-unit id="d8a74eaf1f377128625372aadc89b0669d9f016f" translate="yes" xml:space="preserve">
          <source>arrayOf</source>
          <target state="translated">arrayOf</target>
        </trans-unit>
        <trans-unit id="5e442a70649256130331363d00bfd867f2f6aea4" translate="yes" xml:space="preserve">
          <source>arrayOfNulls</source>
          <target state="translated">arrayOfNulls</target>
        </trans-unit>
        <trans-unit id="d81d34d583e9aa76ad36fe1f7e1e22b278d662c1" translate="yes" xml:space="preserve">
          <source>arrays of all supported types;</source>
          <target state="translated">지원되는 모든 유형의 배열;</target>
        </trans-unit>
        <trans-unit id="df83c488b2d2ab26dfa91c758f2512331d2125ef" translate="yes" xml:space="preserve">
          <source>arrays of the types listed above.</source>
          <target state="translated">위에 나열된 유형의 배열.</target>
        </trans-unit>
        <trans-unit id="1e5dcbb59b753cb1d46e234d8f6180285b8b86ad" translate="yes" xml:space="preserve">
          <source>artifact</source>
          <target state="translated">artifact</target>
        </trans-unit>
        <trans-unit id="ab720ee98d9979365e6a8fec7ce7fe39869af028" translate="yes" xml:space="preserve">
          <source>asArray</source>
          <target state="translated">asArray</target>
        </trans-unit>
        <trans-unit id="ef0d38e37d9b220dc38ac4d15047b9036e9f4b91" translate="yes" xml:space="preserve">
          <source>asByteArray</source>
          <target state="translated">asByteArray</target>
        </trans-unit>
        <trans-unit id="63eff28c1a1ef6a95d1e74370241d047e28d8cec" translate="yes" xml:space="preserve">
          <source>asCPointer</source>
          <target state="translated">asCPointer</target>
        </trans-unit>
        <trans-unit id="0e45d74f5614bb4a8e5f43564721408fa2dbb920" translate="yes" xml:space="preserve">
          <source>asDynamic</source>
          <target state="translated">asDynamic</target>
        </trans-unit>
        <trans-unit id="ce4b96eeed706b5367897aa5c5db2ff4ac736473" translate="yes" xml:space="preserve">
          <source>asIntArray</source>
          <target state="translated">asIntArray</target>
        </trans-unit>
        <trans-unit id="9e99ac38b58f4fa10bff54bbd222e78f6186d5ea" translate="yes" xml:space="preserve">
          <source>asIterable</source>
          <target state="translated">asIterable</target>
        </trans-unit>
        <trans-unit id="e71ae9e4ad515fde472ef89600713d9b76e680ca" translate="yes" xml:space="preserve">
          <source>asJavaRandom</source>
          <target state="translated">asJavaRandom</target>
        </trans-unit>
        <trans-unit id="f1cac092fd189aaf298d324c5a51e6a304478bb5" translate="yes" xml:space="preserve">
          <source>asKotlinRandom</source>
          <target state="translated">asKotlinRandom</target>
        </trans-unit>
        <trans-unit id="bf8a7232abf480c007dce7dbe6292b237efac880" translate="yes" xml:space="preserve">
          <source>asList</source>
          <target state="translated">asList</target>
        </trans-unit>
        <trans-unit id="64d0ee06c1d2274bedfc91565b8bf7403feb5afb" translate="yes" xml:space="preserve">
          <source>asLongArray</source>
          <target state="translated">asLongArray</target>
        </trans-unit>
        <trans-unit id="6c018f8eec18a67d5543953d61fe034eba1c8abc" translate="yes" xml:space="preserve">
          <source>asReversed</source>
          <target state="translated">asReversed</target>
        </trans-unit>
        <trans-unit id="069859eec86c870993e1df280ba0be8034e2e99f" translate="yes" xml:space="preserve">
          <source>asSequence</source>
          <target state="translated">asSequence</target>
        </trans-unit>
        <trans-unit id="5163452393a2a9f6743708da2f93c906a5d10221" translate="yes" xml:space="preserve">
          <source>asShortArray</source>
          <target state="translated">asShortArray</target>
        </trans-unit>
        <trans-unit id="73a17f5408a2d36a1032555fdc776cd55c1d9b33" translate="yes" xml:space="preserve">
          <source>asStableRef</source>
          <target state="translated">asStableRef</target>
        </trans-unit>
        <trans-unit id="8f4eed36381ae3f17c2960a90a50a18032e4e196" translate="yes" xml:space="preserve">
          <source>asStream</source>
          <target state="translated">asStream</target>
        </trans-unit>
        <trans-unit id="a52b52e2966b5afbea285b61914693557858b0ed" translate="yes" xml:space="preserve">
          <source>asUByteArray</source>
          <target state="translated">asUByteArray</target>
        </trans-unit>
        <trans-unit id="24e8a6d61fdac5969805611913e94d1ec94f0621" translate="yes" xml:space="preserve">
          <source>asUCPointer</source>
          <target state="translated">asUCPointer</target>
        </trans-unit>
        <trans-unit id="3f59c8d09b7970397cde7f0a5949a76f692ac260" translate="yes" xml:space="preserve">
          <source>asUIntArray</source>
          <target state="translated">asUIntArray</target>
        </trans-unit>
        <trans-unit id="65a04210d4df3081c28459dfa1e8063e25fc0ad1" translate="yes" xml:space="preserve">
          <source>asULongArray</source>
          <target state="translated">asULongArray</target>
        </trans-unit>
        <trans-unit id="2ea87750bd9d24f78f0f21e53e669643cbd720c8" translate="yes" xml:space="preserve">
          <source>asUShortArray</source>
          <target state="translated">asUShortArray</target>
        </trans-unit>
        <trans-unit id="f6b3e9a1435d3f432e7a6b9003583871fcb26de3" translate="yes" xml:space="preserve">
          <source>asin</source>
          <target state="translated">asin</target>
        </trans-unit>
        <trans-unit id="d7d3dd685f3472024a78ef2982b478006acd6afc" translate="yes" xml:space="preserve">
          <source>asinh</source>
          <target state="translated">asinh</target>
        </trans-unit>
        <trans-unit id="64b5daad5073849378993ba34e058d7008293097" translate="yes" xml:space="preserve">
          <source>assert</source>
          <target state="translated">assert</target>
        </trans-unit>
        <trans-unit id="3ef74078d06ba61e79bd2aa5816e90a3035fcea9" translate="yes" xml:space="preserve">
          <source>assignment operator</source>
          <target state="translated">할당 연산자</target>
        </trans-unit>
        <trans-unit id="b87ccad5eb57f5753cdd2cbb350d6eeb79e86ff3" translate="yes" xml:space="preserve">
          <source>assignments: &lt;code&gt;+=&lt;/code&gt;, &lt;code&gt;-=&lt;/code&gt;, &lt;code&gt;*=&lt;/code&gt;, &lt;code&gt;/=&lt;/code&gt;, &lt;code&gt;%=&lt;/code&gt;</source>
          <target state="translated">과제 : &lt;code&gt;+=&lt;/code&gt; , &lt;code&gt;-=&lt;/code&gt; , &lt;code&gt;*=&lt;/code&gt; , &lt;code&gt;/=&lt;/code&gt; , &lt;code&gt;%=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="adb833ac38f3ed04b28b2dd15e3f056a47ce6992" translate="yes" xml:space="preserve">
          <source>associate</source>
          <target state="translated">associate</target>
        </trans-unit>
        <trans-unit id="492383d75e076a97169f3cfd2d198345b36e7f06" translate="yes" xml:space="preserve">
          <source>associateBy</source>
          <target state="translated">associateBy</target>
        </trans-unit>
        <trans-unit id="3152cc7371b60856160675b6472dfcd66413a76a" translate="yes" xml:space="preserve">
          <source>associateByTo</source>
          <target state="translated">associateByTo</target>
        </trans-unit>
        <trans-unit id="785bdd622117fac8406a5fdff91816c3cfd43f56" translate="yes" xml:space="preserve">
          <source>associateTo</source>
          <target state="translated">associateTo</target>
        </trans-unit>
        <trans-unit id="26d8a5e60bd406adec4d3eac45cbceed5a92aa6d" translate="yes" xml:space="preserve">
          <source>associateWith</source>
          <target state="translated">associateWith</target>
        </trans-unit>
        <trans-unit id="eeb3b727083a766bc8dd1adbdd70c07e5e664a54" translate="yes" xml:space="preserve">
          <source>associateWithTo</source>
          <target state="translated">associateWithTo</target>
        </trans-unit>
        <trans-unit id="f077504d04fa1bc96b042497b434fd33fabdf43d" translate="yes" xml:space="preserve">
          <source>atan</source>
          <target state="translated">atan</target>
        </trans-unit>
        <trans-unit id="b1a7357ef61ecd1781b4633dc3e33a383686041c" translate="yes" xml:space="preserve">
          <source>atan2</source>
          <target state="translated">atan2</target>
        </trans-unit>
        <trans-unit id="7684baa497f7669edce3de05984655b59aa5aa40" translate="yes" xml:space="preserve">
          <source>atanh</source>
          <target state="translated">atanh</target>
        </trans-unit>
        <trans-unit id="a305609015560ef1d1dc15883dd1254dec4d7db5" translate="yes" xml:space="preserve">
          <source>atomicLazy</source>
          <target state="translated">atomicLazy</target>
        </trans-unit>
        <trans-unit id="13ce071f68958ab463698853189d6361000db5c2" translate="yes" xml:space="preserve">
          <source>attach</source>
          <target state="translated">attach</target>
        </trans-unit>
        <trans-unit id="4c0911b8920f82dac2fb09c903722d1748201846" translate="yes" xml:space="preserve">
          <source>autoreleasepool</source>
          <target state="translated">autoreleasepool</target>
        </trans-unit>
        <trans-unit id="93a8018f99fa5bd70a93649584b1721492478520" translate="yes" xml:space="preserve">
          <source>average</source>
          <target state="translated">average</target>
        </trans-unit>
        <trans-unit id="1ac5f1ddd4769fb1faec2d5930ca9560e42d074e" translate="yes" xml:space="preserve">
          <source>backing</source>
          <target state="translated">backing</target>
        </trans-unit>
        <trans-unit id="c27535d68e3c4f9ec840201de0e324dd07d2e12f" translate="yes" xml:space="preserve">
          <source>basic types &lt;code&gt;char, int, float, double&lt;/code&gt; with modifiers &lt;code&gt;signed, unsigned, short, long&lt;/code&gt;</source>
          <target state="translated">기본 유형 &lt;code&gt;char, int, float, double&lt;/code&gt; 수정 자 &lt;code&gt;signed, unsigned, short, long&lt;/code&gt; double , 부호없는, 짧고 긴</target>
        </trans-unit>
        <trans-unit id="6b104e0469474942ad8dcc6f899d7f77ebcce516" translate="yes" xml:space="preserve">
          <source>beforeChange</source>
          <target state="translated">beforeChange</target>
        </trans-unit>
        <trans-unit id="82c462b28f73e21ac4148b976c1776086427c38d" translate="yes" xml:space="preserve">
          <source>binary: &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;===&lt;/code&gt;, &lt;code&gt;!==&lt;/code&gt;, &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;, &lt;code&gt;||&lt;/code&gt;</source>
          <target state="translated">이진 : &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;-&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;/&lt;/code&gt; , &lt;code&gt;%&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;code&gt;&amp;gt;=&lt;/code&gt; , &lt;code&gt;&amp;lt;=&lt;/code&gt; , &lt;code&gt;==&lt;/code&gt; , &lt;code&gt;!=&lt;/code&gt; , &lt;code&gt;===&lt;/code&gt; , &lt;code&gt;!==&lt;/code&gt; , &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; , &lt;code&gt;||&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f3cc4f367307176acea5002ccd595adcc519713" translate="yes" xml:space="preserve">
          <source>binaryName</source>
          <target state="translated">binaryName</target>
        </trans-unit>
        <trans-unit id="8042cb28bbb155697d8bb072f5ebd04f15aec9af" translate="yes" xml:space="preserve">
          <source>binarySearch</source>
          <target state="translated">binarySearch</target>
        </trans-unit>
        <trans-unit id="fc684d6edaa261e7e93ae290b1b10c84c3966f6d" translate="yes" xml:space="preserve">
          <source>binarySearchBy</source>
          <target state="translated">binarySearchBy</target>
        </trans-unit>
        <trans-unit id="b96c0e32d06874a40880ecad50556875bc80bc20" translate="yes" xml:space="preserve">
          <source>bitness</source>
          <target state="translated">bitness</target>
        </trans-unit>
        <trans-unit id="6e400cdec276ecd73a93c1c1130666ba128189b4" translate="yes" xml:space="preserve">
          <source>bitsToDouble</source>
          <target state="translated">bitsToDouble</target>
        </trans-unit>
        <trans-unit id="331a21cc944fd678c3acad54bbf0c1d7bf7aa638" translate="yes" xml:space="preserve">
          <source>bitsToFloat</source>
          <target state="translated">bitsToFloat</target>
        </trans-unit>
        <trans-unit id="a8f74cbe00ea111142071a1b1632fc9272a6449e" translate="yes" xml:space="preserve">
          <source>boolean type (from &lt;a href=&quot;https://en.wikipedia.org/wiki/C99&quot;&gt;C99&lt;/a&gt;)</source>
          <target state="translated">부울 유형 ( &lt;a href=&quot;https://en.wikipedia.org/wiki/C99&quot;&gt;C99&lt;/a&gt; 부터 )</target>
        </trans-unit>
        <trans-unit id="efda1de9a727d41ac33cf706893615562374cde4" translate="yes" xml:space="preserve">
          <source>booleanArrayOf</source>
          <target state="translated">booleanArrayOf</target>
        </trans-unit>
        <trans-unit id="a2b74db4ba5c68786e827e2f19becde24dbb23a7" translate="yes" xml:space="preserve">
          <source>breakpoints</source>
          <target state="translated">breakpoints</target>
        </trans-unit>
        <trans-unit id="97094b0292daec2b844f838ca27bfa054b317e5f" translate="yes" xml:space="preserve">
          <source>buffered</source>
          <target state="translated">buffered</target>
        </trans-unit>
        <trans-unit id="65f3a29e2ec07894b86d02f9237a18668ce416f7" translate="yes" xml:space="preserve">
          <source>bufferedReader</source>
          <target state="translated">bufferedReader</target>
        </trans-unit>
        <trans-unit id="6652136a505b1608bd606c74496ad160f0eb93ef" translate="yes" xml:space="preserve">
          <source>bufferedWriter</source>
          <target state="translated">bufferedWriter</target>
        </trans-unit>
        <trans-unit id="b2e637c95692cb6101d2099baa5f2137a8310baf" translate="yes" xml:space="preserve">
          <source>buildIterator</source>
          <target state="translated">buildIterator</target>
        </trans-unit>
        <trans-unit id="f6731caed6dbedff8cbd4c482cf50a8df12d4a69" translate="yes" xml:space="preserve">
          <source>buildList</source>
          <target state="translated">buildList</target>
        </trans-unit>
        <trans-unit id="c076490c450304c8d2663264e3ee23de0c8da121" translate="yes" xml:space="preserve">
          <source>buildMap</source>
          <target state="translated">buildMap</target>
        </trans-unit>
        <trans-unit id="c80efcfaa3b886f53022fa4b31e3d8985b4df0ef" translate="yes" xml:space="preserve">
          <source>buildSequence</source>
          <target state="translated">buildSequence</target>
        </trans-unit>
        <trans-unit id="8aac1ffdbff0c0e5254986786438c17a67adf1d3" translate="yes" xml:space="preserve">
          <source>buildSet</source>
          <target state="translated">buildSet</target>
        </trans-unit>
        <trans-unit id="2236a0ed8fdc573b8dfb79fcffdad5c8ad0b6b14" translate="yes" xml:space="preserve">
          <source>buildString</source>
          <target state="translated">buildString</target>
        </trans-unit>
        <trans-unit id="472da2b94e9fa87badd16a55e1eaec4f53ffc52a" translate="yes" xml:space="preserve">
          <source>bullet</source>
          <target state="translated">bullet</target>
        </trans-unit>
        <trans-unit id="e3cd898db74123f7a92f0efee2dd1b607210b957" translate="yes" xml:space="preserve">
          <source>by address</source>
          <target state="translated">주소로</target>
        </trans-unit>
        <trans-unit id="b79a491dbfb9830afe7abc05c4a0383fc55937dc" translate="yes" xml:space="preserve">
          <source>by location</source>
          <target state="translated">위치 별</target>
        </trans-unit>
        <trans-unit id="9afe250079b26fa35758d4273f10ce01c57f019a" translate="yes" xml:space="preserve">
          <source>by location (filename, line number)</source>
          <target state="translated">위치 (파일 이름, 줄 번호)</target>
        </trans-unit>
        <trans-unit id="2c5bb516b1987dabf813c98e4515eda07d81aaa5" translate="yes" xml:space="preserve">
          <source>by name</source>
          <target state="translated">이름으로</target>
        </trans-unit>
        <trans-unit id="2b91e636819fa057b859040dd689ad0f95d1256a" translate="yes" xml:space="preserve">
          <source>by name &lt;strong&gt;unusable&lt;/strong&gt;, because &lt;code&gt;:&lt;/code&gt; is a separator for the breakpoint by location</source>
          <target state="translated">다음 과 같은 이유로 이름을 &lt;strong&gt;사용할 수 없음 &lt;/strong&gt; &lt;code&gt;:&lt;/code&gt; 위치 별 중단 점의 구분 기호</target>
        </trans-unit>
        <trans-unit id="4e9f386e8b7bff0657ab06522bb098c64369a162" translate="yes" xml:space="preserve">
          <source>by regex</source>
          <target state="translated">정규식으로</target>
        </trans-unit>
        <trans-unit id="f53dc6133390c7038078f9cdd6e54cb3e717a2cd" translate="yes" xml:space="preserve">
          <source>by regex, you might find it useful for debugging generated artifacts, like lambda etc. (where used &lt;code&gt;#&lt;/code&gt; symbol in name).</source>
          <target state="translated">정규식을 사용하면 람다 등과 같은 생성 된 아티팩트를 디버깅하는 데 유용 할 수 있습니다 ( 이름에 &lt;code&gt;#&lt;/code&gt; 기호 사용 ).</target>
        </trans-unit>
        <trans-unit id="a688a18c2666a0402207cb7faf3711f300c05bd5" translate="yes" xml:space="preserve">
          <source>byteArrayOf</source>
          <target state="translated">byteArrayOf</target>
        </trans-unit>
        <trans-unit id="fada3e8fa24032b1fe199c05642ad9d793539270" translate="yes" xml:space="preserve">
          <source>byteInputStream</source>
          <target state="translated">byteInputStream</target>
        </trans-unit>
        <trans-unit id="f06b14ef7a2dba0a332a19a33e72a8608e7ab4f9" translate="yes" xml:space="preserve">
          <source>bytecodeVersion</source>
          <target state="translated">bytecodeVersion</target>
        </trans-unit>
        <trans-unit id="f0a282e1924b81444a3d90d4c441e8bb928d5420" translate="yes" xml:space="preserve">
          <source>cValue</source>
          <target state="translated">cValue</target>
        </trans-unit>
        <trans-unit id="a28e5d29c939781fec2f0cda6ee292448031a94c" translate="yes" xml:space="preserve">
          <source>cValuesOf</source>
          <target state="translated">cValuesOf</target>
        </trans-unit>
        <trans-unit id="bc8d8647b02deea0ab3e715c220d041ee78cc19d" translate="yes" xml:space="preserve">
          <source>call</source>
          <target state="translated">call</target>
        </trans-unit>
        <trans-unit id="445dd281e571b2e2e32bfd24d8dedc854d8b5873" translate="yes" xml:space="preserve">
          <source>callBy</source>
          <target state="translated">callBy</target>
        </trans-unit>
        <trans-unit id="ac868ba9d50bf1ba5b416c6800e295946ffe3cfc" translate="yes" xml:space="preserve">
          <source>callContinuation0</source>
          <target state="translated">callContinuation0</target>
        </trans-unit>
        <trans-unit id="baedbd4b456d84bd0c5687b440fbe6e170e10d64" translate="yes" xml:space="preserve">
          <source>callContinuation1</source>
          <target state="translated">callContinuation1</target>
        </trans-unit>
        <trans-unit id="dc6d8c28a181004ee0794076360f01827e4ecc3d" translate="yes" xml:space="preserve">
          <source>callContinuation2</source>
          <target state="translated">callContinuation2</target>
        </trans-unit>
        <trans-unit id="6aaaac7ee923b22b2ce449c7cd95dac24972c121" translate="yes" xml:space="preserve">
          <source>callRecursive</source>
          <target state="translated">callRecursive</target>
        </trans-unit>
        <trans-unit id="0c478a0e0cdf9a20b20ffaa77dabaf7737891fd2" translate="yes" xml:space="preserve">
          <source>callSuspend</source>
          <target state="translated">callSuspend</target>
        </trans-unit>
        <trans-unit id="4c1f31c6dc33f805508fdab71fb21f28f5b5d2d9" translate="yes" xml:space="preserve">
          <source>callSuspendBy</source>
          <target state="translated">callSuspendBy</target>
        </trans-unit>
        <trans-unit id="9f0cb59e27afa5e4b4e6dcbdc78e6afb456b8d1f" translate="yes" xml:space="preserve">
          <source>calls another constructor of the same class from a secondary constructor</source>
          <target state="translated">보조 생성자에서 동일한 클래스의 다른 생성자를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="90a529f5a8fd36a258cbc559cd2156a88c93765a" translate="yes" xml:space="preserve">
          <source>calls the superclass constructor from a secondary constructor</source>
          <target state="translated">보조 생성자에서 수퍼 클래스 생성자를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="16b85c5f0ab4177d285025257b578591066f42be" translate="yes" xml:space="preserve">
          <source>callsInPlace</source>
          <target state="translated">callsInPlace</target>
        </trans-unit>
        <trans-unit id="1ff2eacfe3b53a49b113d9fa808b0fc018f58deb" translate="yes" xml:space="preserve">
          <source>can be called from Swift like</source>
          <target state="translated">스위프트에서 호출 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="46b1abcacdec284ac44f1a3179dc30be061b8cc1" translate="yes" xml:space="preserve">
          <source>can be described like this:</source>
          <target state="translated">다음과 같이 설명 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8b552f57e1040585a906ef8259c0b2356703bcd1" translate="yes" xml:space="preserve">
          <source>canAccessUnaligned</source>
          <target state="translated">canAccessUnaligned</target>
        </trans-unit>
        <trans-unit id="7cb1f56d3fbe09e809244fc8e13671cd876e3860" translate="yes" xml:space="preserve">
          <source>capacity</source>
          <target state="translated">capacity</target>
        </trans-unit>
        <trans-unit id="d01a341706c2a5c67a30eb227bba3d0fd7ace906" translate="yes" xml:space="preserve">
          <source>capitalize</source>
          <target state="translated">capitalize</target>
        </trans-unit>
        <trans-unit id="39aa12e6d633fbb40d65f75a3c76898807ac424e" translate="yes" xml:space="preserve">
          <source>cast</source>
          <target state="translated">cast</target>
        </trans-unit>
        <trans-unit id="9ebad64e5d2b9542779537fce0354f34c099e7ff" translate="yes" xml:space="preserve">
          <source>catch</source>
          <target state="translated">catch</target>
        </trans-unit>
        <trans-unit id="5ccbf9c9c5fc1bc34df8238a97094968f38f5165" translate="yes" xml:space="preserve">
          <source>category</source>
          <target state="translated">category</target>
        </trans-unit>
        <trans-unit id="ccadf5de3d738fbe992636fbe8daf8e3fae6b80c" translate="yes" xml:space="preserve">
          <source>cause</source>
          <target state="translated">cause</target>
        </trans-unit>
        <trans-unit id="613af80c25dfbc9ef75ce605280571b9a518d632" translate="yes" xml:space="preserve">
          <source>ceil</source>
          <target state="translated">ceil</target>
        </trans-unit>
        <trans-unit id="db9149cb38bcd8be8c1fef9f64d475c1e757fd06" translate="yes" xml:space="preserve">
          <source>cent</source>
          <target state="translated">cent</target>
        </trans-unit>
        <trans-unit id="71fafc4e2fc1e47e234762a96b80512b6b5534c2" translate="yes" xml:space="preserve">
          <source>char</source>
          <target state="translated">char</target>
        </trans-unit>
        <trans-unit id="c86952a91f0ea0ff04844cf9012341bc55975c9b" translate="yes" xml:space="preserve">
          <source>charArrayOf</source>
          <target state="translated">charArrayOf</target>
        </trans-unit>
        <trans-unit id="dcb16d9aacb079fe42fbde349c3319de8033ddd1" translate="yes" xml:space="preserve">
          <source>charset</source>
          <target state="translated">charset</target>
        </trans-unit>
        <trans-unit id="d56d985300d4b52eb6e189be006f44f8d23c5ec9" translate="yes" xml:space="preserve">
          <source>check</source>
          <target state="translated">check</target>
        </trans-unit>
        <trans-unit id="f11710b4dae8a8c399758907e308ad07b0c0f22c" translate="yes" xml:space="preserve">
          <source>checkNotNull</source>
          <target state="translated">checkNotNull</target>
        </trans-unit>
        <trans-unit id="f77e1c7312a0e2d01717ade80605f0a5c28e7ade" translate="yes" xml:space="preserve">
          <source>checks that &lt;a href=&quot;typecasts#is-and-is-operators&quot;&gt;a value does NOT have a certain type&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;typecasts#is-and-is-operators&quot;&gt;값에 특정 유형이 없는지&lt;/a&gt; 확인</target>
        </trans-unit>
        <trans-unit id="151dfd4e5075c8c3c5b69d8ccfc88c9a8179609e" translate="yes" xml:space="preserve">
          <source>checks that &lt;a href=&quot;typecasts#is-and-is-operators&quot;&gt;a value has a certain type&lt;/a&gt;</source>
          <target state="translated">것을 확인 &lt;a href=&quot;typecasts#is-and-is-operators&quot;&gt;값이 특정 유형을 갖는다&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7db2323af37e1841807c6590cd0597b920564b93" translate="yes" xml:space="preserve">
          <source>chunked</source>
          <target state="translated">chunked</target>
        </trans-unit>
        <trans-unit id="9458c755bafb5ff2e67b664e7cb4fd1bc41079a9" translate="yes" xml:space="preserve">
          <source>chunkedSequence</source>
          <target state="translated">chunkedSequence</target>
        </trans-unit>
        <trans-unit id="fe893c1b1c6674860acbe35e00a0ed423dd0c10f" translate="yes" xml:space="preserve">
          <source>cinterop tool specifics</source>
          <target state="translated">cinterop 도구 사양</target>
        </trans-unit>
        <trans-unit id="81599da666db16a57e907a1dc7c525c9f9e66c83" translate="yes" xml:space="preserve">
          <source>classes (&lt;code&gt;Foo::class&lt;/code&gt;);</source>
          <target state="translated">클래스 ( &lt;code&gt;Foo::class&lt;/code&gt; );</target>
        </trans-unit>
        <trans-unit id="49061e96f40a33a23aa888e4a796825e63255147" translate="yes" xml:space="preserve">
          <source>classifier</source>
          <target state="translated">classifier</target>
        </trans-unit>
        <trans-unit id="168cbb2ea52b9e34d271accecfa7d7951e948a99" translate="yes" xml:space="preserve">
          <source>clear</source>
          <target state="translated">clear</target>
        </trans-unit>
        <trans-unit id="5e0072329d5085c5bc5c23c2fa873dd42900958b" translate="yes" xml:space="preserve">
          <source>clone</source>
          <target state="translated">clone</target>
        </trans-unit>
        <trans-unit id="7625372a2bd40da1707415eeb0c551cc7947066c" translate="yes" xml:space="preserve">
          <source>clone()</source>
          <target state="translated">clone()</target>
        </trans-unit>
        <trans-unit id="e6fb06210fafc02fd7479ddbed2d042cc3a5155e" translate="yes" xml:space="preserve">
          <source>code</source>
          <target state="translated">code</target>
        </trans-unit>
        <trans-unit id="158cd4c0aed856c3d404e1e0c995469cfa3e1f25" translate="yes" xml:space="preserve">
          <source>codePointAt</source>
          <target state="translated">codePointAt</target>
        </trans-unit>
        <trans-unit id="021cc3c427d434371c889a3536bd9264e4077386" translate="yes" xml:space="preserve">
          <source>codePointBefore</source>
          <target state="translated">codePointBefore</target>
        </trans-unit>
        <trans-unit id="31fa06fe9b225f5f842aa30f406945b612019e54" translate="yes" xml:space="preserve">
          <source>codePointCount</source>
          <target state="translated">codePointCount</target>
        </trans-unit>
        <trans-unit id="531ae9a98e89350e1c370cd5218408b100ffc4a8" translate="yes" xml:space="preserve">
          <source>coerceAtLeast</source>
          <target state="translated">coerceAtLeast</target>
        </trans-unit>
        <trans-unit id="8d5c45b96d9c0f958bd81774e66d79544915e3c4" translate="yes" xml:space="preserve">
          <source>coerceAtMost</source>
          <target state="translated">coerceAtMost</target>
        </trans-unit>
        <trans-unit id="fd7345d22350d5e6779b421d4b123616f247f574" translate="yes" xml:space="preserve">
          <source>coerceIn</source>
          <target state="translated">coerceIn</target>
        </trans-unit>
        <trans-unit id="0d9fd4710f4fde778f18def239264968f33eaa96" translate="yes" xml:space="preserve">
          <source>collections of all supported types: &lt;code&gt;List&lt;/code&gt; (mapped to &lt;code&gt;ArrayList&lt;/code&gt;), &lt;code&gt;Set&lt;/code&gt; (mapped to &lt;code&gt;LinkedHashSet&lt;/code&gt;), &lt;code&gt;Map&lt;/code&gt; (mapped to &lt;code&gt;LinkedHashMap&lt;/code&gt;);</source>
          <target state="translated">지원되는 모든 유형의 컬렉션 : &lt;code&gt;List&lt;/code&gt; ( &lt;code&gt;ArrayList&lt;/code&gt; 에 매핑 됨 ), &lt;code&gt;Set&lt;/code&gt; ( &lt;code&gt;LinkedHashSet&lt;/code&gt; 에 매핑 됨 ), &lt;code&gt;Map&lt;/code&gt; ( &lt;code&gt;LinkedHashMap&lt;/code&gt; 에 매핑 됨 );</target>
        </trans-unit>
        <trans-unit id="94c8c21d08740f5da9eaa38d1f175c592692f0d1" translate="yes" xml:space="preserve">
          <source>common</source>
          <target state="translated">common</target>
        </trans-unit>
        <trans-unit id="7294570a98a0a3137cbf69e1ae7998f079404e1f" translate="yes" xml:space="preserve">
          <source>commonPrefixWith</source>
          <target state="translated">commonPrefixWith</target>
        </trans-unit>
        <trans-unit id="93f0a100090742f94b5bc606ae89cb3d1f26333b" translate="yes" xml:space="preserve">
          <source>commonSuffixWith</source>
          <target state="translated">commonSuffixWith</target>
        </trans-unit>
        <trans-unit id="f53207eefc4e801059d4386695738682735acaeb" translate="yes" xml:space="preserve">
          <source>commonjs</source>
          <target state="translated">commonjs</target>
        </trans-unit>
        <trans-unit id="628db33c85725e19cac7696f478b404f6c50bddf" translate="yes" xml:space="preserve">
          <source>companionObject</source>
          <target state="translated">companionObject</target>
        </trans-unit>
        <trans-unit id="3035f80fd987cdfec5402d4be5c0f4a2b40c011b" translate="yes" xml:space="preserve">
          <source>companionObjectInstance</source>
          <target state="translated">companionObjectInstance</target>
        </trans-unit>
        <trans-unit id="b64ca250f492e3f0444ad32b68be5f60a163bede" translate="yes" xml:space="preserve">
          <source>compare</source>
          <target state="translated">compare</target>
        </trans-unit>
        <trans-unit id="eb5ddbb25f237dd25401f991b0c65126bfcc865d" translate="yes" xml:space="preserve">
          <source>compareAndSet</source>
          <target state="translated">compareAndSet</target>
        </trans-unit>
        <trans-unit id="03a6e40fc9569e683aff9a6506b60195d3f2c12e" translate="yes" xml:space="preserve">
          <source>compareAndSwap</source>
          <target state="translated">compareAndSwap</target>
        </trans-unit>
        <trans-unit id="a63703c14ffcd35500bed3089b2e0687df85ada7" translate="yes" xml:space="preserve">
          <source>compareBy</source>
          <target state="translated">compareBy</target>
        </trans-unit>
        <trans-unit id="b6db914ffb94fe1893134888655baad4f6b9fd21" translate="yes" xml:space="preserve">
          <source>compareByDescending</source>
          <target state="translated">compareByDescending</target>
        </trans-unit>
        <trans-unit id="77097d5bfead84fc1058447e53f202c5ce54013e" translate="yes" xml:space="preserve">
          <source>compareTo</source>
          <target state="translated">compareTo</target>
        </trans-unit>
        <trans-unit id="f0d8fc33a240c7993378c53a3b9466a9362146af" translate="yes" xml:space="preserve">
          <source>compareValues</source>
          <target state="translated">compareValues</target>
        </trans-unit>
        <trans-unit id="5e3bc1006b2e4de06f0d54f96f9e66982ecb8c88" translate="yes" xml:space="preserve">
          <source>compareValuesBy</source>
          <target state="translated">compareValuesBy</target>
        </trans-unit>
        <trans-unit id="e026fe2f4131d8c5feabb63611b964871733f25b" translate="yes" xml:space="preserve">
          <source>compiled for all platforms</source>
          <target state="translated">모든 플랫폼을 위해 컴파일</target>
        </trans-unit>
        <trans-unit id="562a717296ca0dd2014669605429392ed62dbb07" translate="yes" xml:space="preserve">
          <source>compiled it to Android Jar</source>
          <target state="translated">Android Jar로 컴파일했습니다.</target>
        </trans-unit>
        <trans-unit id="d510b1eb36fdf7503e41930966ccd925b9c65bfb" translate="yes" xml:space="preserve">
          <source>compiled it to iOS Framework</source>
          <target state="translated">iOS 프레임 워크로 컴파일</target>
        </trans-unit>
        <trans-unit id="d8c796c39dd98d7588e4cb134c5c585563c5b656" translate="yes" xml:space="preserve">
          <source>compilerPlugins</source>
          <target state="translated">compilerPlugins</target>
        </trans-unit>
        <trans-unit id="59913969497da18e499f9043f2c32f5e3215bdc6" translate="yes" xml:space="preserve">
          <source>component1</source>
          <target state="translated">component1</target>
        </trans-unit>
        <trans-unit id="54ac2124e7ef0796441f50c3c712489f7bdaa6d6" translate="yes" xml:space="preserve">
          <source>component1 corresponds to the value of the first group, component2 &amp;mdash; of the second, and so on.</source>
          <target state="translated">component1은 첫 번째 그룹의 값, 두 번째의 component2-등에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="83765039b4251fcb697ad1a387b77f2f2f6e7a5e" translate="yes" xml:space="preserve">
          <source>component10</source>
          <target state="translated">component10</target>
        </trans-unit>
        <trans-unit id="4e1774e796024f5311d0200933d91134930e5df5" translate="yes" xml:space="preserve">
          <source>component2</source>
          <target state="translated">component2</target>
        </trans-unit>
        <trans-unit id="a17e8d97920a0948ef3167449a05b07ff6c6fa1f" translate="yes" xml:space="preserve">
          <source>component3</source>
          <target state="translated">component3</target>
        </trans-unit>
        <trans-unit id="b8feab9806375754e69c10231ada337fb6d42c87" translate="yes" xml:space="preserve">
          <source>component4</source>
          <target state="translated">component4</target>
        </trans-unit>
        <trans-unit id="0bba58902df716eba70c0f535f7e0a473e1e4d06" translate="yes" xml:space="preserve">
          <source>component5</source>
          <target state="translated">component5</target>
        </trans-unit>
        <trans-unit id="9e5c0cfce1c8ce2bb3107ce9ec32a1615ac3fcc2" translate="yes" xml:space="preserve">
          <source>component6</source>
          <target state="translated">component6</target>
        </trans-unit>
        <trans-unit id="7d792ba5416fd0a0d388a05a0f299e6f4608bb30" translate="yes" xml:space="preserve">
          <source>component7</source>
          <target state="translated">component7</target>
        </trans-unit>
        <trans-unit id="b48a6af65a889e820d8ac2d288429627f23783eb" translate="yes" xml:space="preserve">
          <source>component8</source>
          <target state="translated">component8</target>
        </trans-unit>
        <trans-unit id="ef75a94902a3e58e52673c3bd1093fc7fff23d9e" translate="yes" xml:space="preserve">
          <source>component9</source>
          <target state="translated">component9</target>
        </trans-unit>
        <trans-unit id="76123f93eb74a368e334fed0c0c68c9a2b0e48f2" translate="yes" xml:space="preserve">
          <source>computeNext</source>
          <target state="translated">computeNext</target>
        </trans-unit>
        <trans-unit id="49ba358c3272c2db40fc6ab2c103669678628b68" translate="yes" xml:space="preserve">
          <source>concat</source>
          <target state="translated">concat</target>
        </trans-unit>
        <trans-unit id="6957686ec711e8a3f8573ceb732e5f560cc9234b" translate="yes" xml:space="preserve">
          <source>concatToString</source>
          <target state="translated">concatToString</target>
        </trans-unit>
        <trans-unit id="e2346381bb8eb382eb8b3877a9d3838996c5ca2d" translate="yes" xml:space="preserve">
          <source>console</source>
          <target state="translated">console</target>
        </trans-unit>
        <trans-unit id="b78f13cf32ca4265dde3b815eb714d396c030088" translate="yes" xml:space="preserve">
          <source>constrainOnce</source>
          <target state="translated">constrainOnce</target>
        </trans-unit>
        <trans-unit id="8be62a6135807cf051939508ab5eb49bbbfd3ec9" translate="yes" xml:space="preserve">
          <source>constructors</source>
          <target state="translated">constructors</target>
        </trans-unit>
        <trans-unit id="d5ef77d58ae5369cbbe90014845216878b9590eb" translate="yes" xml:space="preserve">
          <source>constructors have the name &quot;&quot;,</source>
          <target state="translated">생성자는 &quot;&quot;,</target>
        </trans-unit>
        <trans-unit id="4bbe204fd0282132c68b4dd4d9ab41a1c2b3d23b" translate="yes" xml:space="preserve">
          <source>consume</source>
          <target state="translated">consume</target>
        </trans-unit>
        <trans-unit id="caeb909ae4ff4ee25a0ff0d476946ed256f2aee1" translate="yes" xml:space="preserve">
          <source>contains</source>
          <target state="translated">contains</target>
        </trans-unit>
        <trans-unit id="7d08c6da7a6ef364dea4c86906f2bddcd8cbc3cb" translate="yes" xml:space="preserve">
          <source>contains(), indexOf(), and lastIndexOf() on floating-point arrays</source>
          <target state="translated">부동 소수점 배열의 contains (), indexOf () 및 lastIndexOf ()</target>
        </trans-unit>
        <trans-unit id="fb64fd53b867873009338f11857a4d9b2ae9d5fe" translate="yes" xml:space="preserve">
          <source>containsAll</source>
          <target state="translated">containsAll</target>
        </trans-unit>
        <trans-unit id="d60f0013704a48405ea3eaaf4cba6811e8b77bae" translate="yes" xml:space="preserve">
          <source>containsKey</source>
          <target state="translated">containsKey</target>
        </trans-unit>
        <trans-unit id="0a43087424e3471efb5e254e9be62d6808ae379b" translate="yes" xml:space="preserve">
          <source>containsMatchIn</source>
          <target state="translated">containsMatchIn</target>
        </trans-unit>
        <trans-unit id="dcf3e8a7e8013b219edf7ce7101bd04c1cc29909" translate="yes" xml:space="preserve">
          <source>containsValue</source>
          <target state="translated">containsValue</target>
        </trans-unit>
        <trans-unit id="e4f8a9806acc36efea951353cab26b689a1900d4" translate="yes" xml:space="preserve">
          <source>contentDeepEquals</source>
          <target state="translated">contentDeepEquals</target>
        </trans-unit>
        <trans-unit id="87edaa47f9d833b395dff5e38f58c229c67973f2" translate="yes" xml:space="preserve">
          <source>contentDeepHashCode</source>
          <target state="translated">contentDeepHashCode</target>
        </trans-unit>
        <trans-unit id="65ed72edf433c2ff3b838b82337c87961500c066" translate="yes" xml:space="preserve">
          <source>contentDeepToString</source>
          <target state="translated">contentDeepToString</target>
        </trans-unit>
        <trans-unit id="3815d14dcd198d4f3d67969d875bacb9bbaba9bf" translate="yes" xml:space="preserve">
          <source>contentEquals</source>
          <target state="translated">contentEquals</target>
        </trans-unit>
        <trans-unit id="cf0f66ecd093a788ab25343b12bf10217d3e7001" translate="yes" xml:space="preserve">
          <source>contentHashCode</source>
          <target state="translated">contentHashCode</target>
        </trans-unit>
        <trans-unit id="939dedc61fc7fa759ef7c80666c09e86af3a76c7" translate="yes" xml:space="preserve">
          <source>contentToString</source>
          <target state="translated">contentToString</target>
        </trans-unit>
        <trans-unit id="ec2727b3b71f07635f726026bef44352ec89e452" translate="yes" xml:space="preserve">
          <source>context</source>
          <target state="translated">context</target>
        </trans-unit>
        <trans-unit id="d61ceadbdb0081cce7a2c1f65558bd2243ecc161" translate="yes" xml:space="preserve">
          <source>contract</source>
          <target state="translated">contract</target>
        </trans-unit>
        <trans-unit id="35bf0b48f1ec558d7e19ba7fb494e6b0c3371521" translate="yes" xml:space="preserve">
          <source>contravariant</source>
          <target state="translated">contravariant</target>
        </trans-unit>
        <trans-unit id="20a70aaf7e25faabeb80d477937f0a1a2d3ba60d" translate="yes" xml:space="preserve">
          <source>convert</source>
          <target state="translated">convert</target>
        </trans-unit>
        <trans-unit id="f84e2e2dadd87384fb55f25886926b777e8378f1" translate="yes" xml:space="preserve">
          <source>copy</source>
          <target state="translated">copy</target>
        </trans-unit>
        <trans-unit id="f5318ecbb9c7ad77d9e9e08583ba4eb2634ff444" translate="yes" xml:space="preserve">
          <source>copyInto</source>
          <target state="translated">copyInto</target>
        </trans-unit>
        <trans-unit id="5d3b12970ed02e2beb8121a30f59f831b7eeb9e1" translate="yes" xml:space="preserve">
          <source>copyOf</source>
          <target state="translated">copyOf</target>
        </trans-unit>
        <trans-unit id="187a223af2436f5accfab307efd68c0ad7e67a55" translate="yes" xml:space="preserve">
          <source>copyOfRange</source>
          <target state="translated">copyOfRange</target>
        </trans-unit>
        <trans-unit id="6d7fbd6f61662ff99976d5ebea080585150e5116" translate="yes" xml:space="preserve">
          <source>copyRecursively</source>
          <target state="translated">copyRecursively</target>
        </trans-unit>
        <trans-unit id="4b8555b7f56f28cfe3f2499d5f3694f91471136c" translate="yes" xml:space="preserve">
          <source>copyTo</source>
          <target state="translated">copyTo</target>
        </trans-unit>
        <trans-unit id="521307ddb67a4abc14248801dae5e5989aca76c1" translate="yes" xml:space="preserve">
          <source>copyright</source>
          <target state="translated">copyright</target>
        </trans-unit>
        <trans-unit id="fc1d9a95d2d75e17bad45cefb49a1ccfd1dd1346" translate="yes" xml:space="preserve">
          <source>coroutineContext</source>
          <target state="translated">coroutineContext</target>
        </trans-unit>
        <trans-unit id="a0a8c3c09319543eaec593eea24c4bc8cfafaebe" translate="yes" xml:space="preserve">
          <source>corresponds to</source>
          <target state="translated">에 해당</target>
        </trans-unit>
        <trans-unit id="5bcc2c4d81811ed80bdd75460668f2bc84ab2137" translate="yes" xml:space="preserve">
          <source>cos</source>
          <target state="translated">cos</target>
        </trans-unit>
        <trans-unit id="a2feafc74f88dca754a5ba43c50a85d79a767e72" translate="yes" xml:space="preserve">
          <source>cosh</source>
          <target state="translated">cosh</target>
        </trans-unit>
        <trans-unit id="ee9f38e186ba06f57b7b74d7e626b94e13ce2556" translate="yes" xml:space="preserve">
          <source>count</source>
          <target state="translated">count</target>
        </trans-unit>
        <trans-unit id="483e9a3efce7475531c4c311752ad734c4cb77eb" translate="yes" xml:space="preserve">
          <source>countLeadingZeroBits</source>
          <target state="translated">countLeadingZeroBits</target>
        </trans-unit>
        <trans-unit id="9f18d0fa7725009c1a56be03881661691af16b1e" translate="yes" xml:space="preserve">
          <source>countOneBits</source>
          <target state="translated">countOneBits</target>
        </trans-unit>
        <trans-unit id="50cb2d7607aeed8d8482d19492dc4498314a2e1d" translate="yes" xml:space="preserve">
          <source>countTrailingZeroBits</source>
          <target state="translated">countTrailingZeroBits</target>
        </trans-unit>
        <trans-unit id="6b629844c06459311586806d8c11d02e760a1908" translate="yes" xml:space="preserve">
          <source>covariant</source>
          <target state="translated">covariant</target>
        </trans-unit>
        <trans-unit id="4a6e1f8b8bc254e7f0a66560bf8c5bab9a89abf2" translate="yes" xml:space="preserve">
          <source>cpuArchitecture</source>
          <target state="translated">cpuArchitecture</target>
        </trans-unit>
        <trans-unit id="9b7c68a918b17eb053809b198d7c9abfc142f30a" translate="yes" xml:space="preserve">
          <source>create</source>
          <target state="translated">create</target>
        </trans-unit>
        <trans-unit id="8052493bf425ff9cb0dcb7bb392ac15aa0e6919a" translate="yes" xml:space="preserve">
          <source>create a &lt;code&gt;.def&lt;/code&gt; file describing what to include into bindings</source>
          <target state="translated">바인딩에 포함 할 내용을 설명 하는 &lt;code&gt;.def&lt;/code&gt; 파일을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="1240085bf871c5fbbca12170a7e6157aa7ee5bbe" translate="yes" xml:space="preserve">
          <source>createCoroutine</source>
          <target state="translated">createCoroutine</target>
        </trans-unit>
        <trans-unit id="395971bc5eb7a8670239aa8b126314f15b7176ea" translate="yes" xml:space="preserve">
          <source>createCoroutineUnchecked</source>
          <target state="translated">createCoroutineUnchecked</target>
        </trans-unit>
        <trans-unit id="a831ea02209fd7328db1d98f85ff928e0488ab7b" translate="yes" xml:space="preserve">
          <source>createCoroutineUnintercepted</source>
          <target state="translated">createCoroutineUnintercepted</target>
        </trans-unit>
        <trans-unit id="039816608a65a18a7c7cd094f048a091abb0d577" translate="yes" xml:space="preserve">
          <source>createElement</source>
          <target state="translated">createElement</target>
        </trans-unit>
        <trans-unit id="1c4baeae507924e226e6906f777b3b0a7bf6dbcc" translate="yes" xml:space="preserve">
          <source>createEntrySet</source>
          <target state="translated">createEntrySet</target>
        </trans-unit>
        <trans-unit id="c38e762cbc8eb8256394bfc82c4e377d4d81efae" translate="yes" xml:space="preserve">
          <source>createInstance</source>
          <target state="translated">createInstance</target>
        </trans-unit>
        <trans-unit id="b7df17c58e8f7ff8a43e782945ba31eefca2f2b6" translate="yes" xml:space="preserve">
          <source>createKotlinObjectHolder</source>
          <target state="translated">createKotlinObjectHolder</target>
        </trans-unit>
        <trans-unit id="90b963dc1a1c617c26467d259a400c9c22dc6017" translate="yes" xml:space="preserve">
          <source>createTempDir</source>
          <target state="translated">createTempDir</target>
        </trans-unit>
        <trans-unit id="3bb4c9fc7ba625c74b034449318e900f8f32698b" translate="yes" xml:space="preserve">
          <source>createTempFile</source>
          <target state="translated">createTempFile</target>
        </trans-unit>
        <trans-unit id="e05d920f8dff0149daaa8dfecb2362024c16dfa5" translate="yes" xml:space="preserve">
          <source>createType</source>
          <target state="translated">createType</target>
        </trans-unit>
        <trans-unit id="9556fbef974ec7fce10079902cc1f1c4668d20c6" translate="yes" xml:space="preserve">
          <source>createValues</source>
          <target state="translated">createValues</target>
        </trans-unit>
        <trans-unit id="352661edf2894ad07524ca49eafc64558df6daaf" translate="yes" xml:space="preserve">
          <source>created an Android application in Android Studio</source>
          <target state="translated">Android Studio에서 Android 애플리케이션을 만들었습니다.</target>
        </trans-unit>
        <trans-unit id="198db4b578734a2ea3f631f51ebf0d4d11193e63" translate="yes" xml:space="preserve">
          <source>created an iOS application in Xcode</source>
          <target state="translated">Xcode에서 iOS 응용 프로그램을 만들었습니다.</target>
        </trans-unit>
        <trans-unit id="f24676ba5aa57f33965d5e587266a91d4dd6ff95" translate="yes" xml:space="preserve">
          <source>creates an empty bit set with the specified &lt;a href=&quot;size&quot;&gt;size&lt;/a&gt;</source>
          <target state="translated">지정된 &lt;a href=&quot;size&quot;&gt;크기&lt;/a&gt; 로 빈 비트 세트를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="83d681f72f36cebd22958b2427e6ae9322e18f7a" translate="yes" xml:space="preserve">
          <source>cstr</source>
          <target state="translated">cstr</target>
        </trans-unit>
        <trans-unit id="f8a52365911cc3041fbc901b5260e788670f653a" translate="yes" xml:space="preserve">
          <source>curl on Windows</source>
          <target state="translated">Windows에서 컬</target>
        </trans-unit>
        <trans-unit id="405ab5d2b930fe3725b3cb1ace051f9fd3d6d7af" translate="yes" xml:space="preserve">
          <source>current</source>
          <target state="translated">current</target>
        </trans-unit>
        <trans-unit id="72433145c0b1dd80d7b55d0147b9c7ec326ac340" translate="yes" xml:space="preserve">
          <source>currentArena</source>
          <target state="translated">currentArena</target>
        </trans-unit>
        <trans-unit id="c22092c96ea0f59ef19d1bdf7a374b5847f5bf41" translate="yes" xml:space="preserve">
          <source>custom classes implementing standard Kotlin collection interfaces (&lt;code&gt;List&lt;/code&gt;, &lt;code&gt;Map&lt;/code&gt;, &lt;code&gt;Set&lt;/code&gt;) and other special classes</source>
          <target state="translated">표준 Kotlin 컬렉션 인터페이스 ( &lt;code&gt;List&lt;/code&gt; , &lt;code&gt;Map&lt;/code&gt; , &lt;code&gt;Set&lt;/code&gt; ) 및 기타 특수 클래스를 구현하는 맞춤 클래스</target>
        </trans-unit>
        <trans-unit id="0a1b328a0bb8adbdab98e35620e4899f96a30589" translate="yes" xml:space="preserve">
          <source>dagger</source>
          <target state="translated">dagger</target>
        </trans-unit>
        <trans-unit id="cbcc2ff6a0894e6e7f9a1a6a6a36b68fb36aa151" translate="yes" xml:space="preserve">
          <source>data1</source>
          <target state="translated">data1</target>
        </trans-unit>
        <trans-unit id="4c64312d5aa547e7c43b39f451fd0be214b550d6" translate="yes" xml:space="preserve">
          <source>data2</source>
          <target state="translated">data2</target>
        </trans-unit>
        <trans-unit id="9d1820b67126ffcf75339fde65217ad4baf88a50" translate="yes" xml:space="preserve">
          <source>dateLocaleOptions</source>
          <target state="translated">dateLocaleOptions</target>
        </trans-unit>
        <trans-unit id="a2620cbc10f5198dd03e3f5a1569eb5dcf9a6a87" translate="yes" xml:space="preserve">
          <source>day</source>
          <target state="translated">day</target>
        </trans-unit>
        <trans-unit id="5548ae4f34cbb6e30414532924e2088d915b460f" translate="yes" xml:space="preserve">
          <source>days</source>
          <target state="translated">days</target>
        </trans-unit>
        <trans-unit id="c9c5049da5ba9f656ab57a883812fbbf0b60107e" translate="yes" xml:space="preserve">
          <source>dec</source>
          <target state="translated">dec</target>
        </trans-unit>
        <trans-unit id="07fa5f94cbe34720cda46245df1c0423adc4e264" translate="yes" xml:space="preserve">
          <source>decapitalize</source>
          <target state="translated">decapitalize</target>
        </trans-unit>
        <trans-unit id="f08262db57030eeb4fc8abcedab24a186e10e68e" translate="yes" xml:space="preserve">
          <source>declaration-site variance</source>
          <target state="translated">선언 사이트 차이</target>
        </trans-unit>
        <trans-unit id="03d9b17c21a04a6c2b43efe8b114d9107b2e7299" translate="yes" xml:space="preserve">
          <source>declaredFunctions</source>
          <target state="translated">declaredFunctions</target>
        </trans-unit>
        <trans-unit id="a66ac98e5591be09c895a0a5f52d513337580c95" translate="yes" xml:space="preserve">
          <source>declaredMemberExtensionFunctions</source>
          <target state="translated">declaredMemberExtensionFunctions</target>
        </trans-unit>
        <trans-unit id="93f284926c89fb8a7d028cdac61f74d9da14be5f" translate="yes" xml:space="preserve">
          <source>declaredMemberExtensionProperties</source>
          <target state="translated">declaredMemberExtensionProperties</target>
        </trans-unit>
        <trans-unit id="bc30b3cbc87c8ef2ad83c31a61332d836501ab67" translate="yes" xml:space="preserve">
          <source>declaredMemberFunctions</source>
          <target state="translated">declaredMemberFunctions</target>
        </trans-unit>
        <trans-unit id="02e2fcf45ea807ee5b4f7c3ab215dba75d07e2ff" translate="yes" xml:space="preserve">
          <source>declaredMemberProperties</source>
          <target state="translated">declaredMemberProperties</target>
        </trans-unit>
        <trans-unit id="840b270898adde52a3ede9e63dc411f57bc24cf0" translate="yes" xml:space="preserve">
          <source>declaredMembers</source>
          <target state="translated">declaredMembers</target>
        </trans-unit>
        <trans-unit id="fab3293c9bf6669c97f3f9c49f8e58a0c17037d9" translate="yes" xml:space="preserve">
          <source>declares the &lt;a href=&quot;properties#getters-and-setters&quot;&gt;getter of a property&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;properties#getters-and-setters&quot;&gt;속성&lt;/a&gt; 의 getter를 선언합니다</target>
        </trans-unit>
        <trans-unit id="d447f8e5b662e7cdcf19c9f1b09b6b3efd0b2a4a" translate="yes" xml:space="preserve">
          <source>declares the &lt;a href=&quot;properties#getters-and-setters&quot;&gt;setter of a property&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;properties#getters-and-setters&quot;&gt;프로퍼티&lt;/a&gt; 의 setter를 선언한다</target>
        </trans-unit>
        <trans-unit id="a973ff7abba5bd1dc72f24a68a9d5c3e68cc8ab7" translate="yes" xml:space="preserve">
          <source>decodeToString</source>
          <target state="translated">decodeToString</target>
        </trans-unit>
        <trans-unit id="cb8747153bde6524fb1a852e80cdd561013db583" translate="yes" xml:space="preserve">
          <source>decrement</source>
          <target state="translated">decrement</target>
        </trans-unit>
        <trans-unit id="b051d85fecfccd804af4dd658698ba2ed010636d" translate="yes" xml:space="preserve">
          <source>defaultType</source>
          <target state="translated">defaultType</target>
        </trans-unit>
        <trans-unit id="d2cc99410cb345cd3bd028ee0fa777efb912e110" translate="yes" xml:space="preserve">
          <source>defer</source>
          <target state="translated">defer</target>
        </trans-unit>
        <trans-unit id="84ef3bdf580245dd51f572de5786958c3accd8ad" translate="yes" xml:space="preserve">
          <source>definedExternally</source>
          <target state="translated">definedExternally</target>
        </trans-unit>
        <trans-unit id="7955b936c48c9e75940ab4eb9d965657ef4fbc91" translate="yes" xml:space="preserve">
          <source>degree</source>
          <target state="translated">degree</target>
        </trans-unit>
        <trans-unit id="a5c3d2245faa455972a0767d66affe0212c3e048" translate="yes" xml:space="preserve">
          <source>deinitRuntimeIfNeeded</source>
          <target state="translated">deinitRuntimeIfNeeded</target>
        </trans-unit>
        <trans-unit id="eb5645dc52a104d4a688356df10512890f1fdd32" translate="yes" xml:space="preserve">
          <source>delegates the implementation of accessors for a property to another object</source>
          <target state="translated">속성에 대한 접근 자의 구현을 다른 개체에 위임</target>
        </trans-unit>
        <trans-unit id="cf3671d5e8d6bd073f88cee20eadbcc683e290f0" translate="yes" xml:space="preserve">
          <source>delegates the implementation of an interface to another object</source>
          <target state="translated">인터페이스 구현을 다른 객체에 위임</target>
        </trans-unit>
        <trans-unit id="5a5ecfe6db57773e77aaacb83bd9dda4c230a08f" translate="yes" xml:space="preserve">
          <source>deleteAt</source>
          <target state="translated">deleteAt</target>
        </trans-unit>
        <trans-unit id="35601b9158a523d2645b3250299d9b3b690456fb" translate="yes" xml:space="preserve">
          <source>deleteCharAt</source>
          <target state="translated">deleteCharAt</target>
        </trans-unit>
        <trans-unit id="ce2a22f4b41e2ae3c4bd6c1105f018acba783ce6" translate="yes" xml:space="preserve">
          <source>deleteRange</source>
          <target state="translated">deleteRange</target>
        </trans-unit>
        <trans-unit id="d82b2a2764f70a9493056c685e5bf673cf0a642d" translate="yes" xml:space="preserve">
          <source>deleteRecursively</source>
          <target state="translated">deleteRecursively</target>
        </trans-unit>
        <trans-unit id="03b951fe91e3e7354a2393c2a07c9cae1c7eac7d" translate="yes" xml:space="preserve">
          <source>designated</source>
          <target state="translated">designated</target>
        </trans-unit>
        <trans-unit id="87e075b0e7dafb91ae3327bee04d23d1ca6a2231" translate="yes" xml:space="preserve">
          <source>destructured</source>
          <target state="translated">destructured</target>
        </trans-unit>
        <trans-unit id="a9eb700f09162a27c7e633fb6b712bb92aac708c" translate="yes" xml:space="preserve">
          <source>detailed descriptions of the exceptions that were suppressed in order to deliver this exception;</source>
          <target state="translated">이 예외를 전달하기 위해 제외 된 예외에 대한 자세한 설명</target>
        </trans-unit>
        <trans-unit id="7ee737c83ee689c96ef37d3a029068c390ebc8f8" translate="yes" xml:space="preserve">
          <source>dir</source>
          <target state="translated">dir</target>
        </trans-unit>
        <trans-unit id="ea8b9806e8e77887cc3c72b4aadd4eb003fec56b" translate="yes" xml:space="preserve">
          <source>directionality</source>
          <target state="translated">directionality</target>
        </trans-unit>
        <trans-unit id="d38626a856365c923733f74c0a626686693bcb9e" translate="yes" xml:space="preserve">
          <source>dispose</source>
          <target state="translated">dispose</target>
        </trans-unit>
        <trans-unit id="21a08d6787a0d64238e8d57c9b087a45f1a70665" translate="yes" xml:space="preserve">
          <source>distinct</source>
          <target state="translated">distinct</target>
        </trans-unit>
        <trans-unit id="b8b4cc099d2e6b796ac811c73d74649ace00d614" translate="yes" xml:space="preserve">
          <source>distinctBy</source>
          <target state="translated">distinctBy</target>
        </trans-unit>
        <trans-unit id="26021f1f4700496d68e21ef6d4a1b6945da4c8eb" translate="yes" xml:space="preserve">
          <source>div</source>
          <target state="translated">div</target>
        </trans-unit>
        <trans-unit id="4f8278c89ad16da05fec4fdfc61fe44798b92720" translate="yes" xml:space="preserve">
          <source>document</source>
          <target state="translated">document</target>
        </trans-unit>
        <trans-unit id="67b4f60f2a36e9d70ec8204f151e1bd5df33718e" translate="yes" xml:space="preserve">
          <source>does not throw</source>
          <target state="translated">던지지 않는다</target>
        </trans-unit>
        <trans-unit id="5402780eb4afc37a4a36f1644b782d8a8bfd4ef7" translate="yes" xml:space="preserve">
          <source>dokka</source>
          <target state="translated">dokka</target>
        </trans-unit>
        <trans-unit id="6c36ab332e72c35c40c04415def56348c9230ff7" translate="yes" xml:space="preserve">
          <source>dollar</source>
          <target state="translated">dollar</target>
        </trans-unit>
        <trans-unit id="e5fd9cfe0e8039111d54b588e77b2bb0cad41c3a" translate="yes" xml:space="preserve">
          <source>done</source>
          <target state="translated">done</target>
        </trans-unit>
        <trans-unit id="bdb36bb22deb169275b3094ba9005a29eeddd195" translate="yes" xml:space="preserve">
          <source>double</source>
          <target state="translated">double</target>
        </trans-unit>
        <trans-unit id="a0d352e938d773885adf6f96da3e737a01f9fe98" translate="yes" xml:space="preserve">
          <source>doubleArrayOf</source>
          <target state="translated">doubleArrayOf</target>
        </trans-unit>
        <trans-unit id="19b41894e17b696a532caccb65dc5653fed0bb40" translate="yes" xml:space="preserve">
          <source>doubleDagger</source>
          <target state="translated">doubleDagger</target>
        </trans-unit>
        <trans-unit id="4110e29fc7ae08bb208a30a1d052fb6c2a5fd4a3" translate="yes" xml:space="preserve">
          <source>doubleLower</source>
          <target state="translated">doubleLower</target>
        </trans-unit>
        <trans-unit id="c441c1c4574ae9a2cc87a2c15098716646fa2a7b" translate="yes" xml:space="preserve">
          <source>doublePrime</source>
          <target state="translated">doublePrime</target>
        </trans-unit>
        <trans-unit id="773c7eb27207b09a76bac1e9ac1dc814a942a7d2" translate="yes" xml:space="preserve">
          <source>doubleUpper</source>
          <target state="translated">doubleUpper</target>
        </trans-unit>
        <trans-unit id="68d0157164081ad649eaddc01f63ba6e34da35cd" translate="yes" xml:space="preserve">
          <source>downTo</source>
          <target state="translated">downTo</target>
        </trans-unit>
        <trans-unit id="aa20c3bf5eca16e978a39965710b45ac9b9b5949" translate="yes" xml:space="preserve">
          <source>drop</source>
          <target state="translated">drop</target>
        </trans-unit>
        <trans-unit id="5f1b2259e764b7b2a3ddc45c76f08e8220cba8bc" translate="yes" xml:space="preserve">
          <source>dropLast</source>
          <target state="translated">dropLast</target>
        </trans-unit>
        <trans-unit id="7ae0b77cf06e23f5365316ac4273b055da703105" translate="yes" xml:space="preserve">
          <source>dropLastWhile</source>
          <target state="translated">dropLastWhile</target>
        </trans-unit>
        <trans-unit id="ec69327cb1e2c4149ebb0338ed29c163c7be07aa" translate="yes" xml:space="preserve">
          <source>dropWhile</source>
          <target state="translated">dropWhile</target>
        </trans-unit>
        <trans-unit id="5d3f344b5bd21e9500c69ca575a3286c85b28f1c" translate="yes" xml:space="preserve">
          <source>duration</source>
          <target state="translated">duration</target>
        </trans-unit>
        <trans-unit id="7d9119003655d959b7cd4960b1c3e37ed1b5a996" translate="yes" xml:space="preserve">
          <source>eachCount</source>
          <target state="translated">eachCount</target>
        </trans-unit>
        <trans-unit id="c259eb2e28b7a2f159e8120b37ddacdb5697a4a0" translate="yes" xml:space="preserve">
          <source>eachCountTo</source>
          <target state="translated">eachCountTo</target>
        </trans-unit>
        <trans-unit id="f5636a9a31fa172a87b1dfb0f69fe49f9f677dc2" translate="yes" xml:space="preserve">
          <source>elapsedNow</source>
          <target state="translated">elapsedNow</target>
        </trans-unit>
        <trans-unit id="a61b898b7878cda7906edffa9204d407cb38a254" translate="yes" xml:space="preserve">
          <source>elementAt</source>
          <target state="translated">elementAt</target>
        </trans-unit>
        <trans-unit id="99e9fc830d22bb5ec145153c677b398737d48b04" translate="yes" xml:space="preserve">
          <source>elementAtOrElse</source>
          <target state="translated">elementAtOrElse</target>
        </trans-unit>
        <trans-unit id="0fa413d4e28d88169aeb4339e48178f35e833f2a" translate="yes" xml:space="preserve">
          <source>elementAtOrNull</source>
          <target state="translated">elementAtOrNull</target>
        </trans-unit>
        <trans-unit id="900198081b75108f6b121e67b33afd480337f02e" translate="yes" xml:space="preserve">
          <source>ellipsis</source>
          <target state="translated">ellipsis</target>
        </trans-unit>
        <trans-unit id="b87da408ad16aa539d627aa5128f2d0a08ee86d0" translate="yes" xml:space="preserve">
          <source>emptyArray</source>
          <target state="translated">emptyArray</target>
        </trans-unit>
        <trans-unit id="1952a6bae3c2b95052e6259cd51692500de905ff" translate="yes" xml:space="preserve">
          <source>emptyList</source>
          <target state="translated">emptyList</target>
        </trans-unit>
        <trans-unit id="e0ce8a3ce50aa0668e0b5293d482006ea391d143" translate="yes" xml:space="preserve">
          <source>emptyMap</source>
          <target state="translated">emptyMap</target>
        </trans-unit>
        <trans-unit id="b17851150e4738334202519117c5ee74d44037e4" translate="yes" xml:space="preserve">
          <source>emptySequence</source>
          <target state="translated">emptySequence</target>
        </trans-unit>
        <trans-unit id="1620116726762195adfa5c8b016c6c0ff87e876e" translate="yes" xml:space="preserve">
          <source>emptySet</source>
          <target state="translated">emptySet</target>
        </trans-unit>
        <trans-unit id="553e4386b4c190fa57c12f9f159a52d8e123a6f3" translate="yes" xml:space="preserve">
          <source>encodeToByteArray</source>
          <target state="translated">encodeToByteArray</target>
        </trans-unit>
        <trans-unit id="fac8a3432c5fd7e41b5fe935f7520b00d4000133" translate="yes" xml:space="preserve">
          <source>encodeToUtf8</source>
          <target state="translated">encodeToUtf8</target>
        </trans-unit>
        <trans-unit id="14a9dc09e10179b15beaf94c0aed53904ace0336" translate="yes" xml:space="preserve">
          <source>encoding</source>
          <target state="translated">encoding</target>
        </trans-unit>
        <trans-unit id="f46cd4610a95d6d9f9f9edd4f6df5f7d3955bb96" translate="yes" xml:space="preserve">
          <source>endInclusive</source>
          <target state="translated">endInclusive</target>
        </trans-unit>
        <trans-unit id="75e8e3c8c9b8636c14a939989e083c498691c67a" translate="yes" xml:space="preserve">
          <source>endsWith</source>
          <target state="translated">endsWith</target>
        </trans-unit>
        <trans-unit id="9e5b51629911ed2cfde8824959aba9640d90cd56" translate="yes" xml:space="preserve">
          <source>ensureCapacity</source>
          <target state="translated">ensureCapacity</target>
        </trans-unit>
        <trans-unit id="af46fa57ba45e7e57e34e4c4f4216d588b8ebc28" translate="yes" xml:space="preserve">
          <source>ensureNeverFrozen</source>
          <target state="translated">ensureNeverFrozen</target>
        </trans-unit>
        <trans-unit id="c2e311d61416075c5a2e3d05132186c2ce1b7e12" translate="yes" xml:space="preserve">
          <source>entries</source>
          <target state="translated">entries</target>
        </trans-unit>
        <trans-unit id="b4bf22238ad1342c0e0436220f796da99c274491" translate="yes" xml:space="preserve">
          <source>entryName</source>
          <target state="translated">entryName</target>
        </trans-unit>
        <trans-unit id="f4c3084b2e3ae8ca7d9f952e758c13a318915767" translate="yes" xml:space="preserve">
          <source>enum classes</source>
          <target state="translated">열거 형 클래스</target>
        </trans-unit>
        <trans-unit id="edb2d34cedef8156b86980232c823d3d3259f861" translate="yes" xml:space="preserve">
          <source>enumValueOf</source>
          <target state="translated">enumValueOf</target>
        </trans-unit>
        <trans-unit id="139cbb4ebbae0e72771b31fc39229d8ddcfde82f" translate="yes" xml:space="preserve">
          <source>enumValues</source>
          <target state="translated">enumValues</target>
        </trans-unit>
        <trans-unit id="96edd6e960dd37d273572e7f8c451e73cea1b826" translate="yes" xml:space="preserve">
          <source>enums are always frozen</source>
          <target state="translated">열거 형은 항상 고정되어 있습니다</target>
        </trans-unit>
        <trans-unit id="c5e9470bc548ab2fcdecdd58031e9d06724cab5c" translate="yes" xml:space="preserve">
          <source>enums;</source>
          <target state="translated">enums;</target>
        </trans-unit>
        <trans-unit id="80b2f559a14748525776894e12e1216b49b5b558" translate="yes" xml:space="preserve">
          <source>equals</source>
          <target state="translated">equals</target>
        </trans-unit>
        <trans-unit id="281f09155c96bf1277ed70fab0b043322f873f41" translate="yes" xml:space="preserve">
          <source>era</source>
          <target state="translated">era</target>
        </trans-unit>
        <trans-unit id="11f9578d05e6f7bb58a3cdd00107e9f4e3882671" translate="yes" xml:space="preserve">
          <source>error</source>
          <target state="translated">error</target>
        </trans-unit>
        <trans-unit id="8696c2b46165b1a283fdb3400c93b19e1416c8c7" translate="yes" xml:space="preserve">
          <source>errorSince</source>
          <target state="translated">errorSince</target>
        </trans-unit>
        <trans-unit id="cdecabe1520a398e4e46deff9d55b19bed6d6457" translate="yes" xml:space="preserve">
          <source>escape</source>
          <target state="translated">escape</target>
        </trans-unit>
        <trans-unit id="59622590828a4a6b53b5812aa198ad378fc62d0d" translate="yes" xml:space="preserve">
          <source>escapeReplacement</source>
          <target state="translated">escapeReplacement</target>
        </trans-unit>
        <trans-unit id="0eb8b4484399e1de23588be80cdb85ee416ffbea" translate="yes" xml:space="preserve">
          <source>euro</source>
          <target state="translated">euro</target>
        </trans-unit>
        <trans-unit id="822bc13e2d55b402eb4233cb23c9d414a7a03bc1" translate="yes" xml:space="preserve">
          <source>eval</source>
          <target state="translated">eval</target>
        </trans-unit>
        <trans-unit id="b3e683bcf35bab5f63fab0e1aca19769b8747e9c" translate="yes" xml:space="preserve">
          <source>examine the generated &lt;a href=&quot;#generated-framework-headers&quot;&gt;Objective-C and Swift API&lt;/a&gt; code</source>
          <target state="translated">생성 된 &lt;a href=&quot;#generated-framework-headers&quot;&gt;Objective-C 및 Swift API&lt;/a&gt; 코드를 검사하십시오.</target>
        </trans-unit>
        <trans-unit id="8403139efc23b7e4b5aca3661fb46a35c3b3fe30" translate="yes" xml:space="preserve">
          <source>exceptionClasses</source>
          <target state="translated">exceptionClasses</target>
        </trans-unit>
        <trans-unit id="bf9fd67328fd7ed37360f7295741a71aa2909e60" translate="yes" xml:space="preserve">
          <source>exceptionOrNull</source>
          <target state="translated">exceptionOrNull</target>
        </trans-unit>
        <trans-unit id="be62562725d30894d1641b11d5106adde66f0d79" translate="yes" xml:space="preserve">
          <source>exec</source>
          <target state="translated">exec</target>
        </trans-unit>
        <trans-unit id="39ae89e0a135945a5e08d9340cd2eac771f228f6" translate="yes" xml:space="preserve">
          <source>execute</source>
          <target state="translated">execute</target>
        </trans-unit>
        <trans-unit id="9866f7ffcf26635e322112207819af95612b8545" translate="yes" xml:space="preserve">
          <source>executeAfter</source>
          <target state="translated">executeAfter</target>
        </trans-unit>
        <trans-unit id="c5fdc09ff86046f595ea114b8836825c4c4323ab" translate="yes" xml:space="preserve">
          <source>exitProcess</source>
          <target state="translated">exitProcess</target>
        </trans-unit>
        <trans-unit id="86b77de2442fe05048f19c766138a551aa2543be" translate="yes" xml:space="preserve">
          <source>exp</source>
          <target state="translated">exp</target>
        </trans-unit>
        <trans-unit id="6e8027786b7fc59934cd47167de48bd4a12647a7" translate="yes" xml:space="preserve">
          <source>expect/actual language feature</source>
          <target state="translated">기대 / 실제 언어 기능</target>
        </trans-unit>
        <trans-unit id="1787fc6e96ef94e74e108f8ef24c52b15dc4dcc5" translate="yes" xml:space="preserve">
          <source>expected API can be used in the common code</source>
          <target state="translated">공통 코드에서 예상되는 API를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="57d89ccff05f81cc712a85b56790ae01892c94e3" translate="yes" xml:space="preserve">
          <source>expected platform-specific API</source>
          <target state="translated">예상되는 플랫폼 별 API</target>
        </trans-unit>
        <trans-unit id="baec8c3128f67834e350efd460fd681cd9f75049" translate="yes" xml:space="preserve">
          <source>expm1</source>
          <target state="translated">expm1</target>
        </trans-unit>
        <trans-unit id="ec9814396ba26fa02dc3261046ba55a3b4bb32a6" translate="yes" xml:space="preserve">
          <source>expression</source>
          <target state="translated">expression</target>
        </trans-unit>
        <trans-unit id="f98961015a0ac393630f4eda3749d644a716da64" translate="yes" xml:space="preserve">
          <source>extension</source>
          <target state="translated">extension</target>
        </trans-unit>
        <trans-unit id="4487cd55ba9e2d1b464db800ae048624e099e41f" translate="yes" xml:space="preserve">
          <source>extension function on &lt;code&gt;kotlinx.cinterop.NativePlacement&lt;/code&gt; type for this.</source>
          <target state="translated">이를위한 &lt;code&gt;kotlinx.cinterop.NativePlacement&lt;/code&gt; 유형의 확장 기능 .</target>
        </trans-unit>
        <trans-unit id="7eaef896d87d5b1738c3b81c5411826fef1aee37" translate="yes" xml:space="preserve">
          <source>extension properties</source>
          <target state="translated">확장 속성</target>
        </trans-unit>
        <trans-unit id="97696562caf2e7accbe7951b2dcd403c42d5080d" translate="yes" xml:space="preserve">
          <source>extensionReceiverParameter</source>
          <target state="translated">extensionReceiverParameter</target>
        </trans-unit>
        <trans-unit id="1e46b066fd8b8b0f039589f8e54c9136aac500dd" translate="yes" xml:space="preserve">
          <source>externName</source>
          <target state="translated">externName</target>
        </trans-unit>
        <trans-unit id="57d9fe5a66417cd3517433d984c5c041e003b0c4" translate="yes" xml:space="preserve">
          <source>extraInt</source>
          <target state="translated">extraInt</target>
        </trans-unit>
        <trans-unit id="fae32c27d71ea05890bf4e3f57e71bfda3bc6664" translate="yes" xml:space="preserve">
          <source>extraString</source>
          <target state="translated">extraString</target>
        </trans-unit>
        <trans-unit id="d68049bb85454c0b8c56ffbb73c45e8adee41b21" translate="yes" xml:space="preserve">
          <source>failure</source>
          <target state="translated">failure</target>
        </trans-unit>
        <trans-unit id="7cb6efb98ba5972a9b5090dc2e517fe14d12cb04" translate="yes" xml:space="preserve">
          <source>false</source>
          <target state="translated">false</target>
        </trans-unit>
        <trans-unit id="971c419dd609331343dee105fffd0f4608dc0bf2" translate="yes" xml:space="preserve">
          <source>file</source>
          <target state="translated">file</target>
        </trans-unit>
        <trans-unit id="24bb87b6d9673ebb78282cbc17ddd9195b785cdd" translate="yes" xml:space="preserve">
          <source>files marked with &lt;code&gt;@file:JsModule&lt;/code&gt; annotation can't declare non-external members. The example below produces compile-time error:</source>
          <target state="translated">&lt;code&gt;@file:JsModule&lt;/code&gt; 주석으로 표시된 파일은 외부 구성원이 아닌 구성원을 선언 할 수 없습니다. 아래 예는 컴파일 타임 오류를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="7aec9744ba1554e4d38febae4278e74a5e764414" translate="yes" xml:space="preserve">
          <source>fill</source>
          <target state="translated">fill</target>
        </trans-unit>
        <trans-unit id="6d1f5f88516bd23dd7fada1ee9b2fbef308ee5dd" translate="yes" xml:space="preserve">
          <source>fill, replaceAll, shuffle/shuffled</source>
          <target state="translated">채우기, 모두 바꾸기, 셔플 / 셔플</target>
        </trans-unit>
        <trans-unit id="4bb4ca75941b7bbc5bc6a12be44b22fc9c8d234e" translate="yes" xml:space="preserve">
          <source>filter</source>
          <target state="translated">filter</target>
        </trans-unit>
        <trans-unit id="cc342ec83cca1fe64913ddc1bdb7d2c6980858a2" translate="yes" xml:space="preserve">
          <source>filterIndexed</source>
          <target state="translated">filterIndexed</target>
        </trans-unit>
        <trans-unit id="a3469a276cce41aca886a6c499da3feb42bf6a6f" translate="yes" xml:space="preserve">
          <source>filterIndexedTo</source>
          <target state="translated">filterIndexedTo</target>
        </trans-unit>
        <trans-unit id="8e36c1ad67c661b6479c753bf13694e07d790c0a" translate="yes" xml:space="preserve">
          <source>filterIsInstance</source>
          <target state="translated">filterIsInstance</target>
        </trans-unit>
        <trans-unit id="d4aeb87d0008be8e5751d6c44e798a7c3520391a" translate="yes" xml:space="preserve">
          <source>filterIsInstanceTo</source>
          <target state="translated">filterIsInstanceTo</target>
        </trans-unit>
        <trans-unit id="d1f217ebf81ec7e6ecc5d48d0f4ca14c9f489666" translate="yes" xml:space="preserve">
          <source>filterKeys</source>
          <target state="translated">filterKeys</target>
        </trans-unit>
        <trans-unit id="b2453d1db0928c7f800979df92ff06ba21ea4251" translate="yes" xml:space="preserve">
          <source>filterNot</source>
          <target state="translated">filterNot</target>
        </trans-unit>
        <trans-unit id="744451936ea05e06982d873935de7131d1f769b0" translate="yes" xml:space="preserve">
          <source>filterNotNull</source>
          <target state="translated">filterNotNull</target>
        </trans-unit>
        <trans-unit id="382f15f10eecdd5041a021ea5d65b2b7ad3e2a5c" translate="yes" xml:space="preserve">
          <source>filterNotNullTo</source>
          <target state="translated">filterNotNullTo</target>
        </trans-unit>
        <trans-unit id="b7016c27c095a0cf252d3529c3d0a531a1f3a0c0" translate="yes" xml:space="preserve">
          <source>filterNotTo</source>
          <target state="translated">filterNotTo</target>
        </trans-unit>
        <trans-unit id="83cd26def013126a5b179cd0956ec9eb6b299cfb" translate="yes" xml:space="preserve">
          <source>filterTo</source>
          <target state="translated">filterTo</target>
        </trans-unit>
        <trans-unit id="96f8b80a17b71c6d5fead4b99352bd9efc74f325" translate="yes" xml:space="preserve">
          <source>filterValues</source>
          <target state="translated">filterValues</target>
        </trans-unit>
        <trans-unit id="123d5c91733d55ec9c590ad7219a23d2ea90d44e" translate="yes" xml:space="preserve">
          <source>finalize()</source>
          <target state="translated">finalize()</target>
        </trans-unit>
        <trans-unit id="ded8dae5786fb0e9e6ffb657401fd861ba2efe11" translate="yes" xml:space="preserve">
          <source>find</source>
          <target state="translated">find</target>
        </trans-unit>
        <trans-unit id="c1715ca7046e2073fe1965723679d9e6d224111a" translate="yes" xml:space="preserve">
          <source>findAll</source>
          <target state="translated">findAll</target>
        </trans-unit>
        <trans-unit id="20ababfe41839110829d91380451cafc1935e3b3" translate="yes" xml:space="preserve">
          <source>findAnnotation</source>
          <target state="translated">findAnnotation</target>
        </trans-unit>
        <trans-unit id="a7f481437e211b2ce0e871c608081a040927b861" translate="yes" xml:space="preserve">
          <source>findAnyOf</source>
          <target state="translated">findAnyOf</target>
        </trans-unit>
        <trans-unit id="560eb38c23388d5c310a7c5f52ae036c82bd6269" translate="yes" xml:space="preserve">
          <source>findAssociatedObject</source>
          <target state="translated">findAssociatedObject</target>
        </trans-unit>
        <trans-unit id="e8b0b8b41683edfdc25eb83cd3901d94f19d7826" translate="yes" xml:space="preserve">
          <source>findLast</source>
          <target state="translated">findLast</target>
        </trans-unit>
        <trans-unit id="58eb5689116df27b85cb9e40ebfc3c7adfafca57" translate="yes" xml:space="preserve">
          <source>findLastAnyOf</source>
          <target state="translated">findLastAnyOf</target>
        </trans-unit>
        <trans-unit id="19b2fa34ea624d6a16b681cf2769ed9f48c95abb" translate="yes" xml:space="preserve">
          <source>findParameterByName</source>
          <target state="translated">findParameterByName</target>
        </trans-unit>
        <trans-unit id="e0996a37c13d44c3b06074939d43fa3759bd32c1" translate="yes" xml:space="preserve">
          <source>first</source>
          <target state="translated">first</target>
        </trans-unit>
        <trans-unit id="ffb825b0e6d6755e406813f153717208b48264b1" translate="yes" xml:space="preserve">
          <source>first &lt;a href=&quot;execute#kotlin.native.concurrent.Worker%24execute%28kotlin.native.concurrent.TransferMode%2C+kotlin.Function0%28%28kotlin.native.concurrent.Worker.execute.T1%29%29%2C+kotlin.Function1%28%28kotlin.native.concurrent.Worker.execute.T1%2C+kotlin.native.concurrent.Worker.execute.T2%29%29%29%2Fproducer&quot;&gt;producer&lt;/a&gt; function is executed, and resulting object and whatever it refers to is analyzed for being an isolated object subgraph, if in checked mode.</source>
          <target state="translated">첫 번째 &lt;a href=&quot;execute#kotlin.native.concurrent.Worker%24execute%28kotlin.native.concurrent.TransferMode%2C+kotlin.Function0%28%28kotlin.native.concurrent.Worker.execute.T1%29%29%2C+kotlin.Function1%28%28kotlin.native.concurrent.Worker.execute.T1%2C+kotlin.native.concurrent.Worker.execute.T2%29%29%29%2Fproducer&quot;&gt;프로듀서&lt;/a&gt; 기능이 실행되고 결과 모드 및 참조되는 모든 것이 체크 모드에있는 경우 분리 된 오브젝트 서브 그래프인지 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="a0fb9c213f966bdf160ab12b4d58f52b89e08f29" translate="yes" xml:space="preserve">
          <source>first &lt;a href=&quot;execute#kotlin.native.concurrent.Worker%24execute(kotlin.native.concurrent.TransferMode,%20kotlin.Function0((kotlin.native.concurrent.Worker.execute.T1)),%20kotlin.Function1((kotlin.native.concurrent.Worker.execute.T1,%20kotlin.native.concurrent.Worker.execute.T2)))/producer&quot;&gt;producer&lt;/a&gt; function is executed, and resulting object and whatever it refers to is analyzed for being an isolated object subgraph, if in checked mode.</source>
          <target state="translated">첫 번째 &lt;a href=&quot;execute#kotlin.native.concurrent.Worker%24execute(kotlin.native.concurrent.TransferMode,%20kotlin.Function0((kotlin.native.concurrent.Worker.execute.T1)),%20kotlin.Function1((kotlin.native.concurrent.Worker.execute.T1,%20kotlin.native.concurrent.Worker.execute.T2)))/producer&quot;&gt;생산자&lt;/a&gt; 함수가 실행되고 결과 객체와 그것이 참조하는 모든 것이 체크 모드 인 경우 분리 된 객체 하위 그래프로 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="1b73138c0f417b5d3ae70e6dd7f38a0d70ca7b6c" translate="yes" xml:space="preserve">
          <source>firstOrNull</source>
          <target state="translated">firstOrNull</target>
        </trans-unit>
        <trans-unit id="1982832423d378f230638a256af85054e43b6f63" translate="yes" xml:space="preserve">
          <source>fixed width integer types, e.g., &lt;code&gt;int32_t&lt;/code&gt; or &lt;code&gt;uint64_t&lt;/code&gt; (from &lt;a href=&quot;https://en.wikipedia.org/wiki/C99&quot;&gt;C99&lt;/a&gt;)</source>
          <target state="translated">고정 너비 정수 유형 (예 : &lt;code&gt;int32_t&lt;/code&gt; 또는 &lt;code&gt;uint64_t&lt;/code&gt; ( &lt;a href=&quot;https://en.wikipedia.org/wiki/C99&quot;&gt;C99&lt;/a&gt; 부터 ))</target>
        </trans-unit>
        <trans-unit id="a569c162e62b490d219b78492ab2db37f861585f" translate="yes" xml:space="preserve">
          <source>fixedRateTimer</source>
          <target state="translated">fixedRateTimer</target>
        </trans-unit>
        <trans-unit id="ccc9d4f948ad94c5bbe07a1feee18738df60b756" translate="yes" xml:space="preserve">
          <source>flatMap</source>
          <target state="translated">flatMap</target>
        </trans-unit>
        <trans-unit id="c27c4b34af6198b4fc7e7fe9a2b88656f1e47569" translate="yes" xml:space="preserve">
          <source>flatMapConcat</source>
          <target state="translated">flatMapConcat</target>
        </trans-unit>
        <trans-unit id="3a9c56c5f1e73d94b4b08f9bf629ba29e137ed67" translate="yes" xml:space="preserve">
          <source>flatMapIndexed</source>
          <target state="translated">flatMapIndexed</target>
        </trans-unit>
        <trans-unit id="f654e4c8fd19cdbfbd6ad104c20d46d84d58489a" translate="yes" xml:space="preserve">
          <source>flatMapIndexedTo</source>
          <target state="translated">flatMapIndexedTo</target>
        </trans-unit>
        <trans-unit id="4280a22021d084fbad9feeea37ac5fbcb4750ad6" translate="yes" xml:space="preserve">
          <source>flatMapLatest</source>
          <target state="translated">flatMapLatest</target>
        </trans-unit>
        <trans-unit id="545f6b613c2a570a5afc70615dac34219c8f3eeb" translate="yes" xml:space="preserve">
          <source>flatMapMerge</source>
          <target state="translated">flatMapMerge</target>
        </trans-unit>
        <trans-unit id="3bfd8efe2870ed86f1e7b9696d7c46ae5b98ee68" translate="yes" xml:space="preserve">
          <source>flatMapTo</source>
          <target state="translated">flatMapTo</target>
        </trans-unit>
        <trans-unit id="bacef8c5a0403758a34a8d363562e7b7769cb548" translate="yes" xml:space="preserve">
          <source>flatten</source>
          <target state="translated">flatten</target>
        </trans-unit>
        <trans-unit id="40f924d802a754f24560958c585b751e7efea1f7" translate="yes" xml:space="preserve">
          <source>flip</source>
          <target state="translated">flip</target>
        </trans-unit>
        <trans-unit id="685e80366130387cb75c055248326976d16fdf8d" translate="yes" xml:space="preserve">
          <source>float</source>
          <target state="translated">float</target>
        </trans-unit>
        <trans-unit id="3189f19d208c6893cb18214f856f42021dd4aee1" translate="yes" xml:space="preserve">
          <source>floatArrayOf</source>
          <target state="translated">floatArrayOf</target>
        </trans-unit>
        <trans-unit id="3684c9d3c05e7bee19e2728c6a5b2bbccf0cd9c7" translate="yes" xml:space="preserve">
          <source>floor</source>
          <target state="translated">floor</target>
        </trans-unit>
        <trans-unit id="11781cc4652c2a6addcb620acde6133cc008f687" translate="yes" xml:space="preserve">
          <source>flowOn operator</source>
          <target state="translated">flowOn 연산자</target>
        </trans-unit>
        <trans-unit id="c5b2b01d33b40a69b0f829fd1827cb8201538518" translate="yes" xml:space="preserve">
          <source>fold</source>
          <target state="translated">fold</target>
        </trans-unit>
        <trans-unit id="19763877a05d90164c6c71c08fa1c3c47216e3bf" translate="yes" xml:space="preserve">
          <source>foldIndexed</source>
          <target state="translated">foldIndexed</target>
        </trans-unit>
        <trans-unit id="38cfbb96e212851f844ef42c104fb799249a4c61" translate="yes" xml:space="preserve">
          <source>foldRight</source>
          <target state="translated">foldRight</target>
        </trans-unit>
        <trans-unit id="8f02beb2d02a53745452fcd62247c73bb56baf71" translate="yes" xml:space="preserve">
          <source>foldRightIndexed</source>
          <target state="translated">foldRightIndexed</target>
        </trans-unit>
        <trans-unit id="6eb02571e1fee9d65bb206c80db14d4c8b0ada70" translate="yes" xml:space="preserve">
          <source>foldTo</source>
          <target state="translated">foldTo</target>
        </trans-unit>
        <trans-unit id="7becf0dc146d8f802256ab334446a94a76ab9312" translate="yes" xml:space="preserve">
          <source>for global variables marked with the &lt;code&gt;@kotlin.native.SharedImmutable&lt;/code&gt; annotation value is shared, but frozen before publishing, so each threads sees the same value</source>
          <target state="translated">&lt;code&gt;@kotlin.native.SharedImmutable&lt;/code&gt; 주석 값으로 표시된 전역 변수의 경우 공유되지만 게시하기 전에 고정되므로 각 스레드는 동일한 값을 봅니다.</target>
        </trans-unit>
        <trans-unit id="9d6af75b2e792a817a8967edb28f2bbe54267348" translate="yes" xml:space="preserve">
          <source>for global variables marked with the &lt;code&gt;@kotlin.native.ThreadLocal&lt;/code&gt; annotation each threads keeps thread-local copy, so changes are not visible between threads</source>
          <target state="translated">&lt;code&gt;@kotlin.native.ThreadLocal&lt;/code&gt; 주석으로 표시된 전역 변수의 경우 각 스레드는 스레드 로컬 복사를 유지하므로 스레드간에 변경 사항이 표시되지 않습니다</target>
        </trans-unit>
        <trans-unit id="a4d0fd11d3870bb955d8c9f58acb9b02cb8bdbfc" translate="yes" xml:space="preserve">
          <source>for iOS device and App Store (&lt;code&gt;arm64&lt;/code&gt; target)</source>
          <target state="translated">iOS 기기 및 App Store ( &lt;code&gt;arm64&lt;/code&gt; 대상)</target>
        </trans-unit>
        <trans-unit id="4ca14c3aa568cb40ed6db031348848ca35999502" translate="yes" xml:space="preserve">
          <source>for iOS emulator (&lt;code&gt;x86_64&lt;/code&gt; target)</source>
          <target state="translated">iOS 에뮬레이터 용 ( &lt;code&gt;x86_64&lt;/code&gt; 대상)</target>
        </trans-unit>
        <trans-unit id="edc5ee22beb2b82f4da41914d8d41cca9c53020f" translate="yes" xml:space="preserve">
          <source>forEach</source>
          <target state="translated">forEach</target>
        </trans-unit>
        <trans-unit id="6e1f7c2938982affe7d5253dc888940a2fbd077c" translate="yes" xml:space="preserve">
          <source>forEachBlock</source>
          <target state="translated">forEachBlock</target>
        </trans-unit>
        <trans-unit id="f719c5287583ae8e19916be8a2ec74e1a1658067" translate="yes" xml:space="preserve">
          <source>forEachIndexed</source>
          <target state="translated">forEachIndexed</target>
        </trans-unit>
        <trans-unit id="11061cae1271192c0e73cc55ef4612abd51e1f45" translate="yes" xml:space="preserve">
          <source>forEachLine</source>
          <target state="translated">forEachLine</target>
        </trans-unit>
        <trans-unit id="785987648f85190cfde9eadc69fc7c46fe8a7433" translate="yes" xml:space="preserve">
          <source>format</source>
          <target state="translated">format</target>
        </trans-unit>
        <trans-unit id="009e49efa1b30868e47a54f6fcfc2b2e48306d5f" translate="yes" xml:space="preserve">
          <source>formatMatcher</source>
          <target state="translated">formatMatcher</target>
        </trans-unit>
        <trans-unit id="4ff88aaddbd209d8026924c2cc2836b408698823" translate="yes" xml:space="preserve">
          <source>free</source>
          <target state="translated">free</target>
        </trans-unit>
        <trans-unit id="688fb038cd5b44571c5399157117c91fbefb20ac" translate="yes" xml:space="preserve">
          <source>freeArena</source>
          <target state="translated">freeArena</target>
        </trans-unit>
        <trans-unit id="adcdee7c29e76d6c7249456e6ff99ae44efe9e6e" translate="yes" xml:space="preserve">
          <source>freeze</source>
          <target state="translated">freeze</target>
        </trans-unit>
        <trans-unit id="508b56ae0a956ed04319e0885aab3ea60ef76fb6" translate="yes" xml:space="preserve">
          <source>fromBits</source>
          <target state="translated">fromBits</target>
        </trans-unit>
        <trans-unit id="1256b633377ab724f6eca5846f5888169c24e32a" translate="yes" xml:space="preserve">
          <source>fromCPointer</source>
          <target state="translated">fromCPointer</target>
        </trans-unit>
        <trans-unit id="169fdd98491179c083895949f3c084113de184c6" translate="yes" xml:space="preserve">
          <source>fromClosedRange</source>
          <target state="translated">fromClosedRange</target>
        </trans-unit>
        <trans-unit id="3d94e6559133c2ac0cd11ec59d453739cafeb97e" translate="yes" xml:space="preserve">
          <source>fromLiteral</source>
          <target state="translated">fromLiteral</target>
        </trans-unit>
        <trans-unit id="b0b743a9f7806964ba620fcc1beb1b328d438b42" translate="yes" xml:space="preserve">
          <source>fromValue</source>
          <target state="translated">fromValue</target>
        </trans-unit>
        <trans-unit id="922d10ba681a86dd86696b08f09893f42ee37836" translate="yes" xml:space="preserve">
          <source>function pointers</source>
          <target state="translated">함수 포인터</target>
        </trans-unit>
        <trans-unit id="6f25303939c443a452ff3df170718af2ed99934d" translate="yes" xml:space="preserve">
          <source>function that takes current accumulator value and an element, and calculates the next accumulator value.</source>
          <target state="translated">현재 누산기 값과 요소를 취하고 다음 누산기 값을 계산하는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="5612c04ee077432deae4f212cf10f152fb89f2bc" translate="yes" xml:space="preserve">
          <source>function that takes current accumulator value and the element, and calculates the next accumulator value.</source>
          <target state="translated">현재 누산기 값과 요소를 취하고 다음 누산기 값을 계산하는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="05f3e301cf6fb4bd31a49ce73aa61f3a8864b853" translate="yes" xml:space="preserve">
          <source>function that takes the index of an element and the element itself and performs the action on the element.</source>
          <target state="translated">요소와 요소 자체의 인덱스를 가져와 요소에 대한 작업을 수행하는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="86e6cfb85216333dddb003947d1f3e9e6f016955" translate="yes" xml:space="preserve">
          <source>function that takes the index of an element and the element itself and performs the desired action on the element.</source>
          <target state="translated">요소와 요소 자체의 색인을 가져 와서 요소에 대해 원하는 조치를 수행하는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="c59ec03a85b73ddced0733c33dfc78e20bac85d7" translate="yes" xml:space="preserve">
          <source>function that takes the index of an element and the element itself and returns the result of predicate evaluation on the element.</source>
          <target state="translated">요소와 요소 자체의 색인을 가져 와서 요소에 대한 술어 평가 결과를 리턴하는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="aa547a31ee5a446e5431ef9053cfe5fe04d8c2ce" translate="yes" xml:space="preserve">
          <source>function that takes the index of an element and the element itself and returns the result of the transform applied to the element.</source>
          <target state="translated">요소와 요소 자체의 색인을 가져 와서 요소에 적용된 변환 결과를 리턴하는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="58d32bd64252a8e563a3c9124f42f1e3b6a6113a" translate="yes" xml:space="preserve">
          <source>function that takes the index of an element, current accumulator value and the element itself and calculates the next accumulator value.</source>
          <target state="translated">요소의 색인, 현재 누산기 값 및 요소 자체를 가져와 다음 누산기 값을 계산하는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="990c63675791b1e9553de54b7c4e186013fb9884" translate="yes" xml:space="preserve">
          <source>function that takes the index of an element, current accumulator value and the element itself, and calculates the next accumulator value.</source>
          <target state="translated">요소의 색인, 현재 누산기 값 및 요소 자체를 가져 와서 다음 누산기 값을 계산하는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="91e71ffc3fbd1ff6b37e34c90585dc5a1d876a11" translate="yes" xml:space="preserve">
          <source>function. It creates a short-lived memory allocation scope, and all allocations will be cleaned up automatically at the end of the &lt;code&gt;block&lt;/code&gt;.</source>
          <target state="translated">함수. 수명이 짧은 메모리 할당 범위를 만들고 모든 할당은 &lt;code&gt;block&lt;/code&gt; 끝에서 자동으로 정리됩니다 .</target>
        </trans-unit>
        <trans-unit id="2f887def33825e52ffbcca83446cfd6a6f676ff7" translate="yes" xml:space="preserve">
          <source>functions</source>
          <target state="translated">functions</target>
        </trans-unit>
        <trans-unit id="7d478a932a87afee9b5b18812697df23139d3f56" translate="yes" xml:space="preserve">
          <source>functions and properties declared in &lt;a href=&quot;object-declarations#object-declarations&quot;&gt;object declarations&lt;/a&gt;;</source>
          <target state="translated">&lt;a href=&quot;object-declarations#object-declarations&quot;&gt;객체 선언에&lt;/a&gt; 선언 된 함수와 속성 ;</target>
        </trans-unit>
        <trans-unit id="8ead6354003c3f4fa80c692081bc8265af11220e" translate="yes" xml:space="preserve">
          <source>gdb</source>
          <target state="translated">gdb</target>
        </trans-unit>
        <trans-unit id="9906349f826fd1da18d142e72e255617e7bee7f8" translate="yes" xml:space="preserve">
          <source>generateSequence</source>
          <target state="translated">generateSequence</target>
        </trans-unit>
        <trans-unit id="783923e57ba5e8f1044632c31fd806ee24814bb5" translate="yes" xml:space="preserve">
          <source>get</source>
          <target state="translated">get</target>
        </trans-unit>
        <trans-unit id="f79cd83ae46d20700978b6f53b3b2f38cdb86ed3" translate="yes" xml:space="preserve">
          <source>getByteAt</source>
          <target state="translated">getByteAt</target>
        </trans-unit>
        <trans-unit id="03a558f64c5b44dea47caa6e55f2572bed08affb" translate="yes" xml:space="preserve">
          <source>getBytes</source>
          <target state="translated">getBytes</target>
        </trans-unit>
        <trans-unit id="70e044ffd3a28a0c109a94e6e5a7cd9bc7d65848" translate="yes" xml:space="preserve">
          <source>getCharAt</source>
          <target state="translated">getCharAt</target>
        </trans-unit>
        <trans-unit id="e79ba0e0ba27336fec7a9eb4f8bae5420e694b86" translate="yes" xml:space="preserve">
          <source>getClass()</source>
          <target state="translated">getClass()</target>
        </trans-unit>
        <trans-unit id="edbaf32ed1893648a0890fc7ae3dc6400a500ff4" translate="yes" xml:space="preserve">
          <source>getDate</source>
          <target state="translated">getDate</target>
        </trans-unit>
        <trans-unit id="812452e92022f49b9db20c300285c0a494be7971" translate="yes" xml:space="preserve">
          <source>getDay</source>
          <target state="translated">getDay</target>
        </trans-unit>
        <trans-unit id="730a1bf1ac380741e501904501dd10a7945c14b2" translate="yes" xml:space="preserve">
          <source>getDelegate</source>
          <target state="translated">getDelegate</target>
        </trans-unit>
        <trans-unit id="83320afdc5d62699b5908037781c6d5a121e54a0" translate="yes" xml:space="preserve">
          <source>getDoubleAt</source>
          <target state="translated">getDoubleAt</target>
        </trans-unit>
        <trans-unit id="7c54c377be07c8b4a4b82bcc4ce527c77f5b6d11" translate="yes" xml:space="preserve">
          <source>getElement</source>
          <target state="translated">getElement</target>
        </trans-unit>
        <trans-unit id="036f161ca53e1bdf586f7dd7cc9b3ec2a0ed8fad" translate="yes" xml:space="preserve">
          <source>getExtensionDelegate</source>
          <target state="translated">getExtensionDelegate</target>
        </trans-unit>
        <trans-unit id="704816ee32abb4f09e0d3ff5e07f9d73f3dcea4f" translate="yes" xml:space="preserve">
          <source>getFloatAt</source>
          <target state="translated">getFloatAt</target>
        </trans-unit>
        <trans-unit id="65d7d41340abbb1a47b1a4623d9dc96a736e9a16" translate="yes" xml:space="preserve">
          <source>getFullYear</source>
          <target state="translated">getFullYear</target>
        </trans-unit>
        <trans-unit id="6b59ee961f5d385453f0bfeb14901120704ac4e4" translate="yes" xml:space="preserve">
          <source>getHours</source>
          <target state="translated">getHours</target>
        </trans-unit>
        <trans-unit id="e8fa23851e2a16fb13b54b10e9b7470317306ce5" translate="yes" xml:space="preserve">
          <source>getInt</source>
          <target state="translated">getInt</target>
        </trans-unit>
        <trans-unit id="8cae4f473b6c7a94edbe19cf3694365bf9e45d93" translate="yes" xml:space="preserve">
          <source>getIntAt</source>
          <target state="translated">getIntAt</target>
        </trans-unit>
        <trans-unit id="cd6b7f486366e7fec8602afa7374486fc8a4f629" translate="yes" xml:space="preserve">
          <source>getLongAt</source>
          <target state="translated">getLongAt</target>
        </trans-unit>
        <trans-unit id="7f14b7b021d64a4c4734958341788a71438e3163" translate="yes" xml:space="preserve">
          <source>getMilliseconds</source>
          <target state="translated">getMilliseconds</target>
        </trans-unit>
        <trans-unit id="88394436ac565cce813fa44dafcecc4eb71ee964" translate="yes" xml:space="preserve">
          <source>getMinutes</source>
          <target state="translated">getMinutes</target>
        </trans-unit>
        <trans-unit id="5fddaf52e39f7c8a09e1c35dcdb25163195b7d87" translate="yes" xml:space="preserve">
          <source>getMonth</source>
          <target state="translated">getMonth</target>
        </trans-unit>
        <trans-unit id="c5a64f5026c1e7c87d3045a5f5e2b6c1176185b7" translate="yes" xml:space="preserve">
          <source>getOrDefault</source>
          <target state="translated">getOrDefault</target>
        </trans-unit>
        <trans-unit id="9cbe7b9180ab52dd3a331fb83030ec0adb407790" translate="yes" xml:space="preserve">
          <source>getOrElse</source>
          <target state="translated">getOrElse</target>
        </trans-unit>
        <trans-unit id="2b5066a901c065c85013f7dff340999933089da0" translate="yes" xml:space="preserve">
          <source>getOrNull</source>
          <target state="translated">getOrNull</target>
        </trans-unit>
        <trans-unit id="7396d87238358f5b628b3a0d24b53dda1af2c10a" translate="yes" xml:space="preserve">
          <source>getOrPut</source>
          <target state="translated">getOrPut</target>
        </trans-unit>
        <trans-unit id="4589ce9d0444acf3d746594ca6eabdaf1aeb36fb" translate="yes" xml:space="preserve">
          <source>getOrSet</source>
          <target state="translated">getOrSet</target>
        </trans-unit>
        <trans-unit id="78c3686d5e5deffe4ba03d13ba3ac373df664fb6" translate="yes" xml:space="preserve">
          <source>getOrThrow</source>
          <target state="translated">getOrThrow</target>
        </trans-unit>
        <trans-unit id="48b5722a18bba70e60b8620ffe207626f68e920f" translate="yes" xml:space="preserve">
          <source>getOriginalKotlinClass</source>
          <target state="translated">getOriginalKotlinClass</target>
        </trans-unit>
        <trans-unit id="972a0554f75431f5ec742e3ffb1bbed5e0c27073" translate="yes" xml:space="preserve">
          <source>getPointer</source>
          <target state="translated">getPointer</target>
        </trans-unit>
        <trans-unit id="05c27ad69642c4296f79f8002996faf559e947d4" translate="yes" xml:space="preserve">
          <source>getPolymorphicElement</source>
          <target state="translated">getPolymorphicElement</target>
        </trans-unit>
        <trans-unit id="2294f9a82736569f5c6ebe6e122e730c79ba28e0" translate="yes" xml:space="preserve">
          <source>getProperty</source>
          <target state="translated">getProperty</target>
        </trans-unit>
        <trans-unit id="0d36694fb9b466ed6962767c6576ee69758ce0c1" translate="yes" xml:space="preserve">
          <source>getRawPointer</source>
          <target state="translated">getRawPointer</target>
        </trans-unit>
        <trans-unit id="d263188fcb3bb617017a8cd879ab044b2c849aed" translate="yes" xml:space="preserve">
          <source>getRawValue</source>
          <target state="translated">getRawValue</target>
        </trans-unit>
        <trans-unit id="92efa97a7b5ccdb9c2be4f3fe87aad26d00a6dcb" translate="yes" xml:space="preserve">
          <source>getSeconds</source>
          <target state="translated">getSeconds</target>
        </trans-unit>
        <trans-unit id="759f550d0bf2c355f6a43b15b96ecb6731aeb5f4" translate="yes" xml:space="preserve">
          <source>getShortAt</source>
          <target state="translated">getShortAt</target>
        </trans-unit>
        <trans-unit id="69d3d95306c18ce2fd81dab0588f7820b1e7f42a" translate="yes" xml:space="preserve">
          <source>getStackTrace</source>
          <target state="translated">getStackTrace</target>
        </trans-unit>
        <trans-unit id="32cba8acb2875133562dc5ac119b4fed1a38a476" translate="yes" xml:space="preserve">
          <source>getStackTraceAddresses</source>
          <target state="translated">getStackTraceAddresses</target>
        </trans-unit>
        <trans-unit id="9a0e0d03f2b7b5dc9899f15edd176d3f149dcb22" translate="yes" xml:space="preserve">
          <source>getTime</source>
          <target state="translated">getTime</target>
        </trans-unit>
        <trans-unit id="cc3c4fc6cb1f2bf85158b7cf48252145c8a9fc59" translate="yes" xml:space="preserve">
          <source>getTimeMicros</source>
          <target state="translated">getTimeMicros</target>
        </trans-unit>
        <trans-unit id="97028dca92ae88cabd111abd823d4d6b4573ebd0" translate="yes" xml:space="preserve">
          <source>getTimeMillis</source>
          <target state="translated">getTimeMillis</target>
        </trans-unit>
        <trans-unit id="601106b2e9d90fbf10fe3611f102e3f976231a11" translate="yes" xml:space="preserve">
          <source>getTimeNanos</source>
          <target state="translated">getTimeNanos</target>
        </trans-unit>
        <trans-unit id="b01040941321e2e8a16ab559019d8bf51880b41a" translate="yes" xml:space="preserve">
          <source>getTimezoneOffset</source>
          <target state="translated">getTimezoneOffset</target>
        </trans-unit>
        <trans-unit id="d6db260facd3a1f4af2f343897f563753c0f5cd6" translate="yes" xml:space="preserve">
          <source>getUByteAt</source>
          <target state="translated">getUByteAt</target>
        </trans-unit>
        <trans-unit id="d5ec571f78e61e7519a286ba0ce6853478e6ea89" translate="yes" xml:space="preserve">
          <source>getUIntAt</source>
          <target state="translated">getUIntAt</target>
        </trans-unit>
        <trans-unit id="ababae593cd9dcb46723c217348d71df40c16466" translate="yes" xml:space="preserve">
          <source>getULongAt</source>
          <target state="translated">getULongAt</target>
        </trans-unit>
        <trans-unit id="65fa54a67fc47c3711c05334b05b65ab757e755d" translate="yes" xml:space="preserve">
          <source>getUShortAt</source>
          <target state="translated">getUShortAt</target>
        </trans-unit>
        <trans-unit id="7009410df1d13dcd33e5dc68aab361041fd0e3d7" translate="yes" xml:space="preserve">
          <source>getUTCDate</source>
          <target state="translated">getUTCDate</target>
        </trans-unit>
        <trans-unit id="d191c8fe19bc35efbf7892e87ef8909e4cb2d72a" translate="yes" xml:space="preserve">
          <source>getUTCDay</source>
          <target state="translated">getUTCDay</target>
        </trans-unit>
        <trans-unit id="0e89bd9f85ebe7b4479b16aad489a2586318f5b5" translate="yes" xml:space="preserve">
          <source>getUTCFullYear</source>
          <target state="translated">getUTCFullYear</target>
        </trans-unit>
        <trans-unit id="518a4fdac2753ed75f35e7116ebaf6b4d6c660ac" translate="yes" xml:space="preserve">
          <source>getUTCHours</source>
          <target state="translated">getUTCHours</target>
        </trans-unit>
        <trans-unit id="1e8f851cbf39bfb8ff44e9f186788f627df0946a" translate="yes" xml:space="preserve">
          <source>getUTCMilliseconds</source>
          <target state="translated">getUTCMilliseconds</target>
        </trans-unit>
        <trans-unit id="910cdb83fc69e3f23af1ba38f0e2404f0960b642" translate="yes" xml:space="preserve">
          <source>getUTCMinutes</source>
          <target state="translated">getUTCMinutes</target>
        </trans-unit>
        <trans-unit id="554107e0672107b09bab3f0c5bd9ace1106ca99f" translate="yes" xml:space="preserve">
          <source>getUTCMonth</source>
          <target state="translated">getUTCMonth</target>
        </trans-unit>
        <trans-unit id="2804efdb7c4f19e767919fa7dcec04465987b60f" translate="yes" xml:space="preserve">
          <source>getUTCSeconds</source>
          <target state="translated">getUTCSeconds</target>
        </trans-unit>
        <trans-unit id="2ee2040601f4a2fa03c5a94245115c9e89337265" translate="yes" xml:space="preserve">
          <source>getValue</source>
          <target state="translated">getValue</target>
        </trans-unit>
        <trans-unit id="9f91620773d32735b30371bac791c95c071c5625" translate="yes" xml:space="preserve">
          <source>getter</source>
          <target state="translated">getter</target>
        </trans-unit>
        <trans-unit id="ac75b0526fd984e31cede82fb0f827398093b740" translate="yes" xml:space="preserve">
          <source>getters (and setters in case of &lt;em&gt;var&lt;/em&gt;s) for all properties</source>
          <target state="translated">모든 속성에 대한 getter (및 &lt;em&gt;var&lt;/em&gt; 의 경우 setter )</target>
        </trans-unit>
        <trans-unit id="9027cc5a2c1321de60a2d71ccde6229d1152d6d3" translate="yes" xml:space="preserve">
          <source>global</source>
          <target state="translated">global</target>
        </trans-unit>
        <trans-unit id="d222e797649045ef24c8b9315eae0b5518b0c872" translate="yes" xml:space="preserve">
          <source>global variables, unless specially marked, can be only accessed from the main thread (that is, the thread &lt;em&gt;Kotlin/Native&lt;/em&gt; runtime was first initialized), if other thread access such a global, &lt;code&gt;IncorrectDereferenceException&lt;/code&gt; is thrown</source>
          <target state="translated">특별히 표시되지 않은 경우 전역 변수는 기본 스레드에서만 액세스 할 수 있습니다 (즉, 스레드 &lt;em&gt;Kotlin / 네이티브&lt;/em&gt; 런타임이 처음 초기화 된 경우). 이러한 전역 스레드와 같은 다른 스레드 액세스 인 &lt;code&gt;IncorrectDereferenceException&lt;/code&gt; 이 발생하는 경우</target>
        </trans-unit>
        <trans-unit id="1aced8579653946aebf50b84b8e4b897649460f1" translate="yes" xml:space="preserve">
          <source>globalArena</source>
          <target state="translated">globalArena</target>
        </trans-unit>
        <trans-unit id="8f10c18db3f9f217ce5b202a602ddc634eedd3b4" translate="yes" xml:space="preserve">
          <source>greater</source>
          <target state="translated">greater</target>
        </trans-unit>
        <trans-unit id="c5f590cc4e8870a95f545ed554e87b52f7e3aaff" translate="yes" xml:space="preserve">
          <source>greaterOrEqual</source>
          <target state="translated">greaterOrEqual</target>
        </trans-unit>
        <trans-unit id="efb22615df12aa7f71e4c5d9ccbcd20e67a8dacd" translate="yes" xml:space="preserve">
          <source>groupBy</source>
          <target state="translated">groupBy</target>
        </trans-unit>
        <trans-unit id="a5535dd3cf3c548d1a740b89222768d2a0d20f3c" translate="yes" xml:space="preserve">
          <source>groupByTo</source>
          <target state="translated">groupByTo</target>
        </trans-unit>
        <trans-unit id="36c145e9af3bc67073f46f870e79b3d1bb37995c" translate="yes" xml:space="preserve">
          <source>groupValues</source>
          <target state="translated">groupValues</target>
        </trans-unit>
        <trans-unit id="08568696cf124f1827f71a69dff44bf7e892c239" translate="yes" xml:space="preserve">
          <source>groupingBy</source>
          <target state="translated">groupingBy</target>
        </trans-unit>
        <trans-unit id="f8d8725f0a6382557b48ffe40a1e3cdd6211dd8a" translate="yes" xml:space="preserve">
          <source>groupingBy()</source>
          <target state="translated">groupingBy()</target>
        </trans-unit>
        <trans-unit id="0a894db7c792e10a79e380cb0453380548bbacb5" translate="yes" xml:space="preserve">
          <source>groups</source>
          <target state="translated">groups</target>
        </trans-unit>
        <trans-unit id="6dbdd59ab542c91f19905b4d8672b5320dcba285" translate="yes" xml:space="preserve">
          <source>half</source>
          <target state="translated">half</target>
        </trans-unit>
        <trans-unit id="8634f7d92dbbe8ba9ce501f81ba0ffc6f65f92e6" translate="yes" xml:space="preserve">
          <source>has a member- or extension-function &lt;code&gt;hasNext()&lt;/code&gt; that returns &lt;code&gt;Boolean&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Boolean&lt;/code&gt; 을 반환 하는 멤버 또는 확장 함수 &lt;code&gt;hasNext()&lt;/code&gt; 가 있습니다.</target>
        </trans-unit>
        <trans-unit id="aea3f7b1235293d50e4a4c4fac3a40bfc2e59941" translate="yes" xml:space="preserve">
          <source>has a member- or extension-function &lt;code&gt;iterator()&lt;/code&gt;, whose return type</source>
          <target state="translated">리턴 유형 의 멤버 또는 확장 함수 &lt;code&gt;iterator()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="173717297f2a5f9a1963e07ae7f28cdd6546da48" translate="yes" xml:space="preserve">
          <source>has a member- or extension-function &lt;code&gt;next()&lt;/code&gt;, and</source>
          <target state="translated">&lt;code&gt;next()&lt;/code&gt; 멤버 또는 확장 함수가 있고</target>
        </trans-unit>
        <trans-unit id="6a4bb1c0b5da07d2cf3ef7e0661ed054129ad8c7" translate="yes" xml:space="preserve">
          <source>hasAnnotation</source>
          <target state="translated">hasAnnotation</target>
        </trans-unit>
        <trans-unit id="0b9b9bd4307f004caaddc86649a6a51f5112082d" translate="yes" xml:space="preserve">
          <source>hasClass</source>
          <target state="translated">hasClass</target>
        </trans-unit>
        <trans-unit id="d2b369998943b61c344fae1261c16f89712665ba" translate="yes" xml:space="preserve">
          <source>hasNext</source>
          <target state="translated">hasNext</target>
        </trans-unit>
        <trans-unit id="7773dc4d06bdb1a16d168e6c76679248c978a486" translate="yes" xml:space="preserve">
          <source>hasNotPassedNow</source>
          <target state="translated">hasNotPassedNow</target>
        </trans-unit>
        <trans-unit id="21c1530a8cae7e638d822ab1e613ba8e73357090" translate="yes" xml:space="preserve">
          <source>hasPassedNow</source>
          <target state="translated">hasPassedNow</target>
        </trans-unit>
        <trans-unit id="78dd7ee6553f686fb9ba34f80f79ae57ed3638b1" translate="yes" xml:space="preserve">
          <source>hasPrevious</source>
          <target state="translated">hasPrevious</target>
        </trans-unit>
        <trans-unit id="2841ffa8a7bc0ed02f28ad38643b82e5463feabe" translate="yes" xml:space="preserve">
          <source>hasSurrogatePairAt</source>
          <target state="translated">hasSurrogatePairAt</target>
        </trans-unit>
        <trans-unit id="dda9472842eeb447b4c2478aca3ab56cfb1c4e42" translate="yes" xml:space="preserve">
          <source>hashCode</source>
          <target state="translated">hashCode</target>
        </trans-unit>
        <trans-unit id="37b4b9a181ff1f4908210e054c85a45292a3b975" translate="yes" xml:space="preserve">
          <source>hashMapOf</source>
          <target state="translated">hashMapOf</target>
        </trans-unit>
        <trans-unit id="654d096555af9067fbc1bd5203fd64689537c076" translate="yes" xml:space="preserve">
          <source>hashSetOf</source>
          <target state="translated">hashSetOf</target>
        </trans-unit>
        <trans-unit id="322253635abfbf63ec9e4c6cc4abe570b205bf47" translate="yes" xml:space="preserve">
          <source>hiddenSince</source>
          <target state="translated">hiddenSince</target>
        </trans-unit>
        <trans-unit id="52ab86a87214a453d9f82538264f190854915247" translate="yes" xml:space="preserve">
          <source>hour</source>
          <target state="translated">hour</target>
        </trans-unit>
        <trans-unit id="15cd97c2a1358bcce6adb02fee85927ce1fa2f69" translate="yes" xml:space="preserve">
          <source>hour12</source>
          <target state="translated">hour12</target>
        </trans-unit>
        <trans-unit id="5aedee0964c6b2b3fc2c57843d266e138c2f128a" translate="yes" xml:space="preserve">
          <source>hours</source>
          <target state="translated">hours</target>
        </trans-unit>
        <trans-unit id="ae436e58f9de28c8a8f2fb62d57d3aa1701465c6" translate="yes" xml:space="preserve">
          <source>hypot</source>
          <target state="translated">hypot</target>
        </trans-unit>
        <trans-unit id="6413e837d316aafcf260786cd21a849f88ae3069" translate="yes" xml:space="preserve">
          <source>iOS</source>
          <target state="translated">iOS</target>
        </trans-unit>
        <trans-unit id="02e7197455abce0cef51220c204646b76f4b598c" translate="yes" xml:space="preserve">
          <source>iOS (arm32, arm64, simulator x86_64)</source>
          <target state="translated">iOS (arm32, arm64, 시뮬레이터 x86_64)</target>
        </trans-unit>
        <trans-unit id="cf26be8a40af1b899dd6407af6e1e4c90db0b2e2" translate="yes" xml:space="preserve">
          <source>iOS ARM 32</source>
          <target state="translated">iOS ARM 32</target>
        </trans-unit>
        <trans-unit id="00e05065a78a9632a28b7d2f344f160bf9f6f78d" translate="yes" xml:space="preserve">
          <source>iOS ARM 64</source>
          <target state="translated">iOS ARM 64</target>
        </trans-unit>
        <trans-unit id="458455235cf1302eea803eb69616a4ac0609952c" translate="yes" xml:space="preserve">
          <source>iOS Simulator (x86_64)</source>
          <target state="translated">iOS 시뮬레이터 (x86_64)</target>
        </trans-unit>
        <trans-unit id="4b977f4da0d5645f2778be8deb235ba59424f0d4" translate="yes" xml:space="preserve">
          <source>iOS arm64 or x86_64</source>
          <target state="translated">iOS arm64 또는 x86_64</target>
        </trans-unit>
        <trans-unit id="87ea5dfc8b8e384d848979496e706390b497e547" translate="yes" xml:space="preserve">
          <source>id</source>
          <target state="translated">id</target>
        </trans-unit>
        <trans-unit id="90481f4868a2da6c9f737fd69686a6ce240e7093" translate="yes" xml:space="preserve">
          <source>identityHashCode</source>
          <target state="translated">identityHashCode</target>
        </trans-unit>
        <trans-unit id="4ad3e5c0dde43c7cd64f324c75e6604f1845b879" translate="yes" xml:space="preserve">
          <source>if no exceptions were suppressed;</source>
          <target state="translated">예외가 억제되지 않은 경우;</target>
        </trans-unit>
        <trans-unit id="e075de664ae7a5a4a9f56b406c8cbd4b5054fa2e" translate="yes" xml:space="preserve">
          <source>if no such element is found.</source>
          <target state="translated">그러한 요소가 없으면</target>
        </trans-unit>
        <trans-unit id="2d01fed4f698b0720026cef81d04dc93021faa7e" translate="yes" xml:space="preserve">
          <source>if the &lt;a href=&quot;../../kotlin/-char-sequence/get#kotlin.CharSequence%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this character sequence.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin/-char-sequence/get#kotlin.CharSequence%24get%28kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 문자 순서의 범위를 벗어난 경우</target>
        </trans-unit>
        <trans-unit id="ba112f55fd01fe560e165a67afd84f8d79911523" translate="yes" xml:space="preserve">
          <source>if the &lt;a href=&quot;../../kotlin/-char-sequence/get#kotlin.CharSequence%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this character sequence.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin/-char-sequence/get#kotlin.CharSequence%24get(kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 가이 문자 시퀀스의 범위를 벗어난 경우 .</target>
        </trans-unit>
        <trans-unit id="463bc1d4ce1d9e6eda70d2a4f470db54965e0090" translate="yes" xml:space="preserve">
          <source>if the &lt;a href=&quot;get#kotlin.CharSequence%24get%28kotlin.Int%29%2Findex&quot;&gt;index&lt;/a&gt; is out of bounds of this character sequence.</source>
          <target state="translated">&lt;a href=&quot;get#kotlin.CharSequence%24get%28kotlin.Int%29%2Findex&quot;&gt;인덱스&lt;/a&gt; 가이 문자 순서의 범위를 벗어난 경우</target>
        </trans-unit>
        <trans-unit id="3882df5447c013d9219ee432695dfa44ed13c767" translate="yes" xml:space="preserve">
          <source>if the &lt;a href=&quot;get#kotlin.CharSequence%24get(kotlin.Int)/index&quot;&gt;index&lt;/a&gt; is out of bounds of this character sequence.</source>
          <target state="translated">&lt;a href=&quot;get#kotlin.CharSequence%24get(kotlin.Int)/index&quot;&gt;인덱스&lt;/a&gt; 가이 문자 시퀀스의 범위를 벗어난 경우 .</target>
        </trans-unit>
        <trans-unit id="5e4ec63629f398bce3390207895d9d60512a5185" translate="yes" xml:space="preserve">
          <source>if the platform doesn't support suppressed exceptions;</source>
          <target state="translated">플랫폼이 억제 된 예외를 지원하지 않는 경우;</target>
        </trans-unit>
        <trans-unit id="1edcaa0a4b3df33fed46d5d3ecc8c89296fa96c8" translate="yes" xml:space="preserve">
          <source>if the sequence is empty.</source>
          <target state="translated">시퀀스가 비어있는 경우</target>
        </trans-unit>
        <trans-unit id="e798067250882d635c334fd67e109a9c1f6a5b8c" translate="yes" xml:space="preserve">
          <source>if this &lt;a href=&quot;-throwable/index#kotlin.Throwable&quot;&gt;Throwable&lt;/a&gt; instance has disabled the suppression.</source>
          <target state="translated">이 &lt;a href=&quot;-throwable/index#kotlin.Throwable&quot;&gt;Throwable&lt;/a&gt; 인스턴스가 억제를 비활성화 한 경우.</target>
        </trans-unit>
        <trans-unit id="14f4ab76d7c0508f6676f446687b27ebdb84624b" translate="yes" xml:space="preserve">
          <source>ifBlank</source>
          <target state="translated">ifBlank</target>
        </trans-unit>
        <trans-unit id="b46e04e21e1278618ab89f6be2c98bee70df8f37" translate="yes" xml:space="preserve">
          <source>ifEmpty</source>
          <target state="translated">ifEmpty</target>
        </trans-unit>
        <trans-unit id="f4ac49f6a53eac3d73fb1f34ed7cbc41268302c4" translate="yes" xml:space="preserve">
          <source>ifEmpty and ifBlank functions</source>
          <target state="translated">ifEmpty 및 ifBlank 함수</target>
        </trans-unit>
        <trans-unit id="6973f7a685a686d3fdfcde48c414b2c3ea609abf" translate="yes" xml:space="preserve">
          <source>ignoreCase</source>
          <target state="translated">ignoreCase</target>
        </trans-unit>
        <trans-unit id="cce3518fba31f4a49cf7ac1653fa47ab659c120a" translate="yes" xml:space="preserve">
          <source>immutableBlobOf</source>
          <target state="translated">immutableBlobOf</target>
        </trans-unit>
        <trans-unit id="470cec587602b47395a317eb72d14272f9628412" translate="yes" xml:space="preserve">
          <source>implies</source>
          <target state="translated">implies</target>
        </trans-unit>
        <trans-unit id="62fdfbd55d19b2a4671102ad7bca17d875f8207a" translate="yes" xml:space="preserve">
          <source>import</source>
          <target state="translated">import</target>
        </trans-unit>
        <trans-unit id="649d69d4a033b91f9217e3fc5252ea59600a1bb3" translate="yes" xml:space="preserve">
          <source>imports</source>
          <target state="translated">imports</target>
        </trans-unit>
        <trans-unit id="67eebce0931c8255cdd015b82985d763667ca9fd" translate="yes" xml:space="preserve">
          <source>in Kotlin it would be:</source>
          <target state="translated">코 틀린에서 그것은 :</target>
        </trans-unit>
        <trans-unit id="b36379d7895f9f8efb6747680f62bdf057dba904" translate="yes" xml:space="preserve">
          <source>inDays</source>
          <target state="translated">inDays</target>
        </trans-unit>
        <trans-unit id="200534c2cb979f5f48c7ef8f33b81e5fe9c6c7ce" translate="yes" xml:space="preserve">
          <source>inHours</source>
          <target state="translated">inHours</target>
        </trans-unit>
        <trans-unit id="436d83d1a4ee0e5842b1e3071ed0f69139635e29" translate="yes" xml:space="preserve">
          <source>inMicroseconds</source>
          <target state="translated">inMicroseconds</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
