<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="tensorflow">
    <body>
      <group id="tensorflow">
        <trans-unit id="44d879e45f19c9532689762ba8424920b9bfe4cc" translate="yes" xml:space="preserve">
          <source>Dict of metric results keyed by name. The values of the dict can be one of the following: (1) instance of &lt;code&gt;Metric&lt;/code&gt; class. (2) Results of calling a metric function, namely a &lt;code&gt;(metric_tensor, update_op)&lt;/code&gt; tuple. &lt;code&gt;metric_tensor&lt;/code&gt; should be evaluated without any impact on state (typically is a pure computation results based on variables.). For example, it should not trigger the &lt;code&gt;update_op&lt;/code&gt; or requires any input fetching.</source>
          <target state="translated">이름으로 입력 된 메트릭 결과의 사전. dict의 값은 다음 중 하나 일 수 있습니다. (1) &lt;code&gt;Metric&lt;/code&gt; 클래스의 인스턴스 . (2) 메트릭 함수, 즉 &lt;code&gt;(metric_tensor, update_op)&lt;/code&gt; 튜플 을 호출 한 결과 . &lt;code&gt;metric_tensor&lt;/code&gt; 는 상태에 영향을주지 않고 평가되어야합니다 (일반적으로 변수를 기반으로 한 순수한 계산 결과 임). 예를 들어 &lt;code&gt;update_op&lt;/code&gt; 을 트리거하지 않아야 하거나 입력 가져 오기가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="909a303efd4136c5fdf13b2a25b3f731e087560f" translate="yes" xml:space="preserve">
          <source>Dict of strings representing input tensor names mapped to tuple of floats representing the mean and standard deviation of the training data (e.g., {&quot;foo&quot; : (0., 1.)}). Only need if &lt;code&gt;inference_input_type&lt;/code&gt; is &lt;code&gt;QUANTIZED_UINT8&lt;/code&gt;. real_input_value = (quantized_input_value - mean_value) / std_dev_value. (default {})</source>
          <target state="translated">훈련 데이터의 평균 및 표준 편차를 나타내는 부동 소수점 튜플에 매핑 된 입력 텐서 이름을 나타내는 문자열 사전입니다 (예 : { &quot;foo&quot;: (0., 1.)}). &lt;code&gt;inference_input_type&lt;/code&gt; 이 &lt;code&gt;QUANTIZED_UINT8&lt;/code&gt; 인 경우에만 필요합니다 . real_input_value = (quantized_input_value-평균 _ 값) / std_dev_value. (기본 {})</target>
        </trans-unit>
        <trans-unit id="ef1f5c7726cca2a2b467cb0ffa34d4eeb72e4a3f" translate="yes" xml:space="preserve">
          <source>Dict of strings representing input tensor names to list of integers representing input shapes (e.g., {&quot;foo&quot; : [1, 16, 16, 3]}). Automatically determined when input shapes is None (e.g., {&quot;foo&quot; : None}). (default None)</source>
          <target state="translated">입력 모양을 나타내는 정수 목록에 대한 입력 텐서 이름을 나타내는 문자열 사전 (예 : { &quot;foo&quot;: [1, 16, 16, 3]}). 입력 모양이 없음 (예 : { &quot;foo&quot;: 없음}) 인 경우 자동으로 결정됩니다. (기본값 없음)</target>
        </trans-unit>
        <trans-unit id="4c06d03fccbcf390913553db386aaa71b9c2fea8" translate="yes" xml:space="preserve">
          <source>Dict or list of pairs of a boolean scalar tensor and a callable which returns a list of tensors.</source>
          <target state="translated">부울 스칼라 텐서와 텐서 목록을 반환하는 콜 러블 쌍의 사전 또는 목록입니다.</target>
        </trans-unit>
        <trans-unit id="17898922d89bbf7422792b3e546712173284779f" translate="yes" xml:space="preserve">
          <source>Dict with keyword arguments for &lt;code&gt;fn&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fn&lt;/code&gt; 에 대한 키워드 인수가있는 사전 .</target>
        </trans-unit>
        <trans-unit id="508a643ac347c8b219c1ccfb18cd8a7355d609dd" translate="yes" xml:space="preserve">
          <source>Dict with keyword arguments to pass to &lt;code&gt;fn()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fn()&lt;/code&gt; 에 전달할 키워드 인수가있는 사전 .</target>
        </trans-unit>
        <trans-unit id="965ddba423e3bd39494a9aba3603fc61353b628d" translate="yes" xml:space="preserve">
          <source>Dict with keyword per-thread arguments for &lt;code&gt;merge_fn&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;merge_fn&lt;/code&gt; 에 대한 키워드 스레드 당 인수가있는 사전 .</target>
        </trans-unit>
        <trans-unit id="e9f230a35346dd8bb6d9625795bf4574bf538157" translate="yes" xml:space="preserve">
          <source>Dict, contains the return value of &lt;code&gt;model.predict_step&lt;/code&gt;, it typically returns a dict with a key 'outputs' containing the model's outputs.</source>
          <target state="translated">Dict는 &lt;code&gt;model.predict_step&lt;/code&gt; 의 반환 값을 포함하며 일반적으로 모델의 출력을 포함하는 키 '출력'이있는 dict를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="646f5007fb09f50418f0f945ee66fb0e10d117a6" translate="yes" xml:space="preserve">
          <source>Dict, contains the return value of &lt;code&gt;model.test_step&lt;/code&gt;. Typically, the values of the &lt;code&gt;Model&lt;/code&gt;'s metrics are returned. Example: &lt;code&gt;{'loss': 0.2, 'accuracy': 0.7}&lt;/code&gt;.</source>
          <target state="translated">Dict는 &lt;code&gt;model.test_step&lt;/code&gt; 의 반환 값을 포함합니다 . 일반적으로 &lt;code&gt;Model&lt;/code&gt; 의 메트릭 값 이 반환됩니다. 예 : &lt;code&gt;{'loss': 0.2, 'accuracy': 0.7}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f672c30d598a6cd145779add379be036bf9041f3" translate="yes" xml:space="preserve">
          <source>Dict, contains the return value of &lt;code&gt;model.train_step&lt;/code&gt;. Typically, the values of the &lt;code&gt;Model&lt;/code&gt;'s metrics are returned. Example: &lt;code&gt;{'loss': 0.2, 'accuracy': 0.7}&lt;/code&gt;.</source>
          <target state="translated">Dict는 &lt;code&gt;model.train_step&lt;/code&gt; 의 반환 값을 포함합니다 . 일반적으로 &lt;code&gt;Model&lt;/code&gt; 의 메트릭 값 이 반환됩니다. 예 : &lt;code&gt;{'loss': 0.2, 'accuracy': 0.7}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb9d0b713e5a9c004469847af05441763e87b562" translate="yes" xml:space="preserve">
          <source>Dict, keyword named properties for common layer attributes, like &lt;code&gt;trainable&lt;/code&gt; etc when constructing the cell from configs of get_config().</source>
          <target state="translated">get_config ()의 구성에서 셀을 구성 할 때 &lt;code&gt;trainable&lt;/code&gt; 등과 같은 공통 계층 속성에 대한 Dict, 키워드 이름 지정된 속성 .</target>
        </trans-unit>
        <trans-unit id="d2548a8ff7d943de6313c443fecdf50e3b85bfba" translate="yes" xml:space="preserve">
          <source>Dict, keyword named properties for common layer attributes, like &lt;code&gt;trainable&lt;/code&gt; etc when constructing the cell from configs of get_config(). When restoring from CudnnLSTM-trained checkpoints, must use &lt;code&gt;CudnnCompatibleLSTMCell&lt;/code&gt; instead.</source>
          <target state="translated">get_config ()의 구성에서 셀을 구성 할 때 &lt;code&gt;trainable&lt;/code&gt; 등과 같은 공통 계층 속성에 대한 Dict, 키워드 이름 지정된 속성 . CudnnLSTM 학습 체크 포인트에서 복원 할 때 대신 &lt;code&gt;CudnnCompatibleLSTMCell&lt;/code&gt; 을 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="d9191b665af88e9e8db607184fe50ebf58b507a1" translate="yes" xml:space="preserve">
          <source>Dict, keyword named properties for common layer attributes, like &lt;code&gt;trainable&lt;/code&gt; etc when constructing the cell from configs of get_config(). When restoring from CudnnLSTM-trained checkpoints, use &lt;code&gt;CudnnCompatibleLSTMCell&lt;/code&gt; instead.</source>
          <target state="translated">get_config ()의 구성에서 셀을 구성 할 때 &lt;code&gt;trainable&lt;/code&gt; 등과 같은 공통 계층 속성에 대한 Dict, 키워드 이름 지정된 속성 . CudnnLSTM 학습 체크 포인트에서 복원 할 때 대신 &lt;code&gt;CudnnCompatibleLSTMCell&lt;/code&gt; 을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="5beb4336b9460465ea32fb817eddf8f1ebba8276" translate="yes" xml:space="preserve">
          <source>Dict, metric results for this training epoch, and for the validation epoch if validation is performed. Validation result keys are prefixed with &lt;code&gt;val_&lt;/code&gt;.</source>
          <target state="translated">이 훈련 시대 및 검증이 수행 된 경우 검증 시대에 대한 Dict, 메트릭 결과. 유효성 검사 결과 키에는 &lt;code&gt;val_&lt;/code&gt; 접두사가 붙 습니다 .</target>
        </trans-unit>
        <trans-unit id="7c4a149b781e100501d8027a6e543a37620f960a" translate="yes" xml:space="preserve">
          <source>Dict, where keys are names of the variables in the checkpoint and values are current variables or names of current variables (in default graph).</source>
          <target state="translated">Dict, 여기서 키는 체크 포인트의 변수 이름이고 값은 현재 변수 또는 현재 변수의 이름 (기본 그래프)입니다.</target>
        </trans-unit>
        <trans-unit id="86c162cef6dbd2be2f250c055244944595fc1234" translate="yes" xml:space="preserve">
          <source>Dict. Aggregated metric results up until this batch.</source>
          <target state="translated">딕트. 이 배치까지 집계 된 측정 항목 결과입니다.</target>
        </trans-unit>
        <trans-unit id="766035e064f475d1317fd12785982c859e8d34cc" translate="yes" xml:space="preserve">
          <source>Dict. Currently no data is passed to this argument for this method but that may change in the future.</source>
          <target state="translated">딕트. 현재이 메서드에 대해이 인수에 데이터가 전달되지 않지만 나중에 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a178bc723c3ed2d7366b9e7b2e87ae9dd86613ca" translate="yes" xml:space="preserve">
          <source>Dict. Currently the output of the last call to &lt;code&gt;on_epoch_end()&lt;/code&gt; is passed to this argument for this method but that may change in the future.</source>
          <target state="translated">딕트. 현재 &lt;code&gt;on_epoch_end()&lt;/code&gt; 에 대한 마지막 호출의 출력은 이 메서드에 대한이 인수로 전달되지만 나중에 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="148347a68d512e356eee0089331e25d7389256af" translate="yes" xml:space="preserve">
          <source>Dict. Currently the output of the last call to &lt;code&gt;on_test_batch_end()&lt;/code&gt; is passed to this argument for this method but that may change in the future.</source>
          <target state="translated">딕트. 현재 &lt;code&gt;on_test_batch_end()&lt;/code&gt; 에 대한 마지막 호출의 출력은 이 메서드에 대한이 인수로 전달되지만 나중에 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="437723684bb6ac64398771a961076e8bece6f7f5" translate="yes" xml:space="preserve">
          <source>Dict. Training parameters (eg. verbosity, batch size, number of epochs...).</source>
          <target state="translated">딕트. 훈련 매개 변수 (예 : 상세도, 배치 크기, 에포크 수 ...)</target>
        </trans-unit>
        <trans-unit id="380d89dbad18e146d854f74b9ed3ea7180258e67" translate="yes" xml:space="preserve">
          <source>Dictionary for cloning customized objects. This is used with classes that is not part of this pip package. For example, if user maintains a &lt;code&gt;relu6&lt;/code&gt; class that inherits from &lt;a href=&quot;../../../../keras/layers/layer&quot;&gt;&lt;code&gt;tf.keras.layers.Layer&lt;/code&gt;&lt;/a&gt;, then pass &lt;code&gt;custom_objects={'relu6': relu6}&lt;/code&gt;. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">사용자 정의 된 개체를 복제하기위한 사전입니다. 이 pip 패키지의 일부가 아닌 클래스와 함께 사용됩니다. 예를 들어, 사용자가 유지 &lt;code&gt;relu6&lt;/code&gt; 의 으로부터 상속 클래스 &lt;a href=&quot;../../../../keras/layers/layer&quot;&gt; &lt;code&gt;tf.keras.layers.Layer&lt;/code&gt; 이&lt;/a&gt; 후 통과 &lt;code&gt;custom_objects={'relu6': relu6}&lt;/code&gt; . 기본값은 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0e37cefa6c33fb6c584ebae8fd741daf8e29d704" translate="yes" xml:space="preserve">
          <source>Dictionary for cloning customized objects. This is used with classes that is not part of this pip package. For example, if user maintains a &lt;code&gt;relu6&lt;/code&gt; class that inherits from &lt;a href=&quot;../layers/layer&quot;&gt;&lt;code&gt;tf.keras.layers.Layer&lt;/code&gt;&lt;/a&gt;, then pass &lt;code&gt;custom_objects={'relu6': relu6}&lt;/code&gt;. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">사용자 정의 된 개체를 복제하기위한 사전입니다. 이 pip 패키지의 일부가 아닌 클래스와 함께 사용됩니다. 예를 들어, 사용자가 유지 &lt;code&gt;relu6&lt;/code&gt; 의 으로부터 상속 클래스 &lt;a href=&quot;../layers/layer&quot;&gt; &lt;code&gt;tf.keras.layers.Layer&lt;/code&gt; 이&lt;/a&gt; 후 통과 &lt;code&gt;custom_objects={'relu6': relu6}&lt;/code&gt; . 기본값은 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="37fdcb2ad9792b61fd52fda1b9926d23f7214baa" translate="yes" xml:space="preserve">
          <source>Dictionary mapping integer axes to a specific dimension value.</source>
          <target state="translated">정수 축을 특정 차원 값에 매핑하는 사전입니다.</target>
        </trans-unit>
        <trans-unit id="9f5d33c90e0d9798d9a480cbc5070c0dbe280ed8" translate="yes" xml:space="preserve">
          <source>Dictionary of configured experimental optimizer options</source>
          <target state="translated">구성된 실험 최적화 옵션 사전</target>
        </trans-unit>
        <trans-unit id="cd05f23cb61033e45591049c256b81b3322f2191" translate="yes" xml:space="preserve">
          <source>Dictionary of environment variable settings. If None, no environment variables will be set for the child process. This is to make tests more hermetic. NOTE: this behavior is different than the standard subprocess module.</source>
          <target state="translated">환경 변수 설정 사전. None이면 자식 프로세스에 대한 환경 변수가 설정되지 않습니다. 이것은 테스트를 더 밀폐하기위한 것입니다. 참고 :이 동작은 표준 하위 프로세스 모듈과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="22f0b83be7243655320426136df37a300fc8dcf5" translate="yes" xml:space="preserve">
          <source>Dictionary of experimental optimizer options to configure. Valid keys:</source>
          <target state="translated">구성 할 실험적 최적화 옵션의 사전입니다. 유효한 키 :</target>
        </trans-unit>
        <trans-unit id="a803cc139fcb180166cfe08ca2f07bf64a8dd09b" translate="yes" xml:space="preserve">
          <source>Dictionary of options that are required to load the delegate. All keys and values in the dictionary should be convertible to str. Consult the documentation of the specific delegate for required and legal options. (default None)</source>
          <target state="translated">대리자를로드하는 데 필요한 옵션 사전입니다. 사전에있는 모든 키와 값은 str로 변환 할 수 있어야합니다. 필수 및 법적 옵션에 대해서는 특정 대리인의 문서를 참조하십시오. (기본값 없음)</target>
        </trans-unit>
        <trans-unit id="728b0a7067cfc907b74add2ff5e454b6f21b5a06" translate="yes" xml:space="preserve">
          <source>Dictionary of parameter names mapped to their values.</source>
          <target state="translated">해당 값에 매핑 된 매개 변수 이름 사전</target>
        </trans-unit>
        <trans-unit id="692e97759c5554276675078a2fefb82c8e19cbd6" translate="yes" xml:space="preserve">
          <source>Dictionary of parameters used to instantiate this &lt;code&gt;Distribution&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Distribution&lt;/code&gt; 를 인스턴스화하는 데 사용되는 매개 변수 사전 .</target>
        </trans-unit>
        <trans-unit id="953a555a1e6495ca26794c7f94466334cf208343" translate="yes" xml:space="preserve">
          <source>Dictionary or dictionaries of &lt;code&gt;{name: object}&lt;/code&gt; pairs.</source>
          <target state="translated">&lt;code&gt;{name: object}&lt;/code&gt; 쌍 의 사전 또는 사전 .</target>
        </trans-unit>
        <trans-unit id="40e3659edc3b8f1ab253617a6adb73d8830b5077" translate="yes" xml:space="preserve">
          <source>Dictionary with extra keyword args that are passed to the Flag &lt;strong&gt;init&lt;/strong&gt;.</source>
          <target state="translated">Flag &lt;strong&gt;init에&lt;/strong&gt; 전달되는 추가 키워드 인수가있는 사전 .</target>
        </trans-unit>
        <trans-unit id="ce9cdf65929e404b3fb997372c724572402ebe6e" translate="yes" xml:space="preserve">
          <source>Dictionary with job names as key and number of tasks in the job as value. Defaults to as many 'worker's as there are (Slurm) tasks.</source>
          <target state="translated">작업 이름을 키로, 작업의 작업 수를 값으로 사용하는 사전. 기본값은 (Slurm) 작업 수만큼 '작업자'입니다.</target>
        </trans-unit>
        <trans-unit id="a129d5879607993b9a5af9730ed1d34c8749054e" translate="yes" xml:space="preserve">
          <source>Dictionary: configuration dictionary. - Keras Optimizer instance (it will be returned unchanged). - TensorFlow Optimizer instance (it will be wrapped as a Keras Optimizer).</source>
          <target state="translated">사전 : 구성 사전. -Keras Optimizer 인스턴스 (변경되지 않은 상태로 반환 됨). -TensorFlow Optimizer 인스턴스 (Keras Optimizer로 랩핑 됨).</target>
        </trans-unit>
        <trans-unit id="69d175e81af1fe4ee0b582d10973f9c5fd60b6f3" translate="yes" xml:space="preserve">
          <source>Dictionary; optional custom HTTP headers.</source>
          <target state="translated">사전; 선택적 사용자 지정 HTTP 헤더.</target>
        </trans-unit>
        <trans-unit id="ec875ba1bed287ce7bb6f77c34544a7bdd7169be" translate="yes" xml:space="preserve">
          <source>Difference between two successive values.</source>
          <target state="translated">연속 된 두 값의 차이.</target>
        </trans-unit>
        <trans-unit id="7053cc3bf650cd21039b39217036ddd606fbdf92" translate="yes" xml:space="preserve">
          <source>Differences from &lt;code&gt;CheckpointSaverHook&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;CheckpointSaverHook&lt;/code&gt; 와의 차이점 :</target>
        </trans-unit>
        <trans-unit id="5979266576871d21b2afe287422bfec66c9f8601" translate="yes" xml:space="preserve">
          <source>Differs from &lt;code&gt;recall_at_k&lt;/code&gt; in that predictions must be in the form of top &lt;code&gt;k&lt;/code&gt; class indices, whereas &lt;code&gt;recall_at_k&lt;/code&gt; expects logits. Refer to &lt;code&gt;recall_at_k&lt;/code&gt; for more details.</source>
          <target state="translated">&lt;code&gt;recall_at_k&lt;/code&gt; 는 로짓을 예상 하는 반면, 예측은 상위 &lt;code&gt;k&lt;/code&gt; 개의 클래스 인덱스 형식이어야한다는 점 에서 &lt;code&gt;recall_at_k&lt;/code&gt; 와 다릅니다 . 자세한 내용은 &lt;code&gt;recall_at_k&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="be909077c0641dc699923f6b079868063b8f51f3" translate="yes" xml:space="preserve">
          <source>Differs from &lt;code&gt;sparse_precision_at_k&lt;/code&gt; in that predictions must be in the form of top &lt;code&gt;k&lt;/code&gt; class indices, whereas &lt;code&gt;sparse_precision_at_k&lt;/code&gt; expects logits. Refer to &lt;code&gt;sparse_precision_at_k&lt;/code&gt; for more details.</source>
          <target state="translated">&lt;code&gt;sparse_precision_at_k&lt;/code&gt; 는 로짓을 예상 하지만 sparse_precision_at_k 는 예측이 상위 &lt;code&gt;k&lt;/code&gt; 개의 클래스 인덱스 형식이어야한다는 점 에서 &lt;code&gt;sparse_precision_at_k&lt;/code&gt; 와 다릅니다 . 자세한 내용은 &lt;code&gt;sparse_precision_at_k&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="71b654a46473d2ed0c7aa5dcfaceb5a36f6c2744" translate="yes" xml:space="preserve">
          <source>Digamma</source>
          <target state="translated">Digamma</target>
        </trans-unit>
        <trans-unit id="f4a4825ca5ca26010a11513b1ed31f16442ba31c" translate="yes" xml:space="preserve">
          <source>Dilation2D</source>
          <target state="translated">Dilation2D</target>
        </trans-unit>
        <trans-unit id="7a5e4f90dfd04f0ae80692f5452b3abdb87db450" translate="yes" xml:space="preserve">
          <source>Dilation2DBackpropFilter</source>
          <target state="translated">Dilation2DBackpropFilter</target>
        </trans-unit>
        <trans-unit id="bc8f1d85c3909ccfed4ada73ff7ba64b493c322b" translate="yes" xml:space="preserve">
          <source>Dilation2DBackpropInput</source>
          <target state="translated">Dilation2DBackpropInput</target>
        </trans-unit>
        <trans-unit id="5b21f885f597e9e74a55d4389b351564142f53dd" translate="yes" xml:space="preserve">
          <source>Dimension (in the sense of vector spaces) of the domain of this operator.</source>
          <target state="translated">이 연산자의 도메인의 차원 (벡터 공간의 의미)입니다.</target>
        </trans-unit>
        <trans-unit id="be230f49ad256184670ae811a2455494d85c47d3" translate="yes" xml:space="preserve">
          <source>Dimension (in the sense of vector spaces) of the range of this operator.</source>
          <target state="translated">이 연산자 범위의 차원 (벡터 공간의 의미)입니다.</target>
        </trans-unit>
        <trans-unit id="81e1794ad324d87e9c3913bd4e690a960b22a7bd" translate="yes" xml:space="preserve">
          <source>Dimension along which to normalize. A scalar or a vector of integers.</source>
          <target state="translated">정규화 할 차원입니다. 스칼라 또는 정수 벡터.</target>
        </trans-unit>
        <trans-unit id="e605fbab33cf913d60208b6de17431f62da70c5d" translate="yes" xml:space="preserve">
          <source>Dimension moduli are computed as follows:</source>
          <target state="translated">치수 계수는 다음과 같이 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="3943de17d44cccd425d2bd7cc5f97716aeaf9ac4" translate="yes" xml:space="preserve">
          <source>Dimension modulo are computed as follows:</source>
          <target state="translated">차원 모듈로는 다음과 같이 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="12353dfd6f2cf8e65515e61ad27ef6f22399f498" translate="yes" xml:space="preserve">
          <source>Dimension to concatenate along. Must be in range [-rank, rank), where rank is the number of dimensions in each input &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="translated">함께 연결할 치수입니다. 범위 [-rank, rank)에 있어야합니다. 여기서 rank는 각 입력 &lt;code&gt;SparseTensor&lt;/code&gt; 의 차원 수입니다 .</target>
        </trans-unit>
        <trans-unit id="5ddfbac242ac55614543ee86ed26494de45d412b" translate="yes" xml:space="preserve">
          <source>Dimensions are combined as follows:</source>
          <target state="translated">치수는 다음과 같이 결합됩니다.</target>
        </trans-unit>
        <trans-unit id="0b1428aa50cfced90eb241c03bec0e26433bb51c" translate="yes" xml:space="preserve">
          <source>Dimensions are compared as follows:</source>
          <target state="translated">치수는 다음과 같이 비교됩니다.</target>
        </trans-unit>
        <trans-unit id="652fefec3558d17b4cbbf981d82b724df3b2008f" translate="yes" xml:space="preserve">
          <source>Dimensions are divided as follows:</source>
          <target state="translated">치수는 다음과 같이 나뉩니다.</target>
        </trans-unit>
        <trans-unit id="184715345bdd753f41c29c261ac6ecb895b9c071" translate="yes" xml:space="preserve">
          <source>Dimensions are subtracted as follows:</source>
          <target state="translated">치수는 다음과 같이 뺍니다.</target>
        </trans-unit>
        <trans-unit id="19062e66ee039136c8d284ba410e9e11a1c74f93" translate="yes" xml:space="preserve">
          <source>Dimensions are summed as follows:</source>
          <target state="translated">차원은 다음과 같이 요약됩니다.</target>
        </trans-unit>
        <trans-unit id="581c373342481761b0c26c77e0171656cbaceb9f" translate="yes" xml:space="preserve">
          <source>Dimensions set to &lt;code&gt;None&lt;/code&gt; are not updated:</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; 으로 설정된 치수 는 업데이트되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7b4f953596edfc1abe7c86e97539af55b2287f27" translate="yes" xml:space="preserve">
          <source>DirectedInterleaveDataset</source>
          <target state="translated">DirectedInterleaveDataset</target>
        </trans-unit>
        <trans-unit id="d3fa81283d2aa4a2b1537786c7a78e5ebfbdfb4e" translate="yes" xml:space="preserve">
          <source>Directly calling a regularizer</source>
          <target state="translated">직접 정규화 기 호출</target>
        </trans-unit>
        <trans-unit id="6dffacc4a7f337ffd42bfbd75f187d8a0411546c" translate="yes" xml:space="preserve">
          <source>Directly constructed.</source>
          <target state="translated">직접 건설.</target>
        </trans-unit>
        <trans-unit id="47db5c108e42f46b065238adb0dcb583634f4b8c" translate="yes" xml:space="preserve">
          <source>Directory containing the SavedModel files.</source>
          <target state="translated">저장된 모델 파일이 포함 된 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="013b158d76f61c00a04d7b712532c489deea3731" translate="yes" xml:space="preserve">
          <source>Directory in which the SavedModel protocol buffer and variables to be loaded are located.</source>
          <target state="translated">로드 할 SavedModel 프로토콜 버퍼 및 변수가있는 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="b920e4b3618466000ec34f6f3a5c62331a87d6f7" translate="yes" xml:space="preserve">
          <source>Directory name.</source>
          <target state="translated">디렉토리 이름.</target>
        </trans-unit>
        <trans-unit id="981a7757f49be188cf8c4baa4b42d1642ef61b80" translate="yes" xml:space="preserve">
          <source>Directory to save &lt;code&gt;Estimator&lt;/code&gt; model parameters, graph, summary files for TensorBoard, etc. If unset a directory will be created with &lt;code&gt;tempfile.mkdtemp&lt;/code&gt;</source>
          <target state="translated">디렉토리 저장 &lt;code&gt;Estimator&lt;/code&gt; 모델 매개 변수, 그래프, 디렉토리가 작성됩니다 설정되지 않은 경우 등 TensorBoard에 대한 요약 파일 &lt;code&gt;tempfile.mkdtemp&lt;/code&gt; 을</target>
        </trans-unit>
        <trans-unit id="b836c4b14fac25373b6fd58bea5de8b432d112d8" translate="yes" xml:space="preserve">
          <source>Directory to save model parameters, graph and etc. This can also be used to load checkpoints from the directory into a estimator to continue training a previously saved model.</source>
          <target state="translated">모델 매개 변수, 그래프 등을 저장하기위한 디렉토리. 이전에 저장된 모델을 계속 훈련하기 위해 디렉토리에서 추정기로 체크 포인트를로드하는 데 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e9e3f46c4adb6335d58c44815a854d49516a56f" translate="yes" xml:space="preserve">
          <source>Directory to save model parameters, graph and etc. This can also be used to load checkpoints from the directory into a estimator to continue training a previously saved model. If &lt;code&gt;None&lt;/code&gt;, the model_dir in &lt;code&gt;config&lt;/code&gt; will be used if set. If both are set, they must be same. If both are &lt;code&gt;None&lt;/code&gt;, a temporary directory will be used.</source>
          <target state="translated">모델 매개 변수, 그래프 등을 저장하기위한 디렉토리. 이전에 저장된 모델을 계속 훈련하기 위해 디렉토리에서 추정기로 체크 포인트를로드하는 데 사용할 수도 있습니다. 경우 &lt;code&gt;None&lt;/code&gt; 에있는 model_dir &lt;code&gt;config&lt;/code&gt; 설정하면 사용됩니다. 둘 다 설정된 경우 동일해야합니다. 둘 다 &lt;code&gt;None&lt;/code&gt; 이면 임시 디렉토리가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5b24c0e810e5eb3091900fcdad911e32a212bb0d" translate="yes" xml:space="preserve">
          <source>Directory to save model parameters, graph and etc. This can also be used to load checkpoints from the directory into an estimator to continue training a previously saved model.</source>
          <target state="translated">모델 매개 변수, 그래프 등을 저장하기위한 디렉토리. 이전에 저장된 모델을 계속 훈련하기 위해 디렉토리에서 추정기로 체크 포인트를로드하는 데 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="809b50157320760ad190f8e6a58208d90ac50955" translate="yes" xml:space="preserve">
          <source>Directory to save model parameters, graph and etc. This can also be used to load checkpoints from the directory into an estimator to continue training a previously saved model. If &lt;code&gt;PathLike&lt;/code&gt; object, the path will be resolved. If &lt;code&gt;None&lt;/code&gt;, the model_dir in &lt;code&gt;config&lt;/code&gt; will be used if set. If both are set, they must be same. If both are &lt;code&gt;None&lt;/code&gt;, a temporary directory will be used.</source>
          <target state="translated">모델 매개 변수, 그래프 등을 저장하기위한 디렉토리. 이전에 저장된 모델을 계속 훈련하기 위해 디렉토리에서 추정기로 체크 포인트를로드하는 데 사용할 수도 있습니다. 경우 &lt;code&gt;PathLike&lt;/code&gt; 의 객체 경로가 해결 될 것입니다. 경우 &lt;code&gt;None&lt;/code&gt; 에있는 model_dir &lt;code&gt;config&lt;/code&gt; 설정하면 사용됩니다. 둘 다 설정된 경우 동일해야합니다. 둘 다 &lt;code&gt;None&lt;/code&gt; 이면 임시 디렉토리가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="37aec56764fe7bfe309080cb06352bdc69f54563" translate="yes" xml:space="preserve">
          <source>Directory where the data is located. If &lt;code&gt;labels&lt;/code&gt; is &quot;inferred&quot;, it should contain subdirectories, each containing images for a class. Otherwise, the directory structure is ignored.</source>
          <target state="translated">데이터가있는 디렉토리입니다. &lt;code&gt;labels&lt;/code&gt; 이 &quot;추론 된&quot; 경우 각각 클래스에 대한 이미지를 포함하는 하위 디렉터리를 포함해야합니다. 그렇지 않으면 디렉토리 구조가 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="0453b553548b68ff0d55e89cd0536b5f784d499d" translate="yes" xml:space="preserve">
          <source>Directory where the data is located. If &lt;code&gt;labels&lt;/code&gt; is &quot;inferred&quot;, it should contain subdirectories, each containing text files for a class. Otherwise, the directory structure is ignored.</source>
          <target state="translated">데이터가있는 디렉토리입니다. &lt;code&gt;labels&lt;/code&gt; 이 &quot;추론 된&quot; 경우 , 각각 클래스에 대한 텍스트 파일을 포함하는 하위 디렉터리를 포함해야합니다. 그렇지 않으면 디렉토리 구조가 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="38f445403d8c7d0fda5f7f2d8e17b4691e759e6f" translate="yes" xml:space="preserve">
          <source>Directory where the model was saved.</source>
          <target state="translated">모델이 저장된 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="7d28b85ec57058b1331f1057608fb05c79aff840" translate="yes" xml:space="preserve">
          <source>Directory where the variables were saved.</source>
          <target state="translated">변수가 저장된 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="b848d7f7fc24ccbaad105decf5ce924f8a7ea623" translate="yes" xml:space="preserve">
          <source>Directory where to write the graph. This can refer to remote filesystems, such as Google Cloud Storage (GCS).</source>
          <target state="translated">그래프를 작성할 디렉토리입니다. 이는 Google Cloud Storage (GCS)와 같은 원격 파일 시스템을 나타낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="457a972c4e4938b22e2dc6c61707fd82b71ef298" translate="yes" xml:space="preserve">
          <source>Directory with checkpoints file or path to checkpoint file.</source>
          <target state="translated">체크 포인트 파일이있는 디렉토리 또는 체크 포인트 파일 경로입니다.</target>
        </trans-unit>
        <trans-unit id="c50127a0440dcdfd4fcc4b1a7610aeb013e2c55b" translate="yes" xml:space="preserve">
          <source>Directory with checkpoints file or path to checkpoint.</source>
          <target state="translated">체크 포인트 파일 또는 체크 포인트 경로가있는 디렉토리.</target>
        </trans-unit>
        <trans-unit id="c3ab2c01286b85519de6608b2334ff814f08dd79" translate="yes" xml:space="preserve">
          <source>Dirichlet distribution.</source>
          <target state="translated">디 리클 렛 분포.</target>
        </trans-unit>
        <trans-unit id="1917ae3fe4d2ed647744d55c2cb8ea81f700b72d" translate="yes" xml:space="preserve">
          <source>Dirichlet-Multinomial compound distribution.</source>
          <target state="translated">Dirichlet-Multinomial 화합물 분포.</target>
        </trans-unit>
        <trans-unit id="68297b1e56f2e835bd2af468d143d667ced725a4" translate="yes" xml:space="preserve">
          <source>Dirichlet-Multinomial is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Compound_probability_distribution&quot;&gt;compound distribution&lt;/a&gt;, i.e., its samples are generated as follows.</source>
          <target state="translated">Dirichlet-Multinomial은 &lt;a href=&quot;https://en.wikipedia.org/wiki/Compound_probability_distribution&quot;&gt;복합 분포입니다&lt;/a&gt; . 즉, 샘플은 다음과 같이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="dcc145048cdbabbcc050df2754ce6b49ee03abc5" translate="yes" xml:space="preserve">
          <source>Disable the currently-enabled debugging dumping.</source>
          <target state="translated">현재 활성화 된 디버깅 덤프를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="16a2605998dad2d1fcad09094c83291b2e53a3aa" translate="yes" xml:space="preserve">
          <source>Disable the eager/graph unified numerics checking mechanism.</source>
          <target state="translated">열망 / 그래프 통합 숫자 검사 메커니즘을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="b798d88b1318376c424af4e62e8d7f241b546c8f" translate="yes" xml:space="preserve">
          <source>Disables TensorFlow 2.x behaviors.</source>
          <target state="translated">TensorFlow 2.x 동작을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="521eac72229eba3d7914bfe240d507f9814af96b" translate="yes" xml:space="preserve">
          <source>Disables eager execution.</source>
          <target state="translated">열망하는 실행을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="d920733a667102618722334c044ebf1ee6edab0c" translate="yes" xml:space="preserve">
          <source>Disables experimental MLIR-Based TensorFlow Compiler Bridge.</source>
          <target state="translated">실험적인 MLIR 기반 TensorFlow 컴파일러 브리지를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="2b3074c068d3c39a640dcc9793052a2c950a4659" translate="yes" xml:space="preserve">
          <source>Disables experimental MLIR-Based TensorFlow Compiler Optimizations.</source>
          <target state="translated">실험용 MLIR 기반 TensorFlow 컴파일러 최적화를 사용 중지합니다.</target>
        </trans-unit>
        <trans-unit id="ca32bbcea39d01e178ad885103e73c62caaf7cc5" translate="yes" xml:space="preserve">
          <source>Disables the V2 TensorShape behavior and reverts to V1 behavior.</source>
          <target state="translated">V2 TensorShape 동작을 비활성화하고 V1 동작으로 되돌립니다.</target>
        </trans-unit>
        <trans-unit id="62499cf079682b5ed73eeda6e8cbc8ac744df372" translate="yes" xml:space="preserve">
          <source>Disables the V2 dtype behavior for Keras layers.</source>
          <target state="translated">Keras 레이어에 대한 V2 dtype 동작을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="91b59c0ad3afaeeb9957f97a642af99ad71bbdf5" translate="yes" xml:space="preserve">
          <source>Disables the mixed precision graph rewrite.</source>
          <target state="translated">혼합 정밀도 그래프 다시 쓰기를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="6afd9d583451263bea47be88824edfe1d46acd10" translate="yes" xml:space="preserve">
          <source>Discounting factor for the history/coming gradient</source>
          <target state="translated">역사 / 다가오는 기울기에 대한 할인 요소</target>
        </trans-unit>
        <trans-unit id="eda68923c74f85d5a0279934ce0a35d017664fe9" translate="yes" xml:space="preserve">
          <source>Discounting factor for the history/coming gradient. Defaults to 0.9.</source>
          <target state="translated">역사 / 다가오는 그라디언트에 대한 할인 요소. 기본값은 0.9입니다.</target>
        </trans-unit>
        <trans-unit id="17a94fad4038a6c4f3e0eefa175f4ebe5569b6d6" translate="yes" xml:space="preserve">
          <source>Dispatches cwise mul for &quot;Dense&lt;em&gt;Dense&quot; and &quot;Dense&lt;/em&gt;Sparse&quot;.</source>
          <target state="translated">&quot;Dense &lt;em&gt;Dense&quot;및 &quot;Dense&lt;/em&gt; Sparse&quot;에 대해 cwise mul을 전달 합니다.</target>
        </trans-unit>
        <trans-unit id="b3c2dac39cc3cf2bcaa90c8f8c260a4d52934cb6" translate="yes" xml:space="preserve">
          <source>Dispatches to add for strings and add_v2 for all other types.</source>
          <target state="translated">문자열에 추가하고 다른 모든 유형에 대해 add_v2를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="47e0c198980f7d73c8f31eb26e60152b3bfca63a" translate="yes" xml:space="preserve">
          <source>Display name for step counts (usually &quot;step&quot; or &quot;sample&quot;).</source>
          <target state="translated">단계 수의 표시 이름 (일반적으로 &quot;단계&quot;또는 &quot;샘플&quot;).</target>
        </trans-unit>
        <trans-unit id="a41538a9b6e4478f54a08c16b868672e44d806fc" translate="yes" xml:space="preserve">
          <source>Displays a progress bar.</source>
          <target state="translated">진행률 표시 줄을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="179f03d1bb4a10eb88ed2e485ea242f0b1a7a517" translate="yes" xml:space="preserve">
          <source>Distribute values in array based on replica_id:</source>
          <target state="translated">replica_id를 기반으로 어레이의 값을 분배하십시오.</target>
        </trans-unit>
        <trans-unit id="9124082f9e48ad99385248615c76c39fb14b7a53" translate="yes" xml:space="preserve">
          <source>Distributed Training Tutorials</source>
          <target state="translated">분산 교육 자습서</target>
        </trans-unit>
        <trans-unit id="cf96e7ea26bee8689a9fb32dee3b96652c0b1998" translate="yes" xml:space="preserve">
          <source>Distributed training with Keras</source>
          <target state="translated">Keras를 사용한 분산 교육</target>
        </trans-unit>
        <trans-unit id="3a0184db4ec730df13780c0bc32937d407e08e80" translate="yes" xml:space="preserve">
          <source>Distributed training with TensorFlow</source>
          <target state="translated">TensorFlow를 사용한 분산 교육</target>
        </trans-unit>
        <trans-unit id="eb66401eefced642a598afe65af5943e81734ce7" translate="yes" xml:space="preserve">
          <source>Distributed version of Stochastic Dual Coordinate Ascent (SDCA) optimizer for</source>
          <target state="translated">SDCA (Stochastic Dual Coordinate Ascent) 옵티마이 저의 분산 버전</target>
        </trans-unit>
        <trans-unit id="2286ed7345235e9d18c6fcd99a94911aa6bac7da" translate="yes" xml:space="preserve">
          <source>DistributedValues input.</source>
          <target state="translated">DistributedValues ​​입력.</target>
        </trans-unit>
        <trans-unit id="9e5c699aa3f4d9196eba5dd8be8839096cf69f87" translate="yes" xml:space="preserve">
          <source>Distributes &lt;a href=&quot;../../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; instances created by calls to &lt;code&gt;dataset_fn&lt;/code&gt;.</source>
          <target state="translated">배포합니다 &lt;a href=&quot;../../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; 의&lt;/a&gt; 호출에 의해 생성 된 인스턴스 &lt;code&gt;dataset_fn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6fabb3e99d51e74cd9bf48a43262694d355937f2" translate="yes" xml:space="preserve">
          <source>Distributes &lt;a href=&quot;../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; instances created by calls to &lt;code&gt;dataset_fn&lt;/code&gt;.</source>
          <target state="translated">배포합니다 &lt;a href=&quot;../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; 의&lt;/a&gt; 호출에 의해 생성 된 인스턴스 &lt;code&gt;dataset_fn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3394e1fdd6861a0bbd13c70458c5c7db5ff67b58" translate="yes" xml:space="preserve">
          <source>Distributes &lt;a href=&quot;../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; instances created by calls to &lt;code&gt;dataset_fn&lt;/code&gt;.</source>
          <target state="translated">배포합니다 &lt;a href=&quot;../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; 의&lt;/a&gt; 호출에 의해 생성 된 인스턴스 &lt;code&gt;dataset_fn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="deb5f91468faf0f4ba99bc8820e017c05f291bdd" translate="yes" xml:space="preserve">
          <source>Distributes &lt;a href=&quot;../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; instances created by calls to &lt;code&gt;dataset_fn&lt;/code&gt;.</source>
          <target state="translated">배포합니다 &lt;a href=&quot;../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; 의&lt;/a&gt; 호출에 의해 생성 된 인스턴스 &lt;code&gt;dataset_fn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="192dd8b05d9b41aa26bf9424fba779d44a515f90" translate="yes" xml:space="preserve">
          <source>Distributes a tf.data.Dataset instance provided via &lt;code&gt;dataset&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dataset&lt;/code&gt; 을 통해 제공된 tf.data.Dataset 인스턴스를 배포합니다 .</target>
        </trans-unit>
        <trans-unit id="98d7d4ad30a1f3b6a280f4f0d9a95de8aaac9329" translate="yes" xml:space="preserve">
          <source>Distributes a tf.data.Dataset instance provided via dataset.</source>
          <target state="translated">데이터 세트를 통해 제공된 tf.data.Dataset 인스턴스를 배포합니다.</target>
        </trans-unit>
        <trans-unit id="a9272351388ebc819fa201ab73595f99c851d9b5" translate="yes" xml:space="preserve">
          <source>Distribution parameter for scale.</source>
          <target state="translated">스케일에 대한 분포 모수.</target>
        </trans-unit>
        <trans-unit id="200938400bb94e17e87c3c7df85c8268812f04b4" translate="yes" xml:space="preserve">
          <source>Distribution parameter for standard deviation.</source>
          <target state="translated">표준 편차에 대한 분포 모수.</target>
        </trans-unit>
        <trans-unit id="3b6f75528c74b056a3bcfcdcd45e98beceb2553e" translate="yes" xml:space="preserve">
          <source>Distribution parameter for the location.</source>
          <target state="translated">위치의 분포 매개 변수.</target>
        </trans-unit>
        <trans-unit id="e89ccf6e77ca8273281a020421991fa84566fb35" translate="yes" xml:space="preserve">
          <source>Distribution parameter for the mean.</source>
          <target state="translated">평균에 대한 분포 모수.</target>
        </trans-unit>
        <trans-unit id="4fb883e63a4c3f13d19c2425d84223e22d36d438" translate="yes" xml:space="preserve">
          <source>Distribution parameters are automatically broadcast in all functions; see examples for details.</source>
          <target state="translated">분배 매개 변수는 모든 기능에서 자동으로 브로드 캐스트됩니다. 자세한 내용은 예제를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fb7c5e4b77643e7474e2d21dd2896fc952052045" translate="yes" xml:space="preserve">
          <source>Div</source>
          <target state="translated">Div</target>
        </trans-unit>
        <trans-unit id="8050d548b3e9fa3bbc762582e12fb8ffca0cd74c" translate="yes" xml:space="preserve">
          <source>DivNoNan</source>
          <target state="translated">DivNoNan</target>
        </trans-unit>
        <trans-unit id="0d3b0db2bd3c7e99bf63c286b760d9693978e92b" translate="yes" xml:space="preserve">
          <source>Divide the gradient by the root of this average</source>
          <target state="translated">이 평균의 루트로 그라디언트를 나눕니다.</target>
        </trans-unit>
        <trans-unit id="2d90cb11062e93dd06a3c330fa055ba03def4253" translate="yes" xml:space="preserve">
          <source>Divide the model's input(s) into multiple sub-batches.</source>
          <target state="translated">모델의 입력을 여러 개의 하위 배치로 나눕니다.</target>
        </trans-unit>
        <trans-unit id="1c83131611b315e50330f4357ec0a30492c4e55f" translate="yes" xml:space="preserve">
          <source>Divide this variable by &lt;a href=&quot;../../indexedslices&quot;&gt;&lt;code&gt;tf.IndexedSlices&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 변수를 &lt;a href=&quot;../../indexedslices&quot;&gt; &lt;code&gt;tf.IndexedSlices&lt;/code&gt; &lt;/a&gt; 로 나눕니다 .</target>
        </trans-unit>
        <trans-unit id="cd3cab1dbc4ab5f3e0135860f29cd0a670455ba7" translate="yes" xml:space="preserve">
          <source>Divide this variable by &lt;a href=&quot;indexedslices&quot;&gt;&lt;code&gt;tf.IndexedSlices&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 변수를 &lt;a href=&quot;indexedslices&quot;&gt; &lt;code&gt;tf.IndexedSlices&lt;/code&gt; &lt;/a&gt; 로 나눕니다 .</target>
        </trans-unit>
        <trans-unit id="e9fc6bee0dc76250df9c7249450c058a5b1248ea" translate="yes" xml:space="preserve">
          <source>Divide two values using Python 2 semantics.</source>
          <target state="translated">Python 2 의미를 사용하여 두 값을 나눕니다.</target>
        </trans-unit>
        <trans-unit id="0b11878bad0b769611401c6fae7db2c6d95fbabc" translate="yes" xml:space="preserve">
          <source>Divides &lt;code&gt;x / y&lt;/code&gt; elementwise, rounding toward the most negative integer.</source>
          <target state="translated">분할 &lt;code&gt;x / y&lt;/code&gt; elementwise 가장 부정적인 정수 향해 라운딩.</target>
        </trans-unit>
        <trans-unit id="7054c933ef39643ba301622090f151d74f3786dd" translate="yes" xml:space="preserve">
          <source>Divides a variable reference by sparse updates.</source>
          <target state="translated">변수 참조를 희소 업데이트로 나눕니다.</target>
        </trans-unit>
        <trans-unit id="f6cc4908b9c759475fad4485ce4f300757dc9dfe" translate="yes" xml:space="preserve">
          <source>Divides sparse updates into the variable referenced by &lt;code&gt;resource&lt;/code&gt;.</source>
          <target state="translated">희소 업데이트를 &lt;code&gt;resource&lt;/code&gt; 에서 참조하는 변수로 나눕니다 .</target>
        </trans-unit>
        <trans-unit id="45c14857e94927b4042c441ca64da6e9584933d0" translate="yes" xml:space="preserve">
          <source>Divides x / y elementwise (using Python 2 division operator semantics). (deprecated)</source>
          <target state="translated">x / y를 요소 단위로 나눕니다 (Python 2 나누기 연산자 의미론 사용). (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="9d62e7e02cc809f4b5d0b7e656e69318bec428dc" translate="yes" xml:space="preserve">
          <source>Divides x / y elementwise (using Python 3 division operator semantics).</source>
          <target state="translated">x / y를 요소 단위로 나눕니다 (Python 3 나누기 연산자 의미론 사용).</target>
        </trans-unit>
        <trans-unit id="5f99d20ff90050d8dfae43f5ffeab6deb712b94a" translate="yes" xml:space="preserve">
          <source>Do not call.</source>
          <target state="translated">전화 걸지 마.</target>
        </trans-unit>
        <trans-unit id="0e19cbaf835cde80c7e4a1d8a1c24b2e13f0e983" translate="yes" xml:space="preserve">
          <source>Do not generate side-effect outputs.</source>
          <target state="translated">부작용 출력을 생성하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="f6bb458eb36bbb106bec0d33a4372f73fe1da874" translate="yes" xml:space="preserve">
          <source>Documentation specific to this application of &lt;code&gt;decorator_func&lt;/code&gt; to &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="translated">이 응용 프로그램에 문서의 특정 &lt;code&gt;decorator_func&lt;/code&gt; 에 &lt;code&gt;target&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25a78a048e146bfd34662d0525db757b7a96e1cb" translate="yes" xml:space="preserve">
          <source>Documenting RaggedTensor Shapes</source>
          <target state="translated">RaggedTensor 모양 문서화</target>
        </trans-unit>
        <trans-unit id="164630c36dde0c82111b1f3dc0afd4875333d29a" translate="yes" xml:space="preserve">
          <source>Does first run which shows the eval metrics before training.</source>
          <target state="translated">훈련 전에 eval 메트릭을 보여주는 첫 번째 실행을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="f99e6c429c8885c047333a226cf62534ccc256b0" translate="yes" xml:space="preserve">
          <source>Does not add if local_step is lesser than the accumulator's global_step.</source>
          <target state="translated">local_step이 누산기의 global_step보다 작은 경우 추가하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dfc4470c2a0db343ff16d7ce4c084129536fad15" translate="yes" xml:space="preserve">
          <source>Does not add if local_step is smaller than the accumulator's global_step.</source>
          <target state="translated">local_step이 누산기의 global_step보다 작은 경우 추가하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ad0886ab9d39600e06d3738d56360cc4a6c8d3f1" translate="yes" xml:space="preserve">
          <source>Does not calculate some metrics that do not make sense, such as AUC.</source>
          <target state="translated">AUC와 같이 의미가없는 일부 메트릭을 계산하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d3a16e859f7ea844fb2347c5f66d4fdc50974d5b" translate="yes" xml:space="preserve">
          <source>Does not support &lt;code&gt;label_vocabulary&lt;/code&gt;. Instead, labels must be float in the range [0, 1].</source>
          <target state="translated">&lt;code&gt;label_vocabulary&lt;/code&gt; 를 지원하지 않습니다 . 대신 레이블은 [0, 1] 범위에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="2083af700419e9f00d99ec199155887f45dff43e" translate="yes" xml:space="preserve">
          <source>Does not write the &lt;code&gt;GraphDef&lt;/code&gt; and &lt;code&gt;MetaGraphDef&lt;/code&gt; to the summary.</source>
          <target state="translated">&lt;code&gt;GraphDef&lt;/code&gt; 및 &lt;code&gt;MetaGraphDef&lt;/code&gt; 를 요약에 쓰지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="d61d2abccb36c5385e1fe79f0a4f01955d7746b7" translate="yes" xml:space="preserve">
          <source>Does nothing if the EventFileWriter was not closed.</source>
          <target state="translated">EventFileWriter가 닫히지 않은 경우 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bf3dd4e6c21aafe1e3c10a490dd20e8f64e442a7" translate="yes" xml:space="preserve">
          <source>Does nothing. Only useful as a placeholder for control edges.</source>
          <target state="translated">아무것도하지 않습니다. 제어 가장자리에 대한 자리 표시 자로서 만 유용합니다.</target>
        </trans-unit>
        <trans-unit id="d3e3c649e5b2cfba3be856308817874db914b357" translate="yes" xml:space="preserve">
          <source>Does nothing. Serves as a control trigger for scheduling.</source>
          <target state="translated">아무것도하지 않습니다. 스케줄링을위한 제어 트리거 역할을합니다.</target>
        </trans-unit>
        <trans-unit id="0db14ebf285ed7bf2f6744a63f15f17d02d61f9f" translate="yes" xml:space="preserve">
          <source>Dominik Csiba, Zheng Qu, Peter Richtarik. 2015</source>
          <target state="translated">Dominik Csiba, Zheng Qu, Peter Richtarik. 2015 년</target>
        </trans-unit>
        <trans-unit id="6907bb65c3f0588d3aeb5d107fec1d5df41c9b41" translate="yes" xml:space="preserve">
          <source>Dot-product attention layer, a.k.a. Luong-style attention.</source>
          <target state="translated">도트 제품주의 레이어, 일명 Luong 스타일주의.</target>
        </trans-unit>
        <trans-unit id="4239e3dac779bf2a52d558154614129f43ea75c8" translate="yes" xml:space="preserve">
          <source>Dots per inch.</source>
          <target state="translated">인치당 도트 수.</target>
        </trans-unit>
        <trans-unit id="059832445bef72ff3ab2311ac70c27ec32c98a0e" translate="yes" xml:space="preserve">
          <source>Downloads a file from a URL if it not already in the cache.</source>
          <target state="translated">캐시에 없으면 URL에서 파일을 다운로드합니다.</target>
        </trans-unit>
        <trans-unit id="0a71aa2a51d8d6b0d1ffc004a583ef5ad70bd2e8" translate="yes" xml:space="preserve">
          <source>Downsamples the input representation by taking the maximum value over the time dimension.</source>
          <target state="translated">시간 차원에서 최대 값을 취하여 입력 표현을 다운 샘플링합니다.</target>
        </trans-unit>
        <trans-unit id="fb71bfc4a903dc49201137d9ebdbc5d40bda9424" translate="yes" xml:space="preserve">
          <source>Downsamples the input representation by taking the maximum value over the window defined by &lt;code&gt;pool_size&lt;/code&gt; for each dimension along the features axis. The window is shifted by &lt;code&gt;strides&lt;/code&gt; in each dimension. The resulting output when using &quot;valid&quot; padding option has a shape(number of rows or columns) of: &lt;code&gt;output_shape = (input_shape - pool_size + 1) / strides)&lt;/code&gt;</source>
          <target state="translated">기능 축을 따라 각 차원에 대해 &lt;code&gt;pool_size&lt;/code&gt; 로 정의 된 창에서 최대 값을 사용하여 입력 표현을 다운 샘플링합니다 . 창은 각 차원에서 &lt;code&gt;strides&lt;/code&gt; 으로 이동 합니다. &quot;유효한&quot;패딩 옵션을 사용할 때 결과 출력은 다음과 같은 모양 (행 또는 열 수)을 &lt;code&gt;output_shape = (input_shape - pool_size + 1) / strides)&lt;/code&gt; . output_shape = (input_shape-pool_size + 1) / strides)</target>
        </trans-unit>
        <trans-unit id="9c49ce076647fedea8cacae28bc07eeba742440c" translate="yes" xml:space="preserve">
          <source>Downsamples the input representation by taking the maximum value over the window defined by &lt;code&gt;pool_size&lt;/code&gt;. The window is shifted by &lt;code&gt;strides&lt;/code&gt;. The resulting output when using &quot;valid&quot; padding option has a shape of: &lt;code&gt;output_shape = (input_shape - pool_size + 1) / strides)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pool_size&lt;/code&gt; 로 정의 된 창에서 최대 값을 가져와 입력 표현을 다운 샘플링합니다 . 창은 &lt;code&gt;strides&lt;/code&gt; 으로 이동합니다 . &quot;유효한&quot;패딩 옵션을 사용할 때 결과 출력은 다음과 같은 형태를 갖습니다. &lt;code&gt;output_shape = (input_shape - pool_size + 1) / strides)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7cf70ae2cb6c75d0a9c4fb58d52a95a4a4fb3459" translate="yes" xml:space="preserve">
          <source>Draw bounding boxes on a batch of images.</source>
          <target state="translated">이미지 묶음에 경계 상자를 그립니다.</target>
        </trans-unit>
        <trans-unit id="4832723fe356ae26384348ce3008f3ec5bc2040f" translate="yes" xml:space="preserve">
          <source>Draw integers: &lt;code&gt;counts = [n_0,...,n_{K-1}] ~ Multinomial(total_count, probs)&lt;/code&gt;</source>
          <target state="translated">정수 그리기 : &lt;code&gt;counts = [n_0,...,n_{K-1}] ~ Multinomial(total_count, probs)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d68ab4523cc9f189dea2f73d3573f15a45252e77" translate="yes" xml:space="preserve">
          <source>DrawBoundingBoxes</source>
          <target state="translated">DrawBoundingBoxes</target>
        </trans-unit>
        <trans-unit id="f9881a84226c3a072daea77439292b0ab957dbb4" translate="yes" xml:space="preserve">
          <source>DrawBoundingBoxesV2</source>
          <target state="translated">DrawBoundingBoxesV2</target>
        </trans-unit>
        <trans-unit id="9b35511abd43696bf6f2e8a3e63057c2e2053cb2" translate="yes" xml:space="preserve">
          <source>Draws &lt;code&gt;shape&lt;/code&gt; samples from each of the given Gamma distribution(s).</source>
          <target state="translated">묘화 &lt;code&gt;shape&lt;/code&gt; 주어진 감마 분포 (들) 각각으로부터 샘플.</target>
        </trans-unit>
        <trans-unit id="2f485a98bd7eab55347fa5d55f73b85c721e211f" translate="yes" xml:space="preserve">
          <source>Draws &lt;code&gt;shape&lt;/code&gt; samples from each of the given Poisson distribution(s).</source>
          <target state="translated">묘화 &lt;code&gt;shape&lt;/code&gt; 주어진 포아송 분포 (들) 각각으로부터 샘플.</target>
        </trans-unit>
        <trans-unit id="e3c5f61f54c9fb2fa435235e5351a40f0e8d2a52" translate="yes" xml:space="preserve">
          <source>Draws deterministic pseudorandom samples from a categorical distribution.</source>
          <target state="translated">범주 형 분포에서 결정적 의사 난수 샘플을 그립니다.</target>
        </trans-unit>
        <trans-unit id="ab9f458f58c6bdd4d02bf827a8dcab230cd2aa13" translate="yes" xml:space="preserve">
          <source>Draws deterministic pseudorandom samples from a multinomial distribution. (deprecated)</source>
          <target state="translated">다항 분포에서 결정 론적 의사 난수 표본을 그립니다. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="c1b5d2a737bbdb42a41c618560b2a667a7806c1f" translate="yes" xml:space="preserve">
          <source>Draws samples from a categorical distribution.</source>
          <target state="translated">범주 형 분포에서 표본을 추출합니다.</target>
        </trans-unit>
        <trans-unit id="520c25c8c100cbba7ddc5253242eb10fefc010a8" translate="yes" xml:space="preserve">
          <source>Draws samples from a multinomial distribution.</source>
          <target state="translated">다항 분포에서 표본을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="071c8e9dd3484d5fab6f23e4b9289081d88d7c16" translate="yes" xml:space="preserve">
          <source>Draws samples from a multinomial distribution. (deprecated)</source>
          <target state="translated">다항 분포에서 표본을 추출합니다. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="678cd1621474883b2cd35a303f85069b99439e67" translate="yes" xml:space="preserve">
          <source>Draws samples from a truncated normal distribution centered on 0 with &lt;code&gt;stddev = sqrt(1 / fan_in)&lt;/code&gt; where &lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor.</source>
          <target state="translated">&lt;code&gt;stddev = sqrt(1 / fan_in)&lt;/code&gt; 하여 0을 중심으로하는 잘린 정규 분포에서 샘플을 가져 옵니다. 여기서 &lt;code&gt;fan_in&lt;/code&gt; 은 가중치 텐서의 입력 단위 수입니다.</target>
        </trans-unit>
        <trans-unit id="66ea0aece380fb969bb44bea8eb12ff47f0c3bda" translate="yes" xml:space="preserve">
          <source>Draws samples from a truncated normal distribution centered on 0 with &lt;code&gt;stddev = sqrt(2 / (fan_in + fan_out))&lt;/code&gt; where &lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor and &lt;code&gt;fan_out&lt;/code&gt; is the number of output units in the weight tensor.</source>
          <target state="translated">&lt;code&gt;stddev = sqrt(2 / (fan_in + fan_out))&lt;/code&gt; 하여 0을 중심으로하는 잘린 정규 분포에서 샘플을 가져옵니다. 여기서 &lt;code&gt;fan_in&lt;/code&gt; 은 가중치 텐서의 입력 단위 수이고 &lt;code&gt;fan_out&lt;/code&gt; 은 가중치 텐서 의 출력 단위 수입니다.</target>
        </trans-unit>
        <trans-unit id="1d8ebd161f63ebaf1f3afa9990959a8073318852" translate="yes" xml:space="preserve">
          <source>Draws samples from a uniform distribution within &lt;code&gt;[-limit, limit]&lt;/code&gt;, where &lt;code&gt;limit = sqrt(3 / fan_in)&lt;/code&gt; (&lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor).</source>
          <target state="translated">&lt;code&gt;[-limit, limit]&lt;/code&gt; 내의 균등 분포에서 샘플을 가져옵니다. 여기서 &lt;code&gt;limit = sqrt(3 / fan_in)&lt;/code&gt; ( &lt;code&gt;fan_in&lt;/code&gt; 은 가중치 텐서의 입력 단위 수입니다).</target>
        </trans-unit>
        <trans-unit id="8a6fdd6ef0436ae937dac1cce78ebb7c168e8c10" translate="yes" xml:space="preserve">
          <source>Draws samples from a uniform distribution within &lt;code&gt;[-limit, limit]&lt;/code&gt;, where &lt;code&gt;limit = sqrt(6 / (fan_in + fan_out))&lt;/code&gt; (&lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor and &lt;code&gt;fan_out&lt;/code&gt; is the number of output units).</source>
          <target state="translated">&lt;code&gt;[-limit, limit]&lt;/code&gt; 내의 균등 분포에서 샘플을 가져옵니다. 여기서 &lt;code&gt;limit = sqrt(6 / (fan_in + fan_out))&lt;/code&gt; ( &lt;code&gt;fan_in&lt;/code&gt; 은 가중치 텐서의 입력 단위 수이고 &lt;code&gt;fan_out&lt;/code&gt; 은 출력 단위 수입니다).</target>
        </trans-unit>
        <trans-unit id="f6b8b198ca33fbce90a37e7044ff34a5f60c2478" translate="yes" xml:space="preserve">
          <source>Draws samples from a uniform distribution within &lt;code&gt;[-limit, limit]&lt;/code&gt;, where &lt;code&gt;limit = sqrt(6 / fan_in)&lt;/code&gt; (&lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor).</source>
          <target state="translated">&lt;code&gt;[-limit, limit]&lt;/code&gt; 내의 균등 분포에서 샘플을 가져옵니다. 여기서 &lt;code&gt;limit = sqrt(6 / fan_in)&lt;/code&gt; ( &lt;code&gt;fan_in&lt;/code&gt; 은 가중치 텐서의 입력 단위 수입니다).</target>
        </trans-unit>
        <trans-unit id="f61e33bf74dc6cb23e31a4742f4452d5d238daaf" translate="yes" xml:space="preserve">
          <source>Dress</source>
          <target state="translated">Dress</target>
        </trans-unit>
        <trans-unit id="d9c26e925d08589194f1628e9ba35c4cbbff118c" translate="yes" xml:space="preserve">
          <source>Dropout consists in randomly setting a fraction &lt;code&gt;rate&lt;/code&gt; of input units to 0 at each update during training time, which helps prevent overfitting.</source>
          <target state="translated">드롭 아웃은 훈련 시간 동안 업데이트 할 때마다 입력 단위의 &lt;code&gt;rate&lt;/code&gt; 을 0 으로 임의로 설정하여 과적 합을 방지합니다.</target>
        </trans-unit>
        <trans-unit id="0c910938bf7951e235266a0bde634cd7e83f6bb7" translate="yes" xml:space="preserve">
          <source>Dropout consists in randomly setting a fraction &lt;code&gt;rate&lt;/code&gt; of input units to 0 at each update during training time, which helps prevent overfitting. The units that are kept are scaled by &lt;code&gt;1 / (1 - rate)&lt;/code&gt;, so that their sum is unchanged at training time and inference time.</source>
          <target state="translated">드롭 아웃은 훈련 시간 동안 업데이트 할 때마다 입력 단위의 &lt;code&gt;rate&lt;/code&gt; 을 0 으로 임의로 설정하여 과적 합을 방지합니다. 유지되는 단위는 &lt;code&gt;1 / (1 - rate)&lt;/code&gt; 로 조정되므로 훈련 시간과 추론 시간에 합계가 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3ed6660be55d41788a76a36a5bdcb02238dd7845" translate="yes" xml:space="preserve">
          <source>Dtype of the samples (int or float dtypes are permissible, as samples are discrete). Default: int32.</source>
          <target state="translated">샘플의 Dtype (샘플이 이산이므로 int 또는 float dtype이 허용됨). 기본값 : int32</target>
        </trans-unit>
        <trans-unit id="ace81bb63ee8802a4e450fa90e2282ee9728797a" translate="yes" xml:space="preserve">
          <source>Dtype to use for generated arrays.</source>
          <target state="translated">생성 된 배열에 사용할 Dtype입니다.</target>
        </trans-unit>
        <trans-unit id="5dbbbfe9cc4b00f63183937c62d18cf85f4976f6" translate="yes" xml:space="preserve">
          <source>Dtype to use for the generated arrays.</source>
          <target state="translated">생성 된 배열에 사용할 Dtype입니다.</target>
        </trans-unit>
        <trans-unit id="f1e0feccd09febde5feb158c937e2615c85dfbfe" translate="yes" xml:space="preserve">
          <source>Dtype to use. Default to &lt;code&gt;None&lt;/code&gt;, in which case the global setting &lt;a href=&quot;../../backend/floatx&quot;&gt;&lt;code&gt;tf.keras.backend.floatx()&lt;/code&gt;&lt;/a&gt; is used (unless you changed it, it defaults to &quot;float32&quot;)</source>
          <target state="translated">사용할 Dtype. 기본값은 &lt;code&gt;None&lt;/code&gt; &lt;a href=&quot;../../backend/floatx&quot;&gt; &lt;code&gt;tf.keras.backend.floatx()&lt;/code&gt; &lt;/a&gt; 경우 전역 설정 tf.keras.backend.floatx () 가 사용됩니다 (변경하지 않는 한 기본값은 &quot;float32&quot;).</target>
        </trans-unit>
        <trans-unit id="3dc3b807502ca4f8b87062e501e9e44937bf4f8d" translate="yes" xml:space="preserve">
          <source>Dtypes and casting</source>
          <target state="translated">딥 타입과 캐스팅</target>
        </trans-unit>
        <trans-unit id="2cce0dbfc4150d144a2b52097f134c7eb97a528d" translate="yes" xml:space="preserve">
          <source>Duality: The erosion of &lt;code&gt;value&lt;/code&gt; by the &lt;code&gt;filters&lt;/code&gt; is equal to the negation of the dilation of &lt;code&gt;-value&lt;/code&gt; by the reflected &lt;code&gt;filters&lt;/code&gt;.</source>
          <target state="translated">이원성 : &lt;code&gt;filters&lt;/code&gt; 의한 &lt;code&gt;value&lt;/code&gt; 의 침식은 반사 된 &lt;code&gt;filters&lt;/code&gt; 의한 &lt;code&gt;-value&lt;/code&gt; 의 팽창을 무시 하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="de135649e6ee68cb3c671dd05ce04b87cd5cb6ad" translate="yes" xml:space="preserve">
          <source>Duality: The erosion of &lt;code&gt;value&lt;/code&gt; by the &lt;code&gt;kernel&lt;/code&gt; is equal to the negation of the dilation of &lt;code&gt;-value&lt;/code&gt; by the reflected &lt;code&gt;kernel&lt;/code&gt;.</source>
          <target state="translated">이중성 :의 침식 &lt;code&gt;value&lt;/code&gt; 바이 &lt;code&gt;kernel&lt;/code&gt; 의 팽창의 부정과 같다 &lt;code&gt;-value&lt;/code&gt; 반사에 의해 &lt;code&gt;kernel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="14b395b9ef340667cc069ff8a0df7f484517809d" translate="yes" xml:space="preserve">
          <source>Due to numerical instability, the gradient of this function evaluated at x=100 is NaN. For example:</source>
          <target state="translated">수치 적 불안정성으로 인해 x = 100에서 평가 된이 함수의 기울기는 NaN입니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="01b6fa41ad24ce7aeced29282a9ba7b232ae4d3b" translate="yes" xml:space="preserve">
          <source>Due to numerical instability, the gradient this function evaluated at x=100 is NaN. For example:</source>
          <target state="translated">수치 불안정성으로 인해 x = 100에서 평가 된이 함수의 기울기는 NaN입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4f553621edbd655917227d809420fe6a55a1545e" translate="yes" xml:space="preserve">
          <source>Dummy method to prevent a RaggedTensor from being used as a Python bool.</source>
          <target state="translated">RaggedTensor가 Python bool로 사용되는 것을 방지하는 더미 메소드.</target>
        </trans-unit>
        <trans-unit id="fa31bd5c69618abc2823fa976d807fbc423f01db" translate="yes" xml:space="preserve">
          <source>Dummy method to prevent a tensor from being used as a Python &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="translated">텐서가 파이썬 &lt;code&gt;bool&lt;/code&gt; 로 사용되는 것을 방지하는 더미 방법 .</target>
        </trans-unit>
        <trans-unit id="5b762a19d2487de9921f5eccbd8c97bad2f06ba2" translate="yes" xml:space="preserve">
          <source>Dummy method to prevent iteration.</source>
          <target state="translated">반복을 방지하는 더미 방법.</target>
        </trans-unit>
        <trans-unit id="88b0bdba3d3f459c41e963f09a5ef3c292f2b696" translate="yes" xml:space="preserve">
          <source>DummyIterationCounter</source>
          <target state="translated">DummyIterationCounter</target>
        </trans-unit>
        <trans-unit id="eb1dc57dcf66566314b788f693c778451a15ca93" translate="yes" xml:space="preserve">
          <source>DummyMemoryCache</source>
          <target state="translated">DummyMemoryCache</target>
        </trans-unit>
        <trans-unit id="f3ab4575dc0133a1dfcc58a0645455ba8d875d5f" translate="yes" xml:space="preserve">
          <source>DummySeedGenerator</source>
          <target state="translated">DummySeedGenerator</target>
        </trans-unit>
        <trans-unit id="9e551da6df8f5debe44fc9163e31b03c846581e3" translate="yes" xml:space="preserve">
          <source>Dump data from only the tensors from op types that matches to the regular expression (through Python's &lt;code&gt;re.match()&lt;/code&gt;). &quot;Op type&quot; refers to the names of the TensorFlow operations (e.g., &quot;MatMul&quot;, &quot;LogSoftmax&quot;), which may repeat in a TensorFlow function. It does &lt;em&gt;not&lt;/em&gt; refer to the names of nodes (e.g., &quot;dense/MatMul&quot;, &quot;dense_1/MatMul_1&quot;) which are unique within a function.</source>
          <target state="translated">정규 표현식과 일치하는 op 유형의 텐서에서만 데이터를 덤프합니다 (Python의 &lt;code&gt;re.match()&lt;/code&gt; 통해 ). &quot;Op 유형&quot;은 TensorFlow 함수에서 반복 될 수있는 TensorFlow 작업 (예 : &quot;MatMul&quot;, &quot;LogSoftmax&quot;)의 이름을 나타냅니다. 함수 내에서 고유 한 노드 이름 (예 : &quot;dense / MatMul&quot;, &quot;dense_1 / MatMul_1&quot;)을 참조 하지 &lt;em&gt;않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="e7078f157aac2573044c918d8a4a3b7b6033ac22" translate="yes" xml:space="preserve">
          <source>Dump data from only the tensors of which the specified dtypes. This optional argument can be in any of the following format:</source>
          <target state="translated">지정된 dtype이있는 텐서에서만 데이터를 덤프합니다. 이 선택적 인수는 다음 형식 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="033e9b9d832a57a4165f92d3f8bd0ca6c42d1de4" translate="yes" xml:space="preserve">
          <source>Duplicate entries are handled correctly: if multiple &lt;code&gt;indices&lt;/code&gt; reference the same location, their (negated) contributions add.</source>
          <target state="translated">중복 항목이 올바르게 처리됩니다. 여러 &lt;code&gt;indices&lt;/code&gt; 가 동일한 위치를 참조하는 경우 (부정) 기여가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="e539ae8c6c5e97585904cac6f7578e33be0fb9a3" translate="yes" xml:space="preserve">
          <source>Duplicate entries are handled correctly: if multiple &lt;code&gt;indices&lt;/code&gt; reference the same location, their contributions add.</source>
          <target state="translated">중복 항목은 올바르게 처리됩니다. 여러 &lt;code&gt;indices&lt;/code&gt; 가 동일한 위치를 참조하면 해당 항목이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="acea7eb7cb19dad19066e361fb49fdeacdcbaf92" translate="yes" xml:space="preserve">
          <source>Duplicate entries are handled correctly: if multiple &lt;code&gt;indices&lt;/code&gt; reference the same location, their contributions are combined.</source>
          <target state="translated">중복 항목은 올바르게 처리됩니다. 여러 &lt;code&gt;indices&lt;/code&gt; 가 동일한 위치를 참조하는 경우 해당 항목 이 결합됩니다.</target>
        </trans-unit>
        <trans-unit id="4a40b59eaf6d38fb8daf8662b8b0b03a0012ed11" translate="yes" xml:space="preserve">
          <source>Duplicate entries are handled correctly: if multiple &lt;code&gt;indices&lt;/code&gt; reference the same location, their contributions combine.</source>
          <target state="translated">중복 항목이 올바르게 처리됩니다. 여러 &lt;code&gt;indices&lt;/code&gt; 가 동일한 위치를 참조하면 해당 기여가 결합됩니다.</target>
        </trans-unit>
        <trans-unit id="d4e22b417b9aad707bab26acf128ef0124f02c98" translate="yes" xml:space="preserve">
          <source>Duplicate entries are handled correctly: if multiple &lt;code&gt;indices&lt;/code&gt; reference the same location, their contributions divide.</source>
          <target state="translated">중복 항목이 올바르게 처리됩니다. 여러 &lt;code&gt;indices&lt;/code&gt; 가 동일한 위치를 참조하는 경우 기여가 나뉩니다.</target>
        </trans-unit>
        <trans-unit id="49769bf3963b221867efd0dad9c6f794695da9ab" translate="yes" xml:space="preserve">
          <source>Duplicate entries are handled correctly: if multiple &lt;code&gt;indices&lt;/code&gt; reference the same location, their contributions multiply.</source>
          <target state="translated">중복 항목이 올바르게 처리됩니다. 여러 &lt;code&gt;indices&lt;/code&gt; 가 동일한 위치를 참조하면 해당 기여도가 배가됩니다.</target>
        </trans-unit>
        <trans-unit id="a78cf7fe187f03163a0ea5705dfc52d2311860a1" translate="yes" xml:space="preserve">
          <source>Duration of monitoring in ms.</source>
          <target state="translated">모니터링 기간 (ms).</target>
        </trans-unit>
        <trans-unit id="feb239a1e72b6cedecb73f3c757df8c7fb234d18" translate="yes" xml:space="preserve">
          <source>Duration of tracing or monitoring in ms.</source>
          <target state="translated">추적 또는 모니터링 기간 (ms)입니다.</target>
        </trans-unit>
        <trans-unit id="f721b600ecff1c2f6cd4e8aedd23a2ffb0e5bf0e" translate="yes" xml:space="preserve">
          <source>During training or evaluation:</source>
          <target state="translated">교육 또는 평가 중 :</target>
        </trans-unit>
        <trans-unit id="3556ffa59e7016962eddbdf5eb6d7a50758ad15f" translate="yes" xml:space="preserve">
          <source>Dynamic loss scaling works by adjusting the loss scale as training progresses. The goal is to keep the loss scale as high as possible without overflowing the gradients. As long as the gradients do not overflow, raising the loss scale never hurts.</source>
          <target state="translated">동적 손실 스케일링은 훈련이 진행됨에 따라 손실 스케일을 조정하여 작동합니다. 목표는 그래디언트를 오버플로하지 않고 손실 스케일을 최대한 높게 유지하는 것입니다. 그래디언트가 오버플로되지 않는 한 손실 규모를 높이는 것은 결코 아프지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8036cb63420240722f3fe4f252c9e7f16cf09fb2" translate="yes" xml:space="preserve">
          <source>DynamicPartition</source>
          <target state="translated">DynamicPartition</target>
        </trans-unit>
        <trans-unit id="4894cc7f856dc85cad8a5fec6ef3904d62cdf5f4" translate="yes" xml:space="preserve">
          <source>DynamicStitch</source>
          <target state="translated">DynamicStitch</target>
        </trans-unit>
        <trans-unit id="fa4a7a170f7075560c98a976572cae386b13a240" translate="yes" xml:space="preserve">
          <source>E.g.</source>
          <target state="translated">E.g.</target>
        </trans-unit>
        <trans-unit id="553eb325fbe958c2a5134089156c0c0d30531dbd" translate="yes" xml:space="preserve">
          <source>E.g. 'float16', 'float32', 'float64'.</source>
          <target state="translated">예 : 'float16', 'float32', 'float64'.</target>
        </trans-unit>
        <trans-unit id="d3c30f7d8e03d15a2b309cfdae4b64a59e955e38" translate="yes" xml:space="preserve">
          <source>E.g. &lt;code&gt;'float16'&lt;/code&gt;, &lt;code&gt;'float32'&lt;/code&gt;, &lt;code&gt;'float64'&lt;/code&gt;.</source>
          <target state="translated">예 : &lt;code&gt;'float16'&lt;/code&gt; , &lt;code&gt;'float32'&lt;/code&gt; , &lt;code&gt;'float64'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b35962744d58a4f3a29a207b905f8bf3e6b32bb" translate="yes" xml:space="preserve">
          <source>E.g. for use with categorical_crossentropy.</source>
          <target state="translated">예를 들어 categorical_crossentropy와 함께 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f07399e21baeb77233b6eed898e333a622f5516e" translate="yes" xml:space="preserve">
          <source>E.g. if applied to a list of two tensors &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; of shape &lt;code&gt;(batch_size, n)&lt;/code&gt;, the output will be a tensor of shape &lt;code&gt;(batch_size, 1)&lt;/code&gt; where each entry &lt;code&gt;i&lt;/code&gt; will be the dot product between &lt;code&gt;a[i]&lt;/code&gt; and &lt;code&gt;b[i]&lt;/code&gt;.</source>
          <target state="translated">예를 들어 두 개의 텐서 &lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 의 모양 &lt;code&gt;(batch_size, n)&lt;/code&gt; 목록에 적용되는 경우 출력은 모양의 텐서 &lt;code&gt;(batch_size, 1)&lt;/code&gt; 여기서 각 항목 &lt;code&gt;i&lt;/code&gt; 는 &lt;code&gt;a[i]&lt;/code&gt; 와 &lt;code&gt;b[i]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e9a9ae577fc05703e91c9c38ac1aa199f5acce8" translate="yes" xml:space="preserve">
          <source>E.g. if your &lt;code&gt;batch_size&lt;/code&gt; is 64 and you use &lt;code&gt;gpus=2&lt;/code&gt;, then we will divide the input into 2 sub-batches of 32 samples, process each sub-batch on one GPU, then return the full batch of 64 processed samples.</source>
          <target state="translated">예를 들어 &lt;code&gt;batch_size&lt;/code&gt; 가 64이고 &lt;code&gt;gpus=2&lt;/code&gt; 를 사용 하는 경우 입력을 32 개 샘플의 2 개의 하위 배치로 나누고 하나의 GPU에서 각 하위 배치를 처리 한 다음 64 개의 처리 된 샘플의 전체 배치를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7a50e4ddce82d1e382c64c27bc1a5097eaaf42ae" translate="yes" xml:space="preserve">
          <source>E.g. the file doesn't exist, or has wrong permissions.</source>
          <target state="translated">예를 들어 파일이 없거나 잘못된 권한이 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ce6b6213f33632a81a05054aa5419039c89636a" translate="yes" xml:space="preserve">
          <source>E.g. var = state_ops._temporary&lt;em&gt;variable([1, 2], types.float&lt;/em&gt;) var_name = var.op.name var = state_ops.assign(var, [[4.0, 5.0]]) var = state_ops.assign_add(var, [[6.0, 7.0]]) final = state_ops._destroy_temporary_variable(var, var_name=var_name)</source>
          <target state="translated">예 : var = state_ops._temporary &lt;em&gt;variable ([1, 2], types.float&lt;/em&gt; ) var_name = var.op.name var = state_ops.assign (var, [[4.0, 5.0]]) var = state_ops.assign_add (var, [ [6.0, 7.0]]) final = state_ops._destroy_temporary_variable (var, var_name = var_name)</target>
        </trans-unit>
        <trans-unit id="b56b3fdb05fe66fc4675e13c12200b61fa0385c6" translate="yes" xml:space="preserve">
          <source>E.g., the example given above that maps &lt;code&gt;fn=lambda t: tf.range(t, t + 3)&lt;/code&gt; across &lt;code&gt;elems&lt;/code&gt; could be rewritten more efficiently using vectorized ops:</source>
          <target state="translated">예는 그 위에 주어진 예는 맵핑 &lt;code&gt;fn=lambda t: tf.range(t, t + 3)&lt;/code&gt; 를 통해 &lt;code&gt;elems&lt;/code&gt; 가 벡터화 OPS를 이용하여보다 효율적으로 다시 쓸 수있다 :</target>
        </trans-unit>
        <trans-unit id="e9656fda095be85a55c47e88f0f2142837377331" translate="yes" xml:space="preserve">
          <source>E.g.:</source>
          <target state="translated">E.g.:</target>
        </trans-unit>
        <trans-unit id="08883fe576df50b0b7d3a4d8dda8f6a63d367c09" translate="yes" xml:space="preserve">
          <source>ELUs have negative values which pushes the mean of the activations closer to zero. Mean activations that are closer to zero enable faster learning as they bring the gradient closer to the natural gradient. ELUs saturate to a negative value when the argument gets smaller. Saturation means a small derivative which decreases the variation and the information that is propagated to the next layer.</source>
          <target state="translated">ELU는 활성화의 평균을 0에 가깝게 만드는 음의 값을 갖습니다. 0에 가까운 평균 활성화는 그라디언트를 자연 그라디언트에 더 가깝게 가져 오므로 더 빠르게 학습 할 수 있습니다. ELU는 인수가 작아지면 음수 값으로 포화됩니다. 채도는 다음 레이어로 전파되는 변화와 정보를 감소시키는 작은 미분을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="087220079a98b1d1823eb02904051957f9c3396d" translate="yes" xml:space="preserve">
          <source>EXPERIMENTAL: A context manager for overriding gradient functions.</source>
          <target state="translated">실험 : 그래디언트 함수를 재정의하기위한 컨텍스트 관리자.</target>
        </trans-unit>
        <trans-unit id="244fae62654320ff433d44decdc3be79b3430ab3" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;FixedLenFeature&lt;/code&gt;&lt;code&gt;df&lt;/code&gt; maps to a &lt;code&gt;Tensor&lt;/code&gt; of the specified type (or &lt;a href=&quot;../../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt; if not specified) and shape &lt;code&gt;(serialized.size(),) + df.shape&lt;/code&gt;.</source>
          <target state="translated">각 &lt;code&gt;FixedLenFeature&lt;/code&gt; &lt;code&gt;df&lt;/code&gt; A를 매핑 &lt;code&gt;Tensor&lt;/code&gt; 지정된 유형의 (또는 &lt;a href=&quot;../../../tf#float32&quot;&gt; &lt;code&gt;tf.float32&lt;/code&gt; &lt;/a&gt; 지정되지 않은 경우)와 모양 &lt;code&gt;(serialized.size(),) + df.shape&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b7df4b10a00470916437516599dfdf8bb1e811a1" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;FixedLenFeature&lt;/code&gt;&lt;code&gt;df&lt;/code&gt; maps to a &lt;code&gt;Tensor&lt;/code&gt; of the specified type (or &lt;a href=&quot;../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt; if not specified) and shape &lt;code&gt;(serialized.size(),) + df.shape&lt;/code&gt;.</source>
          <target state="translated">각 &lt;code&gt;FixedLenFeature&lt;/code&gt; &lt;code&gt;df&lt;/code&gt; A를 매핑 &lt;code&gt;Tensor&lt;/code&gt; 지정된 유형의 (또는 &lt;a href=&quot;../../tf#float32&quot;&gt; &lt;code&gt;tf.float32&lt;/code&gt; &lt;/a&gt; 지정되지 않은 경우)와 모양 &lt;code&gt;(serialized.size(),) + df.shape&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da7e4d019d3e2860dff98a8cb85154875f07d7fb" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;FixedLenSequenceFeature&lt;/code&gt;&lt;code&gt;df&lt;/code&gt; maps to a &lt;code&gt;Tensor&lt;/code&gt; of the specified type (or &lt;a href=&quot;../../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt; if not specified) and shape &lt;code&gt;(serialized.size(), None) + df.shape&lt;/code&gt;. All examples in &lt;code&gt;serialized&lt;/code&gt; will be padded with &lt;code&gt;default_value&lt;/code&gt; along the second dimension.</source>
          <target state="translated">각 &lt;code&gt;FixedLenSequenceFeature&lt;/code&gt; &lt;code&gt;df&lt;/code&gt; A를 매핑 &lt;code&gt;Tensor&lt;/code&gt; 지정된 유형의 (또는 &lt;a href=&quot;../../../tf#float32&quot;&gt; &lt;code&gt;tf.float32&lt;/code&gt; &lt;/a&gt; 지정되지 않은 경우)와 형태 &lt;code&gt;(serialized.size(), None) + df.shape&lt;/code&gt; . &lt;code&gt;serialized&lt;/code&gt; 모든 예제 는 두 번째 차원을 따라 &lt;code&gt;default_value&lt;/code&gt; 로 채워집니다 .</target>
        </trans-unit>
        <trans-unit id="227990327c0f9190e29f55dcbf4d15fa08ca91bd" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;FixedLenSequenceFeature&lt;/code&gt;&lt;code&gt;df&lt;/code&gt; maps to a &lt;code&gt;Tensor&lt;/code&gt; of the specified type (or &lt;a href=&quot;../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt; if not specified) and shape &lt;code&gt;(serialized.size(), None) + df.shape&lt;/code&gt;. All examples in &lt;code&gt;serialized&lt;/code&gt; will be padded with &lt;code&gt;default_value&lt;/code&gt; along the second dimension.</source>
          <target state="translated">각 &lt;code&gt;FixedLenSequenceFeature&lt;/code&gt; &lt;code&gt;df&lt;/code&gt; A를 매핑 &lt;code&gt;Tensor&lt;/code&gt; 지정된 유형의 (또는 &lt;a href=&quot;../../tf#float32&quot;&gt; &lt;code&gt;tf.float32&lt;/code&gt; &lt;/a&gt; 지정되지 않은 경우)와 형태 &lt;code&gt;(serialized.size(), None) + df.shape&lt;/code&gt; . &lt;code&gt;serialized&lt;/code&gt; 모든 예제 는 두 번째 차원을 따라 &lt;code&gt;default_value&lt;/code&gt; 로 채워집니다 .</target>
        </trans-unit>
        <trans-unit id="5ff4b1e49bfa42b9d26c149bad5739f6cc2aeb05" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;RaggedFeature&lt;/code&gt; maps to a &lt;code&gt;RaggedTensor&lt;/code&gt; of the specified type. It is formed by stacking the &lt;code&gt;RaggedTensor&lt;/code&gt; for each example, where the &lt;code&gt;RaggedTensor&lt;/code&gt; for each individual example is constructed using the tensors specified by &lt;code&gt;RaggedTensor.values_key&lt;/code&gt; and &lt;code&gt;RaggedTensor.partition&lt;/code&gt;. See the &lt;a href=&quot;../../io/raggedfeature&quot;&gt;&lt;code&gt;tf.io.RaggedFeature&lt;/code&gt;&lt;/a&gt; documentation for details and examples.</source>
          <target state="translated">각 &lt;code&gt;RaggedFeature&lt;/code&gt; 는 A를 매핑 &lt;code&gt;RaggedTensor&lt;/code&gt; 지정된 유형의. 각 예제에 대해 &lt;code&gt;RaggedTensor&lt;/code&gt; 를 쌓아서 형성합니다 . 여기서 각 예제에 대한 &lt;code&gt;RaggedTensor&lt;/code&gt; 는 &lt;code&gt;RaggedTensor.values_key&lt;/code&gt; 및 &lt;code&gt;RaggedTensor.partition&lt;/code&gt; 에 지정된 텐서를 사용하여 구성됩니다 . 자세한 내용과 예제 는 &lt;a href=&quot;../../io/raggedfeature&quot;&gt; &lt;code&gt;tf.io.RaggedFeature&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8968c019afc90ee635fe7107260ce001e1786670" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;RaggedFeature&lt;/code&gt; maps to a &lt;code&gt;RaggedTensor&lt;/code&gt; of the specified type. It is formed by stacking the &lt;code&gt;RaggedTensor&lt;/code&gt; for each example, where the &lt;code&gt;RaggedTensor&lt;/code&gt; for each individual example is constructed using the tensors specified by &lt;code&gt;RaggedTensor.values_key&lt;/code&gt; and &lt;code&gt;RaggedTensor.partition&lt;/code&gt;. See the &lt;a href=&quot;raggedfeature&quot;&gt;&lt;code&gt;tf.io.RaggedFeature&lt;/code&gt;&lt;/a&gt; documentation for details and examples.</source>
          <target state="translated">각 &lt;code&gt;RaggedFeature&lt;/code&gt; 는 A를 매핑 &lt;code&gt;RaggedTensor&lt;/code&gt; 지정된 유형의. 각 예제에 대해 &lt;code&gt;RaggedTensor&lt;/code&gt; 를 쌓아서 형성합니다 . 여기서 각 예제에 대한 &lt;code&gt;RaggedTensor&lt;/code&gt; 는 &lt;code&gt;RaggedTensor.values_key&lt;/code&gt; 및 &lt;code&gt;RaggedTensor.partition&lt;/code&gt; 에 지정된 텐서를 사용하여 구성됩니다 . 자세한 내용과 예제 는 &lt;a href=&quot;raggedfeature&quot;&gt; &lt;code&gt;tf.io.RaggedFeature&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dc0e95cd9937e083aa36c1610babea4271ff0514" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;SparseFeature&lt;/code&gt; maps to a &lt;code&gt;SparseTensor&lt;/code&gt; of the specified type representing a Tensor of &lt;code&gt;dense_shape&lt;/code&gt;&lt;code&gt;[batch_size] + SparseFeature.size&lt;/code&gt;. Its &lt;code&gt;values&lt;/code&gt; come from the feature in the examples with key &lt;code&gt;value_key&lt;/code&gt;. A &lt;code&gt;values[i]&lt;/code&gt; comes from a position &lt;code&gt;k&lt;/code&gt; in the feature of an example at batch entry &lt;code&gt;batch&lt;/code&gt;. This positional information is recorded in &lt;code&gt;indices[i]&lt;/code&gt; as &lt;code&gt;[batch, index_0, index_1, ...]&lt;/code&gt; where &lt;code&gt;index_j&lt;/code&gt; is the &lt;code&gt;k-th&lt;/code&gt; value of the feature in the example at with key &lt;a href=&quot;../../io/sparsefeature#index_key&quot;&gt;&lt;code&gt;SparseFeature.index_key[j]&lt;/code&gt;&lt;/a&gt;. In other words, we split the indices (except the first index indicating the batch entry) of a &lt;code&gt;SparseTensor&lt;/code&gt; by dimension into different features of the &lt;code&gt;Example&lt;/code&gt;. Due to its complexity a &lt;code&gt;VarLenFeature&lt;/code&gt; should be preferred over a &lt;code&gt;SparseFeature&lt;/code&gt; whenever possible.</source>
          <target state="translated">각 &lt;code&gt;SparseFeature&lt;/code&gt; 는 (A)에 맵핑 &lt;code&gt;SparseTensor&lt;/code&gt; 텐서의 대표 지정된 유형의 &lt;code&gt;dense_shape&lt;/code&gt; &lt;code&gt;[batch_size] + SparseFeature.size&lt;/code&gt; . 그 &lt;code&gt;values&lt;/code&gt; 키를 사용하여 예제의 기능에서 올 &lt;code&gt;value_key&lt;/code&gt; . &lt;code&gt;values[i]&lt;/code&gt; 위치에서 오는 &lt;code&gt;k&lt;/code&gt; 배치 엔트리의 일례의 기능에 &lt;code&gt;batch&lt;/code&gt; . 이 위치 정보는 &lt;code&gt;[batch, index_0, index_1, ...]&lt;/code&gt; &lt;code&gt;indices[i]&lt;/code&gt; 로 색인 [i]에 기록됩니다 . 여기서 &lt;code&gt;index_j&lt;/code&gt; 는 예제에서 &lt;a href=&quot;../../io/sparsefeature#index_key&quot;&gt; &lt;code&gt;SparseFeature.index_key[j]&lt;/code&gt; &lt;/a&gt; 키를 사용하여 기능 의 &lt;code&gt;k-th&lt;/code&gt; 값입니다 .. 다시 말해, &lt;code&gt;SparseTensor&lt;/code&gt; 의 인덱스 (배치 항목을 나타내는 첫 번째 인덱스 제외)를 차원별로 &lt;code&gt;Example&lt;/code&gt; 의 다른 기능으로 분할합니다 . 그것의 복잡성에 &lt;code&gt;VarLenFeature&lt;/code&gt; 가 이상이 바람직해야 &lt;code&gt;SparseFeature&lt;/code&gt; 가능한.</target>
        </trans-unit>
        <trans-unit id="20445b8511d480f26ea72e773e616bd8d567d165" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;SparseFeature&lt;/code&gt; maps to a &lt;code&gt;SparseTensor&lt;/code&gt; of the specified type representing a Tensor of &lt;code&gt;dense_shape&lt;/code&gt;&lt;code&gt;[batch_size] + SparseFeature.size&lt;/code&gt;. Its &lt;code&gt;values&lt;/code&gt; come from the feature in the examples with key &lt;code&gt;value_key&lt;/code&gt;. A &lt;code&gt;values[i]&lt;/code&gt; comes from a position &lt;code&gt;k&lt;/code&gt; in the feature of an example at batch entry &lt;code&gt;batch&lt;/code&gt;. This positional information is recorded in &lt;code&gt;indices[i]&lt;/code&gt; as &lt;code&gt;[batch, index_0, index_1, ...]&lt;/code&gt; where &lt;code&gt;index_j&lt;/code&gt; is the &lt;code&gt;k-th&lt;/code&gt; value of the feature in the example at with key &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/io/SparseFeature#index_key&quot;&gt;&lt;code&gt;SparseFeature.index_key[j]&lt;/code&gt;&lt;/a&gt;. In other words, we split the indices (except the first index indicating the batch entry) of a &lt;code&gt;SparseTensor&lt;/code&gt; by dimension into different features of the &lt;code&gt;Example&lt;/code&gt;. Due to its complexity a &lt;code&gt;VarLenFeature&lt;/code&gt; should be preferred over a &lt;code&gt;SparseFeature&lt;/code&gt; whenever possible.</source>
          <target state="translated">각 &lt;code&gt;SparseFeature&lt;/code&gt; 는 (A)에 맵핑 &lt;code&gt;SparseTensor&lt;/code&gt; 텐서의 대표 지정된 유형의 &lt;code&gt;dense_shape&lt;/code&gt; &lt;code&gt;[batch_size] + SparseFeature.size&lt;/code&gt; . 해당 &lt;code&gt;values&lt;/code&gt; 은 &lt;code&gt;value_key&lt;/code&gt; 키가있는 예제의 기능에서 가져옵니다 . &lt;code&gt;values[i]&lt;/code&gt; 위치에서 오는 &lt;code&gt;k&lt;/code&gt; 배치 엔트리의 일례의 기능에 &lt;code&gt;batch&lt;/code&gt; . 이 위치 정보는 &lt;code&gt;indices[i]&lt;/code&gt; 에 &lt;code&gt;[batch, index_0, index_1, ...]&lt;/code&gt; 로 &lt;code&gt;index_j&lt;/code&gt; 됩니다 . 여기서 index_j 는 &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/io/SparseFeature#index_key&quot;&gt; &lt;code&gt;SparseFeature.index_key[j]&lt;/code&gt; &lt;/a&gt; 키가있는 예에서 특성 의 &lt;code&gt;k-th&lt;/code&gt; 값입니다 .. 즉, &lt;code&gt;SparseTensor&lt;/code&gt; 의 인덱스 (배치 항목을 나타내는 첫 번째 인덱스 제외)를 차원별로 &lt;code&gt;Example&lt;/code&gt; 의 여러 기능으로 분할 했습니다 . 복잡성으로 인해 &lt;code&gt;VarLenFeature&lt;/code&gt; 는 &lt;code&gt;SparseFeature&lt;/code&gt; 때마다 SparseFeature 보다 선호되어야 합니다.</target>
        </trans-unit>
        <trans-unit id="ec0f213d9552e1c0b7750efae44b94f6e3a054d5" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;SparseFeature&lt;/code&gt; maps to a &lt;code&gt;SparseTensor&lt;/code&gt; of the specified type representing a Tensor of &lt;code&gt;dense_shape&lt;/code&gt;&lt;code&gt;[batch_size] + SparseFeature.size&lt;/code&gt;. Its &lt;code&gt;values&lt;/code&gt; come from the feature in the examples with key &lt;code&gt;value_key&lt;/code&gt;. A &lt;code&gt;values[i]&lt;/code&gt; comes from a position &lt;code&gt;k&lt;/code&gt; in the feature of an example at batch entry &lt;code&gt;batch&lt;/code&gt;. This positional information is recorded in &lt;code&gt;indices[i]&lt;/code&gt; as &lt;code&gt;[batch, index_0, index_1, ...]&lt;/code&gt; where &lt;code&gt;index_j&lt;/code&gt; is the &lt;code&gt;k-th&lt;/code&gt; value of the feature in the example at with key &lt;a href=&quot;sparsefeature#index_key&quot;&gt;&lt;code&gt;SparseFeature.index_key[j]&lt;/code&gt;&lt;/a&gt;. In other words, we split the indices (except the first index indicating the batch entry) of a &lt;code&gt;SparseTensor&lt;/code&gt; by dimension into different features of the &lt;code&gt;Example&lt;/code&gt;. Due to its complexity a &lt;code&gt;VarLenFeature&lt;/code&gt; should be preferred over a &lt;code&gt;SparseFeature&lt;/code&gt; whenever possible.</source>
          <target state="translated">각 &lt;code&gt;SparseFeature&lt;/code&gt; 는 (A)에 맵핑 &lt;code&gt;SparseTensor&lt;/code&gt; 텐서의 대표 지정된 유형의 &lt;code&gt;dense_shape&lt;/code&gt; &lt;code&gt;[batch_size] + SparseFeature.size&lt;/code&gt; . 그 &lt;code&gt;values&lt;/code&gt; 키를 사용하여 예제의 기능에서 올 &lt;code&gt;value_key&lt;/code&gt; . &lt;code&gt;values[i]&lt;/code&gt; 위치에서 오는 &lt;code&gt;k&lt;/code&gt; 배치 엔트리의 일례의 기능에 &lt;code&gt;batch&lt;/code&gt; . 이 위치 정보는 &lt;code&gt;[batch, index_0, index_1, ...]&lt;/code&gt; &lt;code&gt;indices[i]&lt;/code&gt; 로 색인 [i]에 기록됩니다 . 여기서 &lt;code&gt;index_j&lt;/code&gt; 는 예제에서 &lt;a href=&quot;sparsefeature#index_key&quot;&gt; &lt;code&gt;SparseFeature.index_key[j]&lt;/code&gt; &lt;/a&gt; 키를 사용하여 기능 의 &lt;code&gt;k-th&lt;/code&gt; 값입니다 .. 다시 말해, &lt;code&gt;SparseTensor&lt;/code&gt; 의 인덱스 (배치 항목을 나타내는 첫 번째 인덱스 제외)를 차원별로 &lt;code&gt;Example&lt;/code&gt; 의 다른 기능으로 분할합니다 . 그것의 복잡성에 &lt;code&gt;VarLenFeature&lt;/code&gt; 가 이상이 바람직해야 &lt;code&gt;SparseFeature&lt;/code&gt; 가능한.</target>
        </trans-unit>
        <trans-unit id="4db2f7c49d4f1060f145f5df05f3ac3f70dc51a7" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;SparseTensor&lt;/code&gt; corresponding to &lt;code&gt;sequence_features&lt;/code&gt; represents a ragged vector. Its indices are &lt;code&gt;[time, index]&lt;/code&gt;, where &lt;code&gt;time&lt;/code&gt; is the &lt;code&gt;FeatureList&lt;/code&gt; entry and &lt;code&gt;index&lt;/code&gt; is the value's index in the list of values associated with that time.</source>
          <target state="translated">각 &lt;code&gt;SparseTensor&lt;/code&gt; 대응 &lt;code&gt;sequence_features&lt;/code&gt; 는 비정형 벡터이다. 색인은 &lt;code&gt;[time, index]&lt;/code&gt; . 여기서 &lt;code&gt;time&lt;/code&gt; 은 &lt;code&gt;FeatureList&lt;/code&gt; 항목이고 &lt;code&gt;index&lt;/code&gt; 는 해당 시간과 연관된 값 목록의 값 색인입니다.</target>
        </trans-unit>
        <trans-unit id="0e6b6726eed1f881ece79a8557b7490a3a12373d" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;VarLenFeature&lt;/code&gt; maps to a &lt;code&gt;SparseTensor&lt;/code&gt; of the specified type representing a ragged matrix. Its indices are &lt;code&gt;[batch, index]&lt;/code&gt; where &lt;code&gt;batch&lt;/code&gt; identifies the example in &lt;code&gt;serialized&lt;/code&gt;, and &lt;code&gt;index&lt;/code&gt; is the value's index in the list of values associated with that feature and example.</source>
          <target state="translated">각 &lt;code&gt;VarLenFeature&lt;/code&gt; 는 A를 매핑 &lt;code&gt;SparseTensor&lt;/code&gt; 비정형 행렬을 나타내는 특정 유형의. 인덱스는 &lt;code&gt;[batch, index]&lt;/code&gt; 이며 , 여기서 &lt;code&gt;batch&lt;/code&gt; 는 &lt;code&gt;serialized&lt;/code&gt; 예제를 식별 하며 &lt;code&gt;index&lt;/code&gt; 는 해당 기능 및 예제와 연관된 값 목록의 값 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="f1bc576f02c202f427e41cb41858ad752ac7548f" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;data[i].shape&lt;/code&gt; must start with the corresponding &lt;code&gt;indices[i].shape&lt;/code&gt;, and the rest of &lt;code&gt;data[i].shape&lt;/code&gt; must be constant w.r.t. &lt;code&gt;i&lt;/code&gt;. That is, we must have &lt;code&gt;data[i].shape = indices[i].shape + constant&lt;/code&gt;. In terms of this &lt;code&gt;constant&lt;/code&gt;, the output shape is</source>
          <target state="translated">각 &lt;code&gt;data[i].shape&lt;/code&gt; 는 해당 &lt;code&gt;indices[i].shape&lt;/code&gt; 시작해야 하며 나머지 &lt;code&gt;data[i].shape&lt;/code&gt; 는 상수 wrt &lt;code&gt;i&lt;/code&gt; 이어야합니다 . 즉, &lt;code&gt;data[i].shape = indices[i].shape + constant&lt;/code&gt; 가 있어야합니다 . 이 &lt;code&gt;constant&lt;/code&gt; 와 관련하여 출력 모양은</target>
        </trans-unit>
        <trans-unit id="9918d15a3b50a9df8c8da4f16dfbf38a0b690d2a" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;op_jj&lt;/code&gt; on the diagonal is required to represent a square matrix, and hence will have shape &lt;code&gt;batch_shape_j + [M_j, M_j]&lt;/code&gt;. &lt;code&gt;LinearOperator&lt;/code&gt;s in row &lt;code&gt;j&lt;/code&gt; of the blockwise structure must have &lt;code&gt;range_dimension&lt;/code&gt; equal to that of &lt;code&gt;op_jj&lt;/code&gt;, and &lt;code&gt;LinearOperators&lt;/code&gt; in column &lt;code&gt;j&lt;/code&gt; must have &lt;code&gt;domain_dimension&lt;/code&gt; equal to that of &lt;code&gt;op_jj&lt;/code&gt;.</source>
          <target state="translated">대각선의 각 &lt;code&gt;op_jj&lt;/code&gt; 는 정사각형 행렬을 나타 내기 위해 필요하므로 &lt;code&gt;batch_shape_j + [M_j, M_j]&lt;/code&gt; 모양이됩니다 . &lt;code&gt;LinearOperator&lt;/code&gt; 의 행 &lt;code&gt;j&lt;/code&gt; 가져야 블록 단위 구조 &lt;code&gt;range_dimension&lt;/code&gt; 는 그 동일 &lt;code&gt;op_jj&lt;/code&gt; 및 &lt;code&gt;LinearOperators&lt;/code&gt; 열에서 &lt;code&gt;j&lt;/code&gt; 있어야 &lt;code&gt;domain_dimension&lt;/code&gt; 는 그 동일 &lt;code&gt;op_jj&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e89ddb81cecdb78c46e47a25c2243e84460594e3" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;opj&lt;/code&gt; is required to represent a square matrix, and hence will have shape &lt;code&gt;batch_shape_j + [M_j, M_j]&lt;/code&gt;.</source>
          <target state="translated">각 &lt;code&gt;opj&lt;/code&gt; 는 정사각 행렬을 나타 내기 위해 필요하므로 모양 &lt;code&gt;batch_shape_j + [M_j, M_j]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="be00db719d1ddeffb3b52a4e144efe9293d8f3f3" translate="yes" xml:space="preserve">
          <source>Each accumulator averages once enough gradients (replicas_to_aggregate) have been accumulated.</source>
          <target state="translated">각 누적 기의 평균은 충분한 기울기 (replicas_to_aggregate)가 누적되면 평균입니다.</target>
        </trans-unit>
        <trans-unit id="441cc16d923fb9e6899572323e898557206ab000" translate="yes" xml:space="preserve">
          <source>Each batch component of the output permutation represents a permutation of &lt;code&gt;N&lt;/code&gt; elements, where the input sparse matrix components each have &lt;code&gt;N&lt;/code&gt; rows. That is, the component contains each of the integers &lt;code&gt;{0, .. N-1}&lt;/code&gt; exactly once. The &lt;code&gt;i&lt;/code&gt;th element represents the row index that the &lt;code&gt;i&lt;/code&gt;th row maps to.</source>
          <target state="translated">출력 순열의 각 배치 구성 요소는 &lt;code&gt;N&lt;/code&gt; 개 요소 의 순열을 나타내며 입력 희소 행렬 구성 요소는 각각 &lt;code&gt;N&lt;/code&gt; 개의 행을 갖습니다 . 즉, 구성 요소에는 각 정수 &lt;code&gt;{0, .. N-1}&lt;/code&gt; 정확히 한 번만 포함됩니다. &lt;code&gt;i&lt;/code&gt; 번째 요소는 그 행 인덱스 나타내는 &lt;code&gt;i&lt;/code&gt; 번째 행에 매핑한다.</target>
        </trans-unit>
        <trans-unit id="60c1de68d7fc0e0b85125dfe0bb3e6024c8a2fef" translate="yes" xml:space="preserve">
          <source>Each bin value in the output indicates number of occurrences of the particular index. Here, index 1 in output has a value 2. This indicates value 1 occurs two times in &lt;code&gt;values&lt;/code&gt;.</source>
          <target state="translated">출력의 각 구간 값은 특정 색인의 발생 횟수를 나타냅니다. 여기서 출력의 인덱스 1에는 값 2가 있습니다. 이는 값 1이 &lt;code&gt;values&lt;/code&gt; 에서 두 번 발생 함을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="46a35ac5d392d8a4c5717e0c79a99d2ec77af715" translate="yes" xml:space="preserve">
          <source>Each comparison returns a boolean &lt;code&gt;true&lt;/code&gt; (if &lt;code&gt;input_value &amp;gt; threshold&lt;/code&gt;) or and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">각각의 비교는 부울 반환 &lt;code&gt;true&lt;/code&gt; (있는 경우 &lt;code&gt;input_value &amp;gt; threshold&lt;/code&gt; 또는과) &lt;code&gt;false&lt;/code&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="ca410c02aafe78f19d5f192ccdac3dcb53dfc437" translate="yes" xml:space="preserve">
          <source>Each component of the input sparse matrix must represent a square symmetric matrix; only the lower triangular part of the matrix is read. The values of the sparse matrix does not affect the returned permutation, only the sparsity pattern of the sparse matrix is used. Hence, a single AMD ordering may be reused for the Cholesky decompositions of sparse matrices with the same sparsity pattern but with possibly different values.</source>
          <target state="translated">입력 희소 행렬의 각 구성 요소는 정사각형 대칭 행렬을 나타내야합니다. 행렬의 아래쪽 삼각형 부분 만 읽습니다. 희소 행렬의 값은 반환 된 순열에 영향을주지 않으며 희소 행렬의 희소성 패턴 만 사용됩니다. 따라서 단일 AMD 순서는 희소성 패턴이 같지만 값이 다를 수있는 희소 행렬의 Cholesky 분해에 재사용 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5077956249be3e57d44f61a973c84229d1b44c4f" translate="yes" xml:space="preserve">
          <source>Each component of the input sparse matrix must represent a symmetric positive definite (SPD) matrix; although only the lower triangular part of the matrix is read. If any individual component is not SPD, then an InvalidArgument error is thrown.</source>
          <target state="translated">입력 희소 행렬의 각 구성 요소는 대칭 양의 정부 호 행렬 (SPD)을 나타내야합니다. 행렬의 아래쪽 삼각형 부분 만 읽습니다. 개별 구성 요소가 SPD가 아닌 경우 InvalidArgument 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6712c61f3c9c472a7796d2e229fbb1c47ce399bd" translate="yes" xml:space="preserve">
          <source>Each conceptual range specification is encoded in the op's argument. This encoding is best understand by considering a non-trivial example. In particular, &lt;code&gt;foo[1, 2:4, None, ..., :-3:-1, :]&lt;/code&gt; will be encoded as</source>
          <target state="translated">각 개념적 범위 사양은 op의 인수에 인코딩됩니다. 이 인코딩은 사소하지 않은 예를 고려하면 가장 잘 이해할 수 있습니다. 특히, &lt;code&gt;foo[1, 2:4, None, ..., :-3:-1, :]&lt;/code&gt; 은 다음과 같이 인코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="0fd67b0ec0b49f6ce7d82128e4a2712babeef4ea" translate="yes" xml:space="preserve">
          <source>Each element in the list has the following properties</source>
          <target state="translated">목록의 각 요소에는 다음과 같은 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="c87a6f35b5ba769325830ea659978838364ed0c5" translate="yes" xml:space="preserve">
          <source>Each element of the input Tensor is converted to an array of bytes.</source>
          <target state="translated">입력 Tensor의 각 요소는 바이트 배열로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="2eff09768619dd4cfe4a6371293c28c087e9bbff" translate="yes" xml:space="preserve">
          <source>Each entry in &lt;code&gt;output&lt;/code&gt; is the mean of the corresponding size &lt;code&gt;ksize&lt;/code&gt; window in &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; 각 항목 은 해당 크기의 &lt;code&gt;ksize&lt;/code&gt; 창의 평균 &lt;code&gt;value&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ea831f12c1ec3212d288941d3c8bcb421edfe2df" translate="yes" xml:space="preserve">
          <source>Each instance supplies its own input.</source>
          <target state="translated">각 인스턴스는 자체 입력을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b43a986e9580b1bf352d7fdac828cc905e217997" translate="yes" xml:space="preserve">
          <source>Each invocation of batch emits an &lt;code&gt;id&lt;/code&gt; scalar which will be used to identify this particular invocation when doing unbatch or its gradient.</source>
          <target state="translated">배치의 각 호출은 배치 해제 또는 그라디언트를 수행 할 때이 특정 호출을 식별하는 데 사용되는 &lt;code&gt;id&lt;/code&gt; 스칼라를 방출 합니다.</target>
        </trans-unit>
        <trans-unit id="caa1a6302073ad781167a8cd550ee605d20a64a5" translate="yes" xml:space="preserve">
          <source>Each item in texts can also be a list, in which case we assume each item of that list to be a token.</source>
          <target state="translated">텍스트의 각 항목도 목록이 될 수 있으며,이 경우 해당 목록의 각 항목이 토큰으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="7ef25610b63ee3daa8cb47e92bed65b82174f660" translate="yes" xml:space="preserve">
          <source>Each job may also be specified as a sparse mapping from task indices to network addresses. This enables a server to be configured without needing to know the identity of (for example) all other worker tasks:</source>
          <target state="translated">각 작업은 작업 인덱스에서 네트워크 주소로의 희소 매핑으로 지정할 수도 있습니다. 이를 통해 다른 모든 작업자 작업의 ID를 알 필요없이 서버를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1cdb23ee45a94e6a87da472c4a1c6f6fa240b0c1" translate="yes" xml:space="preserve">
          <source>Each layer has a dtype, which is typically the dtype of the layer's computations and variables. A layer's dtype can be queried via the &lt;a href=&quot;layer#dtype&quot;&gt;&lt;code&gt;Layer.dtype&lt;/code&gt;&lt;/a&gt; property. The dtype is specified with the &lt;code&gt;dtype&lt;/code&gt; constructor argument. In TensorFlow 2, the dtype defaults to &lt;a href=&quot;../backend/floatx&quot;&gt;&lt;code&gt;tf.keras.backend.floatx()&lt;/code&gt;&lt;/a&gt; if no dtype is passed. &lt;code&gt;floatx()&lt;/code&gt; itself defaults to &quot;float32&quot;. Additionally, layers will cast their inputs to the layer's dtype in TensorFlow 2. When mixed precision is used, layers may have different computation and variable dtypes. See &lt;a href=&quot;../mixed_precision/experimental/policy&quot;&gt;&lt;code&gt;tf.keras.mixed_precision.experimental.Policy&lt;/code&gt;&lt;/a&gt; for details on layer dtypes.</source>
          <target state="translated">각 레이어에는 dtype이 있으며 이는 일반적으로 레이어 계산 및 변수의 dtype입니다. &lt;a href=&quot;layer#dtype&quot;&gt; &lt;code&gt;Layer.dtype&lt;/code&gt; &lt;/a&gt; 속성을 통해 레이어의 dtype을 쿼리 할 수 ​​있습니다 . dtype은 &lt;code&gt;dtype&lt;/code&gt; 생성자 인수로 지정됩니다 . TensorFlow 2에서 dtype이 전달되지 않으면 dtype의 기본값은 &lt;a href=&quot;../backend/floatx&quot;&gt; &lt;code&gt;tf.keras.backend.floatx()&lt;/code&gt; &lt;/a&gt; 입니다. &lt;code&gt;floatx()&lt;/code&gt; 자체의 기본값은 &quot;float32&quot;입니다. 또한 레이어는 입력을 TensorFlow 2에서 레이어의 dtype으로 캐스팅합니다. 혼합 정밀도를 사용하면 레이어마다 계산 및 변수 dtype이 다를 수 있습니다. 레이어 dtype에 대한 자세한 내용 은 &lt;a href=&quot;../mixed_precision/experimental/policy&quot;&gt; &lt;code&gt;tf.keras.mixed_precision.experimental.Policy&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bb6241a556989afbd18759ec55fc7521c7320211" translate="yes" xml:space="preserve">
          <source>Each matrix may be transposed or adjointed (conjugated and transposed) according to the Boolean parameters &lt;code&gt;transpose_a&lt;/code&gt;, &lt;code&gt;adjoint_a&lt;/code&gt;, &lt;code&gt;transpose_b&lt;/code&gt; and &lt;code&gt;adjoint_b&lt;/code&gt;. At most one of &lt;code&gt;transpose_a&lt;/code&gt; or &lt;code&gt;adjoint_a&lt;/code&gt; may be True. Similarly, at most one of &lt;code&gt;transpose_b&lt;/code&gt; or &lt;code&gt;adjoint_b&lt;/code&gt; may be True.</source>
          <target state="translated">각 행렬은 부울 매개 변수 &lt;code&gt;transpose_a&lt;/code&gt; , &lt;code&gt;adjoint_a&lt;/code&gt; , &lt;code&gt;transpose_b&lt;/code&gt; 및 &lt;code&gt;adjoint_b&lt;/code&gt; 에 따라 전치 또는 인접 (공액 및 전치) 될 수 있습니다 . &lt;code&gt;transpose_a&lt;/code&gt; 또는 &lt;code&gt;adjoint_a&lt;/code&gt; 중 하나만 True 일 수 있습니다. 마찬가지로, &lt;code&gt;transpose_b&lt;/code&gt; 또는 &lt;code&gt;adjoint_b&lt;/code&gt; 중 최대 하나 가 True 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea3e9548de72147ce2c10db7ff80fccfc964f054" translate="yes" xml:space="preserve">
          <source>Each member of the TensorList corresponds to one row of the input tensor, specified by the given index (see &lt;a href=&quot;../gather&quot;&gt;&lt;code&gt;tf.gather&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">TensorList의 각 멤버는 주어진 인덱스로 지정된 입력 텐서의 한 행에 해당합니다 ( &lt;a href=&quot;../gather&quot;&gt; &lt;code&gt;tf.gather&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="58a436999bdcc841459f2d09c5dee0a8dc7aeb18" translate="yes" xml:space="preserve">
          <source>Each meta graph added to the SavedModel must be annotated with tags. The tags provide a means to identify the specific meta graph to load and restore, along with the shared set of variables and assets.</source>
          <target state="translated">SavedModel에 추가 된 각 메타 그래프에는 태그를 달아야합니다. 태그는 공유 변수 및 자산 세트와 함께로드 및 복원 할 특정 메타 그래프를 식별하는 수단을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4069de9e0766e0eb24cc7204db2911acde8497f0" translate="yes" xml:space="preserve">
          <source>Each newswire is encoded as a list of word indexes (integers). For convenience, words are indexed by overall frequency in the dataset, so that for instance the integer &quot;3&quot; encodes the 3rd most frequent word in the data. This allows for quick filtering operations such as: &quot;only consider the top 10,000 most common words, but eliminate the top 20 most common words&quot;.</source>
          <target state="translated">각 뉴스 와이어는 단어 인덱스 (정수) 목록으로 인코딩됩니다. 편의를 위해 단어는 데이터 세트의 전체 빈도에 따라 색인화되므로 예를 들어 정수 &quot;3&quot;은 데이터에서 세 번째로 자주 사용되는 단어를 인코딩합니다. 이를 통해 다음과 같은 빠른 필터링 작업을 수행 할 수 있습니다. &quot;가장 많이 사용되는 상위 10,000 개 단어 만 고려하고 가장 많이 사용되는 상위 20 개 단어는 제거합니다.&quot;</target>
        </trans-unit>
        <trans-unit id="a7ac48be6c56c94160a763562ebfbaed8ade1b51" translate="yes" xml:space="preserve">
          <source>Each op which emits a non-empty batch will also emit a non-empty batch_index Tensor, which, is a [K, 3] matrix where each row contains the invocation's id, start, and length of elements of each set of Tensors present in batched_tensors.</source>
          <target state="translated">비어 있지 않은 배치를 방출하는 각 작업은 또한 비어 있지 않은 batch_index Tensor를 방출합니다. 이는 각 행에있는 각 Tensor 세트의 요소의 호출 ID, 시작 및 길이를 포함하는 [K, 3] 행렬입니다. batched_tensors.</target>
        </trans-unit>
        <trans-unit id="7ec5ef88be1db2fa1a95ac0325a1bf99f771c0ac" translate="yes" xml:space="preserve">
          <source>Each output element consists of a key-value pair represented as a pair of scalar string &lt;code&gt;Tensor&lt;/code&gt;s, where the first &lt;code&gt;Tensor&lt;/code&gt; contains the key and the second &lt;code&gt;Tensor&lt;/code&gt; contains the value.</source>
          <target state="translated">각 출력 요소는 스칼라 문자열 &lt;code&gt;Tensor&lt;/code&gt; 쌍으로 표시되는 키-값 쌍으로 구성됩니다 . 여기서 첫 번째 &lt;code&gt;Tensor&lt;/code&gt; 는 키를 포함하고 두 번째 &lt;code&gt;Tensor&lt;/code&gt; 는 값을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="76d446cb40035fb845f01a6f1a77eaf839d593c4" translate="yes" xml:space="preserve">
          <source>Each output patch can be reshaped to &lt;code&gt;sizes[1], sizes[2], depth&lt;/code&gt;, where &lt;code&gt;depth&lt;/code&gt; is &lt;code&gt;images.shape[3]&lt;/code&gt;.</source>
          <target state="translated">각 출력 패치는 &lt;code&gt;sizes[1], sizes[2], depth&lt;/code&gt; 로 재구성 될 수 있으며 , 여기서 &lt;code&gt;depth&lt;/code&gt; 는 &lt;code&gt;images.shape[3]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c97cdddb81cdc590bd76534c8b39698ca73775c8" translate="yes" xml:space="preserve">
          <source>Each output pixel is computed by first transforming the pixel's footprint into the input tensor and then averaging the pixels that intersect the footprint. An input pixel's contribution to the average is weighted by the fraction of its area that intersects the footprint. This is the same as OpenCV's INTER_AREA.</source>
          <target state="translated">각 출력 픽셀은 먼저 픽셀의 풋 프린트를 입력 텐서로 변환 한 다음 풋 프린트와 교차하는 픽셀을 평균화하여 계산됩니다. 평균값에 대한 입력 픽셀의 기여는 풋 프린트와 교차하는 영역의 비율에 의해 가중됩니다. 이것은 OpenCV의 INTER_AREA와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="64b34b561d406bfd771adf13970772919b62c25d" translate="yes" xml:space="preserve">
          <source>Each output tensor is a dense tensor. This means that it is padded to hold the largest number of repeated elements seen in the input minibatch. (The shape is also padded by one to prevent zero-sized dimensions). The actual repeat counts for each example in the minibatch can be found in the &lt;code&gt;sizes&lt;/code&gt; output. In many cases the output of &lt;code&gt;decode_proto&lt;/code&gt; is fed immediately into tf.squeeze if missing values are not a concern. When using tf.squeeze, always pass the squeeze dimension explicitly to avoid surprises.</source>
          <target state="translated">각 출력 텐서는 조밀 한 텐서입니다. 즉, 입력 미니 배치에서 볼 수있는 최대 반복 요소 수를 채울 수 있습니다. 크기가 0 인 크기를 방지하기 위해 모양이 1만큼 채워집니다. 미니 배치의 각 예에 대한 실제 반복 횟수는 &lt;code&gt;sizes&lt;/code&gt; 출력 에서 찾을 수 있습니다 . 누락 된 값이 문제가되지 않는 경우 대부분의 경우 &lt;code&gt;decode_proto&lt;/code&gt; 의 출력은 즉시 tf.squeeze 로 공급됩니다. tf.squeeze를 사용할 때는 놀라움을 피하기 위해 항상 압착 치수를 명시 적으로 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="e6c91b6c2633362632f841c1ccb66bafe6332463" translate="yes" xml:space="preserve">
          <source>Each queue element is a tuple of one or more tensors, where each tuple component has a static dtype, and may have a static shape. The queue implementations support versions of enqueue and dequeue that handle single elements, versions that support enqueuing and dequeuing a batch of elements at once.</source>
          <target state="translated">각 큐 요소는 하나 이상의 텐서의 튜플이며, 각 튜플 구성 요소는 정적 dtype을 가지며 정적 모양을 가질 수 있습니다. 큐 구현은 단일 요소를 처리하는 큐 및 큐 버전, 한 번에 요소 배치를 큐에서 큐에서 제외하는 버전을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="551331f0073d6068b977b29fa7d823f6b93a3a5c" translate="yes" xml:space="preserve">
          <source>Each replica will take a single, different input from the inputs provided by one &lt;code&gt;get_next&lt;/code&gt; call on the input iterator.</source>
          <target state="translated">각 복제본은 입력 반복기에서 하나의 &lt;code&gt;get_next&lt;/code&gt; 호출이 제공하는 입력과는 다른 단일 입력을받습니다 .</target>
        </trans-unit>
        <trans-unit id="7f72f560c3d5b91e9a45405fd49d9679f5bbf4a3" translate="yes" xml:space="preserve">
          <source>Each row in the produced Tensor corresponds to the element in the TensorList specified by the given index (see &lt;a href=&quot;../gather&quot;&gt;&lt;code&gt;tf.gather&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">지정된 인덱스에 의해 지정된 TensorList의 소자로 제작 텐서 대응의 각 행 (참조 &lt;a href=&quot;../gather&quot;&gt; &lt;code&gt;tf.gather&lt;/code&gt; 을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f5901818bcf4a21a5306c5bc783179fa30627b69" translate="yes" xml:space="preserve">
          <source>Each row of the &lt;code&gt;output&lt;/code&gt;&lt;code&gt;RaggedTensor&lt;/code&gt; will contain the explicit values from the same row in &lt;code&gt;st_input&lt;/code&gt;. &lt;code&gt;st_input&lt;/code&gt; must be ragged-right. If not it is not ragged-right, then an error will be generated.</source>
          <target state="translated">각 행의 &lt;code&gt;output&lt;/code&gt; &lt;code&gt;RaggedTensor&lt;/code&gt; 은 동일한 행에서 명시된 값을 포함한다 &lt;code&gt;st_input&lt;/code&gt; . &lt;code&gt;st_input&lt;/code&gt; 은 비정형이어야합니다. 그렇지 않으면 오른쪽으로 정렬되지 않으면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c216ccaa4d6eb31eeeeece9b91a97e7a2a1c5560" translate="yes" xml:space="preserve">
          <source>Each row of the returned &lt;code&gt;RaggedTensor&lt;/code&gt; contains a single sequence:</source>
          <target state="translated">반환 된 &lt;code&gt;RaggedTensor&lt;/code&gt; 의 각 행 에는 단일 시퀀스가 ​​포함됩니다.</target>
        </trans-unit>
        <trans-unit id="17e3eb7d39e837af72f23c35fc67b178925d530b" translate="yes" xml:space="preserve">
          <source>Each sequence has to a list of integers. In other words, sequences should be a list of sequences</source>
          <target state="translated">각 시퀀스에는 정수 목록이 있습니다. 즉, 시퀀스는 시퀀스의 목록이어야합니다</target>
        </trans-unit>
        <trans-unit id="4e7b8ab60e2411c388ca12cf758dfa5c1a65a3f3" translate="yes" xml:space="preserve">
          <source>Each set of rows with the same index in (sorted_inputs, values) is treated independently. The resulting row is the equivalent of calling &lt;code&gt;np.searchsorted(sorted_inputs, values, side='left')&lt;/code&gt;.</source>
          <target state="translated">(sorted_inputs, values)에서 동일한 인덱스를 가진 각 행 집합은 독립적으로 처리됩니다. 결과 행은 &lt;code&gt;np.searchsorted(sorted_inputs, values, side='left')&lt;/code&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="05bc0c4c8fa961e5c50c549ca608b718db80c7b0" translate="yes" xml:space="preserve">
          <source>Each set of rows with the same index in (sorted_inputs, values) is treated independently. The resulting row is the equivalent of calling &lt;code&gt;np.searchsorted(sorted_inputs, values, side='right')&lt;/code&gt;.</source>
          <target state="translated">(sorted_inputs, values)에서 동일한 인덱스를 가진 각 행 집합은 독립적으로 처리됩니다. 결과 행은 &lt;code&gt;np.searchsorted(sorted_inputs, values, side='right')&lt;/code&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d4a4d7a3191432c4f1d74ce9050f003924f736da" translate="yes" xml:space="preserve">
          <source>Each tensor in the result list corresponds to one row of the input tensor.</source>
          <target state="translated">결과 목록의 각 텐서는 입력 텐서의 한 행에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="5ea291be19a509a559a73149b95c038a31edc72b" translate="yes" xml:space="preserve">
          <source>Each valid line in this file (which should have a CSV-like format) corresponds to a valid word ID. IDs are in sequential order, starting from num_reserved_ids. The last entry in each line is expected to be a value corresponding to the count or relative probability. Exactly one of &lt;code&gt;vocab_file&lt;/code&gt; and &lt;code&gt;unigrams&lt;/code&gt; needs to be passed to this operation.</source>
          <target state="translated">이 파일의 유효한 각 줄 (CSV 형식이어야 함)은 유효한 단어 ID에 해당합니다. ID는 num_reserved_ids부터 시작하여 순차적 인 순서입니다. 각 줄의 마지막 항목은 개수 또는 상대 확률에 해당하는 값이 될 것으로 예상됩니다. &lt;code&gt;vocab_file&lt;/code&gt; 및 &lt;code&gt;unigrams&lt;/code&gt; 중 정확히 하나 를이 작업에 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="f8e3878678f2b0a73d6ce75df8834a154d82279a" translate="yes" xml:space="preserve">
          <source>Each value in &lt;code&gt;feed_dict&lt;/code&gt; must be convertible to a numpy array of the dtype of the corresponding key.</source>
          <target state="translated">&lt;code&gt;feed_dict&lt;/code&gt; 의 각 값 은 해당 키의 dtype의 numpy 배열로 변환 가능 해야합니다.</target>
        </trans-unit>
        <trans-unit id="1eddebe67f51e2e98765c6c9e0fd906261da9314" translate="yes" xml:space="preserve">
          <source>Each value in the result represents the square root of the sum of the real and imaginary parts of an FFT on the current window of samples. In this way, the lowest dimension represents the power of each frequency in the current window, and adjacent windows are concatenated in the next dimension.</source>
          <target state="translated">결과의 각 값은 현재 샘플 창에서 FFT의 실수 부분과 허수 부분 합계의 제곱근을 나타냅니다. 이런 식으로 가장 낮은 차원은 현재 창에서 각 주파수의 전력을 나타내며 인접한 창은 다음 차원에서 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="9fef5c634fcde75fa5e28df6cc454787267bb471" translate="yes" xml:space="preserve">
          <source>Each vector along the class dimension should hold a valid probability distribution e.g. for the case in which labels are of shape &lt;code&gt;[batch_size, num_classes]&lt;/code&gt;, each row of &lt;code&gt;labels[i]&lt;/code&gt; must be a valid probability distribution.</source>
          <target state="translated">클래스 차원의 각 벡터는 유효한 확률 분포를 가져야합니다. 예를 들어 레이블이 &lt;code&gt;[batch_size, num_classes]&lt;/code&gt; 형태 인 경우 &lt;code&gt;labels[i]&lt;/code&gt; 의 각 행은 유효한 확률 분포 여야합니다.</target>
        </trans-unit>
        <trans-unit id="7e1e4d53433d9039c46f4248ad092a43c3a14839" translate="yes" xml:space="preserve">
          <source>Each vector is handled independently. The &lt;code&gt;axis&lt;/code&gt; argument sets which axis of the input the finction is applied along.</source>
          <target state="translated">각 벡터는 독립적으로 처리됩니다. &lt;code&gt;axis&lt;/code&gt; 입력 축 인자 세트는 finction이 함께인가된다.</target>
        </trans-unit>
        <trans-unit id="29c1fe6a6572e141688b5c7bca927a840cc3db38" translate="yes" xml:space="preserve">
          <source>Each vector is handled independently. The &lt;code&gt;axis&lt;/code&gt; argument sets which axis of the input the function is applied along.</source>
          <target state="translated">각 벡터는 독립적으로 처리됩니다. &lt;code&gt;axis&lt;/code&gt; 입력 축 인자 세트는 함수에 따라인가된다.</target>
        </trans-unit>
        <trans-unit id="9e0468f80c3414aaba1c31f9343982b0cf7d54f2" translate="yes" xml:space="preserve">
          <source>Each yield is a 3-tuple: the pathname of a directory, followed by lists of all its subdirectories and leaf files. That is, each yield looks like: &lt;code&gt;(dirname, [subdirname, subdirname, ...], [filename, filename, ...])&lt;/code&gt;. Each item is a string.</source>
          <target state="translated">각 수율은 3 개의 튜플입니다. 디렉토리의 경로 이름 다음에 모든 서브 디렉토리 및 리프 파일 목록이옵니다. 즉, 각 산출량은 &lt;code&gt;(dirname, [subdirname, subdirname, ...], [filename, filename, ...])&lt;/code&gt; . 각 항목은 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="7f50bc776ee8ac768be6f39d5bf960f531e28e50" translate="yes" xml:space="preserve">
          <source>Eager Compatibility</source>
          <target state="translated">열악한 호환성</target>
        </trans-unit>
        <trans-unit id="47417439c687992a16b5c56566761d74801e7f76" translate="yes" xml:space="preserve">
          <source>Eager defined functions are functions decorated by tf.contrib.eager.defun.</source>
          <target state="translated">열망 정의 함수는 tf.contrib.eager.defun로 장식 된 함수입니다.</target>
        </trans-unit>
        <trans-unit id="2b122e79faaa952b4168aa1fa16fa8a264711947" translate="yes" xml:space="preserve">
          <source>Eager execution</source>
          <target state="translated">빠른 실행</target>
        </trans-unit>
        <trans-unit id="26da12bbabc651ef3fa4d97385bc838c93cbbb88" translate="yes" xml:space="preserve">
          <source>Eager execution cannot be enabled after TensorFlow APIs have been used to create or execute graphs. It is typically recommended to invoke this function at program startup and not in a library (as most libraries should be usable both with and without eager execution).</source>
          <target state="translated">TensorFlow API를 사용하여 그래프를 작성하거나 실행 한 후에는 빠른 실행을 사용할 수 없습니다. 일반적으로 라이브러리가 아닌 프로그램 시작시이 기능을 호출하는 것이 좋습니다 (대부분의 라이브러리는 열성적인 실행 여부와 상관없이 사용 가능해야 함).</target>
        </trans-unit>
        <trans-unit id="ea4653faaf8b5c79819a2ca1f3ed18364e2ccc26" translate="yes" xml:space="preserve">
          <source>Eager execution is enabled by default and this API returns &lt;code&gt;True&lt;/code&gt; in most of cases. However, this API might return &lt;code&gt;False&lt;/code&gt; in the following use cases.</source>
          <target state="translated">빠른 실행은 기본적으로 사용되며이 API는 대부분의 경우 &lt;code&gt;True&lt;/code&gt; 를 반환합니다 . 그러나이 API 는 다음 사용 사례에서 &lt;code&gt;False&lt;/code&gt; 를 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="457086cec84666e014a19f01e4250cd0d71041e6" translate="yes" xml:space="preserve">
          <source>Eager execution is enabled in the outermost context.</source>
          <target state="translated">빠른 실행은 가장 바깥 쪽 컨텍스트에서 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="49d26f61db0485b6d7b42588dcdd8a60acfb62a2" translate="yes" xml:space="preserve">
          <source>Eager execution is typically enabled via &lt;a href=&quot;enable_eager_execution&quot;&gt;&lt;code&gt;tf.compat.v1.enable_eager_execution&lt;/code&gt;&lt;/a&gt;, but may also be enabled within the context of a Python function via tf.contrib.eager.py_func.</source>
          <target state="translated">&lt;a href=&quot;enable_eager_execution&quot;&gt; &lt;code&gt;tf.compat.v1.enable_eager_execution&lt;/code&gt; &lt;/a&gt; 실행은 일반적으로 tf.compat.v1.enable_eager_execution을 통해 활성화 되지만 tf.contrib.eager.py_func를 통해 Python 함수의 컨텍스트 내에서 활성화 될 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d06564a36a9559d2e0a5392cfeb6c660976f37d" translate="yes" xml:space="preserve">
          <source>Eager execution provides an imperative interface to TensorFlow. With eager execution enabled, TensorFlow functions execute operations immediately (as opposed to adding to a graph to be executed later in a &lt;a href=&quot;session&quot;&gt;&lt;code&gt;tf.compat.v1.Session&lt;/code&gt;&lt;/a&gt;) and return concrete values (as opposed to symbolic references to a node in a computational graph).</source>
          <target state="translated">빠른 실행은 TensorFlow에 필수적인 인터페이스를 제공합니다. 열악한 실행이 활성화되면 TensorFlow 함수는 즉시 작업을 실행하고 ( &lt;a href=&quot;session&quot;&gt; &lt;code&gt;tf.compat.v1.Session&lt;/code&gt; &lt;/a&gt; 에서 나중에 실행할 그래프에 추가하는 대신 ) 구체적인 값을 반환합니다 (계산 그래프의 노드에 대한 기호 참조와 반대) .</target>
        </trans-unit>
        <trans-unit id="2cfb1b3e6b97e592ebcc30338ad523ea602b8bc3" translate="yes" xml:space="preserve">
          <source>EagerPyFunc</source>
          <target state="translated">EagerPyFunc</target>
        </trans-unit>
        <trans-unit id="a8fc50e8e18487e58459997371c0df412c59129e" translate="yes" xml:space="preserve">
          <source>Eagerly executes a python function to compute func(input)-&amp;gt;output. The</source>
          <target state="translated">func (input)-&amp;gt; output을 계산하기 위해 파이썬 함수를 열심히 실행합니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="87cbba3896e6df9149bdcccd4f43477fd6268f65" translate="yes" xml:space="preserve">
          <source>Eases the porting of code that uses tf.nn.embedding_lookup().</source>
          <target state="translated">tf.nn.embedding_lookup ()을 사용하는 코드 이식을 용이하게합니다.</target>
        </trans-unit>
        <trans-unit id="8c3cdcecf51a2f7be5b781220a956f9c2b0b72b0" translate="yes" xml:space="preserve">
          <source>Eases the porting of code that uses tf.nn.embedding_lookup_sparse().</source>
          <target state="translated">tf.nn.embedding_lookup_sparse ()를 사용하는 코드 이식을 용이하게합니다.</target>
        </trans-unit>
        <trans-unit id="207de216011ca74ce6638b919e37a863ce6e5c3d" translate="yes" xml:space="preserve">
          <source>EditDistance</source>
          <target state="translated">EditDistance</target>
        </trans-unit>
        <trans-unit id="b5725757ffa6f438d6a1a3133c5b50874a3dfd45" translate="yes" xml:space="preserve">
          <source>Efficiency of the transform is not critical, and using &lt;code&gt;map_fn&lt;/code&gt; is more readable.</source>
          <target state="translated">변환의 효율성은 중요하지 않으며 &lt;code&gt;map_fn&lt;/code&gt; 을 사용 하는 것이 더 읽기 쉽습니다 .</target>
        </trans-unit>
        <trans-unit id="c9bc58428735ee8f0c80598baae3e59551f7ae8f" translate="yes" xml:space="preserve">
          <source>Efficient Backprop, &lt;a href=&quot;http://yann.lecun.com/exdb/publis/pdf/lecun-98b.pdf&quot;&gt;Lecun et al., 1998&lt;/a&gt;</source>
          <target state="translated">효율적인 Backprop, &lt;a href=&quot;http://yann.lecun.com/exdb/publis/pdf/lecun-98b.pdf&quot;&gt;Lecun et al., 1998&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e76314f5d6e0a97f03753acc7a70778c22f74ea1" translate="yes" xml:space="preserve">
          <source>Efficient Learning using Forward-Backward Splitting: &lt;a href=&quot;http://papers.nips.cc/paper/3793-efficient-learning-using-forward-backward-splitting&quot;&gt;Duchi et al., 2009&lt;/a&gt; (&lt;a href=&quot;http://papers.nips.cc/paper/3793-efficient-learning-using-forward-backward-splitting.pdf&quot;&gt;pdf&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;http://papers.nips.cc/paper/3793-efficient-learning-using-forward-backward-splitting&quot;&gt;전후&lt;/a&gt; 분할을 사용한 효율적인 학습 : Duchi et al., 2009 ( &lt;a href=&quot;http://papers.nips.cc/paper/3793-efficient-learning-using-forward-backward-splitting.pdf&quot;&gt;pdf&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="541e98fb2dce535c7b2da83f12b31189d20f638f" translate="yes" xml:space="preserve">
          <source>Efficient Object Localization Using Convolutional Networks</source>
          <target state="translated">컨볼 루션 네트워크를 사용한 효율적인 객체 현지화</target>
        </trans-unit>
        <trans-unit id="d6abc47afa812ef58db279f94c1c36828411a382" translate="yes" xml:space="preserve">
          <source>EfficientNet models for Keras.</source>
          <target state="translated">Keras 용 EfficientNet 모델.</target>
        </trans-unit>
        <trans-unit id="a05b9e141fa80e412892c6cd14bcda5f86d6b8da" translate="yes" xml:space="preserve">
          <source>Efficiently get the [batch] diagonal part of this operator.</source>
          <target state="translated">이 연산자의 [배치] 대각선 부분을 효율적으로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="13124d2b4da61f7aa5ea141ded16fbed7f0f6d86" translate="yes" xml:space="preserve">
          <source>Eig</source>
          <target state="translated">Eig</target>
        </trans-unit>
        <trans-unit id="c8ec125266deeea7c4f953a5aa6fdd84d6f82aa9" translate="yes" xml:space="preserve">
          <source>Eigenvalues. Shape is &lt;code&gt;[..., N]&lt;/code&gt;. Sorted in non-decreasing order.</source>
          <target state="translated">고유 값. 모양은 &lt;code&gt;[..., N]&lt;/code&gt; 입니다. 감소하지 않는 순서로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="9a1a5ed6683b9d4dd60c31701c552c42328d36f7" translate="yes" xml:space="preserve">
          <source>Eigenvalues. Shape is &lt;code&gt;[..., N]&lt;/code&gt;. The vector &lt;code&gt;e[..., :]&lt;/code&gt; contains the &lt;code&gt;N&lt;/code&gt; eigenvalues of &lt;code&gt;tensor[..., :, :]&lt;/code&gt;.</source>
          <target state="translated">고유 값. 모양은 &lt;code&gt;[..., N]&lt;/code&gt; 입니다. 벡터 &lt;code&gt;e[..., :]&lt;/code&gt; 에는 &lt;code&gt;tensor[..., :, :]&lt;/code&gt; 의 &lt;code&gt;N&lt;/code&gt; 개의 고유 값이 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="d25b857ec8868262c6fbadab11ce9b1e7c009be8" translate="yes" xml:space="preserve">
          <source>Eigenvectors. Shape is &lt;code&gt;[..., N, N]&lt;/code&gt;. The columns of the inner most matrices contain eigenvectors of the corresponding matrices in &lt;code&gt;tensor&lt;/code&gt;</source>
          <target state="translated">고유 벡터. 모양은 &lt;code&gt;[..., N, N]&lt;/code&gt; 입니다. 가장 안쪽 행렬의 열에는 &lt;code&gt;tensor&lt;/code&gt; 에있는 해당 행렬의 고유 벡터가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="9e7269d88813a122dd6b4c8836b591f55f6ef940" translate="yes" xml:space="preserve">
          <source>Einsum</source>
          <target state="translated">Einsum</target>
        </trans-unit>
        <trans-unit id="219d9a97a56bfa83e87ec96f25c1896bc4e10be9" translate="yes" xml:space="preserve">
          <source>Einsum allows defining Tensors by defining their element-wise computation. This computation is defined by &lt;code&gt;equation&lt;/code&gt;, a shorthand form based on Einstein summation. As an example, consider multiplying two matrices A and B to form a matrix C. The elements of C are given by:</source>
          <target state="translated">Einsum은 요소 별 계산을 정의하여 Tensor를 정의 할 수 있습니다. 이 계산은 Einstein 합계를 기반으로하는 축약 형인 &lt;code&gt;equation&lt;/code&gt; 으로 정의됩니다 . 예를 들어, 두 개의 행렬 A와 B를 곱하여 행렬 C를 형성해보십시오. C의 요소는 다음과 같이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="6332fbc7665932299c4f65efff98735e87f37759" translate="yes" xml:space="preserve">
          <source>Either &quot;inferred&quot; (labels are generated from the directory structure), or a list/tuple of integer labels of the same size as the number of image files found in the directory. Labels should be sorted according to the alphanumeric order of the image file paths (obtained via &lt;code&gt;os.walk(directory)&lt;/code&gt; in Python).</source>
          <target state="translated">&quot;추론 된&quot;(디렉토리 구조에서 레이블이 생성됨) 또는 디렉토리에있는 이미지 파일 수와 동일한 크기의 정수 레이블 목록 / 튜플입니다. 라벨은 이미지 파일 경로의 영숫자 순서에 따라 정렬되어야합니다 &lt;code&gt;os.walk(directory)&lt;/code&gt; Python의 os.walk (directory) 를 통해 얻음 ).</target>
        </trans-unit>
        <trans-unit id="3e692a1b7521cf4da8b4b5796e22fe60b90963fd" translate="yes" xml:space="preserve">
          <source>Either &quot;inferred&quot; (labels are generated from the directory structure), or a list/tuple of integer labels of the same size as the number of text files found in the directory. Labels should be sorted according to the alphanumeric order of the text file paths (obtained via &lt;code&gt;os.walk(directory)&lt;/code&gt; in Python).</source>
          <target state="translated">&quot;추론 된&quot;(디렉토리 구조에서 레이블이 생성됨) 또는 디렉토리에서 찾은 텍스트 파일 수와 동일한 크기의 정수 레이블 목록 / 튜플입니다. 레이블은 텍스트 파일 경로의 영숫자 순서에 따라 정렬해야합니다 &lt;code&gt;os.walk(directory)&lt;/code&gt; Python의 os.walk (directory) 를 통해 얻음 ).</target>
        </trans-unit>
        <trans-unit id="5aaec3c8b49c5745db2d6043e40b48bc9c18bdeb" translate="yes" xml:space="preserve">
          <source>Either 'tf' or 'h5', indicating whether to save the model to Tensorflow SavedModel or HDF5. Defaults to 'tf' in TF 2.X, and 'h5' in TF 1.X.</source>
          <target state="translated">모델을 Tensorflow SavedModel 또는 HDF5에 저장할지 여부를 나타내는 'tf'또는 'h5'입니다. 기본값은 TF 2.X에서 'tf', TF 1.X에서 'h5'입니다.</target>
        </trans-unit>
        <trans-unit id="4dd4ca6670b03a9bfab2e16a5fc8a8e3f5ffde0e" translate="yes" xml:space="preserve">
          <source>Either 'tf' or 'h5'. A &lt;code&gt;filepath&lt;/code&gt; ending in '.h5' or '.keras' will default to HDF5 if &lt;code&gt;save_format&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;. Otherwise &lt;code&gt;None&lt;/code&gt; defaults to 'tf'.</source>
          <target state="translated">'tf'또는 'h5'. &lt;code&gt;filepath&lt;/code&gt; 가 '.h5'또는 '.keras'로 끝나는은 HDF5로 설정됩니다 &lt;code&gt;save_format&lt;/code&gt; 가 없습니다 &lt;code&gt;None&lt;/code&gt; . 그렇지 않으면 &lt;code&gt;None&lt;/code&gt; 기본값은 'tf'입니다.</target>
        </trans-unit>
        <trans-unit id="12d062d930d0d4de07457feda8bc0831bc6e5596" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;'tf'&lt;/code&gt; or &lt;code&gt;'h5'&lt;/code&gt;, indicating whether to save the model to Tensorflow SavedModel or HDF5. Defaults to 'tf' in TF 2.X, and 'h5' in TF 1.X.</source>
          <target state="translated">어느 &lt;code&gt;'tf'&lt;/code&gt; 또는 &lt;code&gt;'h5'&lt;/code&gt; Tensorflow SavedModel 또는 HDF5에 모델을 저장할지 여부를 나타냅니다. 기본값은 TF 2.X에서 'tf', TF 1.X에서 'h5'입니다.</target>
        </trans-unit>
        <trans-unit id="0d76697506e42ec307d4529322ddbe19f22d213c" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;None&lt;/code&gt; (default to original size) or tuple of ints &lt;code&gt;(img_height, img_width)&lt;/code&gt;.</source>
          <target state="translated">어느 &lt;code&gt;None&lt;/code&gt; int 치의 (원래 크기로 기본값) 또는 튜플 &lt;code&gt;(img_height, img_width)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ffafa3d0304f38e47fbf37a645ad9ccf6604e90" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;alt&lt;/code&gt; based on &lt;code&gt;K.learning_phase&lt;/code&gt;.</source>
          <target state="translated">어느 &lt;code&gt;x&lt;/code&gt; 또는 &lt;code&gt;alt&lt;/code&gt; 기반으로 &lt;code&gt;K.learning_phase&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e5dbc63f9b3142dc5475c5c804320a7f9337ebb" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;alt&lt;/code&gt; based on the &lt;code&gt;training&lt;/code&gt; flag. the &lt;code&gt;training&lt;/code&gt; flag defaults to &lt;code&gt;K.learning_phase()&lt;/code&gt;.</source>
          <target state="translated">어느 &lt;code&gt;x&lt;/code&gt; 또는 &lt;code&gt;alt&lt;/code&gt; 에 기초 &lt;code&gt;training&lt;/code&gt; 플래그. &lt;code&gt;training&lt;/code&gt; 에 플래그 기본값 &lt;code&gt;K.learning_phase()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bbe1ca5362ad2a08c3954b55d07cd568f8d5058f" translate="yes" xml:space="preserve">
          <source>Either None (indicating no masking) or a callable with the same signature as the &lt;code&gt;compute_mask&lt;/code&gt; layer method, or a tensor that will be returned as output mask regardless of what the input is.</source>
          <target state="translated">없음 (마스킹 없음을 나타냄) 또는 다음과 같은 서명을 가진 콜 러블 &lt;code&gt;compute_mask&lt;/code&gt; 레이어 메소드 러블 또는 입력이 무엇인지에 관계없이 출력 마스크로 반환 될 텐서입니다.</target>
        </trans-unit>
        <trans-unit id="5df1b219e2ba52e54c743655b14e433cb2458129" translate="yes" xml:space="preserve">
          <source>Either a 3-D float Tensor of shape [height, width, depth], or a 4-D Tensor of shape [batch_size, height, width, depth].</source>
          <target state="translated">3-D float Tensor of shape [height, width, depth] 또는 4-D Tensor of shape [batch_size, height, width, depth] 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="380feaa1f505e0addd504a1accfac5dfd33bf8ce" translate="yes" xml:space="preserve">
          <source>Either a &lt;code&gt;Dimension&lt;/code&gt; instance, an integer, or None.</source>
          <target state="translated">어느 &lt;code&gt;Dimension&lt;/code&gt; 예, 정수, 또는 없음.</target>
        </trans-unit>
        <trans-unit id="423c905a5a8c1eace2913afcbcfb0708d77ef8a7" translate="yes" xml:space="preserve">
          <source>Either a Python boolean, or a TensorFlow boolean scalar tensor (e.g. a placeholder). Whether to return the output in training mode (normalized with statistics of the current batch) or in inference mode (normalized with moving statistics). &lt;strong&gt;NOTE&lt;/strong&gt;: make sure to set this parameter correctly, or else your training/inference will not work properly.</source>
          <target state="translated">Python 부울 또는 TensorFlow 부울 스칼라 텐서 (예 : 자리 표시 자)입니다. 학습 모드 (현재 배치의 통계로 정규화 됨) 또는 추론 모드 (이동 통계로 정규화 됨)에서 출력을 반환할지 여부입니다. &lt;strong&gt;노트&lt;/strong&gt; :이 매개 변수를 올바르게 설정해야합니다. 그렇지 않으면 훈련 / 추론이 제대로 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6595d5734cae8b02144503445c30f8dcbbcd46a9" translate="yes" xml:space="preserve">
          <source>Either a bool or a scalar boolean tensor. If False, the caller should skip applying &lt;code&gt;grads&lt;/code&gt; to the variables this step.</source>
          <target state="translated">부울 또는 스칼라 부울 텐서입니다. False 인 경우 호출자는 이 단계에서 변수에 &lt;code&gt;grads&lt;/code&gt; 적용을 건너 뛰어야 합니다.</target>
        </trans-unit>
        <trans-unit id="2edba00896125970f012882b1ce17126dfb9cc31" translate="yes" xml:space="preserve">
          <source>Either a scalar &lt;code&gt;N&lt;/code&gt;, or a list or an &lt;code&gt;int32&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; of shape [2, k]. If axes is a scalar, sum over the last N axes of a and the first N axes of b in order. If axes is a list or &lt;code&gt;Tensor&lt;/code&gt; the first and second row contain the set of unique integers specifying axes along which the contraction is computed, for &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, respectively. The number of axes for &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; must be equal. If &lt;code&gt;axes=0&lt;/code&gt;, computes the outer product between &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">스칼라 &lt;code&gt;N&lt;/code&gt; , 목록 또는 &lt;code&gt;int32&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; of shape [2, k]. axes가 스칼라 인 경우 a의 마지막 N 축과 b의 처음 N 축을 순서대로 더합니다. axes가 목록이거나 &lt;code&gt;Tensor&lt;/code&gt; 인 경우 첫 번째 및 두 번째 행에는 각각 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 에 대해 수축이 계산되는 축을 지정하는 고유 한 정수 집합이 포함 됩니다. &lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 의 축 수가 같아야합니다. 경우 &lt;code&gt;axes=0&lt;/code&gt; 사이의 외적을 계산 및 &lt;code&gt;b&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da4db703c5115c54df4b0b6654ecde498f48b471" translate="yes" xml:space="preserve">
          <source>Either a single value if &lt;code&gt;fetches&lt;/code&gt; is a single graph element, or a list of values if &lt;code&gt;fetches&lt;/code&gt; is a list, or a dictionary with the same keys as &lt;code&gt;fetches&lt;/code&gt; if that is a dictionary (described above). Order in which &lt;code&gt;fetches&lt;/code&gt; operations are evaluated inside the call is undefined.</source>
          <target state="translated">만약 어느 하나의 값을 &lt;code&gt;fetches&lt;/code&gt; 하는 경우 하나의 그래프 요소 또는 값의 목록 &lt;code&gt;fetches&lt;/code&gt; 목록 또는 동일한 키이다 사전 &lt;code&gt;fetches&lt;/code&gt; 즉 (전술) 사전 경우. &lt;code&gt;fetches&lt;/code&gt; 조작이 호출 내에서 평가 되는 순서 는 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fcf124e1ec0a0a15f09c663dd04829849e8eb3fc" translate="yes" xml:space="preserve">
          <source>Either a single value if &lt;code&gt;fetches&lt;/code&gt; is a single graph element, or a list of values if &lt;code&gt;fetches&lt;/code&gt; is a list, or a dictionary with the same keys as &lt;code&gt;fetches&lt;/code&gt; if that is a dictionary (see documentation for &lt;code&gt;run&lt;/code&gt;).</source>
          <target state="translated">어느 경우 단일 값 &lt;code&gt;fetches&lt;/code&gt; 경우 단일 그래프 요소 또는 값의 목록 &lt;code&gt;fetches&lt;/code&gt; 목록 또는 동일한 키 사전이다 &lt;code&gt;fetches&lt;/code&gt; 그 사전은 (에 대한 문서 참조 경우 &lt;code&gt;run&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3eb23dd0ccf4cd4670feebda643a09647355a941" translate="yes" xml:space="preserve">
          <source>Either an int/float, the string &lt;code&gt;&quot;dynamic&quot;&lt;/code&gt;, or an instance of a &lt;a href=&quot;../../../../mixed_precision/experimental/lossscale&quot;&gt;&lt;code&gt;tf.mixed_precision.experimental.LossScale&lt;/code&gt;&lt;/a&gt;. The loss scale to use. It is recommended to keep this as its default value of &lt;code&gt;&quot;dynamic&quot;&lt;/code&gt;, which will adjust the scaling automatically to prevent &lt;code&gt;Inf&lt;/code&gt; or &lt;code&gt;NaN&lt;/code&gt; values.</source>
          <target state="translated">int / float, 문자열 &lt;code&gt;&quot;dynamic&quot;&lt;/code&gt; 또는 &lt;a href=&quot;../../../../mixed_precision/experimental/lossscale&quot;&gt; &lt;code&gt;tf.mixed_precision.experimental.LossScale&lt;/code&gt; &lt;/a&gt; 의 인스턴스입니다 . 사용할 손실 규모입니다. 이 값을 기본값 인 &lt;code&gt;&quot;dynamic&quot;&lt;/code&gt; 으로 유지하는 것이 좋습니다. 그러면 자동으로 배율이 조정되어 &lt;code&gt;Inf&lt;/code&gt; 또는 &lt;code&gt;NaN&lt;/code&gt; 값이 방지 됩니다.</target>
        </trans-unit>
        <trans-unit id="90b584bc32c186044680b73b62928607b6633394" translate="yes" xml:space="preserve">
          <source>Either an int/float, the string &lt;code&gt;&quot;dynamic&quot;&lt;/code&gt;, or an instance of a &lt;a href=&quot;../../mixed_precision/experimental/lossscale&quot;&gt;&lt;code&gt;tf.mixed_precision.experimental.LossScale&lt;/code&gt;&lt;/a&gt;. The loss scale to use. It is recommended to keep this as its default value of &lt;code&gt;&quot;dynamic&quot;&lt;/code&gt;, which will adjust the scaling automatically to prevent &lt;code&gt;Inf&lt;/code&gt; or &lt;code&gt;NaN&lt;/code&gt; values.</source>
          <target state="translated">int / float, 문자열 &lt;code&gt;&quot;dynamic&quot;&lt;/code&gt; 또는 &lt;a href=&quot;../../mixed_precision/experimental/lossscale&quot;&gt; &lt;code&gt;tf.mixed_precision.experimental.LossScale&lt;/code&gt; &lt;/a&gt; 의 인스턴스입니다 . 사용할 손실 규모입니다. 이 값을 기본값 인 &lt;code&gt;&quot;dynamic&quot;&lt;/code&gt; 으로 유지하는 것이 좋습니다. 그러면 자동으로 배율이 조정되어 &lt;code&gt;Inf&lt;/code&gt; 또는 &lt;code&gt;NaN&lt;/code&gt; 값이 방지 됩니다.</target>
        </trans-unit>
        <trans-unit id="b2b2a5363bfd28450b1ee6f5c4e71f38dfb994ca" translate="yes" xml:space="preserve">
          <source>Either an integer indicating the number of splits along &lt;code&gt;axis&lt;/code&gt; or a 1-D integer &lt;code&gt;Tensor&lt;/code&gt; or Python list containing the sizes of each output tensor along &lt;code&gt;axis&lt;/code&gt;. If a scalar, then it must evenly divide &lt;code&gt;value.shape[axis]&lt;/code&gt;; otherwise the sum of sizes along the split axis must match that of the &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;axis&lt;/code&gt; 따라 분할 수를 나타내는 정수 또는 &lt;code&gt;axis&lt;/code&gt; 따라 각 출력 텐서의 크기를 포함 하는 1 차원 정수 &lt;code&gt;Tensor&lt;/code&gt; 또는 Python 목록 입니다. 스칼라 인 경우 균등하게 나누어야합니다. &lt;code&gt;value.shape[axis]&lt;/code&gt; ; 그렇지 않으면 분할 축 방향의 크기의 합은의 일치해야합니다 &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="69dd63725103a91eac4d917b615e68ab3beaa44b" translate="yes" xml:space="preserve">
          <source>Either assigns values immediately if variables to restore have been created already, or defers restoration until the variables are created. Dependencies added after this call will be matched if they have a corresponding object in the checkpoint (the restore request will queue in any trackable object waiting for the expected dependency to be added).</source>
          <target state="translated">복원 할 변수가 이미 작성된 경우 값을 즉시 지정하거나 변수가 작성 될 때까지 복원을 연기합니다. 이 호출 후 추가 된 종속성은 검사 점에 해당 개체가있는 경우 일치합니다 (복원 요청은 예상되는 종속성이 추가되기를 기다리는 추적 가능한 개체에서 대기합니다).</target>
        </trans-unit>
        <trans-unit id="448b20303154a96259807e9b8b83147054894fb5" translate="yes" xml:space="preserve">
          <source>Either classes or scores or both must be set.</source>
          <target state="translated">수업 또는 점수 또는 둘 다 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="8f347750abdcdb3827d9ee5d868094a42b375fe5" translate="yes" xml:space="preserve">
          <source>Either matrix can be transposed or adjointed (conjugated and transposed) on the fly by setting one of the corresponding flag to &lt;code&gt;True&lt;/code&gt;. These are &lt;code&gt;False&lt;/code&gt; by default.</source>
          <target state="translated">해당 플래그 중 하나를 &lt;code&gt;True&lt;/code&gt; 로 설정하여 매트릭스를 즉시 조바꿈 (접합 및 조옮김) 할 수 있습니다 . 이들은 &lt;code&gt;False&lt;/code&gt; 기본적으로.</target>
        </trans-unit>
        <trans-unit id="53797e79edd27930af5859b922a6b2a7b5bdf1a6" translate="yes" xml:space="preserve">
          <source>Either saves in HDF5 or in TensorFlow format based on the &lt;code&gt;save_format&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;save_format&lt;/code&gt; 인수를 기반으로 HDF5 또는 TensorFlow 형식으로 저장 합니다.</target>
        </trans-unit>
        <trans-unit id="eb6197851e946ffe9ed420c4ae011f04cbcdc10a" translate="yes" xml:space="preserve">
          <source>Either the &lt;code&gt;string&lt;/code&gt;&quot;SAME&quot;&lt;code&gt;or&lt;/code&gt;&quot;VALID&quot;&lt;code&gt;indicating the type of padding algorithm to use, or a list indicating the explicit paddings at the start and end of each dimension. When explicit padding is used and data_format is&lt;/code&gt;&quot;NHWC&quot;&lt;code&gt;, this should be in the form&lt;/code&gt;[[0, 0], [pad_top, pad_bottom], [pad_left, pad_right], [0, 0]]&lt;code&gt;. When explicit padding used and data_format is&lt;/code&gt;&quot;NCHW&quot;&lt;code&gt;, this should be in the form&lt;/code&gt;[[0, 0], [0, 0], [pad_top, pad_bottom], [pad_left, pad_right]]&lt;code&gt;. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;use_cudnn_on_gpu&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; An optional&lt;/code&gt;bool&lt;code&gt;. Defaults to&lt;/code&gt;True&lt;code&gt;. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;data_format&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; An optional&lt;/code&gt;string&lt;code&gt;from:&lt;/code&gt;&quot;NHWC&quot;, &quot;NCHW&quot;&lt;code&gt;. Defaults to&lt;/code&gt;&quot;NHWC&quot;&lt;code&gt;. Specify the data format of the input and output data. With the default format &quot;NHWC&quot;, the data is stored in the order of: [batch, in_height, in_width, in_channels]. Alternatively, the format could be &quot;NCHW&quot;, the data storage order of: [batch, in_channels, in_height, in_width]. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;dilations&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; An optional list of&lt;/code&gt;ints&lt;code&gt;. Defaults to&lt;/code&gt;[1, 1, 1, 1]&lt;code&gt;. 1-D tensor of length 4. The dilation factor for each dimension of&lt;/code&gt;input&lt;code&gt;. If set to k &amp;gt; 1, there will be k-1 skipped cells between each filter element on that dimension. The dimension order is determined by the value of&lt;/code&gt;data_format&lt;code&gt;, see above for details. Dilations in the batch and depth dimensions must be 1. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;name&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; A name for the operation (optional). &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;filters`</source>
          <target state="translated">어느 &lt;code&gt;string&lt;/code&gt; &quot;SAME&quot; &lt;code&gt;or&lt;/code&gt; &quot;VALID&quot; &lt;code&gt;indicating the type of padding algorithm to use, or a list indicating the explicit paddings at the start and end of each dimension. When explicit padding is used and data_format is&lt;/code&gt; &quot;NHWC&quot;인 &lt;code&gt;, this should be in the form&lt;/code&gt; [[0, 0], [pad_top, pad_bottom], [pad_left, pad_right], [0, 0]] 형식이어야 &lt;code&gt;. When explicit padding used and data_format is&lt;/code&gt; &quot;NCHW&quot;인 &lt;code&gt;, this should be in the form&lt;/code&gt; [[0, 0], [0, 0], [pad_top, pad_bottom], [pad_left, pad_right]] 형식이어야 &lt;code&gt;. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt; use_cudnn_on_gpu &lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; An optional&lt;/code&gt; bool &lt;code&gt;. Defaults to&lt;/code&gt; True &lt;code&gt;. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt; 데이터 _ 형식 &lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; An optional&lt;/code&gt; 문자열 &lt;code&gt;from:&lt;/code&gt; &quot;NHWC&quot;, &quot;NCHW&quot; &lt;code&gt;. Defaults to&lt;/code&gt; &quot;NHWC&quot; &lt;code&gt;. Specify the data format of the input and output data. With the default format &quot;NHWC&quot;, the data is stored in the order of: [batch, in_height, in_width, in_channels]. Alternatively, the format could be &quot;NCHW&quot;, the data storage order of: [batch, in_channels, in_height, in_width]. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt; 확장 &lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; An optional list of&lt;/code&gt; int 목록입니다 &lt;code&gt;. Defaults to&lt;/code&gt; [1, 1, 1, 1] &lt;code&gt;. 1-D tensor of length 4. The dilation factor for each dimension of&lt;/code&gt; 입력의 각 차원에 대한 팽창 계수 &lt;code&gt;. If set to k &amp;gt; 1, there will be k-1 skipped cells between each filter element on that dimension. The dimension order is determined by the value of&lt;/code&gt; data_format &lt;code&gt;, see above for details. Dilations in the batch and depth dimensions must be 1. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt; &amp;lt;td&amp;gt; 이름 &lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; A name for the operation (optional). &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt; 필터`</target>
        </trans-unit>
        <trans-unit id="4e846e78ce644e29dc7af4f11843fd0355e728b4" translate="yes" xml:space="preserve">
          <source>Either the &lt;code&gt;string&lt;/code&gt;&quot;SAME&quot;&lt;code&gt;or&lt;/code&gt;&quot;VALID&quot;&lt;code&gt;indicating the type of padding algorithm to use, or a list indicating the explicit paddings at the start and end of each dimension. When explicit padding is used and data_format is&lt;/code&gt;&quot;NHWC&quot;&lt;code&gt;, this should be in the form&lt;/code&gt;[[0, 0], [pad_top, pad_bottom], [pad_left, pad_right], [0, 0]]&lt;code&gt;. When explicit padding used and data_format is&lt;/code&gt;&quot;NCHW&quot;&lt;code&gt;, this should be in the form&lt;/code&gt;[[0, 0], [0, 0], [pad_top, pad_bottom], [pad_left, pad_right]]&lt;code&gt;. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;use_cudnn_on_gpu&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; An optional&lt;/code&gt;bool&lt;code&gt;. Defaults to&lt;/code&gt;True&lt;code&gt;. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;data_format&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; An optional&lt;/code&gt;string&lt;code&gt;from:&lt;/code&gt;&quot;NHWC&quot;, &quot;NCHW&quot;&lt;code&gt;. Defaults to&lt;/code&gt;&quot;NHWC&quot;&lt;code&gt;. Specify the data format of the input and output data. With the default format &quot;NHWC&quot;, the data is stored in the order of: [batch, in_height, in_width, in_channels]. Alternatively, the format could be &quot;NCHW&quot;, the data storage order of: [batch, in_channels, in_height, in_width]. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;dilations&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; An optional list of&lt;/code&gt;ints&lt;code&gt;. Defaults to&lt;/code&gt;[1, 1, 1, 1]&lt;code&gt;. 1-D tensor of length 4. The dilation factor for each dimension of&lt;/code&gt;input&lt;code&gt;. If set to k &amp;gt; 1, there will be k-1 skipped cells between each filter element on that dimension. The dimension order is determined by the value of&lt;/code&gt;data_format&lt;code&gt;, see above for details. Dilations in the batch and depth dimensions must be 1. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;name`</source>
          <target state="translated">어느 &lt;code&gt;string&lt;/code&gt; &quot;SAME&quot; &lt;code&gt;or&lt;/code&gt; &quot;VALID&quot; &lt;code&gt;indicating the type of padding algorithm to use, or a list indicating the explicit paddings at the start and end of each dimension. When explicit padding is used and data_format is&lt;/code&gt; &quot;NHWC&quot;인 &lt;code&gt;, this should be in the form&lt;/code&gt; [[0, 0], [pad_top, pad_bottom], [pad_left, pad_right], [0, 0]] 형식이어야 &lt;code&gt;. When explicit padding used and data_format is&lt;/code&gt; &quot;NCHW&quot;인 &lt;code&gt;, this should be in the form&lt;/code&gt; [[0, 0], [0, 0], [pad_top, pad_bottom], [pad_left, pad_right]] 형식이어야 &lt;code&gt;. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt; use_cudnn_on_gpu &lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; An optional&lt;/code&gt; bool &lt;code&gt;. Defaults to&lt;/code&gt; True &lt;code&gt;. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt; 데이터 _ 형식 &lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; An optional&lt;/code&gt; 문자열 &lt;code&gt;from:&lt;/code&gt; &quot;NHWC&quot;, &quot;NCHW&quot; &lt;code&gt;. Defaults to&lt;/code&gt; &quot;NHWC&quot; &lt;code&gt;. Specify the data format of the input and output data. With the default format &quot;NHWC&quot;, the data is stored in the order of: [batch, in_height, in_width, in_channels]. Alternatively, the format could be &quot;NCHW&quot;, the data storage order of: [batch, in_channels, in_height, in_width]. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt; 확장 &lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; An optional list of&lt;/code&gt; int 목록입니다 &lt;code&gt;. Defaults to&lt;/code&gt; [1, 1, 1, 1] &lt;code&gt;. 1-D tensor of length 4. The dilation factor for each dimension of&lt;/code&gt; 입력의 각 차원에 대한 팽창 계수 &lt;code&gt;. If set to k &amp;gt; 1, there will be k-1 skipped cells between each filter element on that dimension. The dimension order is determined by the value of&lt;/code&gt; data_format &lt;code&gt;, see above for details. Dilations in the batch and depth dimensions must be 1. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt; &amp;lt;td&amp;gt; 이름 `</target>
        </trans-unit>
        <trans-unit id="4638a2d653dd4eb92ead8e82c012ac8dda60e9aa" translate="yes" xml:space="preserve">
          <source>Either the &lt;code&gt;string&lt;/code&gt;&lt;code&gt;&quot;SAME&quot;&lt;/code&gt; or &lt;code&gt;&quot;VALID&quot;&lt;/code&gt; indicating the type of padding algorithm to use, or a list indicating the explicit paddings at the start and end of each dimension. When explicit padding is used and data_format is &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt;, this should be in the form &lt;code&gt;[[0, 0], [pad_top, pad_bottom], [pad_left, pad_right], [0, 0]]&lt;/code&gt;. When explicit padding used and data_format is &lt;code&gt;&quot;NCHW&quot;&lt;/code&gt;, this should be in the form &lt;code&gt;[[0, 0], [0, 0], [pad_top, pad_bottom], [pad_left, pad_right]]&lt;/code&gt;.</source>
          <target state="translated">어느 &lt;code&gt;string&lt;/code&gt; &lt;code&gt;&quot;SAME&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;VALID&quot;&lt;/code&gt; 사용에 패딩 알고리즘의 유형을 표시하거나, 각 차원의 시작과 끝에서 명시 적으로 패딩을 나타내는 목록입니다. 명시 적 패딩이 사용되고 data_format이 &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt; 인 경우 &lt;code&gt;[[0, 0], [pad_top, pad_bottom], [pad_left, pad_right], [0, 0]]&lt;/code&gt; 합니다. 명시 적 패딩이 사용되고 data_format이 &lt;code&gt;&quot;NCHW&quot;&lt;/code&gt; 인 경우 &lt;code&gt;[[0, 0], [0, 0], [pad_top, pad_bottom], [pad_left, pad_right]]&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="98017d368e570d514552b910ff1bd1af7ae428c5" translate="yes" xml:space="preserve">
          <source>Element-wise absolute value.</source>
          <target state="translated">요소 별 절대 값.</target>
        </trans-unit>
        <trans-unit id="78020e1b843ad8d8b0d46f516b9cac5e7dc65b9e" translate="yes" xml:space="preserve">
          <source>Element-wise equality between two tensors.</source>
          <target state="translated">두 텐서 사이의 요소 별 평등.</target>
        </trans-unit>
        <trans-unit id="ca64c7c534dabf70dfed1eb6dc70b44fa38b0ccd" translate="yes" xml:space="preserve">
          <source>Element-wise exponential.</source>
          <target state="translated">요소 별 지수.</target>
        </trans-unit>
        <trans-unit id="213307a14887e855cc376ef29b1c517922979973" translate="yes" xml:space="preserve">
          <source>Element-wise exponentiation.</source>
          <target state="translated">요소 별 지수.</target>
        </trans-unit>
        <trans-unit id="2264a97a4de7acba1b83aee85d16a9f837ae5ff9" translate="yes" xml:space="preserve">
          <source>Element-wise inequality between two tensors.</source>
          <target state="translated">두 텐서 사이의 요소 별 불평등.</target>
        </trans-unit>
        <trans-unit id="9ee943cf4b9c4af0ae00101b435fa732547c6a20" translate="yes" xml:space="preserve">
          <source>Element-wise log.</source>
          <target state="translated">요소 별 로그.</target>
        </trans-unit>
        <trans-unit id="89a4d2c72a30a07811d44ea78fbc021903cf4719" translate="yes" xml:space="preserve">
          <source>Element-wise maximum of two tensors.</source>
          <target state="translated">요소 별 최대 2 개의 텐서.</target>
        </trans-unit>
        <trans-unit id="792e29246325fc012d7c71ccbfcbec06fc46c4b7" translate="yes" xml:space="preserve">
          <source>Element-wise minimum of two tensors.</source>
          <target state="translated">요소 텐서 최소 2 개의 텐서.</target>
        </trans-unit>
        <trans-unit id="d2e07e1dec77fee8b77d01ca17740a2266df70d5" translate="yes" xml:space="preserve">
          <source>Element-wise multiplication of a sparse matrix with a dense tensor.</source>
          <target state="translated">조밀 한 텐서를 사용하는 희소 행렬의 요소 별 곱셈입니다.</target>
        </trans-unit>
        <trans-unit id="abf3909281d01b6aeb4e0d7519f5b59953f327cd" translate="yes" xml:space="preserve">
          <source>Element-wise rounding to the closest integer.</source>
          <target state="translated">가장 가까운 정수로 요소 별 반올림.</target>
        </trans-unit>
        <trans-unit id="61e18f83bff69cdbde9a9f5f55ae3a649e9b0c60" translate="yes" xml:space="preserve">
          <source>Element-wise sigmoid.</source>
          <target state="translated">요소 별 S 자형.</target>
        </trans-unit>
        <trans-unit id="070f468605c58753ce57d39af8312f11d94c4af5" translate="yes" xml:space="preserve">
          <source>Element-wise sign.</source>
          <target state="translated">요소 별 기호.</target>
        </trans-unit>
        <trans-unit id="56f8da5e2231c69a7a51b7abf0358aeb9ae42429" translate="yes" xml:space="preserve">
          <source>Element-wise square root.</source>
          <target state="translated">요소 별 제곱근.</target>
        </trans-unit>
        <trans-unit id="dd8913b917191e051975a666af524532e336480e" translate="yes" xml:space="preserve">
          <source>Element-wise square.</source>
          <target state="translated">요소 별 사각형.</target>
        </trans-unit>
        <trans-unit id="4a6ac47e9c2496c554ade7ff071a81074d224a3a" translate="yes" xml:space="preserve">
          <source>Element-wise tanh.</source>
          <target state="translated">요소 별 tanh.</target>
        </trans-unit>
        <trans-unit id="7d6405e81daea2ee6eabc8745d4a27bf65b6948c" translate="yes" xml:space="preserve">
          <source>Element-wise truth value of (x &amp;gt; y).</source>
          <target state="translated">(x&amp;gt; y)의 요소 별 진리 값.</target>
        </trans-unit>
        <trans-unit id="29b77c6f4cfd5cd17ea8d6410b420dc1c621e7c2" translate="yes" xml:space="preserve">
          <source>Element-wise truth value of (x &amp;gt;= y).</source>
          <target state="translated">(x&amp;gt; = y)의 요소 별 진리 값.</target>
        </trans-unit>
        <trans-unit id="b0b69f9a42693e2346143d414a3e98fe0f8a3639" translate="yes" xml:space="preserve">
          <source>Element-wise truth value of (x &amp;lt; y).</source>
          <target state="translated">(x &amp;lt;y)의 요소 별 진리 값.</target>
        </trans-unit>
        <trans-unit id="2062fabe4ac424967ff0d008cda56315cc93dfab" translate="yes" xml:space="preserve">
          <source>Element-wise truth value of (x &amp;lt;= y).</source>
          <target state="translated">(x &amp;lt;= y)의 요소 별 진리 값.</target>
        </trans-unit>
        <trans-unit id="e8c81beff185a49555c7d38080f1307fa0e996f4" translate="yes" xml:space="preserve">
          <source>Element-wise value clipping.</source>
          <target state="translated">요소 별 가치 클리핑.</target>
        </trans-unit>
        <trans-unit id="b961a210f2d79245a9d3af5d6f47fd0a5b49e3c6" translate="yes" xml:space="preserve">
          <source>Elements can be nested structures of tuples, named tuples, and dictionaries. Element components can be of any type representable by &lt;a href=&quot;../typespec&quot;&gt;&lt;code&gt;tf.TypeSpec&lt;/code&gt;&lt;/a&gt;, including &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../sparse/sparsetensor&quot;&gt;&lt;code&gt;tf.SparseTensor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../raggedtensor&quot;&gt;&lt;code&gt;tf.RaggedTensor&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../tensorarray&quot;&gt;&lt;code&gt;tf.TensorArray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">요소는 튜플, 명명 된 튜플 및 사전의 중첩 구조 일 수 있습니다. 요소의 구성 요소에 의한 모든 종류의 표현 가능한이 될 수 &lt;a href=&quot;../typespec&quot;&gt; &lt;code&gt;tf.TypeSpec&lt;/code&gt; &lt;/a&gt; 포함 &lt;a href=&quot;../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../sparse/sparsetensor&quot;&gt; &lt;code&gt;tf.SparseTensor&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../raggedtensor&quot;&gt; &lt;code&gt;tf.RaggedTensor&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../tensorarray&quot;&gt; &lt;code&gt;tf.TensorArray&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="94931272648c62fb3ad1e0aa8316b17376df627c" translate="yes" xml:space="preserve">
          <source>Elements can be nested structures of tuples, named tuples, and dictionaries. Note that Python lists are &lt;em&gt;not&lt;/em&gt; treated as nested structures of components. Instead, lists are converted to tensors and treated as components. For example, the element &lt;code&gt;(1, [1, 2, 3])&lt;/code&gt; has only two components; the tensor &lt;code&gt;1&lt;/code&gt; and the tensor &lt;code&gt;[1, 2, 3]&lt;/code&gt;. Element components can be of any type representable by &lt;a href=&quot;../typespec&quot;&gt;&lt;code&gt;tf.TypeSpec&lt;/code&gt;&lt;/a&gt;, including &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../sparse/sparsetensor&quot;&gt;&lt;code&gt;tf.sparse.SparseTensor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../raggedtensor&quot;&gt;&lt;code&gt;tf.RaggedTensor&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../tensorarray&quot;&gt;&lt;code&gt;tf.TensorArray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">요소는 튜플, 명명 된 튜플 및 사전의 중첩 구조 일 수 있습니다. Python 목록은 구성 요소의 중첩 구조로 취급 &lt;em&gt;되지 않습니다&lt;/em&gt; . 대신 목록은 텐서로 변환되고 구성 요소로 처리됩니다. 예를 들어 &lt;code&gt;(1, [1, 2, 3])&lt;/code&gt; 요소에는 두 개의 구성 요소 만 있습니다. 텐서 &lt;code&gt;1&lt;/code&gt; 및 텐서 &lt;code&gt;[1, 2, 3]&lt;/code&gt; . 요소의 구성 요소에 의한 모든 종류의 표현 가능한이 될 수 &lt;a href=&quot;../typespec&quot;&gt; &lt;code&gt;tf.TypeSpec&lt;/code&gt; &lt;/a&gt; 포함 &lt;a href=&quot;../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../sparse/sparsetensor&quot;&gt; &lt;code&gt;tf.sparse.SparseTensor&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../raggedtensor&quot;&gt; &lt;code&gt;tf.RaggedTensor&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../tensorarray&quot;&gt; &lt;code&gt;tf.TensorArray&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4377ae485d3bfaf8bf271a435b0fad66752fcfce" translate="yes" xml:space="preserve">
          <source>Elements come out of the barrier when they are complete, and in the order in which they were placed into the barrier. The indices output provides information about the batch in which each element was originally inserted into the barrier.</source>
          <target state="translated">요소는 완료되면 장벽에 배치 된 순서대로 장벽에서 나옵니다. 인덱스 출력은 각 요소가 원래 장벽에 삽입 된 배치에 대한 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="837d5bca6a2536af9b3f581528ad4014139ab8ca" translate="yes" xml:space="preserve">
          <source>Elements of &lt;code&gt;x&lt;/code&gt; are compared in row-major order. The tensor &lt;code&gt;[x[0],...]&lt;/code&gt; is non-decreasing if for every adjacent pair we have &lt;code&gt;x[i] &amp;lt;= x[i+1]&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; has less than two elements, it is trivially non-decreasing.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 의 요소는 주요 행 순서로 비교됩니다. 텐서 &lt;code&gt;[x[0],...]&lt;/code&gt; 은 모든 인접한 쌍에 대해 &lt;code&gt;x[i] &amp;lt;= x[i+1]&lt;/code&gt; 경우 감소하지 않습니다 . &lt;code&gt;x&lt;/code&gt; 가 2 개보다 적은 원소를 가지고 있다면 , 그것은 크게 감소하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c61d81f0fbebf9d7141fc0ad59baf078a97c457b" translate="yes" xml:space="preserve">
          <source>Elements of &lt;code&gt;x&lt;/code&gt; are compared in row-major order. The tensor &lt;code&gt;[x[0],...]&lt;/code&gt; is strictly increasing if for every adjacent pair we have &lt;code&gt;x[i] &amp;lt; x[i+1]&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; has less than two elements, it is trivially strictly increasing.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 의 요소는 주요 행 순서로 비교됩니다. 텐서 &lt;code&gt;[x[0],...]&lt;/code&gt; 은 모든 인접한 쌍에 대해 &lt;code&gt;x[i] &amp;lt; x[i+1]&lt;/code&gt; 경우 엄격히 증가합니다 . &lt;code&gt;x&lt;/code&gt; 가 두 개보다 적은 원소를 가지고 있다면 , 그것은 사소하게 엄격하게 증가하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="4dc731347a173d7e073cb0fba2df1b0819210af7" translate="yes" xml:space="preserve">
          <source>Elements of the &lt;code&gt;Dataset&lt;/code&gt; are grouped together by length and then are padded and batched.</source>
          <target state="translated">&lt;code&gt;Dataset&lt;/code&gt; 요소는 길이별로 그룹화 된 다음 채워지고 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="a197c432dad195eda4fde7342eee45a5fcb648a2" translate="yes" xml:space="preserve">
          <source>Elements of the &lt;code&gt;shapes_and_slices&lt;/code&gt; input must either be:</source>
          <target state="translated">&lt;code&gt;shapes_and_slices&lt;/code&gt; 입력의 요소는 다음 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="d1a0623a4155ed9364977209435f1be44fe29103" translate="yes" xml:space="preserve">
          <source>Elementwise computes the bitwise AND of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">Elementwise는 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 의 비트 단위 AND를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="eb969553b4858295e01a3d6f8ad6eaf372be726c" translate="yes" xml:space="preserve">
          <source>Elementwise computes the bitwise OR of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">Elementwise는 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 의 비트 단위 OR을 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="3a05ebe19c26d9b40a955aba0105f5c386a8c09b" translate="yes" xml:space="preserve">
          <source>Elementwise computes the bitwise XOR of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">Elementwise는 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 의 비트 XOR을 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="8565fc2ae8f5566706199d638cf76533351bcc91" translate="yes" xml:space="preserve">
          <source>Elementwise computes the bitwise left-shift of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">Elementwise는 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 의 비트 단위 왼쪽 시프트를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="75c9971bf7398ee8aae281ee6e2b5f6cdd93c860" translate="yes" xml:space="preserve">
          <source>Elementwise computes the bitwise right-shift of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">Elementwise는 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 의 비트 단위 오른쪽 이동을 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="a9c075ef1bb96e78c3aeb788db6fdaa2ad6900d8" translate="yes" xml:space="preserve">
          <source>Else</source>
          <target state="translated">Else</target>
        </trans-unit>
        <trans-unit id="f63b6fda8c1d5fc8c3b067d8b3484c72fd8bde26" translate="yes" xml:space="preserve">
          <source>Else, 4D tensor with shape: &lt;code&gt;(samples, filters, new_rows, new_cols)&lt;/code&gt; if data_format='channels_first' or 4D tensor with shape: &lt;code&gt;(samples, new_rows, new_cols, filters)&lt;/code&gt; if data_format='channels_last'.</source>
          <target state="translated">그렇지 않으면, 모양이있는 4D 텐서 : &lt;code&gt;(samples, filters, new_rows, new_cols)&lt;/code&gt; data_format = 'channels_first'인 경우 또는 모양이있는 4D 텐서 : &lt;code&gt;(samples, new_rows, new_cols, filters)&lt;/code&gt; if data_format = 'channels_last'.</target>
        </trans-unit>
        <trans-unit id="f02ec6df2e4d02d170385ed26ba3d8f8db8b5eb9" translate="yes" xml:space="preserve">
          <source>Else, N-D tensor with shape &lt;code&gt;[batch_size, output_size]&lt;/code&gt;, where &lt;code&gt;output_size&lt;/code&gt; could be a high dimension tensor shape.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;[batch_size, output_size]&lt;/code&gt; 모양의 ND 텐서 ( 여기서 &lt;code&gt;output_size&lt;/code&gt; 는 고차원 텐서 모양 일 수 있음).</target>
        </trans-unit>
        <trans-unit id="08d50cb65d0e77a5bb79701db8ed4980b646ac23" translate="yes" xml:space="preserve">
          <source>Else, we will return the global Keras session assuming it matches the current graph.</source>
          <target state="translated">그렇지 않으면 현재 그래프와 일치한다고 가정하고 전역 Keras 세션을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="de6f454352ca47ec357dabfaa33cd93a1f9ce566" translate="yes" xml:space="preserve">
          <source>Elu</source>
          <target state="translated">Elu</target>
        </trans-unit>
        <trans-unit id="d01bd80879b349683733e5d1ec5baed6c2f291a2" translate="yes" xml:space="preserve">
          <source>EluGrad</source>
          <target state="translated">EluGrad</target>
        </trans-unit>
        <trans-unit id="dbab1f77c2fa1efee02c3a9de683182e574ad133" translate="yes" xml:space="preserve">
          <source>Embedding for a DNN model:</source>
          <target state="translated">DNN 모델의 임베딩 :</target>
        </trans-unit>
        <trans-unit id="5f1914aef63cb18255e0d73bf9dd86ecf6e822ae" translate="yes" xml:space="preserve">
          <source>Emits randomized records.</source>
          <target state="translated">무작위 레코드를 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="3159fe421b3221381b3c778dc1c3c26e4540be37" translate="yes" xml:space="preserve">
          <source>Empty</source>
          <target state="translated">Empty</target>
        </trans-unit>
        <trans-unit id="0df4bd7c35e855099ed1dadafd9aa430275f2289" translate="yes" xml:space="preserve">
          <source>EmptyTensorList</source>
          <target state="translated">EmptyTensorList</target>
        </trans-unit>
        <trans-unit id="eae69d19ffba73c01cbbf7e007672f5917a4e516" translate="yes" xml:space="preserve">
          <source>Enable all features.</source>
          <target state="translated">모든 기능을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="f2fe59ed1244f53116bb5c0e75cfa18eecac587f" translate="yes" xml:space="preserve">
          <source>Enable dumping debugging information from a TensorFlow program.</source>
          <target state="translated">TensorFlow 프로그램에서 디버깅 정보 덤프를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="20a9d31054c9d598ffffccd5a4dbb93e89b63981" translate="yes" xml:space="preserve">
          <source>Enable mixed precision via a graph rewrite.</source>
          <target state="translated">그래프 재 작성을 통해 혼합 정밀도를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="a0bd6180f771c064da1f1a770b7daac29a771883" translate="yes" xml:space="preserve">
          <source>Enable or disable JIT compilation of operators within the scope.</source>
          <target state="translated">범위 내에서 연산자의 JIT 컴파일을 사용하거나 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="222fb4bafa995e3993fcca0f4ff075713e48e674" translate="yes" xml:space="preserve">
          <source>Enable tensor numerics checking in an eager/graph unified fashion.</source>
          <target state="translated">열성적 / 그래프 통합 방식으로 텐서 숫자 검사를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="1540a7c7e147411e5bfea16321035794907e1710" translate="yes" xml:space="preserve">
          <source>Enable the V2 dtype behavior for Keras layers.</source>
          <target state="translated">Keras 레이어에 대해 V2 dtype 동작을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="0a5a474bba7abadff8b42d6aeff482a53678a17c" translate="yes" xml:space="preserve">
          <source>Enable visualizations for TensorBoard.</source>
          <target state="translated">TensorBoard에 대한 시각화를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="11c564b53610a3d8ae88148f0774441fd283eb58" translate="yes" xml:space="preserve">
          <source>Enables / disables eager execution of &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; seager&lt;/a&gt; 실행을 활성화 / 비활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="53cf39d33875070afa7ed0b3695e6633b06a3095" translate="yes" xml:space="preserve">
          <source>Enables / disables eager execution of &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s. (deprecated)</source>
          <target state="translated">&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; 의 eager 실행을 활성화 / 비활성화합니다 . (사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="f1afb1bf35ef313cbb3e295ba11df528f6e82d34" translate="yes" xml:space="preserve">
          <source>Enables TensorFlow 2.x behaviors.</source>
          <target state="translated">TensorFlow 2.x 동작을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="eefb45023037033b3697cb9f9c0b288e668b7b3d" translate="yes" xml:space="preserve">
          <source>Enables eager execution for the lifetime of this program.</source>
          <target state="translated">이 프로그램의 수명 동안 열성적인 실행을 가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="3e0b95f0fa43081f563196966995b24de120f0ba" translate="yes" xml:space="preserve">
          <source>Enables experimental MLIR-Based TensorFlow Compiler Bridge.</source>
          <target state="translated">실험적인 MLIR 기반 TensorFlow 컴파일러 브리지를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="321394eedd961dcd1e7093ef04a11e936e2d3b05" translate="yes" xml:space="preserve">
          <source>Enables experimental MLIR-Based TensorFlow Compiler Optimizations.</source>
          <target state="translated">실험적인 MLIR 기반 TensorFlow 컴파일러 최적화를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="4761221bfce06cf2c473a5ac7aededbd81781ab7" translate="yes" xml:space="preserve">
          <source>Enables this summary writer for the current thread.</source>
          <target state="translated">현재 스레드에 대해이 요약 작성기를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f11ea0aebe664ae119dec001a0b9f2d29f3ca87b" translate="yes" xml:space="preserve">
          <source>Encapsulates metric logic and state.</source>
          <target state="translated">메트릭 논리 및 상태를 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="03deba2273e4d1245d1695249ace3ac3cb04e064" translate="yes" xml:space="preserve">
          <source>Encode a tensor of ints into unicode strings.</source>
          <target state="translated">정수 텐서를 유니 코드 문자열로 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="e7d24a34fa72ad98d28372d4386ca19052a1f4fd" translate="yes" xml:space="preserve">
          <source>Encode audio data using the WAV file format.</source>
          <target state="translated">WAV 파일 형식을 사용하여 오디오 데이터를 인코딩하십시오.</target>
        </trans-unit>
        <trans-unit id="abdaadb2d4bd18ba0c09e21ce45020cd7b4b86ae" translate="yes" xml:space="preserve">
          <source>Encode strings into web-safe base64 format.</source>
          <target state="translated">웹 안전 base64 형식으로 문자열을 인코딩하십시오.</target>
        </trans-unit>
        <trans-unit id="968ebe80fffbafa93be61d3ae4c6827d20a11eac" translate="yes" xml:space="preserve">
          <source>EncodeBase64</source>
          <target state="translated">EncodeBase64</target>
        </trans-unit>
        <trans-unit id="81d21d283ed47705a4a5239add986fc53f16fbad" translate="yes" xml:space="preserve">
          <source>EncodeJpeg</source>
          <target state="translated">EncodeJpeg</target>
        </trans-unit>
        <trans-unit id="9736dbeaeca28f865990647979abfdc12a915af3" translate="yes" xml:space="preserve">
          <source>EncodeJpegVariableQuality</source>
          <target state="translated">EncodeJpegVariableQuality</target>
        </trans-unit>
        <trans-unit id="256ca4a630c1ad4dd4d9d7e63b4f4341461643b8" translate="yes" xml:space="preserve">
          <source>EncodePng</source>
          <target state="translated">EncodePng</target>
        </trans-unit>
        <trans-unit id="6987fe797a5924074b03c0ad70d89c2d4e1aa8aa" translate="yes" xml:space="preserve">
          <source>EncodeProto</source>
          <target state="translated">EncodeProto</target>
        </trans-unit>
        <trans-unit id="8957a376f479497d6e40a818880082a8bb2f4bb2" translate="yes" xml:space="preserve">
          <source>EncodeWav</source>
          <target state="translated">EncodeWav</target>
        </trans-unit>
        <trans-unit id="16a4fa81ee2e04bd7a401eba8428d573c4a50803" translate="yes" xml:space="preserve">
          <source>Encodes a &lt;code&gt;RaggedTensor&lt;/code&gt; into a &lt;code&gt;variant&lt;/code&gt; Tensor.</source>
          <target state="translated">&lt;code&gt;RaggedTensor&lt;/code&gt; 를 &lt;code&gt;variant&lt;/code&gt; Tensor 로 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="12c95c7b314e36b497965b9d97cb027f94d7aeb8" translate="yes" xml:space="preserve">
          <source>Encodes each sequence of Unicode code points in &lt;code&gt;input&lt;/code&gt; into a string.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; 각 유니 코드 코드 포인트 시퀀스를 문자열로 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="1314b20b59619cbf6729cf12663e572416610647" translate="yes" xml:space="preserve">
          <source>Encodes the given &lt;code&gt;RaggedTensor&lt;/code&gt; and returns a &lt;code&gt;variant&lt;/code&gt; Tensor. If &lt;code&gt;batched_input&lt;/code&gt; is True, then input &lt;code&gt;RaggedTensor&lt;/code&gt; is unbatched along the zero-th dimension, each component &lt;code&gt;RaggedTensor&lt;/code&gt; is encoded into a scalar &lt;code&gt;variant&lt;/code&gt; Tensor, and these are stacked to return a 1-D &lt;code&gt;variant&lt;/code&gt; Tensor. If &lt;code&gt;batched_input&lt;/code&gt; is False, then the input &lt;code&gt;RaggedTensor&lt;/code&gt; is encoded as is and a scalar &lt;code&gt;variant&lt;/code&gt; Tensor is returned. A &lt;code&gt;RaggedTensor&lt;/code&gt; is encoded by first creating a 1-D &lt;code&gt;variant&lt;/code&gt; Tensor with &lt;code&gt;ragged_rank + 1&lt;/code&gt; elements, containing the splits and values Tensors of the &lt;code&gt;RaggedTensor&lt;/code&gt;. Then the 1-D &lt;code&gt;variant&lt;/code&gt; Tensor is wrapped in a scalar &lt;code&gt;variant&lt;/code&gt; Tensor. See &lt;code&gt;RaggedTensorFromVariant&lt;/code&gt; for the corresponding decoding logic.</source>
          <target state="translated">지정된 &lt;code&gt;RaggedTensor&lt;/code&gt; 를 인코딩하고 &lt;code&gt;variant&lt;/code&gt; Tensor를 반환합니다 . 경우 &lt;code&gt;batched_input&lt;/code&gt; 이 참이며, 다음 입력 &lt;code&gt;RaggedTensor&lt;/code&gt; 은 0 차 차원에 따른 unbatched이며, 각 구성 요소 &lt;code&gt;RaggedTensor&lt;/code&gt; 는 스칼라으로 인코딩 &lt;code&gt;variant&lt;/code&gt; 텐서 및 이러한 1-D 돌아 적층 &lt;code&gt;variant&lt;/code&gt; 텐서. 경우 &lt;code&gt;batched_input&lt;/code&gt; 가 거짓이고, 그 입력 &lt;code&gt;RaggedTensor&lt;/code&gt; 가 로서 부호화되어 있고 스칼라 &lt;code&gt;variant&lt;/code&gt; 텐서가 반환된다. &lt;code&gt;RaggedTensor&lt;/code&gt; 은 제 1 D 생성하여 부호화 &lt;code&gt;variant&lt;/code&gt; 과 텐서 &lt;code&gt;ragged_rank + 1&lt;/code&gt; 요소들은 상기의 분할 및 값 텐서 함유 &lt;code&gt;RaggedTensor&lt;/code&gt; 를 . 그런 다음 1-D &lt;code&gt;variant&lt;/code&gt; Tensor는 스칼라 &lt;code&gt;variant&lt;/code&gt; Tensor로 래핑됩니다 . 해당 디코딩 논리는 &lt;code&gt;RaggedTensorFromVariant&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="12c18781d5d5838a386e7f2e416fc47f7b0e506a" translate="yes" xml:space="preserve">
          <source>Encoding to use when writing string content. Only used if &lt;code&gt;content&lt;/code&gt; is text.</source>
          <target state="translated">문자열 내용을 쓸 때 사용할 인코딩입니다. &lt;code&gt;content&lt;/code&gt; 가 텍스트 인 경우에만 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="004003571b664f555c79b413696ee33e12ad9b5d" translate="yes" xml:space="preserve">
          <source>End character that is appended at the end the printed string. Defaults to the newline character.</source>
          <target state="translated">인쇄 된 문자열 끝에 추가되는 끝 문자입니다. 기본값은 개행 문자입니다.</target>
        </trans-unit>
        <trans-unit id="e9cf7d581450a0a51eeea499b6b02f740f714fb5" translate="yes" xml:space="preserve">
          <source>Enqueue a Tensor on the computation outfeed.</source>
          <target state="translated">계산 아웃 피드에 Tensor를 큐에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="abc13a62fb9e2a8300bb9fe311ec0d5d8dde6065" translate="yes" xml:space="preserve">
          <source>Enqueue multiple Tensor values on the computation outfeed.</source>
          <target state="translated">계산 아웃 피드에 여러 Tensor 값을 큐에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="46b78c4f830efb634df5877484f66b46105d79ec" translate="yes" xml:space="preserve">
          <source>EnqueueTPUEmbeddingIntegerBatch</source>
          <target state="translated">EnqueueTPUEmbeddingIntegerBatch</target>
        </trans-unit>
        <trans-unit id="cdca9f2840c0a160faa76ce84dfd26d10b2e15c0" translate="yes" xml:space="preserve">
          <source>EnqueueTPUEmbeddingRaggedTensorBatch</source>
          <target state="translated">EnqueueTPUEmbeddingRaggedTensorBatch</target>
        </trans-unit>
        <trans-unit id="1328f41df615d38a5b73994f5f5369d416436810" translate="yes" xml:space="preserve">
          <source>EnqueueTPUEmbeddingSparseBatch</source>
          <target state="translated">EnqueueTPUEmbeddingSparseBatch</target>
        </trans-unit>
        <trans-unit id="15f70eb0f8aceba7658fead772c7b4ff1e4d1d95" translate="yes" xml:space="preserve">
          <source>EnqueueTPUEmbeddingSparseTensorBatch</source>
          <target state="translated">EnqueueTPUEmbeddingSparseTensorBatch</target>
        </trans-unit>
        <trans-unit id="5683cb6af38e31071180cef9386ec900be332114" translate="yes" xml:space="preserve">
          <source>Enqueues a different list of tensors in different threads. Implemented using a queue -- a &lt;code&gt;QueueRunner&lt;/code&gt; for the queue is added to the current &lt;code&gt;Graph&lt;/code&gt;'s &lt;code&gt;QUEUE_RUNNER&lt;/code&gt; collection.</source>
          <target state="translated">다른 스레드에서 다른 텐서 목록을 큐에 넣습니다. 큐를 사용하여 구현-큐의 &lt;code&gt;QueueRunner&lt;/code&gt; 가 현재 &lt;code&gt;Graph&lt;/code&gt; 의 &lt;code&gt;QUEUE_RUNNER&lt;/code&gt; 컬렉션에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="8670322121e626d81f991f7d69880960bd89a370" translate="yes" xml:space="preserve">
          <source>Enqueues a tuple of one or more tensors in the given queue.</source>
          <target state="translated">주어진 큐에있는 하나 이상의 텐서의 튜플을 큐에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="60e30314779202231181351b84dd34846567a2f6" translate="yes" xml:space="preserve">
          <source>Enqueues and Dequeues to the &lt;code&gt;PriorityQueue&lt;/code&gt; must include an additional tuple entry at the beginning: the &lt;code&gt;priority&lt;/code&gt;. The priority must be an int64 scalar (for &lt;code&gt;enqueue&lt;/code&gt;) or an int64 vector (for &lt;code&gt;enqueue_many&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;PriorityQueue&lt;/code&gt; 에 대한 대기열 및 대기열 에는 시작 부분에 &lt;code&gt;priority&lt;/code&gt; 라는 추가 튜플 항목이 포함되어야합니다 . 우선 순위는 int64 스칼라 ( &lt;code&gt;enqueue&lt;/code&gt; ) 또는 int64 벡터 ( &lt;code&gt;enqueue_many&lt;/code&gt; ) 여야 합니다.</target>
        </trans-unit>
        <trans-unit id="d81d953ea363374239fe43375852b3f34687f421" translate="yes" xml:space="preserve">
          <source>Enqueues id tensors for embedding lookup.</source>
          <target state="translated">임베딩 조회를 위해 ID 텐서를 대기열에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="8ce82621edcce5f93df7566dd835d9503feeccdf" translate="yes" xml:space="preserve">
          <source>Enqueues one element to this queue.</source>
          <target state="translated">이 큐에 하나의 요소를 큐에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="90cb2e60d785aff93add1fa0fe7d6d52fb7d8d2d" translate="yes" xml:space="preserve">
          <source>Enqueues zero or more elements to this queue.</source>
          <target state="translated">이 큐에 0 개 이상의 요소를 큐에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="d477e8507b00563f90dd22902da1f3308522cfb5" translate="yes" xml:space="preserve">
          <source>Enqueues zero or more tuples of one or more tensors in the given queue.</source>
          <target state="translated">주어진 큐에있는 하나 이상의 텐서의 0 개 이상의 튜플을 큐에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="556d9beffa9d2d825aeeaef90ce79c6045e5e75a" translate="yes" xml:space="preserve">
          <source>EnsureShape</source>
          <target state="translated">EnsureShape</target>
        </trans-unit>
        <trans-unit id="ec07a7b9b065fec4ccc1c035390c238f21a7e560" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;tensor&lt;/code&gt; is being traced by this tape.</source>
          <target state="translated">이 테이프가 &lt;code&gt;tensor&lt;/code&gt; 를 추적하고 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="ffa73138967f2617b65584ab4b4ab573ff280e77" translate="yes" xml:space="preserve">
          <source>Ensures that flag is not None during program execution.</source>
          <target state="translated">프로그램 실행 중 플래그가 없음이 아닌지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="7fba0ef82f0ba5fc0578d25be123e547e761deca" translate="yes" xml:space="preserve">
          <source>Ensures that flags are not None during program execution.</source>
          <target state="translated">프로그램 실행 중 플래그가 없음이 아닌지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f60f893825ab5c6287261b63b08497391b1a898d" translate="yes" xml:space="preserve">
          <source>Ensures that only one flag among flag_names is True.</source>
          <target state="translated">flag_names 중 하나의 플래그 만 True인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="bc4926f456b6fdb9061da1916b7b3991e5255b89" translate="yes" xml:space="preserve">
          <source>Ensures that only one flag among flag_names is not None.</source>
          <target state="translated">flag_names 중 하나의 플래그 만 None이 아닌지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="69a41907388c0788d6b8b4645f59723bf71ee624" translate="yes" xml:space="preserve">
          <source>Ensures that the tensor's shape matches the expected shape.</source>
          <target state="translated">텐서의 모양이 예상 모양과 일치하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="a3df735c2334b1de3bf6c1f0225248a5c4288f43" translate="yes" xml:space="preserve">
          <source>Ensures the minimum quantization range is at least this value. The legacy default value for this is 0.01, but it is strongly suggested to set it to 0 for new uses.</source>
          <target state="translated">최소 양자화 범위가이 값 이상이되도록합니다. 이에 대한 레거시 기본값은 0.01이지만 새 용도로 사용하려면 0으로 설정하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="108e622621a22768df2fd21e0560d0f2153d1f24" translate="yes" xml:space="preserve">
          <source>Ensures the wrapped &lt;code&gt;cell&lt;/code&gt; is called with &lt;a href=&quot;../../../../device&quot;&gt;&lt;code&gt;tf.device(device)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">랩핑 된 &lt;code&gt;cell&lt;/code&gt; 이 &lt;a href=&quot;../../../../device&quot;&gt; &lt;code&gt;tf.device(device)&lt;/code&gt; &lt;/a&gt; 호출 되는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="56c85bfc40629f5356a3bdc6b8c8134d0ee69412" translate="yes" xml:space="preserve">
          <source>Ensures the wrapped &lt;code&gt;cell&lt;/code&gt; is called with &lt;a href=&quot;../device&quot;&gt;&lt;code&gt;tf.device(device)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">랩핑 된 &lt;code&gt;cell&lt;/code&gt; 이 &lt;a href=&quot;../device&quot;&gt; &lt;code&gt;tf.device(device)&lt;/code&gt; &lt;/a&gt; 호출 되는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="2b9eceb7a86a9f577ef80586c5c1d7fde9ff493d" translate="yes" xml:space="preserve">
          <source>Enter</source>
          <target state="translated">Enter</target>
        </trans-unit>
        <trans-unit id="2e5bdaceef564fe90342bc0f3ce09baebe939955" translate="yes" xml:space="preserve">
          <source>Enter a &lt;code&gt;with&lt;/code&gt; block.</source>
          <target state="translated">&lt;code&gt;with&lt;/code&gt; 블록을 입력하십시오 .</target>
        </trans-unit>
        <trans-unit id="b0ae8455b8c259c16540b2b4caa23a215c50998e" translate="yes" xml:space="preserve">
          <source>Entering a context pushes it onto a stack of contexts. The context is exited when the test completes. Contexts are are exited in the reverse order of entering. They will always be exited, regardless of test failure/success. The context stack is specific to the test being run.</source>
          <target state="translated">컨텍스트를 입력하면 컨텍스트 스택으로 푸시됩니다. 테스트가 완료되면 컨텍스트가 종료됩니다. 컨텍스트는 입력 순서와 반대로 종료됩니다. 테스트 실패 / 성공에 관계없이 항상 종료됩니다. 컨텍스트 스택은 실행중인 테스트에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="7012453966d1bac934e1d3e92a246ac6fb8ab8a8" translate="yes" xml:space="preserve">
          <source>Entering the scope also enters the &quot;cross-replica context&quot;. See &lt;a href=&quot;../../../../distribute/strategyextended&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended&lt;/code&gt;&lt;/a&gt; for an explanation on cross-replica and replica contexts.</source>
          <target state="translated">범위를 입력하면 &quot;교차 복제 컨텍스트&quot;도 입력됩니다. 교차 복제 및 복제 컨텍스트에 대한 설명 은 &lt;a href=&quot;../../../../distribute/strategyextended&quot;&gt; &lt;code&gt;tf.distribute.StrategyExtended&lt;/code&gt; &lt;/a&gt; 를 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="86bb4e96bc7eba7fb90d20bfb46d35f260824e45" translate="yes" xml:space="preserve">
          <source>Entering the scope also enters the &quot;cross-replica context&quot;. See &lt;a href=&quot;../../../distribute/strategyextended&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended&lt;/code&gt;&lt;/a&gt; for an explanation on cross-replica and replica contexts.</source>
          <target state="translated">범위를 입력하면 &quot;교차 복제 컨텍스트&quot;도 입력됩니다. 교차 복제 및 복제 컨텍스트에 대한 설명 은 &lt;a href=&quot;../../../distribute/strategyextended&quot;&gt; &lt;code&gt;tf.distribute.StrategyExtended&lt;/code&gt; &lt;/a&gt; 를 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="56d69298189781e9dc71eaa40ab6d56ce3c27a87" translate="yes" xml:space="preserve">
          <source>Entering the scope also enters the &quot;cross-replica context&quot;. See &lt;a href=&quot;../strategyextended&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended&lt;/code&gt;&lt;/a&gt; for an explanation on cross-replica and replica contexts.</source>
          <target state="translated">범위를 입력하면 &quot;교차 복제 컨텍스트&quot;도 입력됩니다. 교차 복제 및 복제 컨텍스트에 대한 설명 은 &lt;a href=&quot;../strategyextended&quot;&gt; &lt;code&gt;tf.distribute.StrategyExtended&lt;/code&gt; &lt;/a&gt; 를 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="97e3e7fb253c150ba1022252d5de42f1f4fafe16" translate="yes" xml:space="preserve">
          <source>Entering the scope also enters the &quot;cross-replica context&quot;. See &lt;a href=&quot;strategyextended&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended&lt;/code&gt;&lt;/a&gt; for an explanation on cross-replica and replica contexts.</source>
          <target state="translated">범위를 입력하면 &quot;교차 복제 컨텍스트&quot;도 입력됩니다. 교차 복제 및 복제 컨텍스트에 대한 설명 은 &lt;a href=&quot;strategyextended&quot;&gt; &lt;code&gt;tf.distribute.StrategyExtended&lt;/code&gt; &lt;/a&gt; 를 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="84ecb2f7e332bf0fb5c218b03f880139861b909c" translate="yes" xml:space="preserve">
          <source>Enters a context inside which operations are recorded on this tape.</source>
          <target state="translated">이 테이프에서 조작이 기록되는 컨텍스트를 입력합니다.</target>
        </trans-unit>
        <trans-unit id="ec2767c9f459a9d70c78a2313f5bda7adc985835" translate="yes" xml:space="preserve">
          <source>Enum class defining the sets of ops available to generate TFLite models.</source>
          <target state="translated">TFLite 모델을 생성하는 데 사용할 수있는 op 세트를 정의하는 Enum 클래스.</target>
        </trans-unit>
        <trans-unit id="5da1a5e506a157807d67486433bb20b695758042" translate="yes" xml:space="preserve">
          <source>Enum defining the optimizations to apply when generating tflite graphs.</source>
          <target state="translated">tflite 그래프를 생성 할 때 적용 할 최적화를 정의하는 열거 형입니다.</target>
        </trans-unit>
        <trans-unit id="90423c583dcce5d727bda87136e47d717acb8520" translate="yes" xml:space="preserve">
          <source>Enumerates the elements of this dataset.</source>
          <target state="translated">이 데이터 세트의 요소를 열거합니다.</target>
        </trans-unit>
        <trans-unit id="01b295f0689d0f580498d3834fd01d32f53a29b4" translate="yes" xml:space="preserve">
          <source>Enum|str|None, the default value of the flag.</source>
          <target state="translated">Enum | str | None, 플래그의 기본값.</target>
        </trans-unit>
        <trans-unit id="a472ce8d19d10484177dabb05deb4ee299058a0c" translate="yes" xml:space="preserve">
          <source>Equal</source>
          <target state="translated">Equal</target>
        </trans-unit>
        <trans-unit id="cd3d6832786f1cdc0d074cbe3810dfbe4b6e9e02" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.fftpack.dct.html&quot;&gt;scipy.fftpack.dct&lt;/a&gt; for Type-I, Type-II and Type-III DCT.</source>
          <target state="translated">Type-I, Type-II 및 Type-III DCT의 경우 &lt;a href=&quot;https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.fftpack.dct.html&quot;&gt;scipy.fftpack.dct&lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="ab669c6ea64e65572ad94f354d53bdd4410c35f5" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.fftpack.idct.html&quot;&gt;scipy.fftpack.idct&lt;/a&gt; for Type-I, Type-II and Type-III DCT.</source>
          <target state="translated">Type-I, Type-II 및 Type-III DCT의 경우 &lt;a href=&quot;https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.fftpack.idct.html&quot;&gt;scipy.fftpack.idct&lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="c335be99965d030f218f7e74ee4341c2f9b62983" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.scipy.org/doc/scipy-1.4.0/reference/generated/scipy.fftpack.dct.html&quot;&gt;scipy.fftpack.dct&lt;/a&gt; for Type-I, Type-II, Type-III and Type-IV DCT.</source>
          <target state="translated">Type-I, Type-II, Type-III 및 Type-IV DCT의 &lt;a href=&quot;https://docs.scipy.org/doc/scipy-1.4.0/reference/generated/scipy.fftpack.dct.html&quot;&gt;scipy.fftpack.dct&lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="20d5723a51e05abac66211f4b5113c9f9e3d398b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.scipy.org/doc/scipy-1.4.0/reference/generated/scipy.fftpack.idct.html&quot;&gt;scipy.fftpack.idct&lt;/a&gt; for Type-I, Type-II, Type-III and Type-IV DCT.</source>
          <target state="translated">Type-I, Type-II, Type-III 및 Type-IV DCT의 &lt;a href=&quot;https://docs.scipy.org/doc/scipy-1.4.0/reference/generated/scipy.fftpack.idct.html&quot;&gt;scipy.fftpack.idct&lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="d5e57bb76843be992582303de7a25b51e9e44284" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;latest_checkpoint&quot;&gt;&lt;code&gt;tf.train.latest_checkpoint(directory)&lt;/code&gt;&lt;/a&gt; where &lt;code&gt;directory&lt;/code&gt; is the constructor argument to &lt;code&gt;CheckpointManager&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;latest_checkpoint&quot;&gt; &lt;code&gt;tf.train.latest_checkpoint(directory)&lt;/code&gt; &lt;/a&gt; 와 같습니다. 여기서 &lt;code&gt;directory&lt;/code&gt; 는 &lt;code&gt;CheckpointManager&lt;/code&gt; 의 생성자 인수 입니다.</target>
        </trans-unit>
        <trans-unit id="12aa27fa14fcfb779b3cf6f07826d3611283aed6" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;adjust_brightness()&lt;/code&gt; using a &lt;code&gt;delta&lt;/code&gt; randomly picked in the interval &lt;code&gt;[-max_delta, max_delta)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[-max_delta, max_delta)&lt;/code&gt; 간격에서 임의로 선택된 &lt;code&gt;delta&lt;/code&gt; 사용하는 &lt;code&gt;adjust_brightness()&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="09b3e81f789e49b586499d0779cb698dbd59d557" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;adjust_contrast()&lt;/code&gt; but uses a &lt;code&gt;contrast_factor&lt;/code&gt; randomly picked in the interval &lt;code&gt;[lower, upper]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;adjust_contrast()&lt;/code&gt; 와 동일 하지만 &lt;code&gt;[lower, upper]&lt;/code&gt; 간격에서 임의로 선택된 &lt;code&gt;contrast_factor&lt;/code&gt; 를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="96de3d3339d8bc99a5232fb80056e877509a902d" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;adjust_hue()&lt;/code&gt; but uses a &lt;code&gt;delta&lt;/code&gt; randomly picked in the interval &lt;code&gt;[-max_delta, max_delta]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;adjust_hue()&lt;/code&gt; 와 동일 하지만 &lt;code&gt;[-max_delta, max_delta]&lt;/code&gt; 간격에서 임의로 선택된 &lt;code&gt;delta&lt;/code&gt; 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="23655f0c3ac756adc718b9fd03358f4fad3f0856" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;adjust_saturation()&lt;/code&gt; but uses a &lt;code&gt;saturation_factor&lt;/code&gt; randomly picked in the interval &lt;code&gt;[lower, upper]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;adjust_saturation()&lt;/code&gt; 동일 하지만 &lt;code&gt;[lower, upper]&lt;/code&gt; 간격에서 임의로 선택된 &lt;code&gt;saturation_factor&lt;/code&gt; 를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="404cc18c094b513b6de1b7e6cc0bbe8e08dec237" translate="yes" xml:space="preserve">
          <source>Equivalent to C++ std::nextafter function.</source>
          <target state="translated">C ++ std :: nextafter 함수와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="72cfeb2ec979751608d18293a4bbbaf58c556044" translate="yes" xml:space="preserve">
          <source>Equivalent to LSTMCell class but adds peephole connections.</source>
          <target state="translated">LSTMCell 클래스와 동일하지만 구멍 연결을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="810acbc718abeba54a4adeae3c2bc19fd0867a76" translate="yes" xml:space="preserve">
          <source>Equivalent to exiting and reentering the tape context manager with a new tape. For example, the two following code blocks are equivalent:</source>
          <target state="translated">새 테이프를 사용하여 테이프 컨텍스트 관리자를 종료했다가 다시 입력하는 것과 같습니다. 예를 들어 다음 두 코드 블록은 동일합니다.</target>
        </trans-unit>
        <trans-unit id="b366fb9cced85d8ec2219c1c3626cd699229e2a0" translate="yes" xml:space="preserve">
          <source>Equivalent to np.all</source>
          <target state="translated">np.all과 동일</target>
        </trans-unit>
        <trans-unit id="fbe368530856e5c02dea4749ee86033afb2c2971" translate="yes" xml:space="preserve">
          <source>Equivalent to np.angle.</source>
          <target state="translated">np.angle과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="68fc2cd887f06a6be5984678e87d9fbefcde58be" translate="yes" xml:space="preserve">
          <source>Equivalent to np.any</source>
          <target state="translated">np.any와 동일</target>
        </trans-unit>
        <trans-unit id="d711c6043710156c83e0fd47abc01149d5b65b9c" translate="yes" xml:space="preserve">
          <source>Equivalent to np.arange</source>
          <target state="translated">np.arange와 동일</target>
        </trans-unit>
        <trans-unit id="462b17f25f33760631b5543a184f6df84e7995e8" translate="yes" xml:space="preserve">
          <source>Equivalent to np.ceil</source>
          <target state="translated">np.ceil과 동일</target>
        </trans-unit>
        <trans-unit id="2ee0150060273e31bed6d8ae4a4de2b9f0e05d04" translate="yes" xml:space="preserve">
          <source>Equivalent to np.exp</source>
          <target state="translated">np.exp와 동일</target>
        </trans-unit>
        <trans-unit id="c5cf2f3020533dd8c6cbc5a7f040679ea75d7f9b" translate="yes" xml:space="preserve">
          <source>Equivalent to np.full</source>
          <target state="translated">np.full과 동일</target>
        </trans-unit>
        <trans-unit id="05b171c66d286b4a58fc825ae37893711f5af4c1" translate="yes" xml:space="preserve">
          <source>Equivalent to np.isfinite</source>
          <target state="translated">np.isfinite와 동일</target>
        </trans-unit>
        <trans-unit id="6cf06734befd58f2b3ab4e13986301474581e2b4" translate="yes" xml:space="preserve">
          <source>Equivalent to np.isinf</source>
          <target state="translated">np.isinf와 동일</target>
        </trans-unit>
        <trans-unit id="6374258bee9e66935fc1c66d495136b655269e4f" translate="yes" xml:space="preserve">
          <source>Equivalent to np.isnan</source>
          <target state="translated">np.isnan와 동일</target>
        </trans-unit>
        <trans-unit id="e67fc8f2ff9c19708af4e26884cc5d44a056998d" translate="yes" xml:space="preserve">
          <source>Equivalent to np.linalg.lstsq</source>
          <target state="translated">np.linalg.lstsq와 동일</target>
        </trans-unit>
        <trans-unit id="28577bb9f14f8ade1168ec629722ccf6597345cd" translate="yes" xml:space="preserve">
          <source>Equivalent to np.max</source>
          <target state="translated">np.max와 동일</target>
        </trans-unit>
        <trans-unit id="c49e9cf38c7cdbe9cab7db7f9370177b6fad0411" translate="yes" xml:space="preserve">
          <source>Equivalent to np.mean</source>
          <target state="translated">np.mean과 동일</target>
        </trans-unit>
        <trans-unit id="1f5202370c40436aa2f849ee038707e5fa15d036" translate="yes" xml:space="preserve">
          <source>Equivalent to np.min</source>
          <target state="translated">np.min에 해당</target>
        </trans-unit>
        <trans-unit id="5c252cf1e4e24cf6dab4facf869d89e7b422643c" translate="yes" xml:space="preserve">
          <source>Equivalent to np.ndim</source>
          <target state="translated">np.ndim과 동일</target>
        </trans-unit>
        <trans-unit id="a2db935156477455d5981e031397d5045da461a3" translate="yes" xml:space="preserve">
          <source>Equivalent to np.prod</source>
          <target state="translated">np.prod와 동일</target>
        </trans-unit>
        <trans-unit id="7c2e12dc7d621e63f14287eb0e10506db2d014d4" translate="yes" xml:space="preserve">
          <source>Equivalent to np.size()</source>
          <target state="translated">np.size ()와 동일</target>
        </trans-unit>
        <trans-unit id="88b5636e608c91ffa2f14af120465515724e7c21" translate="yes" xml:space="preserve">
          <source>Equivalent to np.std</source>
          <target state="translated">np.std와 동일</target>
        </trans-unit>
        <trans-unit id="e54f8c7f961fc750868c04b530028b12df8cfd2d" translate="yes" xml:space="preserve">
          <source>Equivalent to np.sum apart the fact that numpy upcast uint8 and int32 to int64 while tensorflow returns the same dtype as the input.</source>
          <target state="translated">numpy가 uint8과 int32를 int64로 상향 변환하고 tensorflow가 입력과 동일한 dtype을 반환한다는 사실을 제외하고는 np.sum과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f94035d29b7b5f5ef4935b41748906c6edd0f44a" translate="yes" xml:space="preserve">
          <source>Equivalent to np.unravel_index</source>
          <target state="translated">np.unravel_index와 동일</target>
        </trans-unit>
        <trans-unit id="3d8d4f70c2a6dcee6138e42da4ea9d8d57941bcf" translate="yes" xml:space="preserve">
          <source>Equivalent to np.var</source>
          <target state="translated">np.var와 동일</target>
        </trans-unit>
        <trans-unit id="f4cc023d491adabad2e8a109c3d3dd4a8e975fd0" translate="yes" xml:space="preserve">
          <source>Equivalent to numpy.fft.fftshift. &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.fftshift.html&quot;&gt;https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.fftshift.html&lt;/a&gt;</source>
          <target state="translated">numpy.fft.fftshift와 동일합니다. &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.fftshift.html&quot;&gt;https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.fftshift.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d3937688953cfcbcfe89823523f42d4889fd2130" translate="yes" xml:space="preserve">
          <source>Equivalent to numpy.fft.fftshift. https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.fftshift.html</source>
          <target state="translated">numpy.fft.fftshift와 동일합니다. https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.fftshift.html</target>
        </trans-unit>
        <trans-unit id="9d205f3c81ff628d0981811f199086832aed22b6" translate="yes" xml:space="preserve">
          <source>Equivalent to numpy.fft.ifftshift. &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.ifftshift.html&quot;&gt;https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.ifftshift.html&lt;/a&gt;</source>
          <target state="translated">numpy.fft.ifftshift와 동일합니다. &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.ifftshift.html&quot;&gt;https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.ifftshift.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7dd2b0117f7b7eb348201a45c446fbae4c04b64d" translate="yes" xml:space="preserve">
          <source>Equivalent to numpy.fft.ifftshift. https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.ifftshift.html</source>
          <target state="translated">numpy.fft.ifftshift와 동일합니다. https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.ifftshift.html</target>
        </trans-unit>
        <trans-unit id="cd3c10ac298fc83779d7180b62df3acfd2028ba1" translate="yes" xml:space="preserve">
          <source>Equivalent to numpy.linalg.slogdet, although no sign is returned since only hermitian positive definite matrices are supported.</source>
          <target state="translated">mitpy.linalg.slogdet와 동일하지만, 양수 한정 행렬 만 지원되므로 부호가 반환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f5e3349b347b523ccfe7d2d36cdf4f830d6d6768" translate="yes" xml:space="preserve">
          <source>Equivalent to numpy.polyval.</source>
          <target state="translated">numpy.polyval과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9ab93c1fc5b434981966382e2d02f35fad157362" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.linalg.expm</source>
          <target state="translated">scipy.linalg.expm과 동일</target>
        </trans-unit>
        <trans-unit id="449cff5debc79a532910321ef441b805ab2c2ee5" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.linalg.solve_triangular</source>
          <target state="translated">scipy.linalg.solve_triangular와 동일</target>
        </trans-unit>
        <trans-unit id="fe91403d74c0b4a8f14baf895508059d0ee6e0b2" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.dawsn</source>
          <target state="translated">scipy.special.dawsn과 동일</target>
        </trans-unit>
        <trans-unit id="0d7d555473271127b617bb6e0ade0e8b28687028" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.expi</source>
          <target state="translated">scipy.special.expi와 동일</target>
        </trans-unit>
        <trans-unit id="cb5717fd66f59e41b5a46912c32daefbc3aef0ab" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.expit</source>
          <target state="translated">scipy.special.expit와 동일</target>
        </trans-unit>
        <trans-unit id="1f4e9e13934cb20ad789e608907c04597e256190" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.fresnel first output.</source>
          <target state="translated">scipy.special.fresnel 첫 번째 출력과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="1560270df46b23a7f166b9f0f265cbfa7d38e327" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.fresnel second output.</source>
          <target state="translated">scipy.special.fresnel 두 번째 출력과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="03aaa9170e1859f7e5b84e4283ea1ae7b31ff453" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.i0</source>
          <target state="translated">scipy.special.i0와 동일</target>
        </trans-unit>
        <trans-unit id="8e266498a6b1a7a26b01def5d42f8b17286ec637" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.i0e</source>
          <target state="translated">scipy.special.i0e와 동일</target>
        </trans-unit>
        <trans-unit id="9289834302ab9464efb15c64a7277f13e51e14fa" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.i1</source>
          <target state="translated">scipy.special.i1과 동일</target>
        </trans-unit>
        <trans-unit id="438a970c0f9806ade1fdb0e1c5141f68e49632ce" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.i1e</source>
          <target state="translated">scipy.special.i1e와 동일</target>
        </trans-unit>
        <trans-unit id="494880ed4da70e8cfa70d15ee89749ccea4c6720" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.j0</source>
          <target state="translated">scipy.special.j0과 동일</target>
        </trans-unit>
        <trans-unit id="035c3a0e0f560151d55ab605438e7e17fd213d98" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.j1</source>
          <target state="translated">scipy.special.j1과 동일</target>
        </trans-unit>
        <trans-unit id="3d2afadabad61f66baa5f4e52785c46bbc5dee7f" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.k0</source>
          <target state="translated">scipy.special.k0과 동일</target>
        </trans-unit>
        <trans-unit id="d24bf216a788d22e20029dc3dc2a7ec04d083aec" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.k0e</source>
          <target state="translated">scipy.special.k0e와 동일</target>
        </trans-unit>
        <trans-unit id="46ab4d1dcd8a5d9d1528325d657c6dc21676a889" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.k1</source>
          <target state="translated">scipy.special.k1과 동일</target>
        </trans-unit>
        <trans-unit id="b31f0dd433c9919cbad7d6f1998b2dd1a2d3e774" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.k1e</source>
          <target state="translated">scipy.special.k1e와 동일</target>
        </trans-unit>
        <trans-unit id="5f26e00b296f0c73d0fd01066823b1180b1d56a0" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.spence</source>
          <target state="translated">scipy.special.spence와 동일</target>
        </trans-unit>
        <trans-unit id="9071e64e40768cc1326e55f1845c4512bbceb773" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.xlog1py</source>
          <target state="translated">scipy.special.xlog1py와 동일</target>
        </trans-unit>
        <trans-unit id="7b978115a57aecee7065e75844d526e492214b88" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.y0</source>
          <target state="translated">scipy.special.y0과 동일</target>
        </trans-unit>
        <trans-unit id="c3045f4419de2fe174d86f22c5c3d8795b8bc929" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.y1</source>
          <target state="translated">scipy.special.y1과 동일</target>
        </trans-unit>
        <trans-unit id="3648248d37cad618c8d49524831902e774028989" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;code&gt;hooks&lt;/code&gt; arg to &lt;code&gt;estimator.evaluate&lt;/code&gt;. List of &lt;code&gt;SessionRunHook&lt;/code&gt; subclass instances. Used for callbacks inside the evaluation call.</source>
          <target state="translated">&lt;code&gt;estimator.evaluate&lt;/code&gt; 에 대한 &lt;code&gt;hooks&lt;/code&gt; 인수 와 동일합니다 . &lt;code&gt;SessionRunHook&lt;/code&gt; 하위 클래스 인스턴스 목록입니다 . 평가 호출 내부의 콜백에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e6da4b8d9829fada9fb24e19ea2b809e3ff4ce77" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;code&gt;input_fn&lt;/code&gt; arg to &lt;code&gt;estimator.evaluate&lt;/code&gt;. A function that constructs the input data for evaluation. See &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;Creating input functions&lt;/a&gt; for more information. The function should construct and return one of the following:</source>
          <target state="translated">&lt;code&gt;estimator.evaluate&lt;/code&gt; 에 대한 &lt;code&gt;input_fn&lt;/code&gt; 인수 와 동일합니다 . 평가를 위해 입력 데이터를 구성하는 함수입니다. 자세한 정보는 &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;입력 함수 작성&lt;/a&gt; 을 참조하십시오. 함수는 다음 중 하나를 생성하고 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="1fe107e95b7bba5c1aea496cd05695a842cb323d" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;code&gt;name&lt;/code&gt; arg to &lt;code&gt;estimator.evaluate&lt;/code&gt;. Name of the evaluation if user needs to run multiple evaluations on different data sets, such as on training data vs test data. Metrics for different evaluations are saved in separate folders, and appear separately in tensorboard.</source>
          <target state="translated">&lt;code&gt;estimator.evaluate&lt;/code&gt; 에 대한 arg &lt;code&gt;name&lt;/code&gt; 동일합니다 . 사용자가 학습 데이터 대 테스트 데이터와 같이 서로 다른 데이터 세트에 대해 여러 평가를 실행해야하는 경우 평가의 이름입니다. 다른 평가에 대한 메트릭은 별도의 폴더에 저장되며 텐서 보드에 별도로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="046f1d41c872592c322db28767dd41f18f6ee0e0" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;code&gt;steps&lt;/code&gt; arg to &lt;code&gt;estimator.evaluate&lt;/code&gt;. Number of steps for which to evaluate model. If &lt;code&gt;None&lt;/code&gt;, evaluates until &lt;code&gt;input_fn&lt;/code&gt; raises an end-of-input exception.</source>
          <target state="translated">&lt;code&gt;estimator.evaluate&lt;/code&gt; 에 대한 &lt;code&gt;steps&lt;/code&gt; arg 와 동일합니다 . 모델을 평가할 단계 수입니다. 경우 &lt;code&gt;None&lt;/code&gt; 일까지 평가하여 &lt;code&gt;input_fn&lt;/code&gt; 는 최종의 입력 예외가 발생하지 않는다.</target>
        </trans-unit>
        <trans-unit id="d371f28bfea1e852f448381bb4f0bdfccaa7149e" translate="yes" xml:space="preserve">
          <source>Equivalent to:</source>
          <target state="translated">다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1a8be36ef006e5ae5869b06fb4ce1ec0f4902254" translate="yes" xml:space="preserve">
          <source>Equivalent to: &lt;code&gt;from_row_splits(values, concat([0, row_limits]))&lt;/code&gt;.</source>
          <target state="translated">상당 : &lt;code&gt;from_row_splits(values, concat([0, row_limits]))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f934428c26b01d7bcf82028a03b831fb56280136" translate="yes" xml:space="preserve">
          <source>Equivalent to: &lt;code&gt;from_row_splits(values, concat([row_starts, nvals]))&lt;/code&gt;.</source>
          <target state="translated">상당 : &lt;code&gt;from_row_splits(values, concat([row_starts, nvals]))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb531627cb5378a0c7f2b5b0b593f0afe538fe70" translate="yes" xml:space="preserve">
          <source>Equivalently, you could call &lt;code&gt;tf.transpose(x, perm=[1, 0])&lt;/code&gt;.</source>
          <target state="translated">마찬가지로 &lt;code&gt;tf.transpose(x, perm=[1, 0])&lt;/code&gt; 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="54f2ad31f01046014353ecaf907869188111f8c7" translate="yes" xml:space="preserve">
          <source>Erf</source>
          <target state="translated">Erf</target>
        </trans-unit>
        <trans-unit id="b69ca406dc79373ba0bcba41524f4bd1cd044d3c" translate="yes" xml:space="preserve">
          <source>Erfc</source>
          <target state="translated">Erfc</target>
        </trans-unit>
        <trans-unit id="51ea53a72345d158f82636a88a9b303a31fcacbc" translate="yes" xml:space="preserve">
          <source>Erfinv</source>
          <target state="translated">Erfinv</target>
        </trans-unit>
        <trans-unit id="a645773837690910bfe191d893e21cd8eb8555ea" translate="yes" xml:space="preserve">
          <source>Essentially, any &quot;input&quot; into this pseudo op is fed into an identity, and attributes are added to that input before being used by the constituent ops that make up the pseudo op. A similar process is done to any output that is to be exported from the current op.</source>
          <target state="translated">기본적으로이 의사 op에 대한 &quot;입력&quot;은 ID로 제공되며 의사 op를 구성하는 구성 op에 의해 사용되기 전에 해당 입력에 속성이 추가됩니다. 현재 op에서 내보낼 출력에 대해 유사한 프로세스가 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="be113f49d343fbf9bdb54f8a121ec96a1956f264" translate="yes" xml:space="preserve">
          <source>Estimator class to train and evaluate TensorFlow models.</source>
          <target state="translated">TensorFlow 모델을 학습하고 평가하기위한 Estimator 클래스</target>
        </trans-unit>
        <trans-unit id="416cc25603177f39e318971f80a871d50a7f3f1c" translate="yes" xml:space="preserve">
          <source>Estimator with TPU support.</source>
          <target state="translated">TPU 지원 추정기.</target>
        </trans-unit>
        <trans-unit id="d4f26dbdb3530b0db4729beb33b45379d57ce337" translate="yes" xml:space="preserve">
          <source>Estimator's &lt;code&gt;ModeKeys&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ModeKeys&lt;/code&gt; 의 ModeKeys .</target>
        </trans-unit>
        <trans-unit id="9ebfc8db92bef1788c1d79262f904742e51adf04" translate="yes" xml:space="preserve">
          <source>Estimator's &lt;code&gt;ModeKeys&lt;/code&gt;. In most cases, this arg is not used and can be removed in the method implementation.</source>
          <target state="translated">&lt;code&gt;ModeKeys&lt;/code&gt; 의 ModeKeys . 대부분의 경우이 인수는 사용되지 않으며 메서드 구현에서 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cdd220bca4f3a5773a7be9a01c838bdbaadd598f" translate="yes" xml:space="preserve">
          <source>Estimator's &lt;code&gt;ModeKeys&lt;/code&gt;. To be used in case loss calculation is different in Train and Eval mode.</source>
          <target state="translated">&lt;code&gt;ModeKeys&lt;/code&gt; 의 ModeKeys . Train 및 Eval 모드에서 손실 계산이 다른 경우에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b1cd78140c026ea638f4d4fa08182ce0b8bf624a" translate="yes" xml:space="preserve">
          <source>Estimator.</source>
          <target state="translated">Estimator.</target>
        </trans-unit>
        <trans-unit id="af787345575f0fd2e39357b726f019e445fae069" translate="yes" xml:space="preserve">
          <source>Estimator: High level tools for working with models.</source>
          <target state="translated">Estimator : 모델 작업을위한 고급 도구.</target>
        </trans-unit>
        <trans-unit id="d52f4d3825efd220d2de6a981b23c8e26fcde5ab" translate="yes" xml:space="preserve">
          <source>Estimators</source>
          <target state="translated">Estimators</target>
        </trans-unit>
        <trans-unit id="af9670f7a09c493acafa589d4a49f01a2c26b1e8" translate="yes" xml:space="preserve">
          <source>Estimators are not compatible with eager execution.</source>
          <target state="translated">추정기는 열망하는 실행과 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c80aba17df6ad98b90215b78b10de509262f4ee8" translate="yes" xml:space="preserve">
          <source>Estimators can be used while eager execution is enabled. Note that &lt;code&gt;input_fn&lt;/code&gt; and all hooks are executed inside a graph context, so they have to be written to be compatible with graph mode. Note that &lt;code&gt;input_fn&lt;/code&gt; code using &lt;a href=&quot;../../../data&quot;&gt;&lt;code&gt;tf.data&lt;/code&gt;&lt;/a&gt; generally works in both graph and eager modes.</source>
          <target state="translated">열성적인 실행이 활성화 된 동안 견적 도구를 사용할 수 있습니다. 참고 &lt;code&gt;input_fn&lt;/code&gt; 를 그들이 그래프 모드와 호환되도록 작성해야하므로 모든 고리는 그래프 컨텍스트 내부 실행된다. 참고 것을 &lt;code&gt;input_fn&lt;/code&gt; 사용하여 코드 &lt;a href=&quot;../../../data&quot;&gt; &lt;code&gt;tf.data&lt;/code&gt; 를&lt;/a&gt; 일반적으로는 그래프와 열망 모드 모두에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="bb20f6b000f74c9b8993c6209840216e01db70f6" translate="yes" xml:space="preserve">
          <source>Estimators can be used while eager execution is enabled. Note that &lt;code&gt;input_fn&lt;/code&gt; and all hooks are executed inside a graph context, so they have to be written to be compatible with graph mode. Note that &lt;code&gt;input_fn&lt;/code&gt; code using &lt;a href=&quot;../data&quot;&gt;&lt;code&gt;tf.data&lt;/code&gt;&lt;/a&gt; generally works in both graph and eager modes.</source>
          <target state="translated">열성적인 실행이 활성화 된 동안 견적 도구를 사용할 수 있습니다. 참고 &lt;code&gt;input_fn&lt;/code&gt; 를 그들이 그래프 모드와 호환되도록 작성해야하므로 모든 고리는 그래프 컨텍스트 내부 실행된다. 참고 것을 &lt;code&gt;input_fn&lt;/code&gt; 사용하여 코드 &lt;a href=&quot;../data&quot;&gt; &lt;code&gt;tf.data&lt;/code&gt; 를&lt;/a&gt; 일반적으로는 그래프와 열망 모드 모두에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="3f86a08c52f7a8629e290b2e0fdcf1c0e4e98581" translate="yes" xml:space="preserve">
          <source>Estimators returned by &lt;code&gt;model_to_estimator&lt;/code&gt; are configured so that they can handle sample weights (similar to &lt;code&gt;keras_model.fit(x, y, sample_weights)&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;model_to_estimator&lt;/code&gt; 에서 반환 된 에스티 메이터 는 샘플 가중치를 처리 할 수 ​​있도록 구성됩니다 ( &lt;code&gt;keras_model.fit(x, y, sample_weights)&lt;/code&gt; 와 유사 ).</target>
        </trans-unit>
        <trans-unit id="04cdeeb6347a7147da63530f5a217391c98f7d8c" translate="yes" xml:space="preserve">
          <source>EuclideanNorm</source>
          <target state="translated">EuclideanNorm</target>
        </trans-unit>
        <trans-unit id="55c8f7aec13ca9beaa33e9ffb481df7f5c134062" translate="yes" xml:space="preserve">
          <source>Evaluated values of &lt;code&gt;predictions&lt;/code&gt; tensors.</source>
          <target state="translated">&lt;code&gt;predictions&lt;/code&gt; 텐서 의 평가 된 값 .</target>
        </trans-unit>
        <trans-unit id="1b03b079690ef84f55b17ebc43b48b934b906b85" translate="yes" xml:space="preserve">
          <source>Evaluated values of &lt;code&gt;predictions&lt;/code&gt; tensors. The &lt;code&gt;predictions&lt;/code&gt; tensors will contain at least two keys 'dfc' and 'bias' for model explanations. The &lt;code&gt;dfc&lt;/code&gt; value corresponds to the contribution of each feature to the overall prediction for this instance (positive indicating that the feature makes it more likely to select class 1 and negative less likely). The &lt;code&gt;dfc&lt;/code&gt; is an OrderedDict, where the keys are the feature column names and the values are the contributions. It is sorted by the absolute value of the contribution (e.g OrderedDict([('age', -0.54), ('gender', 0.4), ('fare', 0.21)])). The 'bias' value will be the same across all the instances, corresponding to the probability (classification) or prediction (regression) of the training data distribution.</source>
          <target state="translated">&lt;code&gt;predictions&lt;/code&gt; 텐서 의 평가 된 값 . &lt;code&gt;predictions&lt;/code&gt; 텐서 모델의 설명은 두 개 이상의 키 'DFC'과 '편견'이 포함됩니다. &lt;code&gt;dfc&lt;/code&gt; 인스턴스에 대한 전체 예측 기능을 각각의 기여 값에 대응한다 (포지티브 기능이 더 가능성 클래스 1과 음극 덜를 선택할 수 있음을 나타내는). &lt;code&gt;dfc&lt;/code&gt; 키는 피처 열 이름이고 값은 컨트 리뷰 션 인 OrderedDict입니다. 기여도의 절대 값 (예 : OrderedDict ([( 'age', -0.54), ( 'gender', 0.4), ( 'fare', 0.21)]))으로 정렬됩니다. 'bias'값은 훈련 데이터 분포의 확률 (분류) 또는 예측 (회귀)에 해당하는 모든 인스턴스에서 동일합니다.</target>
        </trans-unit>
        <trans-unit id="76038f0588757b840cdc5f204dab1364cf8043c3" translate="yes" xml:space="preserve">
          <source>Evaluates tensors and returns numpy values.</source>
          <target state="translated">텐서를 평가하고 numpy 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="57f3d0259235141125775431f66c96eedebbbfdb" translate="yes" xml:space="preserve">
          <source>Evaluates the model given evaluation data &lt;code&gt;input_fn&lt;/code&gt;.</source>
          <target state="translated">주어진 평가 데이터 &lt;code&gt;input_fn&lt;/code&gt; 로 모델을 평가합니다 .</target>
        </trans-unit>
        <trans-unit id="6ef0884484aa688ed75f2c6150bd98f64412bc0f" translate="yes" xml:space="preserve">
          <source>Evaluates the model on a data generator. (deprecated)</source>
          <target state="translated">데이터 생성기에서 모델을 평가합니다. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="19439d681060998c65fa8a49375cbf14d7f1b6d2" translate="yes" xml:space="preserve">
          <source>Evaluates the value of a variable.</source>
          <target state="translated">변수의 값을 평가합니다.</target>
        </trans-unit>
        <trans-unit id="462093d87b1e51760b2f9cc1fc346faa48a26ec8" translate="yes" xml:space="preserve">
          <source>Evaluates this sparse tensor in a &lt;code&gt;Session&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Session&lt;/code&gt; 에서이 희박한 텐서를 평가합니다 .</target>
        </trans-unit>
        <trans-unit id="b58bb64bee2dee0e3524de394e209a784dcb0f34" translate="yes" xml:space="preserve">
          <source>Evaluates this tensor in a &lt;code&gt;Session&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Session&lt;/code&gt; 에서이 텐서를 평가합니다 .</target>
        </trans-unit>
        <trans-unit id="ff7513853508e7c6e3aa07908df2a450a026eb88" translate="yes" xml:space="preserve">
          <source>Evaluation</source>
          <target state="translated">Evaluation</target>
        </trans-unit>
        <trans-unit id="0cd35e83aa25817cd1618d052bf5cc8037dc8e37" translate="yes" xml:space="preserve">
          <source>Evaluation-related metrics.</source>
          <target state="translated">평가 관련 지표.</target>
        </trans-unit>
        <trans-unit id="ba2134478429a6124d3817e9431c37bcebf0953c" translate="yes" xml:space="preserve">
          <source>Event shape describes the shape of a single draw from the distribution; it may be dependent across dimensions. For scalar distributions, the event shape is &lt;code&gt;[]&lt;/code&gt;. For a 5-dimensional MultivariateNormal, the event shape is &lt;code&gt;[5]&lt;/code&gt;.</source>
          <target state="translated">이벤트 형태는 분포에서 단일 드로우의 형태를 나타냅니다. 차원에 따라 다를 수 있습니다. 스칼라 분포의 경우 이벤트 형태는 &lt;code&gt;[]&lt;/code&gt; 입니다. 5 차원 다변량 일반의 경우 이벤트 모양은 &lt;code&gt;[5]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="25be266b05af077a0ad8cad7a0ec10e539d9e8c6" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;Iterator&lt;/code&gt; must implement the &lt;code&gt;_get_batches_of_transformed_samples&lt;/code&gt; method.</source>
          <target state="translated">모든 &lt;code&gt;Iterator&lt;/code&gt; 는 &lt;code&gt;_get_batches_of_transformed_samples&lt;/code&gt; 메소드를 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="fe8b10297f23cdaa6155e6a8f85d988c3f770227" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;RNNCell&lt;/code&gt; must have the properties below and implement &lt;code&gt;call&lt;/code&gt; with the signature &lt;code&gt;(output, next_state) = call(input, state)&lt;/code&gt;.</source>
          <target state="translated">모든 &lt;code&gt;RNNCell&lt;/code&gt; 은 아래와 같은 속성을 가지고 서명 &lt;code&gt;(output, next_state) = call(input, state)&lt;/code&gt; &lt;code&gt;call&lt;/code&gt; 을 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ad1161061553cd086534b164c366eee7799627f7" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;RNNCell&lt;/code&gt; must have the properties below and implement &lt;code&gt;call&lt;/code&gt; with the signature &lt;code&gt;(output, next_state) = call(input, state)&lt;/code&gt;. The optional third input argument, &lt;code&gt;scope&lt;/code&gt;, is allowed for backwards compatibility purposes; but should be left off for new subclasses.</source>
          <target state="translated">모든 &lt;code&gt;RNNCell&lt;/code&gt; 은 아래와 같은 속성을 가지고 서명 &lt;code&gt;(output, next_state) = call(input, state)&lt;/code&gt; &lt;code&gt;call&lt;/code&gt; 을 구현해야합니다 . 선택적 세 번째 입력 인수 인 &lt;code&gt;scope&lt;/code&gt; 은 이전 버전과의 호환성을 위해 허용됩니다. 새로운 서브 클래스에서는 제외해야합니다.</target>
        </trans-unit>
        <trans-unit id="299d42e26abca2a31082df354b4ce65b46c0fca9" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;Sequence&lt;/code&gt; must implement the &lt;code&gt;__getitem__&lt;/code&gt; and the &lt;code&gt;__len__&lt;/code&gt; methods. If you want to modify your dataset between epochs you may implement &lt;code&gt;on_epoch_end&lt;/code&gt;. The method &lt;code&gt;__getitem__&lt;/code&gt; should return a complete batch.</source>
          <target state="translated">모든 &lt;code&gt;Sequence&lt;/code&gt; 는 &lt;code&gt;__getitem__&lt;/code&gt; 및 &lt;code&gt;__len__&lt;/code&gt; 메소드를 구현해야합니다 . 신기원 사이에서 데이터 세트를 수정하려면 &lt;code&gt;on_epoch_end&lt;/code&gt; 를 구현할 수 있습니다 . &lt;code&gt;__getitem__&lt;/code&gt; 메소드 는 완전한 배치를 리턴해야합니다.</target>
        </trans-unit>
        <trans-unit id="ba703b38e62df0a565a8b36051f1b5465409c88f" translate="yes" xml:space="preserve">
          <source>Every layer should expose (if appropriate) an &lt;code&gt;input_spec&lt;/code&gt; attribute: a list of instances of InputSpec (one per input tensor).</source>
          <target state="translated">모든 계층은 적절한 경우 &lt;code&gt;input_spec&lt;/code&gt; 속성을 입력해야합니다. InputSpec 인스턴스 목록 (입력 텐 서당 하나).</target>
        </trans-unit>
        <trans-unit id="8bd051443b2507e1e127e99b553cf6ecedbd48b0" translate="yes" xml:space="preserve">
          <source>Everything else is converted to string an passed as such.</source>
          <target state="translated">다른 모든 것은 문자열로 변환되어 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="a560e4a67aad7f7189f87087c7d35159f5129b69" translate="yes" xml:space="preserve">
          <source>Exactly like the 'fetches' argument to Session.Run(). Can be a single tensor or op, a list of 'fetches' or a dictionary of fetches. For example: fetches = global_step_tensor fetches = [train_op, summary_op, global_step_tensor] fetches = {'step': global_step_tensor, 'summ': summary_op} Note that this can recurse as expected: fetches = {'step': global_step_tensor, 'ops': [train_op, check_nan_op]}</source>
          <target state="translated">Session.Run ()에 대한 'fetches'인수와 똑같습니다. 단일 텐서 또는 연산, '가져 오기'목록 또는 가져 오기 사전이 될 수 있습니다. 예 : fetches = global_step_tensor fetches = [train_op, summary_op, global_step_tensor] fetches = { 'step': global_step_tensor, 'summ': summary_op} 예상대로 반복 될 수 있습니다. fetches = { 'step': global_step_tensor, 'ops' : [train_op, check_nan_op]}</target>
        </trans-unit>
        <trans-unit id="c8e1a86a05a4d56f6d81c0b00a84c07add962695" translate="yes" xml:space="preserve">
          <source>Exactly like the &lt;code&gt;feed_dict&lt;/code&gt; argument to &lt;code&gt;Session.Run()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Session.Run()&lt;/code&gt; 대한 &lt;code&gt;feed_dict&lt;/code&gt; 인수 와 똑같습니다.</target>
        </trans-unit>
        <trans-unit id="8859bb982bd6bcc2cef25780b2635ee30bc1cef5" translate="yes" xml:space="preserve">
          <source>Exactly like the &lt;code&gt;options&lt;/code&gt; argument to &lt;code&gt;Session.run()&lt;/code&gt;, i.e., a config_pb2.RunOptions proto.</source>
          <target state="translated">&lt;code&gt;Session.run()&lt;/code&gt; 의 &lt;code&gt;options&lt;/code&gt; 인수 , 즉 config_pb2.RunOptions proto 와 정확히 같습니다 .</target>
        </trans-unit>
        <trans-unit id="66c10cd9cb9743620899024d1b7a59c133ba2b6d" translate="yes" xml:space="preserve">
          <source>Exactly one of scaffold or summary_op should be set.</source>
          <target state="translated">scaffold 또는 summary_op 중 정확히 하나를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="02d0824b069aa373c4cf4ddcd2dd958338db515f" translate="yes" xml:space="preserve">
          <source>Example (Basic):</source>
          <target state="translated">예 (기본) :</target>
        </trans-unit>
        <trans-unit id="15c2d66e4ea637a4a0137be3b06206da397b182f" translate="yes" xml:space="preserve">
          <source>Example (FarmHash64) with list of inputs:</source>
          <target state="translated">입력 목록이있는 예제 (FarmHash64) :</target>
        </trans-unit>
        <trans-unit id="be129b9effca85fd73cedf877225d7fd3be08b1f" translate="yes" xml:space="preserve">
          <source>Example (FarmHash64):</source>
          <target state="translated">예 (FarmHash64) :</target>
        </trans-unit>
        <trans-unit id="d6077956451fe769ecd79ba197242b337aa56e97" translate="yes" xml:space="preserve">
          <source>Example (MNIST):</source>
          <target state="translated">예 (MNIST) :</target>
        </trans-unit>
        <trans-unit id="59dbc1f0ab80dda2191ea75d024e449751be97e7" translate="yes" xml:space="preserve">
          <source>Example (Profile):</source>
          <target state="translated">예 (프로필) :</target>
        </trans-unit>
        <trans-unit id="7138ac77df2473be41d42b8461f4176e7177837a" translate="yes" xml:space="preserve">
          <source>Example (SipHash64):</source>
          <target state="translated">예 (SipHash64) :</target>
        </trans-unit>
        <trans-unit id="ace0e0f9d53f65c4ba8752cde26fc5d8ed59a8b9" translate="yes" xml:space="preserve">
          <source>Example (Siphash64 with a single integer, same as &lt;code&gt;salt=[133, 133]&lt;/code&gt;</source>
          <target state="translated">예 (단일 정수를 사용하는 Siphash64, &lt;code&gt;salt=[133, 133]&lt;/code&gt; 와 동일 )</target>
        </trans-unit>
        <trans-unit id="8ef2e1210c47909b18d1b60b9c30a0116c39a246" translate="yes" xml:space="preserve">
          <source>Example 1:</source>
          <target state="translated">예 1 :</target>
        </trans-unit>
        <trans-unit id="da5ccd8cab037ca820324afb7dcac63b912e00e1" translate="yes" xml:space="preserve">
          <source>Example 1: Dump tensor data from only MatMul and Relu ops &lt;code&gt;op_regex=&quot;^(MatMul|Relu)$&quot;&lt;/code&gt;.</source>
          <target state="translated">예 1 : MatMul 및 Relu ops &lt;code&gt;op_regex=&quot;^(MatMul|Relu)$&quot;&lt;/code&gt; 에서만 텐서 데이터를 덤프하십시오 .</target>
        </trans-unit>
        <trans-unit id="00f2824ef36718d7b7d0ce5ea9877431abcb6311" translate="yes" xml:space="preserve">
          <source>Example 1: Plain reading and writing.</source>
          <target state="translated">예 1 : 일반 읽기 및 쓰기.</target>
        </trans-unit>
        <trans-unit id="54793e4dba84f7eb76a0c7f033fb712c51563cbd" translate="yes" xml:space="preserve">
          <source>Example 1: Training models with weights merge on CPU</source>
          <target state="translated">예 1 : 가중치가있는 교육 모델이 CPU에서 병합</target>
        </trans-unit>
        <trans-unit id="5d3ce3e08ccb49fe9b24c378131cf033db05e0d0" translate="yes" xml:space="preserve">
          <source>Example 1: When &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are matrices (order 2), the case &lt;code&gt;axes = 1&lt;/code&gt; is equivalent to matrix multiplication.</source>
          <target state="translated">예 1 : &lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 가 행렬 인 경우 (차수 2), 케이스 &lt;code&gt;axes = 1&lt;/code&gt; 은 행렬 곱셈과 같습니다.</target>
        </trans-unit>
        <trans-unit id="44aa2a3d8bb3df8026afff479956490d45243b1b" translate="yes" xml:space="preserve">
          <source>Example 1: calling &lt;code&gt;clear_session()&lt;/code&gt; when creating models in a loop</source>
          <target state="translated">예제 1 : 루프에서 모델을 만들 때 &lt;code&gt;clear_session()&lt;/code&gt; 호출</target>
        </trans-unit>
        <trans-unit id="8576e377acadb06ae63ce3356fa61a5f7c100a8d" translate="yes" xml:space="preserve">
          <source>Example 1: plain reading and writing.</source>
          <target state="translated">예 1 : 읽기 및 쓰기</target>
        </trans-unit>
        <trans-unit id="e11895e8b0e4fd9700bfd1eef21691b78b345f1b" translate="yes" xml:space="preserve">
          <source>Example 2:</source>
          <target state="translated">예 2 :</target>
        </trans-unit>
        <trans-unit id="a0072322bb33224e627486eea8196e2cef187111" translate="yes" xml:space="preserve">
          <source>Example 2: Dump tensors from all ops &lt;em&gt;except&lt;/em&gt; Relu: &lt;code&gt;op_regex=&quot;(?!^Relu$)&quot;&lt;/code&gt;. This filter operates in a logical AND relation with &lt;code&gt;tensor_dtypes&lt;/code&gt;.</source>
          <target state="translated">예 2 : Relu : &lt;code&gt;op_regex=&quot;(?!^Relu$)&quot;&lt;/code&gt; &lt;em&gt;제외한&lt;/em&gt; 모든 op에서 텐서를 덤프 합니다. 이 필터는 &lt;code&gt;tensor_dtypes&lt;/code&gt; 와 논리적 AND 관계로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="fa5225a972efb4ae38389305cf614f741f3d1a81" translate="yes" xml:space="preserve">
          <source>Example 2: Fibonacci sequence algorithm that writes in a loop then returns.</source>
          <target state="translated">예제 2 : 루프에 쓰고 피보나치 시퀀스 알고리즘을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="515816f78c8886d90b64cb87784a0e52b994e92b" translate="yes" xml:space="preserve">
          <source>Example 2: Training models with weights merge on CPU using cpu_relocation</source>
          <target state="translated">예 2 : cpu_relocation을 사용하여 가중치가있는 훈련 모델이 CPU에서 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="00f4b73ff4f42e9b3ac7b8892c354d447dfc1b6e" translate="yes" xml:space="preserve">
          <source>Example 2: When &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are matrices (order 2), the case &lt;code&gt;axes = [[1], [0]]&lt;/code&gt; is equivalent to matrix multiplication.</source>
          <target state="translated">예 2 : &lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 가 행렬 인 경우 (차수 2), 경우 &lt;code&gt;axes = [[1], [0]]&lt;/code&gt; 은 행렬 곱셈과 같습니다.</target>
        </trans-unit>
        <trans-unit id="48f04df33e3c0cd0666c729b322b6e7bf863b56e" translate="yes" xml:space="preserve">
          <source>Example 2: resetting the layer name generation counter</source>
          <target state="translated">예 2 : 레이어 이름 생성 카운터 재설정</target>
        </trans-unit>
        <trans-unit id="05cc9414d73f94556c9a7ce298c76f13bcc30b6c" translate="yes" xml:space="preserve">
          <source>Example 2: temporal regression. Consider an array &lt;code&gt;data&lt;/code&gt; of scalar values, of shape &lt;code&gt;(steps,)&lt;/code&gt;. To generate a dataset that uses the past 10 timesteps to predict the next timestep, you would use:</source>
          <target state="translated">예 2 : 시간 회귀. 스칼라 값의 형태 &lt;code&gt;(steps,)&lt;/code&gt; 배열 &lt;code&gt;data&lt;/code&gt; 를 고려 하십시오 . 지난 10 개의 시간 단계를 사용하여 다음 시간 단계를 예측하는 데이터 세트를 생성하려면 다음을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="1d4166bf97179d81c42dccef3ab9d1594a5dec5d" translate="yes" xml:space="preserve">
          <source>Example 3:</source>
          <target state="translated">예 3 :</target>
        </trans-unit>
        <trans-unit id="73c9fd171924cd42c9e1951075109ba86ba1baf9" translate="yes" xml:space="preserve">
          <source>Example 3: A simple loop interacting with a &lt;a href=&quot;variable&quot;&gt;&lt;code&gt;tf.Variable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">예제 3 : &lt;a href=&quot;variable&quot;&gt; &lt;code&gt;tf.Variable&lt;/code&gt; &lt;/a&gt; 과 상호 작용하는 간단한 루프 .</target>
        </trans-unit>
        <trans-unit id="2a96c081d4f4394bb3b52f2f3107ea003ee80610" translate="yes" xml:space="preserve">
          <source>Example 3: A simple loop interacting with a tf.Variable.</source>
          <target state="translated">예 3 : tf.Variable과 상호 작용하는 간단한 루프.</target>
        </trans-unit>
        <trans-unit id="518a9d9961987c5c80745f1ee48711b13ff01f7d" translate="yes" xml:space="preserve">
          <source>Example 3: Training models with weights merge on GPU (recommended for NV-link)</source>
          <target state="translated">예 3 : 가중치가있는 교육 모델이 GPU에서 병합됩니다 (NV- 링크에 권장)</target>
        </trans-unit>
        <trans-unit id="8bc402b2102c57373c5203d5cf2a384bbae75dfc" translate="yes" xml:space="preserve">
          <source>Example 3: When &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are matrices (order 2), the case &lt;code&gt;axes=0&lt;/code&gt; gives the outer product, a tensor of order 4.</source>
          <target state="translated">예 3 : &lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 가 행렬 (2 차) 인 경우, &lt;code&gt;axes=0&lt;/code&gt; 은 차수 4의 텐서 인 외부 곱을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9f56d8c4e40812933a18ec960fa550620bea44e5" translate="yes" xml:space="preserve">
          <source>Example 4: Suppose that \(a_{ijk}\) and \(b_{lmn}\) represent two tensors of order 3. Then, &lt;code&gt;contract(a, b, [[0], [2]])&lt;/code&gt; is the order 4 tensor \(c_{jklm}\) whose entry corresponding to the indices \((j,k,l,m)\) is given by:</source>
          <target state="translated">예 4 : \ (a_ {ijk} \) 및 \ (b_ {lmn} \)이 순서 3의 두 텐서를 나타내는 것으로 가정합니다. 그러면 &lt;code&gt;contract(a, b, [[0], [2]])&lt;/code&gt; 가 순서입니다 인덱스 \ ((j, k, l, m) \)에 해당하는 엔트리를 갖는 텐서 \ (c_ {jklm} \)는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="30d9e9e6f4ce5ea49de6402830c224a348be7a83" translate="yes" xml:space="preserve">
          <source>Example Usage:</source>
          <target state="translated">사용법 예 :</target>
        </trans-unit>
        <trans-unit id="72c9431a353d348bf8c4106eea5b09e0b7f2778c" translate="yes" xml:space="preserve">
          <source>Example Use with canned &lt;a href=&quot;dnnestimator&quot;&gt;&lt;code&gt;tf.estimator.DNNEstimator&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">미리 준비된 &lt;a href=&quot;dnnestimator&quot;&gt; &lt;code&gt;tf.estimator.DNNEstimator&lt;/code&gt; &lt;/a&gt; 와 함께 사용 :</target>
        </trans-unit>
        <trans-unit id="a12ac3226f96243d920a907c8a0e054170d6de2a" translate="yes" xml:space="preserve">
          <source>Example docstring for subclasses.</source>
          <target state="translated">서브 클래스에 대한 예제 docstring.</target>
        </trans-unit>
        <trans-unit id="3296a393ddb54725a2f31cf8e8df73eebb8bf7a1" translate="yes" xml:space="preserve">
          <source>Example for the basic usage that &lt;code&gt;inputs&lt;/code&gt; has static shape:</source>
          <target state="translated">&lt;code&gt;inputs&lt;/code&gt; 이 정적 형태를 갖는 기본 사용법의 예 :</target>
        </trans-unit>
        <trans-unit id="428a9c1753100388a07947adc9c9b9cad373af77" translate="yes" xml:space="preserve">
          <source>Example in overridden &lt;a href=&quot;../model#train_step&quot;&gt;&lt;code&gt;Model.train_step&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">재정의 된 &lt;a href=&quot;../model#train_step&quot;&gt; &lt;code&gt;Model.train_step&lt;/code&gt; 의&lt;/a&gt; 예 :</target>
        </trans-unit>
        <trans-unit id="2470add2c6a58385f524faf02b9f161d2b9bc41e" translate="yes" xml:space="preserve">
          <source>Example of &lt;code&gt;TF_CONFIG&lt;/code&gt; for chief training worker (must have one and only one):</source>
          <target state="translated">최고 교육 담당자를위한 &lt;code&gt;TF_CONFIG&lt;/code&gt; 의 예 ( 하나만 있어야 함) :</target>
        </trans-unit>
        <trans-unit id="e4cae7f2cb3eaf2c3f14687c6350d50e604ce166" translate="yes" xml:space="preserve">
          <source>Example of &lt;code&gt;TF_CONFIG&lt;/code&gt; for evaluator task. Evaluator is a special task that is not part of the training cluster. There could be only one. It is used for model evaluation.</source>
          <target state="translated">평가자 태스크를위한 &lt;code&gt;TF_CONFIG&lt;/code&gt; 의 예 . 평가자는 교육 클러스터의 일부가 아닌 특수한 작업입니다. 하나만있을 수 있습니다. 모델 평가에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ef2f1dc4fba9e75335a84bfba753831e0da2c4a4" translate="yes" xml:space="preserve">
          <source>Example of &lt;code&gt;TF_CONFIG&lt;/code&gt; for non-chief training worker (optional, could be multiple):</source>
          <target state="translated">비 핵심 훈련 작업자를위한 &lt;code&gt;TF_CONFIG&lt;/code&gt; 의 예 (선택 사항, 복수 일 수 있음) :</target>
        </trans-unit>
        <trans-unit id="ded11bc3e41cf55332a58d41ca020fcd2188cd47" translate="yes" xml:space="preserve">
          <source>Example of &lt;code&gt;TF_CONFIG&lt;/code&gt; for parameter server, aka ps (could be multiple):</source>
          <target state="translated">매개 변수 서버, 즉 ps (여러 개일 수 있음)에 대한 &lt;code&gt;TF_CONFIG&lt;/code&gt; 의 예 :</target>
        </trans-unit>
        <trans-unit id="abc3473fe9e86406df846110504f296764db37be" translate="yes" xml:space="preserve">
          <source>Example of &lt;code&gt;separate_compiled_gradients&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;separate_compiled_gradients&lt;/code&gt; 의 예 :</target>
        </trans-unit>
        <trans-unit id="379a2f6a98c8e26698ce4b95cb603e6934140326" translate="yes" xml:space="preserve">
          <source>Example of Hermitian spectrum</source>
          <target state="translated">은자 스펙트럼의 예</target>
        </trans-unit>
        <trans-unit id="410ba918bf6ec843555f4b7293b763b00b8cc2ef" translate="yes" xml:space="preserve">
          <source>Example of a Toeplitz operator.</source>
          <target state="translated">Toeplitz 연산자의 예</target>
        </trans-unit>
        <trans-unit id="85f83dfee4e4a7f3dc6a9fe829210faa673ca277" translate="yes" xml:space="preserve">
          <source>Example of a self-adjoint positive definite operator</source>
          <target state="translated">자체 인접 양수 한정 연산자의 예</target>
        </trans-unit>
        <trans-unit id="bd71b08b62b75e20a6fe472c0485a74694a90a9a" translate="yes" xml:space="preserve">
          <source>Example of adding a dependency to an operation:</source>
          <target state="translated">오퍼레이션에 종속성을 추가하는 예 :</target>
        </trans-unit>
        <trans-unit id="19b1020ef2b58eb6f4263d8e0a075a3c4bb220fe" translate="yes" xml:space="preserve">
          <source>Example of checkpointing the training pipeline:</source>
          <target state="translated">교육 파이프 라인 검사 점의 예 :</target>
        </trans-unit>
        <trans-unit id="e58777718a24aefbe5a8f18566dd1948a1ccda1d" translate="yes" xml:space="preserve">
          <source>Example of chief node:</source>
          <target state="translated">수석 노드의 예 :</target>
        </trans-unit>
        <trans-unit id="598ad303ca20efc27a6504a95d01c0ebffb9a01c" translate="yes" xml:space="preserve">
          <source>Example of creating a BestExporter for training and evaluation:</source>
          <target state="translated">교육 및 평가를위한 BestExporter 작성 예 :</target>
        </trans-unit>
        <trans-unit id="c12f0c5dc38b2d562905eaf2ecae6ab52735894e" translate="yes" xml:space="preserve">
          <source>Example of defining in terms of a real convolution kernel</source>
          <target state="translated">실제 컨볼 루션 커널로 정의하는 예</target>
        </trans-unit>
        <trans-unit id="a787a1cecc5ed812272f0d7761614b0f57551910" translate="yes" xml:space="preserve">
          <source>Example of defining in terms of a real convolution kernel,</source>
          <target state="translated">실제 컨볼 루션 커널로 정의하는 예,</target>
        </trans-unit>
        <trans-unit id="0d1833ce48bd953f7fd46604bc9bce116e25b3c1" translate="yes" xml:space="preserve">
          <source>Example of distributed training:</source>
          <target state="translated">분산 교육의 예 :</target>
        </trans-unit>
        <trans-unit id="ecde918e06456ccf3e309b6af50e5db3b7c87f0a" translate="yes" xml:space="preserve">
          <source>Example of evaluator node (evaluator is not part of training cluster):</source>
          <target state="translated">평가자 노드의 예 (평가자는 교육 클러스터의 일부가 아님) :</target>
        </trans-unit>
        <trans-unit id="daaacb4ed6b5ae6e3e41fcd268463fb2ccc0f877" translate="yes" xml:space="preserve">
          <source>Example of forcing real &lt;code&gt;dtype&lt;/code&gt; when spectrum is Hermitian</source>
          <target state="translated">스펙트럼이 에르 미트 인 경우 실제 &lt;code&gt;dtype&lt;/code&gt; 을 강제하는 예</target>
        </trans-unit>
        <trans-unit id="918b8c1d76391d7274c5d707b3918475217ced2f" translate="yes" xml:space="preserve">
          <source>Example of local (non-distributed) training:</source>
          <target state="translated">지역 (비 분산) 교육의 예 :</target>
        </trans-unit>
        <trans-unit id="e010de83f03e8242af1897d4347b3a81d8ac97e5" translate="yes" xml:space="preserve">
          <source>Example of non-chief node:</source>
          <target state="translated">비 주요 노드의 예 :</target>
        </trans-unit>
        <trans-unit id="d0e3466008dace46e07f808a1f06c480bbbb79c1" translate="yes" xml:space="preserve">
          <source>Example of overriding the generated code for an Op.</source>
          <target state="translated">Op에 대해 생성 된 코드를 대체하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="f6cf4690fc42df9a6f19c4ccafdd420bd4e92fac" translate="yes" xml:space="preserve">
          <source>Example of restoring the shadow variable values:</source>
          <target state="translated">그림자 변수 값을 복원하는 예 :</target>
        </trans-unit>
        <trans-unit id="f8e92e4b9c782e54338b631c928bc19d13a6a181" translate="yes" xml:space="preserve">
          <source>Example of separate_compiled_gradients: # In the example below, the computations for f, g and h will all be compiled # in separate scopes. with tf.xla.experimental.jit_scope( separate_compiled_gradients=True): f = tf.matmul(a, b) g = tf.gradients([f], [a, b], name='mygrads1') h = tf.gradients([f], [a, b], name='mygrads2')</source>
          <target state="translated">apart_compiled_gradients의 예 : # 아래 예에서 f, g 및 h에 대한 계산은 모두 별도의 범위에서 컴파일됩니다. tf.xla.experimental.jit_scope (separate_compiled_gradients = True) : f = tf.matmul (a, b) g = tf.gradients ([f], [a, b], name = 'mygrads1') h = tf. 그라디언트 ([f], [a, b], name = 'mygrads2')</target>
        </trans-unit>
        <trans-unit id="7bea3d481c7a2794a987da82b4e5f8d462a88cb7" translate="yes" xml:space="preserve">
          <source>Example of transforming images and masks together.</source>
          <target state="translated">이미지와 마스크를 함께 변환하는 예.</target>
        </trans-unit>
        <trans-unit id="ec1136270e452edec85ece96cdcd819465f02495" translate="yes" xml:space="preserve">
          <source>Example of usage:</source>
          <target state="translated">사용 예 :</target>
        </trans-unit>
        <trans-unit id="c0322b2251169a4535d936bc1bccd14d484afce5" translate="yes" xml:space="preserve">
          <source>Example of using &lt;code&gt;.flow(x, y)&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;.flow(x, y)&lt;/code&gt; 사용 예 :</target>
        </trans-unit>
        <trans-unit id="c0865312d276fd0319aad510a1030d3d4f8c75ff" translate="yes" xml:space="preserve">
          <source>Example of using &lt;code&gt;.flow_from_directory(directory)&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;.flow_from_directory(directory)&lt;/code&gt; 사용 예 :</target>
        </trans-unit>
        <trans-unit id="17ee9c7dc231b0022d7e16e963e816d3352760d2" translate="yes" xml:space="preserve">
          <source>Example output of parsing spec:</source>
          <target state="translated">구문 분석 스펙의 출력 예 :</target>
        </trans-unit>
        <trans-unit id="fc7841c33080ffba2d1a0ca228445d0e2ddf4147" translate="yes" xml:space="preserve">
          <source>Example subclass implementation:</source>
          <target state="translated">서브 클래스 구현 예 :</target>
        </trans-unit>
        <trans-unit id="23a6730f497d34a35c741cd2b9796963be0ff9b6" translate="yes" xml:space="preserve">
          <source>Example that generates a new set of random values every time:</source>
          <target state="translated">매번 새로운 무작위 값 세트를 생성하는 예 :</target>
        </trans-unit>
        <trans-unit id="c24c06aaebac8148ec7e01e32b14230d85a014e6" translate="yes" xml:space="preserve">
          <source>Example that outputs a reproducible result:</source>
          <target state="translated">재현 가능한 결과를 출력하는 예 :</target>
        </trans-unit>
        <trans-unit id="763eb5d5b2e48beaa61334211d57a0c9e577b80f" translate="yes" xml:space="preserve">
          <source>Example usage (CPU/GPU):</source>
          <target state="translated">사용 예 (CPU / GPU) :</target>
        </trans-unit>
        <trans-unit id="f4fc0aed6d9786af922825e910e0abddb6daeae3" translate="yes" xml:space="preserve">
          <source>Example usage of custom metric which uses features:</source>
          <target state="translated">기능을 사용하는 맞춤 측정 항목의 사용 예 :</target>
        </trans-unit>
        <trans-unit id="527331abb9a52bf41a6b1416d788e85f6a63201e" translate="yes" xml:space="preserve">
          <source>Example usage when creating a training model:</source>
          <target state="translated">교육 모델을 만들 때 사용 예 :</target>
        </trans-unit>
        <trans-unit id="50bc38165379f784619be50f96100e5733f89c78" translate="yes" xml:space="preserve">
          <source>Example usage when graph building:</source>
          <target state="translated">그래프 작성시 사용법 예 :</target>
        </trans-unit>
        <trans-unit id="d491a17cd1bf3dfee0c39d0be6f0237a61eac0da" translate="yes" xml:space="preserve">
          <source>Example usage with &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; graph execution:</source>
          <target state="translated">&lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; 그래프 실행의 사용법 예 :</target>
        </trans-unit>
        <trans-unit id="3d925e2167606d6281c7a1f9f1e3722e50282b90" translate="yes" xml:space="preserve">
          <source>Example usage with a classifier:</source>
          <target state="translated">분류기를 사용한 사용 예 :</target>
        </trans-unit>
        <trans-unit id="3dd8e2ddb23eb53f7b94afc131020ea44347eb1d" translate="yes" xml:space="preserve">
          <source>Example usage with a regressor:</source>
          <target state="translated">회귀 자의 사용법 예 :</target>
        </trans-unit>
        <trans-unit id="e115860bfdc04344656cefb82bb56606592684c7" translate="yes" xml:space="preserve">
          <source>Example usage with eager execution enabled:</source>
          <target state="translated">열망하는 실행을 사용한 사용 예 :</target>
        </trans-unit>
        <trans-unit id="8f636fd517a7e7db44a40549cdde033c8ec480ba" translate="yes" xml:space="preserve">
          <source>Example usage with eager execution, the default in TF 2.0:</source>
          <target state="translated">TF 2.0의 기본값 인 간결한 실행 사용 예 :</target>
        </trans-unit>
        <trans-unit id="cc4b7b9efd8878f1980dc8448f032a1237ad9ca9" translate="yes" xml:space="preserve">
          <source>Example usage with legacy TF 1.x graph execution:</source>
          <target state="translated">레거시 TF 1.x 그래프 실행의 사용 예 :</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">사용법 예 :</target>
        </trans-unit>
        <trans-unit id="83c760bcfee1aeea54f4dc68746006988fa4120c" translate="yes" xml:space="preserve">
          <source>Example usage: ```python tf.profiler.experimental.server.start('6009') # do your training here.</source>
          <target state="translated">사용 예 :```python tf.profiler.experimental.server.start ( '6009') # 여기서 훈련하십시오.</target>
        </trans-unit>
        <trans-unit id="23f9d603e16f8ef16b61cb7dd71733745d6dc774" translate="yes" xml:space="preserve">
          <source>Example use:</source>
          <target state="translated">사용 예 :</target>
        </trans-unit>
        <trans-unit id="45bdc51ed832749b92021e3dd981f9c56dedbdf5" translate="yes" xml:space="preserve">
          <source>Example using shape_invariants:</source>
          <target state="translated">shape_invariants를 사용하는 예 :</target>
        </trans-unit>
        <trans-unit id="56f2357642c5f96165493821d43a89ed35fbd56e" translate="yes" xml:space="preserve">
          <source>Example which demonstrates non-strict semantics: In the following example, the final value of the counter &lt;code&gt;i&lt;/code&gt; does not depend on &lt;code&gt;x&lt;/code&gt;. So the &lt;code&gt;while_loop&lt;/code&gt; can increment the counter parallel to updates of &lt;code&gt;x&lt;/code&gt;. However, because the loop counter at one loop iteration depends on the value at the previous iteration, the loop counter itself cannot be incremented in parallel. Hence if we just want the final value of the counter (which we print on the line &lt;code&gt;print(sess.run(i))&lt;/code&gt;), then &lt;code&gt;x&lt;/code&gt; will never be incremented, but the counter will be updated on a single thread. Conversely, if we want the value of the output (which we print on the line &lt;code&gt;print(sess.run(out).shape)&lt;/code&gt;), then the counter may be incremented on its own thread, while &lt;code&gt;x&lt;/code&gt; can be incremented in parallel on a separate thread. In the extreme case, it is conceivable that the thread incrementing the counter runs until completion before &lt;code&gt;x&lt;/code&gt; is incremented even a single time. The only thing that can never happen is that the thread updating &lt;code&gt;x&lt;/code&gt; can never get ahead of the counter thread because the thread incrementing &lt;code&gt;x&lt;/code&gt; depends on the value of the counter.</source>
          <target state="translated">엄격하지 않은 의미를 보여주는 예 : 다음 예에서 카운터 &lt;code&gt;i&lt;/code&gt; 의 최종 값은 &lt;code&gt;x&lt;/code&gt; 에 의존하지 않습니다 . 따라서 &lt;code&gt;while_loop&lt;/code&gt; 는 &lt;code&gt;x&lt;/code&gt; 업데이트와 병렬로 카운터를 증가 시킬 수 있습니다 . 그러나 한 루프 반복의 루프 카운터는 이전 반복의 값에 따라 다르므로 루프 카운터 자체를 병렬로 증분 할 수 없습니다. 우리가 (우리가 라인에 인쇄 카운터의 최종 값 원하는 따라서 경우 &lt;code&gt;print(sess.run(i))&lt;/code&gt; , 다음) &lt;code&gt;x&lt;/code&gt; 증가되지 않습니다,하지만 카운터는 단일 스레드에 업데이트됩니다. 반대로 출력 값을 원하면 &lt;code&gt;print(sess.run(out).shape)&lt;/code&gt; 행에 인쇄합니다)), 카운터는 자체 스레드에서 증가 될 수있는 반면 &lt;code&gt;x&lt;/code&gt; 는 별도의 스레드에서 병렬로 증가 될 수 있습니다. 극단적 인 경우, &lt;code&gt;x&lt;/code&gt; 를 한 번이라도 증분 하기 전에 카운터를 증분하는 스레드가 완료 될 때까지 실행되는 것으로 생각할 수 있습니다. 결코 일어날 수있는 유일한 방법은 스레드 업데이트이다 &lt;code&gt;x&lt;/code&gt; 가 증가 스레드 때문에 앞서 카운터 스레드 얻을 수 없다 &lt;code&gt;x&lt;/code&gt; 는 카운터의 값에 따라 달라집니다.</target>
        </trans-unit>
        <trans-unit id="4a3b161e7903a377f4897fa329d44f597e09c69b" translate="yes" xml:space="preserve">
          <source>Example with &lt;code&gt;default_value&lt;/code&gt;: File '/us/states.txt' contains 51 lines - the first line is 'XX', and the other 50 each have a 2-character U.S. state abbreviation. Both a literal 'XX' in input, and other values missing from the file, will be assigned ID 0. All others are assigned the corresponding line number 1-50.</source>
          <target state="translated">&lt;code&gt;default_value&lt;/code&gt; 가있는 예 : 파일 '/us/states.txt'에는 51 줄이 포함되어 있습니다. 첫 번째 줄은 'XX'이고 다른 50 줄은 각각 2 자 미국 상태 약어입니다. 입력의 리터럴 'XX'와 파일에서 누락 된 다른 값 모두에 ID 0이 지정됩니다. 다른 모든 항목에는 해당 행 번호 1-50이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="3692e468e65c6e00dbcc913dca39948c41e9a2c8" translate="yes" xml:space="preserve">
          <source>Example with &lt;code&gt;default_value&lt;/code&gt;: File &lt;code&gt;'/us/states.txt'&lt;/code&gt; contains 51 lines - the first line is &lt;code&gt;'XX'&lt;/code&gt;, and the other 50 each have a 2-character U.S. state abbreviation. Both a literal &lt;code&gt;'XX'&lt;/code&gt; in input, and other values missing from the file, will be assigned ID 0. All others are assigned the corresponding line number 1-50.</source>
          <target state="translated">&lt;code&gt;default_value&lt;/code&gt; 가있는 예 : 파일 &lt;code&gt;'/us/states.txt'&lt;/code&gt; 에는 51 개의 행이 포함되어 있습니다. 첫 번째 행은 &lt;code&gt;'XX'&lt;/code&gt; 이고 나머지 50 개는 각각 2 자로 된 미국 상태 약어입니다. 입력 의 리터럴 &lt;code&gt;'XX'&lt;/code&gt; 와 파일에서 누락 된 다른 값 모두에 ID 0이 지정됩니다. 다른 모든 항목에는 해당 행 번호 1-50이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="0bcd2321ebb901af6f07ff3194e39b45e4583569" translate="yes" xml:space="preserve">
          <source>Example with &lt;code&gt;default_value&lt;/code&gt;: In the following example, each input in &lt;code&gt;vocabulary_list&lt;/code&gt; is assigned an ID 0-4 corresponding to its index (e.g., input 'B' produces output 3). All other inputs are assigned &lt;code&gt;default_value&lt;/code&gt; 0.</source>
          <target state="translated">&lt;code&gt;default_value&lt;/code&gt; 가있는 예 : 다음 예에서 &lt;code&gt;vocabulary_list&lt;/code&gt; 의 각 입력에는 색인에 해당하는 ID 0-4가 지정됩니다 (예 : 입력 'B'는 출력 3을 생성 함). 다른 모든 입력에는 &lt;code&gt;default_value&lt;/code&gt; 0 이 할당됩니다 .</target>
        </trans-unit>
        <trans-unit id="041df3298d747f84dc836614f9a8d0706b82bb0c" translate="yes" xml:space="preserve">
          <source>Example with &lt;code&gt;num_oov_buckets&lt;/code&gt;: File '/us/states.txt' contains 50 lines, each with a 2-character U.S. state abbreviation. All inputs with values in that file are assigned an ID 0-49, corresponding to its line number. All other values are hashed and assigned an ID 50-54.</source>
          <target state="translated">&lt;code&gt;num_oov_buckets&lt;/code&gt; 의 예 : 파일 '/us/states.txt'에는 각각 50 자로 된 줄이 포함되어 있으며 각 줄에는 2 자 미국 약어가 있습니다. 해당 파일에 값이있는 모든 입력에는 줄 번호에 해당하는 ID 0-49가 할당됩니다. 다른 모든 값은 해시되며 ID 50-54가 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="93f561d6bc93f5cf5b940311eba631bc8eebd85e" translate="yes" xml:space="preserve">
          <source>Example with &lt;code&gt;num_oov_buckets&lt;/code&gt;: File &lt;code&gt;'/us/states.txt'&lt;/code&gt; contains 50 lines, each with a 2-character U.S. state abbreviation. All inputs with values in that file are assigned an ID 0-49, corresponding to its line number. All other values are hashed and assigned an ID 50-54.</source>
          <target state="translated">&lt;code&gt;num_oov_buckets&lt;/code&gt; 의 예 : 파일 &lt;code&gt;'/us/states.txt'&lt;/code&gt; 에는 각각 50 자로 된 줄이 포함되어 있으며 각 줄에는 2 자의 미국 약어가 있습니다. 해당 파일에 값이있는 모든 입력에는 줄 번호에 해당하는 ID 0-49가 할당됩니다. 다른 모든 값은 해시되며 ID 50-54가 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="8dba832f3b5e04108a0e19946d3c85263dad3f49" translate="yes" xml:space="preserve">
          <source>Example with &lt;code&gt;num_oov_buckets&lt;/code&gt;: In the following example, each input in &lt;code&gt;vocabulary_list&lt;/code&gt; is assigned an ID 0-3 corresponding to its index (e.g., input 'B' produces output 2). All other inputs are hashed and assigned an ID 4-5.</source>
          <target state="translated">&lt;code&gt;num_oov_buckets&lt;/code&gt; 를 사용한 예 : 다음 예에서 &lt;code&gt;vocabulary_list&lt;/code&gt; 의 각 입력에는 색인에 해당하는 ID 0-3이 지정됩니다 (예 : 입력 'B'는 출력 2를 생성 함). 다른 모든 입력은 해시되고 ID 4-5가 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="d23061b7cd392ab5eb922c8ff6543c34bdcb5a2d" translate="yes" xml:space="preserve">
          <source>Example with nesting and a namedtuple:</source>
          <target state="translated">중첩과 명명 된 튜플의 예 :</target>
        </trans-unit>
        <trans-unit id="a72363b38997b4f64381ddc4dee5e0c9078d4238" translate="yes" xml:space="preserve">
          <source>Example with two replicas: Replica 0 &lt;code&gt;value&lt;/code&gt;: {'a': 1, 'b': [40, 1]} Replica 1 &lt;code&gt;value&lt;/code&gt;: {'a': 3, 'b': [ 2, 98]}</source>
          <target state="translated">복제본이 두 개인 예 : 복제본 0 &lt;code&gt;value&lt;/code&gt; : { 'a': 1, 'b': [40, 1]} 복제본 1 &lt;code&gt;value&lt;/code&gt; : { 'a': 3, 'b': [2, 98]}</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="c507dcbf8c6dab62a26b1aeddf57994497c904a7" translate="yes" xml:space="preserve">
          <source>Example: (&lt;code&gt;depth&lt;/code&gt; is a tuple/list of integers) With the same input above, and if &lt;code&gt;depth&lt;/code&gt;=(2, 3) the output will be a list of 4 string tensors: &lt;code&gt;[[b'1_X_2'], [b'4_X_5']]&lt;/code&gt;, &lt;code&gt;[[b'2_X_3'], [b'5_X_6']]&lt;/code&gt;, &lt;code&gt;[[b'3_X_1'], [b'6_X_4']]&lt;/code&gt;, &lt;code&gt;[[b'1_X_2_X_3'], [b'4_X_5_X_6']]&lt;/code&gt;</source>
          <target state="translated">예 : ( &lt;code&gt;depth&lt;/code&gt; 는 튜플 / 정수 목록) 위와 동일한 입력을 사용하고 &lt;code&gt;depth&lt;/code&gt; = (2, 3)이면 출력은 4 개의 문자열 텐서 목록이됩니다. &lt;code&gt;[[b'1_X_2'], [b'4_X_5']]&lt;/code&gt; , &lt;code&gt;[[b'2_X_3'], [b'5_X_6']]&lt;/code&gt; , &lt;code&gt;[[b'3_X_1'], [b'6_X_4']]&lt;/code&gt; , &lt;code&gt;[[b'1_X_2_X_3'], [b'4_X_5_X_6']]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8658bae51974acc059803a94aa98b93309fee6d8" translate="yes" xml:space="preserve">
          <source>Example: (&lt;code&gt;depth&lt;/code&gt; is an integer) With the same input above, and if &lt;code&gt;depth&lt;/code&gt;=2, the output will be a list of 6 string tensors: &lt;code&gt;[[b'1'], [b'4']]&lt;/code&gt;&lt;code&gt;[[b'2'], [b'5']]&lt;/code&gt;&lt;code&gt;[[b'3'], [b'6']]&lt;/code&gt;&lt;code&gt;[[b'1_X_2'], [b'4_X_5']]&lt;/code&gt;, &lt;code&gt;[[b'2_X_3'], [b'5_X_6']]&lt;/code&gt;, &lt;code&gt;[[b'3_X_1'], [b'6_X_4']]&lt;/code&gt;</source>
          <target state="translated">예 : ( &lt;code&gt;depth&lt;/code&gt; 는 정수) 위와 동일한 입력을 사용하고 &lt;code&gt;depth&lt;/code&gt; = 2이면 출력은 6 개의 문자열 텐서 목록이됩니다. &lt;code&gt;[[b'1'], [b'4']]&lt;/code&gt; &lt;code&gt;[[b'2'], [b'5']]&lt;/code&gt; &lt;code&gt;[[b'3'], [b'6']]&lt;/code&gt; &lt;code&gt;[[b'1_X_2'], [b'4_X_5']]&lt;/code&gt; , &lt;code&gt;[[b'2_X_3'], [b'5_X_6']]&lt;/code&gt; , &lt;code&gt;[[b'3_X_1'], [b'6_X_4']]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f932f20a3593b81060616a973ebd451c6b19358b" translate="yes" xml:space="preserve">
          <source>Example: (&lt;code&gt;depth&lt;/code&gt;=None) If the layer receives three inputs: &lt;code&gt;a=[[1], [4]]&lt;/code&gt;, &lt;code&gt;b=[[2], [5]]&lt;/code&gt;, &lt;code&gt;c=[[3], [6]]&lt;/code&gt; the output will be a string tensor: &lt;code&gt;[[b'1_X_2_X_3'], [b'4_X_5_X_6']]&lt;/code&gt;</source>
          <target state="translated">예 : ( &lt;code&gt;depth&lt;/code&gt; = 없음) 층이 3 개 개의 입력받은 경우 : &lt;code&gt;a=[[1], [4]]&lt;/code&gt; , &lt;code&gt;b=[[2], [5]]&lt;/code&gt; , &lt;code&gt;c=[[3], [6]]&lt;/code&gt; 출력은 문자열 텐서입니다. &lt;code&gt;[[b'1_X_2_X_3'], [b'4_X_5_X_6']]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="567d171adb2f3af5c831c8014d6d2644694164d6" translate="yes" xml:space="preserve">
          <source>Example: - [0, 1, 1] and [1, 0, 1] compare equal. - [0, 0, 1] and [0, 1] compare unequal.</source>
          <target state="translated">예 :-[0, 1, 1]과 [1, 0, 1]이 같은 것을 비교합니다. -[0, 0, 1]과 [0, 1]이 같지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c9f9b94d080f139845f4dafcda33f41b366ff378" translate="yes" xml:space="preserve">
          <source>Example: Create summaries manually every 100 steps in the chief.</source>
          <target state="translated">예 : 치프의 100 단계마다 수동으로 요약을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="173aca822521be5b122b73f49f1871722c08366e" translate="yes" xml:space="preserve">
          <source>Example: Print selected summary values.</source>
          <target state="translated">예 : 선택한 요약 값을 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="a784b5743567dd18b16e6d3b489c110a8d1c990b" translate="yes" xml:space="preserve">
          <source>Example: Print the contents of an events file.</source>
          <target state="translated">예 : 이벤트 파일의 내용을 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="ce3ba84d0b17d8bc4d409ce764e426e1c5492185" translate="yes" xml:space="preserve">
          <source>Example: Run IO ops on &quot;localhost&quot; while saving a checkpoint:</source>
          <target state="translated">예 : 체크 포인트를 저장하는 동안 &quot;localhost&quot;에서 IO 작업을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="95e6fc1b2b82b717f6610ef6179737c68ecbc81b" translate="yes" xml:space="preserve">
          <source>Example: Start a thread to print losses. We want this thread to run every 60 seconds, so we launch it with &lt;code&gt;sv.loop()&lt;/code&gt;.</source>
          <target state="translated">예 : 실을 시작하여 손실을 인쇄하십시오. 이 스레드가 60 초마다 실행되기를 원하므로 &lt;code&gt;sv.loop()&lt;/code&gt; 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="94f6ca6939c144eae87aaf899e625c5d04303ebc" translate="yes" xml:space="preserve">
          <source>Example: The following ragged tensors are equivalent, and all represent the nested list &lt;code&gt;[[3, 1, 4, 1], [], [5, 9, 2], [6], []]&lt;/code&gt;.</source>
          <target state="translated">예 : 다음과 같이 울퉁불퉁 한 텐서는 동일하며 모두 중첩 된 목록 &lt;code&gt;[[3, 1, 4, 1], [], [5, 9, 2], [6], []]&lt;/code&gt; 냅니다.</target>
        </trans-unit>
        <trans-unit id="6000fe791e40d6738b7d6b145a5c4796da7c9eff" translate="yes" xml:space="preserve">
          <source>Example: The sparse tensor</source>
          <target state="translated">예 : 희소 텐서</target>
        </trans-unit>
        <trans-unit id="4831dd77f2817a6c577b6208057931f2ede2496f" translate="yes" xml:space="preserve">
          <source>Example: decay 1/t with a rate of 0.5:</source>
          <target state="translated">예 : 0.5의 비율로 1 / t 붕괴 :</target>
        </trans-unit>
        <trans-unit id="5be7d9a2564ff822574226c3c6979bdbd88cd6e4" translate="yes" xml:space="preserve">
          <source>Example: decay every 100000 steps with a base of 0.96:</source>
          <target state="translated">예 : 0.96의 기준으로 100000 단계마다 붕괴 :</target>
        </trans-unit>
        <trans-unit id="ace5a52f8a2edfc2fb79b4c37c4790b5eb41eee8" translate="yes" xml:space="preserve">
          <source>Example: decay exponentially with a base of 0.96:</source>
          <target state="translated">예 : 0.96의 밑으로 지수 적으로 붕괴합니다 :</target>
        </trans-unit>
        <trans-unit id="ce11d63dc1b31ac81a1b58ec71985d1a67e4f9f8" translate="yes" xml:space="preserve">
          <source>Example: decay from 0.1 to 0.01 in 10000 steps using sqrt (i.e. power=0.5):</source>
          <target state="translated">예 : sqrt를 사용하여 10000 단계에서 0.1에서 0.01로 감소 (즉, power = 0.5) :</target>
        </trans-unit>
        <trans-unit id="793c28fc14e5a01f7866d225e6c0168a3353b837" translate="yes" xml:space="preserve">
          <source>Example: use a learning rate that's 1.0 for the first 100001 steps, 0.5 for the next 10000 steps, and 0.1 for any additional steps.</source>
          <target state="translated">예 : 첫 100001 단계의 경우 1.0, 다음 10000 단계의 경우 0.5, 추가 단계의 경우 0.1의 학습 속도를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="6104a08ed7eb335488d3ea3f93c6210a1cc4746c" translate="yes" xml:space="preserve">
          <source>Example::</source>
          <target state="translated">Example::</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="87dd337717aa93a3e1f625c5009322053b08b819" translate="yes" xml:space="preserve">
          <source>Examples of initialization of one or a batch of distributions.</source>
          <target state="translated">하나 또는 여러 배치 배포의 초기화 예.</target>
        </trans-unit>
        <trans-unit id="0d99cda6b7a8a98bf3b0ce2b08deac42570d99ca" translate="yes" xml:space="preserve">
          <source>Examples with batched 'params' and 'indices':</source>
          <target state="translated">일괄 처리 된 'params'및 'indices'가있는 예 :</target>
        </trans-unit>
        <trans-unit id="96a999e4ee43ac4a3bdacd6c1add9ad5873a7a08" translate="yes" xml:space="preserve">
          <source>Examples with weighted inputs:</source>
          <target state="translated">가중 입력의 예 :</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="bd4014a1dc07ec31c81fa13596a60e308e956f83" translate="yes" xml:space="preserve">
          <source>Except as otherwise noted, the content of this page is licensed under the &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot;&gt;Creative Commons Attribution 4.0 License&lt;/a&gt;, and code samples are licensed under the &lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0&quot;&gt;Apache 2.0 License&lt;/a&gt;. For details, see the &lt;a href=&quot;https://developers.google.com/site-policies&quot;&gt;Google Developers Site Policies&lt;/a&gt;. Java is a registered trademark of Oracle and/or its affiliates.</source>
          <target state="translated">달리 명시되지 않는 한,이 페이지의 콘텐츠는 &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot;&gt;Creative Commons Attribution 4.0 라이선스&lt;/a&gt; 에 따라 라이선스가 부여되며 코드 샘플은 &lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0&quot;&gt;Apache 2.0 라이선스에&lt;/a&gt; 따라 라이선스가 부여됩니다 . 자세한 내용은 &lt;a href=&quot;https://developers.google.com/site-policies&quot;&gt;Google 개발자 사이트 정책을&lt;/a&gt; 참조하십시오 . Java는 Oracle 및 / 또는 그 계열사의 등록 상표입니다.</target>
        </trans-unit>
        <trans-unit id="d1c51ae4b24c4cbf9a6a7c14ecfe48987ef8f41f" translate="yes" xml:space="preserve">
          <source>Exception class expected to be raised.</source>
          <target state="translated">발생할 것으로 예상되는 예외 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="7db926df5edbb2e0244efc4cb72d768c859bda52" translate="yes" xml:space="preserve">
          <source>Exception handling:</source>
          <target state="translated">예외 처리:</target>
        </trans-unit>
        <trans-unit id="6e1fd6ee78dd93cc7393132c2166292f654b771e" translate="yes" xml:space="preserve">
          <source>Exception types for TensorFlow errors.</source>
          <target state="translated">TensorFlow 오류에 대한 예외 유형.</target>
        </trans-unit>
        <trans-unit id="977efc1e7b7b4e10da4b7bbfee5ff5338ebbf975" translate="yes" xml:space="preserve">
          <source>Exceptions include:</source>
          <target state="translated">예외는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ce152fd2a50b95401ab6996a9060742977853fe6" translate="yes" xml:space="preserve">
          <source>Exceptions include: 1) None output: a NoOp would be returned which control-depends on computation. 2) Single value output: A tuple containing the value would be returned. 3) Operation-only outputs: a NoOp would be returned which control-depends on computation. TODO(b/121383831): Investigate into removing these special cases.</source>
          <target state="translated">예외 : 1) 출력 없음 : 계산에 따라 제어에 따라 NoOp가 반환됩니다. 2) 단일 값 출력 : 값이 포함 된 튜플이 반환됩니다. 3) 연산 전용 출력 : 계산에 따라 제어에 따라 NoOp가 반환됩니다. TODO (b / 121383831) : 이러한 특수 사례를 제거하도록 조사하십시오.</target>
        </trans-unit>
        <trans-unit id="a435b066a07d346a649075f82061604178c943e1" translate="yes" xml:space="preserve">
          <source>Exceptions raised but not handled by the &lt;code&gt;QueueRunner&lt;/code&gt; threads.</source>
          <target state="translated">&lt;code&gt;QueueRunner&lt;/code&gt; 스레드 에서 예외가 발생했지만 처리되지 않았습니다 .</target>
        </trans-unit>
        <trans-unit id="5c0668261fe61ad5e97be94ab196c8aaabcd82c1" translate="yes" xml:space="preserve">
          <source>Exceptions raised in queue runner threads are handled in one of two ways depending on whether or not a &lt;code&gt;Coordinator&lt;/code&gt; was passed to &lt;code&gt;create_threads()&lt;/code&gt;:</source>
          <target state="translated">큐 러너 스레드에서 발생한 예외는 &lt;code&gt;Coordinator&lt;/code&gt; 가 &lt;code&gt;create_threads()&lt;/code&gt; 로 전달 되었는지 여부에 따라 두 가지 방법 중 하나로 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="c7a50ad2d338624f150d3e12c3d98da4eca3b2fd" translate="yes" xml:space="preserve">
          <source>Exceptions that indicate that the training inputs have been exhausted, &lt;a href=&quot;../../../errors/outofrangeerror&quot;&gt;&lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt;&lt;/a&gt;, also cause &lt;code&gt;sv.should_stop()&lt;/code&gt; to return &lt;code&gt;True&lt;/code&gt; but are not re-raised from the &lt;code&gt;with&lt;/code&gt; block: they indicate a normal termination.</source>
          <target state="translated">훈련 입력이 소진되었음을 나타내는 예외 인 &lt;a href=&quot;../../../errors/outofrangeerror&quot;&gt; &lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt; &lt;/a&gt; 도 &lt;code&gt;sv.should_stop()&lt;/code&gt; 이 &lt;code&gt;True&lt;/code&gt; 를 반환 하지만 &lt;code&gt;with&lt;/code&gt; 블록 에서 다시 발생하지 않도록 합니다. 정상적인 종료를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5f3013605a5648326257001d4f2130af330c7e64" translate="yes" xml:space="preserve">
          <source>Execute all cleanup functions. Normally called for you after tearDown.</source>
          <target state="translated">모든 정리 기능을 실행하십시오. 일반적으로 tearDown 후에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="11e375cf08a633917df1df912958f4d60e2eee13" translate="yes" xml:space="preserve">
          <source>Execute function &lt;code&gt;fn()&lt;/code&gt; inside the critical section.</source>
          <target state="translated">중요 섹션 내에서 함수 &lt;code&gt;fn()&lt;/code&gt; 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="7dbdd16c5192dee3ed26ddf33bb3da6a11b3d34c" translate="yes" xml:space="preserve">
          <source>Executes ops specified by &lt;code&gt;fn&lt;/code&gt; on each replica. If &lt;code&gt;args&lt;/code&gt; or &lt;code&gt;kwargs&lt;/code&gt; have &quot;per-replica&quot; values, such as those produced by a &quot;distributed &lt;code&gt;Dataset&lt;/code&gt;&quot;, when &lt;code&gt;fn&lt;/code&gt; is executed on a particular replica, it will be executed with the component of those &quot;per-replica&quot; values that correspond to that replica.</source>
          <target state="translated">각 복제본에서 &lt;code&gt;fn&lt;/code&gt; 으로 지정된 op를 실행합니다 . 경우 &lt;code&gt;args&lt;/code&gt; 또는 &lt;code&gt;kwargs&lt;/code&gt; 로는 이러한 &quot;분산에 의해 생성 된 것과 같은&quot;당 복제 &quot;값이 &lt;code&gt;Dataset&lt;/code&gt; &quot;때 &lt;code&gt;fn&lt;/code&gt; 특정 복제본에서 실행되고, 그것은 그 &quot;당 복제&quot;값의 성분이 대응하여 실행되는 것 그 복제품.</target>
        </trans-unit>
        <trans-unit id="5841423de68ab109a1435156854cbf378aa60aee" translate="yes" xml:space="preserve">
          <source>Executes ops specified by &lt;code&gt;fn&lt;/code&gt; on each replica. If &lt;code&gt;args&lt;/code&gt; or &lt;code&gt;kwargs&lt;/code&gt; have &lt;a href=&quot;../../../../distribute/distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt;, such as those produced by a &lt;a href=&quot;../../../../distribute/distributeddataset&quot;&gt;&lt;code&gt;tf.distribute.DistributedDataset&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;../../../../distribute/strategy#experimental_distribute_dataset&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_distribute_dataset&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../distribute/strategy#experimental_distribute_datasets_from_function&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_distribute_datasets_from_function&lt;/code&gt;&lt;/a&gt;, when &lt;code&gt;fn&lt;/code&gt; is executed on a particular replica, it will be executed with the component of &lt;a href=&quot;../../../../distribute/distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt; that correspond to that replica.</source>
          <target state="translated">각 복제본에서 &lt;code&gt;fn&lt;/code&gt; 으로 지정된 작업을 실행합니다 . 경우 &lt;code&gt;args&lt;/code&gt; 또는 &lt;code&gt;kwargs&lt;/code&gt; 로는 이 &lt;a href=&quot;../../../../distribute/distributedvalues&quot;&gt; &lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt; &lt;/a&gt; 예에 의해 생산 된 것과 같은, &lt;a href=&quot;../../../../distribute/distributeddataset&quot;&gt; &lt;code&gt;tf.distribute.DistributedDataset&lt;/code&gt; &lt;/a&gt; 에서 &lt;a href=&quot;../../../../distribute/strategy#experimental_distribute_dataset&quot;&gt; &lt;code&gt;tf.distribute.Strategy.experimental_distribute_dataset&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../../../distribute/strategy#experimental_distribute_datasets_from_function&quot;&gt; &lt;code&gt;tf.distribute.Strategy.experimental_distribute_datasets_from_function&lt;/code&gt; 을&lt;/a&gt; 때, &lt;code&gt;fn&lt;/code&gt; 특정 복제에서 실행, 그것은 것입니다 해당 복제본에 해당하는 &lt;a href=&quot;../../../../distribute/distributedvalues&quot;&gt; &lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt; &lt;/a&gt; 의 구성 요소로 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="793811098469d54083ca269e98c267afe8d60bb8" translate="yes" xml:space="preserve">
          <source>Executes ops specified by &lt;code&gt;fn&lt;/code&gt; on each replica. If &lt;code&gt;args&lt;/code&gt; or &lt;code&gt;kwargs&lt;/code&gt; have &lt;a href=&quot;../../../distribute/distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt;, such as those produced by a &lt;a href=&quot;../../../distribute/distributeddataset&quot;&gt;&lt;code&gt;tf.distribute.DistributedDataset&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;../../../distribute/strategy#experimental_distribute_dataset&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_distribute_dataset&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../distribute/strategy#experimental_distribute_datasets_from_function&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_distribute_datasets_from_function&lt;/code&gt;&lt;/a&gt;, when &lt;code&gt;fn&lt;/code&gt; is executed on a particular replica, it will be executed with the component of &lt;a href=&quot;../../../distribute/distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt; that correspond to that replica.</source>
          <target state="translated">각 복제본에서 &lt;code&gt;fn&lt;/code&gt; 으로 지정된 작업을 실행합니다 . 경우 &lt;code&gt;args&lt;/code&gt; 또는 &lt;code&gt;kwargs&lt;/code&gt; 로는 이 &lt;a href=&quot;../../../distribute/distributedvalues&quot;&gt; &lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt; &lt;/a&gt; 예에 의해 생산 된 것과 같은, &lt;a href=&quot;../../../distribute/distributeddataset&quot;&gt; &lt;code&gt;tf.distribute.DistributedDataset&lt;/code&gt; &lt;/a&gt; 에서 &lt;a href=&quot;../../../distribute/strategy#experimental_distribute_dataset&quot;&gt; &lt;code&gt;tf.distribute.Strategy.experimental_distribute_dataset&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../../distribute/strategy#experimental_distribute_datasets_from_function&quot;&gt; &lt;code&gt;tf.distribute.Strategy.experimental_distribute_datasets_from_function&lt;/code&gt; 을&lt;/a&gt; 때, &lt;code&gt;fn&lt;/code&gt; 특정 복제에서 실행, 그것은 것입니다 해당 복제본에 해당하는 &lt;a href=&quot;../../../distribute/distributedvalues&quot;&gt; &lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt; &lt;/a&gt; 의 구성 요소로 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="5343586f8c3bd6ef69d152c018d8d765f2f6d4f6" translate="yes" xml:space="preserve">
          <source>Executes ops specified by &lt;code&gt;fn&lt;/code&gt; on each replica. If &lt;code&gt;args&lt;/code&gt; or &lt;code&gt;kwargs&lt;/code&gt; have &lt;a href=&quot;../distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt;, such as those produced by a &lt;a href=&quot;../distributeddataset&quot;&gt;&lt;code&gt;tf.distribute.DistributedDataset&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;../strategy#experimental_distribute_dataset&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_distribute_dataset&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../strategy#experimental_distribute_datasets_from_function&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_distribute_datasets_from_function&lt;/code&gt;&lt;/a&gt;, when &lt;code&gt;fn&lt;/code&gt; is executed on a particular replica, it will be executed with the component of &lt;a href=&quot;../distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt; that correspond to that replica.</source>
          <target state="translated">각 복제본에서 &lt;code&gt;fn&lt;/code&gt; 으로 지정된 작업을 실행합니다 . 경우 &lt;code&gt;args&lt;/code&gt; 또는 &lt;code&gt;kwargs&lt;/code&gt; 로는 이 &lt;a href=&quot;../distributedvalues&quot;&gt; &lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt; &lt;/a&gt; 예에 의해 생산 된 것과 같은, &lt;a href=&quot;../distributeddataset&quot;&gt; &lt;code&gt;tf.distribute.DistributedDataset&lt;/code&gt; &lt;/a&gt; 에서 &lt;a href=&quot;../strategy#experimental_distribute_dataset&quot;&gt; &lt;code&gt;tf.distribute.Strategy.experimental_distribute_dataset&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../strategy#experimental_distribute_datasets_from_function&quot;&gt; &lt;code&gt;tf.distribute.Strategy.experimental_distribute_datasets_from_function&lt;/code&gt; 을&lt;/a&gt; 때, &lt;code&gt;fn&lt;/code&gt; 특정 복제에서 실행, 그것은 것입니다 해당 복제본에 해당하는 &lt;a href=&quot;../distributedvalues&quot;&gt; &lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt; &lt;/a&gt; 의 구성 요소로 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="fabacb7ccca613c5884ce0618be4bfb1a6d7c455" translate="yes" xml:space="preserve">
          <source>Executes ops specified by &lt;code&gt;fn&lt;/code&gt; on each replica. If &lt;code&gt;args&lt;/code&gt; or &lt;code&gt;kwargs&lt;/code&gt; have &lt;a href=&quot;distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt;, such as those produced by a &lt;a href=&quot;distributeddataset&quot;&gt;&lt;code&gt;tf.distribute.DistributedDataset&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;strategy#experimental_distribute_dataset&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_distribute_dataset&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;strategy#experimental_distribute_datasets_from_function&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_distribute_datasets_from_function&lt;/code&gt;&lt;/a&gt;, when &lt;code&gt;fn&lt;/code&gt; is executed on a particular replica, it will be executed with the component of &lt;a href=&quot;distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt; that correspond to that replica.</source>
          <target state="translated">각 복제본에서 &lt;code&gt;fn&lt;/code&gt; 으로 지정된 작업을 실행합니다 . 경우 &lt;code&gt;args&lt;/code&gt; 또는 &lt;code&gt;kwargs&lt;/code&gt; 로는 이 &lt;a href=&quot;distributedvalues&quot;&gt; &lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt; &lt;/a&gt; 예에 의해 생산 된 것과 같은, &lt;a href=&quot;distributeddataset&quot;&gt; &lt;code&gt;tf.distribute.DistributedDataset&lt;/code&gt; &lt;/a&gt; 에서 &lt;a href=&quot;strategy#experimental_distribute_dataset&quot;&gt; &lt;code&gt;tf.distribute.Strategy.experimental_distribute_dataset&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;strategy#experimental_distribute_datasets_from_function&quot;&gt; &lt;code&gt;tf.distribute.Strategy.experimental_distribute_datasets_from_function&lt;/code&gt; 을&lt;/a&gt; 때, &lt;code&gt;fn&lt;/code&gt; 특정 복제에서 실행, 그것은 것입니다 해당 복제본에 해당하는 &lt;a href=&quot;distributedvalues&quot;&gt; &lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt; &lt;/a&gt; 의 구성 요소로 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="9a75d59c79f71a41f7d05e765e21135e40ec896e" translate="yes" xml:space="preserve">
          <source>Executing inside &lt;a href=&quot;../../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;, unless under &lt;a href=&quot;../../init_scope&quot;&gt;&lt;code&gt;tf.init_scope&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../config/experimental_run_functions_eagerly&quot;&gt;&lt;code&gt;tf.config.experimental_run_functions_eagerly(True)&lt;/code&gt;&lt;/a&gt; is previously called.</source>
          <target state="translated">&lt;a href=&quot;../../init_scope&quot;&gt; &lt;code&gt;tf.init_scope&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../config/experimental_run_functions_eagerly&quot;&gt; &lt;code&gt;tf.config.experimental_run_functions_eagerly(True)&lt;/code&gt; &lt;/a&gt; 에서 이전에 호출 되지 않은 경우 &lt;a href=&quot;../../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; 내에서 실행</target>
        </trans-unit>
        <trans-unit id="4cfe9cbddad329689e0b90de125001daf8c95885" translate="yes" xml:space="preserve">
          <source>Executing inside &lt;a href=&quot;../../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;, unless under &lt;a href=&quot;../../init_scope&quot;&gt;&lt;code&gt;tf.init_scope&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../config/run_functions_eagerly&quot;&gt;&lt;code&gt;tf.config.run_functions_eagerly(True)&lt;/code&gt;&lt;/a&gt; is previously called.</source>
          <target state="translated">&lt;a href=&quot;../../init_scope&quot;&gt; &lt;code&gt;tf.init_scope&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../config/run_functions_eagerly&quot;&gt; &lt;code&gt;tf.config.run_functions_eagerly(True)&lt;/code&gt; &lt;/a&gt; 에서 이전에 호출 되지 않는 한 &lt;a href=&quot;../../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; 내부에서 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="2a10bab3a1306869bb43217c1e5e4cddf7e6bfae" translate="yes" xml:space="preserve">
          <source>Executing inside &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;, unless under &lt;a href=&quot;init_scope&quot;&gt;&lt;code&gt;tf.init_scope&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;config/experimental_run_functions_eagerly&quot;&gt;&lt;code&gt;tf.config.experimental_run_functions_eagerly(True)&lt;/code&gt;&lt;/a&gt; is previously called.</source>
          <target state="translated">&lt;a href=&quot;init_scope&quot;&gt; &lt;code&gt;tf.init_scope&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;config/experimental_run_functions_eagerly&quot;&gt; &lt;code&gt;tf.config.experimental_run_functions_eagerly(True)&lt;/code&gt; &lt;/a&gt; 에서 이전에 호출 되지 않은 경우 &lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; 내에서 실행</target>
        </trans-unit>
        <trans-unit id="955fdac0a2d1875b5b0361db0e7a3df47df9aae7" translate="yes" xml:space="preserve">
          <source>Executing inside &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;, unless under &lt;a href=&quot;init_scope&quot;&gt;&lt;code&gt;tf.init_scope&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;config/run_functions_eagerly&quot;&gt;&lt;code&gt;tf.config.run_functions_eagerly(True)&lt;/code&gt;&lt;/a&gt; is previously called.</source>
          <target state="translated">&lt;a href=&quot;init_scope&quot;&gt; &lt;code&gt;tf.init_scope&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;config/run_functions_eagerly&quot;&gt; &lt;code&gt;tf.config.run_functions_eagerly(True)&lt;/code&gt; &lt;/a&gt; 에서 이전에 호출 되지 않는 한 &lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; 내부에서 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="90ae6f15527ec34c1543d31bebd784257e5cbaf2" translate="yes" xml:space="preserve">
          <source>Executing inside a transformation function for &lt;code&gt;tf.dataset&lt;/code&gt;.</source>
          <target state="translated">위한 변환 함수 내부에서 실행 &lt;code&gt;tf.dataset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="afc09c3890cde7a5439e81dd8b697e05a081e2fa" translate="yes" xml:space="preserve">
          <source>Execution of TensorFlow operations (ops) and Functions and their stack traces, op types, names (if available) and contexts. In addition, depending on the value of the &lt;code&gt;tensor_debug_mode&lt;/code&gt; argument (see Args section below), the value(s) of the output tensors or more concise summaries of the tensor values will be dumped.</source>
          <target state="translated">TensorFlow 작업 (ops) 및 함수 및 해당 스택 추적, 작업 유형, 이름 (사용 가능한 경우) 및 컨텍스트 실행. 또한 &lt;code&gt;tensor_debug_mode&lt;/code&gt; 인수 (아래 Args 섹션 참조)의 값에 따라 출력 텐서의 값 또는 텐서 값의 더 간결한 요약이 덤프됩니다.</target>
        </trans-unit>
        <trans-unit id="f83b6fe3aebf13744e866019556d9129cd7a55be" translate="yes" xml:space="preserve">
          <source>Exit</source>
          <target state="translated">Exit</target>
        </trans-unit>
        <trans-unit id="5f0f9a8e624edb47e9fd7dbb2e16409d83c4e71d" translate="yes" xml:space="preserve">
          <source>Exit a &lt;code&gt;with&lt;/code&gt; block, closing the file.</source>
          <target state="translated">를 종료 &lt;code&gt;with&lt;/code&gt; 파일을 닫는 블록.</target>
        </trans-unit>
        <trans-unit id="7597ba2e0b5e39e1679b27fd60557a68be49930a" translate="yes" xml:space="preserve">
          <source>Exit makes its input &lt;code&gt;data&lt;/code&gt; available to the parent frame.</source>
          <target state="translated">종료는 상위 프레임에서 입력 &lt;code&gt;data&lt;/code&gt; 사용할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="53d33b74e48885a60aeaefa61848809d032af067" translate="yes" xml:space="preserve">
          <source>Exit the training loop by causing &lt;code&gt;should_stop()&lt;/code&gt; to return &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;should_stop()&lt;/code&gt; 이 &lt;code&gt;True&lt;/code&gt; 를 리턴 하도록하여 훈련 루프를 종료하십시오 .</target>
        </trans-unit>
        <trans-unit id="0b741870e6731ad0d91e1fee0b121c9f3b3a9d19" translate="yes" xml:space="preserve">
          <source>Exit: At the &lt;code&gt;close()&lt;/code&gt;, the hooked session does following things in order:</source>
          <target state="translated">종료 : &lt;code&gt;close()&lt;/code&gt; 에서 후크 된 세션은 다음을 순서대로 수행합니다.</target>
        </trans-unit>
        <trans-unit id="59b327accbcb0a5b8afa0c7176dd223df7684025" translate="yes" xml:space="preserve">
          <source>Exit: At the &lt;code&gt;close()&lt;/code&gt;, the monitored session does following things in order:</source>
          <target state="translated">종료 : &lt;code&gt;close()&lt;/code&gt; 에서 모니터 된 세션은 다음을 순서대로 수행합니다.</target>
        </trans-unit>
        <trans-unit id="0a2899914246f5edc88765d0b9e6fab5ce9088ec" translate="yes" xml:space="preserve">
          <source>Exits the current frame to its parent frame.</source>
          <target state="translated">현재 프레임을 상위 프레임으로 종료합니다.</target>
        </trans-unit>
        <trans-unit id="ba5215e7ca7db8397a68e271056050a9a72b04b5" translate="yes" xml:space="preserve">
          <source>Exits the recording context, no further operations are traced.</source>
          <target state="translated">기록 컨텍스트를 종료하고 더 이상 조작이 추적되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5871b8d86fba0af13c05dc83a5e5933bb7903327" translate="yes" xml:space="preserve">
          <source>Exp</source>
          <target state="translated">Exp</target>
        </trans-unit>
        <trans-unit id="d02ced268437285031df31496017840406816fe9" translate="yes" xml:space="preserve">
          <source>ExpandDims</source>
          <target state="translated">ExpandDims</target>
        </trans-unit>
        <trans-unit id="66a9c909a6870e627a057373b51b024e1e234caa" translate="yes" xml:space="preserve">
          <source>Expands &lt;code&gt;signal&lt;/code&gt;'s &lt;code&gt;axis&lt;/code&gt; dimension into frames of &lt;code&gt;frame_length&lt;/code&gt;.</source>
          <target state="translated">펼쳐지는 &lt;code&gt;signal&lt;/code&gt; 의 &lt;code&gt;axis&lt;/code&gt; 의 프레임으로 측정 &lt;code&gt;frame_length&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07ec8fb3c2f9a83f1212c818198eb18be20fc96d" translate="yes" xml:space="preserve">
          <source>Expect that this operator acts like square [batch] matrices.</source>
          <target state="translated">이 연산자는 정사각형 [배치] 행렬처럼 작동합니다.</target>
        </trans-unit>
        <trans-unit id="ed78d9c68766d3f7974883e79c3c2ee397fb39eb" translate="yes" xml:space="preserve">
          <source>Expect that this operator acts like square [batch] matrices. This is autoset to true.</source>
          <target state="translated">이 연산자는 정사각형 [배치] 행렬처럼 작동합니다. 이것은 true로 자동 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="c2e84cf5e41c690d15bf04dd53eb3e1940d7efd1" translate="yes" xml:space="preserve">
          <source>Expect that this operator acts like square [batch] matrices. This is true by default, and will raise a &lt;code&gt;ValueError&lt;/code&gt; otherwise.</source>
          <target state="translated">이 연산자는 정사각형 [배치] 행렬처럼 작동합니다. 이것은 기본적으로 true이며 그렇지 않으면 &lt;code&gt;ValueError&lt;/code&gt; 가 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="1a70987b15a924000fa4f03cb6e44741dda41cd7" translate="yes" xml:space="preserve">
          <source>Expect that this operator acts like square [batch] matrices. This will raise a &lt;code&gt;ValueError&lt;/code&gt; if set to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">이 연산자는 정사각형 [배치] 행렬처럼 작동합니다. &lt;code&gt;False&lt;/code&gt; 로 설정 하면 &lt;code&gt;ValueError&lt;/code&gt; 가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="82e87e18362504eb493f757e889ff7557b3cdc2e" translate="yes" xml:space="preserve">
          <source>Expect that this operator is equal to its hermitian transpose.</source>
          <target state="translated">이 연산자는 hermitian transpose와 같습니다.</target>
        </trans-unit>
        <trans-unit id="e9c504faeac42d016045a3082d97b557d41aee06" translate="yes" xml:space="preserve">
          <source>Expect that this operator is equal to its hermitian transpose. Default is &lt;code&gt;None&lt;/code&gt;, unless &lt;code&gt;base_operator&lt;/code&gt; is self-adjoint and &lt;code&gt;v = None&lt;/code&gt; (meaning &lt;code&gt;u=v&lt;/code&gt;), in which case this defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">이 연산자는 hermitian transpose와 같습니다. &lt;code&gt;base_operator&lt;/code&gt; 가 self-adjoint이고 &lt;code&gt;v = None&lt;/code&gt; ( &lt;code&gt;u=v&lt;/code&gt; 의미) 이 아닌 경우 기본값은 &lt;code&gt;None&lt;/code&gt; 입니다. 이 경우 기본값은 &lt;code&gt;True&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5ff80b6e2ad8b0833e96612b403a04151f29ed1a" translate="yes" xml:space="preserve">
          <source>Expect that this operator is equal to its hermitian transpose. If &lt;code&gt;diag.dtype&lt;/code&gt; is real, this is auto-set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">이 연산자는 hermitian transpose와 같습니다. 경우 &lt;code&gt;diag.dtype&lt;/code&gt; 이 진짜,이에 자동 집합입니다 &lt;code&gt;True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77cc2479f628e5648a10b370823417e9c1b39fdf" translate="yes" xml:space="preserve">
          <source>Expect that this operator is equal to its hermitian transpose. If &lt;code&gt;dtype&lt;/code&gt; is real, this is equivalent to being symmetric.</source>
          <target state="translated">이 연산자는 hermitian transpose와 같습니다. 경우 &lt;code&gt;dtype&lt;/code&gt; 진짜,이 대칭 인에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="34dd6410b060182728c189e0e384ff137722e537" translate="yes" xml:space="preserve">
          <source>Expect that this operator is equal to its hermitian transpose. If &lt;code&gt;spectrum&lt;/code&gt; is real, this will always be true.</source>
          <target state="translated">이 연산자는 hermitian transpose와 같습니다. 경우 &lt;code&gt;spectrum&lt;/code&gt; 진짜, 이것은 항상 true가됩니다.</target>
        </trans-unit>
        <trans-unit id="f4d7e4f427b394af81c6c4755816e52af211febd" translate="yes" xml:space="preserve">
          <source>Expect that this operator is equal to its hermitian transpose. This is autoset to true</source>
          <target state="translated">이 연산자는 hermitian transpose와 같습니다. 이것은 true로 자동 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="2b7bef5599ae0ea17823b7a05c81525bc12ac32b" translate="yes" xml:space="preserve">
          <source>Expect that this operator is equal to its hermitian transpose. This operator is self-adjoint only if it is diagonal with real-valued diagonal entries. In this case it is advised to use &lt;code&gt;LinearOperatorDiag&lt;/code&gt;.</source>
          <target state="translated">이 연산자는 hermitian transpose와 같습니다. 이 연산자는 실수 값 대각선 항목이있는 대각선 인 경우에만 자기 인접입니다. 이 경우 &lt;code&gt;LinearOperatorDiag&lt;/code&gt; 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="1dc1778998960a4510dd14f56469a3c7e0b4e606" translate="yes" xml:space="preserve">
          <source>Expect that this operator is non-singular.</source>
          <target state="translated">이 연산자는 특이하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="989ac1b9782932aecb9a84d1e7a4a8d73c97ad85" translate="yes" xml:space="preserve">
          <source>Expect that this operator is non-singular. Default is &lt;code&gt;None&lt;/code&gt;, unless &lt;code&gt;is_positive_definite&lt;/code&gt; is auto-set to be &lt;code&gt;True&lt;/code&gt; (see below).</source>
          <target state="translated">이 연산자는 특이하지 않습니다. &lt;code&gt;is_positive_definite&lt;/code&gt; 가 &lt;code&gt;True&lt;/code&gt; 로 자동 설정 되지 않는 한 기본값은 &lt;code&gt;None&lt;/code&gt; 입니다 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="f38e8c0840dd780167a952867f95db2acf2d0996" translate="yes" xml:space="preserve">
          <source>Expect that this operator is non-singular. This operator is non-singular if and only if its diagonal elements are all non-zero.</source>
          <target state="translated">이 연산자는 특이하지 않습니다. 이 연산자는 대각선 요소가 모두 0이 아닌 경우에만 비 특수입니다.</target>
        </trans-unit>
        <trans-unit id="f0cccae7dfe0cda76f54ba64adc4914faea09d18" translate="yes" xml:space="preserve">
          <source>Expect that this operator is positive definite, meaning the quadratic form &lt;code&gt;x^H A x&lt;/code&gt; has positive real part for all nonzero &lt;code&gt;x&lt;/code&gt;. Note that we do not require the operator to be self-adjoint to be positive-definite. See: &lt;a href=&quot;https://en.wikipedia.org/wiki/Positive-definite_matrix&quot;&gt;https://en.wikipedia.org/wiki/Positive-definite_matrix&lt;/a&gt;\</source>
          <target state="translated">이 연산자는 양의 정부 호이며, 이는 2 차 형태 &lt;code&gt;x^H A x&lt;/code&gt; 가 0이 아닌 모든 &lt;code&gt;x&lt;/code&gt; 에 대해 양의 실수 부분을 가짐을 의미합니다 . 연산자가 양의 값을 나타 내기 위해 자기 인접 할 필요는 없습니다. 참조 : &lt;a href=&quot;https://en.wikipedia.org/wiki/Positive-definite_matrix&quot;&gt;https://en.wikipedia.org/wiki/Positive-definite_matrix&lt;/a&gt; \</target>
        </trans-unit>
        <trans-unit id="ccf3e819c295b6f44464b217eea5321c5b58880b" translate="yes" xml:space="preserve">
          <source>Expect that this operator is positive definite, meaning the quadratic form &lt;code&gt;x^H A x&lt;/code&gt; has positive real part for all nonzero &lt;code&gt;x&lt;/code&gt;. Note that we do not require the operator to be self-adjoint to be positive-definite. See: &lt;a href=&quot;https://en.wikipedia.org/wiki/Positive-definite_matrix#Extension_for_non-symmetric_matrices&quot;&gt;https://en.wikipedia.org/wiki/Positive-definite_matrix#Extension_for_non-symmetric_matrices&lt;/a&gt;</source>
          <target state="translated">이 연산자는 양의 정부 호이며, 이는 2 차 형태 &lt;code&gt;x^H A x&lt;/code&gt; 가 0이 아닌 모든 &lt;code&gt;x&lt;/code&gt; 에 대해 양의 실수 부분을 가짐을 의미합니다 . 연산자가 양의 값을 나타 내기 위해 자기 인접 할 필요는 없습니다. 참조 : &lt;a href=&quot;https://en.wikipedia.org/wiki/Positive-definite_matrix#Extension_for_non-symmetric_matrices&quot;&gt;https://en.wikipedia.org/wiki/Positive-definite_matrix#Extension_for_non-symmetric_matrices&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="33d6af70faf7a9dc007318b94b3635220360dc9c" translate="yes" xml:space="preserve">
          <source>Expect that this operator is positive definite, meaning the quadratic form &lt;code&gt;x^H A x&lt;/code&gt; has positive real part for all nonzero &lt;code&gt;x&lt;/code&gt;. Note that we do not require the operator to be self-adjoint to be positive-definite. See: &lt;a href=&quot;https://en.wikipedia.org/wiki/Positive-definite_matrix#Extension_for_non-symmetric_matrices&quot;&gt;https://en.wikipedia.org/wiki/Positive-definite_matrix#Extension_for_non-symmetric_matrices&lt;/a&gt; This is autoset to false.</source>
          <target state="translated">이 연산자는 양의 정부 호이며, 이는 2 차 형태 &lt;code&gt;x^H A x&lt;/code&gt; 가 0이 아닌 모든 &lt;code&gt;x&lt;/code&gt; 에 대해 양의 실수 부분을 가짐을 의미합니다 . 연산자가 양의 값을 나타 내기 위해 자기 인접 할 필요는 없습니다. 참조 : &lt;a href=&quot;https://en.wikipedia.org/wiki/Positive-definite_matrix#Extension_for_non-symmetric_matrices&quot;&gt;https://en.wikipedia.org/wiki/Positive-definite_matrix#Extension_for_non-symmetric_matrices&lt;/a&gt; 이것은 false로 자동 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="d2db543c8e1b7a95823f6a52b9906c10ae273b2a" translate="yes" xml:space="preserve">
          <source>Expect that this operator is positive definite, meaning the quadratic form &lt;code&gt;x^H A x&lt;/code&gt; has positive real part for all nonzero &lt;code&gt;x&lt;/code&gt;. Note that we do not require the operator to be self-adjoint to be positive-definite. See: https://en.wikipedia.org/wiki/Positive-definite_matrix#Extension_for_non-symmetric_matrices This is autoset to false.</source>
          <target state="translated">이 연산자는 양의 정부 호이며, 이는 2 차 형태 &lt;code&gt;x^H A x&lt;/code&gt; 가 0이 아닌 모든 &lt;code&gt;x&lt;/code&gt; 에 대해 양의 실수 부분을 가짐을 의미합니다 . 연산자가 양의 값을 나타 내기 위해 자기 인접 할 필요는 없습니다. 참조 : https://en.wikipedia.org/wiki/Positive-definite_matrix#Extension_for_non-symmetric_matrices 이것은 false로 자동 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="dfff00bc8b663b09d5424f0d8864089f62157862" translate="yes" xml:space="preserve">
          <source>Expect that this operator is positive definite, meaning the real part of all eigenvalues is positive. We do not require the operator to be self-adjoint to be positive-definite. See: &lt;a href=&quot;https://en.wikipedia.org/wiki/Positive-definite_matrix&quot;&gt;https://en.wikipedia.org/wiki/Positive-definite_matrix&lt;/a&gt;</source>
          <target state="translated">이 연산자는 양의 정부 호이며 모든 고유 값의 실수 부분이 양수임을 의미합니다. 연산자가 양의 값을 갖기 위해 자기 인접 할 필요는 없습니다. 참조 : &lt;a href=&quot;https://en.wikipedia.org/wiki/Positive-definite_matrix&quot;&gt;https://en.wikipedia.org/wiki/Positive-definite_matrix&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8bfa6b06c71067ca9ea4c135d41086622cfc642f" translate="yes" xml:space="preserve">
          <source>Expect that this operator is positive definite. Default is &lt;code&gt;None&lt;/code&gt;, unless &lt;code&gt;base_operator&lt;/code&gt; is positive-definite &lt;code&gt;v = None&lt;/code&gt; (meaning &lt;code&gt;u=v&lt;/code&gt;), and &lt;code&gt;is_diag_update_positive&lt;/code&gt;, in which case this defaults to &lt;code&gt;True&lt;/code&gt;. Note that we say an operator is positive definite when the quadratic form &lt;code&gt;x^H A x&lt;/code&gt; has positive real part for all nonzero &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">이 연산자는 양의 정부 호입니다. &lt;code&gt;base_operator&lt;/code&gt; 가 양의 정의가 아닌 경우 기본값은 &lt;code&gt;None&lt;/code&gt; 입니다 . &lt;code&gt;v = None&lt;/code&gt; ( &lt;code&gt;u=v&lt;/code&gt; 를 의미 ) 및 &lt;code&gt;is_diag_update_positive&lt;/code&gt; 이 경우 기본값은 &lt;code&gt;True&lt;/code&gt; 입니다. 2 차 형식 &lt;code&gt;x^H A x&lt;/code&gt; 가 0이 아닌 모든 &lt;code&gt;x&lt;/code&gt; 에 대해 양의 실수 부분을 가질 때 연산자가 양의 정의라고 말합니다 .</target>
        </trans-unit>
        <trans-unit id="139da9d95153e25dba3f850415efd887fc0ca747" translate="yes" xml:space="preserve">
          <source>Expected DataType of the input.</source>
          <target state="translated">입력의 예상 DataType입니다.</target>
        </trans-unit>
        <trans-unit id="7ae81d71558cec8f56b66dc632a87a59164ece86" translate="yes" xml:space="preserve">
          <source>Expected data type of &lt;code&gt;inputs&lt;/code&gt; (optional). A value of &lt;code&gt;None&lt;/code&gt; means &quot;infer the input dtype from &lt;code&gt;inputs[0]&lt;/code&gt;&quot;.</source>
          <target state="translated">의 예상 데이터 유형 &lt;code&gt;inputs&lt;/code&gt; (선택 사항). &lt;code&gt;None&lt;/code&gt; 값은 &quot;infer the input dtype from &lt;code&gt;inputs[0]&lt;/code&gt; &quot;을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="4a72255293a9f42dbeb2fc3b382c3fcfbdc4543a" translate="yes" xml:space="preserve">
          <source>Expected data type.</source>
          <target state="translated">데이터 유형이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="9da1e174718b4d7c76cc0fc29691b94431b714b9" translate="yes" xml:space="preserve">
          <source>Expected output shape from function. This argument can be inferred if not explicitly provided. Can be a tuple or function. If a tuple, it only specifies the first dimension onward; sample dimension is assumed either the same as the input: &lt;code&gt;output_shape = (input_shape[0], ) + output_shape&lt;/code&gt; or, the input is &lt;code&gt;None&lt;/code&gt; and the sample dimension is also &lt;code&gt;None&lt;/code&gt;: &lt;code&gt;output_shape = (None, ) + output_shape&lt;/code&gt; If a function, it specifies the entire shape as a function of the input shape: &lt;code&gt;output_shape = f(input_shape)&lt;/code&gt;</source>
          <target state="translated">함수에서 예상되는 출력 모양. 이 인수는 명시 적으로 제공되지 않은 경우 유추 할 수 있습니다. 튜플 또는 함수일 수 있습니다. 튜플이면 첫 번째 차원 만 지정합니다. 샘플 차원은 입력과 동일하다고 가정합니다. &lt;code&gt;output_shape = (input_shape[0], ) + output_shape&lt;/code&gt; 또는 입력이 &lt;code&gt;None&lt;/code&gt; 이고 샘플 차원도 &lt;code&gt;None&lt;/code&gt; : &lt;code&gt;output_shape = (None, ) + output_shape&lt;/code&gt; 함수 인 경우 다음을 지정합니다. 입력 모양의 함수로서 전체 모양 : &lt;code&gt;output_shape = f(input_shape)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="706c65c0918b3142862741c4abde68fb16d9eaf4" translate="yes" xml:space="preserve">
          <source>Expected shape of elements of &lt;code&gt;inputs&lt;/code&gt; (optional). Also controls the output shape of this op, which may affect type inference in other ops. A value of &lt;code&gt;None&lt;/code&gt; means &quot;infer the input shape from the shapes in &lt;code&gt;inputs&lt;/code&gt;&quot;.</source>
          <target state="translated">&lt;code&gt;inputs&lt;/code&gt; 요소의 예상 모양 (선택 사항). 또한이 작업의 출력 모양을 제어하므로 다른 작업의 유형 추론에 영향을 줄 수 있습니다. 값 &lt;code&gt;None&lt;/code&gt; 수단 &quot;의 형태의 입력 형상 추론 &lt;code&gt;inputs&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="aa55c83a32144678a956c6c55f5dece7f72317d3" translate="yes" xml:space="preserve">
          <source>Expected type.</source>
          <target state="translated">예상 유형입니다.</target>
        </trans-unit>
        <trans-unit id="d2ad79af0021ac4858d9226489ac9c04faf0e6f5" translate="yes" xml:space="preserve">
          <source>Experimental API for building input pipelines.</source>
          <target state="translated">입력 파이프 라인 구축을위한 실험적인 API.</target>
        </trans-unit>
        <trans-unit id="3d922543e8a08722d92b6501b870ec822f4dcd58" translate="yes" xml:space="preserve">
          <source>Experimental API for using the tf.data service.</source>
          <target state="translated">tf.data 서비스를 사용하기위한 실험적 API입니다.</target>
        </trans-unit>
        <trans-unit id="d1ff10b66d8731358ac8244e1c00f640e01f684c" translate="yes" xml:space="preserve">
          <source>Experimental Distribution Strategy library.</source>
          <target state="translated">실험 배포 전략 라이브러리.</target>
        </trans-unit>
        <trans-unit id="c121ce5da3d3b76d2d947821ab9df93eb5477aa7" translate="yes" xml:space="preserve">
          <source>Experimental context manager for use when defining a custom summary op.</source>
          <target state="translated">사용자 정의 요약 op를 정의 할 때 사용할 실험용 컨텍스트 관리자.</target>
        </trans-unit>
        <trans-unit id="7a6421eb20a45fe885418ff8f23d4fdab4324bf1" translate="yes" xml:space="preserve">
          <source>Experimental flag, subject to change. A list of optimizations to apply when converting the model. E.g. &lt;code&gt;[Optimize.DEFAULT]&lt;/code&gt;</source>
          <target state="translated">실험용 플래그, 변경 될 수 있습니다. 모델을 변환 할 때 적용 할 최적화 목록입니다. 예 : &lt;code&gt;[Optimize.DEFAULT]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="33059df1673928f219a82fc5c8e21a650d6696a0" translate="yes" xml:space="preserve">
          <source>Experimental flag, subject to change. Enables MLIR-based conversion instead of TOCO conversion. (default True)</source>
          <target state="translated">실험용 플래그, 변경 될 수 있습니다. TOCO 변환 대신 MLIR 기반 변환을 사용합니다. (기본값 True)</target>
        </trans-unit>
        <trans-unit id="399ecdd35ea931bb278f134ef1957739d468702b" translate="yes" xml:space="preserve">
          <source>Experimental flag, subject to change. Set of OpsSet options supported by the device. (default set([OpsSet.TFLITE_BUILTINS]))</source>
          <target state="translated">실험용 플래그, 변경 될 수 있습니다. 장치에서 지원하는 OpsSet 옵션 집합입니다. (기본 설정 ([OpsSet.TFLITE_BUILTINS]))</target>
        </trans-unit>
        <trans-unit id="599e7a942acaca60cbb896ff7ac216dbee02a59b" translate="yes" xml:space="preserve">
          <source>Experimental flag, subject to change. Specification of target device.</source>
          <target state="translated">실험용 플래그, 변경 될 수 있습니다. 대상 장치의 사양.</target>
        </trans-unit>
        <trans-unit id="0a18834879a6b44f43ff0c592756de68465d8408" translate="yes" xml:space="preserve">
          <source>Experimental. Subject to change. List of &lt;a href=&quot;https://www.tensorflow.org/lite/performance/delegates&quot;&gt;TfLiteDelegate&lt;/a&gt; objects returned by lite.load_delegate().</source>
          <target state="translated">실험적. 변경 될 수 있습니다. lite.load_delegate ()가 반환 한 &lt;a href=&quot;https://www.tensorflow.org/lite/performance/delegates&quot;&gt;TfLiteDelegate&lt;/a&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="926762eb23930f8e3ae64c0d83b8664da2e042b6" translate="yes" xml:space="preserve">
          <source>Experimental: this exists to support the usage of V1-style manual summary writing (via the construction of a &lt;a href=&quot;../../compat/v1/summary&quot;&gt;&lt;code&gt;tf.compat.v1.Summary&lt;/code&gt;&lt;/a&gt; protocol buffer) with the V2 summary writing API.</source>
          <target state="translated">실험적 : V2 요약 작성 API와 함께 V1 스타일 수동 요약 작성 ( &lt;a href=&quot;../../compat/v1/summary&quot;&gt; &lt;code&gt;tf.compat.v1.Summary&lt;/code&gt; &lt;/a&gt; . 요약 프로토콜 버퍼 구성을 통해)을 지원하기 위해 존재합니다 .</target>
        </trans-unit>
        <trans-unit id="f7e30aa22d9814c16511469aa8ccea8e0ceb1682" translate="yes" xml:space="preserve">
          <source>ExperimentalAssertNextDataset</source>
          <target state="translated">ExperimentalAssertNextDataset</target>
        </trans-unit>
        <trans-unit id="65a9eaa214c2a4a7283e27ec54d2f74b5ae2773e" translate="yes" xml:space="preserve">
          <source>ExperimentalAutoShardDataset</source>
          <target state="translated">ExperimentalAutoShardDataset</target>
        </trans-unit>
        <trans-unit id="1155741c4e50830e9866f67930ced6ece2a730dd" translate="yes" xml:space="preserve">
          <source>ExperimentalBytesProducedStatsDataset</source>
          <target state="translated">ExperimentalBytesProducedStatsDataset</target>
        </trans-unit>
        <trans-unit id="cbb67531ef0b8de9c7ab10906728997a5cbc980d" translate="yes" xml:space="preserve">
          <source>ExperimentalCSVDataset</source>
          <target state="translated">ExperimentalCSVDataset</target>
        </trans-unit>
        <trans-unit id="8bee6db1545035b8173d88fdc5b803b34673e6c9" translate="yes" xml:space="preserve">
          <source>ExperimentalChooseFastestDataset</source>
          <target state="translated">ExperimentalChooseFastestDataset</target>
        </trans-unit>
        <trans-unit id="9747e2520b851d2c9cdcc2a7d37822bc8ce67a1a" translate="yes" xml:space="preserve">
          <source>ExperimentalDatasetCardinality</source>
          <target state="translated">ExperimentalDatasetCardinality</target>
        </trans-unit>
        <trans-unit id="744fc8c282f05b7d196dd0c52340ab3eb80696c3" translate="yes" xml:space="preserve">
          <source>ExperimentalDatasetToTFRecord</source>
          <target state="translated">ExperimentalDatasetToTFRecord</target>
        </trans-unit>
        <trans-unit id="7d42bec61bd63539cde98d948c54ac2dec9f4699" translate="yes" xml:space="preserve">
          <source>ExperimentalDenseToSparseBatchDataset</source>
          <target state="translated">ExperimentalDenseToSparseBatchDataset</target>
        </trans-unit>
        <trans-unit id="082cfaae261616a23f42f235c5504196cfa1ccb6" translate="yes" xml:space="preserve">
          <source>ExperimentalDirectedInterleaveDataset</source>
          <target state="translated">ExperimentalDirectedInterleaveDataset</target>
        </trans-unit>
        <trans-unit id="cde31577a692b8f70044f3f8b993b9353e33ccee" translate="yes" xml:space="preserve">
          <source>ExperimentalGroupByReducerDataset</source>
          <target state="translated">ExperimentalGroupByReducerDataset</target>
        </trans-unit>
        <trans-unit id="b20d0e98014287b37df084a390ad2964a66cdec5" translate="yes" xml:space="preserve">
          <source>ExperimentalGroupByWindowDataset</source>
          <target state="translated">ExperimentalGroupByWindowDataset</target>
        </trans-unit>
        <trans-unit id="cd226a753993460716068aab4ac098440988b719" translate="yes" xml:space="preserve">
          <source>ExperimentalIgnoreErrorsDataset</source>
          <target state="translated">ExperimentalIgnoreErrorsDataset</target>
        </trans-unit>
        <trans-unit id="0f8ed95ca666d8abc80de6bea158a14f751c9e1d" translate="yes" xml:space="preserve">
          <source>ExperimentalIteratorGetDevice</source>
          <target state="translated">ExperimentalIteratorGetDevice</target>
        </trans-unit>
        <trans-unit id="74317fb26b51f75d9003946ff00db597c1d45889" translate="yes" xml:space="preserve">
          <source>ExperimentalLMDBDataset</source>
          <target state="translated">ExperimentalLMDBDataset</target>
        </trans-unit>
        <trans-unit id="6588329804a91e0d3359b84129bf1790a12ee937" translate="yes" xml:space="preserve">
          <source>ExperimentalLatencyStatsDataset</source>
          <target state="translated">ExperimentalLatencyStatsDataset</target>
        </trans-unit>
        <trans-unit id="c06ab95c37522d990f18a0d3291b5f3ab69cff66" translate="yes" xml:space="preserve">
          <source>ExperimentalMapAndBatchDataset</source>
          <target state="translated">ExperimentalMapAndBatchDataset</target>
        </trans-unit>
        <trans-unit id="3d23d6b39dbdaeef53034bab2667a9f1cc87a494" translate="yes" xml:space="preserve">
          <source>ExperimentalMapDataset</source>
          <target state="translated">ExperimentalMapDataset</target>
        </trans-unit>
        <trans-unit id="15b03882b59c1a98ce2908f2d444d9121425ac1f" translate="yes" xml:space="preserve">
          <source>ExperimentalMatchingFilesDataset</source>
          <target state="translated">ExperimentalMatchingFilesDataset</target>
        </trans-unit>
        <trans-unit id="4b833f982f61c3bd6fafd895bae1d8fb00c87a74" translate="yes" xml:space="preserve">
          <source>ExperimentalMaxIntraOpParallelismDataset</source>
          <target state="translated">ExperimentalMaxIntraOpParallelismDataset</target>
        </trans-unit>
        <trans-unit id="68e8ae2163663736bb0add1d59999d9242e6b1f3" translate="yes" xml:space="preserve">
          <source>ExperimentalNonSerializableDataset</source>
          <target state="translated">ExperimentalNonSerializableDataset</target>
        </trans-unit>
        <trans-unit id="f60719db25db93a181e6f986dde77f319ba249aa" translate="yes" xml:space="preserve">
          <source>ExperimentalParallelInterleaveDataset</source>
          <target state="translated">ExperimentalParallelInterleaveDataset</target>
        </trans-unit>
        <trans-unit id="0aea8d666c6a10cfbf8edf68dcca7aec781c1ea4" translate="yes" xml:space="preserve">
          <source>ExperimentalParseExampleDataset</source>
          <target state="translated">ExperimentalParseExampleDataset</target>
        </trans-unit>
        <trans-unit id="099b044748453a100e44dc683a0f72d509004a8f" translate="yes" xml:space="preserve">
          <source>ExperimentalPrivateThreadPoolDataset</source>
          <target state="translated">ExperimentalPrivateThreadPoolDataset</target>
        </trans-unit>
        <trans-unit id="18b8df73deafffd3934e6d88caf12b2921e3f1fd" translate="yes" xml:space="preserve">
          <source>ExperimentalRandomDataset</source>
          <target state="translated">ExperimentalRandomDataset</target>
        </trans-unit>
        <trans-unit id="00573977acb262636f3acf86f1ec2199d26fc97d" translate="yes" xml:space="preserve">
          <source>ExperimentalRebatchDataset</source>
          <target state="translated">ExperimentalRebatchDataset</target>
        </trans-unit>
        <trans-unit id="16fa967c2653dada3e2c8d637963a97b43e6bf79" translate="yes" xml:space="preserve">
          <source>ExperimentalScanDataset</source>
          <target state="translated">ExperimentalScanDataset</target>
        </trans-unit>
        <trans-unit id="f9ef41dff7ba49a65cfb578f0b833503d1b71e5d" translate="yes" xml:space="preserve">
          <source>ExperimentalSetStatsAggregatorDataset</source>
          <target state="translated">ExperimentalSetStatsAggregatorDataset</target>
        </trans-unit>
        <trans-unit id="2c3105da1590b28b73544964faca6a841c448407" translate="yes" xml:space="preserve">
          <source>ExperimentalSleepDataset</source>
          <target state="translated">ExperimentalSleepDataset</target>
        </trans-unit>
        <trans-unit id="8dd787031e43dcee025e349d118489e793e09010" translate="yes" xml:space="preserve">
          <source>ExperimentalSlidingWindowDataset</source>
          <target state="translated">ExperimentalSlidingWindowDataset</target>
        </trans-unit>
        <trans-unit id="ffb62879f1f7865bbeb865a48812c4855e98f60b" translate="yes" xml:space="preserve">
          <source>ExperimentalSqlDataset</source>
          <target state="translated">ExperimentalSqlDataset</target>
        </trans-unit>
        <trans-unit id="ddde7bd97ceccc95a18ec3c2cd39a701d7cc909d" translate="yes" xml:space="preserve">
          <source>ExperimentalStatsAggregatorHandle</source>
          <target state="translated">ExperimentalStatsAggregatorHandle</target>
        </trans-unit>
        <trans-unit id="b498a5ab1740eb4b388270e116912049f504a754" translate="yes" xml:space="preserve">
          <source>ExperimentalStatsAggregatorSummary</source>
          <target state="translated">ExperimentalStatsAggregatorSummary</target>
        </trans-unit>
        <trans-unit id="a5025a95ecf320f6f166894f4c2fd55374b60430" translate="yes" xml:space="preserve">
          <source>ExperimentalTakeWhileDataset</source>
          <target state="translated">ExperimentalTakeWhileDataset</target>
        </trans-unit>
        <trans-unit id="ba249b389273fdcaa2dab5dca9593102149edae1" translate="yes" xml:space="preserve">
          <source>ExperimentalThreadPoolDataset</source>
          <target state="translated">ExperimentalThreadPoolDataset</target>
        </trans-unit>
        <trans-unit id="244b028889d39bd37099f6970ba90c68b81a1315" translate="yes" xml:space="preserve">
          <source>ExperimentalThreadPoolHandle</source>
          <target state="translated">ExperimentalThreadPoolHandle</target>
        </trans-unit>
        <trans-unit id="62eda0fa3c2336159806f0983c6c70960ec181e5" translate="yes" xml:space="preserve">
          <source>ExperimentalUnbatchDataset</source>
          <target state="translated">ExperimentalUnbatchDataset</target>
        </trans-unit>
        <trans-unit id="417f165202c1a73d9e2d67b8e71845b115a74022" translate="yes" xml:space="preserve">
          <source>ExperimentalUniqueDataset</source>
          <target state="translated">ExperimentalUniqueDataset</target>
        </trans-unit>
        <trans-unit id="4c7acad73b567cdcac462ff81f82e54fc6e9259c" translate="yes" xml:space="preserve">
          <source>Expint</source>
          <target state="translated">Expint</target>
        </trans-unit>
        <trans-unit id="60523673d27da2d9be21c4afc99bbda53781fda4" translate="yes" xml:space="preserve">
          <source>Explicit &lt;code&gt;int64&lt;/code&gt;-castable monotonic step value for this summary. If omitted, this defaults to &lt;a href=&quot;experimental/get_step&quot;&gt;&lt;code&gt;tf.summary.experimental.get_step()&lt;/code&gt;&lt;/a&gt;, which must not be None.</source>
          <target state="translated">이 요약에 대한 명시 적 &lt;code&gt;int64&lt;/code&gt; 캐스팅 가능한 단조로운 단계 값입니다. 생략하면 기본값은 &lt;a href=&quot;experimental/get_step&quot;&gt; &lt;code&gt;tf.summary.experimental.get_step()&lt;/code&gt; &lt;/a&gt; 이며 None이 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="cd544f84e957b227c02bc3cf27684a28e62d4091" translate="yes" xml:space="preserve">
          <source>Explicit &lt;code&gt;int64&lt;/code&gt;-castable monotonic step value for this summary. If omitted, this defaults to &lt;a href=&quot;get_step&quot;&gt;&lt;code&gt;tf.summary.experimental.get_step()&lt;/code&gt;&lt;/a&gt;, which must not be None.</source>
          <target state="translated">이 요약에 대한 명시 적 &lt;code&gt;int64&lt;/code&gt; 캐스팅 가능한 단조로운 단계 값입니다. 생략하면 기본값은 &lt;a href=&quot;get_step&quot;&gt; &lt;code&gt;tf.summary.experimental.get_step()&lt;/code&gt; &lt;/a&gt; 이며 None이 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="42a785ca84d56b6101e1f706382fe3e7b06ddbd6" translate="yes" xml:space="preserve">
          <source>Explicitly marks flags as parsed.</source>
          <target state="translated">플래그를 구문 분석 된 것으로 명시 적으로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="ecb86881f951179445ed42ff4652a7bc2018af23" translate="yes" xml:space="preserve">
          <source>Expm1</source>
          <target state="translated">Expm1</target>
        </trans-unit>
        <trans-unit id="ffc0eb352d4fd554ec47ef13b09615fbcdd6b7f9" translate="yes" xml:space="preserve">
          <source>Exponential Linear Unit.</source>
          <target state="translated">지수 선형 단위.</target>
        </trans-unit>
        <trans-unit id="bb5f4f32cc189b6f4dd670fd7b30f74c670b7228" translate="yes" xml:space="preserve">
          <source>Exponential activation function.</source>
          <target state="translated">지수 활성화 기능.</target>
        </trans-unit>
        <trans-unit id="0e03e02cd515bba42965eafc38e09638d1ba2c6f" translate="yes" xml:space="preserve">
          <source>Exponential distribution.</source>
          <target state="translated">지수 분포.</target>
        </trans-unit>
        <trans-unit id="9101b4b871e5e17bd87173bc3ae8137c9a7080f0" translate="yes" xml:space="preserve">
          <source>Exponential linear unit.</source>
          <target state="translated">지수 선형 단위.</target>
        </trans-unit>
        <trans-unit id="f7d014f81f67852159a641e23ea7c906c62bb828" translate="yes" xml:space="preserve">
          <source>Exponentially scaled modified Bessel function of order 0 defined as &lt;code&gt;bessel_i0e(x) = exp(-abs(x)) bessel_i0(x)&lt;/code&gt;.</source>
          <target state="translated">정의 위해 0의 지수 적 스케일링 변형 베셀 함수 &lt;code&gt;bessel_i0e(x) = exp(-abs(x)) bessel_i0(x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a77d30ccae12ce68a067ccfe3da843d3e6bcf076" translate="yes" xml:space="preserve">
          <source>Exponentially scaled modified Bessel function of order 0 defined as &lt;code&gt;bessel_i1e(x) = exp(-abs(x)) bessel_i1(x)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bessel_i1e(x) = exp(-abs(x)) bessel_i1(x)&lt;/code&gt; 로 정의 된 차수 0의 지수 스케일 수정 베셀 함수 .</target>
        </trans-unit>
        <trans-unit id="d9eafc8668c9f38493ae76076b35f34c2fd52217" translate="yes" xml:space="preserve">
          <source>Export output defaults to &lt;code&gt;RegressionOutput&lt;/code&gt;, whereas &lt;code&gt;BinaryClassHead&lt;/code&gt; defaults to &lt;code&gt;PredictOutput&lt;/code&gt;.</source>
          <target state="translated">출력 내보내기의 기본값은 &lt;code&gt;RegressionOutput&lt;/code&gt; 이고 &lt;code&gt;BinaryClassHead&lt;/code&gt; 의 기본값은 &lt;code&gt;PredictOutput&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c37343fbc2a734ed5d2673a49ae41a53a7d7f024" translate="yes" xml:space="preserve">
          <source>Exporting</source>
          <target state="translated">Exporting</target>
        </trans-unit>
        <trans-unit id="c2c3e4d4e94806a23552dd6d4ca1e15b82a0cf12" translate="yes" xml:space="preserve">
          <source>Exporting from a function without a fixed signature:</source>
          <target state="translated">고정 된 서명이없는 함수에서 내보내기 :</target>
        </trans-unit>
        <trans-unit id="c9270ad488e74dac5b3f8cf66707fb174a4a97cc" translate="yes" xml:space="preserve">
          <source>Exporting/importing meta graphs is not supported unless both &lt;code&gt;graph_def&lt;/code&gt; and &lt;code&gt;graph&lt;/code&gt; are provided. No graph exists when eager execution is enabled.</source>
          <target state="translated">&lt;code&gt;graph_def&lt;/code&gt; 및 &lt;code&gt;graph&lt;/code&gt; 가 모두 제공 되지 않으면 메타 그래프 내보내기 / 가져 오기가 지원되지 않습니다 . 열망하는 실행이 활성화 된 경우 그래프가 없습니다.</target>
        </trans-unit>
        <trans-unit id="972bac7a70608bcda85786ab7a37bc49e2557b73" translate="yes" xml:space="preserve">
          <source>Exporting/importing meta graphs is not supported. No graph exists when eager execution is enabled.</source>
          <target state="translated">메타 그래프 내보내기 / 가져 오기는 지원되지 않습니다. 열망하는 실행이 활성화 된 경우 그래프가 없습니다.</target>
        </trans-unit>
        <trans-unit id="85ec1e4960a7b50429456e650b9743c6b77af376" translate="yes" xml:space="preserve">
          <source>Exports a &lt;a href=&quot;../../../../keras/model&quot;&gt;&lt;code&gt;tf.keras.Model&lt;/code&gt;&lt;/a&gt; as a Tensorflow SavedModel. (deprecated)</source>
          <target state="translated">수출 &lt;a href=&quot;../../../../keras/model&quot;&gt; &lt;code&gt;tf.keras.Model&lt;/code&gt; &lt;/a&gt; Tensorflow SavedModel로합니다. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="037b7cc0a3b1a8fa8456d461b271816999bb63f2" translate="yes" xml:space="preserve">
          <source>Exports a &lt;code&gt;SavedModel&lt;/code&gt; with &lt;code&gt;tf.MetaGraphDefs&lt;/code&gt; for each requested mode.</source>
          <target state="translated">내보내는 &lt;code&gt;SavedModel&lt;/code&gt; 와 &lt;code&gt;tf.MetaGraphDefs&lt;/code&gt; 는 각 요청 모드.</target>
        </trans-unit>
        <trans-unit id="178c80ffa7dd8fc1feabbbefe3b4b843e40d326c" translate="yes" xml:space="preserve">
          <source>Exports inference graph as a &lt;code&gt;SavedModel&lt;/code&gt; into the given dir.</source>
          <target state="translated">주어진 dir에 추론 그래프를 &lt;code&gt;SavedModel&lt;/code&gt; 로 내 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="18db89eda532930544f1808335bc755809b1d792" translate="yes" xml:space="preserve">
          <source>Exports inference graph as a &lt;code&gt;SavedModel&lt;/code&gt; into the given dir. (deprecated)</source>
          <target state="translated">주어진 dir에 추론 그래프를 &lt;code&gt;SavedModel&lt;/code&gt; 로 내 보냅니다 . (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="d9fa3e5e307c033249da957003469524b5f0592b" translate="yes" xml:space="preserve">
          <source>Exports the Trackable object &lt;code&gt;obj&lt;/code&gt; to &lt;a href=&quot;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/README.md&quot;&gt;SavedModel format&lt;/a&gt;.</source>
          <target state="translated">Trackable 객체 &lt;code&gt;obj&lt;/code&gt; 를 &lt;a href=&quot;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/README.md&quot;&gt;SavedModel 형식&lt;/a&gt; 으로 내 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="e1098ed652cfc03241430f4e8dedb771d99c6430" translate="yes" xml:space="preserve">
          <source>Exports the given &lt;code&gt;Estimator&lt;/code&gt; to a specific format.</source>
          <target state="translated">주어진 &lt;code&gt;Estimator&lt;/code&gt; 를 특정 형식으로 내 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="8cdb15936b0cda5e7bcdd95275d1bcfe21a8a851" translate="yes" xml:space="preserve">
          <source>Exposes custom classes/functions to Keras deserialization internals.</source>
          <target state="translated">사용자 정의 클래스 / 함수를 Keras 역 직렬화 내부에 노출합니다.</target>
        </trans-unit>
        <trans-unit id="7149496d9a4839c6fb3b5c02bc8d74740f250834" translate="yes" xml:space="preserve">
          <source>Expressions:</source>
          <target state="translated">Expressions:</target>
        </trans-unit>
        <trans-unit id="9292a42dc8a204a53ed967ecd444f32d375aa5ed" translate="yes" xml:space="preserve">
          <source>Extend the list by appending all the items in the given list</source>
          <target state="translated">주어진 목록의 모든 항목을 추가하여 목록 확장</target>
        </trans-unit>
        <trans-unit id="a734e674b16dcd29acb5b6a787730554e875a6ad" translate="yes" xml:space="preserve">
          <source>Extension_for_non_symmetric_matrices</source>
          <target state="translated">Extension_for_non_symmetric_matrices</target>
        </trans-unit>
        <trans-unit id="df4b823b15b51a230d5a933752ab9b61e72a53d7" translate="yes" xml:space="preserve">
          <source>Extra args.</source>
          <target state="translated">추가 인수.</target>
        </trans-unit>
        <trans-unit id="164ea69930ab8df3bb4d3ee0410b1d6bda0c2a6c" translate="yes" xml:space="preserve">
          <source>Extra assets may be written into the &lt;code&gt;SavedModel&lt;/code&gt; via the &lt;code&gt;assets_extra&lt;/code&gt; argument. This should be a dict, where each key gives a destination path (including the filename) relative to the assets.extra directory. The corresponding value gives the full path of the source file to be copied. For example, the simple case of copying a single file without renaming it is specified as &lt;code&gt;{'my_asset_file.txt': '/path/to/my_asset_file.txt'}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;assets_extra&lt;/code&gt; 인수 를 통해 추가 자산을 &lt;code&gt;SavedModel&lt;/code&gt; 에 쓸 수 있습니다 . 이것은 각 키가 asset.extra 디렉토리에 상대적인 대상 경로 (파일 이름 포함)를 제공하는 dict 여야합니다. 해당 값은 복사 할 소스 파일의 전체 경로를 제공합니다. 예를 들어, 이름을 바꾸지 않고 단일 파일을 복사하는 간단한 경우는 &lt;code&gt;{'my_asset_file.txt': '/path/to/my_asset_file.txt'}&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="211ecd9ad94e025432cb8149b1285e365c03b78a" translate="yes" xml:space="preserve">
          <source>Extra kwargs.</source>
          <target state="translated">여분의 kwargs.</target>
        </trans-unit>
        <trans-unit id="492bdefca5e8d605f4b78c8b4ffdeb101c4ed050" translate="yes" xml:space="preserve">
          <source>Extract &lt;code&gt;patches&lt;/code&gt; from &lt;code&gt;images&lt;/code&gt; and put them in the &quot;depth&quot; output dimension.</source>
          <target state="translated">&lt;code&gt;images&lt;/code&gt; 에서 &lt;code&gt;patches&lt;/code&gt; 를 추출 하여 &quot;깊이&quot;출력 차원에 배치하십시오.</target>
        </trans-unit>
        <trans-unit id="f7fef71d1e5d8b73071d4f157fbc1a59a9a9a893" translate="yes" xml:space="preserve">
          <source>Extract &lt;code&gt;patches&lt;/code&gt; from &lt;code&gt;images&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;images&lt;/code&gt; 에서 &lt;code&gt;patches&lt;/code&gt; 를 추출하십시오 .</target>
        </trans-unit>
        <trans-unit id="584d91d7ab384adf62f6fecbe1176e042c71db3c" translate="yes" xml:space="preserve">
          <source>Extract &lt;code&gt;patches&lt;/code&gt; from &lt;code&gt;input&lt;/code&gt; and put them in the &quot;depth&quot; output dimension. 3D extension of &lt;code&gt;extract_image_patches&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; 에서 &lt;code&gt;patches&lt;/code&gt; 를 추출 하여 &quot;깊이&quot;출력 차원에 배치하십시오. &lt;code&gt;extract_image_patches&lt;/code&gt; 의 3D 확장 .</target>
        </trans-unit>
        <trans-unit id="69af2d30e21c558a02bea7b213da79207f5bd726" translate="yes" xml:space="preserve">
          <source>Extract the shape information of a JPEG-encoded image.</source>
          <target state="translated">JPEG 인코딩 이미지의 모양 정보를 추출합니다.</target>
        </trans-unit>
        <trans-unit id="538a777bb1a01feffc2ac87710b68583d6d20265" translate="yes" xml:space="preserve">
          <source>Extract the subgraph that can reach any of the nodes in 'dest_nodes'. (deprecated)</source>
          <target state="translated">'dest_nodes'의 노드에 도달 할 수있는 서브 그래프를 추출하십시오. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="1c6ba3898062d75db279ace7c913306852b9ce0a" translate="yes" xml:space="preserve">
          <source>ExtractGlimpse</source>
          <target state="translated">ExtractGlimpse</target>
        </trans-unit>
        <trans-unit id="7871302e2e4d89c45db94e39de3d4b0f5eb46393" translate="yes" xml:space="preserve">
          <source>ExtractGlimpseV2</source>
          <target state="translated">ExtractGlimpseV2</target>
        </trans-unit>
        <trans-unit id="73c5ac1e11985b5070e973bb22c95e12b69bb5a0" translate="yes" xml:space="preserve">
          <source>ExtractImagePatches</source>
          <target state="translated">ExtractImagePatches</target>
        </trans-unit>
        <trans-unit id="50e443aa3db1214e9d2db1699a6ecfbeb4227bcc" translate="yes" xml:space="preserve">
          <source>ExtractJpegShape</source>
          <target state="translated">ExtractJpegShape</target>
        </trans-unit>
        <trans-unit id="7b9c5c5beec37d55a7d01b0acf6dc6eee7d44202" translate="yes" xml:space="preserve">
          <source>ExtractVolumePatches</source>
          <target state="translated">ExtractVolumePatches</target>
        </trans-unit>
        <trans-unit id="62cea78f9cb3874209e78f283267d217fe6be5d3" translate="yes" xml:space="preserve">
          <source>Extraction of the average gradient is blocked until the required number of gradients has been accumulated.</source>
          <target state="translated">필요한 구배 수가 누적 될 때까지 평균 구배 추출이 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="eafc900bb37fc83073f4ab7e2220e6aa0f85ad74" translate="yes" xml:space="preserve">
          <source>Extracts a glimpse from the input tensor.</source>
          <target state="translated">입력 텐서에서 엿보기를 추출합니다.</target>
        </trans-unit>
        <trans-unit id="1a34851a4628f1022c20a689edabaafb13781ffb" translate="yes" xml:space="preserve">
          <source>Extracts a slice from a tensor.</source>
          <target state="translated">텐서에서 슬라이스를 추출합니다.</target>
        </trans-unit>
        <trans-unit id="a97f13695905e343228e8d4f2e7b8debcf2167f3" translate="yes" xml:space="preserve">
          <source>Extracts a strided slice of a tensor (generalized Python array indexing).</source>
          <target state="translated">텐서의 strided 슬라이스를 추출합니다 (일반화 된 Python 배열 인덱싱).</target>
        </trans-unit>
        <trans-unit id="c645ed0f344783927bb0e282ac98e2846942b8fa" translate="yes" xml:space="preserve">
          <source>Extracts a strided slice of a tensor (generalized python array indexing).</source>
          <target state="translated">텐서의 스트 라이딩 된 슬라이스를 추출합니다 (일반화 된 파이썬 배열 인덱싱).</target>
        </trans-unit>
        <trans-unit id="9e84628410abbba57634c26ee47624e6fb5c5296" translate="yes" xml:space="preserve">
          <source>Extracts crops from the input image tensor and resizes them using bilinear sampling or nearest neighbor sampling (possibly with aspect ratio change) to a common output size specified by &lt;code&gt;crop_size&lt;/code&gt;. This is more general than the &lt;code&gt;crop_to_bounding_box&lt;/code&gt; op which extracts a fixed size slice from the input image and does not allow resizing or aspect ratio change.</source>
          <target state="translated">입력 이미지 텐서에서 자르기를 추출하고 이중 선형 샘플링 또는 가장 가까운 인접 샘플링 (가로 세로 비율 변경 가능)을 사용하여 &lt;code&gt;crop_size&lt;/code&gt; 로 지정된 공통 출력 크기로 크기를 조정 합니다. 이것은 입력 이미지에서 고정 크기 슬라이스를 추출하고 크기 조정 또는 종횡비 변경을 허용하지 않는 &lt;code&gt;crop_to_bounding_box&lt;/code&gt; op 보다 일반적 입니다.</target>
        </trans-unit>
        <trans-unit id="962f25f0a4474fb874998be05b54cc637211919e" translate="yes" xml:space="preserve">
          <source>Extracts crops from the input image tensor and resizes them.</source>
          <target state="translated">입력 이미지 텐서에서 자르기를 추출하고 크기를 조정합니다.</target>
        </trans-unit>
        <trans-unit id="fef180b7f701790513171158add127c2106f4b90" translate="yes" xml:space="preserve">
          <source>Extracts image patches from the input tensor to form a &lt;em&gt;virtual&lt;/em&gt; tensor of shape &lt;code&gt;[batch, out_height, out_width, filter_height * filter_width * in_channels]&lt;/code&gt;.</source>
          <target state="translated">입력 텐서에서 이미지 패치를 추출하여 모양의 &lt;em&gt;가상&lt;/em&gt; 텐서를 형성합니다 &lt;code&gt;[batch, out_height, out_width, filter_height * filter_width * in_channels]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07cd688c87891e471e62de3b6577eae0f97141a7" translate="yes" xml:space="preserve">
          <source>Extracts the average gradient in the given ConditionalAccumulator.</source>
          <target state="translated">주어진 ConditionalAccumulator에서 평균 기울기를 추출합니다.</target>
        </trans-unit>
        <trans-unit id="4ba27b40ca140da982edd658693287a156367197" translate="yes" xml:space="preserve">
          <source>Extracts the average sparse gradient in a SparseConditionalAccumulator.</source>
          <target state="translated">SparseConditionalAccumulator에서 평균 희소 기울기를 추출합니다.</target>
        </trans-unit>
        <trans-unit id="bf8300dc1be4d8761c3816eeb71051b6b621dd6e" translate="yes" xml:space="preserve">
          <source>FFT</source>
          <target state="translated">FFT</target>
        </trans-unit>
        <trans-unit id="701d26b9ad9ca0c72e3cdc8a462873f5d778a499" translate="yes" xml:space="preserve">
          <source>FFT2D</source>
          <target state="translated">FFT2D</target>
        </trans-unit>
        <trans-unit id="eb09b8cfd6bd03a6f6997bd421aa03a67c598f30" translate="yes" xml:space="preserve">
          <source>FFT3D</source>
          <target state="translated">FFT3D</target>
        </trans-unit>
        <trans-unit id="0a33510e3c5de82084404c96929039a466c01517" translate="yes" xml:space="preserve">
          <source>FIFOQueue</source>
          <target state="translated">FIFOQueue</target>
        </trans-unit>
        <trans-unit id="ed5def1a4d6839767b84256f0e902a49fe1a15e9" translate="yes" xml:space="preserve">
          <source>FIFOQueueV2</source>
          <target state="translated">FIFOQueueV2</target>
        </trans-unit>
        <trans-unit id="fa59b7e25f71438c8e4f2fdd9767a47ee015c4d1" translate="yes" xml:space="preserve">
          <source>FILL THIS IN</source>
          <target state="translated">이것을 채우십시오</target>
        </trans-unit>
        <trans-unit id="c5b64b5401b853d517a09f93af33024aa358f75b" translate="yes" xml:space="preserve">
          <source>FP32/FP16 precision</source>
          <target state="translated">FP32 / FP16 정밀</target>
        </trans-unit>
        <trans-unit id="e68c9f5ad44202d7785d32aa64913fc9806abe58" translate="yes" xml:space="preserve">
          <source>FP32/FP16 precision with pre-built engines</source>
          <target state="translated">사전 제작 된 엔진을 갖춘 FP32 / FP16 정밀</target>
        </trans-unit>
        <trans-unit id="e0930077f2b148812df888941f2d13cf6e9ddce0" translate="yes" xml:space="preserve">
          <source>Fact</source>
          <target state="translated">Fact</target>
        </trans-unit>
        <trans-unit id="cf05de317e8bffe740353b81c2056ee7a780f56c" translate="yes" xml:space="preserve">
          <source>Fail if the two objects are equal as determined by the '!=' operator.</source>
          <target state="translated">두 객체가 '! ='연산자에 의해 결정된 것과 같으면 실패합니다.</target>
        </trans-unit>
        <trans-unit id="d688f47ff119167da8f40aca7cf48da60d0e1d3c" translate="yes" xml:space="preserve">
          <source>Fail if the two objects are equal as determined by their difference rounded to the given number of decimal places (default 7) and comparing to zero, or by comparing that the difference between the two objects is less than the given delta.</source>
          <target state="translated">주어진 소수 자릿수 (기본값 7)로 반올림 한 차이와 0과 비교하거나 두 오브젝트 간의 차이가 주어진 델타보다 작은 것을 비교하여 두 오브젝트가 동일한 경우 실패합니다.</target>
        </trans-unit>
        <trans-unit id="ac6d0b1d84f00848578493c90ccdd59e68b9978d" translate="yes" xml:space="preserve">
          <source>Fail if the two objects are unequal as determined by the '==' operator.</source>
          <target state="translated">'=='연산자에 의해 결정된대로 두 오브젝트가 동일하지 않으면 실패합니다.</target>
        </trans-unit>
        <trans-unit id="9e1cddafab3d11ebc7f9b67baa9212b85f01704a" translate="yes" xml:space="preserve">
          <source>Fail if the two objects are unequal as determined by their difference rounded to the given number of decimal places (default 7) and comparing to zero, or by comparing that the difference between the two objects is more than the given delta.</source>
          <target state="translated">주어진 소수 자릿수 (기본값 7)로 반올림하여 0으로 비교하거나 두 오브젝트 간의 차이가 지정된 델타보다 큰지 비교하여 두 오브젝트가 동일하지 않으면 실패합니다.</target>
        </trans-unit>
        <trans-unit id="b90c05535c1484beaa10b9e343151d2dda2df269" translate="yes" xml:space="preserve">
          <source>Fail if the two sequences are unequal as determined by their value differences rounded to the given number of decimal places (default 7) and comparing to zero, or by comparing that the difference between each value in the two sequences is more than the given delta.</source>
          <target state="translated">주어진 소수점 이하 자릿수 (기본값 7)로 반올림 된 값 차이와 0과 비교하거나 두 시퀀스의 각 값 사이의 차이가 지정된 델타보다 큰 것을 비교하여 두 시퀀스가 ​​같지 않으면 실패합니다.</target>
        </trans-unit>
        <trans-unit id="6b09491a2e091e0d4883b90c183a399ea8883f86" translate="yes" xml:space="preserve">
          <source>Fail immediately with the given message, optionally prefixed.</source>
          <target state="translated">주어진 메시지와 함께 즉시 실패하고 선택적으로 접두사를 붙입니다.</target>
        </trans-unit>
        <trans-unit id="a54388df2306db1f46868df1364def0f8214cbb4" translate="yes" xml:space="preserve">
          <source>Fail the test if the text matches the regular expression.</source>
          <target state="translated">텍스트가 정규식과 일치하면 테스트에 실패합니다.</target>
        </trans-unit>
        <trans-unit id="18174045d242bd42e10c3c0a79548ccc7b04f8e1" translate="yes" xml:space="preserve">
          <source>Fail the test unless the text matches the regular expression.</source>
          <target state="translated">텍스트가 정규식과 일치하지 않으면 테스트가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="317a53187e390a71514cd2ea9224a8dd8fd2c2cb" translate="yes" xml:space="preserve">
          <source>Fail unless a log message of level &lt;em&gt;level&lt;/em&gt; or higher is emitted on &lt;em&gt;logger_name&lt;/em&gt; or its children. If omitted, &lt;em&gt;level&lt;/em&gt; defaults to INFO and &lt;em&gt;logger&lt;/em&gt; defaults to the root logger.</source>
          <target state="translated">&lt;em&gt;logger_name&lt;/em&gt; 또는 해당 하위 에서 &lt;em&gt;레벨&lt;/em&gt; 이상의 로그 메시지가 생성되지 않으면 실패 &lt;em&gt;합니다&lt;/em&gt; . 생략하면 &lt;em&gt;레벨의&lt;/em&gt; 기본값은 INFO이고 &lt;em&gt;로거의&lt;/em&gt; 기본값은 루트 로거입니다.</target>
        </trans-unit>
        <trans-unit id="224a729bea443ca313463dee8480aee3bf36395c" translate="yes" xml:space="preserve">
          <source>Fail unless a warning of class warnClass is triggered by the callable when invoked with specified positional and keyword arguments. If a different type of warning is triggered, it will not be handled: depending on the other warning filtering rules in effect, it might be silenced, printed out, or raised as an exception.</source>
          <target state="translated">지정된 위치 및 키워드 인수를 사용하여 호출 할 때 호출 가능 항목에 의해 warnClass 클래스 경고가 트리거되지 않으면 실패합니다. 다른 유형의 경고가 트리거되면 처리되지 않습니다. 적용되는 다른 경고 필터링 규칙에 따라 예외로 인해 침묵, 인쇄 또는 예외가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="794fe5fe43f2b133d3282805e5b8fcb9248b06f4" translate="yes" xml:space="preserve">
          <source>Fail unless an exception of class expected_exception is raised by the callable when invoked with specified positional and keyword arguments. If a different type of exception is raised, it will not be caught, and the test case will be deemed to have suffered an error, exactly as for an unexpected exception.</source>
          <target state="translated">지정된 위치 및 키워드 인수를 사용하여 호출 할 때 호출 가능 클래스에서 expected_exception 클래스의 예외가 발생하지 않으면 실패합니다. 다른 유형의 예외가 발생하면 예외가 포착되지 않으며 예상치 않은 예외와 마찬가지로 테스트 사례에 오류가 발생한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="65f7df05d2464c13cd5f0bbde6f45d941d8961b4" translate="yes" xml:space="preserve">
          <source>Fails if the list is empty.</source>
          <target state="translated">목록이 비어 있으면 실패합니다.</target>
        </trans-unit>
        <trans-unit id="fe9444367645842529e9a3b57a826433c9c9f6b6" translate="yes" xml:space="preserve">
          <source>Fake-quantize the 'inputs' tensor of type float and one of the shapes: &lt;code&gt;[d]&lt;/code&gt;,</source>
          <target state="translated">float 유형의 '입력'텐서와 모양 중 하나를 가짜 양자화합니다. &lt;code&gt;[d]&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="bbedf832b83cf67d1d445ceada9805aa72173218" translate="yes" xml:space="preserve">
          <source>Fake-quantize the 'inputs' tensor of type float via global float scalars</source>
          <target state="translated">전역 float 스칼라를 통해 float 유형의 '입력'텐서를 가짜 양자화</target>
        </trans-unit>
        <trans-unit id="f9ef99c6b8428d09f63e4a7d97f3a72400b7c4f6" translate="yes" xml:space="preserve">
          <source>Fake-quantize the 'inputs' tensor of type float via global float scalars &lt;code&gt;min&lt;/code&gt;</source>
          <target state="translated">글로벌 플로트 스칼라 거쳐서 float 유형의 &quot;입력&quot;텐서 가짜 양자화 &lt;code&gt;min&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe600ba02649a81014bb25f5be55edb94bb2afd8" translate="yes" xml:space="preserve">
          <source>Fake-quantize the 'inputs' tensor of type float via per-channel floats</source>
          <target state="translated">채널 별 float를 통해 float 유형의 '입력'텐서를 가짜 양자화</target>
        </trans-unit>
        <trans-unit id="f52fe643923782ecf2f3d6c9b84b44b2ba6f1284" translate="yes" xml:space="preserve">
          <source>Fake-quantize the 'inputs' tensor, type float to 'outputs' tensor of same type.</source>
          <target state="translated">'입력'텐서를 가짜 양자화하고, float 유형을 동일한 유형의 '출력'텐서로 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="c29ef0a243829482ef6b6023cbd2d09d0e889021" translate="yes" xml:space="preserve">
          <source>Fake-quantize the &lt;code&gt;inputs&lt;/code&gt; tensor of type float per-channel and one of the shapes: &lt;code&gt;[d]&lt;/code&gt;, &lt;code&gt;[b, d]&lt;/code&gt;&lt;code&gt;[b, h, w, d]&lt;/code&gt; via per-channel floats &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; of shape &lt;code&gt;[d]&lt;/code&gt; to &lt;code&gt;outputs&lt;/code&gt; tensor of same shape as &lt;code&gt;inputs&lt;/code&gt;.</source>
          <target state="translated">Fake-quantize the &lt;code&gt;inputs&lt;/code&gt; tensor of type float per-channel and one of the shapes: &lt;code&gt;[d]&lt;/code&gt; , &lt;code&gt;[b, d]&lt;/code&gt; &lt;code&gt;[b, h, w, d]&lt;/code&gt; via per-channel floats &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; of shape &lt;code&gt;[d]&lt;/code&gt; to &lt;code&gt;outputs&lt;/code&gt; tensor of same shape as &lt;code&gt;inputs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="727b1207b79f2486a519a9319dd200c9ea9de4c3" translate="yes" xml:space="preserve">
          <source>Fake-quantize the &lt;code&gt;inputs&lt;/code&gt; tensor of type float via global float scalars &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; to &lt;code&gt;outputs&lt;/code&gt; tensor of same shape as &lt;code&gt;inputs&lt;/code&gt;.</source>
          <target state="translated">Fake-quantize the &lt;code&gt;inputs&lt;/code&gt; tensor of type float via global float scalars &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; to &lt;code&gt;outputs&lt;/code&gt; tensor of same shape as &lt;code&gt;inputs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e46f348cd8b7889203cb448d1da505704d10fcb" translate="yes" xml:space="preserve">
          <source>FakeParam</source>
          <target state="translated">FakeParam</target>
        </trans-unit>
        <trans-unit id="f0defc54e271554782715e9167383c6b2d53151f" translate="yes" xml:space="preserve">
          <source>FakeQuantWithMinMaxArgs</source>
          <target state="translated">FakeQuantWithMinMaxArgs</target>
        </trans-unit>
        <trans-unit id="59c4408930e4b26ad854a59cd35ceee3cd12a936" translate="yes" xml:space="preserve">
          <source>FakeQuantWithMinMaxArgsGradient</source>
          <target state="translated">FakeQuantWithMinMaxArgsGradient</target>
        </trans-unit>
        <trans-unit id="9516add6c09133d08b61494ba8b5e16f3a1b95ee" translate="yes" xml:space="preserve">
          <source>FakeQuantWithMinMaxVars</source>
          <target state="translated">FakeQuantWithMinMaxVars</target>
        </trans-unit>
        <trans-unit id="47f90df5afb9d7d45bf8ddfa20626b2abefbf0aa" translate="yes" xml:space="preserve">
          <source>FakeQuantWithMinMaxVarsGradient</source>
          <target state="translated">FakeQuantWithMinMaxVarsGradient</target>
        </trans-unit>
        <trans-unit id="ce35d79dfb2d1f0c87514e8314f60eda45600d4e" translate="yes" xml:space="preserve">
          <source>FakeQuantWithMinMaxVarsPerChannel</source>
          <target state="translated">FakeQuantWithMinMaxVarsPerChannel</target>
        </trans-unit>
        <trans-unit id="7918bf198a7672ba7efcb25b3f8fbdd65d1206df" translate="yes" xml:space="preserve">
          <source>FakeQuantWithMinMaxVarsPerChannelGradient</source>
          <target state="translated">FakeQuantWithMinMaxVarsPerChannelGradient</target>
        </trans-unit>
        <trans-unit id="fc2a938c669af601e0e2b74ec4df166952f52ab4" translate="yes" xml:space="preserve">
          <source>FakeQueue</source>
          <target state="translated">FakeQueue</target>
        </trans-unit>
        <trans-unit id="f29ff2d48a6268f2adc2ad839d270aea14973b8a" translate="yes" xml:space="preserve">
          <source>False (inference): Mean must be a &lt;code&gt;Tensor&lt;/code&gt; of the same shape as scale containing the estimated population mean computed during training. is_training</source>
          <target state="translated">거짓 (추론) : 평균은 훈련 중에 계산 된 추정 모집단 평균을 포함하는 척도와 동일한 모양 의 &lt;code&gt;Tensor&lt;/code&gt; 여야합니다 . is_training</target>
        </trans-unit>
        <trans-unit id="4f6466b40658f50255a966ff6bc949e1eaf7f324" translate="yes" xml:space="preserve">
          <source>False: executes each operation asynchronously.</source>
          <target state="translated">False : 각 작업을 비동기 적으로 실행합니다.</target>
        </trans-unit>
        <trans-unit id="92bacbc01b8e8d65a81b7a577564a2ad70746d23" translate="yes" xml:space="preserve">
          <source>Fashion-MNIST dataset.</source>
          <target state="translated">패션 -MNIST 데이터 셋.</target>
        </trans-unit>
        <trans-unit id="6fe9878782b0da78594267486a5626a0be461e0b" translate="yes" xml:space="preserve">
          <source>Fast Fourier transform.</source>
          <target state="translated">빠른 푸리에 변환.</target>
        </trans-unit>
        <trans-unit id="360d68ba6f807c157ba9ba7b70550e6c9f3ffa4d" translate="yes" xml:space="preserve">
          <source>Fast GRU implementation backed by cuDNN.</source>
          <target state="translated">cuDNN이 지원하는 빠른 GRU 구현.</target>
        </trans-unit>
        <trans-unit id="8e8bb42b9fb0290de9166de7c16619501a1feb12" translate="yes" xml:space="preserve">
          <source>Fast LSTM implementation backed by cuDNN.</source>
          <target state="translated">cuDNN이 지원하는 빠른 LSTM 구현.</target>
        </trans-unit>
        <trans-unit id="4245fa3f7cbed5285f7a0350256c3ba269ba7d00" translate="yes" xml:space="preserve">
          <source>Fast and Accurate Deep Network Learning by Exponential Linear Units (ELUs)</source>
          <target state="translated">지수 선형 단위 (ELU)에 의한 빠르고 정확한 딥 네트워크 학습</target>
        </trans-unit>
        <trans-unit id="d8237bbce750fd0f52af835e027a65a99328e838" translate="yes" xml:space="preserve">
          <source>Fast and Accurate Deep Network Learning by Exponential Linear Units (ELUs) (Clevert et al, 2016)</source>
          <target state="translated">지수 선형 단위 (ELU)에 의한 빠르고 정확한 심층 네트워크 학습 (Clevert et al, 2016)</target>
        </trans-unit>
        <trans-unit id="16b1c1fc16a871c94652815a12e26ab11263cad5" translate="yes" xml:space="preserve">
          <source>Faster than sigmoid. Returns &lt;code&gt;0.&lt;/code&gt; if &lt;code&gt;x &amp;lt; -2.5&lt;/code&gt;, &lt;code&gt;1.&lt;/code&gt; if &lt;code&gt;x &amp;gt; 2.5&lt;/code&gt;. In &lt;code&gt;-2.5 &amp;lt;= x &amp;lt;= 2.5&lt;/code&gt;, returns &lt;code&gt;0.2 * x + 0.5&lt;/code&gt;.</source>
          <target state="translated">S 자형보다 빠릅니다. 반환 &lt;code&gt;0.&lt;/code&gt; 만약 &lt;code&gt;x &amp;lt; -2.5&lt;/code&gt; , &lt;code&gt;1.&lt;/code&gt; 의 경우 &lt;code&gt;x &amp;gt; 2.5&lt;/code&gt; . 에서 &lt;code&gt;-2.5 &amp;lt;= x &amp;lt;= 2.5&lt;/code&gt; , 반품 &lt;code&gt;0.2 * x + 0.5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6c1e072633d22e2aade44664891ba9a15e50cd9" translate="yes" xml:space="preserve">
          <source>Faster to compute than sigmoid activation.</source>
          <target state="translated">시그 모이 드 활성화보다 계산 속도가 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="34bfe60cc099d90bd06ed304ed295cf858476330" translate="yes" xml:space="preserve">
          <source>Feature columns are of type V2.</source>
          <target state="translated">기능 열은 V2 유형입니다.</target>
        </trans-unit>
        <trans-unit id="070e6dab4ad4acc3df2f022293102d5f296b468a" translate="yes" xml:space="preserve">
          <source>Feature-wise normalization of the data.</source>
          <target state="translated">데이터의 기능별 정규화.</target>
        </trans-unit>
        <trans-unit id="c8df39e24b85a777de03f489c7d7b28c6ce75e8b" translate="yes" xml:space="preserve">
          <source>Features to pass to &lt;code&gt;Model&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Model&lt;/code&gt; 에 전달할 기능 .</target>
        </trans-unit>
        <trans-unit id="18562ca43bb61eaf2ba3b85a644d004ea8dbd2c0" translate="yes" xml:space="preserve">
          <source>Feeds multiple Tensor values into the computation as an XLA tuple.</source>
          <target state="translated">여러 Tensor 값을 계산에 XLA 튜플로 공급합니다.</target>
        </trans-unit>
        <trans-unit id="f0393f05a48a53b0acc3a57a2c1f23aefef05410" translate="yes" xml:space="preserve">
          <source>Felix Gers, Jurgen Schmidhuber, and Fred Cummins. &quot;Learning to forget: Continual prediction with LSTM.&quot; IET, 850-855, 1999.</source>
          <target state="translated">Felix Gers, Jurgen Schmidhuber 및 Fred Cummins. &quot;잊는 법 배우기 : LSTM을 통한 지속적인 예측.&quot; IET, 850-855, 1999.</target>
        </trans-unit>
        <trans-unit id="cef781e4eba5fab9683184738bf500b8295f2bfa" translate="yes" xml:space="preserve">
          <source>Fetch the current asset path.</source>
          <target state="translated">현재 자산 경로를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7db8b651e30c06e23e32a46b09058541af7a5658" translate="yes" xml:space="preserve">
          <source>Fetches a list of optimizer variables in the default graph.</source>
          <target state="translated">기본 그래프에서 옵티 마이저 변수 목록을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="bff8257ab5af6c57135d5ef7ab020a8747f72ac0" translate="yes" xml:space="preserve">
          <source>Fetches multiple values from infeed as an XLA tuple.</source>
          <target state="translated">인피 드에서 여러 값을 XLA 튜플로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="208b0c51cfaca2d2db585f2665561398e6f952bf" translate="yes" xml:space="preserve">
          <source>Fetches the Jacobian-vector product computed for &lt;code&gt;primals&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;primals&lt;/code&gt; 에 대해 계산 된 Jacobian-vector 곱을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="37a293b575bf1d5a103c6e0e28889a74b7565cee" translate="yes" xml:space="preserve">
          <source>Fields:</source>
          <target state="translated">Fields:</target>
        </trans-unit>
        <trans-unit id="6c74664d5467bedeeec61d6de90b295aefeb2531" translate="yes" xml:space="preserve">
          <source>Figure illustrates the interaction of these components. &quot;/job:worker/task:0&quot; and &quot;/job:ps/task:0&quot; are both tasks with worker services.</source>
          <target state="translated">그림은 이러한 구성 요소의 상호 작용을 보여줍니다. &quot;/ job : worker / task : 0&quot;및 &quot;/ job : ps / task : 0&quot;은 모두 작업자 서비스의 작업입니다.</target>
        </trans-unit>
        <trans-unit id="159e9d467070447df6944016c6ee0bba81137641" translate="yes" xml:space="preserve">
          <source>File I/O wrappers without thread locking.</source>
          <target state="translated">스레드 잠금이없는 파일 I / O 랩퍼.</target>
        </trans-unit>
        <trans-unit id="584ee58755e2076e25264007123aa2d2050b00ff" translate="yes" xml:space="preserve">
          <source>File name of the plot image.</source>
          <target state="translated">플롯 이미지의 파일 이름입니다.</target>
        </trans-unit>
        <trans-unit id="c9f961ad24d1f79d5639b56b5b84eebf670b4873" translate="yes" xml:space="preserve">
          <source>File not found. Unable to parse input file.</source>
          <target state="translated">파일을 찾을 수 없습니다. 입력 파일을 구문 분석 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="661f27230645d7517555d35a4f8d6aebea7127b6" translate="yes" xml:space="preserve">
          <source>File object we write to. Default None means sys.stdout.</source>
          <target state="translated">우리가 쓰는 파일 객체. 기본값 없음은 sys.stdout을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="7c2587e69f02d48d802800b9b142e0a026de4abb" translate="yes" xml:space="preserve">
          <source>FileStatistics struct that contains information about the path</source>
          <target state="translated">경로에 대한 정보가 포함 된 FileStatistics 구조체</target>
        </trans-unit>
        <trans-unit id="527e8517195d6b5d4287766fb96efe43836a8f10" translate="yes" xml:space="preserve">
          <source>Filename for the graph.</source>
          <target state="translated">그래프의 파일 이름입니다.</target>
        </trans-unit>
        <trans-unit id="76400426742eb499ed7b34ca39d25c0a420914e8" translate="yes" xml:space="preserve">
          <source>Filename of the CSV file, e.g. &lt;code&gt;'run/log.csv'&lt;/code&gt;.</source>
          <target state="translated">CSV 파일의 파일 이름 (예 : &lt;code&gt;'run/log.csv'&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="47805197178266d81d15ed833d217302d0468cd7" translate="yes" xml:space="preserve">
          <source>Files in tar, tar.gz, tar.bz, and zip formats can also be extracted. Passing a hash will verify the file after download. The command line programs &lt;code&gt;shasum&lt;/code&gt; and &lt;code&gt;sha256sum&lt;/code&gt; can compute the hash.</source>
          <target state="translated">tar, tar.gz, tar.bz 및 zip 형식의 파일도 추출 할 수 있습니다. 해시를 전달하면 다운로드 후 파일이 확인됩니다. 명령 행 프로그램 &lt;code&gt;shasum&lt;/code&gt; 및 &lt;code&gt;sha256sum&lt;/code&gt; 은 해시를 계산할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7adb6736cf2c9ae017b128f98738ffbae0e58655" translate="yes" xml:space="preserve">
          <source>Fill</source>
          <target state="translated">Fill</target>
        </trans-unit>
        <trans-unit id="1ed5236bdaf974f37a0f419a92c7732085d21554" translate="yes" xml:space="preserve">
          <source>Fills empty rows in the input 2-D &lt;code&gt;SparseTensor&lt;/code&gt; with a default value.</source>
          <target state="translated">입력 2 차원 &lt;code&gt;SparseTensor&lt;/code&gt; 의 빈 행을 기본값으로 채 웁니다 .</target>
        </trans-unit>
        <trans-unit id="5e3594f61821d7256db224b8240957470bce4c5d" translate="yes" xml:space="preserve">
          <source>FilterByLastComponentDataset</source>
          <target state="translated">FilterByLastComponentDataset</target>
        </trans-unit>
        <trans-unit id="dfd7871a81a156bd17377802a56cf380df48a360" translate="yes" xml:space="preserve">
          <source>FilterDataset</source>
          <target state="translated">FilterDataset</target>
        </trans-unit>
        <trans-unit id="191ef391edf179c62838570c65fd5d59b43d8a96" translate="yes" xml:space="preserve">
          <source>Filters &lt;code&gt;sk_params&lt;/code&gt; and returns those in &lt;code&gt;fn&lt;/code&gt;'s arguments.</source>
          <target state="translated">필터 &lt;code&gt;sk_params&lt;/code&gt; 반환에 그 &lt;code&gt;fn&lt;/code&gt; 의 인수.</target>
        </trans-unit>
        <trans-unit id="d7f85fe5e0eb5829649fc74501c2797e0a5749f7" translate="yes" xml:space="preserve">
          <source>Filters stack frames from the module where this is used (best effort).</source>
          <target state="translated">이것이 사용되는 모듈에서 스택 프레임을 필터링합니다 (최선의 노력).</target>
        </trans-unit>
        <trans-unit id="f73b921eb11bf8c6c7c26ac1f940650c83b38724" translate="yes" xml:space="preserve">
          <source>Filters this dataset according to &lt;code&gt;predicate&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;predicate&lt;/code&gt; 에 따라이 데이터 세트를 필터링 합니다.</target>
        </trans-unit>
        <trans-unit id="f09cc083d67b76042568ffa75f3802f349b3495d" translate="yes" xml:space="preserve">
          <source>Filters this dataset according to &lt;code&gt;predicate&lt;/code&gt;. (deprecated)</source>
          <target state="translated">&lt;code&gt;predicate&lt;/code&gt; 에 따라이 데이터 세트를 필터링 합니다. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="c903b1bc45a8ada25a60850da0b09b84ebcde19f" translate="yes" xml:space="preserve">
          <source>Finalizes this graph, making it read-only.</source>
          <target state="translated">이 그래프를 마무리하여 읽기 전용으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="ecfa9d80e6f64745e132d951f00acbf9be7b6485" translate="yes" xml:space="preserve">
          <source>Finally use a method (such as &lt;a href=&quot;strategy#reduce&quot;&gt;&lt;code&gt;tf.distribute.Strategy.reduce&lt;/code&gt;&lt;/a&gt;) to convert the resulting &quot;per-replica&quot; values into ordinary &lt;code&gt;Tensor&lt;/code&gt;s.</source>
          <target state="translated">마지막으로 메소드 (예 : &lt;a href=&quot;strategy#reduce&quot;&gt; &lt;code&gt;tf.distribute.Strategy.reduce&lt;/code&gt; &lt;/a&gt; )를 사용하여 결과 &quot;복제 본당 &quot;값을 일반 &lt;code&gt;Tensor&lt;/code&gt; 로 변환하십시오 .</target>
        </trans-unit>
        <trans-unit id="3acf3bc9d828b2ec13c9c22f9d93cb8857e33537" translate="yes" xml:space="preserve">
          <source>Finds the filename of latest saved checkpoint file.</source>
          <target state="translated">최근에 저장된 체크 포인트 파일의 파일 이름을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="f5714c745bc465ce920adeb9148ea0e19c01510a" translate="yes" xml:space="preserve">
          <source>Finds the filename of the latest saved checkpoint file in &lt;code&gt;model_dir&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;model_dir&lt;/code&gt; 에서 최근 저장된 체크 포인트 파일의 파일 이름을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="c497ed1562ad942752e69be962a205e29a0fa402" translate="yes" xml:space="preserve">
          <source>Finds the index of the closest cluster center to each input point.</source>
          <target state="translated">각 입력 지점에 가장 가까운 군집 중심의 색인을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="8da15b6736177a4d172880d414ea982c2a73af6b" translate="yes" xml:space="preserve">
          <source>Finds unique elements along an axis of a tensor.</source>
          <target state="translated">텐서의 축을 따라 고유 한 요소를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="801ce4a21b2fba42ff49470d900e55ccd05344b0" translate="yes" xml:space="preserve">
          <source>Finds unique elements in a 1-D tensor.</source>
          <target state="translated">1 차원 텐서에서 고유 한 요소를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="ce1610505bb23ec2475caec959a3d3e9dcaa8b92" translate="yes" xml:space="preserve">
          <source>Finds values and indices of the &lt;code&gt;k&lt;/code&gt; largest elements for the last dimension.</source>
          <target state="translated">Finds values and indices of the &lt;code&gt;k&lt;/code&gt; largest elements for the last dimension.</target>
        </trans-unit>
        <trans-unit id="b67864305a840562104d7b5e16db9cc161966329" translate="yes" xml:space="preserve">
          <source>Finds values and indices of the &lt;code&gt;k&lt;/code&gt; largest entries for the last dimension.</source>
          <target state="translated">마지막 차원에 대해 가장 큰 &lt;code&gt;k&lt;/code&gt; 개 항목 의 값과 색인을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="d869f52ff41ab5eeded0e9e726302f4621f7c537" translate="yes" xml:space="preserve">
          <source>Finds values of the &lt;code&gt;n&lt;/code&gt;-th order statistic for the last dimension.</source>
          <target state="translated">Finds values of the &lt;code&gt;n&lt;/code&gt; -th order statistic for the last dimension.</target>
        </trans-unit>
        <trans-unit id="fed4c9053d8c85c9d95957c6e01431c7805f793d" translate="yes" xml:space="preserve">
          <source>Fingerprint</source>
          <target state="translated">Fingerprint</target>
        </trans-unit>
        <trans-unit id="af30be9d790e1e119e17560066c8c66fb8f37088" translate="yes" xml:space="preserve">
          <source>Fingerprint op considers the first dimension of &lt;code&gt;data&lt;/code&gt; as the batch dimension, and &lt;code&gt;output[i]&lt;/code&gt; contains the fingerprint value generated from contents in &lt;code&gt;data[i, ...]&lt;/code&gt; for all &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">지문 op는 &lt;code&gt;data&lt;/code&gt; 의 첫 번째 차원을 배치 차원으로 간주 하고 &lt;code&gt;output[i]&lt;/code&gt; 에는 모든 &lt;code&gt;i&lt;/code&gt; 에 대한 &lt;code&gt;data[i, ...]&lt;/code&gt; 내용에서 생성 된 지문 값이 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="76c15bbb59710f1b314ab98c78d26b50b325ff21" translate="yes" xml:space="preserve">
          <source>Fingerprint op writes fingerprint values as byte arrays. For example, the default method &lt;code&gt;farmhash64&lt;/code&gt; generates a 64-bit fingerprint value at a time. This 8-byte value is written out as an &lt;a href=&quot;../tf#uint8&quot;&gt;&lt;code&gt;tf.uint8&lt;/code&gt;&lt;/a&gt; array of size 8, in little-endian order.</source>
          <target state="translated">지문 op는 지문 값을 바이트 배열로 씁니다. 예를 들어 기본 방법 인 &lt;code&gt;farmhash64&lt;/code&gt; 는 한 번에 64 비트 지문 값을 생성합니다. 이 8 바이트 값은 리틀 엔디안 순서로 크기가 8 인 &lt;a href=&quot;../tf#uint8&quot;&gt; &lt;code&gt;tf.uint8&lt;/code&gt; &lt;/a&gt; 배열 로 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="24ae78f56927f08bdbc48d3e1281bff3edb20d8e" translate="yes" xml:space="preserve">
          <source>Fingerprint op writes fingerprint values as byte arrays. For example, the default method &lt;code&gt;farmhash64&lt;/code&gt; generates a 64-bit fingerprint value at a time. This 8-byte value is written out as an &lt;code&gt;uint8&lt;/code&gt; array of size 8, in little-endian order.</source>
          <target state="translated">지문 연산은 지문 값을 바이트 배열로 씁니다. 예를 들어 기본 메서드 &lt;code&gt;farmhash64&lt;/code&gt; 는 한 번에 64 비트 지문 값을 생성합니다. 이 8 바이트 값은 little-endian 순서로 크기가 8 인 &lt;code&gt;uint8&lt;/code&gt; 배열 로 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="a242c8a885f83aee8a0830dee3aaf16d961a5a01" translate="yes" xml:space="preserve">
          <source>First image batch.</source>
          <target state="translated">첫 번째 이미지 배치.</target>
        </trans-unit>
        <trans-unit id="1713f72b3872acdb411943d79c34f5f92844d757" translate="yes" xml:space="preserve">
          <source>First lets look at the &lt;code&gt;TPUStrategy&lt;/code&gt; mode. Initial setup looks like:</source>
          <target state="translated">먼저 &lt;code&gt;TPUStrategy&lt;/code&gt; 모드를 살펴 보겠습니다 . 초기 설정은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="88825dd2c9ca761b4e4082e799e362eccb087d5f" translate="yes" xml:space="preserve">
          <source>First set of images.</source>
          <target state="translated">첫 번째 이미지 세트.</target>
        </trans-unit>
        <trans-unit id="0294ba11a5be64d665b2772cb87eba1fb22ce5ec" translate="yes" xml:space="preserve">
          <source>First we define the following:</source>
          <target state="translated">먼저 다음을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="8f4e055f26792fc37dc0795930fb9e3effd084cc" translate="yes" xml:space="preserve">
          <source>Fits the data generator to some sample data.</source>
          <target state="translated">데이터 생성기를 일부 샘플 데이터에 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="c0b7fa426d96a8c15b52923880d79992cbbd900d" translate="yes" xml:space="preserve">
          <source>Fits the model on data yielded batch-by-batch by a Python generator. (deprecated)</source>
          <target state="translated">Python 생성기에서 배치별로 생성 된 데이터에 모델을 맞 춥니 다. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="12d2a04ec34e8795ff7f5f33aa56f7a77c8bcc78" translate="yes" xml:space="preserve">
          <source>Fits the state of the preprocessing layer to the data being passed.</source>
          <target state="translated">전처리 레이어의 상태를 전달중인 데이터에 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="6f150a50fe544ef1c90226d7313155896658e69c" translate="yes" xml:space="preserve">
          <source>Fits the state of the preprocessing layer to the dataset.</source>
          <target state="translated">전처리 레이어의 상태를 데이터 세트에 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="b4c93ad759588e5315cfabd75c2a83720a3e7ed5" translate="yes" xml:space="preserve">
          <source>FixedLengthRecordDataset</source>
          <target state="translated">FixedLengthRecordDataset</target>
        </trans-unit>
        <trans-unit id="3574a34e4d48af24eeac301a412e2a8ed6606857" translate="yes" xml:space="preserve">
          <source>FixedLengthRecordDatasetV2</source>
          <target state="translated">FixedLengthRecordDatasetV2</target>
        </trans-unit>
        <trans-unit id="35a112ec36d191800f440593ed2f721eccf12a2a" translate="yes" xml:space="preserve">
          <source>FixedLengthRecordReader</source>
          <target state="translated">FixedLengthRecordReader</target>
        </trans-unit>
        <trans-unit id="b90915625e692ba60987cbe78c6dfc6ac20d16f4" translate="yes" xml:space="preserve">
          <source>FixedLengthRecordReaderV2</source>
          <target state="translated">FixedLengthRecordReaderV2</target>
        </trans-unit>
        <trans-unit id="e8090f0ecfbc570479326449b41013d25258ad70" translate="yes" xml:space="preserve">
          <source>FixedUnigramCandidateSampler</source>
          <target state="translated">FixedUnigramCandidateSampler</target>
        </trans-unit>
        <trans-unit id="bd43985b6e84e310537bfc5ce6baae18de89f97d" translate="yes" xml:space="preserve">
          <source>Flag, a flag that is key to the module.</source>
          <target state="translated">플래그, 모듈의 핵심 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="aa2e1f778c6645f96905666b9789656bb26fed63" translate="yes" xml:space="preserve">
          <source>Flag, the Flag instance that is key to the module.</source>
          <target state="translated">Flag, 모듈의 핵심 인 Flag 인스턴스.</target>
        </trans-unit>
        <trans-unit id="c4094b5a2e81c815e8e34bcf4cd3b25eee8b9a58" translate="yes" xml:space="preserve">
          <source>FlagValues, if it is not None, it should be the FlagValues object where the second definition of flagname occurs. If it is None, we assume that we're being called when attempting to create the flag a second time, and we use the module calling this one as the source of the second definition.</source>
          <target state="translated">None이 아닌 경우 FlagValues는 flagname의 두 번째 정의가 발생하는 FlagValues ​​개체 여야합니다. None이면 두 번째 플래그를 만들려고 할 때 호출되고 있다고 가정하고 이것을 호출하는 모듈을 두 번째 정의의 소스로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="05ad94b7ab5cfa3bb49b5cf66ed68ef4cc88f05d" translate="yes" xml:space="preserve">
          <source>FlagValues, the FlagValues instance containing flags to remove.</source>
          <target state="translated">제거 할 플래그를 포함하는 FlagValues ​​인스턴스 인 FlagValues.</target>
        </trans-unit>
        <trans-unit id="e66158fb7032c7330f941e05310a8365855a84e2" translate="yes" xml:space="preserve">
          <source>FlagValues, the FlagValues instance containing the first definition of flagname.</source>
          <target state="translated">FlagValues, flagname의 첫 번째 정의를 포함하는 FlagValues ​​인스턴스.</target>
        </trans-unit>
        <trans-unit id="de3a1b2efacdb9266fcf824696665571c3cb5e29" translate="yes" xml:space="preserve">
          <source>FlagValues, the FlagValues instance from which to copy flags.</source>
          <target state="translated">FlagValues, 플래그를 복사 할 FlagValues ​​인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="34a98d203a5932a60d1d21ad86dfe32d7b596174" translate="yes" xml:space="preserve">
          <source>FlagValues, the FlagValues instance in which the flag will be declared as a key flag. This should almost never need to be overridden.</source>
          <target state="translated">FlagValues, 플래그가 키 플래그로 선언 될 FlagValues ​​인스턴스. 이것은 거의 무시할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="523577cd08a5dadf1fa8ca51be720cf50ea970e8" translate="yes" xml:space="preserve">
          <source>FlagValues, the FlagValues instance in which the flags will be declared as key flags. This should almost never need to be overridden.</source>
          <target state="translated">FlagValues, 플래그가 키 플래그로 선언되는 FlagValues ​​인스턴스. 이것은 거의 무시할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="1b9e34c5bedd5799d70c5be2dc016736bd7f599c" translate="yes" xml:space="preserve">
          <source>FlagValues, the FlagValues instance with which the flag will be registered. This should almost never need to be overridden.</source>
          <target state="translated">FlagValues, 플래그를 등록 할 FlagValues ​​인스턴스입니다. 이것은 거의 무시할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="ec9aa474a9d19af988bc2752388fc3ad87fabba8" translate="yes" xml:space="preserve">
          <source>FlatMapDataset</source>
          <target state="translated">FlatMapDataset</target>
        </trans-unit>
        <trans-unit id="be7c20b6836a1a8e925b2cd5cc10ae1834fe3d78" translate="yes" xml:space="preserve">
          <source>Flatten a tensor.</source>
          <target state="translated">텐서를 평평하게하십시오.</target>
        </trans-unit>
        <trans-unit id="b3f67378d5dfd2e28a398854dac316c760ad7f67" translate="yes" xml:space="preserve">
          <source>Flattening a 3D tensor to 2D by collapsing the last dimension.</source>
          <target state="translated">마지막 치수를 축소하여 3D 텐서를 2D로 평면화합니다.</target>
        </trans-unit>
        <trans-unit id="98d6725dbcd4174b52a67ca8012a9fe8d4866758" translate="yes" xml:space="preserve">
          <source>Flattens an input tensor while preserving the batch axis (axis 0).</source>
          <target state="translated">배치 축 (축 0)을 유지하면서 입력 텐서를 평탄화합니다.</target>
        </trans-unit>
        <trans-unit id="56b885e27e87eca4ac7366c4be1d9b94ad78c3ef" translate="yes" xml:space="preserve">
          <source>Flattens the filter to a 2-D matrix with shape &lt;code&gt;[filter_height * filter_width * in_channels, output_channels]&lt;/code&gt;.</source>
          <target state="translated">필터를 &lt;code&gt;[filter_height * filter_width * in_channels, output_channels]&lt;/code&gt; 모양의 2 차원 행렬로 평면화 합니다.</target>
        </trans-unit>
        <trans-unit id="0d2a63b5612a9d61a1bb9f06334c61eebfd78ea2" translate="yes" xml:space="preserve">
          <source>Flattens the input. Does not affect the batch size.</source>
          <target state="translated">입력을 평평하게합니다. 배치 크기에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="604fa3f4b0a02d70b991c191d54820a41775d62a" translate="yes" xml:space="preserve">
          <source>Flip an image horizontally (left to right).</source>
          <target state="translated">이미지를 가로로 뒤집습니다 (왼쪽에서 오른쪽으로).</target>
        </trans-unit>
        <trans-unit id="94b52601c861ca2ab292144c650c85f55273f72f" translate="yes" xml:space="preserve">
          <source>Flip an image vertically (upside down).</source>
          <target state="translated">이미지를 세로로 뒤집습니다 (거꾸로).</target>
        </trans-unit>
        <trans-unit id="3d3f317cb7fee65325f7052ae8fe630967b8fe4c" translate="yes" xml:space="preserve">
          <source>Flip each bit of supported types. For example, type &lt;code&gt;int8&lt;/code&gt; (decimal 2) binary 00000010 becomes (decimal -3) binary 11111101. This operation is performed on each element of the tensor argument &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">지원되는 유형의 각 비트를 뒤집습니다. 예를 들어, &lt;code&gt;int8&lt;/code&gt; (10 진수 2) 이진수 00000010은 (10 진수 -3) 이진수 11111101이됩니다.이 작업은 텐서 인수 &lt;code&gt;x&lt;/code&gt; 의 각 요소에서 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="dcda6c98cb9e0a0755cc58255d1c2b6975073159" translate="yes" xml:space="preserve">
          <source>Flipping, Rotating and Transposing</source>
          <target state="translated">뒤집기, 회전 및 조옮김</target>
        </trans-unit>
        <trans-unit id="68474eaa2dfbf245adcb7772e577a27e89ca992f" translate="yes" xml:space="preserve">
          <source>Float &amp;gt;= 0. Maximum activation value. Default to None, which means unlimited.</source>
          <target state="translated">Float&amp;gt; = 0. 최대 활성화 값. 기본값은 없음으로 무제한을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="45c02bc3f6133f11fb75ea8a03fc5d60230f9825" translate="yes" xml:space="preserve">
          <source>Float &amp;gt;= 0. Negative slope coefficient. Default to 0.</source>
          <target state="translated">Float&amp;gt; = 0. 음의 기울기 계수. 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="c7d12594d8171788bee6da84ae17e9e6935dd960" translate="yes" xml:space="preserve">
          <source>Float &amp;gt;= 0. Negative slope coefficient. Default to 0.3.</source>
          <target state="translated">Float&amp;gt; = 0. 음의 기울기 계수. 기본값은 0.3입니다.</target>
        </trans-unit>
        <trans-unit id="9be19122321c8821714126391793d30f54fefef8" translate="yes" xml:space="preserve">
          <source>Float &amp;gt;= 0. Threshold location of activation.</source>
          <target state="translated">Float&amp;gt; = 0. 활성화 임계 값 위치.</target>
        </trans-unit>
        <trans-unit id="11f86fc1cf0e82078e671d21863798aa25b378e8" translate="yes" xml:space="preserve">
          <source>Float &lt;code&gt;Tensor&lt;/code&gt; with shape [D1, ... DN, num_classes] where N &amp;gt;= 1. Commonly, N=1 and &lt;code&gt;predictions&lt;/code&gt; has shape [batch size, num_classes]. The final dimension contains the logit values for each class. [D1, ... DN] must match &lt;code&gt;labels&lt;/code&gt;.</source>
          <target state="translated">형태가 [D1, ... DN, num_classes] 인 부동 &lt;code&gt;Tensor&lt;/code&gt; 여기서 N&amp;gt; = 1입니다. 일반적으로 N = 1이고 &lt;code&gt;predictions&lt;/code&gt; 은 형태 [배치 크기, num_classes]를 갖습니다. 최종 차원에는 각 클래스의 로짓 값이 포함됩니다. [D1, ... DN]은 &lt;code&gt;labels&lt;/code&gt; 과 일치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6943d4a865cbffca174e2885620f7eb9333c71a0" translate="yes" xml:space="preserve">
          <source>Float &lt;code&gt;Tensor&lt;/code&gt; with shape [D1, ... DN, num_classes] where N &amp;gt;= 1. Commonly, N=1 and predictions has shape [batch size, num_classes]. The final dimension contains the logit values for each class. [D1, ... DN] must match &lt;code&gt;labels&lt;/code&gt;.</source>
          <target state="translated">형태가 [D1, ... DN, num_classes] 인 부동 &lt;code&gt;Tensor&lt;/code&gt; 여기서 N&amp;gt; = 1입니다. 일반적으로 N = 1이고 예측은 형태 [배치 크기, num_classes]를 갖습니다. 최종 차원에는 각 클래스의 로짓 값이 포함됩니다. [D1, ... DN]은 &lt;code&gt;labels&lt;/code&gt; 과 일치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="bfee5d04425b55ed3c9e7a09590913fec4ce70f2" translate="yes" xml:space="preserve">
          <source>Float &lt;code&gt;[batch_size, num_classes]&lt;/code&gt; logits outputs of the network.</source>
          <target state="translated">Float &lt;code&gt;[batch_size, num_classes]&lt;/code&gt; 는 네트워크의 출력을 로짓합니다.</target>
        </trans-unit>
        <trans-unit id="517d085479f5cda5431638e7e5e8ca05dd220945" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the dataset to be used as test data. Defaults to 0.2, meaning 20% of the dataset is used as test data.</source>
          <target state="translated">0과 1 사이의 부동 소수점입니다. 테스트 데이터로 사용할 데이터 세트의 일부입니다. 기본값은 0.2로, 데이터 세트의 20 %가 테스트 데이터로 사용됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="e9c8249e6941260faf8265f241d81626aeb48987" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the input units to drop.</source>
          <target state="translated">0과 1 사이의 부동 소수점입니다. 드롭 할 입력 단위의 비율입니다.</target>
        </trans-unit>
        <trans-unit id="e0f17f81d04b5a69e3312a3e85057813edf15cf7" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the training data to be used as validation data. The model will set apart this fraction of the training data, will not train on it, and will evaluate the loss and any model metrics on this data at the end of each epoch. The validation data is selected from the last samples in the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; data provided, before shuffling. This argument is not supported when &lt;code&gt;x&lt;/code&gt; is a dataset, generator or &lt;a href=&quot;../utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">0과 1 사이의 부동 소수점입니다. 검증 데이터로 사용할 훈련 데이터의 일부입니다. 모델은 학습 데이터의이 부분을 구분하고 학습하지 않으며 각 세대가 끝날 때이 데이터에 대한 손실 및 모델 메트릭을 평가합니다. 유효성 검사 데이터는 셔플 링하기 전에 제공된 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 데이터 의 마지막 샘플에서 선택됩니다 . &lt;code&gt;x&lt;/code&gt; 가 데이터 세트, 생성기 또는 &lt;a href=&quot;../utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt; 인스턴스 인 경우이 인수는 지원되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="3a03838e31ae32dff4cbddc4baeaf2074d2453dd" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the training data to be used as validation data. The model will set apart this fraction of the training data, will not train on it, and will evaluate the loss and any model metrics on this data at the end of each epoch. The validation data is selected from the last samples in the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; data provided, before shuffling. This argument is not supported when &lt;code&gt;x&lt;/code&gt; is a dataset, generator or &lt;a href=&quot;utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">0과 1 사이의 부동 소수점입니다. 검증 데이터로 사용할 훈련 데이터의 일부입니다. 모델은 학습 데이터의이 부분을 구분하고 학습하지 않으며 각 세대가 끝날 때이 데이터에 대한 손실 및 모델 메트릭을 평가합니다. 유효성 검사 데이터는 셔플 링하기 전에 제공된 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 데이터 의 마지막 샘플에서 선택됩니다 . &lt;code&gt;x&lt;/code&gt; 가 데이터 세트, 생성기 또는 &lt;a href=&quot;utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt; 인스턴스 인 경우이 인수는 지원되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="fb694ad9da36e4c6e6511fda4c64089561c3b567" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the units to drop for the attention scores.</source>
          <target state="translated">0과 1 사이의 부동 소수점입니다.주의 점수를 위해 떨어 뜨릴 단위의 비율입니다.</target>
        </trans-unit>
        <trans-unit id="9d744e34143b64f1c95f03f4eeb55dcb4b1b9b7e" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the units to drop for the linear transformation of the inputs.</source>
          <target state="translated">0과 1 사이의 부동 소수점입니다. 입력의 선형 변환을 위해 드롭 할 단위의 분수입니다.</target>
        </trans-unit>
        <trans-unit id="9a9a9fde9c898e8df4e03950cdd4bfe7e409334b" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the units to drop for the linear transformation of the inputs. Default: 0.</source>
          <target state="translated">0과 1 사이의 부동 소수점입니다. 입력의 선형 변환을 위해 드롭 할 단위의 분수입니다. 기본값 : 0.</target>
        </trans-unit>
        <trans-unit id="6120061a59f7fa93691e8f9a7f7d69c6882fe17e" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the units to drop for the linear transformation of the recurrent state.</source>
          <target state="translated">0과 1 사이의 부동 소수점입니다. 반복 상태의 선형 변환을 위해 드롭 할 단위의 비율입니다.</target>
        </trans-unit>
        <trans-unit id="cd1b02c175939fbac4ba1a3690a49b6760ce6db4" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the units to drop for the linear transformation of the recurrent state. Default: 0.</source>
          <target state="translated">0과 1 사이의 부동 소수점입니다. 반복 상태의 선형 변환을 위해 드롭 할 단위의 비율입니다. 기본값 : 0.</target>
        </trans-unit>
        <trans-unit id="06bab07d87f67062be43b4853d5ba6a86f11c1fa" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. controls the width of the network. This is known as the width multiplier in the MobileNetV2 paper, but the name is kept for consistency with &lt;code&gt;applications.MobileNetV1&lt;/code&gt; model in Keras.</source>
          <target state="translated">0과 1 사이의 부동은 네트워크의 너비를 제어합니다. 이것은 MobileNetV2 논문에서 너비 승수로 알려져 있지만, 이름은 Keras의 &lt;code&gt;applications.MobileNetV1&lt;/code&gt; 모델 과의 일관성을 위해 유지됩니다 .</target>
        </trans-unit>
        <trans-unit id="c31711227ec413764215a5f8420434d3a2e3ab01" translate="yes" xml:space="preserve">
          <source>Float in [0, 1]. If &amp;gt; &lt;code&gt;0&lt;/code&gt; then smooth the labels.</source>
          <target state="translated">[0, 1]에서 부동합니다. &amp;gt; &lt;code&gt;0&lt;/code&gt; 이면 레이블을 다듬습니다.</target>
        </trans-unit>
        <trans-unit id="65ed0dffee2ad958b3c7a5730581f019bcdfee82" translate="yes" xml:space="preserve">
          <source>Float in [0, 1]. When &amp;gt; 0, label values are smoothed, meaning the confidence on label values are relaxed. e.g. &lt;code&gt;label_smoothing=0.2&lt;/code&gt; means that we will use a value of &lt;code&gt;0.1&lt;/code&gt; for label &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;0.9&lt;/code&gt; for label &lt;code&gt;1&lt;/code&gt;&quot;</source>
          <target state="translated">[0, 1]에서 부동합니다. &amp;gt; 0이면 레이블 값이 평활화되어 레이블 값에 대한 신뢰도가 완화됩니다. 예 &lt;code&gt;label_smoothing=0.2&lt;/code&gt; 는 우리의 값 사용해야한다는 &lt;code&gt;0.1&lt;/code&gt; 라벨 &lt;code&gt;0&lt;/code&gt; 및 &lt;code&gt;0.9&lt;/code&gt; 라벨 &lt;code&gt;1&lt;/code&gt; &quot;</target>
        </trans-unit>
        <trans-unit id="542ca9d0b8111373cb343d51c4f7653bd67ac923" translate="yes" xml:space="preserve">
          <source>Float in [0, 1]. When 0, no smoothing occurs. When &amp;gt; 0, we compute the loss between the predicted labels and a smoothed version of the true labels, where the smoothing squeezes the labels towards 0.5. Larger values of &lt;code&gt;label_smoothing&lt;/code&gt; correspond to heavier smoothing.</source>
          <target state="translated">[0, 1]에서 부동합니다. 0이면 스무딩이 발생하지 않습니다. 0보다 크면 예측 된 레이블과 실제 레이블의 평활화 된 버전 간의 손실을 계산합니다. 여기서 평활화는 레이블을 0.5로 압축합니다. 더 큰 &lt;code&gt;label_smoothing&lt;/code&gt; 값은 더 무거운 평활화에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="571a944629b74395deeef2dd46c89375833ef1ec" translate="yes" xml:space="preserve">
          <source>Float or Int. Value used for points outside the boundaries when &lt;code&gt;fill_mode = &quot;constant&quot;&lt;/code&gt;.</source>
          <target state="translated">Float 또는 Int. &lt;code&gt;fill_mode = &quot;constant&quot;&lt;/code&gt; 때 경계 외부의 점에 사용되는 값 입니다.</target>
        </trans-unit>
        <trans-unit id="23c7373c4d600371c8388f4ec8d1368219eb307f" translate="yes" xml:space="preserve">
          <source>Float or String, padding value. (Optional, defaults to 0.)</source>
          <target state="translated">Float 또는 String, 패딩 값. (선택 사항, 기본값은 0입니다.)</target>
        </trans-unit>
        <trans-unit id="db15264d2f77064978f496269f734646754696a9" translate="yes" xml:space="preserve">
          <source>Float or [lower, upper]. Range for random zoom. If a float, &lt;code&gt;[lower, upper] = [1-zoom_range, 1+zoom_range]&lt;/code&gt;.</source>
          <target state="translated">Float 또는 [lower, upper]. 무작위 줌 범위. float 인 경우 &lt;code&gt;[lower, upper] = [1-zoom_range, 1+zoom_range]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="657b826a18a5ab0724c4bee3029a6fe179a224d6" translate="yes" xml:space="preserve">
          <source>Float or complex &lt;code&gt;Tensor&lt;/code&gt;, same &lt;code&gt;dtype&lt;/code&gt; as, and broadcastable to, &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">Float 또는 복잡한 &lt;code&gt;Tensor&lt;/code&gt; , &lt;code&gt;x&lt;/code&gt; 와 동일한 &lt;code&gt;dtype&lt;/code&gt; 및 브로드 캐스트 가능 .</target>
        </trans-unit>
        <trans-unit id="4cc356951b1ebf8bcf6c4f33900eda3669d369c2" translate="yes" xml:space="preserve">
          <source>Float or complex &lt;code&gt;Tensor&lt;/code&gt;, same dtype as and broadcastable to &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">Float 또는 복잡한 &lt;code&gt;Tensor&lt;/code&gt; , 동일한 dtype이며 &lt;code&gt;x&lt;/code&gt; 로 브로드 캐스팅 가능합니다 .</target>
        </trans-unit>
        <trans-unit id="be97356e0e6bb617cad32df5f2dc24252713dbdb" translate="yes" xml:space="preserve">
          <source>Float or complex &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">Float 또는 복잡한 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab97103686ce99291d77e40e99e85c96e3e49b99" translate="yes" xml:space="preserve">
          <source>Float, 1-D array-like or int</source>
          <target state="translated">부동, 1 차원 배열 유사 또는 정수</target>
        </trans-unit>
        <trans-unit id="05fc673ce09e5453387e297c70756854196ead55" translate="yes" xml:space="preserve">
          <source>Float, drop probability (as with &lt;code&gt;Dropout&lt;/code&gt;). The multiplicative noise will have standard deviation &lt;code&gt;sqrt(rate / (1 - rate))&lt;/code&gt;.</source>
          <target state="translated">Float, drop 확률 ( &lt;code&gt;Dropout&lt;/code&gt; 과 같이 ). 곱셈 노이즈는 표준 편차 &lt;code&gt;sqrt(rate / (1 - rate))&lt;/code&gt; 를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="f6af1b96050d537498291ec624ed09409794a092" translate="yes" xml:space="preserve">
          <source>Float, lower boundary of the output interval.</source>
          <target state="translated">플로트, 출력 간격의 하한.</target>
        </trans-unit>
        <trans-unit id="d83467c093496629270603f2b93822a26ada466a" translate="yes" xml:space="preserve">
          <source>Float, mean of the normal distribution.</source>
          <target state="translated">정규 분포의 평균.</target>
        </trans-unit>
        <trans-unit id="c353aa659bac6e7ec221e19db500b9e130d4c927" translate="yes" xml:space="preserve">
          <source>Float, standard deviation of the noise distribution.</source>
          <target state="translated">노이즈 분포의 부동, 표준 편차입니다.</target>
        </trans-unit>
        <trans-unit id="5dbe8b05653a4a49ffc6852b7a7a22396cc5412d" translate="yes" xml:space="preserve">
          <source>Float, standard deviation of the normal distribution.</source>
          <target state="translated">정규 분포의 부동, 표준 편차입니다.</target>
        </trans-unit>
        <trans-unit id="1f896efb7c89a8ed25cdd8ebd048ab467a6e6181" translate="yes" xml:space="preserve">
          <source>Float, the offset to apply to the inputs.</source>
          <target state="translated">Float, 입력에 적용 할 오프셋입니다.</target>
        </trans-unit>
        <trans-unit id="5d45b04048fc2269b71a6ac7ead70ebc4bcdfaeb" translate="yes" xml:space="preserve">
          <source>Float, the scale to apply to the inputs.</source>
          <target state="translated">Float, 입력에 적용 할 스케일.</target>
        </trans-unit>
        <trans-unit id="beaaae9f08955516005c76ecbc47953c81affd96" translate="yes" xml:space="preserve">
          <source>Float, upper boundary of the output interval.</source>
          <target state="translated">플로트, 출력 간격의 상한.</target>
        </trans-unit>
        <trans-unit id="e86ccaab14de4c58d861390f0e0692236672fba5" translate="yes" xml:space="preserve">
          <source>Float. A multiplicative factor by which the values will be scaled.</source>
          <target state="translated">흙손. 값의 배율이 조정되는 곱셈 요소입니다.</target>
        </trans-unit>
        <trans-unit id="084fa1e5102b2fd03b8229b23e59b95fcc0e480c" translate="yes" xml:space="preserve">
          <source>Float. Fraction of images reserved for validation (strictly between 0 and 1).</source>
          <target state="translated">흙손. 유효성 검사를 위해 예약 된 이미지의 일부입니다 (엄격히 0에서 1 사이).</target>
        </trans-unit>
        <trans-unit id="2a153ad993b58e91534aaa1b0194100c39e780a2" translate="yes" xml:space="preserve">
          <source>Float. Range for random channel shifts.</source>
          <target state="translated">흙손. 무작위 채널 이동 범위.</target>
        </trans-unit>
        <trans-unit id="f298b29df0aaed3c2269372e55d5d95d6479cc14" translate="yes" xml:space="preserve">
          <source>Float. Shear Intensity (Shear angle in counter-clockwise direction in degrees)</source>
          <target state="translated">흙손. 전단 강도 (시계 반대 방향의 전단 각도 (도))</target>
        </trans-unit>
        <trans-unit id="d61a6c9d692f4f07e8ed530942501016a4e248b8" translate="yes" xml:space="preserve">
          <source>Float. Sleep for up to that many seconds waiting for should_stop() to become True.</source>
          <target state="translated">흙손. should_stop ()이 True가 될 때까지 기다리는 최대 수 초 동안 절전 모드를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="b216453945e2387161200857251f449d037b3948" translate="yes" xml:space="preserve">
          <source>Float. The decay to use.</source>
          <target state="translated">흙손. 사용할 부패입니다.</target>
        </trans-unit>
        <trans-unit id="6a8d2374e2cdf12bb0ad483865021b7b46af8084" translate="yes" xml:space="preserve">
          <source>Float. Threshold value for thresholded activation. Default to 0.</source>
          <target state="translated">흙손. 임계 값 활성화에 대한 임계 값입니다. 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="7bb464c8d0de78b41f137b84b0a45a7ef1df1306" translate="yes" xml:space="preserve">
          <source>Float; L1 regularization factor.</source>
          <target state="translated">흙손; L1 정규화 인자.</target>
        </trans-unit>
        <trans-unit id="e545332d824ca10ae9436e8e94121d2688432cd4" translate="yes" xml:space="preserve">
          <source>Float; L2 regularization factor.</source>
          <target state="translated">흙손; L2 정규화 인자.</target>
        </trans-unit>
        <trans-unit id="d98d28f78e216bda13139a52fd08416526b5fd50" translate="yes" xml:space="preserve">
          <source>Floating point dtype of &lt;code&gt;alpha&lt;/code&gt;, &lt;code&gt;beta&lt;/code&gt;, and the output.</source>
          <target state="translated">&lt;code&gt;alpha&lt;/code&gt; , &lt;code&gt;beta&lt;/code&gt; 및 출력 의 부동 소수점 dtype .</target>
        </trans-unit>
        <trans-unit id="1108f1c23cbc1e57319f627f818d48f1bc5ea8b3" translate="yes" xml:space="preserve">
          <source>Floating point tensor representing unnormalized log-probabilities of a positive event with shape broadcastable to &lt;code&gt;[N1,..., Nm, K]&lt;/code&gt;&lt;code&gt;m &amp;gt;= 0&lt;/code&gt;, and the same dtype as &lt;code&gt;total_count&lt;/code&gt;. Defines this as a batch of &lt;code&gt;N1 x ... x Nm&lt;/code&gt; different &lt;code&gt;K&lt;/code&gt; class Multinomial distributions. Only one of &lt;code&gt;logits&lt;/code&gt; or &lt;code&gt;probs&lt;/code&gt; should be passed in.</source>
          <target state="translated">&lt;code&gt;[N1,..., Nm, K]&lt;/code&gt; &lt;code&gt;m &amp;gt;= 0&lt;/code&gt; 브로드 캐스팅 할 수있는 모양 과 &lt;code&gt;total_count&lt;/code&gt; 와 동일한 dtype을 가진 양의 이벤트의 정규화되지 않은 로그 확률을 나타내는 부동 소수점 텐서 . 이것을 &lt;code&gt;N1 x ... x Nm&lt;/code&gt; 서로 다른 &lt;code&gt;K&lt;/code&gt; 클래스 다항 분포 의 배치로 정의합니다 . 단 하나 &lt;code&gt;logits&lt;/code&gt; 또는 &lt;code&gt;probs&lt;/code&gt; 가 전달되어야한다.</target>
        </trans-unit>
        <trans-unit id="ecab45c217e3d9a346314ec4e398aa11dd87ce21" translate="yes" xml:space="preserve">
          <source>Floating point tensor which characterizes the location (center) of the distribution.</source>
          <target state="translated">분포의 위치 (중심)를 특성화하는 부동 소수점 텐서.</target>
        </trans-unit>
        <trans-unit id="c22ad41332a3111722a8770b295e776925f1ab64" translate="yes" xml:space="preserve">
          <source>Floating point tensor, equivalent to &lt;code&gt;1 / mean&lt;/code&gt;. Must contain only positive values.</source>
          <target state="translated">&lt;code&gt;1 / mean&lt;/code&gt; 해당하는 부동 소수점 텐서 . 양수 값만 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="ebec1c58e95127ff044f512a93e456ed5e0f423a" translate="yes" xml:space="preserve">
          <source>Floating point tensor, lower boundary of the output interval. Must have &lt;code&gt;low &amp;lt; high&lt;/code&gt;.</source>
          <target state="translated">부동 소수점 텐서, 출력 간격의 하한. &lt;code&gt;low &amp;lt; high&lt;/code&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="b0a469e0804bf541623d16583f6919e570634685" translate="yes" xml:space="preserve">
          <source>Floating point tensor, the concentration params of the distribution(s). Must contain only positive values.</source>
          <target state="translated">부동 소수점 텐서, 분포의 농도 매개 변수. 양수 값만 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="4c8a724a94fb47724c39c1be0f5af846a44c632d" translate="yes" xml:space="preserve">
          <source>Floating point tensor, the inverse scale params of the distribution(s). Must contain only positive values.</source>
          <target state="translated">부동 소수점 텐서, 분포의 역 스케일 매개 변수. 양수 값만 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="5327a6fa2b169fe97edfd87b3231c2fc0e85d1d3" translate="yes" xml:space="preserve">
          <source>Floating point tensor, upper boundary of the output interval. Must have &lt;code&gt;low &amp;lt; high&lt;/code&gt;.</source>
          <target state="translated">부동 소수점 텐서, 출력 간격의 상한. &lt;code&gt;low &amp;lt; high&lt;/code&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="f21ecae5ea295908a041bff28ab082db7d65a86e" translate="yes" xml:space="preserve">
          <source>Floating point tensor; the means of the distribution(s).</source>
          <target state="translated">부동 소수점 텐서; 분배 수단.</target>
        </trans-unit>
        <trans-unit id="f1f7e6b0fe6613bd3d52f8409a688348e04f4a6d" translate="yes" xml:space="preserve">
          <source>Floating point tensor; the stddevs of the distribution(s). Must contain only positive values.</source>
          <target state="translated">부동 소수점 텐서; 배포판의 stddev. 양수 값만 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="ddaf74f02e9ba66941d4fb8e98d09812330541ef" translate="yes" xml:space="preserve">
          <source>Floating-point &lt;code&gt;Tensor&lt;/code&gt; with shape &lt;code&gt;[B1, ..., Bn, k', k']&lt;/code&gt; where the first &lt;code&gt;n&lt;/code&gt; dimensions are batch coordinates and &lt;code&gt;k' = reduce_prod(self.event_shape)&lt;/code&gt;.</source>
          <target state="translated">부동 소수점 &lt;code&gt;Tensor&lt;/code&gt; 형상 &lt;code&gt;[B1, ..., Bn, k', k']&lt;/code&gt; 제 &lt;code&gt;n&lt;/code&gt; 차원 좌표가 배치되고, &lt;code&gt;k' = reduce_prod(self.event_shape)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1009ba855ce72dff0358aacd603e698195e0cc2e" translate="yes" xml:space="preserve">
          <source>Floating-point &lt;code&gt;Tensor&lt;/code&gt; with shape identical to &lt;code&gt;batch_shape + event_shape&lt;/code&gt;, i.e., the same shape as &lt;code&gt;self.mean()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;batch_shape + event_shape&lt;/code&gt; 와 모양이 동일한 부동 소수점 &lt;code&gt;Tensor&lt;/code&gt; , 즉 &lt;code&gt;self.mean()&lt;/code&gt; 과 동일한 모양 .</target>
        </trans-unit>
        <trans-unit id="bc7844a942513a10bbbb9e00e72332f173c63976" translate="yes" xml:space="preserve">
          <source>Floating-point &lt;code&gt;Tensor&lt;/code&gt;. The degrees of freedom of the distribution(s). &lt;code&gt;df&lt;/code&gt; must contain only positive values.</source>
          <target state="translated">부동 소수점 &lt;code&gt;Tensor&lt;/code&gt; . 분포의 자유도입니다. &lt;code&gt;df&lt;/code&gt; 는 양수 값만 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="9d90b467f05cdb99ed3725de235ef01720d9a043" translate="yes" xml:space="preserve">
          <source>Floating-point &lt;code&gt;Tensor&lt;/code&gt;. The mean(s) of the distribution(s).</source>
          <target state="translated">부동 소수점 &lt;code&gt;Tensor&lt;/code&gt; . 분포의 평균입니다.</target>
        </trans-unit>
        <trans-unit id="30e8504e26a1e405a364b16182f146926ce77d1d" translate="yes" xml:space="preserve">
          <source>Floating-point &lt;code&gt;Tensor&lt;/code&gt;. The scaling factor(s) for the distribution(s). Note that &lt;code&gt;scale&lt;/code&gt; is not technically the standard deviation of this distribution but has semantics more similar to standard deviation than variance.</source>
          <target state="translated">부동 소수점 &lt;code&gt;Tensor&lt;/code&gt; . 분포에 대한 배율 인수입니다. 참고 &lt;code&gt;scale&lt;/code&gt; 기술적이 분포의 표준 편차가 아니라 분산 표준 편차보다 더 유사한 의미를 갖는다.</target>
        </trans-unit>
        <trans-unit id="7db82f74092fc3160e6bc0d9e9bd4849c5c06c0f" translate="yes" xml:space="preserve">
          <source>Floor</source>
          <target state="translated">Floor</target>
        </trans-unit>
        <trans-unit id="6459c53ba8e729ad9aabb9ade4a34e551f147d2f" translate="yes" xml:space="preserve">
          <source>FloorDiv</source>
          <target state="translated">FloorDiv</target>
        </trans-unit>
        <trans-unit id="e19f1321e0f0e74f314d249fb2231ea22ddbb827" translate="yes" xml:space="preserve">
          <source>FloorMod</source>
          <target state="translated">FloorMod</target>
        </trans-unit>
        <trans-unit id="3a522d2554ce1f4be52f55076b2741713cbd45ec" translate="yes" xml:space="preserve">
          <source>Flush the file.</source>
          <target state="translated">파일을 비 웁니다.</target>
        </trans-unit>
        <trans-unit id="dd5993032f3482cc7f5027e64c00852d5ba8b251" translate="yes" xml:space="preserve">
          <source>Flush the quantile summaries from each quantile stream resource.</source>
          <target state="translated">각 Quantile 스트림 리소스에서 Quantile 요약을 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="dfeaaa5a96eaede43e8bbe386e2dc6ef41feac38" translate="yes" xml:space="preserve">
          <source>Flush the summaries for a quantile stream resource.</source>
          <target state="translated">Quantile 스트림 리소스에 대한 요약을 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="bd5e3fc25c8039e27103eb4fe6d62a39fa677f1d" translate="yes" xml:space="preserve">
          <source>FlushSummaryWriter</source>
          <target state="translated">FlushSummaryWriter</target>
        </trans-unit>
        <trans-unit id="6f8d4e8b184b36bf829848dabccbd29eed8aad30" translate="yes" xml:space="preserve">
          <source>Flushes and closes the summary writer.</source>
          <target state="translated">요약 작성자를 플러시하고 닫습니다.</target>
        </trans-unit>
        <trans-unit id="9dbf53cec96a5446255caa0966d9befabc811892" translate="yes" xml:space="preserve">
          <source>Flushes any buffered data.</source>
          <target state="translated">버퍼링 된 데이터를 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="bb205e45a353b942abb883e789503bde26fce540" translate="yes" xml:space="preserve">
          <source>Flushes the Writable file.</source>
          <target state="translated">쓰기 가능 파일을 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="7ba4cab89493ed49c06282e139f3f44d50a23884" translate="yes" xml:space="preserve">
          <source>Flushes the event file to disk and close the file.</source>
          <target state="translated">이벤트 파일을 디스크에 플러시하고 파일을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="411ec1b384ddb34e5e50e858b2000e66bb3e655d" translate="yes" xml:space="preserve">
          <source>Flushes the event file to disk.</source>
          <target state="translated">이벤트 파일을 디스크로 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="9b7edfcf83a187737117b2f47b6141554f630be7" translate="yes" xml:space="preserve">
          <source>Folds in data to an RNG seed to form a new RNG seed.</source>
          <target state="translated">새로운 RNG 시드를 형성하기 위해 데이터를 RNG 시드로 접습니다.</target>
        </trans-unit>
        <trans-unit id="15713d62ed5ca4009b476df4c237ce2bc0ad0830" translate="yes" xml:space="preserve">
          <source>Following explains differences between the expected SparseTensors: For example if dense form of your sparse data has shape &lt;code&gt;[3, 5]&lt;/code&gt; and values:</source>
          <target state="translated">다음은 예상되는 SparseTensor의 차이점을 설명합니다. 예를 들어 밀도가 낮은 희소 데이터의 모양이 &lt;code&gt;[3, 5]&lt;/code&gt; 이고 값이 다음과 같은 경우 :</target>
        </trans-unit>
        <trans-unit id="1f587840359f89bcceb77644a681ee1053752a4d" translate="yes" xml:space="preserve">
          <source>Following standard Python indexing rules, a negative &lt;code&gt;axis&lt;/code&gt; counts from the end so &lt;code&gt;axis=-1&lt;/code&gt; adds an inner most dimension:</source>
          <target state="translated">표준 Python 인덱싱 규칙에 따라 음의 &lt;code&gt;axis&lt;/code&gt; 끝부터 계산되므로 &lt;code&gt;axis=-1&lt;/code&gt; 은 가장 안쪽 차원을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="3a4d707a678724dde2fddb59f45c1e15e1429fb9" translate="yes" xml:space="preserve">
          <source>Following standard python indexing rules, a negative &lt;code&gt;axis&lt;/code&gt; counts from the end so &lt;code&gt;axis=-1&lt;/code&gt; adds an inner most dimension:</source>
          <target state="translated">표준 파이썬 인덱싱 규칙에 따라 음의 &lt;code&gt;axis&lt;/code&gt; 끝에서 계산되므로 &lt;code&gt;axis=-1&lt;/code&gt; 은 가장 안쪽 차원을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="f7880600348a091a43e2a84906d6002820643108" translate="yes" xml:space="preserve">
          <source>For</source>
          <target state="translated">For</target>
        </trans-unit>
        <trans-unit id="4fd9985785e46b3b8d2eb080ecf31ffb84a61f11" translate="yes" xml:space="preserve">
          <source>For &amp;gt;0D tensors, truthiness is determined by looking at the number of elements. If has zero elements, then the result is false. Otherwise the result is true.</source>
          <target state="translated">&amp;gt; 0D 텐서의 경우 요소 수를보고 진실성을 결정합니다. 요소가 0 개이면 결과는 거짓입니다. 그렇지 않으면 결과는 참입니다.</target>
        </trans-unit>
        <trans-unit id="a9f9a841a7e0cc5b022e6318bea78b55a9efc104" translate="yes" xml:space="preserve">
          <source>For 'channels_last' data_format, the 2nd, 3rd and 4th dimension will be padded. For 'channels_first' data_format, the 3rd, 4th and 5th dimension will be padded.</source>
          <target state="translated">'channels_last'data_format의 경우 2 차원, 3 차원 및 4 차원이 채워집니다. 'channels_first'data_format의 경우 3 차원, 4 차원 및 5 차원이 채워집니다.</target>
        </trans-unit>
        <trans-unit id="4d447d9221f45cdb582dda20329208318ce162fc" translate="yes" xml:space="preserve">
          <source>For 0 &amp;lt;= i &amp;lt; len(spatial_dims), we assign:</source>
          <target state="translated">0 &amp;lt;= i &amp;lt;len (spatial_dims)의 경우 다음을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="146f00a85b68b92b896f97b975828e18300e6475" translate="yes" xml:space="preserve">
          <source>For 0-D (scalar) &lt;code&gt;indices&lt;/code&gt;:</source>
          <target state="translated">0-D (스칼라) &lt;code&gt;indices&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="547112f2822cdd1e4adf3817f29d09a381834041" translate="yes" xml:space="preserve">
          <source>For 0D tensors, truthiness is determined by comparing against a &quot;zero&quot; value. For numerical types it is the obvious zero. For strings it is the empty string.</source>
          <target state="translated">0D 텐서의 경우 &quot;0&quot;값과 비교하여 진실성을 결정합니다. 숫자 유형의 경우 명백한 0입니다. 문자열의 경우 빈 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="93086c1250897fa853eb236163fc696ad9b7ad7a" translate="yes" xml:space="preserve">
          <source>For 1-D (vector) &lt;code&gt;indices&lt;/code&gt; with &lt;code&gt;batch_dims=0&lt;/code&gt;:</source>
          <target state="translated">1-D (벡터) 용 &lt;code&gt;indices&lt;/code&gt; 와 &lt;code&gt;batch_dims=0&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0a015181e096f8a1581f3a9641d414e5785efcf9" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;1+1j&lt;/code&gt; the value would be computed as: \(e^1{\\cos(1)+i\\sin(1)} = 2.7182817 \\times (0.5403023+0.84147096j)\)</source>
          <target state="translated">옵션 &lt;code&gt;1+1j&lt;/code&gt; 값이 계산 될 수있는 바와 같이 : \ (E ^ {1 \\ COS (1) + I \\ 죄 (1)} = 2.7182817 \\ 시간 (0.84147096j + 0.5403023) \)</target>
        </trans-unit>
        <trans-unit id="defba424886a691f2ba7bcc4056171fb0d0e0d47" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;SparseTensor&lt;/code&gt;s, the first (batch) column of the indices matrix is removed (the indices matrix is a column vector), the values vector is unchanged, and the first (&lt;code&gt;batch_size&lt;/code&gt;) entry of the shape vector is removed (it is now a single element vector).</source>
          <target state="translated">들면 &lt;code&gt;SparseTensor&lt;/code&gt; S, 인덱스 행렬의 제 (배치) 열을 제거한다 (인덱스 행렬은 열 벡터이다) 변하지 벡터 값 및 상기 제 ( &lt;code&gt;batch_size&lt;/code&gt; 는 지금이다 (형상 벡터) 엔트리 제거 단일 요소 벡터).</target>
        </trans-unit>
        <trans-unit id="44ae4bb96a98281ba7a5f41018a3c0cf10c4dea5" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;mode == ModeKeys.EVAL&lt;/code&gt;: required field is &lt;code&gt;loss&lt;/code&gt;.</source>
          <target state="translated">들어 &lt;code&gt;mode == ModeKeys.EVAL&lt;/code&gt; : 필수 항목입니다 &lt;code&gt;loss&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa798daa39c957c071f1ef2d8ef9c584caee3af3" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;mode == ModeKeys.PREDICT&lt;/code&gt;: required fields are &lt;code&gt;predictions&lt;/code&gt;.</source>
          <target state="translated">들어 &lt;code&gt;mode == ModeKeys.PREDICT&lt;/code&gt; : 필수 필드는 &lt;code&gt;predictions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c1da15aacc237948a45719180b4b1f05786246a" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;mode == ModeKeys.TRAIN&lt;/code&gt;: required fields are &lt;code&gt;loss&lt;/code&gt; and &lt;code&gt;train_op&lt;/code&gt;.</source>
          <target state="translated">들어 &lt;code&gt;mode == ModeKeys.TRAIN&lt;/code&gt; : 필수 항목입니다 &lt;code&gt;loss&lt;/code&gt; 및 &lt;code&gt;train_op&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e7f68e1644d616fa9efc4179ea412ad0959f6e10" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;nesterov=True&lt;/code&gt;, See &lt;a href=&quot;http://jmlr.org/proceedings/papers/v28/sutskever13.pdf&quot;&gt;Sutskever et al., 2013&lt;/a&gt;.</source>
          <target state="translated">들어 &lt;code&gt;nesterov=True&lt;/code&gt; , 참조 &lt;a href=&quot;http://jmlr.org/proceedings/papers/v28/sutskever13.pdf&quot;&gt;Sutskever 외. 2013 년&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="66bd7f5eecabe99afa580fb13d864a7f7973624c" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;x&lt;/code&gt; with more dimensions, independently normalizes each 1-D slice along dimension &lt;code&gt;axis&lt;/code&gt;.</source>
          <target state="translated">치수가 더 많은 &lt;code&gt;x&lt;/code&gt; 의 경우 치수 &lt;code&gt;axis&lt;/code&gt; 따라 각 1D 슬라이스를 독립적으로 정규화합니다. .</target>
        </trans-unit>
        <trans-unit id="43544e8b815a7d32d165c045ffe8994b597cc573" translate="yes" xml:space="preserve">
          <source>For AMSGrad see &lt;a href=&quot;https://openreview.net/pdf?id=ryQu7f-RZ&quot;&gt;On The Convergence Of Adam And Beyond. Reddi et al., 5-8&lt;/a&gt;.</source>
          <target state="translated">AMSGrad에 대해서는 &lt;a href=&quot;https://openreview.net/pdf?id=ryQu7f-RZ&quot;&gt;Adam and Beyond의 수렴을&lt;/a&gt; 참조하십시오 . Reddi et al., 5-8 .</target>
        </trans-unit>
        <trans-unit id="13ebc2a0e8c090e78de3fad9e601fded772c3334" translate="yes" xml:space="preserve">
          <source>For DNN model, &lt;code&gt;indicator_column&lt;/code&gt; can be used to wrap any &lt;code&gt;categorical_column_*&lt;/code&gt; (e.g., to feed to DNN). Consider to Use &lt;code&gt;embedding_column&lt;/code&gt; if the number of buckets/unique(values) are large.</source>
          <target state="translated">DNN 모델의 경우 &lt;code&gt;indicator_column&lt;/code&gt; 을 사용하여 &lt;code&gt;categorical_column_*&lt;/code&gt; 을 래핑 할 수 있습니다 (예 : DNN에 피드). 버킷 / 고유 (값) 수가 많은 경우 &lt;code&gt;embedding_column&lt;/code&gt; 을 사용 하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="358d84aa8148063b462186c221ef88a0bda8ec99" translate="yes" xml:space="preserve">
          <source>For Example:</source>
          <target state="translated">예를 들어 :</target>
        </trans-unit>
        <trans-unit id="698c0c83d084957c23756fca89030c92b5e65b9c" translate="yes" xml:space="preserve">
          <source>For Gaussian and Laplacian kernels, this corresponds to a scaling factor of the corresponding kernel approximated by the layer (see concrete definitions above). When provided, it should be a positive float. If None, a default value is used: if the kernel initializer is set to &quot;gaussian&quot;, &lt;code&gt;scale&lt;/code&gt; defaults to &lt;code&gt;sqrt(input_dim / 2)&lt;/code&gt;, otherwise, it defaults to 1.0. Both the approximation error of the kernel and the classification quality are sensitive to this parameter. If &lt;code&gt;trainable&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt;, this parameter is learned end-to-end during training and the provided value serves as the initial value. &lt;strong&gt;Note:&lt;/strong&gt; When features from this layer are fed to a linear model, by making &lt;code&gt;scale&lt;/code&gt; trainable, the resulting optimization problem is no longer convex (even if the loss function used by the linear model is convex).</source>
          <target state="translated">Gaussian 및 Laplacian 커널의 경우 이는 레이어로 근사 된 해당 커널의 배율 인수에 해당합니다 (위의 구체적인 정의 참조). 제공되는 경우 양수 부동이어야합니다. None이면 기본값이 사용됩니다. 커널 이니셜 라이저가 &quot;gaussian&quot;으로 설정되면 &lt;code&gt;scale&lt;/code&gt; 기본값은 &lt;code&gt;sqrt(input_dim / 2)&lt;/code&gt; 이고 그렇지 않으면 기본값은 1.0입니다. 커널의 근사 오차와 분류 품질은 모두이 매개 변수에 민감합니다. 경우 &lt;code&gt;trainable&lt;/code&gt; 설정되어 &lt;code&gt;True&lt;/code&gt; ,이 매개 변수는 훈련 도중 엔드 - 투 - 엔드를 알게되고, 제공된 값은 초기 값으로 제공합니다. &lt;strong&gt;참고 :&lt;/strong&gt; 이 레이어의 피처가 &lt;code&gt;scale&lt;/code&gt; 을 만들어 선형 모델에 공급 될 때 학습 가능한 경우 결과 최적화 문제는 더 이상 볼록하지 않습니다 (선형 모델에서 사용하는 손실 함수가 볼록한 경우에도).</target>
        </trans-unit>
        <trans-unit id="12448879835e54272469ca384e2db601805a9b6d" translate="yes" xml:space="preserve">
          <source>For NVIDIA GPUs with Tensor cores, as a general performance guide, dimensions (such as batch size, input size, output size, and channel counts) should be powers of two if under 256, or otherwise divisible by 8 if above 256. For more information, check out the &lt;a href=&quot;https://docs.nvidia.com/deeplearning/sdk/dl-performance-guide/index.html&quot;&gt;NVIDIA Deep Learning Performance Guide&lt;/a&gt;.</source>
          <target state="translated">텐서 코어가 장착 된 NVIDIA GPU의 경우 일반적인 성능 안내서로서 크기 (배치 크기, 입력 크기, 출력 크기 및 채널 수 등)는 256보다 작 으면 2의 거듭 제곱이거나 256보다 크면 8로 나눌 수 있어야합니다. 자세한 내용은 &lt;a href=&quot;https://docs.nvidia.com/deeplearning/sdk/dl-performance-guide/index.html&quot;&gt;NVIDIA 딥 러닝 성능 안내서를&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="e6c57b61b2025e89cc1b96b3f8c44dc568631574" translate="yes" xml:space="preserve">
          <source>For RaggedTensors with multiple ragged dimensions, the &lt;code&gt;row_splits&lt;/code&gt; for all nested &lt;code&gt;RaggedTensor&lt;/code&gt; objects are cast to the given dtype.</source>
          <target state="translated">비정형 치수가 여러 개인 &lt;code&gt;row_splits&lt;/code&gt; 경우 중첩 된 모든 RaggedTensor 에 대해 &lt;code&gt;RaggedTensor&lt;/code&gt; 객체의 row_splits는 지정된 dtype으로 캐스트됩니다.</target>
        </trans-unit>
        <trans-unit id="680d2331fce0b7a83d542b4d1de0958158b6ff5b" translate="yes" xml:space="preserve">
          <source>For Tensor arguments, &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; instantiates a separate graph for every unique set of input shapes and datatypes. The example below creates two separate graphs, each specialized to a different shape:</source>
          <target state="translated">텐서 인수의 경우, &lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; 은 모든 고유 한 입력 모양 및 데이터 유형 세트에 대해 별도의 그래프를 인스턴스화합니다. 아래 예제는 각각 다른 모양에 특화된 두 개의 개별 그래프를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="affb3fda9deede559b712893d926e23f939195d8" translate="yes" xml:space="preserve">
          <source>For Unicode, see the &lt;a href=&quot;working%20with%20unicode%20text&quot;&gt;https://www.tensorflow.org/tutorials/representation/unicode&lt;/a&gt; tutorial.</source>
          <target state="translated">유니 코드의 경우 &lt;a href=&quot;working%20with%20unicode%20text&quot;&gt;https://www.tensorflow.org/tutorials/representation/unicode&lt;/a&gt; 튜토리얼을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="438450c314656d91b7eb58ac47d34990ac07e0e9" translate="yes" xml:space="preserve">
          <source>For Wide (aka linear) model, &lt;code&gt;indicator_column&lt;/code&gt; is the internal representation for categorical column when passing categorical column directly (as any element in feature_columns) to &lt;code&gt;linear_model&lt;/code&gt;. See &lt;code&gt;linear_model&lt;/code&gt; for details.</source>
          <target state="translated">Wide (일명 선형) 모델의 경우 &lt;code&gt;indicator_column&lt;/code&gt; 은 categorical 형 열을 feature_columns의 요소로 직접 &lt;code&gt;linear_model&lt;/code&gt; 에 전달할 때 categorical 형 열의 내부 표현입니다 . 자세한 내용은 &lt;code&gt;linear_model&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d1809fcc8df392d7ea85c0ac28ccfcbd2a81ee6c" translate="yes" xml:space="preserve">
          <source>For a 1-D tensor with &lt;code&gt;axis = 0&lt;/code&gt;, computes</source>
          <target state="translated">&lt;code&gt;axis = 0&lt;/code&gt; 1 차원 텐서의 경우 인</target>
        </trans-unit>
        <trans-unit id="eb040fc5b017a63cdc59b792f1488c8b7f490212" translate="yes" xml:space="preserve">
          <source>For a 1D tensor, &lt;code&gt;tf.gather(values, tf.argsort(values))&lt;/code&gt; is equivalent to &lt;a href=&quot;sort&quot;&gt;&lt;code&gt;tf.sort(values)&lt;/code&gt;&lt;/a&gt;. For higher dimensions, the output has the same shape as &lt;code&gt;values&lt;/code&gt;, but along the given axis, values represent the index of the sorted element in that slice of the tensor at the given position.</source>
          <target state="translated">1D 텐서의 경우 &lt;code&gt;tf.gather(values, tf.argsort(values))&lt;/code&gt; 는 &lt;a href=&quot;sort&quot;&gt; &lt;code&gt;tf.sort(values)&lt;/code&gt; &lt;/a&gt; 와 같습니다 . 더 높은 차원의 경우 출력은 &lt;code&gt;values&lt;/code&gt; 과 모양이 동일 하지만 주어진 축을 따라 값은 주어진 위치에서 텐서의 해당 슬라이스에서 정렬 된 요소의 인덱스를 나타냅니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
