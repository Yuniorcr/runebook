<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="tensorflow">
    <body>
      <group id="tensorflow">
        <trans-unit id="75c85ee2207af3b05ea5b09c16d3ce37962ee9d3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A 4-D &lt;code&gt;Tensor&lt;/code&gt; of the format specified by &lt;code&gt;data_format&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;data_format&lt;/code&gt; 에 의해 지정된 형식의 4 차원 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4328b7bec7fbae6ddb8f590812b1bcc8bacc2a75" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A 4-D &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float&lt;/code&gt; and shape &lt;code&gt;[batch, height, width, in_channels]&lt;/code&gt; for &lt;code&gt;NHWC&lt;/code&gt; data format or &lt;code&gt;[batch, in_channels, height, width]&lt;/code&gt; for &lt;code&gt;NCHW&lt;/code&gt; data format.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : 4-D &lt;code&gt;Tensor&lt;/code&gt; 형의 &lt;code&gt;float&lt;/code&gt; 및 형상 &lt;code&gt;[batch, height, width, in_channels]&lt;/code&gt; 대한 &lt;code&gt;NHWC&lt;/code&gt; 의 데이터 포맷 또는 &lt;code&gt;[batch, in_channels, height, width]&lt;/code&gt; 에 대한 &lt;code&gt;NCHW&lt;/code&gt; 의 데이터 포맷.</target>
        </trans-unit>
        <trans-unit id="b20e849922fdac6001ca11981e943b16083b138e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A 4-D &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float&lt;/code&gt;. It needs to be in the default &quot;NHWC&quot; format. Its shape is &lt;code&gt;[batch, in_height, in_width, in_channels]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;float&lt;/code&gt; 유형의 4 차원 &lt;code&gt;Tensor&lt;/code&gt; . 기본 &quot;NHWC&quot;형식이어야합니다. 모양은 &lt;code&gt;[batch, in_height, in_width, in_channels]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="02837464c1d1eced3bd217d3c679cfaae5519a79" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A 4-D &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float&lt;/code&gt;. It needs to be in the default &lt;code&gt;NHWC&lt;/code&gt; format. Its shape is &lt;code&gt;[batch, in_height, in_width, in_channels]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;float&lt;/code&gt; 유형의 4 차원 &lt;code&gt;Tensor&lt;/code&gt; . 기본 &lt;code&gt;NHWC&lt;/code&gt; 형식 이어야 합니다. 모양은 &lt;code&gt;[batch, in_height, in_width, in_channels]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f746e54dd16ac029635ee91997a1a9cab51d1bf9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A 5-D &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float&lt;/code&gt; and shape &lt;code&gt;[batch, depth, height, width, in_channels]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;float&lt;/code&gt; 및 shape유형의 5 차원 &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;[batch, depth, height, width, in_channels]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5bec5e27112fe02d4c3f847f8c1a8551eaf4b736" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;SparseTensor&lt;/code&gt;, &lt;code&gt;SparseTensorValue&lt;/code&gt;, or an object whose type has a registered &lt;code&gt;Tensor&lt;/code&gt; conversion function.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;SparseTensor&lt;/code&gt; , &lt;code&gt;SparseTensorValue&lt;/code&gt; 또는 유형에 등록 된 &lt;code&gt;Tensor&lt;/code&gt; 변환 함수가있는 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="afb4e2e746c602749346017e45b1556878d6f45a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; with type &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, or &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; , &amp;bull; &lt;code&gt;Tensor&lt;/code&gt; 형과 &lt;code&gt;float&lt;/code&gt; , &lt;code&gt;double&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;uint8&lt;/code&gt; , &lt;code&gt;int16&lt;/code&gt; , &lt;code&gt;int8&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; , 또는 &lt;code&gt;complex128&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="03d480d4daf99ed63f4b4f4e4d43d1c1072e9113" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e039774bec78c407cb56ae639c9da1b13cc11ae" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. 0-D (scalar). Value to fill the returned tensor. @compatibility(numpy) Equivalent to np.full @end_compatibility</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . 0-D (스칼라). 반환 된 텐서를 채우는 값입니다. @compatibility (numpy) np.full과 @end_compatibility</target>
        </trans-unit>
        <trans-unit id="f7d54a11a403042273b54267abe6a92e63fc24c0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, height, width, channels]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . 모양이있는 4-D &lt;code&gt;[batch, height, width, channels]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd8c37c0b6ae48f568ddcf7539d6ab5cbee7b661" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, in_height, in_width, depth]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . 셰이프가있는 4 차원 &lt;code&gt;[batch, in_height, in_width, depth]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c028cd33180c82d5edf3d462618c09096db8cf23" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same shape and dtype as &lt;code&gt;ref&lt;/code&gt;. The value to be added to the variable.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;ref&lt;/code&gt; 와 모양과 dtype이 같아야합니다. 변수에 추가 할 값입니다.</target>
        </trans-unit>
        <trans-unit id="34a581a6313498aba5639188cdb220f86dfd4bc1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same shape and dtype as &lt;code&gt;ref&lt;/code&gt;. The value to be assigned to the variable.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;ref&lt;/code&gt; 와 모양과 dtype이 같아야합니다. 변수에 할당 할 값입니다.</target>
        </trans-unit>
        <trans-unit id="78e8376ab0b77f4671d41223b87008a6bb35c396" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same shape and dtype as &lt;code&gt;ref&lt;/code&gt;. The value to be subtracted to the variable.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;ref&lt;/code&gt; 와 모양과 dtype이 같아야합니다. 변수에서 뺄 값입니다.</target>
        </trans-unit>
        <trans-unit id="e270c7d38e31833c97deb37f4a20f7f7a5fab460" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. The new value for this variable.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . 이 변수의 새로운 값.</target>
        </trans-unit>
        <trans-unit id="294d07714c5586564812c9800d5550be567f9475" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A Python scalar, list or tuple of values, or a N-dimensional numpy array. All elements of the initialized variable will be set to the corresponding value in the &lt;code&gt;value&lt;/code&gt; argument.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : Python 스칼라, 값 목록 또는 튜플 또는 N- 차원 numpy 배열입니다. 초기화 된 변수의 모든 요소는 &lt;code&gt;value&lt;/code&gt; 인수에서 해당 값으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="e4a73c344dc351bcc110baccaef8f00ee96c08aa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A Tensor to be shuffled.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : 섞을 텐서.</target>
        </trans-unit>
        <trans-unit id="4da895c1f4f26dc72e6583109e0eda0502e6d6d5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A constant value (or list)</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : 상수 값 (또는 목록)</target>
        </trans-unit>
        <trans-unit id="b30573dbce773b3de0edb927f420ebedc5a7623b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A constant value (or list) of output type &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : 출력 유형 &lt;code&gt;dtype&lt;/code&gt; 의 상수 값 (또는 목록)입니다.</target>
        </trans-unit>
        <trans-unit id="dd5a16f6ec30c76d2ceb6d0114dc77928480690c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A object that can be converted to &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;str&lt;/code&gt; 로 변환 할 수있는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="4ccd19a3aa8f716cbd3877ca937a3ee0b02f6f5d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A per-replica value with one value per replica.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : 복제 본당 하나의 값을 갖는 복제 본당 값.</target>
        </trans-unit>
        <trans-unit id="cf903312c4aeb9caadde97b895fdbddfffe2dd28" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A rank &lt;code&gt;R &amp;gt; 0&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; to be unstacked.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : 순위 &lt;code&gt;R &amp;gt; 0&lt;/code&gt; 스택 해제 될 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d808260dd0b8262c1019e8cc72a70212a9b2d5e8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A string scalar Tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : 문자열 스칼라 텐서.</target>
        </trans-unit>
        <trans-unit id="0053004e2d8eef2588c8be218165b521f776af61" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A tensor of numeric type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : 숫자 유형의 텐서입니다.</target>
        </trans-unit>
        <trans-unit id="4bce2931dda7a4c0d6924ef027a758b0410015df" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A tensor with the same shape as &lt;code&gt;variable&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;variable&lt;/code&gt; 과 모양이 같은 텐서.</target>
        </trans-unit>
        <trans-unit id="7bae4dabe9a591628354f4d5fe4063e3dfedd1d0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A value returned by &lt;code&gt;experimental_run()&lt;/code&gt;, &lt;code&gt;experimental_run_v2()&lt;/code&gt;, &lt;code&gt;extended.call_for_each_replica()&lt;/code&gt;, or a variable created in &lt;code&gt;scope&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;experimental_run()&lt;/code&gt; , &lt;code&gt;experimental_run_v2()&lt;/code&gt; , &lt;code&gt;extended.call_for_each_replica()&lt;/code&gt; 또는 &lt;code&gt;scope&lt;/code&gt; 에서 작성된 변수에의해 반환되는 값.</target>
        </trans-unit>
        <trans-unit id="edc0f62f8ec6d484c773443acc42175f108a30ae" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A value returned by &lt;code&gt;experimental_run_v2()&lt;/code&gt; or a variable created in &lt;code&gt;scope()&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;experimental_run_v2()&lt;/code&gt; 또는 &lt;code&gt;scope()&lt;/code&gt; 에서 생성 된 변수에의해 반환되는 값입니다.</target>
        </trans-unit>
        <trans-unit id="9d5dfb64f8fd81a47188de30d6b30ba1d9ac38e7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: A value to wrap. The value must be convertible to &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;CompositeTensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : 줄 바꿈 할 값입니다. 값은 &lt;code&gt;Tensor&lt;/code&gt; 또는 &lt;code&gt;CompositeTensor&lt;/code&gt; 로 변환 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="6c7a70d52080d1a056777d8b27f7868c8e5143ca" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: An &lt;code&gt;IndexedSlices&lt;/code&gt;, &lt;code&gt;SparseTensor&lt;/code&gt;, or an object that can be consumed by &lt;code&gt;convert_to_tensor()&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;IndexedSlices&lt;/code&gt; , &lt;code&gt;SparseTensor&lt;/code&gt; 또는 &lt;code&gt;convert_to_tensor()&lt;/code&gt; 가 사용할 수있는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="e5e635a9dcb8d269bbdab44b5f59505b4691f974" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: An object whose type has a registered &lt;code&gt;Tensor&lt;/code&gt; conversion function.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : 등록 된 &lt;code&gt;Tensor&lt;/code&gt; 변환 기능이있는 유형의 객체입니다.</target>
        </trans-unit>
        <trans-unit id="c5864354491c646523f92d046b53c8015ec003a3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: Input tensor to crop.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; :자를 텐서를 입력합니다.</target>
        </trans-unit>
        <trans-unit id="b759af27f91c81c7cacc4119ae4c286a652392b8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: Learning phase value, either 0 or 1 (integers). 0 = test, 1 = train</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : 학습 단계 값, 0 또는 1 (정수). 0 = 테스트, 1 = 기차</target>
        </trans-unit>
        <trans-unit id="9adf2b076cee2e505222968dc2d12df037f9e1f1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: Metric tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : 메트릭 텐서.</target>
        </trans-unit>
        <trans-unit id="4a0337ed5655f7bc180d2ff0e9ebbc7ae0160fa4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: New variable value</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : 새로운 변수 값</target>
        </trans-unit>
        <trans-unit id="726858e972e3c6c7ae4571514139200c8fb21a9f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: Numpy array, initial value of the tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : Numpy 배열, 텐서의 초기 값.</target>
        </trans-unit>
        <trans-unit id="35e847353986176528912924e40f34dc9494b0ed" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: Python boolean.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : 파이썬 부울.</target>
        </trans-unit>
        <trans-unit id="5a4e4f668ba9c11a28357c67c4ad370a7f702636" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: String; 'float16', 'float32', or 'float64'. Example: &lt;code&gt;python from keras import backend as K K.floatx() &amp;gt;&amp;gt;&amp;gt; 'float32' K.set_floatx('float16') K.floatx() &amp;gt;&amp;gt;&amp;gt; 'float16'&lt;/code&gt;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : 문자열; 'float16', 'float32'또는 'float64'. 예 : &lt;code&gt;python from keras import backend as K K.floatx() &amp;gt;&amp;gt;&amp;gt; 'float32' K.set_floatx('float16') K.floatx() &amp;gt;&amp;gt;&amp;gt; 'float16'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3a0479a2a2982b3f781679e028a08882f3ba04a4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: The &lt;code&gt;Tensor&lt;/code&gt; to split.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; :분할 할 &lt;code&gt;Tensor&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0849a0b4c41834167374a16e59fd3f29b829c7ec" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: The nested structure of &lt;code&gt;Tensor&lt;/code&gt;s to all-reduce. The structure must be compatible with &lt;a href=&quot;../nest&quot;&gt;&lt;code&gt;tf.nest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; 의중첩 구조가 모두 감소합니다. 구조는&lt;a href=&quot;../nest&quot;&gt; &lt;code&gt;tf.nest&lt;/code&gt; &lt;/a&gt; 와 호환 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="5f49791f3632dbd1370e7a4f5fe171cc5de66557" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: The new default value.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : 새로운 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="acb20f4541560a78029856f7c06f3ff4dd24ee6f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: The value to add to the collection.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : 컬렉션에 추가 할 값입니다.</target>
        </trans-unit>
        <trans-unit id="8471e05d4d9e9b134578bfc8287a0411957f5e0f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: The value to add to the collections.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : 컬렉션에 추가 할 값입니다.</target>
        </trans-unit>
        <trans-unit id="b753993a96dc699d4f847466a7fb62dc42246221" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: Value of tensor to set.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : 설정할 텐서의 값입니다.</target>
        </trans-unit>
        <trans-unit id="99b8023fd546411abace16c90ddce330e20d397a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: Value to set the tensor to, as a Numpy array (of the same shape).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : 동일한 모양의 Numpy 배열로 텐서를 설정할 값입니다.</target>
        </trans-unit>
        <trans-unit id="941eb6827707f797ee5f3bc149a2915b5ebf5175" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: a float &lt;code&gt;Tensor&lt;/code&gt; giving the predicted values. Required.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; :예측 된 값을 제공하는 float &lt;code&gt;Tensor&lt;/code&gt; . 필수입니다.</target>
        </trans-unit>
        <trans-unit id="3cee65339281012b3b586f153a308b739f94a327" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value&lt;/code&gt;&lt;/b&gt;: float. New value of epsilon. Example: &lt;code&gt;python from keras import backend as K K.epsilon() &amp;gt;&amp;gt;&amp;gt; 1e-07 K.set_epsilon(1e-05) K.epsilon() &amp;gt;&amp;gt;&amp;gt; 1e-05&lt;/code&gt;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value&lt;/code&gt; &lt;/b&gt; : float. 입실론의 새로운 가치. 예 : &lt;code&gt;python from keras import backend as K K.epsilon() &amp;gt;&amp;gt;&amp;gt; 1e-07 K.set_epsilon(1e-05) K.epsilon() &amp;gt;&amp;gt;&amp;gt; 1e-05&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5a49132302dd7394f9ee30a26b9e0b4c63fcfa64" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value_destination_pairs&lt;/code&gt;&lt;/b&gt;: A sequence of (value, destinations) pairs. See &lt;code&gt;reduce_to()&lt;/code&gt; for a description.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value_destination_pairs&lt;/code&gt; &lt;/b&gt; : (값, 대상) 쌍의 시퀀스. 설명은 &lt;code&gt;reduce_to()&lt;/code&gt; 를참조하십시오.</target>
        </trans-unit>
        <trans-unit id="cd53e3a707f8977ffad84ead3c69408080c23646" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value_destination_pairs&lt;/code&gt;&lt;/b&gt;: a list or a tuple of PerReplica objects (or tensors with device set if there is one device) and destinations.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value_destination_pairs&lt;/code&gt; &lt;/b&gt; : PerReplica 객체 (또는 장치가 하나 인 경우 장치가 설정된 텐서) 및 대상의 목록 또는 튜플입니다.</target>
        </trans-unit>
        <trans-unit id="1b1ac2a37fefc5cc8b883c5587799e85d40c67da" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value_destination_pairs&lt;/code&gt;&lt;/b&gt;: an iterable of tuples of PerReplica objects (or tensors with device set if there is one device) and destinations.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value_destination_pairs&lt;/code&gt; &lt;/b&gt; : PerReplica 객체 (또는 장치가 하나 인 경우 장치가 설정된 텐서)와 대상의 튜플을 반복 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd005abf69bcad9b387473b81d8f8d6619bb0ed3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value_dtype&lt;/code&gt;&lt;/b&gt;: The &lt;code&gt;value&lt;/code&gt; data type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value_dtype&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;value&lt;/code&gt; 데이터 유형입니다.</target>
        </trans-unit>
        <trans-unit id="b800888c394d3101e756794887a529ce2d5b6a68" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value_dtype&lt;/code&gt;&lt;/b&gt;: The &lt;code&gt;values&lt;/code&gt; data type. Used when &lt;code&gt;values&lt;/code&gt; is a python array.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value_dtype&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;values&lt;/code&gt; 데이터 유형입니다. &lt;code&gt;values&lt;/code&gt; 이 파이썬 배열 인 경우에 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="69b6a63d99184a78c9c25f1b5f6920e1732ba869" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value_dtype&lt;/code&gt;&lt;/b&gt;: the type of the value tensors.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value_dtype&lt;/code&gt; &lt;/b&gt; : 값 텐서의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="944aa48e0bb0ffd5438f9e351d1e5af14958c251" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value_index&lt;/code&gt;&lt;/b&gt;: An &lt;code&gt;int&lt;/code&gt;. Index of the operation's endpoint that produces this tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value_index&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;int&lt;/code&gt; 입니다. 이 텐서를 생성하는 작업 끝점의 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="841202060290fa673b15dfdf6b750273fd18535b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value_index&lt;/code&gt;&lt;/b&gt;: the index that represents information of a line to get the table 'value' values from.'</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value_index&lt;/code&gt; &lt;/b&gt; : 테이블 'value'값을 가져 오는 행 정보를 나타내는 인덱스입니다. '</target>
        </trans-unit>
        <trans-unit id="66d83755df59f394e6b7bbfe7e2590bac4ee71e3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value_key&lt;/code&gt;&lt;/b&gt;: (Optional.) Key for a &lt;code&gt;Feature&lt;/code&gt; in the input &lt;code&gt;Example&lt;/code&gt;, whose parsed &lt;code&gt;Tensor&lt;/code&gt; will be the resulting &lt;a href=&quot;../raggedtensor#flat_values&quot;&gt;&lt;code&gt;RaggedTensor.flat_values&lt;/code&gt;&lt;/a&gt;. If not specified, then it defaults to the key for this &lt;code&gt;RaggedFeature&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value_key&lt;/code&gt; &lt;/b&gt; : (선택 사항)입력 &lt;code&gt;Example&lt;/code&gt; 의 &lt;code&gt;Feature&lt;/code&gt; 에대한 키이며구문 분석 된 &lt;code&gt;Tensor&lt;/code&gt; 는 결과&lt;a href=&quot;../raggedtensor#flat_values&quot;&gt; &lt;code&gt;RaggedTensor.flat_values&lt;/code&gt; &lt;/a&gt; 입니다. 지정하지 않으면 기본적으로이 키가 사용됩니다 &lt;code&gt;RaggedFeature&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9fee0d191a616ea62329ac94aa60de0c11fd8226" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value_key&lt;/code&gt;&lt;/b&gt;: Name of value feature. The underlying feature's type must be &lt;code&gt;dtype&lt;/code&gt; and its length must always match that of all the &lt;code&gt;index_key&lt;/code&gt;s' features.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value_key&lt;/code&gt; &lt;/b&gt; : 값 기능의 이름입니다. 기본이되는 기능의 종류는 다음과 같아야합니다 &lt;code&gt;dtype&lt;/code&gt; 그 길이는 항상 모든의 일치해야합니다 &lt;code&gt;index_key&lt;/code&gt; 을 의 '기능.</target>
        </trans-unit>
        <trans-unit id="6ed3864c042dfafbb25c0a4fa4db67b9d3f26af1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value_range&lt;/code&gt;&lt;/b&gt;: Shape [2] &lt;code&gt;Tensor&lt;/code&gt; of same &lt;code&gt;dtype&lt;/code&gt; as &lt;code&gt;values&lt;/code&gt;. values &amp;lt;= value_range[0] will be mapped to hist[0], values &amp;gt;= value_range[1] will be mapped to hist[-1].</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value_range&lt;/code&gt; &lt;/b&gt; : 도형 [2] &lt;code&gt;Tensor&lt;/code&gt; 똑같은 &lt;code&gt;dtype&lt;/code&gt; 같은 &lt;code&gt;values&lt;/code&gt; . 값 &amp;lt;= value_range [0]은 hist [0]에 매핑되고 값&amp;gt; = value_range [1]은 hist [-1]에 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="029fb429c52566b02739ffb365c54935b6948408" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value_rowids&lt;/code&gt;&lt;/b&gt;: A 1-D integer tensor with shape &lt;code&gt;[nvals]&lt;/code&gt;, which corresponds one-to-one with &lt;code&gt;values&lt;/code&gt;, and specifies each value's row index. Must be nonnegative, and must be sorted in ascending order.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value_rowids&lt;/code&gt; &lt;/b&gt; : 모양이 &lt;code&gt;[nvals]&lt;/code&gt; 인1 차원 정수형 텐서로, &lt;code&gt;values&lt;/code&gt; 과 일대일로 대응 됩니다. 되며 각 값의 행 인덱스를 지정합니다. 음수가 아니어야하며 오름차순으로 정렬해야합니다.</target>
        </trans-unit>
        <trans-unit id="b2b3fd4d506353b67a1eb76efd3fcf279ca91156" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value_shape&lt;/code&gt;&lt;/b&gt;: The shape for individual flat values in the &lt;code&gt;RaggedTensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value_shape&lt;/code&gt; &lt;/b&gt; 다음 개별 평면 치의 형상 &lt;code&gt;RaggedTensor&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3520294702355db82ff18a222ce78700297e1d5b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value_structure&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Structure&lt;/code&gt; object representing the structure of the components of this optional.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value_structure&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Structure&lt;/code&gt; 이 선택적 구성 요소의 구조를 나타내는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="c4258e5d97bbf36ce4072b9b1a28a4834bef60f7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;value_tensor&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; representing the current value of the metric.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;value_tensor&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; 메트릭의 현재 값을 나타내는 입니다.</target>
        </trans-unit>
        <trans-unit id="ddb1c3f809bd95a0a6aede01ddd6e9e03c19e95c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: 1-D or higher numeric &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; : 1 차원 이상의 숫자 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33541467dd4718cc56ea28f67783d014f3cfd2f3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: A 1-D string Tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; : 1 차원 문자열 텐서.</target>
        </trans-unit>
        <trans-unit id="cc7d8e81cafc8d6e0814b873519c497876b053aa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: A 1-D tensor of any type and shape &lt;code&gt;[N]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; : 모든 유형과 모양의 1 차원 텐서 &lt;code&gt;[N]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="435c34df131bc415c1b41aef268bf4254993d282" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of arbitrary dimensions.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; 임의의 치수 .</target>
        </trans-unit>
        <trans-unit id="4706b5691169a8d3505dc47273659ccaa994d2ac" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: A list of &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../raggedtensor&quot;&gt;&lt;code&gt;tf.RaggedTensor&lt;/code&gt;&lt;/a&gt;. May not be empty. All &lt;code&gt;values&lt;/code&gt; must have the same rank and the same dtype; but unlike &lt;a href=&quot;../stack&quot;&gt;&lt;code&gt;tf.stack&lt;/code&gt;&lt;/a&gt;, they can have arbitrary dimension sizes.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;../raggedtensor&quot;&gt; &lt;code&gt;tf.RaggedTensor&lt;/code&gt; &lt;/a&gt; 의 목록입니다. 비워 둘 수 없습니다. 모든 &lt;code&gt;values&lt;/code&gt; 은 동일한 순위와 동일한 dtype을 가져야합니다. 그러나&lt;a href=&quot;../stack&quot;&gt; &lt;code&gt;tf.stack&lt;/code&gt; &lt;/a&gt; 과 달리임의의 크기를 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c97c1ebb85cd9246c92d9d3bb11a10316f8ce23b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: A list of &lt;code&gt;Tensor&lt;/code&gt; objects of type &lt;code&gt;output_types&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;output_types&lt;/code&gt; 유형의 &lt;code&gt;Tensor&lt;/code&gt; 객체목록 .</target>
        </trans-unit>
        <trans-unit id="dcaf694e52b3319cf6bcbc4567cec7383c27e3cc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: A list of &lt;code&gt;Tensor&lt;/code&gt; objects or a single &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; 객체 또는 단일 &lt;code&gt;Tensor&lt;/code&gt; 목록 입니다.</target>
        </trans-unit>
        <trans-unit id="badbc28e17e7d277e0aaaf9a1244680fa5cf0498" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: A list of &lt;code&gt;Tensor&lt;/code&gt; objects with the same shape and type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; 목록 모양과 유형이 같은 객체 .</target>
        </trans-unit>
        <trans-unit id="ea49c936543efb72432b997e44913ce038396d09" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: A list of &lt;code&gt;Tensor&lt;/code&gt; objects. List of tensors containing values for the corresponding field.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; 목록 객체 . 해당 필드의 값을 포함하는 텐서 목록.</target>
        </trans-unit>
        <trans-unit id="7731a989d9d47235e7a4b9b090805c9182fdcd39" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: A list of &lt;code&gt;Tensor&lt;/code&gt;s or &lt;code&gt;float&lt;/code&gt;s or &lt;code&gt;int&lt;/code&gt;s that specifies the values for the intervals defined by &lt;code&gt;boundaries&lt;/code&gt;. It should have one more element than &lt;code&gt;boundaries&lt;/code&gt;, and all elements should have the same type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;boundaries&lt;/code&gt; 정의 된 간격 값을 지정하는 &lt;code&gt;Tensor&lt;/code&gt; 또는 &lt;code&gt;float&lt;/code&gt; 또는 &lt;code&gt;int&lt;/code&gt; 목록입니다. &lt;code&gt;boundaries&lt;/code&gt; 보다 요소가 하나 더 있어야하며 모든 요소의 유형이 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="b06e5ef3e67f31563e92f8bbd69926b1e75f3292" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: A list of at least 2 &lt;code&gt;Tensor&lt;/code&gt; objects with the same type. The &lt;code&gt;N&lt;/code&gt; Tensors to concatenate. Their ranks and types must match, and their sizes must match in all dimensions except &lt;code&gt;concat_dim&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; :유형이 같은최소 2 개의 &lt;code&gt;Tensor&lt;/code&gt; 객체목록입니다. &lt;code&gt;N&lt;/code&gt; 텐서는 연결할 수 있습니다. 순위와 유형은 일치해야하며 크기는 &lt;code&gt;concat_dim&lt;/code&gt; 을 제외한 모든 차원에서 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="e8e3e2e158bee5968b31ad10160a18109711788c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: A numeric &lt;code&gt;Tensor&lt;/code&gt; of arbitrary size.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; :임의의 크기의 숫자 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0329e46b6cc3140dd16c6a5d456989cb215d419b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: A numpy array of any type and shape; or a RaggedTensorValue.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; : 모든 유형과 모양의 numpy 배열; 또는 RaggedTensorValue입니다.</target>
        </trans-unit>
        <trans-unit id="118f591fec5f6bd5968638492659d6041bfabec2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: A potentially ragged tensor of any dtype and shape &lt;code&gt;[nvals, ...]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; : 임의의 dtype 및 shape의 불규칙한 텐서 &lt;code&gt;[nvals, ...]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9df584325457c3b4104d36639b576720acb63631" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: A potentially ragged tensor with shape &lt;code&gt;[nvals, ...]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; : 모양 &lt;code&gt;[nvals, ...]&lt;/code&gt; 의 잠재적으로 거친 텐서.</target>
        </trans-unit>
        <trans-unit id="a6c82a05d0b9082bd3f2c4f8fa178d92c294908f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: A real numeric &lt;code&gt;Tensor&lt;/code&gt;. Any shape. Values to use to build the histogram.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; : 실수 숫자 &lt;code&gt;Tensor&lt;/code&gt; . 어떤 모양. 히스토그램을 작성하는 데 사용할 값입니다.</target>
        </trans-unit>
        <trans-unit id="f4eb447060dd2b0ba96a0476a06e7e2539c70308" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: List of tuples: &lt;code&gt;(name, value_for_last_step)&lt;/code&gt;. If &lt;code&gt;name&lt;/code&gt; is in &lt;code&gt;stateful_metrics&lt;/code&gt;, &lt;code&gt;value_for_last_step&lt;/code&gt; will be displayed as-is. Else, an average of the metric over time will be displayed.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; : 튜플 목록 : &lt;code&gt;(name, value_for_last_step)&lt;/code&gt; . 경우 &lt;code&gt;name&lt;/code&gt; 에 &lt;code&gt;stateful_metrics&lt;/code&gt; , &lt;code&gt;value_for_last_step&lt;/code&gt; 그대로 표시됩니다. 그렇지 않으면 시간 경과에 따른 평균 메트릭이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="aa9ba4cb60c01c839b6334c323cfec7676328dc2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: N-D &lt;code&gt;Tensor&lt;/code&gt; containing the search values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; : ND &lt;code&gt;Tensor&lt;/code&gt; 검색 값을 포함하는 .</target>
        </trans-unit>
        <trans-unit id="9e6524d2a201f80a1ca1ab3112fb85353fdc8de8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: Numeric &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; : 숫자 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af7629893c0e8fcd8c9c98cb51368021c25557cb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: Object to be checked.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; : 확인할 객체입니다.</target>
        </trans-unit>
        <trans-unit id="94403c1de9281bbeb97f1e575f35e97b9979ea27" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: Optional; passed as &lt;code&gt;values&lt;/code&gt; parameter to name_scope.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; : 선택 사항; name_scope에 &lt;code&gt;values&lt;/code&gt; 매개 변수로전달되었습니다.</target>
        </trans-unit>
        <trans-unit id="fd3adcb24fb4f359edfa810249c79f605831f8f7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: Per-example value.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; : 예제 당 값.</target>
        </trans-unit>
        <trans-unit id="f4aa864af3ec3b710d427c7c4ab14805bcad73fb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: The &lt;code&gt;k&lt;/code&gt; largest elements along each last dimensional slice.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; :각 마지막 차원 조각을 따라 가장 큰 &lt;code&gt;k&lt;/code&gt; 개의 요소입니다.</target>
        </trans-unit>
        <trans-unit id="7f3d2269bff0db41f216a8aa009cf1b9d9ae2a70" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: The list of &lt;code&gt;Tensor&lt;/code&gt; arguments that are passed to the op function.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; :op 함수에 전달되는 &lt;code&gt;Tensor&lt;/code&gt; 인수목록입니다.</target>
        </trans-unit>
        <trans-unit id="bf6ab5f6d921fdfc44addade2a2d1e960b38d672" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: The tensor for the values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; :&lt;b&gt; 값&lt;/b&gt; 의 텐서입니다.</target>
        </trans-unit>
        <trans-unit id="94fb2befbc844b215b974658152b8153ffc4de98" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: Values to be associated with keys. Must be a tensor of the same shape as &lt;code&gt;keys&lt;/code&gt; and match the table's value type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; : 키와 관련된 값입니다. &lt;code&gt;keys&lt;/code&gt; 와동일한 모양의 텐서 여야하며테이블의 값 유형과 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="a59f4306995e8b47711fea1399d76b9f00edda9b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;values&lt;/code&gt;&lt;/b&gt;: Values to put in the TensorProto.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;values&lt;/code&gt; &lt;/b&gt; : TensorProto에 넣을 값입니다.</target>
        </trans-unit>
        <trans-unit id="1a9dd103993ea5e96776617909c4ac86445f4b65" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;var&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Variable&lt;/code&gt; object.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;var&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Variable&lt;/code&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="b073d612020eeaafcf209b338d355e101739b768" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;var&lt;/code&gt;&lt;/b&gt;: A variable passed to &lt;code&gt;minimize()&lt;/code&gt; or &lt;code&gt;apply_gradients()&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;var&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;minimize()&lt;/code&gt; 또는 &lt;code&gt;apply_gradients()&lt;/code&gt; 전달 된 변수 입니다.</target>
        </trans-unit>
        <trans-unit id="6ede5aa186e0538cdd4a924e7891a640337df278" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;var&lt;/code&gt;&lt;/b&gt;: An &lt;code&gt;ops.Variable&lt;/code&gt; object.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;var&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;ops.Variable&lt;/code&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="ebc78abfaf47fa7df75ea8ae0e9cef81af075c04" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;var&lt;/code&gt;&lt;/b&gt;: In the case of variable slice assignment, the Variable object to slice (i.e. tensor is the read-only view of this variable).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;var&lt;/code&gt; &lt;/b&gt; : 변수 슬라이스 할당의 경우 변수 개체를 슬라이스로 지정합니다 (즉, 텐서는이 변수의 읽기 전용보기입니다).</target>
        </trans-unit>
        <trans-unit id="c8fe1270cbdefea3c3dc8337395cc603f327ff69" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;var&lt;/code&gt;&lt;/b&gt;: The variable corresponding to &lt;code&gt;input_&lt;/code&gt; or None</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;var&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;input_&lt;/code&gt; 또는 None에해당하는 변수</target>
        </trans-unit>
        <trans-unit id="daca64e31610fe212a5629cb10b7e5417c1a251a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;var&lt;/code&gt;&lt;/b&gt;: Variable, possibly mirrored to multiple devices, to operate on.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;var&lt;/code&gt; &lt;/b&gt; : 여러 장치에 미러링되어 작동 할 수있는 변수입니다.</target>
        </trans-unit>
        <trans-unit id="7c8f2fdd93f90b3f05c1cd9ce1af13ad9bb57a42" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;var&lt;/code&gt;&lt;/b&gt;: Variance of batch.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;var&lt;/code&gt; &lt;/b&gt; : 배치의 변화.</target>
        </trans-unit>
        <trans-unit id="78b0b87358c7095f896d0e98c9630f92915db9ae" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;var_list&lt;/code&gt;&lt;/b&gt;: A list of &lt;code&gt;Variable&lt;/code&gt;/&lt;code&gt;SaveableObject&lt;/code&gt;, or a dictionary mapping names to &lt;code&gt;SaveableObject&lt;/code&gt;s. If &lt;code&gt;None&lt;/code&gt;, defaults to the list of all saveable objects.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;var_list&lt;/code&gt; &lt;/b&gt; :의 목록 &lt;code&gt;Variable&lt;/code&gt; / &lt;code&gt;SaveableObject&lt;/code&gt; , 또는 사전 매핑 이름 &lt;code&gt;SaveableObject&lt;/code&gt; 의. 만약 &lt;code&gt;None&lt;/code&gt; , 모든 저장 기능 제공 개체의 목록 기본값.</target>
        </trans-unit>
        <trans-unit id="8f9fa1f81d21d73f59bbbf33e9e801562b996583" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;var_list&lt;/code&gt;&lt;/b&gt;: A list of Variable or Tensor objects. The variables and Tensors must be of types bfloat16, float16, float32, or float64.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;var_list&lt;/code&gt; &lt;/b&gt; : Variable 또는 Tensor 객체의 목록입니다. 변수 및 텐서는 bfloat16, float16, float32 또는 float64 유형이어야합니다.</target>
        </trans-unit>
        <trans-unit id="4f7b308ac1e6a841c1e9c12e2fc5c8c72b086b43" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;var_list&lt;/code&gt;&lt;/b&gt;: List of &lt;code&gt;Variable&lt;/code&gt; objects to check. Defaults to the value of &lt;code&gt;global_variables() + local_variables()&lt;/code&gt;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;var_list&lt;/code&gt; &lt;/b&gt; :확인할 &lt;code&gt;Variable&lt;/code&gt; 객체의목록입니다. 기본값은 &lt;code&gt;global_variables() + local_variables()&lt;/code&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="0bac162aa0124a8356e4b1e886d1f137db9a3f49" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;var_list&lt;/code&gt;&lt;/b&gt;: List of &lt;code&gt;Variable&lt;/code&gt; objects to check. Defaults to the value of &lt;code&gt;global_variables().&lt;/code&gt;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;var_list&lt;/code&gt; &lt;/b&gt; :확인할 &lt;code&gt;Variable&lt;/code&gt; 객체의목록입니다. 기본값은 &lt;code&gt;global_variables().&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe7d2e4da37d64fd0ba6800a38475ae8e8e0cd33" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;var_list&lt;/code&gt;&lt;/b&gt;: List of &lt;code&gt;Variable&lt;/code&gt; objects to initialize.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;var_list&lt;/code&gt; &lt;/b&gt; :초기화 할 &lt;code&gt;Variable&lt;/code&gt; 객체목록.</target>
        </trans-unit>
        <trans-unit id="9a7d9e164ae482f3d581c719dc86957a11950590" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;var_list&lt;/code&gt;&lt;/b&gt;: Optional list or tuple of &lt;a href=&quot;../../../../variable&quot;&gt;&lt;code&gt;tf.Variable&lt;/code&gt;&lt;/a&gt; to update to minimize &lt;code&gt;loss&lt;/code&gt;. Defaults to the list of variables collected in the graph under the key &lt;code&gt;GraphKeys.TRAINABLE_VARIABLES&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;var_list&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;loss&lt;/code&gt; 을 최소화하기 위해 업데이트 할&lt;a href=&quot;../../../../variable&quot;&gt; &lt;code&gt;tf.Variable&lt;/code&gt; 의&lt;/a&gt; 선택적 목록 또는 튜플. 기본적으로 &lt;code&gt;GraphKeys.TRAINABLE_VARIABLES&lt;/code&gt; 키 아래 그래프에서 수집 된 변수 목록이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="b95b9c17df53cbd0c3c686a66e1f3c3c2385b72a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;var_list&lt;/code&gt;&lt;/b&gt;: Optional list or tuple of &lt;a href=&quot;../../../variable&quot;&gt;&lt;code&gt;tf.Variable&lt;/code&gt;&lt;/a&gt; to update to minimize &lt;code&gt;loss&lt;/code&gt;. Defaults to the list of variables collected in the graph under the key &lt;code&gt;GraphKey.TRAINABLE_VARIABLES&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;var_list&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;loss&lt;/code&gt; 을 최소화하기 위해 업데이트 할&lt;a href=&quot;../../../variable&quot;&gt; &lt;code&gt;tf.Variable&lt;/code&gt; 의&lt;/a&gt; 선택적 목록 또는 튜플. 기본적으로 &lt;code&gt;GraphKey.TRAINABLE_VARIABLES&lt;/code&gt; 키 아래 그래프에서 수집 된 변수 목록이 기본값입니다 .TRAINABLE_VARIABLES 입니다.</target>
        </trans-unit>
        <trans-unit id="0944eedb8b9864035d91cbb715fe1fc232041903" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;var_list&lt;/code&gt;&lt;/b&gt;: Optional list or tuple of &lt;a href=&quot;../../../variable&quot;&gt;&lt;code&gt;tf.Variable&lt;/code&gt;&lt;/a&gt; to update to minimize &lt;code&gt;loss&lt;/code&gt;. Defaults to the list of variables collected in the graph under the key &lt;code&gt;GraphKeys.TRAINABLE_VARIABLES&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;var_list&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;loss&lt;/code&gt; 을 최소화하기 위해 업데이트 할&lt;a href=&quot;../../../variable&quot;&gt; &lt;code&gt;tf.Variable&lt;/code&gt; 의&lt;/a&gt; 선택적 목록 또는 튜플. 기본적으로 &lt;code&gt;GraphKeys.TRAINABLE_VARIABLES&lt;/code&gt; 키 아래 그래프에서 수집 된 변수 목록이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="733a69188fdb6b05e8e63fbdf3525ae04bde3f42" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;var_list&lt;/code&gt;&lt;/b&gt;: Optional list or tuple of &lt;code&gt;Variable&lt;/code&gt; objects to update to minimize &lt;code&gt;loss&lt;/code&gt;. Defaults to the list of variables collected in the graph under the key &lt;code&gt;GraphKeys.TRAINABLE_VARIABLES&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;var_list&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;loss&lt;/code&gt; 을 최소화하기 위해 업데이트 할 &lt;code&gt;Variable&lt;/code&gt; 객체의 선택적 목록 또는 튜플. &lt;code&gt;GraphKeys.TRAINABLE_VARIABLES&lt;/code&gt; 키 아래 그래프에서 수집 된 변수 목록이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="e59e6b7af1f2a7590aaa1a3d2e8b536fa5f47c8d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;var_list&lt;/code&gt;&lt;/b&gt;: The list of variables being optimized, needed with the default &lt;a href=&quot;../../../distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;var_list&lt;/code&gt; &lt;/b&gt; : 최적화되는 변수 목록이며 기본&lt;a href=&quot;../../../distribute/strategy&quot;&gt; &lt;code&gt;tf.distribute.Strategy&lt;/code&gt; 가&lt;/a&gt; 필요합니다.</target>
        </trans-unit>
        <trans-unit id="17ebb818d907cc706a5c8100b338df51f94910a3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;var_list&lt;/code&gt;&lt;/b&gt;: The list of variables being optimized, needed with the default &lt;a href=&quot;strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;var_list&lt;/code&gt; &lt;/b&gt; : 최적화되는 변수 목록이며 기본&lt;a href=&quot;strategy&quot;&gt; &lt;code&gt;tf.distribute.Strategy&lt;/code&gt; 가&lt;/a&gt; 필요합니다.</target>
        </trans-unit>
        <trans-unit id="ff6485a457d77dd51c3ad35dd0b132ca0a7a0185" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;var_list&lt;/code&gt;&lt;/b&gt;: list or tuple of &lt;code&gt;Variable&lt;/code&gt; objects to update to minimize &lt;code&gt;loss&lt;/code&gt;, or a callable returning the list or tuple of &lt;code&gt;Variable&lt;/code&gt; objects. Use callable when the variable list would otherwise be incomplete before &lt;code&gt;minimize&lt;/code&gt; since the variables are created at the first time &lt;code&gt;loss&lt;/code&gt; is called.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;var_list&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;loss&lt;/code&gt; 을 최소화하기 위해 업데이트 할 &lt;code&gt;Variable&lt;/code&gt; 객체의 목록 또는 튜플 또는 &lt;code&gt;Variable&lt;/code&gt; 객체의 목록 또는 튜플을 반환하는 호출 가능. &lt;code&gt;loss&lt;/code&gt; 이처음호출 될 때변수가 작성되므로 &lt;code&gt;minimize&lt;/code&gt; 하기 전에 변수 목록이 불완전한 경우 호출 가능을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ee1b35a54be84e644778bbee6da5016747ebebbc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;var_name_to_prev_var_name&lt;/code&gt;&lt;/b&gt;: [Optional] Dict of variable names (strings) to name of the previously-trained variable in &lt;code&gt;ckpt_to_initialize_from&lt;/code&gt;. If not explicitly provided, the name of the variable is assumed to be same between previous checkpoint and current model. Note that this has no effect on the set of variables that is warm-started, and only controls name mapping (use &lt;code&gt;vars_to_warm_start&lt;/code&gt; for controlling what variables to warm-start).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;var_name_to_prev_var_name&lt;/code&gt; &lt;/b&gt; : [선택 사항] 변수 이름 (문자열)을 이전에 훈련 된 변수의 이름으로 &lt;code&gt;ckpt_to_initialize_from&lt;/code&gt; 에서 지정 합니다. 명시 적으로 제공되지 않은 경우 변수의 이름은 이전 검사 점과 현재 모델간에 동일한 것으로 간주됩니다. 이는 웜 스타트 된 변수 세트에는 영향을 미치지 않으며 이름 맵핑 만 제어합니다 ( &lt;code&gt;vars_to_warm_start&lt;/code&gt; 를사용하여 웜 스타트 할 변수 제어).</target>
        </trans-unit>
        <trans-unit id="2fca8b272f8cf8a06269dfb674856fb165870cea" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;var_name_to_vocab_info&lt;/code&gt;&lt;/b&gt;: [Optional] Dict of variable names (strings) to &lt;a href=&quot;../../../estimator/vocabinfo&quot;&gt;&lt;code&gt;tf.estimator.VocabInfo&lt;/code&gt;&lt;/a&gt;. The variable names should be &quot;full&quot; variables, not the names of the partitions. If not explicitly provided, the variable is assumed to have no (changes to) vocabulary.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;var_name_to_vocab_info&lt;/code&gt; &lt;/b&gt; : [선택 사항] 변수 이름 (문자열)을&lt;a href=&quot;../../../estimator/vocabinfo&quot;&gt; &lt;code&gt;tf.estimator.VocabInfo&lt;/code&gt; &lt;/a&gt; 로 구분 합니다. 변수 이름은 파티션 이름이 아니라 &quot;전체&quot;변수 여야합니다. 명시 적으로 제공하지 않으면 변수에 어휘가없는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="b1e7f806b29808b4ad881b852cab297d13a0bd87" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;var_name_to_vocab_info&lt;/code&gt;&lt;/b&gt;: [Optional] Dict of variable names (strings) to &lt;a href=&quot;vocabinfo&quot;&gt;&lt;code&gt;tf.estimator.VocabInfo&lt;/code&gt;&lt;/a&gt;. The variable names should be &quot;full&quot; variables, not the names of the partitions. If not explicitly provided, the variable is assumed to have no (changes to) vocabulary.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;var_name_to_vocab_info&lt;/code&gt; &lt;/b&gt; : [선택 사항] 변수 이름 (문자열)을&lt;a href=&quot;vocabinfo&quot;&gt; &lt;code&gt;tf.estimator.VocabInfo&lt;/code&gt; &lt;/a&gt; 로 구분 합니다. 변수 이름은 파티션 이름이 아니라 &quot;전체&quot;변수 여야합니다. 명시 적으로 제공하지 않으면 변수에 어휘가없는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="5c965a20738df096ec24ed8ea62797c906d2afe1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;var_offset&lt;/code&gt;&lt;/b&gt;: Offset of this &lt;code&gt;Variable&lt;/code&gt; into the full variable, as a list of int.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;var_offset&lt;/code&gt; &lt;/b&gt; :이 &lt;code&gt;Variable&lt;/code&gt; 를 int 목록으로 전체 변수에오프셋합니다.</target>
        </trans-unit>
        <trans-unit id="697bdee001da98fd293f4326e688a286b88b535a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;var_shape&lt;/code&gt;&lt;/b&gt;: Shape of this &lt;code&gt;Variable&lt;/code&gt;, as a list of int.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;var_shape&lt;/code&gt; &lt;/b&gt; :int의 목록&lt;b&gt; 으로서이&lt;/b&gt; &lt;code&gt;Variable&lt;/code&gt; 모양.</target>
        </trans-unit>
        <trans-unit id="e04c4463abbb36df1d2fbd309f74f84f6bcbf1eb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;variable&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Variable&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;variable&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Variable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1bcbb84b21d79620401f887fd3f1a58e7526b857" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;variable_averages&lt;/code&gt;&lt;/b&gt;: Optional &lt;code&gt;ExponentialMovingAverage&lt;/code&gt; object, used to maintain moving averages for the variables passed in &lt;code&gt;variables_to_average&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;variable_averages&lt;/code&gt; &lt;/b&gt; :variables_to_average에 전달 된 &lt;code&gt;variables_to_average&lt;/code&gt; 의 이동 평균을 유지하는 데 사용되는선택적 &lt;code&gt;ExponentialMovingAverage&lt;/code&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="e1b3793e2413da41354a4e03d3fa6967e16ab454" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;variable_creator&lt;/code&gt;&lt;/b&gt;: the passed creator</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;variable_creator&lt;/code&gt; &lt;/b&gt; : 전달 된 생성자</target>
        </trans-unit>
        <trans-unit id="2e39fb288d44a09dd7ce553d56d67230d454dc85" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;variable_def&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;VariableDef&lt;/code&gt; protocol buffer. If not &lt;code&gt;None&lt;/code&gt;, recreates the Variable object with its contents, referencing the variable's nodes in the graph, which must already exist. The graph is not changed. &lt;code&gt;variable_def&lt;/code&gt; and the other arguments are mutually exclusive.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;variable_def&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;VariableDef&lt;/code&gt; 프로토콜 버퍼. &lt;code&gt;None&lt;/code&gt; 이 아닌 경우, 변수가 존재해야하는 그래프에서 변수의 노드를 참조하여 해당 내용으로 Variable 객체를 다시 만듭니다. 그래프는 변경되지 않습니다. &lt;code&gt;variable_def&lt;/code&gt; 와 다른 인수는 상호 배타적입니다.</target>
        </trans-unit>
        <trans-unit id="2be3b16501d20d5598fd855ca390d6eb4b089805" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;variable_names_blacklist&lt;/code&gt;&lt;/b&gt;: The set of variable names to omit converting to constants.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;variable_names_blacklist&lt;/code&gt; &lt;/b&gt; : 상수로의 변환을 생략 할 변수 이름 세트.</target>
        </trans-unit>
        <trans-unit id="c50271bd46bd58b500e7758dae27604da141332e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;variable_names_whitelist&lt;/code&gt;&lt;/b&gt;: The set of variable names to convert (by default, all variables are converted).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;variable_names_whitelist&lt;/code&gt; &lt;/b&gt; : 변환 할 변수 이름 세트 (기본적으로 모든 변수가 변환 됨)</target>
        </trans-unit>
        <trans-unit id="7e1300c27d3c15ca194cd6238186d8d8fcb25840" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;variables&lt;/code&gt;&lt;/b&gt;: List of variables.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;variables&lt;/code&gt; &lt;/b&gt; :&lt;b&gt; 변수&lt;/b&gt; 목록.</target>
        </trans-unit>
        <trans-unit id="42a62ae27571d42981bd3eb9c0616400271be7e9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;variables&lt;/code&gt;&lt;/b&gt;: Tensor or list of tensors to consider constant with respect to any other variable.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;variables&lt;/code&gt; &lt;/b&gt; : 다른 변수와 관련하여 상수를 고려할 텐서 또는 텐서 목록.</target>
        </trans-unit>
        <trans-unit id="b3d9a4d4e9e0d7e74621519c10bdc7132e27d366" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;variables_to_average&lt;/code&gt;&lt;/b&gt;: a list of variables that need to be averaged. Only needed if variable_averages is passed in.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;variables_to_average&lt;/code&gt; &lt;/b&gt; : 평균화해야하는 변수 목록. variable_averages가 전달 된 경우에만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="272c4752aa4568e76d7bbf66c26e8ac908ea675b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;variance&lt;/code&gt;&lt;/b&gt;: A 1D variance Tensor with size matching the last dimension of t. This is the second output from tf.nn.moments, or a saved moving average thereof.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;variance&lt;/code&gt; &lt;/b&gt; : 크기가 마지막 치수 t와 일치하는 1D 분산 텐서입니다. 이것은 tf.nn.moments의 두 번째 출력 또는 저장된 이동 평균입니다.</target>
        </trans-unit>
        <trans-unit id="b4a3c936aae33d141a2ae1a9220a597bfec0be30" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;variance&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of 1 dimension for population variance used for inference.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;variance&lt;/code&gt; &lt;/b&gt; :추론에 사용 된 모집단 분산에 대한 1 차원 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60536366e5dcd0080799f2c72450ef052fa2422a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;variance&lt;/code&gt;&lt;/b&gt;: A variance &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;variance&lt;/code&gt; &lt;/b&gt; : 분산 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83fc6cce675ca83091f3ad476a01474b38c362e3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;variance&lt;/code&gt;&lt;/b&gt;: Alias for v.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;variance&lt;/code&gt; &lt;/b&gt; : v의 별칭</target>
        </trans-unit>
        <trans-unit id="6ef9047f0d2a0f7a35cdf237a0f47b815472e20d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;variance&lt;/code&gt;&lt;/b&gt;: Floating-point &lt;code&gt;Tensor&lt;/code&gt; with shape identical to &lt;code&gt;batch_shape + event_shape&lt;/code&gt;, i.e., the same shape as &lt;code&gt;self.mean()&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;variance&lt;/code&gt; &lt;/b&gt; : 부동 소수점 &lt;code&gt;Tensor&lt;/code&gt; 동일 형상 &lt;code&gt;batch_shape + event_shape&lt;/code&gt; 즉, 동일한 형상 &lt;code&gt;self.mean()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a14bdcfcf162f1b7d834d1d44e3c0a1c2da3181" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;variance_decay&lt;/code&gt;&lt;/b&gt;: decay for the noise's variance. See computation above.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;variance_decay&lt;/code&gt; &lt;/b&gt; : 노이즈 분산에 따라 감쇠합니다. 위의 계산을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="feececaa3116fb17ff2c143c816a1c0b736c3c38" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;variance_epsilon&lt;/code&gt;&lt;/b&gt;: A small float number to avoid dividing by 0.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;variance_epsilon&lt;/code&gt; &lt;/b&gt; : 0으로 나누지 않도록하는 작은 실수입니다.</target>
        </trans-unit>
        <trans-unit id="a234a8c3db7cfbb7dc3e9d3f3dbce4d4718b7f83" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;variance_ss&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; containing the variance sufficient statistics: the (possibly shifted) squared sum of the data to compute the variance over.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;variance_ss&lt;/code&gt; &lt;/b&gt; :분산에 충분한 통계를 포함하는 &lt;code&gt;Tensor&lt;/code&gt; :분산을 계산하기 위해 데이터의 (제곱 된 시프트 된) 제곱합.</target>
        </trans-unit>
        <trans-unit id="a74b6fc5217773675a6a095169d4d2ec5cb998a9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;variant&lt;/code&gt;&lt;/b&gt;: A scalar &lt;a href=&quot;../../../tf#variant&quot;&gt;&lt;code&gt;tf.variant&lt;/code&gt;&lt;/a&gt; tensor representing a dataset.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;variant&lt;/code&gt; &lt;/b&gt; :데이터 세트를 나타내는스칼라&lt;a href=&quot;../../../tf#variant&quot;&gt; &lt;code&gt;tf.variant&lt;/code&gt; &lt;/a&gt; 텐서.</target>
        </trans-unit>
        <trans-unit id="6798c3d3a77acd5e7a309f0cf0195fd92254337e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;variant_tensor&lt;/code&gt;&lt;/b&gt;: A DT_VARIANT tensor that represents the dataset.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;variant_tensor&lt;/code&gt; &lt;/b&gt; : 데이터 세트를 나타내는 DT_VARIANT 텐서.</target>
        </trans-unit>
        <trans-unit id="c4c11a4b0ebf15b41f7a452e314ac994530dc319" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;variational_recurrent&lt;/code&gt;&lt;/b&gt;: Python bool. If &lt;code&gt;True&lt;/code&gt;, then the same dropout pattern is applied across all time steps per run call. If this parameter is set, &lt;code&gt;input_size&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be provided.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;variational_recurrent&lt;/code&gt; &lt;/b&gt; : 파이썬 부울. &lt;code&gt;True&lt;/code&gt; 인경우실행 호출 당 모든 시간 단계에 동일한 드롭 아웃 패턴이 적용됩니다. 이 매개 변수가 설정되면 &lt;code&gt;input_size&lt;/code&gt; &lt;strong&gt;를&lt;/strong&gt; 제공&lt;strong&gt; 해야&lt;/strong&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="9f3222d9f574cd8284b466d3a62911a738123f33" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;vars_to_warm_start&lt;/code&gt;&lt;/b&gt;: [Optional] One of the following:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;vars_to_warm_start&lt;/code&gt; &lt;/b&gt; : [선택 사항] 다음 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="c3f363cda6b6a2f138bfcc9d31a71aa43fece204" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;verbose&lt;/code&gt;&lt;/b&gt;: 0 or 1. Verbosity mode. 0 = silent, 1 = progress bar.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;verbose&lt;/code&gt; &lt;/b&gt; : 0 또는 1. 상세 모드. 0 = 자동, 1 = 진행 표시 줄</target>
        </trans-unit>
        <trans-unit id="858349ad0e22e5d7bbbea654441a419cfc3ce34f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;verbose&lt;/code&gt;&lt;/b&gt;: 0, 1, or 2. Verbosity mode. 0 = silent, 1 = progress bar, 2 = one line per epoch. Note that the progress bar is not particularly useful when logged to a file, so verbose=2 is recommended when not running interactively (eg, in a production environment).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;verbose&lt;/code&gt; &lt;/b&gt; : 0, 1 또는 2. 상세 모드. 0 = 무음, 1 = 진행 표시 줄, 2 = 에포크 당 한 줄. 진행률 표시 줄은 파일에 기록 할 때 특히 유용하지 않으므로 대화식으로 실행하지 않는 경우 (예 : 프로덕션 환경에서) verbose = 2를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="699eeb2a4ca596dd2588a4d95eb30f90bf997382" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;verbose&lt;/code&gt;&lt;/b&gt;: Verbosity mode, 0 (silent), 1 (verbose), 2 (semi-verbose)</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;verbose&lt;/code&gt; &lt;/b&gt; : 상세 모드, 0 (자동), 1 (상세), 2 (세미-상세)</target>
        </trans-unit>
        <trans-unit id="afde80bc5fbab5a33a960e63fc89768794180b30" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;verbose&lt;/code&gt;&lt;/b&gt;: Verbosity mode, 0 or 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;verbose&lt;/code&gt; &lt;/b&gt; : 상세 모드, 0 또는 1</target>
        </trans-unit>
        <trans-unit id="20c322d0bfc332c7081924b40f2c88dc5f00d24e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;verbose&lt;/code&gt;&lt;/b&gt;: int. 0: quiet, 1: update messages.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;verbose&lt;/code&gt; &lt;/b&gt; : int. 0 : 자동, 1 : 업데이트 메시지.</target>
        </trans-unit>
        <trans-unit id="6db3b74e1c5cfccaa97c3077fbfd03290b0c3ac7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;verbose&lt;/code&gt;&lt;/b&gt;: verbosity mode, 0 or 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;verbose&lt;/code&gt; &lt;/b&gt; : 상세 모드, 0 또는 1</target>
        </trans-unit>
        <trans-unit id="06aab68656b96f57ceaa625f40995dec3a0cdf42" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;verbose&lt;/code&gt;&lt;/b&gt;: verbosity mode.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;verbose&lt;/code&gt; &lt;/b&gt; : 상세 모드.</target>
        </trans-unit>
        <trans-unit id="29f415a7c09e3bc9b03d1de14c6a5815f90c0b13" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;verify_shape&lt;/code&gt;&lt;/b&gt;: Boolean that enables verification of a shape of values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;verify_shape&lt;/code&gt; &lt;/b&gt; : 값 모양을 확인할 수있는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="788ddb85e4d0a6e1c24360db441b0e0414507d06" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;verify_shape&lt;/code&gt;&lt;/b&gt;: Boolean that enables verification of the shape of &lt;code&gt;value&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt;, the initializer will throw an error if the shape of &lt;code&gt;value&lt;/code&gt; is not compatible with the shape of the initialized tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;verify_shape&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;value&lt;/code&gt; 모양을 확인할 수있는 부울입니다. 경우 &lt;code&gt;True&lt;/code&gt; 의 모양 경우 초기화 오류가 발생합니다 &lt;code&gt;value&lt;/code&gt; 초기화 된 텐서의 모양과 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ed9303579cd58c9750bd02ba9bb517893e69f38d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;vertical_flip&lt;/code&gt;&lt;/b&gt;: Boolean. Randomly flip inputs vertically.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;vertical_flip&lt;/code&gt; &lt;/b&gt; : 부울. 무작위로 입력을 수직으로 뒤집습니다.</target>
        </trans-unit>
        <trans-unit id="06690db05e705a67fac41b68e1a00b4b78138d9d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;virtual_batch_size&lt;/code&gt;&lt;/b&gt;: An &lt;code&gt;int&lt;/code&gt;. By default, &lt;code&gt;virtual_batch_size&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, which means batch normalization is performed across the whole batch. When &lt;code&gt;virtual_batch_size&lt;/code&gt; is not &lt;code&gt;None&lt;/code&gt;, instead perform &quot;Ghost Batch Normalization&quot;, which creates virtual sub-batches which are each normalized separately (with shared gamma, beta, and moving statistics). Must divide the actual batch size during execution.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;virtual_batch_size&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;int&lt;/code&gt; 입니다. 기본적으로 &lt;code&gt;virtual_batch_size&lt;/code&gt; 는 &lt;code&gt;None&lt;/code&gt; 입니다 . 이는 일괄 처리 정규화가 전체 일괄 처리에서 수행됨을 의미합니다. 경우 &lt;code&gt;virtual_batch_size&lt;/code&gt; 이 없는없는 &lt;code&gt;None&lt;/code&gt; 대신 각 (공유 감마, 베타 및 이동 통계) 별도로 표준화 가상 서브 일괄 작성 &quot;고스트 배치 정규화&quot;를 수행한다. 실행 중에 실제 배치 크기를 나누어야합니다.</target>
        </trans-unit>
        <trans-unit id="c3a66e93d4fcffd1b7b050e1d243f83e7d59c011" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;vocab&lt;/code&gt;&lt;/b&gt;: An array of string tokens.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;vocab&lt;/code&gt; &lt;/b&gt; : 문자열 토큰의 배열.</target>
        </trans-unit>
        <trans-unit id="29e24938c91c9ab0f32ac6a1a88ba289eca1cb6f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;vocab_file&lt;/code&gt;&lt;/b&gt;: Each valid line in this file (which should have a CSV-like format) corresponds to a valid word ID. IDs are in sequential order, starting from num_reserved_ids. The last entry in each line is expected to be a value corresponding to the count or relative probability. Exactly one of &lt;code&gt;vocab_file&lt;/code&gt; and &lt;code&gt;unigrams&lt;/code&gt; needs to be passed to this operation.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;vocab_file&lt;/code&gt; &lt;/b&gt; :이 파일의 각 유효한 행 (CSV와 같은 형식이어야 함)은 유효한 단어 ID에 해당합니다. ID는 num_reserved_ids부터 시작하여 순차적입니다. 각 줄의 마지막 항목은 개수 또는 상대 확률에 해당하는 값이어야합니다. &lt;code&gt;vocab_file&lt;/code&gt; 및 &lt;code&gt;unigrams&lt;/code&gt; 중 하나를이 작업으로 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="fdb27a84b9f7fb7ab2da91475793ee713d1e25d9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;vocab_size&lt;/code&gt;&lt;/b&gt;: A scalar &lt;code&gt;int64&lt;/code&gt; Tensor (or Python int) containing the new size of the last dimension, &lt;code&gt;all(0 &amp;lt;= sp_ids.values &amp;lt; vocab_size)&lt;/code&gt;. Or a list thereof with &lt;code&gt;all(0 &amp;lt;= sp_ids[i].values &amp;lt; vocab_size[i])&lt;/code&gt; for all &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;vocab_size&lt;/code&gt; &lt;/b&gt; :마지막 차원의 새 크기 인 &lt;code&gt;all(0 &amp;lt;= sp_ids.values &amp;lt; vocab_size)&lt;/code&gt; 포함하는 스칼라 &lt;code&gt;int64&lt;/code&gt; 텐서 (또는 Python int ) 입니다. 또는 이들의리스트와 &lt;code&gt;all(0 &amp;lt;= sp_ids[i].values &amp;lt; vocab_size[i])&lt;/code&gt; 모두 &lt;code&gt;i&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ed405c3af825eccf16eca6df4db12f76528083a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;vocab_size&lt;/code&gt;&lt;/b&gt;: A scalar int64 Tensor (or Python int) containing the new size of the last dimension, &lt;code&gt;all(0 &amp;lt;= sp_input.values &amp;lt; vocab_size)&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;vocab_size&lt;/code&gt; &lt;/b&gt; : 마지막 차원의 새 크기 인 &lt;code&gt;all(0 &amp;lt;= sp_input.values &amp;lt; vocab_size)&lt;/code&gt; 포함하는 스칼라 int64 텐서 (또는 Python int ) 입니다.</target>
        </trans-unit>
        <trans-unit id="00573a248dfee9a7ec424ec9cd891c5029fc3034" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;vocab_size&lt;/code&gt;&lt;/b&gt;: The number of elements in the file, if known.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;vocab_size&lt;/code&gt; &lt;/b&gt; : 파일에서 알려진 요소 수입니다.</target>
        </trans-unit>
        <trans-unit id="372031ee9dcc670196e92fed4068b034208906a1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;vocabulary_file&lt;/code&gt;&lt;/b&gt;: The vocabulary file name.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;vocabulary_file&lt;/code&gt; &lt;/b&gt; : 어휘 파일 이름입니다.</target>
        </trans-unit>
        <trans-unit id="0efd249bb0a651bf26f1269593e3fe9e322e05d9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;vocabulary_list&lt;/code&gt;&lt;/b&gt;: An ordered iterable defining the vocabulary. Each feature is mapped to the index of its value (if present) in &lt;code&gt;vocabulary_list&lt;/code&gt;. Must be castable to &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;vocabulary_list&lt;/code&gt; &lt;/b&gt; :&lt;b&gt; 어휘를&lt;/b&gt; 정의하는 정렬 가능한 반복 가능. 각 기능은 &lt;code&gt;vocabulary_list&lt;/code&gt; 의 해당 값 (있는 경우)의 색인에 맵핑됩니다. &lt;code&gt;dtype&lt;/code&gt; 으로 캐스팅 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="73f1856429fbc8a6f46d4892d81080f2ebac59ab" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;vocabulary_size&lt;/code&gt;&lt;/b&gt;: Number of the elements in the vocabulary. This must be no greater than length of &lt;code&gt;vocabulary_file&lt;/code&gt;, if less than length, later values are ignored. If None, it is set to the length of &lt;code&gt;vocabulary_file&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;vocabulary_size&lt;/code&gt; &lt;/b&gt; :&lt;b&gt; 어휘&lt;/b&gt; 의 요소 수 길이가 &lt;code&gt;vocabulary_file&lt;/code&gt; 의 길이보다 길지 않아야합니다. 길이보다 작 으면 이후 값은 무시됩니다. 없음 인 경우 &lt;code&gt;vocabulary_file&lt;/code&gt; 의 길이로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="25301c80f55f733b81181b0b6c6d87740b63b2c7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;wait_for_checkpoint&lt;/code&gt;&lt;/b&gt;: Whether to wait for checkpoint to become available.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;wait_for_checkpoint&lt;/code&gt; &lt;/b&gt; : 검사 점이 사용 가능할 때까지 대기할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="05331c384880284b1a4d8a00adce2cfae9184c89" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;wait_for_checkpoint&lt;/code&gt;&lt;/b&gt;: Whether we should wait for the availability of a checkpoint before creating Session. Defaults to False.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;wait_for_checkpoint&lt;/code&gt; &lt;/b&gt; : 세션을 만들기 전에 체크 포인트의 사용 가능 시간을 기다려야하는지 여부입니다. 기본값은 False입니다.</target>
        </trans-unit>
        <trans-unit id="03391148d49ec948c09fdd2869fdfe7722faceb7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;wait_time&lt;/code&gt;&lt;/b&gt;: time to sleep in-between calls to &lt;code&gt;put()&lt;/code&gt;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;wait_time&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;put()&lt;/code&gt; 호출 사이의 휴면 시간</target>
        </trans-unit>
        <trans-unit id="a76c7b99f8e07170d0b4ceddca703aad756ac217" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;wait_until_step&lt;/code&gt;&lt;/b&gt;: an &lt;code&gt;int&lt;/code&gt; shows until which global step should we wait.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;wait_until_step&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;int&lt;/code&gt; 는 우리가 기다려야 할 전역 단계를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="9638252b6971e94aa61052abe57da16463e150a9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;wall_time&lt;/code&gt;&lt;/b&gt;: (optional) Median or mean wall time in seconds.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;wall_time&lt;/code&gt; &lt;/b&gt; : (선택 사항) 중간 또는 평균 벽 시간 (초)입니다.</target>
        </trans-unit>
        <trans-unit id="b8cd203004522bd619ecf5733bef46f4cbe338e5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;warm_start_from&lt;/code&gt;&lt;/b&gt;: A string filepath to a checkpoint to warm-start from, or a &lt;code&gt;WarmStartSettings&lt;/code&gt; object to fully configure warm-starting. If the string filepath is provided instead of a &lt;code&gt;WarmStartSettings&lt;/code&gt;, then all weights and biases are warm-started, and it is assumed that vocabularies and Tensor names are unchanged.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;warm_start_from&lt;/code&gt; &lt;/b&gt; : 웜 스타트 할 체크 포인트에 대한 문자열 파일 경로 또는 웜 스타트를 완전히 구성하는 &lt;code&gt;WarmStartSettings&lt;/code&gt; 객체입니다. &lt;code&gt;WarmStartSettings&lt;/code&gt; 대신 문자열 파일 경로가 제공되면 모든 가중치와 바이어스가 웜 스타트되며 어휘와 텐서 이름이 변경되지 않은 것으로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="35fc27264a7a4d8faef34a8341c30b3a20d31b91" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;warm_start_from&lt;/code&gt;&lt;/b&gt;: A string filepath to a checkpoint to warm-start from, or a &lt;code&gt;WarmStartSettings&lt;/code&gt; object to fully configure warm-starting. If the string filepath is provided instead of a &lt;code&gt;WarmStartSettings&lt;/code&gt;, then all weights are warm-started, and it is assumed that vocabularies and Tensor names are unchanged.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;warm_start_from&lt;/code&gt; &lt;/b&gt; : 웜 스타트 할 체크 포인트에 대한 문자열 파일 경로 또는 웜 스타트를 완전히 구성하는 &lt;code&gt;WarmStartSettings&lt;/code&gt; 객체입니다. &lt;code&gt;WarmStartSettings&lt;/code&gt; 대신 문자열 파일 경로가 제공되면 모든 가중치가 웜 스타트되며 어휘와 텐서 이름이 변경되지 않은 것으로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="d7ff6bd51f1e16343f8f0691a2850381e045a58f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;warm_start_from&lt;/code&gt;&lt;/b&gt;: Optional string filepath to a checkpoint or SavedModel to warm-start from, or a &lt;a href=&quot;../../../../estimator/warmstartsettings&quot;&gt;&lt;code&gt;tf.estimator.WarmStartSettings&lt;/code&gt;&lt;/a&gt; object to fully configure warm-starting. If the string filepath is provided instead of a &lt;code&gt;WarmStartSettings&lt;/code&gt;, then all variables are warm-started, and it is assumed that vocabularies and Tensor names are unchanged.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;warm_start_from&lt;/code&gt; &lt;/b&gt; : 웜 스타트를 시작하기위한 체크 포인트 또는 저장된 모델에 대한 선택적 문자열 파일 경로 또는 웜 스타트를 완전히 구성하기위한&lt;a href=&quot;../../../../estimator/warmstartsettings&quot;&gt; &lt;code&gt;tf.estimator.WarmStartSettings&lt;/code&gt; &lt;/a&gt; 객체. &lt;code&gt;WarmStartSettings&lt;/code&gt; 대신 문자열 파일 경로가 제공되면 모든 변수가 웜 스타트되며 어휘와 텐서 이름이 변경되지 않은 것으로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="c60fdf29ce156e4aa43e243a2623192c4fe7b224" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;warm_start_from&lt;/code&gt;&lt;/b&gt;: Optional string filepath to a checkpoint or SavedModel to warm-start from, or a &lt;a href=&quot;../../../estimator/warmstartsettings&quot;&gt;&lt;code&gt;tf.estimator.WarmStartSettings&lt;/code&gt;&lt;/a&gt; object to fully configure warm-starting.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;warm_start_from&lt;/code&gt; &lt;/b&gt; : 웜 스타트를 시작하기위한 체크 포인트 또는 저장된 모델에 대한 선택적 문자열 파일 경로 또는 웜 스타트를 완전히 구성하기위한&lt;a href=&quot;../../../estimator/warmstartsettings&quot;&gt; &lt;code&gt;tf.estimator.WarmStartSettings&lt;/code&gt; &lt;/a&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="3589517034216555785c0912ed6b2619db461364" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;warm_start_from&lt;/code&gt;&lt;/b&gt;: Optional string filepath to a checkpoint or SavedModel to warm-start from, or a &lt;a href=&quot;warmstartsettings&quot;&gt;&lt;code&gt;tf.estimator.WarmStartSettings&lt;/code&gt;&lt;/a&gt; object to fully configure warm-starting.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;warm_start_from&lt;/code&gt; &lt;/b&gt; : 웜 스타트를 시작하기위한 체크 포인트 또는 저장된 모델에 대한 선택적 문자열 파일 경로 또는 웜 스타트를 완전히 구성하기위한&lt;a href=&quot;warmstartsettings&quot;&gt; &lt;code&gt;tf.estimator.WarmStartSettings&lt;/code&gt; &lt;/a&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="e4ae282401c4ebb6f92f5e7e92830bda8f1f9a83" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;watch_accessed_variables&lt;/code&gt;&lt;/b&gt;: Boolean controlling whether the tape will automatically &lt;code&gt;watch&lt;/code&gt; any (trainable) variables accessed while the tape is active. Defaults to True meaning gradients can be requested from any result computed in the tape derived from reading a trainable &lt;code&gt;Variable&lt;/code&gt;. If False users must explicitly &lt;code&gt;watch&lt;/code&gt; any &lt;code&gt;Variable&lt;/code&gt;s they want to request gradients from.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;watch_accessed_variables&lt;/code&gt; &lt;/b&gt; :테이프가 활성 상태 인 동안 테이프가 액세스 할 &lt;code&gt;watch&lt;/code&gt; 있는 (&lt;b&gt; 트레이닝&lt;/b&gt; 가능한) 변수를자동으로 볼지 여부를 제어하는 ​​부울입니다. 훈련 가능한 &lt;code&gt;Variable&lt;/code&gt; 읽기에서 파생 된 테이프에서 계산 된 모든 결과에서 기본값을 True로 의미 그래디언트를 요청할 수 있습니다. 거짓 사용자가 명시 적으로해야하는 경우 &lt;code&gt;watch&lt;/code&gt; 있는 &lt;code&gt;Variable&lt;/code&gt; 들 그들은에서 요청 그라디언트로합니다.</target>
        </trans-unit>
        <trans-unit id="0cf5c87c7269333a08f6838dda77a564f7f4a15f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weight_collections&lt;/code&gt;&lt;/b&gt;: A list of collection names to which the Variable will be added. Note that variables will also be added to collections &lt;code&gt;tf.GraphKeys.GLOBAL_VARIABLES&lt;/code&gt; and &lt;code&gt;ops.GraphKeys.MODEL_VARIABLES&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weight_collections&lt;/code&gt; &lt;/b&gt; : 변수를 추가 할 모음 이름 목록입니다. 변수는 &lt;code&gt;tf.GraphKeys.GLOBAL_VARIABLES&lt;/code&gt; 및 &lt;code&gt;ops.GraphKeys.MODEL_VARIABLES&lt;/code&gt; 컬렉션에도 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="0d7e71b0245a0a98599bb42051e80ed278bc6294" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weight_collections&lt;/code&gt;&lt;/b&gt;: A list of collection names to which the Variable will be added. Note that, variables will also be added to collections &lt;code&gt;tf.GraphKeys.GLOBAL_VARIABLES&lt;/code&gt; and &lt;code&gt;ops.GraphKeys.MODEL_VARIABLES&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weight_collections&lt;/code&gt; &lt;/b&gt; : 변수를 추가 할 모음 이름 목록입니다. 변수는 &lt;code&gt;tf.GraphKeys.GLOBAL_VARIABLES&lt;/code&gt; 및 &lt;code&gt;ops.GraphKeys.MODEL_VARIABLES&lt;/code&gt; 컬렉션에도 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="37a635099a49ef8958f5a586f639d97e30cbf396" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weight_column&lt;/code&gt;&lt;/b&gt;: A string or a &lt;code&gt;NumericColumn&lt;/code&gt; created by &lt;a href=&quot;../../../feature_column/numeric_column&quot;&gt;&lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt;&lt;/a&gt; defining feature column representing weights. It is used to down weight or boost examples during training. It will be multiplied by the loss of the example. If it is a string, it is used as a key to fetch weight tensor from the &lt;code&gt;features&lt;/code&gt;. If it is a &lt;code&gt;NumericColumn&lt;/code&gt;, raw tensor is fetched by key &lt;code&gt;weight_column.key&lt;/code&gt;, then weight_column.normalizer_fn is applied on it to get weight tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weight_column&lt;/code&gt; &lt;/b&gt; , &amp;bull; 문자열 또는 &lt;code&gt;NumericColumn&lt;/code&gt; 만든&lt;a href=&quot;../../../feature_column/numeric_column&quot;&gt; &lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt; &lt;/a&gt; 가중치를 나타내는 기능 열을 정의. 훈련 중에 체중을 줄이거 나 예제를 향상시키는 데 사용됩니다. 예제의 손실로 곱해집니다. 문자열 인 경우 &lt;code&gt;features&lt;/code&gt; 에서 가중치 텐서를 가져 오는 키로 사용됩니다. 그것은 경우 &lt;code&gt;NumericColumn&lt;/code&gt; , 원료 텐서 키에 의해 페치 &lt;code&gt;weight_column.key&lt;/code&gt; , 다음 weight_column.normalizer_fn 체중 텐서를 얻기 위해 그것을 적용된다.</target>
        </trans-unit>
        <trans-unit id="045b97431aa11a33c7c87cee5dda1479b695cae8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weight_column&lt;/code&gt;&lt;/b&gt;: A string or a &lt;code&gt;NumericColumn&lt;/code&gt; created by &lt;a href=&quot;../../feature_column/numeric_column&quot;&gt;&lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt;&lt;/a&gt; defining feature column representing weights. It is used to down weight or boost examples during training. It will be multiplied by the loss of the example. If it is a string, it is used as a key to fetch weight tensor from the &lt;code&gt;features&lt;/code&gt;. If it is a &lt;code&gt;NumericColumn&lt;/code&gt;, raw tensor is fetched by key &lt;code&gt;weight_column.key&lt;/code&gt;, then weight_column.normalizer_fn is applied on it to get weight tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weight_column&lt;/code&gt; &lt;/b&gt; , &amp;bull; 문자열 또는 &lt;code&gt;NumericColumn&lt;/code&gt; 만든&lt;a href=&quot;../../feature_column/numeric_column&quot;&gt; &lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt; &lt;/a&gt; 가중치를 나타내는 기능 열을 정의. 훈련 중에 체중을 줄이거 나 예제를 향상시키는 데 사용됩니다. 예제의 손실로 곱해집니다. 문자열 인 경우 &lt;code&gt;features&lt;/code&gt; 에서 가중치 텐서를 가져 오는 키로 사용됩니다. 그것은 경우 &lt;code&gt;NumericColumn&lt;/code&gt; , 원료 텐서 키에 의해 페치 &lt;code&gt;weight_column.key&lt;/code&gt; , 다음 weight_column.normalizer_fn 체중 텐서를 얻기 위해 그것을 적용된다.</target>
        </trans-unit>
        <trans-unit id="73fd3f0e1aafd765597aea3d228f994c23b8e32e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weight_column&lt;/code&gt;&lt;/b&gt;: A string or a &lt;code&gt;NumericColumn&lt;/code&gt; created by &lt;a href=&quot;../feature_column/numeric_column&quot;&gt;&lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt;&lt;/a&gt; defining feature column representing weights. It is used to down weight or boost examples during training. It will be multiplied by the loss of the example.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weight_column&lt;/code&gt; &lt;/b&gt; , &amp;bull; 문자열 또는 &lt;code&gt;NumericColumn&lt;/code&gt; 만든&lt;a href=&quot;../feature_column/numeric_column&quot;&gt; &lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt; &lt;/a&gt; 가중치를 나타내는 기능 열을 정의. 훈련 중에 체중을 줄이거 나 예제를 향상시키는 데 사용됩니다. 예제의 손실로 곱해집니다.</target>
        </trans-unit>
        <trans-unit id="ee9e3f023d669be39be4a69eb5c307fb31ba43c4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weight_column&lt;/code&gt;&lt;/b&gt;: A string or a &lt;code&gt;NumericColumn&lt;/code&gt; created by &lt;a href=&quot;../feature_column/numeric_column&quot;&gt;&lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt;&lt;/a&gt; defining feature column representing weights. It is used to down weight or boost examples during training. It will be multiplied by the loss of the example. If it is a string, it is used as a key to fetch weight tensor from the &lt;code&gt;features&lt;/code&gt;. If it is a &lt;code&gt;NumericColumn&lt;/code&gt;, raw tensor is fetched by key &lt;code&gt;weight_column.key&lt;/code&gt;, then weight_column.normalizer_fn is applied on it to get weight tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weight_column&lt;/code&gt; &lt;/b&gt; , &amp;bull; 문자열 또는 &lt;code&gt;NumericColumn&lt;/code&gt; 만든&lt;a href=&quot;../feature_column/numeric_column&quot;&gt; &lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt; &lt;/a&gt; 가중치를 나타내는 기능 열을 정의. 훈련 중에 체중을 줄이거 나 예제를 향상시키는 데 사용됩니다. 예제의 손실로 곱해집니다. 문자열 인 경우 &lt;code&gt;features&lt;/code&gt; 에서 가중치 텐서를 가져 오는 키로 사용됩니다. 그것은 경우 &lt;code&gt;NumericColumn&lt;/code&gt; , 원료 텐서 키에 의해 페치 &lt;code&gt;weight_column.key&lt;/code&gt; , 다음 weight_column.normalizer_fn 체중 텐서를 얻기 위해 그것을 적용된다.</target>
        </trans-unit>
        <trans-unit id="06c72c29952625a77f13ec3e13dbefafea8617b1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weight_column&lt;/code&gt;&lt;/b&gt;: A string or a &lt;code&gt;NumericColumn&lt;/code&gt; created by &lt;a href=&quot;../feature_column/numeric_column&quot;&gt;&lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt;&lt;/a&gt; defining feature column representing weights. It is used to down weight or boost examples during training. It will be multiplied by the loss of the example. If it is a string, it is used as a key to fetch weight tensor from the &lt;code&gt;features&lt;/code&gt;. If it is a &lt;code&gt;_NumericColumn&lt;/code&gt;, raw tensor is fetched by key &lt;code&gt;weight_column.key&lt;/code&gt;, then weight_column.normalizer_fn is applied on it to get weight tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weight_column&lt;/code&gt; &lt;/b&gt; , &amp;bull; 문자열 또는 &lt;code&gt;NumericColumn&lt;/code&gt; 만든&lt;a href=&quot;../feature_column/numeric_column&quot;&gt; &lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt; &lt;/a&gt; 가중치를 나타내는 기능 열을 정의. 훈련 중에 체중을 줄이거 나 예제를 향상시키는 데 사용됩니다. 예제의 손실로 곱해집니다. 문자열 인 경우 &lt;code&gt;features&lt;/code&gt; 에서 가중치 텐서를 가져 오는 키로 사용됩니다. 그것이 &lt;code&gt;_NumericColumn&lt;/code&gt; 인경우, 원시 텐서는 키 &lt;code&gt;weight_column.key&lt;/code&gt; 에 의해 페치 된후 weight_column.normalizer_fn이 적용되어 가중치 텐서를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="68d02b4fbe60d24190f0c44265f00def6771c2a3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weight_column&lt;/code&gt;&lt;/b&gt;: A string or a &lt;code&gt;NumericColumn&lt;/code&gt; created by &lt;a href=&quot;../feature_column/numeric_column&quot;&gt;&lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt;&lt;/a&gt; defining feature column representing weights. It is used to down weight or boost examples during training. It will be multiplied by the loss of the example. Per-class weighting is not supported.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weight_column&lt;/code&gt; &lt;/b&gt; , &amp;bull; 문자열 또는 &lt;code&gt;NumericColumn&lt;/code&gt; 만든&lt;a href=&quot;../feature_column/numeric_column&quot;&gt; &lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt; &lt;/a&gt; 가중치를 나타내는 기능 열을 정의. 훈련 중에 체중을 줄이거 나 예제를 향상시키는 데 사용됩니다. 예제의 손실로 곱해집니다. 클래스 별 가중치는 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0740c097b4ae4c14342e9a1d832f8439b9540d2d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weight_column&lt;/code&gt;&lt;/b&gt;: A string or a &lt;code&gt;NumericColumn&lt;/code&gt; created by &lt;a href=&quot;../feature_column/numeric_column&quot;&gt;&lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt;&lt;/a&gt; defining feature column representing weights. It will be multiplied by the loss of the example.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weight_column&lt;/code&gt; &lt;/b&gt; , &amp;bull; 문자열 또는 &lt;code&gt;NumericColumn&lt;/code&gt; 만든&lt;a href=&quot;../feature_column/numeric_column&quot;&gt; &lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt; &lt;/a&gt; 가중치를 나타내는 기능 열을 정의. 예제의 손실로 곱해집니다.</target>
        </trans-unit>
        <trans-unit id="6353612a307a3737400efb75394f24b6ed10b100" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weight_column&lt;/code&gt;&lt;/b&gt;: A string or a &lt;code&gt;NumericColumn&lt;/code&gt; created by &lt;code&gt;tf.fc_old.numeric_column&lt;/code&gt; defining feature column representing weights. It is used to downweight or boost examples during training. It will be multiplied by the loss of the example. If it is a string, it is used as a key to fetch weight tensor from the &lt;code&gt;features&lt;/code&gt;. If it is a &lt;code&gt;NumericColumn&lt;/code&gt;, raw tensor is fetched by key &lt;code&gt;weight_column.key&lt;/code&gt;, then weight_column.normalizer_fn is applied on it to get weight tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weight_column&lt;/code&gt; &lt;/b&gt; , &amp;bull; 문자열 또는 &lt;code&gt;NumericColumn&lt;/code&gt; 만든 &lt;code&gt;tf.fc_old.numeric_column&lt;/code&gt; 가중치를 나타내는 기능 열을 정의. 훈련 중 예제를 다운 웨이트하거나 부스트하는 데 사용됩니다. 예제의 손실로 곱해집니다. 문자열 인 경우 &lt;code&gt;features&lt;/code&gt; 에서 가중치 텐서를 가져 오는 키로 사용됩니다. 그것은 경우 &lt;code&gt;NumericColumn&lt;/code&gt; , 원료 텐서 키에 의해 페치 &lt;code&gt;weight_column.key&lt;/code&gt; , 다음 weight_column.normalizer_fn 체중 텐서를 얻기 위해 그것을 적용된다.</target>
        </trans-unit>
        <trans-unit id="e929d83d3ed3fc0bfb77b6b5b9d31da26ca1a11f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weight_column&lt;/code&gt;&lt;/b&gt;: A string or a &lt;code&gt;_NumericColumn&lt;/code&gt; created by &lt;a href=&quot;../feature_column/numeric_column&quot;&gt;&lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt;&lt;/a&gt; defining feature column representing weights. It is used to down weight or boost examples during training. It will be multiplied by the loss of the example. If it is a string, it is used as a key to fetch weight tensor from the &lt;code&gt;features&lt;/code&gt;. If it is a &lt;code&gt;_NumericColumn&lt;/code&gt;, raw tensor is fetched by key &lt;code&gt;weight_column.key&lt;/code&gt;, then weight_column.normalizer_fn is applied on it to get weight tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weight_column&lt;/code&gt; &lt;/b&gt; , &amp;bull; 문자열 또는 &lt;code&gt;_NumericColumn&lt;/code&gt; 만든&lt;a href=&quot;../feature_column/numeric_column&quot;&gt; &lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt; &lt;/a&gt; 가중치를 나타내는 기능 열을 정의. 훈련 중에 체중을 줄이거 나 예제를 향상시키는 데 사용됩니다. 예제의 손실로 곱해집니다. 문자열 인 경우 &lt;code&gt;features&lt;/code&gt; 에서 가중치 텐서를 가져 오는 키로 사용됩니다. 그것이 &lt;code&gt;_NumericColumn&lt;/code&gt; 인경우, 원시 텐서는 키 &lt;code&gt;weight_column.key&lt;/code&gt; 에 의해 페치 된후 weight_column.normalizer_fn이 적용되어 가중치 텐서를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="ad729f158c988eb099bb46f26e713c43327d9b98" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weight_column&lt;/code&gt;&lt;/b&gt;: A string or a &lt;code&gt;_NumericColumn&lt;/code&gt; created by &lt;a href=&quot;../feature_column/numeric_column&quot;&gt;&lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt;&lt;/a&gt; defining feature column representing weights. It is used to downweight or boost examples during training. It will be multiplied by the loss of the example. If it is a string, it is used as a key to fetch weight tensor from the &lt;code&gt;features&lt;/code&gt;. If it is a &lt;code&gt;_NumericColumn&lt;/code&gt;, raw tensor is fetched by key &lt;code&gt;weight_column.key&lt;/code&gt;, then weight_column.normalizer_fn is applied on it to get weight tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weight_column&lt;/code&gt; &lt;/b&gt; , &amp;bull; 문자열 또는 &lt;code&gt;_NumericColumn&lt;/code&gt; 만든&lt;a href=&quot;../feature_column/numeric_column&quot;&gt; &lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt; &lt;/a&gt; 가중치를 나타내는 기능 열을 정의. 훈련 중 예제를 다운 웨이트하거나 부스트하는 데 사용됩니다. 예제의 손실로 곱해집니다. 문자열 인 경우 &lt;code&gt;features&lt;/code&gt; 에서 가중치 텐서를 가져 오는 키로 사용됩니다. 그것이 &lt;code&gt;_NumericColumn&lt;/code&gt; 인경우, 원시 텐서는 키 &lt;code&gt;weight_column.key&lt;/code&gt; 에 의해 페치 된후 weight_column.normalizer_fn이 적용되어 가중치 텐서를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="7f0cf11b497c671e3d1e0805b4f4bc0a1ce730dd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weight_column&lt;/code&gt;&lt;/b&gt;: A string or a &lt;code&gt;_NumericColumn&lt;/code&gt; created by &lt;a href=&quot;../feature_column/numeric_column&quot;&gt;&lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt;&lt;/a&gt; defining feature column representing weights. It will be multiplied by the loss of the example.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weight_column&lt;/code&gt; &lt;/b&gt; , &amp;bull; 문자열 또는 &lt;code&gt;_NumericColumn&lt;/code&gt; 만든&lt;a href=&quot;../feature_column/numeric_column&quot;&gt; &lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt; &lt;/a&gt; 가중치를 나타내는 기능 열을 정의. 예제의 손실로 곱해집니다.</target>
        </trans-unit>
        <trans-unit id="765464dea17621363db053c8bb0a2456f8e2b90d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weight_feature_key&lt;/code&gt;&lt;/b&gt;: String key for weight values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weight_feature_key&lt;/code&gt; &lt;/b&gt; : 무게 값의 문자열 키.</target>
        </trans-unit>
        <trans-unit id="19432ad320ce7be927e34652176e0971017f21b9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weighted_metrics&lt;/code&gt;&lt;/b&gt;: List of metrics to be evaluated and weighted by sample_weight or class_weight during training and testing.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weighted_metrics&lt;/code&gt; &lt;/b&gt; : 교육 및 테스트 중에 sample_weight 또는 class_weight에 의해 평가되고 가중치가 부여되는 메트릭 목록입니다.</target>
        </trans-unit>
        <trans-unit id="ebdde9e96244b1f117d987a88f0c821a16343ca5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weights&lt;/code&gt;&lt;/b&gt;: (Optional.) A list of &lt;code&gt;len(datasets)&lt;/code&gt; floating-point values where &lt;code&gt;weights[i]&lt;/code&gt; represents the probability with which an element should be sampled from &lt;code&gt;datasets[i]&lt;/code&gt;, or a &lt;a href=&quot;../../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; object where each element is such a list. Defaults to a uniform distribution across &lt;code&gt;datasets&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weights&lt;/code&gt; &lt;/b&gt; : (선택 사항) &lt;code&gt;weights[i]&lt;/code&gt; 는 &lt;code&gt;datasets[i]&lt;/code&gt; 에서 요소를 샘플링해야 할 확률을 나타내거나각 요소가있는&lt;a href=&quot;../../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; 객체를나타내는 &lt;code&gt;len(datasets)&lt;/code&gt; 부동 소수점 값의 목록입니다.그런 목록. 기본적으로 &lt;code&gt;datasets&lt;/code&gt; 전체에 균일 한 분포가 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="fd64fd23a6a2e021c3f993eabb25f5665662e190" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weights&lt;/code&gt;&lt;/b&gt;: (Optional.) A list of &lt;code&gt;len(datasets)&lt;/code&gt; floating-point values where &lt;code&gt;weights[i]&lt;/code&gt; represents the probability with which an element should be sampled from &lt;code&gt;datasets[i]&lt;/code&gt;, or a &lt;a href=&quot;../dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; object where each element is such a list. Defaults to a uniform distribution across &lt;code&gt;datasets&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weights&lt;/code&gt; &lt;/b&gt; : (선택 사항) &lt;code&gt;weights[i]&lt;/code&gt; 는 &lt;code&gt;datasets[i]&lt;/code&gt; 에서 요소를 샘플링해야 할 확률을 나타내거나각 요소가있는&lt;a href=&quot;../dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; 객체를나타내는 &lt;code&gt;len(datasets)&lt;/code&gt; 부동 소수점 값의 목록입니다.그런 목록. 기본적으로 &lt;code&gt;datasets&lt;/code&gt; 전체에 균일 한 분포가 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="9a7a8e7f434d4f19c5ad77f0ab2a0285bb7da39e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weights&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Tensor&lt;/code&gt; whose rank is either 0, or n-1, where n is the rank of &lt;code&gt;labels&lt;/code&gt;. If the latter, it must be broadcastable to &lt;code&gt;labels&lt;/code&gt; (i.e., all dimensions must be either &lt;code&gt;1&lt;/code&gt;, or the same as the corresponding &lt;code&gt;labels&lt;/code&gt; dimension).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weights&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; 그 순위 중 0, 또는 n-1, 여기서 n의 순위입니다 &lt;code&gt;labels&lt;/code&gt; . 후자의 경우 &lt;code&gt;labels&lt;/code&gt; 로 브로드 캐스트 할 수 있어야합니다(즉, 모든 차원은 &lt;code&gt;1&lt;/code&gt; 또는 해당 &lt;code&gt;labels&lt;/code&gt; 차원과 같아야합니다).</target>
        </trans-unit>
        <trans-unit id="660dc05ac19c3cebd2e5601bb5c9b6da50d01271" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weights&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[num_classes, dim]&lt;/code&gt;, or a list of &lt;code&gt;Tensor&lt;/code&gt; objects whose concatenation along dimension 0 has shape [num_classes, dim]. The (possibly-partitioned) class embeddings.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weights&lt;/code&gt; &lt;/b&gt; 하십시오 &lt;code&gt;Tensor&lt;/code&gt; 형상 &lt;code&gt;[num_classes, dim]&lt;/code&gt; 또는 목록 &lt;code&gt;Tensor&lt;/code&gt; 그 연결 차원 형상을 따라 0 [num_classes 희미한]을 갖는 개체. (아마도 파티션 된) 클래스 임베딩.</target>
        </trans-unit>
        <trans-unit id="b1d1ebbd23ae3ec7fa61cecba8f5e786e6548e93" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weights&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[num_classes, dim]&lt;/code&gt;, or a list of &lt;code&gt;Tensor&lt;/code&gt; objects whose concatenation along dimension 0 has shape [num_classes, dim]. The (possibly-sharded) class embeddings.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weights&lt;/code&gt; &lt;/b&gt; 하십시오 &lt;code&gt;Tensor&lt;/code&gt; 형상 &lt;code&gt;[num_classes, dim]&lt;/code&gt; 또는 목록 &lt;code&gt;Tensor&lt;/code&gt; 그 연결 차원 형상을 따라 0 [num_classes 희미한]을 갖는 개체. (가능하면 샤딩 된) 클래스 임베딩.</target>
        </trans-unit>
        <trans-unit id="99a8c595062f2ef68ca13cf32aa7c1c3c328f804" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weights&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float&lt;/code&gt; and shape &lt;code&gt;[num_accidental_hits]&lt;/code&gt;. Each value is &lt;code&gt;-FLOAT_MAX&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weights&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;float&lt;/code&gt; 및 shape유형의 &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;[num_accidental_hits]&lt;/code&gt; . 각 값은 &lt;code&gt;-FLOAT_MAX&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="000aa4b70cc403894de905e51d3603c3e3eb2c08" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weights&lt;/code&gt;&lt;/b&gt;: A list of &lt;code&gt;Tensor&lt;/code&gt; objects with type mutable &lt;code&gt;float32&lt;/code&gt;. a list of vectors where each value is the weight associated with a feature group.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weights&lt;/code&gt; &lt;/b&gt; :변경 가능한 &lt;code&gt;float32&lt;/code&gt; 유형의 &lt;code&gt;Tensor&lt;/code&gt; 객체목록. 각 값이 피처 그룹과 연관된 가중치 인 벡터 목록.</target>
        </trans-unit>
        <trans-unit id="70c68c2396226fe45534c6b1b63b01c15e1a2fe8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weights&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;Tensor&lt;/code&gt; whose shape matches &lt;code&gt;predictions&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weights&lt;/code&gt; &lt;/b&gt; :모양이 &lt;code&gt;predictions&lt;/code&gt; 과 일치하는 선택적 &lt;code&gt;Tensor&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="64c8a39d1da2bd22e9e33009cde5c978788f994d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weights&lt;/code&gt;&lt;/b&gt;: Coefficients for the loss a scalar, a tensor of shape &lt;code&gt;[batch_size]&lt;/code&gt; or a tensor whose shape matches &lt;code&gt;predictions&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weights&lt;/code&gt; &lt;/b&gt; : 스칼라, 모양의 텐서 &lt;code&gt;[batch_size]&lt;/code&gt; 또는 모양이 &lt;code&gt;predictions&lt;/code&gt; 과 일치하는 텐서를상실하는 계수.</target>
        </trans-unit>
        <trans-unit id="7914588eeb58c9b4c4ca58132107010bcf4c0910" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weights&lt;/code&gt;&lt;/b&gt;: Coefficients for the loss. This must be scalar or broadcastable to &lt;code&gt;labels&lt;/code&gt; (i.e. same rank and each dimension is either 1 or the same).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weights&lt;/code&gt; &lt;/b&gt; : 손실 계수. 이 &lt;code&gt;labels&lt;/code&gt; 스칼라이거나 레이블로 브로드 캐스트 할 수 있어야합니다(예 : 동일한 순위 및 각 차원은 1 또는 동일).</target>
        </trans-unit>
        <trans-unit id="1903395c031b9678308f760b908a5fc5a9c4fb0e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weights&lt;/code&gt;&lt;/b&gt;: If non-None, must be the same shape as arr. For each value in &lt;code&gt;arr&lt;/code&gt;, the bin will be incremented by the corresponding weight instead of 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weights&lt;/code&gt; &lt;/b&gt; : None이 아닌 경우 arr과 모양이 같아야합니다. &lt;code&gt;arr&lt;/code&gt; 의 각 값에대해 bin은 1 대신 해당 가중치만큼 증가합니다.</target>
        </trans-unit>
        <trans-unit id="9f87ed31018d1fcef1fbb9433a88ace6223d056c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weights&lt;/code&gt;&lt;/b&gt;: Optional &lt;code&gt;Tensor&lt;/code&gt; that is broadcastable to loss.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weights&lt;/code&gt; &lt;/b&gt; :손실로 방송 가능한 &lt;code&gt;Tensor&lt;/code&gt; 옵션).</target>
        </trans-unit>
        <trans-unit id="7f315e6e9e5e867a9af975c56e445606661be186" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weights&lt;/code&gt;&lt;/b&gt;: Optional &lt;code&gt;Tensor&lt;/code&gt; whose rank is either 0, or the same rank as &lt;code&gt;labels&lt;/code&gt;, and must be broadcastable to &lt;code&gt;labels&lt;/code&gt; (i.e., all dimensions must be either &lt;code&gt;1&lt;/code&gt;, or the same as the corresponding &lt;code&gt;labels&lt;/code&gt; dimension).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weights&lt;/code&gt; &lt;/b&gt; : 옵션 &lt;code&gt;Tensor&lt;/code&gt; 그 순위 0 중 하나, 또는 같은 순위 &lt;code&gt;labels&lt;/code&gt; 및에 캐스트 가능한해야 &lt;code&gt;labels&lt;/code&gt; (즉, 모든 차원이어야 &lt;code&gt;1&lt;/code&gt; , 또는 해당 같은 &lt;code&gt;labels&lt;/code&gt; 차원).</target>
        </trans-unit>
        <trans-unit id="c7aea5d732e3d555b25ba7043c12a15afa7a2a43" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weights&lt;/code&gt;&lt;/b&gt;: Optional &lt;code&gt;Tensor&lt;/code&gt; whose rank is either 0, or the same rank as &lt;code&gt;labels&lt;/code&gt;, and must be broadcastable to &lt;code&gt;labels&lt;/code&gt; (i.e., all dimensions must be either &lt;code&gt;1&lt;/code&gt;, or the same as the corresponding &lt;code&gt;labels&lt;/code&gt; dimension). Also, dimension &lt;code&gt;dim&lt;/code&gt; must be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weights&lt;/code&gt; &lt;/b&gt; : 옵션 &lt;code&gt;Tensor&lt;/code&gt; 그 순위 0 중 하나, 또는 같은 순위 &lt;code&gt;labels&lt;/code&gt; 및에 캐스트 가능한해야 &lt;code&gt;labels&lt;/code&gt; (즉, 모든 차원이어야 &lt;code&gt;1&lt;/code&gt; , 또는 해당 같은 &lt;code&gt;labels&lt;/code&gt; 차원). 또한 차원 &lt;code&gt;dim&lt;/code&gt; 은 &lt;code&gt;1&lt;/code&gt; 이어야합니다.</target>
        </trans-unit>
        <trans-unit id="74d99c502998245233e404bfe1a6794ef0fefd8d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weights&lt;/code&gt;&lt;/b&gt;: Optional &lt;code&gt;Tensor&lt;/code&gt; whose rank is either 0, or the same rank as &lt;code&gt;labels&lt;/code&gt;, and must be broadcastable to &lt;code&gt;labels&lt;/code&gt; (i.e., all dimensions must be either &lt;code&gt;1&lt;/code&gt;, or the same as the corresponding &lt;code&gt;losses&lt;/code&gt; dimension).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weights&lt;/code&gt; &lt;/b&gt; : 선택 &lt;code&gt;Tensor&lt;/code&gt; 그 랭크 0 중 하나, 또는 동일 등급 &lt;code&gt;labels&lt;/code&gt; 및에 있어야 캐스트 가능한 &lt;code&gt;labels&lt;/code&gt; (즉, 모든 치수이어야 &lt;code&gt;1&lt;/code&gt; , 또는 해당 같은 &lt;code&gt;losses&lt;/code&gt; 측정).</target>
        </trans-unit>
        <trans-unit id="da590f2a78b63b6efa6822d69a04837e19ae72bc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weights&lt;/code&gt;&lt;/b&gt;: Optional &lt;code&gt;Tensor&lt;/code&gt; whose rank is either 0, or the same rank as &lt;code&gt;losses&lt;/code&gt;, and must be broadcastable to &lt;code&gt;losses&lt;/code&gt; (i.e., all dimensions must be either &lt;code&gt;1&lt;/code&gt;, or the same as the corresponding &lt;code&gt;losses&lt;/code&gt; dimension).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weights&lt;/code&gt; &lt;/b&gt; : 선택 &lt;code&gt;Tensor&lt;/code&gt; 그 랭크 0 중 하나, 또는 동일 등급 &lt;code&gt;losses&lt;/code&gt; 및 행 캐스트 가능한 있어야 &lt;code&gt;losses&lt;/code&gt; (즉, 모든 치수이어야 &lt;code&gt;1&lt;/code&gt; , 또는 해당 같은 &lt;code&gt;losses&lt;/code&gt; 측정).</target>
        </trans-unit>
        <trans-unit id="6dc0e63e55f31ed04016ce3a1d41e1db12506926" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weights&lt;/code&gt;&lt;/b&gt;: Optional &lt;code&gt;Tensor&lt;/code&gt; whose rank is either 0, or the same rank as &lt;code&gt;values&lt;/code&gt;, and must be broadcastable to &lt;code&gt;values&lt;/code&gt; (i.e., all dimensions must be either &lt;code&gt;1&lt;/code&gt;, or the same as the corresponding &lt;code&gt;values&lt;/code&gt; dimension).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weights&lt;/code&gt; &lt;/b&gt; : 선택 &lt;code&gt;Tensor&lt;/code&gt; 그 랭크 0하거나, 또는 동일한 랭크 &lt;code&gt;values&lt;/code&gt; , 및에 있어야 캐스트 가능한 &lt;code&gt;values&lt;/code&gt; (즉, 모든 치수이어야 &lt;code&gt;1&lt;/code&gt; , 또는 해당 같은 &lt;code&gt;values&lt;/code&gt; 치수).</target>
        </trans-unit>
        <trans-unit id="89465e4d0e4294ae784a2b035829fcfe1324cdeb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weights&lt;/code&gt;&lt;/b&gt;: a 2D tensor. Dimensions typically: in_units, out_units</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weights&lt;/code&gt; &lt;/b&gt; : 2D 텐서. 차원 : 일반적으로 in_units, out_units</target>
        </trans-unit>
        <trans-unit id="4f8cf3345124d1c01c1b7951b24d0811eb96507a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;weights&lt;/code&gt;&lt;/b&gt;: a list of Numpy arrays. The number of arrays and their shape must match number of the dimensions of the weights of the layer (i.e. it should match the output of &lt;code&gt;get_weights&lt;/code&gt;).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;weights&lt;/code&gt; &lt;/b&gt; : Numpy 배열의 목록입니다. 배열의 수와 모양은 레이어 가중치의 크기와 일치해야합니다 (즉, &lt;code&gt;get_weights&lt;/code&gt; 의 출력과 일치해야 함 ).</target>
        </trans-unit>
        <trans-unit id="7bbc1a38c6b0777a6ebd420ce6be064b4f920d81" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;whence&lt;/code&gt;&lt;/b&gt;: Valid values for whence are: 0: start of the file (default) 1: relative to the current position of the file 2: relative to the end of file. &lt;code&gt;offset&lt;/code&gt; is usually negative.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;whence&lt;/code&gt; &lt;/b&gt; :&lt;b&gt; whence의&lt;/b&gt; 유효한 값은 다음과 같습니다. 0 : 파일 시작 (기본값) 1 : 파일의 현재 위치 기준 2 : 파일의 끝 기준 &lt;code&gt;offset&lt;/code&gt; 은 일반적으로 음수입니다.</target>
        </trans-unit>
        <trans-unit id="0bc57d4992aa2830a80ec7ca5cd61433f92d25eb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;whole&lt;/code&gt;&lt;/b&gt;: The sequence in which to look for prefix.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;whole&lt;/code&gt; &lt;/b&gt; : 접두사를 찾는 순서입니다.</target>
        </trans-unit>
        <trans-unit id="afed6cf8cdf6f1f98dfc65d0495b7f326f38aea2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;width&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. Pad pre-decimal numbers to this width. Applies to both floating point and integer numbers. Only used if width &amp;gt; -1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;width&lt;/code&gt; &lt;/b&gt; : 옵션 &lt;code&gt;int&lt;/code&gt; . 기본값은 &lt;code&gt;-1&lt;/code&gt; 입니다. 사전 너비를이 너비로 채 웁니다. 부동 소수점과 정수 모두에 적용됩니다. 너비가 -1 인 경우에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ff1516f5c6924065a4403eb080708bd725ad3d63" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;width&lt;/code&gt;&lt;/b&gt;: Progress bar width on screen.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;width&lt;/code&gt; &lt;/b&gt; : 화면의 진행률 표시 줄 너비.</target>
        </trans-unit>
        <trans-unit id="a91e859e862431e5e3f87b9a25dff9d2af771f7e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;width_factor&lt;/code&gt;&lt;/b&gt;: Positive integer.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;width_factor&lt;/code&gt; &lt;/b&gt; : 양의 정수.</target>
        </trans-unit>
        <trans-unit id="3755be9e5e92beb9dfae45433d6c1d2463d4c350" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;width_shift_range&lt;/code&gt;&lt;/b&gt;: Float, 1-D array-like or int</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;width_shift_range&lt;/code&gt; &lt;/b&gt; : 부동, 1 차원 배열 또는 int</target>
        </trans-unit>
        <trans-unit id="f6c75b1c0af88f0eda04feed62ae92952544fc95" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;window_bits&lt;/code&gt;&lt;/b&gt;: int or &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;window_bits&lt;/code&gt; &lt;/b&gt; : INT 또는 &lt;code&gt;None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a90391a854d671e1310ccf47da0ffcd3a5dd9e82" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;window_fn&lt;/code&gt;&lt;/b&gt;: A callable that takes a window length and a &lt;code&gt;dtype&lt;/code&gt; keyword argument and returns a &lt;code&gt;[window_length]&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; of samples in the provided datatype. If set to &lt;code&gt;None&lt;/code&gt;, no windowing is used.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;window_fn&lt;/code&gt; &lt;/b&gt; : 창 길이와 &lt;code&gt;dtype&lt;/code&gt; 키워드 인수를 사용하여 제공된 데이터 유형에서 샘플의 &lt;code&gt;[window_length]&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 를리턴하는호출 가능 항목입니다. &lt;code&gt;None&lt;/code&gt; 으로 설정하면윈도우가 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0fb22fcf19170a387e7a8e4a5d2b2289c7deed3d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;window_length&lt;/code&gt;&lt;/b&gt;: A scalar &lt;code&gt;Tensor&lt;/code&gt; indicating the window length to generate.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;window_length&lt;/code&gt; &lt;/b&gt; :생성 할 창 길이를 나타내는스칼라 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b5e4809ed471a2996f1de0c84112882199f9c0c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;window_shape&lt;/code&gt;&lt;/b&gt;: Sequence of N ints &amp;gt;= 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;window_shape&lt;/code&gt; &lt;/b&gt; : N ints&amp;gt; = 1의 시퀀스</target>
        </trans-unit>
        <trans-unit id="6cab4c453024d6f7979f0de3868c04a38fe36c41" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;window_size&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt; scalar &lt;a href=&quot;../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, representing the number of consecutive elements matching the same key to combine in a single batch, which will be passed to &lt;code&gt;reduce_func&lt;/code&gt;. Mutually exclusive with &lt;code&gt;window_size_func&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;window_size&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt; 스칼라&lt;a href=&quot;../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; , 단일 배치로 결합하기 위해 동일한 키와 일치하는 연속 요소 수를 &lt;code&gt;reduce_func&lt;/code&gt; 전달됩니다 . . &lt;code&gt;window_size_func&lt;/code&gt; 와 상호 배타적입니다 .</target>
        </trans-unit>
        <trans-unit id="7d442c81fc4735fd26443d27c2f65d15e64b89b2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;window_size_func&lt;/code&gt;&lt;/b&gt;: A function mapping a key to a &lt;a href=&quot;../../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt; scalar &lt;a href=&quot;../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, representing the number of consecutive elements matching the same key to combine in a single batch, which will be passed to &lt;code&gt;reduce_func&lt;/code&gt;. Mutually exclusive with &lt;code&gt;window_size&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;window_size_func&lt;/code&gt; &lt;/b&gt; : 키를&lt;a href=&quot;../../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt; 스칼라&lt;a href=&quot;../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; 에&lt;/a&gt; 매핑하는 함수로, 단일 배치로 결합 할 동일한 키와 일치하는 연속 요소 수를 &lt;code&gt;reduce_func&lt;/code&gt; 로 전달됩니다. 상호 배타적 &lt;code&gt;window_size&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef1dcf83abc1fbd39c5b073467287cdddbfa2138" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;worker_config&lt;/code&gt;&lt;/b&gt;: (optional) &lt;code&gt;tf.ConfigProto&lt;/code&gt; to initialize workers. Can be used to instantiate multiple devices etc.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;worker_config&lt;/code&gt; &lt;/b&gt; : (선택 사항) &lt;code&gt;tf.ConfigProto&lt;/code&gt; 를 초기화하는 tf.ConfigProto 여러 장치 등을 인스턴스화하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b8443b9dd3808b01b7f171419843341e0032723" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;worker_device&lt;/code&gt;&lt;/b&gt;: String. Device of the &lt;code&gt;worker&lt;/code&gt; job. If empty no &lt;code&gt;worker&lt;/code&gt; job is used.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;worker_device&lt;/code&gt; &lt;/b&gt; : 문자열. &lt;code&gt;worker&lt;/code&gt; 작업의장치. 비어 있으면 &lt;code&gt;worker&lt;/code&gt; 작업이 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="24c3ef52ecf277ea7520e0a813cd15e0ca5778f6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;workers&lt;/code&gt;&lt;/b&gt;: Integer. Used for generator or &lt;a href=&quot;../utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; input only. Maximum number of processes to spin up when using process-based threading. If unspecified, &lt;code&gt;workers&lt;/code&gt; will default to 1. If 0, will execute the generator on the main thread.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;workers&lt;/code&gt; &lt;/b&gt; : 정수. 생성기 또는&lt;a href=&quot;../utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt; . 시퀀스 입력에만 사용됩니다. 프로세스 기반 스레딩을 사용할 때 가동되는 최대 프로세스 수입니다. 지정하지 않으면 &lt;code&gt;workers&lt;/code&gt; 는 기본적으로 1로 설정됩니다. 0이면 기본 스레드에서 생성기를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="9bd21200e7c6f602ad6bf77addc026c60c933ea1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;workers&lt;/code&gt;&lt;/b&gt;: Integer. Used for generator or &lt;a href=&quot;utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; input only. Maximum number of processes to spin up when using process-based threading. If unspecified, &lt;code&gt;workers&lt;/code&gt; will default to 1. If 0, will execute the generator on the main thread.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;workers&lt;/code&gt; &lt;/b&gt; : 정수. 생성기 또는&lt;a href=&quot;utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt; . 시퀀스 입력에만 사용됩니다. 프로세스 기반 스레딩을 사용할 때 가동되는 최대 프로세스 수입니다. 지정하지 않으면 &lt;code&gt;workers&lt;/code&gt; 는 기본적으로 1로 설정됩니다. 0이면 기본 스레드에서 생성기를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="2fe6194e25319544414cd87b15d9334ea1a76a62" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;workers&lt;/code&gt;&lt;/b&gt;: Number of workers.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;workers&lt;/code&gt; &lt;/b&gt; : 노동자의 수.</target>
        </trans-unit>
        <trans-unit id="06a6c1c0ea8a3055ca7dbea6c88b9275174325b2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;write_callback&lt;/code&gt;&lt;/b&gt;: A function pointer that can be used to write intermediate steps of graph transformation (optional).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;write_callback&lt;/code&gt; &lt;/b&gt; : 그래프 변환의 중간 단계를 작성하는 데 사용할 수있는 함수 포인터입니다 (선택 사항).</target>
        </trans-unit>
        <trans-unit id="eaa5646d9b675bcb54eec164deeb2138d085b8b0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;write_grads&lt;/code&gt;&lt;/b&gt;: whether to visualize gradient histograms in TensorBoard. &lt;code&gt;histogram_freq&lt;/code&gt; must be greater than 0.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;write_grads&lt;/code&gt; &lt;/b&gt; :&lt;b&gt; TensorBoard&lt;/b&gt; 에서 그라디언트 히스토그램을 시각화할지 여부. &lt;code&gt;histogram_freq&lt;/code&gt; 는 0보다 커야합니다.</target>
        </trans-unit>
        <trans-unit id="3f022def2d4215ce6911f0e01ba6c91cebe4d4ea" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;write_graph&lt;/code&gt;&lt;/b&gt;: whether to visualize the graph in TensorBoard. The log file can become quite large when write_graph is set to True.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;write_graph&lt;/code&gt; &lt;/b&gt; : 에서 그래프를 시각화할지 여부. write_graph가 True로 설정되면 로그 파일이 상당히 커질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a2f34bef567a8b2b26ebe48e3d98c656c31ffa0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;write_images&lt;/code&gt;&lt;/b&gt;: whether to write model weights to visualize as image in TensorBoard.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;write_images&lt;/code&gt; &lt;/b&gt; : 에서 이미지로 시각화하기 위해 모델 가중치를 쓸지 여부.</target>
        </trans-unit>
        <trans-unit id="cb9a964256e3afa17066407183bfb75ab6049aa3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;write_meta_graph&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Boolean&lt;/code&gt; indicating whether or not to write the meta graph file.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;write_meta_graph&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Boolean&lt;/code&gt; 메타 그래프 파일을 여부를 나타내는 입니다.</target>
        </trans-unit>
        <trans-unit id="594b51548a05cf73650173e44c966ea6da3ae180" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;write_state&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Boolean&lt;/code&gt; indicating whether or not to write the &lt;code&gt;CheckpointStateProto&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;write_state&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;CheckpointStateProto&lt;/code&gt; 쓰기 여부를 나타내는 &lt;code&gt;Boolean&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7ca7fb5a7a952323bb6cc4af2a5d9dacad2c2766" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;write_version&lt;/code&gt;&lt;/b&gt;: controls what format to use when saving checkpoints. It also affects certain filepath matching logic. The V2 format is the recommended choice: it is much more optimized than V1 in terms of memory required and latency incurred during restore. Regardless of this flag, the Saver is able to restore from both V2 and V1 checkpoints.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;write_version&lt;/code&gt; &lt;/b&gt; : 검사 점을 저장할 때 사용할 형식을 제어합니다. 또한 특정 파일 경로 일치 논리에 영향을줍니다. V2 형식은 권장되는 선택입니다. 복원하는 동안 발생하는 메모리와 대기 시간 측면에서 V1보다 훨씬 최적화되어 있습니다. 이 플래그에 관계없이 Saver는 V2 및 V1 체크 포인트 모두에서 복원 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="529a4296d60d906be84eaf3eacfe94870f97e9b4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;writer&lt;/code&gt;&lt;/b&gt;: The &lt;a href=&quot;summarywriter&quot;&gt;&lt;code&gt;tf.summary.SummaryWriter&lt;/code&gt;&lt;/a&gt; resource to flush. The thread default will be used if this parameter is None. Otherwise a &lt;a href=&quot;../no_op&quot;&gt;&lt;code&gt;tf.no_op&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;writer&lt;/code&gt; &lt;/b&gt; :플러시 할&lt;a href=&quot;summarywriter&quot;&gt; &lt;code&gt;tf.summary.SummaryWriter&lt;/code&gt; &lt;/a&gt; 리소스 이 매개 변수가 None이면 스레드 기본값이 사용됩니다. 그렇지 않으면&lt;a href=&quot;../no_op&quot;&gt; &lt;code&gt;tf.no_op&lt;/code&gt; &lt;/a&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="f8bae07a7c451350aab44b2c7d7769c3d50b7b85" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x1&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x1&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;float32&lt;/code&gt; 유형 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="9adfbcc56c7508342cb26ff578fbe72e5d2ce8ad" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x2&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x1&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x2&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;x1&lt;/code&gt; 과 동일한 유형이어야합니다.</target>
        </trans-unit>
        <trans-unit id="8f027d76de661fb20dfecc37c08a72453d02c6db" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;LinearOperator&lt;/code&gt; or &lt;code&gt;Tensor&lt;/code&gt; with compatible shape and same &lt;code&gt;dtype&lt;/code&gt; as &lt;code&gt;self&lt;/code&gt;. See class docstring for definition of compatibility.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; :호환 가능한 모양과 &lt;code&gt;self&lt;/code&gt; 와 동일한 &lt;code&gt;dtype&lt;/code&gt; 을가진 &lt;code&gt;LinearOperator&lt;/code&gt; 또는 &lt;code&gt;Tensor&lt;/code&gt; . 호환성 정의는 docstring 클래스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fc57437b27d4d69c0e8a33f5fb9dc65693b6467f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Tensor&lt;/code&gt; numerator of numeric type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; :숫자 형 &lt;code&gt;Tensor&lt;/code&gt; 분자.</target>
        </trans-unit>
        <trans-unit id="f4dcdffca5fc86cc141695e7022af50d8b7c5bb4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Tensor&lt;/code&gt; numerator of real numeric type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; :실수 형의 &lt;code&gt;Tensor&lt;/code&gt; 분자.</target>
        </trans-unit>
        <trans-unit id="8f57fc358d004b73e8132c5402a30075a195cfeb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Tensor&lt;/code&gt; to conjugate. Must have numeric or variant type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; :접합 할 &lt;code&gt;Tensor&lt;/code&gt; . 숫자 또는 변형 유형이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="9fa56a351fca608cf5672c6816bea85be8ca0cf4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Tensor&lt;/code&gt; whose basetype is integer and is not quantized.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; :기본 유형이 정수이고 양자화되지 않은 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f90facb3b909822304499673941ad1ce4e2dc28" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Tensor&lt;/code&gt; with compatible shape and same &lt;code&gt;dtype&lt;/code&gt; as &lt;code&gt;self&lt;/code&gt;. &lt;code&gt;x&lt;/code&gt; is treated as a [batch] vector meaning for every set of leading dimensions, the last dimension defines a vector. See class docstring for definition of compatibility.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; :호환 가능한 모양과 &lt;code&gt;self&lt;/code&gt; 와 동일한 &lt;code&gt;dtype&lt;/code&gt; 을가진 &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;x&lt;/code&gt; 는 모든 선행 차원 집합에 대한 [배치] 벡터 의미로 취급되며 마지막 차원은 벡터를 정의합니다. 호환성 정의는 docstring 클래스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f789d44cedbf5e15151997d83815033a3975e50c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Tensor&lt;/code&gt; with same &lt;code&gt;dtype&lt;/code&gt; and shape broadcastable to &lt;code&gt;self.shape&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; 동일한 함께 &lt;code&gt;dtype&lt;/code&gt; 및 형상 캐스트 가능한 &lt;code&gt;self.shape&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf6536518d4f76c129e5eba4c568820a43a46fb8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Tensor&lt;/code&gt; with type &lt;code&gt;float&lt;/code&gt; or &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;float&lt;/code&gt; 또는 &lt;code&gt;double&lt;/code&gt; 유형의 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76032e684ac80300f15ba43e45708999f9e4e1d9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Tensor&lt;/code&gt;, input tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; , 입력 텐서.</target>
        </trans-unit>
        <trans-unit id="614f0281e9bbe718cdea60ff13dbaa882373827e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="06da217cfbfbaba0d86cb6ede6ef97b9d1d7396b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A 0-D scalar &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 0-D 스칼라 &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;uint8&lt;/code&gt; , &lt;code&gt;int8&lt;/code&gt; , &lt;code&gt;int16&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; 유형 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="cf6385dae597d1a861e299fb2e588cd5adbd5550" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../sparse/sparsetensor&quot;&gt;&lt;code&gt;tf.SparseTensor&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../indexedslices&quot;&gt;&lt;code&gt;tf.IndexedSlices&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;../sparse/sparsetensor&quot;&gt; &lt;code&gt;tf.SparseTensor&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;../indexedslices&quot;&gt; &lt;code&gt;tf.IndexedSlices&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f668e3e9057b08657994d764338a6c8ce425c039" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;bool&lt;/code&gt; 타입의 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0cbfe4e4b07e59a5745d7f24dfe66be6ab70b9cb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, or &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; 하십시오 &lt;code&gt;Tensor&lt;/code&gt; 형의 &lt;code&gt;float16&lt;/code&gt; 과 , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; 또는 &lt;code&gt;complex128&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c72dbca90263eefde7fc84a0cd8884c91582fe3b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, or &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;float16&lt;/code&gt; , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; 또는 &lt;code&gt;int64&lt;/code&gt; 유형의 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e24b4ebbe98043e0126f67377d719c0b3aedd820" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;&lt;code&gt;complex64&lt;/code&gt; or &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; 형의 &lt;code&gt;float16&lt;/code&gt; 과 , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; &lt;code&gt;complex64&lt;/code&gt; 또는 &lt;code&gt;complex128&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e858ccee43c57f9fec8f86259ed9ef7e32cc952a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;IndexedSlices&lt;/code&gt; to be scaled.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; :스케일링 할 &lt;code&gt;Tensor&lt;/code&gt; 또는 &lt;code&gt;IndexedSlices&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce351f80de325a1dfca5bc693350f01294b5f18a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; of type &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt; or &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; 하십시오 &lt;code&gt;Tensor&lt;/code&gt; 또는 &lt;code&gt;SparseTensor&lt;/code&gt; 형의 &lt;code&gt;float16&lt;/code&gt; 과 , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; 또는 &lt;code&gt;complex128&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8cf5fad6b68e2374d2390d7fec993ebb4c0a7b4f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; or &lt;code&gt;IndexedSlices&lt;/code&gt; of numeric type. It could be &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; :숫자 유형의 &lt;code&gt;Tensor&lt;/code&gt; 또는 &lt;code&gt;SparseTensor&lt;/code&gt; 또는 &lt;code&gt;IndexedSlices&lt;/code&gt; . 그것은 될 수 &lt;code&gt;uint8&lt;/code&gt; , &lt;code&gt;uint16&lt;/code&gt; , &lt;code&gt;uint32&lt;/code&gt; , &lt;code&gt;uint64&lt;/code&gt; , &lt;code&gt;int8&lt;/code&gt; , &lt;code&gt;int16&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;float16&lt;/code&gt; 과 , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; , &lt;code&gt;complex128&lt;/code&gt; , &lt;code&gt;bfloat16&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7bcc8feb01acfa726ffb35879c532b437df1595b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; or &lt;code&gt;IndexedSlices&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; 또는 &lt;code&gt;SparseTensor&lt;/code&gt; 또는 &lt;code&gt;IndexedSlices&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d504c51f54e151d25c7be96f6efc620cd9baa04" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; 또는 &lt;code&gt;SparseTensor&lt;/code&gt; . &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; 유형 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="d0cd257046a1dd554b8abe219ea04678958c11c2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; representing the variable of the polynomial.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; :다항식의 변수를 나타내는 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="107e0e7df94bb00e0f66533309eaf6b4798284dd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; type bool.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; 타입 부울.</target>
        </trans-unit>
        <trans-unit id="092c5d317f3d470b85bf9ffbfbd82a23a22dce2c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f9b6e1f25d4a9addfba16b9d42fa9c7040478af" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. 1-D.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . 1D.</target>
        </trans-unit>
        <trans-unit id="9f9cd2cb80875238a77d75511724f145004937bb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. 1-D. Values to keep.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . 1D. 유지할 가치.</target>
        </trans-unit>
        <trans-unit id="de9f4d76040176e3a8f24e8d780f77e8faf5af30" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . 다음 유형 중 하나 여야합니다 &lt;code&gt;bfloat16&lt;/code&gt; , &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; , &lt;code&gt;complex128&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="0e1c2caff509f8c51a9bee2e2e6f0955e14135cd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . 다음 유형 중 하나 여야합니다 &lt;code&gt;bfloat16&lt;/code&gt; , &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; , &lt;code&gt;complex128&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="49dc2927789bb9687c9f972c233c3094d6d8701d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;bfloat16&lt;/code&gt; , &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; 유형 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="1b58b82ff3db493a4acfcd8e0f25f79a3faad11f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . 다음 유형 중 하나 여야합니다 &lt;code&gt;bfloat16&lt;/code&gt; , &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;uint8&lt;/code&gt; , &lt;code&gt;int8&lt;/code&gt; , &lt;code&gt;int16&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; , &lt;code&gt;complex128&lt;/code&gt; , &lt;code&gt;string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db3c44df3ecbad78084bb6bc06908afc675742b5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . 다음 유형 중 하나 여야합니다 &lt;code&gt;bfloat16&lt;/code&gt; , &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;uint8&lt;/code&gt; , &lt;code&gt;int8&lt;/code&gt; , &lt;code&gt;uint16&lt;/code&gt; , &lt;code&gt;int16&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; , &lt;code&gt;complex128&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="68a3689b2ddf3f098fb9043042703029d1d7c0b8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;bfloat16&lt;/code&gt; , &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; 유형 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="847c6006cf594c4abce61dbc241bda590ad39f0b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;float16&lt;/code&gt; , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; 유형 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="340766e85927ad15d9ff5b0c121d3612e7a909ed" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;uint8&lt;/code&gt; , &lt;code&gt;int16&lt;/code&gt; , &lt;code&gt;int8&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;bfloat16&lt;/code&gt; , &lt;code&gt;uint16&lt;/code&gt; , &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;uint32&lt;/code&gt; , &lt;code&gt;uint64&lt;/code&gt; 유형 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="f2816bf8dbf9995c4b282d4d20e4e1dfe46498ca" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . 다음 유형 중 하나 여야합니다 &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;uint8&lt;/code&gt; , &lt;code&gt;uint16&lt;/code&gt; , &lt;code&gt;int16&lt;/code&gt; , &lt;code&gt;int8&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; , &lt;code&gt;complex128&lt;/code&gt; , &lt;code&gt;qint8&lt;/code&gt; , &lt;code&gt;quint8&lt;/code&gt; , &lt;code&gt;qint32&lt;/code&gt; , &lt;code&gt;half&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="baa5063cc99e3d6c6546f218afe9d9b3c056cc23" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; 유형 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="49269d1c6657c40eb96912f944b8c5c368628851" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . 다음 유형 중 하나 여야합니다 &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; , &lt;code&gt;complex128&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="08e7b5216c6299ecbb10bbdfaa0a46ff65ebba2d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;bfloat16&lt;/code&gt; , &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; 유형 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="3e1af75a0dcb1a3b365b0c2fb31bccb37fa6bb85" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1-D.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; 유형 중 하나 여야합니다. 1D.</target>
        </trans-unit>
        <trans-unit id="9f463b0bc8a133e1bce82555c6e053d5a7f86f09" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;int8&lt;/code&gt; , &lt;code&gt;int16&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;uint8&lt;/code&gt; , &lt;code&gt;uint16&lt;/code&gt; , &lt;code&gt;uint32&lt;/code&gt; , &lt;code&gt;uint64&lt;/code&gt; 유형 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="33b085cff25f5b93d810ef882ab055df946b81a5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . 와 같은 유형이어야 &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b200163e90f7beba3402b72dc227f53184206f60" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;y&lt;/code&gt; 와 동일한 유형이어야합니다.</target>
        </trans-unit>
        <trans-unit id="c61266660d0d16d333025c5f7477e7d5321ce570" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A Tensor which is of the same type as &lt;code&gt;y&lt;/code&gt;, and may be broadcastable with &lt;code&gt;condition&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;y&lt;/code&gt; 와 유형이 같고 &lt;code&gt;condition&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 로 브로드 캐스트 할 수있는 Tensor.</target>
        </trans-unit>
        <trans-unit id="475df4609f4112dbf5ee01f6db554aa9f59d2917" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A Tensor which may have the same shape as &lt;code&gt;condition&lt;/code&gt;. If &lt;code&gt;condition&lt;/code&gt; is rank 1, &lt;code&gt;x&lt;/code&gt; may have higher rank, but its first dimension must match the size of &lt;code&gt;condition&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;condition&lt;/code&gt; 과 모양이 동일한 텐서. 경우 &lt;code&gt;condition&lt;/code&gt; 순위 1, &lt;code&gt;x&lt;/code&gt; 더 높은 순위를 가질 수 있지만 첫 번째 차원의 크기와 일치해야합니다 &lt;code&gt;condition&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dbec4295b4f4071963c8a05584b01332f924c408" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A Tensor with type &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, or &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 타입과 텐서 &lt;code&gt;float16&lt;/code&gt; 과 , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; 또는 &lt;code&gt;complex128&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c8ef33f7ce60b1a70516975b1caba25bae1f195" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A Tensor with type &lt;code&gt;float32&lt;/code&gt; or &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;float32&lt;/code&gt; 또는 &lt;code&gt;float64&lt;/code&gt; 유형의 텐서.</target>
        </trans-unit>
        <trans-unit id="2d64ad9916832b64a0b595094e490232ed22b00d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A Variable.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 변수.</target>
        </trans-unit>
        <trans-unit id="0632a2181baa8161600faaf3216a1ae7c3d65de1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A candidate tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 후보 텐서.</target>
        </trans-unit>
        <trans-unit id="95667493dd6b8a0fee1e9e68470a4118f2ff7490" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A floating point tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 부동 소수점 텐서.</target>
        </trans-unit>
        <trans-unit id="12a40f3765ec06a954a5ebb1847b2163cbe1aedf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A python object to check.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 확인할 파이썬 객체.</target>
        </trans-unit>
        <trans-unit id="ec9c20712da8325f4d87cf567e3f447929b4fb4f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A rank &lt;code&gt;n + 1&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt;, &lt;code&gt;n &amp;gt;= 0&lt;/code&gt; with type &lt;code&gt;float&lt;/code&gt;, or &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; 하십시오 순위 &lt;code&gt;n + 1&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; , &lt;code&gt;n &amp;gt;= 0&lt;/code&gt; 형과 &lt;code&gt;float&lt;/code&gt; 또는 &lt;code&gt;double&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="458ce99741a9331c83ed3eef00f45b49e06d21c0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A tensor or variable</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 텐서 또는 변수</target>
        </trans-unit>
        <trans-unit id="1e58cf9a958ae17ead59418484fae89d36b33893" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A tensor or variable to compute the activation function for.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 활성화 함수를 계산할 텐서 또는 변수.</target>
        </trans-unit>
        <trans-unit id="39e3fda39af7fd8c3d8396dd4a35603c505cf0ab" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A tensor or variable.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 텐서 또는 변수.</target>
        </trans-unit>
        <trans-unit id="e50bde8c9fd3e418d28da37a9c05fc6f1f151913" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 텐서.</target>
        </trans-unit>
        <trans-unit id="55e5da656770140c3a046ad5ccd131c4c9153004" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: A variable.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 변수.</target>
        </trans-unit>
        <trans-unit id="0c52ca23258bbe98d00f1ff044ee1edd78c229c8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: Alias for t.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : t의 별명.</target>
        </trans-unit>
        <trans-unit id="752ae579a389bbd92a511520b16672f080980242" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: Float or complex &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 플로트 또는 복잡한 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="996ac47c1594794479c9d10a7ba9f323e3c6c804" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: Input &lt;code&gt;Tensor&lt;/code&gt; of 4 dimensions.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; :4 차원의입력 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a6f49bc43ca9a554f40f47514259b694e6d650d0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: Input &lt;code&gt;Tensor&lt;/code&gt; of arbitrary dimensionality.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; :임의의 차원의입력 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="310c4104fc6900072dbe91a7ab8d54cae0749333" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: Input &lt;code&gt;tensor&lt;/code&gt; or &lt;code&gt;variable&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 입력 &lt;code&gt;tensor&lt;/code&gt; 또는 &lt;code&gt;variable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c606e392cea82cf04b0037b1bb24cb7fb721558c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: Input Numpy array.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 입력 Numpy 배열.</target>
        </trans-unit>
        <trans-unit id="1627b52ae18d00003c6f95f47aa091fdb0b6abe4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: Input data. It could be:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 입력 데이터. 그것은 수:</target>
        </trans-unit>
        <trans-unit id="e174c403d68be2a2a4a8cd29571ce179e611a57a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: Input samples. It could be:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 입력 샘플. 그것은 수:</target>
        </trans-unit>
        <trans-unit id="3ba9e4fb62cccdae862a542860eb3574779a75d9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: Input tensor or variable.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 입력 텐서 또는 변수.</target>
        </trans-unit>
        <trans-unit id="4108f1ae19aa33f5d45d72755e6029a2ae367ae8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: Input tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 입력 텐서.</target>
        </trans-unit>
        <trans-unit id="1175e71705f33ccbe68c2b67565801f2654886a9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: Keras tensor (or variable).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : Keras 텐서 (또는 변수).</target>
        </trans-unit>
        <trans-unit id="03b4f7b1f999c15a816a46fdc301102625cca3c6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: Keras tensor or variable with &lt;code&gt;ndim &amp;gt;= 2&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;ndim &amp;gt;= 2&lt;/code&gt; 텐서 또는 ndim&amp;gt; = 2 인 변수.</target>
        </trans-unit>
        <trans-unit id="13c92d1834cfaca1a04c910d34d85d448ee1bfb1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: Keras variable or Keras tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : Keras 변수 또는 Keras 텐서.</target>
        </trans-unit>
        <trans-unit id="985774c49f24578a053cc10e7339c337bdc58fda" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: Keras variable or tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : Keras 변수 또는 텐서.</target>
        </trans-unit>
        <trans-unit id="5d95e331f648095a6c677e5b0bd25c925cb27afa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: List of tensors.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 텐서 목록.</target>
        </trans-unit>
        <trans-unit id="df3813bdc8df23797e1aaffbc352d843a5f9a84a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: Numeric &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 숫자 형 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="346dd46378e651d1a9e442116b3098f7eecc9f44" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: Numpy array of input data or tuple. If tuple, the second elements is either another numpy array or a list of numpy arrays, each of which gets passed through as an output without any modifications.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 입력 데이터 또는 튜플의 Numpy 배열. 튜플 인 경우 두 번째 요소는 다른 numpy 배열 또는 numpy 배열 목록이며 각각 수정없이 출력으로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="76fa8362acd1a0de2f8aee342312a394b7816564" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: Numpy array or TensorFlow tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : Numpy array 또는 TensorFlow 텐서.</target>
        </trans-unit>
        <trans-unit id="537e2b97d786dd6e9a68d1eb2e4d7422da364fec" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: Numpy array to normalize.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 정규화 할 Numpy 배열.</target>
        </trans-unit>
        <trans-unit id="fc7ea17dc26e3bb26a7198cf93b6d2854600e64b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: Numpy array.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : Numpy 배열.</target>
        </trans-unit>
        <trans-unit id="2363fc2a868e8b34386581ea04f9332876bb02c9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: String</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 문자열</target>
        </trans-unit>
        <trans-unit id="ed1bb26145d440b26d26f1cf3bc0626504113a00" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: Tensor or variable to resize.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 크기를 조정할 텐서 또는 변수.</target>
        </trans-unit>
        <trans-unit id="2828e144f6adbe2baf602569917d87641067244c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: Tensor or variable.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 텐서 또는 변수.</target>
        </trans-unit>
        <trans-unit id="87ddb6001ecdb0502315b035e9320f047926f8ff" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: Tensor to check.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 점검 할 텐서.</target>
        </trans-unit>
        <trans-unit id="08463d6904e1b29e0c2c80c328196ac3e8676fbb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: Tensor to print.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 인쇄 할 텐서.</target>
        </trans-unit>
        <trans-unit id="9037ca10e3361a88c24a17932c19cebded114624" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: Tensor to reverse.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 텐서 반전</target>
        </trans-unit>
        <trans-unit id="d0d43be655026789900063243e210594a89be909" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: Tensor to set to a new value.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 새로운 값으로 설정하는 텐서.</target>
        </trans-unit>
        <trans-unit id="22c49e87d7b9a567d97000e6da2966c2a687510e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: The &lt;code&gt;X&lt;/code&gt; in &lt;code&gt;A @ X = RHS&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; 다음 &lt;code&gt;X&lt;/code&gt; 에서 &lt;code&gt;A @ X = RHS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="779e342f5f7fbc40dd49669e99f99d81a25970ae" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: The local tensor to the sum.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 합계에 대한 로컬 텐서.</target>
        </trans-unit>
        <trans-unit id="a8da4199f9034a079326cfa3684ee3f28e71bf08" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: The original input to &lt;a href=&quot;lu&quot;&gt;&lt;code&gt;tf.linalg.lu&lt;/code&gt;&lt;/a&gt;, i.e., &lt;code&gt;x&lt;/code&gt; as in, &lt;code&gt;lu_reconstruct(*tf.linalg.lu(x))&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 원래 입력&lt;a href=&quot;lu&quot;&gt; &lt;code&gt;tf.linalg.lu&lt;/code&gt; &lt;/a&gt; 즉, &lt;code&gt;x&lt;/code&gt; , 마찬가지로 &lt;code&gt;lu_reconstruct(*tf.linalg.lu(x))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="712aeefb612642e6d6a1a375d766f5b4c1289fb8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: Variable or tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 변수 또는 텐서.</target>
        </trans-unit>
        <trans-unit id="1ff340d73a536ed3de2b6ac8fa8483d50f0ce1c7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: What to return in test phase (tensor or callable that returns a tensor).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 테스트 단계에서 반환 할 항목 (텐서 또는 텐서를 반환하는 호출 가능)</target>
        </trans-unit>
        <trans-unit id="77e2ca0239cc3d4ed7ec5ea067874febef271084" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: What to return in train phase (tensor or callable that returns a tensor).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 열차 단계에서 돌아 오는 것 (텐서 또는 텐서를 반환하는 호출 가능).</target>
        </trans-unit>
        <trans-unit id="731c0d45c15247678affae0bd0ab1fb68cfe6efe" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: a 2D tensor. Dimensions typically: batch, in_units</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 2D 텐서. 측정 기준 : 일반적으로 배치, in_units</target>
        </trans-unit>
        <trans-unit id="82aecad8fa207f3106f17f177ed4cca14ab76324" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: a list arguments for the function</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 함수의 인수 목록</target>
        </trans-unit>
        <trans-unit id="de1a72cea76b9c2d6bca2862b7ab17961d380f70" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: a tensor or list of tensors</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 텐서 또는 텐서 목록</target>
        </trans-unit>
        <trans-unit id="fd9b2f29a846930172930e8fd806d135b805a684" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: array-like, shape &lt;code&gt;(n_samples, n_features)&lt;/code&gt; Test samples where &lt;code&gt;n_samples&lt;/code&gt; is the number of samples and &lt;code&gt;n_features&lt;/code&gt; is the number of features.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 어레이 형 모양 &lt;code&gt;(n_samples, n_features)&lt;/code&gt; 시험 시료 &lt;code&gt;n_samples&lt;/code&gt; 샘플의 개수 &lt;code&gt;n_features&lt;/code&gt; 이 기능의 수이다.</target>
        </trans-unit>
        <trans-unit id="60f98229d06bbc6979d1bf6ff0b577a2836c9b9d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: array-like, shape &lt;code&gt;(n_samples, n_features)&lt;/code&gt; Training samples where &lt;code&gt;n_samples&lt;/code&gt; is the number of samples and &lt;code&gt;n_features&lt;/code&gt; is the number of features.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 배열과 같은 모양 &lt;code&gt;(n_samples, n_features)&lt;/code&gt; 교육 샘플 여기서 &lt;code&gt;n_samples&lt;/code&gt; 는 샘플 수이고 &lt;code&gt;n_features&lt;/code&gt; 는 피처 수입니다.</target>
        </trans-unit>
        <trans-unit id="ff6587bb7c0cfa9bf94d08d9c14bcd1679f0beec" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: input data, as a Numpy array or list of Numpy arrays (if the model has multiple inputs).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : Numpy 배열 또는 Numpy 배열 목록으로 입력 데이터 (모델에 여러 입력이있는 경우).</target>
        </trans-unit>
        <trans-unit id="f4cb330d6ed6c93b8f11ebfc2df13a87be43c0d8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: input tensor</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 입력 텐서</target>
        </trans-unit>
        <trans-unit id="f91c434b5c3c964c91060471b6221c860eaf4545" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: input variable.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 입력 변수.</target>
        </trans-unit>
        <trans-unit id="7d91275a7de222f61cca377f4041b86a436fb9da" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: numpy array object or dict of numpy array objects. If an array, the array will be treated as a single feature.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : numpy 배열 객체 또는 numpy 배열 객체의 dict 배열 인 경우 배열은 단일 기능으로 취급됩니다.</target>
        </trans-unit>
        <trans-unit id="2005736bba744b2b20b7635b33a2d9576a5e2b80" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: pandas &lt;code&gt;DataFrame&lt;/code&gt; object.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : pandas &lt;code&gt;DataFrame&lt;/code&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="e10921f90e7a15ed81f56e8a927f7796bd506e10" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: tensor</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 텐서</target>
        </trans-unit>
        <trans-unit id="f67e21f7fc0bdc8c688c20ef3bb9200ea508b577" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x&lt;/code&gt;&lt;/b&gt;: tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x&lt;/code&gt; &lt;/b&gt; : 텐서.</target>
        </trans-unit>
        <trans-unit id="63d9d29c0706ebe5568914f15a9f6b238aecf25b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x_density&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;300&lt;/code&gt;. Horizontal pixels per density unit.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x_density&lt;/code&gt; &lt;/b&gt; : 선택적 &lt;code&gt;int&lt;/code&gt; . 기본값은 &lt;code&gt;300&lt;/code&gt; 입니다. 밀도 단위당 가로 픽셀.</target>
        </trans-unit>
        <trans-unit id="1baa0b5746375a787bec67cdbb4b0e69c60c0097" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x_init_value&lt;/code&gt;&lt;/b&gt;: (optional) a numpy array of the same shape as &quot;x&quot; representing the initial value of x. If x is a list, this should be a list of numpy arrays. If this is none, the function will pick a random tensor as the initial value.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x_init_value&lt;/code&gt; &lt;/b&gt; : (선택 사항) x의 초기 값을 나타내는 &quot;x&quot;와 동일한 모양의 numpy 배열입니다. x가 목록이면 numpy 배열 목록이어야합니다. 이것이 없으면 함수는 임의의 텐서를 초기 값으로 선택합니다.</target>
        </trans-unit>
        <trans-unit id="1515e53f2dcb478a0bb539877e8d88a83ed902f8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;x_shape&lt;/code&gt;&lt;/b&gt;: the dimensions of x as a tuple or an array of ints. If x is a list, then this is the list of shapes.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;x_shape&lt;/code&gt; &lt;/b&gt; : 터플 또는 정수 배열로 x의 크기. x가 목록 인 경우 모양 목록입니다.</target>
        </trans-unit>
        <trans-unit id="a65184244e7522fa58c41eb7c30796b7bda473cb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;xmp_metadata&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. If not empty, embed this XMP metadata in the image header.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;xmp_metadata&lt;/code&gt; &lt;/b&gt; : 선택적 &lt;code&gt;string&lt;/code&gt; . 기본값은 &lt;code&gt;&quot;&quot;&lt;/code&gt; 입니다. 비어 있지 않으면이 XMP 메타 데이터를 이미지 헤더에 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="3c7684e650ac430c30df7c26569012b0e40b4b24" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;xs&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; or list of tensors to be used for differentiation.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;xs&lt;/code&gt; &lt;/b&gt; :차별화에 사용될 &lt;code&gt;Tensor&lt;/code&gt; 또는 텐서 목록.</target>
        </trans-unit>
        <trans-unit id="da3923908ab676b6b003844b06f57d924873cf90" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Tensor&lt;/code&gt; denominator of numeric type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; :숫자 형의 &lt;code&gt;Tensor&lt;/code&gt; 분모.</target>
        </trans-unit>
        <trans-unit id="9f8f07b18357311517b3246367aafc83aeac723a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Tensor&lt;/code&gt; denominator of real numeric type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; :실수 형의 &lt;code&gt;Tensor&lt;/code&gt; 분모.</target>
        </trans-unit>
        <trans-unit id="a3ecd5b5056d8ef65d40314d00391f852ed8ffb9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: A 4D Tensor for the normalized, scaled, offsetted x.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; : 정규화되고 스케일링 된 오프셋 x에 대한 4D 텐서.</target>
        </trans-unit>
        <trans-unit id="22f79f4df1a16c20aee2b5c770640bdfe5ec65dd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../sparse/sparsetensor&quot;&gt;&lt;code&gt;tf.SparseTensor&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../indexedslices&quot;&gt;&lt;code&gt;tf.IndexedSlices&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; 하십시오&lt;a href=&quot;../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;../sparse/sparsetensor&quot;&gt; &lt;code&gt;tf.SparseTensor&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;../indexedslices&quot;&gt; &lt;code&gt;tf.IndexedSlices&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="61f29e500ab702b9e15c6fea14ecb2488fba78fa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;bool&lt;/code&gt; 타입의 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28bb50bda81daf01a4df9fcf20a69f9cc4aa1db6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, or &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; 하십시오 &lt;code&gt;Tensor&lt;/code&gt; 형의 &lt;code&gt;float16&lt;/code&gt; 과 , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; 또는 &lt;code&gt;complex128&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a49fcdea896169c17d875759b6fa9e6a9ba1ec97" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type bool.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; :bool 타입의 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0e1cf3985786e73eb6f3d3f04fd4f8ce5a6586c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; whose dtype is compatible with &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; :dtype이 &lt;code&gt;x&lt;/code&gt; 와 호환되는 &lt;code&gt;Tensor&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3d309f83e19b37bd141250cacb3670690be37363" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;x&lt;/code&gt; 와 유형이 같습니다.</target>
        </trans-unit>
        <trans-unit id="6de93854630a0e533e56e64a8dba960c349441ab" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;bfloat16&lt;/code&gt; , &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; 유형 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="b2941b9882f0eeab4ef245d194124a77d46fe996" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;x&lt;/code&gt; 와 동일한 유형이어야합니다.</target>
        </trans-unit>
        <trans-unit id="c1a7dc6dc3c91aa10e32b1f8913dc41f3354dffe" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. 1-D. Values to remove.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;x&lt;/code&gt; 와 동일한 유형이어야합니다. 1D. 제거 할 값입니다.</target>
        </trans-unit>
        <trans-unit id="6ad9026f88f35e0abee8c72a9e72f614a7ee358c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;tensor&lt;/code&gt; with the same shape and type as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;x&lt;/code&gt; 와 모양과 유형이 같은 &lt;code&gt;tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85eda321d9abda5d5dee4689847085664581b4b8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: A Tensor which is of the same type as &lt;code&gt;x&lt;/code&gt;, and may be broadcastable with &lt;code&gt;condition&lt;/code&gt; and &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;x&lt;/code&gt; 와 유형이 같고 &lt;code&gt;condition&lt;/code&gt; 및 &lt;code&gt;x&lt;/code&gt; 로 브로드 캐스트 할 수있는 Tensor.</target>
        </trans-unit>
        <trans-unit id="14ebe8f08692f32db55ce4b5a72662112d5e7b64" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: Float or complex &lt;code&gt;Tensor&lt;/code&gt;, same &lt;code&gt;dtype&lt;/code&gt; as, and broadcastable to, &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; : 플로트 복잡한 &lt;code&gt;Tensor&lt;/code&gt; 동일 &lt;code&gt;dtype&lt;/code&gt; 로서, 그리고 행 캐스트 가능한 &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a2b79b187205427a0771905f45bcd7de3162471" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: Float or complex &lt;code&gt;Tensor&lt;/code&gt;, same dtype as and broadcastable to &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; : 플로트 또는 복잡한 &lt;code&gt;Tensor&lt;/code&gt; , d와 동일하고 &lt;code&gt;x&lt;/code&gt; 로 브로드 캐스트 가능.</target>
        </trans-unit>
        <trans-unit id="7cb401b2d539f0bcd11554795adc8815403bff30" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: Keras tensor or variable with &lt;code&gt;ndim &amp;gt;= 2&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; :와 Keras 텐서 또는 가변 &lt;code&gt;ndim &amp;gt;= 2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71afbaf0153fdcaf3aa9e0f53730c259a489160d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: Numeric &lt;code&gt;Tensor&lt;/code&gt;, same dtype as and broadcastable to &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; : 숫자 &lt;code&gt;Tensor&lt;/code&gt; , &lt;code&gt;x&lt;/code&gt; 와 같은 dtype 및 x로 브로드 캐스트 가능.</target>
        </trans-unit>
        <trans-unit id="f40d8c4f46c5afe36ce395d715b42fb24af299fa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: Numpy array of targets data.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; : 대상 데이터의 Numpy 배열입니다.</target>
        </trans-unit>
        <trans-unit id="66a48268aca64969ba08b41dbb0c5263b4bf95a7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: Target data. Like the input data &lt;code&gt;x&lt;/code&gt;, it could be either Numpy array(s) or TensorFlow tensor(s). It should be consistent with &lt;code&gt;x&lt;/code&gt; (you cannot have Numpy inputs and tensor targets, or inversely). If &lt;code&gt;x&lt;/code&gt; is a dataset &lt;code&gt;y&lt;/code&gt; should not be specified (since targets will be obtained from the iterator).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; : 대상 데이터. 입력 데이터 &lt;code&gt;x&lt;/code&gt; 와 마찬가지로Numpy 배열 또는 TensorFlow 텐서 일 수 있습니다. &lt;code&gt;x&lt;/code&gt; 와 일치해야합니다(Numpy 입력 및 텐서 대상을 가질 수 없거나 반대로). 경우 &lt;code&gt;x&lt;/code&gt; 데이터 세트이고 &lt;code&gt;y&lt;/code&gt; (목표물이 반복기로부터 획득되기 때문에)이 지정되지 않아야한다.</target>
        </trans-unit>
        <trans-unit id="ee0efdb5b90dddba6f7cf57146dee2b27ad1a1dd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: Target data. Like the input data &lt;code&gt;x&lt;/code&gt;, it could be either Numpy array(s) or TensorFlow tensor(s). It should be consistent with &lt;code&gt;x&lt;/code&gt; (you cannot have Numpy inputs and tensor targets, or inversely). If &lt;code&gt;x&lt;/code&gt; is a dataset, &lt;code&gt;y&lt;/code&gt; should not be specified (since targets will be obtained from the iterator).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; : 대상 데이터. 입력 데이터 &lt;code&gt;x&lt;/code&gt; 와 마찬가지로Numpy 배열 또는 TensorFlow 텐서 일 수 있습니다. &lt;code&gt;x&lt;/code&gt; 와 일치해야합니다(Numpy 입력 및 텐서 대상을 가질 수 없거나 반대로). &lt;code&gt;x&lt;/code&gt; 가 데이터 세트 인경우대상을 반복자에서 가져 오므로 &lt;code&gt;y&lt;/code&gt; 를 지정하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="f804f2f4ceac6984d089ba2c65c761ddd97fe6e9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: Target data. Like the input data &lt;code&gt;x&lt;/code&gt;, it could be either Numpy array(s) or TensorFlow tensor(s). It should be consistent with &lt;code&gt;x&lt;/code&gt; (you cannot have Numpy inputs and tensor targets, or inversely). If &lt;code&gt;x&lt;/code&gt; is a dataset, generator or &lt;a href=&quot;../utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; instance, &lt;code&gt;y&lt;/code&gt; should not be specified (since targets will be obtained from the iterator/dataset).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; : 대상 데이터. 입력 데이터 &lt;code&gt;x&lt;/code&gt; 와 마찬가지로Numpy 배열 또는 TensorFlow 텐서 일 수 있습니다. &lt;code&gt;x&lt;/code&gt; 와 일치해야합니다(Numpy 입력 및 텐서 대상을 가질 수 없거나 반대로). 경우 &lt;code&gt;x&lt;/code&gt; 셋, 또는 발전기이다&lt;a href=&quot;../utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; 의&lt;/a&gt; 경우, &lt;code&gt;y&lt;/code&gt; (목표물이 반복자 / 데이터 세트로부터 획득되기 때문에)이 지정되지 않아야한다.</target>
        </trans-unit>
        <trans-unit id="70f153924637911ca44e6279571867031e5e2fdb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: Target data. Like the input data &lt;code&gt;x&lt;/code&gt;, it could be either Numpy array(s) or TensorFlow tensor(s). It should be consistent with &lt;code&gt;x&lt;/code&gt; (you cannot have Numpy inputs and tensor targets, or inversely). If &lt;code&gt;x&lt;/code&gt; is a dataset, generator or &lt;a href=&quot;utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; instance, &lt;code&gt;y&lt;/code&gt; should not be specified (since targets will be obtained from the iterator/dataset).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; : 대상 데이터. 입력 데이터 &lt;code&gt;x&lt;/code&gt; 와 마찬가지로Numpy 배열 또는 TensorFlow 텐서 일 수 있습니다. &lt;code&gt;x&lt;/code&gt; 와 일치해야합니다(Numpy 입력 및 텐서 대상을 가질 수 없거나 반대로). 경우 &lt;code&gt;x&lt;/code&gt; 셋, 또는 발전기이다&lt;a href=&quot;utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; 의&lt;/a&gt; 경우, &lt;code&gt;y&lt;/code&gt; (목표물이 반복자 / 데이터 세트로부터 획득되기 때문에)이 지정되지 않아야한다.</target>
        </trans-unit>
        <trans-unit id="9742360fb0a328ba35034dc1717c29988b4898f0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: Target data. Like the input data &lt;code&gt;x&lt;/code&gt;, it could be either Numpy array(s) or TensorFlow tensor(s). It should be consistent with &lt;code&gt;x&lt;/code&gt; (you cannot have Numpy inputs and tensor targets, or inversely). If &lt;code&gt;x&lt;/code&gt; is a dataset, generator, or &lt;a href=&quot;../utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; instance, &lt;code&gt;y&lt;/code&gt; should not be specified (since targets will be obtained from &lt;code&gt;x&lt;/code&gt;).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; : 대상 데이터. 입력 데이터 &lt;code&gt;x&lt;/code&gt; 와 마찬가지로Numpy 배열 또는 TensorFlow 텐서 일 수 있습니다. &lt;code&gt;x&lt;/code&gt; 와 일치해야합니다(Numpy 입력 및 텐서 대상을 가질 수 없거나 반대로). 경우 &lt;code&gt;x&lt;/code&gt; 셋, 발전기, 또는이다&lt;a href=&quot;../utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; 의&lt;/a&gt; 경우, &lt;code&gt;y&lt;/code&gt; (목표가로부터 획득되기 때문에 특정되지 않아야 &lt;code&gt;x&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4c58deb64ba3b16bb78de0292cd73df73b70c7ca" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: Target data. Like the input data &lt;code&gt;x&lt;/code&gt;, it could be either Numpy array(s) or TensorFlow tensor(s). It should be consistent with &lt;code&gt;x&lt;/code&gt; (you cannot have Numpy inputs and tensor targets, or inversely). If &lt;code&gt;x&lt;/code&gt; is a dataset, generator, or &lt;a href=&quot;utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; instance, &lt;code&gt;y&lt;/code&gt; should not be specified (since targets will be obtained from &lt;code&gt;x&lt;/code&gt;).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; : 대상 데이터. 입력 데이터 &lt;code&gt;x&lt;/code&gt; 와 마찬가지로Numpy 배열 또는 TensorFlow 텐서 일 수 있습니다. &lt;code&gt;x&lt;/code&gt; 와 일치해야합니다(Numpy 입력 및 텐서 대상을 가질 수 없거나 반대로). 경우 &lt;code&gt;x&lt;/code&gt; 셋, 발전기, 또는이다&lt;a href=&quot;utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; 의&lt;/a&gt; 경우, &lt;code&gt;y&lt;/code&gt; (목표가로부터 획득되기 때문에 특정되지 않아야 &lt;code&gt;x&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a59ca9084d55cfaa2347749f67836bd60e779b1f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: Tensor or variable.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; : 텐서 또는 변수.</target>
        </trans-unit>
        <trans-unit id="c04662edb29ce511f32d2c92dfa7484a2408a0ac" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: a tensor</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; : 텐서</target>
        </trans-unit>
        <trans-unit id="d02484659b97c7524db4009d8127dbeacab9c3ed" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: array-like, shape &lt;code&gt;(n_samples,)&lt;/code&gt; True labels for &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; : 배열 모양, 모양 &lt;code&gt;(n_samples,)&lt;/code&gt; &lt;code&gt;x&lt;/code&gt; 에 대한 True 레이블.</target>
        </trans-unit>
        <trans-unit id="af6f762fc2cdc89145448d4805b557af98def189" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: array-like, shape &lt;code&gt;(n_samples,)&lt;/code&gt; or &lt;code&gt;(n_samples, n_outputs)&lt;/code&gt; True labels for &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; : 배열 모양, 모양 &lt;code&gt;(n_samples,)&lt;/code&gt; 또는 &lt;code&gt;(n_samples, n_outputs)&lt;/code&gt; &lt;code&gt;x&lt;/code&gt; 에 대한 True 레이블.</target>
        </trans-unit>
        <trans-unit id="f72f45e483e6dce9fe1e444c235a628ba94d86ef" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: class vector to be converted into a matrix (integers from 0 to num_classes).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; : 행렬로 변환 할 클래스 벡터 (0에서 num_classes의 정수)</target>
        </trans-unit>
        <trans-unit id="14b3705a18d80ccda8873d9e109c8898d79dd30d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: numpy array object or dict of numpy array object. &lt;code&gt;None&lt;/code&gt; if absent.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; : numpy 배열 객체 또는 numpy 배열 객체의 dict 없는 경우 &lt;code&gt;None&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a4600a84e928ce923f47b4055875924c7e7ac621" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y&lt;/code&gt;&lt;/b&gt;: pandas &lt;code&gt;Series&lt;/code&gt; object or &lt;code&gt;DataFrame&lt;/code&gt;. &lt;code&gt;None&lt;/code&gt; if absent.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y&lt;/code&gt; &lt;/b&gt; : 팬더 &lt;code&gt;Series&lt;/code&gt; 개체 또는 &lt;code&gt;DataFrame&lt;/code&gt; 를 . 없는 경우 &lt;code&gt;None&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b21007656fea7537ac357a1e15ad12616ece1c0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y_density&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;300&lt;/code&gt;. Vertical pixels per density unit.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y_density&lt;/code&gt; &lt;/b&gt; : 선택적 &lt;code&gt;int&lt;/code&gt; . 기본값은 &lt;code&gt;300&lt;/code&gt; 입니다. 밀도 단위당 수직 픽셀.</target>
        </trans-unit>
        <trans-unit id="f364cea7b369970fdfa855123005b727a388e116" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y_pred&lt;/code&gt;&lt;/b&gt;: Tensor of predicted targets.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y_pred&lt;/code&gt; &lt;/b&gt; : 예측 된 목표의 텐서.</target>
        </trans-unit>
        <trans-unit id="30f3b3ba9fa88ae3530e3b07a1052ff1572ccf84" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y_pred&lt;/code&gt;&lt;/b&gt;: The predicted values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y_pred&lt;/code&gt; &lt;/b&gt; : 예측 된 값.</target>
        </trans-unit>
        <trans-unit id="71c0ef311cf3cd3d3256cbacf04df595a0e81936" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y_pred&lt;/code&gt;&lt;/b&gt;: The predicted values. Each element must be in the range &lt;code&gt;[0, 1]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y_pred&lt;/code&gt; &lt;/b&gt; : 예측 된 값. 각 요소는 &lt;code&gt;[0, 1]&lt;/code&gt; 범위에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="29ebff84f6a0b9b15b9d92f5e6f9b4711ec29e93" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y_pred&lt;/code&gt;&lt;/b&gt;: The predicted values. shape = &lt;code&gt;[batch_size, d0, .. dN]&lt;/code&gt;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y_pred&lt;/code&gt; &lt;/b&gt; : 예측 된 값. 모양 = &lt;code&gt;[batch_size, d0, .. dN]&lt;/code&gt; _ 크기 , d0, .. dN]</target>
        </trans-unit>
        <trans-unit id="4045d10ffd77d896c57d1d387aaa3d051cf07e39" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y_pred&lt;/code&gt;&lt;/b&gt;: tensor &lt;code&gt;(samples, time_steps, num_categories)&lt;/code&gt; containing the prediction, or output of the softmax.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y_pred&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;(samples, time_steps, num_categories)&lt;/code&gt; 의 예측 또는 출력을 포함하는텐서 (샘플, 타임 스텝, num_categories)</target>
        </trans-unit>
        <trans-unit id="f8dfead17816a7d1de33c1053175292bd763f5c2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y_pred&lt;/code&gt;&lt;/b&gt;: tensor of predicted targets.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y_pred&lt;/code&gt; &lt;/b&gt; : 예측 된 목표의 텐서.</target>
        </trans-unit>
        <trans-unit id="4a6ef0a45fcb23538011ea3d369eecbdc87ef186" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y_shape&lt;/code&gt;&lt;/b&gt;: the dimensions of y as a tuple or an array of ints.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y_shape&lt;/code&gt; &lt;/b&gt; : 튜플 또는 정수 배열로 y의 크기입니다.</target>
        </trans-unit>
        <trans-unit id="46c33ac9824592de8d2de5fc4ee0c9ad4f60bb84" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y_true&lt;/code&gt;&lt;/b&gt;: Ground truth values, with the same shape as 'y_pred'.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y_true&lt;/code&gt; &lt;/b&gt; : 'y_pred'와 같은 모양을 가진지면 진실 값.</target>
        </trans-unit>
        <trans-unit id="67e42f969af1ce9f8501b88331648b0f108a6569" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y_true&lt;/code&gt;&lt;/b&gt;: Ground truth values. shape = &lt;code&gt;[batch_size, d0, .. dN]&lt;/code&gt;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y_true&lt;/code&gt; &lt;/b&gt; : 근거 값. 모양 = &lt;code&gt;[batch_size, d0, .. dN]&lt;/code&gt; _ 크기 , d0, .. dN]</target>
        </trans-unit>
        <trans-unit id="3f69676e7fc3f7fed608e88d225246f63c5cda06" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y_true&lt;/code&gt;&lt;/b&gt;: Tensor of true targets.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y_true&lt;/code&gt; &lt;/b&gt; : 실제 대상의 텐서.</target>
        </trans-unit>
        <trans-unit id="dd74e70406a3d0046d0c9f91258e325ec54ffdc4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y_true&lt;/code&gt;&lt;/b&gt;: The ground truth values, with the same dimensions as &lt;code&gt;y_pred&lt;/code&gt;. Will be cast to &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y_true&lt;/code&gt; &lt;/b&gt; : 크기가 동일한 접지 진리 값으로 &lt;code&gt;y_pred&lt;/code&gt; . &lt;code&gt;bool&lt;/code&gt; 로 캐스팅됩니다.</target>
        </trans-unit>
        <trans-unit id="9482595cb2783a6a49d8cb1ad9e95548117e2d04" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y_true&lt;/code&gt;&lt;/b&gt;: The ground truth values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y_true&lt;/code&gt; &lt;/b&gt; :&lt;b&gt; 실제&lt;/b&gt; 값.</target>
        </trans-unit>
        <trans-unit id="64f3787d495eda0c8f276e68c7fb71e2114731a3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y_true&lt;/code&gt;&lt;/b&gt;: The ground truth values. &lt;code&gt;y_true&lt;/code&gt; values are expected to be -1 or 1. If binary (0 or 1) labels are provided they will be converted to -1 or 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y_true&lt;/code&gt; &lt;/b&gt; :&lt;b&gt; 실제&lt;/b&gt; 값. &lt;code&gt;y_true&lt;/code&gt; 값은 -1 또는 1이어야합니다. 이진 (0 또는 1) 레이블이 제공되면 -1 또는 1로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="2f0117733340ec740882f3861b26fd43496224ef" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y_true&lt;/code&gt;&lt;/b&gt;: The ground truth values. &lt;code&gt;y_true&lt;/code&gt; values are expected to be -1 or 1. If binary (0 or 1) labels are provided we will convert them to -1 or 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y_true&lt;/code&gt; &lt;/b&gt; :&lt;b&gt; 실제&lt;/b&gt; 값. &lt;code&gt;y_true&lt;/code&gt; 값은 -1 또는 1이어야합니다. 이진 (0 또는 1) 레이블이 제공되면 -1 또는 1로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="de62cc86ae9e9eac3c04b5b327f102ea10b796bc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y_true&lt;/code&gt;&lt;/b&gt;: tensor &lt;code&gt;(samples, max_string_length)&lt;/code&gt; containing the truth labels.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y_true&lt;/code&gt; &lt;/b&gt; :진리 레이블이 포함 된텐서 &lt;code&gt;(samples, max_string_length)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="457688210f6ccdd51ac703675b7d26042bc96acb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;y_true&lt;/code&gt;&lt;/b&gt;: tensor of true targets.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;y_true&lt;/code&gt; &lt;/b&gt; : 실제 대상의 텐서.</target>
        </trans-unit>
        <trans-unit id="035e82a71f1811a9a429f95bf0a06ec6f5d6c979" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;yaml_string&lt;/code&gt;&lt;/b&gt;: YAML string encoding a model configuration.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;yaml_string&lt;/code&gt; &lt;/b&gt; : 모델 구성을 인코딩하는 YAML 문자열.</target>
        </trans-unit>
        <trans-unit id="b9e78ebf8cd76b366f40de735a0926e56a0f1055" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;year&lt;/code&gt;&lt;/b&gt;: A year (e.g., 2018). Must be an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;year&lt;/code&gt; &lt;/b&gt; : 연도 (예 : 2018) &lt;code&gt;int&lt;/code&gt; 이어야합니다.</target>
        </trans-unit>
        <trans-unit id="3953a1ef902b48d5bb46e69ef2690504bc5c7396" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;yield_single_examples&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;False&lt;/code&gt;, yields the whole batch as returned by the &lt;code&gt;model_fn&lt;/code&gt; instead of decomposing the batch into individual elements. This is useful if &lt;code&gt;model_fn&lt;/code&gt; returns some tensors whose first dimension is not equal to the batch size.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;yield_single_examples&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;False&lt;/code&gt; 인경우배치를 개별 요소로 분해하는 대신 &lt;code&gt;model_fn&lt;/code&gt; 에서 반환 한 전체 배치를 생성합니다. 이는 &lt;code&gt;model_fn&lt;/code&gt; 이 첫 번째 차원이 배치 크기와 같지 않은 일부 텐서를 반환하는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="88061f15142010487abd23d5c04470ee59459ec1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ys&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; or list of tensors to be differentiated.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;ys&lt;/code&gt; &lt;/b&gt; :차별화 할 &lt;code&gt;Tensor&lt;/code&gt; 또는 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="edd111ff8ddd9b16df14a7975a401f23e676bb3f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;zca_epsilon&lt;/code&gt;&lt;/b&gt;: epsilon for ZCA whitening. Default is 1e-6.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;zca_epsilon&lt;/code&gt; &lt;/b&gt; : ZCA 화이트닝을위한 엡실론. 기본값은 1e-6입니다.</target>
        </trans-unit>
        <trans-unit id="37c8cce97aaddf5bd213edfd7e4823f466af3be5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;zca_whitening&lt;/code&gt;&lt;/b&gt;: Boolean. Apply ZCA whitening.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;zca_whitening&lt;/code&gt; &lt;/b&gt; : 부울. ZCA 미백을 적용하십시오.</target>
        </trans-unit>
        <trans-unit id="a1f39c859832d292486c40dbc0fd462c8b18d69c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;zero_debias&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;True&lt;/code&gt;, zero debias moving-averages that are initialized with tensors.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;zero_debias&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;True&lt;/code&gt; 이면 텐서로 초기화되는 평균 이동량이 0입니다.</target>
        </trans-unit>
        <trans-unit id="f715e9d7a7e08a80e6cff3ffd04f1de9fadd7d97" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;zero_output_for_mask&lt;/code&gt;&lt;/b&gt;: Boolean. If True, the output for masked timestep will be zeros, whereas in the False case, output from previous timestep is returned.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;zero_output_for_mask&lt;/code&gt; &lt;/b&gt; : 부울. True 인 경우 마스크 된 타임 스텝의 출력은 0이되고 False 인 경우 이전 타임 스텝의 출력이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="de5d2bce697bcd80022e10a4583739f2c2904176" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;zone&lt;/code&gt;&lt;/b&gt;: Zone of the GCE instance group.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;zone&lt;/code&gt; &lt;/b&gt; : GCE 인스턴스 그룹의 영역입니다.</target>
        </trans-unit>
        <trans-unit id="17cdc53cebdb0fa1a43a1f177cfeac923020fd76" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;zone&lt;/code&gt;&lt;/b&gt;: Zone where the TPUs are located. If omitted or empty, we will assume that the zone of the TPU is the same as the zone of the GCE VM, which we will try to discover from the GCE metadata service.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;zone&lt;/code&gt; &lt;/b&gt; : TPU가있는&lt;b&gt; 영역&lt;/b&gt; 입니다. 생략하거나 비워두면 TPU 영역이 GCE VM 영역과 동일하다고 가정하며 GCE 메타 데이터 서비스에서 검색하려고합니다.</target>
        </trans-unit>
        <trans-unit id="adbcacbcc9d6b8ebcc9aba498046b8599be5c876" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;zoom_range&lt;/code&gt;&lt;/b&gt;: Float or [lower, upper]. Range for random zoom. If a float, &lt;code&gt;[lower, upper] = [1-zoom_range, 1+zoom_range]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;zoom_range&lt;/code&gt; &lt;/b&gt; : 플로트 또는 [하단, 위]. 랜덤 줌 범위. float이면 &lt;code&gt;[lower, upper] = [1-zoom_range, 1+zoom_range]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8dc527706132c7223efe1cd8050ea8d62a1a7b06" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Compat aliases for migration&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;마이그레이션을위한 호환 별칭&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="26243a4993bd9e763f0d834756cad385504b8240" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Main aliases&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;주요 별칭&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="573acfe054c069aa0ed20b58b6a71ed9bddc18e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;GZIP&quot;&lt;/code&gt;, &lt;code&gt;&quot;ZLIB&quot;&lt;/code&gt;, or &lt;code&gt;&quot;&quot;&lt;/code&gt; (no compression).</source>
          <target state="translated">&lt;code&gt;&quot;GZIP&quot;&lt;/code&gt; , &lt;code&gt;&quot;ZLIB&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;&quot;&lt;/code&gt; (압축 없음).</target>
        </trans-unit>
        <trans-unit id="f99bc4b9888532ad67a5c30b1dbed8e37c02520e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;binary&quot;&lt;/code&gt;: 1D numpy array of binary labels,</source>
          <target state="translated">&lt;code&gt;&quot;binary&quot;&lt;/code&gt; : 이진 레이블의 1D numpy 배열,</target>
        </trans-unit>
        <trans-unit id="aee9966adbd47541d050d82b7fd97a3ef94c4d3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;categorical&quot;&lt;/code&gt;: 2D numpy array of one-hot encoded labels. Supports multi-label output.</source>
          <target state="translated">&lt;code&gt;&quot;categorical&quot;&lt;/code&gt; : 원-핫 인코딩 된 레이블의 2D numpy 배열입니다. 다중 레이블 출력을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="bb523438dddb4d84645a911d1a8220539fc23c29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;channels_last&quot;&lt;/code&gt; or &lt;code&gt;&quot;channels_first&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;channels_last&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;channels_first&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ca19a97a84ad452b22ee5c59d9baeb7960b10e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;input&quot;&lt;/code&gt;: images identical to input images (mainly used to work with autoencoders),</source>
          <target state="translated">&lt;code&gt;&quot;input&quot;&lt;/code&gt; : 입력 이미지와 동일한 이미지 (주로 오토 인코더 작업에 사용됨),</target>
        </trans-unit>
        <trans-unit id="7ea69bcd785bdda8de96c10ebc17c153a91cab16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;multi_output&quot;&lt;/code&gt;: list with the values of the different columns,</source>
          <target state="translated">&lt;code&gt;&quot;multi_output&quot;&lt;/code&gt; : 다른 열의 값이있는 목록,</target>
        </trans-unit>
        <trans-unit id="4ff02ca989ea5973426372a40d4bdb11f543db66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;raw&quot;&lt;/code&gt;: numpy array of values in &lt;code&gt;y_col&lt;/code&gt; column(s),</source>
          <target state="translated">&lt;code&gt;&quot;raw&quot;&lt;/code&gt; : &lt;code&gt;y_col&lt;/code&gt; 열에 있는 값의 numpy 배열 ,</target>
        </trans-unit>
        <trans-unit id="37f1c95fde7c517aac7e92ad72290a545a400291" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;sparse&quot;&lt;/code&gt;: 1D numpy array of integer labels, - &lt;code&gt;None&lt;/code&gt;, no targets are returned (the generator will only yield batches of image data, which is useful to use in &lt;code&gt;model.predict_generator()&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&quot;sparse&quot;&lt;/code&gt; : 정수 라벨 NumPy와 1 차원 어레이, - &lt;code&gt;None&lt;/code&gt; , 어떠한 타겟이 반환된다 (발전기에서만 사용이 유용 화상 데이터의 배치를 수득한다 &lt;code&gt;model.predict_generator()&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9db6016aba80d2c5c7862e3f2ecef82667738e35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;other term&amp;gt; -&amp;gt; bucket_id&lt;/code&gt;, where bucket_id will be between &lt;code&gt;3&lt;/code&gt; and &lt;code&gt;3 + num_oov_buckets - 1&lt;/code&gt;, calculated by: &lt;code&gt;hash(&amp;lt;term&amp;gt;) % num_oov_buckets + vocab_size&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;other term&amp;gt; -&amp;gt; bucket_id&lt;/code&gt; , 여기서 bucket_id는 &lt;code&gt;3&lt;/code&gt; 과 &lt;code&gt;3 + num_oov_buckets - 1&lt;/code&gt; 사이의 + num_oov_buckets-1 사이입니다 . &lt;code&gt;hash(&amp;lt;term&amp;gt;) % num_oov_buckets + vocab_size&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7b45335b088864c99e2a8042b2c8681cd9a22611" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;''&lt;/code&gt;: Use a default format based on the number of channels in the image.</source>
          <target state="translated">&lt;code&gt;''&lt;/code&gt; : 이미지의 채널 수에 따라 기본 형식을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="db1d6ad0d5537c648d8aae4e9b42443dbf2fd700" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'*'&lt;/code&gt;: matches any sequence of non-'/' characters</source>
          <target state="translated">&lt;code&gt;'*'&lt;/code&gt; : 비 '/'문자 시퀀스와 일치</target>
        </trans-unit>
        <trans-unit id="d2a44e1f66a3ce2eb83a39ede46de5b8cb85c765" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'/': 'scope_name/'&lt;/code&gt; - will load all variables in current &lt;code&gt;scope_name&lt;/code&gt; from checkpoint's root (e.g. no scope).</source>
          <target state="translated">&lt;code&gt;'/': 'scope_name/'&lt;/code&gt; - 검사 점의 루트 에서 현재 &lt;code&gt;scope_name&lt;/code&gt; 의 모든 변수를로드합니다 (예 : 범위 없음).</target>
        </trans-unit>
        <trans-unit id="5b2864585b8eca9dd5850c06a4d31220cd7ea878" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'?'&lt;/code&gt;: matches a single non-'/' character</source>
          <target state="translated">&lt;code&gt;'?'&lt;/code&gt; : '/'가 아닌 단일 문자와 일치</target>
        </trans-unit>
        <trans-unit id="76dccfe703368cccfe2e390e72b9c7b732a1873f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'[' [ '^' ] { match-list } ']'&lt;/code&gt;: matches any single character (not) on the list</source>
          <target state="translated">&lt;code&gt;'[' [ '^' ] { match-list } ']'&lt;/code&gt; : 목록에 있는 단일 문자 (아님)와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="383fd64e03cbf3d11cbdb45717a9584e259389ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'\\' c&lt;/code&gt;: matches character &lt;code&gt;c&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'\\' c&lt;/code&gt; : 문자 &lt;code&gt;c&lt;/code&gt; 와 일치</target>
        </trans-unit>
        <trans-unit id="8a4ddf7beb921c3e926b2ecbf7539f035ba295a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'avg'&lt;/code&gt; means that global average pooling will be applied to the output of the last convolutional block, and thus the output of the model will be a 2D tensor.</source>
          <target state="translated">&lt;code&gt;'avg'&lt;/code&gt; 는 글로벌 평균 풀링이 마지막 컨볼 루션 블록의 출력에 적용되므로 모델의 출력이 2D 텐서가됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="37e157eb2fe89532dc590eb089820cc28853922d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'batch'&lt;/code&gt; or &lt;code&gt;'epoch'&lt;/code&gt; or integer. When using &lt;code&gt;'batch'&lt;/code&gt;, writes the losses and metrics to TensorBoard after each batch. The same applies for &lt;code&gt;'epoch'&lt;/code&gt;. If using an integer, let's say &lt;code&gt;1000&lt;/code&gt;, the callback will write the metrics and losses to TensorBoard every 1000 batches. Note that writing too frequently to TensorBoard can slow down your training.</source>
          <target state="translated">&lt;code&gt;'batch'&lt;/code&gt; 또는 &lt;code&gt;'epoch'&lt;/code&gt; 또는 정수. &lt;code&gt;'batch'&lt;/code&gt; 를 사용하는 경우 각 배치 후에 손실 및 측정 항목을 TensorBoard에 기록합니다. &lt;code&gt;'epoch'&lt;/code&gt; 에도 동일하게 적용됩니다 . 정수를 사용하는 경우 (예 : &lt;code&gt;1000&lt;/code&gt; ) 콜백은 매 1000 배치마다 텐서 보드에 메트릭과 손실을 기록합니다. TensorBoard에 너무 자주 쓰면 훈련 속도가 느려질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ebb072fc82b5f1a0897a4dd3ba2ea6c9ac50ee6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'batch'&lt;/code&gt; or &lt;code&gt;'epoch'&lt;/code&gt; or integer. When using &lt;code&gt;'batch'&lt;/code&gt;, writes the losses and metrics to TensorBoard after each batch. The same applies for &lt;code&gt;'epoch'&lt;/code&gt;. If using an integer, let's say &lt;code&gt;1000&lt;/code&gt;, the callback will write the metrics and losses to TensorBoard every 1000 samples. Note that writing too frequently to TensorBoard can slow down your training.</source>
          <target state="translated">&lt;code&gt;'batch'&lt;/code&gt; 또는 &lt;code&gt;'epoch'&lt;/code&gt; 또는 정수. &lt;code&gt;'batch'&lt;/code&gt; 를 사용하는 경우 각 배치 후에 손실 및 측정 항목을 TensorBoard에 기록합니다. &lt;code&gt;'epoch'&lt;/code&gt; 에도 동일하게 적용됩니다 . 정수를 사용하는 경우 (예 : &lt;code&gt;1000&lt;/code&gt; ) 콜백은 1000 개 샘플마다 측정 항목과 손실을 TensorBoard에 기록합니다. TensorBoard에 너무 자주 쓰면 훈련 속도가 느려질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="13d1784742305561f6be775fa67af07c1cdfd927" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'checkpoint_scope_name/': 'scope_name/'&lt;/code&gt; - will load all variables in current &lt;code&gt;scope_name&lt;/code&gt; from &lt;code&gt;checkpoint_scope_name&lt;/code&gt; with matching tensor names.</source>
          <target state="translated">&lt;code&gt;'checkpoint_scope_name/': 'scope_name/'&lt;/code&gt; - 현재의 모든 변수로드 &lt;code&gt;scope_name&lt;/code&gt; 에서 &lt;code&gt;checkpoint_scope_name&lt;/code&gt; 일치 텐서 이름.</target>
        </trans-unit>
        <trans-unit id="6b6741fd224edc1a30b95c4e395bc8ab1136bbba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'checkpoint_scope_name/some_other_variable': 'scope_name/variable_name'&lt;/code&gt; - will initialize &lt;code&gt;scope_name/variable_name&lt;/code&gt; variable from &lt;code&gt;checkpoint_scope_name/some_other_variable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'checkpoint_scope_name/some_other_variable': 'scope_name/variable_name'&lt;/code&gt; - &lt;code&gt;checkpoint_scope_name/some_other_variable&lt;/code&gt; 에서 &lt;code&gt;scope_name/variable_name&lt;/code&gt; 변수를 초기화 합니다 .</target>
        </trans-unit>
        <trans-unit id="5216aa6c998df28ca83741c65efdcbb4e3cb0f86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'compute_capability'&lt;/code&gt;: The &lt;a href=&quot;https://developer.nvidia.com/cuda-gpus&quot;&gt;compute capability&lt;/a&gt; of the device as a tuple of two ints, in the form &lt;code&gt;(major_version, minor_version)&lt;/code&gt;. Only available for NVIDIA GPUs</source>
          <target state="translated">&lt;code&gt;'compute_capability'&lt;/code&gt; : &lt;code&gt;(major_version, minor_version)&lt;/code&gt; 형식의 두 int의 튜플로서 장치 의 &lt;a href=&quot;https://developer.nvidia.com/cuda-gpus&quot;&gt;계산 기능&lt;/a&gt; 입니다 . NVIDIA GPU에서만 사용 가능</target>
        </trans-unit>
        <trans-unit id="b883bbdabdb13c615236be034e56211a39ac8e0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'device_name'&lt;/code&gt;: A human-readable name of the device as a string, e.g. &quot;Titan V&quot;. Unlike &lt;a href=&quot;../physicaldevice#name&quot;&gt;&lt;code&gt;tf.config.PhysicalDevice.name&lt;/code&gt;&lt;/a&gt;, this will be the same for multiple devices if each device is the same model. Currently only available for GPUs.</source>
          <target state="translated">&lt;code&gt;'device_name'&lt;/code&gt; : 사람이 읽을 수있는 장치 이름 (예 : &quot;Titan V&quot;). &lt;a href=&quot;../physicaldevice#name&quot;&gt; &lt;code&gt;tf.config.PhysicalDevice.name&lt;/code&gt; &lt;/a&gt; 과 달리 각 장치가 동일한 모델 인 경우 여러 장치에 대해 동일합니다. 현재는 GPU에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="03fb08dd833d2e6217a1efd80dd63cbc0db9f6ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'epoch'&lt;/code&gt; or integer. When using &lt;code&gt;'epoch'&lt;/code&gt;, the callback saves the model after each epoch. When using integer, the callback saves the model at end of this many batches. If the &lt;code&gt;Model&lt;/code&gt; is compiled with &lt;code&gt;experimental_steps_per_execution=N&lt;/code&gt;, then the saving criteria will be checked every Nth batch. Note that if the saving isn't aligned to epochs, the monitored metric may potentially be less reliable (it could reflect as little as 1 batch, since the metrics get reset every epoch). Defaults to &lt;code&gt;'epoch'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'epoch'&lt;/code&gt; 또는 정수. &lt;code&gt;'epoch'&lt;/code&gt; 를 사용할 때 콜백은 각 Epoch 후에 모델을 저장합니다. 정수를 사용할 때 콜백은이 많은 배치가 끝날 때 모델을 저장합니다. &lt;code&gt;Model&lt;/code&gt; 이 &lt;code&gt;experimental_steps_per_execution=N&lt;/code&gt; 컴파일 된 경우 저장 기준은 N 번째 배치마다 확인됩니다. 저장이 에포크에 맞지 않으면 모니터링 된 메트릭의 안정성이 떨어질 수 있습니다 (메트릭이 에포크마다 재설정되므로 1 개의 배치 만 반영 할 수 있음). 기본값은 &lt;code&gt;'epoch'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="30e6de68d78cd6b30fceb4935ebf32bf029e2a68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'ignore'&lt;/code&gt;: Skip illegal substrings.</source>
          <target state="translated">&lt;code&gt;'ignore'&lt;/code&gt; : 잘못된 하위 문자열을 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="b250932deeb1878910e61af3675f0047b25a6e28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'ignore'&lt;/code&gt;: Skip invalid codepoints.</source>
          <target state="translated">&lt;code&gt;'ignore'&lt;/code&gt; : 유효하지 않은 코드 포인트를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="3a8092582362745bb765422ba3a0b45d49efad74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'max'&lt;/code&gt; means that global max pooling will be applied.</source>
          <target state="translated">&lt;code&gt;'max'&lt;/code&gt; 는 글로벌 최대 풀링이 적용됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="36cff101a0db7032a97cfdb351469aec63ca03f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'replace'&lt;/code&gt;: Replace illegal substrings with &lt;code&gt;replacement_char&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'replace'&lt;/code&gt; : 잘못된 하위 문자열을 &lt;code&gt;replacement_char&lt;/code&gt; 로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="0fe83f76a85936a6c87d8549913cd22651192f2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'replace'&lt;/code&gt;: Replace invalid codepoint with the &lt;code&gt;replacement_char&lt;/code&gt;. (default)</source>
          <target state="translated">&lt;code&gt;'replace'&lt;/code&gt; : 유효하지 않은 코드 포인트를 &lt;code&gt;replacement_char&lt;/code&gt; 로 바꿉니다 . (기본)</target>
        </trans-unit>
        <trans-unit id="7e9c3974de30af8393b5b2111452e25ad087b6bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'scope_variable_name': list(variable)&lt;/code&gt; - will initialize list of partitioned variables with tensor 'scope_variable_name' from the checkpoint.</source>
          <target state="translated">&lt;code&gt;'scope_variable_name': list(variable)&lt;/code&gt; -검사 점에서 텐서 'scope_variable_name'을 사용하여 분할 된 변수 목록을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="f9e67202bfe4a7c2c9f528c59b1b06804e6b3cdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'scope_variable_name': variable&lt;/code&gt; - will initialize given &lt;a href=&quot;../../../variable&quot;&gt;&lt;code&gt;tf.Variable&lt;/code&gt;&lt;/a&gt; object with tensor 'scope_variable_name' from the checkpoint.</source>
          <target state="translated">&lt;code&gt;'scope_variable_name': variable&lt;/code&gt; 검사 점에서 'scope_variable_name'텐서가있는 지정된 &lt;a href=&quot;../../../variable&quot;&gt; &lt;code&gt;tf.Variable&lt;/code&gt; &lt;/a&gt; 객체를 초기화 합니다.</target>
        </trans-unit>
        <trans-unit id="0291e8122db8f996a39605e5bef6e253a1103888" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'strict'&lt;/code&gt;: Raise an exception for any illegal substrings.</source>
          <target state="translated">&lt;code&gt;'strict'&lt;/code&gt; : 불법 하위 문자열에 대한 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="9c22ca719b525a7b5e6fea17399217d117067744" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'strict'&lt;/code&gt;: Raise an exception for any invalid codepoint.</source>
          <target state="translated">&lt;code&gt;'strict'&lt;/code&gt; : 유효하지 않은 코드 포인트에 대해 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="7129f7724d3928f9251060154c1f8e4f60342a6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;('N', 'N', 'Q')&lt;/code&gt; specifies a 3D shape wherein the first and second dimensions are equal.</source>
          <target state="translated">&lt;code&gt;('N', 'N', 'Q')&lt;/code&gt; 는 첫 번째 차원과 두 번째 차원이 동일한 3D 모양을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="df8bee46570bda0c535219d6a89c4f5849a896a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;('N', 'Q')&lt;/code&gt; specifies a 2D shape wherein the first and second dimensions of shape may or may not be equal.</source>
          <target state="translated">&lt;code&gt;('N', 'Q')&lt;/code&gt; 는 모양의 첫 번째 및 두 번째 치수가 같거나 같지 않을 수있는 2D 모양을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="352ea4b02163ec17da9742bedd3890d39b484bd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(1, 'N')&lt;/code&gt; specifies a 2D shape wherein the first dimension is exactly 1 and the second dimension can be any value. Note that the abstract dimension letters take effect across different tuple elements of the list. For example, &lt;code&gt;tf.debugging.assert_shapes([(x, ('N', 'A')), (y, ('N', 'B'))]&lt;/code&gt; asserts that both &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are rank-2 tensors and their first dimensions are equal (&lt;code&gt;N&lt;/code&gt;). &lt;code&gt;shape&lt;/code&gt; can also be a &lt;a href=&quot;../../../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;(1, 'N')&lt;/code&gt; 은 첫 번째 차원이 정확히 1이고 두 번째 차원이 임의의 값이 될 수있는 2D 모양을 지정합니다. 추상 차원 문자는 목록의 여러 튜플 요소에 적용됩니다. 예를 들어, &lt;code&gt;tf.debugging.assert_shapes([(x, ('N', 'A')), (y, ('N', 'B'))]&lt;/code&gt; 는 &lt;code&gt;x&lt;/code&gt; 와 &lt;code&gt;y&lt;/code&gt; 가 모두 랭크 2 텐서이고 첫 번째 차원은 동일합니다 ( &lt;code&gt;N&lt;/code&gt; ). &lt;code&gt;shape&lt;/code&gt; 는 &lt;a href=&quot;../../../tensorshape&quot;&gt; &lt;code&gt;tf.TensorShape&lt;/code&gt; 일&lt;/a&gt; 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="57befc765fa1f3d655f9726906b2ebd1ecae7807" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;...&lt;/code&gt; grab the full ranges from as many dimensions as needed to fully specify a slice for every dimension of the input shape.</source>
          <target state="translated">&lt;code&gt;...&lt;/code&gt; 입력 모양의 모든 차원에 대해 슬라이스를 완전히 지정하는 데 필요한만큼 많은 차원에서 전체 범위를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="786f5228f05dd37a3c956575aad88e84f48d0841" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.graph&lt;/code&gt;: The whole imported graph.</source>
          <target state="translated">&lt;code&gt;.graph&lt;/code&gt; : 가져온 그래프 전체입니다.</target>
        </trans-unit>
        <trans-unit id="6cecb0367eec926ac6a1b86f05d8af901ed3bdc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prune(feeds, fetches)&lt;/code&gt;: A method which allows you to extract functions for new subgraphs. This is equivalent to importing the SavedModel and naming feeds and fetches in a Session from TensorFlow 1.x.</source>
          <target state="translated">&lt;code&gt;.prune(feeds, fetches)&lt;/code&gt; : 새 하위 그래프에 대한 함수를 추출 할 수있는 방법입니다. 이는 저장된 모델을 가져오고 TensorFlow 1.x에서 세션의 피드 및 가져 오기에 이름을 지정하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8066145b511bed33f94d60fbe724a17889bd97e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.restore(save_path)&lt;/code&gt;: A function that restores variables from a checkpoint saved from &lt;code&gt;tf.compat.v1.Saver&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.restore(save_path)&lt;/code&gt; : 체크 포인트로부터 복원 변수로 저장하는 기능 &lt;code&gt;tf.compat.v1.Saver&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d70be976b86e2d15b56af1f10aff7a281cade9a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.signatures&lt;/code&gt;: A dictionary mapping signature names to functions.</source>
          <target state="translated">&lt;code&gt;.signatures&lt;/code&gt; : 서명 이름을 함수에 매핑하는 사전입니다.</target>
        </trans-unit>
        <trans-unit id="abda15e3f009bba04fb0ac0b23a77889316c007b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.variables&lt;/code&gt;: A list of imported variables.</source>
          <target state="translated">&lt;code&gt;.variables&lt;/code&gt; : 가져온 변수 목록입니다.</target>
        </trans-unit>
        <trans-unit id="b94aa92b6e3fbb9249a2f69e7bf6334abe79f9bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0-D&lt;/code&gt; string &lt;code&gt;Tensor&lt;/code&gt;, the delimiter character, the string should be length 0 or 1. Default is ' '.</source>
          <target state="translated">&lt;code&gt;0-D&lt;/code&gt; 문자열 &lt;code&gt;Tensor&lt;/code&gt; , 구분 문자, 문자열 길이는 0 또는 1이어야합니다. 기본값은 ''입니다.</target>
        </trans-unit>
        <trans-unit id="e7fe9f6f35267d73df2d4a674c7edfac89efd3cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0-D&lt;/code&gt; string &lt;code&gt;Tensor&lt;/code&gt;, the delimiter character.</source>
          <target state="translated">&lt;code&gt;0-D&lt;/code&gt; 문자열 &lt;code&gt;Tensor&lt;/code&gt; , 구분 문자.</target>
        </trans-unit>
        <trans-unit id="b34bbcdc010c7f58d2178e9e97f6f55bfed0b95f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0-D&lt;/code&gt; string &lt;code&gt;Tensor&lt;/code&gt;, the delimiter string.</source>
          <target state="translated">&lt;code&gt;0-D&lt;/code&gt; 문자열 &lt;code&gt;Tensor&lt;/code&gt; , 구분자 문자열.</target>
        </trans-unit>
        <trans-unit id="82d0af2452b75221160507a272f89ca60006b1ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0.2 * x + 0.5&lt;/code&gt; if &lt;code&gt;-2.5 &amp;lt;= x &amp;lt;= 2.5&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;0.2 * x + 0.5&lt;/code&gt; 경우 &lt;code&gt;-2.5 &amp;lt;= x &amp;lt;= 2.5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="45bd28b38c9389790904e4a83c3f271d4b668c53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; (if &lt;code&gt;values&lt;/code&gt; is empty);</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; ( &lt;code&gt;values&lt;/code&gt; 이 비어있는 경우);</target>
        </trans-unit>
        <trans-unit id="57c1b4066208fb52a9b002160fc815660b3e172d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; if &lt;code&gt;x &amp;lt; -2.5&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; &lt;code&gt;x &amp;lt; -2.5&lt;/code&gt; 경우 0</target>
        </trans-unit>
        <trans-unit id="a7af2366166b0cb0b6f5c9acc6c1ea6393ca46ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; is a reserved index that won't be assigned to any word.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 은 어떤 단어에도 할당되지 않은 예약 된 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="1b5c5ecf59a9f56556908f3ed4772249a1280b1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1-D&lt;/code&gt; string &lt;code&gt;Tensor&lt;/code&gt;, the strings to split.</source>
          <target state="translated">&lt;code&gt;1-D&lt;/code&gt; 문자열 &lt;code&gt;Tensor&lt;/code&gt; , 분할 할 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="a63696234eb7d2e133852931378a5680e10445b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if &lt;code&gt;x &amp;gt; 2.5&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; &lt;code&gt;x &amp;gt; 2.5&lt;/code&gt; 경우 1</target>
        </trans-unit>
        <trans-unit id="cd9c2f118638489896affd3a30965c2f07ec82aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt;: large, dense models, &lt;code&gt;2&lt;/code&gt;: small models, &lt;code&gt;3&lt;/code&gt;: large, sparse models,</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; : 크고 밀도가 높은 모델, &lt;code&gt;2&lt;/code&gt; : 작은 모델, &lt;code&gt;3&lt;/code&gt; : 큰 스파 스 모델,</target>
        </trans-unit>
        <trans-unit id="a271f74ce16eba7bf1ed7a6f81ec10011dd5d906" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2:4&lt;/code&gt; is contributes 2, 4, 1 to begin, end, and stride. All masks have zero bits contributed.</source>
          <target state="translated">&lt;code&gt;2:4&lt;/code&gt; 는 시작, 끝, 보폭에 2, 4, 1에 기여합니다. 모든 마스크에는 0 비트가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="b3b9adf974e5c252245e7989d11d22db627317cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&lt;/code&gt; stores layer weights in a dense but sparsely-populated 2D matrix and implements the forward pass as a single matrix-multiply. It uses a lot of RAM but performs few (large) ops.</source>
          <target state="translated">&lt;code&gt;2&lt;/code&gt; 는 밀도가 낮지 만 인구 밀도가 낮은 2D 행렬에 레이어 가중치를 저장하고 순방향 패스를 단일 행렬로 구현합니다. 많은 RAM을 사용하지만 적은 (대형) 연산을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="aac4cda2c0e8a69ce29bfd76f7f6b22e70d2a887" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;3&lt;/code&gt; stores layer weights in a sparse tensor and implements the forward pass as a single sparse matrix-multiply.</source>
          <target state="translated">&lt;code&gt;3&lt;/code&gt; 은 희소 텐서에 레이어 가중치를 저장하고 단일 희소 행렬 곱셈으로서 순방향 패스를 구현한다.</target>
        </trans-unit>
        <trans-unit id="5f132c9495a929e5b3caa98f6df327cd1a8a8abf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:-3:-1&lt;/code&gt; shows the use of negative indices. A negative index &lt;code&gt;i&lt;/code&gt; associated with a dimension that has shape &lt;code&gt;s&lt;/code&gt; is converted to a positive index &lt;code&gt;s + i&lt;/code&gt;. So &lt;code&gt;-1&lt;/code&gt; becomes &lt;code&gt;s-1&lt;/code&gt; (i.e. the last element). This conversion is done internally so begin, end and strides receive x, -3, and -1. The appropriate begin_mask bit is set to indicate the start range is the full range (ignoring the x).</source>
          <target state="translated">&lt;code&gt;:-3:-1&lt;/code&gt; 은 음수 인덱스의 사용을 보여줍니다. 모양이 &lt;code&gt;s&lt;/code&gt; 인 차원과 관련된 음의 인덱스 &lt;code&gt;i&lt;/code&gt; 는 양의 인덱스 &lt;code&gt;s + i&lt;/code&gt; 로 변환됩니다 . 따라서 &lt;code&gt;-1&lt;/code&gt; 은 &lt;code&gt;s-1&lt;/code&gt; (즉, 마지막 요소)이됩니다. 이 변환은 내부적으로 수행되므로 시작, 종료 및 보폭은 x, -3 및 -1을받습니다. 시작 범위가 전체 범위 (x 무시)임을 나타 내기 위해 적절한 begin_mask 비트가 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="b235079c21da32a4612a8fbb4f46757609094d7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:&lt;/code&gt; indicates that the entire contents of the corresponding dimension is selected. This is equivalent to &lt;code&gt;::&lt;/code&gt; or &lt;code&gt;0::1&lt;/code&gt;. begin, end, and strides receive 0, 0, and 1, respectively. The appropriate bits in &lt;code&gt;begin_mask&lt;/code&gt; and &lt;code&gt;end_mask&lt;/code&gt; are also set.</source>
          <target state="translated">&lt;code&gt;:&lt;/code&gt; 해당 차원의 전체 내용이 선택되었음을 나타냅니다. 이것은 &lt;code&gt;::&lt;/code&gt; 또는 &lt;code&gt;0::1&lt;/code&gt; 과 동일합니다 . 시작, 끝 및 보폭은 각각 0, 0 및 1을받습니다. &lt;code&gt;begin_mask&lt;/code&gt; 및 &lt;code&gt;end_mask&lt;/code&gt; 의 적절한 비트 도 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="5a4dfd5b5359d71df664a969c528041bf708c72d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A B B B B&lt;/code&gt; if &lt;code&gt;merge_repeated=False&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;A B B B B&lt;/code&gt; 경우 &lt;code&gt;merge_repeated=False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c725decff2ae21344504da24c65d3da4a71014d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A B B B&lt;/code&gt; if &lt;code&gt;merge_repeated = False&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;A B B B&lt;/code&gt; 경우 &lt;code&gt;merge_repeated = False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eff10542d11ff47e1197c9c264497be754fa8464" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A B B B&lt;/code&gt; if &lt;code&gt;merge_repeated=True&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;A B B B&lt;/code&gt; &lt;code&gt;merge_repeated=True&lt;/code&gt; 경우 ABBB .</target>
        </trans-unit>
        <trans-unit id="c2a9248ac76569d659d73a432a140a58d2c80cde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A B&lt;/code&gt; if &lt;code&gt;merge_repeated = True&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;A B&lt;/code&gt; 경우 &lt;code&gt;merge_repeated = True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18af9e65c023fcf59fada1bfedad51f84ca940b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ADD_N&lt;/code&gt;: All of the gradient terms are summed as part of one operation using the &quot;AddN&quot; op (see &lt;a href=&quot;math/add_n&quot;&gt;&lt;code&gt;tf.add_n&lt;/code&gt;&lt;/a&gt;). This method has the property that all gradients must be ready and buffered separately in memory before any aggregation is performed.</source>
          <target state="translated">&lt;code&gt;ADD_N&lt;/code&gt; : 모든 그라디언트 항은 &quot;AddN&quot;op를 사용하여 하나의 연산의 일부로 합산됩니다 ( &lt;a href=&quot;math/add_n&quot;&gt; &lt;code&gt;tf.add_n&lt;/code&gt; &lt;/a&gt; 참조 ). 이 방법에는 집계가 수행되기 전에 모든 그라디언트가 메모리에 별도로 준비되고 버퍼링되어야하는 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="087de71eed92d30244fcfdfe80bd5de2f63b2420" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AUTO&lt;/code&gt;: Default to runtime's automatic choices.</source>
          <target state="translated">&lt;code&gt;AUTO&lt;/code&gt; : 런타임 자동 선택이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="7884bb6abcfc949c26e752ded97a5ee15e1f4989" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AUTO&lt;/code&gt;: Indicates that the reduction option will be determined by the usage context. For almost all cases this defaults to &lt;code&gt;SUM_OVER_BATCH_SIZE&lt;/code&gt;. When used with &lt;a href=&quot;../../distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt;, outside of built-in training loops such as &lt;a href=&quot;../../keras&quot;&gt;&lt;code&gt;tf.keras&lt;/code&gt;&lt;/a&gt;&lt;code&gt;compile&lt;/code&gt; and &lt;code&gt;fit&lt;/code&gt;, we expect reduction value to be &lt;code&gt;SUM&lt;/code&gt; or &lt;code&gt;NONE&lt;/code&gt;. Using &lt;code&gt;AUTO&lt;/code&gt; in that case will raise an error.</source>
          <target state="translated">&lt;code&gt;AUTO&lt;/code&gt; : 사용량에 따라 축소 옵션이 결정됨을 나타냅니다. 거의 모든 경우에 기본값은 &lt;code&gt;SUM_OVER_BATCH_SIZE&lt;/code&gt; 입니다. &lt;a href=&quot;../../keras&quot;&gt; &lt;code&gt;tf.keras&lt;/code&gt; &lt;/a&gt; &lt;code&gt;compile&lt;/code&gt; and &lt;code&gt;fit&lt;/code&gt; 과 같은 내장 훈련 루프 외부에서 &lt;a href=&quot;../../distribute/strategy&quot;&gt; &lt;code&gt;tf.distribute.Strategy&lt;/code&gt; &lt;/a&gt; 와 함께 사용하면 감소 값이 &lt;code&gt;SUM&lt;/code&gt; 또는 &lt;code&gt;NONE&lt;/code&gt; 이 될 것으로 예상 됩니다. 이 경우 &lt;code&gt;AUTO&lt;/code&gt; 를 사용 하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b17a991c0deec1b1876bbddefad61427a1244ceb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AUTO&lt;/code&gt;: Indicates that the synchronization will be determined by the current &lt;code&gt;DistributionStrategy&lt;/code&gt; (eg. With &lt;code&gt;MirroredStrategy&lt;/code&gt; this would be &lt;code&gt;ON_WRITE&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;AUTO&lt;/code&gt; : 동기화가 현재 &lt;code&gt;DistributionStrategy&lt;/code&gt; 에 의해 결정됨을 나타냅니다 (예 : &lt;code&gt;MirroredStrategy&lt;/code&gt; 의 경우 &lt;code&gt;ON_WRITE&lt;/code&gt; 임 ).</target>
        </trans-unit>
        <trans-unit id="0a68b60df48a1ed20a13ad8541d3485dee89d6fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Axis&lt;/code&gt; is where the values will be generated (the dimension in the returned tensor which corresponds to the axis will be equal to &lt;code&gt;num&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;Axis&lt;/code&gt; 값이 생성되는 위치입니다 (축에 해당하는 반환 된 텐서의 차원은 &lt;code&gt;num&lt;/code&gt; 과 같습니다 ).</target>
        </trans-unit>
        <trans-unit id="f5e6f0391d3fae6060f70babb93c9b80edd297bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BackupAndRestore&lt;/code&gt; callback is intended to recover from interruptions that happened in the middle of a model.fit execution by backing up the training states in a temporary checkpoint file (based on TF CheckpointManager) at the end of each epoch. If training restarted before completion, the training state and model are restored to the most recently saved state at the beginning of a new model.fit() run. Note that user is responsible to bring jobs back up. This callback is important for the backup and restore mechanism for fault tolerance purpose. And the model to be restored from an previous checkpoint is expected to be the same as the one used to back up. If user changes arguments passed to compile or fit, the checkpoint saved for fault tolerance can become invalid.</source>
          <target state="translated">&lt;code&gt;BackupAndRestore&lt;/code&gt; 콜백은 각 Epoch가 끝날 때 임시 체크 포인트 파일 (TF CheckpointManager 기반)에 훈련 상태를 백업하여 model.fit 실행 중간에 발생한 중단으로부터 복구하기위한 것입니다. 학습이 완료되기 전에 다시 시작된 경우 학습 상태와 모델은 새 model.fit () 실행을 시작할 때 가장 최근에 저장된 상태로 복원됩니다. 사용자는 작업을 다시 가져올 책임이 있습니다. 이 콜백은 내결함성을위한 백업 및 복원 메커니즘에 중요합니다. 그리고 이전 체크 포인트에서 복원 할 모델은 백업에 사용 된 모델과 동일 할 것으로 예상됩니다. 사용자가 컴파일 또는 맞춤에 전달 된 인수를 변경하면 내결함성을 위해 저장된 체크 포인트가 무효화 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a745993b53bedf7580d6937960494de77b4805e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Beta(x) = prod_j Gamma(x_j) / Gamma(sum_j x_j)&lt;/code&gt; is the &lt;a href=&quot;https://en.wikipedia.org/wiki/Beta_function#Multivariate_beta_function&quot;&gt;multivariate beta function&lt;/a&gt;, and,</source>
          <target state="translated">&lt;code&gt;Beta(x) = prod_j Gamma(x_j) / Gamma(sum_j x_j)&lt;/code&gt; 는 &lt;a href=&quot;https://en.wikipedia.org/wiki/Beta_function#Multivariate_beta_function&quot;&gt;다변량 베타 함수입니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cae3dd69b1ad825f8350c4b99729ea8d9e591330" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BlackList&lt;/code&gt;: Ops that are numerically unsafe to execute in float16 and can negatively affect downstream nodes. E.g. &lt;code&gt;Softmax&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BlackList&lt;/code&gt; : float16 에서 실행하기에는 숫자로 안전하지 않으며 다운 스트림 노드에 부정적인 영향을 줄 수있는 작업입니다. 예 : &lt;code&gt;Softmax&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5676cc8527ca62dbe01e56f61942c31e2a2c489a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Boolean&lt;/code&gt; indicating whether or not to write the &lt;code&gt;CheckpointStateProto&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Boolean&lt;/code&gt; &lt;code&gt;CheckpointStateProto&lt;/code&gt; 를 쓸지 여부를 나타내는 부울 입니다.</target>
        </trans-unit>
        <trans-unit id="2c23722f2b2a366ea362ab555b914a9a5c4a07ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Boolean&lt;/code&gt; indicating whether or not to write the meta graph file.</source>
          <target state="translated">&lt;code&gt;Boolean&lt;/code&gt; 메타 그래프 파일을 쓸지 여부를 나타내는 부울 입니다.</target>
        </trans-unit>
        <trans-unit id="d6d22a28d1f299b63ee241610bac88a6be5a4c3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Boolean&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt;, merges or only sets a device if the device constraint is completely unset. merges device specification rather than overriding them.</source>
          <target state="translated">&lt;code&gt;Boolean&lt;/code&gt; . 만약 &lt;code&gt;True&lt;/code&gt; 장치 제한이 완전히 해제 경우에만 장치를 설정하거나, 병합. 장치 사양을 재정의하지 않고 병합합니다.</target>
        </trans-unit>
        <trans-unit id="aeddbc8feea74d42cc4602e3b62ec386e98c802a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CategoricalColumn&lt;/code&gt;: Will use the transformed tensor produced by this column. Does not support hashed categorical column.</source>
          <target state="translated">&lt;code&gt;CategoricalColumn&lt;/code&gt; :이 열에서 생성 된 변환 된 텐서를 사용합니다. 해시 된 범주 열을 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="beef7df99863bb63aef817681f8ba6b9c4670272" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Checkpoint&lt;/code&gt; objects have dependencies on the objects passed as keyword arguments to their constructors, and each dependency is given a name that is identical to the name of the keyword argument for which it was created. TensorFlow classes like &lt;code&gt;Layer&lt;/code&gt;s and &lt;code&gt;Optimizer&lt;/code&gt;s will automatically add dependencies on their own variables (e.g. &quot;kernel&quot; and &quot;bias&quot; for &lt;a href=&quot;../keras/layers/dense&quot;&gt;&lt;code&gt;tf.keras.layers.Dense&lt;/code&gt;&lt;/a&gt;). Inheriting from &lt;a href=&quot;../keras/model&quot;&gt;&lt;code&gt;tf.keras.Model&lt;/code&gt;&lt;/a&gt; makes managing dependencies easy in user-defined classes, since &lt;code&gt;Model&lt;/code&gt; hooks into attribute assignment. For example:</source>
          <target state="translated">&lt;code&gt;Checkpoint&lt;/code&gt; 개체는 생성자에 키워드 인수로 전달 된 개체에 대한 종속성이 있으며 각 종속성에는 생성 된 키워드 인수의 이름과 동일한 이름이 지정됩니다. &lt;code&gt;Layer&lt;/code&gt; 및 &lt;code&gt;Optimizer&lt;/code&gt; 와 같은 TensorFlow 클래스 는 자체 변수에 대한 종속성을 자동으로 추가합니다 (예 : &lt;a href=&quot;../keras/layers/dense&quot;&gt; &lt;code&gt;tf.keras.layers.Dense&lt;/code&gt; 의 경우&lt;/a&gt; &quot;kernel&quot;및 &quot;bias&quot; ). &lt;a href=&quot;../keras/model&quot;&gt; &lt;code&gt;tf.keras.Model&lt;/code&gt; &lt;/a&gt; 에서 상속 하면 &lt;code&gt;Model&lt;/code&gt; 이 속성 할당에 연결 되므로 사용자 정의 클래스에서 종속성을 쉽게 관리 할 수 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="f15ec29e213a0f90311dda555f773fcac8321dad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Checkpoint&lt;/code&gt; objects have dependencies on the objects passed as keyword arguments to their constructors, and each dependency is given a name that is identical to the name of the keyword argument for which it was created. TensorFlow classes like &lt;code&gt;Layer&lt;/code&gt;s and &lt;code&gt;Optimizer&lt;/code&gt;s will automatically add dependencies on their variables (e.g. &quot;kernel&quot; and &quot;bias&quot; for &lt;a href=&quot;../../../keras/layers/dense&quot;&gt;&lt;code&gt;tf.keras.layers.Dense&lt;/code&gt;&lt;/a&gt;). Inheriting from &lt;a href=&quot;../../../keras/model&quot;&gt;&lt;code&gt;tf.keras.Model&lt;/code&gt;&lt;/a&gt; makes managing dependencies easy in user-defined classes, since &lt;code&gt;Model&lt;/code&gt; hooks into attribute assignment. For example:</source>
          <target state="translated">&lt;code&gt;Checkpoint&lt;/code&gt; 개체는 생성자에 키워드 인수로 전달 된 개체에 종속되며 각 종속성에는 생성 된 키워드 인수의 이름과 동일한 이름이 지정됩니다. &lt;code&gt;Layer&lt;/code&gt; 및 &lt;code&gt;Optimizer&lt;/code&gt; 와 같은 TensorFlow 클래스 는 변수에 대한 종속성을 자동으로 추가합니다 (예 : &lt;a href=&quot;../../../keras/layers/dense&quot;&gt; &lt;code&gt;tf.keras.layers.Dense&lt;/code&gt; 의 경우&lt;/a&gt; &quot;kernel&quot;및 &quot;bias&quot; ). &lt;a href=&quot;../../../keras/model&quot;&gt; &lt;code&gt;tf.keras.Model&lt;/code&gt; &lt;/a&gt; 에서 상속 하면 &lt;code&gt;Model&lt;/code&gt; 이 속성 할당에 연결 되므로 사용자 정의 클래스에서 종속성을 쉽게 관리 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8f9564b0e2d76961bb36823ce53152c073e31364" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Checkpoint&lt;/code&gt; objects have dependencies on the objects passed as keyword arguments to their constructors, and each dependency is given a name that is identical to the name of the keyword argument for which it was created. TensorFlow classes like &lt;code&gt;Layer&lt;/code&gt;s and &lt;code&gt;Optimizer&lt;/code&gt;s will automatically add dependencies on their variables (e.g. &quot;kernel&quot; and &quot;bias&quot; for &lt;a href=&quot;../keras/layers/dense&quot;&gt;&lt;code&gt;tf.keras.layers.Dense&lt;/code&gt;&lt;/a&gt;). Inheriting from &lt;a href=&quot;../keras/model&quot;&gt;&lt;code&gt;tf.keras.Model&lt;/code&gt;&lt;/a&gt; makes managing dependencies easy in user-defined classes, since &lt;code&gt;Model&lt;/code&gt; hooks into attribute assignment. For example:</source>
          <target state="translated">&lt;code&gt;Checkpoint&lt;/code&gt; 개체는 생성자에 키워드 인수로 전달 된 개체에 종속되며 각 종속성에는 생성 된 키워드 인수의 이름과 동일한 이름이 지정됩니다. &lt;code&gt;Layer&lt;/code&gt; 및 &lt;code&gt;Optimizer&lt;/code&gt; 와 같은 TensorFlow 클래스 는 변수에 대한 종속성을 자동으로 추가합니다 (예 : &lt;a href=&quot;../keras/layers/dense&quot;&gt; &lt;code&gt;tf.keras.layers.Dense&lt;/code&gt; 의 경우&lt;/a&gt; &quot;kernel&quot;및 &quot;bias&quot; ). &lt;a href=&quot;../keras/model&quot;&gt; &lt;code&gt;tf.keras.Model&lt;/code&gt; &lt;/a&gt; 에서 상속 하면 &lt;code&gt;Model&lt;/code&gt; 이 속성 할당에 연결 되므로 사용자 정의 클래스에서 종속성을 쉽게 관리 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3f21f45ad0e3b2ae1904b7282d2eca7dc1a8feda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Checkpoint&lt;/code&gt;'s constructor accepts keyword arguments whose values are types that contain trackable state, such as &lt;a href=&quot;../keras/optimizers/optimizer&quot;&gt;&lt;code&gt;tf.keras.optimizers.Optimizer&lt;/code&gt;&lt;/a&gt; implementations, &lt;a href=&quot;../variable&quot;&gt;&lt;code&gt;tf.Variable&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;tf.keras.Layer&lt;/code&gt; implementations, or &lt;a href=&quot;../keras/model&quot;&gt;&lt;code&gt;tf.keras.Model&lt;/code&gt;&lt;/a&gt; implementations. It saves these values with a checkpoint, and maintains a &lt;code&gt;save_counter&lt;/code&gt; for numbering checkpoints.</source>
          <target state="translated">&lt;code&gt;Checkpoint&lt;/code&gt; 의 생성자는 &lt;a href=&quot;../keras/optimizers/optimizer&quot;&gt; &lt;code&gt;tf.keras.optimizers.Optimizer&lt;/code&gt; &lt;/a&gt; 구현, &lt;a href=&quot;../variable&quot;&gt; &lt;code&gt;tf.Variable&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;tf.keras.Layer&lt;/code&gt; 구현 또는 &lt;a href=&quot;../keras/model&quot;&gt; &lt;code&gt;tf.keras.Model&lt;/code&gt; &lt;/a&gt; 구현 과 같이 추적 가능한 상태가 포함 된 유형의 키워드 인수를 허용합니다 . 이 값을 체크 포인트와 함께 저장하고 체크 포인트 번호 매기기를 위한 &lt;code&gt;save_counter&lt;/code&gt; 를 유지합니다 .</target>
        </trans-unit>
        <trans-unit id="21910a8ffe51acf5dbbe8f8fc321f7ba20beb62b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Checkpoint&lt;/code&gt;'s constructor accepts keyword arguments whose values are types that contain trackable state, such as &lt;a href=&quot;../keras/optimizers/optimizer&quot;&gt;&lt;code&gt;tf.keras.optimizers.Optimizer&lt;/code&gt;&lt;/a&gt; implementations, &lt;a href=&quot;../variable&quot;&gt;&lt;code&gt;tf.Variable&lt;/code&gt;&lt;/a&gt;s, &lt;a href=&quot;../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; iterators, &lt;code&gt;tf.keras.Layer&lt;/code&gt; implementations, or &lt;a href=&quot;../keras/model&quot;&gt;&lt;code&gt;tf.keras.Model&lt;/code&gt;&lt;/a&gt; implementations. It saves these values with a checkpoint, and maintains a &lt;code&gt;save_counter&lt;/code&gt; for numbering checkpoints.</source>
          <target state="translated">&lt;code&gt;Checkpoint&lt;/code&gt; 의 생성자는 &lt;a href=&quot;../keras/optimizers/optimizer&quot;&gt; &lt;code&gt;tf.keras.optimizers.Optimizer&lt;/code&gt; &lt;/a&gt; 구현, &lt;a href=&quot;../variable&quot;&gt; &lt;code&gt;tf.Variable&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; 반복기, &lt;code&gt;tf.keras.Layer&lt;/code&gt; 구현 또는 &lt;a href=&quot;../keras/model&quot;&gt; &lt;code&gt;tf.keras.Model&lt;/code&gt; &lt;/a&gt; 와 같이 추적 가능한 상태를 포함하는 유형 인 값을 갖는 키워드 인수를 허용합니다. . 모델 구현. 이 값을 체크 포인트와 함께 저장하고 체크 포인트 번호 매기기를 위한 &lt;code&gt;save_counter&lt;/code&gt; 를 유지합니다 .</target>
        </trans-unit>
        <trans-unit id="397d90f4b1e9b9a77d7dcb601f7918f2ccb254bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Checkpoint&lt;/code&gt;'s constructor accepts keyword arguments whose values are types that contain trackable state, such as &lt;a href=&quot;optimizer&quot;&gt;&lt;code&gt;tf.compat.v1.train.Optimizer&lt;/code&gt;&lt;/a&gt; implementations, &lt;a href=&quot;../../../variable&quot;&gt;&lt;code&gt;tf.Variable&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;tf.keras.Layer&lt;/code&gt; implementations, or &lt;a href=&quot;../../../keras/model&quot;&gt;&lt;code&gt;tf.keras.Model&lt;/code&gt;&lt;/a&gt; implementations. It saves these values with a checkpoint, and maintains a &lt;code&gt;save_counter&lt;/code&gt; for numbering checkpoints.</source>
          <target state="translated">&lt;code&gt;Checkpoint&lt;/code&gt; 의 생성자는 &lt;a href=&quot;optimizer&quot;&gt; &lt;code&gt;tf.compat.v1.train.Optimizer&lt;/code&gt; &lt;/a&gt; 구현, &lt;a href=&quot;../../../variable&quot;&gt; &lt;code&gt;tf.Variable&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;tf.keras.Layer&lt;/code&gt; 구현 또는 &lt;a href=&quot;../../../keras/model&quot;&gt; &lt;code&gt;tf.keras.Model&lt;/code&gt; &lt;/a&gt; 구현 과 같이 추적 가능한 상태가 포함 된 유형의 키워드 인수를 허용합니다 . 이 값을 체크 포인트와 함께 저장하고 체크 포인트 번호 매기기를 위한 &lt;code&gt;save_counter&lt;/code&gt; 를 유지합니다 .</target>
        </trans-unit>
        <trans-unit id="ed074bed541d5b7d866fb86b2b3dc4874eef6efb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CheckpointManager&lt;/code&gt; preserves its own state across instantiations (see the &lt;code&gt;__init__&lt;/code&gt; documentation for details). Only one should be active in a particular directory at a time.</source>
          <target state="translated">&lt;code&gt;CheckpointManager&lt;/code&gt; 는 인스턴스화 전체에서 자체 상태를 유지합니다 (자세한 내용은 &lt;code&gt;__init__&lt;/code&gt; 설명서를 참조하십시오). 한 번에 하나의 디렉토리에서만 활성화되어야합니다.</target>
        </trans-unit>
        <trans-unit id="93d07d313603d7804e9eed68f3dd000f917f5b77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CheckpointReader&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;CheckpointReader&lt;/code&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="93a354d7c2c1a144af751791c2f41443704e984e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CheckpointSaverListener&lt;/code&gt; triggers only in steps when &lt;code&gt;CheckpointSaverHook&lt;/code&gt; is triggered, and provides callbacks at the following points:</source>
          <target state="translated">&lt;code&gt;CheckpointSaverListener&lt;/code&gt; 는 &lt;code&gt;CheckpointSaverHook&lt;/code&gt; 이 트리거 될 때 단계적으로 만 트리거되며 다음 지점에서 콜백을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7f28bc32fc1c155186c6e7f44ba249cb9a04753e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CheckpointSaverListener&lt;/code&gt; triggers only in steps when &lt;code&gt;CheckpointSaverHook&lt;/code&gt; is triggered, and provides callbacks at the following points: - before using the session - before each call to &lt;code&gt;Saver.save()&lt;/code&gt; - after each call to &lt;code&gt;Saver.save()&lt;/code&gt; - at the end of session</source>
          <target state="translated">&lt;code&gt;CheckpointSaverListener&lt;/code&gt; 은 오직 단계에서 트리거 &lt;code&gt;CheckpointSaverHook&lt;/code&gt; 가 트리거, 다음과 같은 점에서 콜백을 제공합니다 : - 각 호출하기 전에 - 세션을 사용하기 전에 &lt;code&gt;Saver.save()&lt;/code&gt; - 각 호출 후 &lt;code&gt;Saver.save()&lt;/code&gt; - 세션의 끝에서</target>
        </trans-unit>
        <trans-unit id="bf207d78ef0567ddd1fd177c8a90d0b8d665fbb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ClearList&lt;/code&gt;: Ops that do not have numerically significant adverse effects. E.g. &lt;code&gt;ArgMax&lt;/code&gt; and &lt;code&gt;Floor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ClearList&lt;/code&gt; : 수치 적으로 유의 한 부작용이없는 작전. 예 : &lt;code&gt;ArgMax&lt;/code&gt; 및 &lt;code&gt;Floor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6dd8695bf74dcdd87a2508c39b821ac496bed86b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ClusterDef&lt;/code&gt; proto or &lt;code&gt;ClusterSpec&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ClusterDef&lt;/code&gt; proto 또는 &lt;code&gt;ClusterSpec&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b132e4685a2a2a6651c5a83a98a79bb43b313f89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ClusterResolver&lt;/code&gt; objects to be unionized.</source>
          <target state="translated">&lt;code&gt;ClusterResolver&lt;/code&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="c7691fea25765064532a221353c2ac6071315d83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ConfigProto&lt;/code&gt; proto used to configure the session.</source>
          <target state="translated">&lt;code&gt;ConfigProto&lt;/code&gt; 세션을 구성하는 데 사용되는 ConfigProto proto.</target>
        </trans-unit>
        <trans-unit id="381268de73d5e6718cfbef8047b5cc537e6c99dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DEFAULT&lt;/code&gt;: The system-chosen default aggregation method.</source>
          <target state="translated">&lt;code&gt;DEFAULT&lt;/code&gt; : 시스템이 선택한 기본 집계 방법입니다.</target>
        </trans-unit>
        <trans-unit id="34e0941bc8300f48ba517a311207a73c9fc3087e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DType&lt;/code&gt; of the output. Acceptable types are &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DType&lt;/code&gt; 출력의 DType 입니다. 허용되는 유형은 &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;float&lt;/code&gt; , &lt;code&gt;double&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;uint16&lt;/code&gt; , &lt;code&gt;uint8&lt;/code&gt; , &lt;code&gt;int16&lt;/code&gt; , &lt;code&gt;int8&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8de70d8764497864cb331bc3b8c6a06e0f8bc64c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Dataset&lt;/code&gt; to be concatenated.</source>
          <target state="translated">&lt;code&gt;Dataset&lt;/code&gt; 연결할 데이터 세트 입니다.</target>
        </trans-unit>
        <trans-unit id="3c1646d808bed60d2a1cbfcd758f38432155ee9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Dense&lt;/code&gt; implements the operation: &lt;code&gt;output = activation(dot(input, kernel) + bias)&lt;/code&gt; where &lt;code&gt;activation&lt;/code&gt; is the element-wise activation function passed as the &lt;code&gt;activation&lt;/code&gt; argument, &lt;code&gt;kernel&lt;/code&gt; is a weights matrix created by the layer, and &lt;code&gt;bias&lt;/code&gt; is a bias vector created by the layer (only applicable if &lt;code&gt;use_bias&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;Dense&lt;/code&gt; 는 다음과 같이 연산을 구현합니다. &lt;code&gt;output = activation(dot(input, kernel) + bias)&lt;/code&gt; 여기서 &lt;code&gt;activation&lt;/code&gt; 은 &lt;code&gt;activation&lt;/code&gt; 인수 로 전달 된 요소 별 활성화 함수 이고, &lt;code&gt;kernel&lt;/code&gt; 은 레이어에 의해 생성 된 가중치 행렬이며, &lt;code&gt;bias&lt;/code&gt; 는 생성 된 바이어스 벡터입니다. 레이어에 의해 ( &lt;code&gt;use_bias&lt;/code&gt; 가 &lt;code&gt;True&lt;/code&gt; 인 경우에만 적용 가능 ).</target>
        </trans-unit>
        <trans-unit id="f23539497c0b982f5f3ac821b1968a4d2b4f30e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DenseColumn&lt;/code&gt; that converts from sparse input.</source>
          <target state="translated">&lt;code&gt;DenseColumn&lt;/code&gt; 드문 입력에서 변환하는 DenseColumn .</target>
        </trans-unit>
        <trans-unit id="fb455e2e7a579fab3c7493444747e1e0a4bb6f2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DenseColumn&lt;/code&gt; that converts from sparse, categorical input.</source>
          <target state="translated">&lt;code&gt;DenseColumn&lt;/code&gt; 드문 범주 형 입력에서 변환하는 DenseColumn</target>
        </trans-unit>
        <trans-unit id="f0e20036b78a3c6b4f1be3d183840c5dd5c4e1e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DeviceSpec&lt;/code&gt;s are used throughout TensorFlow to describe where state is stored and computations occur. Using &lt;code&gt;DeviceSpec&lt;/code&gt; allows you to parse device spec strings to verify their validity, merge them or compose them programmatically.</source>
          <target state="translated">&lt;code&gt;DeviceSpec&lt;/code&gt; 은 상태가 저장되고 계산이 발생하는 위치를 설명하기 위해 TensorFlow 전체에서 사용됩니다. 사용 &lt;code&gt;DeviceSpec&lt;/code&gt; 것은 당신이 자신의 유효성을 확인 병합 또는 프로그램을 구성하는 장치 사양 문자열을 구문 분석 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4deef2fc6e6ed643ab938706a0cad4f145182d41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Dimension&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Dimension&lt;/code&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="3c178d55b3aaf5f53f65329ad07d7dec4a1a442c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Distribution&lt;/code&gt; is a base class for constructing and organizing properties (e.g., mean, variance) of random variables (e.g, Bernoulli, Gaussian).</source>
          <target state="translated">&lt;code&gt;Distribution&lt;/code&gt; 는 랜덤 변수 (예 : Bernoulli, Gaussian)의 속성 (예 : 평균, 분산)을 구성하고 구성하기위한 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="22f0b7262d6909f63275b5cb9ec4e7173a923ad5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EVAL&lt;/code&gt;: testing/evaluation mode.</source>
          <target state="translated">&lt;code&gt;EVAL&lt;/code&gt; : 시험 / 평가 모드.</target>
        </trans-unit>
        <trans-unit id="82334f840f97a00148614074548d077c14ed575c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EXPERIMENTAL_TREE&lt;/code&gt;: Gradient terms are summed in pairs using using the &quot;AddN&quot; op. This method of summing gradients may reduce performance, but it can improve memory utilization because the gradients can be released earlier.</source>
          <target state="translated">&lt;code&gt;EXPERIMENTAL_TREE&lt;/code&gt; : &quot;AddN&quot;op를 사용하여 그라디언트 항을 쌍으로 합산합니다. 이 그래디언트 합산 방법은 성능을 저하시킬 수 있지만 그래디언트를 더 일찍 해제 할 수 있기 때문에 메모리 사용률을 향상시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d4565b1e0d9942774a52958844a0851f0e02a27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EstimatorSpec&lt;/code&gt; fully defines the model to be run by an &lt;code&gt;Estimator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;EstimatorSpec&lt;/code&gt; 은 완전히 실행할 수있는 모델을 정의 &lt;code&gt;Estimator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="35e4dbdaf0a7bcdd10428d1463c1f6b15b00af2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EstimatorSpec&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;EstimatorSpec&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="da2dea36e419dd9e3b3b4bc661bc95513732c0aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EvalSpec&lt;/code&gt; combines details of evaluation of the trained model as well as its export. Evaluation consists of computing metrics to judge the performance of the trained model. Export writes out the trained model on to external storage.</source>
          <target state="translated">&lt;code&gt;EvalSpec&lt;/code&gt; 은 훈련 된 모델의 평가와 내보내기에 대한 세부 정보를 결합합니다. 평가는 훈련 된 모델의 성능을 판단하기위한 계산 지표로 구성됩니다. 내보내기는 훈련 된 모델을 외부 저장소에 씁니다.</target>
        </trans-unit>
        <trans-unit id="ef5d24f5098ff0501c14b241e35222cdada3f4af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Event&lt;/code&gt; protocol buffers.</source>
          <target state="translated">&lt;code&gt;Event&lt;/code&gt; 프로토콜 버퍼.</target>
        </trans-unit>
        <trans-unit id="98b2509149357ca2577e4ff8c9991b9141591615" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FULLY_REPARAMETERIZED&lt;/code&gt;: Samples from the distribution are fully reparameterized, and straight-through gradients are supported.</source>
          <target state="translated">&lt;code&gt;FULLY_REPARAMETERIZED&lt;/code&gt; : 분포의 샘플이 완전히 다시 매개 변수화되고 직선형 그래디언트가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="cbd895c08cdb1b4aeb24e8ba968227c813f43ad0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileWriter&lt;/code&gt; is not compatible with eager execution. To write TensorBoard summaries under eager execution, use &lt;code&gt;tf.contrib.summary&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;FileWriter&lt;/code&gt; 는 열망하는 실행과 호환되지 않습니다. 간절히 실행중인 TensorBoard 요약을 작성하려면 대신 &lt;code&gt;tf.contrib.summary&lt;/code&gt; 를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="55331e4d34d1094e53d426850e0a5d5fd466162a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FixedLenFeature&lt;/code&gt; entries with a &lt;code&gt;default_value&lt;/code&gt; and &lt;code&gt;FixedLenSequenceFeature&lt;/code&gt; entries with &lt;code&gt;allow_missing=True&lt;/code&gt; are optional; otherwise, we will fail if that &lt;code&gt;Feature&lt;/code&gt; or &lt;code&gt;FeatureList&lt;/code&gt; is missing from any example in &lt;code&gt;serialized&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FixedLenFeature&lt;/code&gt; A를 항목 &lt;code&gt;default_value&lt;/code&gt; 및 &lt;code&gt;FixedLenSequenceFeature&lt;/code&gt; 있는 항목 &lt;code&gt;allow_missing=True&lt;/code&gt; 선택 사항입니다 그렇지 않으면, &lt;code&gt;serialized&lt;/code&gt; 예제에서 해당 &lt;code&gt;Feature&lt;/code&gt; 또는 &lt;code&gt;FeatureList&lt;/code&gt; 가 누락 되면 실패합니다 .</target>
        </trans-unit>
        <trans-unit id="3d5789b0bed9c8f9fa12421ae553bc1489584d1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FixedLenFeature&lt;/code&gt; entries with a &lt;code&gt;default_value&lt;/code&gt; are optional. With no default value, we will fail if that &lt;code&gt;Feature&lt;/code&gt; is missing from any example in &lt;code&gt;serialized&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FixedLenFeature&lt;/code&gt; &lt;code&gt;default_value&lt;/code&gt; 를 갖는 FixedLenFeature 항목 은 선택 사항입니다. 기본값 이 없으면 &lt;code&gt;serialized&lt;/code&gt; 의 예제에서 해당 &lt;code&gt;Feature&lt;/code&gt; 이 누락 되면 실패합니다 .</target>
        </trans-unit>
        <trans-unit id="85e6610152dcc612e1da9405e4471e74b1671b5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ForwardAccumulator&lt;/code&gt; maintains JVPs corresponding primal tensors it is watching, derived from the original &lt;code&gt;primals&lt;/code&gt; specified in the constructor. As soon as a primal tensor is deleted, &lt;code&gt;ForwardAccumulator&lt;/code&gt; deletes the corresponding JVP.</source>
          <target state="translated">&lt;code&gt;ForwardAccumulator&lt;/code&gt; 는 생성자에 지정된 원래 &lt;code&gt;primals&lt;/code&gt; 에서 파생 된 JVP에 해당하는 primal tensor를 유지 관리 합니다. 원시 텐서가 삭제 되 자마자 &lt;code&gt;ForwardAccumulator&lt;/code&gt; 는 해당 JVP를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="38803c2f6e5f78a32bf4b8be8a22e913f8a54005" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GLOBAL_VARIABLES&lt;/code&gt;: the default collection of &lt;code&gt;Variable&lt;/code&gt; objects, shared across distributed environment (model variables are subset of these). See &lt;a href=&quot;global_variables&quot;&gt;&lt;code&gt;tf.compat.v1.global_variables&lt;/code&gt;&lt;/a&gt; for more details. Commonly, all &lt;code&gt;TRAINABLE_VARIABLES&lt;/code&gt; variables will be in &lt;code&gt;MODEL_VARIABLES&lt;/code&gt;, and all &lt;code&gt;MODEL_VARIABLES&lt;/code&gt; variables will be in &lt;code&gt;GLOBAL_VARIABLES&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;GLOBAL_VARIABLES&lt;/code&gt; : 분산 환경에서 공유 되는 &lt;code&gt;Variable&lt;/code&gt; 객체 의 기본 모음입니다 (모델 변수는 이들의 하위 집합입니다). 자세한 내용은 &lt;a href=&quot;global_variables&quot;&gt; &lt;code&gt;tf.compat.v1.global_variables&lt;/code&gt; &lt;/a&gt; 를 참조하십시오. 일반적으로 모든 &lt;code&gt;TRAINABLE_VARIABLES&lt;/code&gt; 변수는 &lt;code&gt;MODEL_VARIABLES&lt;/code&gt; 에 있고 모든 &lt;code&gt;MODEL_VARIABLES&lt;/code&gt; 변수는 &lt;code&gt;GLOBAL_VARIABLES&lt;/code&gt; 에 있습니다.</target>
        </trans-unit>
        <trans-unit id="dfaa43800771ed115d5076a550ecfff2ee8548a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Gamma(x)&lt;/code&gt;), element-wise.</source>
          <target state="translated">&lt;code&gt;Gamma(x)&lt;/code&gt; 요소 별 감마 (x) ).</target>
        </trans-unit>
        <trans-unit id="71c9ecf89fbf8835e12d7965f84a5d417eb52e2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Gamma&lt;/code&gt; is the &lt;a href=&quot;https://en.wikipedia.org/wiki/Gamma_function&quot;&gt;gamma function&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Gamma&lt;/code&gt; 는 &lt;a href=&quot;https://en.wikipedia.org/wiki/Gamma_function&quot;&gt;감마 기능&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3b530528df77ce15a1391700077612a0df79ab36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Graph&lt;/code&gt;. The parent graph.</source>
          <target state="translated">&lt;code&gt;Graph&lt;/code&gt; . 상위 그래프.</target>
        </trans-unit>
        <trans-unit id="5500254564ad18c4963aeac60b68b0f8ececb361" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GraphDef&lt;/code&gt; protocol buffer.</source>
          <target state="translated">&lt;code&gt;GraphDef&lt;/code&gt; 프로토콜 버퍼.</target>
        </trans-unit>
        <trans-unit id="796d163bab77c8f232ba4c678d8fd80fa7a2fb66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GraphKey&lt;/code&gt; used to collect the summaries. Defaults to &lt;code&gt;GraphKeys.SUMMARIES&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;GraphKey&lt;/code&gt; 요약을 수집하는 데 사용되는 GraphKey 입니다. 기본값은 &lt;code&gt;GraphKeys.SUMMARIES&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="73fef2bc17e0071d8279afa1f27102aff7646704" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GrayList&lt;/code&gt;: Ops that are considered numerically safe for execution in float16 unless downstream from a BlackList Op. E.g. &lt;code&gt;Add&lt;/code&gt; and &lt;code&gt;AvgPool&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;GrayList&lt;/code&gt; : BlackList Op의 다운 스트림이 아닌 경우 float16에서 실행하기 위해 숫자로 안전한 것으로 간주되는 Op. 예 : &lt;code&gt;Add&lt;/code&gt; 및 &lt;code&gt;AvgPool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="92dc8edbef087582af1adb6445b39acad79076ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;I[predicate]&lt;/code&gt; is the &lt;a href=&quot;https://en.wikipedia.org/wiki/Indicator_function&quot;&gt;indicator function&lt;/a&gt; for &lt;code&gt;predicate&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;I[predicate]&lt;/code&gt; 은 IS &lt;a href=&quot;https://en.wikipedia.org/wiki/Indicator_function&quot;&gt;지시 함수&lt;/a&gt; 에 대한 &lt;code&gt;predicate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c816e4bc47209b23bb47c252972fa5f76de60b64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Input()&lt;/code&gt; is used to instantiate a Keras tensor.</source>
          <target state="translated">&lt;code&gt;Input()&lt;/code&gt; 은 Keras 텐서를 인스턴스화하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5d693ce42d96a76cc03ac864f7fa80f31abb1cfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InvalidArgumentError&lt;/code&gt; if negative values are provided as an input.</source>
          <target state="translated">&lt;code&gt;InvalidArgumentError&lt;/code&gt; 음수 값이 입력으로 제공되는 경우 InvalidArgumentError</target>
        </trans-unit>
        <trans-unit id="fa494f858820008e545a55c9bf1427e289bf24af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InvalidArgumentError&lt;/code&gt;: If indices are out of range.</source>
          <target state="translated">&lt;code&gt;InvalidArgumentError&lt;/code&gt; : 인덱스가 범위를 벗어난 경우.</target>
        </trans-unit>
        <trans-unit id="183e92c05d9ca89a5a34f22897c28c0826762e22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Iterable&lt;/code&gt; of scalar &lt;code&gt;Tensor&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;Iterable&lt;/code&gt; 스칼라 &lt;code&gt;Tensor&lt;/code&gt; 객체의 반복 가능 .</target>
        </trans-unit>
        <trans-unit id="5d46c1a9509036beca1e96623e507ec5b6ba3e40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KMeansClustering.COSINE_DISTANCE&lt;/code&gt;: Cosine distance between vectors &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;v&lt;/code&gt; is defined as \(1 - (u . v) / (||u||_2 ||v||_2)\).</source>
          <target state="translated">&lt;code&gt;KMeansClustering.COSINE_DISTANCE&lt;/code&gt; : 벡터 &lt;code&gt;u&lt;/code&gt; 와 &lt;code&gt;v&lt;/code&gt; 사이의 코사인 거리는 \ (1-(u. v) / (|| u || _2 || v || _2) \)로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="dafbf0f8a2e6c6463d82d5eefe30da4047228cbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KMeansClustering.KMEANS_PLUS_PLUS_INIT&lt;/code&gt;: Use kmeans++ to choose centers from the first input batch. If the batch size is less than &lt;code&gt;num_clusters&lt;/code&gt;, a TensorFlow runtime error occurs.</source>
          <target state="translated">&lt;code&gt;KMeansClustering.KMEANS_PLUS_PLUS_INIT&lt;/code&gt; : kmeans ++를 사용하여 첫 번째 입력 배치에서 중심을 선택합니다. 배치 크기가 &lt;code&gt;num_clusters&lt;/code&gt; 보다 작은 경우 TensorFlow 런타임 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c6056cfd7dc620138decb462e1a40651764dbc3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KMeansClustering.RANDOM_INIT&lt;/code&gt;: Choose centers randomly from an input batch. If the batch size is less than &lt;code&gt;num_clusters&lt;/code&gt; then the entire batch is chosen to be initial cluster centers and the remaining centers are chosen from successive input batches.</source>
          <target state="translated">&lt;code&gt;KMeansClustering.RANDOM_INIT&lt;/code&gt; : 입력 배치에서 무작위로 중심을 선택합니다. 배치 크기가 &lt;code&gt;num_clusters&lt;/code&gt; 보다 작 으면 전체 배치가 초기 클러스터 중심으로 선택되고 나머지 센터는 연속 입력 배치에서 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="ddd821971f0ec47bca655698807b1f7e2794c4a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KMeansClustering.SQUARED_EUCLIDEAN_DISTANCE&lt;/code&gt;: Euclidean distance between vectors &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;v&lt;/code&gt; is defined as \(||u - v||_2\) which is the square root of the sum of the absolute squares of the elements' difference.</source>
          <target state="translated">&lt;code&gt;KMeansClustering.SQUARED_EUCLIDEAN_DISTANCE&lt;/code&gt; : 벡터 &lt;code&gt;u&lt;/code&gt; 와 &lt;code&gt;v&lt;/code&gt; 사이의 유클리드 거리는 요소 차이의 절대 제곱의 합의 제곱근 인 \ (|| u-v || _2 \)로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="6fddf17c85a2a6698b39edbaf575ca9a71127ca9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOCAL_VARIABLES&lt;/code&gt;: the subset of &lt;code&gt;Variable&lt;/code&gt; objects that are local to each machine. Usually used for temporarily variables, like counters. Note: use &lt;code&gt;tf.contrib.framework.local_variable&lt;/code&gt; to add to this collection.</source>
          <target state="translated">&lt;code&gt;LOCAL_VARIABLES&lt;/code&gt; : 각 머신에 로컬 인 &lt;code&gt;Variable&lt;/code&gt; 오브젝트 의 서브 세트 입니다. 일반적으로 카운터와 같은 임시 변수에 사용됩니다. 참고 : 이 컬렉션에 추가 하려면 &lt;code&gt;tf.contrib.framework.local_variable&lt;/code&gt; 을 사용 하십시오.</target>
        </trans-unit>
        <trans-unit id="4e340fe9146fb8cf952cfc270da2d8947c24e875" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LearningRateSchedule&lt;/code&gt;s can be passed in as the learning rate of optimizers in &lt;a href=&quot;../../optimizers&quot;&gt;&lt;code&gt;tf.keras.optimizers&lt;/code&gt;&lt;/a&gt;. They can be serialized and deserialized using &lt;a href=&quot;serialize&quot;&gt;&lt;code&gt;tf.keras.optimizers.schedules.serialize&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;deserialize&quot;&gt;&lt;code&gt;tf.keras.optimizers.schedules.deserialize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;LearningRateSchedule&lt;/code&gt; 은 &lt;a href=&quot;../../optimizers&quot;&gt; &lt;code&gt;tf.keras.optimizers&lt;/code&gt; &lt;/a&gt; 에서 최적화 프로그램의 학습 속도로 전달 될 수 있습니다 . &lt;a href=&quot;serialize&quot;&gt; &lt;code&gt;tf.keras.optimizers.schedules.serialize&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;deserialize&quot;&gt; &lt;code&gt;tf.keras.optimizers.schedules.deserialize&lt;/code&gt; 를&lt;/a&gt; 사용하여 직렬화 및 직렬화 해제 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ea7a6ef4ca9387c73d6601a7a157c358407f5f81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Linear activation function&lt;/code&gt; if input is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Linear activation function&lt;/code&gt; 입력이 &lt;code&gt;None&lt;/code&gt; 인 경우 선형 활성화 기능 .</target>
        </trans-unit>
        <trans-unit id="4a5a50e2529ce28e8fcb2d87311b94bbb6268601" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperator&lt;/code&gt; acting like a [batch] of Householder transformations.</source>
          <target state="translated">&lt;code&gt;LinearOperator&lt;/code&gt; 가계 변환의 [일괄] 역할을하는 LinearOperator .</target>
        </trans-unit>
        <trans-unit id="6169483f6f0427e3e35b3dc181587a614e2a51d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperator&lt;/code&gt; acting like a [batch] of permutation matrices.</source>
          <target state="translated">&lt;code&gt;LinearOperator&lt;/code&gt; 순열 행렬의 [일괄] 역할을하는 LinearOperator</target>
        </trans-unit>
        <trans-unit id="ba27049a5843096e34a96e2b59f0d180587b48c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperator&lt;/code&gt; acting like a [batch] of toeplitz matrices.</source>
          <target state="translated">&lt;code&gt;LinearOperator&lt;/code&gt; 매트릭스의 [일괄]처럼 작동하는 LinearOperator.</target>
        </trans-unit>
        <trans-unit id="5a4a2c674a152cef5388620395ea9b07a5bc4946" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperator&lt;/code&gt; acting like a [batch] square diagonal matrix.</source>
          <target state="translated">&lt;code&gt;LinearOperator&lt;/code&gt; [일괄] 정사각 행렬처럼 작동하는 LinearOperator .</target>
        </trans-unit>
        <trans-unit id="01316bddfd2eec7cf35bdeb17412ab31a8b5b077" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperator&lt;/code&gt; acting like a [batch] square identity matrix.</source>
          <target state="translated">&lt;code&gt;LinearOperator&lt;/code&gt; [일괄 처리] 정사각 행렬처럼 작동하는 LinearOperator</target>
        </trans-unit>
        <trans-unit id="19b287d172e55c01eda424be10fde0191d5b120f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperator&lt;/code&gt; acting like a [batch] square lower triangular matrix.</source>
          <target state="translated">&lt;code&gt;LinearOperator&lt;/code&gt; [일괄 처리] 정사각형 하부 삼각 행렬처럼 작동하는 LinearOperator .</target>
        </trans-unit>
        <trans-unit id="73ea1b5b4381d0451df7c42331a016f55973bad4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperator&lt;/code&gt; acting like a [batch] square tridiagonal matrix.</source>
          <target state="translated">&lt;code&gt;LinearOperator&lt;/code&gt; 는 [배치] 정사각형 삼중 대각 행렬처럼 작동합니다.</target>
        </trans-unit>
        <trans-unit id="a47c489a07c805cdde954dedda41798454bab48a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperator&lt;/code&gt; acting like a [batch] zero matrix.</source>
          <target state="translated">&lt;code&gt;LinearOperator&lt;/code&gt; [일괄] 제로 매트릭스처럼 작동하는 LinearOperator .</target>
        </trans-unit>
        <trans-unit id="e2009a250fb7c564e1be32a72833a7766fde20a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperator&lt;/code&gt; acting like a block circulant matrix.</source>
          <target state="translated">&lt;code&gt;LinearOperator&lt;/code&gt; 블록 순환 행렬처럼 작동하는 LinearOperator</target>
        </trans-unit>
        <trans-unit id="5016f220d1b9d769274ca74e7bc3f1f61fddb01a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperator&lt;/code&gt; acting like a circulant matrix.</source>
          <target state="translated">&lt;code&gt;LinearOperator&lt;/code&gt; 순환 행렬처럼 작동하는 LinearOperator</target>
        </trans-unit>
        <trans-unit id="c7405cd53d9dbeca81166dd012d367d9052dd990" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperator&lt;/code&gt; acting like a nested block circulant matrix.</source>
          <target state="translated">&lt;code&gt;LinearOperator&lt;/code&gt; 중첩 된 블록 순환 행렬처럼 작동하는 LinearOperator</target>
        </trans-unit>
        <trans-unit id="2d120becff67004fe00ff8327e46d624e9e3c287" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperator&lt;/code&gt; acting like a scaled [batch] identity matrix &lt;code&gt;A = c I&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperator&lt;/code&gt; 는 스케일링 [배치] 아이덴티티 매트릭스처럼 행동 &lt;code&gt;A = c I&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="adffb66fbc95e86f8113b4b60263ba104b809f6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperator&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;LinearOperator&lt;/code&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="36187c872304923222114d09bf82499a9db5a8a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperator&lt;/code&gt; object. If &lt;code&gt;operator.is_non_singular == False&lt;/code&gt;, an exception is raised. We do allow &lt;code&gt;operator.is_non_singular == None&lt;/code&gt;, in which case this operator will have &lt;code&gt;is_non_singular == None&lt;/code&gt;. Similarly for &lt;code&gt;is_self_adjoint&lt;/code&gt; and &lt;code&gt;is_positive_definite&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperator&lt;/code&gt; 객체. 경우 &lt;code&gt;operator.is_non_singular == False&lt;/code&gt; , 예외가 발생합니다. &lt;code&gt;operator.is_non_singular == None&lt;/code&gt; 허용합니다. 이 경우이 연산자는 &lt;code&gt;is_non_singular == None&lt;/code&gt; 입니다. 마찬가지로에 대한 &lt;code&gt;is_self_adjoint&lt;/code&gt; 및 &lt;code&gt;is_positive_definite&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2dfe5c4a9f4409f6dd486d2966de311724d94c4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperator&lt;/code&gt; or &lt;code&gt;Tensor&lt;/code&gt; with compatible shape and same &lt;code&gt;dtype&lt;/code&gt; as &lt;code&gt;self&lt;/code&gt;. See class docstring for definition of compatibility.</source>
          <target state="translated">&lt;code&gt;LinearOperator&lt;/code&gt; 또는 &lt;code&gt;Tensor&lt;/code&gt; 호환 모양과 같은과 &lt;code&gt;dtype&lt;/code&gt; 으로 &lt;code&gt;self&lt;/code&gt; . 호환성 정의는 클래스 독 스트링을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a4bf514f5f0fb827257aa38a15fe11017c20d8e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperator&lt;/code&gt; representing inverse of this matrix.</source>
          <target state="translated">&lt;code&gt;LinearOperator&lt;/code&gt; 이 행렬의 역을 나타내는 LinearOperator</target>
        </trans-unit>
        <trans-unit id="00c8aea0f3024e340cb8600afdd8c7e4b0792c12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperator&lt;/code&gt; representing the adjoint of another operator.</source>
          <target state="translated">&lt;code&gt;LinearOperator&lt;/code&gt; 다른 연산자의 인접 항목을 나타내는 LinearOperator</target>
        </trans-unit>
        <trans-unit id="756c2fb0cc93dcb2654f07eba873fc556cd1ce17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperator&lt;/code&gt; representing the inverse of another operator.</source>
          <target state="translated">&lt;code&gt;LinearOperator&lt;/code&gt; 다른 연산자의 역수를 나타내는 LinearOperator</target>
        </trans-unit>
        <trans-unit id="34abc127f9d76d1f8de1fa2c75c051a19d55d6e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperator&lt;/code&gt; subclasses should operate on a [batch] matrix with compatible shape. Class docstrings should define what is meant by compatible shape. Some subclasses may not support batching.</source>
          <target state="translated">&lt;code&gt;LinearOperator&lt;/code&gt; 서브 클래스는 호환 가능한 모양을 가진 [일괄 처리] 매트릭스에서 작동해야합니다. 클래스 docstring은 호환 가능한 모양의 의미를 정의해야합니다. 일부 하위 클래스는 일괄 처리를 지원하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd247ce36656ad29d31a6b42d7e68e5239b184f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperator&lt;/code&gt; that wraps a [batch] matrix.</source>
          <target state="translated">&lt;code&gt;LinearOperator&lt;/code&gt; [일괄 처리] 행렬을 래핑하는 LinearOperator 입니다.</target>
        </trans-unit>
        <trans-unit id="fd007a7feecaaae650ebadfcc74cb4bb15561956" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperator&lt;/code&gt; which represents the adjoint of this &lt;code&gt;LinearOperator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperator&lt;/code&gt; 이의 수반 행렬 대표 &lt;code&gt;LinearOperator&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="7dc659b6ce3fba2dc8718ff79a47916dfcf7c7d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperator&lt;/code&gt; which represents the lower triangular matrix in the Cholesky decomposition.</source>
          <target state="translated">&lt;code&gt;LinearOperator&lt;/code&gt; Cholesky 분해에서 하부 삼각 행렬을 나타내는 LinearOperator</target>
        </trans-unit>
        <trans-unit id="9bfe71b1cfa8aa681d4cdc91d66dba81ff2938bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperator&lt;/code&gt;, &lt;code&gt;Tensor&lt;/code&gt; with compatible shape and same &lt;code&gt;dtype&lt;/code&gt; as &lt;code&gt;self&lt;/code&gt;, or a blockwise iterable of &lt;code&gt;LinearOperator&lt;/code&gt;s or &lt;code&gt;Tensor&lt;/code&gt;s. See class docstring for definition of shape compatibility.</source>
          <target state="translated">&lt;code&gt;LinearOperator&lt;/code&gt; , &lt;code&gt;Tensor&lt;/code&gt; 호환 모양과 같은과 &lt;code&gt;dtype&lt;/code&gt; 같은 &lt;code&gt;self&lt;/code&gt; 또는의 블록 단위로 반복 가능한 &lt;code&gt;LinearOperator&lt;/code&gt; 의 또는 &lt;code&gt;Tensor&lt;/code&gt; 의. 모양 호환성의 정의는 클래스 독 스트링을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2df9a09d37812b194a7d31ee758f050c119031c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperatorAdjoint&lt;/code&gt; is initialized with an operator &lt;code&gt;A&lt;/code&gt;. The &lt;code&gt;solve&lt;/code&gt; and &lt;code&gt;matmul&lt;/code&gt; methods effectively flip the &lt;code&gt;adjoint&lt;/code&gt; argument. E.g.</source>
          <target state="translated">&lt;code&gt;LinearOperatorAdjoint&lt;/code&gt; 는 연산자 &lt;code&gt;A&lt;/code&gt; 로 초기화됩니다 . &lt;code&gt;solve&lt;/code&gt; 하고 &lt;code&gt;matmul&lt;/code&gt; 방법 효과적으로 플립 &lt;code&gt;adjoint&lt;/code&gt; 인수. 예 :</target>
        </trans-unit>
        <trans-unit id="ea384ae061474b95d834c72c2e78586bcf00196f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperatorBlockDiag&lt;/code&gt; is initialized with a list of operators &lt;code&gt;[op_1,...,op_J]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorBlockDiag&lt;/code&gt; 는 &lt;code&gt;[op_1,...,op_J]&lt;/code&gt; 연산자 목록으로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="e0de5fce8e1238dcffe0932fd832bcf529b28556" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperatorComposition&lt;/code&gt; is initialized with a list of operators &lt;code&gt;[op_1,...,op_J]&lt;/code&gt;. For the &lt;code&gt;matmul&lt;/code&gt; method to be well defined, the composition &lt;code&gt;op_i.matmul(op_{i+1}(x))&lt;/code&gt; must be defined. Other methods have similar constraints.</source>
          <target state="translated">&lt;code&gt;LinearOperatorComposition&lt;/code&gt; 은 연산자 &lt;code&gt;[op_1,...,op_J]&lt;/code&gt; 목록으로 초기화됩니다 . 대한 &lt;code&gt;matmul&lt;/code&gt; 방법은 잘 정의되도록 상기 조성물 &lt;code&gt;op_i.matmul(op_{i+1}(x))&lt;/code&gt; 정의되어야한다. 다른 방법에는 비슷한 제약 조건이 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f0da50fb7aa112db0b6c6df4a79824551e266f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperatorDiag&lt;/code&gt; is initialized with a (batch) vector.</source>
          <target state="translated">&lt;code&gt;LinearOperatorDiag&lt;/code&gt; 는 (배치) 벡터로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="ff0c601b97110065e272b80a044e4ff25b6b06c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperatorFullMatrix&lt;/code&gt; has exactly the same performance as would be achieved by using standard &lt;code&gt;TensorFlow&lt;/code&gt; matrix ops. Intelligent choices are made based on the following initialization hints.</source>
          <target state="translated">&lt;code&gt;LinearOperatorFullMatrix&lt;/code&gt; 는 표준 &lt;code&gt;TensorFlow&lt;/code&gt; 매트릭스 연산 을 사용하여 얻을 수있는 것과 동일한 성능을 제공 합니다. 지능적인 선택은 다음 초기화 힌트를 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="51f8054ec6565064f4a76d992483df4a8e88f48b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperatorHouseholder&lt;/code&gt; is initialized with a (batch) vector.</source>
          <target state="translated">&lt;code&gt;LinearOperatorHouseholder&lt;/code&gt; 는 (배치) 벡터로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="1865262798485f4f2c59b23c55fa5b4bedc43986" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperatorIdentity&lt;/code&gt; is initialized with &lt;code&gt;num_rows&lt;/code&gt;, and a &lt;code&gt;multiplier&lt;/code&gt; (a &lt;code&gt;Tensor&lt;/code&gt;) of shape &lt;code&gt;[B1,...,Bb]&lt;/code&gt;. &lt;code&gt;N&lt;/code&gt; is set to &lt;code&gt;num_rows&lt;/code&gt;, and the &lt;code&gt;multiplier&lt;/code&gt; determines the scale for each batch member.</source>
          <target state="translated">&lt;code&gt;LinearOperatorIdentity&lt;/code&gt; 는 &lt;code&gt;num_rows&lt;/code&gt; 및 &lt;code&gt;[B1,...,Bb]&lt;/code&gt; 모양 의 &lt;code&gt;multiplier&lt;/code&gt; ( &lt;code&gt;Tensor&lt;/code&gt; )로 초기화됩니다 . &lt;code&gt;N&lt;/code&gt; 으로 설정되어 &lt;code&gt;num_rows&lt;/code&gt; 및 &lt;code&gt;multiplier&lt;/code&gt; 각각 배치 구성원의 스케일을 결정한다.</target>
        </trans-unit>
        <trans-unit id="9c5cb76703df47ee27a927d28d680daed042e9bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperatorIdentity&lt;/code&gt; is initialized with &lt;code&gt;num_rows&lt;/code&gt;, and optionally &lt;code&gt;batch_shape&lt;/code&gt;, and &lt;code&gt;dtype&lt;/code&gt; arguments. If &lt;code&gt;batch_shape&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, this operator efficiently passes through all arguments. If &lt;code&gt;batch_shape&lt;/code&gt; is provided, broadcasting may occur, which will require making copies.</source>
          <target state="translated">&lt;code&gt;LinearOperatorIdentity&lt;/code&gt; 는 &lt;code&gt;num_rows&lt;/code&gt; 및 선택적으로 &lt;code&gt;batch_shape&lt;/code&gt; 및 &lt;code&gt;dtype&lt;/code&gt; 인수 로 초기화됩니다 . 경우 &lt;code&gt;batch_shape&lt;/code&gt; 가 없습니다 &lt;code&gt;None&lt;/code&gt; ,이 연산자는 효율적으로 모든 인수를 전달합니다. 경우 &lt;code&gt;batch_shape&lt;/code&gt; 가 제공되며, 방송은 사본을 필요로하는 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e8326e6f872dbb50656c51ac4083ef0af530f0e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperatorInversion&lt;/code&gt; is initialized with an operator &lt;code&gt;A&lt;/code&gt;. The &lt;code&gt;solve&lt;/code&gt; and &lt;code&gt;matmul&lt;/code&gt; methods are effectively swapped. E.g.</source>
          <target state="translated">&lt;code&gt;LinearOperatorInversion&lt;/code&gt; 은 연산자 &lt;code&gt;A&lt;/code&gt; 로 초기화됩니다 . 은 &lt;code&gt;solve&lt;/code&gt; 및 &lt;code&gt;matmul&lt;/code&gt; 방법은 효율적으로 교환된다. 예 :</target>
        </trans-unit>
        <trans-unit id="2ebb2266855c2b456723c55ba75e60991b4a2d73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperatorKronecker&lt;/code&gt; is initialized with a list of operators &lt;code&gt;[op_1,...,op_J]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinearOperatorKronecker&lt;/code&gt; 는 연산자 &lt;code&gt;[op_1,...,op_J]&lt;/code&gt; 목록으로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="d5624f9805397310c1cb49466097ff3f91c33676" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperatorLowRankUpdate&lt;/code&gt; represents &lt;code&gt;A = L + U D V^H&lt;/code&gt;, where</source>
          <target state="translated">&lt;code&gt;LinearOperatorLowRankUpdate&lt;/code&gt; 는 &lt;code&gt;A = L + U D V^H&lt;/code&gt; 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="f093a85dc8a46278cfd2f03edf3ed96d78bdce35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperatorLowerTriangular&lt;/code&gt; is initialized with a &lt;code&gt;Tensor&lt;/code&gt; having dimensions &lt;code&gt;[B1,...,Bb, N, N]&lt;/code&gt;. The upper triangle of the last two dimensions is ignored.</source>
          <target state="translated">&lt;code&gt;LinearOperatorLowerTriangular&lt;/code&gt; 는 크기 를 가진 &lt;code&gt;Tensor&lt;/code&gt; 로 초기화됩니다. &lt;code&gt;[B1,...,Bb, N, N]&lt;/code&gt; . 마지막 2 차원의 상단 삼각형은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="abb80522278c568afd9d46a6248cda8eeb5d5c63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperatorPermutation&lt;/code&gt; is initialized with a (batch) vector.</source>
          <target state="translated">&lt;code&gt;LinearOperatorPermutation&lt;/code&gt; 은 (배치) 벡터로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="13af377a8eaac8622cfff8d58f00c624469033b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearOperatorZeros&lt;/code&gt; is initialized with &lt;code&gt;num_rows&lt;/code&gt;, and optionally &lt;code&gt;num_columns,&lt;/code&gt;batch_shape&lt;code&gt;, and&lt;/code&gt;dtype&lt;code&gt;arguments. If&lt;/code&gt;num_columns&lt;code&gt;is&lt;/code&gt;None&lt;code&gt;, then this operator will be initialized as a square matrix. If&lt;/code&gt;batch_shape&lt;code&gt;is&lt;/code&gt;None&lt;code&gt;, this operator efficiently passes through all arguments. If&lt;/code&gt;batch_shape` is provided, broadcasting may occur, which will require making copies.</source>
          <target state="translated">&lt;code&gt;LinearOperatorZeros&lt;/code&gt; 는 &lt;code&gt;num_rows&lt;/code&gt; 및 선택적으로 &lt;code&gt;num_columns,&lt;/code&gt; batch_shape &lt;code&gt;, and&lt;/code&gt; dtype &lt;code&gt;arguments. If&lt;/code&gt; 로 초기화됩니다 . 경우 NUM_COLUMNS가 &lt;code&gt;is&lt;/code&gt; 것도 &lt;code&gt;, then this operator will be initialized as a square matrix. If&lt;/code&gt; batch_shape가 &lt;code&gt;is&lt;/code&gt; 없음 &lt;code&gt;, this operator efficiently passes through all arguments. If&lt;/code&gt; batch_shape`가 제공되는 방송 사본을 필요로하는 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f95397ed845115231cb167e4f90aa2744111b50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MEAN&lt;/code&gt;: Scalar &lt;code&gt;SUM&lt;/code&gt; divided by sum of weights. DEPRECATED.</source>
          <target state="translated">&lt;code&gt;MEAN&lt;/code&gt; : 스칼라 &lt;code&gt;SUM&lt;/code&gt; 을 을 가중치의 합으로 나눈 값입니다. 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="51253ba17e8285ee2716f1c1fe0f9ac192716249" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MEAN&lt;/code&gt;: Take the arithmetic mean (&quot;average&quot;) of the updates across replicas.</source>
          <target state="translated">&lt;code&gt;MEAN&lt;/code&gt; : 복제본에서 업데이트의 산술 평균 ( &quot;평균&quot;)을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7f4faf76778604f24e81c1c41d9f173869bb080b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MEAN&lt;/code&gt;: Take the arithmetic mean (&quot;average&quot;) of the values.</source>
          <target state="translated">&lt;code&gt;MEAN&lt;/code&gt; : 값의 산술 평균 ( &quot;평균&quot;)을 취합니다.</target>
        </trans-unit>
        <trans-unit id="a69f826582d0eeb7cd9c38fa3a8f1b53c2e9c2cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODEL_VARIABLES&lt;/code&gt;: the subset of &lt;code&gt;Variable&lt;/code&gt; objects that are used in the model for inference (feed forward). Note: use &lt;code&gt;tf.contrib.framework.model_variable&lt;/code&gt; to add to this collection.</source>
          <target state="translated">&lt;code&gt;MODEL_VARIABLES&lt;/code&gt; : 추론 (feed forward)을 위해 모델에 사용되는 &lt;code&gt;Variable&lt;/code&gt; 객체 의 하위 집합입니다 . 참고 : &lt;code&gt;tf.contrib.framework.model_variable&lt;/code&gt; 을 사용하십시오. 이 컬렉션에 추가 을 하십시오.</target>
        </trans-unit>
        <trans-unit id="1883ef54b9dc84c859799e6319528c3c4b50454e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MOVING_AVERAGE_VARIABLES&lt;/code&gt;: the subset of &lt;code&gt;Variable&lt;/code&gt; objects that will also keep moving averages. See &lt;a href=&quot;moving_average_variables&quot;&gt;&lt;code&gt;tf.compat.v1.moving_average_variables&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;code&gt;MOVING_AVERAGE_VARIABLES&lt;/code&gt; : 이동 평균을 유지하는 &lt;code&gt;Variable&lt;/code&gt; 개체 의 하위 집합입니다 . 자세한 내용은 &lt;a href=&quot;moving_average_variables&quot;&gt; &lt;code&gt;tf.compat.v1.moving_average_variables&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c72eae347f9a42f2bfece9e7a603f06d99668c22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Matrix&lt;/code&gt; is a tensor of shape &lt;code&gt;[..., M, M]&lt;/code&gt; whose inner-most 2 dimensions form square matrices. &lt;code&gt;Rhs&lt;/code&gt; is a tensor of shape &lt;code&gt;[..., M, K]&lt;/code&gt;. The &lt;code&gt;output&lt;/code&gt; is a tensor shape &lt;code&gt;[..., M, K]&lt;/code&gt;. If &lt;code&gt;adjoint&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt; then each output matrix satisfies &lt;code&gt;matrix[..., :, :] * output[..., :, :] = rhs[..., :, :]&lt;/code&gt;. If &lt;code&gt;adjoint&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt; then each output matrix satisfies &lt;code&gt;adjoint(matrix[..., :, :]) * output[..., :, :] = rhs[..., :, :]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Matrix&lt;/code&gt; 은 가장 안쪽 2 차원이 정사각 행렬을 형성하는 &lt;code&gt;[..., M, M]&lt;/code&gt; 모양의 텐서입니다 . &lt;code&gt;Rhs&lt;/code&gt; 는 모양의 텐서입니다 &lt;code&gt;[..., M, K]&lt;/code&gt; . &lt;code&gt;output&lt;/code&gt; 텐서 형상 인 &lt;code&gt;[..., M, K]&lt;/code&gt; . 경우 &lt;code&gt;adjoint&lt;/code&gt; 인 &lt;code&gt;False&lt;/code&gt; 각 출력 매트릭스 만족 &lt;code&gt;matrix[..., :, :] * output[..., :, :] = rhs[..., :, :]&lt;/code&gt; . 경우 &lt;code&gt;adjoint&lt;/code&gt; 인 &lt;code&gt;True&lt;/code&gt; 각 출력 매트릭스 만족 &lt;code&gt;adjoint(matrix[..., :, :]) * output[..., :, :] = rhs[..., :, :]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4dca992eea836b3a2622d0990a8d5cdb02de6fd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MeanTensor&lt;/code&gt; returns a tensor with the same shape of the input tensors. The mean value is updated by keeping local variables &lt;code&gt;total&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt;. The &lt;code&gt;total&lt;/code&gt; tracks the sum of the weighted values, and &lt;code&gt;count&lt;/code&gt; stores the sum of the weighted counts.</source>
          <target state="translated">&lt;code&gt;MeanTensor&lt;/code&gt; 는 입력 텐서와 동일한 모양의 텐서를 반환합니다. 평균값은 지역 변수를 &lt;code&gt;total&lt;/code&gt; 과 &lt;code&gt;count&lt;/code&gt; 로 유지하여 업데이트됩니다 . &lt;code&gt;total&lt;/code&gt; 트랙 상기 가중치의 합, 및 &lt;code&gt;count&lt;/code&gt; 기억 가중 계수의 합.</target>
        </trans-unit>
        <trans-unit id="c49973d44773b9fe822f3810a2907244f649b597" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Merge&lt;/code&gt; forwards the first tensor for become available to &lt;code&gt;output&lt;/code&gt;, and sets &lt;code&gt;value_index&lt;/code&gt; to its index in &lt;code&gt;inputs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Merge&lt;/code&gt; 는 &lt;code&gt;output&lt;/code&gt; 사용할 수있는 첫 번째 텐서를 전달하고 &lt;code&gt;value_index&lt;/code&gt; 를 &lt;code&gt;inputs&lt;/code&gt; 의 인덱스로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="6e35b14e21039983f5473f185336bdc6eb9bf718" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Merge&lt;/code&gt; forwards the first tensor to become available to &lt;code&gt;output&lt;/code&gt;, and sets &lt;code&gt;value_index&lt;/code&gt; to its index in &lt;code&gt;inputs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Merge&lt;/code&gt; 는 &lt;code&gt;output&lt;/code&gt; 사용할 수 있도록 첫 번째 텐서를 전달하고 &lt;code&gt;value_index&lt;/code&gt; 를 &lt;code&gt;inputs&lt;/code&gt; 의 인덱스로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="0a16f682bde0fb05a9a87a42b0ede6f27e967016" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Merge&lt;/code&gt; waits for at least one of the tensors in &lt;code&gt;inputs&lt;/code&gt; to become available. It is usually combined with &lt;code&gt;Switch&lt;/code&gt; to implement branching.</source>
          <target state="translated">&lt;code&gt;Merge&lt;/code&gt; 은 &lt;code&gt;inputs&lt;/code&gt; 의 텐서 중 하나 이상 을 사용할 수있을 때까지 기다립니다 . 일반적으로 &lt;code&gt;Switch&lt;/code&gt; 와 결합하여 분기를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="60024b9e542103ec020d67da3353ecf1a1bc5875" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MetaGraphDef&lt;/code&gt; protocol buffer or filename (including the path) containing a &lt;code&gt;MetaGraphDef&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MetaGraphDef&lt;/code&gt; 을 함유 한 A 완충액 또는 프로토콜 (경로 포함) 파일명 &lt;code&gt;MetaGraphDef&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="bdefee9c1710e59e412e66b1c078b519f74cfc1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MetaInfoDef&lt;/code&gt; protocol buffer.</source>
          <target state="translated">&lt;code&gt;MetaInfoDef&lt;/code&gt; 프로토콜 버퍼.</target>
        </trans-unit>
        <trans-unit id="fd862228e69d7c9ebd5adbba8a0d4d7e4e89cd5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Model&lt;/code&gt; groups layers into an object with training and inference features.</source>
          <target state="translated">&lt;code&gt;Model&lt;/code&gt; 은 훈련 및 추론 기능을 사용하여 레이어를 객체로 그룹화합니다.</target>
        </trans-unit>
        <trans-unit id="20d0d7fc723eca68de88ab974368ebbb11c7d7b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ModelCheckpoint&lt;/code&gt; callback is used in conjunction with training using &lt;code&gt;model.fit()&lt;/code&gt; to save a model or weights (in a checkpoint file) at some interval, so the model or weights can be loaded later to continue the training from the state saved.</source>
          <target state="translated">&lt;code&gt;ModelCheckpoint&lt;/code&gt; 콜백은 &lt;code&gt;model.fit()&lt;/code&gt; 을 사용하는 훈련과 함께 사용되어 모델 또는 가중치 (체크 포인트 파일에)를 일정 간격으로 저장하므로 나중에 모델 또는 가중치를로드하여 저장된 상태에서 훈련을 계속할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="69c05e8b6f7a1e553c8b20f004ed3fff53e6ec5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MonitoredSession&lt;/code&gt; can be created in &lt;code&gt;chief&lt;/code&gt; or &lt;code&gt;worker&lt;/code&gt; modes. &lt;code&gt;SingularMonitoredSession&lt;/code&gt; is always created as &lt;code&gt;chief&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MonitoredSession&lt;/code&gt; &lt;code&gt;chief&lt;/code&gt; 또는 &lt;code&gt;worker&lt;/code&gt; 모드 에서 모니터링 된 세션 을 만들 수 있습니다 . &lt;code&gt;SingularMonitoredSession&lt;/code&gt; 는 언제나처럼 만든 &lt;code&gt;chief&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d208d0b059fdf7b2cec251de05cb2ef6127d171" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MonitoredSession&lt;/code&gt; handles &lt;code&gt;AbortedError&lt;/code&gt; and &lt;code&gt;UnavailableError&lt;/code&gt; for distributed settings, but &lt;code&gt;SingularMonitoredSession&lt;/code&gt; does not.</source>
          <target state="translated">&lt;code&gt;MonitoredSession&lt;/code&gt; 은 분산 설정에 대해 &lt;code&gt;AbortedError&lt;/code&gt; 및 &lt;code&gt;UnavailableError&lt;/code&gt; 를 처리 하지만 &lt;code&gt;SingularMonitoredSession&lt;/code&gt; 은 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="348adaf1e94dc64ef50a1103a9561b67784d9528" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;N!&lt;/code&gt; denotes &lt;code&gt;N&lt;/code&gt; factorial.</source>
          <target state="translated">&lt;code&gt;N!&lt;/code&gt; &lt;code&gt;N&lt;/code&gt; 계승을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="9765481c13812f7ef03fd7cfd0bf62ab2732d368" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;N!&lt;/code&gt; is &lt;code&gt;N&lt;/code&gt; factorial, and,</source>
          <target state="translated">&lt;code&gt;N!&lt;/code&gt; 인 &lt;code&gt;N&lt;/code&gt; 에 , 계승하며</target>
        </trans-unit>
        <trans-unit id="7b36adb0f915a615f6fb554f9ca43cdca2015c44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;N&lt;/code&gt; is the number of elements in &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;N&lt;/code&gt; 은 &lt;code&gt;x&lt;/code&gt; 의 원소 개수입니다</target>
        </trans-unit>
        <trans-unit id="77845978e3f85a100eafb3e7e136804fa4ed083c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;N&lt;/code&gt; is the size of the segment being reduced.</source>
          <target state="translated">&lt;code&gt;N&lt;/code&gt; 은 축소되는 세그먼트의 크기입니다.</target>
        </trans-unit>
        <trans-unit id="09ec567f42b640ef4d3b0326b21e85ab4ba52422" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NCCL&lt;/code&gt;: Use ncclAllReduce for all-reduce, and ring algorithms for all-gather.</source>
          <target state="translated">&lt;code&gt;NCCL&lt;/code&gt; : all-reduce에는 ncclAllReduce를 사용하고 all-gather에는 링 알고리즘을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="fb995cc17b82ada6e68f3f82f2eb04effb6fd370" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NONE&lt;/code&gt;: Indicates that [None] will be returned if there is no path from x to y</source>
          <target state="translated">&lt;code&gt;NONE&lt;/code&gt; : x에서 y까지의 경로가 없으면 [없음]이 반환됨을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ac7f5cf6d5264e91adfb2ea620e782a0bc00b41c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NONE&lt;/code&gt;: Indicates that there will only be one copy of the variable, so there is no need to sync.</source>
          <target state="translated">&lt;code&gt;NONE&lt;/code&gt; : 변수 사본이 하나만 있으므로 동기화 할 필요가 없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="fc625c70fae6ceeef417cb12054a9e721bd78c24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NONE&lt;/code&gt;: This is the default, giving an error if you use a variable-update operation with multiple replicas.</source>
          <target state="translated">&lt;code&gt;NONE&lt;/code&gt; : 기본값으로 여러 복제본에 변수 업데이트 작업을 사용하는 경우 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="05c3648358204c2c09c503a3451e468548766eb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NONE&lt;/code&gt;: Un-reduced weighted losses with the same shape as input.</source>
          <target state="translated">&lt;code&gt;NONE&lt;/code&gt; : 입력과 동일한 모양으로 감소되지 않은 가중 손실.</target>
        </trans-unit>
        <trans-unit id="37a475332b166a7cfbd8c37b2bba235d24daf2bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NONE&lt;/code&gt;: Weighted losses with one dimension reduced (axis=-1, or axis specified by loss function). When this reduction type used with built-in Keras training loops like &lt;code&gt;fit&lt;/code&gt;/&lt;code&gt;evaluate&lt;/code&gt;, the unreduced vector loss is passed to the optimizer but the reported loss will be a scalar value.</source>
          <target state="translated">&lt;code&gt;NONE&lt;/code&gt; : 1 차원이 감소 된 가중 손실 (축 = 1 또는 손실 함수로 지정된 축). 내장 Keras 트레이닝 루프와 함께 사용되는이 축소 유형이 &lt;code&gt;fit&lt;/code&gt; / &lt;code&gt;evaluate&lt;/code&gt; 과 같이 루프 되지 않으면 감소되지 않은 벡터 손실이 옵티 마이저로 전달되지만보고 된 손실은 스칼라 값이됩니다.</target>
        </trans-unit>
        <trans-unit id="e3789fa0ef761e033de19a91cea03ddff230d97e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NOT_REPARAMETERIZED&lt;/code&gt;: Samples from the distribution are not fully reparameterized, and straight-through gradients are either partially unsupported or are not supported at all. In this case, for purposes of e.g. RL or variational inference, it is generally safest to wrap the sample results in a &lt;code&gt;stop_gradients&lt;/code&gt; call and use policy gradients / surrogate loss instead.</source>
          <target state="translated">&lt;code&gt;NOT_REPARAMETERIZED&lt;/code&gt; : 분포의 샘플이 완전히 다시 매개 변수화되지 않고 직선 그래디언트가 부분적으로 지원되지 않거나 전혀 지원되지 않습니다. 이 경우, 예를 들어 RL 또는 변동 추론의 목적으로, 샘플 결과를 &lt;code&gt;stop_gradients&lt;/code&gt; 호출 로 랩핑하고 대신 정책 그라디언트 / 대리 손실을 사용 하는 것이 가장 안전합니다 .</target>
        </trans-unit>
        <trans-unit id="225328d8276ebf6c759166e0d3241532c0dd5222" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt; (default) means that the output of the model will be the 4D tensor output of the last convolutional block.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; (기본값)은 모델의 출력이 마지막 컨벌루션 블록의 4D 텐서 출력이됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="bcb7bcc3758e7e8f6102ce3725c06d461b21e84f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt; (random initialization) or &lt;code&gt;imagenet&lt;/code&gt; (ImageNet weights)</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; (무작위 초기화) 또는 &lt;code&gt;imagenet&lt;/code&gt; (ImageNet 가중치)</target>
        </trans-unit>
        <trans-unit id="2626c53f7aec2e64f4f2d49245ff84e1a580aa73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt; means that the output of the model will be the 4D tensor output of the last convolutional block.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; 은 모델의 출력이 마지막 컨볼 루션 블록의 4D 텐서 출력이됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="f28023b87848b2f6ce6fe05552a16e4f94522dad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt; means that the output of the model will be the 4D tensor output of the last convolutional layer.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; 은 모델의 출력이 마지막 컨벌루션 레이어의 4D 텐서 출력이됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="b6fea456a9415a02fa29314350c0e77ca10102e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt;, a tuple of, or a single &lt;a href=&quot;../../../autograph/experimental/feature&quot;&gt;&lt;code&gt;tf.autograph.experimental.Feature&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; , 튜플 또는 단일 &lt;a href=&quot;../../../autograph/experimental/feature&quot;&gt; &lt;code&gt;tf.autograph.experimental.Feature&lt;/code&gt; &lt;/a&gt; 값.</target>
        </trans-unit>
        <trans-unit id="3eca6b588781ddebb5ad04c6b4ed412c8efa364c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt;, a tuple of, or a single &lt;a href=&quot;experimental/feature&quot;&gt;&lt;code&gt;tf.autograph.experimental.Feature&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; , 튜플 또는 단일 &lt;a href=&quot;experimental/feature&quot;&gt; &lt;code&gt;tf.autograph.experimental.Feature&lt;/code&gt; &lt;/a&gt; 값.</target>
        </trans-unit>
        <trans-unit id="cea4951711b29c3d649ed1af185093ec9dc528d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt;, in which case only TRAINABLE variables specified in &lt;code&gt;var_name_to_vocab_info&lt;/code&gt; will be warm-started.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; ,이 경우 &lt;code&gt;var_name_to_vocab_info&lt;/code&gt; 에 지정된 TRAINABLE 변수 만 웜 스타트됩니다.</target>
        </trans-unit>
        <trans-unit id="3d356026bffd94f50767c36f88daddf198886370" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ONLY_FIRST_REPLICA&lt;/code&gt;: This is for when every replica is performing the same update, but we only want to perform the update once. Used, e.g., for the global step counter.</source>
          <target state="translated">&lt;code&gt;ONLY_FIRST_REPLICA&lt;/code&gt; : 모든 복제본이 동일한 업데이트를 수행하지만 업데이트를 한 번만 수행하려는 경우를위한 것입니다. 예를 들어, 글로벌 스텝 카운터에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f8aeeffd38cdb030c59d46cecf811f3a7f5e8861" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ONLY_FIRST_TOWER&lt;/code&gt;: Deprecated alias for &lt;code&gt;ONLY_FIRST_REPLICA&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ONLY_FIRST_TOWER&lt;/code&gt; : 사용되지 않고 별칭 &lt;code&gt;ONLY_FIRST_REPLICA&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="128475d3e22bc4c3d0fa4f822d772a9aae66e8bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ON_READ&lt;/code&gt;: Indicates that the variable will be aggregated across devices when it is read (eg. when checkpointing or when evaluating an op that uses the variable).</source>
          <target state="translated">&lt;code&gt;ON_READ&lt;/code&gt; : 변수를 읽을 때 (예 : 검사 점 또는 변수를 사용하는 op를 평가할 때) 장치에서 변수가 집계됨을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f3a7b127d83b4c4b45fd8e24bfc01ee6b572bc55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ON_WRITE&lt;/code&gt;: Indicates that the variable will be updated across devices every time it is written.</source>
          <target state="translated">&lt;code&gt;ON_WRITE&lt;/code&gt; : 변수가 쓰여질 때마다 장치에서 변수가 업데이트됨을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="13820b546627e3da812450371ed5dbed5a37ac44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Operation&lt;/code&gt; or &lt;code&gt;Tensor&lt;/code&gt; to benchmark.</source>
          <target state="translated">&lt;code&gt;Operation&lt;/code&gt; 벤치마킹 할 작업 또는 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05dbc0e11c798679c1e4cae9e31425eb9c31258d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Operation&lt;/code&gt; that increments &lt;code&gt;true_positives&lt;/code&gt; and &lt;code&gt;false_negatives&lt;/code&gt; variables appropriately and whose value matches &lt;code&gt;recall&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Operation&lt;/code&gt; &lt;code&gt;true_positives&lt;/code&gt; 및 &lt;code&gt;false_negatives&lt;/code&gt; 변수를 적절하게 증가 시키고 값이 &lt;code&gt;recall&lt;/code&gt; 과 일치하는 연산 입니다 .</target>
        </trans-unit>
        <trans-unit id="feedbc0da5ad613e8b50f6a7d64919f360d543ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Operation&lt;/code&gt; that increments &lt;code&gt;true_positives&lt;/code&gt; and &lt;code&gt;false_negatives&lt;/code&gt; variables appropriately, and whose value matches &lt;code&gt;recall&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Operation&lt;/code&gt; that increments &lt;code&gt;true_positives&lt;/code&gt; and &lt;code&gt;false_negatives&lt;/code&gt; variables appropriately, and whose value matches &lt;code&gt;recall&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f9a8d151bb7f91b2a774ed5a8a3f372a9f205fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Operation&lt;/code&gt; that increments &lt;code&gt;true_positives&lt;/code&gt; and &lt;code&gt;false_positives&lt;/code&gt; variables appropriately and whose value matches &lt;code&gt;precision&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Operation&lt;/code&gt; that increments &lt;code&gt;true_positives&lt;/code&gt; and &lt;code&gt;false_positives&lt;/code&gt; variables appropriately and whose value matches &lt;code&gt;precision&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a423f72ba659214704654dfae6dea50316dc094" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Operation&lt;/code&gt; that increments &lt;code&gt;true_positives&lt;/code&gt; and &lt;code&gt;false_positives&lt;/code&gt; variables appropriately, and whose value matches &lt;code&gt;precision&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Operation&lt;/code&gt; that increments &lt;code&gt;true_positives&lt;/code&gt; and &lt;code&gt;false_positives&lt;/code&gt; variables appropriately, and whose value matches &lt;code&gt;precision&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b229d753952adb37ea8d356efc23f5bbc3a84b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Operation&lt;/code&gt; that increments variables appropriately, and whose value matches &lt;code&gt;metric&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Operation&lt;/code&gt; that increments variables appropriately, and whose value matches &lt;code&gt;metric&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4846ecaa32d9d093001aec7c1cc6c90dd058b1cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Operation&lt;/code&gt;. Used by all supervisors to run initializations that should run for every new supervisor instance. By default these are table initializers and initializers for local variables. If &lt;code&gt;None&lt;/code&gt;, no further per supervisor-instance initialization is done automatically.</source>
          <target state="translated">&lt;code&gt;Operation&lt;/code&gt; . 모든 감독자가 모든 새 감독자 인스턴스에 대해 실행해야하는 초기화를 실행하는 데 사용됩니다. 기본적으로 이들은 테이블 이니셜 라이저와 지역 변수에 대한 이니셜 라이저입니다. 경우 &lt;code&gt;None&lt;/code&gt; , 더 이상 당 감독관 인스턴스 초기화가 자동으로 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f48b2270dc582b45a59dcc86dccbce33f466af54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Operation&lt;/code&gt;. Used by chief supervisors to initialize the model when it can not be recovered. Defaults to an &lt;code&gt;Operation&lt;/code&gt; that initializes all global variables. If &lt;code&gt;None&lt;/code&gt;, no initialization is done automatically unless you pass a value for &lt;code&gt;init_fn&lt;/code&gt;, see below.</source>
          <target state="translated">&lt;code&gt;Operation&lt;/code&gt; . 모델을 복구 할 수없는 경우 수석 감독자가 모델을 초기화하는 데 사용합니다. 기본값은 모든 전역 변수를 초기화 하는 &lt;code&gt;Operation&lt;/code&gt; 입니다. 경우 &lt;code&gt;None&lt;/code&gt; 당신이 값 통과하지 않는 한 초기화가 자동으로 수행되지 &lt;code&gt;init_fn&lt;/code&gt; 을 , 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6de8decc863d426d6327672f50feb2cc12c1958b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ops&lt;/code&gt; that expect iterables of &lt;code&gt;Tensor&lt;/code&gt; can call this to validate input. Useful since &lt;code&gt;Tensor&lt;/code&gt;, &lt;code&gt;ndarray&lt;/code&gt;, byte/text type are all iterables themselves.</source>
          <target state="translated">&lt;code&gt;Ops&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 의 이터 러블 을 기대하는 작전 은 이것을 입력하여 입력을 검증 할 수 있습니다. &lt;code&gt;Tensor&lt;/code&gt; , &lt;code&gt;ndarray&lt;/code&gt; , byte / text 유형은 모두 반복 가능 하므로 유용 합니다.</target>
        </trans-unit>
        <trans-unit id="0aad4f8b8bbd83a0280d4440e11fcef0191b67d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Optional&lt;/code&gt; can only be used by values that are convertible to &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;CompositeTensor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Optional&lt;/code&gt; 은 &lt;code&gt;Tensor&lt;/code&gt; 또는 &lt;code&gt;CompositeTensor&lt;/code&gt; 로 변환 가능한 값으로 만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a4a2a55c2e36de9d9c9026acd7b93db532ccdf6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PER_WORKER&lt;/code&gt;: The input function will be called on each worker independently, creating as many input pipelines as number of workers. Replicas will dequeue from the local Dataset on their worker. &lt;a href=&quot;strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt; doesn't manage any state sharing between such separate input pipelines.</source>
          <target state="translated">&lt;code&gt;PER_WORKER&lt;/code&gt; : 각 작업자마다 입력 함수가 독립적으로 호출되어 작업자 수만큼 입력 파이프 라인을 만듭니다. 작업자의 로컬 데이터 세트에서 복제본이 대기열에서 제외됩니다. &lt;a href=&quot;strategy&quot;&gt; &lt;code&gt;tf.distribute.Strategy&lt;/code&gt; &lt;/a&gt; 는 이러한 개별 입력 파이프 라인 간의 상태 공유를 관리하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5f10e9b6438ffe9f0e0ab39a181cdce6c12db17b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PREDICT&lt;/code&gt;: predication/inference mode.</source>
          <target state="translated">&lt;code&gt;PREDICT&lt;/code&gt; : 예측 / 추론 모드.</target>
        </trans-unit>
        <trans-unit id="f32213b1ccc49d2747f4718fbc046e0cce39931c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PhysicalDevice&lt;/code&gt; to configure</source>
          <target state="translated">&lt;code&gt;PhysicalDevice&lt;/code&gt; 구성 할 물리적 장치</target>
        </trans-unit>
        <trans-unit id="b376f02e0db984a0343cc26319d5ba7a9b613248" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PhysicalDevice&lt;/code&gt; to query</source>
          <target state="translated">&lt;code&gt;PhysicalDevice&lt;/code&gt; 쿼리 할 PhysicalDevice</target>
        </trans-unit>
        <trans-unit id="ea61bbaaa72eca4ab3c9d1fa2edece250e860cc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QUEUE_RUNNERS&lt;/code&gt;: the &lt;code&gt;QueueRunner&lt;/code&gt; objects that are used to produce input for a computation. See &lt;a href=&quot;train/start_queue_runners&quot;&gt;&lt;code&gt;tf.compat.v1.train.start_queue_runners&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;code&gt;QUEUE_RUNNERS&lt;/code&gt; : 계산을위한 입력을 생성하는 데 사용되는 &lt;code&gt;QueueRunner&lt;/code&gt; 객체. 자세한 내용은 &lt;a href=&quot;train/start_queue_runners&quot;&gt; &lt;code&gt;tf.compat.v1.train.start_queue_runners&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="93ce2b4714fdff165a519e66b9363c76b3749a7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REGULARIZATION_LOSSES&lt;/code&gt;: regularization losses collected during graph construction.</source>
          <target state="translated">&lt;code&gt;REGULARIZATION_LOSSES&lt;/code&gt; : 그래프 구성 중에 수집 된 정규화 손실.</target>
        </trans-unit>
        <trans-unit id="e13b285f5e6ba068f951d53e4fe62aefa37d275c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RING&lt;/code&gt;: TensorFlow's ring algorithms for all-reduce and all-gather.</source>
          <target state="translated">&lt;code&gt;RING&lt;/code&gt; : All-reduce 및 All-Gather를위한 TensorFlow의 링 알고리즘.</target>
        </trans-unit>
        <trans-unit id="5ae7fbdb9a01f77ccd3a8a91a3fbeb99c5a3a293" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RaggedTensor&lt;/code&gt;s with multiple ragged dimensions can be defined by using a nested &lt;code&gt;RaggedTensor&lt;/code&gt; for the &lt;code&gt;values&lt;/code&gt; tensor. Each nested &lt;code&gt;RaggedTensor&lt;/code&gt; adds a single ragged dimension.</source>
          <target state="translated">&lt;code&gt;RaggedTensor&lt;/code&gt; 의 여러 비정형 치수는 중첩하여 정의 될 수 &lt;code&gt;RaggedTensor&lt;/code&gt; 을 대한 &lt;code&gt;values&lt;/code&gt; 텐서. 중첩 된 각 &lt;code&gt;RaggedTensor&lt;/code&gt; 는 단일 비정형 치수를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="158a510a60c70ce70a7020d81a4bb1a97bab8649" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RaggedTensor&lt;/code&gt;s with uniform inner dimensions can be defined by using a multidimensional &lt;code&gt;Tensor&lt;/code&gt; for &lt;code&gt;values&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RaggedTensor&lt;/code&gt; 내부 치수가 균일 한 RaggedTensor 는 &lt;code&gt;values&lt;/code&gt; 다차원 &lt;code&gt;Tensor&lt;/code&gt; 를 사용하여 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4912ca1cded22bc9712ec8718be630b6d2963b42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RaggedTensor&lt;/code&gt;s with uniform outer dimensions can be defined by using one or more &lt;code&gt;RaggedTensor&lt;/code&gt; with a &lt;code&gt;uniform_row_length&lt;/code&gt; row-partitioning tensor. For example, a &lt;code&gt;RaggedTensor&lt;/code&gt; with shape &lt;code&gt;[2, 2, None]&lt;/code&gt; can be constructed with this method from a &lt;code&gt;RaggedTensor&lt;/code&gt; values with shape &lt;code&gt;[4, None]&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;RaggedTensor&lt;/code&gt; 의 균일 한 외부 치수는 하나 이상의 이용하여 정의 될 수 &lt;code&gt;RaggedTensor&lt;/code&gt; A의 &lt;code&gt;uniform_row_length&lt;/code&gt; 행 분할 텐서. 예를 들어, &lt;code&gt;RaggedTensor&lt;/code&gt; 형상 &lt;code&gt;[2, 2, None]&lt;/code&gt; (A)로부터이 방법으로 구성 될 수 &lt;code&gt;RaggedTensor&lt;/code&gt; 의 형상과 값 &lt;code&gt;[4, None]&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7df074e114c244c808dc6a0a3cda64c124f20609" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RunConfig&lt;/code&gt; object to configure the runtime settings.</source>
          <target state="translated">&lt;code&gt;RunConfig&lt;/code&gt; 런타임 설정을 구성하는 RunConfig 개체입니다.</target>
        </trans-unit>
        <trans-unit id="a44ddbd5090acfbc5881fb36359bc7533b629084" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RunConfig&lt;/code&gt; to config &lt;code&gt;Estimator&lt;/code&gt;. Allows setting up things in &lt;code&gt;model_fn&lt;/code&gt; based on configuration such as &lt;code&gt;num_ps_replicas&lt;/code&gt;, or &lt;code&gt;model_dir&lt;/code&gt;. Defaults to &lt;code&gt;None&lt;/code&gt;. If both &lt;code&gt;config.model_dir&lt;/code&gt; and the &lt;code&gt;model_dir&lt;/code&gt; argument (above) are specified the &lt;code&gt;model_dir&lt;/code&gt;&lt;strong&gt;argument&lt;/strong&gt; takes precedence.</source>
          <target state="translated">&lt;code&gt;RunConfig&lt;/code&gt; 는 config (설정)하기 &lt;code&gt;Estimator&lt;/code&gt; . 에 가지 설정을 할 수 있습니다 &lt;code&gt;model_fn&lt;/code&gt; 을 같은 구성에 따라 &lt;code&gt;num_ps_replicas&lt;/code&gt; , 또는 &lt;code&gt;model_dir&lt;/code&gt; . 기본값은 &lt;code&gt;None&lt;/code&gt; 입니다. 두 경우 &lt;code&gt;config.model_dir&lt;/code&gt; 과 &lt;code&gt;model_dir&lt;/code&gt; 의 인수가 (위) 지정된 &lt;code&gt;model_dir&lt;/code&gt; 의&lt;strong&gt;인수가&lt;/strong&gt; 우선합니다.</target>
        </trans-unit>
        <trans-unit id="43103980ef319ac776d4ba5b09fd11cc903dae7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RunMetadata&lt;/code&gt; from the &lt;code&gt;Session.run()&lt;/code&gt; call.</source>
          <target state="translated">&lt;code&gt;RunMetadata&lt;/code&gt; &lt;code&gt;Session.run()&lt;/code&gt; 호출 의 RunMetadata</target>
        </trans-unit>
        <trans-unit id="8a96b652cbdf82fc2c7e611b51d665623ca1056c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RunOptions&lt;/code&gt; from the &lt;code&gt;Session.run()&lt;/code&gt; call.</source>
          <target state="translated">&lt;code&gt;RunOptions&lt;/code&gt; &lt;code&gt;Session.run()&lt;/code&gt; 호출 의 RunOptions .</target>
        </trans-unit>
        <trans-unit id="a4885af7529a00f4fcf2b3345e0ac469071fd3fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SCALED&lt;/code&gt; mode matches the quantization approach used in &lt;code&gt;QuantizeAndDequantize{V2|V3}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SCALED&lt;/code&gt; 모드는 &lt;code&gt;QuantizeAndDequantize{V2|V3}&lt;/code&gt; 사용 된 양자화 방식과 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="ea8dfef3ac0c3b9c6afbde209ad1d905519e26e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SUM&lt;/code&gt;: Add all the values.</source>
          <target state="translated">&lt;code&gt;SUM&lt;/code&gt; : 모든 값을 더합니다.</target>
        </trans-unit>
        <trans-unit id="9af1b2fa34389873a957ecd488c58adb1d0e435e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SUM&lt;/code&gt;: Add the updates across replicas.</source>
          <target state="translated">&lt;code&gt;SUM&lt;/code&gt; : 복제본 전체에 업데이트를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="926fa86bb9b4856c544d164b4bf965a77a2247ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SUM&lt;/code&gt;: Scalar sum of weighted losses.</source>
          <target state="translated">&lt;code&gt;SUM&lt;/code&gt; : 가중 손실 스칼라 합.</target>
        </trans-unit>
        <trans-unit id="3c37a380a9e2aea3957ad7be11c87be42906d53d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SUMMARIES&lt;/code&gt;: the summary &lt;code&gt;Tensor&lt;/code&gt; objects that have been created in the graph. See &lt;a href=&quot;summary/merge_all&quot;&gt;&lt;code&gt;tf.compat.v1.summary.merge_all&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;code&gt;SUMMARIES&lt;/code&gt; : 요약 &lt;code&gt;Tensor&lt;/code&gt; 그래프에서 생성 된 개체. 자세한 내용은 &lt;a href=&quot;summary/merge_all&quot;&gt; &lt;code&gt;tf.compat.v1.summary.merge_all&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="892bddafb4ced85d808184763ac6af398c8a797e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SUM_BY_NONZERO_WEIGHTS&lt;/code&gt;: Same as &lt;code&gt;SUM_OVER_NONZERO_WEIGHTS&lt;/code&gt;. DEPRECATED.</source>
          <target state="translated">&lt;code&gt;SUM_BY_NONZERO_WEIGHTS&lt;/code&gt; : 동일 &lt;code&gt;SUM_OVER_NONZERO_WEIGHTS&lt;/code&gt; . 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ed3c153fb3e818a05033c1987078991ca16780fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SUM_OVER_BATCH_SIZE&lt;/code&gt;: Scalar &lt;code&gt;SUM&lt;/code&gt; divided by number of elements in losses.</source>
          <target state="translated">&lt;code&gt;SUM_OVER_BATCH_SIZE&lt;/code&gt; : 스칼라 &lt;code&gt;SUM&lt;/code&gt; 을 손실 요소 수로 나눈 값입니다.</target>
        </trans-unit>
        <trans-unit id="6e4f68bb84927e4f918e370feb01bb3821d0d4eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SUM_OVER_BATCH_SIZE&lt;/code&gt;: Scalar &lt;code&gt;SUM&lt;/code&gt; divided by number of elements in losses. This reduction type is not supported when used with &lt;a href=&quot;../../distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt; outside of built-in training loops like &lt;a href=&quot;../../keras&quot;&gt;&lt;code&gt;tf.keras&lt;/code&gt;&lt;/a&gt;&lt;code&gt;compile&lt;/code&gt;/&lt;code&gt;fit&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SUM_OVER_BATCH_SIZE&lt;/code&gt; : 스칼라 &lt;code&gt;SUM&lt;/code&gt; 을 손실 요소 수로 나눈 값입니다. 이 축소 유형은 &lt;a href=&quot;../../keras&quot;&gt; &lt;code&gt;tf.keras&lt;/code&gt; &lt;/a&gt; &lt;code&gt;compile&lt;/code&gt; / &lt;code&gt;fit&lt;/code&gt; 과 같은 기본 제공 훈련 루프 외부에서 &lt;a href=&quot;../../distribute/strategy&quot;&gt; &lt;code&gt;tf.distribute.Strategy&lt;/code&gt; &lt;/a&gt; 와 함께 사용할 때는 지원되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="88dfc1f8491dd303ac0cb407d9be5fd75bca40f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SUM_OVER_NONZERO_WEIGHTS&lt;/code&gt;: Scalar &lt;code&gt;SUM&lt;/code&gt; divided by number of non-zero weights. DEPRECATED.</source>
          <target state="translated">&lt;code&gt;SUM_OVER_NONZERO_WEIGHTS&lt;/code&gt; : 스칼라 &lt;code&gt;SUM&lt;/code&gt; 을 0이 아닌 가중치 수로 나눈 값입니다. 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a6e85627569224d8ce79ffb53ddf42ac2b948c0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SaveSliceInfoDef&lt;/code&gt; protocol buffer. If not &lt;code&gt;None&lt;/code&gt;, recreates the SaveSliceInfo object its contents. &lt;code&gt;save_slice_info_def&lt;/code&gt; and other arguments are mutually exclusive.</source>
          <target state="translated">&lt;code&gt;SaveSliceInfoDef&lt;/code&gt; 프로토콜 버퍼. 그렇지 않으면 &lt;code&gt;None&lt;/code&gt; , 재현하지 않는 SaveSliceInfo는 그 내용을 객체. &lt;code&gt;save_slice_info_def&lt;/code&gt; 및 기타 인수는 상호 배타적입니다.</target>
        </trans-unit>
        <trans-unit id="130f7c7fb1133be7cda605fc627f46ef30fb2036" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Saver&lt;/code&gt; object, used for saving.</source>
          <target state="translated">&lt;code&gt;Saver&lt;/code&gt; 저장에 사용되는 Saver 개체입니다.</target>
        </trans-unit>
        <trans-unit id="15d9dcd8ae421f94351f56d3ac9993f489a8b460" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SaverDef.CheckpointFormatVersion&lt;/code&gt;, defaults to &lt;code&gt;SaverDef.V2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SaverDef.CheckpointFormatVersion&lt;/code&gt; , 기본값은 &lt;code&gt;SaverDef.V2&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="432f1a7c937a2ff0ba33fc50c73cb8e8ce96c8bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SaverDef&lt;/code&gt; protocol buffer.</source>
          <target state="translated">&lt;code&gt;SaverDef&lt;/code&gt; 프로토콜 버퍼.</target>
        </trans-unit>
        <trans-unit id="a37844d63f813605945e4b65d85ba2e639127da9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Scaffold&lt;/code&gt; to get summary_op if it's not provided.</source>
          <target state="translated">&lt;code&gt;Scaffold&lt;/code&gt; 제공되지 않은 경우 summary_op을 가져 오는 스캐 폴드 입니다.</target>
        </trans-unit>
        <trans-unit id="335ec782d50fedf0a8708eb68ab3828aa380667e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Scaffold&lt;/code&gt;, use to get saver object.</source>
          <target state="translated">&lt;code&gt;Scaffold&lt;/code&gt; , 보호기 개체를 가져 오는 데 사용합니다.</target>
        </trans-unit>
        <trans-unit id="c9e554590906c6f7f707a1eb89bfc1459ba5e287" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sensitivity&lt;/code&gt; measures the proportion of actual positives that are correctly identified as such (tp / (tp + fn)). &lt;code&gt;Specificity&lt;/code&gt; measures the proportion of actual negatives that are correctly identified as such (tn / (tn + fp)).</source>
          <target state="translated">&lt;code&gt;Sensitivity&lt;/code&gt; 는 정확하게 식별 된 실제 양성의 비율을 측정합니다 (tp / (tp + fn)). &lt;code&gt;Specificity&lt;/code&gt; 는 정확히 식별 된 실제 음의 비율을 측정합니다 (tn / (tn + fp)).</target>
        </trans-unit>
        <trans-unit id="068cadc5210588816ff86d8a2328a528b1c1d554" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sequence&lt;/code&gt; are a safer way to do multiprocessing. This structure guarantees that the network will only train once on each sample per epoch which is not the case with generators.</source>
          <target state="translated">&lt;code&gt;Sequence&lt;/code&gt; 는 멀티 프로세싱을 수행하는보다 안전한 방법입니다. 이 구조는 네트워크가 에포크 (epoch) 당 각 샘플에 대해 한 번만 훈련하도록 보장합니다.</target>
        </trans-unit>
        <trans-unit id="9483e8fe6ab5ad503431358745e00afb6a0a4fb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sequential&lt;/code&gt; groups a linear stack of layers into a &lt;a href=&quot;model&quot;&gt;&lt;code&gt;tf.keras.Model&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Sequential&lt;/code&gt; 은 계층의 선형 스택을 &lt;a href=&quot;model&quot;&gt; &lt;code&gt;tf.keras.Model&lt;/code&gt; &lt;/a&gt; 로 그룹화 합니다.</target>
        </trans-unit>
        <trans-unit id="6e4d193094f13fac796923a71add04a2de781000" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sequential&lt;/code&gt; provides training and inference features on this model.</source>
          <target state="translated">&lt;code&gt;Sequential&lt;/code&gt; 은이 모델에 대한 교육 및 추론 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="fe2e3f99438a25ec9501a1f3ca199be2da0f9fbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Session&lt;/code&gt; object to use for timing.</source>
          <target state="translated">&lt;code&gt;Session&lt;/code&gt; 타이밍에 사용할 세션 개체입니다.</target>
        </trans-unit>
        <trans-unit id="8f73e85296e46b3bc8b0d4eb70464be76b2fa146" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Session&lt;/code&gt; used to run the queue ops. Defaults to the default session.</source>
          <target state="translated">&lt;code&gt;Session&lt;/code&gt; 대기열 작업을 실행하는 데 사용되는 세션 입니다. 기본값은 기본 세션입니다.</target>
        </trans-unit>
        <trans-unit id="850fcb41fdcf3678fa49efb482aacf2afb39f0f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SessionManager&lt;/code&gt;, which manages Session creation and recovery. If it is &lt;code&gt;None&lt;/code&gt;, a default &lt;code&gt;SessionManager&lt;/code&gt; will be created with the set of arguments passed in for backwards compatibility.</source>
          <target state="translated">&lt;code&gt;SessionManager&lt;/code&gt; 세션 생성 및 복구를 관리하는 SessionManager . 이없는 경우 &lt;code&gt;None&lt;/code&gt; , 기본 &lt;code&gt;SessionManager&lt;/code&gt; 에는 이전 버전과의 호환성에 전달 된 인수의 세트로 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="6caf38149252dbdc0d3aec537d4bc59980a814ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SparseTensor&lt;/code&gt; format expected by &lt;code&gt;embedding_lookup_sparse&lt;/code&gt;: &lt;code&gt;sp_ids&lt;/code&gt;&lt;code&gt;sp_weights&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SparseTensor&lt;/code&gt; 의 예상 형식 &lt;code&gt;embedding_lookup_sparse&lt;/code&gt; : &lt;code&gt;sp_ids&lt;/code&gt; 의 &lt;code&gt;sp_weights&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="03fc1cc2989b99092df77cf2888c97fbe5f4fc19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SparseTensor&lt;/code&gt; format expected by &lt;code&gt;sparse_tensor_dense_matmul&lt;/code&gt;: &lt;code&gt;sp_a&lt;/code&gt; (indices, values):</source>
          <target state="translated">&lt;code&gt;SparseTensor&lt;/code&gt; 의 형식은 예상 &lt;code&gt;sparse_tensor_dense_matmul&lt;/code&gt; : &lt;code&gt;sp_a&lt;/code&gt; (인덱스, 값) :</target>
        </trans-unit>
        <trans-unit id="af265a08bc8e1f539e04902b3acfc53a0f580725" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SparseTensor&lt;/code&gt; of same shape as &lt;code&gt;sparse_ids&lt;/code&gt;, containing float weights corresponding to &lt;code&gt;sparse_ids&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if all weights are be assumed to be 1.0.</source>
          <target state="translated">&lt;code&gt;SparseTensor&lt;/code&gt; 동일 형상 &lt;code&gt;sparse_ids&lt;/code&gt; 에 대응하는 부동 추를 포함 &lt;code&gt;sparse_ids&lt;/code&gt; , 또는 &lt;code&gt;None&lt;/code&gt; 모든 가중치는 1.0이라고 가정 할 경우.</target>
        </trans-unit>
        <trans-unit id="8987707bb9bda4d8b14a05d7012721189eadd4f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SparseTensor&lt;/code&gt; of shape &lt;code&gt;[d_0, d_1, ..., d_n]&lt;/code&gt; containing the ids. &lt;code&gt;d_0&lt;/code&gt; is typically batch size.</source>
          <target state="translated">&lt;code&gt;SparseTensor&lt;/code&gt; 형상 &lt;code&gt;[d_0, d_1, ..., d_n]&lt;/code&gt; ID를 포함. &lt;code&gt;d_0&lt;/code&gt; 은 일반적으로 배치 크기입니다.</target>
        </trans-unit>
        <trans-unit id="67006e1eb84254cafc4a6d61f8ea6d024bd7bebb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SparseTensor&lt;/code&gt;, with indices sorted in row-major order.</source>
          <target state="translated">&lt;code&gt;SparseTensor&lt;/code&gt; - 인덱스가 행 우선 순서로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="a8c659888ca158bdb15be6ace88f3aa8c7e9fc3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SqlDataset&lt;/code&gt; allows a user to read data from the result set of a SQL query. For example:</source>
          <target state="translated">&lt;code&gt;SqlDataset&lt;/code&gt; 을 통해 사용자는 SQL 쿼리의 결과 집합에서 데이터를 읽을 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="704ae8894f5c0bc9184cbd8fea7a8a3805713600" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Start&lt;/code&gt; and &lt;code&gt;stop&lt;/code&gt; can be tensors of arbitrary size:</source>
          <target state="translated">&lt;code&gt;Start&lt;/code&gt; 및 &lt;code&gt;stop&lt;/code&gt; 는 임의 크기의 텐서 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6eca8e1b5700d8624a6709f1d142712e435713cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt; representation of the TensorFlow master to use.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 사용할 TensorFlow 마스터의 문자열 표현입니다.</target>
        </trans-unit>
        <trans-unit id="d405d18fa2c0212a22f1f9ef18a1ec039dd22d5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt; the TensorFlow master to use.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 사용할 TensorFlow 마스터를 스트링 합니다.</target>
        </trans-unit>
        <trans-unit id="c31769121bd75ed1eedff28ecb85653bf9272482" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SummaryWriter&lt;/code&gt; to use or &lt;code&gt;USE_DEFAULT&lt;/code&gt;. Can be &lt;code&gt;None&lt;/code&gt; to indicate that no summaries should be written.</source>
          <target state="translated">&lt;code&gt;SummaryWriter&lt;/code&gt; 사용할 SummaryWriter 또는 &lt;code&gt;USE_DEFAULT&lt;/code&gt; . 요약을 작성하지 않아야 함을 나타내려면 &lt;code&gt;None&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="93352154f78f6d22a53a1654d367e3457d1fd282" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SummaryWriter&lt;/code&gt;. If &lt;code&gt;None&lt;/code&gt; and an &lt;code&gt;output_dir&lt;/code&gt; was passed, one will be created accordingly.</source>
          <target state="translated">&lt;code&gt;SummaryWriter&lt;/code&gt; . 경우 &lt;code&gt;None&lt;/code&gt; 과 &lt;code&gt;output_dir&lt;/code&gt; 이 통과되지 않은, 하나는 그에 따라 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="cdc6501aa749641c56090dd2ac4b9be146c364e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Supervisor&lt;/code&gt;s are not supported when eager execution is enabled.</source>
          <target state="translated">&lt;code&gt;Supervisor&lt;/code&gt; 열망하는 실행이 활성화되면 관리자 가 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3ae71c95c9d5c3626560ec11cbd17b98e74f4879" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TFRecordOption&lt;/code&gt;, &lt;code&gt;TFRecordCompressionType&lt;/code&gt;, or string.</source>
          <target state="translated">&lt;code&gt;TFRecordOption&lt;/code&gt; , &lt;code&gt;TFRecordCompressionType&lt;/code&gt; 또는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="60fd0ce90b6f7a35d8bfce60413ee67c737218d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TPUEstimatorSpec.eval_metrics&lt;/code&gt; is a tuple of &lt;code&gt;metric_fn&lt;/code&gt; and &lt;code&gt;tensors&lt;/code&gt;, where &lt;code&gt;tensors&lt;/code&gt; could be a list of any nested structure of &lt;code&gt;Tensor&lt;/code&gt;s (See &lt;code&gt;TPUEstimatorSpec&lt;/code&gt; for details). &lt;code&gt;metric_fn&lt;/code&gt; takes the &lt;code&gt;tensors&lt;/code&gt; and returns a dict from metric string name to the result of calling a metric function, namely a &lt;code&gt;(metric_tensor, update_op)&lt;/code&gt; tuple.</source>
          <target state="translated">&lt;code&gt;TPUEstimatorSpec.eval_metrics&lt;/code&gt; 는 &lt;code&gt;metric_fn&lt;/code&gt; 및 &lt;code&gt;tensors&lt;/code&gt; 의 튜플입니다 . 여기서 &lt;code&gt;tensors&lt;/code&gt; 는 &lt;code&gt;Tensor&lt;/code&gt; 의 중첩 구조 목록 일 수 있습니다 (자세한 내용은 &lt;code&gt;TPUEstimatorSpec&lt;/code&gt; 참조). &lt;code&gt;metric_fn&lt;/code&gt; 은 &lt;code&gt;tensors&lt;/code&gt; 가져 와서 메트릭 문자열 이름에서 메트릭 함수 호출 결과 &lt;code&gt;(metric_tensor, update_op)&lt;/code&gt; 즉, (metric_tensor, update_op) 튜플 )에 대한 dict를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="27401f5e35b8ec50424cd56e865580b2b67c4b2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TRAIN&lt;/code&gt;: training/fitting mode.</source>
          <target state="translated">&lt;code&gt;TRAIN&lt;/code&gt; : 교육 / 피팅 모드.</target>
        </trans-unit>
        <trans-unit id="c398fe84de0ab2af96bf7bd3b6f51321fadb3f7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TRAINABLE_VARIABLES&lt;/code&gt;: the subset of &lt;code&gt;Variable&lt;/code&gt; objects that will be trained by an optimizer. See &lt;a href=&quot;trainable_variables&quot;&gt;&lt;code&gt;tf.compat.v1.trainable_variables&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;code&gt;TRAINABLE_VARIABLES&lt;/code&gt; : 옵티마이 저가 학습 할 &lt;code&gt;Variable&lt;/code&gt; 개체 의 하위 집합입니다 . 자세한 내용은 &lt;a href=&quot;trainable_variables&quot;&gt; &lt;code&gt;tf.compat.v1.trainable_variables&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3e193d528f19674e55c3b7f25df8e585f3ed5dec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; denominator of numeric type.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 숫자 유형의 텐서 분모.</target>
        </trans-unit>
        <trans-unit id="3dc23f569a1f03f4ad0f044803821fc3da375533" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; denominator of real numeric type.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 실수 형의 텐서 분모.</target>
        </trans-unit>
        <trans-unit id="7216c5a0a123a2d7f6444d9119d617e43cfc099a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; numerator of numeric type.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 숫자 형의 텐서 분자.</target>
        </trans-unit>
        <trans-unit id="7f93525a6e6940ace01c9d01ca8f0ef45848534d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; numerator of real numeric type.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 실수 형의 텐서 분자.</target>
        </trans-unit>
        <trans-unit id="dc3b3d75eb148b1a064a29b589a8357e9340d549" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; of samples from Sobol sequence with &lt;code&gt;shape&lt;/code&gt; [num_results, dim].</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;shape&lt;/code&gt; [num_results, dim] 인 Sobol 시퀀스의 샘플 텐서 .</target>
        </trans-unit>
        <trans-unit id="e2f6b46962d2f570a442ab283a4f1d6df7ffca4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[..., M, K]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 모양의 텐서 &lt;code&gt;[..., M, K]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59e8c9a52f30d0935fcce3cce4b6fa4cb9209d5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[..., M, N]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 모양의 텐서 &lt;code&gt;[..., M, N]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f059e0c820a081582ddf1f891c7a6f9fa61428e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[..., M, N]&lt;/code&gt;. Let &lt;code&gt;P&lt;/code&gt; be the minimum of &lt;code&gt;M&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 모양의 텐서 &lt;code&gt;[..., M, N]&lt;/code&gt; . 하자 &lt;code&gt;P&lt;/code&gt; 는 의 최소 &lt;code&gt;M&lt;/code&gt; 및 &lt;code&gt;N&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ed2c068ccc41f9d8efa4eba40e3ca414c1978f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[..., N, K]&lt;/code&gt; whose inner-most 2 dimensions form &lt;code&gt;M&lt;/code&gt;-by-&lt;code&gt;K&lt;/code&gt; matrices that solve the equations &lt;code&gt;matrix[..., :, :] * output[..., :, :] = rhs[..., :, :]&lt;/code&gt; in the least squares sense.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 가장 안쪽의 2 차원 이 방정식을 푸는 &lt;code&gt;M&lt;/code&gt; x &lt;code&gt;K&lt;/code&gt; 행렬을 형성 하는 모양의 텐서 &lt;code&gt;[..., N, K]&lt;/code&gt; &lt;code&gt;matrix[..., :, :] * output[..., :, :] = rhs[..., :, :]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="febdca2652eeba1e78ff2ec99274d3335d3e48d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[..., N, N]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 모양의 텐서 &lt;code&gt;[..., N, N]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c2a717939f3103b570785c4641665b590f831cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[..., N, N]&lt;/code&gt;. Only the lower triangular part of each inner inner matrix is referenced.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 모양의 텐서 &lt;code&gt;[..., N, N]&lt;/code&gt; . 각 내부 내부 행렬의 아래쪽 삼각형 부분 만 참조됩니다.</target>
        </trans-unit>
        <trans-unit id="880d7f05e8cbc076056bdf227a277f063cc412f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[B1,...,Bb]&lt;/code&gt;, or &lt;code&gt;[]&lt;/code&gt; (a scalar).</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 모양의 텐서 &lt;code&gt;[B1,...,Bb]&lt;/code&gt; 또는 &lt;code&gt;[]&lt;/code&gt; (스칼라).</target>
        </trans-unit>
        <trans-unit id="980d4f1a894d7c5f65d2f8391fa0c3b3a346da74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[batch_size, d1, ... dN]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 모양의 텐서 &lt;code&gt;[batch_size, d1, ... dN]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="767b9f8e2617ebb7bd46557b1a7b654b3abf77c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[d_0, d_1, ..., d_{r-1}]&lt;/code&gt; (where &lt;code&gt;r&lt;/code&gt; is rank of &lt;code&gt;labels&lt;/code&gt; and result) and dtype &lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt;. Each entry in &lt;code&gt;labels&lt;/code&gt; must be an index in &lt;code&gt;[0, num_classes)&lt;/code&gt;. Other values will raise an exception when this op is run on CPU, and return &lt;code&gt;NaN&lt;/code&gt; for corresponding loss and gradient rows on GPU.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[d_0, d_1, ..., d_{r-1}]&lt;/code&gt; (여기서 &lt;code&gt;r&lt;/code&gt; 은 &lt;code&gt;labels&lt;/code&gt; 및 결과의 순위 ) 및 dtype &lt;code&gt;int32&lt;/code&gt; 또는 &lt;code&gt;int64&lt;/code&gt; . &lt;code&gt;labels&lt;/code&gt; 각 항목은 &lt;code&gt;[0, num_classes)&lt;/code&gt; 의 인덱스 여야합니다 . 다른 값은이 작업이 CPU에서 실행될 때 예외를 발생시키고 GPU의 해당 손실 및 기울기 행에 대해 &lt;code&gt;NaN&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="5797e16f15294becc4070d46b8c4b21da3331ef4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;sample_shape(x) + self.batch_shape&lt;/code&gt; with values of type &lt;code&gt;self.dtype&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 형상의 &lt;code&gt;sample_shape(x) + self.batch_shape&lt;/code&gt; 타입의 값 &lt;code&gt;self.dtype&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d83f9e5244e9604f0f6a2ce8e6705844cc22f7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; of small singular value cutoffs. Singular values smaller (in modulus) than &lt;code&gt;rcond&lt;/code&gt; * largest_singular_value (again, in modulus) are set to zero. Must broadcast against &lt;code&gt;tf.shape(a)[:-2]&lt;/code&gt;. Default value: &lt;code&gt;10. * max(num_rows, num_cols) * np.finfo(a.dtype).eps&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 작은 특이 값 컷오프의 텐서 . &lt;code&gt;rcond&lt;/code&gt; * maximum_singular_value (다시 말하지만, 모듈러스)보다 작은 특이 값 ( 모듈러스)은 0으로 설정됩니다. &lt;code&gt;tf.shape(a)[:-2]&lt;/code&gt; 에 대해 브로드 캐스트해야 합니다. 기본값 : &lt;code&gt;10. * max(num_rows, num_cols) * np.finfo(a.dtype).eps&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41ab2ced7b514e3be2ae35a7646452a1c669c490" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt; and rank &amp;gt; 1.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 형의 &lt;code&gt;float16&lt;/code&gt; 과 , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; , &lt;code&gt;complex128&lt;/code&gt; 및 순위&amp;gt; 1.</target>
        </trans-unit>
        <trans-unit id="2f197a30085a9d459f068b1ac49e907f132ad94c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt; or &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;float32&lt;/code&gt; 또는 &lt;code&gt;float64&lt;/code&gt; 유형의 텐서 .</target>
        </trans-unit>
        <trans-unit id="48b0c095174ffec50ae7d487e96a2c1ae594fbf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt; containing the serialized &lt;code&gt;Summary&lt;/code&gt; protocol buffer or a list of &lt;code&gt;Tensor&lt;/code&gt;. They are most likely an output by TF summary methods like &lt;a href=&quot;../compat/v1/summary/scalar&quot;&gt;&lt;code&gt;tf.compat.v1.summary.scalar&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../compat/v1/summary/merge_all&quot;&gt;&lt;code&gt;tf.compat.v1.summary.merge_all&lt;/code&gt;&lt;/a&gt;. It can be passed in as one tensor; if more than one, they must be passed in as a list.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 형의 &lt;code&gt;string&lt;/code&gt; 직렬화 함유 &lt;code&gt;Summary&lt;/code&gt; 프로토콜 버퍼 또는 목록 &lt;code&gt;Tensor&lt;/code&gt; . &lt;a href=&quot;../compat/v1/summary/scalar&quot;&gt; &lt;code&gt;tf.compat.v1.summary.scalar&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../compat/v1/summary/merge_all&quot;&gt; &lt;code&gt;tf.compat.v1.summary.merge_all&lt;/code&gt; &lt;/a&gt; 과 같은 TF 요약 메서드의 출력 일 가능성이 큽니다 . 하나의 텐서로 전달할 수 있습니다. 둘 이상인 경우 목록으로 전달되어야합니다.</target>
        </trans-unit>
        <trans-unit id="8b7ecbbc2a110aba7ad699c5da247c77ff712c16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; of types &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 유형이 &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; , &lt;code&gt;complex128&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d56f748bd2221af7552c4b4c82a157e2f33b8fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; of the same type as &lt;code&gt;a&lt;/code&gt;. If sparse, indices must be sorted in row-major order.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 또는 &lt;code&gt;SparseTensor&lt;/code&gt; 와 동일한 유형의 . 희소 인 경우 인덱스는 행 우선 순서로 정렬되어야합니다. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c4d717e40edf8e33a123cb1e2be7dc06168c64a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; of the same type as &lt;code&gt;b&lt;/code&gt;. If sparse, indices must be sorted in row-major order.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;b&lt;/code&gt; 와 동일한 유형의 Tensor 또는 &lt;code&gt;SparseTensor&lt;/code&gt; . 희소 인 경우 인덱스는 행 우선 순서로 정렬되어야합니다.</target>
        </trans-unit>
        <trans-unit id="984b1fce1acbc42fb880dd558f397cda9720a860" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; or list of &lt;code&gt;Tensor&lt;/code&gt;s depending on &lt;code&gt;diagonals_format&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 또는 목록 &lt;code&gt;Tensor&lt;/code&gt; 들에 따라 &lt;code&gt;diagonals_format&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f804ebcbea4bea27a532c5ab7b3982392f7a195" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; or python list/tuple. Desired shape of a call to &lt;code&gt;sample()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 또는 Python 목록 / 튜플. &lt;code&gt;sample()&lt;/code&gt; 에 대한 원하는 호출 모양 .</target>
        </trans-unit>
        <trans-unit id="becc410e6c1d0c2edb0feaaf33b81f9f390109e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; or the &lt;code&gt;name&lt;/code&gt; of the operation that contains the global step.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 또는 전역 단계를 포함하는 작업 의 &lt;code&gt;name&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="307ab052efcdb1aa724a100bb3ea65ab618209ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; to conjugate. Must have numeric or variant type.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 결합 할 텐서 . 숫자 또는 변형 유형이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="24f527c375bcc4e34a1e3747a0ce78bb781740cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; to test.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 테스트 할 텐서 .</target>
        </trans-unit>
        <trans-unit id="3d1a387a9cb26cbf71e2b88216ac903c661f29c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; whose basetype is integer and is not quantized.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 기본 유형이 정수이고 양자화되지 않은 텐서 .</target>
        </trans-unit>
        <trans-unit id="d7d942a73b4f291ca20038a1940a844cf4407a82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; whose rank is either 0, or n-1, where n is the rank of &lt;code&gt;labels&lt;/code&gt;. If the latter, it must be broadcastable to &lt;code&gt;labels&lt;/code&gt; (i.e., all dimensions must be either &lt;code&gt;1&lt;/code&gt;, or the same as the corresponding &lt;code&gt;labels&lt;/code&gt; dimension).</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 순위가 0 또는 n-1 인 Tensor , 여기서 n은 &lt;code&gt;labels&lt;/code&gt; 의 순위입니다 . 후자의 경우 &lt;code&gt;labels&lt;/code&gt; 로 브로드 캐스트 할 수 있어야합니다 (즉, 모든 크기는 &lt;code&gt;1&lt;/code&gt; 이거나 해당하는 &lt;code&gt;labels&lt;/code&gt; 크기 와 동일 해야 합니다).</target>
        </trans-unit>
        <trans-unit id="6c2f5b36b2dfd3d57950075b54bdd00a1281e737" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; whose shape matches 'predictions'</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 모양이 '예측'과 일치하는 텐서</target>
        </trans-unit>
        <trans-unit id="8f67a2a1b5f2cc88c070a8ce698b6c3f8388c139" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; with &lt;code&gt;dtype&lt;/code&gt;&lt;code&gt;self.dtype&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;code&gt;self.dtype&lt;/code&gt; 을 가진 텐서 .</target>
        </trans-unit>
        <trans-unit id="178d1c87f829ed0baa02d04de5e941fed791835c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; with compatible shape and same &lt;code&gt;dtype&lt;/code&gt; as &lt;code&gt;self&lt;/code&gt;, or an iterable of &lt;code&gt;Tensor&lt;/code&gt;s (for blockwise operators). &lt;code&gt;Tensor&lt;/code&gt;s are treated a [batch] vectors, meaning for every set of leading dimensions, the last dimension defines a vector. See class docstring for definition of compatibility.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 호환 모양과 같은과 &lt;code&gt;dtype&lt;/code&gt; 같은 &lt;code&gt;self&lt;/code&gt; 또는의 반복 가능한 &lt;code&gt;Tensor&lt;/code&gt; (블록 단위 사업자)들. &lt;code&gt;Tensor&lt;/code&gt; 는 [배치] 벡터로 처리됩니다. 즉, 모든 선행 차원 집합에 대해 마지막 차원이 벡터를 정의합니다. 호환성 정의는 클래스 독 스트링을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e09f23804b5a7a35fcfb30c8853bba8922074db0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; with compatible shape and same &lt;code&gt;dtype&lt;/code&gt; as &lt;code&gt;self&lt;/code&gt;, or an iterable of &lt;code&gt;Tensor&lt;/code&gt;s. &lt;code&gt;Tensor&lt;/code&gt;s are treated a [batch] vectors, meaning for every set of leading dimensions, the last dimension defines a vector. See class docstring for definition of compatibility.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 호환 모양과 같은과 &lt;code&gt;dtype&lt;/code&gt; 같은 &lt;code&gt;self&lt;/code&gt; 또는의 반복 가능한 &lt;code&gt;Tensor&lt;/code&gt; 의. &lt;code&gt;Tensor&lt;/code&gt; 는 [배치] 벡터로 처리됩니다. 즉, 모든 선행 차원 집합에 대해 마지막 차원이 벡터를 정의합니다. 호환성 정의는 클래스 독 스트링을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a96455da818d5917d59cb06691742f3bc4ea04ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; with compatible shape and same &lt;code&gt;dtype&lt;/code&gt; as &lt;code&gt;self&lt;/code&gt;. &lt;code&gt;x&lt;/code&gt; is treated as a [batch] vector meaning for every set of leading dimensions, the last dimension defines a vector. See class docstring for definition of compatibility.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 호환되는 모양과 &lt;code&gt;self&lt;/code&gt; 와 동일한 &lt;code&gt;dtype&lt;/code&gt; 을 가진 Tensor . &lt;code&gt;x&lt;/code&gt; 는 모든 선행 차원 집합에 대해 [배치] 벡터로 처리되며 마지막 차원은 벡터를 정의합니다. 호환성 정의는 클래스 독 스트링을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6d5bff70c4f81f78e35aea70b6dc7db94d425479" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; with same &lt;code&gt;dtype&lt;/code&gt; and shape broadcastable to &lt;code&gt;self.shape&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 같은과 &lt;code&gt;dtype&lt;/code&gt; 과 모양 캐스트 가능한 &lt;code&gt;self.shape&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bffb68d96b140cef17f15c9b0e625b318f842710" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; with same &lt;code&gt;dtype&lt;/code&gt; and shape broadcastable to &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 동일한 &lt;code&gt;dtype&lt;/code&gt; 및 모양을 가진 Tensor 는 &lt;code&gt;self&lt;/code&gt; 에게 브로드 캐스팅 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a587ed327a0cef55ac7857be5b99242b0d73ff8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; with same &lt;code&gt;dtype&lt;/code&gt; as this operator and compatible shape, or a list of &lt;code&gt;Tensor&lt;/code&gt;s (for blockwise operators). &lt;code&gt;Tensor&lt;/code&gt;s are treated like a [batch] matrices meaning for every set of leading dimensions, the last two dimensions defines a matrix. See class docstring for definition of compatibility.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 동일한 함께 &lt;code&gt;dtype&lt;/code&gt; 이 운전자 호환 형상 또는 목록으로 &lt;code&gt;Tensor&lt;/code&gt; (블록 단위 사업자)들. &lt;code&gt;Tensor&lt;/code&gt; 는 모든 선행 차원 집합에 대해 [배치] 행렬처럼 처리되며 마지막 두 차원은 행렬을 정의합니다. 호환성 정의는 클래스 독 스트링을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="facd46859ca2488cc47bef23c3f688269f2182b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; with same &lt;code&gt;dtype&lt;/code&gt; as this operator and compatible shape, or a list of &lt;code&gt;Tensor&lt;/code&gt;s. &lt;code&gt;Tensor&lt;/code&gt;s are treated like a [batch] matrices meaning for every set of leading dimensions, the last two dimensions defines a matrix. See class docstring for definition of compatibility.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 동일한 함께 &lt;code&gt;dtype&lt;/code&gt; 이 운전자 호환 형상 또는 목록으로 &lt;code&gt;Tensor&lt;/code&gt; S. &lt;code&gt;Tensor&lt;/code&gt; 는 모든 선행 차원 집합에 대해 [배치] 행렬처럼 처리되며 마지막 두 차원은 행렬을 정의합니다. 호환성 정의는 클래스 독 스트링을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e86757216dca7586e802aa44fd781e41c8391974" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; with same &lt;code&gt;dtype&lt;/code&gt; as this operator and compatible shape. &lt;code&gt;rhs&lt;/code&gt; is treated like a [batch] matrix meaning for every set of leading dimensions, the last two dimensions defines a matrix. See class docstring for definition of compatibility.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 이 연산자 와 동일한 &lt;code&gt;dtype&lt;/code&gt; 및 호환 가능한 모양을 가진 Tensor . &lt;code&gt;rhs&lt;/code&gt; 는 모든 선행 차원 집합에 대해 [배치] 행렬처럼 처리되며 마지막 두 차원은 행렬을 정의합니다. 호환성 정의는 클래스 독 스트링을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="946a3c048e08801ba4d2a703b55dfb6f61ab1be5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; with same &lt;code&gt;dtype&lt;/code&gt; as this operator, or list of &lt;code&gt;Tensor&lt;/code&gt;s (for blockwise operators). &lt;code&gt;Tensor&lt;/code&gt;s are treated as [batch] vectors, meaning for every set of leading dimensions, the last dimension defines a vector. See class docstring for definition of compatibility regarding batch dimensions.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 이 연산자 와 동일한 &lt;code&gt;dtype&lt;/code&gt; 을 가진 Tensor 또는 &lt;code&gt;Tensor&lt;/code&gt; 목록 (블록 단위 연산자의 경우). &lt;code&gt;Tensor&lt;/code&gt; 는 [배치] 벡터로 처리됩니다. 즉, 모든 선행 차원 집합에 대해 마지막 차원이 벡터를 정의합니다. 배치 차원과 관련된 호환성 정의는 클래스 독 스트링을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e42768ce5a15fcfccdf76825e8da38966603f011" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; with same &lt;code&gt;dtype&lt;/code&gt; as this operator. &lt;code&gt;rhs&lt;/code&gt; is treated like a [batch] vector meaning for every set of leading dimensions, the last dimension defines a vector. See class docstring for definition of compatibility regarding batch dimensions.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 이 연산자 와 동일한 &lt;code&gt;dtype&lt;/code&gt; 을 가진 Tensor . &lt;code&gt;rhs&lt;/code&gt; 는 모든 선행 차원 집합에 대해 [배치] 벡터처럼 처리되며 마지막 차원은 벡터를 정의합니다. 배치 차원과 관련된 호환성 정의는 클래스 독 스트링을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4ac0ca4f8eafdbc2288c2d0bec03f8f1d5e23e6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; with same type as &lt;code&gt;a&lt;/code&gt; and compatible dimensions.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; 와 동일한 유형 및 호환되는 차원을 가진 텐서 .</target>
        </trans-unit>
        <trans-unit id="a37b82764dfcd0535195f8c7275d78a0c96f8adf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; with shape &lt;code&gt;[...,N, R]&lt;/code&gt; and same &lt;code&gt;dtype&lt;/code&gt; as &lt;code&gt;rhs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 형상 &lt;code&gt;[...,N, R]&lt;/code&gt; 과 같은 &lt;code&gt;dtype&lt;/code&gt; 같은 &lt;code&gt;rhs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f14c0a7dfc2c0fa9fda7a41a8cb1e265efbc0b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; with shape &lt;code&gt;[...,N]&lt;/code&gt; and same &lt;code&gt;dtype&lt;/code&gt; as &lt;code&gt;rhs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 형상 &lt;code&gt;[...,N]&lt;/code&gt; 과 같은 &lt;code&gt;dtype&lt;/code&gt; 같은 &lt;code&gt;rhs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94757355b794095fd792cb915edd67613da9dc37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; with shape &lt;code&gt;self.batch_shape&lt;/code&gt; and same &lt;code&gt;dtype&lt;/code&gt; as &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 모양과 &lt;code&gt;self.batch_shape&lt;/code&gt; 과 같은 &lt;code&gt;dtype&lt;/code&gt; 같은 &lt;code&gt;self&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="baeccaf71c9902e398edf2f649bb0f17103972c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 와 같은 유형 . &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1f6a38c9d54ab19261c18648a8624d6475ceb254" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; with type &lt;code&gt;dtype&lt;/code&gt; and a 3- or 4-dimensional shape, depending on the file type and the value of the &lt;code&gt;expand_animations&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 파일 유형 및 &lt;code&gt;expand_animations&lt;/code&gt; 매개 변수 의 값에 따라 유형 &lt;code&gt;dtype&lt;/code&gt; 및 3 차원 또는 4 차원 모양의 텐서 .</target>
        </trans-unit>
        <trans-unit id="943330f796373b91b53d44cea531bb2928a9658a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt; with type &lt;code&gt;float&lt;/code&gt; or &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;float&lt;/code&gt; 또는 &lt;code&gt;double&lt;/code&gt; 유형의 텐서 .</target>
        </trans-unit>
        <trans-unit id="566abb2aaef0cf719dd25c504650b5e1242d1968" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt;, input tensor.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; , 입력 tensor.</target>
        </trans-unit>
        <trans-unit id="7903dee9f3140320354368ef96f0c125b0bffeee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt;, the loss tensor.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; , 손실 텐서.</target>
        </trans-unit>
        <trans-unit id="bfdb82689c1ca060e07b884f815f03e4e97b2331" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="9851206c99264fb60585c0b4c2fc7d93cac22340" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt;. Same &lt;code&gt;dtype&lt;/code&gt; as, and broadcastable to, &lt;code&gt;x&lt;/code&gt;. The absolute tolerance. Default is &lt;code&gt;10 * eps&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;x&lt;/code&gt; 와 동일한 &lt;code&gt;dtype&lt;/code&gt; 및 브로드 캐스트 가능 . 절대 허용 오차. 기본값은 &lt;code&gt;10 * eps&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5335332b1c8faf6bdd5f533097ded7fae7ded132" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt;. Same &lt;code&gt;dtype&lt;/code&gt; as, and broadcastable to, &lt;code&gt;x&lt;/code&gt;. The relative tolerance. Default is &lt;code&gt;10 * eps&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;x&lt;/code&gt; 와 동일한 &lt;code&gt;dtype&lt;/code&gt; 및 브로드 캐스트 가능 . 상대 허용 오차입니다. 기본값은 &lt;code&gt;10 * eps&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e3bbd50b5edd44efbbc2b41df690a21f26ae1f8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tensor&lt;/code&gt;s with rank 1.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 순위가 1 인 Tensor .</target>
        </trans-unit>
        <trans-unit id="f9e58cb76f2072752a26e0d052639439158ce086" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TensorShape&lt;/code&gt; of batch dimensions of this &lt;code&gt;LinearOperator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TensorShape&lt;/code&gt; 이 일괄 차원의 &lt;code&gt;LinearOperator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f2ecc280b432e0edecd8826c3e0d8d425f1b7872" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TensorShape&lt;/code&gt; of this &lt;code&gt;LinearOperator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TensorShape&lt;/code&gt; 의 &lt;code&gt;LinearOperator&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fa97ea8248d6f6204fc2923887d4ac7dbc86937d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TensorShape&lt;/code&gt; or python list/tuple. Desired shape of a call to &lt;code&gt;sample()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TensorShape&lt;/code&gt; 또는 파이썬 목록 / 튜플. &lt;code&gt;sample()&lt;/code&gt; 에 대한 원하는 호출 모양 .</target>
        </trans-unit>
        <trans-unit id="222896ec1cd3a4e8b4a977b786daccb5cea29c51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TensorShape&lt;/code&gt;, statically determined, may be undefined.</source>
          <target state="translated">&lt;code&gt;TensorShape&lt;/code&gt; 정적으로 결정된 TensorShape 는 정의되어 있지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8033a32169d78c44ffce12c6c9fd5f2bde6241c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TimeDistributed&lt;/code&gt; can be used with arbitrary layers, not just &lt;code&gt;Dense&lt;/code&gt;, for instance with a &lt;code&gt;Conv2D&lt;/code&gt; layer:</source>
          <target state="translated">&lt;code&gt;TimeDistributed&lt;/code&gt; 는 &lt;code&gt;Dense&lt;/code&gt; 뿐만 아니라 임의의 레이어와 함께 사용할 수 있습니다 ( 예 : &lt;code&gt;Conv2D&lt;/code&gt; 레이어).</target>
        </trans-unit>
        <trans-unit id="b8ceca89ebdee09afa9edfb51c46b5683edc7316" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TrainSpec&lt;/code&gt; determines the input data for the training, as well as the duration. Optional hooks run at various stages of training.</source>
          <target state="translated">&lt;code&gt;TrainSpec&lt;/code&gt; 은 훈련에 대한 입력 데이터와 기간을 결정합니다. 옵션 후크는 다양한 교육 단계에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="06c56b19e0e0c6b470237db8c0963c2ad9483e94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if &lt;code&gt;x&lt;/code&gt; is a tensor or &quot;tensor-like&quot;, &lt;code&gt;False&lt;/code&gt; if not.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; &lt;code&gt;x&lt;/code&gt; 가 텐서이거나 &quot;텐서 모양&quot; 이면 true 이고 , &lt;code&gt;False&lt;/code&gt; 않으면 False 입니다.</target>
        </trans-unit>
        <trans-unit id="425676d25ddd889e955cdb41a8a26cbc185571b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if in a cross-replica context (&lt;code&gt;get_replica_context()&lt;/code&gt; returns &lt;code&gt;None&lt;/code&gt;), or &lt;code&gt;False&lt;/code&gt; if in a replica context (&lt;code&gt;get_replica_context()&lt;/code&gt; returns non-&lt;code&gt;None&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 크로스 복제 컨텍스트 (있는 경우 &lt;code&gt;get_replica_context()&lt;/code&gt; 반환 &lt;code&gt;None&lt;/code&gt; ), 또는 &lt;code&gt;False&lt;/code&gt; 복제 컨텍스트의 경우 ( &lt;code&gt;get_replica_context()&lt;/code&gt; 비 반환 &lt;code&gt;None&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f909270dca554a0c0e2589892252e016b09bfc55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the current thread has eager execution enabled.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 현재 스레드가 열망 실행을 활성화 한 경우 true 입니다.</target>
        </trans-unit>
        <trans-unit id="f42ed41847fa2e40f616e36b7cd2722e7e86a1fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt;, None, or tf.compat.v1.AUTO_REUSE; if &lt;code&gt;True&lt;/code&gt;, we go into reuse mode for this scope as well as all sub-scopes; if tf.compat.v1.AUTO_REUSE, we create variables if they do not exist, and return them otherwise; if None, we inherit the parent scope's reuse flag. When eager execution is enabled, new variables are always created unless an EagerVariableStore or template is currently active.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; , None 또는 tf.compat.v1.AUTO_REUSE; 경우 &lt;code&gt;True&lt;/code&gt; , 우리는이 범위뿐만 아니라 모든 하위 범위에 대한 재사용 모드로 전환; tf.compat.v1.AUTO_REUSE이면 변수가 존재하지 않으면 생성하고 그렇지 않으면 반환합니다. None이면 부모 범위의 재사용 플래그를 상속합니다. Eager 실행이 활성화되면 EagerVariableStore 또는 템플릿이 현재 활성화되어 있지 않으면 항상 새 변수가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="406309d53c201aca3a422a45b31d0c55c348bb57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TypeError&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TypeError&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="10ee41ccf45525f6ecb552d3ee8ced3cd6cf37eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Unknown activation function&lt;/code&gt; if the input string does not denote any defined Tensorflow activation function.</source>
          <target state="translated">&lt;code&gt;Unknown activation function&lt;/code&gt; 입력 문자열이 정의 된 Tensorflow 활성화 함수를 나타내지 않는 경우 알 수없는 활성화 함수입니다.</target>
        </trans-unit>
        <trans-unit id="4a1e05c0aef1b769ad8c954c227107b1c092d4ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ValueError&lt;/code&gt; when &lt;code&gt;mixed_precision_global_state.using_default_mixed_precision_policy&lt;/code&gt; is set to &lt;code&gt;False&lt;/code&gt; before &lt;a href=&quot;../../../../train/experimental/enable_mixed_precision_graph_rewrite&quot;&gt;&lt;code&gt;tf.train.experimental.enable_mixed_precision_graph_rewrite()&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">&lt;code&gt;ValueError&lt;/code&gt; 를 할 때 &lt;code&gt;mixed_precision_global_state.using_default_mixed_precision_policy&lt;/code&gt; 이 설정되어 &lt;code&gt;False&lt;/code&gt; 전에 &lt;a href=&quot;../../../../train/experimental/enable_mixed_precision_graph_rewrite&quot;&gt; &lt;code&gt;tf.train.experimental.enable_mixed_precision_graph_rewrite()&lt;/code&gt; &lt;/a&gt; 이라고합니다.</target>
        </trans-unit>
        <trans-unit id="335d3222574f0c2ce8c0c532986dccc38c63fd5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ValueError&lt;/code&gt; when &lt;code&gt;mixed_precision_global_state.using_default_mixed_precision_policy&lt;/code&gt; is set to &lt;code&gt;False&lt;/code&gt; before &lt;a href=&quot;enable_mixed_precision_graph_rewrite&quot;&gt;&lt;code&gt;tf.train.experimental.enable_mixed_precision_graph_rewrite()&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">&lt;code&gt;ValueError&lt;/code&gt; 를 할 때 &lt;code&gt;mixed_precision_global_state.using_default_mixed_precision_policy&lt;/code&gt; 이 설정되어 &lt;code&gt;False&lt;/code&gt; 전에 &lt;a href=&quot;enable_mixed_precision_graph_rewrite&quot;&gt; &lt;code&gt;tf.train.experimental.enable_mixed_precision_graph_rewrite()&lt;/code&gt; &lt;/a&gt; 이라고합니다.</target>
        </trans-unit>
        <trans-unit id="b0226de68f77eedd65814fcf5c83d84745a685c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ValueError&lt;/code&gt;, if the &lt;a href=&quot;../../../../keras/mixed_precision&quot;&gt;&lt;code&gt;tf.keras.mixed_precision&lt;/code&gt;&lt;/a&gt; API is also used by calling &lt;a href=&quot;../../../../keras/mixed_precision/experimental/set_policy&quot;&gt;&lt;code&gt;tf.keras.mixed_precision.experimental.set_policy&lt;/code&gt;&lt;/a&gt;. Only one mixed precision API can be used.</source>
          <target state="translated">&lt;code&gt;ValueError&lt;/code&gt; , &lt;a href=&quot;../../../../keras/mixed_precision&quot;&gt; &lt;code&gt;tf.keras.mixed_precision&lt;/code&gt; &lt;/a&gt; API도 &lt;a href=&quot;../../../../keras/mixed_precision/experimental/set_policy&quot;&gt; &lt;code&gt;tf.keras.mixed_precision.experimental.set_policy&lt;/code&gt; &lt;/a&gt; 를 호출하여 사용되는 경우 . 혼합 정밀도 API는 하나만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="07f772ecd3a3f953d1eb1d88fa3d8cbdca2e467e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ValueError&lt;/code&gt;, if the &lt;a href=&quot;../../keras/mixed_precision&quot;&gt;&lt;code&gt;tf.keras.mixed_precision&lt;/code&gt;&lt;/a&gt; API is also used by calling &lt;a href=&quot;../../keras/mixed_precision/experimental/set_policy&quot;&gt;&lt;code&gt;tf.keras.mixed_precision.experimental.set_policy&lt;/code&gt;&lt;/a&gt;. Only one mixed precision API can be used.</source>
          <target state="translated">&lt;code&gt;ValueError&lt;/code&gt; , &lt;a href=&quot;../../keras/mixed_precision&quot;&gt; &lt;code&gt;tf.keras.mixed_precision&lt;/code&gt; &lt;/a&gt; API도 &lt;a href=&quot;../../keras/mixed_precision/experimental/set_policy&quot;&gt; &lt;code&gt;tf.keras.mixed_precision.experimental.set_policy&lt;/code&gt; &lt;/a&gt; 를 호출하여 사용되는 경우 . 혼합 정밀도 API는 하나만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b24cc2c85ab063ac65a7e9e290c0c5e591dc125d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ValueError&lt;/code&gt;: If &lt;code&gt;pos&lt;/code&gt; and &lt;code&gt;len&lt;/code&gt; are not the same shape.</source>
          <target state="translated">&lt;code&gt;ValueError&lt;/code&gt; : &lt;code&gt;pos&lt;/code&gt; 와 &lt;code&gt;len&lt;/code&gt; 이 같은 모양이 아닌 경우.</target>
        </trans-unit>
        <trans-unit id="3fd19b1219a6892e2751a43dd7f29fbe4298aeb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ValueError&lt;/code&gt;: If the first argument cannot be converted to a Tensor of &lt;code&gt;dtype string&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ValueError&lt;/code&gt; : 첫 번째 인수를 &lt;code&gt;dtype string&lt;/code&gt; 의 Tensor로 변환 할 수없는 경우 .</target>
        </trans-unit>
        <trans-unit id="f20ac6c236ea88a690ad6807ff382215987f1664" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Variable&lt;/code&gt; to scatter onto.</source>
          <target state="translated">&lt;code&gt;Variable&lt;/code&gt; 분산 할 변수 입니다.</target>
        </trans-unit>
        <trans-unit id="6a0eaca08c50444e4e7bd5df1e48355a149e7a36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VariableDef&lt;/code&gt; protocol buffer. If not &lt;code&gt;None&lt;/code&gt;, recreates the Variable object with its contents, referencing the variable's nodes in the graph, which must already exist. The graph is not changed. &lt;code&gt;variable_def&lt;/code&gt; and the other arguments are mutually exclusive.</source>
          <target state="translated">&lt;code&gt;VariableDef&lt;/code&gt; 프로토콜 버퍼. &lt;code&gt;None&lt;/code&gt; 이 아니라면 , 이미 존재해야하는 그래프에서 변수의 노드를 참조하여 그 내용으로 Variable 객체를 다시 만듭니다. 그래프는 변경되지 않습니다. &lt;code&gt;variable_def&lt;/code&gt; 및 기타 인수는 상호 배타적입니다.</target>
        </trans-unit>
        <trans-unit id="ab8ae1fa33fea43ecbd43dd9529d03791e6f52ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WhiteList&lt;/code&gt;: Ops that are considered numerically safe for execution in float16, and thus are always converted. E.g. &lt;code&gt;Conv2D&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WhiteList&lt;/code&gt; : float16 에서 실행하기 위해 수치 적으로 안전한 것으로 간주되어 항상 변환되는 연산입니다. 예 : &lt;code&gt;Conv2D&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f19da47578289f9aa864250d282432f19e4ce6a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Z&lt;/code&gt; is the normalization constant aka the &lt;a href=&quot;https://en.wikipedia.org/wiki/Beta_function#Multivariate_beta_function&quot;&gt;multivariate beta function&lt;/a&gt;, and,</source>
          <target state="translated">&lt;code&gt;Z&lt;/code&gt; 는 &lt;a href=&quot;https://en.wikipedia.org/wiki/Beta_function#Multivariate_beta_function&quot;&gt;다변량 베타 함수로 알려진&lt;/a&gt; 정규화 상수 이며,</target>
        </trans-unit>
        <trans-unit id="85f56a43bd483ddbcbf8d1053854b746dd1e0fdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Z&lt;/code&gt; is the normalization constant, and,</source>
          <target state="translated">&lt;code&gt;Z&lt;/code&gt; 는 정규화 상수이며,</target>
        </trans-unit>
        <trans-unit id="ef072d250b59e3aaa3dfad50fdd248b70a82df5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Z&lt;/code&gt; is the normalizing constant, and</source>
          <target state="translated">&lt;code&gt;Z&lt;/code&gt; 는 정규화 상수이며</target>
        </trans-unit>
        <trans-unit id="5b23568cf45d951b7b8a06ce075a708bb50c42fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Z&lt;/code&gt; is the normalizing constant, and,</source>
          <target state="translated">&lt;code&gt;Z&lt;/code&gt; 는 정규화 상수이며</target>
        </trans-unit>
        <trans-unit id="b3465562086c4361e2771c270960f1fa1c82dd43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ZERO&lt;/code&gt;: Indicates that a zero tensor will be returned in the shape of x.</source>
          <target state="translated">&lt;code&gt;ZERO&lt;/code&gt; : 영점 텐서가 x 모양으로 반환됨을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="08d72d3b7d9eb65236b8e12ad2b4d6a2ff5e7306" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[b, d]&lt;/code&gt;&lt;code&gt;[b, h, w, d]&lt;/code&gt; via per-channel floats &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; of shape &lt;code&gt;[d]&lt;/code&gt; to 'outputs' tensor of same shape as &lt;code&gt;inputs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[b, d]&lt;/code&gt; &lt;code&gt;[b, h, w, d]&lt;/code&gt; 는 채널당 &lt;code&gt;min&lt;/code&gt; 및 &lt;code&gt;max&lt;/code&gt; 모양 &lt;code&gt;[d]&lt;/code&gt; 를 &lt;code&gt;inputs&lt;/code&gt; 과 동일한 모양의 '출력'텐서에 플로팅 합니다.</target>
        </trans-unit>
        <trans-unit id="dd62f29af3ef10f932c29385cfe55908a6a26ac0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[batch_size, num_classes]&lt;/code&gt; target integer labels in &lt;code&gt;{0, 1}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[batch_size, num_classes]&lt;/code&gt; 는 &lt;code&gt;{0, 1}&lt;/code&gt; 정수 라벨을 대상으로합니다 .</target>
        </trans-unit>
        <trans-unit id="ede4cbfc3a6833d49f27f9a99478db8eb465d471" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[input_min, input_max]&lt;/code&gt; are scalar floats that specify the range for the float interpretation of the &lt;code&gt;input&lt;/code&gt; data. For example, if &lt;code&gt;input_min&lt;/code&gt; is -1.0f and &lt;code&gt;input_max&lt;/code&gt; is 1.0f, and we are dealing with &lt;code&gt;quint16&lt;/code&gt; quantized data, then a 0 value in the 16-bit data should be interpreted as -1.0f, and a 65535 means 1.0f.</source>
          <target state="translated">&lt;code&gt;[input_min, input_max]&lt;/code&gt; 는 &lt;code&gt;input&lt;/code&gt; 데이터 의 부동 소수점 해석 범위를 지정하는 부동 소수점 스칼라 입니다. 예를 들어 &lt;code&gt;input_min&lt;/code&gt; 이 -1.0f이고 &lt;code&gt;input_max&lt;/code&gt; 가 1.0f이고 &lt;code&gt;quint16&lt;/code&gt; 양자화 된 데이터를 처리하는 경우 16 비트 데이터의 0 값은 -1.0f로 해석되어야하며 65535는 1.0f를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="058cc9584fd59f48d9df14d88cadc16ee390841c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[min; max]&lt;/code&gt; define the clamping range for the &lt;code&gt;inputs&lt;/code&gt; data.</source>
          <target state="translated">&lt;code&gt;[min; max]&lt;/code&gt; 는 &lt;code&gt;inputs&lt;/code&gt; 데이터 의 클램핑 범위를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="5116b6ef52c36c5b9258636fd414761ad1a96d15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[min; max]&lt;/code&gt; define the clamping range for the &lt;code&gt;inputs&lt;/code&gt; data. &lt;code&gt;inputs&lt;/code&gt; values are quantized into the quantization range (&lt;code&gt;[0; 2^num_bits - 1]&lt;/code&gt; when &lt;code&gt;narrow_range&lt;/code&gt; is false and &lt;code&gt;[1; 2^num_bits - 1]&lt;/code&gt; when it is true) and then de-quantized and output as floats in &lt;code&gt;[min; max]&lt;/code&gt; interval. &lt;code&gt;num_bits&lt;/code&gt; is the bitwidth of the quantization; between 2 and 16, inclusive.</source>
          <target state="translated">&lt;code&gt;[min; max]&lt;/code&gt; 는 &lt;code&gt;inputs&lt;/code&gt; 데이터 의 클램핑 범위를 정의합니다 . &lt;code&gt;inputs&lt;/code&gt; 값은 양자화 범위 ( &lt;code&gt;[0; 2^num_bits - 1]&lt;/code&gt; 범위 가 거짓 이면 [0; 2 ^ num_bits-1]로 , &lt;code&gt;narrow_range&lt;/code&gt; 이면 &lt;code&gt;[1; 2^num_bits - 1]&lt;/code&gt; )로 양자화 된 후 역 양자화되고 &lt;code&gt;[min; max]&lt;/code&gt; 간격. &lt;code&gt;num_bits&lt;/code&gt; 는 양자화의 비트 폭 입니다. 2에서 16 사이.</target>
        </trans-unit>
        <trans-unit id="15215729f0ac4bec016a4f3ccf47da758d23db2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__()&lt;/code&gt;: All state variables should be created in this method by calling &lt;code&gt;self.add_weight()&lt;/code&gt; like: &lt;code&gt;self.var = self.add_weight(...)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__init__()&lt;/code&gt; : &lt;code&gt;self.add_weight()&lt;/code&gt; 과 같이 호출 하여이 메소드에서 모든 상태 변수를 작성해야합니다 . &lt;code&gt;self.var = self.add_weight(...)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8299263b8fba8caab6d9209c48ecde8dce154ded" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__()&lt;/code&gt;: Defines custom layer attributes, and creates layer state variables that do not depend on input shapes, using &lt;code&gt;add_weight()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;__init__()&lt;/code&gt; : 사용자 정의 레이어 속성을 정의하고 &lt;code&gt;add_weight()&lt;/code&gt; 사용하여 입력 모양에 의존하지 않는 레이어 상태 변수를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="18d497319800cdceb71cf515a7c6cb3141073ff9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__()&lt;/code&gt;: Save configuration in member variables</source>
          <target state="translated">&lt;code&gt;__init__()&lt;/code&gt; : 멤버 변수에 구성 저장</target>
        </trans-unit>
        <trans-unit id="498961866572260094e3d9b09187238fec2e327a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_create_slots&lt;/code&gt; (if your optimizer algorithm requires additional variables)</source>
          <target state="translated">&lt;code&gt;_create_slots&lt;/code&gt; (최적화 알고리즘에 추가 변수가 필요한 경우)</target>
        </trans-unit>
        <trans-unit id="5238dc25273270a3bc4ee8643089af594ddf6fb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_resource_apply_dense&lt;/code&gt; (update variable given gradient tensor is dense)</source>
          <target state="translated">&lt;code&gt;_resource_apply_dense&lt;/code&gt; (그래디언트 텐서가 조밀 한 경우 업데이트 변수)</target>
        </trans-unit>
        <trans-unit id="ff7d40c1213f289257cb9162575f6e4a1fbc8e55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_resource_apply_sparse&lt;/code&gt; (update variable given gradient tensor is sparse)</source>
          <target state="translated">&lt;code&gt;_resource_apply_sparse&lt;/code&gt; (그래디언트 텐서가 드문 경우 업데이트 변수)</target>
        </trans-unit>
        <trans-unit id="39b9627c0ee10120aad488f1aef6bc1e344d669b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; can be arbitrarily nested structures. A layer of a nested structure can be a &lt;code&gt;dict&lt;/code&gt;, &lt;code&gt;namedtuple&lt;/code&gt;, &lt;code&gt;tuple&lt;/code&gt; or &lt;code&gt;list&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 는 임의로 중첩 된 구조 일 수 있습니다. 중첩 구조의 레이어는 &lt;code&gt;dict&lt;/code&gt; , &lt;code&gt;namedtuple&lt;/code&gt; , &lt;code&gt;tuple&lt;/code&gt; 또는 &lt;code&gt;list&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3773a206cfadc246bb806505b1aee636050e34b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; must be the same shape; they can either be simple 3-element vectors, or any shape where the innermost dimension is 3. In the latter case, each pair of corresponding 3-element vectors is cross-multiplied independently.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 는 같은 모양이어야합니다. 이들은 간단한 3 원소 벡터이거나, 가장 안쪽 치수가 3 인 임의의 형상 일 수있다. 후자의 경우, 대응하는 3 원소 벡터의 각 쌍은 독립적으로 교차 곱셈된다.</target>
        </trans-unit>
        <trans-unit id="6cf5bfb18e0958c09200857866c0a1e85f27efc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;acc.jvp(x)&lt;/code&gt; retrieves &lt;code&gt;acc&lt;/code&gt;'s JVP corresponding to the primal tensor &lt;code&gt;x&lt;/code&gt;. It does not perform any computation. &lt;code&gt;acc.jvp&lt;/code&gt; calls can be repeated as long as &lt;code&gt;acc&lt;/code&gt; is accessible, whether the context manager is active or not. New JVPs are only computed while the context manager is active.</source>
          <target state="translated">&lt;code&gt;acc.jvp(x)&lt;/code&gt; 는 원시 텐서 &lt;code&gt;x&lt;/code&gt; 에 해당하는 &lt;code&gt;acc&lt;/code&gt; 의 JVP를 검색 합니다. 계산을 수행하지 않습니다. 컨텍스트 관리자의 활성 여부에 관계없이 &lt;code&gt;acc&lt;/code&gt; 에 액세스 할 수있는 한 &lt;code&gt;acc.jvp&lt;/code&gt; 호출을 반복 할 수 있습니다 . 새 JVP는 컨텍스트 관리자가 활성화 된 동안에 만 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="0a367b1614b37824b4cb725406e9e895683c95d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;accumulate_n&lt;/code&gt; performs the same operation as &lt;a href=&quot;add_n&quot;&gt;&lt;code&gt;tf.math.add_n&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;accumulate_n&lt;/code&gt; 수행 동일한 동작 &lt;a href=&quot;add_n&quot;&gt; &lt;code&gt;tf.math.add_n&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="868283c5ff7af281e3bbaee574987af73c7ca5ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;activation&lt;/code&gt; == &lt;code&gt;tanh&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;activation&lt;/code&gt; == &lt;code&gt;tanh&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d96ca6c8d96f4fad7c63f244a1c8e445f073221" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;activity_regularizer&lt;/code&gt;: Regularizer to apply a penalty on the layer's output</source>
          <target state="translated">&lt;code&gt;activity_regularizer&lt;/code&gt; : 레이어 출력에 페널티를 적용하는 정규화 기</target>
        </trans-unit>
        <trans-unit id="ebd772d5018a62031b97468b73b8330fcde80034" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adjusted_stddev = max(stddev, 1.0/sqrt(N))&lt;/code&gt; is capped away from 0 to protect against division by 0 when handling uniform images</source>
          <target state="translated">&lt;code&gt;adjusted_stddev = max(stddev, 1.0/sqrt(N))&lt;/code&gt; 는 균일 한 이미지를 처리 ​​할 때 0으로 나누지 않도록 보호하기 위해 0에서 멀어집니다.</target>
        </trans-unit>
        <trans-unit id="4736297933ac6ee7155e04bef70cd909e4008946" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alpha&lt;/code&gt; is the shape parameter describing the distribution(s), and &lt;code&gt;beta&lt;/code&gt; is the inverse scale parameter(s).</source>
          <target state="translated">&lt;code&gt;alpha&lt;/code&gt; 는 분포를 설명하는 모양 매개 변수이고, &lt;code&gt;beta&lt;/code&gt; 는 역 척도 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="9f9f2cd5eb32fbcbd4934e3db418478ae1abb879" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apply&lt;/code&gt; enables chaining of custom &lt;code&gt;Dataset&lt;/code&gt; transformations, which are represented as functions that take one &lt;code&gt;Dataset&lt;/code&gt; argument and return a transformed &lt;code&gt;Dataset&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;apply&lt;/code&gt; 를 사용하면 하나의 &lt;code&gt;Dataset&lt;/code&gt; 인수를 사용하고 변환 된 &lt;code&gt;Dataset&lt;/code&gt; 을 반환하는 함수로 표시되는 사용자 지정 &lt;code&gt;Dataset&lt;/code&gt; 변환을 연결할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e2e412ef75edb45f28ea3353fc5708bcda1c1f2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;as_numpy_iterator()&lt;/code&gt; will preserve the nested structure of dataset elements.</source>
          <target state="translated">&lt;code&gt;as_numpy_iterator()&lt;/code&gt; 는 데이터 세트 요소의 중첩 구조를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="bf4744806e00530086b732c319fcfc9ab099fe7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assert_consumed()&lt;/code&gt;: Raises an exception if any variables are unmatched: either checkpointed values which don't have a matching Python object or Python objects in the dependency graph with no values in the checkpoint. This method returns the status object, and so may be chained with &lt;code&gt;initialize_or_restore&lt;/code&gt; or &lt;code&gt;run_restore_ops&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;assert_consumed()&lt;/code&gt; : 변수가 일치하지 않는 경우 예외가 발생합니다. 일치하는 Python 객체가없는 검사 점 값 또는 검사 점에 값이없는 종속성 그래프의 Python 개체입니다. 이 메소드는 상태 오브젝트를 리턴하므로 &lt;code&gt;initialize_or_restore&lt;/code&gt; 또는 &lt;code&gt;run_restore_ops&lt;/code&gt; 로 연결될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b926dc4049e561d35221afbcf76cbe2e54fe013d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assert_consumed()&lt;/code&gt;: Raises an exception if any variables are unmatched: either checkpointed values which don't have a matching Python object or Python objects in the dependency graph with no values in the checkpoint. This method returns the status object, and so may be chained with other assertions.</source>
          <target state="translated">&lt;code&gt;assert_consumed()&lt;/code&gt; : 변수가 일치하지 않는 경우 예외가 발생합니다. 일치하는 Python 객체가없는 검사 점 값 또는 검사 점에 값이없는 종속성 그래프의 Python 개체입니다. 이 메소드는 상태 오브젝트를 리턴하므로 다른 어설 션과 연결될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="057f36b12286667605eb48eb6080e1456bd3a847" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assert_existing_objects_matched()&lt;/code&gt;: Raises an exception if any existing Python objects in the dependency graph are unmatched. Unlike &lt;code&gt;assert_consumed&lt;/code&gt;, this assertion will pass if values in the checkpoint have no corresponding Python objects. For example a &lt;code&gt;tf.keras.Layer&lt;/code&gt; object which has not yet been built, and so has not created any variables, will pass this assertion but fail &lt;code&gt;assert_consumed&lt;/code&gt;. Useful when loading part of a larger checkpoint into a new Python program, e.g. a training checkpoint with a &lt;a href=&quot;../compat/v1/train/optimizer&quot;&gt;&lt;code&gt;tf.compat.v1.train.Optimizer&lt;/code&gt;&lt;/a&gt; was saved but only the state required for inference is being loaded. This method returns the status object, and so may be chained with other assertions.</source>
          <target state="translated">&lt;code&gt;assert_existing_objects_matched()&lt;/code&gt; : 종속성 그래프의 기존 Python 객체가 일치 하지 않으면 예외가 발생합니다. &lt;code&gt;assert_consumed&lt;/code&gt; 와 달리 체크 포인트의 값에 해당하는 Python 객체가없는 경우이 어설 션이 전달됩니다. 예를 들어, 아직 빌드되지 않았고 변수를 작성하지 않은 &lt;code&gt;tf.keras.Layer&lt;/code&gt; 오브젝트는이 어설 션을 전달하지만 &lt;code&gt;assert_consumed&lt;/code&gt; 는 실패 합니다 . 더 큰 체크 포인트의 일부를 새로운 Python 프로그램에로드 할 때 유용합니다 (예 : &lt;a href=&quot;../compat/v1/train/optimizer&quot;&gt; &lt;code&gt;tf.compat.v1.train.Optimizer&lt;/code&gt; &lt;/a&gt; 가 있는 트레이닝 체크 포인트 가 저장되었지만 추론에 필요한 상태 만로드 됨). 이 메소드는 상태 오브젝트를 리턴하므로 다른 어설 션과 연결될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ef679434922032966220ada47b602f876e32a49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assert_existing_objects_matched()&lt;/code&gt;: Raises an exception if any existing Python objects in the dependency graph are unmatched. Unlike &lt;code&gt;assert_consumed&lt;/code&gt;, this assertion will pass if values in the checkpoint have no corresponding Python objects. For example a &lt;code&gt;tf.keras.Layer&lt;/code&gt; object which has not yet been built, and so has not created any variables, will pass this assertion but fail &lt;code&gt;assert_consumed&lt;/code&gt;. Useful when loading part of a larger checkpoint into a new Python program, e.g. a training checkpoint with a &lt;a href=&quot;optimizer&quot;&gt;&lt;code&gt;tf.compat.v1.train.Optimizer&lt;/code&gt;&lt;/a&gt; was saved but only the state required for inference is being loaded. This method returns the status object, and so may be chained with &lt;code&gt;initialize_or_restore&lt;/code&gt; or &lt;code&gt;run_restore_ops&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;assert_existing_objects_matched()&lt;/code&gt; : 종속성 그래프의 기존 Python 객체가 일치 하지 않으면 예외가 발생합니다. &lt;code&gt;assert_consumed&lt;/code&gt; 와 달리 체크 포인트의 값에 해당하는 Python 객체가없는 경우이 어설 션이 전달됩니다. 예를 들어, 아직 빌드되지 않았고 변수를 작성하지 않은 &lt;code&gt;tf.keras.Layer&lt;/code&gt; 오브젝트는이 어설 션을 전달하지만 &lt;code&gt;assert_consumed&lt;/code&gt; 는 실패 합니다 . 더 큰 체크 포인트의 일부를 새로운 Python 프로그램에로드 할 때 유용합니다 (예 : &lt;a href=&quot;optimizer&quot;&gt; &lt;code&gt;tf.compat.v1.train.Optimizer&lt;/code&gt; &lt;/a&gt; 가 있는 트레이닝 체크 포인트 가 저장되었지만 추론에 필요한 상태 만로드 됨). 이 메소드는 상태 객체를 반환하므로 &lt;code&gt;initialize_or_restore&lt;/code&gt; 또는 &lt;code&gt;run_restore_ops&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="157d4baa86af7f08988f45fb20a12c9a1e986fdc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assert_nontrivial_match()&lt;/code&gt;: Asserts that something aside from the root object was matched. This is a very weak assertion, but is useful for sanity checking in library code where objects may exist in the checkpoint which haven't been created in Python and some Python objects may not have a checkpointed value.</source>
          <target state="translated">&lt;code&gt;assert_nontrivial_match()&lt;/code&gt; : 루트 객체 이외의 것이 일치되었다고 주장합니다. 이것은 매우 약한 어설 션이지만, 파이썬에서 생성되지 않은 체크 포인트에 객체가 존재할 수 있고 일부 파이썬 객체는 체크 포인트 값을 가질 수없는 라이브러리 코드에서 온 전성 검사에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="562b3865784c9b301a4e02c049787f14da8bf3d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;audio&lt;/code&gt; is a 2-D float Tensor of shape &lt;code&gt;[length, channels]&lt;/code&gt;. &lt;code&gt;sample_rate&lt;/code&gt; is a scalar Tensor holding the rate to use (e.g. 44100).</source>
          <target state="translated">&lt;code&gt;audio&lt;/code&gt; 는 &lt;code&gt;[length, channels]&lt;/code&gt; 모양의 2 차원 플로트 텐서입니다 . &lt;code&gt;sample_rate&lt;/code&gt; 는 사용할 비율을 보유하는 스칼라 Tensor입니다 (예 : 44100).</target>
        </trans-unit>
        <trans-unit id="ffd11c8272cb40e7d5752f2bc88d126e1d4d7611" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;average_name()&lt;/code&gt; can be called whether or not &lt;code&gt;apply()&lt;/code&gt; has been called.</source>
          <target state="translated">&lt;code&gt;average_name()&lt;/code&gt; &lt;code&gt;apply()&lt;/code&gt; 호출 여부에 관계없이 average_name () 을 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="89a9e0204f5afab479ce23eb6e11a82a40d2e58c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;average_precision_at_k&lt;/code&gt; creates two local variables, &lt;code&gt;average_precision_at_&amp;lt;k&amp;gt;/total&lt;/code&gt; and &lt;code&gt;average_precision_at_&amp;lt;k&amp;gt;/max&lt;/code&gt;, that are used to compute the frequency. This frequency is ultimately returned as &lt;code&gt;average_precision_at_&amp;lt;k&amp;gt;&lt;/code&gt;: an idempotent operation that simply divides &lt;code&gt;average_precision_at_&amp;lt;k&amp;gt;/total&lt;/code&gt; by &lt;code&gt;average_precision_at_&amp;lt;k&amp;gt;/max&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;average_precision_at_k&lt;/code&gt; 는 빈도를 계산하는 데 사용되는 두 개의 로컬 변수 &lt;code&gt;average_precision_at_&amp;lt;k&amp;gt;/total&lt;/code&gt; 및 &lt;code&gt;average_precision_at_&amp;lt;k&amp;gt;/max&lt;/code&gt; 를 만듭니다. 이 빈도는 궁극적으로 &lt;code&gt;average_precision_at_&amp;lt;k&amp;gt;&lt;/code&gt; 으로 반환됩니다 . 즉, &lt;code&gt;average_precision_at_&amp;lt;k&amp;gt;/total&lt;/code&gt; 을 &lt;code&gt;average_precision_at_&amp;lt;k&amp;gt;/max&lt;/code&gt; 로 간단히 나누는 dem 등원 연산입니다 .</target>
        </trans-unit>
        <trans-unit id="324a8ed6e0cee54d468db3421d126bc55a8ce4eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;avg&lt;/code&gt; means that global average pooling will be applied to the output of the last convolutional block, and thus the output of the model will be a 2D tensor.</source>
          <target state="translated">&lt;code&gt;avg&lt;/code&gt; 는 글로벌 평균 풀링이 마지막 컨볼 루션 블록의 출력에 적용되므로 모델의 출력이 2D 텐서가됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="5071cf4980f710531ae2dacad3c7f17bc15db8b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;avg&lt;/code&gt; means that global average pooling will be applied to the output of the last convolutional layer, and thus the output of the model will be a 2D tensor.</source>
          <target state="translated">&lt;code&gt;avg&lt;/code&gt; 는 글로벌 평균 풀링이 마지막 컨벌루션 레이어의 출력에 적용되므로 모델의 출력이 2D 텐서가됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="74b0b98649ec47d59a2c3fa59200448fb4b995f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt; will always be colocated with &lt;code&gt;a&lt;/code&gt;, no matter where &lt;code&gt;a&lt;/code&gt; is eventually placed.</source>
          <target state="translated">&lt;code&gt;b&lt;/code&gt; 와 &lt;code&gt;c&lt;/code&gt; 항상 함께 같은 장소에 배치됩니다 에 상관없이 어디에 &lt;code&gt;a&lt;/code&gt; 결국 배치됩니다. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3299ed16c1df44e5a12d6d2d222d4a924dec59d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;band[i, j, k, ..., m, n] = in_band(m, n) * input[i, j, k, ..., m, n]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;band[i, j, k, ..., m, n] = in_band(m, n) * input[i, j, k, ..., m, n]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7affe2b108c7dc7d0fab67222e7a1d461546f48b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bands&lt;/code&gt; is a tensor of shape &lt;code&gt;[..., K, M]&lt;/code&gt;, where &lt;code&gt;K&lt;/code&gt; represents the number of bands stored. This corresponds to a batch of &lt;code&gt;M&lt;/code&gt; by &lt;code&gt;M&lt;/code&gt; matrices, whose &lt;code&gt;K&lt;/code&gt; subdiagonals (when &lt;code&gt;lower&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;) are stored.</source>
          <target state="translated">&lt;code&gt;bands&lt;/code&gt; 는 &lt;code&gt;[..., K, M]&lt;/code&gt; 형태의 텐서이며 , 여기서 &lt;code&gt;K&lt;/code&gt; 는 저장된 밴드 수를 나타냅니다. 일괄이 상당 &lt;code&gt;M&lt;/code&gt; 의해 &lt;code&gt;M&lt;/code&gt; 의 행렬 &lt;code&gt;K&lt;/code&gt; subdiagonals ( &lt;code&gt;lower&lt;/code&gt; 인 &lt;code&gt;True&lt;/code&gt; ) 저장된다.</target>
        </trans-unit>
        <trans-unit id="59b37a828f48733b806d40e7b6a354d1a4ae4964" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;batch_dot&lt;/code&gt; is used to compute dot product of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; when &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are data in batch, i.e. in a shape of &lt;code&gt;(batch_size, :)&lt;/code&gt;. &lt;code&gt;batch_dot&lt;/code&gt; results in a tensor or variable with less dimensions than the input. If the number of dimensions is reduced to 1, we use &lt;code&gt;expand_dims&lt;/code&gt; to make sure that ndim is at least 2.</source>
          <target state="translated">&lt;code&gt;batch_dot&lt;/code&gt; 의 내적 계산에 사용되는 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 할 때 &lt;code&gt;x&lt;/code&gt; 와 &lt;code&gt;y&lt;/code&gt; 형상으로 배치, 즉 데이터이다 &lt;code&gt;(batch_size, :)&lt;/code&gt; . &lt;code&gt;batch_dot&lt;/code&gt; 는 입력 값보다 치수가 작은 텐서 또는 변수를 생성합니다. 차원의 수를 1로 감소하는 경우, 우리는 사용 &lt;code&gt;expand_dims&lt;/code&gt; 을 확인 ndim 적어도 2 것을 확인 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dae6bd1aaf403c5ab0d9b9a27970322655d4e977" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;begin&lt;/code&gt; is zero-based; &lt;code&gt;size&lt;/code&gt; is one-based. If &lt;code&gt;size[i]&lt;/code&gt; is -1, all remaining elements in dimension i are included in the slice. In other words, this is equivalent to setting:</source>
          <target state="translated">&lt;code&gt;begin&lt;/code&gt; 은 0부터 시작합니다 . &lt;code&gt;size&lt;/code&gt; 는 1 기반입니다. 경우 &lt;code&gt;size[i]&lt;/code&gt; -1 차원의 나머지 요소들은 I 슬라이스에 포함된다. 즉, 이것은 설정과 같습니다.</target>
        </trans-unit>
        <trans-unit id="73a12431ad36a4bccd00ce96424eb2df4925840a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;begin&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;, and &lt;code&gt;strides&lt;/code&gt; will be vectors of length n. n in general is not equal to the rank of the &lt;code&gt;input_&lt;/code&gt; tensor.</source>
          <target state="translated">&lt;code&gt;begin&lt;/code&gt; , &lt;code&gt;end&lt;/code&gt; 및 &lt;code&gt;strides&lt;/code&gt; 는 길이 n의 벡터입니다. 일반적으로 n은 &lt;code&gt;input_&lt;/code&gt; tensor 의 순위와 같지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="2ccbbe36b2e5a50d7957021c98351bad484f6982" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;best_eval_result&lt;/code&gt;: This is the evaluation result of the best model.</source>
          <target state="translated">&lt;code&gt;best_eval_result&lt;/code&gt; : 최상의 모델의 평가 결과입니다.</target>
        </trans-unit>
        <trans-unit id="ea34186270ed1238932e7aa9d60cdf5b0caf156e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bias_regularizer&lt;/code&gt;: Regularizer to apply a penalty on the layer's bias</source>
          <target state="translated">&lt;code&gt;bias_regularizer&lt;/code&gt; : 레이어 바이어스에 페널티를 적용하는 정규화 기</target>
        </trans-unit>
        <trans-unit id="180d0aa8e121a9faa8287453bc39da4f4f0760e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block_depth = 1&lt;/code&gt; means &lt;code&gt;A&lt;/code&gt; is symmetric circulant. For example,</source>
          <target state="translated">&lt;code&gt;block_depth = 1&lt;/code&gt; 은 &lt;code&gt;A&lt;/code&gt; 가 대칭 순환 임을 의미 합니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="d8d71f241781c7e6efa2ae958b71e39d643cd118" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block_depth = 2&lt;/code&gt; means &lt;code&gt;A&lt;/code&gt; is block symmetric circulant with symemtric circulant blocks. For example, with &lt;code&gt;W&lt;/code&gt;, &lt;code&gt;X&lt;/code&gt;, &lt;code&gt;Y&lt;/code&gt;, &lt;code&gt;Z&lt;/code&gt; symmetric circulant,</source>
          <target state="translated">&lt;code&gt;block_depth = 2&lt;/code&gt; 는 &lt;code&gt;A&lt;/code&gt; 가 대칭 순환 블록을 가진 블록 대칭 순환 임을 의미 합니다. 예를 들어 &lt;code&gt;W&lt;/code&gt; , &lt;code&gt;X&lt;/code&gt; , &lt;code&gt;Y&lt;/code&gt; , &lt;code&gt;Z&lt;/code&gt; 대칭 순환기,</target>
        </trans-unit>
        <trans-unit id="92a5a7779d5ad941748d2af8ca85ac545ef1dc0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block_depth = 2&lt;/code&gt; means &lt;code&gt;A&lt;/code&gt; is block symmetric circulant with symmetric circulant blocks. For example, with &lt;code&gt;W&lt;/code&gt;, &lt;code&gt;X&lt;/code&gt;, &lt;code&gt;Y&lt;/code&gt;, &lt;code&gt;Z&lt;/code&gt; symmetric circulant,</source>
          <target state="translated">&lt;code&gt;block_depth = 2&lt;/code&gt; 는 &lt;code&gt;A&lt;/code&gt; 가 대칭 순환 블록이있는 블록 대칭 순환 임을 의미 합니다. 예를 들어 &lt;code&gt;W&lt;/code&gt; , &lt;code&gt;X&lt;/code&gt; , &lt;code&gt;Y&lt;/code&gt; , &lt;code&gt;Z&lt;/code&gt; 대칭 순환 제를 사용하면</target>
        </trans-unit>
        <trans-unit id="5ec816a92272521fb028b11d354ec2f2c85c5182" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block_depth = 3&lt;/code&gt; means &lt;code&gt;A&lt;/code&gt; is block symmetric circulant with block symmetric circulant blocks.</source>
          <target state="translated">&lt;code&gt;block_depth = 3&lt;/code&gt; 은 &lt;code&gt;A&lt;/code&gt; 가 블록 대칭 순환 블록을 가진 블록 대칭 순환 임을 의미 합니다.</target>
        </trans-unit>
        <trans-unit id="b2298efefcd21f5f1cb4b4060c20cd88cdc52d35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bool&lt;/code&gt; scalar &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; 스칼라 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ebeb8db156bd227fb6d75e287fa9c22e2ee32ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bool&lt;/code&gt; specifying whether to print the values of &lt;code&gt;tensors&lt;/code&gt; at the end of the run.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; 실행이 끝날 때 &lt;code&gt;tensors&lt;/code&gt; 값을 인쇄할지 여부를 지정하는 bool 입니다.</target>
        </trans-unit>
        <trans-unit id="972ab6fa61176d64ee291bf3967be3feff1eb6d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bool&lt;/code&gt;, if &lt;code&gt;True&lt;/code&gt; replace all non-overlapping matches, else replace only the first match.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; , &lt;code&gt;True&lt;/code&gt; 이면 겹치지 않는 모든 일치 항목을 바꾸고, 그렇지 않으면 첫 번째 일치 항목 만 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="e5e506fc2f832db8f6582385748c2f2f3dc93bf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bool&lt;/code&gt;, if True, add flow events to the trace connecting producers and consumers of tensors.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; , True 인 경우 텐서의 생산자와 소비자를 연결하는 추적에 흐름 이벤트를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="291c6710a3312d0539aeddab797a07dc4b0b26c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bool&lt;/code&gt;, if True, add object snapshot events to the trace showing the sizes and lifetimes of tensors.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; , True 인 경우 텐서의 크기와 수명을 보여주는 추적에 개체 스냅 샷 이벤트를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="d8300c763aae0f639e0ad0f86700e9c9bdb802e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bool&lt;/code&gt;, indicates whether to pad the batch features (features need to be either of type &lt;a href=&quot;../../sparse/sparsetensor&quot;&gt;&lt;code&gt;tf.sparse.SparseTensor&lt;/code&gt;&lt;/a&gt; or of same shape).</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; 은 배치 기능을 &lt;a href=&quot;../../sparse/sparsetensor&quot;&gt; &lt;code&gt;tf.sparse.SparseTensor&lt;/code&gt; &lt;/a&gt; 여부를 나타냅니다 (기능은 tf.sparse.SparseTensor 유형 이거나 동일한 모양 이어야 함 ).</target>
        </trans-unit>
        <trans-unit id="c2085fbe9b80b36ab2acd930698d7e5f2d980ee4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bool&lt;/code&gt;, when true, it assumes the dataset is in memory, i.e., &lt;code&gt;input_fn&lt;/code&gt; should return the entire dataset as a single batch, &lt;code&gt;n_batches_per_layer&lt;/code&gt; should be set as 1, &lt;code&gt;num_worker_replicas&lt;/code&gt; should be 1, and &lt;code&gt;num_ps_replicas&lt;/code&gt; should be 0 in &lt;code&gt;tf.Estimator.RunConfig&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; 사실, 그것은 데이터 세트가 메모리에 있다고 가정 할 때, 즉, &lt;code&gt;input_fn&lt;/code&gt; 가 하나의 일괄 처리로 전체 데이터 집합을 반환해야합니다, &lt;code&gt;n_batches_per_layer&lt;/code&gt; 가 1로 설정해야합니다 &lt;code&gt;num_worker_replicas&lt;/code&gt; 는 일해야하고, &lt;code&gt;num_ps_replicas&lt;/code&gt; 는 0이어야한다 &lt;code&gt;tf.Estimator.RunConfig&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94e2cbec15737adbbd1ce73f25b6d9fdfcc4be3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bool&lt;/code&gt;, whether to raise exception when loss is NaN.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; , loss가 NaN 일 때 예외 발생 여부.</target>
        </trans-unit>
        <trans-unit id="e6c5ed64ea96a608824d18cb7b3d8c454cdd5d6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;build()&lt;/code&gt;: Called once from &lt;code&gt;__call__&lt;/code&gt;, when we know the shapes of inputs and &lt;code&gt;dtype&lt;/code&gt;. Should have the calls to &lt;code&gt;add_weight()&lt;/code&gt;, and then call the super's &lt;code&gt;build()&lt;/code&gt; (which sets &lt;code&gt;self.built = True&lt;/code&gt;, which is nice in case the user wants to call &lt;code&gt;build()&lt;/code&gt; manually before the first &lt;code&gt;__call__&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;build()&lt;/code&gt; : 입력과 &lt;code&gt;dtype&lt;/code&gt; 의 모양을 알 때 &lt;code&gt;__call__&lt;/code&gt; 에서 한 번 호출 됩니다 . 에 대한 호출이 있으시면 &lt;code&gt;add_weight()&lt;/code&gt; , 다음 슈퍼의 전화 &lt;code&gt;build()&lt;/code&gt; (설정 &lt;code&gt;self.built = True&lt;/code&gt; 좋은 경우에 대비하여 사용자가 전화를하고 싶어입니다 &lt;code&gt;build()&lt;/code&gt; 수동하기 전에 먼저 &lt;code&gt;__call__&lt;/code&gt; 을 ).</target>
        </trans-unit>
        <trans-unit id="7d6a197b6956029ff682efa43e0c0fba145bdae9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;build(self, input_shape)&lt;/code&gt;: This method can be used to create weights that depend on the shape(s) of the input(s), using &lt;code&gt;add_weight()&lt;/code&gt;. &lt;code&gt;__call__()&lt;/code&gt; will automatically build the layer (if it has not been built yet) by calling &lt;code&gt;build()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;build(self, input_shape)&lt;/code&gt; :이 메서드는 &lt;code&gt;add_weight()&lt;/code&gt; 사용하여 입력의 모양에 따라 달라지는 가중치를 만드는 데 사용할 수 있습니다 . &lt;code&gt;__call__()&lt;/code&gt; 은 &lt;code&gt;build()&lt;/code&gt; 를 호출하여 레이어를 자동으로 빌드합니다 (아직 빌드되지 않은 경우 ) .</target>
        </trans-unit>
        <trans-unit id="218ba80eb707caf383595f8b04a504dc33b87205" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;c&lt;/code&gt;: matches character &lt;code&gt;c&lt;/code&gt; where &lt;code&gt;c != '*', '?', '\\', '['&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; : 문자 &lt;code&gt;c&lt;/code&gt; 와 일치합니다. 여기서 &lt;code&gt;c != '*', '?', '\\', '['&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7e858644f37806e8c3921b6b84a1db468f2330e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;c&lt;/code&gt;: matches character &lt;code&gt;c&lt;/code&gt; while &lt;code&gt;c != '\\', '-', ']'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; : 문자 &lt;code&gt;c&lt;/code&gt; 와 일치 하는 반면 &lt;code&gt;c != '\\', '-', ']'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0124229b38dafc8076fadd6ceedd55710874e81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;c_sm_dense_value&lt;/code&gt; stores the dense matrix product:</source>
          <target state="translated">&lt;code&gt;c_sm_dense_value&lt;/code&gt; 는 조밀 한 행렬 곱을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="a2bc4af210bf0f0b69306708e06d73600d87eb85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;call()&lt;/code&gt;: Called in &lt;code&gt;__call__&lt;/code&gt; after making sure &lt;code&gt;build()&lt;/code&gt; has been called once. Should actually perform the logic of applying the layer to the input tensors (which should be passed in as the first argument).</source>
          <target state="translated">&lt;code&gt;call()&lt;/code&gt; : &lt;code&gt;build()&lt;/code&gt; 가 한 번 호출 된 후 &lt;code&gt;__call__&lt;/code&gt; 에서 호출됩니다 . 실제로 입력 텐서에 레이어를 적용하는 논리를 수행해야합니다 (첫 번째 인수로 전달되어야 함).</target>
        </trans-unit>
        <trans-unit id="933f1508659af8f1f2f235e9d90e37e6f10a8984" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;call()&lt;/code&gt;: Contains the logic for loss calculation using &lt;code&gt;y_true&lt;/code&gt;, &lt;code&gt;y_pred&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;call()&lt;/code&gt; : &lt;code&gt;y_true&lt;/code&gt; , &lt;code&gt;y_pred&lt;/code&gt; 를 사용한 손실 계산 논리가 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="72ddaf8b844ce3d98593c49b5877b3208e4ebdb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;call(self, *args, **kwargs)&lt;/code&gt;: Called in &lt;code&gt;__call__&lt;/code&gt; after making sure &lt;code&gt;build()&lt;/code&gt; has been called. &lt;code&gt;call()&lt;/code&gt; performs the logic of applying the layer to the input tensors (which should be passed in as argument). Two reserved keyword arguments you can optionally use in &lt;code&gt;call()&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;call(self, *args, **kwargs)&lt;/code&gt; : &lt;code&gt;build()&lt;/code&gt; 가 호출 되었는지 확인한 후 &lt;code&gt;__call__&lt;/code&gt; 에서 호출됩니다. &lt;code&gt;call()&lt;/code&gt; 은 입력 텐서 (인수로 전달되어야 함)에 레이어를 적용하는 논리를 수행합니다. &lt;code&gt;call()&lt;/code&gt; 에서 선택적으로 사용할 수있는 두 개의 예약 된 키워드 인수 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="56f4949c49ff916c91d67c119765b5f24043eb97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callable&lt;/code&gt;, function that takes no arguments and returns a &lt;code&gt;bool&lt;/code&gt;. If the function returns &lt;code&gt;True&lt;/code&gt;, stopping will be initiated by the chief.</source>
          <target state="translated">&lt;code&gt;callable&lt;/code&gt; , 인수를 취하지 않고 &lt;code&gt;bool&lt;/code&gt; 을 반환하는 함수 . 함수가 &lt;code&gt;True&lt;/code&gt; 를 반환 하면 수석이 중지를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="bc2300f4e92b59bfaefac234998ec871b824453c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cardinality&lt;/code&gt; may return &lt;a href=&quot;../../../../data#INFINITE_CARDINALITY&quot;&gt;&lt;code&gt;tf.data.INFINITE_CARDINALITY&lt;/code&gt;&lt;/a&gt; if the dataset contains an infinite number of elements or &lt;a href=&quot;../../../../data#UNKNOWN_CARDINALITY&quot;&gt;&lt;code&gt;tf.data.UNKNOWN_CARDINALITY&lt;/code&gt;&lt;/a&gt; if the analysis fails to determine the number of elements in the dataset (e.g. when the dataset source is a file).</source>
          <target state="translated">&lt;code&gt;cardinality&lt;/code&gt; 반환 할 수 &lt;a href=&quot;../../../../data#INFINITE_CARDINALITY&quot;&gt; &lt;code&gt;tf.data.INFINITE_CARDINALITY&lt;/code&gt; 를&lt;/a&gt; 데이터 셋이 요소 또는 무한 횟수가 포함 된 경우 &lt;a href=&quot;../../../../data#UNKNOWN_CARDINALITY&quot;&gt; &lt;code&gt;tf.data.UNKNOWN_CARDINALITY&lt;/code&gt; 를&lt;/a&gt; 분석은 데이터 세트의 요소의 수를 결정하지 못할 경우 (데이터 세트의 소스 파일 인 경우 등).</target>
        </trans-unit>
        <trans-unit id="cb29a70e663dd1d1b2094994e26f7627d057db0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cardinality&lt;/code&gt; may return &lt;a href=&quot;../../../data#INFINITE_CARDINALITY&quot;&gt;&lt;code&gt;tf.data.INFINITE_CARDINALITY&lt;/code&gt;&lt;/a&gt; if the dataset contains an infinite number of elements or &lt;a href=&quot;../../../data#UNKNOWN_CARDINALITY&quot;&gt;&lt;code&gt;tf.data.UNKNOWN_CARDINALITY&lt;/code&gt;&lt;/a&gt; if the analysis fails to determine the number of elements in the dataset (e.g. when the dataset source is a file).</source>
          <target state="translated">&lt;code&gt;cardinality&lt;/code&gt; 반환 할 수 &lt;a href=&quot;../../../data#INFINITE_CARDINALITY&quot;&gt; &lt;code&gt;tf.data.INFINITE_CARDINALITY&lt;/code&gt; 를&lt;/a&gt; 데이터 셋이 요소 또는 무한 횟수가 포함 된 경우 &lt;a href=&quot;../../../data#UNKNOWN_CARDINALITY&quot;&gt; &lt;code&gt;tf.data.UNKNOWN_CARDINALITY&lt;/code&gt; 를&lt;/a&gt; 분석은 데이터 세트의 요소의 수를 결정하지 못할 경우 (데이터 세트의 소스 파일 인 경우 등).</target>
        </trans-unit>
        <trans-unit id="3ff35688ccb808ccdc1bf41ee8a65b465224d0f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cardinality&lt;/code&gt; may return &lt;a href=&quot;../../data#INFINITE_CARDINALITY&quot;&gt;&lt;code&gt;tf.data.INFINITE_CARDINALITY&lt;/code&gt;&lt;/a&gt; if the dataset contains an infinite number of elements or &lt;a href=&quot;../../data#UNKNOWN_CARDINALITY&quot;&gt;&lt;code&gt;tf.data.UNKNOWN_CARDINALITY&lt;/code&gt;&lt;/a&gt; if the analysis fails to determine the number of elements in the dataset (e.g. when the dataset source is a file).</source>
          <target state="translated">&lt;code&gt;cardinality&lt;/code&gt; 반환 할 수 &lt;a href=&quot;../../data#INFINITE_CARDINALITY&quot;&gt; &lt;code&gt;tf.data.INFINITE_CARDINALITY&lt;/code&gt; 를&lt;/a&gt; 데이터 셋이 요소 또는 무한 횟수가 포함 된 경우 &lt;a href=&quot;../../data#UNKNOWN_CARDINALITY&quot;&gt; &lt;code&gt;tf.data.UNKNOWN_CARDINALITY&lt;/code&gt; 를&lt;/a&gt; 분석은 데이터 세트의 요소의 수를 결정하지 못할 경우 (데이터 세트의 소스 파일 인 경우 등).</target>
        </trans-unit>
        <trans-unit id="b3b0a01dca807bf73ba6d161030d53e654b3912b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cardinality&lt;/code&gt; may return &lt;a href=&quot;../data#INFINITE_CARDINALITY&quot;&gt;&lt;code&gt;tf.data.INFINITE_CARDINALITY&lt;/code&gt;&lt;/a&gt; if the dataset contains an infinite number of elements or &lt;a href=&quot;../data#UNKNOWN_CARDINALITY&quot;&gt;&lt;code&gt;tf.data.UNKNOWN_CARDINALITY&lt;/code&gt;&lt;/a&gt; if the analysis fails to determine the number of elements in the dataset (e.g. when the dataset source is a file).</source>
          <target state="translated">&lt;code&gt;cardinality&lt;/code&gt; 반환 할 수 &lt;a href=&quot;../data#INFINITE_CARDINALITY&quot;&gt; &lt;code&gt;tf.data.INFINITE_CARDINALITY&lt;/code&gt; 를&lt;/a&gt; 데이터 셋이 요소 또는 무한 횟수가 포함 된 경우 &lt;a href=&quot;../data#UNKNOWN_CARDINALITY&quot;&gt; &lt;code&gt;tf.data.UNKNOWN_CARDINALITY&lt;/code&gt; 를&lt;/a&gt; 분석은 데이터 세트의 요소의 수를 결정하지 못할 경우 (데이터 세트의 소스 파일 인 경우 등).</target>
        </trans-unit>
        <trans-unit id="0dc55c1ff84fd9fcb955d3ddc6f6ed5d6add9483" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;char_to_bytes_starts[row_splits[i]+j]&lt;/code&gt; is the start byte offset for the &lt;code&gt;j&lt;/code&gt;th character in the &lt;code&gt;i&lt;/code&gt;th string (in row-major order).</source>
          <target state="translated">&lt;code&gt;char_to_bytes_starts[row_splits[i]+j]&lt;/code&gt; 는 &lt;code&gt;i&lt;/code&gt; 번째 문자열 에서 &lt;code&gt;j&lt;/code&gt; 번째 문자에 대한 시작 바이트 오프셋입니다 (행 우선 순서).</target>
        </trans-unit>
        <trans-unit id="0c7aea06ded9e5aec47c73a66325438d1ce11a6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;char_values[row_splits[i]+j]&lt;/code&gt; is the Unicode codepoint for the &lt;code&gt;j&lt;/code&gt;th character in the &lt;code&gt;i&lt;/code&gt;th string (in row-major order).</source>
          <target state="translated">&lt;code&gt;char_values[row_splits[i]+j]&lt;/code&gt; 는 &lt;code&gt;i&lt;/code&gt; 번째 문자열 의 &lt;code&gt;j&lt;/code&gt; 번째 문자에 대한 유니 코드 코드 포인트입니다 (행 우선 순서).</target>
        </trans-unit>
        <trans-unit id="49f0a3a33e72e2e8480bfe3b8afca4dbeb1f3354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chars[i1...iN, j]&lt;/code&gt; is the substring of &lt;code&gt;input[i1...iN]&lt;/code&gt; that encodes its &lt;code&gt;j&lt;/code&gt;th character, when decoded using &lt;code&gt;input_encoding&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;chars[i1...iN, j]&lt;/code&gt; 는 &lt;code&gt;input_encoding&lt;/code&gt; 을 사용하여 디코딩 할 때 &lt;code&gt;j&lt;/code&gt; 번째 문자 를 인코딩하는 &lt;code&gt;input[i1...iN]&lt;/code&gt; 의 하위 문자열입니다 .</target>
        </trans-unit>
        <trans-unit id="5fd03587499db1c1a31eec2b73e39b820247daa2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;check_numerics&lt;/code&gt; operations themselves are added for each &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, or &lt;code&gt;double&lt;/code&gt; tensor in the current default graph. For all ops in the graph, the &lt;code&gt;check_numerics&lt;/code&gt; op for all of its (&lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, or &lt;code&gt;double&lt;/code&gt;) inputs is guaranteed to run before the &lt;code&gt;check_numerics&lt;/code&gt; op on any of its outputs.</source>
          <target state="translated">&lt;code&gt;check_numerics&lt;/code&gt; 연산 자체는 현재 기본 그래프에서 각 &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;float&lt;/code&gt; 또는 &lt;code&gt;double&lt;/code&gt; 텐서에 대해 추가 됩니다. 그래프에서 모든 OPS 들어 &lt;code&gt;check_numerics&lt;/code&gt; 의 그것 (모두에게 이익 &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;float&lt;/code&gt; 또는 &lt;code&gt;double&lt;/code&gt; ) 입력은 전에 실행되도록 보장 &lt;code&gt;check_numerics&lt;/code&gt; 를 그 출력 중 임의의 연산.</target>
        </trans-unit>
        <trans-unit id="cd26c077e2a39d9bf07923c0500a17513b352c65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;check_types&lt;/code&gt;: If set to &lt;code&gt;True&lt;/code&gt; (default) the types of iterables within the structures have to be same (e.g. &lt;code&gt;map_structure(func, [1], (1,))&lt;/code&gt; raises a &lt;code&gt;TypeError&lt;/code&gt; exception). To allow this set this argument to &lt;code&gt;False&lt;/code&gt;. Note that namedtuples with identical name and fields are always considered to have the same shallow structure.</source>
          <target state="translated">&lt;code&gt;check_types&lt;/code&gt; : &lt;code&gt;True&lt;/code&gt; (기본값)로 설정 하면 구조 내 반복 가능 유형이 동일해야합니다 (예 : &lt;code&gt;map_structure(func, [1], (1,))&lt;/code&gt; 는 &lt;code&gt;TypeError&lt;/code&gt; 예외를 발생시킵니다). 이를 허용하려면이 인수를 &lt;code&gt;False&lt;/code&gt; 로 설정하십시오 . 이름과 필드가 동일한 명명 된 튜플은 항상 동일한 얕은 구조를 갖는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="7ecd5a3dd3029f5962e5e3b608e871afa9c51375" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cluster&lt;/code&gt; is a JSON serialized version of &lt;code&gt;ClusterSpec&lt;/code&gt;'s Python dict from &lt;code&gt;server_lib.py&lt;/code&gt;, mapping task types (usually one of the &lt;code&gt;TaskType&lt;/code&gt; enums) to a list of task addresses.</source>
          <target state="translated">&lt;code&gt;cluster&lt;/code&gt; 는 &lt;code&gt;server_lib.py&lt;/code&gt; 에서 JSON 유형 의 &lt;code&gt;ClusterSpec&lt;/code&gt; Python dict 버전으로 , 태스크 유형 (일반적으로 &lt;code&gt;TaskType&lt;/code&gt; 열거 중 하나 )을 태스크 주소 목록에 맵핑 합니다.</target>
        </trans-unit>
        <trans-unit id="d940543742004eebf770d8dd4e2787404080ce08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cluster_spec&lt;/code&gt; is parsed from &lt;code&gt;TF_CONFIG['cluster']&lt;/code&gt;. Defaults to {}. If present, must have one and only one node in the &lt;code&gt;chief&lt;/code&gt; attribute of &lt;code&gt;cluster_spec&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cluster_spec&lt;/code&gt; 은 &lt;code&gt;TF_CONFIG['cluster']&lt;/code&gt; 에서 구문 분석됩니다 . 기본값은 {}입니다. 존재하는 경우 &lt;code&gt;cluster_spec&lt;/code&gt; 의 &lt;code&gt;chief&lt;/code&gt; 속성에 하나의 노드 만 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="d510a3a9ad4425a1db0a6e8bac5add419319d5f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;codepoints&lt;/code&gt; is an &lt;code&gt;int32&lt;/code&gt; tensor with shape &lt;code&gt;[D1...DN, (num_chars)]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;codepoints&lt;/code&gt; 는 &lt;code&gt;[D1...DN, (num_chars)]&lt;/code&gt; 모양 의 &lt;code&gt;int32&lt;/code&gt; 텐서입니다 .</target>
        </trans-unit>
        <trans-unit id="18717fc992b4b92173073cff18e47313a39c7cd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;codepoints[i1...iN, j]&lt;/code&gt; is the Unicode codepoint for the &lt;code&gt;j&lt;/code&gt;th character in &lt;code&gt;input[i1...iN]&lt;/code&gt;, when decoded using &lt;code&gt;input_encoding&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;codepoints[i1...iN, j]&lt;/code&gt; 는 &lt;code&gt;input_encoding&lt;/code&gt; 을 사용하여 디코딩 할 때 &lt;code&gt;input[i1...iN]&lt;/code&gt; 의 &lt;code&gt;j&lt;/code&gt; 번째 문자에 대한 유니 코드 코드 포인트입니다 .</target>
        </trans-unit>
        <trans-unit id="8703781f2d54e165df09ea2a5e29d1436d7d7f30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;col_remapping&lt;/code&gt; must have either 0 entries (indicating that no column reordering is needed) or &lt;code&gt;num_cols&lt;/code&gt; entries. If specified, column &lt;code&gt;j&lt;/code&gt; of the output matrix will be initialized from the column corresponding to index &lt;code&gt;col_remapping[j]&lt;/code&gt; in the old &lt;code&gt;Tensor&lt;/code&gt; from the checkpoint.</source>
          <target state="translated">&lt;code&gt;col_remapping&lt;/code&gt; 에는 0 개 항목 (열 재정렬이 필요하지 않음을 나타냄) 또는 &lt;code&gt;num_cols&lt;/code&gt; 항목이 있어야 합니다. 지정된 경우 출력 행렬의 &lt;code&gt;j&lt;/code&gt; 열 은 체크 포인트에서 이전 &lt;code&gt;Tensor&lt;/code&gt; 의 &lt;code&gt;col_remapping[j]&lt;/code&gt; 인덱스에 해당하는 열에서 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="99e5617e69d7050da7dd97f3c71193b7aa75efff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;computation&lt;/code&gt; may return a list of operations and tensors. Tensors must come before operations in the returned list. The return value of &lt;code&gt;compile&lt;/code&gt; is a list of tensors corresponding to the tensors from the output of &lt;code&gt;computation&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;computation&lt;/code&gt; 은 연산 및 텐서 목록을 반환 할 수 있습니다. 텐서는 반환 된 목록에서 작업 전에 와야합니다. &lt;code&gt;compile&lt;/code&gt; 의 반환 값 은 &lt;code&gt;computation&lt;/code&gt; 출력에서 텐서에 해당하는 텐서 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="5b938e2146d3b4a576871b972ffdef6c2c3e2e2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;computation&lt;/code&gt; may return a list of operations and tensors. Tensors must come before operations in the returned list. The return value of &lt;code&gt;rewrite&lt;/code&gt; is a list of tensors corresponding to the tensors from the output of &lt;code&gt;computation&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;computation&lt;/code&gt; 은 연산 및 텐서 목록을 반환 할 수 있습니다. 텐서는 반환 된 목록에서 작업 전에 와야합니다. &lt;code&gt;rewrite&lt;/code&gt; 의 반환 값 은 &lt;code&gt;computation&lt;/code&gt; 출력의 텐서에 해당하는 텐서 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="9ca6dad9e9accd81aacfaec23c2a8a2222143033" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;concentration = alpha = [alpha_0, ..., alpha_{K-1}]&lt;/code&gt;, &lt;code&gt;alpha_j &amp;gt; 0&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;concentration = alpha = [alpha_0, ..., alpha_{K-1}]&lt;/code&gt; , &lt;code&gt;alpha_j &amp;gt; 0&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="957afca5d5e2e44033b442c6bcf6aaed586e4fc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;concentration = alpha = [alpha_0, ..., alpha_{k-1}]&lt;/code&gt;, &lt;code&gt;alpha_j &amp;gt; 0&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;concentration = alpha = [alpha_0, ..., alpha_{k-1}]&lt;/code&gt; , &lt;code&gt;alpha_j &amp;gt; 0&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="a78b15470556004681d1c5f2fe8811535e65b1a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;concentration = alpha&lt;/code&gt;, &lt;code&gt;alpha &amp;gt; 0&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;concentration = alpha&lt;/code&gt; , &lt;code&gt;alpha &amp;gt; 0&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="17835e8371b92a578852196a8eca83d9a262aa3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;concentration0 = beta&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;concentration0 = beta&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="914cef65698325b80d67f5d89a9c09fdbbdcab4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;concentration1 = alpha&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;concentration1 = alpha&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="bff8bd84b4691a0ebd0d651094f6287dca2d9d39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cond&lt;/code&gt; is a callable returning a boolean scalar tensor. &lt;code&gt;body&lt;/code&gt; is a callable returning a (possibly nested) tuple, namedtuple or list of tensors of the same arity (length and structure) and types as &lt;code&gt;loop_vars&lt;/code&gt;. &lt;code&gt;loop_vars&lt;/code&gt; is a (possibly nested) tuple, namedtuple or list of tensors that is passed to both &lt;code&gt;cond&lt;/code&gt; and &lt;code&gt;body&lt;/code&gt;. &lt;code&gt;cond&lt;/code&gt; and &lt;code&gt;body&lt;/code&gt; both take as many arguments as there are &lt;code&gt;loop_vars&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cond&lt;/code&gt; 는 부울 스칼라 텐서를 반환하는 호출 가능입니다. &lt;code&gt;body&lt;/code&gt; 는 &lt;code&gt;loop_vars&lt;/code&gt; 와 같은 arity (length and structure) 및 유형의 튜너 , 명명 된 튜플 또는 텐서 목록을 반환하는 호출 가능 항목입니다 . &lt;code&gt;loop_vars&lt;/code&gt; 는 &lt;code&gt;cond&lt;/code&gt; 와 &lt;code&gt;body&lt;/code&gt; 모두에 전달되는 이름 이 지정된 튜플 또는 텐서 목록 인 중첩 된 튜플 입니다. &lt;code&gt;cond&lt;/code&gt; 와 &lt;code&gt;body&lt;/code&gt; 모두 &lt;code&gt;loop_vars&lt;/code&gt; 만큼 많은 인수를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="c514124865739ff8b322e59b30382d3c2653d811" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config&lt;/code&gt; -- Optional &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/estimator/RunConfig&quot;&gt;&lt;code&gt;estimator.RunConfig&lt;/code&gt;&lt;/a&gt; object. Will receive what is passed to Estimator as its &lt;code&gt;config&lt;/code&gt; parameter, or a default value. Allows setting up things in your &lt;code&gt;model_fn&lt;/code&gt; based on configuration such as &lt;code&gt;num_ps_replicas&lt;/code&gt;, or &lt;code&gt;model_dir&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config&lt;/code&gt; - 선택적 &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/estimator/RunConfig&quot;&gt; &lt;code&gt;estimator.RunConfig&lt;/code&gt; &lt;/a&gt; 객체. &lt;code&gt;config&lt;/code&gt; 매개 변수 또는 기본값 으로 Estimator에 전달 된 내용을 수신 합니다. 당신의 가지 설정을 할 수 있습니다 &lt;code&gt;model_fn&lt;/code&gt; 을 같은 구성에 따라 &lt;code&gt;num_ps_replicas&lt;/code&gt; , 또는 &lt;code&gt;model_dir&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b5e907991560f83cd5b4481be9f884285231bcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config&lt;/code&gt; -- Optional &lt;a href=&quot;runconfig&quot;&gt;&lt;code&gt;estimator.RunConfig&lt;/code&gt;&lt;/a&gt; object. Will receive what is passed to Estimator as its &lt;code&gt;config&lt;/code&gt; parameter, or a default value. Allows setting up things in your &lt;code&gt;model_fn&lt;/code&gt; based on configuration such as &lt;code&gt;num_ps_replicas&lt;/code&gt;, or &lt;code&gt;model_dir&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config&lt;/code&gt; - 선택적 &lt;a href=&quot;runconfig&quot;&gt; &lt;code&gt;estimator.RunConfig&lt;/code&gt; &lt;/a&gt; 객체. &lt;code&gt;config&lt;/code&gt; 매개 변수 또는 기본값 으로 Estimator에 전달 된 내용을 수신 합니다. 당신의 가지 설정을 할 수 있습니다 &lt;code&gt;model_fn&lt;/code&gt; 을 같은 구성에 따라 &lt;code&gt;num_ps_replicas&lt;/code&gt; , 또는 &lt;code&gt;model_dir&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f767ab5720d3f567020524d4489c71c96fda70b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config&lt;/code&gt;: Optional &lt;a href=&quot;../../../estimator/runconfig&quot;&gt;&lt;code&gt;estimator.RunConfig&lt;/code&gt;&lt;/a&gt; object. Will receive what is passed to Estimator as its &lt;code&gt;config&lt;/code&gt; parameter, or a default value. Allows setting up things in your &lt;code&gt;model_fn&lt;/code&gt; based on configuration such as &lt;code&gt;num_ps_replicas&lt;/code&gt;, or &lt;code&gt;model_dir&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config&lt;/code&gt; : 선택적 &lt;a href=&quot;../../../estimator/runconfig&quot;&gt; &lt;code&gt;estimator.RunConfig&lt;/code&gt; &lt;/a&gt; 오브젝트. Estimator에 &lt;code&gt;config&lt;/code&gt; 매개 변수 또는 기본값 으로 전달 된 내용을 수신 합니다. 당신의 가지 설정을 할 수 있습니다 &lt;code&gt;model_fn&lt;/code&gt; 을 같은 구성에 따라 &lt;code&gt;num_ps_replicas&lt;/code&gt; , 또는 &lt;code&gt;model_dir&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c88e3c6ecf451723a94085934627bc2a909a577" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config&lt;/code&gt;: Optional &lt;a href=&quot;runconfig&quot;&gt;&lt;code&gt;estimator.RunConfig&lt;/code&gt;&lt;/a&gt; object. Will receive what is passed to Estimator as its &lt;code&gt;config&lt;/code&gt; parameter, or a default value. Allows setting up things in your &lt;code&gt;model_fn&lt;/code&gt; based on configuration such as &lt;code&gt;num_ps_replicas&lt;/code&gt;, or &lt;code&gt;model_dir&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config&lt;/code&gt; : 선택적 &lt;a href=&quot;runconfig&quot;&gt; &lt;code&gt;estimator.RunConfig&lt;/code&gt; &lt;/a&gt; 오브젝트. Estimator에 &lt;code&gt;config&lt;/code&gt; 매개 변수 또는 기본값 으로 전달 된 내용을 수신 합니다. 당신의 가지 설정을 할 수 있습니다 &lt;code&gt;model_fn&lt;/code&gt; 을 같은 구성에 따라 &lt;code&gt;num_ps_replicas&lt;/code&gt; , 또는 &lt;code&gt;model_dir&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6d1249bac35c605e37e41bc1990444fad8bdf615" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context_features&lt;/code&gt; contains &lt;code&gt;VarLenFeature&lt;/code&gt;, &lt;code&gt;RaggedFeature&lt;/code&gt;, and &lt;code&gt;FixedLenFeature&lt;/code&gt; objects. Each &lt;code&gt;VarLenFeature&lt;/code&gt; is mapped to a &lt;code&gt;SparseTensor&lt;/code&gt;; each &lt;code&gt;RaggedFeature&lt;/code&gt; is mapped to a &lt;code&gt;RaggedTensor&lt;/code&gt;; and each &lt;code&gt;FixedLenFeature&lt;/code&gt; is mapped to a &lt;code&gt;Tensor&lt;/code&gt;, of the specified type, shape, and default value.</source>
          <target state="translated">&lt;code&gt;context_features&lt;/code&gt; 는 &lt;code&gt;VarLenFeature&lt;/code&gt; , &lt;code&gt;RaggedFeature&lt;/code&gt; 및 &lt;code&gt;FixedLenFeature&lt;/code&gt; 객체를 포함합니다. 각 &lt;code&gt;VarLenFeature&lt;/code&gt; 는 (A)에 맵핑된다 &lt;code&gt;SparseTensor&lt;/code&gt; ; 각 &lt;code&gt;RaggedFeature&lt;/code&gt; 는 (A)에 맵핑된다 &lt;code&gt;RaggedTensor&lt;/code&gt; ; 각 &lt;code&gt;FixedLenFeature&lt;/code&gt; 는 지정된 유형, 모양 및 기본값 의 &lt;code&gt;Tensor&lt;/code&gt; 에 맵핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="9c78148b4c2cf678e877fdf6dc3b267d54d4b4d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;control_inputs&lt;/code&gt; contains additional ops that have to finish before this op finishes, but whose outputs are not returned.</source>
          <target state="translated">&lt;code&gt;control_inputs&lt;/code&gt; 에는이 작업이 완료되기 전에 완료해야하지만 출력이 반환되지 않는 추가 작업이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc963b9b609c63373d985c2a86fb1d5f892b2d94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;current_eval_result&lt;/code&gt;: This is the evaluation result of current candidate model.</source>
          <target state="translated">&lt;code&gt;current_eval_result&lt;/code&gt; : 현재 후보 모델의 평가 결과입니다.</target>
        </trans-unit>
        <trans-unit id="8912017de18386abde3a7c474b41a62fd76ceb24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;custom_objects&lt;/code&gt; should be a dictionary mapping the names of custom losses / layers / etc to the corresponding functions / classes.</source>
          <target state="translated">&lt;code&gt;custom_objects&lt;/code&gt; 는 사용자 정의 손실 / 레이어 / 등의 이름을 해당 함수 / 클래스에 매핑하는 사전이어야합니다.</target>
        </trans-unit>
        <trans-unit id="378917e950828733edf5d0ea0d5c08ec5a5bb585" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data.shape&lt;/code&gt; must start with &lt;code&gt;partitions.shape&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;data.shape&lt;/code&gt; 는 &lt;code&gt;partitions.shape&lt;/code&gt; 로 시작해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="bf53b5719c1b48a254e94b54fad9235d69d87545" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dataset_fn&lt;/code&gt; will be called once for each worker in the strategy. Each replica on that worker will dequeue one batch of inputs from the local &lt;code&gt;Dataset&lt;/code&gt; (i.e. if a worker has two replicas, two batches will be dequeued from the &lt;code&gt;Dataset&lt;/code&gt; every step).</source>
          <target state="translated">&lt;code&gt;dataset_fn&lt;/code&gt; 은 전략의 각 작업자마다 한 번씩 호출됩니다. 해당 워커의 각 복제본은 로컬 &lt;code&gt;Dataset&lt;/code&gt; 에서 입력 일괄 처리를 대기열에서 제외합니다 (즉, 작업자에게 두 개의 복제본이있는 경우 매 단계마다 두 개의 배치가 &lt;code&gt;Dataset&lt;/code&gt; 에서 대기열에서 제외됨 ).</target>
        </trans-unit>
        <trans-unit id="8a3bb474309d75730d8be40dcd22efe7b2283add" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dataset_fn&lt;/code&gt; will be called once for each worker in the strategy. In this case, we only have one worker and one device so &lt;code&gt;dataset_fn&lt;/code&gt; is called once.</source>
          <target state="translated">&lt;code&gt;dataset_fn&lt;/code&gt; 은 전략의 각 작업자마다 한 번씩 호출됩니다. 이 경우 작업자와 장치가 하나만 있으므로 &lt;code&gt;dataset_fn&lt;/code&gt; 이 한 번 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="81c1e81b285c8470468d60710d9def4a783f5bb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dataset_fn&lt;/code&gt; will be called once for each worker in the strategy. In this case, we only have one worker so &lt;code&gt;dataset_fn&lt;/code&gt; is called once. Each replica on this worker will then dequeue a batch of elements from this local dataset.</source>
          <target state="translated">&lt;code&gt;dataset_fn&lt;/code&gt; 은 전략의 각 작업자마다 한 번씩 호출됩니다. 이 경우 작업자가 한 명이므로 &lt;code&gt;dataset_fn&lt;/code&gt; 이 한 번 호출됩니다. 그런 다음이 워커의 각 복제본은이 로컬 데이터 세트에서 일련의 요소를 대기열에서 제외시킵니다.</target>
        </trans-unit>
        <trans-unit id="4165a08a954b08da9481322309268aa45cbfa753" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decoded.dense_shape&lt;/code&gt;: Shape vector, size &lt;code&gt;(2)&lt;/code&gt;. The shape values are: &lt;code&gt;[batch_size, max_decoded_length]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;decoded.dense_shape&lt;/code&gt; : 모양 벡터, 크기 &lt;code&gt;(2)&lt;/code&gt; . 모양 값은 다음과 같습니다. &lt;code&gt;[batch_size, max_decoded_length]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0408becf7dfc2d3939cbd212f268df6a5e19e3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decoded.indices&lt;/code&gt;: Indices matrix &lt;code&gt;(total_decoded_outputs, 2)&lt;/code&gt;. The rows store: &lt;code&gt;[batch, time]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;decoded.indices&lt;/code&gt; : 인덱스 매트릭스 &lt;code&gt;(total_decoded_outputs, 2)&lt;/code&gt; . 행은 다음을 저장합니다. &lt;code&gt;[batch, time]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="394393e2d88a6c8fee3085fd362ebc2261e57186" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decoded.values&lt;/code&gt;: Values vector, size &lt;code&gt;(total_decoded_outputs)&lt;/code&gt;. The vector stores the decoded classes.</source>
          <target state="translated">&lt;code&gt;decoded.values&lt;/code&gt; : 값 벡터, 크기 &lt;code&gt;(total_decoded_outputs)&lt;/code&gt; . 벡터는 디코딩 된 클래스를 저장한다.</target>
        </trans-unit>
        <trans-unit id="a00d9be83adb52d63a90b2a04bddceb68e43aef6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decoded[j].dense_shape&lt;/code&gt;: Shape vector, size &lt;code&gt;(2)&lt;/code&gt;. The shape values are: &lt;code&gt;[batch_size, max_decoded_length[j]]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;decoded[j].dense_shape&lt;/code&gt; : 모양 벡터, 크기 &lt;code&gt;(2)&lt;/code&gt; . 모양 값은 &lt;code&gt;[batch_size, max_decoded_length[j]]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e26047d74fa0b2ff7ed962674f424462c923c045" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decoded[j].indices&lt;/code&gt;: Indices matrix &lt;code&gt;(total_decoded_outputs[j] x 2)&lt;/code&gt; The rows store: [batch, time].</source>
          <target state="translated">&lt;code&gt;decoded[j].indices&lt;/code&gt; : 인덱스 행렬 &lt;code&gt;(total_decoded_outputs[j] x 2)&lt;/code&gt; 행은 다음을 저장합니다. [일괄 처리, 시간].</target>
        </trans-unit>
        <trans-unit id="8bad266c48257293de68d6d366c5673803645ff3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decoded[j].indices&lt;/code&gt;: Indices matrix &lt;code&gt;[total_decoded_outputs[j], 2]&lt;/code&gt;; The rows store: &lt;code&gt;[batch, time]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;decoded[j].indices&lt;/code&gt; : 인덱스 매트릭스 &lt;code&gt;[total_decoded_outputs[j], 2]&lt;/code&gt; ; 행은 다음을 저장합니다. &lt;code&gt;[batch, time]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="891309b929735319eb247ee08a18a2d5495bd692" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decoded[j].values&lt;/code&gt;: Values vector, size &lt;code&gt;(total_decoded_outputs[j])&lt;/code&gt;. The vector stores the decoded classes for beam j.</source>
          <target state="translated">&lt;code&gt;decoded[j].values&lt;/code&gt; : 값 벡터, 크기 &lt;code&gt;(total_decoded_outputs[j])&lt;/code&gt; . 벡터는 빔 j에 대한 디코딩 된 클래스를 저장한다.</target>
        </trans-unit>
        <trans-unit id="94c5acf546d2bd75ed219a6f967eb1d011b8fb1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decoded[j].values&lt;/code&gt;: Values vector, size &lt;code&gt;[total_decoded_outputs[j]]&lt;/code&gt;. The vector stores the decoded classes for beam &lt;code&gt;j&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;decoded[j].values&lt;/code&gt; : 값 벡터, 크기 &lt;code&gt;[total_decoded_outputs[j]]&lt;/code&gt; . 벡터는 빔 &lt;code&gt;j&lt;/code&gt; 에 대한 디코딩 된 클래스를 저장한다 .</target>
        </trans-unit>
        <trans-unit id="8e5ce2afb0b23ff19fafffae9bf6aff81e16fa3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default_id&lt;/code&gt; is 0.</source>
          <target state="translated">&lt;code&gt;default_id&lt;/code&gt; 는 0입니다.</target>
        </trans-unit>
        <trans-unit id="1fc71e35e869f7a5e28f7b01ab45f0ed93fed729" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delimiter&lt;/code&gt; can be empty, or a string of split characters. If &lt;code&gt;delimiter&lt;/code&gt; is an empty string, each element of &lt;code&gt;input&lt;/code&gt; is split into individual single-byte character strings, including splitting of UTF-8 multibyte sequences. Otherwise every character of &lt;code&gt;delimiter&lt;/code&gt; is a potential split point.</source>
          <target state="translated">&lt;code&gt;delimiter&lt;/code&gt; 는 비어 있거나 분할 된 문자열 일 수 있습니다. &lt;code&gt;delimiter&lt;/code&gt; 가 빈 문자열 인 경우 &lt;code&gt;input&lt;/code&gt; 각 요소 는 UTF-8 멀티 바이트 시퀀스 분할을 포함하여 개별 단일 바이트 문자열로 분할됩니다. 그렇지 않으면 &lt;code&gt;delimiter&lt;/code&gt; 모든 문자 가 잠재적 인 분할 지점입니다.</target>
        </trans-unit>
        <trans-unit id="679a9b96d1fde2dda6f469d4c1a106e9010a756f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delta&lt;/code&gt; must be in the interval &lt;code&gt;[-1, 1]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;delta&lt;/code&gt; 는 &lt;code&gt;[-1, 1]&lt;/code&gt; 간격에 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="f60d8ab982d5f45216b5f433786204b25119c9cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dense_cholesky_value&lt;/code&gt; stores the dense Cholesky factor:</source>
          <target state="translated">&lt;code&gt;dense_cholesky_value&lt;/code&gt; 는 조밀 한 촐레 스키 인자를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="d238dc706af1ed43348fb6e10737580721a41829" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dense_shape&lt;/code&gt;: A 1-D int64 tensor of shape &lt;code&gt;[ndims]&lt;/code&gt;, which specifies the dense_shape of the sparse tensor. Takes a list indicating the number of elements in each dimension. For example, &lt;code&gt;dense_shape=[3,6]&lt;/code&gt; specifies a two-dimensional 3x6 tensor, &lt;code&gt;dense_shape=[2,3,4]&lt;/code&gt; specifies a three-dimensional 2x3x4 tensor, and &lt;code&gt;dense_shape=[9]&lt;/code&gt; specifies a one-dimensional tensor with 9 elements.</source>
          <target state="translated">&lt;code&gt;dense_shape&lt;/code&gt; : 희소 텐서의 dense_shape를 지정하는 모양 &lt;code&gt;[ndims]&lt;/code&gt; 의 1-D int64 텐서입니다 . 각 차원의 요소 수를 나타내는 목록을 가져옵니다. 예를 들어, &lt;code&gt;dense_shape=[3,6]&lt;/code&gt; 은 2 차원 3x6 텐서를 지정하고 &lt;code&gt;dense_shape=[2,3,4]&lt;/code&gt; 는 3 차원 2x3x4 텐서를 지정하고 &lt;code&gt;dense_shape=[9]&lt;/code&gt; 는 9 개의 요소가있는 1 차원 텐서를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="d59ce10f3a5562aa74b7677ffb2f6af37c5e3a0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;device_fn&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;device_fn&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="bf9f6c996077297a88e3ad6bb6f35c12ece719eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;device_name&lt;/code&gt; can be fully specified, as in &quot;/job:worker/task:1/device:cpu:0&quot;, or partially specified, containing only a subset of the &quot;/&quot;-separated fields. Any fields which are specified override device annotations from outer scopes. For example:</source>
          <target state="translated">&lt;code&gt;device_name&lt;/code&gt; 은 &quot;/ job : worker / task : 1 / device : cpu : 0&quot;에서와 같이 완전히 지정하거나 &quot;/&quot;으로 구분 된 필드의 서브 세트 만 포함하여 부분적으로 지정할 수 있습니다. 지정된 모든 필드는 외부 범위의 장치 주석보다 우선합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d33950da0dd8b31cb3dc74e094992e9aee99e460" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;diagonal[i, j, k, ..., n] = input[i, j, k, ..., n, n]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;diagonal[i, j, k, ..., n] = input[i, j, k, ..., n, n]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cde4e5e8edb87c2aae9998bf7f26528852c2d62f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;diagonal[i1,..., ik] = input[i1, ..., ik, i1,..., ik]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;diagonal[i1,..., ik] = input[i1, ..., ik, i1,..., ik]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ffc77f488acb42bb26f38faf092a91589f510ac6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;diagonals&lt;/code&gt; is representation of 3-diagonal NxN matrix, which depends on &lt;code&gt;diagonals_format&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;diagonals&lt;/code&gt; 에 따라 3의 nxn 대각 행렬의 표현 &lt;code&gt;diagonals_format&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99a95928e6fc89041893a51ddf2a7460d01810cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dict&lt;/code&gt; of hyper parameters that will be passed into &lt;code&gt;model_fn&lt;/code&gt;. Keys are names of parameters, values are basic python types.</source>
          <target state="translated">&lt;code&gt;dict&lt;/code&gt; &lt;code&gt;model_fn&lt;/code&gt; 에 전달 될 하이퍼 매개 변수의 dict . 키는 매개 변수의 이름이고 값은 기본 파이썬 유형입니다.</target>
        </trans-unit>
        <trans-unit id="d7c4bfa87da8d4396517b8cf4ad0bcd7b553206e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dict&lt;/code&gt; of parameter name to &lt;code&gt;Tensor&lt;/code&gt; shapes.</source>
          <target state="translated">&lt;code&gt;dict&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 모양에 대한 매개 변수 이름 dict .</target>
        </trans-unit>
        <trans-unit id="333ff26267b4a13b027f82fc811f064e84231d7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dict&lt;/code&gt; of parameter name to &lt;code&gt;TensorShape&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dict&lt;/code&gt; &lt;code&gt;TensorShape&lt;/code&gt; 에 대한 매개 변수 이름 dict .</target>
        </trans-unit>
        <trans-unit id="ba21caee168bddb6e72c121ebb1931324a3b98fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dict&lt;/code&gt; that maps string-valued tags to tensors/tensor names, or &lt;code&gt;iterable&lt;/code&gt; of tensors/tensor names.</source>
          <target state="translated">&lt;code&gt;dict&lt;/code&gt; 문자열 값 태그를 텐서 / 텐서 이름 또는 &lt;code&gt;iterable&lt;/code&gt; 텐서 / 텐서 이름에 매핑하는 dict .</target>
        </trans-unit>
        <trans-unit id="ffea46d4231c84cb4b2e8091e8499b0108a091b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dims&lt;/code&gt; contains negative entries.</source>
          <target state="translated">&lt;code&gt;dims&lt;/code&gt; 에는 부정적인 항목이 있습니다.</target>
        </trans-unit>
        <trans-unit id="96fa56708e0227d35ddce6785a7a520c5e9e63c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dims&lt;/code&gt; contains non-integer entries.</source>
          <target state="translated">&lt;code&gt;dims&lt;/code&gt; 는 정수가 아닌 항목을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="697952dbe5f7194e049bb4b00b4508be2b07b380" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dtype&lt;/code&gt; for input/output.</source>
          <target state="translated">&lt;code&gt;dtype&lt;/code&gt; 입력 / 출력을위한 dtype .</target>
        </trans-unit>
        <trans-unit id="0cd704333e71748197e57bfcfcca5b4fc6a6ea51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dtype&lt;/code&gt; for the RaggedTensor's &lt;code&gt;row_splits&lt;/code&gt; tensor. One of &lt;a href=&quot;../tf#int32&quot;&gt;&lt;code&gt;tf.int32&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;dtype&lt;/code&gt; 의 &lt;code&gt;row_splits&lt;/code&gt; 텐서 에 대한 dtype 입니다. &lt;a href=&quot;../tf#int32&quot;&gt; &lt;code&gt;tf.int32&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="0676db729f876b52b60cb30861713bebf494d461" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dtype&lt;/code&gt; for the returned &lt;code&gt;RaggedTensor&lt;/code&gt;'s &lt;code&gt;row_splits&lt;/code&gt; tensor. One of &lt;a href=&quot;../../tf#int32&quot;&gt;&lt;code&gt;tf.int32&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;dtype&lt;/code&gt; 반환 된 &lt;code&gt;RaggedTensor&lt;/code&gt; 의 &lt;code&gt;row_splits&lt;/code&gt; 텐서에 대한 dtype 입니다 . &lt;a href=&quot;../../tf#int32&quot;&gt; &lt;code&gt;tf.int32&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="397a7c60b0509ec3172f84a43780f14976f6dcf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dtype&lt;/code&gt; for the returned &lt;code&gt;RaggedTensor&lt;/code&gt;'s &lt;code&gt;row_splits&lt;/code&gt; tensor. One of &lt;a href=&quot;../tf#int32&quot;&gt;&lt;code&gt;tf.int32&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;dtype&lt;/code&gt; 반환 된 &lt;code&gt;RaggedTensor&lt;/code&gt; 의 &lt;code&gt;row_splits&lt;/code&gt; 텐서에 대한 dtype 입니다 . &lt;a href=&quot;../tf#int32&quot;&gt; &lt;code&gt;tf.int32&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="c03a1e62d1fcd1844e9ddb766af8be96c4dd82f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dtype&lt;/code&gt; for the returned tensor. Defaults to &lt;code&gt;self.row_splits.dtype&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dtype&lt;/code&gt; 반환 된 텐서의 dtype . 기본값은 &lt;code&gt;self.row_splits.dtype&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b225e95c3f776a483477d872a384e0e9479498ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dtype&lt;/code&gt; is neither string nor integer.</source>
          <target state="translated">&lt;code&gt;dtype&lt;/code&gt; 은 문자열도 정수도 아닙니다.</target>
        </trans-unit>
        <trans-unit id="a43f2a867563017b2f0a3af8fc1b2a15bb7d0875" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;embedding_column&lt;/code&gt; that wraps a &lt;code&gt;sequence_categorical_column_with_*&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;embedding_column&lt;/code&gt; &lt;code&gt;sequence_categorical_column_with_*&lt;/code&gt; 를 감싸는 embedding_column</target>
        </trans-unit>
        <trans-unit id="91c22824e2d0f4dbdca683c72748579bbb2204a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emit_ta&lt;/code&gt;: The RNN output &lt;code&gt;TensorArray&lt;/code&gt;. If &lt;code&gt;loop_fn&lt;/code&gt; returns a (possibly nested) set of Tensors for &lt;code&gt;emit_output&lt;/code&gt; during initialization, (inputs &lt;code&gt;time = 0&lt;/code&gt;, &lt;code&gt;cell_output = None&lt;/code&gt;, and &lt;code&gt;loop_state = None&lt;/code&gt;), then &lt;code&gt;emit_ta&lt;/code&gt; will have the same structure, dtypes, and shapes as &lt;code&gt;emit_output&lt;/code&gt; instead. If &lt;code&gt;loop_fn&lt;/code&gt; returns &lt;code&gt;emit_output = None&lt;/code&gt; during this call, the structure of &lt;code&gt;cell.output_size&lt;/code&gt; is used: If &lt;code&gt;cell.output_size&lt;/code&gt; is a (possibly nested) tuple of integers or &lt;code&gt;TensorShape&lt;/code&gt; objects, then &lt;code&gt;emit_ta&lt;/code&gt; will be a tuple having the same structure as &lt;code&gt;cell.output_size&lt;/code&gt;, containing TensorArrays whose elements' shapes correspond to the shape data in &lt;code&gt;cell.output_size&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;emit_ta&lt;/code&gt; : RNN 출력 &lt;code&gt;TensorArray&lt;/code&gt; . 경우 &lt;code&gt;loop_fn&lt;/code&gt; 반품 텐서의 (가능하게 중첩) 세트 &lt;code&gt;emit_output&lt;/code&gt; 초기화시 (입력 &lt;code&gt;time = 0&lt;/code&gt; , &lt;code&gt;cell_output = None&lt;/code&gt; , 및 &lt;code&gt;loop_state = None&lt;/code&gt; ) 다음 &lt;code&gt;emit_ta&lt;/code&gt; 는 동일한 구조 dtypes 및 형상을 가질 것이다 &lt;code&gt;emit_output&lt;/code&gt; 대신. 경우 &lt;code&gt;loop_fn&lt;/code&gt; 의 복귀 &lt;code&gt;emit_output = None&lt;/code&gt; 이 통화 중이 구조 &lt;code&gt;cell.output_size&lt;/code&gt; 이 경우 사용 &lt;code&gt;cell.output_size&lt;/code&gt; 는 정수 (중첩 가능) 또는 튜플 &lt;code&gt;TensorShape&lt;/code&gt; 는 다음 개체 &lt;code&gt;emit_ta&lt;/code&gt; 동일한 구조를 갖는 튜플 것이다 &lt;code&gt;cell.output_size&lt;/code&gt; 를 요소의 도형의 형상 데이터에 대응 TensorArrays 함유 &lt;code&gt;cell.output_size&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="c8bfc57ac71ba2f83671fed8c4eeebbd053d27e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval_distribute&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;eval_distribute&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="f03209698be3ed41a04600d4b71b020738007790" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;example_name&lt;/code&gt; may contain a descriptive name for the corresponding serialized proto. This may be useful for debugging purposes, but it has no effect on the output. If not &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;example_name&lt;/code&gt; must be a scalar.</source>
          <target state="translated">&lt;code&gt;example_name&lt;/code&gt; 에는 해당 직렬화 된 프로토 타입에 대한 설명이 포함되어있을 수 있습니다. 이것은 디버깅 목적으로 유용 할 수 있지만 출력에는 영향을 미치지 않습니다. 그렇지 않은 경우 &lt;code&gt;None&lt;/code&gt; , &lt;code&gt;example_name&lt;/code&gt; 는 스칼라해야합니다.</target>
        </trans-unit>
        <trans-unit id="5b7386fd1b50fb8dfdb8684a09d480c783a93fd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;example_names&lt;/code&gt; may contain descriptive names for the corresponding serialized protos. These may be useful for debugging purposes, but they have no effect on the output. If not &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;example_names&lt;/code&gt; must be the same length as &lt;code&gt;serialized&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;example_names&lt;/code&gt; 는 해당 직렬화 된 프로토 타입에 대한 설명적인 이름을 포함 할 수 있습니다. 이들은 디버깅 목적으로 유용 할 수 있지만 출력에는 영향을 미치지 않습니다. 그렇지 않은 경우 &lt;code&gt;None&lt;/code&gt; , &lt;code&gt;example_names&lt;/code&gt; 은 같은 길이이어야 &lt;code&gt;serialized&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e127dcda639c6095ce09fe18f0eefd3441cd34d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expand_composites&lt;/code&gt;: If set to &lt;code&gt;True&lt;/code&gt;, then composite tensors such as &lt;a href=&quot;../sparse/sparsetensor&quot;&gt;&lt;code&gt;tf.SparseTensor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../raggedtensor&quot;&gt;&lt;code&gt;tf.RaggedTensor&lt;/code&gt;&lt;/a&gt; are expanded into their component tensors. If &lt;code&gt;False&lt;/code&gt; (the default), then composite tensors are not expanded.</source>
          <target state="translated">&lt;code&gt;expand_composites&lt;/code&gt; : &lt;code&gt;True&lt;/code&gt; 로 설정하면 &lt;a href=&quot;../sparse/sparsetensor&quot;&gt; &lt;code&gt;tf.SparseTensor&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../raggedtensor&quot;&gt; &lt;code&gt;tf.RaggedTensor&lt;/code&gt; &lt;/a&gt; 와 같은 복합 텐서 는 구성 요소 텐서로 확장됩니다. 경우 &lt;code&gt;False&lt;/code&gt; (기본), 다음 복합 텐서는 확장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f54de1a6f5e2db329c0707ea3b072eeddf02a8ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expand_composites&lt;/code&gt;: If set to &lt;code&gt;True&lt;/code&gt;, then composite tensors such as &lt;a href=&quot;../sparse/sparsetensor&quot;&gt;&lt;code&gt;tf.sparse.SparseTensor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../raggedtensor&quot;&gt;&lt;code&gt;tf.RaggedTensor&lt;/code&gt;&lt;/a&gt; are expanded into their component tensors. If &lt;code&gt;False&lt;/code&gt; (the default), then composite tensors are not expanded.</source>
          <target state="translated">&lt;code&gt;expand_composites&lt;/code&gt; : &lt;code&gt;True&lt;/code&gt; 로 설정하면 &lt;a href=&quot;../sparse/sparsetensor&quot;&gt; &lt;code&gt;tf.sparse.SparseTensor&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../raggedtensor&quot;&gt; &lt;code&gt;tf.RaggedTensor&lt;/code&gt; &lt;/a&gt; 와 같은 복합 텐서 가 해당 구성 요소 텐서로 확장됩니다. 경우 &lt;code&gt;False&lt;/code&gt; (기본), 다음 복합 텐서는 확장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="526a4a9fe4b97d2fa5fe50ee4dd5db10a5470821" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expect_partial()&lt;/code&gt;: Silence warnings about incomplete checkpoint restores. Warnings are otherwise printed for unused parts of the checkpoint file or object when the &lt;code&gt;Checkpoint&lt;/code&gt; object is deleted (often at program shutdown).</source>
          <target state="translated">&lt;code&gt;expect_partial()&lt;/code&gt; : 불완전한 검사 점 복원에 대한 침묵 경고. &lt;code&gt;Checkpoint&lt;/code&gt; 개체가 삭제 될 때 (종종 프로그램 종료시) 검사 점 파일 또는 개체의 사용되지 않은 부분에 대한 경고가 인쇄 됩니다.</target>
        </trans-unit>
        <trans-unit id="0596d13958efa75ca22069f6572bba967160e1c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;experimental_distribute&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;experimental_distribute&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="ee786ee27e6e244b18c2993df7c879b236f1f5b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;experimental_distribute_dataset&lt;/code&gt; can be used to distribute the dataset across the replicas when writing your own training loop. If you are using &lt;code&gt;.fit&lt;/code&gt; and &lt;code&gt;.compile&lt;/code&gt; methods available in &lt;a href=&quot;../../../keras&quot;&gt;&lt;code&gt;tf.keras&lt;/code&gt;&lt;/a&gt;, then &lt;a href=&quot;../../../keras&quot;&gt;&lt;code&gt;tf.keras&lt;/code&gt;&lt;/a&gt; will handle the distribution for you.</source>
          <target state="translated">&lt;code&gt;experimental_distribute_dataset&lt;/code&gt; 는 자체 학습 루프를 작성할 때 복제본에 데이터 세트를 배포하는 데 사용할 수 있습니다. 당신이 사용하는 경우 &lt;code&gt;.fit&lt;/code&gt; 및 &lt;code&gt;.compile&lt;/code&gt; 에서 사용할 수있는 방법을 &lt;a href=&quot;../../../keras&quot;&gt; &lt;code&gt;tf.keras&lt;/code&gt; &lt;/a&gt; , 다음 &lt;a href=&quot;../../../keras&quot;&gt; &lt;code&gt;tf.keras&lt;/code&gt; 는&lt;/a&gt; 당신을위한 분배를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="c4dda2a2dacd7e7d3e9ed78f3a169900e2e91740" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;experimental_distribute_dataset&lt;/code&gt; can be used to distribute the dataset across the replicas when writing your own training loop. If you are using &lt;code&gt;.fit&lt;/code&gt; and &lt;code&gt;.compile&lt;/code&gt; methods available in &lt;a href=&quot;../keras&quot;&gt;&lt;code&gt;tf.keras&lt;/code&gt;&lt;/a&gt;, then &lt;a href=&quot;../keras&quot;&gt;&lt;code&gt;tf.keras&lt;/code&gt;&lt;/a&gt; will handle the distribution for you.</source>
          <target state="translated">&lt;code&gt;experimental_distribute_dataset&lt;/code&gt; 는 자체 학습 루프를 작성할 때 복제본에 데이터 세트를 배포하는 데 사용할 수 있습니다. 당신이 사용하는 경우 &lt;code&gt;.fit&lt;/code&gt; 및 &lt;code&gt;.compile&lt;/code&gt; 에서 사용할 수있는 방법을 &lt;a href=&quot;../keras&quot;&gt; &lt;code&gt;tf.keras&lt;/code&gt; &lt;/a&gt; , 다음 &lt;a href=&quot;../keras&quot;&gt; &lt;code&gt;tf.keras&lt;/code&gt; 는&lt;/a&gt; 당신을위한 분배를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="513b928ec57e0f1164db0a2930ff0b8db25851c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;experimental_distribute_datasets_from_function&lt;/code&gt; and &lt;code&gt;experimental_distribute_dataset&lt;/code&gt; APIs can be used to distribute the dataset across the TPU workers when writing your own training loop. If you are using &lt;code&gt;fit&lt;/code&gt; and &lt;code&gt;compile&lt;/code&gt; methods available in &lt;a href=&quot;../keras/model&quot;&gt;&lt;code&gt;tf.keras.Model&lt;/code&gt;&lt;/a&gt;, then Keras will handle the distribution for you.</source>
          <target state="translated">&lt;code&gt;experimental_distribute_datasets_from_function&lt;/code&gt; 및 &lt;code&gt;experimental_distribute_dataset&lt;/code&gt; API는 자체 학습 루프를 작성할 때 TPU 작업자에 데이터 세트를 배포하는 데 사용할 수 있습니다. 당신이 사용하는 경우 &lt;code&gt;fit&lt;/code&gt; 하고 &lt;code&gt;compile&lt;/code&gt; 에서 사용할 수있는 방법 &lt;a href=&quot;../keras/model&quot;&gt; &lt;code&gt;tf.keras.Model&lt;/code&gt; 을&lt;/a&gt; 다음 Keras 당신을위한 분배를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="4ecb6546c0ef1485c6a7803fd94ad3906969c5bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;experimental_max_worker_delay_secs&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;experimental_max_worker_delay_secs&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="add35986265845cab14576cd82440d130b2e40a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;experimental_steps_per_execution&lt;/code&gt;: Int. The number of batches to run during each &lt;a href=&quot;../../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; call. Running multiple batches inside a single &lt;a href=&quot;../../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; call can greatly improve performance on TPUs or small models with a large Python overhead. Note that if this value is set to &lt;code&gt;N&lt;/code&gt;, &lt;code&gt;Callback.on_batch&lt;/code&gt; methods will only be called every &lt;code&gt;N&lt;/code&gt; batches. This currently defaults to &lt;code&gt;1&lt;/code&gt;. At most, one full epoch will be run each execution. If a number larger than the size of the epoch is passed, the execution will be truncated to the size of the epoch.</source>
          <target state="translated">&lt;code&gt;experimental_steps_per_execution&lt;/code&gt; : Int. 각 &lt;a href=&quot;../../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; 호출 중에 실행할 일괄 처리 수입니다 . 단일 &lt;a href=&quot;../../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; 호출 내에서 여러 배치를 실행하면 Python 오버 헤드가 큰 TPU 또는 작은 모델의 성능을 크게 향상시킬 수 있습니다. 이 값이 &lt;code&gt;N&lt;/code&gt; 으로 설정 되면 &lt;code&gt;Callback.on_batch&lt;/code&gt; 메서드는 &lt;code&gt;N&lt;/code&gt; 배치 마다 호출됩니다 . 현재 기본값은 &lt;code&gt;1&lt;/code&gt; 입니다. 최대 하나의 전체 에포크가 실행될 때마다 실행됩니다. Epoch 크기보다 큰 숫자가 전달되면 Epoch 크기로 실행이 잘립니다.</target>
        </trans-unit>
        <trans-unit id="63c9d8e791d6140d011b814f7d7ff95e043427f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;experimental_steps_per_execution&lt;/code&gt;: Int. The number of batches to run during each &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; call. Running multiple batches inside a single &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; call can greatly improve performance on TPUs or small models with a large Python overhead. Note that if this value is set to &lt;code&gt;N&lt;/code&gt;, &lt;code&gt;Callback.on_batch&lt;/code&gt; methods will only be called every &lt;code&gt;N&lt;/code&gt; batches. This currently defaults to &lt;code&gt;1&lt;/code&gt;. At most, one full epoch will be run each execution. If a number larger than the size of the epoch is passed, the execution will be truncated to the size of the epoch.</source>
          <target state="translated">&lt;code&gt;experimental_steps_per_execution&lt;/code&gt; : Int. 각 &lt;a href=&quot;../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; 호출 중에 실행할 일괄 처리 수입니다 . 단일 &lt;a href=&quot;../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; 호출 내에서 여러 배치를 실행하면 Python 오버 헤드가 큰 TPU 또는 작은 모델의 성능을 크게 향상시킬 수 있습니다. 이 값이 &lt;code&gt;N&lt;/code&gt; 으로 설정 되면 &lt;code&gt;Callback.on_batch&lt;/code&gt; 메서드는 &lt;code&gt;N&lt;/code&gt; 배치 마다 호출됩니다 . 현재 기본값은 &lt;code&gt;1&lt;/code&gt; 입니다. 최대 하나의 전체 에포크가 실행될 때마다 실행됩니다. Epoch 크기보다 큰 숫자가 전달되면 Epoch 크기로 실행이 잘립니다.</target>
        </trans-unit>
        <trans-unit id="e2cf985622feb6240b5a6266b0ec9e8cf11288bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;export_saved_model&lt;/code&gt; exports 2 metagraphs, one with &lt;a href=&quot;../../../../saved_model#SERVING&quot;&gt;&lt;code&gt;saved_model.SERVING&lt;/code&gt;&lt;/a&gt;, and another with &lt;a href=&quot;../../../../saved_model#SERVING&quot;&gt;&lt;code&gt;saved_model.SERVING&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../../saved_model#TPU&quot;&gt;&lt;code&gt;saved_model.TPU&lt;/code&gt;&lt;/a&gt; tags. At serving time, these tags are used to select the appropriate metagraph to load.</source>
          <target state="translated">&lt;code&gt;export_saved_model&lt;/code&gt; 은 &lt;a href=&quot;../../../../saved_model#SERVING&quot;&gt; &lt;code&gt;saved_model.SERVING&lt;/code&gt; 으로&lt;/a&gt; , 다른 하나는 &lt;a href=&quot;../../../../saved_model#SERVING&quot;&gt; &lt;code&gt;saved_model.SERVING&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../../../saved_model#TPU&quot;&gt; &lt;code&gt;saved_model.TPU&lt;/code&gt; &lt;/a&gt; 태그로 2 개의 메타 그래프를 내 보냅니다 . 검색시이 태그는로드 할 적절한 메타 그래프를 선택하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f797ab0d259463a2b42907b5fce6676495c5feef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;export_saved_model&lt;/code&gt; exports 2 metagraphs, one with &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/saved_model#SERVING&quot;&gt;&lt;code&gt;saved_model.SERVING&lt;/code&gt;&lt;/a&gt;, and another with &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/saved_model#SERVING&quot;&gt;&lt;code&gt;saved_model.SERVING&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/saved_model#TPU&quot;&gt;&lt;code&gt;saved_model.TPU&lt;/code&gt;&lt;/a&gt; tags. At serving time, these tags are used to select the appropriate metagraph to load.</source>
          <target state="translated">&lt;code&gt;export_saved_model&lt;/code&gt; 은 2 개의 메타 그래프를 내 보냅니다. 하나는 &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/saved_model#SERVING&quot;&gt; &lt;code&gt;saved_model.SERVING&lt;/code&gt; &lt;/a&gt; 이고 다른 하나는 &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/saved_model#SERVING&quot;&gt; &lt;code&gt;saved_model.SERVING&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/saved_model#TPU&quot;&gt; &lt;code&gt;saved_model.TPU&lt;/code&gt; &lt;/a&gt; 태그입니다. 게재시 이러한 태그는로드 할 적절한 메타 그래프를 선택하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="26eaf62f8fa9afabba193d079f1934ac38af4fb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f(x) = alpha * (exp(x) - 1.) for x &amp;lt; 0&lt;/code&gt;, &lt;code&gt;f(x) = x for x &amp;gt;= 0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;f(x) = alpha * (exp(x) - 1.) for x &amp;lt; 0&lt;/code&gt; , &lt;code&gt;f(x) = x for x &amp;gt;= 0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="692bf3ed3a768fce3087566da3f577d5c67b8173" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f(x) = alpha * x for x &amp;lt; 0&lt;/code&gt;, &lt;code&gt;f(x) = x for x &amp;gt;= 0&lt;/code&gt;, where &lt;code&gt;alpha&lt;/code&gt; is a learned array with the same shape as x.</source>
          <target state="translated">&lt;code&gt;f(x) = alpha * x for x &amp;lt; 0&lt;/code&gt; , &lt;code&gt;f(x) = x for x &amp;gt;= 0&lt;/code&gt; 여기서 &lt;code&gt;alpha&lt;/code&gt; 는 x와 모양이 같은 학습 된 배열입니다.</target>
        </trans-unit>
        <trans-unit id="2fbe1e1495a21389dbd3fa305f92889c61b1dfba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f(x) = x for x &amp;gt; theta&lt;/code&gt;, &lt;code&gt;f(x) = 0 otherwise&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;f(x) = x for x &amp;gt; theta&lt;/code&gt; 경우 &lt;code&gt;f(x) = 0 otherwise&lt;/code&gt; , 그렇지 않으면 f (x) = 0입니다 .</target>
        </trans-unit>
        <trans-unit id="0a5a0819cdf738edba6ece585d196b977e3013d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;features&lt;/code&gt; -- This is the first item returned from the &lt;code&gt;input_fn&lt;/code&gt; passed to &lt;code&gt;train&lt;/code&gt;, &lt;code&gt;evaluate&lt;/code&gt;, and &lt;code&gt;predict&lt;/code&gt;. This should be a single &lt;a href=&quot;../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;dict&lt;/code&gt; of same.</source>
          <target state="translated">&lt;code&gt;features&lt;/code&gt; - 이것은 &lt;code&gt;train&lt;/code&gt; , &lt;code&gt;evaluate&lt;/code&gt; 및 &lt;code&gt;predict&lt;/code&gt; 전달 된 &lt;code&gt;input_fn&lt;/code&gt; 에서 반환 된 첫 번째 항목 입니다. 이것은 단일 &lt;a href=&quot;../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 또는 동일한 &lt;code&gt;dict&lt;/code&gt; 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="2032ece0ac2a63a9f1671d2ea8878d7b746f274e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;features&lt;/code&gt; -- This is the first item returned from the &lt;code&gt;input_fn&lt;/code&gt; passed to &lt;code&gt;train&lt;/code&gt;, &lt;code&gt;evaluate&lt;/code&gt;, and &lt;code&gt;predict&lt;/code&gt;. This should be a single &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;dict&lt;/code&gt; of same.</source>
          <target state="translated">&lt;code&gt;features&lt;/code&gt; - 이것은 &lt;code&gt;train&lt;/code&gt; , &lt;code&gt;evaluate&lt;/code&gt; 및 &lt;code&gt;predict&lt;/code&gt; 전달 된 &lt;code&gt;input_fn&lt;/code&gt; 에서 반환 된 첫 번째 항목 입니다. 이것은 단일 &lt;a href=&quot;../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 또는 동일한 &lt;code&gt;dict&lt;/code&gt; 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="c43ee32f134f266bbe87f7c699fc749b58cbc64c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;features&lt;/code&gt;: This is the first item returned from the &lt;code&gt;input_fn&lt;/code&gt; passed to &lt;code&gt;train&lt;/code&gt;, &lt;code&gt;evaluate&lt;/code&gt;, and &lt;code&gt;predict&lt;/code&gt;. This should be a single &lt;a href=&quot;../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;dict&lt;/code&gt; of same.</source>
          <target state="translated">&lt;code&gt;features&lt;/code&gt; : &lt;code&gt;train&lt;/code&gt; , &lt;code&gt;evaluate&lt;/code&gt; 및 &lt;code&gt;predict&lt;/code&gt; 을 위해 전달 된 &lt;code&gt;input_fn&lt;/code&gt; 에서 반환 된 첫 번째 항목 입니다. 이것은 하나의 &lt;a href=&quot;../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 또는 동일한 &lt;code&gt;dict&lt;/code&gt; 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="db0352ff65aca015093f397da73118d972d18328" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;features&lt;/code&gt;: This is the first item returned from the &lt;code&gt;input_fn&lt;/code&gt; passed to &lt;code&gt;train&lt;/code&gt;, &lt;code&gt;evaluate&lt;/code&gt;, and &lt;code&gt;predict&lt;/code&gt;. This should be a single &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;dict&lt;/code&gt; of same.</source>
          <target state="translated">&lt;code&gt;features&lt;/code&gt; : &lt;code&gt;train&lt;/code&gt; , &lt;code&gt;evaluate&lt;/code&gt; 및 &lt;code&gt;predict&lt;/code&gt; 을 위해 전달 된 &lt;code&gt;input_fn&lt;/code&gt; 에서 반환 된 첫 번째 항목 입니다. 이것은 하나의 &lt;a href=&quot;../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 또는 동일한 &lt;code&gt;dict&lt;/code&gt; 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="a9ced3c5d20c231662a3d0f5f5cfe7d92cbae9a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filepath&lt;/code&gt; can contain named formatting options, which will be filled the value of &lt;code&gt;epoch&lt;/code&gt; and keys in &lt;code&gt;logs&lt;/code&gt; (passed in &lt;code&gt;on_epoch_end&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;filepath&lt;/code&gt; 는 명명 된 형식화 옵션을 포함 할 수 있으며, 이는 &lt;code&gt;epoch&lt;/code&gt; 값 과 &lt;code&gt;logs&lt;/code&gt; 키로 채워집니다 ( &lt;code&gt;on_epoch_end&lt;/code&gt; 에 전달됨 ).</target>
        </trans-unit>
        <trans-unit id="68b7a086755e11c4514ea697a3f282ec76ed462d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;final_loop_state&lt;/code&gt;: The final loop state as returned by &lt;code&gt;loop_fn&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;final_loop_state&lt;/code&gt; : 최종 루프 상태에 의해 반환 &lt;code&gt;loop_fn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32d571a4fdd090c79cba940fa16edf7aca608b3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;final_state&lt;/code&gt;: The final cell state. If &lt;code&gt;cell.state_size&lt;/code&gt; is an int, this will be shaped &lt;code&gt;[batch_size, cell.state_size]&lt;/code&gt;. If it is a &lt;code&gt;TensorShape&lt;/code&gt;, this will be shaped &lt;code&gt;[batch_size] + cell.state_size&lt;/code&gt;. If it is a (possibly nested) tuple of ints or &lt;code&gt;TensorShape&lt;/code&gt;, this will be a tuple having the corresponding shapes.</source>
          <target state="translated">&lt;code&gt;final_state&lt;/code&gt; : 최종 셀 상태입니다. 경우 &lt;code&gt;cell.state_size&lt;/code&gt; 을 int로는, 형상이된다 &lt;code&gt;[batch_size, cell.state_size]&lt;/code&gt; . &lt;code&gt;TensorShape&lt;/code&gt; 인 경우 &lt;code&gt;[batch_size] + cell.state_size&lt;/code&gt; 모양이됩니다 . int 또는 &lt;code&gt;TensorShape&lt;/code&gt; 의 튜플 (아마도 중첩) 튜플 인 경우 해당 모양의 튜플이됩니다.</target>
        </trans-unit>
        <trans-unit id="331782a362ec3dc9e7d57d0801c9ab6188b413fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fixed_length&lt;/code&gt; must be a multiple of the size of &lt;code&gt;out_type&lt;/code&gt;. &lt;code&gt;fixed_length&lt;/code&gt; must be specified if the elements of &lt;code&gt;input_bytes&lt;/code&gt; are of variable length.</source>
          <target state="translated">&lt;code&gt;fixed_length&lt;/code&gt; 는 out_type 크기의 &lt;code&gt;out_type&lt;/code&gt; 합니다. &lt;code&gt;fixed_length&lt;/code&gt; 는 의 요소 경우 지정해야합니다 &lt;code&gt;input_bytes&lt;/code&gt; 는 가변 길이이다.</target>
        </trans-unit>
        <trans-unit id="fa544e0b38d8e27f6801b98a31e3ede57fa3bc4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flat_sequence&lt;/code&gt; converted to have the same recursive structure as &lt;code&gt;structure&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;flat_sequence&lt;/code&gt; 는 같은 재귀 구조가 변환 &lt;code&gt;structure&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e237890c629b73549711d10df443ebbc5c3f5327" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;float&lt;/code&gt; or &lt;code&gt;double&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 또는 &lt;code&gt;double&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e685790ab8476ca22bdc4f0f3007a6ae95967dfa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;float&lt;/code&gt;, the point where the huber loss function changes from a quadratic to linear.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; , Huber 손실 함수가 2 차에서 선형으로 변경되는 지점입니다.</target>
        </trans-unit>
        <trans-unit id="3ed86e5c0a2bac48219d6f486403423f218fe233" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn&lt;/code&gt; creates large intermediate values, so an equivalent vectorized transform would take too much memory.</source>
          <target state="translated">&lt;code&gt;fn&lt;/code&gt; 은 큰 중간 값을 생성하므로 등가 벡터화 된 변환은 너무 많은 메모리를 차지합니다.</target>
        </trans-unit>
        <trans-unit id="7d036c56cda5e75433b34c15a69c003ddf90a739" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn&lt;/code&gt; has limited support for control flow operations.</source>
          <target state="translated">&lt;code&gt;fn&lt;/code&gt; 은 제어 흐름 작업을 제한적으로 지원합니다.</target>
        </trans-unit>
        <trans-unit id="3902bf5b760c67e0b792dbcd35f8f333bfb1ba3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn&lt;/code&gt; may call &lt;a href=&quot;../../../../distribute/get_replica_context&quot;&gt;&lt;code&gt;tf.distribute.get_replica_context()&lt;/code&gt;&lt;/a&gt; to access members such as &lt;code&gt;all_reduce&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fn&lt;/code&gt; 호출 할 수 &lt;a href=&quot;../../../../distribute/get_replica_context&quot;&gt; &lt;code&gt;tf.distribute.get_replica_context()&lt;/code&gt; &lt;/a&gt; 와 같은 액세스 회원을 &lt;code&gt;all_reduce&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa923d4d055a5350b28b65cc87b6a1dd7a2e7ecb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn&lt;/code&gt; may call &lt;a href=&quot;../../../../distribute/get_replica_context&quot;&gt;&lt;code&gt;tf.distribute.get_replica_context()&lt;/code&gt;&lt;/a&gt; to access members such as &lt;code&gt;replica_id_in_sync_group&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fn&lt;/code&gt; 은 &lt;a href=&quot;../../../../distribute/get_replica_context&quot;&gt; &lt;code&gt;tf.distribute.get_replica_context()&lt;/code&gt; &lt;/a&gt; 를 호출 하여 &lt;code&gt;replica_id_in_sync_group&lt;/code&gt; 과 같은 멤버에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f5bfa26d5fa7a279fced471f2227a6c74ebbc2e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn&lt;/code&gt; may call &lt;a href=&quot;../../../distribute/get_replica_context&quot;&gt;&lt;code&gt;tf.distribute.get_replica_context()&lt;/code&gt;&lt;/a&gt; to access members such as &lt;code&gt;all_reduce&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fn&lt;/code&gt; 호출 할 수 &lt;a href=&quot;../../../distribute/get_replica_context&quot;&gt; &lt;code&gt;tf.distribute.get_replica_context()&lt;/code&gt; &lt;/a&gt; 와 같은 액세스 회원을 &lt;code&gt;all_reduce&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="87e63b6b38f1842bf11ba4c67b14e1d71b6c46e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn&lt;/code&gt; may call &lt;a href=&quot;../../../distribute/get_replica_context&quot;&gt;&lt;code&gt;tf.distribute.get_replica_context()&lt;/code&gt;&lt;/a&gt; to access members such as &lt;code&gt;replica_id_in_sync_group&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fn&lt;/code&gt; 은 &lt;a href=&quot;../../../distribute/get_replica_context&quot;&gt; &lt;code&gt;tf.distribute.get_replica_context()&lt;/code&gt; &lt;/a&gt; 를 호출 하여 &lt;code&gt;replica_id_in_sync_group&lt;/code&gt; 과 같은 멤버에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b1de7fe3afd0a3cfedb57b91004397496cbf1d91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn&lt;/code&gt; may call &lt;a href=&quot;../get_replica_context&quot;&gt;&lt;code&gt;tf.distribute.get_replica_context()&lt;/code&gt;&lt;/a&gt; to access members such as &lt;code&gt;all_reduce&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fn&lt;/code&gt; 호출 할 수 &lt;a href=&quot;../get_replica_context&quot;&gt; &lt;code&gt;tf.distribute.get_replica_context()&lt;/code&gt; &lt;/a&gt; 와 같은 액세스 회원을 &lt;code&gt;all_reduce&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="35294051a9f5a06c9fc73788afbce710815cd61e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn&lt;/code&gt; may call &lt;a href=&quot;get_replica_context&quot;&gt;&lt;code&gt;tf.distribute.get_replica_context()&lt;/code&gt;&lt;/a&gt; to access members such as &lt;code&gt;all_reduce&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fn&lt;/code&gt; 호출 할 수 &lt;a href=&quot;get_replica_context&quot;&gt; &lt;code&gt;tf.distribute.get_replica_context()&lt;/code&gt; &lt;/a&gt; 와 같은 액세스 회원을 &lt;code&gt;all_reduce&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a7a50b05ad340577768a891f9a5ace5f8ed4dc38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn&lt;/code&gt; may call &lt;code&gt;tf.get_replica_context()&lt;/code&gt; to access methods such as &lt;code&gt;replica_id_in_sync_group&lt;/code&gt; and &lt;code&gt;merge_call()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fn&lt;/code&gt; 은 &lt;code&gt;tf.get_replica_context()&lt;/code&gt; 를 호출 하여 &lt;code&gt;replica_id_in_sync_group&lt;/code&gt; 및 &lt;code&gt;merge_call()&lt;/code&gt; 과 같은 메소드에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b1114c26e81dd054da7e7e0dda3021442076c2ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn&lt;/code&gt; should not accept any arguments. To add extra arguments to when calling &lt;code&gt;fn&lt;/code&gt; in the critical section, create a lambda:</source>
          <target state="translated">&lt;code&gt;fn&lt;/code&gt; 은 인수를 허용하지 않아야합니다. critical 섹션에서 &lt;code&gt;fn&lt;/code&gt; 을 호출 할 때 추가 인수를 추가하려면 람다를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="6ddc0b1aa320a9d2a7e4e19038590e42e4e63bde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn&lt;/code&gt; should return nested structure of Tensors or Operations. However if an Operation is returned, it should have zero outputs.</source>
          <target state="translated">&lt;code&gt;fn&lt;/code&gt; 은 Tensor 또는 Operations의 중첩 구조를 반환해야합니다. 그러나 오퍼레이션이 리턴되면 출력이 0이어야합니다.</target>
        </trans-unit>
        <trans-unit id="4b48e2a5a155e23a0ed616e3751464d61d8a076a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn_output_signature&lt;/code&gt; can be specified using any of the following:</source>
          <target state="translated">&lt;code&gt;fn_output_signature&lt;/code&gt; 는 다음 중 하나를 사용하여 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de43c94ce26f0772e5280abe8b31956d41ca4700" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foo[5:,:,:3]&lt;/code&gt; on a 7x8x9 tensor is equivalent to &lt;code&gt;foo[5:7,0:8,0:3]&lt;/code&gt;. &lt;code&gt;foo[::-1]&lt;/code&gt; reverses a tensor with shape 8.</source>
          <target state="translated">&lt;code&gt;foo[5:,:,:3]&lt;/code&gt; 7x8x9 텐서의 foo [5 :, :, : 3] 은 &lt;code&gt;foo[5:7,0:8,0:3]&lt;/code&gt; . &lt;code&gt;foo[::-1]&lt;/code&gt; 은 모양이 8 인 텐서를 뒤집습니다.</target>
        </trans-unit>
        <trans-unit id="43244c62386e13ee7b9c91a6e079d5ea05be13dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;frequency(rank) ~ 1/(rank * (log(rank) + gamma) + 1/2 - 1/(12*rank))&lt;/code&gt; where &lt;code&gt;gamma&lt;/code&gt; is the Euler-Mascheroni constant.</source>
          <target state="translated">&lt;code&gt;frequency(rank) ~ 1/(rank * (log(rank) + gamma) + 1/2 - 1/(12*rank))&lt;/code&gt; 2-1 / (12 * rank)) 여기서 &lt;code&gt;gamma&lt;/code&gt; 는 Euler-Mascheroni 상수입니다.</target>
        </trans-unit>
        <trans-unit id="4c8ebc69f57ef2b187d33dfacd88724c4c5b430d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from_tensors&lt;/code&gt; produces a dataset containing only a single element. To slice the input tensor into multiple elements, use &lt;code&gt;from_tensor_slices&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;from_tensors&lt;/code&gt; 는 단일 요소 만 포함하는 데이터 세트를 생성합니다. 입력 텐서를 여러 요소로 분할하려면 대신 &lt;code&gt;from_tensor_slices&lt;/code&gt; 를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="9cec70f6cbb7be45f47f6267983753c73e232a40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;func&lt;/code&gt; may also use ops with side effects, such as &lt;a href=&quot;print&quot;&gt;&lt;code&gt;tf.print&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;variable&quot;&gt;&lt;code&gt;tf.Variable&lt;/code&gt;&lt;/a&gt; and others:</source>
          <target state="translated">&lt;code&gt;func&lt;/code&gt; 은 &lt;a href=&quot;print&quot;&gt; &lt;code&gt;tf.print&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;variable&quot;&gt; &lt;code&gt;tf.Variable&lt;/code&gt; &lt;/a&gt; 등과 같은 부작용이있는 ops를 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ec6901177b30e56936e5666ce2e3f39d2c5fa22a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;func&lt;/code&gt; may use data-dependent control flow, including &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;&lt;code&gt;break&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt; and &lt;code&gt;return&lt;/code&gt; statements:</source>
          <target state="translated">&lt;code&gt;func&lt;/code&gt; 은 &lt;code&gt;if&lt;/code&gt; , &lt;code&gt;for&lt;/code&gt; , &lt;code&gt;while&lt;/code&gt; &lt;code&gt;break&lt;/code&gt; , &lt;code&gt;continue&lt;/code&gt; 및 &lt;code&gt;return&lt;/code&gt; 문을 포함하여 데이터 종속 제어 흐름을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d4777eae632e57ac2f6e6206ede1b4415809a7bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;func&lt;/code&gt;'s closure may include &lt;a href=&quot;tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;variable&quot;&gt;&lt;code&gt;tf.Variable&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="translated">&lt;code&gt;func&lt;/code&gt; 의 클로저에는 &lt;a href=&quot;tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;variable&quot;&gt; &lt;code&gt;tf.Variable&lt;/code&gt; &lt;/a&gt; 객체 가 포함될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="21078f5d081cc337f55cc9e0497113d8bb686352" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gamma&lt;/code&gt; and &lt;code&gt;beta&lt;/code&gt; will span the axes of &lt;code&gt;inputs&lt;/code&gt; specified in &lt;code&gt;axis&lt;/code&gt;, and this part of the inputs' shape must be fully defined.</source>
          <target state="translated">&lt;code&gt;gamma&lt;/code&gt; 및 &lt;code&gt;beta&lt;/code&gt; 의 축 스팬 것이다 &lt;code&gt;inputs&lt;/code&gt; 에 지정된 &lt;code&gt;axis&lt;/code&gt; 및 입력 '형상의 부분을 완전히 정의한다.</target>
        </trans-unit>
        <trans-unit id="848e3ff077f17404dd6bb82d1017250fc5c7f54c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_config(self)&lt;/code&gt;: Returns a dictionary containing the configuration used to initialize this layer. If the keys differ from the arguments in &lt;code&gt;__init__&lt;/code&gt;, then override &lt;code&gt;from_config(self)&lt;/code&gt; as well. This method is used when saving the layer or a model that contains this layer.</source>
          <target state="translated">&lt;code&gt;get_config(self)&lt;/code&gt; :이 계층을 초기화하는 데 사용되는 구성을 포함하는 사전을 반환합니다. 키가 &lt;code&gt;__init__&lt;/code&gt; 의 인수와 &lt;code&gt;from_config(self)&lt;/code&gt; 도 재정의 합니다. 이 방법은 레이어 또는이 레이어가 포함 된 모델을 저장할 때 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e996a84e8ecf7581d8b7bfd14e38b96c5ec8aba8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_config&lt;/code&gt; (serialization of the optimizer, include all hyper parameters)</source>
          <target state="translated">&lt;code&gt;get_config&lt;/code&gt; (최적화 프로그램 직렬화, 모든 하이퍼 매개 변수 포함)</target>
        </trans-unit>
        <trans-unit id="5036f741f7e75805d2ad71e356bdf8058fbf960d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_replica_context()&lt;/code&gt; returns non-&lt;code&gt;None&lt;/code&gt;, or</source>
          <target state="translated">&lt;code&gt;get_replica_context()&lt;/code&gt; 는 &lt;code&gt;None&lt;/code&gt; 이 아닌 것을 반환 하거나</target>
        </trans-unit>
        <trans-unit id="6f600656096176d3c4100f0443a94f3efcbb5264" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;grad_fn&lt;/code&gt; is a function with the signature &lt;code&gt;g(*grad_ys)&lt;/code&gt; which returns a list of &lt;code&gt;Tensor&lt;/code&gt;s - the derivatives of &lt;code&gt;Tensor&lt;/code&gt;s in &lt;code&gt;y&lt;/code&gt; with respect to the &lt;code&gt;Tensor&lt;/code&gt;s in &lt;code&gt;x&lt;/code&gt;. &lt;code&gt;grad_ys&lt;/code&gt; is a &lt;code&gt;Tensor&lt;/code&gt; or sequence of &lt;code&gt;Tensor&lt;/code&gt;s the same size as &lt;code&gt;y&lt;/code&gt; holding the initial value gradients for each &lt;code&gt;Tensor&lt;/code&gt; in &lt;code&gt;y&lt;/code&gt;. In a pure mathematical sense, a vector-argument vector-valued function &lt;code&gt;f&lt;/code&gt;'s derivatives should be its Jacobian matrix &lt;code&gt;J&lt;/code&gt;. Here we are expressing the Jacobian &lt;code&gt;J&lt;/code&gt; as a function &lt;code&gt;grad_fn&lt;/code&gt; which defines how &lt;code&gt;J&lt;/code&gt; will transform a vector &lt;code&gt;grad_ys&lt;/code&gt; when left-multiplied with it (&lt;code&gt;grad_ys * J&lt;/code&gt;). This functional representation of a matrix is convenient to use for chain-rule calculation (in e.g. the back-propagation algorithm).</source>
          <target state="translated">&lt;code&gt;grad_fn&lt;/code&gt; 는 서명과 함수 &lt;code&gt;g(*grad_ys)&lt;/code&gt; 의 목록을 반환 &lt;code&gt;Tensor&lt;/code&gt; 의 유도체 -들 &lt;code&gt;Tensor&lt;/code&gt; 들에서 &lt;code&gt;y&lt;/code&gt; 받는 대하여 &lt;code&gt;Tensor&lt;/code&gt; 들에서 &lt;code&gt;x&lt;/code&gt; . &lt;code&gt;grad_ys&lt;/code&gt; 는 A는 &lt;code&gt;Tensor&lt;/code&gt; 또는 서열 &lt;code&gt;Tensor&lt;/code&gt; S와 동일한 크기의 &lt;code&gt;y&lt;/code&gt; 각각 초기 값 기울기 지주 &lt;code&gt;Tensor&lt;/code&gt; 에 &lt;code&gt;y&lt;/code&gt; . 순수한 수학적 의미에서, 벡터 인수 벡터 값 함수 &lt;code&gt;f&lt;/code&gt; 의 미분 값 은 야곱 행렬 &lt;code&gt;J&lt;/code&gt; 이어야합니다 . 여기서 우리는 Jacobian &lt;code&gt;J&lt;/code&gt; 를 표현하고 있습니다 &lt;code&gt;grad_fn&lt;/code&gt; 함수와 같이 &lt;code&gt;grad_ys&lt;/code&gt; 때 &lt;code&gt;J&lt;/code&gt; 가 벡터 grad_ys 를 변환하는 방법을 정의합니다 ( &lt;code&gt;grad_ys * J&lt;/code&gt; ). 매트릭스의이 기능적 표현은 체인 규칙 계산에 사용하기 편리합니다 (예 : 역 전파 알고리즘).</target>
        </trans-unit>
        <trans-unit id="a6a45213002453bac9a5ec2c65cc0b476a1ac145" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;grad_fn&lt;/code&gt; is a function with the signature &lt;code&gt;g(*grad_ys)&lt;/code&gt; which returns a list of &lt;code&gt;Tensor&lt;/code&gt;s the same size as (flattened) &lt;code&gt;x&lt;/code&gt; - the derivatives of &lt;code&gt;Tensor&lt;/code&gt;s in &lt;code&gt;y&lt;/code&gt; with respect to the &lt;code&gt;Tensor&lt;/code&gt;s in &lt;code&gt;x&lt;/code&gt;. &lt;code&gt;grad_ys&lt;/code&gt; is a sequence of &lt;code&gt;Tensor&lt;/code&gt;s the same size as (flattened) &lt;code&gt;y&lt;/code&gt; holding the initial value gradients for each &lt;code&gt;Tensor&lt;/code&gt; in &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;grad_fn&lt;/code&gt; 는 서명과 함수 &lt;code&gt;g(*grad_ys)&lt;/code&gt; 의 목록을 반환 &lt;code&gt;Tensor&lt;/code&gt; (평탄화)로서 S와 동일한 크기 &lt;code&gt;x&lt;/code&gt; -의 유도체 &lt;code&gt;Tensor&lt;/code&gt; 들에서 &lt;code&gt;y&lt;/code&gt; 받는 대하여 &lt;code&gt;Tensor&lt;/code&gt; 들에서 &lt;code&gt;x&lt;/code&gt; . &lt;code&gt;grad_ys&lt;/code&gt; 는 시퀀스이다 &lt;code&gt;Tensor&lt;/code&gt; (평탄화)로 (S)와 동일한 크기 &lt;code&gt;y&lt;/code&gt; 각각에 대한 초기 값 기울기 지주 &lt;code&gt;Tensor&lt;/code&gt; 에 &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9bef729cae46a4baf36e66463dc213eae652e20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;grad_ys&lt;/code&gt; is a list of tensors of the same length as &lt;code&gt;ys&lt;/code&gt; that holds the initial gradients for each y in &lt;code&gt;ys&lt;/code&gt;. When &lt;code&gt;grad_ys&lt;/code&gt; is None, we fill in a tensor of '1's of the shape of y for each y in &lt;code&gt;ys&lt;/code&gt;. A user can provide their own initial &lt;code&gt;grad_ys&lt;/code&gt; to compute the derivatives using a different initial gradient for each y (e.g., if one wanted to weight the gradient differently for each value in each y).</source>
          <target state="translated">&lt;code&gt;grad_ys&lt;/code&gt; 은 같은 길이의 텐서의 목록 &lt;code&gt;ys&lt;/code&gt; 의 각 Y의 초기 기울기 보유 &lt;code&gt;ys&lt;/code&gt; . 때 &lt;code&gt;grad_ys&lt;/code&gt; 은 아무도 없다, 우리는 각각의 Y에 대한 Y 모양의 '일 개의의 텐서를 입력 &lt;code&gt;ys&lt;/code&gt; . 사용자는 각각의 y에 대해 다른 초기 기울기를 사용하여 미분을 계산 하기 위해 자신의 초기 &lt;code&gt;grad_ys&lt;/code&gt; 를 제공 할 수 있습니다 (예를 들어, 각 y의 각 값에 대해 기울기를 다르게 가중치를 부여하려는 경우).</target>
        </trans-unit>
        <trans-unit id="613e23ac2d459abc935be54da9cd2f8581ada89a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gradients()&lt;/code&gt; adds ops to the graph to output the derivatives of &lt;code&gt;ys&lt;/code&gt; with respect to &lt;code&gt;xs&lt;/code&gt;. It returns a list of &lt;code&gt;Tensor&lt;/code&gt; of length &lt;code&gt;len(xs)&lt;/code&gt; where each tensor is the &lt;code&gt;sum(dy/dx)&lt;/code&gt; for y in &lt;code&gt;ys&lt;/code&gt; and for x in &lt;code&gt;xs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;gradients()&lt;/code&gt; 는 그래프에 ops를 추가 하여 &lt;code&gt;xs&lt;/code&gt; 에 대한 &lt;code&gt;ys&lt;/code&gt; 의 도함수를 출력합니다 . 길이 &lt;code&gt;len(xs)&lt;/code&gt; 의 &lt;code&gt;Tensor&lt;/code&gt; 목록을 반환합니다. 여기서 각 tensor는 &lt;code&gt;ys&lt;/code&gt; 의 y 와 &lt;code&gt;xs&lt;/code&gt; 의 x에 대한 &lt;code&gt;sum(dy/dx)&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="98ea8cfd3e2a282b23c87611d9013a6d60fdb8b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gradients()&lt;/code&gt; adds ops to the graph to output the derivatives of &lt;code&gt;ys&lt;/code&gt; with respect to &lt;code&gt;xs&lt;/code&gt;. It returns a list of &lt;code&gt;Tensor&lt;/code&gt; of length &lt;code&gt;len(xs)&lt;/code&gt; where each tensor is the &lt;code&gt;sum(dy/dx)&lt;/code&gt; for y in &lt;code&gt;ys&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;gradients()&lt;/code&gt; 는 그래프에 ops를 추가 하여 &lt;code&gt;xs&lt;/code&gt; 에 대한 &lt;code&gt;ys&lt;/code&gt; 도함수를 출력합니다 . 길이가 &lt;code&gt;len(xs)&lt;/code&gt; 인 &lt;code&gt;Tensor&lt;/code&gt; 목록을 리턴합니다. 여기서 각 텐서는 &lt;code&gt;ys&lt;/code&gt; 의 y에 대한 &lt;code&gt;sum(dy/dx)&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="5e47b02ab7d44761c76d6ecdd539953a950b5cd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;grayscale&lt;/code&gt;: Output a grayscale JPEG image. The &lt;code&gt;channels&lt;/code&gt; dimension of &lt;code&gt;image&lt;/code&gt; must be 1.</source>
          <target state="translated">&lt;code&gt;grayscale&lt;/code&gt; : 회색조 JPEG 이미지를 출력합니다. &lt;code&gt;image&lt;/code&gt; 의 &lt;code&gt;channels&lt;/code&gt; 크기는 1이어야합니다.</target>
        </trans-unit>
        <trans-unit id="4bcd82bee9d7423f2c7dbce83f3aaf303744192a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;h5py.File&lt;/code&gt; object from which to load the model</source>
          <target state="translated">&lt;code&gt;h5py.File&lt;/code&gt; . 모델을로드 할 파일 객체</target>
        </trans-unit>
        <trans-unit id="bbec3ac7e8fdf4ca93d62c7cc162728379c8c386" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;h5py.File&lt;/code&gt; object where to save the model</source>
          <target state="translated">&lt;code&gt;h5py.File&lt;/code&gt; . 모델을 저장할 파일 객체</target>
        </trans-unit>
        <trans-unit id="dbe871dc5d288bc21971a78247db58c673611687" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hash_bucket_size&lt;/code&gt; is not greater than 1.</source>
          <target state="translated">&lt;code&gt;hash_bucket_size&lt;/code&gt; 가 1보다 크지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3e51860270102cff29e720e615815dc9f44adff8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hessians()&lt;/code&gt; adds ops to the graph to output the Hessian matrix of &lt;code&gt;ys&lt;/code&gt; with respect to &lt;code&gt;xs&lt;/code&gt;. It returns a list of &lt;code&gt;Tensor&lt;/code&gt; of length &lt;code&gt;len(xs)&lt;/code&gt; where each tensor is the Hessian of &lt;code&gt;sum(ys)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;hessians()&lt;/code&gt; 는 그래프에 ops를 추가 하여 &lt;code&gt;xs&lt;/code&gt; 와 관련하여 &lt;code&gt;ys&lt;/code&gt; 의 헤 시안 행렬을 출력합니다 . 길이가 &lt;code&gt;len(xs)&lt;/code&gt; 인 &lt;code&gt;Tensor&lt;/code&gt; 목록을 리턴합니다. 여기서 각 텐서는 &lt;code&gt;sum(ys)&lt;/code&gt; 의 헤 시안입니다 .</target>
        </trans-unit>
        <trans-unit id="eca7f8b263db3f07bd66aba7bd46eabbb1443d41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;high - low&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;high - low&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0608919cb14ff3a53b2de13a0d0c9bf0bfae5c63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;high = b&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;high = b&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="334a6d5603e1763b4ef892a903dd8c8963cecbb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;host_call&lt;/code&gt; is a tuple of a &lt;code&gt;function&lt;/code&gt; and a list or dictionary of &lt;code&gt;tensors&lt;/code&gt; to pass to that function and returns a list of Tensors. &lt;code&gt;host_call&lt;/code&gt; currently works for train() and evaluate(). The Tensors returned by the function is executed on the CPU on every step, so there is communication overhead when sending tensors from TPU to CPU. To reduce the overhead, try reducing the size of the tensors. The &lt;code&gt;tensors&lt;/code&gt; are concatenated along their major (batch) dimension, and so must be &amp;gt;= rank 1. The &lt;code&gt;host_call&lt;/code&gt; is useful for writing summaries with &lt;code&gt;tf.contrib.summary.create_file_writer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;host_call&lt;/code&gt; 은 &lt;code&gt;function&lt;/code&gt; 의 튜플이며 해당 함수 에 전달할 &lt;code&gt;tensors&lt;/code&gt; 목록 또는 사전이며 텐서 목록을 반환합니다. &lt;code&gt;host_call&lt;/code&gt; 은 현재 train () 및 evaluation ()에서 작동합니다. 이 함수에 의해 반환 된 Tensor는 모든 단계에서 CPU에서 실행되므로 TPU에서 CPU로 Tensor를 보낼 때 통신 오버 헤드가 있습니다. 오버 헤드를 줄이려면 텐서의 크기를 줄이십시오. &lt;code&gt;tensors&lt;/code&gt; 전공 (배치) 크기에 따라 연결된다, 그렇게해야&amp;gt; = 순위 1 &lt;code&gt;host_call&lt;/code&gt; 가 로 요약을 작성하는 데 유용합니다 &lt;code&gt;tf.contrib.summary.create_file_writer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53059e620228ec3f412f911cb62d181ec8d24478" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;image&lt;/code&gt; is a 3-D uint8 Tensor of shape &lt;code&gt;[height, width, channels]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;image&lt;/code&gt; 는 모양 &lt;code&gt;[height, width, channels]&lt;/code&gt; 의 3 차원 uint8 텐서입니다 .</target>
        </trans-unit>
        <trans-unit id="65ee171fd696166c54777593604f1b61fcf4c987" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;image&lt;/code&gt; is a 3-D uint8 Tensor of shape &lt;code&gt;[height, width, channels]&lt;/code&gt;. &lt;code&gt;quality&lt;/code&gt; is an int32 jpeg compression quality value between 0 and 100.</source>
          <target state="translated">&lt;code&gt;image&lt;/code&gt; 는 3D uint8 Tensor of shape &lt;code&gt;[height, width, channels]&lt;/code&gt; 입니다. &lt;code&gt;quality&lt;/code&gt; 는 0에서 100 사이의 int32 jpeg 압축 품질 값입니다.</target>
        </trans-unit>
        <trans-unit id="3a78ed45576898596386cfd72fa34573e5d3b214" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;image&lt;/code&gt; is a 3-D uint8 or uint16 Tensor of shape &lt;code&gt;[height, width, channels]&lt;/code&gt; where &lt;code&gt;channels&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;image&lt;/code&gt; 형상의 3 차원 UINT8 또는 UINT16 텐서 &lt;code&gt;[height, width, channels]&lt;/code&gt; 여기서 &lt;code&gt;channels&lt;/code&gt; 이다 :</target>
        </trans-unit>
        <trans-unit id="3ebce8d6f51227e7c9c2879ae58ee245299c1490" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;image&lt;/code&gt; is an RGB image or images. The image saturation is adjusted by converting the images to HSV and multiplying the saturation (S) channel by &lt;code&gt;saturation_factor&lt;/code&gt; and clipping. The images are then converted back to RGB.</source>
          <target state="translated">&lt;code&gt;image&lt;/code&gt; 는 RGB 이미지입니다. 이미지를 HSV로 변환하고 채도 (S) 채널에 &lt;code&gt;saturation_factor&lt;/code&gt; 및 클리핑을 곱하여 이미지 채도를 조정합니다 . 그런 다음 이미지가 다시 RGB로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="ed5621ecd76a8ddc7920cca8f904b7469200b810" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;image&lt;/code&gt; is an RGB image. The image hue is adjusted by converting the image(s) to HSV and rotating the hue channel (H) by &lt;code&gt;delta&lt;/code&gt;. The image is then converted back to RGB.</source>
          <target state="translated">&lt;code&gt;image&lt;/code&gt; 는 RGB 이미지입니다. 이미지 색조는 이미지를 HSV로 변환하고 색조 채널 (H)을 &lt;code&gt;delta&lt;/code&gt; 로 회전하여 조정됩니다 . 그런 다음 이미지가 다시 RGB로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="0906dcaf98e725bf1ce0c2bd4f2656b3d8eb445e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;image&lt;/code&gt;, converted to &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;image&lt;/code&gt; &lt;code&gt;dtype&lt;/code&gt; 으로 변환 된 이미지 .</target>
        </trans-unit>
        <trans-unit id="1a4362b2cea61fde3b1a066e12e26fd020cf5b04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;images&lt;/code&gt; is a tensor of at least 3 dimensions. The last 3 dimensions are interpreted as &lt;code&gt;[height, width, channels]&lt;/code&gt;. The other dimensions only represent a collection of images, such as &lt;code&gt;[batch, height, width, channels].&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;images&lt;/code&gt; 는 3 차원 이상의 텐서입니다. 마지막 3 차원은 &lt;code&gt;[height, width, channels]&lt;/code&gt; 로 해석됩니다 . 다른 차원은 &lt;code&gt;[batch, height, width, channels].&lt;/code&gt; 과 같은 이미지 모음 만 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="b47014c3b4f56bfb67b4833f078afc2a4239650f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;images&lt;/code&gt; is a tensor of at least 3 dimensions. The last dimension is interpreted as channels, and must be three.</source>
          <target state="translated">&lt;code&gt;images&lt;/code&gt; 는 최소 3 차원의 텐서입니다. 마지막 차원은 채널로 해석되며 3 개 여야합니다.</target>
        </trans-unit>
        <trans-unit id="f88ce4137231aa65086427d9ceaaf8b0f1d6b59f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;in_band(m, n) = (num_lower &amp;lt; 0 || (m-n) &amp;lt;= num_lower)) &amp;amp;&amp;amp; (num_upper &amp;lt; 0 || (n-m) &amp;lt;= num_upper)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;in_band(m, n) = (num_lower &amp;lt; 0 || (m-n) &amp;lt;= num_lower)) &amp;amp;&amp;amp; (num_upper &amp;lt; 0 || (n-m) &amp;lt;= num_upper)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c63020f4e9932ef0c0461f40b2b8438c61f4a623" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index_key&lt;/code&gt;: A list of names - one for each dimension in the resulting &lt;code&gt;SparseTensor&lt;/code&gt; whose &lt;code&gt;indices[i][dim]&lt;/code&gt; indicating the position of the &lt;code&gt;i&lt;/code&gt;-th value in the &lt;code&gt;dim&lt;/code&gt; dimension will be equal to the &lt;code&gt;i&lt;/code&gt;-th value in the Feature with key named &lt;code&gt;index_key[dim]&lt;/code&gt; in the &lt;code&gt;Example&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;index_key&lt;/code&gt; : 이름 목록-결과 &lt;code&gt;SparseTensor&lt;/code&gt; 의 각 차원마다 하나씩 , &lt;code&gt;dim&lt;/code&gt; 차원 에서 &lt;code&gt;i&lt;/code&gt; 번째 값 의 위치를 ​​나타내는 &lt;code&gt;indices[i][dim]&lt;/code&gt; 이 키가있는 Feature 의 &lt;code&gt;i&lt;/code&gt; 번째 값 과 같습니다. &lt;code&gt;Example&lt;/code&gt; 에서 이름이 &lt;code&gt;index_key[dim]&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="cca344d9419be7ad6d8230eeb316c8a52cda9091" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indices&lt;/code&gt; ia a dense tensor with dtype &lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt;, indicating which values should be gathered.</source>
          <target state="translated">&lt;code&gt;indices&lt;/code&gt; 는 수집해야하는 값을 나타내는 dtype &lt;code&gt;int32&lt;/code&gt; 또는 &lt;code&gt;int64&lt;/code&gt; 를 가진 조밀 한 텐서입니다 .</target>
        </trans-unit>
        <trans-unit id="9811b3eafe6f777e2a340ea032f924f466dd3106" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indices&lt;/code&gt; is a K-dimensional integer tensor, best thought of as a (K-1)-dimensional tensor of indices into &lt;code&gt;params&lt;/code&gt;, where each element defines a slice of &lt;code&gt;params&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;indices&lt;/code&gt; 는 K 차원 정수 텐서로, 각 요소가 &lt;code&gt;params&lt;/code&gt; 조각을 정의하는 (K-1) 차원 인덱스의 &lt;code&gt;params&lt;/code&gt; 텐서로 가장 잘 생각됩니다 .</target>
        </trans-unit>
        <trans-unit id="f4007b6e294ba59b046b44a65ba8cce3531dfbf9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indices&lt;/code&gt; is an K-dimensional integer tensor, best thought of as a (K-1)-dimensional tensor of indices into &lt;code&gt;params&lt;/code&gt;, where each element defines a slice of &lt;code&gt;params&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;indices&lt;/code&gt; 는 K 차원 정수 텐서로, &lt;code&gt;params&lt;/code&gt; 에 대한 인덱스의 (K-1) 차원 텐서로 생각됩니다 . 각 요소는 &lt;code&gt;params&lt;/code&gt; 슬라이스를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="2b5cfad967e6b48007d21f5f37a8759e2f1b7aa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indices&lt;/code&gt; is an integer tensor containing indices into a new tensor of shape &lt;code&gt;shape&lt;/code&gt;. The last dimension of &lt;code&gt;indices&lt;/code&gt; can be at most the rank of &lt;code&gt;shape&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;indices&lt;/code&gt; 는 모양 &lt;code&gt;shape&lt;/code&gt; 의 새로운 텐서에 인덱스를 포함하는 정수 텐서 입니다. &lt;code&gt;indices&lt;/code&gt; 의 마지막 차원은 최대 &lt;code&gt;shape&lt;/code&gt; 의 수일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5f59530de990daf45b924e04556a14400adfe85c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indices&lt;/code&gt; is an integer tensor containing indices into a new tensor of shape &lt;code&gt;tensor.shape&lt;/code&gt;. The last dimension of &lt;code&gt;indices&lt;/code&gt; can be at most the rank of &lt;code&gt;tensor.shape&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;indices&lt;/code&gt; 는 &lt;code&gt;tensor.shape&lt;/code&gt; 모양의 새로운 텐서에 대한 색인을 포함하는 정수 텐서 입니다. &lt;code&gt;indices&lt;/code&gt; 의 마지막 차원은 최대 &lt;code&gt;tensor.shape&lt;/code&gt; 순위 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0aed18eef98198e33a74f0b170a6f22b31f666ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indices&lt;/code&gt; is equivalent to &lt;code&gt;sp_ids.indices&lt;/code&gt; with the last dimension discarded and replaced with &lt;code&gt;sp_ids.values&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;indices&lt;/code&gt; 에 해당 &lt;code&gt;sp_ids.indices&lt;/code&gt; 버리고 대체 최종 치수 &lt;code&gt;sp_ids.values&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f4c0bee788c7b3a6e4db64e68abf2ad63b35e29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indices&lt;/code&gt; is equivalent to &lt;code&gt;sp_ids[0].indices&lt;/code&gt; with the last dimension discarded and concatenated with &lt;code&gt;sp_ids[0].values, sp_ids[1].values, ...&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;indices&lt;/code&gt; 에 해당 &lt;code&gt;sp_ids[0].indices&lt;/code&gt; 으로 폐기 연결된 최종 치수를 갖는 &lt;code&gt;sp_ids[0].values, sp_ids[1].values, ...&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9932815b2fdf49a0cd6a08a7b04ce388765964c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indices&lt;/code&gt; must be a vector, its length must match the first dim of &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;indices&lt;/code&gt; 는 벡터 여야하며 길이는 &lt;code&gt;value&lt;/code&gt; 의 첫 번째 차원과 일치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7c9de260393627f7a996ee1da8692113d2af2713" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indices&lt;/code&gt; must be an integer tensor of any dimension (usually 0-D or 1-D). Produces an output tensor with shape &lt;code&gt;indices.shape + params.shape[1:]&lt;/code&gt; where:</source>
          <target state="translated">&lt;code&gt;indices&lt;/code&gt; 는 모든 차원의 정수 텐서 여야합니다 (일반적으로 0-D 또는 1-D). 모양 &lt;code&gt;indices.shape + params.shape[1:]&lt;/code&gt; 하여 출력 텐서를 생성합니다 . 여기서 :</target>
        </trans-unit>
        <trans-unit id="160ac3b40b430b477df57af686a368a0849c62cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indices&lt;/code&gt; must be an integer tensor of any dimension (usually 0-D or 1-D). Produces an output tensor with shape &lt;code&gt;params.shape[:axis] + indices.shape[batch_dims:] + params.shape[axis + 1:]&lt;/code&gt; where:</source>
          <target state="translated">&lt;code&gt;indices&lt;/code&gt; 는 모든 차원의 정수 텐서 여야합니다 (일반적으로 0-D 또는 1-D). 모양 &lt;code&gt;params.shape[:axis] + indices.shape[batch_dims:] + params.shape[axis + 1:]&lt;/code&gt; 하여 출력 텐서를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="7d42bc532a8e831b8d7b3508f61124d2effec027" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indices&lt;/code&gt; must be integer tensor, containing indices into &lt;code&gt;input&lt;/code&gt;. It must be shape \([d_0, ..., d_{Q-2}, K]\) where &lt;code&gt;0 &amp;lt; K &amp;lt;= P&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;indices&lt;/code&gt; 는 &lt;code&gt;input&lt;/code&gt; 에 대한 인덱스를 포함하는 정수 텐서 여야합니다 . 이 형태 (\ [d_0, ..., Q-D_ {2}는 K] \) 여기서 있어야 &lt;code&gt;0 &amp;lt; K &amp;lt;= P&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a6825425db5b5a082c9f82dfb549fe3e9d956c32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indices&lt;/code&gt; must be integer tensor, containing indices into &lt;code&gt;ref&lt;/code&gt;. It must be shape &lt;code&gt;[d_0, ..., d_{Q-2}, K]&lt;/code&gt; where &lt;code&gt;0 &amp;lt; K &amp;lt;= P&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;indices&lt;/code&gt; 는 &lt;code&gt;ref&lt;/code&gt; 에 대한 인덱스를 포함하는 정수 텐서 여야합니다 . 모양은 &lt;code&gt;[d_0, ..., d_{Q-2}, K]&lt;/code&gt; 여야합니다 . 여기서 &lt;code&gt;0 &amp;lt; K &amp;lt;= P&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6c68c8e102b763f0d8bd2ca972d0a83717f411f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indices&lt;/code&gt; must be integer tensor, containing indices into &lt;code&gt;ref&lt;/code&gt;. It must be shape \([d_0, ..., d_{Q-2}, K]\) where &lt;code&gt;0 &amp;lt; K &amp;lt;= P&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;indices&lt;/code&gt; 는 &lt;code&gt;ref&lt;/code&gt; 에 대한 인덱스를 포함하는 정수 텐서 여야합니다 . 이 형태 (\ [d_0, ..., Q-D_ {2}는 K] \) 여기서 있어야 &lt;code&gt;0 &amp;lt; K &amp;lt;= P&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fa82f6051428c50cb3179a0f45783a0fb4c3260" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indices&lt;/code&gt; must be integer tensor, containing indices into self. It must be shape &lt;code&gt;[d_0, ..., d_{Q-2}, K]&lt;/code&gt; where &lt;code&gt;0 &amp;lt; K &amp;lt;= P&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;indices&lt;/code&gt; 는 자기 자신에 대한 인덱스를 포함하는 정수 텐서 여야합니다. 모양은 &lt;code&gt;[d_0, ..., d_{Q-2}, K]&lt;/code&gt; 여야합니다 . 여기서 &lt;code&gt;0 &amp;lt; K &amp;lt;= P&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8c79ede89bb2d8bea199e4d17d9dacf23d78752f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indices&lt;/code&gt;: A 1-D integer &lt;code&gt;Tensor&lt;/code&gt; with shape &lt;code&gt;[D0]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;indices&lt;/code&gt; : 모양이 &lt;code&gt;[D0]&lt;/code&gt; 인 1 차원 정수형 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="850081d8f5a5cd5c7cd6baf7b4d777c177e5e07e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indices&lt;/code&gt;: A 2-D int64 tensor of shape &lt;code&gt;[N, ndims]&lt;/code&gt;, which specifies the indices of the elements in the sparse tensor that contain nonzero values (elements are zero-indexed). For example, &lt;code&gt;indices=[[1,3], [2,4]]&lt;/code&gt; specifies that the elements with indexes of [1,3] and [2,4] have nonzero values.</source>
          <target state="translated">&lt;code&gt;indices&lt;/code&gt; : 모양이 &lt;code&gt;[N, ndims]&lt;/code&gt; 인 2 차원 int64 텐서로 , 0이 아닌 값을 포함하는 스파 스 텐서의 요소 인덱스를 지정합니다 (요소는 인덱스가 0입니다). 예를 들어 &lt;code&gt;indices=[[1,3], [2,4]]&lt;/code&gt; 는 인덱스가 [1,3] 및 [2,4] 인 요소가 0이 아닌 값을 갖도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="2252875da6b8579a1a0f15535675e0332a6231c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init_feed_dict&lt;/code&gt;: A session feed dictionary that should be used when running the init op.</source>
          <target state="translated">&lt;code&gt;init_feed_dict&lt;/code&gt; : init op를 실행할 때 사용해야하는 세션 피드 사전입니다.</target>
        </trans-unit>
        <trans-unit id="66fa190bfc712968fc43ead285c3e525e8d4ec46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init_fn&lt;/code&gt;: A callable to run after the init op to perform additional initializations. The callable will be called as &lt;code&gt;init_fn(scaffold, session)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;init_fn&lt;/code&gt; : 초기화 후 추가 초기화를 수행하기 위해 실행할 호출 가능. 호출 가능 파일은 &lt;code&gt;init_fn(scaffold, session)&lt;/code&gt; 으로 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="e829018695a738fb845759f335a8696315b7a3b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init_op&lt;/code&gt;: An op to run to initialize the variables. Picked from and stored into the &lt;code&gt;INIT_OP&lt;/code&gt; collection in the graph by default.</source>
          <target state="translated">&lt;code&gt;init_op&lt;/code&gt; : 변수를 초기화하기 위해 실행하는 op입니다. 기본적으로 그래프 의 &lt;code&gt;INIT_OP&lt;/code&gt; 콜렉션에서 선택하여 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="e5a9bca8c59f38823a73edabc7a00411a693f426" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initialize_or_restore(session=None)&lt;/code&gt;: When graph building, runs variable initializers if &lt;code&gt;save_path&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, but otherwise runs restore operations. If no &lt;code&gt;session&lt;/code&gt; is explicitly specified, the default session is used. No effect when executing eagerly (variables are initialized or restored eagerly).</source>
          <target state="translated">&lt;code&gt;initialize_or_restore(session=None)&lt;/code&gt; : 그래프 작성시 &lt;code&gt;save_path&lt;/code&gt; 가 &lt;code&gt;None&lt;/code&gt; 이면 변수 이니셜 라이저를 실행하지만 그렇지 않으면 복원 작업을 실행합니다. &lt;code&gt;session&lt;/code&gt; 이 명시 적으로 지정 되지 않으면 기본 세션이 사용됩니다. 열심히 실행할 때는 효과가 없습니다 (변수는 열심히 초기화되거나 복원됩니다).</target>
        </trans-unit>
        <trans-unit id="034e6f3763a7d1cd54ed225472b4698fc4e2e8ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input&lt;/code&gt; has &lt;code&gt;r+1&lt;/code&gt; dimensions &lt;code&gt;[I, J, ..., L, M, N]&lt;/code&gt;. When &lt;code&gt;k&lt;/code&gt; is scalar or &lt;code&gt;k[0] == k[1]&lt;/code&gt;, &lt;code&gt;diagonal&lt;/code&gt; has &lt;code&gt;r&lt;/code&gt; dimensions &lt;code&gt;[I, J, ..., L, max_diag_len]&lt;/code&gt;. Otherwise, it has &lt;code&gt;r+1&lt;/code&gt; dimensions &lt;code&gt;[I, J, ..., L, num_diags, max_diag_len]&lt;/code&gt;. &lt;code&gt;num_diags&lt;/code&gt; is the number of diagonals, &lt;code&gt;num_diags = k[1] - k[0] + 1&lt;/code&gt;. &lt;code&gt;max_diag_len&lt;/code&gt; is the longest diagonal in the range &lt;code&gt;[k[0], k[1]]&lt;/code&gt;, &lt;code&gt;max_diag_len = min(M + min(k[1], 0), N + min(-k[0], 0))&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; 은 &lt;code&gt;r+1&lt;/code&gt; 치수입니다 &lt;code&gt;[I, J, ..., L, M, N]&lt;/code&gt; . 되면 &lt;code&gt;k&lt;/code&gt; 는 스칼라이거나 &lt;code&gt;k[0] == k[1]&lt;/code&gt; , &lt;code&gt;diagonal&lt;/code&gt; 갖는 &lt;code&gt;r&lt;/code&gt; 치수 &lt;code&gt;[I, J, ..., L, max_diag_len]&lt;/code&gt; . 그렇지 않으면 &lt;code&gt;r+1&lt;/code&gt; 차원 &lt;code&gt;[I, J, ..., L, num_diags, max_diag_len]&lt;/code&gt; 있습니다. &lt;code&gt;num_diags&lt;/code&gt; 는 대각선 수이며 &lt;code&gt;num_diags = k[1] - k[0] + 1&lt;/code&gt; 입니다. &lt;code&gt;max_diag_len&lt;/code&gt; 이 범위에서 가장 긴 대각선 &lt;code&gt;[k[0], k[1]]&lt;/code&gt; , &lt;code&gt;max_diag_len = min(M + min(k[1], 0), N + min(-k[0], 0))&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84a52ab2d0d259fcb7f22d828ac5f41e9957de4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input&lt;/code&gt; is a &lt;code&gt;Tensor&lt;/code&gt; with rank &lt;code&gt;P&lt;/code&gt; and &lt;code&gt;indices&lt;/code&gt; is a &lt;code&gt;Tensor&lt;/code&gt; of rank &lt;code&gt;Q&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; 은 순위가 &lt;code&gt;P&lt;/code&gt; 인 &lt;code&gt;Tensor&lt;/code&gt; 이고 &lt;code&gt;indices&lt;/code&gt; 는 순위가 &lt;code&gt;Q&lt;/code&gt; 인 &lt;code&gt;Tensor&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="78af2ba1ee68a326c27cb3a12aac31ea71dba069" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input&lt;/code&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. The input to reverse. &lt;code&gt;seq_lengths&lt;/code&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1-D with length &lt;code&gt;input.dims(batch_dim)&lt;/code&gt; and &lt;code&gt;max(seq_lengths) &amp;lt;= input.dims(seq_dim)&lt;/code&gt;&lt;code&gt;seq_axis&lt;/code&gt;: An &lt;code&gt;int&lt;/code&gt;. The dimension which is partially reversed. &lt;code&gt;batch_axis&lt;/code&gt;: An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. The dimension along which reversal is performed. &lt;code&gt;name&lt;/code&gt;: A name for the operation (optional).</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; : &lt;code&gt;Tensor&lt;/code&gt; . 역 입력. &lt;code&gt;seq_lengths&lt;/code&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; 유형 중 하나 여야합니다 . 길이가 &lt;code&gt;input.dims(batch_dim)&lt;/code&gt; 및 &lt;code&gt;max(seq_lengths) &amp;lt;= input.dims(seq_dim)&lt;/code&gt; 1-D &amp;lt;= input.dims (seq_dim) &lt;code&gt;seq_axis&lt;/code&gt; : &lt;code&gt;int&lt;/code&gt; 입니다. 부분적으로 반전 된 치수입니다. &lt;code&gt;batch_axis&lt;/code&gt; : 선택적 &lt;code&gt;int&lt;/code&gt; . 기본값은 &lt;code&gt;0&lt;/code&gt; 입니다. 반전이 수행되는 차원입니다. &lt;code&gt;name&lt;/code&gt; : 작업 이름 (선택 사항).</target>
        </trans-unit>
        <trans-unit id="4dbac06d16e32375f5e607354d325cf1a098eca6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input_fn&lt;/code&gt; for evaluation should &lt;strong&gt;NOT&lt;/strong&gt; raise an end-of-input exception (&lt;code&gt;OutOfRangeError&lt;/code&gt; or &lt;code&gt;StopIteration&lt;/code&gt;). And all evaluation steps and all batches should have the same size.</source>
          <target state="translated">&lt;code&gt;input_fn&lt;/code&gt; 평가를한다 &lt;strong&gt;NOT&lt;/strong&gt; 끝의 입력 예외 (상향 &lt;code&gt;OutOfRangeError&lt;/code&gt; 또는 &lt;code&gt;StopIteration&lt;/code&gt; ). 그리고 모든 평가 단계와 모든 배치의 크기가 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="21a8a53bcbfe7cc32a21b2a241d38c8bfecbd18f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input_fn&lt;/code&gt; must return a &lt;code&gt;Dataset&lt;/code&gt; instance rather than &lt;code&gt;features&lt;/code&gt;. In fact, .train() and .evaluate() also support Dataset as return value.</source>
          <target state="translated">&lt;code&gt;input_fn&lt;/code&gt; 는 반환해야 &lt;code&gt;Dataset&lt;/code&gt; 이 아닌 인스턴스를 &lt;code&gt;features&lt;/code&gt; . 실제로 .train () 및 .evaluate ()도 Dataset을 반환 값으로 지원합니다.</target>
        </trans-unit>
        <trans-unit id="1eb8609c5fbdb4868d631405adf92baea66c2f59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input_fn&lt;/code&gt; raises an end-of-input exception (&lt;a href=&quot;../../../../errors/outofrangeerror&quot;&gt;&lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;StopIteration&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;input_fn&lt;/code&gt; 은 입력 종료 예외 ( &lt;a href=&quot;../../../../errors/outofrangeerror&quot;&gt; &lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;StopIteration&lt;/code&gt; )를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="e69416b9e1f6a0dc33af20bcab2e353e66356468" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input_fn&lt;/code&gt; raises an end-of-input exception (&lt;a href=&quot;../../../errors/outofrangeerror&quot;&gt;&lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;StopIteration&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;input_fn&lt;/code&gt; 은 입력 종료 예외 ( &lt;a href=&quot;../../../errors/outofrangeerror&quot;&gt; &lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;StopIteration&lt;/code&gt; )를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="2cd2c1453c7fb988839665373327bbd32c65e5d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input_fn&lt;/code&gt; raises an end-of-input exception (&lt;a href=&quot;../../errors/outofrangeerror&quot;&gt;&lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;StopIteration&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;input_fn&lt;/code&gt; 은 입력 종료 예외 ( &lt;a href=&quot;../../errors/outofrangeerror&quot;&gt; &lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;StopIteration&lt;/code&gt; )를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="0adf1130ee05b268dfff33c72b4ab50d5fa4f0db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input_fn&lt;/code&gt; raises an end-of-input exception (&lt;a href=&quot;../errors/outofrangeerror&quot;&gt;&lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;StopIteration&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;input_fn&lt;/code&gt; 은 입력 종료 예외 ( &lt;a href=&quot;../errors/outofrangeerror&quot;&gt; &lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;StopIteration&lt;/code&gt; )를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="4365124eba4fd96b4e3cdf8de23d8b5f49422aad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inputs&lt;/code&gt; must be a list of Tensors or None (equivalent to an empty list), each of which has a corresponding split axis (from &lt;code&gt;input_shard_axes&lt;/code&gt;). Each input is split into &lt;code&gt;num_shards&lt;/code&gt; pieces along the corresponding axis, and computation is applied to each shard in parallel.</source>
          <target state="translated">&lt;code&gt;inputs&lt;/code&gt; 은 텐서 목록 또는 없음 (빈 목록과 동일)이어야하며 각 입력에는 해당 분할 축이 있습니다 ( &lt;code&gt;input_shard_axes&lt;/code&gt; ). 각 입력은 해당 축을 따라 &lt;code&gt;num_shards&lt;/code&gt; 조각 으로 분할되고 계산은 각 샤드에 병렬로 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="59fb23d11910df2f6dad644ceb9abe47a07cd581" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inputs&lt;/code&gt; must be a list of Tensors or None (equivalent to an empty list). Each input is split into &lt;code&gt;num_shards&lt;/code&gt; pieces along the 0-th dimension, and computation is applied to each shard in parallel.</source>
          <target state="translated">&lt;code&gt;inputs&lt;/code&gt; 은 텐서 목록이거나 없음 (빈 목록과 동일)이어야합니다. 각 입력은 0 차원을 따라 &lt;code&gt;num_shards&lt;/code&gt; 조각 으로 분할되고 계산은 각 샤드에 병렬로 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="5c74b8ba88726df18d0dd5fdeec4620219c581fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inputs&lt;/code&gt; values are quantized into the quantization range ( &lt;code&gt;[0; 2^num_bits - 1]&lt;/code&gt; when &lt;code&gt;narrow_range&lt;/code&gt; is false and &lt;code&gt;[1; 2^num_bits - 1]&lt;/code&gt; when it is true) and then de-quantized and output as floats in &lt;code&gt;[min; max]&lt;/code&gt; interval.</source>
          <target state="translated">&lt;code&gt;inputs&lt;/code&gt; 값이 양자화 범위로 양자화된다 ( &lt;code&gt;[0; 2^num_bits - 1]&lt;/code&gt; 때 &lt;code&gt;narrow_range&lt;/code&gt; 가 거짓이고, &lt;code&gt;[1; 2^num_bits - 1]&lt;/code&gt; 가 참일 경우) 양자화 드 출력 수레로서 다음과 &lt;code&gt;[min; max]&lt;/code&gt; 간격.</target>
        </trans-unit>
        <trans-unit id="b1dc674bf798430bca7a4b9aa45bb09eadc66617" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int32&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int32&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0943be3254a37fa6b40a32c1503e1e446bae74c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int32&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; of set sizes. For &lt;code&gt;a&lt;/code&gt; ranked &lt;code&gt;n&lt;/code&gt;, this is a &lt;code&gt;Tensor&lt;/code&gt; with rank &lt;code&gt;n-1&lt;/code&gt;, and the same 1st &lt;code&gt;n-1&lt;/code&gt; dimensions as &lt;code&gt;a&lt;/code&gt;. Each value is the number of unique elements in the corresponding &lt;code&gt;[0...n-1]&lt;/code&gt; dimension of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;int32&lt;/code&gt; 설정된 크기의 &lt;code&gt;Tensor&lt;/code&gt; . 들면 &lt;code&gt;a&lt;/code&gt; 기록 &lt;code&gt;n&lt;/code&gt; , 이것은 인 &lt;code&gt;Tensor&lt;/code&gt; 순위 &lt;code&gt;n-1&lt;/code&gt; 과 같은 1 번째 &lt;code&gt;n-1&lt;/code&gt; 과 같은 치수 &lt;code&gt;a&lt;/code&gt; . 각각의 값은 대응하는 고유의 요소 수이다 &lt;code&gt;[0...n-1]&lt;/code&gt; 의 치수 . &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0f340befba18202e8a2aadb52e7a125eee11253c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int32&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt;, determined at runtime.</source>
          <target state="translated">&lt;code&gt;int32&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; , 런타임시 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="d3729a9cfbacd302b03694dc050e83ed16781d54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; with shape [D1, ... DN, num_labels] or [D1, ... DN], where the latter implies num_labels=1. N &amp;gt;= 1 and num_labels is the number of target classes for the associated prediction. Commonly, N=1 and &lt;code&gt;labels&lt;/code&gt; has shape [batch_size, num_labels]. [D1, ... DN] must match &lt;code&gt;predictions&lt;/code&gt;. Values should be in range [0, num_classes), where num_classes is the last dimension of &lt;code&gt;predictions&lt;/code&gt;. Values outside this range always count towards &lt;code&gt;false_negative_at_&amp;lt;k&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;int64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 또는 &lt;code&gt;SparseTensor&lt;/code&gt; ( 모양 [D1, ... DN, num_labels] 또는 [D1, ... DN]), 여기서 후자는 num_labels = 1을 의미합니다. N&amp;gt; = 1이고 num_labels는 연관된 예측에 대한 대상 클래스의 수입니다. 일반적으로 N = 1이고 &lt;code&gt;labels&lt;/code&gt; 은 [batch_size, num_labels] 모양을 갖습니다. [D1, ... DN]은 &lt;code&gt;predictions&lt;/code&gt; 과 일치해야합니다 . 값은 [0, num_classes) 범위에 있어야합니다. 여기서 num_classes는 &lt;code&gt;predictions&lt;/code&gt; 의 마지막 차원입니다 . 이 범위를 벗어난 값은 항상 &lt;code&gt;false_negative_at_&amp;lt;k&amp;gt;&lt;/code&gt; 에 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="eb3c54a8490bee08145a709fc519cfd01a38c5a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; with shape [D1, ... DN, num_labels] or [D1, ... DN], where the latter implies num_labels=1. N &amp;gt;= 1 and num_labels is the number of target classes for the associated prediction. Commonly, N=1 and &lt;code&gt;labels&lt;/code&gt; has shape [batch_size, num_labels]. [D1, ... DN] must match &lt;code&gt;predictions&lt;/code&gt;. Values should be in range [0, num_classes), where num_classes is the last dimension of &lt;code&gt;predictions&lt;/code&gt;. Values outside this range are ignored.</source>
          <target state="translated">&lt;code&gt;int64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 또는 &lt;code&gt;SparseTensor&lt;/code&gt; ( 모양 [D1, ... DN, num_labels] 또는 [D1, ... DN]). 여기서 후자는 num_labels = 1을 의미합니다. N&amp;gt; = 1이고 num_labels는 연관된 예측에 대한 대상 클래스의 수입니다. 일반적으로 N = 1이고 &lt;code&gt;labels&lt;/code&gt; 은 [batch_size, num_labels] 모양을 갖습니다. [D1, ... DN]은 &lt;code&gt;predictions&lt;/code&gt; 과 일치해야합니다 . 값은 [0, num_classes) 범위에 있어야합니다. 여기서 num_classes는 &lt;code&gt;predictions&lt;/code&gt; 의 마지막 차원입니다 . 이 범위를 벗어난 값은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="16f12c92e7727354cfa481c39f5809f0a3dd5d0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int&lt;/code&gt; constant</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 상수</target>
        </trans-unit>
        <trans-unit id="7d68be0ae0eb659c51a50ace9b132ca709f22cf9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int&lt;/code&gt; or &lt;code&gt;float&lt;/code&gt;, print the values of &lt;code&gt;tensors&lt;/code&gt; once every N seconds. Exactly one of &lt;code&gt;every_n_iter&lt;/code&gt; and &lt;code&gt;every_n_secs&lt;/code&gt; should be provided.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 또는 &lt;code&gt;float&lt;/code&gt; , N 초마다 한 번씩 &lt;code&gt;tensors&lt;/code&gt; 값을 인쇄합니다 . &lt;code&gt;every_n_iter&lt;/code&gt; 및 &lt;code&gt;every_n_secs&lt;/code&gt; 중 정확히 하나를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="d7bc930ce1ca1e71c39f283385981261419f1458" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int&lt;/code&gt; or &lt;code&gt;float&lt;/code&gt;, save profile traces every N seconds.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 또는 &lt;code&gt;float&lt;/code&gt; , N 초마다 프로필 추적을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="0541fd0c70e3132976249b480a19e265f6b062e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int&lt;/code&gt; or shape &lt;code&gt;tuple&lt;/code&gt; Axes over which to calculate. Defaults to None, which shifts all axes.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 또는 shape &lt;code&gt;tuple&lt;/code&gt; 계산할 축입니다. 기본값은 없음으로, 모든 축을 이동합니다.</target>
        </trans-unit>
        <trans-unit id="547f668790902f596ef7af9275fa91743e46f82c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int&lt;/code&gt; or shape &lt;code&gt;tuple&lt;/code&gt;, optional Axes over which to shift. Default is None, which shifts all axes.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 또는 shape &lt;code&gt;tuple&lt;/code&gt; , 선택적으로 이동할 축. 기본값은 없음이며 모든 축을 이동합니다.</target>
        </trans-unit>
        <trans-unit id="1ae22e45c17d61678fec7ebb1eb9943a0b9e2d7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int&lt;/code&gt;, axis to partition on.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; , 분할 할 축.</target>
        </trans-unit>
        <trans-unit id="e976f5518f6850f7ac581b8bab3bc38dd2279b1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int&lt;/code&gt;, maximum number of training steps with no decrease in the given metric.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; , 주어진 측정 항목의 감소가없는 최대 학습 단계 수입니다.</target>
        </trans-unit>
        <trans-unit id="2d05d534fef2b539758c0874ec0701874bff9bed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int&lt;/code&gt;, maximum number of training steps with no increase in the given metric.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; , 주어진 측정 항목이 증가하지 않는 최대 학습 단계 수입니다.</target>
        </trans-unit>
        <trans-unit id="a1c401a4d783f5c82a84237dd92f07d966c74f66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int&lt;/code&gt;, number of shards to partition variable.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; , 파티션 변수에 대한 샤드 수.</target>
        </trans-unit>
        <trans-unit id="f19f0d9196be176ff3db09b77a36ef72e1dc06a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int&lt;/code&gt;, print the values of &lt;code&gt;tensors&lt;/code&gt; once every N local steps taken on the current worker.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; , 현재 워커에서 N 개의 로컬 단계를 수행 할 때마다 &lt;code&gt;tensors&lt;/code&gt; 값을 인쇄합니다 .</target>
        </trans-unit>
        <trans-unit id="affc0067ea53129f52e910d652374a751cbe4884" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int&lt;/code&gt;, runs the evaluator once every N training iteration.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 는 N 훈련 반복마다 평가자를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="fdafb1053939fba76aa9911cf309f25cd9b1bcce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int&lt;/code&gt;, save every N secs.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; , N 초마다 저장합니다.</target>
        </trans-unit>
        <trans-unit id="428811616d11646f394ed275c3b780e1f39282c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int&lt;/code&gt;, save every N steps.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; , N 단계마다 저장합니다.</target>
        </trans-unit>
        <trans-unit id="21154ba07ada300844755618a673a23aa560f270" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int&lt;/code&gt;, save profile traces every N steps. Exactly one of &lt;code&gt;save_secs&lt;/code&gt; and &lt;code&gt;save_steps&lt;/code&gt; should be set.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; , N 단계마다 프로필 추적을 저장합니다. &lt;code&gt;save_secs&lt;/code&gt; 및 &lt;code&gt;save_steps&lt;/code&gt; 중 정확히 하나를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="bfef6cc6efbc7a8ada56f455dd8524a1783b0476" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int&lt;/code&gt;, save summaries every N seconds.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; , N 초마다 요약을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="37e53d6eb99e2f15493eeed40a5793b83c3ab075" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int&lt;/code&gt;, save summaries every N steps. Exactly one of &lt;code&gt;save_secs&lt;/code&gt; and &lt;code&gt;save_steps&lt;/code&gt; should be set.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; , N 단계마다 요약을 저장합니다. &lt;code&gt;save_secs&lt;/code&gt; 및 &lt;code&gt;save_steps&lt;/code&gt; 중 정확히 하나를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="d259a014ae5e2f4d98a0867d7519b551e651eadf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int&lt;/code&gt;, stop is never requested if global step is less than this value. Defaults to 0.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; , 전역 단계가이 값보다 작 으면 중지가 요청되지 않습니다. 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="809ff48e455020f01986bb20122772c24d7b327c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int&lt;/code&gt;: The first dimension in the range of dimensions to merge. May be negative if &lt;code&gt;self.shape.rank&lt;/code&gt; is statically known.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; : 병합 할 차원 범위의 첫 번째 차원입니다. &lt;code&gt;self.shape.rank&lt;/code&gt; 가 정적으로 알려진 경우 음수 가 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1eb8a7a7a09fc8523b34079429fbe3680f39ec8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int&lt;/code&gt;: The last dimension in the range of dimensions to merge. May be negative if &lt;code&gt;self.shape.rank&lt;/code&gt; is statically known.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; : 병합 할 차원 범위의 마지막 차원입니다. &lt;code&gt;self.shape.rank&lt;/code&gt; 가 정적으로 알려진 경우 음수 가 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="184ec1ae066bfcf01df4f4f32966139d7e5a51b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_chief&lt;/code&gt; is determined based on &lt;code&gt;task_type&lt;/code&gt; and &lt;code&gt;cluster&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;is_chief&lt;/code&gt; 는 &lt;code&gt;task_type&lt;/code&gt; 및 &lt;code&gt;cluster&lt;/code&gt; 를 기반으로 결정 됩니다.</target>
        </trans-unit>
        <trans-unit id="e31d32e4fc1360a458b71bcb7a1fac40127abfeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_self_adjoint&lt;/code&gt; is not &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;is_positive_definite&lt;/code&gt; is not &lt;code&gt;False&lt;/code&gt; or &lt;code&gt;is_square&lt;/code&gt; is not &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;is_self_adjoint&lt;/code&gt; 이 없는 &lt;code&gt;True&lt;/code&gt; , &lt;code&gt;is_positive_definite&lt;/code&gt; 이 아닌 &lt;code&gt;False&lt;/code&gt; 또는 &lt;code&gt;is_square&lt;/code&gt; 없는 &lt;code&gt;True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4c6b62846f245fd909d73917e3696cc06696cb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jpeg_quality&lt;/code&gt; must be in the interval &lt;code&gt;[0, 100]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;jpeg_quality&lt;/code&gt; 는 &lt;code&gt;[0, 100]&lt;/code&gt; 간격에 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="1b168e5138690a48f73cb5c312acc79143912716" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keep_checkpoint_every_n_hours&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;keep_checkpoint_every_n_hours&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="fe65242bdf37758b4900f16693fd956b6decdc7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keep_checkpoint_every_n_hours&lt;/code&gt;: In addition to keeping the most recent &lt;code&gt;max_to_keep&lt;/code&gt; checkpoint files, you might want to keep one checkpoint file for every N hours of training. This can be useful if you want to later analyze how a model progressed during a long training session. For example, passing &lt;code&gt;keep_checkpoint_every_n_hours=2&lt;/code&gt; ensures that you keep one checkpoint file for every 2 hours of training. The default value of 10,000 hours effectively disables the feature.</source>
          <target state="translated">&lt;code&gt;keep_checkpoint_every_n_hours&lt;/code&gt; : 최신 &lt;code&gt;max_to_keep&lt;/code&gt; 검사 점 파일 을 유지하는 것 외에도 N 시간의 훈련마다 하나의 검사 점 파일을 유지하려고 할 수 있습니다. 이는 장기 교육 세션 동안 모델이 진행된 방식을 나중에 분석하려는 경우 유용 할 수 있습니다. 예를 들어 &lt;code&gt;keep_checkpoint_every_n_hours=2&lt;/code&gt; 를 전달 하면 훈련 2 시간마다 하나의 체크 포인트 파일이 유지됩니다. 기본값 10,000 시간은 기능을 효과적으로 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="ae3802952cd8af52bbc141758fb7ecc9cbfddbe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keep_checkpoint_max&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;keep_checkpoint_max&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="28df7a3f8aeb875e2ea7fd2ed321364f52f7ef8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kernel_regularizer&lt;/code&gt;: Regularizer to apply a penalty on the layer's kernel</source>
          <target state="translated">&lt;code&gt;kernel_regularizer&lt;/code&gt; : 레이어 커널에 페널티를 적용하는 정규화 기</target>
        </trans-unit>
        <trans-unit id="6fd2e82602a82beddbc5b8183c263f1d29d292de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;labels&lt;/code&gt; -- This is the second item returned from the &lt;code&gt;input_fn&lt;/code&gt; passed to &lt;code&gt;train&lt;/code&gt;, &lt;code&gt;evaluate&lt;/code&gt;, and &lt;code&gt;predict&lt;/code&gt;. This should be a single &lt;a href=&quot;../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;dict&lt;/code&gt; of same (for multi-head models). If mode is &lt;a href=&quot;../../../estimator/modekeys#PREDICT&quot;&gt;&lt;code&gt;tf.estimator.ModeKeys.PREDICT&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;labels=None&lt;/code&gt; will be passed. If the &lt;code&gt;model_fn&lt;/code&gt;'s signature does not accept &lt;code&gt;mode&lt;/code&gt;, the &lt;code&gt;model_fn&lt;/code&gt; must still be able to handle &lt;code&gt;labels=None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;labels&lt;/code&gt; - 이것은 반환 된 두 번째 항목이다 &lt;code&gt;input_fn&lt;/code&gt; 에 전달 &lt;code&gt;train&lt;/code&gt; , &lt;code&gt;evaluate&lt;/code&gt; 및 &lt;code&gt;predict&lt;/code&gt; . 단일 &lt;a href=&quot;../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 또는 동일한 &lt;code&gt;dict&lt;/code&gt; (다중 헤드 모델의 경우) 여야합니다 . 모드가 &lt;a href=&quot;../../../estimator/modekeys#PREDICT&quot;&gt; &lt;code&gt;tf.estimator.ModeKeys.PREDICT&lt;/code&gt; &lt;/a&gt; 이면 &lt;code&gt;labels=None&lt;/code&gt; 이 전달됩니다. 는 IF &lt;code&gt;model_fn&lt;/code&gt; 의 서명이 동의하지 않는 &lt;code&gt;mode&lt;/code&gt; 의 &lt;code&gt;model_fn&lt;/code&gt; 은 아직 처리되지 할 수 있어야 &lt;code&gt;labels=None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79aa40dceae2978f1ec80939504af5073af6a0cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;labels&lt;/code&gt; -- This is the second item returned from the &lt;code&gt;input_fn&lt;/code&gt; passed to &lt;code&gt;train&lt;/code&gt;, &lt;code&gt;evaluate&lt;/code&gt;, and &lt;code&gt;predict&lt;/code&gt;. This should be a single &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;dict&lt;/code&gt; of same (for multi-head models). If mode is &lt;a href=&quot;modekeys#PREDICT&quot;&gt;&lt;code&gt;tf.estimator.ModeKeys.PREDICT&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;labels=None&lt;/code&gt; will be passed. If the &lt;code&gt;model_fn&lt;/code&gt;'s signature does not accept &lt;code&gt;mode&lt;/code&gt;, the &lt;code&gt;model_fn&lt;/code&gt; must still be able to handle &lt;code&gt;labels=None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;labels&lt;/code&gt; - 이것은 반환 된 두 번째 항목이다 &lt;code&gt;input_fn&lt;/code&gt; 에 전달 &lt;code&gt;train&lt;/code&gt; , &lt;code&gt;evaluate&lt;/code&gt; 및 &lt;code&gt;predict&lt;/code&gt; . 단일 &lt;a href=&quot;../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 또는 동일한 &lt;code&gt;dict&lt;/code&gt; (다중 헤드 모델의 경우) 여야합니다 . 모드가 &lt;a href=&quot;modekeys#PREDICT&quot;&gt; &lt;code&gt;tf.estimator.ModeKeys.PREDICT&lt;/code&gt; &lt;/a&gt; 이면 &lt;code&gt;labels=None&lt;/code&gt; 이 전달됩니다. 는 IF &lt;code&gt;model_fn&lt;/code&gt; 의 서명이 동의하지 않는 &lt;code&gt;mode&lt;/code&gt; 의 &lt;code&gt;model_fn&lt;/code&gt; 은 아직 처리되지 할 수 있어야 &lt;code&gt;labels=None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d97f2d271ae62ca5bbe6af9fa6ffd6fa3fdf7499" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;labels&lt;/code&gt; must be a dense &lt;code&gt;Tensor&lt;/code&gt; with shape matching &lt;code&gt;logits&lt;/code&gt;, namely &lt;code&gt;[D0, D1, ... DN, 1]&lt;/code&gt;. If &lt;code&gt;label_vocabulary&lt;/code&gt; given, &lt;code&gt;labels&lt;/code&gt; must be a string &lt;code&gt;Tensor&lt;/code&gt; with values from the vocabulary. If &lt;code&gt;label_vocabulary&lt;/code&gt; is not given, &lt;code&gt;labels&lt;/code&gt; must be an integer &lt;code&gt;Tensor&lt;/code&gt; with values specifying the class index.</source>
          <target state="translated">&lt;code&gt;labels&lt;/code&gt; 은 형태 일치 &lt;code&gt;logits&lt;/code&gt; 이있는 밀도가 높은 &lt;code&gt;Tensor&lt;/code&gt; 여야합니다 ( 즉, &lt;code&gt;[D0, D1, ... DN, 1]&lt;/code&gt; . 경우 &lt;code&gt;label_vocabulary&lt;/code&gt; 가 주어진 &lt;code&gt;labels&lt;/code&gt; 문자열이어야합니다 &lt;code&gt;Tensor&lt;/code&gt; 어휘에서 값을. &lt;code&gt;label_vocabulary&lt;/code&gt; 가 제공되지 않은 경우 , &lt;code&gt;labels&lt;/code&gt; 은 클래스 인덱스를 지정하는 값을 가진 정수 &lt;code&gt;Tensor&lt;/code&gt; 여야합니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
