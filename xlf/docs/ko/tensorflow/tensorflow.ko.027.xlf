<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="tensorflow">
    <body>
      <group id="tensorflow">
        <trans-unit id="ccb81584c212beaa430e6512ec976af3536e8fb3" translate="yes" xml:space="preserve">
          <source>Asserts that a shell command succeeds (i.e. exits with code 0).</source>
          <target state="translated">쉘 명령이 성공했는지 확인합니다 (예 : 코드 0으로 종료).</target>
        </trans-unit>
        <trans-unit id="df4dac6414ae21eb7bb8fac61abfbe8c3a34962e" translate="yes" xml:space="preserve">
          <source>Asserts that actual.endswith(expected_end) is True.</source>
          <target state="translated">actual.endswith (expected_end)가 True임을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="67c77c2c54104331cd0d2fd0285ae73e94114232" translate="yes" xml:space="preserve">
          <source>Asserts that actual.endswith(unexpected_end) is False.</source>
          <target state="translated">actual.endswith (unexpected_end)가 False임을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b76aea4222310f368a71d34488b49a87b39b0f80" translate="yes" xml:space="preserve">
          <source>Asserts that actual.startswith(unexpected_start) is False.</source>
          <target state="translated">actual.startswith (unexpected_start)가 False임을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f3ae16f703d4d758e595b81c433b5df1a027aa49" translate="yes" xml:space="preserve">
          <source>Asserts that an object has non-zero length.</source>
          <target state="translated">객체의 길이가 0이 아닌지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="cfcbd3a7a3d704f4ed8a5cab9580e989f6bde17a" translate="yes" xml:space="preserve">
          <source>Asserts that an object has the expected length.</source>
          <target state="translated">개체의 예상 길이를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="84e64b64d6dcaf5e07d90f28654eac37719ba950" translate="yes" xml:space="preserve">
          <source>Asserts that an object has zero length.</source>
          <target state="translated">객체의 길이가 0임을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6b318eda77755b4102ae7fc109f7fe1df5bddbd0" translate="yes" xml:space="preserve">
          <source>Asserts that at least one regex in regexes matches str.</source>
          <target state="translated">정규 표현식에서 하나 이상의 정규 표현식이 str과 일치한다고 주장합니다.</target>
        </trans-unit>
        <trans-unit id="5d2674f0f06ac80ca91a3de033393c07763b0eaf" translate="yes" xml:space="preserve">
          <source>Asserts that message is same as parsed expected_message_ascii.</source>
          <target state="translated">메시지가 구문 분석 된 expected_message_ascii와 동일하다고 주장합니다.</target>
        </trans-unit>
        <trans-unit id="efc53871b1ae31fa92cc330bd22797036a9e29d2" translate="yes" xml:space="preserve">
          <source>Asserts that the JSON objects defined in two strings are equal.</source>
          <target state="translated">두 문자열에 정의 된 JSON 객체가 동일하다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="4d18c25f38b57c16cae7f5e69f980cfe6fb25056" translate="yes" xml:space="preserve">
          <source>Asserts that the given &lt;code&gt;Tensor&lt;/code&gt; is of the specified type.</source>
          <target state="translated">주어진 &lt;code&gt;Tensor&lt;/code&gt; 가 지정된 유형인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="62e06e61689a22ac579dcd8134c6a03cdf615eef" translate="yes" xml:space="preserve">
          <source>Asserts that the given &lt;code&gt;tensor&lt;/code&gt; is a scalar (i.e. zero-dimensional).</source>
          <target state="translated">주어진 &lt;code&gt;tensor&lt;/code&gt; 가 스칼라 (예 : 0 차원) 임을 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="d9552cc7700c29f723bed87989ba67a997ed05a8" translate="yes" xml:space="preserve">
          <source>Asserts that the given &lt;code&gt;tensor&lt;/code&gt; is a scalar.</source>
          <target state="translated">주어진 &lt;code&gt;tensor&lt;/code&gt; 가 스칼라 라고 주장합니다 .</target>
        </trans-unit>
        <trans-unit id="1945c0aa8211a04b1d39ca505afc23878f03082e" translate="yes" xml:space="preserve">
          <source>Asserts that the given condition is true.</source>
          <target state="translated">주어진 조건이 참이라고 주장합니다.</target>
        </trans-unit>
        <trans-unit id="cc9d70440cff4fb0f2553d86b5b3c9dd7a6ebdb7" translate="yes" xml:space="preserve">
          <source>Asserts that the message in a raised exception equals the given string.</source>
          <target state="translated">발생한 예외의 메시지가 주어진 문자열과 같다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="b3c3e9d99715c0a20a4f1e32f289caf0985d5b65" translate="yes" xml:space="preserve">
          <source>Asserts that the message in a raised exception matches a regex.</source>
          <target state="translated">발생한 예외의 메시지가 정규식과 일치하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="024142d4d4a306ca5dc2d7f04946f70cab4a922e" translate="yes" xml:space="preserve">
          <source>Asserts that the message in a triggered warning matches a regexp. Basic functioning is similar to assertWarns() with the addition that only warnings whose messages also match the regular expression are considered successful matches.</source>
          <target state="translated">트리거 된 경고의 메시지가 정규식과 일치하는지 확인합니다. 기본 기능은 assertWarns ()와 유사하며 메시지가 정규식과 일치하는 경고 만 성공적인 일치로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="64ed6e139b69bab2010db8561d296812d3fcc2a0" translate="yes" xml:space="preserve">
          <source>Asserts that the strings provided are found in the target in order.</source>
          <target state="translated">제공된 문자열이 대상에서 순서대로 발견되도록합니다.</target>
        </trans-unit>
        <trans-unit id="520c64436037ba34dd942c92c1b51f5a9e8b5451" translate="yes" xml:space="preserve">
          <source>Asserts that the two given devices are the same.</source>
          <target state="translated">주어진 두 장치가 동일하다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="d24619fd3be6d0527f469281e097fffb11ba6d9b" translate="yes" xml:space="preserve">
          <source>Asserts that total ordering has been implemented correctly.</source>
          <target state="translated">총 주문이 올바르게 구현되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="94eab101a0c591a4056c61189d905f60990fcb77" translate="yes" xml:space="preserve">
          <source>Asserts that two &lt;code&gt;GraphDef&lt;/code&gt;s are (mostly) the same.</source>
          <target state="translated">두 개의 &lt;code&gt;GraphDef&lt;/code&gt; 가 (대부분) 동일 하다고 주장 합니다.</target>
        </trans-unit>
        <trans-unit id="21e6a83414cb6873c47b8c7dcb7e2ea497382917" translate="yes" xml:space="preserve">
          <source>Asserts that two float arrays are near each other.</source>
          <target state="translated">두 개의 float 배열이 서로 가까이 있다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="8714ee0dfa3727fb6a0faa59f505f391b10354a7" translate="yes" xml:space="preserve">
          <source>Asserts that two floats are near each other.</source>
          <target state="translated">두 개의 수레가 서로 가까이 있다고 주장합니다.</target>
        </trans-unit>
        <trans-unit id="173c361341ab6c7ec8251302259509a11dccfe33" translate="yes" xml:space="preserve">
          <source>Asserts that two multi-line strings are equal.</source>
          <target state="translated">두 개의 여러 줄 문자열이 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="87f1b29a37d0a5fa4b98c7ff8003240fb16ba9d1" translate="yes" xml:space="preserve">
          <source>Asserts that two numpy arrays have near values.</source>
          <target state="translated">두 개의 numpy 배열이 거의 값을 갖도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="6087803354414efd307f45a4d3825523474a404e" translate="yes" xml:space="preserve">
          <source>Asserts that two numpy arrays or Tensors do not have the same values.</source>
          <target state="translated">두 개의 numpy 배열 또는 Tensor의 값이 동일하지 않은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="8563e4ab597c58334b9dd1f0ddf7499de74e1ac3" translate="yes" xml:space="preserve">
          <source>Asserts that two numpy arrays or Tensors have the same values.</source>
          <target state="translated">두 개의 numpy 배열 또는 Tensor가 동일한 값을 갖도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="beeb78717d0b6788c5a9502c97bcbc4c4d9b5dde" translate="yes" xml:space="preserve">
          <source>Asserts that two sequences have the same elements (in any order).</source>
          <target state="translated">두 시퀀스가 ​​동일한 요소 (순서대로)를 갖도록합니다.</target>
        </trans-unit>
        <trans-unit id="d71ad08e0dbb2f2f7a6eddecbbf1432aeec1931b" translate="yes" xml:space="preserve">
          <source>Asserts that two structures are nested in the same way.</source>
          <target state="translated">두 구조가 같은 방식으로 중첩되도록합니다.</target>
        </trans-unit>
        <trans-unit id="43ab885ba56e639e9028c492f6ca84f8a32693c3" translate="yes" xml:space="preserve">
          <source>Asserts that two structures of numpy arrays or Tensors, have near values.</source>
          <target state="translated">numpy 배열 또는 Tensor의 두 구조가 거의 값을 갖도록 주장합니다.</target>
        </trans-unit>
        <trans-unit id="a8ad9604199233d6f49650754a5f6aa048f8dca3" translate="yes" xml:space="preserve">
          <source>Asserts that two values contain the same structural content.</source>
          <target state="translated">두 값에 동일한 구조적 내용이 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="4c119b9699a32942987d2047ad7cfbf051fe61de" translate="yes" xml:space="preserve">
          <source>Asserts that urls are equal, ignoring ordering of query params.</source>
          <target state="translated">쿼리 매개 변수의 순서를 무시하고 URL이 동일하다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="0f47b84d85cfc82a0411c324b96808e9b237a2bb" translate="yes" xml:space="preserve">
          <source>Asserts that value is between minv and maxv (inclusive).</source>
          <target state="translated">값이 minv와 maxv (포함) 사이인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="9ba258ab0a489377d7115eb54e866d74d67f2bf8" translate="yes" xml:space="preserve">
          <source>Asserts the cardinality of the input dataset.</source>
          <target state="translated">입력 데이터 세트의 카디널리티를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="2444928438f54ef4414cddff39193096c12629aa" translate="yes" xml:space="preserve">
          <source>Assign</source>
          <target state="translated">Assign</target>
        </trans-unit>
        <trans-unit id="8d29f83e2ee4395c85a7e64fecaf0e648022160d" translate="yes" xml:space="preserve">
          <source>Assign &lt;code&gt;value&lt;/code&gt; to the sliced l-value reference of &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; 의 슬라이스 된 l- 값 참조에 &lt;code&gt;value&lt;/code&gt; 을 할당 합니다 .</target>
        </trans-unit>
        <trans-unit id="f0390208b948274b0a88640709c3897e61397598" translate="yes" xml:space="preserve">
          <source>Assign &lt;code&gt;value&lt;/code&gt; to the sliced l-value reference of &lt;code&gt;ref&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ref&lt;/code&gt; 의 슬라이스 된 l- 값 참조에 &lt;code&gt;value&lt;/code&gt; 을 할당 합니다 .</target>
        </trans-unit>
        <trans-unit id="54e958e3e126c0052bc5538772af579e66eb44f5" translate="yes" xml:space="preserve">
          <source>AssignAdd</source>
          <target state="translated">AssignAdd</target>
        </trans-unit>
        <trans-unit id="9642ce770210571ed92becec52e47452ac6df4a3" translate="yes" xml:space="preserve">
          <source>AssignAddVariableOp</source>
          <target state="translated">AssignAddVariableOp</target>
        </trans-unit>
        <trans-unit id="f17b6cfa7e5b6913976f1ba2c583cf42ed29dfa4" translate="yes" xml:space="preserve">
          <source>AssignSub</source>
          <target state="translated">AssignSub</target>
        </trans-unit>
        <trans-unit id="904b85bad787c3d944ab01a94d8ccc0a1e194969" translate="yes" xml:space="preserve">
          <source>AssignSubVariableOp</source>
          <target state="translated">AssignSubVariableOp</target>
        </trans-unit>
        <trans-unit id="7af2be4baebc1a62fb25691e4f43e5c9bda0bd16" translate="yes" xml:space="preserve">
          <source>AssignVariableOp</source>
          <target state="translated">AssignVariableOp</target>
        </trans-unit>
        <trans-unit id="4ec26f2730dee86065167e3466463fe260673ba3" translate="yes" xml:space="preserve">
          <source>Assignment map supports following syntax:</source>
          <target state="translated">할당 맵은 다음 구문을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="66f988dfed011799e1ce8edd62edeebbed9781ba" translate="yes" xml:space="preserve">
          <source>Assigns &lt;a href=&quot;../../indexedslices&quot;&gt;&lt;code&gt;tf.IndexedSlices&lt;/code&gt;&lt;/a&gt; to this variable batch-wise.</source>
          <target state="translated">할당합니다 &lt;a href=&quot;../../indexedslices&quot;&gt; &lt;code&gt;tf.IndexedSlices&lt;/code&gt; &lt;/a&gt; 이 변수 배치 식으로.</target>
        </trans-unit>
        <trans-unit id="4ffea0c7d9fe1b5f4d911a9d928c8e496a309fdf" translate="yes" xml:space="preserve">
          <source>Assigns &lt;a href=&quot;../../indexedslices&quot;&gt;&lt;code&gt;tf.IndexedSlices&lt;/code&gt;&lt;/a&gt; to this variable.</source>
          <target state="translated">를 할당 &lt;a href=&quot;../../indexedslices&quot;&gt; &lt;code&gt;tf.IndexedSlices&lt;/code&gt; &lt;/a&gt; 이 변수.</target>
        </trans-unit>
        <trans-unit id="b58b4608811536fec4da502146b6fc8391861343" translate="yes" xml:space="preserve">
          <source>Assigns &lt;a href=&quot;indexedslices&quot;&gt;&lt;code&gt;tf.IndexedSlices&lt;/code&gt;&lt;/a&gt; to this variable batch-wise.</source>
          <target state="translated">할당합니다 &lt;a href=&quot;indexedslices&quot;&gt; &lt;code&gt;tf.IndexedSlices&lt;/code&gt; &lt;/a&gt; 이 변수 배치 식으로.</target>
        </trans-unit>
        <trans-unit id="3a9623292bc8a42a567c500fd1c657357201bd56" translate="yes" xml:space="preserve">
          <source>Assigns &lt;a href=&quot;indexedslices&quot;&gt;&lt;code&gt;tf.IndexedSlices&lt;/code&gt;&lt;/a&gt; to this variable.</source>
          <target state="translated">를 할당 &lt;a href=&quot;indexedslices&quot;&gt; &lt;code&gt;tf.IndexedSlices&lt;/code&gt; &lt;/a&gt; 이 변수.</target>
        </trans-unit>
        <trans-unit id="a1221e37dc37c06f78afc6987eaff3a88b2bb58b" translate="yes" xml:space="preserve">
          <source>Assigns a new value to a variable.</source>
          <target state="translated">변수에 새 값을 할당합니다.</target>
        </trans-unit>
        <trans-unit id="59833741942f09d47d6d269c0016820d532ea10b" translate="yes" xml:space="preserve">
          <source>Assigns a new value to the variable.</source>
          <target state="translated">변수에 새로운 값을 할당합니다.</target>
        </trans-unit>
        <trans-unit id="8d33ec49b1051e424c01f56984c9cdd31248f668" translate="yes" xml:space="preserve">
          <source>Assigns sparse updates to the variable referenced by &lt;code&gt;resource&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;resource&lt;/code&gt; 참조하는 변수에 스파 스 업데이트를 할당 합니다 .</target>
        </trans-unit>
        <trans-unit id="b3ab79b168a33e48f7f2d1af963384acb24b8505" translate="yes" xml:space="preserve">
          <source>Associates &lt;code&gt;keys&lt;/code&gt; with &lt;code&gt;values&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;keys&lt;/code&gt; 를 &lt;code&gt;values&lt;/code&gt; 과 연관 시킵니다.</target>
        </trans-unit>
        <trans-unit id="6972e35f2682c3c47b76ff19583ae8d7aa1684d2" translate="yes" xml:space="preserve">
          <source>Associates a string prefix with an integer counter in a TensorFlow graph.</source>
          <target state="translated">TensorFlow 그래프에서 문자열 접 두부를 정수 카운터와 연관시킵니다.</target>
        </trans-unit>
        <trans-unit id="e24a1a623a03db282049375fe95f8f3ec9b8b9e8" translate="yes" xml:space="preserve">
          <source>Associates the given statistics aggregator with the dataset pipeline.</source>
          <target state="translated">지정된 통계 수집기를 데이터 세트 파이프 라인과 연관시킵니다.</target>
        </trans-unit>
        <trans-unit id="17530d5f5ae250a823f2e0f2f6d96951627f2ba9" translate="yes" xml:space="preserve">
          <source>Assume &lt;code&gt;diagonal&lt;/code&gt; has &lt;code&gt;k&lt;/code&gt; dimensions &lt;code&gt;[I, J, K, ..., N]&lt;/code&gt;, then the output is a tensor of rank &lt;code&gt;k+1&lt;/code&gt; with dimensions [I, J, K, ..., N, N]` where:</source>
          <target state="translated">&lt;code&gt;diagonal&lt;/code&gt; 에 &lt;code&gt;k&lt;/code&gt; 차원 &lt;code&gt;[I, J, K, ..., N]&lt;/code&gt; 이 있다고 가정 하면 출력은 차원이 [I, J, K, ..., N, N]` 인 랭크 &lt;code&gt;k+1&lt;/code&gt; 의 텐서입니다 .</target>
        </trans-unit>
        <trans-unit id="ef8986471f69df663859a316499adf1546db37ad" translate="yes" xml:space="preserve">
          <source>Assume &lt;code&gt;diagonal&lt;/code&gt; has dimensions [D1,..., Dk], then the output is a tensor of rank 2k with dimensions [D1,..., Dk, D1,..., Dk] where:</source>
          <target state="translated">가정 &lt;code&gt;diagonal&lt;/code&gt; 치수 [D1, ..., DK는, 그 출력을 기준으로 순위 2K의 텐서 인을 갖는다 D1, ..., DK, D1, ..., DK] 여기서,</target>
        </trans-unit>
        <trans-unit id="1063638713bd09d15369416742252d50b81f847c" translate="yes" xml:space="preserve">
          <source>Assume &lt;code&gt;input&lt;/code&gt; has &lt;code&gt;k+1&lt;/code&gt; dimensions &lt;code&gt;[I, J, K, ..., M, N]&lt;/code&gt; and &lt;code&gt;diagonal&lt;/code&gt; has &lt;code&gt;k&lt;/code&gt; dimensions &lt;code&gt;[I, J, K, ..., min(M, N)]&lt;/code&gt;. Then the output is a tensor of rank &lt;code&gt;k+1&lt;/code&gt; with dimensions &lt;code&gt;[I, J, K, ..., M, N]&lt;/code&gt; where:</source>
          <target state="translated">가정 &lt;code&gt;input&lt;/code&gt; 갖는 &lt;code&gt;k+1&lt;/code&gt; 차원 &lt;code&gt;[I, J, K, ..., M, N]&lt;/code&gt; 과 &lt;code&gt;diagonal&lt;/code&gt; 갖는 &lt;code&gt;k&lt;/code&gt; 개의 치수 &lt;code&gt;[I, J, K, ..., min(M, N)]&lt;/code&gt; . 그러면 출력은 차원이 &lt;code&gt;[I, J, K, ..., M, N]&lt;/code&gt; 인 순위 &lt;code&gt;k+1&lt;/code&gt; 의 텐서입니다 .</target>
        </trans-unit>
        <trans-unit id="fbd67899a90182aaf45f4c97f544c96bfebb9869" translate="yes" xml:space="preserve">
          <source>Assume &lt;code&gt;input&lt;/code&gt; has &lt;code&gt;k&lt;/code&gt; dimensions &lt;code&gt;[I, J, K, ..., M, N]&lt;/code&gt;, then the output is a tensor of rank &lt;code&gt;k - 1&lt;/code&gt; with dimensions &lt;code&gt;[I, J, K, ..., min(M, N)]&lt;/code&gt; where:</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; 이 &lt;code&gt;k&lt;/code&gt; 차원 &lt;code&gt;[I, J, K, ..., M, N]&lt;/code&gt; 이라고 가정 하면 출력값은 차원 &lt;code&gt;[I, J, K, ..., min(M, N)]&lt;/code&gt; 이있는 랭크 &lt;code&gt;k - 1&lt;/code&gt; 의 텐서입니다. )] 여기서 :</target>
        </trans-unit>
        <trans-unit id="4d3f2f771a63e5c218fee12e248d4de6a1ccd7a2" translate="yes" xml:space="preserve">
          <source>Assume &lt;code&gt;input&lt;/code&gt; has &lt;code&gt;r&lt;/code&gt; dimensions &lt;code&gt;[I, J, ..., L, M, N]&lt;/code&gt;. Let &lt;code&gt;max_diag_len&lt;/code&gt; be the maximum length among all diagonals to be extracted, &lt;code&gt;max_diag_len = min(M + min(k[1], 0), N + min(-k[0], 0))&lt;/code&gt; Let &lt;code&gt;num_diags&lt;/code&gt; be the number of diagonals to extract, &lt;code&gt;num_diags = k[1] - k[0] + 1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; 에 &lt;code&gt;r&lt;/code&gt; 치수 가 있다고 가정 합니다 &lt;code&gt;[I, J, ..., L, M, N]&lt;/code&gt; . 하자 &lt;code&gt;max_diag_len&lt;/code&gt; 모든 대각선 중 최대 길이를 추출하는, &lt;code&gt;max_diag_len = min(M + min(k[1], 0), N + min(-k[0], 0))&lt;/code&gt; 하자 &lt;code&gt;num_diags&lt;/code&gt; 는 행 대각선의 숫자 추출, &lt;code&gt;num_diags = k[1] - k[0] + 1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d937b1330f7e3a7fccf78581cb0ca023983fbb32" translate="yes" xml:space="preserve">
          <source>Assume &lt;code&gt;input&lt;/code&gt; has dimensions &lt;code&gt;[D1,..., Dk, D1,..., Dk]&lt;/code&gt;, then the output is a tensor of rank &lt;code&gt;k&lt;/code&gt; with dimensions &lt;code&gt;[D1,..., Dk]&lt;/code&gt; where:</source>
          <target state="translated">가정 &lt;code&gt;input&lt;/code&gt; 측정 갖는다 &lt;code&gt;[D1,..., Dk, D1,..., Dk]&lt;/code&gt; , 출력 랭크의 텐서 &lt;code&gt;k&lt;/code&gt; 치수를 &lt;code&gt;[D1,..., Dk]&lt;/code&gt; 여기서 :</target>
        </trans-unit>
        <trans-unit id="dbc135573ab1e3d7bd01504214d953191343e542" translate="yes" xml:space="preserve">
          <source>Assume &lt;code&gt;x = [[1, 2], [3, 4]]&lt;/code&gt; and &lt;code&gt;y = [[5, 6], [7, 8]]&lt;/code&gt;&lt;code&gt;batch_dot(x, y, axes=1) = [[17], [53]]&lt;/code&gt; which is the main diagonal of &lt;code&gt;x.dot(y.T)&lt;/code&gt;, although we never have to calculate the off-diagonal elements.</source>
          <target state="translated">가정 &lt;code&gt;x = [[1, 2], [3, 4]]&lt;/code&gt; 및 &lt;code&gt;y = [[5, 6], [7, 8]]&lt;/code&gt; &lt;code&gt;batch_dot(x, y, axes=1) = [[17], [53]]&lt;/code&gt; 이것은 &lt;code&gt;x.dot(y.T)&lt;/code&gt; 의 주 대각선 이지만 비 대각선 요소를 계산할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="a82fcc1b411c5f4bec45984841441f39fc502ff7" translate="yes" xml:space="preserve">
          <source>Assume the input is type float and has a possible range of [0.0, 6.0] and the output type is quint8 ([0, 255]). The min_range and max_range values should be specified as 0.0 and 6.0. Quantizing from float to quint8 will multiply each value of the input by 255/6 and cast to quint8.</source>
          <target state="translated">입력이 float 유형이고 가능한 범위가 [0.0, 6.0]이고 출력 유형이 quint8 ([0, 255])이라고 가정하십시오. min_range 및 max_range 값은 0.0 및 6.0으로 지정해야합니다. float에서 quint8로 양자화하면 입력의 각 값에 255/6이 곱해지고 quint8로 캐스트됩니다.</target>
        </trans-unit>
        <trans-unit id="6a43de36b03a7d6fa9c2271032015cd9c1887196" translate="yes" xml:space="preserve">
          <source>Assumes that all arguments of the decorated function are Tensors which will be batched along their first dimension.</source>
          <target state="translated">데코 레이팅 된 함수의 모든 인수가 첫 번째 차원을 따라 배치되는 텐서라고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="d71b7de1135d3ec2ec9d125790804ed06b21c985" translate="yes" xml:space="preserve">
          <source>Assumes the two SparseTensors have the same shape, i.e., no broadcasting.</source>
          <target state="translated">두 SparseTensor가 동일한 모양을 가지고 있다고 가정합니다. 즉, 방송이 없습니다.</target>
        </trans-unit>
        <trans-unit id="a07e095c072e16bbf92a14147cf5b22948273245" translate="yes" xml:space="preserve">
          <source>Assumes the two SparseTensors have the same shape, i.e., no broadcasting. Example:</source>
          <target state="translated">두 SparseTensor가 같은 모양, 즉 방송이 없다고 가정합니다. 예:</target>
        </trans-unit>
        <trans-unit id="eb66a53b4e2940cadbf782bfc38025a848bd7d3b" translate="yes" xml:space="preserve">
          <source>Assuming that &lt;code&gt;lengths&lt;/code&gt; takes on values</source>
          <target state="translated">&lt;code&gt;lengths&lt;/code&gt; 가 값을 취 한다고 가정</target>
        </trans-unit>
        <trans-unit id="ebdffd4a8451f3858d345b0fcd9b661df4d27ebd" translate="yes" xml:space="preserve">
          <source>Assuming the goal of a training is to minimize the loss. With this, the metric to be monitored would be &lt;code&gt;'loss'&lt;/code&gt;, and mode would be &lt;code&gt;'min'&lt;/code&gt;. A &lt;code&gt;model.fit()&lt;/code&gt; training loop will check at end of every epoch whether the loss is no longer decreasing, considering the &lt;code&gt;min_delta&lt;/code&gt; and &lt;code&gt;patience&lt;/code&gt; if applicable. Once it's found no longer decreasing, &lt;code&gt;model.stop_training&lt;/code&gt; is marked True and the training terminates.</source>
          <target state="translated">교육의 목표가 손실을 최소화하는 것이라고 가정합니다. 이를 통해 모니터링 할 측정 항목은 &lt;code&gt;'loss'&lt;/code&gt; 이고 모드는 &lt;code&gt;'min'&lt;/code&gt; 입니다. &lt;code&gt;model.fit()&lt;/code&gt; 손실이 감소 고려하여 더 이상 없는지 훈련 루프는 모든 시대의 끝에서 확인합니다 &lt;code&gt;min_delta&lt;/code&gt; 과 &lt;code&gt;patience&lt;/code&gt; (해당되는 경우). 더 이상 감소하지 않는 것으로 확인되면 &lt;code&gt;model.stop_training&lt;/code&gt; 이 True로 표시되고 훈련이 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="a6048755ec3c0b2b81eb6e99c8ef91a13bc46642" translate="yes" xml:space="preserve">
          <source>Assuming the variable has rank &lt;code&gt;P&lt;/code&gt; and &lt;code&gt;indices&lt;/code&gt; is a &lt;code&gt;Tensor&lt;/code&gt; of rank &lt;code&gt;Q&lt;/code&gt;.</source>
          <target state="translated">변수에 순위 &lt;code&gt;P&lt;/code&gt; 가 있고 &lt;code&gt;indices&lt;/code&gt; 가 순위 &lt;code&gt;Q&lt;/code&gt; 의 &lt;code&gt;Tensor&lt;/code&gt; 라고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="14299efb36d995924c964a8f3937d4d9dc1117d4" translate="yes" xml:space="preserve">
          <source>At least one of &lt;code&gt;context_features&lt;/code&gt; and &lt;code&gt;sequence_features&lt;/code&gt; must be provided and non-empty.</source>
          <target state="translated">&lt;code&gt;context_features&lt;/code&gt; 및 &lt;code&gt;sequence_features&lt;/code&gt; 중 하나 이상을 제공해야하며 비어 있지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="9c061c14d7e2104f77226ab2b0f73711746ef358" translate="yes" xml:space="preserve">
          <source>At most one of &lt;code&gt;saver&lt;/code&gt; or &lt;code&gt;scaffold&lt;/code&gt; should be set.</source>
          <target state="translated">&lt;code&gt;saver&lt;/code&gt; 또는 &lt;code&gt;scaffold&lt;/code&gt; 중 하나만 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="49b25968957aebee0aee561c82ed7d92dd1318ff" translate="yes" xml:space="preserve">
          <source>At most one of saver or scaffold should be set.</source>
          <target state="translated">세이버 또는 스캐 폴드 중 하나만 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="eca6dd7c148fb382d95170953b3a0751079ef3fd" translate="yes" xml:space="preserve">
          <source>At runtime, the barrier contains 'complete' and 'incomplete' elements. A complete element has defined tensors for all components of its value tuple, and may be accessed using BarrierTakeMany. An incomplete element has some undefined components in its value tuple, and may be updated using BarrierInsertMany.</source>
          <target state="translated">런타임시 장벽에는 '완전'및 '불완전'요소가 포함됩니다. 완전한 요소는 값 튜플의 모든 구성 요소에 대해 텐서를 정의했으며 BarrierTakeMany를 사용하여 액세스 할 수 있습니다. 불완전한 요소는 값 튜플에 정의되지 않은 일부 구성 요소가 있으며 BarrierInsertMany를 사용하여 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba42f173911840b373dc352dfed26ea9c9493518" translate="yes" xml:space="preserve">
          <source>At runtime, this operation may raise an error if the queue is &lt;code&gt;tf.QueueBase.close&lt;/code&gt; before or during its execution. If the queue is closed before this operation runs, &lt;a href=&quot;../errors/cancellederror&quot;&gt;&lt;code&gt;tf.errors.CancelledError&lt;/code&gt;&lt;/a&gt; will be raised. If this operation is blocked, and either (i) the queue is closed by a close operation with &lt;code&gt;cancel_pending_enqueues=True&lt;/code&gt;, or (ii) the session is &lt;code&gt;tf.Session.close&lt;/code&gt;, &lt;a href=&quot;../errors/cancellederror&quot;&gt;&lt;code&gt;tf.errors.CancelledError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">런타임시, 큐가 실행 전후 에 &lt;code&gt;tf.QueueBase.close&lt;/code&gt; 인 경우이 조작으로 오류가 발생할 수 있습니다 . 이 작업이 실행되기 전에 큐가 닫히면 &lt;a href=&quot;../errors/cancellederror&quot;&gt; &lt;code&gt;tf.errors.CancelledError&lt;/code&gt; &lt;/a&gt; 가 발생합니다. 이 작업이 차단되고 (i) &lt;code&gt;cancel_pending_enqueues=True&lt;/code&gt; 로 닫기 작업으로 큐가 닫히 거나 (ii) 세션이 &lt;code&gt;tf.Session.close&lt;/code&gt; 이면 &lt;a href=&quot;../errors/cancellederror&quot;&gt; &lt;code&gt;tf.errors.CancelledError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="36864f335118b67b813f060a89d4d032543b0391" translate="yes" xml:space="preserve">
          <source>At runtime, this operation may raise an error if the queue is &lt;code&gt;tf.QueueBase.close&lt;/code&gt; before or during its execution. If the queue is closed, the queue contains fewer than &lt;code&gt;n&lt;/code&gt; elements, and there are no pending enqueue operations that can fulfill this request, &lt;a href=&quot;../errors/outofrangeerror&quot;&gt;&lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt;&lt;/a&gt; will be raised. If the session is &lt;code&gt;tf.Session.close&lt;/code&gt;, &lt;a href=&quot;../errors/cancellederror&quot;&gt;&lt;code&gt;tf.errors.CancelledError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">런타임시, 큐가 실행 전후 에 &lt;code&gt;tf.QueueBase.close&lt;/code&gt; 인 경우이 조작으로 오류가 발생할 수 있습니다 . 큐가 닫히고 큐에 &lt;code&gt;n&lt;/code&gt; 개 미만의 요소 가 포함되어 &lt;a href=&quot;../errors/outofrangeerror&quot;&gt; &lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt; &lt;/a&gt; 요청을 수행 할 수있는 보류중인 큐 작업이 없으면 tf.errors.OutOfRangeError 가 발생합니다. 세션이 &lt;code&gt;tf.Session.close&lt;/code&gt; 인 경우 &lt;a href=&quot;../errors/cancellederror&quot;&gt; &lt;code&gt;tf.errors.CancelledError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="387be58bfc36101fa592ef12e56fa7f1d2c11e77" translate="yes" xml:space="preserve">
          <source>At runtime, this operation may raise an error if the queue is &lt;code&gt;tf.QueueBase.close&lt;/code&gt; before or during its execution. If the queue is closed, the queue is empty, and there are no pending enqueue operations that can fulfill this request, &lt;a href=&quot;../errors/outofrangeerror&quot;&gt;&lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt;&lt;/a&gt; will be raised. If the session is &lt;code&gt;tf.Session.close&lt;/code&gt;, &lt;a href=&quot;../errors/cancellederror&quot;&gt;&lt;code&gt;tf.errors.CancelledError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">런타임시, 큐가 실행 전후 에 &lt;code&gt;tf.QueueBase.close&lt;/code&gt; 인 경우이 조작으로 오류가 발생할 수 있습니다 . 큐가 닫히고 큐가 비어 &lt;a href=&quot;../errors/outofrangeerror&quot;&gt; &lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt; &lt;/a&gt; 요청을 수행 할 수있는 보류중인 큐 작업이 없으면 tf.errors.OutOfRangeError 가 발생합니다. 세션이 &lt;code&gt;tf.Session.close&lt;/code&gt; 인 경우 &lt;a href=&quot;../errors/cancellederror&quot;&gt; &lt;code&gt;tf.errors.CancelledError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d716f4b9974a590082a3aa110d6be70b51db4abc" translate="yes" xml:space="preserve">
          <source>At the beginning of every epoch, this callback gets the updated learning rate value from &lt;code&gt;schedule&lt;/code&gt; function provided at &lt;code&gt;__init__&lt;/code&gt;, with the current epoch and current learning rate, and applies the updated learning rate on the optimizer.</source>
          <target state="translated">모든 Epoch가 시작될 때이 콜백은 &lt;code&gt;__init__&lt;/code&gt; 에서 제공 되는 &lt;code&gt;schedule&lt;/code&gt; 함수에서 현재 Epoch 및 현재 학습률과 함께 업데이트 된 학습률 값을 가져와 최적화 프로그램에 업데이트 된 학습률을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="3ca13d7ae60fdd1864898227f95546637d64c6ea" translate="yes" xml:space="preserve">
          <source>At this point graph is finalized and you can not add ops.</source>
          <target state="translated">이 시점에서 그래프가 완성되고 op를 추가 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="629848d109abb16cacec52ea5ca0dc3eddfe0f61" translate="yes" xml:space="preserve">
          <source>Atan</source>
          <target state="translated">Atan</target>
        </trans-unit>
        <trans-unit id="90c852f25296e9373d22d6d648bd28708c31cbec" translate="yes" xml:space="preserve">
          <source>Atan2</source>
          <target state="translated">Atan2</target>
        </trans-unit>
        <trans-unit id="6ce5901b2d008f90c0bf7e89db8b95255eacee6a" translate="yes" xml:space="preserve">
          <source>Atanh</source>
          <target state="translated">Atanh</target>
        </trans-unit>
        <trans-unit id="7abed489983670c0ae56f77cd92b63574f5eedbb" translate="yes" xml:space="preserve">
          <source>Atrous convolution (a.k.a. convolution with holes or dilated convolution).</source>
          <target state="translated">격렬한 컨볼 루션 (일명 홀 또는 확장 컨볼 루션이있는 컨볼 루션).</target>
        </trans-unit>
        <trans-unit id="bdb5968326d5c0301c96a47d471711fa3a10c0d0" translate="yes" xml:space="preserve">
          <source>Atrous convolution allows us to explicitly control how densely to compute feature responses in fully convolutional networks. Used in conjunction with bilinear interpolation, it offers an alternative to &lt;code&gt;conv2d_transpose&lt;/code&gt; in dense prediction tasks such as semantic image segmentation, optical flow computation, or depth estimation. It also allows us to effectively enlarge the field of view of filters without increasing the number of parameters or the amount of computation.</source>
          <target state="translated">강력한 컨볼 루션을 통해 완전한 컨볼 루션 네트워크에서 기능 응답을 얼마나 조밀하게 계산할 수 있는지 명시 적으로 제어 할 수 있습니다. 이중 선형 보간과 함께 사용되어 시맨틱 이미지 세그먼테이션, 광학 흐름 계산 또는 깊이 추정과 같은 조밀 한 예측 작업에서 &lt;code&gt;conv2d_transpose&lt;/code&gt; 에 대한 대안을 제공합니다 . 또한 매개 변수 수나 계산량을 늘리지 않고도 필터 시야를 효과적으로 확대 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4adb29275d47f57d08f206d05943dc5a5e26e87d" translate="yes" xml:space="preserve">
          <source>Attempts to apply a gradient to the accumulator.</source>
          <target state="translated">누산기에 그라디언트를 적용하려고합니다.</target>
        </trans-unit>
        <trans-unit id="b95fa50ffd64d59ed1d0141a776f568b828312a5" translate="yes" xml:space="preserve">
          <source>Attempts to apply a sparse gradient to the accumulator.</source>
          <target state="translated">누적기에 희소 그라디언트를 적용하려고합니다.</target>
        </trans-unit>
        <trans-unit id="5b79e5f9cf1c14514a9ad635ead08258b3e44d48" translate="yes" xml:space="preserve">
          <source>Attempts to extract the average gradient from the accumulator.</source>
          <target state="translated">누산기에서 평균 기울기를 추출하려고합니다.</target>
        </trans-unit>
        <trans-unit id="ebaf9ab6314004c5227148dc3e16b87bef99b8f2" translate="yes" xml:space="preserve">
          <source>Attention outputs of shape &lt;code&gt;[batch_size, Tq, dim]&lt;/code&gt;.</source>
          <target state="translated">모양 &lt;code&gt;[batch_size, Tq, dim]&lt;/code&gt; 출력 .</target>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="1af1e2a4fb6a55abbb3d1a896aa3da78a432dec0" translate="yes" xml:space="preserve">
          <source>Attributes &lt;code&gt;[min; max]&lt;/code&gt; define the clamping range for the &lt;code&gt;inputs&lt;/code&gt; data. &lt;code&gt;inputs&lt;/code&gt; values are quantized into the quantization range (&lt;code&gt;[0; 2^num_bits - 1]&lt;/code&gt; when &lt;code&gt;narrow_range&lt;/code&gt; is false and &lt;code&gt;[1; 2^num_bits - 1]&lt;/code&gt; when it is true) and then de-quantized and output as floats in &lt;code&gt;[min; max]&lt;/code&gt; interval. &lt;code&gt;num_bits&lt;/code&gt; is the bitwidth of the quantization; between 2 and 16, inclusive.</source>
          <target state="translated">속성 &lt;code&gt;[min; max]&lt;/code&gt; 는 &lt;code&gt;inputs&lt;/code&gt; 데이터 의 클램핑 범위를 정의합니다 . &lt;code&gt;inputs&lt;/code&gt; 값은 양자화 범위 ( &lt;code&gt;[0; 2^num_bits - 1]&lt;/code&gt; 범위 가 거짓 이면 [0; 2 ^ num_bits-1]로 , &lt;code&gt;narrow_range&lt;/code&gt; 이면 &lt;code&gt;[1; 2^num_bits - 1]&lt;/code&gt; )로 양자화 된 후 역 양자화되고 &lt;code&gt;[min; max]&lt;/code&gt; 간격. &lt;code&gt;num_bits&lt;/code&gt; 는 양자화의 비트 폭 입니다. 2에서 16 사이.</target>
        </trans-unit>
        <trans-unit id="b8087185e5ee37cef4c337de5697d35d75d909fd" translate="yes" xml:space="preserve">
          <source>Attributes:</source>
          <target state="translated">Attributes:</target>
        </trans-unit>
        <trans-unit id="ae58c7da50ae9941970802a3aded88b9682195f4" translate="yes" xml:space="preserve">
          <source>AudioSpectrogram</source>
          <target state="translated">AudioSpectrogram</target>
        </trans-unit>
        <trans-unit id="3d967d24fa87ffce3d2b82eb054fba03ba854134" translate="yes" xml:space="preserve">
          <source>AudioSummary</source>
          <target state="translated">AudioSummary</target>
        </trans-unit>
        <trans-unit id="c4b688e7e0b06116e02211d0f23996a9c4e2f668" translate="yes" xml:space="preserve">
          <source>AudioSummaryV2</source>
          <target state="translated">AudioSummaryV2</target>
        </trans-unit>
        <trans-unit id="b5a16386e13db65b47f8784b34e000a063f98641" translate="yes" xml:space="preserve">
          <source>Auto profile and advise.</source>
          <target state="translated">자동 프로파일 및 조언.</target>
        </trans-unit>
        <trans-unit id="20f4cfe0b4674ad6a16fb10cdc0a36234cc432ad" translate="yes" xml:space="preserve">
          <source>AutoShardDataset</source>
          <target state="translated">AutoShardDataset</target>
        </trans-unit>
        <trans-unit id="992cdcf5674bef1a4042c7f10b1a5855b0803528" translate="yes" xml:space="preserve">
          <source>Automatic differentiation and gradient tape</source>
          <target state="translated">자동 차별화 및 그라디언트 테이프</target>
        </trans-unit>
        <trans-unit id="4498b4fc7edf7ae1f2828f7a292f614119808247" translate="yes" xml:space="preserve">
          <source>Automatically detect problems and generate reports.</source>
          <target state="translated">문제를 자동으로 감지하고 보고서를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="948c59e8ec0608333237892aa15f0ee562ca1779" translate="yes" xml:space="preserve">
          <source>Auxiliary function. Normal users should NOT use it directly.</source>
          <target state="translated">보조 기능. 일반 사용자는 직접 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="d323ce62ebf929f809bb1ffb3aa575874e9f10f1" translate="yes" xml:space="preserve">
          <source>Auxiliary function: clients should use the specialized DEFINE_</source>
          <target state="translated">보조 기능 : 클라이언트는 특수한 DEFINE_을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="fae75a7c40327ac910df198eff7674249ba6379f" translate="yes" xml:space="preserve">
          <source>Available penalties</source>
          <target state="translated">가능한 벌칙</target>
        </trans-unit>
        <trans-unit id="f492455c1faf531411d34599ac5ee635eb1828d9" translate="yes" xml:space="preserve">
          <source>Available properties:</source>
          <target state="translated">사용 가능한 속성 :</target>
        </trans-unit>
        <trans-unit id="4b7430e84ba2c09911562197af3421f8220100c1" translate="yes" xml:space="preserve">
          <source>Average Pooling layer for 1D inputs.</source>
          <target state="translated">1D 입력의 평균 풀링 레이어.</target>
        </trans-unit>
        <trans-unit id="31d58b4f975c33a092b235af97514c06440a3225" translate="yes" xml:space="preserve">
          <source>Average Pooling layer for 1D inputs. (deprecated)</source>
          <target state="translated">1D 입력의 평균 풀링 레이어. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="9027fb82b44f7b9a50a6b6567f51aef5714402d5" translate="yes" xml:space="preserve">
          <source>Average pooling for temporal data.</source>
          <target state="translated">임시 데이터에 대한 평균 풀링.</target>
        </trans-unit>
        <trans-unit id="31a7f0022b7553f219fb123d1288878d08e7e6ec" translate="yes" xml:space="preserve">
          <source>Average pooling layer for 2D inputs (e.g. images).</source>
          <target state="translated">2D 입력 (예 : 이미지)에 대한 평균 풀링 레이어.</target>
        </trans-unit>
        <trans-unit id="228467c36d802020e6a50ef423c1d7bee18a3560" translate="yes" xml:space="preserve">
          <source>Average pooling layer for 2D inputs (e.g. images). (deprecated)</source>
          <target state="translated">2D 입력 (예 : 이미지)에 대한 평균 풀링 레이어. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="5b8f6f49c6edf4fc30624814db77d7aee5858b45" translate="yes" xml:space="preserve">
          <source>Average pooling layer for 3D inputs (e.g. volumes).</source>
          <target state="translated">3D 입력의 평균 풀링 계층 (예 : 볼륨).</target>
        </trans-unit>
        <trans-unit id="c9045abb993f9544d925b0ce29daa518f77a198a" translate="yes" xml:space="preserve">
          <source>Average pooling layer for 3D inputs (e.g. volumes). (deprecated)</source>
          <target state="translated">3D 입력의 평균 풀링 계층 (예 : 볼륨). (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="0d20f4a5b17e69d912c56ea8e6e67f1b868eb143" translate="yes" xml:space="preserve">
          <source>Average pooling operation for 3D data (spatial or spatio-temporal).</source>
          <target state="translated">3D 데이터의 평균 풀링 작업 (공간 또는 시공간).</target>
        </trans-unit>
        <trans-unit id="cde300f76cb7056d67862c163371ddd3e355beed" translate="yes" xml:space="preserve">
          <source>Average pooling operation for spatial data.</source>
          <target state="translated">공간 데이터에 대한 평균 풀링 작업.</target>
        </trans-unit>
        <trans-unit id="445fdf73aa941a2aa7db007c084f649a386f33c0" translate="yes" xml:space="preserve">
          <source>AvgPool</source>
          <target state="translated">AvgPool</target>
        </trans-unit>
        <trans-unit id="327277ca556def76e14c06b00d2d36004551b1bf" translate="yes" xml:space="preserve">
          <source>AvgPool3D</source>
          <target state="translated">AvgPool3D</target>
        </trans-unit>
        <trans-unit id="237db4a3386c1700366644f9b34c774368b811db" translate="yes" xml:space="preserve">
          <source>AvgPool3DGrad</source>
          <target state="translated">AvgPool3DGrad</target>
        </trans-unit>
        <trans-unit id="2818acbf8abd26bc0b390d5f4df02ac5c9e8487a" translate="yes" xml:space="preserve">
          <source>AvgPoolGrad</source>
          <target state="translated">AvgPoolGrad</target>
        </trans-unit>
        <trans-unit id="99cf8b0ad4ffa9e4f86494614d715ffa838a79cb" translate="yes" xml:space="preserve">
          <source>Axis along which the operation is performed (used only when N-D tensors are provided).</source>
          <target state="translated">작업이 수행되는 축 (ND 텐서가 제공되는 경우에만 사용됨).</target>
        </trans-unit>
        <trans-unit id="ffcf2dae6d88b97dee02aac97b8c1b7839153996" translate="yes" xml:space="preserve">
          <source>Axis along which to concatenate.</source>
          <target state="translated">연결할 축입니다.</target>
        </trans-unit>
        <trans-unit id="dcb2b8969578bca64d5ff16f75a65d73acff1427" translate="yes" xml:space="preserve">
          <source>Axis along which to determine similarity.</source>
          <target state="translated">유사성을 결정할 축입니다.</target>
        </trans-unit>
        <trans-unit id="64e056ede30eb4a33c4e9b98a44d16be1c01caf3" translate="yes" xml:space="preserve">
          <source>Axis along which to partition the variable. Defaults to 0.</source>
          <target state="translated">변수를 분할 할 축입니다. 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="07a1266a6fdd188e1ec1ce588c625ef18a015bb5" translate="yes" xml:space="preserve">
          <source>Axis along which to perform stacking.</source>
          <target state="translated">스태킹을 수행 할 축입니다.</target>
        </trans-unit>
        <trans-unit id="4e50a56d3e7f73549d77ba4f6e2084216cb9bb68" translate="yes" xml:space="preserve">
          <source>Axis along which to repeat.</source>
          <target state="translated">반복 할 축.</target>
        </trans-unit>
        <trans-unit id="728311e32c8d714f08c5289427fbd17dd94a3643" translate="yes" xml:space="preserve">
          <source>Axis to drop.</source>
          <target state="translated">드롭 할 축.</target>
        </trans-unit>
        <trans-unit id="ee5bba0ae034372ad9e7f17d27794b9fbee66a96" translate="yes" xml:space="preserve">
          <source>Backprop step of CudnnRNN.</source>
          <target state="translated">CudnnRNN의 Backprop 단계.</target>
        </trans-unit>
        <trans-unit id="63c5cfdc220006cde04ca170048252b4494a4a81" translate="yes" xml:space="preserve">
          <source>Backprop step of CudnnRNNV3.</source>
          <target state="translated">CudnnRNNV3의 역 전파 단계.</target>
        </trans-unit>
        <trans-unit id="d6489a3ab471682f593ff67d3e0ed2f8944824d0" translate="yes" xml:space="preserve">
          <source>Backpropagation will happen into both &lt;code&gt;logits&lt;/code&gt; and &lt;code&gt;labels&lt;/code&gt;. To disallow backpropagation into &lt;code&gt;labels&lt;/code&gt;, pass label tensors through &lt;a href=&quot;../../../stop_gradient&quot;&gt;&lt;code&gt;tf.stop_gradient&lt;/code&gt;&lt;/a&gt; before feeding it to this function.</source>
          <target state="translated">역전 파는 &lt;code&gt;logits&lt;/code&gt; 과 &lt;code&gt;labels&lt;/code&gt; 모두에서 발생 합니다. &lt;code&gt;labels&lt;/code&gt; 역 전파를 허용하지 않으려면 이 함수에 레이블 텐서를 &lt;a href=&quot;../../../stop_gradient&quot;&gt; &lt;code&gt;tf.stop_gradient&lt;/code&gt; &lt;/a&gt; 하기 전에 tf.stop_gradient 를 통해 레이블 텐서를 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="bfbe94bf3cd74c9e82c8634545237d1925719616" translate="yes" xml:space="preserve">
          <source>Backpropagation will happen into both &lt;code&gt;logits&lt;/code&gt; and &lt;code&gt;labels&lt;/code&gt;. To disallow backpropagation into &lt;code&gt;labels&lt;/code&gt;, pass label tensors through &lt;a href=&quot;../stop_gradient&quot;&gt;&lt;code&gt;tf.stop_gradient&lt;/code&gt;&lt;/a&gt; before feeding it to this function.</source>
          <target state="translated">역전 파는 &lt;code&gt;logits&lt;/code&gt; 과 &lt;code&gt;labels&lt;/code&gt; 모두에서 발생 합니다. &lt;code&gt;labels&lt;/code&gt; 역 전파를 허용하지 않으려면 이 함수에 레이블 텐서를 &lt;a href=&quot;../stop_gradient&quot;&gt; &lt;code&gt;tf.stop_gradient&lt;/code&gt; &lt;/a&gt; 하기 전에 tf.stop_gradient 를 통해 레이블 텐서를 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="384bd9f444979908d512542977683954f1e80431" translate="yes" xml:space="preserve">
          <source>Backpropagation will happen only into &lt;code&gt;logits&lt;/code&gt;. To calculate a cross entropy loss that allows backpropagation into both &lt;code&gt;logits&lt;/code&gt; and &lt;code&gt;labels&lt;/code&gt;, see &lt;code&gt;tf.nn.softmax_cross_entropy_with_logits_v2&lt;/code&gt;.</source>
          <target state="translated">역 전파 만에 일어날 것입니다 &lt;code&gt;logits&lt;/code&gt; . 두에 역 전파를 허용하는 크로스 엔트로피 손실을 계산하기 위해 &lt;code&gt;logits&lt;/code&gt; 및 &lt;code&gt;labels&lt;/code&gt; 참조 &lt;code&gt;tf.nn.softmax_cross_entropy_with_logits_v2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef6155a5eccf4717deb734d482cb9f59d873fb8a" translate="yes" xml:space="preserve">
          <source>Bag</source>
          <target state="translated">Bag</target>
        </trans-unit>
        <trans-unit id="08922d7fefd6813544b8a5bf38a2c1a2a59343b8" translate="yes" xml:space="preserve">
          <source>BandedTriangularSolve</source>
          <target state="translated">BandedTriangularSolve</target>
        </trans-unit>
        <trans-unit id="10c02649e226d430bd75a5b6315a41c0db9992a2" translate="yes" xml:space="preserve">
          <source>Barrier</source>
          <target state="translated">Barrier</target>
        </trans-unit>
        <trans-unit id="f6e11de0ba28d6d96ce0677674996acd602b362e" translate="yes" xml:space="preserve">
          <source>BarrierClose</source>
          <target state="translated">BarrierClose</target>
        </trans-unit>
        <trans-unit id="6b2688b5c8b07103ad2fa5898a2962fd44bff635" translate="yes" xml:space="preserve">
          <source>BarrierIncompleteSize</source>
          <target state="translated">BarrierIncompleteSize</target>
        </trans-unit>
        <trans-unit id="df0165b124bd11d1b7ec2425d9a927299864225f" translate="yes" xml:space="preserve">
          <source>BarrierInsertMany</source>
          <target state="translated">BarrierInsertMany</target>
        </trans-unit>
        <trans-unit id="bcdc3f959201d604174f502ce1924720fb0f65cc" translate="yes" xml:space="preserve">
          <source>BarrierReadySize</source>
          <target state="translated">BarrierReadySize</target>
        </trans-unit>
        <trans-unit id="f15eeee90b985dbf02adc5c70b3d14b4b9876bd7" translate="yes" xml:space="preserve">
          <source>BarrierTakeMany</source>
          <target state="translated">BarrierTakeMany</target>
        </trans-unit>
        <trans-unit id="f411e0d841c5ca3a5c88ff91e6437ff9c34bb547" translate="yes" xml:space="preserve">
          <source>Base TFDecorator class and utility functions for working with decorators.</source>
          <target state="translated">데코레이터 작업을위한 기본 TFDecorator 클래스 및 유틸리티 함수.</target>
        </trans-unit>
        <trans-unit id="08d7d3e364fabef4a88d9d7d8c44d0d4ee9f639b" translate="yes" xml:space="preserve">
          <source>Base class defining a [batch of] linear operator[s].</source>
          <target state="translated">[일괄 처리] 선형 연산자를 정의하는 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="1243ba8a399d6681c34f47673e4acf27f668d03c" translate="yes" xml:space="preserve">
          <source>Base class for Keras optimizers.</source>
          <target state="translated">Keras 최적화 프로그램의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="2c973fbfcf6f1fbe20eefa93bc901103b67dc423" translate="yes" xml:space="preserve">
          <source>Base class for PreprocessingLayers.</source>
          <target state="translated">PreprocessingLayers의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="a379239342de7ee8a8ba5ecd3417480c9b88542a" translate="yes" xml:space="preserve">
          <source>Base class for a parser of lists of strings.</source>
          <target state="translated">문자열 목록 파서의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="fcff466bdb76d5cd56301373a6fd447a7707bd69" translate="yes" xml:space="preserve">
          <source>Base class for all TensorFlow decorators.</source>
          <target state="translated">모든 TensorFlow 데코레이터의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="c6b3be4d476576c46f5159f5b5f25a6b651ad817" translate="yes" xml:space="preserve">
          <source>Base class for all loss scales.</source>
          <target state="translated">모든 손실 척도에 대한 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="41c0157be9be0927c826272dcb69693b6a8f2f47" translate="yes" xml:space="preserve">
          <source>Base class for cross-device reduction and broadcasting algorithms.</source>
          <target state="translated">교차 장치 축소 및 브로드 캐스트 알고리즘의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="0c0969d31a64efd335c23c281572c31f4ebe0dce" translate="yes" xml:space="preserve">
          <source>Base class for different Reader types, that produce a record every step.</source>
          <target state="translated">각 단계마다 레코드를 생성하는 다양한 리더 유형의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="7209bc777071c54896c4c7d3dbecaf443c76968f" translate="yes" xml:space="preserve">
          <source>Base class for generating string representations of a flag value.</source>
          <target state="translated">플래그 값의 문자열 표현을 생성하기위한 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="442a74d7ee316026f06f08bb198421bd45cbd736" translate="yes" xml:space="preserve">
          <source>Base class for image data iterators.</source>
          <target state="translated">이미지 데이터 반복기의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="cbbd31461d2a1dc034f299db7aecef80a1718d78" translate="yes" xml:space="preserve">
          <source>Base class for optimizers.</source>
          <target state="translated">옵티마이 저의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="690066cc91d51598a899ae4209affb789c9cb523" translate="yes" xml:space="preserve">
          <source>Base class for queue implementations.</source>
          <target state="translated">큐 구현을위한 기본 클래스.</target>
        </trans-unit>
        <trans-unit id="a141f5fe908e5a2754efba45b8e6ea7dbe0c1c48" translate="yes" xml:space="preserve">
          <source>Base class for recurrent layers.</source>
          <target state="translated">반복 레이어의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="4d52055fd8b7650d81d708e7051fc509d3de26bb" translate="yes" xml:space="preserve">
          <source>Base class for representing distributed values.</source>
          <target state="translated">분산 값을 나타내는 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="accfd08b9028b06ae9f9025deb6755d1c4348fc2" translate="yes" xml:space="preserve">
          <source>Base class for stack trace transformation functions.</source>
          <target state="translated">스택 추적 변환 함수의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="3cade7141245bc019f7556b700c800818c890e1a" translate="yes" xml:space="preserve">
          <source>Base class for tests that need to test TensorFlow.</source>
          <target state="translated">TensorFlow를 테스트해야하는 테스트의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="59b263f6c35738c18a2cd12a1d2d972d4531d12e" translate="yes" xml:space="preserve">
          <source>Base class to enqueue inputs.</source>
          <target state="translated">입력을 큐에 넣는 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="2a173e1a40aeb69111140ddfe7f83615ef9d9082" translate="yes" xml:space="preserve">
          <source>Base class used to parse and convert arguments.</source>
          <target state="translated">인수를 구문 분석하고 변환하는 데 사용되는 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="e5477b66c0624b86adac8ef6bc5a494c2e99c638" translate="yes" xml:space="preserve">
          <source>Base layer class.</source>
          <target state="translated">기본 계층 클래스.</target>
        </trans-unit>
        <trans-unit id="d7eed87c6d5c15c15ca5453ef20462da4e2cc9ea" translate="yes" xml:space="preserve">
          <source>Base neural network module class.</source>
          <target state="translated">기본 신경망 모듈 클래스.</target>
        </trans-unit>
        <trans-unit id="76abebe07ffc1c33faf38ae547a2788581a0ab3c" translate="yes" xml:space="preserve">
          <source>Base object for fitting to a sequence of data, such as a dataset.</source>
          <target state="translated">데이터 세트와 같은 일련의 데이터에 맞추기위한 기본 개체입니다.</target>
        </trans-unit>
        <trans-unit id="f71c6d2b99647a5453df997e48fcc1fcbbd4f5c4" translate="yes" xml:space="preserve">
          <source>Based on available runtime hardware and constraints, this layer will choose different implementations (cuDNN-based or pure-TensorFlow) to maximize the performance. If a GPU is available and all the arguments to the layer meet the requirement of the CuDNN kernel (see below for details), the layer will use a fast cuDNN implementation.</source>
          <target state="translated">사용 가능한 런타임 하드웨어 및 제약 조건에 따라이 계층은 서로 다른 구현 (cuDNN 기반 또는 순수 TensorFlow)을 선택하여 성능을 최대화합니다. GPU를 사용할 수 있고 계층에 대한 모든 인수가 CuDNN 커널의 요구 사항을 충족하는 경우 (자세한 내용은 아래 참조) 계층은 빠른 cuDNN 구현을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="1dbb0c417471b61d3691dc2f85e4c06d2fbd5872" translate="yes" xml:space="preserve">
          <source>Baseline value for the monitored quantity. Training will stop if the model doesn't show improvement over the baseline.</source>
          <target state="translated">모니터링 된 수량에 대한 기준 값입니다. 모델이 기준선 이상으로 개선되지 않으면 훈련이 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="965255859567ff020b4b4b04f69fbcf4e5fbd545" translate="yes" xml:space="preserve">
          <source>Basic LSTM recurrent network cell.</source>
          <target state="translated">기본 LSTM 반복 네트워크 셀.</target>
        </trans-unit>
        <trans-unit id="11aeba230e12e10feea755efa31528967c88652b" translate="yes" xml:space="preserve">
          <source>Basic arithmetic operators and trigonometric functions.</source>
          <target state="translated">기본 산술 연산자 및 삼각 함수</target>
        </trans-unit>
        <trans-unit id="169b02041823a1a41517ab92b5b604fa3bcceb49" translate="yes" xml:space="preserve">
          <source>Basic boolean flag.</source>
          <target state="translated">기본 부울 플래그.</target>
        </trans-unit>
        <trans-unit id="7e5fe395595ce6ea87fa20a363006e4efdc056a3" translate="yes" xml:space="preserve">
          <source>Basic enum flag; its value can be any string from list of enum_values.</source>
          <target state="translated">기본 열거 형 플래그; 해당 값은 enum_value 목록의 문자열 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4900e53840866a1677080e960e64754a54c4358" translate="yes" xml:space="preserve">
          <source>Basic enum flag; its value is an enum class's member.</source>
          <target state="translated">기본 열거 형 플래그; 그 값은 열거 형 클래스의 멤버입니다.</target>
        </trans-unit>
        <trans-unit id="18a6ba09f74578bf0981118bd1ccac104e93a645" translate="yes" xml:space="preserve">
          <source>Basic example of sharing a variable AUTO_REUSE:</source>
          <target state="translated">변수 AUTO_REUSE를 공유하는 기본 예 :</target>
        </trans-unit>
        <trans-unit id="fc711b10f8f37fc7ebbaf588027590a21b7c1aef" translate="yes" xml:space="preserve">
          <source>Basic example of sharing a variable with reuse=True:</source>
          <target state="translated">reuse = True로 변수를 공유하는 기본 예 :</target>
        </trans-unit>
        <trans-unit id="d2d358bd92c715a1c6d50e28e13bf3dac4175837" translate="yes" xml:space="preserve">
          <source>Basic loop to train a model.</source>
          <target state="translated">모델을 훈련시키는 기본 루프.</target>
        </trans-unit>
        <trans-unit id="2a50707dcb44e3cc6a0f0a34b284724230364173" translate="yes" xml:space="preserve">
          <source>Basic regression: Predict fuel efficiency</source>
          <target state="translated">기본 회귀 : 연료 효율 예측</target>
        </trans-unit>
        <trans-unit id="4ca074d5decab424d8146a5a44f2713e8d75a4ad" translate="yes" xml:space="preserve">
          <source>Basic usage passes a scalar as the min and max value.</source>
          <target state="translated">기본 사용법은 최소 및 최대 값으로 스칼라를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="fc2e29f207911a6e54aedae1d8fbb6c21a029ee6" translate="yes" xml:space="preserve">
          <source>Basically, the SELU activation function multiplies &lt;code&gt;scale&lt;/code&gt; (&amp;gt; 1) with the output of the &lt;a href=&quot;elu&quot;&gt;&lt;code&gt;tf.keras.activations.elu&lt;/code&gt;&lt;/a&gt; function to ensure a slope larger than one for positive inputs.</source>
          <target state="translated">기본적으로 SELU 활성화 함수는 &lt;code&gt;scale&lt;/code&gt; (&amp;gt; 1)을 &lt;a href=&quot;elu&quot;&gt; &lt;code&gt;tf.keras.activations.elu&lt;/code&gt; &lt;/a&gt; 함수 의 출력과 곱하여 양의 입력에 대해 1보다 큰 기울기를 보장합니다.</target>
        </trans-unit>
        <trans-unit id="8bf1ef5668b1aa8218115f5e8e419a984186f72c" translate="yes" xml:space="preserve">
          <source>Batch</source>
          <target state="translated">Batch</target>
        </trans-unit>
        <trans-unit id="c0c7fc9ef4ad317998b7f40d812f4b3a1928ad46" translate="yes" xml:space="preserve">
          <source>Batch Normalization - Accelerating Deep Network Training by Reducing Internal Covariate Shift: &lt;a href=&quot;http://arxiv.org/abs/1502.03167&quot;&gt;Ioffe et al., 2015&lt;/a&gt; (&lt;a href=&quot;http://proceedings.mlr.press/v37/ioffe15.pdf&quot;&gt;pdf&lt;/a&gt;)</source>
          <target state="translated">배치 정규화-내부 공변량 이동을 줄여 심층 네트워크 훈련 가속화 : &lt;a href=&quot;http://arxiv.org/abs/1502.03167&quot;&gt;Ioffe et al., 2015&lt;/a&gt; ( &lt;a href=&quot;http://proceedings.mlr.press/v37/ioffe15.pdf&quot;&gt;pdf&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="01fb6d43e9e0839ec89ccc31eb542a509cfe2c0e" translate="yes" xml:space="preserve">
          <source>Batch Normalization - Accelerating Deep Network Training by Reducing Internal Covariate Shift: &lt;a href=&quot;http://proceedings.mlr.press/v37/ioffe15.html&quot;&gt;Ioffe et al., 2015&lt;/a&gt; (&lt;a href=&quot;http://proceedings.mlr.press/v37/ioffe15.pdf&quot;&gt;pdf&lt;/a&gt;)</source>
          <target state="translated">배치 정규화-내부 공변량 이동을 줄여 심층 네트워크 훈련 가속화 : &lt;a href=&quot;http://proceedings.mlr.press/v37/ioffe15.html&quot;&gt;Ioffe et al., 2015&lt;/a&gt; ( &lt;a href=&quot;http://proceedings.mlr.press/v37/ioffe15.pdf&quot;&gt;pdf&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="163a7af6d86607da0e25803b6badc095c2fbd2a9" translate="yes" xml:space="preserve">
          <source>Batch Normalization - Accelerating Deep Network Training by Reducing Internal Covariate Shift: &lt;a href=&quot;http://proceedings.mlr.press/v37/ioffe15.html&quot;&gt;Ioffe et al., 2015&lt;/a&gt; (&lt;a href=&quot;http://proceedings.mlr.press/v37/ioffe15.pdf&quot;&gt;pdf&lt;/a&gt;) Batch Renormalization - Towards Reducing Minibatch Dependence in Batch-Normalized Models: &lt;a href=&quot;http://papers.nips.cc/paper/6790-batch-renormalization-towards-reducing-minibatch-dependence-in-batch-normalized-models&quot;&gt;Ioffe, 2017&lt;/a&gt; (&lt;a href=&quot;http://papers.nips.cc/paper/6790-batch-renormalization-towards-reducing-minibatch-dependence-in-batch-normalized-models.pdf&quot;&gt;pdf&lt;/a&gt;)</source>
          <target state="translated">배치 정규화-내부 공변량 이동을 줄여 심층 네트워크 훈련 가속화 : &lt;a href=&quot;http://proceedings.mlr.press/v37/ioffe15.html&quot;&gt;Ioffe et al., 2015&lt;/a&gt; ( &lt;a href=&quot;http://proceedings.mlr.press/v37/ioffe15.pdf&quot;&gt;pdf&lt;/a&gt; ) 배치 재 정규화-배치 정규화 모델에서 미니 배치 종속성 감소를 향하여 : &lt;a href=&quot;http://papers.nips.cc/paper/6790-batch-renormalization-towards-reducing-minibatch-dependence-in-batch-normalized-models&quot;&gt;Ioffe, 2017&lt;/a&gt; ( &lt;a href=&quot;http://papers.nips.cc/paper/6790-batch-renormalization-towards-reducing-minibatch-dependence-in-batch-normalized-models.pdf&quot;&gt;pdf&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="19033afb9e85376a5bacef4d0876a90eaadc78fe" translate="yes" xml:space="preserve">
          <source>Batch Normalization layer from (Ioffe et al., 2015).</source>
          <target state="translated">(Ioffe et al., 2015)의 배치 정규화 계층.</target>
        </trans-unit>
        <trans-unit id="72fb61266edb5b0b569c8cbc7f9cdf38679604c8" translate="yes" xml:space="preserve">
          <source>Batch Normalization layer from http://arxiv.org/abs/1502.03167.</source>
          <target state="translated">http://arxiv.org/abs/1502.03167의 배치 정규화 계층</target>
        </trans-unit>
        <trans-unit id="58141cf3441de640d9f9874b9119228df26b6c58" translate="yes" xml:space="preserve">
          <source>Batch Normalization: Accelerating Deep Network Training by Reducing Internal Covariate Shift</source>
          <target state="translated">배치 정규화 : 내부 공변량 변화를 줄임으로써 딥 네트워크 교육 가속화</target>
        </trans-unit>
        <trans-unit id="9a20c9929b1054521c7fd69bb31f38604e8cd28a" translate="yes" xml:space="preserve">
          <source>Batch normalization differs from other layers in several key aspects:</source>
          <target state="translated">배치 정규화는 몇 가지 주요 측면에서 다른 계층과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="8c4d2c2631af3b346e1d1f53c80e33fb55bc9d30" translate="yes" xml:space="preserve">
          <source>Batch normalization.</source>
          <target state="translated">배치 정규화.</target>
        </trans-unit>
        <trans-unit id="b2a8d885a08f8a435ed1af319b8041cd0665c222" translate="yes" xml:space="preserve">
          <source>Batch reduction is done by reduction on each element one by one.</source>
          <target state="translated">배치 축소는 각 요소를 하나씩 줄여서 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="1eb845becc3466807fcb11bf0de305e06e2f51c7" translate="yes" xml:space="preserve">
          <source>Batch shape describes independent, not identically distributed draws, aka a &quot;collection&quot; or &quot;bunch&quot; of distributions.</source>
          <target state="translated">배치 모양은 분포의 &quot;집합&quot;또는 &quot;다발&quot;이라고하는 동일하게 분포되지 않은 독립 추첨을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9fc3bf1e39190adbbc251c636a2c78a06e0a57d4" translate="yes" xml:space="preserve">
          <source>Batch sizes will never be bigger than this.</source>
          <target state="translated">배치 크기는 이보다 크지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1ba95ba458132222b14eb7a052aff6c72135b26b" translate="yes" xml:space="preserve">
          <source>BatchCholesky</source>
          <target state="translated">BatchCholesky</target>
        </trans-unit>
        <trans-unit id="9ddbfc4aa2fcfb83d020e76e64c415db11e281ef" translate="yes" xml:space="preserve">
          <source>BatchCholeskyGrad</source>
          <target state="translated">BatchCholeskyGrad</target>
        </trans-unit>
        <trans-unit id="fccb75d7d00aa6d29642ced5f29b6e13bcd94f81" translate="yes" xml:space="preserve">
          <source>BatchDataset</source>
          <target state="translated">BatchDataset</target>
        </trans-unit>
        <trans-unit id="41293a75d716ccf78baa3f42dd49ffff3150bd70" translate="yes" xml:space="preserve">
          <source>BatchDatasetV2</source>
          <target state="translated">BatchDatasetV2</target>
        </trans-unit>
        <trans-unit id="dbbdc8f71ea8d734a227304b26e66d68f58f0d8c" translate="yes" xml:space="preserve">
          <source>BatchFFT</source>
          <target state="translated">BatchFFT</target>
        </trans-unit>
        <trans-unit id="f8cb8d4dcf46be6fd5cb577a6980d544873b3e5b" translate="yes" xml:space="preserve">
          <source>BatchFFT2D</source>
          <target state="translated">BatchFFT2D</target>
        </trans-unit>
        <trans-unit id="90346380ef59064c2dcb1f0c4ea724d3167fb88b" translate="yes" xml:space="preserve">
          <source>BatchFFT3D</source>
          <target state="translated">BatchFFT3D</target>
        </trans-unit>
        <trans-unit id="f010fb592423d138f22b4d5dd173ffd4fbc7de63" translate="yes" xml:space="preserve">
          <source>BatchFunction</source>
          <target state="translated">BatchFunction</target>
        </trans-unit>
        <trans-unit id="1c17b4779e1f2da2abffbb2a1cdfce0e750f9ba9" translate="yes" xml:space="preserve">
          <source>BatchIFFT</source>
          <target state="translated">BatchIFFT</target>
        </trans-unit>
        <trans-unit id="8a9f35d753ea1566a06f69ccdcd1fdae73c8a9f8" translate="yes" xml:space="preserve">
          <source>BatchIFFT2D</source>
          <target state="translated">BatchIFFT2D</target>
        </trans-unit>
        <trans-unit id="696f067c0de1eb38a455b0a8d7c5f9a8fbf13a59" translate="yes" xml:space="preserve">
          <source>BatchIFFT3D</source>
          <target state="translated">BatchIFFT3D</target>
        </trans-unit>
        <trans-unit id="047c1d7f9aca1e88d8fee1d8328a31135b49b62b" translate="yes" xml:space="preserve">
          <source>BatchMatMul</source>
          <target state="translated">BatchMatMul</target>
        </trans-unit>
        <trans-unit id="14ddbb1b3df0b9082745e53f14811d9cd654edeb" translate="yes" xml:space="preserve">
          <source>BatchMatMulV2</source>
          <target state="translated">BatchMatMulV2</target>
        </trans-unit>
        <trans-unit id="074d0db81983a83b83c6b84339b2ae52149723c4" translate="yes" xml:space="preserve">
          <source>BatchMatrixBandPart</source>
          <target state="translated">BatchMatrixBandPart</target>
        </trans-unit>
        <trans-unit id="518420d666917ac8a6798857d62e0ef52ef7ca6c" translate="yes" xml:space="preserve">
          <source>BatchMatrixDeterminant</source>
          <target state="translated">BatchMatrixDeterminant</target>
        </trans-unit>
        <trans-unit id="ac76d2c4e2619a766b2581eef149d0d71d751860" translate="yes" xml:space="preserve">
          <source>BatchMatrixDiag</source>
          <target state="translated">BatchMatrixDiag</target>
        </trans-unit>
        <trans-unit id="bc4a0cd802f49db07a502fd67638fdf4ac3631f3" translate="yes" xml:space="preserve">
          <source>BatchMatrixDiagPart</source>
          <target state="translated">BatchMatrixDiagPart</target>
        </trans-unit>
        <trans-unit id="a027e75791c545693600a788f8888d56d85137fc" translate="yes" xml:space="preserve">
          <source>BatchMatrixInverse</source>
          <target state="translated">BatchMatrixInverse</target>
        </trans-unit>
        <trans-unit id="f9bec3a23c29fc8930b912e4f2574bfa897b4d97" translate="yes" xml:space="preserve">
          <source>BatchMatrixSetDiag</source>
          <target state="translated">BatchMatrixSetDiag</target>
        </trans-unit>
        <trans-unit id="fbc69ef8ec4aba065a283dcae9003c5a5f852d63" translate="yes" xml:space="preserve">
          <source>BatchMatrixSolve</source>
          <target state="translated">BatchMatrixSolve</target>
        </trans-unit>
        <trans-unit id="fccdf6d1e4212296965edf346fd8f96d30df2975" translate="yes" xml:space="preserve">
          <source>BatchMatrixSolveLs</source>
          <target state="translated">BatchMatrixSolveLs</target>
        </trans-unit>
        <trans-unit id="21060a1ebba4c2dbe692b8dd4986d460c60d3e6b" translate="yes" xml:space="preserve">
          <source>BatchMatrixTriangularSolve</source>
          <target state="translated">BatchMatrixTriangularSolve</target>
        </trans-unit>
        <trans-unit id="36235ed2a6604a1645c2b50180cd23baac863673" translate="yes" xml:space="preserve">
          <source>BatchNormWithGlobalNormalization</source>
          <target state="translated">BatchNormWithGlobalNormalization</target>
        </trans-unit>
        <trans-unit id="4a62d542aad56412cb9e521f9a2d12a891041979" translate="yes" xml:space="preserve">
          <source>BatchNormWithGlobalNormalizationGrad</source>
          <target state="translated">BatchNormWithGlobalNormalizationGrad</target>
        </trans-unit>
        <trans-unit id="729cc52363c7605ff8240c6e7923edc02004aec5" translate="yes" xml:space="preserve">
          <source>BatchSelfAdjointEig</source>
          <target state="translated">BatchSelfAdjointEig</target>
        </trans-unit>
        <trans-unit id="2f1100bbb962a6fffa898ba1930213730ae2d3d7" translate="yes" xml:space="preserve">
          <source>BatchSelfAdjointEigV2</source>
          <target state="translated">BatchSelfAdjointEigV2</target>
        </trans-unit>
        <trans-unit id="3f4303dc52189620bab4b939cbb2f2e26c7a5424" translate="yes" xml:space="preserve">
          <source>BatchSvd</source>
          <target state="translated">BatchSvd</target>
        </trans-unit>
        <trans-unit id="2d463f2775a1abdd1c3e764e8b1163ebef59f41c" translate="yes" xml:space="preserve">
          <source>BatchToSpace</source>
          <target state="translated">BatchToSpace</target>
        </trans-unit>
        <trans-unit id="ac3439be9f297d92865420cbc7f5771a4b205755" translate="yes" xml:space="preserve">
          <source>BatchToSpace for 4-D tensors of type T.</source>
          <target state="translated">유형 T의 4 차원 텐서 용 BatchToSpace</target>
        </trans-unit>
        <trans-unit id="89cf6d89420e01dc5690feb682f6dcf0b8c08691" translate="yes" xml:space="preserve">
          <source>BatchToSpace for N-D tensors of type T.</source>
          <target state="translated">T 유형의 ND 텐서 용 BatchToSpace</target>
        </trans-unit>
        <trans-unit id="4fa6cd6e8f0cb57e5cc24a593ff1a998b6eb03b6" translate="yes" xml:space="preserve">
          <source>BatchToSpaceND</source>
          <target state="translated">BatchToSpaceND</target>
        </trans-unit>
        <trans-unit id="0121072773e00d2e0aa74b5252959e4a69a120b3" translate="yes" xml:space="preserve">
          <source>Batched indexing into a 3-tensor:</source>
          <target state="translated">3 텐서로 일괄 인덱싱 :</target>
        </trans-unit>
        <trans-unit id="31ecf9a347c9c1a4178974c0c60cdb506adaf6a0" translate="yes" xml:space="preserve">
          <source>Batched indexing into a matrix:</source>
          <target state="translated">매트릭스로 일괄 인덱싱 :</target>
        </trans-unit>
        <trans-unit id="539aa4e37b2c424abaa136ce3ad585b11d27d9c2" translate="yes" xml:space="preserve">
          <source>Batched slice indexing into a matrix:</source>
          <target state="translated">일괄 처리 된 슬라이스 인덱싱을 행렬로 :</target>
        </trans-unit>
        <trans-unit id="64b0bdd628d67d1497bc017e1ccbdf9623dbd523" translate="yes" xml:space="preserve">
          <source>Batched tensors are concatenated along the first dimension, and all tensors in in_tensors must have the first dimension of the same size.</source>
          <target state="translated">일괄 처리 된 텐서는 첫 번째 차원을 따라 연결되며 in_tensors의 모든 텐서는 동일한 크기의 첫 번째 차원을 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="0db01223cb798c8ba8bf7d98537fd76f8e127cd9" translate="yes" xml:space="preserve">
          <source>Batches all input tensors nondeterministically.</source>
          <target state="translated">모든 입력 텐서를 비 결정적으로 일괄 처리합니다.</target>
        </trans-unit>
        <trans-unit id="f9a559f54f43b4fc85ce630aa9d4078b32b3609f" translate="yes" xml:space="preserve">
          <source>Batches all the inputs tensors to the computation done by the function.</source>
          <target state="translated">모든 입력 텐서를 함수가 수행 한 계산에 배치합니다.</target>
        </trans-unit>
        <trans-unit id="8bddd29bcd2c5dc8ae67a3c0a5fdefd445f5b6e2" translate="yes" xml:space="preserve">
          <source>Batches the computation done by the decorated function.</source>
          <target state="translated">데코 레이팅 된 기능으로 수행 된 계산을 배치합니다.</target>
        </trans-unit>
        <trans-unit id="60ed4fdebfb60ae2841512b0bd4ae80f24563f02" translate="yes" xml:space="preserve">
          <source>Batchwise dot product.</source>
          <target state="translated">배치 방식의 도트 제품.</target>
        </trans-unit>
        <trans-unit id="0cfa74e776dcdb330c2bcf475fda7feec0a1083c" translate="yes" xml:space="preserve">
          <source>Be a sequence-processing layer (accepts 3D+ inputs).</source>
          <target state="translated">시퀀스 처리 계층이어야합니다 (3D + 입력 허용).</target>
        </trans-unit>
        <trans-unit id="3129edc8cc77bcfcaec8e0d8dc0bb967e5958b80" translate="yes" xml:space="preserve">
          <source>Be sure to set the input sizes, allocate tensors and fill values before calling this. Also, note that this function releases the GIL so heavy computation can be done in the background while the Python interpreter continues. No other function on this object should be called while the invoke() call has not finished.</source>
          <target state="translated">이것을 호출하기 전에 입력 크기를 설정하고 텐서를 할당하고 값을 채우십시오. 또한이 함수는 GIL을 해제하므로 Python 인터프리터가 계속되는 동안 백그라운드에서 무거운 계산을 수행 할 수 있습니다. invoke () 호출이 완료되지 않은 상태에서이 객체의 다른 함수를 호출하면 안됩니다.</target>
        </trans-unit>
        <trans-unit id="14704ff9c6b1dda614adca922a951420e0f352d1" translate="yes" xml:space="preserve">
          <source>Be sure to shard before you use any randomizing operator (such as shuffle).</source>
          <target state="translated">임의 추출 연산자 (예 : 셔플)를 사용하기 전에 샤드를 만들어야합니다.</target>
        </trans-unit>
        <trans-unit id="d202e1e983a5c7105a4ff47936664330f015606e" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;../../constant&quot;&gt;&lt;code&gt;tf.constant&lt;/code&gt;&lt;/a&gt; only embeds constant values in the graph, it does not support dynamic shapes based on other runtime Tensors, whereas &lt;a href=&quot;../../fill&quot;&gt;&lt;code&gt;tf.fill&lt;/code&gt;&lt;/a&gt; does.</source>
          <target state="translated">때문에 &lt;a href=&quot;../../constant&quot;&gt; &lt;code&gt;tf.constant&lt;/code&gt; 는&lt;/a&gt; 단지 그래프에서 상수 값을 매립, 그 반면, 다른 런타임 텐서에 기초하여 동적 인 형태를 지원하지 않는 &lt;a href=&quot;../../fill&quot;&gt; &lt;code&gt;tf.fill&lt;/code&gt; 는&lt;/a&gt; 않는다.</target>
        </trans-unit>
        <trans-unit id="3b0d43f7b4bdffcce31d25051f078a3a1605da73" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;../fill&quot;&gt;&lt;code&gt;tf.fill&lt;/code&gt;&lt;/a&gt; evaluates at graph runtime, it supports dynamic shapes based on other runtime Tensors, unlike &lt;a href=&quot;../constant&quot;&gt;&lt;code&gt;tf.constant&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">때문에 &lt;a href=&quot;../fill&quot;&gt; &lt;code&gt;tf.fill&lt;/code&gt; &lt;/a&gt; 그래프 런타임시에 평가하여, 다른 런타임 텐서 달리 형상에 기초하여 동적 지원 &lt;a href=&quot;../constant&quot;&gt; &lt;code&gt;tf.constant&lt;/code&gt; 를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="42c0768bfee03dc7b10a5292ad331efb6146374b" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;fill&quot;&gt;&lt;code&gt;tf.fill&lt;/code&gt;&lt;/a&gt; evaluates at graph runtime, it supports dynamic shapes based on other runtime Tensors, unlike &lt;a href=&quot;constant&quot;&gt;&lt;code&gt;tf.constant&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">때문에 &lt;a href=&quot;fill&quot;&gt; &lt;code&gt;tf.fill&lt;/code&gt; &lt;/a&gt; 그래프 런타임시에 평가하여, 다른 런타임 텐서 달리 형상에 기초하여 동적 지원 &lt;a href=&quot;constant&quot;&gt; &lt;code&gt;tf.constant&lt;/code&gt; 를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e459989ea3bd9aae534761e3e3cbea09accc297c" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;vectorized_map&quot;&gt;&lt;code&gt;tf.vectorized_map&lt;/code&gt;&lt;/a&gt; fully parallelizes the batch, this method will generally be significantly faster than using &lt;a href=&quot;map_fn&quot;&gt;&lt;code&gt;tf.map_fn&lt;/code&gt;&lt;/a&gt;, especially in eager mode. However this is an experimental feature and currently has a lot of limitations:</source>
          <target state="translated">&lt;a href=&quot;vectorized_map&quot;&gt; &lt;code&gt;tf.vectorized_map&lt;/code&gt; &lt;/a&gt; 은 배치를 완전히 병렬화 하기 때문에이 방법은 일반적으로 특히 eager 모드에서 &lt;a href=&quot;map_fn&quot;&gt; &lt;code&gt;tf.map_fn&lt;/code&gt; 을&lt;/a&gt; 사용하는 것보다 훨씬 빠릅니다 . 그러나 이것은 실험적인 기능이며 현재 많은 제한이 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ffa9f95c3924abf5eef652797fb754b31af504c" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;vectorized_map&quot;&gt;&lt;code&gt;tf.vectorized_map&lt;/code&gt;&lt;/a&gt; fully parallelizes the batch, this method will generally be significantly faster than using &lt;a href=&quot;map_fn&quot;&gt;&lt;code&gt;tf.map_fn&lt;/code&gt;&lt;/a&gt;, especially in eager mode. However this is an experimental feature and currently has a lot of limitations: - There should be no data dependency between the different semantic invocations of &lt;code&gt;fn&lt;/code&gt;, i.e. it should be safe to map the elements of the inputs in any order. - Stateful kernels may mostly not be supported since these often imply a data dependency. We do support a limited set of such stateful kernels though (like RandomFoo, Variable operations like reads, etc). - &lt;code&gt;fn&lt;/code&gt; has limited support for control flow operations. &lt;a href=&quot;cond&quot;&gt;&lt;code&gt;tf.cond&lt;/code&gt;&lt;/a&gt; in particular is not supported. - &lt;code&gt;fn&lt;/code&gt; should return nested structure of Tensors or Operations. However if an Operation is returned, it should have zero outputs. - The shape and dtype of any intermediate or output tensors in the computation of &lt;code&gt;fn&lt;/code&gt; should not depend on the input to &lt;code&gt;fn&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;vectorized_map&quot;&gt; &lt;code&gt;tf.vectorized_map&lt;/code&gt; &lt;/a&gt; 은 배치를 완전히 병렬화 하기 때문에이 방법은 일반적으로 특히 열성 모드에서 &lt;a href=&quot;map_fn&quot;&gt; &lt;code&gt;tf.map_fn&lt;/code&gt; 을&lt;/a&gt; 사용하는 것보다 훨씬 빠릅니다 . 그러나 이것은 실험적인 기능이며 현재 많은 제한이 있습니다.- &lt;code&gt;fn&lt;/code&gt; 의 다른 의미 적 호출간에 데이터 종속성이 없어야합니다 . 즉, 입력 요소를 임의의 순서로 매핑하는 것이 안전해야합니다. -상태 저장 커널은 종종 데이터 의존성을 암시하기 때문에 대부분 지원되지 않을 수 있습니다. 우리는 RandomFoo, Random 연산과 같은 Variable 연산과 같은 제한된 상태 저장 커널을 지원합니다. - &lt;code&gt;fn&lt;/code&gt; 제어 흐름 작업에 대한 제한적인 지원을하고있다. 특히 &lt;a href=&quot;cond&quot;&gt; &lt;code&gt;tf.cond&lt;/code&gt; &lt;/a&gt; 는 지원되지 않습니다. - &lt;code&gt;fn&lt;/code&gt; 텐서 또는 연산의 중첩 구조를 반환해야합니다. 그러나 연산이 반환되면 출력이 0이어야합니다. - 계산에 중간 또는 출력 텐서의 형상 및 DTYPE &lt;code&gt;fn&lt;/code&gt; 상기 입력에 의존하지 않아야 &lt;code&gt;fn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="333f1764c386ba0a8da0f6422ba442f736a4680d" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;space_to_batch_nd&lt;/code&gt; and &lt;code&gt;batch_to_space_nd&lt;/code&gt; assume that the spatial dimensions are contiguous starting at the second dimension, but the specified &lt;code&gt;spatial_dims&lt;/code&gt; may not be, we must adjust &lt;code&gt;dilation_rate&lt;/code&gt;, &lt;code&gt;paddings&lt;/code&gt; and &lt;code&gt;crops&lt;/code&gt; in order to be usable with these operations. For a given dimension, if the block size is 1, and both the starting and ending padding and crop amounts are 0, then space_to_batch_nd effectively leaves that dimension alone, which is what is needed for dimensions not part of &lt;code&gt;spatial_dims&lt;/code&gt;. Furthermore, &lt;code&gt;space_to_batch_nd&lt;/code&gt; and &lt;code&gt;batch_to_space_nd&lt;/code&gt; handle this case efficiently for any number of leading and trailing dimensions.</source>
          <target state="translated">때문에 &lt;code&gt;space_to_batch_nd&lt;/code&gt; 및 &lt;code&gt;batch_to_space_nd&lt;/code&gt; 은 공간 차원 번째 차원에서 인접한 시작하는 것으로 가정하지만, 지정된 &lt;code&gt;spatial_dims&lt;/code&gt; 이 되지 않을 수도 우리는 조정해야 &lt;code&gt;dilation_rate&lt;/code&gt; , &lt;code&gt;paddings&lt;/code&gt; 및 &lt;code&gt;crops&lt;/code&gt; 이러한 조작에 사용될 수 있도록. 블록 크기는 1, 및 경우에 주어진 치수를 들어, 모두 시작과 끝 패딩과 작물 금액은 잎 space_to_batch_nd 효과적으로 후, 0되는 치수하지 않는 부분에 대해 필요한 것을 혼자 차원, &lt;code&gt;spatial_dims&lt;/code&gt; . 또한 &lt;code&gt;space_to_batch_nd&lt;/code&gt; 및 &lt;code&gt;batch_to_space_nd&lt;/code&gt; 여러 선행 및 후행 치수에 대해이 사례를 효율적으로 처리합니다.</target>
        </trans-unit>
        <trans-unit id="5f357d4f95bd4f90d893517d9633696cf691ebed" translate="yes" xml:space="preserve">
          <source>Because scale_layer does not directly track the &lt;code&gt;scale&lt;/code&gt; variable, it will not appear in &lt;code&gt;scale_layer.trainable_weights&lt;/code&gt; and will therefore not be trained if &lt;code&gt;scale_layer&lt;/code&gt; is used in a Model.</source>
          <target state="translated">scale_layer 직접 추적하지 않기 때문에 &lt;code&gt;scale&lt;/code&gt; 변수, 그것은에 표시되지 않습니다 &lt;code&gt;scale_layer.trainable_weights&lt;/code&gt; 및 경우에 따라서 훈련되지 않습니다 &lt;code&gt;scale_layer&lt;/code&gt; 이 모델에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="918afe8e4eb37bded09112c699cfd2864f21ea4f" translate="yes" xml:space="preserve">
          <source>Because validation happens at app.run() we want to ensure required-ness is enforced at that time. You generally do not want to force users who import your code to have additional required flags for their own binaries or tests.</source>
          <target state="translated">app.run ()에서 유효성 검사가 수행되므로 해당 시점에 필수 기능이 적용되도록해야합니다. 일반적으로 코드를 가져 오는 사용자가 자신의 바이너리 또는 테스트에 필요한 추가 플래그를 갖도록 강요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6c652bd338ba9ed5fce057cbecb051eb679ee834" translate="yes" xml:space="preserve">
          <source>Because we are using ellipsis notation and have specified only one axis, the output_shape arg is a single value. When instantiated in this way, the layer can handle any number of sequence dimensions - including the case where no sequence dimension exists.</source>
          <target state="translated">줄임표 표기법을 사용하고 하나의 축만 지정했기 때문에 output_shape 인수는 단일 값입니다. 이러한 방식으로 인스턴스화되면 계층은 시퀀스 차원이없는 경우를 포함하여 임의의 수의 시퀀스 차원을 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="cac1071eeb0fa549d93e5ad3404fa9149a632df6" translate="yes" xml:space="preserve">
          <source>Before each run the thread checks if the coordinator has requested stop. In that case the looper thread terminates immediately.</source>
          <target state="translated">각 실행 전에 스레드는 코디네이터가 중지를 요청했는지 확인합니다. 이 경우 루퍼 스레드가 즉시 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="864bbaa66948a5d6a59b10a1bfd7975c20b7bb52" translate="yes" xml:space="preserve">
          <source>Before quantization, &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; values are adjusted with the following logic. It is suggested to have &lt;code&gt;min &amp;lt;= 0 &amp;lt;= max&lt;/code&gt;. If &lt;code&gt;0&lt;/code&gt; is not in the range of values, the behavior can be unexpected:</source>
          <target state="translated">양자화 전에 &lt;code&gt;min&lt;/code&gt; 및 &lt;code&gt;max&lt;/code&gt; 값은 다음 논리로 조정됩니다. &lt;code&gt;min &amp;lt;= 0 &amp;lt;= max&lt;/code&gt; 를 갖는 것이 좋습니다 . 경우 &lt;code&gt;0&lt;/code&gt; 값의 범위에없는 동작이 예기치 않은 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="dc533b09fcc49b30b51ee5c7bbeec77413bf4ce1" translate="yes" xml:space="preserve">
          <source>Before quantization, &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; values are adjusted with the following logic. It is suggested to have &lt;code&gt;min &amp;lt;= 0 &amp;lt;= max&lt;/code&gt;. If &lt;code&gt;0&lt;/code&gt; is not in the range of values, the behavior can be unexpected: If &lt;code&gt;0 &amp;lt; min &amp;lt; max&lt;/code&gt;: &lt;code&gt;min_adj = 0&lt;/code&gt; and &lt;code&gt;max_adj = max - min&lt;/code&gt;. If &lt;code&gt;min &amp;lt; max &amp;lt; 0&lt;/code&gt;: &lt;code&gt;min_adj = min - max&lt;/code&gt; and &lt;code&gt;max_adj = 0&lt;/code&gt;. If &lt;code&gt;min &amp;lt;= 0 &amp;lt;= max&lt;/code&gt;: &lt;code&gt;scale = (max - min) / (2^num_bits - 1)&lt;/code&gt;, &lt;code&gt;min_adj = scale * round(min / scale)&lt;/code&gt; and &lt;code&gt;max_adj = max + min_adj - min&lt;/code&gt;.</source>
          <target state="translated">양자화하기 전에 &lt;code&gt;min&lt;/code&gt; 과 &lt;code&gt;max&lt;/code&gt; 값은 다음 로직으로 조정됩니다. &lt;code&gt;min &amp;lt;= 0 &amp;lt;= max&lt;/code&gt; 를 갖는 것이 좋습니다 . 경우 &lt;code&gt;0&lt;/code&gt; 값의 범위에없는 동작이 예상치 일 수있다 : 만약 &lt;code&gt;0 &amp;lt; min &amp;lt; max&lt;/code&gt; : &lt;code&gt;min_adj = 0&lt;/code&gt; 및 &lt;code&gt;max_adj = max - min&lt;/code&gt; . 만일 &lt;code&gt;min &amp;lt; max &amp;lt; 0&lt;/code&gt; : &lt;code&gt;min_adj = min - max&lt;/code&gt; 및 &lt;code&gt;max_adj = 0&lt;/code&gt; . 경우 &lt;code&gt;min &amp;lt;= 0 &amp;lt;= max&lt;/code&gt; : &lt;code&gt;scale = (max - min) / (2^num_bits - 1)&lt;/code&gt; , &lt;code&gt;min_adj = scale * round(min / scale)&lt;/code&gt; 및 &lt;code&gt;max_adj = max + min_adj - min&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c215352a2064b7badee93877aca52e6befa7891c" translate="yes" xml:space="preserve">
          <source>Before running the graph on TPU, the TPU system needs to be initialized. If TensorFlow Serving model-server is used, this is done automatically. If not, please use &lt;code&gt;session.run(tpu.initialize_system())&lt;/code&gt;.</source>
          <target state="translated">TPU에서 그래프를 실행하기 전에 TPU 시스템을 초기화해야합니다. TensorFlow Serving 모델 서버를 사용하면 자동으로 수행됩니다. 그렇지 않은 경우 &lt;code&gt;session.run(tpu.initialize_system())&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98b07bd94c22bcb5d52967cf93a063428fa2459f" translate="yes" xml:space="preserve">
          <source>Before this op is executed, TensorFlow will ensure that the operations in &lt;code&gt;self.control_inputs&lt;/code&gt; have finished executing. This mechanism can be used to run ops sequentially for performance reasons, or to ensure that the side effects of an op are observed in the correct order.</source>
          <target state="translated">이 op가 실행되기 전에 TensorFlow는 &lt;code&gt;self.control_inputs&lt;/code&gt; 의 작업 이 실행을 완료 했는지 확인합니다 . 이 메커니즘은 성능상의 이유로 op를 순차적으로 실행하거나 op의 부작용이 올바른 순서로 관찰되도록하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bf9af489cd12e4ede7a06bfc7ab06b9ecddcae20" translate="yes" xml:space="preserve">
          <source>Behavior is the same as in &lt;code&gt;get_variable&lt;/code&gt;, except that variables are added to the &lt;code&gt;LOCAL_VARIABLES&lt;/code&gt; collection and &lt;code&gt;trainable&lt;/code&gt; is set to &lt;code&gt;False&lt;/code&gt;. This function prefixes the name with the current variable scope and performs reuse checks. See the &lt;a href=&quot;https://tensorflow.org/guide/variables&quot;&gt;Variable Scope How To&lt;/a&gt; for an extensive description of how reusing works. Here is a basic example:</source>
          <target state="translated">변수는 &lt;code&gt;LOCAL_VARIABLES&lt;/code&gt; 컬렉션에 추가 되고 &lt;code&gt;trainable&lt;/code&gt; 은 &lt;code&gt;False&lt;/code&gt; 로 설정 된다는 점을 제외하고 는 동작은 &lt;code&gt;get_variable&lt;/code&gt; 과 동일합니다 . 이 함수는 이름 앞에 현재 변수 범위를 붙이고 재사용 검사를 수행합니다. 재사용 작동 방법에 대한 자세한 설명은 &lt;a href=&quot;https://tensorflow.org/guide/variables&quot;&gt;변수 범위&lt;/a&gt; 사용법 을 참조하십시오 . 기본 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f9e0462f616e99599c211cbdd6c9ecc3e882e01a" translate="yes" xml:space="preserve">
          <source>Below calculation is performed in the python wrapper for the Gradients (not in the gradient kernel.)</source>
          <target state="translated">아래 계산은 Gradients에 대한 Python 래퍼에서 수행됩니다 (그라디언트 커널이 아님).</target>
        </trans-unit>
        <trans-unit id="f7221a2669bbe6dd82d25a4ff51d35581067170d" translate="yes" xml:space="preserve">
          <source>Below is a 4 x 4 example:</source>
          <target state="translated">아래는 4 x 4 예입니다.</target>
        </trans-unit>
        <trans-unit id="8ba708034a17ec90e5ce69e1a09187b71afe6557" translate="yes" xml:space="preserve">
          <source>Below is a rough speed comparison between &lt;code&gt;sparse_tensor_dense_matmul&lt;/code&gt;, labeled 'sparse', and &lt;code&gt;matmul&lt;/code&gt;(a_is_sparse=True), labeled 'dense'. For purposes of the comparison, the time spent converting from a &lt;code&gt;SparseTensor&lt;/code&gt; to a dense &lt;code&gt;Tensor&lt;/code&gt; is not included, so it is overly conservative with respect to the time ratio.</source>
          <target state="translated">아래는 'sparse'로 표시된 &lt;code&gt;sparse_tensor_dense_matmul&lt;/code&gt; 과 'dense'로 표시된 &lt;code&gt;matmul&lt;/code&gt; (a_is_sparse = True) 사이의 대략적인 속도 비교 입니다. 비교를 위해, &lt;code&gt;SparseTensor&lt;/code&gt; 에서 조밀 한 &lt;code&gt;Tensor&lt;/code&gt; 로 변환하는 데 소요 된 시간은 포함되지 않으므로 시간 비율과 관련하여 지나치게 보수적입니다.</target>
        </trans-unit>
        <trans-unit id="7fe96ba367761a8535d5db7c2adaedf6e256be25" translate="yes" xml:space="preserve">
          <source>Below is a simple example:</source>
          <target state="translated">아래는 간단한 예입니다.</target>
        </trans-unit>
        <trans-unit id="26f1f192e698c7ad5ba00a9c0f7254038e0138a2" translate="yes" xml:space="preserve">
          <source>Below is an example of such mapping:</source>
          <target state="translated">다음은 이러한 매핑의 예입니다.</target>
        </trans-unit>
        <trans-unit id="93f725b3ba12879d32708e07d6bfd38fd23147da" translate="yes" xml:space="preserve">
          <source>Below we will use the following notation for each pair of matrix and right-hand sides in the batch:</source>
          <target state="translated">아래에서는 배치의 각 행렬 쌍과 오른쪽에 다음 표기법을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="d6a801f4b37a9384f51049649a0b7a90550be15c" translate="yes" xml:space="preserve">
          <source>Benchmark system:</source>
          <target state="translated">벤치 마크 시스템 :</target>
        </trans-unit>
        <trans-unit id="f9428353e9aa57ed19a2a32caf5b27489b48d063" translate="yes" xml:space="preserve">
          <source>Bernoulli distribution.</source>
          <target state="translated">베르누이 분포.</target>
        </trans-unit>
        <trans-unit id="8c1f5e6dc3f60daf59318bb9972c56535bb2635e" translate="yes" xml:space="preserve">
          <source>Besides trainable weights, updated via backpropagation during training, layers can also have non-trainable weights. These weights are meant to be updated manually during &lt;code&gt;call()&lt;/code&gt;. Here's a example layer that computes the running sum of its inputs:</source>
          <target state="translated">훈련 중 역 전파를 통해 업데이트되는 훈련 가능한 가중치 외에도 레이어에는 훈련 불가능한 가중치가있을 수 있습니다. 이러한 가중치는 &lt;code&gt;call()&lt;/code&gt; 동안 수동으로 업데이트됩니다 . 다음은 입력의 누계 합계를 계산하는 예제 레이어입니다.</target>
        </trans-unit>
        <trans-unit id="e17be6dce7e377e5be20ce9c755f17ab20334e78" translate="yes" xml:space="preserve">
          <source>Besides, layer attributes cannot be modified after the layer has been called once (except the &lt;code&gt;trainable&lt;/code&gt; attribute).</source>
          <target state="translated">또한 레이어 속성은 레이어가 한 번 호출 된 후에는 수정할 수 없습니다 ( &lt;code&gt;trainable&lt;/code&gt; 속성 제외 ).</target>
        </trans-unit>
        <trans-unit id="e497e65dfc8fffbffe183e7cf4ee5a607d5880aa" translate="yes" xml:space="preserve">
          <source>BesselI0</source>
          <target state="translated">BesselI0</target>
        </trans-unit>
        <trans-unit id="7f432594b9197398e3d907e8a0418e4123d55d1d" translate="yes" xml:space="preserve">
          <source>BesselI0e</source>
          <target state="translated">BesselI0e</target>
        </trans-unit>
        <trans-unit id="22d3df30d2d301007e7731408f9d1084b89f110b" translate="yes" xml:space="preserve">
          <source>BesselI1</source>
          <target state="translated">BesselI1</target>
        </trans-unit>
        <trans-unit id="2cb6547f8bae953b0f7c421f820b1098673bf677" translate="yes" xml:space="preserve">
          <source>BesselI1e</source>
          <target state="translated">BesselI1e</target>
        </trans-unit>
        <trans-unit id="eda540a2265c726a7fa1cc3b750051bf603bddde" translate="yes" xml:space="preserve">
          <source>BesselJ0</source>
          <target state="translated">BesselJ0</target>
        </trans-unit>
        <trans-unit id="7aa2a6bc66ba5574bb4bafefb54b4deffc6628dc" translate="yes" xml:space="preserve">
          <source>BesselJ1</source>
          <target state="translated">BesselJ1</target>
        </trans-unit>
        <trans-unit id="84aba6a5ea56f9bfa32bf48ed56e9a24f4fecb5a" translate="yes" xml:space="preserve">
          <source>BesselK0</source>
          <target state="translated">BesselK0</target>
        </trans-unit>
        <trans-unit id="6607e1ba1267a58d285a7ed4a16d6044e0699cc4" translate="yes" xml:space="preserve">
          <source>BesselK0e</source>
          <target state="translated">BesselK0e</target>
        </trans-unit>
        <trans-unit id="ccb123fbacfd0eda8821b91ac89387e105e9279f" translate="yes" xml:space="preserve">
          <source>BesselK1</source>
          <target state="translated">BesselK1</target>
        </trans-unit>
        <trans-unit id="3daa86f808197af5e4c2b8040aa793807b8335a2" translate="yes" xml:space="preserve">
          <source>BesselK1e</source>
          <target state="translated">BesselK1e</target>
        </trans-unit>
        <trans-unit id="76dc8501ecc13a6c70fc63849971a8e104db4232" translate="yes" xml:space="preserve">
          <source>BesselY0</source>
          <target state="translated">BesselY0</target>
        </trans-unit>
        <trans-unit id="efd1b142ec55745e5392bf97dffeaa82d773bdb5" translate="yes" xml:space="preserve">
          <source>BesselY1</source>
          <target state="translated">BesselY1</target>
        </trans-unit>
        <trans-unit id="9f03a338f7564e4e21a2867be1ad06f686f0be5f" translate="yes" xml:space="preserve">
          <source>Beta distribution.</source>
          <target state="translated">베타 배포.</target>
        </trans-unit>
        <trans-unit id="559da7570ccaf33e1e89058b2c56a2b8b3240c8c" translate="yes" xml:space="preserve">
          <source>Beta parameter for Kaiser window, see reference below.</source>
          <target state="translated">Kaiser 창에 대한 베타 매개 변수는 아래 참조를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ab49f6be771f0e8ba62800b822330dcf935ef84c" translate="yes" xml:space="preserve">
          <source>Beta parameter for Kaiser window.</source>
          <target state="translated">Kaiser 창의 베타 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="e7c1d5fb0e105a4c6e988b6ee5f15f40f9f46395" translate="yes" xml:space="preserve">
          <source>Betainc</source>
          <target state="translated">Betainc</target>
        </trans-unit>
        <trans-unit id="fdd12ab1a4ebe69be4bb2f17b70bb845d0d5a0a7" translate="yes" xml:space="preserve">
          <source>Better performance with tf.function</source>
          <target state="translated">tf.function으로 더 나은 성능</target>
        </trans-unit>
        <trans-unit id="e00808f64da3794423375c99ac4f888f849b578e" translate="yes" xml:space="preserve">
          <source>Better performance with tf.function and AutoGraph</source>
          <target state="translated">tf.function 및 AutoGraph로 더 나은 성능</target>
        </trans-unit>
        <trans-unit id="c1f63f137fbcf8eb5b877bc0a5bbcceb3a1fe6a7" translate="yes" xml:space="preserve">
          <source>Better performance with the tf.data API</source>
          <target state="translated">tf.data API로 더 나은 성능</target>
        </trans-unit>
        <trans-unit id="0ad503ac220ebfd37fb04b6dd5981b2c9a1bd631" translate="yes" xml:space="preserve">
          <source>Bias tensor to add.</source>
          <target state="translated">추가 할 바이어스 텐서.</target>
        </trans-unit>
        <trans-unit id="3e050e369925f18c9f8de9ec7b7f1395dc8dd01a" translate="yes" xml:space="preserve">
          <source>BiasAdd</source>
          <target state="translated">BiasAdd</target>
        </trans-unit>
        <trans-unit id="f7b39efc69c40243ae0be5fe5816001909f0594a" translate="yes" xml:space="preserve">
          <source>BiasAddGrad</source>
          <target state="translated">BiasAddGrad</target>
        </trans-unit>
        <trans-unit id="b066f7d313636924c90e296083c1e8582bfa1062" translate="yes" xml:space="preserve">
          <source>BiasAddV1</source>
          <target state="translated">BiasAddV1</target>
        </trans-unit>
        <trans-unit id="dffd6fa24bc027b4976f72cd8bf7f5cc7db82d54" translate="yes" xml:space="preserve">
          <source>Biases are initialized with : &lt;code&gt;b_ru&lt;/code&gt; - constant_initializer(1.0) &lt;code&gt;b_c&lt;/code&gt; - constant_initializer(0.0)</source>
          <target state="translated">&lt;code&gt;b_ru&lt;/code&gt; 은 다음으로 초기화됩니다 : b_ru -constant_initializer (1.0) &lt;code&gt;b_c&lt;/code&gt; -constant_initializer (0.0)</target>
        </trans-unit>
        <trans-unit id="0c32cbed2c12e59754d803a6a86d983415898d9a" translate="yes" xml:space="preserve">
          <source>Biases of the forget gate are initialized by default to 1 in order to reduce the scale of forgetting at the beginning of the training. Must set it manually to &lt;code&gt;0.0&lt;/code&gt; when restoring from CudnnLSTM trained checkpoints.</source>
          <target state="translated">훈련 시작시 망각의 규모를 줄이기 위해 망각 게이트의 편향은 기본적으로 1로 초기화됩니다. CudnnLSTM 훈련 된 체크 포인트에서 복원 할 때 수동으로 &lt;code&gt;0.0&lt;/code&gt; 으로 설정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="7f80ddc8371fc02363ef3b4d95e0f42b920820da" translate="yes" xml:space="preserve">
          <source>Bidirectional wrapper for RNNs.</source>
          <target state="translated">RNN 용 양방향 래퍼.</target>
        </trans-unit>
        <trans-unit id="23498aef85e286e9d8f09eb213c1b9bb53939251" translate="yes" xml:space="preserve">
          <source>Bin will be incremented by the corresponding weight instead of 1. Here, index 1 in output has a value 6. This is the summation of weights corresponding to the value in &lt;code&gt;values&lt;/code&gt;.</source>
          <target state="translated">Bin은 1 대신 해당 가중치로 증가합니다. 여기서, 출력의 인덱스 1에는 값 6이 있습니다. 이는 &lt;code&gt;values&lt;/code&gt; 의 값에 해당하는 가중치의 합입니다 .</target>
        </trans-unit>
        <trans-unit id="f8408d54c3df586e8ec30075df3e81d709edd8a0" translate="yes" xml:space="preserve">
          <source>Binary accuracy values. shape = &lt;code&gt;[batch_size, d0, .. dN-1]&lt;/code&gt;</source>
          <target state="translated">이진 정확도 값. 모양 = &lt;code&gt;[batch_size, d0, .. dN-1]&lt;/code&gt; _ 크기 , d0, .. dN-1]</target>
        </trans-unit>
        <trans-unit id="9368f86c2aed09a12e0226a9d35288ab290da8cc" translate="yes" xml:space="preserve">
          <source>Binary crossentropy between an output tensor and a target tensor.</source>
          <target state="translated">출력 텐서와 목표 텐서 사이의 이진 교차 엔트로피.</target>
        </trans-unit>
        <trans-unit id="6bd43c622386da8020f493f7108bdcfbfb96767f" translate="yes" xml:space="preserve">
          <source>Binary crossentropy loss value. shape = &lt;code&gt;[batch_size, d0, .. dN-1]&lt;/code&gt;.</source>
          <target state="translated">이진 교차 엔트로피 손실 값. 모양 = &lt;code&gt;[batch_size, d0, .. dN-1]&lt;/code&gt; _ 크기 , d0, .. dN-1] .</target>
        </trans-unit>
        <trans-unit id="1990394deb11c4f93f0d62011b022fba37deb2e4" translate="yes" xml:space="preserve">
          <source>Binary tensor with shape &lt;code&gt;(samples, time, 1)&lt;/code&gt;, with a zero for every element that is masked.</source>
          <target state="translated">마스킹 된 모든 요소에 대해 0이있는 모양 &lt;code&gt;(samples, time, 1)&lt;/code&gt; 이있는 이진 텐서 .</target>
        </trans-unit>
        <trans-unit id="519b1bc46fd8e51571a4dea86e0f64723a87bdf2" translate="yes" xml:space="preserve">
          <source>Bincount</source>
          <target state="translated">Bincount</target>
        </trans-unit>
        <trans-unit id="f0a37377942485fdf764a521fe238c8d0ed7d3cb" translate="yes" xml:space="preserve">
          <source>Bins the given values for use in a histogram.</source>
          <target state="translated">히스토그램에서 사용하기 위해 주어진 값을 묶습니다.</target>
        </trans-unit>
        <trans-unit id="ed5e90686ca19fb90899f5b36b70cba7d9fcbc59" translate="yes" xml:space="preserve">
          <source>Bitcast</source>
          <target state="translated">Bitcast</target>
        </trans-unit>
        <trans-unit id="b6d9b186343317e12aa258806d17ad25e06a73f1" translate="yes" xml:space="preserve">
          <source>Bitcasts a tensor from one type to another without copying data.</source>
          <target state="translated">데이터를 복사하지 않고 한 유형에서 다른 유형으로 텐서를 비트 캐스트합니다.</target>
        </trans-unit>
        <trans-unit id="931427c3d1697302f1b1ed892763576899fefcc7" translate="yes" xml:space="preserve">
          <source>Bitwise reduction (logical AND).</source>
          <target state="translated">비트 단위 감소 (논리 AND).</target>
        </trans-unit>
        <trans-unit id="d03b11e77e9c0184173f7a829c9526f625ad046b" translate="yes" xml:space="preserve">
          <source>Bitwise reduction (logical OR).</source>
          <target state="translated">비트 단위 감소 (논리적 OR).</target>
        </trans-unit>
        <trans-unit id="eaafd65a841598e1a31b5b97b3615d491ff73dfd" translate="yes" xml:space="preserve">
          <source>BitwiseAnd</source>
          <target state="translated">BitwiseAnd</target>
        </trans-unit>
        <trans-unit id="c4dd5a56891686a60ed1e5712c49634d09ddea14" translate="yes" xml:space="preserve">
          <source>BitwiseOr</source>
          <target state="translated">BitwiseOr</target>
        </trans-unit>
        <trans-unit id="138990fef5682b7e5e51381dbdb0681affdcb81f" translate="yes" xml:space="preserve">
          <source>BitwiseXor</source>
          <target state="translated">BitwiseXor</target>
        </trans-unit>
        <trans-unit id="fc3e66bb35a901742662edb6ced928005d59773e" translate="yes" xml:space="preserve">
          <source>Block waiting for the coordinator to stop.</source>
          <target state="translated">코디네이터가 멈추기를 기다리는 블록.</target>
        </trans-unit>
        <trans-unit id="43138f401aa10ecabf4fc9179a6ada33c6fb4b74" translate="yes" xml:space="preserve">
          <source>BlockLSTM</source>
          <target state="translated">BlockLSTM</target>
        </trans-unit>
        <trans-unit id="2326f00933a8414ccd681bfc71238588ac10ef51" translate="yes" xml:space="preserve">
          <source>BlockLSTMGrad</source>
          <target state="translated">BlockLSTMGrad</target>
        </trans-unit>
        <trans-unit id="63abd31a20cb7de0a61585ade411ea9ae7786c9d" translate="yes" xml:space="preserve">
          <source>BlockLSTMGradV2</source>
          <target state="translated">BlockLSTMGradV2</target>
        </trans-unit>
        <trans-unit id="47cb32f4b5b92057dda33b6814589fe2986b1468" translate="yes" xml:space="preserve">
          <source>BlockLSTMV2</source>
          <target state="translated">BlockLSTMV2</target>
        </trans-unit>
        <trans-unit id="9903bcc52f6f86f49dfafd9e89072761eba18318" translate="yes" xml:space="preserve">
          <source>Blocks until the server has shut down.</source>
          <target state="translated">서버가 종료 될 때까지 차단합니다.</target>
        </trans-unit>
        <trans-unit id="0b9d2b2362bc33581ba11fddcb0cf0590ebd3a7a" translate="yes" xml:space="preserve">
          <source>Blog</source>
          <target state="translated">Blog</target>
        </trans-unit>
        <trans-unit id="b2d6ac211ed00cad4e18cc870345a9b8a43ee0e1" translate="yes" xml:space="preserve">
          <source>Bool. Defaults to &lt;code&gt;False&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt;, this &lt;code&gt;Model&lt;/code&gt;'s logic will not be wrapped in a &lt;a href=&quot;../../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;. Recommended to leave this as &lt;code&gt;None&lt;/code&gt; unless your &lt;code&gt;Model&lt;/code&gt; cannot be run inside a &lt;a href=&quot;../../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">부울. 기본값은 &lt;code&gt;False&lt;/code&gt; 입니다. 경우 &lt;code&gt;True&lt;/code&gt; ,이 &lt;code&gt;Model&lt;/code&gt; 의 논리는에 싸여되지 않습니다 &lt;a href=&quot;../../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;Model&lt;/code&gt; 을 &lt;a href=&quot;../../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; 내에서 실행할 수없는 경우가 아니면 &lt;code&gt;None&lt;/code&gt; 으로 두는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="537f918b1aa6b828db6102d4abaea707840604fb" translate="yes" xml:space="preserve">
          <source>Bool. Defaults to &lt;code&gt;False&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt;, this &lt;code&gt;Model&lt;/code&gt;'s logic will not be wrapped in a &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;. Recommended to leave this as &lt;code&gt;None&lt;/code&gt; unless your &lt;code&gt;Model&lt;/code&gt; cannot be run inside a &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">부울. 기본값은 &lt;code&gt;False&lt;/code&gt; 입니다. 경우 &lt;code&gt;True&lt;/code&gt; ,이 &lt;code&gt;Model&lt;/code&gt; 의 논리는에 싸여되지 않습니다 &lt;a href=&quot;../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;Model&lt;/code&gt; 을 &lt;a href=&quot;../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; 내에서 실행할 수없는 경우가 아니면 &lt;code&gt;None&lt;/code&gt; 으로 두는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="8c1d24b1aca740608f40dff9aec69fd7a3db557d" translate="yes" xml:space="preserve">
          <source>Bool. If True apply use locks to prevent concurrent updates to variables.</source>
          <target state="translated">부울. True 인 경우 잠금을 사용하여 변수에 대한 동시 업데이트를 방지합니다.</target>
        </trans-unit>
        <trans-unit id="d72262946a965b68fbfe0111e077f97c5e11634c" translate="yes" xml:space="preserve">
          <source>Boolean (default &lt;code&gt;False&lt;/code&gt;). If True, process the input sequence backwards and return the reversed sequence.</source>
          <target state="translated">부울 (기본값 &lt;code&gt;False&lt;/code&gt; ). True이면 입력 시퀀스를 역순으로 처리하고 역순 시퀀스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a755f01a8efde905445d8f70c9a08c74ace9e8a2" translate="yes" xml:space="preserve">
          <source>Boolean (default &lt;code&gt;False&lt;/code&gt;). If True, the last state for each sample at index i in a batch will be used as initial state for the sample of index i in the following batch.</source>
          <target state="translated">부울 (기본값 &lt;code&gt;False&lt;/code&gt; ). True이면 배치의 인덱스 i에있는 각 샘플의 마지막 상태가 다음 배치의 인덱스 i 샘플에 대한 초기 상태로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="69f93b331af509ca80bbce13f4512e6793b0b067" translate="yes" xml:space="preserve">
          <source>Boolean (default &lt;code&gt;False&lt;/code&gt;). If True, the network will be unrolled, else a symbolic loop will be used. Unrolling can speed-up a RNN, although it tends to be more memory-intensive. Unrolling is only suitable for short sequences.</source>
          <target state="translated">부울 (기본값 &lt;code&gt;False&lt;/code&gt; ). True이면 네트워크가 풀리고 그렇지 않으면 심볼릭 루프가 사용됩니다. 언 롤링은 메모리를 더 많이 사용하는 경향이 있지만 RNN 속도를 높일 수 있습니다. 언 롤링은 짧은 시퀀스에만 적합합니다.</target>
        </trans-unit>
        <trans-unit id="10915988466dce3b904a66cffd54c76063fef5ef" translate="yes" xml:space="preserve">
          <source>Boolean (default &lt;code&gt;False&lt;/code&gt;). Whether the output should use zeros for the masked timesteps. Note that this field is only used when &lt;code&gt;return_sequences&lt;/code&gt; is True and mask is provided. It can useful if you want to reuse the raw output sequence of the RNN without interference from the masked timesteps, eg, merging bidirectional RNNs.</source>
          <target state="translated">부울 (기본값 &lt;code&gt;False&lt;/code&gt; ). 출력이 마스킹 된 시간 단계에 0을 사용해야하는지 여부입니다. 이 필드는 &lt;code&gt;return_sequences&lt;/code&gt; 가 True이고 마스크가 제공된 경우에만 사용 됩니다. 양방향 RNN 병합과 같이 마스킹 된 시간 단계의 간섭없이 RNN의 원시 출력 시퀀스를 재사용하려는 경우 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="071268ee70ca99a5215803accff31fa066f50a21" translate="yes" xml:space="preserve">
          <source>Boolean (default &lt;code&gt;False&lt;/code&gt;). Whether to return the last output in the output sequence, or the full sequence.</source>
          <target state="translated">부울 (기본값 &lt;code&gt;False&lt;/code&gt; ). 출력 시퀀스의 마지막 출력을 반환할지 아니면 전체 시퀀스를 반환할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="71616098196b63be9a6ca1f0a41e7548a847b4d1" translate="yes" xml:space="preserve">
          <source>Boolean (default &lt;code&gt;False&lt;/code&gt;). Whether to return the last state in addition to the output.</source>
          <target state="translated">부울 (기본값 &lt;code&gt;False&lt;/code&gt; ). 출력과 함께 마지막 상태를 반환할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="276b3936cc98ab230cfe2215e83761990738df75" translate="yes" xml:space="preserve">
          <source>Boolean (default &lt;code&gt;True&lt;/code&gt;), whether the layer uses a bias vector.</source>
          <target state="translated">계층이 편향 벡터를 사용하는지 여부를 나타내는 부울 (기본값 &lt;code&gt;True&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2cd8867df94761a81d9a6de4226e3b8bd607c04b" translate="yes" xml:space="preserve">
          <source>Boolean (default &lt;code&gt;True&lt;/code&gt;). If True, add 1 to the bias of the forget gate at initialization. Setting it to true will also force &lt;code&gt;bias_initializer=&quot;zeros&quot;&lt;/code&gt;. This is recommended in &lt;a href=&quot;http://www.jmlr.org/proceedings/papers/v37/jozefowicz15.pdf&quot;&gt;Jozefowicz et al.&lt;/a&gt;</source>
          <target state="translated">부울 (기본값 &lt;code&gt;True&lt;/code&gt; ). 참이면 초기화시 잊어 버리기 게이트의 바이어스에 1을 더합니다. true로 설정하면 &lt;code&gt;bias_initializer=&quot;zeros&quot;&lt;/code&gt; 도 강제 됩니다 . 이것은 &lt;a href=&quot;http://www.jmlr.org/proceedings/papers/v37/jozefowicz15.pdf&quot;&gt;Jozefowicz 외에서&lt;/a&gt; 권장됩니다 .</target>
        </trans-unit>
        <trans-unit id="c9d0d8e2aa5ab651ec76e4ee7d5bca5520b0eef3" translate="yes" xml:space="preserve">
          <source>Boolean (default &lt;code&gt;True&lt;/code&gt;). If True, add 1 to the bias of the forget gate at initialization. Setting it to true will also force &lt;code&gt;bias_initializer=&quot;zeros&quot;&lt;/code&gt;. This is recommended in &lt;a href=&quot;http://www.jmlr.org/proceedings/papers/v37/jozefowicz15.pdf&quot;&gt;Jozefowicz et al.&lt;/a&gt;.</source>
          <target state="translated">부울 (기본값 &lt;code&gt;True&lt;/code&gt; ). 참이면 초기화시 잊어 버리기 게이트의 바이어스에 1을 더합니다. true로 설정하면 &lt;code&gt;bias_initializer=&quot;zeros&quot;&lt;/code&gt; 도 강제 됩니다 . 이것은 &lt;a href=&quot;http://www.jmlr.org/proceedings/papers/v37/jozefowicz15.pdf&quot;&gt;Jozefowicz 외에서&lt;/a&gt; 권장됩니다 . .</target>
        </trans-unit>
        <trans-unit id="a0e1ba0b5c776e1cc378a79cd609401f81d8c2f4" translate="yes" xml:space="preserve">
          <source>Boolean (default False). If True, process the input sequence backwards and return the reversed sequence.</source>
          <target state="translated">부울 (기본값 False). True이면 입력 시퀀스를 역순으로 처리하고 역순 시퀀스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3e523f66b6c42c57f5930eb90e924eb0be556e43" translate="yes" xml:space="preserve">
          <source>Boolean (default False). If True, process the input sequence backwards.</source>
          <target state="translated">부울 (기본값 False). True이면 입력 시퀀스를 거꾸로 처리합니다.</target>
        </trans-unit>
        <trans-unit id="6a317747dc7c616e9e0e3ff293d4cb9983b911a1" translate="yes" xml:space="preserve">
          <source>Boolean (default False). If True, the last state for each sample at index i in a batch will be used as initial state for the sample of index i in the following batch.</source>
          <target state="translated">부울 (기본값 False). True이면 배치의 인덱스 i에있는 각 샘플의 마지막 상태가 다음 배치의 인덱스 i 샘플에 대한 초기 상태로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d8bd57e97a06dcc1efa9835ccfb8d575f2f3eb1e" translate="yes" xml:space="preserve">
          <source>Boolean (default False). If True, the network will be unrolled, else a symbolic loop will be used. Unrolling can speed-up a RNN, although it tends to be more memory-intensive. Unrolling is only suitable for short sequences.</source>
          <target state="translated">부울 (기본값 False). True이면 네트워크가 풀리고 그렇지 않으면 심볼릭 루프가 사용됩니다. 언 롤링은 메모리를 더 많이 사용하는 경향이 있지만 RNN 속도를 높일 수 있습니다. 언 롤링은 짧은 시퀀스에만 적합합니다.</target>
        </trans-unit>
        <trans-unit id="ba4c07c44349e4f82afff65f7438632df776add2" translate="yes" xml:space="preserve">
          <source>Boolean (default: True).</source>
          <target state="translated">부울 (기본값 : True).</target>
        </trans-unit>
        <trans-unit id="0b6e740adaba1d76459d62323cced8b877f7ddb7" translate="yes" xml:space="preserve">
          <source>Boolean (optional, default: True). If True, clear TensorArray values after reading them. This disables read-many semantics, but allows early release of memory.</source>
          <target state="translated">부울 (선택 사항, 기본값 : True). True이면 TensorArray 값을 읽은 후 지 웁니다. 이렇게하면 읽기-다중 의미 체계가 비활성화되지만 메모리의 조기 릴리스가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="c1d6865eb35fa526dd4c0d6d90e67cc3ad0371ad" translate="yes" xml:space="preserve">
          <source>Boolean (whether to shuffle the training data before each epoch) or str (for 'batch'). This argument is ignored when &lt;code&gt;x&lt;/code&gt; is a generator. 'batch' is a special option for dealing with the limitations of HDF5 data; it shuffles in batch-sized chunks. Has no effect when &lt;code&gt;steps_per_epoch&lt;/code&gt; is not &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">Boolean (각 Epoch 전에 훈련 데이터를 섞을 지 여부) 또는 str ( '배치'의 경우). &lt;code&gt;x&lt;/code&gt; 가 생성자 인 경우이 인수는 무시됩니다 . 'batch'는 HDF5 데이터의 한계를 처리하기위한 특수 옵션입니다. 배치 크기의 청크로 섞입니다. &lt;code&gt;steps_per_epoch&lt;/code&gt; 가 &lt;code&gt;None&lt;/code&gt; 이 아니면 효과 가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="05eba176b7d2b92c6a609ef12867053fcfc21bb7" translate="yes" xml:space="preserve">
          <source>Boolean &lt;code&gt;Tensor&lt;/code&gt;, equal to &lt;code&gt;True&lt;/code&gt; iff &lt;code&gt;x&lt;/code&gt; is non-decreasing.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 가 감소하지 않는 경우 &lt;code&gt;True&lt;/code&gt; 와 동일한 부울 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31fd2852d73c921d0e612baa59feb570fef287d2" translate="yes" xml:space="preserve">
          <source>Boolean &lt;code&gt;Tensor&lt;/code&gt;, equal to &lt;code&gt;True&lt;/code&gt; iff &lt;code&gt;x&lt;/code&gt; is strictly increasing.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 가 엄격하게 증가 하는 &lt;code&gt;True&lt;/code&gt; iff 와 동일한 부울 &lt;code&gt;Tensor&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70c7dfb1c9836af39c96bf0fea4d85557bf18f15" translate="yes" xml:space="preserve">
          <source>Boolean Whether to return the last state in addition to the output. (default False)</source>
          <target state="translated">Boolean 출력과 함께 마지막 상태를 반환할지 여부입니다. (기본값 False)</target>
        </trans-unit>
        <trans-unit id="e5508c51697b71e024f2e1afe041b77de44e98c7" translate="yes" xml:space="preserve">
          <source>Boolean controlling whether a persistent gradient tape is created. False by default, which means at most one call can be made to the gradient() method on this object.</source>
          <target state="translated">영구 그래디언트 테이프를 만들지 여부를 제어하는 ​​부울입니다. 기본적으로 False는이 객체의 gradient () 메서드를 한 번만 호출 할 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="8555932b7fc73a59e143009250ba9c19852f0f09" translate="yes" xml:space="preserve">
          <source>Boolean controlling whether the scope should be created when the template is constructed or when the template is called. Default is False, meaning the scope is created when the template is called.</source>
          <target state="translated">템플릿이 생성 될 때 또는 템플릿이 호출 될 때 범위를 만들어야하는지 여부를 제어하는 ​​부울입니다. 기본값은 False이며 템플릿이 호출 될 때 범위가 생성됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="05690aaacf50efc2b33585c1624e43b17136dc87" translate="yes" xml:space="preserve">
          <source>Boolean controlling whether the tape will automatically &lt;code&gt;watch&lt;/code&gt; any (trainable) variables accessed while the tape is active. Defaults to True meaning gradients can be requested from any result computed in the tape derived from reading a trainable &lt;code&gt;Variable&lt;/code&gt;. If False users must explicitly &lt;code&gt;watch&lt;/code&gt; any &lt;code&gt;Variable&lt;/code&gt;s they want to request gradients from.</source>
          <target state="translated">테이프가 활성 상태 인 동안 액세스 된 (학습 가능한) 변수를 테이프가 자동으로 &lt;code&gt;watch&lt;/code&gt; 할지 여부를 제어하는 ​​부울 입니다. 기본값은 True로 설정되어있어 학습 가능한 &lt;code&gt;Variable&lt;/code&gt; 를 읽어서 파생 된 테이프에서 계산 된 모든 결과에서 그라디언트를 요청할 수 있습니다 . 거짓 사용자가 명시 적으로해야하는 경우 &lt;code&gt;watch&lt;/code&gt; 있는 &lt;code&gt;Variable&lt;/code&gt; 들 그들은에서 요청 그라디언트로합니다.</target>
        </trans-unit>
        <trans-unit id="ff37d99878003a25a62eaef08bda4aa9df374e60" translate="yes" xml:space="preserve">
          <source>Boolean flags do not take any arguments, and their value is either True (1) or False (0). The false value is specified on the command line by prepending the word 'no' to either the long or the short flag name.</source>
          <target state="translated">부울 플래그는 인수를 사용하지 않으며 해당 값은 True (1) 또는 False (0)입니다. 잘못된 값은 'no'라는 단어를 long 또는 short 플래그 이름 앞에 추가하여 명령 행에 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="9931c6c2ccced08c6cdef252871b6dd8410d3f02" translate="yes" xml:space="preserve">
          <source>Boolean indicating whether debug information is saved. If True, then a debug/saved_model_debug_info.pb file will be written with the contents of a GraphDebugInfo binary protocol buffer containing stack trace information for all ops and functions that are saved.</source>
          <target state="translated">디버그 정보가 저장되는지 여부를 나타내는 부울입니다. True 인 경우 저장된 모든 작업 및 함수에 대한 스택 추적 정보를 포함하는 GraphDebugInfo 바이너리 프로토콜 버퍼의 내용과 함께 debug / saved_model_debug_info.pb 파일이 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="30879d4756176f3d9de49d216ae3b95d86bb237a" translate="yes" xml:space="preserve">
          <source>Boolean indicating whether to allow custom operations. When False, any unknown operation is an error. When True, custom ops are created for any op that is unknown. The developer needs to provide these to the TensorFlow Lite runtime with a custom resolver. (default False)</source>
          <target state="translated">사용자 지정 작업을 허용할지 여부를 나타내는 부울입니다. False이면 알 수없는 작업은 오류입니다. True이면 알 수없는 작업에 대해 사용자 지정 작업이 생성됩니다. 개발자는 커스텀 리졸버를 사용하여 TensorFlow Lite 런타임에이를 제공해야합니다. (기본값 False)</target>
        </trans-unit>
        <trans-unit id="d5f819734792a6517b00b44867df27edaa83c0d0" translate="yes" xml:space="preserve">
          <source>Boolean indicating whether to allow custom operations. When false any unknown operation is an error. When true, custom ops are created for any op that is unknown. The developer will need to provide these to the TensorFlow Lite runtime with a custom resolver. (default False)</source>
          <target state="translated">사용자 지정 작업을 허용할지 여부를 나타내는 부울입니다. false이면 알 수없는 작업은 오류입니다. true이면 알 수없는 작업에 대해 사용자 지정 작업이 생성됩니다. 개발자는 커스텀 리졸버를 사용하여 TensorFlow Lite 런타임에이를 제공해야합니다. (기본값 False)</target>
        </trans-unit>
        <trans-unit id="afcb883a7af4e950cc7f4ac9a5ae1592c22f8f5e" translate="yes" xml:space="preserve">
          <source>Boolean indicating whether to drop control dependencies silently. This is due to TFLite not supporting control dependencies. (default True)</source>
          <target state="translated">제어 종속성을 자동으로 삭제할지 여부를 나타내는 부울입니다. 이는 TFLite가 제어 종속성을 지원하지 않기 때문입니다. (기본값 True)</target>
        </trans-unit>
        <trans-unit id="719eb45e07f3e9b2062c7c5d526c191ede3263c1" translate="yes" xml:space="preserve">
          <source>Boolean indicating whether to dump the graph after every graph transformation. (default False)</source>
          <target state="translated">모든 그래프 변환 후 그래프를 덤프할지 여부를 나타내는 부울입니다. (기본값 False)</target>
        </trans-unit>
        <trans-unit id="93f20915ad2b2ee4de996ed1c662ff56861f09a7" translate="yes" xml:space="preserve">
          <source>Boolean indicating whether to lock the writing operation.</source>
          <target state="translated">쓰기 작업을 잠글 지 여부를 나타내는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="fe91fe4ab0b5677996c6d63261c9b39d33e59bce" translate="yes" xml:space="preserve">
          <source>Boolean indicating whether to reorder FakeQuant nodes in unexpected locations. Used when the location of the FakeQuant nodes is preventing graph transformations necessary to convert the graph. Results in a graph that differs from the quantized training graph, potentially causing differing arithmetic behavior. (default False)</source>
          <target state="translated">예상치 못한 위치에서 FakeQuant 노드를 재정렬할지 여부를 나타내는 부울입니다. FakeQuant 노드의 위치가 그래프 변환에 필요한 그래프 변환을 방해 할 때 사용됩니다. 양자화 된 학습 그래프와 다른 그래프가 생성되어 잠재적으로 다른 산술 동작을 유발합니다. (기본값 False)</target>
        </trans-unit>
        <trans-unit id="f35b6746a6a4c4d087011641093cdf3bcd375017" translate="yes" xml:space="preserve">
          <source>Boolean of whether or not to perform a cleanup pass using SIGKILL.</source>
          <target state="translated">SIGKILL을 사용하여 정리 패스를 수행할지 여부에 대한 부울입니다.</target>
        </trans-unit>
        <trans-unit id="0b63ab8ec1034d248038bf7f4cf028f8b158b77a" translate="yes" xml:space="preserve">
          <source>Boolean or &lt;code&gt;None&lt;/code&gt;; if &lt;code&gt;True&lt;/code&gt; and name is set, it would reuse previously created variables. if &lt;code&gt;False&lt;/code&gt; it will create new variables. if &lt;code&gt;None&lt;/code&gt;, it would inherit the parent scope reuse.</source>
          <target state="translated">부울 또는 &lt;code&gt;None&lt;/code&gt; ; 경우 &lt;code&gt;True&lt;/code&gt; 과 이름이 설정되어, 그것은 이전에 생성 된 변수를 재사용 할 것이다. 경우 &lt;code&gt;False&lt;/code&gt; 이 새로운 변수를 생성합니다. 경우 &lt;code&gt;None&lt;/code&gt; , 그것은 부모 범위 재사용을 상속합니다.</target>
        </trans-unit>
        <trans-unit id="a4d9fa9150d96f28d6eb09e5cd26ecfd59b79d39" translate="yes" xml:space="preserve">
          <source>Boolean or list of boolean. For each output, if &lt;code&gt;True&lt;/code&gt;, outputs from all shards are concatenated along the corresponding &lt;code&gt;output_shard_axes&lt;/code&gt; entry. Otherwise, each output is taken from an arbitrary shard. If the argument is a boolean, the argument's value is used for each output.</source>
          <target state="translated">부울 또는 부울 목록. 각 출력에 대해 &lt;code&gt;True&lt;/code&gt; 이면 모든 샤드의 출력이 해당 &lt;code&gt;output_shard_axes&lt;/code&gt; 항목을 따라 연결됩니다 . 그렇지 않으면 각 출력은 임의의 샤드에서 가져옵니다. 인수가 부울이면 각 출력에 인수 값이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="bcfb76f7cca0ad0d9cd0c7f0867d26bc5d9d3ea6" translate="yes" xml:space="preserve">
          <source>Boolean tensor, whether its in training mode, dropout will be ignored in non-training mode.</source>
          <target state="translated">부울 텐서는 훈련 모드에 관계없이 비 훈련 모드에서 드롭 아웃이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="57131588c67cbfd51b051f9b3e103d0ca96d536e" translate="yes" xml:space="preserve">
          <source>Boolean that enables allowing scalars and 1 length vector broadcasting. Cannot be true when verify_shape is true.</source>
          <target state="translated">스칼라 및 1 개 길이의 벡터 브로드 캐스팅을 허용하는 부울입니다. verify_shape가 true이면 true 일 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="1d850c3ab292a344aafd11d45e7752cd16438b43" translate="yes" xml:space="preserve">
          <source>Boolean that enables verification of a shape of values.</source>
          <target state="translated">값의 모양을 확인할 수있는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="ac8c455502ef5112e18477d3c58a93b95e85782f" translate="yes" xml:space="preserve">
          <source>Boolean that enables verification of the shape of &lt;code&gt;value&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt;, the initializer will throw an error if the shape of &lt;code&gt;value&lt;/code&gt; is not compatible with the shape of the initialized tensor.</source>
          <target state="translated">그 모양의 검증 가능 부울 &lt;code&gt;value&lt;/code&gt; . 경우 &lt;code&gt;True&lt;/code&gt; 의 모양 경우 초기화 오류가 발생합니다 &lt;code&gt;value&lt;/code&gt; 초기화 된 텐서의 모양과 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="253b038f29d093437ffba0edbe93e5d72023ef99" translate="yes" xml:space="preserve">
          <source>Boolean to change behavior of min/max ranges for inputs and outputs of the concat operator for quantized models. Changes the ranges of concat operator overlap when true. (default False)</source>
          <target state="translated">양자화 된 모델에 대한 concat 연산자의 입력 및 출력에 대한 최소 / 최대 범위의 동작을 변경하는 부울입니다. true 인 경우 concat 연산자 겹침 범위를 변경합니다. (기본값 False)</target>
        </trans-unit>
        <trans-unit id="6fb160def084317c1839b00eda97edcedc7c531c" translate="yes" xml:space="preserve">
          <source>Boolean, (default &lt;code&gt;True&lt;/code&gt;), whether the layer uses a bias vector.</source>
          <target state="translated">계층이 편향 벡터를 사용하는지 여부를 나타내는 부울 (기본값 &lt;code&gt;True&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="05e50f962edd4a01a4d89a0460602a7c71c1284d" translate="yes" xml:space="preserve">
          <source>Boolean, None, or tf.compat.v1.AUTO_REUSE, setting the reuse in get_variable. When eager execution is enabled this argument is always forced to be False.</source>
          <target state="translated">Boolean, None 또는 tf.compat.v1.AUTO_REUSE, get_variable에서 재사용을 설정합니다. 즉시 실행이 활성화되면이 인수는 항상 False가됩니다.</target>
        </trans-unit>
        <trans-unit id="a874c2c343a3219725eb35dee669c77854e574cf" translate="yes" xml:space="preserve">
          <source>Boolean, if &lt;code&gt;True&lt;/code&gt; also add variables to the graph collection &lt;code&gt;GraphKeys.TRAINABLE_VARIABLES&lt;/code&gt; (see &lt;a href=&quot;../../../variable&quot;&gt;&lt;code&gt;tf.Variable&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">부울, &lt;code&gt;True&lt;/code&gt; 인 경우 그래프 컬렉션 &lt;code&gt;GraphKeys.TRAINABLE_VARIABLES&lt;/code&gt; 에도 변수를 추가합니다 ( &lt;a href=&quot;../../../variable&quot;&gt; &lt;code&gt;tf.Variable&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="532b32804f9c422077ec398d052ffeb8e025b78b" translate="yes" xml:space="preserve">
          <source>Boolean, if &lt;code&gt;True&lt;/code&gt; also add variables to the graph collection &lt;code&gt;GraphKeys.TRAINABLE_VARIABLES&lt;/code&gt; (see tf.Variable).</source>
          <target state="translated">부울, &lt;code&gt;True&lt;/code&gt; 인 경우 그래프 컬렉션 &lt;code&gt;GraphKeys.TRAINABLE_VARIABLES&lt;/code&gt; 에도 변수를 추가합니다 (tf.Variable 참조).</target>
        </trans-unit>
        <trans-unit id="463ed0f7b2064a0ac4eaaad509671dbc66ce8178" translate="yes" xml:space="preserve">
          <source>Boolean, if &lt;code&gt;True&lt;/code&gt; the variables will be marked as trainable.</source>
          <target state="translated">부울, &lt;code&gt;True&lt;/code&gt; 면 변수가 학습 가능으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="63c48e20ca03075f3cddb08031739f8ae5e5b1ea" translate="yes" xml:space="preserve">
          <source>Boolean, if &lt;code&gt;True&lt;/code&gt; the variables will be marked as trainable. Defaults to True.</source>
          <target state="translated">부울, &lt;code&gt;True&lt;/code&gt; 면 변수가 학습 가능으로 표시됩니다. 기본값은 True입니다.</target>
        </trans-unit>
        <trans-unit id="ce88c24c2bcdd20bdd6ace9d42a0bf12d309b254" translate="yes" xml:space="preserve">
          <source>Boolean, if &lt;code&gt;True&lt;/code&gt; the weights of this layer will be marked as trainable (and listed in &lt;code&gt;layer.trainable_weights&lt;/code&gt;).</source>
          <target state="translated">부울, &lt;code&gt;True&lt;/code&gt; 인 경우이 레이어의 가중치는 학습 가능으로 표시되고 &lt;code&gt;layer.trainable_weights&lt;/code&gt; 에 나열됩니다 .</target>
        </trans-unit>
        <trans-unit id="901d1fd8244a15272f6fa8024188f55261f0ccf2" translate="yes" xml:space="preserve">
          <source>Boolean, if True shuffles the queue. Avoid shuffle at prediction time.</source>
          <target state="translated">True 인 경우 부울은 대기열을 섞습니다. 예측 시간에 셔플을 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="48dc3639b0f0e473fdcea065e047def021b1789f" translate="yes" xml:space="preserve">
          <source>Boolean, whether &lt;code&gt;output&lt;/code&gt; is the result of a softmax, or is a tensor of logits.</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; 이 소프트 맥스의 결과 인지 아니면 로짓의 텐서 인지 여부 를 나타내는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="0d5ef668cd8672496407cf004e36bd70f130ab35" translate="yes" xml:space="preserve">
          <source>Boolean, whether or not the input value 0 is a special &quot;padding&quot; value that should be masked out. This is useful when using recurrent layers which may take variable length input. If this is &lt;code&gt;True&lt;/code&gt;, then all subsequent layers in the model need to support masking or an exception will be raised. If mask_zero is set to True, as a consequence, index 0 cannot be used in the vocabulary (input_dim should equal size of vocabulary + 1).</source>
          <target state="translated">입력 값 0이 마스킹되어야하는 특수 &quot;패딩&quot;값인지 여부를 나타내는 부울입니다. 이것은 가변 길이 입력을받을 수있는 반복 레이어를 사용할 때 유용합니다. 이것이 &lt;code&gt;True&lt;/code&gt; 이면 모델의 모든 후속 레이어가 마스킹을 지원해야합니다. 그렇지 않으면 예외가 발생합니다. mask_zero가 True로 설정되면 결과적으로 인덱스 0을 어휘에서 사용할 수 없습니다 (input_dim은 어휘의 크기 + 1과 같아야 함).</target>
        </trans-unit>
        <trans-unit id="6510136b7c3f455c6d07b1b9789759e82e56f3bd" translate="yes" xml:space="preserve">
          <source>Boolean, whether the layer uses a bias vector.</source>
          <target state="translated">계층이 편향 벡터를 사용하는지 여부를 나타내는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="9514354536c076126422bbcadc603410f559fc04" translate="yes" xml:space="preserve">
          <source>Boolean, whether the layer uses a bias.</source>
          <target state="translated">계층이 바이어스를 사용하는지 여부를 나타내는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="a34bf2bb4cc6f1063ecf2dd829c2ec60242bd6b6" translate="yes" xml:space="preserve">
          <source>Boolean, whether the layer's variables should be trainable.</source>
          <target state="translated">계층의 변수가 학습 가능해야하는지 여부를 나타내는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="6dc82b39aa37bdb16e9eca6aa5a795534611dab4" translate="yes" xml:space="preserve">
          <source>Boolean, whether the layer's variables will be updated via gradient descent during training.</source>
          <target state="translated">부울, 레이어의 변수가 훈련 중에 경사 하강 법을 통해 업데이트되는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="eae3640cc3319261aa35401e8de9d2ce8dbb68de" translate="yes" xml:space="preserve">
          <source>Boolean, whether the model should run eagerly.</source>
          <target state="translated">부울, 모델을 열심히 실행해야하는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="8b975cf06ea86b84dbdaafbbb157326bcb168888" translate="yes" xml:space="preserve">
          <source>Boolean, whether the placeholder created is meant to be ragged. In this case, values of 'None' in the 'shape' argument represent ragged dimensions. For more information about RaggedTensors, see &lt;a href=&quot;https://www.tensorflow.org/guide/ragged_tensors&quot;&gt;this guide&lt;/a&gt;. Default to False.</source>
          <target state="translated">생성 된 자리 표시자가 비정형인지 여부를 나타내는 부울입니다. 이 경우 'shape'인수의 'None'값은 비정형 치수를 나타냅니다. RaggedTensors에 대한 자세한 내용은 &lt;a href=&quot;https://www.tensorflow.org/guide/ragged_tensors&quot;&gt;이 가이드를&lt;/a&gt; 참조하십시오 . 기본값은 False입니다.</target>
        </trans-unit>
        <trans-unit id="3e5e3887667e3781ae0ff67da1095043c1f96f1a" translate="yes" xml:space="preserve">
          <source>Boolean, whether the placeholder created is meant to be sparse. Default to False.</source>
          <target state="translated">생성 된 자리 표시자가 희소인지 여부를 나타내는 부울입니다. 기본값은 False입니다.</target>
        </trans-unit>
        <trans-unit id="894ead9ccb0f378af5193afbdc30d5c4fe701d9e" translate="yes" xml:space="preserve">
          <source>Boolean, whether the placeholder should have a ragged type. In this case, values of 'None' in the 'shape' argument represent ragged dimensions. For more information about RaggedTensors, see this &lt;a href=&quot;https://www.tensorflow.org/guide/ragged_tensors&quot;&gt;guide&lt;/a&gt;.</source>
          <target state="translated">자리 표시자가 비정형 유형이어야하는지 여부를 나타내는 부울입니다. 이 경우 'shape'인수의 'None'값은 비정형 치수를 나타냅니다. RaggedTensors에 대한 자세한 내용은이 &lt;a href=&quot;https://www.tensorflow.org/guide/ragged_tensors&quot;&gt;가이드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f19b355f54ad8bae7fe1d929ddd8cbbee962b510" translate="yes" xml:space="preserve">
          <source>Boolean, whether the placeholder should have a sparse type.</source>
          <target state="translated">자리 표시 자에 희소 유형이 있어야하는지 여부를 나타내는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="ad1a70e3622fc3ac90510639ccebb5cc95983832" translate="yes" xml:space="preserve">
          <source>Boolean, whether the variable should be part of the layer's &quot;trainable_variables&quot; (e.g. variables, biases) or &quot;non_trainable_variables&quot; (e.g. BatchNorm mean and variance). Note that &lt;code&gt;trainable&lt;/code&gt; cannot be &lt;code&gt;True&lt;/code&gt; if &lt;code&gt;synchronization&lt;/code&gt; is set to &lt;code&gt;ON_READ&lt;/code&gt;.</source>
          <target state="translated">변수가 레이어의 &quot;trainable_variables&quot;(예 : 변수, 편향) 또는 &quot;non_trainable_variables&quot;(예 : BatchNorm 평균 및 분산)의 일부 여야하는지 여부를 나타내는 부울입니다. 주의 &lt;code&gt;trainable&lt;/code&gt; 될 수 없다 &lt;code&gt;True&lt;/code&gt; 경우 &lt;code&gt;synchronization&lt;/code&gt; 설정되어 &lt;code&gt;ON_READ&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c333cdb305bab08cec4f1bc2f9b6d1f3682b2426" translate="yes" xml:space="preserve">
          <source>Boolean, whether to compile the model after loading.</source>
          <target state="translated">부울,로드 후 모델 컴파일 여부.</target>
        </trans-unit>
        <trans-unit id="d52f2b028d592a763ace2d8fb1b36089b95f46e8" translate="yes" xml:space="preserve">
          <source>Boolean, whether to include the fully-connected layer at the top of the network. Defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">부울, 네트워크 상단에 완전 연결 계층을 포함할지 여부입니다. 기본값은 &lt;code&gt;True&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="be6f86b2b70b5a42ba11a6e59c2bfbec30bd116f" translate="yes" xml:space="preserve">
          <source>Boolean, whether to include the fully-connected layer at the top, as the last layer of the network. Default to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">네트워크의 마지막 계층으로 맨 위에 완전 연결 계층을 포함할지 여부를 나타내는 부울입니다. 기본값은 &lt;code&gt;True&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c5ace9c4d4727dc3ced3f3d7e225c3500643e40a" translate="yes" xml:space="preserve">
          <source>Boolean, whether to load weights by name or by topological order. Only topological loading is supported for weight files in TensorFlow format.</source>
          <target state="translated">이름 또는 토폴로지 순서로 가중치를로드할지 여부를 나타내는 부울입니다. TensorFlow 형식의 가중치 파일에는 토폴로지로드 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="1e41991f03a6dac313a409ca9cd1f0236dd1b342" translate="yes" xml:space="preserve">
          <source>Boolean, whether to reuse the weights of a previous layer by the same name.</source>
          <target state="translated">Boolean, 동일한 이름으로 이전 레이어의 가중치를 재사용할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="b78b20669aa9f6bf8082862a183b9d5cd760e9cf" translate="yes" xml:space="preserve">
          <source>Boolean, whether to run an extra untimed iteration and store the trace of iteration in returned extras. The trace will be stored as a string in Google Chrome trace format in the extras field &quot;full_trace_chrome_format&quot;. Note that trace will not be stored in test_log_pb2.TestResults proto.</source>
          <target state="translated">시간이 지정되지 않은 추가 반복을 실행하고 반환 된 추가 항목에 반복 추적을 저장할지 여부를 나타내는 부울입니다. 추적은 추가 필드 &quot;full_trace_chrome_format&quot;에 Google Chrome 추적 형식의 문자열로 저장됩니다. 추적은 test_log_pb2.TestResults proto에 저장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="10ba3eb665f723457e3beca92013e48fb6cdbc70" translate="yes" xml:space="preserve">
          <source>Boolean, whether to run an extra untimed iteration, calculate memory usage, and store that in extras fields.</source>
          <target state="translated">시간이 지정되지 않은 추가 반복을 실행하고, 메모리 사용량을 계산하고,이를 추가 필드에 저장할지 여부를 나타내는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="19ecc86190d810f42422181a9440415027240673" translate="yes" xml:space="preserve">
          <source>Boolean, whether to shuffle the data between epochs.</source>
          <target state="translated">부울, 에포크간에 데이터를 섞을 지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="9dfea623792cf5febc237f6cc9bb77c4504c9b59" translate="yes" xml:space="preserve">
          <source>Boolean, whether to skip loading of layers where there is a mismatch in the number of weights, or a mismatch in the shape of the weight (only valid when &lt;code&gt;by_name=True&lt;/code&gt;).</source>
          <target state="translated">부울, 가중치 수가 일치하지 않거나 가중치 모양이 일치하지 않는 레이어로드를 건너 뛸지 여부 ( &lt;code&gt;by_name=True&lt;/code&gt; 인 경우에만 유효 함 ).</target>
        </trans-unit>
        <trans-unit id="f1c69f6a1e90eb17a17b8cbdc576a4c5f54928af" translate="yes" xml:space="preserve">
          <source>Boolean, whether to validate image filenames in &lt;code&gt;x_col&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt;, invalid images will be ignored. Disabling this option can lead to speed-up in the execution of this function. Defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">부울, &lt;code&gt;x_col&lt;/code&gt; 에서 이미지 파일 이름의 유효성을 검사할지 여부 . 경우 &lt;code&gt;True&lt;/code&gt; , 유효하지 않은 이미지는 무시됩니다. 이 옵션을 비활성화하면이 기능의 실행 속도가 빨라질 수 있습니다. 기본값은 &lt;code&gt;True&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b2fa7f746a4b7ecc8ca1c8a186092783166f6bf3" translate="yes" xml:space="preserve">
          <source>Boolean. Allow variable dimensions in input shapes. The given dimensions are padded upon dequeue so that tensors within a batch have the same shapes.</source>
          <target state="translated">부울. 입력 모양에 가변 치수를 허용합니다. 지정된 차원은 대기열에서 빼기시 패딩되므로 배치 내의 텐서가 동일한 모양을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="9b862b011fc9bcb6f9fca5a26ec2bc8adadb0ba9" translate="yes" xml:space="preserve">
          <source>Boolean. Apply ZCA whitening.</source>
          <target state="translated">부울. ZCA 미백을 바릅니다.</target>
        </trans-unit>
        <trans-unit id="1e9e0481d31a99f817dede8463442d722221abdb" translate="yes" xml:space="preserve">
          <source>Boolean. Currently only applies to TPUStrategy. Defaults to True. If True, dataset elements will be prefetched to accelerator device memory. When False, dataset elements are prefetched to host device memory. Must be False when using TPUEmbedding API.</source>
          <target state="translated">부울. 현재 TPUStrategy에만 적용됩니다. 기본값은 True입니다. True 인 경우 데이터 세트 요소가 가속기 장치 메모리로 프리 페치됩니다. False이면 데이터 세트 요소가 호스트 장치 메모리로 프리 페치됩니다. TPUEmbedding API를 사용할 때는 False 여야합니다.</target>
        </trans-unit>
        <trans-unit id="46968406f3a2e656fcf7a662bc8cfba66ad6d852" translate="yes" xml:space="preserve">
          <source>Boolean. Default: False. If True, repeated labels are collapsed prior to the CTC calculation.</source>
          <target state="translated">부울. 기본값 : False. True이면 CTC 계산 전에 반복 된 레이블이 축소됩니다.</target>
        </trans-unit>
        <trans-unit id="e4a2eb72e9f6e237ab4e66297917afce045306cc" translate="yes" xml:space="preserve">
          <source>Boolean. Default: False. If True, sequences with longer outputs than inputs will be ignored.</source>
          <target state="translated">부울. 기본값 : False. True 인 경우 입력보다 출력이 긴 시퀀스는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="24dd316e5e19384e34f83df534a48babba726fd9" translate="yes" xml:space="preserve">
          <source>Boolean. Default: True.</source>
          <target state="translated">부울. 기본값 : True.</target>
        </trans-unit>
        <trans-unit id="49e2281205c2e9a0600ef1bb22ca68ab42c1177a" translate="yes" xml:space="preserve">
          <source>Boolean. Defaults to True. If False, the return value will be unwrapped.</source>
          <target state="translated">부울. 기본값은 True입니다. False이면 반환 값이 풀립니다.</target>
        </trans-unit>
        <trans-unit id="b037c416958f50e9e3e31f19065a6ed864c76554" translate="yes" xml:space="preserve">
          <source>Boolean. Divide each input by its std.</source>
          <target state="translated">부울. 각 입력을 표준으로 나눕니다.</target>
        </trans-unit>
        <trans-unit id="b044c872613879a0db88bf7246d8c65a31cd34eb" translate="yes" xml:space="preserve">
          <source>Boolean. Divide inputs by std of the dataset, feature-wise.</source>
          <target state="translated">부울. 특성별로 입력을 데이터 세트의 표준으로 나눕니다.</target>
        </trans-unit>
        <trans-unit id="8cb7eadd607fbccdd8ac4144dcc67173b91a948b" translate="yes" xml:space="preserve">
          <source>Boolean. If &lt;code&gt;True&lt;/code&gt; decay the learning rate at discrete intervals</source>
          <target state="translated">부울. 경우 &lt;code&gt;True&lt;/code&gt; 이산 간격으로 학습 속도를 붕괴</target>
        </trans-unit>
        <trans-unit id="982e220e20823d1e05625f001e56462f97b7f4dc" translate="yes" xml:space="preserve">
          <source>Boolean. If &lt;code&gt;True&lt;/code&gt; make the threads daemon threads.</source>
          <target state="translated">부울. 만약 &lt;code&gt;True&lt;/code&gt; 메이크업 스레드 데몬 스레드.</target>
        </trans-unit>
        <trans-unit id="66b3e5da94e1301adce5d65da76f8e423e77b661" translate="yes" xml:space="preserve">
          <source>Boolean. If &lt;code&gt;True&lt;/code&gt; starts the threads. If &lt;code&gt;False&lt;/code&gt; the caller must call the &lt;code&gt;start()&lt;/code&gt; method of the returned threads.</source>
          <target state="translated">부울. 경우 &lt;code&gt;True&lt;/code&gt; 스레드를 시작합니다. 만약 &lt;code&gt;False&lt;/code&gt; 호출자가 호출해야합니다 &lt;code&gt;start()&lt;/code&gt; 반환 된 스레드의 방법을.</target>
        </trans-unit>
        <trans-unit id="c378507e3e396e98d03011d2d039dfc60b1a41e6" translate="yes" xml:space="preserve">
          <source>Boolean. If &lt;code&gt;True&lt;/code&gt;, default-valued attributes will be removed from the &lt;code&gt;NodeDef&lt;/code&gt;s. For a detailed guide, see &lt;a href=&quot;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/README.md#stripping-default-valued-attributes&quot;&gt;Stripping Default-Valued Attributes&lt;/a&gt;.</source>
          <target state="translated">부울. 경우 &lt;code&gt;True&lt;/code&gt; , 기본 값 속성은 제거됩니다 &lt;code&gt;NodeDef&lt;/code&gt; 의. 자세한 가이드는 &lt;a href=&quot;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/README.md#stripping-default-valued-attributes&quot;&gt;기본 값 속성 제거를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0bb024ef334fc3e0d1a29752928f494d49336adb" translate="yes" xml:space="preserve">
          <source>Boolean. If &lt;code&gt;True&lt;/code&gt;, default-valued attributes will be removed from the NodeDefs. For a detailed guide, see &lt;a href=&quot;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/README.md#stripping-default-valued-attributes&quot;&gt;Stripping Default-Valued Attributes&lt;/a&gt;.</source>
          <target state="translated">부울. 경우 &lt;code&gt;True&lt;/code&gt; , 기본 값 속성은 NodeDefs에서 제거됩니다. 자세한 가이드는 &lt;a href=&quot;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/README.md#stripping-default-valued-attributes&quot;&gt;기본 값 속성 제거를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6c00ffa4bb4f3d8097708ded0ebd3bcd0f5fef39" translate="yes" xml:space="preserve">
          <source>Boolean. If &lt;code&gt;True&lt;/code&gt;, gradients are normalized by the estimated variance of the gradient; if False, by the uncentered second moment. Setting this to &lt;code&gt;True&lt;/code&gt; may help with training, but is slightly more expensive in terms of computation and memory. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">부울. 경우 &lt;code&gt;True&lt;/code&gt; , 그라데이션은 그라데이션의 추정 분산으로 정규화된다; 거짓이면 중심이 맞지 않는 두 번째 순간까지. &lt;code&gt;True&lt;/code&gt; 로 설정하면 학습에 도움 이 될 수 있지만 계산 및 메모리 측면에서 약간 더 비쌉니다. 기본값은 &lt;code&gt;False&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="822230397d01c4631d6b4ee8eef54f53381afc42" translate="yes" xml:space="preserve">
          <source>Boolean. If True, add 1 to the bias of the forget gate at initialization. Setting it to true will also force &lt;code&gt;bias_initializer=&quot;zeros&quot;&lt;/code&gt;. This is recommended in &lt;a href=&quot;http://www.jmlr.org/proceedings/papers/v37/jozefowicz15.pdf&quot;&gt;Jozefowicz et al., 2015&lt;/a&gt;</source>
          <target state="translated">부울. 참이면 초기화시 잊어 버리기 게이트의 바이어스에 1을 더합니다. true로 설정하면 &lt;code&gt;bias_initializer=&quot;zeros&quot;&lt;/code&gt; 도 강제 됩니다 . 이것은 &lt;a href=&quot;http://www.jmlr.org/proceedings/papers/v37/jozefowicz15.pdf&quot;&gt;Jozefowicz et al., 2015&lt;/a&gt; 에서 권장됩니다 .</target>
        </trans-unit>
        <trans-unit id="b67c2d43c7e0f9f977e66db39356210a71dd90a9" translate="yes" xml:space="preserve">
          <source>Boolean. If True, add 1 to the bias of the forget gate at initialization. Setting it to true will also force &lt;code&gt;bias_initializer=&quot;zeros&quot;&lt;/code&gt;. This is recommended in &lt;a href=&quot;http://www.jmlr.org/proceedings/papers/v37/jozefowicz15.pdf&quot;&gt;Jozefowicz et al., 2015&lt;/a&gt;.</source>
          <target state="translated">부울. 참이면 초기화시 잊어 버리기 게이트의 바이어스에 1을 더합니다. true로 설정하면 &lt;code&gt;bias_initializer=&quot;zeros&quot;&lt;/code&gt; 도 강제 됩니다 . 이것은 &lt;a href=&quot;http://www.jmlr.org/proceedings/papers/v37/jozefowicz15.pdf&quot;&gt;Jozefowicz et al., 2015&lt;/a&gt; 에서 권장됩니다 .</target>
        </trans-unit>
        <trans-unit id="eadea5df01b518eb30f655fc476d8cd0919b4a58" translate="yes" xml:space="preserve">
          <source>Boolean. If True, add 1 to the bias of the forget gate at initialization. Setting it to true will also force &lt;code&gt;bias_initializer=&quot;zeros&quot;&lt;/code&gt;. This is recommended in &lt;a href=&quot;http://www.jmlr.org/proceedings/papers/v37/jozefowicz15.pdf&quot;&gt;Jozefowicz et al.&lt;/a&gt;</source>
          <target state="translated">부울. 참이면 초기화시 잊어 버리기 게이트의 바이어스에 1을 더합니다. true로 설정하면 &lt;code&gt;bias_initializer=&quot;zeros&quot;&lt;/code&gt; 도 강제 됩니다 . 이것은 &lt;a href=&quot;http://www.jmlr.org/proceedings/papers/v37/jozefowicz15.pdf&quot;&gt;Jozefowicz 외에서&lt;/a&gt; 권장됩니다 .</target>
        </trans-unit>
        <trans-unit id="fc6d665da9e26ef1a58d658c52b835bab0343012" translate="yes" xml:space="preserve">
          <source>Boolean. If True, add 1 to the bias of the forget gate at initialization. Use in combination with &lt;code&gt;bias_initializer=&quot;zeros&quot;&lt;/code&gt;. This is recommended in &lt;a href=&quot;http://www.jmlr.org/proceedings/papers/v37/jozefowicz15.pdf&quot;&gt;Jozefowicz et al., 2015&lt;/a&gt;</source>
          <target state="translated">부울. 참이면 초기화시 잊어 버리기 게이트의 바이어스에 1을 더합니다. &lt;code&gt;bias_initializer=&quot;zeros&quot;&lt;/code&gt; 와 함께 사용하십시오 . 이것은 &lt;a href=&quot;http://www.jmlr.org/proceedings/papers/v37/jozefowicz15.pdf&quot;&gt;Jozefowicz et al., 2015&lt;/a&gt; 에서 권장됩니다 .</target>
        </trans-unit>
        <trans-unit id="850c37d0c574b55781f1f1b48682c775e7da23a7" translate="yes" xml:space="preserve">
          <source>Boolean. If True, do the iteration over the time dimension in reverse order and return the reversed sequence.</source>
          <target state="translated">부울. True 인 경우 시간 차원에 대해 역순으로 반복을 수행하고 역순을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e2fdb9b5dcfc6979649a9f73fd87bdc2ffb99a0c" translate="yes" xml:space="preserve">
          <source>Boolean. If True, the output for masked timestep will be zeros, whereas in the False case, output from previous timestep is returned.</source>
          <target state="translated">부울. True 인 경우 마스킹 된 타임 스텝의 출력은 0이되고 False 인 경우 이전 타임 스텝의 출력이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="64ebfefbd1ec5096d77323f1898116f2d4cb4e38" translate="yes" xml:space="preserve">
          <source>Boolean. If true, returns a &lt;code&gt;SparseTensor&lt;/code&gt; instead of a dense &lt;code&gt;Tensor&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">부울. true이면 조밀 한 &lt;code&gt;Tensor&lt;/code&gt; 대신 &lt;code&gt;SparseTensor&lt;/code&gt; 를 반환합니다 . 기본값은 &lt;code&gt;False&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c078ad33c99944759d84a3705c8bbe8d165a4d8c" translate="yes" xml:space="preserve">
          <source>Boolean. If true, the inputs and outputs will be in shape &lt;code&gt;(timesteps, batch, ...)&lt;/code&gt;, whereas in the False case, it will be &lt;code&gt;(batch, timesteps, ...)&lt;/code&gt;. Using &lt;code&gt;time_major = True&lt;/code&gt; is a bit more efficient because it avoids transposes at the beginning and end of the RNN calculation. However, most TensorFlow data is batch-major, so by default this function accepts input and emits output in batch-major form.</source>
          <target state="translated">부울. 참이면 입력과 출력이 형태 &lt;code&gt;(timesteps, batch, ...)&lt;/code&gt; 가되고 False이면 &lt;code&gt;(batch, timesteps, ...)&lt;/code&gt; 됩니다. &lt;code&gt;time_major = True&lt;/code&gt; 사용 하면 RNN 계산의 시작과 끝에서 전치를 피할 수 있으므로 좀 더 효율적입니다. 그러나 대부분의 TensorFlow 데이터는 배치 주형이므로 기본적으로이 함수는 입력을 받아들이고 배치 주 형식으로 출력을 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="c389abc5d93ec9098551bef7766ec611e8507560" translate="yes" xml:space="preserve">
          <source>Boolean. If true, the integers are randomly shuffled within each epoch.</source>
          <target state="translated">부울. 참이면 정수는 각 세대 내에서 무작위로 섞입니다.</target>
        </trans-unit>
        <trans-unit id="ba69cf12e53f23b35f7384c75b4bc76d1aee8e88" translate="yes" xml:space="preserve">
          <source>Boolean. If true, the strings are randomly shuffled within each epoch.</source>
          <target state="translated">부울. 참이면 문자열이 각 에포크 내에서 무작위로 섞입니다.</target>
        </trans-unit>
        <trans-unit id="ba9f4a469cc56321b0b85e639b41f16c55cd6c97" translate="yes" xml:space="preserve">
          <source>Boolean. Only applies to TPUStrategy. Default to False. If True, TPUStrategy will automatic bucketize inputs passed into &lt;code&gt;run&lt;/code&gt; if the input shape is dynamic. This is a performance optimization to reduce XLA recompilation, which should not have impact on correctness.</source>
          <target state="translated">부울. TPUStrategy에만 적용됩니다. 기본값은 False입니다. True이면 TPUStrategy는 입력 형태가 동적이면 &lt;code&gt;run&lt;/code&gt; 전달 된 입력을 자동으로 버킷 화 합니다. 이는 정확성에 영향을주지 않아야하는 XLA 재 컴파일을 줄이기위한 성능 최적화입니다.</target>
        </trans-unit>
        <trans-unit id="3ec67f9fb0dbed76ac2590949f279b15f430651b" translate="yes" xml:space="preserve">
          <source>Boolean. Only applies to TPUStrategy. Default to True. If True, TPUStrategy will enable dynamic padder to support dynamic batch size for the inputs. Otherwise only static shape inputs are allowed.</source>
          <target state="translated">부울. TPUStrategy에만 적용됩니다. 기본값은 True입니다. True 인 경우 TPUStrategy는 입력에 대한 동적 배치 크기를 지원하도록 동적 패더를 활성화합니다. 그렇지 않으면 정적 모양 입력 만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="6a575cb15d4fa682cbd7d7cd45f16b6a89e0fcd1" translate="yes" xml:space="preserve">
          <source>Boolean. Randomly flip inputs horizontally.</source>
          <target state="translated">부울. 입력을 가로로 무작위로 뒤집습니다.</target>
        </trans-unit>
        <trans-unit id="d310ac3f63041c0d5f1489e9ea71c6aa52e90961" translate="yes" xml:space="preserve">
          <source>Boolean. Randomly flip inputs vertically.</source>
          <target state="translated">부울. 입력을 수직으로 무작위로 뒤집습니다.</target>
        </trans-unit>
        <trans-unit id="7d29c66df6f7f6fd2c7fd074cf010e0bc1db1413" translate="yes" xml:space="preserve">
          <source>Boolean. Set each sample mean to 0.</source>
          <target state="translated">부울. 각 표본 평균을 0으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="635f023f13cf8c5a858811e58e7ec032a27d8cf4" translate="yes" xml:space="preserve">
          <source>Boolean. Set input mean to 0 over the dataset, feature-wise.</source>
          <target state="translated">부울. 데이터 집합에 대해 특성별로 입력 평균을 0으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="3cf7e0fc7f282045461af2cfe4120b0d7ef109a5" translate="yes" xml:space="preserve">
          <source>Boolean. Set to &lt;code&gt;True&lt;/code&gt; for decoder self-attention. Adds a mask such that position &lt;code&gt;i&lt;/code&gt; cannot attend to positions &lt;code&gt;j &amp;gt; i&lt;/code&gt;. This prevents the flow of information from the future towards the past.</source>
          <target state="translated">부울. 디코더 자체주의를 위해 &lt;code&gt;True&lt;/code&gt; 로 설정합니다 . 위치 &lt;code&gt;i&lt;/code&gt; 가 위치 &lt;code&gt;j &amp;gt; i&lt;/code&gt; 참석할 수 없도록 마스크를 추가합니다 . 이것은 미래에서 과거로의 정보 흐름을 방지합니다.</target>
        </trans-unit>
        <trans-unit id="c0440b6162caf19803beca0cfb781b9ae15cfbf1" translate="yes" xml:space="preserve">
          <source>Boolean. True: append if file exists (useful for continuing training). False: overwrite existing file.</source>
          <target state="translated">부울. True : 파일이 있으면 추가합니다 (계속 교육에 유용함). False : 기존 파일을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="4db36658a363fd8d00b399740ef3ea9cc5795568" translate="yes" xml:space="preserve">
          <source>Boolean. Used for generator or &lt;a href=&quot;../utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; input only. If &lt;code&gt;True&lt;/code&gt;, use process-based threading. If unspecified, &lt;code&gt;use_multiprocessing&lt;/code&gt; will default to &lt;code&gt;False&lt;/code&gt;. Note that because this implementation relies on multiprocessing, you should not pass non-picklable arguments to the generator as they can't be passed easily to children processes.</source>
          <target state="translated">부울. 생성기 또는 &lt;a href=&quot;../utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt; 입력에만 사용됩니다. 경우 &lt;code&gt;True&lt;/code&gt; , 사용 스레딩을 프로세스 기반. 지정되지 않은 경우 &lt;code&gt;use_multiprocessing&lt;/code&gt; 은 기본적으로 &lt;code&gt;False&lt;/code&gt; 로 설정됩니다 . 이 구현은 다중 처리에 의존하기 때문에 선택 불가능한 인수는 자식 프로세스에 쉽게 전달할 수 없으므로 생성자에 전달해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="30885bd2317bb41c6e4a8d9e28a417cef165cf71" translate="yes" xml:space="preserve">
          <source>Boolean. Used for generator or &lt;a href=&quot;utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; input only. If &lt;code&gt;True&lt;/code&gt;, use process-based threading. If unspecified, &lt;code&gt;use_multiprocessing&lt;/code&gt; will default to &lt;code&gt;False&lt;/code&gt;. Note that because this implementation relies on multiprocessing, you should not pass non-picklable arguments to the generator as they can't be passed easily to children processes.</source>
          <target state="translated">부울. 생성기 또는 &lt;a href=&quot;utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt; 입력에만 사용됩니다. 경우 &lt;code&gt;True&lt;/code&gt; , 사용 스레딩을 프로세스 기반. 지정되지 않은 경우 &lt;code&gt;use_multiprocessing&lt;/code&gt; 은 기본적으로 &lt;code&gt;False&lt;/code&gt; 로 설정됩니다 . 이 구현은 다중 처리에 의존하기 때문에 선택 불가능한 인수는 자식 프로세스에 쉽게 전달할 수 없으므로 생성자에 전달해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="e9df9b9380ecc046fbbebad0c2223735548d5fc9" translate="yes" xml:space="preserve">
          <source>Boolean. Whether to apply AMSGrad variant of this algorithm from the paper &quot;On the Convergence of Adam and beyond&quot;. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">부울. &quot;On the Convergence of Adam and beyond&quot;논문에서이 알고리즘의 AMSGrad 변형을 적용할지 여부. 기본값은 &lt;code&gt;False&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="78354e314b49a04b573dd3c128c589e26120754c" translate="yes" xml:space="preserve">
          <source>Boolean. Whether to return the last output in the output sequence, or the full sequence.</source>
          <target state="translated">부울. 출력 시퀀스의 마지막 출력을 반환할지 아니면 전체 시퀀스를 반환할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="03c68e1edeaf3d1b581c9a7887fd69624e01f0a2" translate="yes" xml:space="preserve">
          <source>Boolean. Whether to return the last output in the output sequence, or the full sequence. (default False)</source>
          <target state="translated">부울. 출력 시퀀스의 마지막 출력을 반환할지 아니면 전체 시퀀스를 반환할지 여부입니다. (기본값 False)</target>
        </trans-unit>
        <trans-unit id="14b0fc724085bef8325ccb5373e6484cb76076de" translate="yes" xml:space="preserve">
          <source>Boolean. Whether to return the last output in the output sequence, or the full sequence. Default: &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">부울. 출력 시퀀스의 마지막 출력을 반환할지 아니면 전체 시퀀스를 반환할지 여부입니다. 기본값 : &lt;code&gt;False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a3a25d856b9d9a28c4dd0b535ad035fef426fcd" translate="yes" xml:space="preserve">
          <source>Boolean. Whether to return the last output. in the output sequence, or the full sequence.</source>
          <target state="translated">부울. 마지막 출력을 반환할지 여부입니다. 출력 시퀀스 또는 전체 시퀀스에서.</target>
        </trans-unit>
        <trans-unit id="51432da169b51f25b590016e6dc660b4189f2b85" translate="yes" xml:space="preserve">
          <source>Boolean. Whether to return the last output. in the output sequence, or the full sequence. Default: &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">부울. 마지막 출력을 반환할지 여부입니다. 출력 시퀀스 또는 전체 시퀀스에서. 기본값 : &lt;code&gt;False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db4e1774eb35adabf0b7ea5335e62b326dabb734" translate="yes" xml:space="preserve">
          <source>Boolean. Whether to return the last state in addition to the output.</source>
          <target state="translated">부울. 출력과 함께 마지막 상태를 반환할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="880bfee903ee4d15d9905abb292ef405c2f29292" translate="yes" xml:space="preserve">
          <source>Boolean. Whether to return the last state in addition to the output. Default: &lt;code&gt;False&lt;/code&gt;</source>
          <target state="translated">부울. 출력과 함께 마지막 상태를 반환할지 여부입니다. 기본값 : &lt;code&gt;False&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="45dd4f0c9b025d0a5f0d13ddc7faf48976b1ba29" translate="yes" xml:space="preserve">
          <source>Boolean. Whether to return the last state in addition to the output. Default: &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">부울. 출력과 함께 마지막 상태를 반환할지 여부입니다. 기본값 : &lt;code&gt;False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f22e64dc39491e49efb35b01c8be2be24003ccf1" translate="yes" xml:space="preserve">
          <source>Boolean. Whether to run functions eagerly.</source>
          <target state="translated">부울. 기능을 열심히 실행할지 여부.</target>
        </trans-unit>
        <trans-unit id="c2cedd4d7e09b6e229bac148142197b52e560dd4" translate="yes" xml:space="preserve">
          <source>Boolean; whether the request should be sent as &lt;code&gt;&quot;application/json&quot;&lt;/code&gt;.</source>
          <target state="translated">부울; 요청이 &lt;code&gt;&quot;application/json&quot;&lt;/code&gt; 로 전송되어야하는지 여부 .</target>
        </trans-unit>
        <trans-unit id="ef250cc121f9a0c70737aae619bbcea0e3fca625" translate="yes" xml:space="preserve">
          <source>Boosted trees using Estimators</source>
          <target state="translated">추정기를 사용하여 부스트 트리</target>
        </trans-unit>
        <trans-unit id="c685795e771ac49f19a0226cd5cd9edabb94d68a" translate="yes" xml:space="preserve">
          <source>BoostedTreesAggregateStats</source>
          <target state="translated">BoostedTreesAggregateStats</target>
        </trans-unit>
        <trans-unit id="e4d4da5fd2dd2ace22ffd34c6caf243aea9bd8a3" translate="yes" xml:space="preserve">
          <source>BoostedTreesBucketize</source>
          <target state="translated">BoostedTreesBucketize</target>
        </trans-unit>
        <trans-unit id="32b4e8d09bcd01d0a5028b64b60e6c8a36afdbaa" translate="yes" xml:space="preserve">
          <source>BoostedTreesCalculateBestFeatureSplit</source>
          <target state="translated">BoostedTreesCalculateBestFeatureSplit</target>
        </trans-unit>
        <trans-unit id="bd127b37857e99c7625a55db8b239790c146a0fc" translate="yes" xml:space="preserve">
          <source>BoostedTreesCalculateBestFeatureSplitV2</source>
          <target state="translated">BoostedTreesCalculateBestFeatureSplitV2</target>
        </trans-unit>
        <trans-unit id="40521b939647376f2fb2109a09d63af7f335a1a7" translate="yes" xml:space="preserve">
          <source>BoostedTreesCalculateBestGainsPerFeature</source>
          <target state="translated">BoostedTreesCalculateBestGainsPerFeature</target>
        </trans-unit>
        <trans-unit id="81a02e6bb29489e203be23f80187bb1a8ce8754b" translate="yes" xml:space="preserve">
          <source>BoostedTreesCenterBias</source>
          <target state="translated">BoostedTreesCenterBias</target>
        </trans-unit>
        <trans-unit id="066ad8e2247020300370e981e88bda3064891dba" translate="yes" xml:space="preserve">
          <source>BoostedTreesCreateEnsemble</source>
          <target state="translated">BoostedTreesCreateEnsemble</target>
        </trans-unit>
        <trans-unit id="a1432dbbf7fb5431d120a00c5db5404303bb03b7" translate="yes" xml:space="preserve">
          <source>BoostedTreesCreateQuantileStreamResource</source>
          <target state="translated">BoostedTreesCreateQuantileStreamResource</target>
        </trans-unit>
        <trans-unit id="e1c3c1587c8f2f22885556e506c8ab695b836ef8" translate="yes" xml:space="preserve">
          <source>BoostedTreesDeserializeEnsemble</source>
          <target state="translated">BoostedTreesDeserializeEnsemble</target>
        </trans-unit>
        <trans-unit id="c8f931381d7b1245c335e8eb6512a0e9d6ec305c" translate="yes" xml:space="preserve">
          <source>BoostedTreesEnsembleResourceHandleOp</source>
          <target state="translated">BoostedTreesEnsembleResourceHandleOp</target>
        </trans-unit>
        <trans-unit id="bd089de33bcf2d2a156bb46ec9b51ccc5819d5ea" translate="yes" xml:space="preserve">
          <source>BoostedTreesExampleDebugOutputs</source>
          <target state="translated">BoostedTreesExampleDebugOutputs</target>
        </trans-unit>
        <trans-unit id="2ed6d9ca32a856a0bbbaea27c89c42d83d375175" translate="yes" xml:space="preserve">
          <source>BoostedTreesFlushQuantileSummaries</source>
          <target state="translated">BoostedTreesFlushQuantileSummaries</target>
        </trans-unit>
        <trans-unit id="d203f29aac56fed3bf27e164f9c881ffef5a7d1f" translate="yes" xml:space="preserve">
          <source>BoostedTreesGetEnsembleStates</source>
          <target state="translated">BoostedTreesGetEnsembleStates</target>
        </trans-unit>
        <trans-unit id="a49d3c0b25d8e5fcbe1f05638e88e05107d4dc12" translate="yes" xml:space="preserve">
          <source>BoostedTreesMakeQuantileSummaries</source>
          <target state="translated">BoostedTreesMakeQuantileSummaries</target>
        </trans-unit>
        <trans-unit id="bfd3800e48ff2287c768e9f4303f66036ee679c7" translate="yes" xml:space="preserve">
          <source>BoostedTreesMakeStatsSummary</source>
          <target state="translated">BoostedTreesMakeStatsSummary</target>
        </trans-unit>
        <trans-unit id="963cec9df7a5e4289aa525fe983604b8bc8f885c" translate="yes" xml:space="preserve">
          <source>BoostedTreesPredict</source>
          <target state="translated">BoostedTreesPredict</target>
        </trans-unit>
        <trans-unit id="53531b30ba25d123925692ffeaeeae8f3f0371a3" translate="yes" xml:space="preserve">
          <source>BoostedTreesQuantileStreamResourceAddSummaries</source>
          <target state="translated">BoostedTreesQuantileStreamResourceAddSummaries</target>
        </trans-unit>
        <trans-unit id="861cff6586f5c90365623a91384623c782e3b8fa" translate="yes" xml:space="preserve">
          <source>BoostedTreesQuantileStreamResourceDeserialize</source>
          <target state="translated">BoostedTreesQuantileStreamResourceDeserialize</target>
        </trans-unit>
        <trans-unit id="105732ebf07865152618f16064955cb1fd219917" translate="yes" xml:space="preserve">
          <source>BoostedTreesQuantileStreamResourceFlush</source>
          <target state="translated">BoostedTreesQuantileStreamResourceFlush</target>
        </trans-unit>
        <trans-unit id="5431c4a279775b052babd24537030ae709634a62" translate="yes" xml:space="preserve">
          <source>BoostedTreesQuantileStreamResourceGetBucketBoundaries</source>
          <target state="translated">BoostedTreesQuantileStreamResourceGetBucketBoundaries</target>
        </trans-unit>
        <trans-unit id="828b3942689ef8f2e4bdcc1b238f19ff92ee81f4" translate="yes" xml:space="preserve">
          <source>BoostedTreesQuantileStreamResourceHandleOp</source>
          <target state="translated">BoostedTreesQuantileStreamResourceHandleOp</target>
        </trans-unit>
        <trans-unit id="bdc2d0c6c64b1a83cfee8bd646110fa818dad1c9" translate="yes" xml:space="preserve">
          <source>BoostedTreesSerializeEnsemble</source>
          <target state="translated">BoostedTreesSerializeEnsemble</target>
        </trans-unit>
        <trans-unit id="0173525ca011f33375b2f35ad84ad76744dbf8ed" translate="yes" xml:space="preserve">
          <source>BoostedTreesSparseAggregateStats</source>
          <target state="translated">BoostedTreesSparseAggregateStats</target>
        </trans-unit>
        <trans-unit id="b25cee5e564d6939bdca1b23e326e3cadd4bccab" translate="yes" xml:space="preserve">
          <source>BoostedTreesSparseCalculateBestFeatureSplit</source>
          <target state="translated">BoostedTreesSparseCalculateBestFeatureSplit</target>
        </trans-unit>
        <trans-unit id="032cdbc2b5f728998ed58e2b68da3583d6cab131" translate="yes" xml:space="preserve">
          <source>BoostedTreesTrainingPredict</source>
          <target state="translated">BoostedTreesTrainingPredict</target>
        </trans-unit>
        <trans-unit id="4dd3dfe3c52655230def365134dd356a145b3b6d" translate="yes" xml:space="preserve">
          <source>BoostedTreesUpdateEnsemble</source>
          <target state="translated">BoostedTreesUpdateEnsemble</target>
        </trans-unit>
        <trans-unit id="8fd7fa0504563b907c698473ac81f7b1390052c9" translate="yes" xml:space="preserve">
          <source>BoostedTreesUpdateEnsembleV2</source>
          <target state="translated">BoostedTreesUpdateEnsembleV2</target>
        </trans-unit>
        <trans-unit id="ff0ada0581dd3fbbbe1171390d862723dfbd3449" translate="yes" xml:space="preserve">
          <source>Boston housing price regression dataset.</source>
          <target state="translated">보스턴 주택 가격 회귀 데이터 세트.</target>
        </trans-unit>
        <trans-unit id="feb5e25e7fdce99170a501d07ae0d2154ec16b8d" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;wrap_function&quot;&gt;&lt;code&gt;tf.compat.v1.wrap_function&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; create a callable TensorFlow graph. But while &lt;a href=&quot;../../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; runs all stateful operations (e.g. &lt;a href=&quot;../../print&quot;&gt;&lt;code&gt;tf.print&lt;/code&gt;&lt;/a&gt;) and sequences operations to provide the same semantics as eager execution, &lt;code&gt;wrap_function&lt;/code&gt; is closer to the behavior of &lt;code&gt;session.run&lt;/code&gt; in TensorFlow 1.x. It will not run any operations unless they are required to compute the function's outputs, either through a data dependency or a control dependency. Nor will it sequence operations.</source>
          <target state="translated">&lt;a href=&quot;wrap_function&quot;&gt; &lt;code&gt;tf.compat.v1.wrap_function&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;../../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; 은&lt;/a&gt; 모두 호출 가능한 TensorFlow 그래프를 만듭니다. 그러나 &lt;a href=&quot;../../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; 은 모든 상태 저장 작업 (예 : &lt;a href=&quot;../../print&quot;&gt; &lt;code&gt;tf.print&lt;/code&gt; &lt;/a&gt; )을 실행하고 &lt;code&gt;wrap_function&lt;/code&gt; 실행과 동일한 의미를 제공하기 위해 작업을 시퀀싱하지만 wrap_function 은 TensorFlow 1.x 의 &lt;code&gt;session.run&lt;/code&gt; 동작에 더 가깝습니다 . 데이터 종속성 또는 제어 종속성을 통해 함수의 출력을 계산해야하는 경우가 아니면 작업을 실행하지 않습니다. 또한 시퀀스 작업도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ac6191c51f259d57b885ffa82509d687979531d3" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; must be of the same type. The supported types are: &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 는 모두 같은 유형이어야합니다. 지원되는 유형은 다음과 같습니다 &lt;code&gt;float16&lt;/code&gt; 과 , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; , &lt;code&gt;complex128&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b646202fb6910e6e7b829ae67528d0ba1e3f6f9e" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; must have the same rank. Broadcasting is not supported. If they have rank 3, each batch of 2D CSRSparseMatrices within &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; must have the same dense shape.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 는 모두 동일한 순위를 가져야합니다. 방송은 지원되지 않습니다. 순위가 3 인 경우 &lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 내의 각 2D CSRSparseMatrices 배치 는 동일한 조밀 한 모양을 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="a9a81e4a0b1eb6b1ec5c39bcce26af82dcead000" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;minimize()&lt;/code&gt; and &lt;code&gt;compute_gradients()&lt;/code&gt; accept a &lt;code&gt;gate_gradients&lt;/code&gt; argument that controls the degree of parallelism during the application of the gradients.</source>
          <target state="translated">모두 &lt;code&gt;minimize()&lt;/code&gt; 및 &lt;code&gt;compute_gradients()&lt;/code&gt; 동의 &lt;code&gt;gate_gradients&lt;/code&gt; 의 인수를 그 제어 그라디언트의 적용시 병렬 처리 수준.</target>
        </trans-unit>
        <trans-unit id="32285642a5d35e8ca4d67ea0f9881c877081f04b" translate="yes" xml:space="preserve">
          <source>Both binary and text proto serializations are supported, and can be chosen using the &lt;code&gt;format&lt;/code&gt; attribute.</source>
          <target state="translated">이진 및 텍스트 프로토 타입 직렬화가 모두 지원되며 &lt;code&gt;format&lt;/code&gt; 속성을 사용하여 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d95c74ccd89522c01a075d7f36b2833c75b192d9" translate="yes" xml:space="preserve">
          <source>Both height_pad and width_pad must be divisible by block_size.</source>
          <target state="translated">height_pad와 width_pad는 모두 block_size로 나눌 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="07d4c2f4fe55ceed3cde1844d2264b323beef909" translate="yes" xml:space="preserve">
          <source>Both inputs are number-type tensors (except complex). &lt;code&gt;minimum&lt;/code&gt; expects that both tensors have the same &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="translated">두 입력 모두 숫자 형 텐서입니다 (복소수 제외). &lt;code&gt;minimum&lt;/code&gt; 은 두 텐서가 동일한 &lt;code&gt;dtype&lt;/code&gt; 을 가질 것으로 예상합니다 .</target>
        </trans-unit>
        <trans-unit id="4ca9a7887996112f8fdb0646a86566daf831335e" translate="yes" xml:space="preserve">
          <source>Both linear and dnn model can be pre-compiled and trained separately before jointly training:</source>
          <target state="translated">선형 및 dnn 모델은 공동 훈련 전에 별도로 사전 컴파일 및 훈련 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5797b46a520878cf57724cc3e45e1348f3297a2c" translate="yes" xml:space="preserve">
          <source>Both matrices must be of the same type. The supported types are: &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="translated">두 행렬은 모두 같은 유형이어야합니다. 지원되는 유형은 다음과 같습니다 &lt;code&gt;float16&lt;/code&gt; 과 , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; , &lt;code&gt;complex128&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5ffc4d6414ef0b63c3c04545c062dd4133f15bc" translate="yes" xml:space="preserve">
          <source>Both output tensors have the same shape as the input: [batch_size, h, w, d]. The gradient values are organized so that [I(x+1, y) - I(x, y)] is in location (x, y). That means that dy will always have zeros in the last row, and dx will always have zeros in the last column.</source>
          <target state="translated">두 출력 텐서는 입력과 동일한 모양을 갖습니다 : [batch_size, h, w, d]. [I (x + 1, y)-I (x, y)]가 (x, y) 위치에 있도록 그래디언트 값이 구성됩니다. 즉, dy는 마지막 행에서 항상 0을 가지며 dx는 마지막 열에서 항상 0을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="dc8361762406dd5ddc8c52c52d9f1dda25c2312c" translate="yes" xml:space="preserve">
          <source>Both this function and the &lt;a href=&quot;https://www.tensorflow.org/guide/keras/mixed_precision&quot;&gt;Keras mixed precision API&lt;/a&gt; enable the use of mixed precision in a model. Therefore, only one of the two APIs can be used. We recommend using the Keras mixed precision API, as it is more customizable and supports Eager execution. However, it only supports models which use Keras layers, while the graph rewrite works in any model that uses &lt;a href=&quot;../../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">이 함수와 &lt;a href=&quot;https://www.tensorflow.org/guide/keras/mixed_precision&quot;&gt;Keras 혼합 정밀도 API를&lt;/a&gt; 사용하면 모델에서 혼합 정밀도를 사용할 수 있습니다. 따라서 두 API 중 하나만 사용할 수 있습니다. Keras 혼합 정밀도 API를 사용하는 것이 좋습니다. 더 많은 사용자 정의가 가능하고 Eager 실행을 지원하기 때문입니다. 그러나 Keras 레이어를 사용하는 모델 만 지원하는 반면 그래프 재 작성은 &lt;a href=&quot;../../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; 을 사용하는 모든 모델에서 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="06ce25342782f4d4b2d0690e4ff7c595a18f4ea8" translate="yes" xml:space="preserve">
          <source>Bounding box annotations are often supplied in addition to ground-truth labels in image recognition or object localization tasks. A common technique for training such a system is to randomly distort an image while preserving its content, i.e. &lt;em&gt;data augmentation&lt;/em&gt;. This Op outputs a randomly distorted localization of an object, i.e. bounding box, given an &lt;code&gt;image_size&lt;/code&gt;, &lt;code&gt;bounding_boxes&lt;/code&gt; and a series of constraints.</source>
          <target state="translated">경계 상자 주석은 이미지 인식 또는 객체 위치 지정 작업의 실제 레이블과 함께 제공되는 경우가 많습니다. 이러한 시스템을 훈련시키는 일반적인 기술은 이미지의 내용을 보존하면서 &lt;em&gt;데이터&lt;/em&gt; 를 임의로 왜곡하는 것 입니다. 이 Op는 &lt;code&gt;image_size&lt;/code&gt; , &lt;code&gt;bounding_boxes&lt;/code&gt; 및 일련의 제약 조건이 주어지면 객체, 즉 경계 상자의 무작위 왜곡 지역화를 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="c1adecae69fdfae669f1a8e72d2b809e358ed472" translate="yes" xml:space="preserve">
          <source>Bounding boxes are supplied and returned as &lt;code&gt;[y_min, x_min, y_max, x_max]&lt;/code&gt;. The bounding box coordinates are floats in &lt;code&gt;[0.0, 1.0]&lt;/code&gt; relative to the width and height of the underlying image.</source>
          <target state="translated">경계 상자가 제공되고 &lt;code&gt;[y_min, x_min, y_max, x_max]&lt;/code&gt; 로 반환됩니다 . 경계 상자 좌표는 기본 이미지의 너비와 높이를 기준으로 &lt;code&gt;[0.0, 1.0]&lt;/code&gt; 으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="d3734ef5a998e3dde580aef9d1cd81b3b79ef111" translate="yes" xml:space="preserve">
          <source>Bounding boxes are supplied and returned as &lt;code&gt;[y_min, x_min, y_max, x_max]&lt;/code&gt;. The bounding box coordinates are floats in &lt;code&gt;[0.0, 1.0]&lt;/code&gt; relative to the width and the height of the underlying image.</source>
          <target state="translated">경계 상자가 제공되고 &lt;code&gt;[y_min, x_min, y_max, x_max]&lt;/code&gt; 로 반환됩니다 . 경계 상자 좌표는 기본 이미지의 너비와 높이를 기준으로 &lt;code&gt;[0.0, 1.0]&lt;/code&gt; 로 부동 합니다.</target>
        </trans-unit>
        <trans-unit id="aa9c2f0e932fb30d4513721aa0bab86fdb77787f" translate="yes" xml:space="preserve">
          <source>Brand guidelines</source>
          <target state="translated">브랜드 가이드 라인</target>
        </trans-unit>
        <trans-unit id="28c115e33fb3331843965961459fa506166dfe59" translate="yes" xml:space="preserve">
          <source>Bring in all of the public TensorFlow interface into this module.</source>
          <target state="translated">모든 공개 TensorFlow 인터페이스를이 모듈로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="8eef34697837232b48914f2f89383688de87c7a9" translate="yes" xml:space="preserve">
          <source>Bringing back the factor (slope / total_pos_weight) we'd put aside, we get</source>
          <target state="translated">우리가 제쳐 놓은 요소 (경사 / total_pos_weight)를 다시 가져 오면</target>
        </trans-unit>
        <trans-unit id="98379f577b8e3e658fdb00e35fa2023c52bf301d" translate="yes" xml:space="preserve">
          <source>Broadcast an array for a compatible shape.</source>
          <target state="translated">호환되는 모양으로 배열을 브로드 캐스트하십시오.</target>
        </trans-unit>
        <trans-unit id="e9abb36007362f42c1fe25106b6bea68f1613c9f" translate="yes" xml:space="preserve">
          <source>Broadcast the &lt;code&gt;tensor&lt;/code&gt; to destinations.</source>
          <target state="translated">&lt;code&gt;tensor&lt;/code&gt; 를 대상으로 브로드 캐스트하십시오 .</target>
        </trans-unit>
        <trans-unit id="463858c22ade244aaa625420021a4e52efe763d6" translate="yes" xml:space="preserve">
          <source>BroadcastArgs</source>
          <target state="translated">BroadcastArgs</target>
        </trans-unit>
        <trans-unit id="c05f4ede8e069937489eefe4a2cdbb977d24cda1" translate="yes" xml:space="preserve">
          <source>BroadcastGradientArgs</source>
          <target state="translated">BroadcastGradientArgs</target>
        </trans-unit>
        <trans-unit id="322f78e08df90350b505b0aa1241782fa80f7021" translate="yes" xml:space="preserve">
          <source>BroadcastTo</source>
          <target state="translated">BroadcastTo</target>
        </trans-unit>
        <trans-unit id="eb90ebc3a8a835560398b973e98c1a9a13a91937" translate="yes" xml:space="preserve">
          <source>Broadcasting &lt;code&gt;input&lt;/code&gt; onto &lt;code&gt;pos&lt;/code&gt; and &lt;code&gt;len&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;pos&lt;/code&gt; 와 &lt;code&gt;len&lt;/code&gt; 에 &lt;code&gt;input&lt;/code&gt; 된 방송 :</target>
        </trans-unit>
        <trans-unit id="943c31a23379abf365af65d72589c39fcd016fec" translate="yes" xml:space="preserve">
          <source>Broadcasting &lt;code&gt;pos&lt;/code&gt; and &lt;code&gt;len&lt;/code&gt; onto &lt;code&gt;input&lt;/code&gt;:</source>
          <target state="translated">방송 &lt;code&gt;pos&lt;/code&gt; 과 &lt;code&gt;len&lt;/code&gt; 에 &lt;code&gt;input&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9e9b52ed28989fa50ea3fe64da6f2d795a0db5f0" translate="yes" xml:space="preserve">
          <source>Broadcasting fails, intentionally, if you would expand the dimensions of &lt;code&gt;t&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;t&lt;/code&gt; 의 차원을 확장하면 의도적으로 방송이 실패합니다.</target>
        </trans-unit>
        <trans-unit id="f3a942942774c17612d71c1c519884710dcec289" translate="yes" xml:space="preserve">
          <source>Broadcasting is the process of making arrays to have compatible shapes for arithmetic operations. Two shapes are compatible if for each dimension pair they are either equal or one of them is one. When trying to broadcast a Tensor to a shape, it starts with the trailing dimensions, and works its way forward.</source>
          <target state="translated">브로드 캐스팅은 배열이 산술 연산에 적합한 모양을 갖도록 만드는 프로세스입니다. 각 치수 쌍마다 동일하거나 하나가 하나 인 경우 두 모양이 호환됩니다. 텐서를 셰이프에 브로드 캐스트하려고 할 때 후행 치수로 시작하여 앞으로 나아갑니다.</target>
        </trans-unit>
        <trans-unit id="5d5feb953132591f2c3382b80ae6c1226404fe89" translate="yes" xml:space="preserve">
          <source>Broadcasting, batching, and shapes</source>
          <target state="translated">방송, 배치 및 모양</target>
        </trans-unit>
        <trans-unit id="b2b71c0786b6131d790e623c9ea22a802cae81fe" translate="yes" xml:space="preserve">
          <source>Broadcasts a tensor value to one or more other devices.</source>
          <target state="translated">하나 이상의 다른 장치에 텐서 값을 브로드 캐스트합니다.</target>
        </trans-unit>
        <trans-unit id="04b9674c62052145d087554385c0c130a156a6e2" translate="yes" xml:space="preserve">
          <source>Broadcasts parameters for evaluation on an N-D grid.</source>
          <target state="translated">ND 그리드에서 평가할 매개 변수를 브로드 캐스트합니다.</target>
        </trans-unit>
        <trans-unit id="8f21f4c6ab7d901415996bc2236c65b3bd68473f" translate="yes" xml:space="preserve">
          <source>Broadcasts the values of bias on dimensions 0..N-2 of 'input'.</source>
          <target state="translated">'입력'의 차원 0..N-2에 대한 편향 값을 브로드 캐스팅합니다.</target>
        </trans-unit>
        <trans-unit id="3de9b8ca599527f9ccd17528acd3ebdfffb409d1" translate="yes" xml:space="preserve">
          <source>Bucketize</source>
          <target state="translated">Bucketize</target>
        </trans-unit>
        <trans-unit id="e9405d98a18b808907de6aeaf9628539d5dfc8f1" translate="yes" xml:space="preserve">
          <source>Bucketize each feature based on bucket boundaries.</source>
          <target state="translated">버킷 경계를 기반으로 각 기능을 버킷 화합니다.</target>
        </trans-unit>
        <trans-unit id="d013d0cd99cd544053703e272607c580392888e3" translate="yes" xml:space="preserve">
          <source>Bucketize float values based on provided buckets.</source>
          <target state="translated">제공된 버킷을 기반으로 부동 소수점 값을 버킷 화합니다.</target>
        </trans-unit>
        <trans-unit id="b904b2132397b7735c9c1867b908dab2384c5cd6" translate="yes" xml:space="preserve">
          <source>Bucketizes 'input' based on 'boundaries'.</source>
          <target state="translated">'경계'를 기반으로 '입력'을 버킷 화합니다.</target>
        </trans-unit>
        <trans-unit id="ebb2b49e515b1c277336bba4d4f0231176316b29" translate="yes" xml:space="preserve">
          <source>Buckets data into discrete ranges.</source>
          <target state="translated">데이터를 개별 범위로 버킷 화합니다.</target>
        </trans-unit>
        <trans-unit id="c15084325c5d9cb7f413fbc21edd4488d49d1970" translate="yes" xml:space="preserve">
          <source>Buckets include the left boundary, and exclude the right boundary. Namely, &lt;code&gt;boundaries=[0., 1., 2.]&lt;/code&gt; generates buckets &lt;code&gt;(-inf, 0.)&lt;/code&gt;, &lt;code&gt;[0., 1.)&lt;/code&gt;, &lt;code&gt;[1., 2.)&lt;/code&gt;, and &lt;code&gt;[2., +inf)&lt;/code&gt;.</source>
          <target state="translated">버킷에는 왼쪽 경계가 포함되며 오른쪽 경계는 제외됩니다. 즉, &lt;code&gt;boundaries=[0., 1., 2.]&lt;/code&gt; 는 버킷 &lt;code&gt;(-inf, 0.)&lt;/code&gt; , &lt;code&gt;[0., 1.)&lt;/code&gt; , &lt;code&gt;[1., 2.)&lt;/code&gt; 및 &lt;code&gt;[2., +inf)&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="aa92fc4289c5c1469e1c7b9543c031b3868536d3" translate="yes" xml:space="preserve">
          <source>Buffer size of the ShuffleDataset. A large capacity ensures better shuffling but would increase memory usage and startup time.</source>
          <target state="translated">ShuffleDataset의 버퍼 크기입니다. 대용량은 더 나은 셔플 링을 보장하지만 메모리 사용량과 시작 시간을 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="62e000d78c50bb517d16e06a02686befcacf5f10" translate="yes" xml:space="preserve">
          <source>Buffer size to use for shuffling. A large buffer size ensures better shuffling, but increases memory usage and startup time.</source>
          <target state="translated">셔플에 사용할 버퍼 크기입니다. 큰 버퍼 크기는 더 나은 셔플 링을 보장하지만 메모리 사용량과 시작 시간을 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="e6ab21d498a0022ceb7f855fe754302022a7ed5a" translate="yes" xml:space="preserve">
          <source>Build a linear model with Estimators</source>
          <target state="translated">Estimators로 선형 모델 구축</target>
        </trans-unit>
        <trans-unit id="ff2a9f5725bab9a6ea7b5c1e81c28f481aacf928" translate="yes" xml:space="preserve">
          <source>Build a model normally but load the checkpoint files to evaluate by using the shadow variable names. For this use the &lt;code&gt;average_name()&lt;/code&gt; method. See the &lt;a href=&quot;../compat/v1/train/saver&quot;&gt;&lt;code&gt;tf.compat.v1.train.Saver&lt;/code&gt;&lt;/a&gt; for more information on restoring saved variables.</source>
          <target state="translated">모델을 정상적으로 빌드하지만 섀도우 변수 이름을 사용하여 평가할 체크 포인트 파일을로드하십시오. 이를 위해 &lt;code&gt;average_name()&lt;/code&gt; 메소드를 사용하십시오 . 저장된 변수 복원에 대한 자세한 정보 는 &lt;a href=&quot;../compat/v1/train/saver&quot;&gt; &lt;code&gt;tf.compat.v1.train.Saver&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f722bbeaa2213782e267bb6a26a2181ed2ba8703" translate="yes" xml:space="preserve">
          <source>Build a model that uses the shadow variables instead of the variables. For this, use the &lt;code&gt;average()&lt;/code&gt; method which returns the shadow variable for a given variable.</source>
          <target state="translated">변수 대신 그림자 변수를 사용하는 모델을 작성하십시오. 이를 위해 주어진 변수에 대한 그림자 변수를 반환 하는 &lt;code&gt;average()&lt;/code&gt; 메서드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="64c278c663f3563c13144609bb45bdcc141bcd77" translate="yes" xml:space="preserve">
          <source>Build a profiling option.</source>
          <target state="translated">프로파일 링 옵션을 빌드하십시오.</target>
        </trans-unit>
        <trans-unit id="ec7e094aaf72e063a3f5d7d2cbe1a66f3d62449e" translate="yes" xml:space="preserve">
          <source>Build a serving_input_receiver_fn expecting feature Tensors.</source>
          <target state="translated">serving_input_receiver_fn 기능 Tensor를 빌드하십시오.</target>
        </trans-unit>
        <trans-unit id="c131e4deb9009c7f3a553f6c57f420ac357d1c5f" translate="yes" xml:space="preserve">
          <source>Build a serving_input_receiver_fn expecting fed tf.Examples.</source>
          <target state="translated">tf.Examples가 예상되는 serving_input_receiver_fn을 빌드하십시오.</target>
        </trans-unit>
        <trans-unit id="8d2bde1dbc114349b400adb05c05117e45ae5a89" translate="yes" xml:space="preserve">
          <source>Build a supervised_input_receiver_fn for raw features and labels.</source>
          <target state="translated">원시 기능 및 레이블에 대해 supervised_input_receiver_fn을 빌드하십시오.</target>
        </trans-unit>
        <trans-unit id="16812acd5eb1dc531c249bce946b941a32f4fa1c" translate="yes" xml:space="preserve">
          <source>Build eval graph and restoring op.</source>
          <target state="translated">평가 그래프를 작성하고 op를 복원하십시오.</target>
        </trans-unit>
        <trans-unit id="ecbf800615dddf1c54ace6455baf6d5941d2478d" translate="yes" xml:space="preserve">
          <source>Builds a Enqueuer from a Sequence.</source>
          <target state="translated">시퀀스에서 Enqueuer를 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="636f3174b3ff87a8bd80a5603ee58f820c343ecf" translate="yes" xml:space="preserve">
          <source>Builds a SavedModel that can be saved to storage, is language neutral, and enables systems to produce, consume, or transform TensorFlow Models.</source>
          <target state="translated">스토리지에 저장할 수 있고 언어 중립적이며 시스템에서 TensorFlow 모델을 생성, 소비 또는 변환 할 수있는 저장된 모델을 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="b102ae80a796f79d82c5dc85ba6b1e609abb9fe5" translate="yes" xml:space="preserve">
          <source>Builds a graph operator that runs a replicated TPU computation.</source>
          <target state="translated">복제 된 TPU 계산을 실행하는 그래프 연산자를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="bc99b05847903f68fb148ab37a5818e98ecf68ab" translate="yes" xml:space="preserve">
          <source>Builds a main op that defines the sequence of ops to be run as part of the SavedModel load/restore operations.</source>
          <target state="translated">SavedModel로드 / 복원 작업의 일부로 실행할 일련의 op를 정의하는 기본 op를 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="c30a05610280406cf402115abe9fd5f7f435735d" translate="yes" xml:space="preserve">
          <source>Builds a merged tensor such that</source>
          <target state="translated">다음과 같이 병합 된 텐서를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="5ffe07e58f47ef6958565c53887d803dc87bb5b9" translate="yes" xml:space="preserve">
          <source>Builds a queue out of a data generator.</source>
          <target state="translated">데이터 생성기에서 큐를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="15c5d101f81c465bab7d306bd8e55c17e8730819" translate="yes" xml:space="preserve">
          <source>Builds an array &lt;code&gt;dense&lt;/code&gt; with shape &lt;code&gt;output_shape&lt;/code&gt; such that</source>
          <target state="translated">어레이 구축 &lt;code&gt;dense&lt;/code&gt; 형상 &lt;code&gt;output_shape&lt;/code&gt; 되도록을</target>
        </trans-unit>
        <trans-unit id="a9632e4e0995fb90efa12673a54fda29754e5429" translate="yes" xml:space="preserve">
          <source>Builds an operator that compiles and runs &lt;code&gt;computation&lt;/code&gt; with XLA.</source>
          <target state="translated">XLA로 &lt;code&gt;computation&lt;/code&gt; 을 컴파일하고 실행하는 연산자를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="c6376d98330a3672bb454b82c00fa18e84fba77f" translate="yes" xml:space="preserve">
          <source>Builds part of a computation outside any current TPU replicate scope.</source>
          <target state="translated">현재 TPU 복제 범위 외부에서 계산의 일부를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="6f5c9296bde4c18c8669bc5fb79efc2a2cc6f910" translate="yes" xml:space="preserve">
          <source>Builds profiles and automatically check anomalies of various aspects. For more details: &lt;a href=&quot;https://github.com/tensorflow/tensorflow/tree/master/tensorflow/core/profiler/README.md&quot;&gt;https://github.com/tensorflow/tensorflow/tree/master/tensorflow/core/profiler/README.md&lt;/a&gt;</source>
          <target state="translated">프로필을 작성하고 다양한 측면의 이상을 자동으로 확인합니다. 자세한 내용 : &lt;a href=&quot;https://github.com/tensorflow/tensorflow/tree/master/tensorflow/core/profiler/README.md&quot;&gt;https://github.com/tensorflow/tensorflow/tree/master/tensorflow/core/profiler/README.md&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3fd3fcf3e892824528f5ae2ab17c6aa9d59e34d4" translate="yes" xml:space="preserve">
          <source>Builds profiles and automatically check anomalies of various aspects. For more details: https://github.com/tensorflow/tensorflow/tree/master/tensorflow/core/profiler/README.md</source>
          <target state="translated">프로필을 작성하고 다양한 측면의 이상을 자동으로 확인합니다. 자세한 내용은 https://github.com/tensorflow/tensorflow/tree/master/tensorflow/core/profiler/README.md</target>
        </trans-unit>
        <trans-unit id="dfa4f2a1717e8db9ae3aa9c02537ab9914d76383" translate="yes" xml:space="preserve">
          <source>Builds the &lt;code&gt;SavedModel&lt;/code&gt; protocol buffer and saves variables and assets.</source>
          <target state="translated">&lt;code&gt;SavedModel&lt;/code&gt; 프로토콜 버퍼를 빌드하고 변수 및 자산을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="9012d788d761fc46b18f58d31c677683facbfc2f" translate="yes" xml:space="preserve">
          <source>Built-in activation functions.</source>
          <target state="translated">내장 활성화 기능.</target>
        </trans-unit>
        <trans-unit id="262775d46de12a6183c6140c11e7d86a4604a3fb" translate="yes" xml:space="preserve">
          <source>Built-in loss functions.</source>
          <target state="translated">내장 손실 기능.</target>
        </trans-unit>
        <trans-unit id="edb0aed2fae062a979cdd99b9dca446a853df798" translate="yes" xml:space="preserve">
          <source>Built-in metrics.</source>
          <target state="translated">내장 메트릭.</target>
        </trans-unit>
        <trans-unit id="b22f8a5c519fc799900fabd83d87b51c7af27dc8" translate="yes" xml:space="preserve">
          <source>Built-in optimizer classes.</source>
          <target state="translated">내장 최적화 프로그램 클래스.</target>
        </trans-unit>
        <trans-unit id="ff5e98bf7dfd1a7c5d7e9874de98d594b8a4a9ae" translate="yes" xml:space="preserve">
          <source>Built-in regularizers.</source>
          <target state="translated">내장 된 정규화 장치.</target>
        </trans-unit>
        <trans-unit id="1081359cb305229712d2b1c5666832b73e761d74" translate="yes" xml:space="preserve">
          <source>But, since &lt;a href=&quot;constant&quot;&gt;&lt;code&gt;tf.constant&lt;/code&gt;&lt;/a&gt; embeds the value in the &lt;a href=&quot;graph&quot;&gt;&lt;code&gt;tf.Graph&lt;/code&gt;&lt;/a&gt; this fails for symbolic tensors:</source>
          <target state="translated">그러나, 이후 &lt;a href=&quot;constant&quot;&gt; &lt;code&gt;tf.constant&lt;/code&gt; &lt;/a&gt; 임베딩의 값 &lt;a href=&quot;graph&quot;&gt; &lt;code&gt;tf.Graph&lt;/code&gt; &lt;/a&gt; 이 상징적 인 텐서 실패 :</target>
        </trans-unit>
        <trans-unit id="adb1b37cf3b42e366fdeaf2016d9e0331448b49c" translate="yes" xml:space="preserve">
          <source>By convention, &lt;code&gt;indices&lt;/code&gt; should be sorted in row-major order (or equivalently lexicographic order on the tuples &lt;code&gt;indices[i]&lt;/code&gt;). This is not enforced when &lt;code&gt;SparseTensor&lt;/code&gt; objects are constructed, but most ops assume correct ordering. If the ordering of sparse tensor &lt;code&gt;st&lt;/code&gt; is wrong, a fixed version can be obtained by calling &lt;a href=&quot;reorder&quot;&gt;&lt;code&gt;tf.sparse.reorder(st)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">관례에 따라 &lt;code&gt;indices&lt;/code&gt; 는 행 주요 순서로 정렬되어야합니다 (또는 튜플 &lt;code&gt;indices[i]&lt;/code&gt; 에서 동일하게 사전 순서 ). 이것은 &lt;code&gt;SparseTensor&lt;/code&gt; 객체가 생성 될 때 적용되지 않지만 대부분의 작전은 올바른 순서를 가정합니다. 희소 텐서 &lt;code&gt;st&lt;/code&gt; 의 순서 가 잘못된 경우 &lt;a href=&quot;reorder&quot;&gt; &lt;code&gt;tf.sparse.reorder(st)&lt;/code&gt; &lt;/a&gt; 호출하여 고정 버전을 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="af07810293f013346697008af715a0eaca0bec21" translate="yes" xml:space="preserve">
          <source>By default GradientTape will automatically watch any trainable variables that are accessed inside the context. If you want fine grained control over which variables are watched you can disable automatic tracking by passing &lt;code&gt;watch_accessed_variables=False&lt;/code&gt; to the tape constructor:</source>
          <target state="translated">기본적으로 GradientTape는 컨텍스트 내에서 액세스 할 수있는 학습 가능한 변수를 자동으로 감시합니다. 감시 할 변수를 세밀하게 제어하려면 &lt;code&gt;watch_accessed_variables=False&lt;/code&gt; 를 테이프 생성자 에 전달하여 자동 추적을 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c621e57f34694cb8a708de25f63142961a0f637a" translate="yes" xml:space="preserve">
          <source>By default it returns its argument unmodified.</source>
          <target state="translated">기본적으로 인수를 수정하지 않고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a718f8918d31025fe1098ec5a3ea6f4cd6585e6e" translate="yes" xml:space="preserve">
          <source>By default it uses &lt;code&gt;TFConfigClusterResolver&lt;/code&gt; to detect configurations for multi-worker training. This requires a 'TF_CONFIG' environment variable and the 'TF_CONFIG' must have a cluster spec.</source>
          <target state="translated">기본적으로 &lt;code&gt;TFConfigClusterResolver&lt;/code&gt; 를 사용 하여 다중 작업자 교육을위한 구성을 감지합니다. 여기에는 'TF_CONFIG'환경 변수가 필요하며 'TF_CONFIG'에는 클러스터 스펙이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="a5de0d0264084ef0f307c0cbac3ea682cb5334c9" translate="yes" xml:space="preserve">
          <source>By default it uses all local GPUs or CPU for single-worker training.</source>
          <target state="translated">기본적으로 단일 작업자 교육을 위해 모든 로컬 GPU 또는 CPU를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="b1987e34dfcb54a3fbdb5e5ab5253982ad3fcdb7" translate="yes" xml:space="preserve">
          <source>By default the file at the url &lt;code&gt;origin&lt;/code&gt; is downloaded to the cache_dir &lt;code&gt;~/.keras&lt;/code&gt;, placed in the cache_subdir &lt;code&gt;datasets&lt;/code&gt;, and given the filename &lt;code&gt;fname&lt;/code&gt;. The final location of a file &lt;code&gt;example.txt&lt;/code&gt; would therefore be &lt;code&gt;~/.keras/datasets/example.txt&lt;/code&gt;.</source>
          <target state="translated">기본적으로 URL &lt;code&gt;origin&lt;/code&gt; 의 파일 은 cache_dir &lt;code&gt;~/.keras&lt;/code&gt; 로 다운로드되어 cache_subdir &lt;code&gt;datasets&lt;/code&gt; 배치되고 파일 이름 &lt;code&gt;fname&lt;/code&gt; 이 지정 됩니다. 따라서 &lt;code&gt;example.txt&lt;/code&gt; 파일의 최종 위치는 &lt;code&gt;~/.keras/datasets/example.txt&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a6a772beb4a7687852aadfcf02c314923646c2cd" translate="yes" xml:space="preserve">
          <source>By default, all punctuation is removed, turning the texts into space-separated sequences of words (words maybe include the &lt;code&gt;'&lt;/code&gt; character). These sequences are then split into lists of tokens. They will then be indexed or vectorized.</source>
          <target state="translated">기본적으로 구두점은 모두 제거되어 텍스트를 공백으로 구분 된 단어 시퀀스로 바꿉니다 (단어에는 &lt;code&gt;'&lt;/code&gt; 문자가 포함될 수 있음 ). 그런 다음이 시퀀스는 토큰 목록으로 분할됩니다. 그런 다음 인덱스 또는 벡터화됩니다.</target>
        </trans-unit>
        <trans-unit id="6d241385f04f44f60b21e5f9c06e4a1462091c7c" translate="yes" xml:space="preserve">
          <source>By default, each element is kept or dropped independently. If &lt;code&gt;noise_shape&lt;/code&gt; is specified, it must be &lt;a href=&quot;http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html&quot;&gt;broadcastable&lt;/a&gt; to the shape of &lt;code&gt;x&lt;/code&gt;, and only dimensions with &lt;code&gt;noise_shape[i] == shape(x)[i]&lt;/code&gt; will make independent decisions. For example, if &lt;code&gt;shape(x) = [k, l, m, n]&lt;/code&gt; and &lt;code&gt;noise_shape = [k, 1, 1, n]&lt;/code&gt;, each batch and channel component will be kept independently and each row and column will be kept or not kept together.</source>
          <target state="translated">기본적으로 각 요소는 독립적으로 유지되거나 삭제됩니다. 경우 &lt;code&gt;noise_shape&lt;/code&gt; 이 지정되는 것이 여야 &lt;a href=&quot;http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html&quot;&gt;캐스트 가능한&lt;/a&gt; 형상으로 &lt;code&gt;x&lt;/code&gt; 및 치수 만 &lt;code&gt;noise_shape[i] == shape(x)[i]&lt;/code&gt; 독립적 인 결정을 내릴 것이다. 예를 들어 &lt;code&gt;shape(x) = [k, l, m, n]&lt;/code&gt; 및 &lt;code&gt;noise_shape = [k, 1, 1, n]&lt;/code&gt; 경우 각 배치 및 채널 구성 요소는 독립적으로 유지되며 각 행과 열은 유지됩니다. 함께 유지.</target>
        </trans-unit>
        <trans-unit id="7887e732a7690043927a4583cd60ee68b2eac824" translate="yes" xml:space="preserve">
          <source>By default, each element is kept or dropped independently. If &lt;code&gt;noise_shape&lt;/code&gt; is specified, it must be &lt;a href=&quot;http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html&quot;&gt;broadcastable&lt;/a&gt; to the shape of &lt;code&gt;x&lt;/code&gt;, and only dimensions with &lt;code&gt;noise_shape[i] == shape(x)[i]&lt;/code&gt; will make independent decisions. This is useful for dropping whole channels from an image or sequence. For example:</source>
          <target state="translated">기본적으로 각 요소는 독립적으로 유지되거나 삭제됩니다. 경우 &lt;code&gt;noise_shape&lt;/code&gt; 이 지정되는 것이 여야 &lt;a href=&quot;http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html&quot;&gt;캐스트 가능한&lt;/a&gt; 형상으로 &lt;code&gt;x&lt;/code&gt; 및 치수 만 &lt;code&gt;noise_shape[i] == shape(x)[i]&lt;/code&gt; 독립적 인 결정을 내릴 것이다. 이미지 나 시퀀스에서 전체 채널을 삭제하는 데 유용합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="98279180af3634ec05c77d96cfae51c8b3e6d117" translate="yes" xml:space="preserve">
          <source>By default, if two values sum to zero at some index, the output &lt;code&gt;SparseTensor&lt;/code&gt; would still include that particular location in its index, storing a zero in the corresponding value slot. To override this, callers can specify &lt;code&gt;thresh&lt;/code&gt;, indicating that if the sum has a magnitude strictly smaller than &lt;code&gt;thresh&lt;/code&gt;, its corresponding value and index would then not be included. In particular, &lt;code&gt;thresh == 0&lt;/code&gt; (default) means everything is kept and actual thresholding happens only for a positive value.</source>
          <target state="translated">기본적으로 두 값의 합이 일부 인덱스에서 0이되면 출력 &lt;code&gt;SparseTensor&lt;/code&gt; 는 해당 인덱스에 해당 특정 위치를 포함하여 해당 값 슬롯에 0을 저장합니다. 이를 재정의하기 위해 호출자는 &lt;code&gt;thresh&lt;/code&gt; 를 지정할 수 있습니다. 즉, 합계가 &lt;code&gt;thresh&lt;/code&gt; 보다 엄격하게 크기가 작은 경우 해당 값과 인덱스가 포함되지 않음을 나타냅니다. 특히 &lt;code&gt;thresh == 0&lt;/code&gt; (기본값)은 모든 것이 유지되고 실제 임계 값이 양수 값에 대해서만 발생 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="47409e29821e35ebb79068c4e13486cce5c14b3d" translate="yes" xml:space="preserve">
          <source>By default, it shows the call stack from root. To avoid redundant output, you may use options to filter as below options['show_name_regexes'] = ['.&lt;em&gt;my_code.py.&lt;/em&gt;']</source>
          <target state="translated">기본적으로 루트의 호출 스택이 표시됩니다. 중복 출력을 피하기 위해 아래 옵션 [ 'show_name_regexes'] = [ '와 같이 옵션을 사용하여 필터링 할 수 있습니다. &lt;em&gt;my_code.py. &lt;/em&gt;']</target>
        </trans-unit>
        <trans-unit id="2a35c24d2662a7f06f4bffd81e1a58929cc9e73e" translate="yes" xml:space="preserve">
          <source>By default, only Variable ops are placed on ps tasks, and the placement strategy is round-robin over all ps tasks. A custom &lt;code&gt;ps_strategy&lt;/code&gt; may be used to do more intelligent placement, such as &lt;code&gt;tf.contrib.training.GreedyLoadBalancingStrategy&lt;/code&gt;.</source>
          <target state="translated">기본적으로 ps 작업에는 Variable ops 만 배치되고 모든 ps 작업에 대한 배치 전략은 라운드 로빈입니다. 사용자 정의 &lt;code&gt;ps_strategy&lt;/code&gt; 는 등보다 지능적인 배치를 수행하기 위해 사용될 수있다 &lt;code&gt;tf.contrib.training.GreedyLoadBalancingStrategy&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="654ac0f454485801a17c3f1c1985a2e00211cea5" translate="yes" xml:space="preserve">
          <source>By default, random rotations are only applied during training. At inference time, the layer does nothing. If you need to apply random rotations at inference time, set &lt;code&gt;training&lt;/code&gt; to True when calling the layer.</source>
          <target state="translated">기본적으로 무작위 회전은 훈련 중에 만 적용됩니다. 추론시 레이어는 아무 작업도 수행하지 않습니다. 추론시 임의 회전을 적용해야하는 경우 계층을 호출 할 때 &lt;code&gt;training&lt;/code&gt; 을 True로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="97c2834d764036abd517fbd5e003f7c656e90999" translate="yes" xml:space="preserve">
          <source>By default, restores the named tensors in full. If the caller wishes to restore specific slices of stored tensors, &quot;shape_and_slices&quot; should be non-empty strings and correspondingly well-formed.</source>
          <target state="translated">기본적으로 명명 된 텐서를 전체로 복원합니다. 호출자가 저장된 텐서의 특정 조각을 복원하려는 경우 &quot;shape_and_slices&quot;는 비어 있지 않은 문자열이어야하며 이에 따라 올바른 형식이어야합니다.</target>
        </trans-unit>
        <trans-unit id="c2eaed11c996a3c6dfc07eb1ac74cd70bc2cc9ab" translate="yes" xml:space="preserve">
          <source>By default, saves the named tensors in full. If the caller wishes to save specific slices of full tensors, &quot;shape_and_slices&quot; should be non-empty strings and correspondingly well-formed.</source>
          <target state="translated">기본적으로는 명명 된 텐서를 전체로 저장합니다. 호출자가 전체 텐서의 특정 조각을 저장하려는 경우 &quot;shape_and_slices&quot;는 비어 있지 않은 문자열이어야하며 이에 따라 올바른 형식이어야합니다.</target>
        </trans-unit>
        <trans-unit id="900646ad518879e8b6becae8f17ae3b6f2551b03" translate="yes" xml:space="preserve">
          <source>By default, snapshot parallelize reads by the number of cores available on the system, but will not attempt to shuffle the data.</source>
          <target state="translated">기본적으로 스냅 샷은 시스템에서 사용 가능한 코어 수로 읽기를 병렬화하지만 데이터를 섞지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8372466779aad603b533eb9a6f26dba8cb9d7271" translate="yes" xml:space="preserve">
          <source>By default, tf.data will refuse to serialize a dataset or checkpoint its iterator if the dataset contains a stateful op as the serialization / checkpointing won't be able to capture its state. Users can -- at their own risk -- override this restriction by explicitly specifying that they are fine throwing away the state in these ops. There are three settings available - IGNORE: in which wecompletely ignore any state; WARN: We warn the user that some state might be thrown away; FAIL: We fail if any state is being captured.</source>
          <target state="translated">직렬화 / 체크 포인트가 상태를 캡처 할 수 없기 때문에 데이터 세트에 상태 저장 연산이 포함 된 경우 기본적으로 tf.data는 데이터 세트 직렬화 또는 반복기를 체크 포인트하지 않습니다. 사용자는 자신의 위험 부담으로 이러한 작전에서 상태를 잘 버린다고 명시 적으로 지정하여이 제한을 무시할 수 있습니다. 사용 가능한 세 가지 설정이 있습니다. 무시 : 모든 상태를 완전히 무시합니다. 경고 : 일부 상태는 폐기 될 수 있음을 사용자에게 경고합니다. 실패 : 상태가 캡처되면 실패합니다.</target>
        </trans-unit>
        <trans-unit id="e4fc751479236c973a2d653d66da0afc7f4a5b03" translate="yes" xml:space="preserve">
          <source>By default, the V2 dtype behavior is enabled in TensorFlow 2, so this function is only useful if &lt;a href=&quot;../../disable_v2_behavior&quot;&gt;&lt;code&gt;tf.compat.v1.disable_v2_behavior&lt;/code&gt;&lt;/a&gt; has been called. Since mixed precision requires V2 dtype behavior to be enabled, this function allows you to use mixed precision in Keras layers if &lt;code&gt;disable_v2_behavior&lt;/code&gt; has been called.</source>
          <target state="translated">기본적으로 V2 dtype 동작은 TensorFlow 2에서 활성화되어 있으므로이 함수는 &lt;a href=&quot;../../disable_v2_behavior&quot;&gt; &lt;code&gt;tf.compat.v1.disable_v2_behavior&lt;/code&gt; &lt;/a&gt; 가 호출 된 경우에만 유용합니다 . 혼합 정밀도를 사용하려면 V2 dtype 동작을 활성화해야하므로이 함수를 사용하면 &lt;code&gt;disable_v2_behavior&lt;/code&gt; 가 호출 된 경우 Keras 레이어에서 혼합 정밀도를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bdea5c77ba1bb400b1713d0fdb7979dd52e7b3bd" translate="yes" xml:space="preserve">
          <source>By default, the global FLAGS 'FlagValue' object is used.</source>
          <target state="translated">기본적으로 전역 FLAGS 'FlagValue'객체가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e61b4f6785d4c340eb35a16522a958ef242ddfb7" translate="yes" xml:space="preserve">
          <source>By default, the merged return value of &lt;code&gt;fn&lt;/code&gt; across all replicas. The merged result has dependencies to make sure that if it is evaluated at all, the side effects (updates) will happen on every replica. If instead &quot;group=False&quot; is specified, this function will return a nest of lists where each list has an element per replica, and the caller is responsible for ensuring all elements are executed.</source>
          <target state="translated">기본적으로 모든 복제본 에서 병합 된 반환 값은 &lt;code&gt;fn&lt;/code&gt; 입니다. 병합 된 결과는 종속성이 전혀 없는지 평가하여 모든 복제본에서 부작용 (업데이트)이 발생하는지 확인합니다. 대신 &quot;group = False&quot;를 지정하면이 함수는 각 목록에 복제 본당 요소가있는 목록의 중첩 목록을 반환하며 호출자는 모든 요소가 실행되도록해야합니다.</target>
        </trans-unit>
        <trans-unit id="b6d8a26b31cb3af4319e33d0c48bf35279fdf918" translate="yes" xml:space="preserve">
          <source>By default, the output of this dataset will be deterministic, which may result in the dataset blocking if the next data item to be returned isn't available. In order to avoid head-of-line blocking, one can either set the &lt;code&gt;deterministic&lt;/code&gt; attribute to &quot;false&quot;, or leave it as &quot;default&quot; and set the &lt;code&gt;experimental_deterministic&lt;/code&gt; parameter of &lt;a href=&quot;../data/options&quot;&gt;&lt;code&gt;tf.data.Options&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;False&lt;/code&gt;. This can improve performance at the expense of non-determinism.</source>
          <target state="translated">기본적으로이 데이터 세트의 출력은 결정적이므로 반환 할 다음 데이터 항목을 사용할 수없는 경우 데이터 세트가 차단 될 수 있습니다. 헤드 오브 라인 차단을 피하기 위해 &lt;code&gt;deterministic&lt;/code&gt; 속성을 &quot;false&quot;로 설정하거나 &quot;default&quot;로두고 &lt;a href=&quot;../data/options&quot;&gt; &lt;code&gt;tf.data.Options&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;experimental_deterministic&lt;/code&gt; 매개 변수 를 &lt;code&gt;False&lt;/code&gt; 로 설정할 수 있습니다. 이것은 비결 정성을 희생시키면서 성능을 향상시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e8429eeb5a1f9a76068b8b2b40ebf17ec78d7e7a" translate="yes" xml:space="preserve">
          <source>By default, the output of this dataset will be deterministic, which may result in the dataset blocking if the next data item to be returned isn't available. In order to avoid head-of-line blocking, one can set the &lt;code&gt;experimental_deterministic&lt;/code&gt; parameter of &lt;a href=&quot;../data/options&quot;&gt;&lt;code&gt;tf.data.Options&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;False&lt;/code&gt;, which can improve performance at the expense of non-determinism.</source>
          <target state="translated">기본적으로이 데이터 세트의 출력은 결정적이므로 반환 할 다음 데이터 항목을 사용할 수없는 경우 데이터 세트가 차단 될 수 있습니다. head-of-line 블로킹을 피하기 위해 &lt;a href=&quot;../data/options&quot;&gt; &lt;code&gt;tf.data.Options&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;experimental_deterministic&lt;/code&gt; 매개 변수 를 &lt;code&gt;False&lt;/code&gt; 로 설정하면 비결 정성 을 희생하여 성능을 향상시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="17779c22d4b5a57316f7c4077f5ce8fe83d02c4d" translate="yes" xml:space="preserve">
          <source>By default, the resources held by a GradientTape are released as soon as GradientTape.gradient() method is called. To compute multiple gradients over the same computation, create a persistent gradient tape. This allows multiple calls to the gradient() method as resources are released when the tape object is garbage collected. For example:</source>
          <target state="translated">기본적으로 GradientTape가 보유한 자원은 GradientTape.gradient () 메소드가 호출 되 자마자 해제됩니다. 동일한 계산에서 여러 그라디언트를 계산하려면 영구 그라디언트 테이프를 만듭니다. 이렇게하면 테이프 객체가 가비지 수집 될 때 리소스가 해제 될 때 gradient () 메서드를 여러 번 호출 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b14aab26475d28a4469fd0fcdff56b7ce4200fa2" translate="yes" xml:space="preserve">
          <source>By default, this layer is inactive during inference.</source>
          <target state="translated">기본적으로이 레이어는 추론 중에 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="c2099aaca6ae9eb6d226051b3296d7a8208024aa" translate="yes" xml:space="preserve">
          <source>By default, this op performs an inclusive cumprod, which means that the first element of the input is identical to the first element of the output:</source>
          <target state="translated">기본적으로이 op는 포괄적 인 cumprod를 수행합니다. 즉, 입력의 첫 번째 요소가 출력의 첫 번째 요소와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="4d783c6d968b5f013f3616d67ab93e031d6bafa3" translate="yes" xml:space="preserve">
          <source>By default, this op performs an inclusive cumsum, which means that the first element of the input is identical to the first element of the output:</source>
          <target state="translated">기본적으로이 op는 포괄적 인 cumsum을 수행합니다. 즉, 입력의 첫 번째 요소가 출력의 첫 번째 요소와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="50a3ea146b55d4a2cb9c79604efb465832b640b1" translate="yes" xml:space="preserve">
          <source>By default, this op performs an inclusive cumsum, which means that the first element of the input is identical to the first element of the output: For example:</source>
          <target state="translated">기본적으로이 작업은 포함 된 누적 합계를 수행합니다. 즉, 입력의 첫 번째 요소가 출력의 첫 번째 요소와 동일합니다. 예 :</target>
        </trans-unit>
        <trans-unit id="a8a20263253e354c92fa47d4334abadee137d8a8" translate="yes" xml:space="preserve">
          <source>By default, this op performs an inclusive cumulative log-sum-exp, which means that the first element of the input is identical to the first element of the output.</source>
          <target state="translated">기본적으로이 op는 포괄적 인 누적 log-sum-exp를 수행합니다. 즉, 입력의 첫 번째 요소가 출력의 첫 번째 요소와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="0e6248762b1d199806639033e3ba2cf9d953ded8" translate="yes" xml:space="preserve">
          <source>By default, this op performs an inclusive cumulative log-sum-exp, which means that the first element of the input is identical to the first element of the output:</source>
          <target state="translated">기본적으로이 연산은 포괄적 인 누적 log-sum-exp를 수행합니다. 즉, 입력의 첫 번째 요소가 출력의 첫 번째 요소와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="a0f440b112dc5004493817ed80644708c24ba0e7" translate="yes" xml:space="preserve">
          <source>By default, we will attempt to compile your model to a static graph to deliver the best execution performance.</source>
          <target state="translated">기본적으로 최상의 실행 성능을 제공하기 위해 모델을 정적 그래프로 컴파일하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="e2b10f680b60588cd4f7e2d1ea146b0dbd9f54c6" translate="yes" xml:space="preserve">
          <source>By equivalent graph code we mean code that generates a TensorFlow graph when run. The generated graph has the same effects as the original code when executed (for example with &lt;a href=&quot;../../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../v1/session#run&quot;&gt;&lt;code&gt;tf.compat.v1.Session.run&lt;/code&gt;&lt;/a&gt;). In other words, using AutoGraph can be thought of as running Python in TensorFlow.</source>
          <target state="translated">동등한 그래프 코드는 실행시 TensorFlow 그래프를 생성하는 코드를 의미합니다. 생성 된 그래프는 실행될 때 원래 코드와 동일한 효과를 갖습니다 (예 : &lt;a href=&quot;../../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../v1/session#run&quot;&gt; &lt;code&gt;tf.compat.v1.Session.run&lt;/code&gt; &lt;/a&gt; ). 즉, AutoGraph를 사용하는 것은 TensorFlow에서 Python을 실행하는 것으로 생각할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="402cc38fc7ec7c348e185202c0cf0136ca6d1145" translate="yes" xml:space="preserve">
          <source>By equivalent graph code we mean code that generates a TensorFlow graph when run. The generated graph has the same effects as the original code when executed (for example with &lt;a href=&quot;../../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;session#run&quot;&gt;&lt;code&gt;tf.compat.v1.Session.run&lt;/code&gt;&lt;/a&gt;). In other words, using AutoGraph can be thought of as running Python in TensorFlow.</source>
          <target state="translated">동등한 그래프 코드는 실행시 TensorFlow 그래프를 생성하는 코드를 의미합니다. 생성 된 그래프는 실행될 때 원래 코드와 동일한 효과를 갖습니다 (예 : &lt;a href=&quot;../../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;session#run&quot;&gt; &lt;code&gt;tf.compat.v1.Session.run&lt;/code&gt; &lt;/a&gt; ). 즉, AutoGraph를 사용하는 것은 TensorFlow에서 Python을 실행하는 것으로 생각할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92367bc79fc0d6718bf78c26b61a7d03d0b69c80" translate="yes" xml:space="preserve">
          <source>By equivalent graph code we mean code that generates a TensorFlow graph when run. The generated graph has the same effects as the original code when executed (for example with &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;compat/v1/session#run&quot;&gt;&lt;code&gt;tf.compat.v1.Session.run&lt;/code&gt;&lt;/a&gt;). In other words, using AutoGraph can be thought of as running Python in TensorFlow.</source>
          <target state="translated">동등한 그래프 코드는 실행시 TensorFlow 그래프를 생성하는 코드를 의미합니다. 생성 된 그래프는 실행될 때 원래 코드와 동일한 효과를 갖습니다 (예 : &lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;compat/v1/session#run&quot;&gt; &lt;code&gt;tf.compat.v1.Session.run&lt;/code&gt; &lt;/a&gt; ). 즉, AutoGraph를 사용하는 것은 TensorFlow에서 Python을 실행하는 것으로 생각할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="365a5bbe3fd5bc6347d4823ea4b9c96237585068" translate="yes" xml:space="preserve">
          <source>By letting TensorFlow communicate with these systems, we will be able to automatically discover and resolve IP addresses for various TensorFlow workers. This will eventually allow us to automatically recover from underlying machine failures and scale TensorFlow worker clusters up and down.</source>
          <target state="translated">TensorFlow가 이러한 시스템과 통신 할 수 있도록하여 다양한 TensorFlow 작업자의 IP 주소를 자동으로 검색하고 확인할 수 있습니다. 이를 통해 근본적인 기계 고장을 자동으로 복구하고 TensorFlow 작업자 클러스터를 확장 및 축소 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9278e1fc0825360b5c57ae50e7726421e874417" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;exclusive&lt;/code&gt; kwarg to &lt;code&gt;True&lt;/code&gt;, an exclusive cumprod is performed instead:</source>
          <target state="translated">&lt;code&gt;exclusive&lt;/code&gt; kwarg를 &lt;code&gt;True&lt;/code&gt; 로 설정하면 독점 cumprod가 대신 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="1b9fc8dfe89d8c39b3672e06a4fc0add9305a002" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;exclusive&lt;/code&gt; kwarg to &lt;code&gt;True&lt;/code&gt;, an exclusive cumsum is performed instead:</source>
          <target state="translated">&lt;code&gt;exclusive&lt;/code&gt; kwarg를 &lt;code&gt;True&lt;/code&gt; 로 설정하면 배타적 cumsum이 대신 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="fc3f8805c459efe3b229e5703894e62932527857" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;exclusive&lt;/code&gt; kwarg to &lt;code&gt;True&lt;/code&gt;, an exclusive cumulative log-sum-exp is performed instead:</source>
          <target state="translated">&lt;code&gt;exclusive&lt;/code&gt; kwarg를 &lt;code&gt;True&lt;/code&gt; 로 설정하면 배타적 누적 log-sum-exp가 대신 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="1f410bd101941906092219520862dc5dca7fd59d" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;reverse&lt;/code&gt; kwarg to &lt;code&gt;True&lt;/code&gt;, the cumprod is performed in the opposite direction:</source>
          <target state="translated">&lt;code&gt;reverse&lt;/code&gt; kwarg를 &lt;code&gt;True&lt;/code&gt; 로 설정하면 cumprod가 반대 방향으로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="5268afdfbe723512d8f613eba89c0d66d4f16289" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;reverse&lt;/code&gt; kwarg to &lt;code&gt;True&lt;/code&gt;, the cumsum is performed in the opposite direction:</source>
          <target state="translated">&lt;code&gt;reverse&lt;/code&gt; kwarg를 &lt;code&gt;True&lt;/code&gt; 로 설정하면 적산 이 반대 방향으로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="cbd462d0d02ea388d33567771578eb28883d65bd" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;reverse&lt;/code&gt; kwarg to &lt;code&gt;True&lt;/code&gt;, the cumulative log-sum-exp is performed in the opposite direction.</source>
          <target state="translated">&lt;code&gt;reverse&lt;/code&gt; kwarg를 &lt;code&gt;True&lt;/code&gt; 로 설정하면 누적 log-sum-exp가 반대 방향으로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="d75b7ce723332c49e3b0dcb78c2e7462c0265b1f" translate="yes" xml:space="preserve">
          <source>By subclassing &lt;a href=&quot;module&quot;&gt;&lt;code&gt;tf.Module&lt;/code&gt;&lt;/a&gt; instead of &lt;code&gt;object&lt;/code&gt; any &lt;a href=&quot;variable&quot;&gt;&lt;code&gt;tf.Variable&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;module&quot;&gt;&lt;code&gt;tf.Module&lt;/code&gt;&lt;/a&gt; instances assigned to object properties can be collected using the &lt;code&gt;variables&lt;/code&gt;, &lt;code&gt;trainable_variables&lt;/code&gt; or &lt;code&gt;submodules&lt;/code&gt; property:</source>
          <target state="translated">서브 클래스 &lt;a href=&quot;module&quot;&gt; &lt;code&gt;tf.Module&lt;/code&gt; &lt;/a&gt; 대신 &lt;code&gt;object&lt;/code&gt; 임의 &lt;a href=&quot;variable&quot;&gt; &lt;code&gt;tf.Variable&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;module&quot;&gt; &lt;code&gt;tf.Module&lt;/code&gt; &lt;/a&gt; 객체 속성에 할당 된 인스턴스를 사용하여 수집 될 수있는 &lt;code&gt;variables&lt;/code&gt; , &lt;code&gt;trainable_variables&lt;/code&gt; 또는 &lt;code&gt;submodules&lt;/code&gt; 속성 :</target>
        </trans-unit>
        <trans-unit id="6037571e089d8bd1acea606516fc373fb2bb346e" translate="yes" xml:space="preserve">
          <source>By these rules, the result is a logical SparseTensor with exactly the same indices and shape, but possibly with different non-zero values. The output of this Op is the resultant non-zero values.</source>
          <target state="translated">이러한 규칙에 따라 결과는 정확히 동일한 인덱스와 모양을 가진 논리적 SparseTensor이지만 0이 아닌 값이 다를 수 있습니다. 이 Op의 출력은 결과적으로 0이 아닌 값입니다.</target>
        </trans-unit>
        <trans-unit id="63dfd9b92bc4acaee1d208175cddbad09369143d" translate="yes" xml:space="preserve">
          <source>BytesProducedStatsDataset</source>
          <target state="translated">BytesProducedStatsDataset</target>
        </trans-unit>
        <trans-unit id="191830e30338c0e6db1753dc0a6107b6c814af32" translate="yes" xml:space="preserve">
          <source>CIFAR10 small images classification dataset.</source>
          <target state="translated">CIFAR10 소형 이미지 분류 데이터 세트.</target>
        </trans-unit>
        <trans-unit id="f058d6651aace4395be00ea131d0059e135ebd71" translate="yes" xml:space="preserve">
          <source>CIFAR100 small images classification dataset.</source>
          <target state="translated">CIFAR100 소형 이미지 분류 데이터 세트.</target>
        </trans-unit>
        <trans-unit id="bd6d161c70c73e0be85ec54ff3d5a2a973fd3da1" translate="yes" xml:space="preserve">
          <source>CPU, GPU and TPU with the same algorithm and seed will generate the same integer random numbers. Float-point results (such as the output of &lt;code&gt;normal&lt;/code&gt;) may have small numerical discrepancies between CPU and GPU.</source>
          <target state="translated">알고리즘과 시드가 동일한 CPU, GPU 및 TPU는 동일한 정수 난수를 생성합니다. 부동 소수점 결과 (예 : &lt;code&gt;normal&lt;/code&gt; 출력 )는 CPU와 GPU 사이에 작은 수치 불일치가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5985b4390b5135cd0ededfe28adac3b21d1a2650" translate="yes" xml:space="preserve">
          <source>CPU, GPU and TPU with the same algorithm and seed will generate the same integer random numbers. Float-point results (such as the output of &lt;code&gt;normal&lt;/code&gt;) may have small numerical discrepancies between different devices.</source>
          <target state="translated">동일한 알고리즘 및 시드를 사용하는 CPU, GPU 및 TPU는 동일한 정수 난수를 생성합니다. 부동 소수점 결과 (예 : &lt;code&gt;normal&lt;/code&gt; 의 출력 )는 서로 다른 장치간에 약간의 수치 불일치를 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="325e9e852448a06cd618a5a8470c4afbd03ac01c" translate="yes" xml:space="preserve">
          <source>CPU: Intel Ivybridge with HyperThreading (6 cores) dL1:32KB dL2:256KB dL3:12MB GPU: NVidia Tesla k40c</source>
          <target state="translated">CPU : 하이퍼 스레딩 (6 코어)이있는 Intel Ivybridge dL1 : 32KB dL2 : 256KB dL3 : 12MB GPU : NVidia Tesla k40c</target>
        </trans-unit>
        <trans-unit id="4bacb9e2b499e29353a359256e046f714c5393e5" translate="yes" xml:space="preserve">
          <source>CSRSparseMatrixComponents</source>
          <target state="translated">CSRSparseMatrixComponents</target>
        </trans-unit>
        <trans-unit id="78062384785387bd0a5990e3137ef2ef2a04eb18" translate="yes" xml:space="preserve">
          <source>CSRSparseMatrixToDense</source>
          <target state="translated">CSRSparseMatrixToDense</target>
        </trans-unit>
        <trans-unit id="d4d835263c12e008d2e76b2d3f8a187106f5e584" translate="yes" xml:space="preserve">
          <source>CSRSparseMatrixToSparseTensor</source>
          <target state="translated">CSRSparseMatrixToSparseTensor</target>
        </trans-unit>
        <trans-unit id="fda6aca6de8894cf03f33188f3e662039a8d2d22" translate="yes" xml:space="preserve">
          <source>CSVDataset</source>
          <target state="translated">CSVDataset</target>
        </trans-unit>
        <trans-unit id="922eb9caf98a38ecf66359efd5fe093be05f2ddf" translate="yes" xml:space="preserve">
          <source>CTCBeamSearchDecoder</source>
          <target state="translated">CTCBeamSearchDecoder</target>
        </trans-unit>
        <trans-unit id="6629c36b7a1d6d8537d4288ac195b5e6d8c4d621" translate="yes" xml:space="preserve">
          <source>CTCGreedyDecoder</source>
          <target state="translated">CTCGreedyDecoder</target>
        </trans-unit>
        <trans-unit id="5c435b722f2bc9152d11b1225cc3099efa162504" translate="yes" xml:space="preserve">
          <source>CTCLoss</source>
          <target state="translated">CTCLoss</target>
        </trans-unit>
        <trans-unit id="720d9b8c66418056d4d1b01847a165ca3aac16e8" translate="yes" xml:space="preserve">
          <source>CTCLossV2</source>
          <target state="translated">CTCLossV2</target>
        </trans-unit>
        <trans-unit id="d91a4b330c1f122b0b95d755e0bc9066dee8004a" translate="yes" xml:space="preserve">
          <source>Cache for file writers.</source>
          <target state="translated">파일 작성자를위한 캐시</target>
        </trans-unit>
        <trans-unit id="4e435d146c5e5a34b87255dfede60dcaee461815" translate="yes" xml:space="preserve">
          <source>CacheDataset</source>
          <target state="translated">CacheDataset</target>
        </trans-unit>
        <trans-unit id="2e7eaf517e36e2d75165058dd9aef45ac0d75505" translate="yes" xml:space="preserve">
          <source>CacheDatasetV2</source>
          <target state="translated">CacheDatasetV2</target>
        </trans-unit>
        <trans-unit id="1d00fbe086847cad4f2244cc37108b13b4f29e8e" translate="yes" xml:space="preserve">
          <source>Caches the elements in this dataset.</source>
          <target state="translated">이 데이터 세트의 요소를 캐시합니다.</target>
        </trans-unit>
        <trans-unit id="bd7a3dd03780fcad0a12d79e9ffc623efaca0842" translate="yes" xml:space="preserve">
          <source>Calculate and return the total variation for one or more images.</source>
          <target state="translated">하나 이상의 이미지에 대한 총 변형을 계산하고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e8d5916ff9239e92e0656d344a61532f3756c6c4" translate="yes" xml:space="preserve">
          <source>Calculate padding required to make block_shape divide input_shape.</source>
          <target state="translated">block_shape을 input_shape로 나누는 데 필요한 패딩을 계산하십시오.</target>
        </trans-unit>
        <trans-unit id="f5abaeb441d5bd58c1eda10ce44390220e4a3ec8" translate="yes" xml:space="preserve">
          <source>Calculate per-step mean Intersection-Over-Union (mIOU).</source>
          <target state="translated">단계별 평균 교차-교차 (mIOU)를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="543d066a1b71be1c04b11ff8673d6182166c83aa" translate="yes" xml:space="preserve">
          <source>Calculate product with tridiagonal matrix.</source>
          <target state="translated">삼중 대각 행렬로 곱을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="c5e6d4768e146bf3b1fba4b2243a95ec1b36efb0" translate="yes" xml:space="preserve">
          <source>Calculate scores with shape &lt;code&gt;[batch_size, Tq, Tv]&lt;/code&gt; as a &lt;code&gt;query&lt;/code&gt;-&lt;code&gt;key&lt;/code&gt; dot product: &lt;code&gt;scores = tf.matmul(query, key, transpose_b=True)&lt;/code&gt;.</source>
          <target state="translated">형상 점수 계산 &lt;code&gt;[batch_size, Tq, Tv]&lt;/code&gt; A와 &lt;code&gt;query&lt;/code&gt; - &lt;code&gt;key&lt;/code&gt; 내적 : &lt;code&gt;scores = tf.matmul(query, key, transpose_b=True)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="37d6d65a142ce498def031c593a9ad83b886c01d" translate="yes" xml:space="preserve">
          <source>Calculate scores with shape &lt;code&gt;[batch_size, Tq, Tv]&lt;/code&gt; as a non-linear sum: &lt;code&gt;scores = tf.reduce_sum(tf.tanh(query + value), axis=-1)&lt;/code&gt;</source>
          <target state="translated">모양이 &lt;code&gt;[batch_size, Tq, Tv]&lt;/code&gt; 인 비선형 합계로 &lt;code&gt;scores = tf.reduce_sum(tf.tanh(query + value), axis=-1)&lt;/code&gt; 계산합니다. scores = tf.reduce_sum (tf.tanh (query + value), axis = -1)</target>
        </trans-unit>
        <trans-unit id="fcf7461386b46444c1996d91e3aa1efa39aa5b1c" translate="yes" xml:space="preserve">
          <source>Calculate the &lt;a href=&quot;https://en.wikipedia.org/wiki/Moore%E2%80%93Penrose_inverse&quot;&gt;generalized inverse of a matrix&lt;/a&gt; using its singular-value decomposition (SVD) and including all large singular values.</source>
          <target state="translated">단일 값 분해 (SVD)를 사용하고 모든 큰 특이 값을 포함하여 &lt;a href=&quot;https://en.wikipedia.org/wiki/Moore%E2%80%93Penrose_inverse&quot;&gt;행렬&lt;/a&gt; 의 일반화 된 역을 계산 합니다.</target>
        </trans-unit>
        <trans-unit id="82497b7f4cb38917ec39468928b59fcdbd0e21aa" translate="yes" xml:space="preserve">
          <source>Calculate the mean and variance by analyzing the dataset in &lt;code&gt;adapt&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;adapt&lt;/code&gt; 에서 데이터 세트를 분석하여 평균과 분산을 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="73d9854be25bd752f48364b99e22a3a96d1f8117" translate="yes" xml:space="preserve">
          <source>Calculate the mean and variance of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 의 평균과 분산을 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="72a12401f478a02b1988b98f2aa7a1361382f8c8" translate="yes" xml:space="preserve">
          <source>Calculate the mean and variance of based on the sufficient statistics.</source>
          <target state="translated">충분한 통계를 바탕으로 평균과 분산을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="cab257d9580612c43f67ffd1520be99a9c4a9042" translate="yes" xml:space="preserve">
          <source>Calculate the softmax of the innermost dimensions of a SparseMatrix.</source>
          <target state="translated">SparseMatrix의 가장 안쪽 차원의 소프트 맥스를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="2737e0cd49779168366a82d5f13b2cc14c1e434b" translate="yes" xml:space="preserve">
          <source>Calculate the sufficient statistics for the mean and variance of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 의 평균과 분산에 대한 충분한 통계량을 계산하십시오 .</target>
        </trans-unit>
        <trans-unit id="cae09f50553a634663220edecb36109a543a2039" translate="yes" xml:space="preserve">
          <source>Calculates gains for each feature and returns the best possible split information for each node. However, if no split is found, then no split information is returned for that node.</source>
          <target state="translated">각 기능에 대한 이득을 계산하고 각 노드에 대해 가능한 최상의 분할 정보를 반환합니다. 그러나 분할이 발견되지 않으면 해당 노드에 대한 분할 정보가 리턴되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8ad09c1b1f32cb1bbd3060492315a25e09478afe" translate="yes" xml:space="preserve">
          <source>Calculates gains for each feature and returns the best possible split information for the feature.</source>
          <target state="translated">각 기능에 대한 이득을 계산하고 기능에 대해 가능한 최상의 분할 정보를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="848e1ae7c746bca87b8e43d22c6babacb2647a13" translate="yes" xml:space="preserve">
          <source>Calculates how often &lt;code&gt;predictions&lt;/code&gt; matches &lt;code&gt;labels&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;predictions&lt;/code&gt; &lt;code&gt;labels&lt;/code&gt; 과 일치 하는 빈도를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="5a31525526af2c68ff94dd6b686029cddfe222c6" translate="yes" xml:space="preserve">
          <source>Calculates how often predictions equals labels.</source>
          <target state="translated">예측이 레이블과 일치하는 빈도를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="29d4ae6353c4db654d2d45ec55d22d0b7028ab38" translate="yes" xml:space="preserve">
          <source>Calculates how often predictions matches binary labels.</source>
          <target state="translated">예측이 이진 레이블과 일치하는 빈도를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="5d675edb2cef7a5762d1f17bbedbcb2d11b5de60" translate="yes" xml:space="preserve">
          <source>Calculates how often predictions matches integer labels.</source>
          <target state="translated">예측이 정수 레이블과 일치하는 빈도를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="15cb410c6c1440a05c1cd4de092dbbb38fe40286" translate="yes" xml:space="preserve">
          <source>Calculates how often predictions matches labels.</source>
          <target state="translated">예측이 레이블과 일치하는 빈도를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="b2390314d0854259f46b560097b0a0befd5caf1b" translate="yes" xml:space="preserve">
          <source>Calculates how often predictions matches one-hot labels.</source>
          <target state="translated">예측이 원-핫 라벨과 일치하는 빈도를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="d16642dead35d6143122ae430ae9731b239347e2" translate="yes" xml:space="preserve">
          <source>Calculates product of two matrices, where left matrix is a tridiagonal matrix.</source>
          <target state="translated">왼쪽 행렬이 삼중 대각 행렬 인 두 행렬의 곱을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="a2d6c4be8dc19f8f23f910710393d1266c17be42" translate="yes" xml:space="preserve">
          <source>Calculates the CTC Loss (log probability) for each batch entry. Also calculates</source>
          <target state="translated">각 배치 항목에 대한 CTC 손실 (로그 확률)을 계산합니다. 또한 계산</target>
        </trans-unit>
        <trans-unit id="d70798b6b817e75b87b21aa8a5b8b13b33e3a89c" translate="yes" xml:space="preserve">
          <source>Calculates the accuracy for each class, then takes the mean of that.</source>
          <target state="translated">각 클래스의 정확도를 계산 한 다음 그 평균을 취합니다.</target>
        </trans-unit>
        <trans-unit id="305e8f8c2b06d7787024ad80396269b74c74ea6e" translate="yes" xml:space="preserve">
          <source>Calculates the gradient of the SparseMatrixSoftmax op.</source>
          <target state="translated">SparseMatrixSoftmax 작업의 기울기를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="8a03c79d23b5e0677609527dedfc3737b8a76ad9" translate="yes" xml:space="preserve">
          <source>Calculates the mean and variance of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 의 평균과 분산을 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="cc63af24dfe3f981835b8fcd5fe2da3b6de26bfa" translate="yes" xml:space="preserve">
          <source>Calculates the mean of the per-class accuracies.</source>
          <target state="translated">클래스 별 정확도의 평균을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="dfdefd65513a5d4ce1a13498502bf48f6e06e37e" translate="yes" xml:space="preserve">
          <source>Calculates the number of false negatives.</source>
          <target state="translated">거짓 부정의 수를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="7bca367a8fc1fac3606b7ae07adc8ed3af5b86e7" translate="yes" xml:space="preserve">
          <source>Calculates the number of false positives.</source>
          <target state="translated">오 탐지 수를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="b12e664872b284ed4675ab957a3103976b0a4ce4" translate="yes" xml:space="preserve">
          <source>Calculates the number of true negatives.</source>
          <target state="translated">실제 음수의 수를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="c10eb264d5e38988188f81c29b3063e30df03b8a" translate="yes" xml:space="preserve">
          <source>Calculates the number of true positives.</source>
          <target state="translated">참 긍정 수를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="73b5e7a3676fa843762f7729cb399fc7f40046e9" translate="yes" xml:space="preserve">
          <source>Calculates the prior from the training data (the bias) and fills in the first node with the logits' prior. Returns a boolean indicating whether to continue centering.</source>
          <target state="translated">훈련 데이터 (편향)에서 사전을 계산하고 첫 번째 노드를 로짓 사전으로 채 웁니다. 센터링을 계속할지 여부를 나타내는 부울을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="aeed0ad6979382ec548109cf5ea1b08fb4129008" translate="yes" xml:space="preserve">
          <source>Calculates the softmax of a CSRSparseMatrix.</source>
          <target state="translated">CSRSparseMatrix의 소프트 맥스를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="c76706dfc2641d0e9f20f4e9f2014d27ec1b98df" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;../../../distribute/strategyextended#reduce_to&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended.reduce_to(VariableAggregation.SUM, t, v)&lt;/code&gt;&lt;/a&gt; (for one variable) or &lt;a href=&quot;../../../distribute/strategyextended#batch_reduce_to&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended.batch_reduce_to&lt;/code&gt;&lt;/a&gt; (for a list of variables) to sum the updates.</source>
          <target state="translated">통화 &lt;a href=&quot;../../../distribute/strategyextended#reduce_to&quot;&gt; &lt;code&gt;tf.distribute.StrategyExtended.reduce_to(VariableAggregation.SUM, t, v)&lt;/code&gt; &lt;/a&gt; (하나 개의 변수) 또는 &lt;a href=&quot;../../../distribute/strategyextended#batch_reduce_to&quot;&gt; &lt;code&gt;tf.distribute.StrategyExtended.batch_reduce_to&lt;/code&gt; &lt;/a&gt; (변수의리스트)를 업데이트를 합산한다.</target>
        </trans-unit>
        <trans-unit id="875500308dfbd4c32a5730c807e271d344bac72d" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;../../../distribute/strategyextended#reduce_to&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended.reduce_to(VariableAggregation.SUM, t, v)&lt;/code&gt;&lt;/a&gt; (for one variable) or &lt;a href=&quot;../../../distribute/strategyextended#batch_reduce_to&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended.batch_reduce_to&lt;/code&gt;&lt;/a&gt; (for a list of variables) to sum the updates. and broadcast the result to the variable's devices.</source>
          <target state="translated">통화 &lt;a href=&quot;../../../distribute/strategyextended#reduce_to&quot;&gt; &lt;code&gt;tf.distribute.StrategyExtended.reduce_to(VariableAggregation.SUM, t, v)&lt;/code&gt; &lt;/a&gt; (하나 개의 변수) 또는 &lt;a href=&quot;../../../distribute/strategyextended#batch_reduce_to&quot;&gt; &lt;code&gt;tf.distribute.StrategyExtended.batch_reduce_to&lt;/code&gt; &lt;/a&gt; (변수의리스트)를 업데이트를 합산한다. 결과를 변수의 장치에 브로드 캐스트합니다.</target>
        </trans-unit>
        <trans-unit id="7ddfcfac0b486aa1e76127af81441c8e49ac2087" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;../../../distribute/strategyextended#update&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended.update(v)&lt;/code&gt;&lt;/a&gt; for each variable to update its value.</source>
          <target state="translated">각 변수에 대해 &lt;a href=&quot;../../../distribute/strategyextended#update&quot;&gt; &lt;code&gt;tf.distribute.StrategyExtended.update(v)&lt;/code&gt; &lt;/a&gt; 를 호출 하여 값을 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="215947a37ade89b6214592f7a3c40b3f30b8bb59" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;strategyextended#reduce_to&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended.reduce_to(VariableAggregation.SUM, t, v)&lt;/code&gt;&lt;/a&gt; (for one variable) or &lt;a href=&quot;strategyextended#batch_reduce_to&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended.batch_reduce_to&lt;/code&gt;&lt;/a&gt; (for a list of variables) to sum the updates.</source>
          <target state="translated">통화 &lt;a href=&quot;strategyextended#reduce_to&quot;&gt; &lt;code&gt;tf.distribute.StrategyExtended.reduce_to(VariableAggregation.SUM, t, v)&lt;/code&gt; &lt;/a&gt; (하나 개의 변수) 또는 &lt;a href=&quot;strategyextended#batch_reduce_to&quot;&gt; &lt;code&gt;tf.distribute.StrategyExtended.batch_reduce_to&lt;/code&gt; &lt;/a&gt; (변수의리스트)를 업데이트를 합산한다.</target>
        </trans-unit>
        <trans-unit id="30d7ecda8acf000402e6565c0283f7a2ac7bb9ea" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;strategyextended#reduce_to&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended.reduce_to(VariableAggregation.SUM, t, v)&lt;/code&gt;&lt;/a&gt; (for one variable) or &lt;a href=&quot;strategyextended#batch_reduce_to&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended.batch_reduce_to&lt;/code&gt;&lt;/a&gt; (for a list of variables) to sum the updates. and broadcast the result to the variable's devices.</source>
          <target state="translated">통화 &lt;a href=&quot;strategyextended#reduce_to&quot;&gt; &lt;code&gt;tf.distribute.StrategyExtended.reduce_to(VariableAggregation.SUM, t, v)&lt;/code&gt; &lt;/a&gt; (하나 개의 변수) 또는 &lt;a href=&quot;strategyextended#batch_reduce_to&quot;&gt; &lt;code&gt;tf.distribute.StrategyExtended.batch_reduce_to&lt;/code&gt; &lt;/a&gt; (변수의리스트)를 업데이트를 합산한다. 결과를 변수의 장치에 브로드 캐스트합니다.</target>
        </trans-unit>
        <trans-unit id="e9e52d5a254f4e26301dcf2d0f6560aaf79ffba0" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;strategyextended#update&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended.update(v)&lt;/code&gt;&lt;/a&gt; for each variable to update its value.</source>
          <target state="translated">각 변수에 대해 &lt;a href=&quot;strategyextended#update&quot;&gt; &lt;code&gt;tf.distribute.StrategyExtended.update(v)&lt;/code&gt; &lt;/a&gt; 를 호출 하여 값을 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="f715604f97ac7747ca179f45d7f3b30a005e510e" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;tf.compat.v1.get_variable_scope().set_use_resource(True)&lt;/code&gt; inside a &lt;a href=&quot;variable_scope&quot;&gt;&lt;code&gt;tf.compat.v1.variable_scope&lt;/code&gt;&lt;/a&gt; before the &lt;a href=&quot;get_variable&quot;&gt;&lt;code&gt;tf.compat.v1.get_variable()&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">전화 &lt;code&gt;tf.compat.v1.get_variable_scope().set_use_resource(True)&lt;/code&gt; , 안쪽 &lt;a href=&quot;variable_scope&quot;&gt; &lt;code&gt;tf.compat.v1.variable_scope&lt;/code&gt; &lt;/a&gt; 전과 &lt;a href=&quot;get_variable&quot;&gt; &lt;code&gt;tf.compat.v1.get_variable()&lt;/code&gt; &lt;/a&gt; 호출.</target>
        </trans-unit>
        <trans-unit id="a7e135534b14630e2a69518e9b10c0d6231cb98e" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;tf_decorator.make_decorator&lt;/code&gt; on your wrapper function. If your decorator is stateless, or can capture all of the variables it needs to work with through lexical closure, this is the simplest option. Create your wrapper function as usual, but instead of returning it, return &lt;code&gt;tf_decorator.make_decorator(target, your_wrapper)&lt;/code&gt;. This will attach some decorator introspection metadata onto your wrapper and return it.</source>
          <target state="translated">랩퍼 함수에서 &lt;code&gt;tf_decorator.make_decorator&lt;/code&gt; 를 호출 하십시오. 데코레이터가 상태가 없거나 어휘 폐쇄를 통해 작업해야하는 모든 변수를 캡처 할 수있는 경우 가장 간단한 옵션입니다. 평소와 같이 랩퍼 함수를 ​​작성하십시오. 그러나 리턴하는 대신 &lt;code&gt;tf_decorator.make_decorator(target, your_wrapper)&lt;/code&gt; 리턴 하십시오 . 그러면 데코레이터 내부 검사 메타 데이터가 래퍼에 첨부되어 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="b3083567448921c5f2529595633164952fac4ec2" translate="yes" xml:space="preserve">
          <source>Call Arguments:</source>
          <target state="translated">전화 인수 :</target>
        </trans-unit>
        <trans-unit id="0a4f48c02ec018b3bb271d70aa450cde1b30add9" translate="yes" xml:space="preserve">
          <source>Call arguments:</source>
          <target state="translated">전화 인수 :</target>
        </trans-unit>
        <trans-unit id="eef266f410d282365eeaef6f6541415ad4d67585" translate="yes" xml:space="preserve">
          <source>Call self as a function.</source>
          <target state="translated">자신을 함수라고 부릅니다.</target>
        </trans-unit>
        <trans-unit id="03d1af542fa5c12db396e05b38fa8dd8ccde3b5f" translate="yes" xml:space="preserve">
          <source>Call this method to make sure that all pending events have been written to disk.</source>
          <target state="translated">보류중인 모든 이벤트가 디스크에 기록되도록하려면이 메소드를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="7899c2370850201587c4e3659030d6e39428abba" translate="yes" xml:space="preserve">
          <source>Call this method when you do not need the summary writer anymore.</source>
          <target state="translated">요약 작성기가 더 이상 필요하지 않은 경우이 메소드를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="b1472181aa3b9919bd5f5ce47b0f35ec4e43b941" translate="yes" xml:space="preserve">
          <source>Callable learning rate</source>
          <target state="translated">호출 가능한 학습률</target>
        </trans-unit>
        <trans-unit id="69ffca77d2f1f0110be1d98fb16f75d7cd476abb" translate="yes" xml:space="preserve">
          <source>Callable returned by &lt;code&gt;wrap&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;wrap&lt;/code&gt; 에 의해 반환 된 Callable .</target>
        </trans-unit>
        <trans-unit id="96f8e4dd7fb2cf3cab1368bad2cea449be677f6e" translate="yes" xml:space="preserve">
          <source>Callable that needs to be replaced.</source>
          <target state="translated">교체해야하는 호출 가능.</target>
        </trans-unit>
        <trans-unit id="638449bc1117a1be0c4cffc59058647b22e99ad5" translate="yes" xml:space="preserve">
          <source>Callable that takes as a first argument the true getter, and allows overwriting the internal get_variable method. The signature of &lt;code&gt;custom_getter&lt;/code&gt; should match that of this method, but the most future-proof version will allow for changes: &lt;code&gt;def custom_getter(getter, *args, **kwargs)&lt;/code&gt;. Direct access to all &lt;code&gt;get_variable&lt;/code&gt; parameters is also allowed: &lt;code&gt;def custom_getter(getter, name, *args, **kwargs)&lt;/code&gt;. A simple identity custom getter that simply creates variables with modified names is:</source>
          <target state="translated">첫 번째 인수로 진정한 getter를 취하고 내부 get_variable 메서드를 덮어 쓸 수있는 Callable. &lt;code&gt;custom_getter&lt;/code&gt; 의 시그니처는 이 메서드 의 시그니처 와 일치해야하지만 가장 미래 보장형 버전에서는 &lt;code&gt;def custom_getter(getter, *args, **kwargs)&lt;/code&gt; 를 변경할 수 있습니다. 모든 &lt;code&gt;get_variable&lt;/code&gt; 매개 변수에 대한 직접 액세스 도 허용됩니다 : &lt;code&gt;def custom_getter(getter, name, *args, **kwargs)&lt;/code&gt; . 수정 된 이름으로 변수를 간단히 생성하는 간단한 ID 사용자 지정 getter는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ff747c36a8645d145d52601238c4d1705ad6bdfa" translate="yes" xml:space="preserve">
          <source>Callable that will be called upon each element in elems</source>
          <target state="translated">elems의 각 요소에 대해 호출 될 호출 가능</target>
        </trans-unit>
        <trans-unit id="65d57d13fb951a9af3f0d0010db1ab83a0d42210" translate="yes" xml:space="preserve">
          <source>Callable that will be called upon each element in elems and an accumulator, for instance &lt;code&gt;lambda acc, x: acc + x&lt;/code&gt;</source>
          <target state="translated">elems 및 누산기의 각 요소에 대해 호출되는 호출 가능 (예 &lt;code&gt;lambda acc, x: acc + x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fad6c210c953fff8211f1ba9bc06219290b29c98" translate="yes" xml:space="preserve">
          <source>Callable to be used to clone each layer in the target model (except &lt;code&gt;InputLayer&lt;/code&gt; instances). It takes as argument the layer instance to be cloned, and returns the corresponding layer instance to be used in the model copy. If unspecified, this callable defaults to the following serialization/deserialization function: &lt;code&gt;lambda layer: layer.__class__.from_config(layer.get_config())&lt;/code&gt;. By passing a custom callable, you can customize your copy of the model, e.g. by wrapping certain layers of interest (you might want to replace all &lt;code&gt;LSTM&lt;/code&gt; instances with equivalent &lt;code&gt;Bidirectional(LSTM(...))&lt;/code&gt; instances, for example).</source>
          <target state="translated">대상 모델의 각 레이어를 복제하는 데 사용하기 위해 호출 가능합니다 ( &lt;code&gt;InputLayer&lt;/code&gt; 인스턴스 제외 ). 복제 할 레이어 인스턴스를 인수로 취하고 모델 복사본에서 사용할 해당 레이어 인스턴스를 반환합니다. 지정되지 않은 경우이 콜 &lt;code&gt;lambda layer: layer.__class__.from_config(layer.get_config())&lt;/code&gt; 은 기본적으로 다음 직렬화 / 역 직렬화 함수로 설정됩니다 : lambda layer : layer .__ class __. from_config (layer.get_config ()) . 커스텀 콜 러블을 전달함으로써, 예를 들어 관심있는 특정 레이어를 래핑하여 모델의 사본을 사용자 정의 할 수 있습니다 (예를 들어 모든 &lt;code&gt;LSTM&lt;/code&gt; 인스턴스를 동등한 &lt;code&gt;Bidirectional(LSTM(...))&lt;/code&gt; 인스턴스 로 대체 할 수 있습니다 ).</target>
        </trans-unit>
        <trans-unit id="b359929b6bf477d0498df241af440fd26389bbdf" translate="yes" xml:space="preserve">
          <source>Callable to execute one training step. Called repeatedly as &lt;code&gt;train_step_fn(session, *args **kwargs)&lt;/code&gt;.</source>
          <target state="translated">하나의 훈련 단계를 실행하도록 호출 가능합니다. &lt;code&gt;train_step_fn(session, *args **kwargs)&lt;/code&gt; 로 반복적으로 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="d37255cba5e8e3caae91fdfdc7e272337c64fb48" translate="yes" xml:space="preserve">
          <source>Callable to replace previous_target with.</source>
          <target state="translated">previous_target을 대체하기 위해 호출 가능합니다.</target>
        </trans-unit>
        <trans-unit id="e404dbea75b92566c2e78b7c8d13cd5472b92e35" translate="yes" xml:space="preserve">
          <source>Callable. A function to do customized intialization if no checkpoints are in the directory.</source>
          <target state="translated">부름. 디렉터리에 체크 포인트가없는 경우 사용자 지정 초기화를 수행하는 기능입니다.</target>
        </trans-unit>
        <trans-unit id="121067c30a8795f487f929ac72d30e4a9dd5f476" translate="yes" xml:space="preserve">
          <source>Callback for creating simple, custom callbacks on-the-fly.</source>
          <target state="translated">간단한 맞춤형 콜백을 즉석에서 생성하기위한 콜백.</target>
        </trans-unit>
        <trans-unit id="7e0eb9fb6d91c4971d18a8d7376015b4220302e8" translate="yes" xml:space="preserve">
          <source>Callback that accumulates epoch averages of metrics.</source>
          <target state="translated">획기적인 평균 메트릭을 누적하는 콜백입니다.</target>
        </trans-unit>
        <trans-unit id="66321c6ec42e7fca2e738ed61eacbd27dccf819f" translate="yes" xml:space="preserve">
          <source>Callback that prints metrics to stdout.</source>
          <target state="translated">메트릭을 stdout에 인쇄하는 콜백</target>
        </trans-unit>
        <trans-unit id="61efc9334816b060a5770e93ae57052e74c07c89" translate="yes" xml:space="preserve">
          <source>Callback that records events into a &lt;code&gt;History&lt;/code&gt; object.</source>
          <target state="translated">이벤트를 &lt;code&gt;History&lt;/code&gt; 객체에 기록하는 콜백입니다 .</target>
        </trans-unit>
        <trans-unit id="848b97ce7f32dfa7f699c96e90a753591e00f77b" translate="yes" xml:space="preserve">
          <source>Callback that streams epoch results to a CSV file.</source>
          <target state="translated">에포크 결과를 CSV 파일로 스트리밍하는 콜백입니다.</target>
        </trans-unit>
        <trans-unit id="a59c720a70cb6d984affd924a04b4e39a3cec79e" translate="yes" xml:space="preserve">
          <source>Callback that streams epoch results to a csv file.</source>
          <target state="translated">에포크 결과를 csv 파일로 스트리밍하는 콜백</target>
        </trans-unit>
        <trans-unit id="950399cc17b66bf0c01f20b0e59e2a7902df91f4" translate="yes" xml:space="preserve">
          <source>Callback that terminates training when a NaN loss is encountered.</source>
          <target state="translated">NaN 손실이 발생하면 교육을 종료하는 콜백입니다.</target>
        </trans-unit>
        <trans-unit id="06d620eda80111e960e4320082e8385d8a584b40" translate="yes" xml:space="preserve">
          <source>Callback to back up and restore the training state.</source>
          <target state="translated">훈련 상태를 백업하고 복원하기위한 콜백.</target>
        </trans-unit>
        <trans-unit id="4bf97f8f1bd8c45ec05302d47dc589ad41d366eb" translate="yes" xml:space="preserve">
          <source>Callback to deserialize the object.</source>
          <target state="translated">객체를 직렬화 해제하기위한 콜백</target>
        </trans-unit>
        <trans-unit id="1633de288f42291fea863f0d9309015d2df8a5a3" translate="yes" xml:space="preserve">
          <source>Callback to save the Keras model or model weights at some frequency.</source>
          <target state="translated">Keras 모델 또는 모델 가중치를 특정 빈도로 저장하기위한 콜백.</target>
        </trans-unit>
        <trans-unit id="e5337b726278610de4f20e92050ab6a49c14c76f" translate="yes" xml:space="preserve">
          <source>Callback to serialize the object. Returns a string.</source>
          <target state="translated">객체를 직렬화하기위한 콜백 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e296a60c25338ecabb10a3892a39411d7cb48f15" translate="yes" xml:space="preserve">
          <source>Callback used to stream events to a server.</source>
          <target state="translated">서버로 이벤트를 스트리밍하는 데 사용되는 콜백</target>
        </trans-unit>
        <trans-unit id="2a7e77c42d018e79bff39fae35bcadc22ea5fc5d" translate="yes" xml:space="preserve">
          <source>Callbacks: utilities called at certain points during model training.</source>
          <target state="translated">콜백 : 모델 교육 중 특정 지점에서 유틸리티가 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="a4324d5aa0868664fb93259dbad337f1d96c233d" translate="yes" xml:space="preserve">
          <source>Called after each call to run().</source>
          <target state="translated">run ()을 호출 할 때마다 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="1b90b0ed6adc825f41468bfb71a1fb07d7b36ce1" translate="yes" xml:space="preserve">
          <source>Called at 'timer_interval_secs' boundaries.</source>
          <target state="translated">'timer_interval_secs'경계에서 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="5e9623bc7c36dde28962be9fd25834083476b3dd" translate="yes" xml:space="preserve">
          <source>Called at the beginning of a batch in &lt;code&gt;evaluate&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;evaluate&lt;/code&gt; 메소드 에서 배치 시작시 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="4b1f84a94769b9a2478c8a0da30e2c0dffcc6077" translate="yes" xml:space="preserve">
          <source>Called at the beginning of a batch in &lt;code&gt;predict&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;predict&lt;/code&gt; 메소드 에서 배치 시작시 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="916e6773512343819a27dd0590c9ab56a0806f03" translate="yes" xml:space="preserve">
          <source>Called at the beginning of a training batch in &lt;code&gt;fit&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;fit&lt;/code&gt; 방법 으로 훈련 배치의 시작 부분에서 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="b1f655fbf0fbc64afb73d0ed76eca9dd61fa781e" translate="yes" xml:space="preserve">
          <source>Called at the beginning of evaluation or validation.</source>
          <target state="translated">평가 또는 검증 시작시 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="e101e25f9a7a0d392e9656f422c112a3a7a231f8" translate="yes" xml:space="preserve">
          <source>Called at the beginning of prediction.</source>
          <target state="translated">예측이 시작될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="bd4a6f042a2dfdb8ed082467b01edcbc092b5f52" translate="yes" xml:space="preserve">
          <source>Called at the beginning of training.</source>
          <target state="translated">훈련이 시작될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="d586510c89bc867ca4075c8bab24dcc0505a38fe" translate="yes" xml:space="preserve">
          <source>Called at the end of a batch in &lt;code&gt;evaluate&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;evaluate&lt;/code&gt; 메소드 에서 배치 끝에서 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="d8da9e9f3b9d7ae815c96590fee6b2f62271c778" translate="yes" xml:space="preserve">
          <source>Called at the end of a batch in &lt;code&gt;predict&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;predict&lt;/code&gt; 메소드 에서 배치 끝에서 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="8d44906a63d89e06ba5e4bebd95cf6a0957c6b64" translate="yes" xml:space="preserve">
          <source>Called at the end of a training batch in &lt;code&gt;fit&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;fit&lt;/code&gt; 방법 으로 교육 배치가 끝날 때 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="5d5b83a8f2680f3a24afeb023edca572b82c6cde" translate="yes" xml:space="preserve">
          <source>Called at the end of an epoch.</source>
          <target state="translated">신기원의 끝에 부름.</target>
        </trans-unit>
        <trans-unit id="3e1371d719791c3dd3ea879c10c5a1955bd19013" translate="yes" xml:space="preserve">
          <source>Called at the end of evaluation or validation.</source>
          <target state="translated">평가 또는 검증이 끝날 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="5017b821fec7bc45610a9f5cc9766cb5febe8318" translate="yes" xml:space="preserve">
          <source>Called at the end of prediction.</source>
          <target state="translated">예측이 끝날 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="76760e80b63c958f239d75d5ad4512117f73ad1e" translate="yes" xml:space="preserve">
          <source>Called at the end of session.</source>
          <target state="translated">세션이 끝날 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="889c44d53e3033b04007c418814f5a7a4fcc5066" translate="yes" xml:space="preserve">
          <source>Called at the end of training.</source>
          <target state="translated">훈련이 끝날 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="e7f31a1b48269efc5dd397e08f92678240e44f5a" translate="yes" xml:space="preserve">
          <source>Called at the start of an epoch.</source>
          <target state="translated">신기원이 시작될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="2c6c23813f0266497be680fb5405d5f03c2c858a" translate="yes" xml:space="preserve">
          <source>Called before each call to run().</source>
          <target state="translated">run ()을 호출하기 전에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="dcc9f7d48ffe0246e93b693886a961f53e848cae" translate="yes" xml:space="preserve">
          <source>Called once before using the session.</source>
          <target state="translated">세션을 사용하기 전에 한 번 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="01abf9858061a422328df321eb2847e112b3ef7a" translate="yes" xml:space="preserve">
          <source>Called when new TensorFlow session is created.</source>
          <target state="translated">새로운 TensorFlow 세션이 생성 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="aed2191fe4cb3250e557b2441086457b02885576" translate="yes" xml:space="preserve">
          <source>Called when the thread starts.</source>
          <target state="translated">스레드가 시작될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="00ee85febe26fe81ab08ac729cca317ba056773d" translate="yes" xml:space="preserve">
          <source>Called when the thread stops.</source>
          <target state="translated">스레드가 중지되면 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="cca7d5512905c9851e4608f1e20f2251215f2740" translate="yes" xml:space="preserve">
          <source>Callers must ensure all the named tensors are indeed stored in the checkpoint.</source>
          <target state="translated">호출자는 모든 명명 된 텐서가 실제로 체크 포인트에 저장되었는지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="0f3197e54f59154ea9f0fc2c9205a5a1aa689f77" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;experimental_run_functions_eagerly&quot;&gt;&lt;code&gt;tf.config.experimental_run_functions_eagerly(False)&lt;/code&gt;&lt;/a&gt; will undo this behavior.</source>
          <target state="translated">&lt;a href=&quot;experimental_run_functions_eagerly&quot;&gt; &lt;code&gt;tf.config.experimental_run_functions_eagerly(False)&lt;/code&gt; &lt;/a&gt; 호출 하면이 동작이 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="556bb63836b4fffb3380b3431afbf99567df827e" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;experimental_run_functions_eagerly&quot;&gt;&lt;code&gt;tf.config.experimental_run_functions_eagerly(True)&lt;/code&gt;&lt;/a&gt; will make all invocations of &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; run eagerly instead of running as a traced graph function.</source>
          <target state="translated">호출 &lt;a href=&quot;experimental_run_functions_eagerly&quot;&gt; &lt;code&gt;tf.config.experimental_run_functions_eagerly(True)&lt;/code&gt; &lt;/a&gt; 모든 호출하게됩니다 &lt;a href=&quot;../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; 의&lt;/a&gt; 실행을 간절히 대신 추적 그래프 기능으로 실행.</target>
        </trans-unit>
        <trans-unit id="a680cb16ff4ba7793bfbf3b202cde65ff8baeacf" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;identity&quot;&gt;&lt;code&gt;tf.identity&lt;/code&gt;&lt;/a&gt; on a variable will make a Tensor that represents the value of that variable at the time it is called. This is equivalent to calling &lt;code&gt;&amp;lt;variable&amp;gt;.read_value()&lt;/code&gt;.</source>
          <target state="translated">변수에서 &lt;a href=&quot;identity&quot;&gt; &lt;code&gt;tf.identity&lt;/code&gt; &lt;/a&gt; 를 호출 하면 해당 변수가 호출 될 때 해당 변수의 값을 나타내는 Tensor가 만들어집니다. 이것은 &lt;code&gt;&amp;lt;variable&amp;gt;.read_value()&lt;/code&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="45b449a4b38951d304cf3e0c1ff415bd9f99bb89" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;list_logical_devices&quot;&gt;&lt;code&gt;tf.config.list_logical_devices&lt;/code&gt;&lt;/a&gt; triggers the runtime to configure any &lt;a href=&quot;physicaldevice&quot;&gt;&lt;code&gt;tf.config.PhysicalDevice&lt;/code&gt;&lt;/a&gt; visible to the runtime, thereby preventing further configuration. To avoid runtime initialization, call &lt;a href=&quot;list_physical_devices&quot;&gt;&lt;code&gt;tf.config.list_physical_devices&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">호출 &lt;a href=&quot;list_logical_devices&quot;&gt; &lt;code&gt;tf.config.list_logical_devices&lt;/code&gt; 것은&lt;/a&gt; 런타임 어떤 구성 트리거 &lt;a href=&quot;physicaldevice&quot;&gt; &lt;code&gt;tf.config.PhysicalDevice&lt;/code&gt; &lt;/a&gt; 하여 상기 구성을 방지 런타임에 표시한다. 런타임 초기화를 피하려면 대신 &lt;a href=&quot;list_physical_devices&quot;&gt; &lt;code&gt;tf.config.list_physical_devices&lt;/code&gt; &lt;/a&gt; 를 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="f05b341590c7db308c2dad59483315ac53a3daa9" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;run_functions_eagerly&quot;&gt;&lt;code&gt;tf.config.run_functions_eagerly(False)&lt;/code&gt;&lt;/a&gt; will undo this behavior.</source>
          <target state="translated">&lt;a href=&quot;run_functions_eagerly&quot;&gt; &lt;code&gt;tf.config.run_functions_eagerly(False)&lt;/code&gt; &lt;/a&gt; 호출 하면이 동작이 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="724f176adc8febe1ad09fb5dcc514092c645535e" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;run_functions_eagerly&quot;&gt;&lt;code&gt;tf.config.run_functions_eagerly(True)&lt;/code&gt;&lt;/a&gt; will make all invocations of &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; run eagerly instead of running as a traced graph function.</source>
          <target state="translated">호출 &lt;a href=&quot;run_functions_eagerly&quot;&gt; &lt;code&gt;tf.config.run_functions_eagerly(True)&lt;/code&gt; &lt;/a&gt; 모든 호출하게됩니다 &lt;a href=&quot;../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; 의&lt;/a&gt; 실행을 간절히 대신 추적 그래프 기능으로 실행.</target>
        </trans-unit>
        <trans-unit id="f634641fd2a808e68140b95b50c4dfb312b22d28" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;set_seed&quot;&gt;&lt;code&gt;tf.random.set_seed&lt;/code&gt;&lt;/a&gt; will reset any such counters:</source>
          <target state="translated">&lt;a href=&quot;set_seed&quot;&gt; &lt;code&gt;tf.random.set_seed&lt;/code&gt; &lt;/a&gt; 를 호출 하면 이러한 카운터가 재설정됩니다.</target>
        </trans-unit>
        <trans-unit id="0fa7fce2a5581bab7496411c79f09da9f57896c3" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;X, Y = meshgrid(x, y)&lt;/code&gt; with the tensors</source>
          <target state="translated">텐서로 &lt;code&gt;X, Y = meshgrid(x, y)&lt;/code&gt; 호출</target>
        </trans-unit>
        <trans-unit id="e2c7fa6c9eb9ab69e06a898f24e4221f99e93f56" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;enable_mixed_precision_graph_rewrite(opt)&lt;/code&gt; enables the graph rewrite operation before computing gradients. The function additionally returns an &lt;code&gt;Optimizer&lt;/code&gt; (&lt;code&gt;opt&lt;/code&gt;) wrapped with a &lt;code&gt;LossScaleOptimizer&lt;/code&gt;. This prevents underflow in the float16 tensors during the backward pass. An optimizer of type &lt;a href=&quot;../../keras/optimizers/optimizer&quot;&gt;&lt;code&gt;tf.keras.optimizers.Optimizer&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../compat/v1/train/optimizer&quot;&gt;&lt;code&gt;tf.compat.v1.train.Optimizer&lt;/code&gt;&lt;/a&gt; must be passed to this function, which will then be wrapped to use loss scaling.</source>
          <target state="translated">&lt;code&gt;enable_mixed_precision_graph_rewrite(opt)&lt;/code&gt; 호출 하면 그래디언트를 계산하기 전에 그래프 다시 쓰기 작업이 활성화됩니다. 이 함수 는 &lt;code&gt;LossScaleOptimizer&lt;/code&gt; 로 래핑 된 &lt;code&gt;Optimizer&lt;/code&gt; ( &lt;code&gt;opt&lt;/code&gt; )를 추가로 반환합니다 . 이것은 역방향 패스 동안 float16 텐서의 언더 플로를 방지합니다. &lt;a href=&quot;../../keras/optimizers/optimizer&quot;&gt; &lt;code&gt;tf.keras.optimizers.Optimizer&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../compat/v1/train/optimizer&quot;&gt; &lt;code&gt;tf.compat.v1.train.Optimizer&lt;/code&gt; &lt;/a&gt; 유형의 옵티마이 저는 이 함수에 전달되어야하며, 그런 다음 손실 스케일링을 사용하도록 래핑됩니다.</target>
        </trans-unit>
        <trans-unit id="3c5d92c7a65f6c32c12cbeda926d0318bfbd6738" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;enable_mixed_precision_graph_rewrite(opt)&lt;/code&gt; enables the graph rewrite operation before computing gradients. The function additionally returns an &lt;code&gt;Optimizer&lt;/code&gt; (&lt;code&gt;opt&lt;/code&gt;) wrapped with a &lt;code&gt;LossScaleOptimizer&lt;/code&gt;. This prevents underflow in the float16 tensors during the backward pass. An optimizer of type &lt;code&gt;tf.train.Optimizer&lt;/code&gt; or &lt;a href=&quot;../../../../keras/optimizers/optimizer&quot;&gt;&lt;code&gt;tf.keras.optimizers.Optimizer&lt;/code&gt;&lt;/a&gt; must be passed to this function, which will then be wrapped to use loss scaling.</source>
          <target state="translated">&lt;code&gt;enable_mixed_precision_graph_rewrite(opt)&lt;/code&gt; 호출 하면 그래디언트를 계산하기 전에 그래프 다시 쓰기 작업이 활성화됩니다. 이 함수 는 &lt;code&gt;LossScaleOptimizer&lt;/code&gt; 로 래핑 된 &lt;code&gt;Optimizer&lt;/code&gt; ( &lt;code&gt;opt&lt;/code&gt; )를 추가로 반환합니다 . 이것은 역방향 패스 동안 float16 텐서의 언더 플로를 방지합니다. &lt;code&gt;tf.train.Optimizer&lt;/code&gt; 또는 &lt;a href=&quot;../../../../keras/optimizers/optimizer&quot;&gt; &lt;code&gt;tf.keras.optimizers.Optimizer&lt;/code&gt; &lt;/a&gt; 유형의 옵티마이 저는 이 함수에 전달되어야하며, 그런 다음 손실 스케일링을 사용하도록 래핑됩니다.</target>
        </trans-unit>
        <trans-unit id="edab3bb5ad3dfa8ba8f89a98efc92bd3dabd4ef3" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;enable_mixed_precision_graph_rewrite(opt)&lt;/code&gt; enables the graph rewrite operation before computing gradients. The function additionally returns an &lt;code&gt;Optimizer&lt;/code&gt;(&lt;code&gt;opt&lt;/code&gt;) wrapped with a &lt;code&gt;LossScaleOptimizer&lt;/code&gt;. This prevents underflow in the float16 tensors during the backward pass. An optimizer of type &lt;code&gt;tf.train.Optimizer&lt;/code&gt; or &lt;a href=&quot;../../../../keras/optimizers/optimizer&quot;&gt;&lt;code&gt;tf.keras.optimizers.Optimizer&lt;/code&gt;&lt;/a&gt; must be passed to this function, which will then be wrapped to use loss scaling.</source>
          <target state="translated">&lt;code&gt;enable_mixed_precision_graph_rewrite(opt)&lt;/code&gt; 호출 하면 그래디언트를 계산하기 전에 그래프 다시 쓰기 작업이 가능합니다. 이 함수 는 &lt;code&gt;LossScaleOptimizer&lt;/code&gt; 로 랩핑 된 &lt;code&gt;Optimizer&lt;/code&gt; ( &lt;code&gt;opt&lt;/code&gt; )를 추가로 리턴합니다 . 이는 후진 통과 동안 float16 텐서의 언더 플로우를 방지합니다. &lt;code&gt;tf.train.Optimizer&lt;/code&gt; 또는 &lt;a href=&quot;../../../../keras/optimizers/optimizer&quot;&gt; &lt;code&gt;tf.keras.optimizers.Optimizer&lt;/code&gt; &lt;/a&gt; 유형의 옵티마이 저는 이 함수로 전달되어야합니다. 그런 다음 손실 스케일링을 사용하도록 랩핑됩니다.</target>
        </trans-unit>
        <trans-unit id="75a4bf44e56da6be246001cf5f0cc4fc29e86198" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;enable_mixed_precision_graph_rewrite(opt)&lt;/code&gt; enables the graph rewrite operation before computing gradients. The function additionally returns an &lt;code&gt;Optimizer&lt;/code&gt;(&lt;code&gt;opt&lt;/code&gt;) wrapped with a &lt;code&gt;LossScaleOptimizer&lt;/code&gt;. This prevents underflow in the float16 tensors during the backward pass. An optimizer of type &lt;code&gt;tf.train.Optimizer&lt;/code&gt; or &lt;a href=&quot;../../keras/optimizers/optimizer&quot;&gt;&lt;code&gt;tf.keras.optimizers.Optimizer&lt;/code&gt;&lt;/a&gt; must be passed to this function, which will then be wrapped to use loss scaling.</source>
          <target state="translated">&lt;code&gt;enable_mixed_precision_graph_rewrite(opt)&lt;/code&gt; 호출 하면 그래디언트를 계산하기 전에 그래프 다시 쓰기 작업이 가능합니다. 이 함수 는 &lt;code&gt;LossScaleOptimizer&lt;/code&gt; 로 랩핑 된 &lt;code&gt;Optimizer&lt;/code&gt; ( &lt;code&gt;opt&lt;/code&gt; )를 추가로 리턴합니다 . 이는 후진 통과 동안 float16 텐서의 언더 플로우를 방지합니다. &lt;code&gt;tf.train.Optimizer&lt;/code&gt; 또는 &lt;a href=&quot;../../keras/optimizers/optimizer&quot;&gt; &lt;code&gt;tf.keras.optimizers.Optimizer&lt;/code&gt; &lt;/a&gt; 유형의 옵티마이 저는 이 함수로 전달되어야합니다. 그런 다음 손실 스케일링을 사용하도록 랩핑됩니다.</target>
        </trans-unit>
        <trans-unit id="2fcc5a2665ea7ba92b116be2e5df10b3a56ca171" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;initialize_variables()&lt;/code&gt; is equivalent to passing the list of initializers to &lt;code&gt;Group()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;initialize_variables()&lt;/code&gt; 호출은 초기화 목록을 &lt;code&gt;Group()&lt;/code&gt; 에 전달하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="8a6e9108c00a0ab54163a0df197322b5322571b3" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;minimize()&lt;/code&gt; takes care of both computing the gradients and applying them to the variables. If you want to process the gradients before applying them you can instead use the optimizer in three steps:</source>
          <target state="translated">minimum &lt;code&gt;minimize()&lt;/code&gt; 호출 하면 그라디언트를 계산하고 변수에 적용합니다. 그라디언트를 적용하기 전에 그라디언트를 처리하려면 대신 세 단계로 옵티 마이저를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2e1826fa3d3bc093c2ae8a384bf8aede36c617c1" translate="yes" xml:space="preserve">
          <source>Calling methods of &lt;code&gt;Estimator&lt;/code&gt; will work while eager execution is enabled. However, the &lt;code&gt;model_fn&lt;/code&gt; and &lt;code&gt;input_fn&lt;/code&gt; is not executed eagerly, &lt;code&gt;Estimator&lt;/code&gt; will switch to graph mode before calling all user-provided functions (incl. hooks), so their code has to be compatible with graph mode execution. Note that &lt;code&gt;input_fn&lt;/code&gt; code using &lt;a href=&quot;../../../data&quot;&gt;&lt;code&gt;tf.data&lt;/code&gt;&lt;/a&gt; generally works in both graph and eager modes.</source>
          <target state="translated">열성적인 실행이 활성화 된 동안 &lt;code&gt;Estimator&lt;/code&gt; 의 호출 메소드 가 작동합니다. 그러나 &lt;code&gt;model_fn&lt;/code&gt; 및 &lt;code&gt;input_fn&lt;/code&gt; 은 열성적으로 실행되지 않으므로 &lt;code&gt;Estimator&lt;/code&gt; 는 모든 사용자 제공 함수 (후크 포함)를 호출하기 전에 그래프 모드로 전환하므로 코드가 그래프 모드 실행과 호환되어야합니다. 참고 것을 &lt;code&gt;input_fn&lt;/code&gt; 사용하여 코드 &lt;a href=&quot;../../../data&quot;&gt; &lt;code&gt;tf.data&lt;/code&gt; 를&lt;/a&gt; 일반적으로는 그래프와 열망 모드 모두에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="374ad568de6f2277ac942e3fbe47ae39586500de" translate="yes" xml:space="preserve">
          <source>Calling methods of &lt;code&gt;Estimator&lt;/code&gt; will work while eager execution is enabled. However, the &lt;code&gt;model_fn&lt;/code&gt; and &lt;code&gt;input_fn&lt;/code&gt; is not executed eagerly, &lt;code&gt;Estimator&lt;/code&gt; will switch to graph mode before calling all user-provided functions (incl. hooks), so their code has to be compatible with graph mode execution. Note that &lt;code&gt;input_fn&lt;/code&gt; code using &lt;a href=&quot;../data&quot;&gt;&lt;code&gt;tf.data&lt;/code&gt;&lt;/a&gt; generally works in both graph and eager modes.</source>
          <target state="translated">열성적인 실행이 활성화 된 동안 &lt;code&gt;Estimator&lt;/code&gt; 의 호출 메소드 가 작동합니다. 그러나 &lt;code&gt;model_fn&lt;/code&gt; 및 &lt;code&gt;input_fn&lt;/code&gt; 은 열성적으로 실행되지 않으므로 &lt;code&gt;Estimator&lt;/code&gt; 는 모든 사용자 제공 함수 (후크 포함)를 호출하기 전에 그래프 모드로 전환하므로 코드가 그래프 모드 실행과 호환되어야합니다. 참고 것을 &lt;code&gt;input_fn&lt;/code&gt; 사용하여 코드 &lt;a href=&quot;../data&quot;&gt; &lt;code&gt;tf.data&lt;/code&gt; 를&lt;/a&gt; 일반적으로는 그래프와 열망 모드 모두에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="73b11118eb4f7c4f5d4cb99890fa4f0b9e7e298a" translate="yes" xml:space="preserve">
          <source>Calling tf.enable_control_flow_v2() lets you opt-in to this TensorFlow 2.0 feature.</source>
          <target state="translated">tf.enable_control_flow_v2 ()를 호출하면이 TensorFlow 2.0 기능을 옵트 인 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c38ebe6b83ed80cb1f55fbb6c8d38b867ab92e4" translate="yes" xml:space="preserve">
          <source>Calling tf.enable_resource_variables() lets you opt-in to this TensorFlow 2.0 feature.</source>
          <target state="translated">tf.enable_resource_variables ()를 호출하면이 TensorFlow 2.0 기능을 옵트 인 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="af7cf2fd755bb35e1d292d1635b244cfa0ed2568" translate="yes" xml:space="preserve">
          <source>Calling the same template multiple times will share all non-local variables.</source>
          <target state="translated">동일한 템플릿을 여러 번 호출하면 로컬이 아닌 모든 변수가 공유됩니다.</target>
        </trans-unit>
        <trans-unit id="e07e9005aa4c132be57d20c2bc0a93ba16b1fcf7" translate="yes" xml:space="preserve">
          <source>Calling this method frees all resources associated with the session.</source>
          <target state="translated">이 메소드를 호출하면 세션과 연관된 모든 자원이 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="ecd5fcddc02d273b420ad9a3a5ca4278e555c264" translate="yes" xml:space="preserve">
          <source>Calling this method will execute all preceding operations that produce the inputs needed for the operation that produces this tensor.</source>
          <target state="translated">이 메소드를 호출하면이 텐서를 생성하는 작업에 필요한 입력을 생성하는 모든 선행 작업이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="324600cb53e436db97125dbecc1def22a1d0b5cb" translate="yes" xml:space="preserve">
          <source>Calling this method will execute all preceding operations that produce the inputs needed for this operation.</source>
          <target state="translated">이 메소드를 호출하면이 조작에 필요한 입력을 생성하는 모든 선행 조작이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="048799204f4375cc969d7349152d0f4e038ccf4a" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;train_step_fn&lt;/code&gt; in a loop to train a model. The function is called as:</source>
          <target state="translated">루프에서 &lt;code&gt;train_step_fn&lt;/code&gt; 을 호출 하여 모델을 학습시킵니다. 이 함수는 다음과 같이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="d58c535ae4ae840cd9dfff99066d3200392fb167" translate="yes" xml:space="preserve">
          <source>Calls a function placed on a specified TPU device.</source>
          <target state="translated">지정된 TPU 기기에있는 함수를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="64e59806a0c086a7a3885c01fef3ede9cbd5855c" translate="yes" xml:space="preserve">
          <source>Calls logit_fn (experimental).</source>
          <target state="translated">logit_fn (실험적)을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="4e218fedf7128aaeeb16d5edb27900d3e7fc8f87" translate="yes" xml:space="preserve">
          <source>Calls the 'on_predict_begin` methods of its callbacks.</source>
          <target state="translated">콜백의 'on_predict_begin'메소드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="f2bf06e82dadbc0c6d2693cf685fd2aa90776f66" translate="yes" xml:space="preserve">
          <source>Calls the &lt;code&gt;on_epoch_begin&lt;/code&gt; methods of its callbacks.</source>
          <target state="translated">콜백 의 &lt;code&gt;on_epoch_begin&lt;/code&gt; 메소드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="41788eb2a676237157e4d6be060666f6682733bf" translate="yes" xml:space="preserve">
          <source>Calls the &lt;code&gt;on_epoch_end&lt;/code&gt; methods of its callbacks.</source>
          <target state="translated">콜백 의 &lt;code&gt;on_epoch_end&lt;/code&gt; 메소드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="2380480fa3db78ae5c32e4830c740fdae958a6c1" translate="yes" xml:space="preserve">
          <source>Calls the &lt;code&gt;on_predict_batch_begin&lt;/code&gt; methods of its callbacks.</source>
          <target state="translated">콜백 의 &lt;code&gt;on_predict_batch_begin&lt;/code&gt; 메소드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="4ed7630d0ab52f868b21fe73f690c1541e9c7d71" translate="yes" xml:space="preserve">
          <source>Calls the &lt;code&gt;on_predict_batch_end&lt;/code&gt; methods of its callbacks.</source>
          <target state="translated">콜백 의 &lt;code&gt;on_predict_batch_end&lt;/code&gt; 메소드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="9d1cb1a69ff85188d5f4e8b3403b97b78b7e34c8" translate="yes" xml:space="preserve">
          <source>Calls the &lt;code&gt;on_predict_end&lt;/code&gt; methods of its callbacks.</source>
          <target state="translated">콜백 의 &lt;code&gt;on_predict_end&lt;/code&gt; 메소드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="8fbc950220d358b594f3f7a57afdf3d70ce11739" translate="yes" xml:space="preserve">
          <source>Calls the &lt;code&gt;on_test_batch_begin&lt;/code&gt; methods of its callbacks.</source>
          <target state="translated">콜백 의 &lt;code&gt;on_test_batch_begin&lt;/code&gt; 메소드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="46b96186969161e8f61c6434863bbb59d7afa5c3" translate="yes" xml:space="preserve">
          <source>Calls the &lt;code&gt;on_test_batch_end&lt;/code&gt; methods of its callbacks.</source>
          <target state="translated">콜백 의 &lt;code&gt;on_test_batch_end&lt;/code&gt; 메소드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="82d1eab9cab080fe144881d6cc336ca696117e4c" translate="yes" xml:space="preserve">
          <source>Calls the &lt;code&gt;on_test_begin&lt;/code&gt; methods of its callbacks.</source>
          <target state="translated">콜백 의 &lt;code&gt;on_test_begin&lt;/code&gt; 메소드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="146238a198336c127aad4cf75d2811eb779e544b" translate="yes" xml:space="preserve">
          <source>Calls the &lt;code&gt;on_test_end&lt;/code&gt; methods of its callbacks.</source>
          <target state="translated">콜백 의 &lt;code&gt;on_test_end&lt;/code&gt; 메소드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="21e7f9eb10fda6e0021e5cc3f68ebfd3ebddd85e" translate="yes" xml:space="preserve">
          <source>Calls the &lt;code&gt;on_train_batch_begin&lt;/code&gt; methods of its callbacks.</source>
          <target state="translated">콜백 의 &lt;code&gt;on_train_batch_begin&lt;/code&gt; 메소드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="f5c72c1a91110d9b87b0b8e365f089e393414549" translate="yes" xml:space="preserve">
          <source>Calls the &lt;code&gt;on_train_batch_end&lt;/code&gt; methods of its callbacks.</source>
          <target state="translated">콜백 의 &lt;code&gt;on_train_batch_end&lt;/code&gt; 메소드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="a132885f75a5a62f0eed258cdc65562ff999931b" translate="yes" xml:space="preserve">
          <source>Calls the &lt;code&gt;on_train_begin&lt;/code&gt; methods of its callbacks.</source>
          <target state="translated">콜백 의 &lt;code&gt;on_train_begin&lt;/code&gt; 메소드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="1e2250e13dfbdb2ebd0d7f7cbc13ca80020c94cd" translate="yes" xml:space="preserve">
          <source>Calls the &lt;code&gt;on_train_end&lt;/code&gt; methods of its callbacks.</source>
          <target state="translated">콜백 의 &lt;code&gt;on_train_end&lt;/code&gt; 메소드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="78db2fbe58ed056ea60b1d9a22b2e0f46efb74ee" translate="yes" xml:space="preserve">
          <source>Calls tpu_ops.cross_replica_sum() to sum gradient contributions across replicas, and then applies the real optimizer.</source>
          <target state="translated">tpu_ops.cross_replica_sum ()을 호출하여 복제본 간의 그라디언트 기여를 합한 다음 실제 최적화 프로그램을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="8ec329986e07459489e179205a64cb08abcd05ea" translate="yes" xml:space="preserve">
          <source>Can be called after &lt;code&gt;close()&lt;/code&gt; to add more events in the same directory. The events will go into a new events file.</source>
          <target state="translated">&lt;code&gt;close()&lt;/code&gt; 후에 호출 하여 동일한 디렉토리에 더 많은 이벤트를 추가 할 수 있습니다 . 이벤트는 새 이벤트 파일로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="f2959f6c9ef5108c0632f5948e6849b106619f1d" translate="yes" xml:space="preserve">
          <source>Can be different from value() if it's on another device, with control dependencies, etc.</source>
          <target state="translated">제어 의존성 등을 가진 다른 장치에있는 경우 value ()와 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b371665a1e9a0996d8ede0eab6929eab799777c8" translate="yes" xml:space="preserve">
          <source>Can either fail with exception or just stop training.</source>
          <target state="translated">예외로 실패하거나 교육을 중단 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d121a99e89988292ebdf048595bc83269074e0a8" translate="yes" xml:space="preserve">
          <source>Can only be used when RNN layer is constructed with &lt;code&gt;stateful&lt;/code&gt; = &lt;code&gt;True&lt;/code&gt;. Args: states: Numpy arrays that contains the value for the initial state, which will be feed to cell at the first time step. When the value is None, zero filled numpy array will be created based on the cell state size.</source>
          <target state="translated">RNN 레이어가 &lt;code&gt;stateful&lt;/code&gt; = &lt;code&gt;True&lt;/code&gt; 로 구성된 경우에만 사용할 수 있습니다 . Args : states : 초기 상태 값을 포함하는 Numpy 배열로, 처음 단계에서 셀로 피드됩니다. 값이 None이면 셀 상태 크기에 따라 0으로 채워진 numpy 배열이 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="f17d8a346c8efb1ee95da5bc62279c544ebd2135" translate="yes" xml:space="preserve">
          <source>Can use either greedy search (also known as best path) or a constrained dictionary search.</source>
          <target state="translated">욕심 많은 검색 (최상의 경로라고도 함) 또는 제한된 사전 검색을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92d54f1cce58adf27fb66124dac99b33f3b69312" translate="yes" xml:space="preserve">
          <source>Cancel op for the queue (optional).</source>
          <target state="translated">대기열에 대한 작업을 취소합니다 (선택 사항).</target>
        </trans-unit>
        <trans-unit id="2b56df0eb545d4bec81deaa2154a209ba005d16f" translate="yes" xml:space="preserve">
          <source>Captures CPU/GPU profiling information every N steps or seconds.</source>
          <target state="translated">N 단계 또는 초마다 CPU / GPU 프로파일 링 정보를 캡처합니다.</target>
        </trans-unit>
        <trans-unit id="9254c4bba00f5ff69304a7921d3118fcbac7e6b8" translate="yes" xml:space="preserve">
          <source>Case</source>
          <target state="translated">Case</target>
        </trans-unit>
        <trans-unit id="60745aef336b682ec827697b3e47b80c7d7555b3" translate="yes" xml:space="preserve">
          <source>Cast</source>
          <target state="translated">Cast</target>
        </trans-unit>
        <trans-unit id="fa0bb62dcd2a3a8c61dd14c3cd326e2dc89c532c" translate="yes" xml:space="preserve">
          <source>Cast a Numpy array to the default Keras float type.</source>
          <target state="translated">Numpy 배열을 기본 Keras 부동 유형으로 캐스트하십시오.</target>
        </trans-unit>
        <trans-unit id="334b73efb4a433dedcb554db2bf31b0616c9eada" translate="yes" xml:space="preserve">
          <source>Cast a float32 variable to a float64 tensor</source>
          <target state="translated">float32 변수를 float64 텐서로 캐스팅</target>
        </trans-unit>
        <trans-unit id="02e9e38e8ba1117f792bc06fca73e0c033f799af" translate="yes" xml:space="preserve">
          <source>Cast x of type SrcT to y of DstT.</source>
          <target state="translated">SrcT 유형의 x를 DstT의 y로 캐스트합니다.</target>
        </trans-unit>
        <trans-unit id="f41700c03805fde68fc032dd39cf89c0c9987884" translate="yes" xml:space="preserve">
          <source>Casts a tensor to a different dtype and returns it.</source>
          <target state="translated">텐서를 다른 dtype으로 캐스팅하고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="280dd75c5fe62dc6408cb2adc7c8b71dc0dd9f58" translate="yes" xml:space="preserve">
          <source>Casts a tensor to a new type.</source>
          <target state="translated">텐서를 새로운 유형으로 캐스팅합니다.</target>
        </trans-unit>
        <trans-unit id="a84160fa12c84721924b091fb190fff7ee8fedb4" translate="yes" xml:space="preserve">
          <source>Casts a tensor to type &lt;code&gt;bfloat16&lt;/code&gt;. (deprecated)</source>
          <target state="translated">텐서를 캐스트하여 &lt;code&gt;bfloat16&lt;/code&gt; 유형으로 변환 합니다. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="705ec0dd8476e42a7426b0c30ad678f1035c9e4a" translate="yes" xml:space="preserve">
          <source>Casts a tensor to type &lt;code&gt;complex128&lt;/code&gt;. (deprecated)</source>
          <target state="translated">타입에 텐서 캐스트 &lt;code&gt;complex128&lt;/code&gt; 을 . (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="33d6d726c762bff193876d688d6dd7f5f61cd7aa" translate="yes" xml:space="preserve">
          <source>Casts a tensor to type &lt;code&gt;complex64&lt;/code&gt;. (deprecated)</source>
          <target state="translated">&lt;code&gt;complex64&lt;/code&gt; 유형으로 텐서를 캐스팅 합니다. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="f1c3a054ac51d3b629b476ccde190ad463087d19" translate="yes" xml:space="preserve">
          <source>Casts a tensor to type &lt;code&gt;float32&lt;/code&gt;. (deprecated)</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형으로 텐서를 캐스팅합니다 . (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="2146083c84d0b16b1678b4456163f1bdfe31ac53" translate="yes" xml:space="preserve">
          <source>Casts a tensor to type &lt;code&gt;float64&lt;/code&gt;. (deprecated)</source>
          <target state="translated">&lt;code&gt;float64&lt;/code&gt; 유형으로 텐서를 캐스팅합니다 . (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="61d8b2839f0934af7a7eae2ce6eaaa779691964a" translate="yes" xml:space="preserve">
          <source>Casts a tensor to type &lt;code&gt;int32&lt;/code&gt;. (deprecated)</source>
          <target state="translated">텐서를 캐스트하여 &lt;code&gt;int32&lt;/code&gt; 유형을 지정합니다 . (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="cc080c2f9bc9ab6b38709b3097e7e8597d6c450d" translate="yes" xml:space="preserve">
          <source>Casts a tensor to type &lt;code&gt;int64&lt;/code&gt;. (deprecated)</source>
          <target state="translated">텐서를 캐스팅하여 &lt;code&gt;int64&lt;/code&gt; 를 입력 합니다. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="3d202d5d410c2f1324f24135298e6ae90e7e0adb" translate="yes" xml:space="preserve">
          <source>Catching NaN during eager execution:</source>
          <target state="translated">열심히 실행하는 동안 NaN 잡기 :</target>
        </trans-unit>
        <trans-unit id="8c2838369fe9ec7da4939b0fdee1fec8aa9647ad" translate="yes" xml:space="preserve">
          <source>Catching infinity during the execution of a &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; graph:</source>
          <target state="translated">&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; 그래프를 실행하는 동안 무한 잡기 :</target>
        </trans-unit>
        <trans-unit id="5b7145c92b749b107fcd1535e6a1ccb426ea85a1" translate="yes" xml:space="preserve">
          <source>Categorical accuracy values.</source>
          <target state="translated">범주 별 정확도 값.</target>
        </trans-unit>
        <trans-unit id="f0166b7d0d6075e9c939ec339eaeb9ed445956b1" translate="yes" xml:space="preserve">
          <source>Categorical crossentropy between an output tensor and a target tensor.</source>
          <target state="translated">출력 텐서와 목표 텐서 사이의 범주 형 교차 엔트로피.</target>
        </trans-unit>
        <trans-unit id="3c830adb56fdb07bc05a0cf911dce2ef18b20b2e" translate="yes" xml:space="preserve">
          <source>Categorical crossentropy loss value.</source>
          <target state="translated">범주 형 교차 엔트로피 손실 값.</target>
        </trans-unit>
        <trans-unit id="b1d1c3ecda282db8101cbdcd80b28927419f3f1d" translate="yes" xml:space="preserve">
          <source>Categorical crossentropy with integer targets.</source>
          <target state="translated">정수 목표를 가진 범주 형 교차 엔트로피.</target>
        </trans-unit>
        <trans-unit id="7be3f4df5d21b9c1ab88a3aa158d7aca40b676e2" translate="yes" xml:space="preserve">
          <source>Categorical distribution.</source>
          <target state="translated">범주 형 분포.</target>
        </trans-unit>
        <trans-unit id="69669b89b0195e377d617c6af5f51a563162b05d" translate="yes" xml:space="preserve">
          <source>Categorical hinge loss values.</source>
          <target state="translated">범주 형 힌지 손실 값.</target>
        </trans-unit>
        <trans-unit id="f4825af32f46133238a380655ed7f142799d35ed" translate="yes" xml:space="preserve">
          <source>Category crossing layer.</source>
          <target state="translated">카테고리 교차 레이어.</target>
        </trans-unit>
        <trans-unit id="81d95e9a2a8b50b09586b5c414677b9dd70f989d" translate="yes" xml:space="preserve">
          <source>Category encoding layer.</source>
          <target state="translated">카테고리 인코딩 레이어.</target>
        </trans-unit>
        <trans-unit id="7880c159928fcbff85b6d04e964dad101f9ab2e8" translate="yes" xml:space="preserve">
          <source>CategoryEncoding layer.</source>
          <target state="translated">CategoryEncoding 계층.</target>
        </trans-unit>
        <trans-unit id="ec4a3c1492a5887a0912ea9933b69aa8bf5fcb23" translate="yes" xml:space="preserve">
          <source>Causes &lt;code&gt;step_fn&lt;/code&gt; to exit by raising an exception.</source>
          <target state="translated">원인 &lt;code&gt;step_fn&lt;/code&gt; 예외를 발생하여 종료합니다.</target>
        </trans-unit>
        <trans-unit id="ab6fca836569f204bcc677ffb51a1984f95344e9" translate="yes" xml:space="preserve">
          <source>Caveat: Current implementation supports early-stopping both training and evaluation in local mode. In distributed mode, training can be stopped but evaluation (where it's a separate job) will indefinitely wait for new model checkpoints to evaluate, so you will need other means to detect and stop it. Early-stopping evaluation in distributed mode requires changes in &lt;code&gt;train_and_evaluate&lt;/code&gt; API and will be addressed in a future revision.</source>
          <target state="translated">주의 사항 : 현재 구현은 로컬 모드에서 교육 및 평가를 조기에 중지 할 수 있도록 지원합니다. 분산 모드에서는 교육을 중지 할 수 있지만 평가 (별도의 작업 인 경우)는 새로운 모델 검사 점이 평가 될 때까지 무기한 대기하므로이를 감지하고 중지 할 다른 방법이 필요합니다. 분산 모드에서 조기 중지 평가를하려면 &lt;code&gt;train_and_evaluate&lt;/code&gt; API를 변경해야 하며 향후 개정에서 다룰 것입니다.</target>
        </trans-unit>
        <trans-unit id="2432d530c0145aab3bfa5662975e8d421e122d9e" translate="yes" xml:space="preserve">
          <source>Ceil</source>
          <target state="translated">Ceil</target>
        </trans-unit>
        <trans-unit id="d839f39a4a59e95f2dab1b3e915bcd2a400c9548" translate="yes" xml:space="preserve">
          <source>Cell class for SimpleRNN.</source>
          <target state="translated">SimpleRNN의 셀 클래스</target>
        </trans-unit>
        <trans-unit id="1119828e44e174d79d64ab29f867ffa523c210e0" translate="yes" xml:space="preserve">
          <source>Cell class for the GRU layer.</source>
          <target state="translated">GRU 계층의 셀 클래스</target>
        </trans-unit>
        <trans-unit id="f7e6e90071f90e58887144315972c570df65b4d2" translate="yes" xml:space="preserve">
          <source>Cell class for the LSTM layer.</source>
          <target state="translated">LSTM 계층의 셀 클래스</target>
        </trans-unit>
        <trans-unit id="23edb4f829652a9d01fa6868430a5263f412ea6b" translate="yes" xml:space="preserve">
          <source>Certain operations like matrix multiplication and reductions can utilize parallel threads for speed ups. A value of 0 means the system picks an appropriate number.</source>
          <target state="translated">행렬 곱셈 및 축소와 같은 특정 연산은 속도 향상을 위해 병렬 스레드를 활용할 수 있습니다. 값이 0이면 시스템이 적절한 숫자를 선택한다는 의미입니다.</target>
        </trans-unit>
        <trans-unit id="a990eb1806e0ff020baa6147abe66c66ecdb1057" translate="yes" xml:space="preserve">
          <source>Certain policies also have a &lt;a href=&quot;../../../mixed_precision/experimental/lossscale&quot;&gt;&lt;code&gt;tf.mixed_precision.experimental.LossScale&lt;/code&gt;&lt;/a&gt; instance, which is used by &lt;a href=&quot;../../model&quot;&gt;&lt;code&gt;tf.keras.Model&lt;/code&gt;&lt;/a&gt;s to performance loss scaling. Loss scaling is a technique used with mixed precision to avoid numerical underflow in float16 gradients. Loss scaling is only done by Models in &lt;a href=&quot;../../model#fit&quot;&gt;&lt;code&gt;Model.fit&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../model#train_on_batch&quot;&gt;&lt;code&gt;Model.train_on_batch&lt;/code&gt;&lt;/a&gt;, and similar methods. Layers which are not Models ignore the loss scale.</source>
          <target state="translated">특정 정책에는 &lt;a href=&quot;../../../mixed_precision/experimental/lossscale&quot;&gt; &lt;code&gt;tf.mixed_precision.experimental.LossScale&lt;/code&gt; &lt;/a&gt; 인스턴스가 있으며,이 인스턴스는 &lt;a href=&quot;../../model&quot;&gt; &lt;code&gt;tf.keras.Model&lt;/code&gt; &lt;/a&gt; 에서 성능 손실 조정에 사용됩니다. 손실 스케일링은 float16 그라디언트에서 숫자 언더 플로를 피하기 위해 혼합 정밀도로 사용되는 기술입니다. 손실 스케일링은 &lt;a href=&quot;../../model#fit&quot;&gt; &lt;code&gt;Model.fit&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../model#train_on_batch&quot;&gt; &lt;code&gt;Model.train_on_batch&lt;/code&gt; &lt;/a&gt; 및 유사한 메소드의 모델 만 수행 합니다. 모델이 아닌 레이어는 손실 스케일을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="0dbc4f076a883e5ea94065223770666919ef1c18" translate="yes" xml:space="preserve">
          <source>Changes the default value of the named flag object.</source>
          <target state="translated">명명 된 플래그 객체의 기본값을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="2effedd39add60ae8be7494c0efc1e48dacf31f6" translate="yes" xml:space="preserve">
          <source>Changing the input separator:</source>
          <target state="translated">입력 구분자 변경 :</target>
        </trans-unit>
        <trans-unit id="e5d31ec693bae296275b7b2864766281e17d3286" translate="yes" xml:space="preserve">
          <source>Check if stop was requested.</source>
          <target state="translated">중지가 요청되었는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="f50d4fd1d7eadfeacf0c1c820d0d2b6cd464affa" translate="yes" xml:space="preserve">
          <source>Check if the coordinator was told to stop.</source>
          <target state="translated">코디네이터에게 중지하라는 지시가 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="0fd77d1324d6bd49b51e3ed42a0127d574db82a8" translate="yes" xml:space="preserve">
          <source>Check if the input matches the regex pattern.</source>
          <target state="translated">입력 값이 정규식 패턴과 일치하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="4542e2afa1a18ea89ceeb8900acb7a7305d1f599" translate="yes" xml:space="preserve">
          <source>Check that the expression is false.</source>
          <target state="translated">표현식이 거짓인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="0e75f331bdc759f92b7d5761a5c7a473f8447e81" translate="yes" xml:space="preserve">
          <source>Check that the expression is true.</source>
          <target state="translated">표현식이 참인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="29b679a94243e90778e1a211be810bda303991fb" translate="yes" xml:space="preserve">
          <source>Check the documentation for the l2_shrinkage_regularization_strength parameter for more details when shrinkage is enabled, where gradient is replaced with gradient_with_shrinkage.</source>
          <target state="translated">축소가 활성화 된 경우 경사가 gradient_with_shrinkage로 대체되는 경우 자세한 내용은 l2_shrinkage_regularization_strength 매개 변수의 문서를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="fae47f4de5805adbd371724b366632eb00e43667" translate="yes" xml:space="preserve">
          <source>Check whether the list is nonempty</source>
          <target state="translated">목록이 비어 있지 않은지 확인</target>
        </trans-unit>
        <trans-unit id="719264f3818c0c443d4e05ff1dbadf490efd3d35" translate="yes" xml:space="preserve">
          <source>CheckNumerics</source>
          <target state="translated">CheckNumerics</target>
        </trans-unit>
        <trans-unit id="0673a82066b6261d8c32b36dc66558a97c4782ef" translate="yes" xml:space="preserve">
          <source>CheckNumericsV2</source>
          <target state="translated">CheckNumericsV2</target>
        </trans-unit>
        <trans-unit id="8f0690ea4a3acc60803b310734b83244fd519279" translate="yes" xml:space="preserve">
          <source>CheckpointState proto with model_checkpoint_path and all_model_checkpoint_paths updated to either absolute paths or relative paths to the current save_dir.</source>
          <target state="translated">model_checkpoint_path 및 all_model_checkpoint_paths가있는 CheckpointState proto는 현재 save_dir에 대한 절대 경로 또는 상대 경로로 업데이트되었습니다.</target>
        </trans-unit>
        <trans-unit id="df6fe0319358cfda869b0687a1aa44f424c8cf24" translate="yes" xml:space="preserve">
          <source>Checkpointing trained variables as the training progresses.</source>
          <target state="translated">훈련이 진행됨에 따라 훈련 된 변수 체크 포인트.</target>
        </trans-unit>
        <trans-unit id="5c5abb9f5c926160489922b816fb9259b397e47e" translate="yes" xml:space="preserve">
          <source>Checkpoints are binary files in a proprietary format which map variable names to tensor values. The best way to examine the contents of a checkpoint is to load it using a &lt;code&gt;Saver&lt;/code&gt;.</source>
          <target state="translated">검사 점은 변수 이름을 텐서 값에 매핑하는 독점 형식의 이진 파일입니다. 검사 점의 내용을 검사하는 가장 좋은 방법은 &lt;code&gt;Saver&lt;/code&gt; 를 사용하여 검사 점을로드하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="21d28d0442bf387cb524ee7f2fa02a59f1c717fd" translate="yes" xml:space="preserve">
          <source>Checkpoints are only considered for deletion just after a new checkpoint has been added. At that point, &lt;code&gt;max_to_keep&lt;/code&gt; checkpoints will remain in an &quot;active set&quot;. Once a checkpoint is preserved by &lt;code&gt;keep_checkpoint_every_n_hours&lt;/code&gt; it will not be deleted by this &lt;code&gt;CheckpointManager&lt;/code&gt; or any future &lt;code&gt;CheckpointManager&lt;/code&gt; instantiated in &lt;code&gt;directory&lt;/code&gt; (regardless of the new setting of &lt;code&gt;keep_checkpoint_every_n_hours&lt;/code&gt;). The &lt;code&gt;max_to_keep&lt;/code&gt; checkpoints in the active set may be deleted by this &lt;code&gt;CheckpointManager&lt;/code&gt; or a future &lt;code&gt;CheckpointManager&lt;/code&gt; instantiated in &lt;code&gt;directory&lt;/code&gt; (subject to its &lt;code&gt;max_to_keep&lt;/code&gt; and &lt;code&gt;keep_checkpoint_every_n_hours&lt;/code&gt; settings).</source>
          <target state="translated">체크 포인트는 새 체크 포인트가 추가 된 직후에만 삭제로 간주됩니다. 이때 &lt;code&gt;max_to_keep&lt;/code&gt; 체크 포인트는 &quot;활성 세트&quot;로 유지됩니다. &lt;code&gt;keep_checkpoint_every_n_hours&lt;/code&gt; 에 의해 체크 포인트가 보존되면 이 &lt;code&gt;CheckpointManager&lt;/code&gt; 또는 &lt;code&gt;directory&lt;/code&gt; 에서 인스턴스화 된 이후의 &lt;code&gt;CheckpointManager&lt;/code&gt; (새로운 &lt;code&gt;keep_checkpoint_every_n_hours&lt;/code&gt; 설정에 관계없이)에 의해 체크 포인트 가 삭제되지 않습니다 . 활성 세트 의 &lt;code&gt;max_to_keep&lt;/code&gt; 체크 포인트는이 &lt;code&gt;CheckpointManager&lt;/code&gt; 또는 &lt;code&gt;directory&lt;/code&gt; 에서 인스턴스화 된 향후 &lt;code&gt;CheckpointManager&lt;/code&gt; 에 의해 삭제 될 수 있습니다 ( &lt;code&gt;max_to_keep&lt;/code&gt; 다름)및 &lt;code&gt;keep_checkpoint_every_n_hours&lt;/code&gt; 설정).</target>
        </trans-unit>
        <trans-unit id="3d1fa6eec30bbc58997c3c443bb6be1a170f6bca" translate="yes" xml:space="preserve">
          <source>Checkpoints input pipeline state every N steps or seconds.</source>
          <target state="translated">체크 포인트는 N 단계 또는 초마다 입력 파이프 라인 상태입니다.</target>
        </trans-unit>
        <trans-unit id="1426f3ecc9d03ce758fa9f7f892d4a0c4d0832e6" translate="yes" xml:space="preserve">
          <source>Checkpoints written with &lt;code&gt;write&lt;/code&gt; must be read with &lt;code&gt;read&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;write&lt;/code&gt; 로 작성된 체크 포인트 는 read로 &lt;code&gt;read&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="68c056b4b93dd6519d0041cce2fa3456b2db6d84" translate="yes" xml:space="preserve">
          <source>Checks a tensor for NaN and Inf values.</source>
          <target state="translated">텐서에서 NaN 및 Inf 값을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b5d72aa0c5850556184157015d94ab63771c8e46" translate="yes" xml:space="preserve">
          <source>Checks a tensor for NaN, -Inf and +Inf values.</source>
          <target state="translated">텐서에서 NaN, -Inf 및 + Inf 값을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="03b3802d2d574b8aa3cf5dbf69c4a68a33755fe8" translate="yes" xml:space="preserve">
          <source>Checks for user typos in &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; 에서 사용자 오타가 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="e54fec2de517ab61fb09b3c7770a5828ed597b77" translate="yes" xml:space="preserve">
          <source>Checks if the &lt;code&gt;other&lt;/code&gt; DeviceSpec is same as the current instance, eg have</source>
          <target state="translated">&lt;code&gt;other&lt;/code&gt; DeviceSpec이 현재 인스턴스와 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="10af03d1ce49f737f9b2ce8ba532b3eab851f8a5" translate="yes" xml:space="preserve">
          <source>Checks that for all elements of farray1 and farray2 |f1 - f2| &amp;lt; err. Asserts a test failure if not.</source>
          <target state="translated">farray1 및 farray2의 모든 요소가 있는지 점검합니다. | f1-f2 | &amp;lt;오류. 그렇지 않은 경우 테스트 실패를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2a9a0c747f7d3a04be66c98e057ab74676d88c18" translate="yes" xml:space="preserve">
          <source>Checks that |f1 - f2| &amp;lt; err and asserts a test failure if not.</source>
          <target state="translated">| f1-f2 | &amp;lt;오류가 발생하지 않으면 테스트 실패가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="089800f64274a3bfa77afa62a476fc28fde129a1" translate="yes" xml:space="preserve">
          <source>Checks whether &lt;code&gt;x&lt;/code&gt; is a TF-native type that can be passed to many TF ops.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 가 많은 TF 작업에 전달할 수있는 TF 네이티브 유형 인지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="92163db6500c625db76ce0f05a7a5d4e3db7f4e3" translate="yes" xml:space="preserve">
          <source>Checks whether &lt;code&gt;x&lt;/code&gt; is a tensor or &quot;tensor-like&quot;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 가 텐서인지 &quot;텐서 유사&quot; 인지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="6e059e52c344fd5ea2c163457327f9087b4bb6a8" translate="yes" xml:space="preserve">
          <source>Checks whether a V1 or V2 checkpoint exists with the specified prefix. (deprecated)</source>
          <target state="translated">지정된 접두사가있는 V1 또는 V2 체크 포인트가 있는지 확인합니다. (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="45f386871b767d6d7eb08f6a4c5b8a6123967ab4" translate="yes" xml:space="preserve">
          <source>Checks whether a quantile stream has been initialized.</source>
          <target state="translated">Quantile 스트림이 초기화되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="5e532e0e8f74c66e1a57be198b10b53730798308" translate="yes" xml:space="preserve">
          <source>Checks whether a resource handle-based variable has been initialized.</source>
          <target state="translated">리소스 핸들 기반 변수가 초기화되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e720ebb7e2d2359fafe0fa1909a24cfc16b47642" translate="yes" xml:space="preserve">
          <source>Checks whether a tensor has been initialized.</source>
          <target state="translated">텐서가 초기화되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="7c94019313fbc694f03cef93a91ca01314213d10" translate="yes" xml:space="preserve">
          <source>Checks whether a tree ensemble has been initialized.</source>
          <target state="translated">트리 앙상블이 초기화되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="3f4de71ed2c8b2e5af9895d98339a40b2e2c1c15" translate="yes" xml:space="preserve">
          <source>Checks whether actual iterable and expected iterable are disjoint.</source>
          <target state="translated">실제 반복 가능 및 예상 반복 가능이 분리되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="88f50b688ffeed23fd5a96b8bba490755c44f55c" translate="yes" xml:space="preserve">
          <source>Checks whether actual iterable is a superset of expected iterable.</source>
          <target state="translated">실제 iterable이 예상 iterable의 상위 세트인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="4f59c9039e22893963243b8c7ff0dfa78e73c347" translate="yes" xml:space="preserve">
          <source>Checks whether dictionary is a superset of subset.</source>
          <target state="translated">사전이 하위 집합의 상위 집합인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="81653dba6304e52f546386ecd8e46ada482da998" translate="yes" xml:space="preserve">
          <source>Checks whether the current thread has eager execution enabled.</source>
          <target state="translated">현재 스레드가 열망 실행을 활성화했는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="0a00371c8104eecce11bdda237cd5bab917ed668" translate="yes" xml:space="preserve">
          <source>Checks whether the provided export directory could contain a SavedModel.</source>
          <target state="translated">제공된 내보내기 디렉토리에 SavedModel이 포함될 수 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="081e16e0be1f7308e710a862357dde7b864af3d6" translate="yes" xml:space="preserve">
          <source>Chenxin Ma, Virginia Smith, Martin Jaggi, Michael I. Jordan, Peter Richtarik, Martin Takac. 2015</source>
          <target state="translated">Chenxin Ma, Virginia Smith, Martin Jaggi, Michael I. Jordan, Peter Richtarik, Martin Takac. 2015 년</target>
        </trans-unit>
        <trans-unit id="3e8b545859f486b41feff0d018471a7c548b2a22" translate="yes" xml:space="preserve">
          <source>Child Classes</source>
          <target state="translated">어린이 수업</target>
        </trans-unit>
        <trans-unit id="d83a90e27f2ad4d8c09eeba2bd5bbbed966f7b58" translate="yes" xml:space="preserve">
          <source>Children OpHint inputs/outputs mapping. children_inputs_mappings should like below: &quot;parent_first_child_input&quot;: [{&quot;parent_input_index&quot;: num, &quot;child_input_index&quot;: num}, ...] &quot;parent_last_child_output&quot;: [{&quot;parent_output_index&quot;: num, &quot;child_output_index&quot;: num}, ...] &quot;internal_children_input_output&quot;: [{&quot;child_input_index&quot;: num, &quot;child_output_index&quot;: num}, ...]</source>
          <target state="translated">자식 OpHint 입력 / 출력 매핑. children_inputs_mappings는 다음과 같아야합니다. &quot;parent_first_child_input&quot;: [{ &quot;parent_input_index&quot;: num, &quot;child_input_index&quot;: num}, ...] &quot;parent_last_child_output&quot;: [{ &quot;parent_output_index&quot;: num, &quot;child_output_index&quot;: num}, ... ] &quot;internal_children_input_output&quot;: [{ &quot;child_input_index&quot;: num, &quot;child_output_index&quot;: num}, ...]</target>
        </trans-unit>
        <trans-unit id="f45ce32bea628e472de736da92b0e1dfc263dcac" translate="yes" xml:space="preserve">
          <source>Cholesky</source>
          <target state="translated">Cholesky</target>
        </trans-unit>
        <trans-unit id="1c151b7c110323b2c2daa1292841c18bcd174166" translate="yes" xml:space="preserve">
          <source>CholeskyGrad</source>
          <target state="translated">CholeskyGrad</target>
        </trans-unit>
        <trans-unit id="36339416aa31b6e8d9768033e2f07d80cb440e76" translate="yes" xml:space="preserve">
          <source>Choose a monitoring level between 1 and 2 to monitor your job. Level 2 is more verbose than level 1 and shows more metrics.</source>
          <target state="translated">작업을 모니터링하려면 1에서 2 사이의 모니터링 수준을 선택하십시오. 수준 2는 수준 1보다 더 자세하고 더 많은 메트릭을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="06d307e8d098b70f7cac84c9d07c001afdc02b48" translate="yes" xml:space="preserve">
          <source>Choose class probabilities: &lt;code&gt;probs = [p_0,...,p_{K-1}] ~ Dir(concentration)&lt;/code&gt;</source>
          <target state="translated">클래스 확률 선택 : &lt;code&gt;probs = [p_0,...,p_{K-1}] ~ Dir(concentration)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="254a94b76a4abe361d085e6b757d9ad2bac49781" translate="yes" xml:space="preserve">
          <source>ChooseFastestBranchDataset</source>
          <target state="translated">ChooseFastestBranchDataset</target>
        </trans-unit>
        <trans-unit id="f4efa81432e82dd1662ecda41739366287979fa6" translate="yes" xml:space="preserve">
          <source>ChooseFastestDataset</source>
          <target state="translated">ChooseFastestDataset</target>
        </trans-unit>
        <trans-unit id="3c71102c2bb27ccecc4ad4a34d8d5ce11b4bca31" translate="yes" xml:space="preserve">
          <source>Chunks of data of size &lt;code&gt;block_size * block_size&lt;/code&gt; from depth are rearranged into non-overlapping blocks of size &lt;code&gt;block_size x block_size&lt;/code&gt;</source>
          <target state="translated">깊이에서 &lt;code&gt;block_size * block_size&lt;/code&gt; 크기의 데이터 청크는 &lt;code&gt;block_size x block_size&lt;/code&gt; 크기의 겹치지 않는 블록으로 재 배열됩니다.</target>
        </trans-unit>
        <trans-unit id="f5c72c88d726f3183998c923d493edeea5d34b0b" translate="yes" xml:space="preserve">
          <source>Circulant means the entries of &lt;code&gt;A&lt;/code&gt; are generated by a single vector, the convolution kernel &lt;code&gt;h&lt;/code&gt;: &lt;code&gt;A_{mn} := h_{m-n mod N}&lt;/code&gt;. With &lt;code&gt;h = [w, x, y, z]&lt;/code&gt;,</source>
          <target state="translated">Circulant는 &lt;code&gt;A&lt;/code&gt; 의 항목이 단일 벡터, 컨볼 루션 커널 &lt;code&gt;h&lt;/code&gt; : &lt;code&gt;A_{mn} := h_{m-n mod N}&lt;/code&gt; 의해 생성됨을 의미합니다 . 함께 &lt;code&gt;h = [w, x, y, z]&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="dcb2c2e5cf45a48908655e83a9104822c3332853" translate="yes" xml:space="preserve">
          <source>Cite TensorFlow</source>
          <target state="translated">TensorFlow 인용</target>
        </trans-unit>
        <trans-unit id="d91ae8103738faa3c6af39c0a2f441f7d2f9937c" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;AUC&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;AUC&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3949de655640e9c512ec22d0f7d2a40a97c72247" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;AbortedError&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;AbortedError&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bacec76662ca55a44f49c0890d6984811323cca5" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;AbstractRNNCell&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;AbstractRNNCell&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="32bba1a0a506f806da6613aa912e7cb6ed02da2a" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Accuracy&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Accuracy&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c3cbef18d2d31390e5ea8f1275ce9197f787655" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Activation&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Activation&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4150cc7e888940f3e35fb2d48a05c2f5eaa2fde8" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;ActivityRegularization&lt;/code&gt;</source>
          <target state="translated">수업 &lt;code&gt;ActivityRegularization&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d682b6c1fef9a4e91ffd04d3ea90227ff0e24793" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Adadelta&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Adadelta&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52667c6d8e0439e28d0aa18c87c5fedc5f0bf623" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;AdadeltaOptimizer&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;AdadeltaOptimizer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ad2ff8d0bdcbff10a417bc4d044dc9c19e75c694" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Adagrad&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Adagrad&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="106906bd8f35c82b8e260390fe2038fe6b36f193" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;AdagradDAOptimizer&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;AdagradDAOptimizer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="79ec2b05bc4b6a2231fe275241ee95a78064ace3" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;AdagradOptimizer&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;AdagradOptimizer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="abb4f658d97fda457ed52ab415690bcc96f823c8" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;AdagradParameters&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;AdagradParameters&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9c9b7608366cb6e42f1702ad5a6c373bbf796990" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Adam&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Adam&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c2f8d87eb3a4bcdc93c9010028d700f3601af291" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;AdamOptimizer&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;AdamOptimizer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="188785cdfd4d587f73b7a74add249e01c34c934f" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;AdamParameters&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;AdamParameters&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3409195bbd89e13bed6a975292a211ce7300d413" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Adamax&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Adamax&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="b5efdfc377b9cd6f9ba31430c6ad784a0329af9e" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Add&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Add&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="722f2689bea146b3476f7bbff4fb0b4ea39f975f" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;AdditiveAttention&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;AdditiveAttention&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c069fa9094853728a34f2acbfc33105eaaa0d16" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;AdviceProto&lt;/code&gt;</source>
          <target state="translated">수업 &lt;code&gt;AdviceProto&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a007052d6a88801e4ddd1876e290ab5da940b64e" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;AggregationMethod&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;AggregationMethod&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa1d8d4d3c7326b06a431004a39a289692089401" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;AlphaDropout&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;AlphaDropout&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d7ec5c1c0bf6ef6c138bb97e43a6e6fc5a8b1f0f" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;AlreadyExistsError&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;AlreadyExistsError&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4c54337034e447fddc8846a31cd8402ecd7d1cf7" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;ArgumentParser&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;ArgumentParser&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb41faa7ad8bbfcfc77e4b0ca324c0e08e284763" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;ArgumentSerializer&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;ArgumentSerializer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="96fd318137691c1bf0eedb8b1dd2ab77073935c9" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Asset&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Asset&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c3c6d910e530e0fa1aa7025b38f1cbf4aeff052b" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Attention&lt;/code&gt;</source>
          <target state="translated">수업 &lt;code&gt;Attention&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b635c3bdd026b39ca5592946404ef97c1626a84d" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;AttrEntry&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;AttrEntry&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b5cf301802a3efa358c2b7d9ab5646efc0556aab" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;AttrValue&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;AttrValue&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="145a488bc364287eacc62cc2bd1918bc7ec2fb91" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Audio&lt;/code&gt;</source>
          <target state="translated">수업 &lt;code&gt;Audio&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6676ddc6447ea3d7c7de56ef0f9feedd43067fb3" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;AutoShardPolicy&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;AutoShardPolicy&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="37529a4c9fb5403381e62535c3792e0d4188c468" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Average&lt;/code&gt;</source>
          <target state="translated">수업 &lt;code&gt;Average&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0370e173ccf4e2b37bf0bb979371bd328593e5d" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;AveragePooling1D&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;AveragePooling1D&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4af41d7f70d9ae4c1d04f893364786a975e5308c" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;AveragePooling2D&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;AveragePooling2D&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e1376a511804b9dbcd53cef5a1a5d3002ea76649" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;AveragePooling3D&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;AveragePooling3D&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4f5be53a06d7179c574c397e0e3bf97176679330" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;BaseListParser&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BaseListParser&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="dfaad4fc192e676192c711663d42e4c75aee9ba5" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;BaseLogger&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;BaseLogger&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d8a7557aad0ba44df757e83222b90606533444b7" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;BaselineClassifier&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;BaselineClassifier&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="947a09777b5a274c64dcf061e43a9ca43906f212" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;BaselineEstimator&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;BaselineEstimator&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c18453400eda0696fe04abd391743c9a8e35c9b" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;BaselineRegressor&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;BaselineRegressor&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ef3d4b4403a6a7517f4cef48fb05a551d489fac" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;BasicLSTMCell&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;BasicLSTMCell&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="315e4a0dd265d12b686a62b40f291c7baa49fab9" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;BasicRNNCell&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;BasicRNNCell&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="698b254933e1c457256106c679145d67714b29b6" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;BatchNormalization&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;BatchNormalization&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="16fb080f327a0b43b70477ed0c9de8dd44dff89d" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Benchmark&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Benchmark&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4430a57ab4fbb829cfb3425b8ee3ad3fa3c0bd13" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Bernoulli&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Bernoulli&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="4095f9e319a0b3a5243009acfd370178951a0208" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;BestExporter&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BestExporter&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="c1cfe2499805203588a44fd6a07c177a82186555" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Beta&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Beta&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="baab8a29437b1b771d25da74652542eb131a7e3f" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Bidirectional&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Bidirectional&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e438fd72d70bc369a807ee93691643ba5a0c9bdf" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;BinaryAccuracy&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;BinaryAccuracy&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="963d5803afc6d79f4d9b15779053baec1ca85dc6" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;BinaryClassHead&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BinaryClassHead&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="fc5bfbf0813687470692e4fbbc3b68f931e6effa" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;BinaryCrossentropy&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BinaryCrossentropy&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="8d400a6d13e73889f33ae8eb6fde6f78885cec12" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;BooleanFlag&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BooleanFlag&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="85aca771a934725fe03a2c21517a14b32a398dd0" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;BooleanParser&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BooleanParser&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="8ba91dd39fc59681421960fe1fa018fd94ce7fab" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;BoostedTreesClassifier&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;BoostedTreesClassifier&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c2cd9d432edec3db91b6d8a066536e5b9f6d618f" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;BoostedTreesEstimator&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;BoostedTreesEstimator&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b8feae76c149da0f2d7d6b111a68c3d51bb986b4" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;BoostedTreesRegressor&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;BoostedTreesRegressor&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="925e8414b49af82c9205833cbbae3c6277f45894" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Builder&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Builder&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="00b5307c125bbbc3637bfe316cf358e7ad149728" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;BytesList&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;BytesList&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="66c96266aa779f599aa175633268a71d3b7d0f64" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CSVLogger&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CSVLogger&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="623c12427fbdbdc672fb977f1a830388a55cc0ac" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Callback&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Callback&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="473594b2b705b4c035e7ca6db0c4fbf5e0d54dfe" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CancelledError&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;CancelledError&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84b3628a0fbf67cbad7028db4d245ecb654a69a6" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CantOpenFlagFileError&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CantOpenFlagFileError&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="9e794abcecf7ccb2d8b6b8b03b52b3cf699eedaf" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Categorical&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Categorical&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="626931e2c2471759ac90e368849b23fe7b9c4cd5" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CategoricalAccuracy&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;CategoricalAccuracy&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b4e4435ebd8f7ecb833459b7957c23651535cb2a" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CategoricalCrossentropy&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;CategoricalCrossentropy&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d28d0bb939b9c7d52fadd90dec41eedd923138a8" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CategoricalHinge&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CategoricalHinge&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="7ac1a466a779989e51e5588e748c6ea10a4d5e22" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CentralStorageStrategy&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;CentralStorageStrategy&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d42e85aa00a2dd9bc44690dce11a4f64a6527624" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Checker&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Checker&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="54b1f90a90ccddfd1893fbb4e69917c344fbb780" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CheckersEntry&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;CheckersEntry&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="460f3c425fd5ca6f55dee32c477d1b5e840d13e5" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Checkpoint&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Checkpoint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3edce4762e8efc221ab4cc07b28e7231041b7edb" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CheckpointInputPipelineHook&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;CheckpointInputPipelineHook&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f11ecf424d0152d3d4147b1f5c4d0c96757ecb3e" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CheckpointManager&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;CheckpointManager&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c361b6bd85dfd3f7ada9d78acb76c3a08328f128" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CheckpointSaverHook&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;CheckpointSaverHook&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc09d8e774b9ad61a24a26143c5ac8ed7cd199ca" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CheckpointSaverListener&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;CheckpointSaverListener&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2005a6fe8bd71936dfbcc9a40d54a733958c67d1" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;ChiefSessionCreator&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;ChiefSessionCreator&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b63eb22da3c8dbe773591b365adb45c1eab392e7" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;ClassificationOutput&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;ClassificationOutput&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="22423695d7170ba6d7cf4d5490f7b9ae49892338" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;ClusterDef&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ClusterDef&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="29bd9a531a67b76a8528d4f743be0e53f0f3a0db" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;ClusterResolver&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;ClusterResolver&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="73d178c6cf816eca87dedfbf81203524ac0ecbad" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;ClusterSpec&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;ClusterSpec&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ebd95e5e5abbcf7e91594cabfe9461badc6727e7" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CollectionDefEntry&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;CollectionDefEntry&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe3034c377376db7a38ac1f79e1ebedd9a2256c5" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CollectiveCommunication&lt;/code&gt;</source>
          <target state="translated">집단 집단 &lt;code&gt;CollectiveCommunication&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07354c8fa2624079756dd60e06f9aaba6476345b" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CompositeTensor&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;CompositeTensor&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5cbad8d0152f2ef00b4839799cfbb98ec74ebb82" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Concatenate&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Concatenate&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f67df5d774272041c3636994513a6d4bb80fe398" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;ConditionalAccumulator&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;ConditionalAccumulator&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1e204b981379d518be8cb1a7363de6126327123d" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;ConditionalAccumulatorBase&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;ConditionalAccumulatorBase&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="15010ae365bd6d65db4300fa168475795f0a4c7f" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;ConfigProto&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;ConfigProto&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26a5b88effd2f0b87d8d7185b51ef4ccf3c75fb4" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Constant&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Constant&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="130690aeb2378b33d3e6da1956562f91a25f1f34" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Constraint&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Constraint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="35604b3ee64f5d60a8362457ab19fa6a7594a070" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Conv1D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Conv1D&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="8a0b5db9567cf3bbd54d4d38c520c4ab43f77431" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Conv2D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Conv2D&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="9c454fc1d64c75297325af2c10e5eb1729ab38a2" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Conv2DTranspose&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Conv2DTranspose&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="aeea94513cb273ccbefe4e8455177f07de64594a" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Conv3D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Conv3D&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="880fd8079c8b090ef2772d658eeadf7da7a1261a" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Conv3DTranspose&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Conv3DTranspose&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="20537a9877e87769161d9e95417a1d656c34290d" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;ConvLSTM2D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ConvLSTM2D&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="51d2b5da041f35574a132596dc2c6a59ea4885d4" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Converter&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Converter&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="73838f3e3c9c9c03100f63010bc61c9d052ff5ad" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CooSparse&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;CooSparse&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3f2296e920599e75da0714d8a43e7e8b6a6f32f9" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Coordinator&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Coordinator&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="639094b9fe34debcb2adc39c04b72a99f3ffe33c" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CosineDecay&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;CosineDecay&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d9808eedfb34c5eed7944473fbfbd722d05b0c0a" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CosineDecayRestarts&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;CosineDecayRestarts&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f60aee20340565edb302c38e5c461338c1775f35" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CosineSimilarity&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;CosineSimilarity&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ee3e36d3c4673475c8fe09eb182d56fee3d8ba99" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CriticalSection&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;CriticalSection&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="35f06aba7231859af4ca77d190a34daeed5dfce1" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Cropping1D&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Cropping1D&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ed0af12014d262a70e1721292d4c2a23bc52e62e" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Cropping2D&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Cropping2D&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84edf562dc48f0fd6f6bc5603de7b491b40ffe91" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Cropping3D&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Cropping3D&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c8e68e5350146c34d82c03364587c3160ed4a4d8" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CrossDeviceOps&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;CrossDeviceOps&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c6c46812e45dd3f6004b8c69f22559963482f19f" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CrossShardOptimizer&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;CrossShardOptimizer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb97b8a6433bb4f7813b090cd945ac1a408498f9" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CsvDataset&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;CsvDataset&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6371a034cc6f8bb5c337114f51a49673e2e8646a" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CsvListSerializer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CsvListSerializer&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="53dabbedb4306df239e3ec72ab3e253bd9752eb0" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CuDNNGRU&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CuDNNGRU&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="7f9cc3c9a2acc252da1a8d0cf0783dacf361f3f7" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CuDNNLSTM&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;CuDNNLSTM&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="88767e67e12ffce934236067f3a95159b2ad3c94" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CurrentModuleFilter&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;CurrentModuleFilter&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="64ee8732c6a4da2a4d2d4c5ca4e7177273cf310d" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;CustomObjectScope&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CustomObjectScope&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="d45d364786349f36e5fc170e2e6234a34e74d363" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;DNNClassifier&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;DNNClassifier&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8af05c12f63b0fd3c92a4c86846eee2fcc424b75" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;DNNEstimator&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DNNEstimator&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="50c0d58b0ef2d60db424c01d3b5b11d32335dbb6" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;DNNLinearCombinedClassifier&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DNNLinearCombinedClassifier&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="c468d642f178984ab9adfafa8679dfee53bde730" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;DNNLinearCombinedEstimator&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DNNLinearCombinedEstimator&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="fa95a92fd79dcc3f03cbccbadb44b8ae8e151635" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;DNNLinearCombinedRegressor&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DNNLinearCombinedRegressor&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="7cad338d26fb1f311fd76eca1805694646527f63" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;DNNRegressor&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;DNNRegressor&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ba5b25c96f1491a81f71da349138b9df63ed29d" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;DType&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;DType&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="711cdcd2575c5be490c91247c07fb55681dff698" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;DataLossError&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;DataLossError&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6015959783e568b5c75a626b3b0e8e4cbd99f5ae" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Dataset&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Dataset&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c6abee8ef5c12828c94bdfa435a2f42820dd20f0" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;DatasetSpec&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;DatasetSpec&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f7340da8eed8cfeeaa03c59e06a7a1bb69c26168" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;DeadlineExceededError&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;DeadlineExceededError&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e05048360c78f1935154fd07698f116060619d0" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Dense&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Dense&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a40cdf25b5b751ed4860ed13acbc426eeaa58cab" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;DenseFeatures&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;DenseFeatures&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="46373c3c5aa4a9a84b58611fb4b76cc36763b026" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;DenseHashTable&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;DenseHashTable&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b6db261320c5c56ecb535e282c91469ec3d449fe" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;DepthwiseConv2D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DepthwiseConv2D&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="ffd504b18cd56706d872c4a05dc43fc68c154320" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;DeviceAssignment&lt;/code&gt;</source>
          <target state="translated">클래스 장치 &lt;code&gt;DeviceAssignment&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c2ade4e29cea1d99f99bf826ecf2e7e9d79e9f70" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;DeviceCountEntry&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DeviceCountEntry&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="e686c64878b5f918d044362949f77f2b1be5508b" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;DeviceSpec&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;DeviceSpec&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6fa430933e3069aa27572493ab7817ea1b2753ee" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;DeviceWrapper&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;DeviceWrapper&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24080ba822655c5b934236af09b4ab82e0e9be52" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Dimension&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Dimension&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="edfcb726a3b26da6a5c0939775ccb059fda84969" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;DirectoryIterator&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;DirectoryIterator&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="359b2f4e410b03b2de8a540faf1a8cbe64a62596" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Dirichlet&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Dirichlet&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a3937de8b6935b9a076bb9dcb210d61152b43258" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;DirichletMultinomial&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;DirichletMultinomial&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="97305452800b057dfb6de61077059e63d409d743" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;DistributeOptions&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;DistributeOptions&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e5d2eb20618f67b71c6d4a708d09fe81e2fa3f62" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Distribution&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Distribution&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5e50c67c6389f23c7a3fae1168994862a927d973" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Dot&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Dot&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6147622095d590b48c129582621f8a8eda2ca7ea" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Dropout&lt;/code&gt;</source>
          <target state="translated">수업 &lt;code&gt;Dropout&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9296a9bf51004230a1a8c7b1a0f6913f85c7a1b5" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;DropoutWrapper&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;DropoutWrapper&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="08cf07ee41bb672989e50b6451c326ea1695fe05" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;DuplicateFlagError&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;DuplicateFlagError&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="22aef89c0b2ec61debb74c00de4f3241dfe2ba5d" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;DynamicLossScale&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;DynamicLossScale&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0fb05b67565c9a02cadf4992992f139798c4fca5" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;ELU&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;ELU&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9cad6f0852d0496cff1ac195bcb373cd20bb2c2e" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;EarlyStopping&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;EarlyStopping&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e1f85fec4b1b1f6bc19686e4cd186651aaf6436d" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Embedding&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Embedding&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f189fa4ef29fc33f9435515b77b269c4bb5bf37" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;EmbeddingConfigSpec&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;EmbeddingConfigSpec&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9784c61bebefa1ca0d2e9cbdac99be8e0aa39d70" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;EnumClassFlag&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;EnumClassFlag&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="36733064377d7f1674660fca59adad78ed5eafee" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;EnumClassParser&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;EnumClassParser&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="29364e60b1bc48217cd1c68e43c79046e238623e" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;EnumFlag&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;EnumFlag&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b2f9a78bfed19721a4f9a977b7599e15578fd01d" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;EnumParser&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;EnumParser&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7397e43514f9b6765bfa335d530b53914322041" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Error&lt;/code&gt;</source>
          <target state="translated">수업 &lt;code&gt;Error&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8d243c7fc63be8fd4d127665eacb36ec5761d6cf" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Estimator&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Estimator&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2057cf59c968f251eba823d0eea0564b78331903" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;EstimatorSpec&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;EstimatorSpec&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4cee3c667075a3030699488fc3454076d637a315" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;EvalSpec&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;EvalSpec&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d031f61253e19618467d85a88537c2c35b84ecae" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Event&lt;/code&gt;</source>
          <target state="translated">수업 &lt;code&gt;Event&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e035f92e1632cbba03195d6b12caea203d8608f1" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Example&lt;/code&gt;</source>
          <target state="translated">수업 &lt;code&gt;Example&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e62b4959f8f64b494b67220bd17c07211712afb7" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Experimental&lt;/code&gt;</source>
          <target state="translated">수업 &lt;code&gt;Experimental&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3a464fc4bb2398fb7bf646ff774ac85436110c8e" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;ExperimentalDebugInfo&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;ExperimentalDebugInfo&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3000dfbf5a100f6f99a0290992adb4f8e0178f1e" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Exponential&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Exponential&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3e5ade067c884db8ffbd7460c6fa9a45979874d1" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;ExponentialDecay&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;ExponentialDecay&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="680bd1eb7f487d1050727d095245de698cafda5c" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;ExponentialMovingAverage&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;ExponentialMovingAverage&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aec5c4065a820de1fca55b7717fedaff673c478b" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;ExportOutput&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;ExportOutput&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eaaa0fe5271f345bbd5b6fbd4f5e68e445bd9a95" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Exporter&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Exporter&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19ec1f98be465f9af00b0f86a143866db9bc548d" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;FIFOQueue&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FIFOQueue&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="d389badbfda99a88d08649b64ee30b95fe195e33" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;FailedPreconditionError&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FailedPreconditionError&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="9964dfc9aacc05aa0cfec9dbc226fcd6ef896a61" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;FalseNegatives&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;FalseNegatives&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="137d919d1702f6895eb8c3a0ccc2893d7bd8b0af" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;FalsePositives&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;FalsePositives&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="27971e8d7b3d8d46e1a29f92b3620d216f53b6a7" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;FastGFile&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;FastGFile&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d8bfdc1e68ee1467b7473278b234c664036a9b4c" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Feature&lt;/code&gt;</source>
          <target state="translated">수업 &lt;code&gt;Feature&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa66a46aa67c2214dbaf6dd571953a9c90aaaf27" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;FeatureEntry&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;FeatureEntry&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d0ceda0f59451bd75abfd462640382d7d22c2cfd" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;FeatureList&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;FeatureList&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f46e8bd0be86d11c3a1b8b1692b995128b00c60a" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;FeatureListEntry&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;FeatureListEntry&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1f608d598ed4da9ad9d531e9fc13ccd416aa9593" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;FeatureLists&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;FeatureLists&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="765960b3f7c6913e91b07de977eebd337dca12aa" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Features&lt;/code&gt;</source>
          <target state="translated">수업 &lt;code&gt;Features&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fbedc9024f56718ce80879c31c0b72d7a28f23c1" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;FeedFnHook&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;FeedFnHook&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="903668d740509f9ab5e3b5cf8cee05e93c51edde" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;FileWriter&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;FileWriter&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="845ab9eaa8d11053fca90c40b26c8682e9b64b46" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;FileWriterCache&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FileWriterCache&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="21cd0363d8c836a1b6c2d7755ca2275a69d094f2" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;FinalExporter&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FinalExporter&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="e2c141f2d4dab71338a1fa1b3eeefde4c2cb30f4" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;FinalOpsHook&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FinalOpsHook&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="2f308baf61eed0dc91ef13cb6a474d02cfa73542" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;FixedLenFeature&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;FixedLenFeature&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4cfe9bd6af67eb8b76abfa37d42428e2e8cf50fa" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;FixedLenSequenceFeature&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;FixedLenSequenceFeature&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ab624e5b7f23e7d4806955f88d36973a86bb035" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;FixedLengthRecordDataset&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FixedLengthRecordDataset&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="26436df081208a472d1a8fa14e5f899ceb12bd44" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;FixedLengthRecordReader&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FixedLengthRecordReader&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="bac3d349fc90f986f42051f361737ac729141cca" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;FixedLossScale&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;FixedLossScale&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="95450d2079e3c38ab9baf417fd9da6ce7f5c3a76" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Flag&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Flag&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="01ae37a4ab72d1c50bb0dfa06be0e474804c932a" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;FlagNameConflictsWithMethodError&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FlagNameConflictsWithMethodError&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="3fb21743828817273949af1e0bcf4057dc6563b8" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;FlagValues&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;FlagValues&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc9ae272eeec612851b46f15b98ba3c1a3f6875e" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Flatten&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Flatten&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90ed88ef3ec69659ffe75ba506b7e87650679c44" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;FloatList&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FloatList&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="600d308ded14a73ebd0785c1c0d9466821e192a8" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;FloatParser&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FloatParser&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="6f8ca321cc573b4633728b7a1ffc05781a0a2b3e" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;ForwardAccumulator&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;ForwardAccumulator&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6de46c6b867fdd3b2b945249021334bcb10d2c04" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;FrameSummary&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;FrameSummary&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4af2b52b48c29e30456d4f9565a19a46ceb8746b" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Ftrl&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Ftrl&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0da7f9ad6ff1ecdf03e049546d6617a7319d390b" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;FtrlOptimizer&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;FtrlOptimizer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7614a8415d36174616d032243c9968f68ccacc74" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;FunctionGraphs&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;FunctionGraphs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6a574f65a5362354e98d5748f9d916dab6dcb56" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;GCEClusterResolver&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GCEClusterResolver&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="3a9a2564bf3e3d2d2fbfde6f5d6a8fff5c36dce7" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;GFile&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;GFile&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="83093d2259ef87239452c64c216a72d4243e4580" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;GPUOptions&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;GPUOptions&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a73cbb9917f6d1a59d61dcf08c8e4fb2c671246b" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;GRU&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;GRU&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e402c7a9405a9a27a1d856dec05951f925a407bb" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;GRUCell&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GRUCell&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="722101d3d2449b9e925021180e5e440d4c0f3df3" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Gamma&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Gamma&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c518753bc3f9601102f353d8dfa2899c1063da4" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;GaussianDropout&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;GaussianDropout&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ad286747a902d2a3da0cdaf037e2556dbbd00ff0" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;GaussianNoise&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;GaussianNoise&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a28aaa7b8c038f072305f6f214f31d9ad0d8ffa4" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Generator&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Generator&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3059f528712c64191755326ef24344164971f7e8" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;GeneratorEnqueuer&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;GeneratorEnqueuer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ddc856677d7171ec58a7838b0139699e22e973e" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;GlobalAveragePooling1D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GlobalAveragePooling1D&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="bffb14094672ac65adbcce563fb2b8a0796f90c4" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;GlobalAveragePooling2D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GlobalAveragePooling2D&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="1b947d35ea2582c0ee722d5dfc67ecae53fedd6a" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;GlobalAveragePooling3D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GlobalAveragePooling3D&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="63a6f6b690ff910ac79c43e62bb33df3ec823e94" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;GlobalMaxPool1D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GlobalMaxPool1D&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="fa0542617ac64f8a26598821d9ae6f909b51e855" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;GlobalMaxPool2D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GlobalMaxPool2D&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="5cc05c90b6dbff6110ed37bec6277bf1c37ad76e" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;GlobalMaxPool3D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GlobalMaxPool3D&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="f7a609316ef26ddd72f463da52991b1e6fdbeba2" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;GlobalStepWaiterHook&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GlobalStepWaiterHook&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="445d8628837ad76da2ae98e4575b953b7d6cc547" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;GlorotNormal&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GlorotNormal&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="c6ee58dc8173e2c9742f269d9f61e41623e77415" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;GlorotUniform&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GlorotUniform&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="9c1e6b9967efaabafffa1c9fd14e74b2af258e28" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;GradientDescentOptimizer&lt;/code&gt;</source>
          <target state="translated">Class &lt;code&gt;GradientDescentOptimizer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ae5efb3670a4e400fce5dc1f8c547330ef03c393" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;GradientTape&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;GradientTape&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="df65b71854418377436d9fdcc45a9bca3c49e4c1" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Graph&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;Graph&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fb856f614aacabfb2af6f64fdbff9872398902f0" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;GraphDef&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GraphDef&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="dc3fc3e809226945edc677a80fa08c1e62ac6499" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;GraphKeys&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;GraphKeys&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c12eb171b81899aa843551b5950447ac3500c3a4" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;GraphNodeProto&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GraphNodeProto&lt;/code&gt; 클래스</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
