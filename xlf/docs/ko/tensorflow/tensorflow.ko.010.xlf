<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="tensorflow">
    <body>
      <group id="tensorflow">
        <trans-unit id="0d73861c3aa2d44094abde4808a4fc8b04aeb746" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;counts&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; containing the total count of the data (one value).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;counts&lt;/code&gt; &lt;/b&gt; :데이터의 총 개수를 포함하는 &lt;code&gt;Tensor&lt;/code&gt; (1 개의 값).</target>
        </trans-unit>
        <trans-unit id="ca63bad23042e59097262f7ee474ad3746c4ddb1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;covariance&lt;/code&gt;&lt;/b&gt;: Floating-point &lt;code&gt;Tensor&lt;/code&gt; with shape &lt;code&gt;[B1, ..., Bn, k', k']&lt;/code&gt; where the first &lt;code&gt;n&lt;/code&gt; dimensions are batch coordinates and &lt;code&gt;k' = reduce_prod(self.event_shape)&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;covariance&lt;/code&gt; &lt;/b&gt; :모양이 &lt;code&gt;[B1, ..., Bn, k', k']&lt;/code&gt; 부동 소수점 &lt;code&gt;Tensor&lt;/code&gt; . 여기서 첫 번째 &lt;code&gt;n&lt;/code&gt; 차원은 배치 좌표이고 &lt;code&gt;k' = reduce_prod(self.event_shape)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="395d48ec77137a0972001e318973ff65a0d49fa9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;cpu_merge&lt;/code&gt;&lt;/b&gt;: A boolean value to identify whether to force merging model weights under the scope of the CPU or not.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;cpu_merge&lt;/code&gt; &lt;/b&gt; : CPU 범위에서 모델 가중치를 강제로 병합할지 여부를 식별하는 부울 값입니다.</target>
        </trans-unit>
        <trans-unit id="7b66dd0148d22a7299de7057117cae958ac3cc98" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;cpu_relocation&lt;/code&gt;&lt;/b&gt;: A boolean value to identify whether to create the model's weights under the scope of the CPU. If the model is not defined under any preceding device scope, you can still rescue it by activating this option.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;cpu_relocation&lt;/code&gt; &lt;/b&gt; : CPU 범위에서 모델 가중치를 작성할지 여부를 식별하는 부울 값입니다. 모델이 이전 장치 범위에서 정의되지 않은 경우이 옵션을 활성화하여 모델을 구제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="da12d144cab440db55a97c459f465cbfcfed0c7f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;cpu_time&lt;/code&gt;&lt;/b&gt;: (optional) Median or mean cpu time in seconds.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;cpu_time&lt;/code&gt; &lt;/b&gt; : (선택 사항) 중앙값 또는 평균 CPU 시간 (초)입니다.</target>
        </trans-unit>
        <trans-unit id="6c3aa18d1d4be7f9031cf5c14e283a38426ef9ec" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;create_scope_now_&lt;/code&gt;&lt;/b&gt;: Boolean controlling whether the scope should be created when the template is constructed or when the template is called. Default is False, meaning the scope is created when the template is called.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;create_scope_now_&lt;/code&gt; &lt;/b&gt; : 템플릿을 만들 때 또는 템플릿을 호출 할 때 범위를 만들어야하는지 여부를 제어하는 ​​부울입니다. 기본값은 False이며 템플릿을 호출 할 때 범위가 생성됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="253c951b546fceeeef360ec66628fc2476ffa0ac" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;credentials&lt;/code&gt;&lt;/b&gt;: GCE Credentials. If None, then we use default credentials from the oauth2client</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;credentials&lt;/code&gt; &lt;/b&gt; : GCE 자격 증명. None이면 oauth2client의 기본 자격 증명을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="dabecf93f02be93f19c81a02e434021d6c5574a1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;credentials&lt;/code&gt;&lt;/b&gt;: GCE Credentials. If nothing is specified, this defaults to GoogleCredentials.get_application_default().</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;credentials&lt;/code&gt; &lt;/b&gt; : GCE 자격 증명. 아무것도 지정하지 않으면 기본값은 GoogleCredentials.get_application_default ()입니다.</target>
        </trans-unit>
        <trans-unit id="8e55c97390e6c867e8792932bb3e284c4043f7d9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;crop_size&lt;/code&gt;&lt;/b&gt;: A 1-D tensor of 2 elements, &lt;code&gt;size = [crop_height, crop_width]&lt;/code&gt;. All cropped image patches are resized to this size. The aspect ratio of the image content is not preserved. Both &lt;code&gt;crop_height&lt;/code&gt; and &lt;code&gt;crop_width&lt;/code&gt; need to be positive.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;crop_size&lt;/code&gt; &lt;/b&gt; : 2 개의 요소로 구성된 1 차원 텐서, &lt;code&gt;size = [crop_height, crop_width]&lt;/code&gt; . 자른 이미지 패치는 모두이 크기로 조정됩니다. 이미지 내용의 종횡비가 유지되지 않습니다. &lt;code&gt;crop_height&lt;/code&gt; 와 &lt;code&gt;crop_width&lt;/code&gt; 는모두 양수 여야 합니다.</target>
        </trans-unit>
        <trans-unit id="3b705c19c585e4dcc6626d9077202c3c44a94e77" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;crop_size&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. A 1-D tensor of 2 elements, &lt;code&gt;size = [crop_height, crop_width]&lt;/code&gt;. All cropped image patches are resized to this size. The aspect ratio of the image content is not preserved. Both &lt;code&gt;crop_height&lt;/code&gt; and &lt;code&gt;crop_width&lt;/code&gt; need to be positive.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;crop_size&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;int32&lt;/code&gt; 유형의 &lt;code&gt;Tensor&lt;/code&gt; . 2 개의 요소로 구성된 1 차원 텐서, &lt;code&gt;size = [crop_height, crop_width]&lt;/code&gt; . 자른 이미지 패치는 모두이 크기로 조정됩니다. 이미지 내용의 종횡비가 유지되지 않습니다. &lt;code&gt;crop_height&lt;/code&gt; 와 &lt;code&gt;crop_width&lt;/code&gt; 는모두 양수 여야 합니다.</target>
        </trans-unit>
        <trans-unit id="26cbcac2886e939398f38b7408777b8caed43073" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;crop_window&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. 1-D. The crop window: [crop_y, crop_x, crop_height, crop_width].</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;crop_window&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;int32&lt;/code&gt; 유형의 &lt;code&gt;Tensor&lt;/code&gt; . 1D. 자르기 창 : [crop_y, crop_x, crop_height, crop_width].</target>
        </trans-unit>
        <trans-unit id="69044937ce1c23ca414f13028aaf58777acff3d7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;cropping&lt;/code&gt;&lt;/b&gt;: Int or tuple of int (length 2) How many units should be trimmed off at the beginning and end of the cropping dimension (axis 1). If a single int is provided, the same value will be used for both.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;cropping&lt;/code&gt; &lt;/b&gt; : int 또는 튜플 int (길이 2) 자르기 치수의 시작과 끝에서 잘라야하는 단위 수 (축 1)입니다. 단일 int가 제공되면 동일한 값이 두 값에 모두 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8d4743d6191ecd07d64f5a42c3d58b7c787b1ad6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;cropping&lt;/code&gt;&lt;/b&gt;: Int, or tuple of 2 ints, or tuple of 2 tuples of 2 ints.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;cropping&lt;/code&gt; &lt;/b&gt; : Int 또는 2 intu의 튜플 또는 2 int의 2 튜플의 튜플.</target>
        </trans-unit>
        <trans-unit id="45ca86a76ac7880d9bca6de107e2053f87bfecc6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;cropping&lt;/code&gt;&lt;/b&gt;: Int, or tuple of 3 ints, or tuple of 3 tuples of 2 ints.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;cropping&lt;/code&gt; &lt;/b&gt; : Int 또는 3 intu의 튜플 또는 2 int의 3 튜플의 튜플.</target>
        </trans-unit>
        <trans-unit id="c89df959eaab24978e5ec273f10b6054dd07b0ef" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;crops&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 2-D tensor of non-negative integers with shape &lt;code&gt;[2, 2]&lt;/code&gt;. It specifies how many elements to crop from the intermediate result across the spatial dimensions as follows:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;crops&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; 유형 중 하나 여야합니다. 모양이 &lt;code&gt;[2, 2]&lt;/code&gt; 인 음이 아닌 정수의 2 차원 텐서. 공간 차원에서 중간 결과에서 잘라낼 요소 수를 다음과 같이 지정합니다.</target>
        </trans-unit>
        <trans-unit id="814a4bb72aad19dc91e72353c318ead035982a40" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;crops&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 2-D with shape &lt;code&gt;[M, 2]&lt;/code&gt;, all values must be &amp;gt;= 0. &lt;code&gt;crops[i] = [crop_start, crop_end]&lt;/code&gt; specifies the amount to crop from input dimension &lt;code&gt;i + 1&lt;/code&gt;, which corresponds to spatial dimension &lt;code&gt;i&lt;/code&gt;. It is required that &lt;code&gt;crop_start[i] + crop_end[i] &amp;lt;= block_shape[i] * input_shape[i + 1]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;crops&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; 유형 중 하나 여야합니다. &lt;code&gt;[M, 2]&lt;/code&gt; 모양의 2-D에서 모든 값은&amp;gt; = 0이어야합니다. &lt;code&gt;crops[i] = [crop_start, crop_end]&lt;/code&gt; 는 입력 차원 &lt;code&gt;i + 1&lt;/code&gt; 에서 자르기 양을 지정합니다. 이는 공간 차원 &lt;code&gt;i&lt;/code&gt; 에 해당합니다. 그것은 필요하다고 &lt;code&gt;crop_start[i] + crop_end[i] &amp;lt;= block_shape[i] * input_shape[i + 1]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ed97297bf5e9f0b641de71f7e63e47c1e556267" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;crops&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 2-D with shape &lt;code&gt;[M, 2]&lt;/code&gt;, all values must be &amp;gt;= 0. &lt;code&gt;crops[i] = [crop_start, crop_end]&lt;/code&gt; specifies the amount to crop from input dimension &lt;code&gt;i + 1&lt;/code&gt;, which corresponds to spatial dimension &lt;code&gt;i&lt;/code&gt;. It is required that &lt;code&gt;crop_start[i] + crop_end[i] &amp;lt;= block_shape[i] * input_shape[i + 1]&lt;/code&gt;. This operation is equivalent to the following steps:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;crops&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; 유형 중 하나 여야합니다. &lt;code&gt;[M, 2]&lt;/code&gt; 모양의 2-D에서 모든 값은&amp;gt; = 0이어야합니다. &lt;code&gt;crops[i] = [crop_start, crop_end]&lt;/code&gt; 는 입력 차원 &lt;code&gt;i + 1&lt;/code&gt; 에서 자르기 양을 지정합니다. 이는 공간 차원 &lt;code&gt;i&lt;/code&gt; 에 해당합니다. 그것은 필요하다고 &lt;code&gt;crop_start[i] + crop_end[i] &amp;lt;= block_shape[i] * input_shape[i + 1]&lt;/code&gt; . 이 작업은 다음 단계와 같습니다.</target>
        </trans-unit>
        <trans-unit id="59590cb1a458d7da190847d706592a02249cbbcd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;cross_device_ops&lt;/code&gt;&lt;/b&gt;: optional, a descedant of &lt;code&gt;CrossDeviceOps&lt;/code&gt;. If this is not set, nccl will be used by default.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;cross_device_ops&lt;/code&gt; &lt;/b&gt; : 선택 사항이며 CrossDeviceOps의 &lt;code&gt;CrossDeviceOps&lt;/code&gt; 입니다. 설정하지 않으면 기본적으로 nccl이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d0fcadb236bf6e565de3de9e7f63a96709a4106d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;cross_entropy&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;self.dtype&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; with shape &lt;code&gt;[B1, ..., Bn]&lt;/code&gt; representing &lt;code&gt;n&lt;/code&gt; different calculations of (Shanon) cross entropy.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;cross_entropy&lt;/code&gt; &lt;/b&gt; :(Shanon) 교차 엔트로피의 &lt;code&gt;n&lt;/code&gt; 가지 계산을나타내는모양 &lt;code&gt;[B1, ..., Bn]&lt;/code&gt; 갖는 &lt;code&gt;self.dtype&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21227ff011a1acf8d752355065a5fe1e30768a8a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ctc_merge_repeated&lt;/code&gt;&lt;/b&gt;: Boolean. Default: True.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;ctc_merge_repeated&lt;/code&gt; &lt;/b&gt; : 부울. 기본값 : True</target>
        </trans-unit>
        <trans-unit id="c1ebf4fe22c43717739015cab556bd86a41658fe" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;cuda_only&lt;/code&gt;&lt;/b&gt;: limit the search to CUDA GPUs.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;cuda_only&lt;/code&gt; &lt;/b&gt; : 검색을 CUDA GPU로 제한합니다.</target>
        </trans-unit>
        <trans-unit id="ae615893dc2b8bf8ac1fe5cb9296d220a0cfcede" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;current&lt;/code&gt;&lt;/b&gt;: Index of current step.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;current&lt;/code&gt; &lt;/b&gt; : 현재 단계의 색인.</target>
        </trans-unit>
        <trans-unit id="37a4d67c46882107aa1741d8fa5955f5610d3236" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;curve&lt;/code&gt;&lt;/b&gt;: (Optional) Specifies the name of the curve to be computed, 'ROC' [default] or 'PR' for the Precision-Recall-curve.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;curve&lt;/code&gt; &lt;/b&gt; : (선택 사항) Precision-Recall-curve에 대해 계산할 곡선 이름, 'ROC'[기본값] 또는 'PR'을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a51d1183e2dca229725ea2abad92f0d2a08ff376" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;curve&lt;/code&gt;&lt;/b&gt;: Specifies the name of the curve to be computed, 'ROC' [default] or 'PR' for the Precision-Recall-curve.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;curve&lt;/code&gt; &lt;/b&gt; : 계산할 커브의 이름을 지정합니다. Precision-Recall-curve에 대해 'ROC'[default] 또는 'PR'입니다.</target>
        </trans-unit>
        <trans-unit id="5f47adb65112e81de23958f0fa5fbe709f3fb58c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;custom_getter&lt;/code&gt;&lt;/b&gt;: Callable that takes as a first argument the true getter, and allows overwriting the internal get_variable method. The signature of &lt;code&gt;custom_getter&lt;/code&gt; should match that of this method, but the most future-proof version will allow for changes: &lt;code&gt;def custom_getter(getter, *args, **kwargs)&lt;/code&gt;. Direct access to all &lt;code&gt;get_variable&lt;/code&gt; parameters is also allowed: &lt;code&gt;def custom_getter(getter, name, *args, **kwargs)&lt;/code&gt;. A simple identity custom getter that simply creates variables with modified names is:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;custom_getter&lt;/code&gt; &lt;/b&gt; : 실제 getter를 첫 번째 인수로 사용하고 내부 get_variable 메소드를 덮어 쓸 수있는 호출 가능. &lt;code&gt;custom_getter&lt;/code&gt; 의 서명은 이 메소드의 서명과일치해야하지만 가장 미래에 대비할 수있는 버전은 &lt;code&gt;def custom_getter(getter, *args, **kwargs)&lt;/code&gt; 를 변경할 수있습니다. 모든 &lt;code&gt;get_variable&lt;/code&gt; 매개 변수에대한 직접 액세스도 허용 &lt;code&gt;def custom_getter(getter, name, *args, **kwargs)&lt;/code&gt; . 이름이 수정 된 변수를 만드는 간단한 ID 사용자 지정 게터는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="306fbcc975b72fd9d6515a01e99c1af7cf511294" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;custom_getter&lt;/code&gt;&lt;/b&gt;: default custom getter for variables within this scope.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;custom_getter&lt;/code&gt; &lt;/b&gt; :이 범위 내의 변수에 대한 기본 사용자 정의 게터.</target>
        </trans-unit>
        <trans-unit id="341454ddfac6dfb22ec5023a615697f95d55074c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;custom_getter&lt;/code&gt;&lt;/b&gt;: default custom getter passed to get_variable.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;custom_getter&lt;/code&gt; &lt;/b&gt; : 기본 사용자 정의 getter가 get_variable에 전달되었습니다.</target>
        </trans-unit>
        <trans-unit id="ca94f04c4e38c315a67a754d92b16f94adfc1b1c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;custom_getter_&lt;/code&gt;&lt;/b&gt;: Optional custom getter for variables used in &lt;code&gt;func_&lt;/code&gt;. See the &lt;a href=&quot;get_variable&quot;&gt;&lt;code&gt;tf.compat.v1.get_variable&lt;/code&gt;&lt;/a&gt;&lt;code&gt;custom_getter&lt;/code&gt; documentation for more information.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;custom_getter_&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;func_&lt;/code&gt; 에서 사용되는 변수에 대한 선택적 사용자 정의 getter. 자세한 내용은&lt;a href=&quot;get_variable&quot;&gt; &lt;code&gt;tf.compat.v1.get_variable&lt;/code&gt; &lt;/a&gt; &lt;code&gt;custom_getter&lt;/code&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a2a037c90f535d9bdec3acb42d531532a7f00f8e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;custom_objects&lt;/code&gt;&lt;/b&gt;: A Python dictionary mapping names to additional Python objects used to create this optimizer, such as a function used for a hyperparameter.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;custom_objects&lt;/code&gt; &lt;/b&gt; : 하이퍼 파라미터에 사용되는 함수와&lt;b&gt; 같이이&lt;/b&gt; 옵티 마이저를 작성하는 데 사용되는 추가 Python 오브젝트에 이름을 맵핑하는 Python 사전.</target>
        </trans-unit>
        <trans-unit id="5ca96c02e94e62b8241d0454d20427fb7ee22d13" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;custom_objects&lt;/code&gt;&lt;/b&gt;: A {name:value} dictionary for activations not build into keras.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;custom_objects&lt;/code&gt; &lt;/b&gt; : 활성화를위한 {name : value} 사전은 keras에 빌드되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a638da6d8b77c94afe032b3c04a716c2012c03ae" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;custom_objects&lt;/code&gt;&lt;/b&gt;: Dict mapping names (strings) to custom classes or functions to be considered during model deserialization. (default None)</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;custom_objects&lt;/code&gt; &lt;/b&gt; : 모델 역 직렬화 중에 고려할 사용자 정의 클래스 또는 함수에 대한&lt;b&gt; 딕셔너리&lt;/b&gt; 맵핑 이름 (문자열). (기본 없음)</target>
        </trans-unit>
        <trans-unit id="c1f23e1a668a1e9b757312252288e515d129328f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;custom_objects&lt;/code&gt;&lt;/b&gt;: Dictionary for custom objects.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;custom_objects&lt;/code&gt; &lt;/b&gt; : 사용자 정의 객체를위한 사전.</target>
        </trans-unit>
        <trans-unit id="e5d5c9a3449aeacd7ab8ac0c9596c2b67f517f5f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;custom_objects&lt;/code&gt;&lt;/b&gt;: Optional dictionary mapping names (strings) to custom classes or functions to be considered during deserialization.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;custom_objects&lt;/code&gt; &lt;/b&gt; : 역 직렬화 중에 고려할 사용자 정의 클래스 또는 함수에 대한 선택적 사전 맵핑 이름 (문자열).</target>
        </trans-unit>
        <trans-unit id="c08e677b67fc2bd145a3f0ef83749d366cf735cd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;custom_objects&lt;/code&gt;&lt;/b&gt;: Optional dictionary mapping names (strings) to custom objects (classes and functions) to be considered during deserialization.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;custom_objects&lt;/code&gt; &lt;/b&gt; : 역 직렬화 중에 고려할 선택적 사전 맵핑 이름 (문자열)을 사용자 정의 오브젝트 (클래스 및 함수)로.</target>
        </trans-unit>
        <trans-unit id="eb9b6ce0bc61100b6869481434b6ca3327ac90c5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;custom_objects&lt;/code&gt;&lt;/b&gt;: Optional dictionary mapping string names to custom classes or functions (e.g. custom loss functions).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;custom_objects&lt;/code&gt; &lt;/b&gt; : 문자열 이름을 사용자 정의 클래스 또는 함수 (예 : 사용자 정의 손실 함수)에 매핑하는 선택적 사전.</target>
        </trans-unit>
        <trans-unit id="c4815a2b0c584d167d14e93b013d4177a76c485c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;custom_objects&lt;/code&gt;&lt;/b&gt;: dict mapping class names (or function names) of custom (non-Keras) objects to class/functions</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;custom_objects&lt;/code&gt; &lt;/b&gt; : 커스텀 (비 Keras) 객체의 클래스 이름 (또는 함수 이름)을 클래스 / 함수에 매핑</target>
        </trans-unit>
        <trans-unit id="d9e128d3716edcc4476b098c97f9e3ed311f1abe" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;cval&lt;/code&gt;&lt;/b&gt;: Float or Int. Value used for points outside the boundaries when &lt;code&gt;fill_mode = &quot;constant&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;cval&lt;/code&gt; &lt;/b&gt; : Float 또는 Int. &lt;code&gt;fill_mode = &quot;constant&quot;&lt;/code&gt; 때 경계를 벗어난 점에 사용되는 값입니다.</target>
        </trans-unit>
        <trans-unit id="7e4eeabc1dc2b8dbcf2191e09d3ed9c4234dd0d1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;cycle&lt;/code&gt;&lt;/b&gt;: A boolean, whether or not it should cycle beyond decay_steps.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;cycle&lt;/code&gt; &lt;/b&gt; : decay_steps를 넘어서 순환해야하는지 여부에 관계없이 부울입니다.</target>
        </trans-unit>
        <trans-unit id="a115e610b30760a719c4136ecae0e5f2791c4f0f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;cycle_length&lt;/code&gt;&lt;/b&gt;: (Optional.) The number of input elements that will be processed concurrently. If not specified, the value will be derived from the number of available CPU cores. If the &lt;code&gt;num_parallel_calls&lt;/code&gt; argument is set to &lt;a href=&quot;../../../../data/experimental#AUTOTUNE&quot;&gt;&lt;code&gt;tf.data.experimental.AUTOTUNE&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;cycle_length&lt;/code&gt; argument also identifies the maximum degree of parallelism.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;cycle_length&lt;/code&gt; &lt;/b&gt; : (선택 사항) 동시에 처리 될 입력 요소 수입니다. 지정하지 않으면 값은 사용 가능한 CPU 코어 수에서 파생됩니다. 는 IF &lt;code&gt;num_parallel_calls&lt;/code&gt; 의 인수로 설정&lt;a href=&quot;../../../../data/experimental#AUTOTUNE&quot;&gt; &lt;code&gt;tf.data.experimental.AUTOTUNE&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;cycle_length&lt;/code&gt; 의 인수는 병렬 처리의 최대 수준을 식별합니다.</target>
        </trans-unit>
        <trans-unit id="25ec148378d17cc24b6c35b0fab115dc775f5bfc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;cycle_length&lt;/code&gt;&lt;/b&gt;: (Optional.) The number of input elements that will be processed concurrently. If not specified, the value will be derived from the number of available CPU cores. If the &lt;code&gt;num_parallel_calls&lt;/code&gt; argument is set to &lt;a href=&quot;../../../data/experimental#AUTOTUNE&quot;&gt;&lt;code&gt;tf.data.experimental.AUTOTUNE&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;cycle_length&lt;/code&gt; argument also identifies the maximum degree of parallelism.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;cycle_length&lt;/code&gt; &lt;/b&gt; : (선택 사항) 동시에 처리 될 입력 요소 수입니다. 지정하지 않으면 값은 사용 가능한 CPU 코어 수에서 파생됩니다. 는 IF &lt;code&gt;num_parallel_calls&lt;/code&gt; 의 인수로 설정&lt;a href=&quot;../../../data/experimental#AUTOTUNE&quot;&gt; &lt;code&gt;tf.data.experimental.AUTOTUNE&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;cycle_length&lt;/code&gt; 의 인수는 병렬 처리의 최대 수준을 식별합니다.</target>
        </trans-unit>
        <trans-unit id="ad0f0aa31edbc853b1409ce3599a4b5c15340ba3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;cycle_length&lt;/code&gt;&lt;/b&gt;: (Optional.) The number of input elements that will be processed concurrently. If not specified, the value will be derived from the number of available CPU cores. If the &lt;code&gt;num_parallel_calls&lt;/code&gt; argument is set to &lt;a href=&quot;../experimental#AUTOTUNE&quot;&gt;&lt;code&gt;tf.data.experimental.AUTOTUNE&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;cycle_length&lt;/code&gt; argument also identifies the maximum degree of parallelism.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;cycle_length&lt;/code&gt; &lt;/b&gt; : (선택 사항) 동시에 처리 될 입력 요소 수입니다. 지정하지 않으면 값은 사용 가능한 CPU 코어 수에서 파생됩니다. 는 IF &lt;code&gt;num_parallel_calls&lt;/code&gt; 의 인수로 설정&lt;a href=&quot;../experimental#AUTOTUNE&quot;&gt; &lt;code&gt;tf.data.experimental.AUTOTUNE&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;cycle_length&lt;/code&gt; 의 인수는 병렬 처리의 최대 수준을 식별합니다.</target>
        </trans-unit>
        <trans-unit id="dbd0a7723e71d42ddb68328061cc6a89a5e969aa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;cycle_length&lt;/code&gt;&lt;/b&gt;: (Optional.) The number of input elements that will be processed concurrently. If not specified, the value will be derived from the number of available CPU cores. If the &lt;code&gt;num_parallel_calls&lt;/code&gt; argument is set to &lt;a href=&quot;experimental#AUTOTUNE&quot;&gt;&lt;code&gt;tf.data.experimental.AUTOTUNE&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;cycle_length&lt;/code&gt; argument also identifies the maximum degree of parallelism.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;cycle_length&lt;/code&gt; &lt;/b&gt; : (선택 사항) 동시에 처리 될 입력 요소 수입니다. 지정하지 않으면 값은 사용 가능한 CPU 코어 수에서 파생됩니다. 는 IF &lt;code&gt;num_parallel_calls&lt;/code&gt; 의 인수로 설정&lt;a href=&quot;experimental#AUTOTUNE&quot;&gt; &lt;code&gt;tf.data.experimental.AUTOTUNE&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;cycle_length&lt;/code&gt; 의 인수는 병렬 처리의 최대 수준을 식별합니다.</target>
        </trans-unit>
        <trans-unit id="95149e90bc93f3cfe4540fc87684a8e749d49e5f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;cycle_length&lt;/code&gt;&lt;/b&gt;: The number of input &lt;code&gt;Dataset&lt;/code&gt;s to interleave from in parallel.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;cycle_length&lt;/code&gt; &lt;/b&gt; :병렬로 인터리빙 할입력 &lt;code&gt;Dataset&lt;/code&gt; 수입니다.</target>
        </trans-unit>
        <trans-unit id="01d4b6677eaafbc9c72efe3f86d0c8f074f048dd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;daemon&lt;/code&gt;&lt;/b&gt;: Boolean. If &lt;code&gt;True&lt;/code&gt; make the threads daemon threads.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;daemon&lt;/code&gt; &lt;/b&gt; : 부울. 만약 &lt;code&gt;True&lt;/code&gt; 메이크업 스레드 데몬 스레드.</target>
        </trans-unit>
        <trans-unit id="50d86166c43a5cfec790e6bc381db408365f3bcf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;daemon&lt;/code&gt;&lt;/b&gt;: Whether the threads should be marked as &lt;code&gt;daemons&lt;/code&gt;, meaning they don't block program exit.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;daemon&lt;/code&gt; &lt;/b&gt; : 스레드가 &lt;code&gt;daemons&lt;/code&gt; 로 표시되어야하는지 여부, 즉 프로그램 종료를 차단하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e6ba9a672be4a85b95174bd58602a3a704f483f2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of any shape. Must be castable to &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data&lt;/code&gt; &lt;/b&gt; :어떤 모양의 &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;float64&lt;/code&gt; 로 캐스트 가능 해야합니다.</target>
        </trans-unit>
        <trans-unit id="d3ea1d2411bbfc08f572c96c8b430c4b85a88e12" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;RaggedTensor&lt;/code&gt; containing the values to stack.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data&lt;/code&gt; &lt;/b&gt; :스택 할 값을 포함하는 &lt;code&gt;Tensor&lt;/code&gt; 또는 &lt;code&gt;RaggedTensor&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="71d99e4f1a15afa16aa9fe4992ccfd5eaccbd71b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; representing audio data with shape &lt;code&gt;[k, t, c]&lt;/code&gt;, where &lt;code&gt;k&lt;/code&gt; is the number of audio clips, &lt;code&gt;t&lt;/code&gt; is the number of frames, and &lt;code&gt;c&lt;/code&gt; is the number of channels. Elements should be floating-point values in &lt;code&gt;[-1.0, 1.0]&lt;/code&gt;. Any of the dimensions may be statically unknown (i.e., &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data&lt;/code&gt; &lt;/b&gt; :모양 &lt;code&gt;[k, t, c]&lt;/code&gt; 오디오 데이터를 나타내는 &lt;code&gt;Tensor&lt;/code&gt; . 여기서 &lt;code&gt;k&lt;/code&gt; 는 오디오 클립 수, &lt;code&gt;t&lt;/code&gt; 는 프레임 수, &lt;code&gt;c&lt;/code&gt; 는 채널 수입니다. 요소는 &lt;code&gt;[-1.0, 1.0]&lt;/code&gt; 부동 소수점 값이어야합니다. 모든 차원을 정적으로 알 수 없습니다 (즉, &lt;code&gt;None&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f9ce69360ff398fa3bdfa0dd5e7ac0d0be2eeaf6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; representing pixel data with shape &lt;code&gt;[k, h, w, c]&lt;/code&gt;, where &lt;code&gt;k&lt;/code&gt; is the number of images, &lt;code&gt;h&lt;/code&gt; and &lt;code&gt;w&lt;/code&gt; are the height and width of the images, and &lt;code&gt;c&lt;/code&gt; is the number of channels, which should be 1, 2, 3, or 4 (grayscale, grayscale with alpha, RGB, RGBA). Any of the dimensions may be statically unknown (i.e., &lt;code&gt;None&lt;/code&gt;). Floating point data will be clipped to the range [0,1).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data&lt;/code&gt; &lt;/b&gt; :모양 &lt;code&gt;[k, h, w, c]&lt;/code&gt; 픽셀 데이터를 나타내는 &lt;code&gt;Tensor&lt;/code&gt; 여기서 &lt;code&gt;k&lt;/code&gt; 는 이미지 수, &lt;code&gt;h&lt;/code&gt; 및 &lt;code&gt;w&lt;/code&gt; 는이미지의 높이 및 너비, &lt;code&gt;c&lt;/code&gt; 는 채널 수임) 1, 2, 3 또는 4 (회색조, 알파가있는 회색조, RGB, RGBA). 모든 차원을 정적으로 알 수 없습니다 (즉, &lt;code&gt;None&lt;/code&gt; ). 부동 소수점 데이터는 [0,1) 범위로 잘립니다.</target>
        </trans-unit>
        <trans-unit id="29f51ed682e820c2f997c71bd6b2ad4db1214b49" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; with data that will be assembled in the output.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data&lt;/code&gt; &lt;/b&gt; :출력에 조립 될 데이터가있는 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b53895bf8c7198b81df9e0dc7539d5a6dcd82dd2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; with floating point or complex dtype.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data&lt;/code&gt; &lt;/b&gt; :부동 소수점 또는 복합 dtype이있는 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb97a7ec35e32a34d1bfcf622e793b6a86a70b38" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f68e33dce59d17ae5aa46f47370a193611122f51" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . 다음 유형 중 하나 여야합니다 &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;uint8&lt;/code&gt; , &lt;code&gt;int16&lt;/code&gt; , &lt;code&gt;int8&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;qint8&lt;/code&gt; , &lt;code&gt;quint8&lt;/code&gt; , &lt;code&gt;qint32&lt;/code&gt; , &lt;code&gt;bfloat16&lt;/code&gt; , &lt;code&gt;uint16&lt;/code&gt; , &lt;code&gt;complex128&lt;/code&gt; , &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;uint32&lt;/code&gt; , &lt;code&gt;uint64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21860dbc0aa288f68a8e537be9eba4a27230a779" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;uint8&lt;/code&gt; , &lt;code&gt;int16&lt;/code&gt; , &lt;code&gt;int8&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;bfloat16&lt;/code&gt; , &lt;code&gt;uint16&lt;/code&gt; , &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;uint32&lt;/code&gt; , &lt;code&gt;uint64&lt;/code&gt; 유형 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="15b228ab71acd8587f106947e5b40957c0f08265" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have rank 1 or higher.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . 순위가 1 이상이어야합니다.</target>
        </trans-unit>
        <trans-unit id="608f38b3eaba98a8bbcdcb2f61916777799605d0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data&lt;/code&gt;&lt;/b&gt;: A Tensor or RaggedTensor containing the source data for the ngrams.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data&lt;/code&gt; &lt;/b&gt; : ngram의 소스 데이터를 포함하는 Tensor 또는 RaggedTensor입니다.</target>
        </trans-unit>
        <trans-unit id="a472b63c7b34abd8afbd0675938372d69dad1f3a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data&lt;/code&gt;&lt;/b&gt;: A UTF-8 string tensor value.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data&lt;/code&gt; &lt;/b&gt; : UTF-8 문자열 텐서 값입니다.</target>
        </trans-unit>
        <trans-unit id="57c3f90cfeae62d10e0e86a06858ab268811712b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data&lt;/code&gt;&lt;/b&gt;: A list of tensors to print out when op is evaluated.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data&lt;/code&gt; &lt;/b&gt; : op가 평가 될 때 인쇄 할 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="4aaae8c4281cf55f4b0d346eb8b7a4be275207f3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data&lt;/code&gt;&lt;/b&gt;: A list with the same length as &lt;code&gt;indices&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with the same type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data&lt;/code&gt; &lt;/b&gt; :같은 유형의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;indices&lt;/code&gt; 와 길이가 같은 목록입니다.</target>
        </trans-unit>
        <trans-unit id="01c744d3033f55502fe57ae478b150fa08745a9f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data&lt;/code&gt;&lt;/b&gt;: A potentially ragged tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data&lt;/code&gt; &lt;/b&gt; : 잠재적으로 울퉁불퉁 한 텐서.</target>
        </trans-unit>
        <trans-unit id="a72bdd681282a93f25ec39db899ebb29e93f25bd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data&lt;/code&gt;&lt;/b&gt;: A real numeric scalar value, convertible to a &lt;code&gt;float32&lt;/code&gt; Tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data&lt;/code&gt; &lt;/b&gt; : 실수 형 스칼라 값으로 &lt;code&gt;float32&lt;/code&gt; 텐서로 변환 할 수있습니다.</target>
        </trans-unit>
        <trans-unit id="62d9ce95d58c48d5c13931e668cbc4ec2c5dc96c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data&lt;/code&gt;&lt;/b&gt;: A tensor to be stored in the session.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data&lt;/code&gt; &lt;/b&gt; : 세션에 저장 될 텐서.</target>
        </trans-unit>
        <trans-unit id="c2ed0bfedc907ea457fea8ebfc407311a5e96631" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data&lt;/code&gt;&lt;/b&gt;: The data to train on. It can be passed either as a tf.data Dataset, or as a numpy array.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data&lt;/code&gt; &lt;/b&gt; : 훈련 할 데이터. tf.data Dataset 또는 numpy 배열로 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dfc1449ddd17fb4f68d97a6b21300211b9051398" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data&lt;/code&gt;&lt;/b&gt;: The tensors to print out if the condition is False. Defaults to error message and first few entries of &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data&lt;/code&gt; &lt;/b&gt; : 조건이 False 인 경우 인쇄 할 텐서입니다. 기본값은 오류 메시지이며 처음 몇 &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; 항목입니다.</target>
        </trans-unit>
        <trans-unit id="2b393ac164e21b931470a23d0343bc9ff0bc78d1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data&lt;/code&gt;&lt;/b&gt;: The tensors to print out if the condition is False. Defaults to error message and first few entries of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data&lt;/code&gt; &lt;/b&gt; : 조건이 False 인 경우 인쇄 할 텐서입니다. 기본적으로 오류 메시지와 처음 몇 개의 &lt;code&gt;x&lt;/code&gt; 항목이있습니다.</target>
        </trans-unit>
        <trans-unit id="1ae986e2e4f4fe9bcdd5d5f642993a0ad8272f6f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data&lt;/code&gt;&lt;/b&gt;: The tensors to print out if the condition is False. Defaults to error message and first few entries of the violating tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data&lt;/code&gt; &lt;/b&gt; : 조건이 False 인 경우 인쇄 할 텐서입니다. 오류 메시지와 위반 텐서의 처음 몇 항목이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="bb048b99534deab9ed0b44e32f0bc8af7d243acf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data&lt;/code&gt;&lt;/b&gt;: The tensors to print out if the condition is False. Defaults to error message and the shape of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data&lt;/code&gt; &lt;/b&gt; : 조건이 False 인 경우 인쇄 할 텐서입니다. 기본적으로 오류 메시지 및 &lt;code&gt;x&lt;/code&gt; 모양입니다.</target>
        </trans-unit>
        <trans-unit id="efe259257cc6be196523d229aa1c0f2877ce0326" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data&lt;/code&gt;&lt;/b&gt;: The tensors to print out when condition is false.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data&lt;/code&gt; &lt;/b&gt; : 조건이 거짓 일 때 인쇄 할 텐서입니다.</target>
        </trans-unit>
        <trans-unit id="033a118f927a00f7542a4412e0ea368fb8a47b11" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: 'channels_first' or 'channels_last'. In 'channels_first' mode, the channels dimension (the depth) is at index 1, in 'channels_last' mode is it at index 3. It defaults to the &lt;code&gt;image_data_format&lt;/code&gt; value found in your Keras config file at &lt;code&gt;~/.keras/keras.json&lt;/code&gt;. If you never set it, then it will be &quot;channels_last&quot;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : 'channels_first'또는 'channels_last'. 'channels_first'모드에서 채널 차원 (깊이)은 인덱스 1에 있고 'channels_last'모드는 인덱스 3에 있습니다. 기본값은 &lt;code&gt;~/.keras/keras.json&lt;/code&gt; 의 Keras 구성 파일에있는 &lt;code&gt;image_data_format&lt;/code&gt; 값입니다.. 설정하지 않으면 &quot;channels_last&quot;가됩니다.</target>
        </trans-unit>
        <trans-unit id="16eb0465305fdb45400a5c0cec85efbb139fee4c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: 'channels_first' or 'channels_last'. In 'channels_first' mode, the channels dimension (the depth) is at index 1, in 'channels_last' mode is it at index 4. It defaults to the &lt;code&gt;image_data_format&lt;/code&gt; value found in your Keras config file at &lt;code&gt;~/.keras/keras.json&lt;/code&gt;. If you never set it, then it will be &quot;channels_last&quot;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : 'channels_first'또는 'channels_last'. 'channels_first'모드에서 채널 차원 (깊이)은 인덱스 1에 있고 'channels_last'모드는 인덱스 4에 있습니다. 기본값은 &lt;code&gt;~/.keras/keras.json&lt;/code&gt; 의 Keras 구성 파일에있는 &lt;code&gt;image_data_format&lt;/code&gt; 값입니다.. 설정하지 않으면 &quot;channels_last&quot;가됩니다.</target>
        </trans-unit>
        <trans-unit id="76a2fd6454662fc143ada69f8becd2e9af056cb8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;&quot;channels_last&quot;&lt;/code&gt; or &lt;code&gt;&quot;channels_first&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;&quot;channels_last&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;channels_first&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1bbba5a9e5e61c7091a0924152eb4753d6d60047" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;string&lt;/code&gt;, only &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt; is currently supported.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;string&lt;/code&gt; &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt; 만현재 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="d98d7c26ba9e9d5ecbac03b2dcb1704e4dbbafc6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: A string or None. Specifies whether the channel dimension of the &lt;code&gt;input&lt;/code&gt; and output is the last dimension (default, or if &lt;code&gt;data_format&lt;/code&gt; does not start with &quot;NC&quot;), or the second dimension (if &lt;code&gt;data_format&lt;/code&gt; starts with &quot;NC&quot;). For N=1, the valid values are &quot;NWC&quot; (default) and &quot;NCW&quot;. For N=2, the valid values are &quot;NHWC&quot; (default) and &quot;NCHW&quot;. For N=3, the valid values are &quot;NDHWC&quot; (default) and &quot;NCDHW&quot;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : 문자열 또는 없음 &lt;code&gt;input&lt;/code&gt; 및 출력의 채널 차원이마지막 차원인지 (기본값 또는 &lt;code&gt;data_format&lt;/code&gt; 이 &quot;NC&quot;로 시작하지 않는경우) 또는 두 번째 차원 ( &lt;code&gt;data_format&lt;/code&gt; 이 &quot;NC&quot;로 시작하는경우)인지를 지정 합니다. N = 1의 경우 유효한 값은 &quot;NWC&quot;(기본값) 및 &quot;NCW&quot;입니다. N = 2의 경우 유효한 값은 &quot;NHWC&quot;(기본값) 및 &quot;NCHW&quot;입니다. N = 3의 경우 유효한 값은 &quot;NDHWC&quot;(기본값) 및 &quot;NCDHW&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="5789a6e1c2ce7fd044aeb8f5d34afafa43011dbb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: A string, either &lt;code&gt;'NDHWC'&lt;/code&gt; or &lt;code&gt;'NCDHW&lt;/code&gt;' specifying the layout of the input and output tensors. Defaults to &lt;code&gt;'NDHWC'&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; :입력 및 출력 텐서의 레이아웃을 지정하는 문자열 &lt;code&gt;'NDHWC'&lt;/code&gt; 또는 &lt;code&gt;'NCDHW&lt;/code&gt; ' 기본값은 &lt;code&gt;'NDHWC'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7cba205a06f76419dcc7085b951558a984977ee5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: A string, one of &lt;code&gt;channels_last&lt;/code&gt; (default) or &lt;code&gt;channels_first&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;channels_last&lt;/code&gt; (기본값) 또는 &lt;code&gt;channels_first&lt;/code&gt; 중 하나 인 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="860321acca4c2e3f8456d3f979a868deb8795c70" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: A string, one of &lt;code&gt;channels_last&lt;/code&gt; (default) or &lt;code&gt;channels_first&lt;/code&gt;. The ordering of the dimensions in the inputs. &lt;code&gt;channels_last&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, ..., channels)&lt;/code&gt; while &lt;code&gt;channels_first&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, channels, ...)&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;channels_last&lt;/code&gt; (기본값) 또는 &lt;code&gt;channels_first&lt;/code&gt; 중 하나 인 문자열입니다. 입력에서 치수의 순서입니다. &lt;code&gt;channels_last&lt;/code&gt; 형상에 대응하는 입력 &lt;code&gt;(batch, ..., channels)&lt;/code&gt; 동안 &lt;code&gt;channels_first&lt;/code&gt; 형상에 대응하는 입력 &lt;code&gt;(batch, channels, ...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0503de38036cb56762337e0d82c4d2c258f55ad0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: A string, one of &lt;code&gt;channels_last&lt;/code&gt; (default) or &lt;code&gt;channels_first&lt;/code&gt;. The ordering of the dimensions in the inputs. &lt;code&gt;channels_last&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, ..., channels)&lt;/code&gt; while &lt;code&gt;channels_first&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, channels, ...)&lt;/code&gt;. It defaults to the &lt;code&gt;image_data_format&lt;/code&gt; value found in your Keras config file at &lt;code&gt;~/.keras/keras.json&lt;/code&gt;. If you never set it, then it will be &quot;channels_last&quot;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;channels_last&lt;/code&gt; (기본값) 또는 &lt;code&gt;channels_first&lt;/code&gt; 중 하나 인 문자열입니다. 입력에서 치수의 순서입니다. &lt;code&gt;channels_last&lt;/code&gt; 형상에 대응하는 입력 &lt;code&gt;(batch, ..., channels)&lt;/code&gt; 동안 &lt;code&gt;channels_first&lt;/code&gt; 형상에 대응하는 입력 &lt;code&gt;(batch, channels, ...)&lt;/code&gt; . 기본값은 &lt;code&gt;~/.keras/keras.json&lt;/code&gt; 구성 파일 ~ / .keras / keras.json 에있는 &lt;code&gt;image_data_format&lt;/code&gt; 값입니다. 설정하지 않으면 &quot;channels_last&quot;가됩니다.</target>
        </trans-unit>
        <trans-unit id="6ec467a97573418095edcfddac481093d8295f95" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: A string, one of &lt;code&gt;channels_last&lt;/code&gt; (default) or &lt;code&gt;channels_first&lt;/code&gt;. The ordering of the dimensions in the inputs. &lt;code&gt;channels_last&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, depth, height, width, channels)&lt;/code&gt; while &lt;code&gt;channels_first&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, channels, depth, height, width)&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;channels_last&lt;/code&gt; (기본값) 또는 &lt;code&gt;channels_first&lt;/code&gt; 중 하나 인 문자열입니다. 입력에서 치수의 순서입니다. &lt;code&gt;channels_last&lt;/code&gt; 형상에 대응하는 입력 &lt;code&gt;(batch, depth, height, width, channels)&lt;/code&gt; 동안 &lt;code&gt;channels_first&lt;/code&gt; 형상에 대응하는 입력 &lt;code&gt;(batch, channels, depth, height, width)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5d3b2a8cc443462c9412a47795674c1b6a71c9e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: A string, one of &lt;code&gt;channels_last&lt;/code&gt; (default) or &lt;code&gt;channels_first&lt;/code&gt;. The ordering of the dimensions in the inputs. &lt;code&gt;channels_last&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, depth, height, width, channels)&lt;/code&gt; while &lt;code&gt;channels_first&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, channels, depth, height, width)&lt;/code&gt;. It defaults to the &lt;code&gt;image_data_format&lt;/code&gt; value found in your Keras config file at &lt;code&gt;~/.keras/keras.json&lt;/code&gt;. If you never set it, then it will be &quot;channels_last&quot;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;channels_last&lt;/code&gt; (기본값) 또는 &lt;code&gt;channels_first&lt;/code&gt; 중 하나 인 문자열입니다. 입력에서 치수의 순서입니다. &lt;code&gt;channels_last&lt;/code&gt; 형상에 대응하는 입력 &lt;code&gt;(batch, depth, height, width, channels)&lt;/code&gt; 동안 &lt;code&gt;channels_first&lt;/code&gt; 형상에 대응하는 입력 &lt;code&gt;(batch, channels, depth, height, width)&lt;/code&gt; . 기본값은 &lt;code&gt;~/.keras/keras.json&lt;/code&gt; 구성 파일 ~ / .keras / keras.json 에있는 &lt;code&gt;image_data_format&lt;/code&gt; 값입니다. 설정하지 않으면 &quot;channels_last&quot;가됩니다.</target>
        </trans-unit>
        <trans-unit id="8b0b26c28f4fcf97085cdc24c58db59f7e1e2bba" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: A string, one of &lt;code&gt;channels_last&lt;/code&gt; (default) or &lt;code&gt;channels_first&lt;/code&gt;. The ordering of the dimensions in the inputs. &lt;code&gt;channels_last&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, height, width, channels)&lt;/code&gt; while &lt;code&gt;channels_first&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, channels, height, width)&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;channels_last&lt;/code&gt; (기본값) 또는 &lt;code&gt;channels_first&lt;/code&gt; 중 하나 인 문자열입니다. 입력에서 치수의 순서입니다. &lt;code&gt;channels_last&lt;/code&gt; 형상에 대응하는 입력 &lt;code&gt;(batch, height, width, channels)&lt;/code&gt; 동안 &lt;code&gt;channels_first&lt;/code&gt; 형상에 대응하는 입력 &lt;code&gt;(batch, channels, height, width)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4c9e8f61639f31d8a3cfc9d5ea6587edfd3a1e4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: A string, one of &lt;code&gt;channels_last&lt;/code&gt; (default) or &lt;code&gt;channels_first&lt;/code&gt;. The ordering of the dimensions in the inputs. &lt;code&gt;channels_last&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, height, width, channels)&lt;/code&gt; while &lt;code&gt;channels_first&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, channels, height, width)&lt;/code&gt;. It defaults to the &lt;code&gt;image_data_format&lt;/code&gt; value found in your Keras config file at &lt;code&gt;~/.keras/keras.json&lt;/code&gt;. If you never set it, then it will be &quot;channels_last&quot;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;channels_last&lt;/code&gt; (기본값) 또는 &lt;code&gt;channels_first&lt;/code&gt; 중 하나 인 문자열입니다. 입력에서 치수의 순서입니다. &lt;code&gt;channels_last&lt;/code&gt; 형상에 대응하는 입력 &lt;code&gt;(batch, height, width, channels)&lt;/code&gt; 동안 &lt;code&gt;channels_first&lt;/code&gt; 형상에 대응하는 입력 &lt;code&gt;(batch, channels, height, width)&lt;/code&gt; . 기본값은 &lt;code&gt;~/.keras/keras.json&lt;/code&gt; 구성 파일 ~ / .keras / keras.json 에있는 &lt;code&gt;image_data_format&lt;/code&gt; 값입니다. 설정하지 않으면 &quot;channels_last&quot;가됩니다.</target>
        </trans-unit>
        <trans-unit id="bb011acacc3a2065a071be3e304428192fb481ea" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: A string, one of &lt;code&gt;channels_last&lt;/code&gt; (default) or &lt;code&gt;channels_first&lt;/code&gt;. The ordering of the dimensions in the inputs. &lt;code&gt;channels_last&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, height, width, channels)&lt;/code&gt; while &lt;code&gt;channels_first&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, channels, height, width)&lt;/code&gt;. It defaults to the &lt;code&gt;image_data_format&lt;/code&gt; value found in your Keras config file at &lt;code&gt;~/.keras/keras.json&lt;/code&gt;. If you never set it, then it will be 'channels_last'.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;channels_last&lt;/code&gt; (기본값) 또는 &lt;code&gt;channels_first&lt;/code&gt; 중 하나 인 문자열입니다. 입력에서 치수의 순서입니다. &lt;code&gt;channels_last&lt;/code&gt; 형상에 대응하는 입력 &lt;code&gt;(batch, height, width, channels)&lt;/code&gt; 동안 &lt;code&gt;channels_first&lt;/code&gt; 형상에 대응하는 입력 &lt;code&gt;(batch, channels, height, width)&lt;/code&gt; . 기본값은 &lt;code&gt;~/.keras/keras.json&lt;/code&gt; 구성 파일 ~ / .keras / keras.json 에있는 &lt;code&gt;image_data_format&lt;/code&gt; 값입니다. 설정하지 않으면 'channels_last'가됩니다.</target>
        </trans-unit>
        <trans-unit id="59ecf4e7f099fd5198bf43e0a6abc851b9c07abf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: A string, one of &lt;code&gt;channels_last&lt;/code&gt; (default) or &lt;code&gt;channels_first&lt;/code&gt;. The ordering of the dimensions in the inputs. &lt;code&gt;channels_last&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, length, channels)&lt;/code&gt; while &lt;code&gt;channels_first&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, channels, length)&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;channels_last&lt;/code&gt; (기본값) 또는 &lt;code&gt;channels_first&lt;/code&gt; 중 하나 인 문자열입니다. 입력에서 치수의 순서입니다. &lt;code&gt;channels_last&lt;/code&gt; 형상에 대응하는 입력 &lt;code&gt;(batch, length, channels)&lt;/code&gt; 동안 &lt;code&gt;channels_first&lt;/code&gt; 형상에 대응하는 입력 &lt;code&gt;(batch, channels, length)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e7537335933493256c4b8158839af13f6b28775" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: A string, one of &lt;code&gt;channels_last&lt;/code&gt; (default) or &lt;code&gt;channels_first&lt;/code&gt;. The ordering of the dimensions in the inputs. &lt;code&gt;channels_last&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, length, channels)&lt;/code&gt; while &lt;code&gt;channels_first&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, channels, length)&lt;/code&gt;. It defaults to the &lt;code&gt;image_data_format&lt;/code&gt; value found in your Keras config file at &lt;code&gt;~/.keras/keras.json&lt;/code&gt;. If you never set it, then it will be &quot;channels_last&quot;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;channels_last&lt;/code&gt; (기본값) 또는 &lt;code&gt;channels_first&lt;/code&gt; 중 하나 인 문자열입니다. 입력에서 치수의 순서입니다. &lt;code&gt;channels_last&lt;/code&gt; 형상에 대응하는 입력 &lt;code&gt;(batch, length, channels)&lt;/code&gt; 동안 &lt;code&gt;channels_first&lt;/code&gt; 형상에 대응하는 입력 &lt;code&gt;(batch, channels, length)&lt;/code&gt; . 기본값은 &lt;code&gt;~/.keras/keras.json&lt;/code&gt; 구성 파일 ~ / .keras / keras.json 에있는 &lt;code&gt;image_data_format&lt;/code&gt; 값입니다. 설정하지 않으면 &quot;channels_last&quot;가됩니다.</target>
        </trans-unit>
        <trans-unit id="fb4a3cf8bdf88cd05db62e63851e5d607d91e4e0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: A string, one of &lt;code&gt;channels_last&lt;/code&gt; (default) or &lt;code&gt;channels_first&lt;/code&gt;. The ordering of the dimensions in the inputs. &lt;code&gt;channels_last&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, spatial_dim1, spatial_dim2, spatial_dim3, channels)&lt;/code&gt; while &lt;code&gt;channels_first&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, channels, spatial_dim1, spatial_dim2, spatial_dim3)&lt;/code&gt;. It defaults to the &lt;code&gt;image_data_format&lt;/code&gt; value found in your Keras config file at &lt;code&gt;~/.keras/keras.json&lt;/code&gt;. If you never set it, then it will be &quot;channels_last&quot;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;channels_last&lt;/code&gt; (기본값) 또는 &lt;code&gt;channels_first&lt;/code&gt; 중 하나 인 문자열입니다. 입력에서 치수의 순서입니다. &lt;code&gt;channels_last&lt;/code&gt; 형상에 대응하는 입력 &lt;code&gt;(batch, spatial_dim1, spatial_dim2, spatial_dim3, channels)&lt;/code&gt; 동안 &lt;code&gt;channels_first&lt;/code&gt; 대응 형상 인풋 &lt;code&gt;(batch, channels, spatial_dim1, spatial_dim2, spatial_dim3)&lt;/code&gt; . 기본값은 &lt;code&gt;~/.keras/keras.json&lt;/code&gt; 구성 파일 ~ / .keras / keras.json 에있는 &lt;code&gt;image_data_format&lt;/code&gt; 값입니다. 설정하지 않으면 &quot;channels_last&quot;가됩니다.</target>
        </trans-unit>
        <trans-unit id="0fb2c9bedb1b78a25c4e8d58752b825748c2b728" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: A string, one of &lt;code&gt;channels_last&lt;/code&gt; (default) or &lt;code&gt;channels_first&lt;/code&gt;. The ordering of the dimensions in the inputs. &lt;code&gt;channels_last&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, steps, features)&lt;/code&gt; while &lt;code&gt;channels_first&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, features, steps)&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;channels_last&lt;/code&gt; (기본값) 또는 &lt;code&gt;channels_first&lt;/code&gt; 중 하나 인 문자열입니다. 입력에서 치수의 순서입니다. &lt;code&gt;channels_last&lt;/code&gt; 는 모양이있는 입력 &lt;code&gt;(batch, steps, features)&lt;/code&gt; 해당하는반면, &lt;code&gt;channels_first&lt;/code&gt; 는 모양이있는 입력 &lt;code&gt;(batch, features, steps)&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="228190ae6a6a8f65dd6bb1d2159796eb24273f63" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: A string, one of &lt;code&gt;channels_last&lt;/code&gt; (default) or &lt;code&gt;channels_first&lt;/code&gt;. The ordering of the dimensions in the inputs. &lt;code&gt;channels_last&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, time, ..., channels)&lt;/code&gt; while &lt;code&gt;channels_first&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, time, channels, ...)&lt;/code&gt;. It defaults to the &lt;code&gt;image_data_format&lt;/code&gt; value found in your Keras config file at &lt;code&gt;~/.keras/keras.json&lt;/code&gt;. If you never set it, then it will be &quot;channels_last&quot;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;channels_last&lt;/code&gt; (기본값) 또는 &lt;code&gt;channels_first&lt;/code&gt; 중 하나 인 문자열입니다. 입력에서 치수의 순서입니다. &lt;code&gt;channels_last&lt;/code&gt; 형상에 대응하는 입력 &lt;code&gt;(batch, time, ..., channels)&lt;/code&gt; 동안 &lt;code&gt;channels_first&lt;/code&gt; 형상에 대응하는 입력 &lt;code&gt;(batch, time, channels, ...)&lt;/code&gt; . 기본값은 &lt;code&gt;~/.keras/keras.json&lt;/code&gt; 구성 파일 ~ / .keras / keras.json 에있는 &lt;code&gt;image_data_format&lt;/code&gt; 값입니다. 설정하지 않으면 &quot;channels_last&quot;가됩니다.</target>
        </trans-unit>
        <trans-unit id="308b1ee46420a41a93490922ef5e5e485a8a55e8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: A string. 'N...C' and 'NC...' are supported. If &lt;code&gt;None&lt;/code&gt; (the default) is specified then 'N..C' is assumed.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : 문자열. 'N ... C'및 'NC ...'가 지원됩니다. 경우 &lt;code&gt;None&lt;/code&gt; (기본값)를 지정하지 않은 'N..C는'가정한다.</target>
        </trans-unit>
        <trans-unit id="761b9a4fa95dc527063ea50239f742736348de9d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: A string. 'NDHWC' and 'NCDHW' are supported.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : 문자열. 'NDHWC'및 'NCDHW'가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="e939de5082ff50acc570a76cc932b004a6ac975c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: A string. 'NHWC' and 'NCHW' are supported.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : 문자열. 'NHWC'및 'NCHW'가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="454dd2932f8a89fcde52694170aed70ae2405f2e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: A string. 'NHWC', 'NCHW' and 'NCHW_VECT_C' are supported.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : 문자열. 'NHWC', 'NCHW'및 'NCHW_VECT_C'가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="318474e30c8750267cd8f4e7f985df33b75aa2f2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: A string. &lt;code&gt;'NWC'&lt;/code&gt; and &lt;code&gt;'NCW'&lt;/code&gt; are supported.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : 문자열. &lt;code&gt;'NWC'&lt;/code&gt; 및 &lt;code&gt;'NCW'&lt;/code&gt; 가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="1ccb794295789af46ab55ec34d978fe54121a8f8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: A string. Specifies the channel dimension. For N=1 it can be either &quot;NWC&quot; (default) or &quot;NCW&quot;, for N=2 it can be either &quot;NHWC&quot; (default) or &quot;NCHW&quot; and for N=3 either &quot;NDHWC&quot; (default) or &quot;NCDHW&quot;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : 문자열. 채널 치수를 지정합니다. N = 1의 경우 &quot;NWC&quot;(기본값) 또는 &quot;NCW&quot;일 수 있고 N = 2의 경우 &quot;NHWC&quot;(기본값) 또는 &quot;NCHW&quot;일 수 있으며 N = 3의 경우 &quot;NDHWC&quot;(기본값) 또는 &quot;NCDHW&quot;.</target>
        </trans-unit>
        <trans-unit id="1b3ce46bef31ef719a513daaa6802e4e77d44065" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: A string. The ordering of the dimensions in the inputs. &lt;code&gt;channels_last&lt;/code&gt; (default) and &lt;code&gt;channels_first&lt;/code&gt; are supported. &lt;code&gt;channels_last&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, depth, height, width, channels)&lt;/code&gt; while &lt;code&gt;channels_first&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, channels, depth, height, width)&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : 문자열. 입력에서 치수의 순서입니다. &lt;code&gt;channels_last&lt;/code&gt; (기본값) 및 &lt;code&gt;channels_first&lt;/code&gt; 가 지원됩니다. &lt;code&gt;channels_last&lt;/code&gt; 형상에 대응하는 입력 &lt;code&gt;(batch, depth, height, width, channels)&lt;/code&gt; 동안 &lt;code&gt;channels_first&lt;/code&gt; 형상에 대응하는 입력 &lt;code&gt;(batch, channels, depth, height, width)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed943c9d79089640597ddeac40acc2196ce130f2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: A string. The ordering of the dimensions in the inputs. &lt;code&gt;channels_last&lt;/code&gt; (default) and &lt;code&gt;channels_first&lt;/code&gt; are supported. &lt;code&gt;channels_last&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, height, width, channels)&lt;/code&gt; while &lt;code&gt;channels_first&lt;/code&gt; corresponds to inputs with shape &lt;code&gt;(batch, channels, height, width)&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : 문자열. 입력에서 치수의 순서입니다. &lt;code&gt;channels_last&lt;/code&gt; (기본값) 및 &lt;code&gt;channels_first&lt;/code&gt; 가 지원됩니다. &lt;code&gt;channels_last&lt;/code&gt; 형상에 대응하는 입력 &lt;code&gt;(batch, height, width, channels)&lt;/code&gt; 동안 &lt;code&gt;channels_first&lt;/code&gt; 형상에 대응하는 입력 &lt;code&gt;(batch, channels, height, width)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="89c8e68f35347012c4df8dd1da319bdfda9bffb3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;string&lt;/code&gt; from &lt;code&gt;&quot;NWC&quot;, &quot;NCW&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;NWC&quot;&lt;/code&gt;, the data is stored in the order of [batch, in_width, in_channels]. The &lt;code&gt;&quot;NCW&quot;&lt;/code&gt; format stores data as [batch, in_channels, in_width].</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : 옵션 &lt;code&gt;string&lt;/code&gt; 에서 &lt;code&gt;&quot;NWC&quot;, &quot;NCW&quot;&lt;/code&gt; . 기본값은 &lt;code&gt;&quot;NWC&quot;&lt;/code&gt; 이며 데이터는 [batch, in_width, in_channels] 순서로 저장됩니다. &lt;code&gt;&quot;NCW&quot;&lt;/code&gt; [in_width 일괄 in_channels,]와 같은 형식으로 데이터를 저장한다.</target>
        </trans-unit>
        <trans-unit id="b6c214391bcb0e67817458c75fbcdd553f36b676" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;NDHWC&quot;, &quot;NCDHW&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;NDHWC&quot;&lt;/code&gt;. The data format of the input and output data. With the default format &quot;NDHWC&quot;, the data is stored in the order of: [batch, in_depth, in_height, in_width, in_channels]. Alternatively, the format could be &quot;NCDHW&quot;, the data storage order is: [batch, in_channels, in_depth, in_height, in_width].</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : 옵션 &lt;code&gt;string&lt;/code&gt; :에서 &lt;code&gt;&quot;NDHWC&quot;, &quot;NCDHW&quot;&lt;/code&gt; . 기본값은 &lt;code&gt;&quot;NDHWC&quot;&lt;/code&gt; 입니다. 입력 및 출력 데이터의 데이터 형식입니다. 기본 형식 &quot;NDHWC&quot;를 사용하면 [batch, in_depth, in_height, in_width, in_channels] 순서로 데이터가 저장됩니다. 또는 형식이 &quot;NCDHW&quot;일 수 있으며 데이터 저장 순서는 [batch, in_channels, in_depth, in_height, in_width]입니다.</target>
        </trans-unit>
        <trans-unit id="ad4f0781c76a9fab4228b2992038f16640213196" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;NHWC&quot;, &quot;NCHW&quot;, &quot;NCHW_VECT_C&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : 옵션 &lt;code&gt;string&lt;/code&gt; :에서 &lt;code&gt;&quot;NHWC&quot;, &quot;NCHW&quot;, &quot;NCHW_VECT_C&quot;&lt;/code&gt; . 기본값은 &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="960877d420d618fb5531359f7a12f8b4194c3254" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;NHWC&quot;, &quot;NCHW&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt;. Specify the data format of the input and output data. With the default format &quot;NHWC&quot;, the data is stored in the order of: [batch, height, width, channels]. Alternatively, the format could be &quot;NCHW&quot;, the data storage order of: [batch, channels, height, width].</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : 옵션 &lt;code&gt;string&lt;/code&gt; :에서 &lt;code&gt;&quot;NHWC&quot;, &quot;NCHW&quot;&lt;/code&gt; . 기본값은 &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt; 입니다. 입력 및 출력 데이터의 데이터 형식을 지정하십시오. 기본 형식 &quot;NHWC&quot;를 사용하면 데이터는 [배치, 높이, 너비, 채널] 순서로 저장됩니다. 또는 형식은 &quot;배치, 채널, 높이, 너비]의 데이터 저장 순서 인&quot;NCHW &quot;일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="957ac6e3d637c4236e8cec2a7f61d2e11b95ea5b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;NHWC&quot;, &quot;NCHW&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt;. Specify the data format of the input and output data. With the default format &quot;NHWC&quot;, the data is stored in the order of: [batch, in_height, in_width, in_channels]. Alternatively, the format could be &quot;NCHW&quot;, the data storage order of: [batch, in_channels, in_height, in_width].</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : 옵션 &lt;code&gt;string&lt;/code&gt; :에서 &lt;code&gt;&quot;NHWC&quot;, &quot;NCHW&quot;&lt;/code&gt; . 기본값은 &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt; 입니다. 입력 및 출력 데이터의 데이터 형식을 지정하십시오. 기본 형식 &quot;NHWC&quot;를 사용하면 [batch, in_height, in_width, in_channels] 순서로 데이터가 저장됩니다. 대안으로, 형식은 &quot;NCHW&quot;일 수 있으며, [Batch, in_channels, in_height, in_width]의 데이터 저장 순서입니다.</target>
        </trans-unit>
        <trans-unit id="50ba023c4ce76dc53604a99f3c8d56032bf673c0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;string&lt;/code&gt;, must be set to &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt;. Specify the data format of the input and output data.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : 선택적 &lt;code&gt;string&lt;/code&gt; 은 &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt; 로 설정되어야합니다. 기본값은 &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt; 입니다. 입력 및 출력 데이터의 데이터 형식을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="b5e822222541f9d7fa530533007f9f770f1c6f10" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: An optional string from: &quot;NDHWC&quot;, &quot;NCDHW&quot;. Defaults to &quot;NDHWC&quot;. The data format of the input and output data. With the default format &quot;NDHWC&quot;, the data is stored in the order of: [batch, in_depth, in_height, in_width, in_channels]. Alternatively, the format could be &quot;NCDHW&quot;, the data storage order is: [batch, in_channels, in_depth, in_height, in_width].</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : &quot;NDHWC&quot;, &quot;NCDHW&quot;의 선택적 문자열. 기본값은 &quot;NDHWC&quot;입니다. 입력 및 출력 데이터의 데이터 형식입니다. 기본 형식 &quot;NDHWC&quot;를 사용하면 [batch, in_depth, in_height, in_width, in_channels] 순서로 데이터가 저장됩니다. 또는 형식이 &quot;NCDHW&quot;일 수 있으며 데이터 저장 순서는 [batch, in_channels, in_depth, in_height, in_width]입니다.</target>
        </trans-unit>
        <trans-unit id="05c7a2afb6582736985615ca2bc90f912e9ad4c7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: An optional string from: &quot;NWC&quot;, &quot;NCW&quot;. Defaults to &quot;NWC&quot;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : &quot;NWC&quot;, &quot;NCW&quot;의 선택적 문자열. 기본값은 &quot;NWC&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="2e2b7dca1d87891bfd336cc46851b697288adcd2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: Image data format, either &quot;channels_first&quot; or &quot;channels_last&quot;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : &quot;channels_first&quot;또는 &quot;channels_last&quot;의 이미지 데이터 형식입니다.</target>
        </trans-unit>
        <trans-unit id="6aaa02317bab1e0f5565520246a9cd99fccbce40" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: Image data format, either &quot;channels_first&quot; or &quot;channels_last&quot;. &quot;channels_last&quot; mode means that the images should have shape &lt;code&gt;(samples, height, width, channels)&lt;/code&gt;, &quot;channels_first&quot; mode means that the images should have shape &lt;code&gt;(samples, channels, height, width)&lt;/code&gt;. It defaults to the &lt;code&gt;image_data_format&lt;/code&gt; value found in your Keras config file at &lt;code&gt;~/.keras/keras.json&lt;/code&gt;. If you never set it, then it will be &quot;channels_last&quot;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : &quot;channels_first&quot;또는 &quot;channels_last&quot;의 이미지 데이터 형식입니다. &quot;channels_last&quot;모드는 이미지에 모양 &lt;code&gt;(samples, height, width, channels)&lt;/code&gt; 있어야한다는 것을 의미합니다. &quot;channels_first&quot;모드는 이미지에 모양 &lt;code&gt;(samples, channels, height, width)&lt;/code&gt; 있어야 함을 의미합니다. 기본값은 &lt;code&gt;~/.keras/keras.json&lt;/code&gt; 구성 파일 ~ / .keras / keras.json 에있는 &lt;code&gt;image_data_format&lt;/code&gt; 값입니다. 설정하지 않으면 &quot;channels_last&quot;가됩니다.</target>
        </trans-unit>
        <trans-unit id="76103bba96b257b70be9312c689af5e8f4d3e636" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: Image data format. either &quot;channels_first&quot; or &quot;channels_last&quot;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : 이미지 데이터 형식입니다. &quot;channels_first&quot;또는 &quot;channels_last&quot;중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="2a067006a7fd4d4397f31fe335cd2fb91e54ac8c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: One of &lt;code&gt;&quot;channels_first&quot;&lt;/code&gt;, &lt;code&gt;&quot;channels_last&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : 중 하나 &lt;code&gt;&quot;channels_first&quot;&lt;/code&gt; , &lt;code&gt;&quot;channels_last&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="413bacaa7b3ec735e4dae337c3d3be057ba3bf3d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: One of &lt;code&gt;channels_last&lt;/code&gt; or &lt;code&gt;channels_first&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;channels_last&lt;/code&gt; 또는 &lt;code&gt;channels_first&lt;/code&gt; 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="035b079ade874e5e92504db0ae75b79c73eb432e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: String, one of &lt;code&gt;channels_first&lt;/code&gt;, &lt;code&gt;channels_last&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : 문자열 중 하나 &lt;code&gt;channels_first&lt;/code&gt; , &lt;code&gt;channels_last&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd5593bf234d40f85f69b9815976e2246420b400" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: The data format for input. Either &quot;NHWC&quot; (default) or &quot;NCHW&quot;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : 입력 할 데이터 형식입니다. &quot;NHWC&quot;(기본값) 또는 &quot;NCHW&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="e4615861d79c6cc7beffad18dc39ab0a4c5209a0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: The data format for x. Either &quot;NHWC&quot; (default) or &quot;NCHW&quot;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : x의 데이터 형식입니다. &quot;NHWC&quot;(기본값) 또는 &quot;NCHW&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="7427996de7d0d3666765bf97cf8b4620267d580b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: string, &lt;code&gt;&quot;channels_last&quot;&lt;/code&gt; or &lt;code&gt;&quot;channels_first&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : 문자열, &lt;code&gt;&quot;channels_last&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;channels_first&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9acf4a75c87addc3e48c38406b1d5ad1ccfec14" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: string, one of &quot;channels_last&quot;, &quot;channels_first&quot;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : 문자열, &quot;channels_last&quot;, &quot;channels_first&quot;중 하나.</target>
        </trans-unit>
        <trans-unit id="c49779668d161850f8ecf6db055e4ee6b358ab0f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: string. &lt;code&gt;'channels_first'&lt;/code&gt; or &lt;code&gt;'channels_last'&lt;/code&gt;. Example: &lt;code&gt;python from keras import backend as K K.image_data_format() &amp;gt;&amp;gt;&amp;gt; 'channels_first' K.set_image_data_format('channels_last') K.image_data_format() &amp;gt;&amp;gt;&amp;gt; 'channels_last'&lt;/code&gt;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : 문자열. &lt;code&gt;'channels_first'&lt;/code&gt; 또는 &lt;code&gt;'channels_last'&lt;/code&gt; 입니다. 예 : &lt;code&gt;python from keras import backend as K K.image_data_format() &amp;gt;&amp;gt;&amp;gt; 'channels_first' K.set_image_data_format('channels_last') K.image_data_format() &amp;gt;&amp;gt;&amp;gt; 'channels_last'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5e68c640a97cd7ff8d1b0fc205486fddeabef108" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_format&lt;/code&gt;&lt;/b&gt;: the data format, channels_first or channels_last.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_format&lt;/code&gt; &lt;/b&gt; : 데이터 형식, channels_first 또는 channels_last</target>
        </trans-unit>
        <trans-unit id="834cea56da35c6f5c943c9aaf9a22d1cf7a3958a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_source_name&lt;/code&gt;&lt;/b&gt;: A 0-D &lt;a href=&quot;../../../../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; tensor containing a connection string to connect to the database.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_source_name&lt;/code&gt; &lt;/b&gt; :데이터베이스에 연결하기위한 연결 문자열을 포함하는0-D&lt;a href=&quot;../../../../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt; 텐서.</target>
        </trans-unit>
        <trans-unit id="dc3382b25974e2f048ab8858a9945ca144e93dc7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;data_source_name&lt;/code&gt;&lt;/b&gt;: A 0-D &lt;a href=&quot;../../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; tensor containing a connection string to connect to the database.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;data_source_name&lt;/code&gt; &lt;/b&gt; :데이터베이스에 연결하기위한 연결 문자열을 포함하는0-D&lt;a href=&quot;../../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt; 텐서.</target>
        </trans-unit>
        <trans-unit id="7fc96413b57a19e71a74d3ff7962cfdccc358536" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;datapath&lt;/code&gt;&lt;/b&gt;: string, path to a HDF5 file</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;datapath&lt;/code&gt; &lt;/b&gt; : 문자열, HDF5 파일의 경로</target>
        </trans-unit>
        <trans-unit id="5b67ae433b0a031061c835fb911f76e525d9e1b2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dataset&lt;/code&gt;&lt;/b&gt;: &lt;a href=&quot;../../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; that will be distributed evenly across all replicas.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dataset&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; . 모든 복제본에 균등하게 분배되는&lt;b&gt; 데이터 세트&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="dbf9dafa76aff3af15c6499ff0d2163256605342" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dataset&lt;/code&gt;&lt;/b&gt;: &lt;a href=&quot;../../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; that will be sharded across all replicas using the rules stated above.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dataset&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; . 위에서 언급 한 규칙을 사용하여 모든 복제본에서 분할 될&lt;b&gt; 데이터 세트&lt;/b&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="469f1b5e658ffee787a723488ad6c625f680d7ad" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dataset&lt;/code&gt;&lt;/b&gt;: &lt;a href=&quot;../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; that will be distributed evenly across all replicas.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dataset&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; . 모든 복제본에 균등하게 분배되는&lt;b&gt; 데이터 세트&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="1accf019926c7b4e32b8db45ec1b624ad9373762" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dataset&lt;/code&gt;&lt;/b&gt;: &lt;a href=&quot;../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; that will be sharded across all replicas using the rules stated above.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dataset&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; . 위에서 언급 한 규칙을 사용하여 모든 복제본에서 분할 될&lt;b&gt; 데이터 세트&lt;/b&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9f4c32576a963fa1d7e94f085712430ba5c2983d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dataset&lt;/code&gt;&lt;/b&gt;: &lt;a href=&quot;../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; that will be sharded across all replicas using the rules stated above.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dataset&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; . 위에서 언급 한 규칙을 사용하여 모든 복제본에서 분할 될&lt;b&gt; 데이터 세트&lt;/b&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a54e425c06e9a9849030be83ab276c5656cc56fa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dataset&lt;/code&gt;&lt;/b&gt;: &lt;a href=&quot;../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; that will be sharded across all replicas using the rules stated above.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dataset&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; . 위에서 언급 한 규칙을 사용하여 모든 복제본에서 분할 될&lt;b&gt; 데이터 세트&lt;/b&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ab186779870fb3f1ae586b35aae6c60c305c0fb3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dataset&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Dataset&lt;/code&gt; to be concatenated.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dataset&lt;/code&gt; &lt;/b&gt; :연결할 &lt;code&gt;Dataset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5179f00132866d4da6d0dcd60c44acb6ef1e35bf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dataset&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dataset&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="15d70fe94297cf0fa9455d1ab292ece02e56c271" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dataset&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; for which to determine cardinality.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dataset&lt;/code&gt; &lt;/b&gt; :카디널리티를 결정할&lt;a href=&quot;../dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="321cb86364627f4bca3b313ddb604852a111af75" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dataset&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; object containing a single element.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dataset&lt;/code&gt; &lt;/b&gt; :단일 요소를 포함하는&lt;a href=&quot;../dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="a5e11490d5fbe4e9efb403607c4a513efa5ce236" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dataset&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dataset&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b1dbd5d2900d74ed52b8839b39d5d9a1fbccca36" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dataset&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Dataset&lt;/code&gt; with compatible structure to this iterator.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dataset&lt;/code&gt; &lt;/b&gt; :이 반복자와 호환되는 구조의 &lt;code&gt;Dataset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7170e7ec49ecbbde3d6eedd5d40fc6e9c4791615" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dataset&lt;/code&gt;&lt;/b&gt;: a &lt;a href=&quot;../dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; whose elements are to be written to a file</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dataset&lt;/code&gt; &lt;/b&gt; :요소를 파일에 기록 할&lt;a href=&quot;../dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="15fff90424b0b38972ab319a62d4a5ab10e8aaaa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dataset&lt;/code&gt;&lt;/b&gt;: string, name of the HDF5 dataset in the file specified in datapath</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dataset&lt;/code&gt; &lt;/b&gt; : 문자열, datapath에 지정된 파일의 HDF5 데이터 세트 이름</target>
        </trans-unit>
        <trans-unit id="063d472c3794cc1ff7e628e45029f2d26e89c979" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dataset_fn&lt;/code&gt;&lt;/b&gt;: A function taking a &lt;a href=&quot;../../../../distribute/inputcontext&quot;&gt;&lt;code&gt;tf.distribute.InputContext&lt;/code&gt;&lt;/a&gt; instance and returning a &lt;a href=&quot;../../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dataset_fn&lt;/code&gt; 는&lt;/b&gt; , &amp;bull; 함수는 복용&lt;a href=&quot;../../../../distribute/inputcontext&quot;&gt; &lt;code&gt;tf.distribute.InputContext&lt;/code&gt; 의&lt;/a&gt; 인스턴스를하고 돌아&lt;a href=&quot;../../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="30cf2aafdaeeb1011ce563624ccd6b4e29d161a7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dataset_fn&lt;/code&gt;&lt;/b&gt;: A function taking a &lt;a href=&quot;../../../distribute/inputcontext&quot;&gt;&lt;code&gt;tf.distribute.InputContext&lt;/code&gt;&lt;/a&gt; instance and returning a &lt;a href=&quot;../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dataset_fn&lt;/code&gt; 는&lt;/b&gt; , &amp;bull; 함수는 복용&lt;a href=&quot;../../../distribute/inputcontext&quot;&gt; &lt;code&gt;tf.distribute.InputContext&lt;/code&gt; 의&lt;/a&gt; 인스턴스를하고 돌아&lt;a href=&quot;../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bbd9b11536a5939aaf9941f5a747c878b58600d2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dataset_fn&lt;/code&gt;&lt;/b&gt;: A function taking a &lt;a href=&quot;../inputcontext&quot;&gt;&lt;code&gt;tf.distribute.InputContext&lt;/code&gt;&lt;/a&gt; instance and returning a &lt;a href=&quot;../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dataset_fn&lt;/code&gt; 는&lt;/b&gt; , &amp;bull; 함수는 복용&lt;a href=&quot;../inputcontext&quot;&gt; &lt;code&gt;tf.distribute.InputContext&lt;/code&gt; 의&lt;/a&gt; 인스턴스를하고 돌아&lt;a href=&quot;../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="890902950b5bae23c6c742b098dee2dead2d565d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dataset_fn&lt;/code&gt;&lt;/b&gt;: A function taking a &lt;a href=&quot;inputcontext&quot;&gt;&lt;code&gt;tf.distribute.InputContext&lt;/code&gt;&lt;/a&gt; instance and returning a &lt;a href=&quot;../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dataset_fn&lt;/code&gt; 는&lt;/b&gt; , &amp;bull; 함수는 복용&lt;a href=&quot;inputcontext&quot;&gt; &lt;code&gt;tf.distribute.InputContext&lt;/code&gt; 의&lt;/a&gt; 인스턴스를하고 돌아&lt;a href=&quot;../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="afd27789308d6fc0142b25a11208bb7b3c598601" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dataset_or_iterator&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;tf.data.Iterator&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dataset_or_iterator&lt;/code&gt; &lt;/b&gt; 하십시오&lt;a href=&quot;../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;tf.data.Iterator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dbe24e9760846d9cec49d0e31270972176818817" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dataset_or_iterator&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;tf.data.Iterator&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dataset_or_iterator&lt;/code&gt; &lt;/b&gt; 하십시오&lt;a href=&quot;../dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;tf.data.Iterator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="54ecbfb2af25f219fe2d655d4cd5e6c919fa42ce" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;datasets&lt;/code&gt;&lt;/b&gt;: A list of &lt;a href=&quot;../../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; objects with compatible structure.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;datasets&lt;/code&gt; &lt;/b&gt; : 목록&lt;a href=&quot;../../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; 가&lt;/a&gt; 호환 구조 객체.</target>
        </trans-unit>
        <trans-unit id="c0c030a78ea0365b2fb9e6785122af822eb8707a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;datasets&lt;/code&gt;&lt;/b&gt;: A list of &lt;a href=&quot;../dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; objects with compatible structure.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;datasets&lt;/code&gt; &lt;/b&gt; : 목록&lt;a href=&quot;../dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; 가&lt;/a&gt; 호환 구조 객체.</target>
        </trans-unit>
        <trans-unit id="0aea1a0e9c9543e70b959c46f11325df8dd2cee0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;datasets&lt;/code&gt;&lt;/b&gt;: A nested structure of datasets.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;datasets&lt;/code&gt; &lt;/b&gt; :&lt;b&gt; 데이터 세트&lt;/b&gt; 의 중첩 구조.</target>
        </trans-unit>
        <trans-unit id="18049429057032217274224fad5cd69cb69fadb2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;day&lt;/code&gt;&lt;/b&gt;: A day (1 &amp;lt;= day &amp;lt;= 31, or 30, or 29, or 28) in month. Must be an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;day&lt;/code&gt; &lt;/b&gt; : 한 달 (1 &amp;lt;= day &amp;lt;= 31 또는 30 또는 29 또는 28)입니다. &lt;code&gt;int&lt;/code&gt; 이어야합니다.</target>
        </trans-unit>
        <trans-unit id="6caf9dbba91440efbd54a631e55763c847902cb3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dct_method&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. string specifying a hint about the algorithm used for decompression. Defaults to &quot;&quot; which maps to a system-specific default. Currently valid values are [&quot;INTEGER_FAST&quot;, &quot;INTEGER_ACCURATE&quot;]. The hint may be ignored (e.g., the internal jpeg library changes to a version that does not have that specific option.)</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dct_method&lt;/code&gt; &lt;/b&gt; : 선택적 &lt;code&gt;string&lt;/code&gt; 입니다. 기본값은 &lt;code&gt;&quot;&quot;&lt;/code&gt; 입니다. 압축 해제에 사용되는 알고리즘에 대한 힌트를 지정하는 문자열. 기본값은 &quot;&quot;이며 시스템 별 기본값으로 매핑됩니다. 현재 유효한 값은 [ &quot;INTEGER_FAST&quot;, &quot;INTEGER_ACCURATE&quot;]입니다. 힌트는 무시 될 수 있습니다 (예 : 내부 jpeg 라이브러리는 해당 옵션이없는 버전으로 변경됩니다).</target>
        </trans-unit>
        <trans-unit id="7bbc0ddf6ae134424945422128a791006cee9746" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;decay&lt;/code&gt;&lt;/b&gt;: Discounting factor for the history/coming gradient</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;decay&lt;/code&gt; &lt;/b&gt; : 히스토리 / 다가오는 기울기에 대한 할인 요소</target>
        </trans-unit>
        <trans-unit id="6f3bc5b7d0fd04212b541466fe3db805b62b83e9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;decay&lt;/code&gt;&lt;/b&gt;: Float. The decay to use.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;decay&lt;/code&gt; &lt;/b&gt; : Float. 사용할 부패.</target>
        </trans-unit>
        <trans-unit id="92923da3effd45cf29af4a2d68d24ce45d96cb82" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;decay_rate&lt;/code&gt;&lt;/b&gt;: A Python number. The decay rate.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;decay_rate&lt;/code&gt; &lt;/b&gt; : 파이썬 숫자. 붕괴율.</target>
        </trans-unit>
        <trans-unit id="588ce56e7931dae920fa9733d5bb83a010535b13" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;decay_rate&lt;/code&gt;&lt;/b&gt;: A scalar &lt;code&gt;float32&lt;/code&gt; or &lt;code&gt;float64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; or a Python number. The decay rate.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;decay_rate&lt;/code&gt; &lt;/b&gt; : 스칼라 &lt;code&gt;float32&lt;/code&gt; 또는 &lt;code&gt;float64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 또는 Python 숫자. 붕괴율.</target>
        </trans-unit>
        <trans-unit id="98d6852e73ada81aacba37dbe73803e4f2292553" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;decay_steps&lt;/code&gt;&lt;/b&gt;: A scalar &lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; or a Python number. Must be positive. See the decay computation above.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;decay_steps&lt;/code&gt; &lt;/b&gt; : 스칼라 &lt;code&gt;int32&lt;/code&gt; 또는 &lt;code&gt;int64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 또는 Python 숫자입니다. 긍정적이어야합니다. 위의 붕괴 계산을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3b4bb285df47f7b99f7760755edecf3aafc13e62" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;decay_steps&lt;/code&gt;&lt;/b&gt;: A scalar &lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; or a Python number. Number of steps to decay over.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;decay_steps&lt;/code&gt; &lt;/b&gt; : 스칼라 &lt;code&gt;int32&lt;/code&gt; 또는 &lt;code&gt;int64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 또는 Python 숫자입니다. 붕괴 단계 수.</target>
        </trans-unit>
        <trans-unit id="8c8f4f8dcaf169d08dd505cfef9d7a2d7c8fc14f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;decay_steps&lt;/code&gt;&lt;/b&gt;: How often to apply decay.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;decay_steps&lt;/code&gt; &lt;/b&gt; : 붕괴를 적용하는 빈도.</target>
        </trans-unit>
        <trans-unit id="c2ab7fe7fc1656d63723cd4966078c08fb4cbb90" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;decoded&lt;/code&gt;&lt;/b&gt;: A list of length top_paths, where &lt;code&gt;decoded[j]&lt;/code&gt; is a &lt;code&gt;SparseTensor&lt;/code&gt; containing the decoded outputs:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;decoded&lt;/code&gt; &lt;/b&gt; : 길이 top_paths의 목록. 여기서 &lt;code&gt;decoded[j]&lt;/code&gt; 는디코딩 된 출력을 포함하는 &lt;code&gt;SparseTensor&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bc22c0508889c6a14b2799bfd808edde69560e46" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;decoded&lt;/code&gt;&lt;/b&gt;: A single-element list. &lt;code&gt;decoded[0]&lt;/code&gt; is an &lt;code&gt;SparseTensor&lt;/code&gt; containing the decoded outputs s.t.:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;decoded&lt;/code&gt; &lt;/b&gt; : 단일 요소 목록. &lt;code&gt;decoded[0]&lt;/code&gt; 은디코딩 된 출력 st를 포함하는 &lt;code&gt;SparseTensor&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="be5cb2b4230f48b17c3b0fd05e81bf38ef39397e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;decorator_argspec&lt;/code&gt;&lt;/b&gt;: The new callable signature of this decorator.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;decorator_argspec&lt;/code&gt; &lt;/b&gt; :이&lt;b&gt; 데코레이터&lt;/b&gt; 의 새로운 호출 가능 서명.</target>
        </trans-unit>
        <trans-unit id="61598f883e6b03b36f53cc95f2ce35a6e49004eb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;decorator_doc&lt;/code&gt;&lt;/b&gt;: Documentation specific to this application of &lt;code&gt;decorator_func&lt;/code&gt; to &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;decorator_doc&lt;/code&gt; &lt;/b&gt; :이 응용 프로그램에 문서의 특정 &lt;code&gt;decorator_func&lt;/code&gt; 에 &lt;code&gt;target&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb5871f316fd4d0df82f1468471a2ad889eda1af" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;decorator_func&lt;/code&gt;&lt;/b&gt;: Callable returned by &lt;code&gt;wrap&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;decorator_func&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;wrap&lt;/code&gt; 에 의해 호출 가능.</target>
        </trans-unit>
        <trans-unit id="a112ebd49460ac52e02d8e29290f4d23c1a69a70" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;decorator_func&lt;/code&gt;&lt;/b&gt;: The wrapper function.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;decorator_func&lt;/code&gt; &lt;/b&gt; : 랩퍼 기능.</target>
        </trans-unit>
        <trans-unit id="592d5c6e064f570791de58d6d8a9f70e8b663bba" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;decorator_name&lt;/code&gt;&lt;/b&gt;: The name of the decorator. If &lt;code&gt;None&lt;/code&gt;, the name of the function calling make_decorator.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;decorator_name&lt;/code&gt; &lt;/b&gt; :&lt;b&gt; 데코레이터&lt;/b&gt; 의 이름. 경우 &lt;code&gt;None&lt;/code&gt; , 함수의 이름은 make_decorator를 호출.</target>
        </trans-unit>
        <trans-unit id="b303f7306ed8fcbcf5812b3fafea65744212d61b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;decrement&lt;/code&gt;&lt;/b&gt;: A tensor of same shape as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;decrement&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;x&lt;/code&gt; 와 같은 모양의 텐서.</target>
        </trans-unit>
        <trans-unit id="6ca46599e2546acc8a2e77a488a460dde6e0d33f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default&lt;/code&gt;&lt;/b&gt;: Default value to use if the flag value is None.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default&lt;/code&gt; &lt;/b&gt; : 플래그 값이 None 인 경우 사용할 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="01f86b21ab7e78008b3f093f924d8f64c152fb06" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default&lt;/code&gt;&lt;/b&gt;: Enum|str|None, the default value of the flag.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default&lt;/code&gt; &lt;/b&gt; : Enum | str | None, 플래그의 기본값.</target>
        </trans-unit>
        <trans-unit id="047dd60c6fed0adae76a26db693b22b57b96efec" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default&lt;/code&gt;&lt;/b&gt;: Optional callable that returns a list of tensors.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default&lt;/code&gt; &lt;/b&gt; : 텐서 목록을 반환하는 선택적 호출 가능.</target>
        </trans-unit>
        <trans-unit id="6d17f6b3c283226349bfe4ce04d114b905ae0948" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default&lt;/code&gt;&lt;/b&gt;: Optional callable that returns a structure of tensors.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default&lt;/code&gt; &lt;/b&gt; : 선택적 텐서 구조를 반환하는 호출 가능.</target>
        </trans-unit>
        <trans-unit id="fc928bf6c00123a346b0269b59beb5adf53143bd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default&lt;/code&gt;&lt;/b&gt;: The default value of the flag.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default&lt;/code&gt; &lt;/b&gt; : 플래그의 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="7856bcd4a1a902be1d4fa5b3da05922a8082f2f9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default&lt;/code&gt;&lt;/b&gt;: Union[Iterable[Enum], Iterable[Text], Enum, Text, None], the default value of the flag; see &lt;code&gt;DEFINE_multi&lt;/code&gt;; only differences are documented here. If the value is a single Enum, it is treated as a single-item list of that Enum value. If it is an iterable, text values within the iterable will be converted to the equivalent Enum objects.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default&lt;/code&gt; &lt;/b&gt; : Union [Iterable [Enum], Iterable [Text], Enum, Text, None], 플래그의 기본값입니다. &lt;code&gt;DEFINE_multi&lt;/code&gt; 참조; 여기에는 차이점 만 설명되어 있습니다. 값이 단일 Enum 인 경우 해당 Enum 값의 단일 항목 목록으로 처리됩니다. iterable 인 경우 iterable 내의 텍스트 값은 동등한 Enum 객체로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="70aa2c2cd4ec2702812a0376bf79f58d379770fb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default&lt;/code&gt;&lt;/b&gt;: Union[Iterable[T], Text, None], the default value of the flag. If the value is text, it will be parsed as if it was provided from the command line. If the value is a non-string iterable, it will be iterated over to create a shallow copy of the values. If it is None, it is left as-is.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default&lt;/code&gt; &lt;/b&gt; : Union [Iterable [T], Text, None], 플래그의 기본값입니다. 값이 텍스트이면 명령 줄에서 제공된 것처럼 구문 분석됩니다. 값이 문자열이 아닌 반복 가능한 경우 값의 얕은 사본을 작성하기 위해 반복됩니다. None이면 그대로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="167845c8f871d0d8e2722e5fdf21bd36c0005dc5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default&lt;/code&gt;&lt;/b&gt;: Union[Iterable[Text], Text, None], the default value of the flag; see &lt;code&gt;DEFINE_multi&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default&lt;/code&gt; &lt;/b&gt; : Union [Iterable [Text], Text, None], 플래그의 기본값입니다. &lt;code&gt;DEFINE_multi&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2d58993be39fcd0ca104e833a824e108c21bc1bb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default&lt;/code&gt;&lt;/b&gt;: Union[Iterable[float], Text, None], the default value of the flag; see &lt;code&gt;DEFINE_multi&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default&lt;/code&gt; &lt;/b&gt; : Union [Iterable [float], Text, None], 플래그의 기본값입니다. &lt;code&gt;DEFINE_multi&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="181f59fe1871e70f4b2d6e47a18f0e7f1084b283" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default&lt;/code&gt;&lt;/b&gt;: Union[Iterable[int], Text, None], the default value of the flag; see &lt;code&gt;DEFINE_multi&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default&lt;/code&gt; &lt;/b&gt; : Union [Iterable [int], Text, None], 플래그의 기본값입니다. &lt;code&gt;DEFINE_multi&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0484f0f4812144cbcaaee1e3e2d8ba3c9ade3e78" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default&lt;/code&gt;&lt;/b&gt;: Value to return if flagname is not defined. Defaults to None.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default&lt;/code&gt; &lt;/b&gt; : flagname이 정의되지 않은 경우 반환 할 값입니다. 기본값은 없음입니다.</target>
        </trans-unit>
        <trans-unit id="8b3b85edcbd3333229506200497059dd919b9e8e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default&lt;/code&gt;&lt;/b&gt;: bool|str|None, the default value of the flag.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default&lt;/code&gt; &lt;/b&gt; : bool | str | 없음, 플래그의 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="0a4518082764eadc109bede29837250bac24a439" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default&lt;/code&gt;&lt;/b&gt;: float|str|None, the default value of the flag.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default&lt;/code&gt; &lt;/b&gt; : float | str | None, 플래그의 기본값.</target>
        </trans-unit>
        <trans-unit id="1974098ceb36f2d0ae1b8836d7d19e6d88583751" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default&lt;/code&gt;&lt;/b&gt;: int|str|None, the default value of the flag.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default&lt;/code&gt; &lt;/b&gt; : int | str | None, 플래그의 기본값.</target>
        </trans-unit>
        <trans-unit id="ccb19ada124a87b614cdf659714bbc66f5b630a8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default&lt;/code&gt;&lt;/b&gt;: list|str|None, the default value of the flag.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default&lt;/code&gt; &lt;/b&gt; : list | str | 없음, 플래그의 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="cba40144991c910f2b28dc72647fa6561ef99316" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default&lt;/code&gt;&lt;/b&gt;: str|None, the default value of the flag.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default&lt;/code&gt; &lt;/b&gt; : str | None, 플래그의 기본값.</target>
        </trans-unit>
        <trans-unit id="fd16329e346841f7b57203401e8d9ed3081a86fd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default_batch_size&lt;/code&gt;&lt;/b&gt;: the number of query examples expected per batch. Leave unset for variable batch size (recommended).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default_batch_size&lt;/code&gt; &lt;/b&gt; : 배치 당 예상되는 쿼리 예제 수입니다. 가변 배치 크기에 대해 설정하지 않은 상태로 두십시오 (권장).</target>
        </trans-unit>
        <trans-unit id="630770dab7100cca5ff3249d6efe6935de831fe7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default_id&lt;/code&gt;&lt;/b&gt;: The id to use for an entry with no features.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default_id&lt;/code&gt; &lt;/b&gt; : 기능이없는 항목에 사용할 ID입니다.</target>
        </trans-unit>
        <trans-unit id="da34bf14fd126cdf5828dc1dadffa65908e5b490" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default_name&lt;/code&gt;&lt;/b&gt;: Optional; if provided, used as default name of the summary.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default_name&lt;/code&gt; &lt;/b&gt; : 선택 사항; 제공된 경우 요약의 기본 이름으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7553111695637022d87f7d63d2d85c07da75c439" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default_name&lt;/code&gt;&lt;/b&gt;: The default name to use if the &lt;code&gt;name&lt;/code&gt; argument is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default_name&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;name&lt;/code&gt; 인수가 &lt;code&gt;None&lt;/code&gt; 인 경우 사용할 기본 이름입니다.</target>
        </trans-unit>
        <trans-unit id="0d3c72b9b74f86f5401a402e97056f1592073e5a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default_name&lt;/code&gt;&lt;/b&gt;: The default name to use if the &lt;code&gt;name_or_scope&lt;/code&gt; argument is &lt;code&gt;None&lt;/code&gt;, this name will be uniquified. If name_or_scope is provided it won't be used and therefore it is not required and can be None.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default_name&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;name_or_scope&lt;/code&gt; 인수가 &lt;code&gt;None&lt;/code&gt; 인경우 사용할 기본 이름으로이 이름이 고유 화됩니다. name_or_scope가 제공되면 사용되지 않으므로 필요하지 않으며 None이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8fd56716c20153d42f8d2dabaef9c3a68c8c5246" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default_ranges_stats&lt;/code&gt;&lt;/b&gt;: Tuple of integers representing (min, max) range values for all arrays without a specified range. Intended for experimenting with quantization via &quot;dummy quantization&quot;. (default None)</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default_ranges_stats&lt;/code&gt; &lt;/b&gt; : 지정된 범위가없는 모든 배열의 (최소, 최대) 범위 값을 나타내는 정수 튜플. &quot;더미 양자화&quot;를 통한 양자화 실험을 목적으로합니다. (기본 없음)</target>
        </trans-unit>
        <trans-unit id="a57b6a8db8d88638cb5db376cbe001ee6e81afca" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default_value&lt;/code&gt;&lt;/b&gt;: A 0-D &lt;code&gt;Tensor&lt;/code&gt; of the same type as &lt;code&gt;sparse_values&lt;/code&gt;. Value to set for indices not specified in &lt;code&gt;sparse_indices&lt;/code&gt;. Defaults to zero.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default_value&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;sparse_values&lt;/code&gt; 와 동일한 유형의 0 차원 &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;sparse_indices&lt;/code&gt; 에 지정되지 않은 인덱스에 설정할 값입니다. 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="4a6dcc4287eefe457633f1d6d35c01af2346ca0d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default_value&lt;/code&gt;&lt;/b&gt;: A single value compatible with &lt;code&gt;dtype&lt;/code&gt; or an iterable of values compatible with &lt;code&gt;dtype&lt;/code&gt; which the column takes on during &lt;code&gt;tf.Example&lt;/code&gt; parsing if data is missing. A default value of &lt;code&gt;None&lt;/code&gt; will cause &lt;a href=&quot;../io/parse_example&quot;&gt;&lt;code&gt;tf.io.parse_example&lt;/code&gt;&lt;/a&gt; to fail if an example does not contain this column. If a single value is provided, the same value will be applied as the default value for every item. If an iterable of values is provided, the shape of the &lt;code&gt;default_value&lt;/code&gt; should be equal to the given &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default_value&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;dtype&lt;/code&gt; 과 호환되는 단일 값또는 &lt;code&gt;dtype&lt;/code&gt; 중에 열이 수행하는 &lt;code&gt;tf.Example&lt;/code&gt; 과 호환 가능한 반복 가능한 값입니다. 데이터가없는 경우 구문 분석 예. 디폴트 값 &lt;code&gt;None&lt;/code&gt; 원인이됩니다&lt;a href=&quot;../io/parse_example&quot;&gt; &lt;code&gt;tf.io.parse_example&lt;/code&gt; &lt;/a&gt; 예는이 열을 포함하지 않는 경우 실패 할 수 있습니다. 단일 값을 제공하면 모든 항목의 기본값으로 동일한 값이 적용됩니다. 값의 반복 가능한이 제공되는 경우의 형상 &lt;code&gt;default_value&lt;/code&gt; 주어진 같아야 &lt;code&gt;shape&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4bd3b15007e9dfb4627e2f775a19299895e658fe" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default_value&lt;/code&gt;&lt;/b&gt;: A single value compatible with &lt;code&gt;dtype&lt;/code&gt; that is used for padding the sparse data into a dense &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default_value&lt;/code&gt; &lt;/b&gt; :희소 데이터를 조밀 한 &lt;code&gt;Tensor&lt;/code&gt; 에 채우는 데 사용되는 &lt;code&gt;dtype&lt;/code&gt; 과 호환되는 단일 값입니다.</target>
        </trans-unit>
        <trans-unit id="db3a6f1ff5722352e1133708085fe2c875e88dc1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default_value&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;None&lt;/code&gt;, this column's graph operations will fail for out-of-range inputs. Otherwise, this value must be in the range &lt;code&gt;[0, num_buckets)&lt;/code&gt;, and will replace out-of-range inputs.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default_value&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;None&lt;/code&gt; 이면이 열의 그래프 작업이 범위를 벗어난 입력에 실패합니다. 그렇지 않으면이 값은 &lt;code&gt;[0, num_buckets)&lt;/code&gt; 범위에 있어야하며범위를 벗어난 입력을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="a7f4e96fcf8abe6470b8e7e0ab861c64f9542107" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default_value&lt;/code&gt;&lt;/b&gt;: If set, values outside of range &lt;code&gt;[0, num_buckets)&lt;/code&gt; will be replaced with this value. If not set, values &amp;gt;= num_buckets will cause a failure while values &amp;lt; 0 will be dropped.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default_value&lt;/code&gt; &lt;/b&gt; : 설정하면 &lt;code&gt;[0, num_buckets)&lt;/code&gt; 범위를 벗어난값이이 값으로 대체됩니다. 설정하지 않은 경우 값&amp;gt; = num_buckets는 실패를 유발하고 값 &amp;lt;0은 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="bcff3bc86ab9003553198918e7af3a90cdf32ccc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default_value&lt;/code&gt;&lt;/b&gt;: Scalar value to be used to pad multiple &lt;code&gt;Example&lt;/code&gt;s to their maximum length. Irrelevant for parsing a single &lt;code&gt;Example&lt;/code&gt; or &lt;code&gt;SequenceExample&lt;/code&gt;. Defaults to &quot;&quot; for dtype string and 0 otherwise (optional).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default_value&lt;/code&gt; &lt;/b&gt; : 여러 &lt;code&gt;Example&lt;/code&gt; 을 최대 길이로채우는 데 사용되는 스칼라 값입니다. 단일 &lt;code&gt;Example&lt;/code&gt; 또는 &lt;code&gt;SequenceExample&lt;/code&gt; 구문 분석과는 관련이 없습니다. dtype 문자열의 경우 기본값은 &quot;&quot;이고 그렇지 않은 경우 0입니다 (선택 사항).</target>
        </trans-unit>
        <trans-unit id="ea7c434567e251ca5d7a5d16ad620f6711288b18" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default_value&lt;/code&gt;&lt;/b&gt;: Scalar value to set for indices not specified in &lt;code&gt;sp_input&lt;/code&gt;. Defaults to zero.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default_value&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;sp_input&lt;/code&gt; 에 지정되지 않은 인덱스에 설정할 스칼라 값. 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="c43d23d5f63571c926135b63dab17573397f3f02" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default_value&lt;/code&gt;&lt;/b&gt;: The integer ID value to return for out-of-vocabulary feature values, defaults to &lt;code&gt;-1&lt;/code&gt;. This can not be specified with a positive &lt;code&gt;num_oov_buckets&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default_value&lt;/code&gt; &lt;/b&gt; : 어휘 외 기능 값에 대해 리턴 할 정수 ID 값입니다.기본값은 &lt;code&gt;-1&lt;/code&gt; 입니다. 양의 &lt;code&gt;num_oov_buckets&lt;/code&gt; 로 지정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a1a2c9f31456b13a0c9a5eb81b8cae6fcba97daa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default_value&lt;/code&gt;&lt;/b&gt;: The value to fill for empty rows, with the same type as &lt;code&gt;sp_input.&lt;/code&gt;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default_value&lt;/code&gt; &lt;/b&gt; : 빈 행을 채울 값 &lt;code&gt;sp_input.&lt;/code&gt; 과 동일한 유형 입니다.</target>
        </trans-unit>
        <trans-unit id="568d74dc15dc6d8e6f1d3d66d6d2471aa9fadd05" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default_value&lt;/code&gt;&lt;/b&gt;: The value to use if a key is missing in the table.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default_value&lt;/code&gt; &lt;/b&gt; : 테이블에서 키가 누락 된 경우 사용할 값입니다.</target>
        </trans-unit>
        <trans-unit id="6c714c37bc4b35b8ba434dd83808b47e33a7a5ab" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default_value&lt;/code&gt;&lt;/b&gt;: Value to be used if an example is missing this feature. It must be compatible with &lt;code&gt;dtype&lt;/code&gt; and of the specified &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default_value&lt;/code&gt; &lt;/b&gt; : 예제에이 기능이없는 경우 사용되는 값입니다. &lt;code&gt;dtype&lt;/code&gt; 및 지정된 &lt;code&gt;shape&lt;/code&gt; 과호환 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="adc10e1ec5647afafe863baf25d5391e259996ca" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;default_value&lt;/code&gt;&lt;/b&gt;: Value to set for indices not specified in &lt;code&gt;self&lt;/code&gt;. Defaults to zero. &lt;code&gt;default_value&lt;/code&gt; must be broadcastable to &lt;code&gt;self.shape[self.ragged_rank + 1:]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;default_value&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;self&lt;/code&gt; 지정되지 않은 색인에 설정할 값입니다. 기본값은 0입니다. &lt;code&gt;default_value&lt;/code&gt; 는 &lt;code&gt;self.shape[self.ragged_rank + 1:]&lt;/code&gt; 로 브로드 캐스트 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="d5b115ae077420c873742abba229478f85cebacf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;defer_build&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;True&lt;/code&gt;, defer adding the save and restore ops to the &lt;code&gt;build()&lt;/code&gt; call. In that case &lt;code&gt;build()&lt;/code&gt; should be called before finalizing the graph or using the saver.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;defer_build&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;True&lt;/code&gt; 이면 &lt;code&gt;build()&lt;/code&gt; 호출에저장 및 복원 작업 추가를 연기합니다. 이 경우그래프를 마무리하거나 보호기를 사용하기 전에 &lt;code&gt;build()&lt;/code&gt; 를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="fe2012fc4b8c838cca09871c070955d9cdaa1cec" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;deleted_key&lt;/code&gt;&lt;/b&gt;: the key to use to represent deleted buckets internally. Must not be used in insert, remove or lookup operations and be different from the empty_key.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;deleted_key&lt;/code&gt; &lt;/b&gt; : 삭제 된 버킷을 내부적으로 나타내는 데 사용하는 키입니다. 삽입, 제거 또는 조회 작업에 사용되어서는 안되며 empty_key와 달라야합니다.</target>
        </trans-unit>
        <trans-unit id="e2599a170786a85859ff9736fe2122cd8107a5a6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;delimiter&lt;/code&gt;&lt;/b&gt;: The delimiter to separate fields in a line.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;delimiter&lt;/code&gt; &lt;/b&gt; : 줄에서 필드를 구분하는 구분 기호입니다.</target>
        </trans-unit>
        <trans-unit id="deecb2494de6af370ec766970f77c837336cde1a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;delimiter&lt;/code&gt;&lt;/b&gt;: deprecated alias for &lt;code&gt;sep&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;delimiter&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;sep&lt;/code&gt; 에 대해 사용되지 않는 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="dd784fbda37da3cc399250e8a7c162e5b840bb64" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;delta&lt;/code&gt;&lt;/b&gt;: (optional) perturbation used to compute numeric Jacobian.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;delta&lt;/code&gt; &lt;/b&gt; : 숫자 Jacobian을 계산하는 데 사용되는 (선택적) 섭동.</target>
        </trans-unit>
        <trans-unit id="bd722100928a14a9ba0469b32cad5037a23e6400" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;delta&lt;/code&gt;&lt;/b&gt;: (optional) the amount of perturbation.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;delta&lt;/code&gt; &lt;/b&gt; : (선택 사항) 섭 동량.</target>
        </trans-unit>
        <trans-unit id="d14ab2529f6848cc15445086b105234d4fc512f9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;delta&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;float&lt;/code&gt;, the point where the huber loss function changes from a quadratic to linear.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;delta&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;float&lt;/code&gt; , 후버 손실 함수가 2 차에서 선형으로 바뀌는 지점.</target>
        </trans-unit>
        <trans-unit id="8c50c9eab62a6de73a54be31efe5286f2bf9e124" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;delta&lt;/code&gt;&lt;/b&gt;: A 0-D &lt;code&gt;Tensor&lt;/code&gt; (scalar). Number that increments &lt;code&gt;start&lt;/code&gt;. Defaults to 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;delta&lt;/code&gt; &lt;/b&gt; : 0-D &lt;code&gt;Tensor&lt;/code&gt; (스칼라). &lt;code&gt;start&lt;/code&gt; 하는 숫자입니다. 기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="68ffe6c96ea72c107bd40d8916dcbe4421f36f37" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;delta&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. The value to add to this variable.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;delta&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . 이 변수에 추가 할 값입니다.</target>
        </trans-unit>
        <trans-unit id="c12c5b463040e0b3444f2976fa532f175c91538e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;delta&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. The value to subtract from this variable.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;delta&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . 이 변수에서 빼는 값입니다.</target>
        </trans-unit>
        <trans-unit id="1367cad76b9c4bf46ac66a862696343a9a9ef9a2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;delta&lt;/code&gt;&lt;/b&gt;: A float, the point where the Huber loss function changes from a quadratic to linear.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;delta&lt;/code&gt; &lt;/b&gt; : Huber loss 함수가 2 차에서 선형으로 바뀌는 점인 float입니다.</target>
        </trans-unit>
        <trans-unit id="81f724caab21bc8600def7efc2e673d45f803484" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;delta&lt;/code&gt;&lt;/b&gt;: A scalar. Amount to add to the pixel values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;delta&lt;/code&gt; &lt;/b&gt; : 스칼라. 픽셀 값에 더할 금액입니다.</target>
        </trans-unit>
        <trans-unit id="4335aab20a4dc55408165154223a65e3a150e067" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;delta&lt;/code&gt;&lt;/b&gt;: The OK difference between compared values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;delta&lt;/code&gt; &lt;/b&gt; : 비교 된 값 사이의 OK 차이.</target>
        </trans-unit>
        <trans-unit id="4bf6351073988cb54c1c1545fd13d890dd521df7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;delta&lt;/code&gt;&lt;/b&gt;: float. How much to add to the hue channel.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;delta&lt;/code&gt; &lt;/b&gt; : 플로트. 색조 채널에 추가 할 양입니다.</target>
        </trans-unit>
        <trans-unit id="d218565360662fc8eb644fbc82f92770d781783e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;delta&lt;/code&gt;&lt;/b&gt;: the amount of advancement. The state of the RNG after &lt;code&gt;skip(n)&lt;/code&gt; will be the same as that after &lt;code&gt;normal([n])&lt;/code&gt; (or any other distribution). The actual increment added to the counter is an unspecified implementation detail.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;delta&lt;/code&gt; &lt;/b&gt; : 발전량. 이후의 RNG 상태 &lt;code&gt;skip(n)&lt;/code&gt; 이후에 동일한 것이다 &lt;code&gt;normal([n])&lt;/code&gt; (또는 임의의 다른 분배). 카운터에 추가 된 실제 증분은 지정되지 않은 구현 세부 사항입니다.</target>
        </trans-unit>
        <trans-unit id="7e777fd278161d33a6d54df9fb5a8fc67f694afc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;deltas&lt;/code&gt;&lt;/b&gt;: Vector or scalar &lt;code&gt;Tensor&lt;/code&gt;. Specifies the increment for each range. Defaults to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;deltas&lt;/code&gt; &lt;/b&gt; : 벡터 또는 스칼라 &lt;code&gt;Tensor&lt;/code&gt; . 각 범위의 증분을 지정합니다. 기본값은 &lt;code&gt;1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f66c51c5ed17924b94ed55a89609a736708d55a5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dense&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;sp_values&lt;/code&gt;. &lt;code&gt;R&lt;/code&gt;-D. The dense Tensor operand.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dense&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;sp_values&lt;/code&gt; 와 동일한 유형이어야합니다. &lt;code&gt;R&lt;/code&gt; -D. 조밀 한 텐서 피연산자</target>
        </trans-unit>
        <trans-unit id="faaeb8cb6e3b8b03ffb9d8b1ce5ae8c9e48ac6c1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dense_features&lt;/code&gt;&lt;/b&gt;: A list of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;. a list of matrices which contains the dense feature values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dense_features&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;float32&lt;/code&gt; 유형의 &lt;code&gt;Tensor&lt;/code&gt; 객체목록입니다. 밀집한 피처 값을 포함하는 행렬 목록</target>
        </trans-unit>
        <trans-unit id="ba3874f33acd36fc79ab1d3df0a52f3e1f62d1c6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dense_shape&lt;/code&gt;&lt;/b&gt;: A 1-D int64 tensor of shape &lt;code&gt;[ndims]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dense_shape&lt;/code&gt; &lt;/b&gt; : 모양 &lt;code&gt;[ndims]&lt;/code&gt; 의 1 차원 int64 텐서.</target>
        </trans-unit>
        <trans-unit id="caed1eb68c27fe20c5b0ff66f781ca711b2d6d88" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dense_shape_dtype&lt;/code&gt;&lt;/b&gt;: &lt;a href=&quot;dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; of the &lt;code&gt;dense_shape&lt;/code&gt; in the &lt;code&gt;IndexedSlices&lt;/code&gt;. One of &lt;a href=&quot;../tf#int32&quot;&gt;&lt;code&gt;tf.int32&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;, or &lt;code&gt;None&lt;/code&gt; (if the &lt;code&gt;IndexedSlices&lt;/code&gt; has no &lt;code&gt;dense_shape&lt;/code&gt; tensor).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dense_shape_dtype&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;dtypes/dtype&quot;&gt; &lt;code&gt;tf.DType&lt;/code&gt; &lt;/a&gt; 에서 &lt;code&gt;dense_shape&lt;/code&gt; 의 &lt;code&gt;IndexedSlices&lt;/code&gt; 입니다. 하나&lt;a href=&quot;../tf#int32&quot;&gt; &lt;code&gt;tf.int32&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt; , 또는 &lt;code&gt;None&lt;/code&gt; 합니다 (경우 &lt;code&gt;IndexedSlices&lt;/code&gt; 는 전혀 없습니다 &lt;code&gt;dense_shape&lt;/code&gt; 의 텐서).</target>
        </trans-unit>
        <trans-unit id="354ce925c8b188a62381fbd84d591cb2f2e02dd0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dense_weights&lt;/code&gt;&lt;/b&gt;: A list with the same length as &lt;code&gt;dense_features&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;. a list of vectors where the values are the weights associated with a dense feature group.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dense_weights&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;float32&lt;/code&gt; 유형의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;dense_features&lt;/code&gt; 와 길이가 같은 목록입니다. 값이 밀집된 피처 그룹과 관련된 가중치 인 벡터 목록</target>
        </trans-unit>
        <trans-unit id="ffb4d98b18b5ce9fea2f961cf942bce1934010b7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;density_unit&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;in&quot;, &quot;cm&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;in&quot;&lt;/code&gt;. Unit used to specify &lt;code&gt;x_density&lt;/code&gt; and &lt;code&gt;y_density&lt;/code&gt;: pixels per inch (&lt;code&gt;'in'&lt;/code&gt;) or centimeter (&lt;code&gt;'cm'&lt;/code&gt;).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;density_unit&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;&quot;in&quot;, &quot;cm&quot;&lt;/code&gt; 의 선택적 &lt;code&gt;string&lt;/code&gt; 입니다. 기본값은 &lt;code&gt;&quot;in&quot;&lt;/code&gt; 입니다. &lt;code&gt;x_density&lt;/code&gt; 및 &lt;code&gt;y_density&lt;/code&gt; 를 지정하는 데 사용되는 단위: 인치당 픽셀 수 ( &lt;code&gt;'in'&lt;/code&gt; ) 또는 센티미터 ( &lt;code&gt;'cm'&lt;/code&gt; )입니다.</target>
        </trans-unit>
        <trans-unit id="e41563ffd94e9c6c4b63b950bb9b6240e2abb194" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;depth&lt;/code&gt;&lt;/b&gt;: A scalar defining the depth of the one hot dimension.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;depth&lt;/code&gt; &lt;/b&gt; : 하나의 핫 차원의 깊이를 정의하는 스칼라.</target>
        </trans-unit>
        <trans-unit id="4efa4d7edf18b5937995179f3c67f394899d091b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;depth_factor&lt;/code&gt;&lt;/b&gt;: Positive integer.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;depth_factor&lt;/code&gt; &lt;/b&gt; : 양의 정수.</target>
        </trans-unit>
        <trans-unit id="a72bc0a6789d55f892571a2aec4a56fea47418df" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;depth_multiplier&lt;/code&gt;&lt;/b&gt;: The number of depthwise convolution output channels for each input channel. The total number of depthwise convolution output channels will be equal to &lt;code&gt;filters_in * depth_multiplier&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;depth_multiplier&lt;/code&gt; &lt;/b&gt; : 각 입력 채널에 대한 깊이 방향 컨볼 루션 출력 채널 수입니다. 깊이 단위 컨볼 루션 출력 채널의 총 개수는 &lt;code&gt;filters_in * depth_multiplier&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59acbfa5dbe93627d7946dbdcc8964917936afea" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;depth_multiplier&lt;/code&gt;&lt;/b&gt;: The number of depthwise convolution output channels for each input channel. The total number of depthwise convolution output channels will be equal to &lt;code&gt;num_filters_in * depth_multiplier&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;depth_multiplier&lt;/code&gt; &lt;/b&gt; : 각 입력 채널에 대한 깊이 방향 컨볼 루션 출력 채널 수입니다. 깊이 단위 컨볼 루션 출력 채널의 총 개수는 &lt;code&gt;num_filters_in * depth_multiplier&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="964af5f685af7ecbcfd21e7b4d6db38121960c62" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;depth_radius&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;5&lt;/code&gt;. 0-D. Half-width of the 1-D normalization window.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;depth_radius&lt;/code&gt; &lt;/b&gt; : 선택적 &lt;code&gt;int&lt;/code&gt; 입니다. 기본값은 &lt;code&gt;5&lt;/code&gt; 입니다. 0-D. 1 차원 정규화 창의 절반 너비입니다.</target>
        </trans-unit>
        <trans-unit id="626da3b38d710cb44a9639758568cda719264129" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;depthwise_constraint&lt;/code&gt;&lt;/b&gt;: Constraint function applied to the depthwise kernel matrix.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;depthwise_constraint&lt;/code&gt; &lt;/b&gt; : 깊이 커널 매트릭스에 적용되는 제약 함수.</target>
        </trans-unit>
        <trans-unit id="e1498dccfe5ef31a17e427f1b01ac05757a3a5ab" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;depthwise_constraint&lt;/code&gt;&lt;/b&gt;: Optional projection function to be applied to the depthwise kernel after being updated by an &lt;code&gt;Optimizer&lt;/code&gt; (e.g. used for norm constraints or value constraints for layer weights). The function must take as input the unprojected variable and must return the projected variable (which must have the same shape). Constraints are not safe to use when doing asynchronous distributed training.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;depthwise_constraint&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Optimizer&lt;/code&gt; 의해 업데이트 된 후 깊이 커널에 적용되는 선택적 프로젝션 함수(예 : 표준 두께 또는 레이어 가중치의 값 제약에 사용). 이 함수는 프로젝션되지 않은 변수를 입력으로 가져 와서 프로젝션 된 변수 (같은 모양을 가져야 함)를 반환해야합니다. 비동기식 분산 교육을 수행 할 때 제약 조건을 사용하는 것이 안전하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f789cb97fb045afdfde03285094dd61ac1f1dcfd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;depthwise_filter&lt;/code&gt;&lt;/b&gt;: 4-D &lt;code&gt;Tensor&lt;/code&gt; with shape &lt;code&gt;[filter_height, filter_width, in_channels, channel_multiplier]&lt;/code&gt;. Contains &lt;code&gt;in_channels&lt;/code&gt; convolutional filters of depth 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;depthwise_filter&lt;/code&gt; &lt;/b&gt; :모양을 가진4 차원 &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;[filter_height, filter_width, in_channels, channel_multiplier]&lt;/code&gt; . 깊이 1의 &lt;code&gt;in_channels&lt;/code&gt; 컨볼 루션 필터를포함합니다.</target>
        </trans-unit>
        <trans-unit id="222d04be26ca90d8fe68bdae71c3eae011425698" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;depthwise_initializer&lt;/code&gt;&lt;/b&gt;: An initializer for the depthwise convolution kernel.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;depthwise_initializer&lt;/code&gt; &lt;/b&gt; : 깊이 컨볼 루션 커널의 이니셜 라이저.</target>
        </trans-unit>
        <trans-unit id="1e9b76e70617a30a0bf1d83648cd3489e7aeacfc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;depthwise_initializer&lt;/code&gt;&lt;/b&gt;: Initializer for the depthwise kernel matrix.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;depthwise_initializer&lt;/code&gt; &lt;/b&gt; : 깊이 커널 매트릭스의 이니셜 라이저.</target>
        </trans-unit>
        <trans-unit id="52c18fb4decc5433d7f6a2452083fcdbe09bd572" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;depthwise_kernel&lt;/code&gt;&lt;/b&gt;: convolution kernel for the depthwise convolution.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;depthwise_kernel&lt;/code&gt; &lt;/b&gt; : 깊이 컨볼 루션을위한 컨볼 루션 커널.</target>
        </trans-unit>
        <trans-unit id="5566717239a7a303dfa95af423abae1781a129c2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;depthwise_regularizer&lt;/code&gt;&lt;/b&gt;: Optional regularizer for the depthwise convolution kernel.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;depthwise_regularizer&lt;/code&gt; &lt;/b&gt; : 깊이 컨볼 루션 커널을위한 선택적 정규화 기입니다.</target>
        </trans-unit>
        <trans-unit id="6a46b31d2b99a2b6f4566f43aabcd3d72c0d08b0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;depthwise_regularizer&lt;/code&gt;&lt;/b&gt;: Regularizer function applied to the depthwise kernel matrix.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;depthwise_regularizer&lt;/code&gt; &lt;/b&gt; : 깊이 커널 매트릭스에 적용되는 정규화 기능.</target>
        </trans-unit>
        <trans-unit id="3ae76822fdfaeaa8bc2d2384955ad2b44b26e8ce" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;desc&lt;/code&gt;&lt;/b&gt;: A short description of a test method.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;desc&lt;/code&gt; &lt;/b&gt; : 테스트 방법에 대한 간단한 설명.</target>
        </trans-unit>
        <trans-unit id="0039c0e1b86d1b6e80a55edd6cbd5a83ea267792" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;description&lt;/code&gt;&lt;/b&gt;: Optional long-form description for this summary, as a constant &lt;code&gt;str&lt;/code&gt;. Markdown is supported. Defaults to empty.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;description&lt;/code&gt; &lt;/b&gt; : 상수 &lt;code&gt;str&lt;/code&gt; 로서이 요약에 대한 선택적 긴 형식 설명. 마크 다운이 지원됩니다. 기본적으로 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="3762239880e32f688a40bf5247bcd87b5806e577" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;descriptor_source&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;local://&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;descriptor_source&lt;/code&gt; &lt;/b&gt; : 선택적 &lt;code&gt;string&lt;/code&gt; . 기본값은 &lt;code&gt;&quot;local://&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bc4030567c4c1cf1541b1b436f37ec7517bdf270" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;descriptor_source&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;local://&quot;&lt;/code&gt;. Either the special value &lt;code&gt;local://&lt;/code&gt; or a path to a file containing a serialized &lt;code&gt;FileDescriptorSet&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;descriptor_source&lt;/code&gt; &lt;/b&gt; : 선택적 &lt;code&gt;string&lt;/code&gt; . 기본값은 &lt;code&gt;&quot;local://&quot;&lt;/code&gt; 입니다. 특수 값 &lt;code&gt;local://&lt;/code&gt; 또는 직렬화 된 &lt;code&gt;FileDescriptorSet&lt;/code&gt; 을 포함하는 파일의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="bc8fcfd7bc03990870018d8bf2369782a612b6ab" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;desired&lt;/code&gt;&lt;/b&gt;: none of those changes will affect the internals of this FlagValue instance.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;desired&lt;/code&gt; &lt;/b&gt; : 이러한 변경 사항 중 어느 것도이 FlagValue 인스턴스의 내부에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bc5936b0e6b196e7cb94f926f54840146c7cf9e2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;desired_channels&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. Number of sample channels wanted.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;desired_channels&lt;/code&gt; &lt;/b&gt; : 선택적 &lt;code&gt;int&lt;/code&gt; . 기본값은 &lt;code&gt;-1&lt;/code&gt; 입니다. 원하는 샘플 채널 수</target>
        </trans-unit>
        <trans-unit id="3f5e8912b5ad5b12c31aa3ed5a73dc48a40a08cc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;desired_samples&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. Length of audio requested.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;desired_samples&lt;/code&gt; &lt;/b&gt; : 선택적 &lt;code&gt;int&lt;/code&gt; . 기본값은 &lt;code&gt;-1&lt;/code&gt; 입니다. 요청한 오디오 길이.</target>
        </trans-unit>
        <trans-unit id="e6d0e756ac19f0c67592639dd06884ea209c8499" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dest_nodes&lt;/code&gt;&lt;/b&gt;: A list of strings specifying the destination node names.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dest_nodes&lt;/code&gt; &lt;/b&gt; : 대상 노드 이름을 지정하는 문자열 목록입니다.</target>
        </trans-unit>
        <trans-unit id="d2d53fc37625a14107584405dfd25474b2bd28e1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;destinations&lt;/code&gt;&lt;/b&gt;: A mirrored variable or device string specifying the destination devices to copy &lt;code&gt;tensor&lt;/code&gt; to.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;destinations&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;tensor&lt;/code&gt; 를복사 할 대상 장치를 지정하는 미러링 된 변수 또는 장치 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="bed781c11bf7ecadb8aee3f78a2bd12fe4bf7fee" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;destinations&lt;/code&gt;&lt;/b&gt;: A mirrored variable, a per-replica tensor, or a device string. The return value will be copied to all destination devices (or all the devices where the &lt;code&gt;destinations&lt;/code&gt; value resides). To perform an all-reduction, pass &lt;code&gt;value&lt;/code&gt; to &lt;code&gt;destinations&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;destinations&lt;/code&gt; &lt;/b&gt; : 미러링 된 변수, 복제 별 텐서 또는 장치 문자열 반환 값은 모든 대상 장치 (또는 모든 장치에 복사됩니다 &lt;code&gt;destinations&lt;/code&gt; 상주 가치). 전체 축소를 수행하려면 &lt;code&gt;value&lt;/code&gt; 을 &lt;code&gt;destinations&lt;/code&gt; 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="6a246a2462462346566c052ec0c3ec33521eace0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;destinations&lt;/code&gt;&lt;/b&gt;: the broadcast destinations.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;destinations&lt;/code&gt; &lt;/b&gt; : 방송 목적지.</target>
        </trans-unit>
        <trans-unit id="396d2561b656fffa720ddef52cafe25ef13b49c4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;destinations&lt;/code&gt;&lt;/b&gt;: the reduction destinations.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;destinations&lt;/code&gt; &lt;/b&gt; : 축소 목적지.</target>
        </trans-unit>
        <trans-unit id="c75d19732821a1062638c0a7fbfb00cc4d8f5c8e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;deterministic&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;bool&lt;/code&gt;. Deprecated; use &lt;code&gt;fractional_avg_pool_v2&lt;/code&gt; instead.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;deterministic&lt;/code&gt; &lt;/b&gt; : 선택적인 &lt;code&gt;bool&lt;/code&gt; . 더 이상 사용되지 않습니다. 사용 &lt;code&gt;fractional_avg_pool_v2&lt;/code&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="ca9ac7249b476fd9b45f2ff96d7ead49925eee67" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;deterministic&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;bool&lt;/code&gt;. Deprecated; use &lt;code&gt;fractional_max_pool_v2&lt;/code&gt; instead.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;deterministic&lt;/code&gt; &lt;/b&gt; : 선택적인 &lt;code&gt;bool&lt;/code&gt; . 더 이상 사용되지 않습니다. 사용 &lt;code&gt;fractional_max_pool_v2&lt;/code&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="0ace48d397bfb68cdae3e51e6ddc77ffb646d2a0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dev&lt;/code&gt;&lt;/b&gt;: a &lt;code&gt;DeviceSpec&lt;/code&gt;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dev&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;DeviceSpec&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="421f462d99482dd559bfcddff635f43d4da720ea" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dev&lt;/code&gt;&lt;/b&gt;: a &lt;code&gt;DeviceSpec&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dev&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;DeviceSpec&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21afd50bdb70e79bc2d2928e9ded32b5bf5bbabc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;device1&lt;/code&gt;&lt;/b&gt;: A string device name or TensorFlow &lt;code&gt;DeviceSpec&lt;/code&gt; object.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;device1&lt;/code&gt; &lt;/b&gt; : 문자열 장치 이름 또는 TensorFlow &lt;code&gt;DeviceSpec&lt;/code&gt; 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="75923fcd55dbdf6679d5615d91a6ce3154f230ab" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;device2&lt;/code&gt;&lt;/b&gt;: A string device name or TensorFlow &lt;code&gt;DeviceSpec&lt;/code&gt; object.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;device2&lt;/code&gt; &lt;/b&gt; : 문자열 장치 이름 또는 TensorFlow &lt;code&gt;DeviceSpec&lt;/code&gt; 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="eb2b82b7aab51e8b806c40daa36bc422c6d80815" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;device&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;PhysicalDevice&lt;/code&gt; to configure</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;device&lt;/code&gt; &lt;/b&gt; :구성 할 &lt;code&gt;PhysicalDevice&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fdcc045149c2371fd5d507e962804c7e218b21ce" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;device&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;PhysicalDevice&lt;/code&gt; to query</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;device&lt;/code&gt; &lt;/b&gt; :쿼리 할 &lt;code&gt;PhysicalDevice&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1ab7667f59658b7fe9bbfc0cdd34cb9960749d9d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;device&lt;/code&gt;&lt;/b&gt;: A device string or function, for passing to &lt;a href=&quot;../../../../device&quot;&gt;&lt;code&gt;tf.device&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;device&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../../../../device&quot;&gt; &lt;code&gt;tf.device&lt;/code&gt; &lt;/a&gt; 에 전달하기위한 장치 문자열 또는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="290819217f0b108ac64b4ff4fe952a5ce9897de3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;device&lt;/code&gt;&lt;/b&gt;: A device string or function, for passing to &lt;a href=&quot;../device&quot;&gt;&lt;code&gt;tf.device&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;device&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../device&quot;&gt; &lt;code&gt;tf.device&lt;/code&gt; &lt;/a&gt; 에 전달하기위한 장치 문자열 또는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="dea005cb73023a02ace1bf837c0c39d2c79a2f88" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;device&lt;/code&gt;&lt;/b&gt;: A string. The name of a device to which elements will be prefetched.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;device&lt;/code&gt; &lt;/b&gt; : 문자열 요소를 프리 페치 할 장치의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="0a6346cbfd66ab558b1f50987cd7834187f5ef94" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;device&lt;/code&gt;&lt;/b&gt;: Device string identifier for the device on which the variables should be placed. See class docs for more details on how the device is used. Examples: &quot;/cpu:0&quot;, &quot;/gpu:0&quot;, &quot;/device:CPU:0&quot;, &quot;/device:GPU:0&quot;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;device&lt;/code&gt; &lt;/b&gt; : 변수를 배치 할 장치의 장치 문자열 식별자입니다. 장치 사용 방법에 대한 자세한 내용은 클래스 문서를 참조하십시오. 예 : &quot;/ cpu : 0&quot;, &quot;/ gpu : 0&quot;, &quot;/ device : CPU : 0&quot;, &quot;/ device : GPU : 0&quot;</target>
        </trans-unit>
        <trans-unit id="d4ac88f59295503f9c7b56cb75965feada4c545d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;device&lt;/code&gt;&lt;/b&gt;: The &lt;code&gt;PhysicalDevice&lt;/code&gt; to configure.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;device&lt;/code&gt; &lt;/b&gt; :구성 할 &lt;code&gt;PhysicalDevice&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5309403f1cd129bd83ca587af1e584572b593215" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;device_assignment&lt;/code&gt;&lt;/b&gt;: If not &lt;code&gt;None&lt;/code&gt;, a &lt;code&gt;DeviceAssignment&lt;/code&gt; describing the mapping between logical cores in the computation with physical cores in the TPU topology. Uses a default device assignment if &lt;code&gt;None&lt;/code&gt;. The &lt;code&gt;DeviceAssignment&lt;/code&gt; may be omitted if each replica of the computation uses only one core, and there is either only one replica, or the number of replicas is equal to the number of cores in the TPU system.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;device_assignment&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;None&lt;/code&gt; 이 아닌 경우, TPU 토폴로지에서 물리적 코어를 사용한 계산에서 논리적 코어 간의 매핑을 설명하는 &lt;code&gt;DeviceAssignment&lt;/code&gt; 입니다. &lt;code&gt;None&lt;/code&gt; 이면 기본 장치 할당을 사용합니다. &lt;code&gt;DeviceAssignment&lt;/code&gt; 은 계산에서 사용하는 각 복제본 하나 개의 코어, 그리고 어느 하나 개의 복제가 또는 복제 수가 TPU 시스템에서의 코어의 개수와 동일한 경우 생략 될 수있다.</target>
        </trans-unit>
        <trans-unit id="4c85d94648befe6460d29da5e6f99f4ef073d7ba" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;device_assignment&lt;/code&gt;&lt;/b&gt;: If not &lt;code&gt;None&lt;/code&gt;, a &lt;code&gt;DeviceAssignment&lt;/code&gt; describing the mapping between logical cores in the computation with physical cores in the TPU topology. Uses a default device assignment if &lt;code&gt;None&lt;/code&gt;. The &lt;code&gt;DeviceAssignment&lt;/code&gt; may be omitted if each shard of the computation uses only one core, and there is either only one shard, or the number of shards is equal to the number of cores in the TPU system.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;device_assignment&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;None&lt;/code&gt; 이 아닌 경우, TPU 토폴로지에서 물리적 코어를 사용한 계산에서 논리적 코어 간의 매핑을 설명하는 &lt;code&gt;DeviceAssignment&lt;/code&gt; 입니다. &lt;code&gt;None&lt;/code&gt; 이면 기본 장치 할당을 사용합니다. &lt;code&gt;DeviceAssignment&lt;/code&gt; 은 연산의 각 샤드 단지 하나의 코어를 사용하고,이 하나 개의 파편이 하나, 또는 파편의 수가 TPU 시스템에서의 코어의 개수와 동일한 경우 생략 될 수있다.</target>
        </trans-unit>
        <trans-unit id="d6a83ae77a68a60df218ce215e1d7b96d8b18550" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;device_assignment&lt;/code&gt;&lt;/b&gt;: Optional &lt;a href=&quot;../../../../tpu/experimental/deviceassignment&quot;&gt;&lt;code&gt;tf.tpu.experimental.DeviceAssignment&lt;/code&gt;&lt;/a&gt; to specify the placement of replicas on the TPU cluster. Currently only supports the usecase of using a single core within a TPU cluster.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;device_assignment&lt;/code&gt; &lt;/b&gt; :TPU 클러스터에서 복제본의 배치를 지정하는선택적&lt;a href=&quot;../../../../tpu/experimental/deviceassignment&quot;&gt; &lt;code&gt;tf.tpu.experimental.DeviceAssignment&lt;/code&gt; &lt;/a&gt;현재 TPU 클러스터 내에서 단일 코어를 사용하는 유스 케이스 만 지원합니다.</target>
        </trans-unit>
        <trans-unit id="225c70697d6be362e6186a311b516ecd0602ce94" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;device_assignment&lt;/code&gt;&lt;/b&gt;: Optional &lt;a href=&quot;../../tpu/experimental/deviceassignment&quot;&gt;&lt;code&gt;tf.tpu.experimental.DeviceAssignment&lt;/code&gt;&lt;/a&gt; to specify the placement of replicas on the TPU cluster. Currently only supports the usecase of using a single core within a TPU cluster.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;device_assignment&lt;/code&gt; &lt;/b&gt; :TPU 클러스터에서 복제본의 배치를 지정하는선택적&lt;a href=&quot;../../tpu/experimental/deviceassignment&quot;&gt; &lt;code&gt;tf.tpu.experimental.DeviceAssignment&lt;/code&gt; &lt;/a&gt;현재 TPU 클러스터 내에서 단일 코어를 사용하는 유스 케이스 만 지원합니다.</target>
        </trans-unit>
        <trans-unit id="08188cfdebf5347eb67068f6d7ae0b0bb94c2e39" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;device_assignment&lt;/code&gt;&lt;/b&gt;: if not &lt;code&gt;None&lt;/code&gt;, a &lt;code&gt;DeviceAssignment&lt;/code&gt; describing the mapping between logical cores in the computation with physical cores in the TPU topology. May be omitted for a single-core computation, in which case the core attached to task 0, TPU device 0 is used.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;device_assignment&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;None&lt;/code&gt; 이 아닌 경우, TPU 토폴로지에서 물리적 코어를 사용한 계산에서 논리적 코어 간의 매핑을 설명하는 &lt;code&gt;DeviceAssignment&lt;/code&gt; 입니다. 단일 코어 계산에서는 생략 될 수 있으며,이 경우 태스크 0, TPU 장치 0에 연결된 코어가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ab7bf45b147ba1186b0af62a8f85c52228b1746f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;device_fn&lt;/code&gt;&lt;/b&gt;: A callable invoked for every &lt;code&gt;Operation&lt;/code&gt; that takes the &lt;code&gt;Operation&lt;/code&gt; and returns the device string. If &lt;code&gt;None&lt;/code&gt;, defaults to the device function returned by &lt;code&gt;tf.train.replica_device_setter&lt;/code&gt; with round-robin strategy.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;device_fn&lt;/code&gt; &lt;/b&gt; : 모든에 대해 호출 호출 가능한 &lt;code&gt;Operation&lt;/code&gt; 걸리는 &lt;code&gt;Operation&lt;/code&gt; 반환 장치 문자열입니다. 경우 &lt;code&gt;None&lt;/code&gt; , 장치 기능 디폴트는에 의해 반환 &lt;code&gt;tf.train.replica_device_setter&lt;/code&gt; 라운드 로빈 전략.</target>
        </trans-unit>
        <trans-unit id="af1611bdfb3fe3b12dded815f5499c08ae6130cf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;device_index&lt;/code&gt;&lt;/b&gt;: int. Optional device index. If left unspecified, device represents 'any' device_index.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;device_index&lt;/code&gt; &lt;/b&gt; : int. 선택적 장치 색인. 지정하지 않으면 device는 'any'device_index를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="998f70903f53f00e02e500c782ea9a8e1acc07a4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;device_name&lt;/code&gt;&lt;/b&gt;: The device name to use in the context.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;device_name&lt;/code&gt; &lt;/b&gt; : 컨텍스트에서 사용할 장치 이름입니다.</target>
        </trans-unit>
        <trans-unit id="a5d8ce9085396ec5afc16cfcb989087b5c9e8dd0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;device_name_or_function&lt;/code&gt;&lt;/b&gt;: The device name or function to use in the context.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;device_name_or_function&lt;/code&gt; &lt;/b&gt; : 컨텍스트에서 사용할 장치 이름 또는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="ffc296bef955eea5885c626a8fd8feddce6360e5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;device_policy&lt;/code&gt;&lt;/b&gt;: (Optional.) Policy controlling how operations requiring inputs on a specific device (e.g., a GPU 0) handle inputs on a different device (e.g. GPU 1 or CPU). When set to None, an appropriate value will be picked automatically. The value picked may change between TensorFlow releases. Valid values:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;device_policy&lt;/code&gt; &lt;/b&gt; : (선택 사항) 특정 장치 (예 : GPU 0)에서 입력이 필요한 작업이 다른 장치 (예 : GPU 1 또는 CPU)에서 입력을 처리하는 방법을 제어하는 ​​정책입니다. 없음으로 설정하면 적절한 값이 자동으로 선택됩니다. 선택된 값은 TensorFlow 릴리스간에 변경 될 수 있습니다. 유효한 값 :</target>
        </trans-unit>
        <trans-unit id="8d005a7ebbeab75aefd87b00b421b02287501e0f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;device_policy&lt;/code&gt;&lt;/b&gt;: A device policy. Valid values:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;device_policy&lt;/code&gt; &lt;/b&gt; : 장치 정책. 유효한 값 :</target>
        </trans-unit>
        <trans-unit id="053139e44f2490b755c2706510efdf23641a5f2f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;device_type&lt;/code&gt;&lt;/b&gt;: (optional string) Only include devices matching this device type. For example &quot;CPU&quot; or &quot;GPU&quot;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;device_type&lt;/code&gt; &lt;/b&gt; : (선택적 문자열)이 장치 유형과 일치하는 장치 만 포함하십시오. 예를 들어 &quot;CPU&quot;또는 &quot;GPU&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="896e1361f4fb056282d8e96fcb850d4e9182bb30" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;device_type&lt;/code&gt;&lt;/b&gt;: (optional) Only configure devices matching this device type. For example &quot;CPU&quot; or &quot;GPU&quot;. Other devices will be left unaltered.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;device_type&lt;/code&gt; &lt;/b&gt; : (선택 사항)이 장치 유형과 일치하는 장치 만 구성하십시오. 예를 들어 &quot;CPU&quot;또는 &quot;GPU&quot;입니다. 다른 장치는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="583971d9a6fd9cdca3dd9172106b475836f07650" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;device_type&lt;/code&gt;&lt;/b&gt;: Optional device type string (e.g. &quot;CPU&quot; or &quot;GPU&quot;)</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;device_type&lt;/code&gt; &lt;/b&gt; : 선택적 장치 유형 문자열 (예 : &quot;CPU&quot;또는 &quot;GPU&quot;)</target>
        </trans-unit>
        <trans-unit id="c880703af6cef34249e701be9080e0b83cde47f4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;device_type&lt;/code&gt;&lt;/b&gt;: String declaring the type of device such as &quot;CPU&quot; or &quot;GPU&quot;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;device_type&lt;/code&gt; &lt;/b&gt; : &quot;CPU&quot;또는 &quot;GPU&quot;와 같은 장치 유형을 선언하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="4699345770522f0f466f3d4e48f0099e00ef882a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;device_type&lt;/code&gt;&lt;/b&gt;: The type of the device (e.g. &lt;code&gt;CPU&lt;/code&gt;, &lt;code&gt;GPU&lt;/code&gt;, &lt;code&gt;TPU&lt;/code&gt;.)</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;device_type&lt;/code&gt; &lt;/b&gt; : 장치의 유형 (예 : &lt;code&gt;CPU&lt;/code&gt; , &lt;code&gt;GPU&lt;/code&gt; , &lt;code&gt;TPU&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b0845aaa546a23db3aa6f5cba2053893306fd6f0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;devices&lt;/code&gt;&lt;/b&gt;: List of &lt;code&gt;PhysicalDevice&lt;/code&gt;s to make visible</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;devices&lt;/code&gt; &lt;/b&gt; :표시 할 &lt;code&gt;PhysicalDevice&lt;/code&gt; 목록</target>
        </trans-unit>
        <trans-unit id="b98a5fa7ddda6326c703812c8ade262f983f518f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;devices&lt;/code&gt;&lt;/b&gt;: a list of device strings. If &lt;code&gt;None&lt;/code&gt;, all available GPUs are used. If no GPUs are found, CPU is used.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;devices&lt;/code&gt; &lt;/b&gt; : 장치 문자열 목록. 경우 &lt;code&gt;None&lt;/code&gt; , 사용 가능한 모든 GPU가 사용됩니다. GPU가 없으면 CPU가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="427c5ab0b6c1234432d765c0b6f7f1e09b0e5463" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;df&lt;/code&gt;&lt;/b&gt;: Floating-point &lt;code&gt;Tensor&lt;/code&gt;. The degrees of freedom of the distribution(s). &lt;code&gt;df&lt;/code&gt; must contain only positive values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;df&lt;/code&gt; &lt;/b&gt; : 부동 소수점 &lt;code&gt;Tensor&lt;/code&gt; . 분포의 자유도입니다. &lt;code&gt;df&lt;/code&gt; 는 양수 값만 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="b5fc1c6d33eb153f0c016f2d252837ede8ff5c0e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;df_data&lt;/code&gt;&lt;/b&gt;: An array of document frequency data. Only necessary if the layer output_mode is TFIDF.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;df_data&lt;/code&gt; &lt;/b&gt; : 문서 빈도 데이터의 배열입니다. output_mode 레이어가 TFIDF 인 경우에만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="551282e03af01cd1bc705b256a4dcbc0178ec8a3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;diag&lt;/code&gt;&lt;/b&gt;: Shape &lt;code&gt;[B1,...,Bb, N]&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; with &lt;code&gt;b &amp;gt;= 0&lt;/code&gt;&lt;code&gt;N &amp;gt;= 0&lt;/code&gt;. The diagonal of the operator. Allowed dtypes: &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;diag&lt;/code&gt; &lt;/b&gt; : 형태 &lt;code&gt;[B1,...,Bb, N]&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 와 &lt;code&gt;b &amp;gt;= 0&lt;/code&gt; &lt;code&gt;N &amp;gt;= 0&lt;/code&gt; . 연산자의 대각선입니다. 허용 dtypes : &lt;code&gt;float16&lt;/code&gt; 과 , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; , &lt;code&gt;complex128&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e84dddd46b41caf48f6469aa56b5346b35f3082a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;diag_part&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of same &lt;code&gt;dtype&lt;/code&gt; as self.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;diag_part&lt;/code&gt; &lt;/b&gt; :self와 같은 &lt;code&gt;dtype&lt;/code&gt; 의 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f2a31c02c4c19b52dc50f7a2c50f65dbccd0b0c7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;diag_update&lt;/code&gt;&lt;/b&gt;: Optional shape &lt;code&gt;[B1,...,Bb, K]&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; with same &lt;code&gt;dtype&lt;/code&gt; as &lt;code&gt;base_operator&lt;/code&gt;. This is the diagonal of &lt;code&gt;D&lt;/code&gt; above. Defaults to &lt;code&gt;D&lt;/code&gt; being the identity operator.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;diag_update&lt;/code&gt; &lt;/b&gt; : 선택 형상 &lt;code&gt;[B1,...,Bb, K]&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 동일와 &lt;code&gt;dtype&lt;/code&gt; 같은 &lt;code&gt;base_operator&lt;/code&gt; . 이것은위의 &lt;code&gt;D&lt;/code&gt; 의 대각선입니다. ID 연산자 인기본값은 &lt;code&gt;D&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5953dacd9cf2090babf22153487842d69b59d705" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;diagonal&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; with &lt;code&gt;rank k &amp;gt;= 1&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;diagonal&lt;/code&gt; &lt;/b&gt; 하십시오 &lt;code&gt;Tensor&lt;/code&gt; 와 &lt;code&gt;rank k &amp;gt;= 1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57e8e2ddf284291ef0e015e19e8c8adcdf0a2b7f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;diagonal&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; with rank &lt;code&gt;k&lt;/code&gt;, when &lt;code&gt;d_lower == d_upper&lt;/code&gt;, or &lt;code&gt;k + 1&lt;/code&gt;, otherwise. &lt;code&gt;k &amp;gt;= 1&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;diagonal&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;d_lower == d_upper&lt;/code&gt; 일때순위가 &lt;code&gt;k&lt;/code&gt; 인 &lt;code&gt;Tensor&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;k + 1&lt;/code&gt; 입니다. &lt;code&gt;k &amp;gt;= 1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4766f08ab4ba19abb65342c9b1514637bb931fad" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;diagonal&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. Rank k tensor where k is at most 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;diagonal&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . 다음 유형 중 하나 여야합니다 &lt;code&gt;bfloat16&lt;/code&gt; , &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; , &lt;code&gt;complex128&lt;/code&gt; 을 . k가 최대 1 인 k 텐서 순위</target>
        </trans-unit>
        <trans-unit id="51d0dbba73064613ba291c5bbb4fa660a9e7c1d4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;diagonals&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; or tuple of &lt;code&gt;Tensor&lt;/code&gt;s describing left-hand sides. The shape depends of &lt;code&gt;diagonals_format&lt;/code&gt;, see description above. Must be &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, or &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;diagonals&lt;/code&gt; &lt;/b&gt; :왼쪽을 &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 또는 Tensor 튜플입니다. 모양은 &lt;code&gt;diagonals_format&lt;/code&gt; 따라 달라집니다 (위의 설명 참조). 여야 &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; , 또는 &lt;code&gt;complex128&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="9ef5e9e1dd4f548b04c85bf131c8f387e56bd9b8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;diagonals_format&lt;/code&gt;&lt;/b&gt;: one of &lt;code&gt;matrix&lt;/code&gt;, &lt;code&gt;sequence&lt;/code&gt;, or &lt;code&gt;compact&lt;/code&gt;. Default is &lt;code&gt;compact&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;diagonals_format&lt;/code&gt; &lt;/b&gt; _ 형식 : &lt;code&gt;matrix&lt;/code&gt; , &lt;code&gt;sequence&lt;/code&gt; 또는 &lt;code&gt;compact&lt;/code&gt; 중 하나입니다. 기본값은 &lt;code&gt;compact&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="ea9feb3c54447928cc14f298cc0060f15371769a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;diagonals_format&lt;/code&gt;&lt;/b&gt;: one of &lt;code&gt;sequence&lt;/code&gt;, or &lt;code&gt;compact&lt;/code&gt;. Default is &lt;code&gt;compact&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;diagonals_format&lt;/code&gt; &lt;/b&gt; _ 형식 : &lt;code&gt;sequence&lt;/code&gt; 중 하나또는 &lt;code&gt;compact&lt;/code&gt; 합니다. 기본값은 &lt;code&gt;compact&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="8d7004d83307f8200087a8cbae71729c03227290" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilation_rate&lt;/code&gt;&lt;/b&gt;: A single integer, specifying the dilation rate to use for dilated convolution. Currently, specifying any &lt;code&gt;dilation_rate&lt;/code&gt; value != 1 is incompatible with specifying any stride value != 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilation_rate&lt;/code&gt; &lt;/b&gt; : 확장 된 회선에 사용할 확장 속도를 지정하는 단일 정수입니다. 현재 &lt;code&gt;dilation_rate&lt;/code&gt; 값! = 1을 지정하면 보폭 값! = 1을 지정하는 것과 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b32ad4c0a8dcbf08adc15f153655fd5bfd60f0e7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilation_rate&lt;/code&gt;&lt;/b&gt;: An integer or tuple/list of 2 integers, specifying the dilation rate to use for dilated convolution. Can be a single integer to specify the same value for all spatial dimensions. Currently, specifying any &lt;code&gt;dilation_rate&lt;/code&gt; value != 1 is incompatible with specifying any stride value != 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilation_rate&lt;/code&gt; &lt;/b&gt; : 확장 컨볼 루션에 사용할 확장 비율을 지정하는 정수 또는 튜플 / 2 개의 정수 목록입니다. 모든 공간 치수에 대해 동일한 값을 지정하는 단일 정수일 수 있습니다. 현재 &lt;code&gt;dilation_rate&lt;/code&gt; 값! = 1을 지정하면 보폭 값! = 1을 지정하는 것과 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5224f7572fe25fec079393b27577d3fa6c6db273" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilation_rate&lt;/code&gt;&lt;/b&gt;: An integer or tuple/list of 2 integers, specifying the dilation rate to use for dilated convolution. Currently, specifying any &lt;code&gt;dilation_rate&lt;/code&gt; value != 1 is incompatible with specifying any &lt;code&gt;strides&lt;/code&gt; value != 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilation_rate&lt;/code&gt; &lt;/b&gt; : 확장 컨볼 루션에 사용할 확장 비율을 지정하는 정수 또는 튜플 / 2 개의 정수 목록입니다. 현재 &lt;code&gt;dilation_rate&lt;/code&gt; 값! = 1을 지정하면 &lt;code&gt;strides&lt;/code&gt; 값! = 1을 지정하는 것과 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="359ff911f1bd8da2d470dea2e40abcf9d49e003d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilation_rate&lt;/code&gt;&lt;/b&gt;: An integer or tuple/list of 3 integers, specifying the dilation rate to use for dilated convolution. Can be a single integer to specify the same value for all spatial dimensions. Currently, specifying any &lt;code&gt;dilation_rate&lt;/code&gt; value != 1 is incompatible with specifying any stride value != 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilation_rate&lt;/code&gt; &lt;/b&gt; : 확장 컨볼 루션에 사용할 확장 속도를 지정하는 정수 또는 튜플 / 3 개의 정수 목록입니다. 모든 공간 치수에 대해 동일한 값을 지정하는 단일 정수일 수 있습니다. 현재 &lt;code&gt;dilation_rate&lt;/code&gt; 값! = 1을 지정하면 보폭 값! = 1을 지정하는 것과 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c5ea620921c97985095cfca11c75ee8e1c0dbdf4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilation_rate&lt;/code&gt;&lt;/b&gt;: An integer or tuple/list of a single integer, specifying the dilation rate to use for dilated convolution. Currently, specifying any &lt;code&gt;dilation_rate&lt;/code&gt; value != 1 is incompatible with specifying any &lt;code&gt;strides&lt;/code&gt; value != 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilation_rate&lt;/code&gt; &lt;/b&gt; : 확장 컨볼 루션에 사용할 확장 속도를 지정하는 단일 정수의 정수 또는 튜플 / 목록입니다. 현재 &lt;code&gt;dilation_rate&lt;/code&gt; 값! = 1을 지정하면 &lt;code&gt;strides&lt;/code&gt; 값! = 1을 지정하는 것과 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="40c47513757f7f1631920103e80de102fb58638d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilation_rate&lt;/code&gt;&lt;/b&gt;: An integer or tuple/list of n integers, specifying the dilation rate to use for dilated convolution. Currently, specifying any &lt;code&gt;dilation_rate&lt;/code&gt; value != 1 is incompatible with specifying any &lt;code&gt;strides&lt;/code&gt; value != 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilation_rate&lt;/code&gt; &lt;/b&gt; : 확장 된 회선에 사용할 확장 속도를 지정하는 정수 또는 튜플 / n 정수 목록입니다. 현재 &lt;code&gt;dilation_rate&lt;/code&gt; 값! = 1을 지정하면 &lt;code&gt;strides&lt;/code&gt; 값! = 1을 지정하는 것과 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9404814403fd9ffd3809c089ba060862cb1f15c8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilation_rate&lt;/code&gt;&lt;/b&gt;: Optional. Dilation rate. List of N ints &amp;gt;= 1. Defaults to [1]*N. If any value of dilation_rate is &amp;gt; 1, then all values of strides must be 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilation_rate&lt;/code&gt; &lt;/b&gt; : 선택 사항. 팽창률. N ints의 목록&amp;gt; = 1. 기본값은 [1] * N입니다. dilation_rate의 값이 1보다 크면 모든 보폭 값은 1이어야합니다.</target>
        </trans-unit>
        <trans-unit id="1e9fd38be5c082a228772a82f36864d38d053ba5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilation_rate&lt;/code&gt;&lt;/b&gt;: Optional. Sequence of N ints &amp;gt;= 1. Specifies the filter upsampling/input downsampling rate. In the literature, the same parameter is sometimes called &lt;code&gt;input stride&lt;/code&gt; or &lt;code&gt;dilation&lt;/code&gt;. The effective filter size used for the convolution will be &lt;code&gt;spatial_filter_shape + (spatial_filter_shape - 1) * (rate - 1)&lt;/code&gt;, obtained by inserting (dilation_rate[i]-1) zeros between consecutive elements of the original filter in each spatial dimension i. If any value of dilation_rate is &amp;gt; 1, then all values of strides must be 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilation_rate&lt;/code&gt; &lt;/b&gt; : 선택 사항. N ints&amp;gt; = 1의 순서. 필터 업 샘플링 / 입력 다운 샘플링 속도를 지정합니다. 문헌에서 동일한 매개 변수를 &lt;code&gt;input stride&lt;/code&gt; 또는 &lt;code&gt;dilation&lt;/code&gt; 이라고도 합니다 . 컨벌루션에 사용되는 유효 필터 크기는 각 공간 차원 i에서 원래 필터의 연속 요소 사이에 (dilation_rate [i] -1) 0을 삽입하여 얻은 &lt;code&gt;spatial_filter_shape + (spatial_filter_shape - 1) * (rate - 1)&lt;/code&gt; 입니다. dilation_rate의 값이 1보다 크면 모든 보폭 값은 1이어야합니다.</target>
        </trans-unit>
        <trans-unit id="974514ebb376e4c9ea58897618bd694fab02a224" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilation_rate&lt;/code&gt;&lt;/b&gt;: Tuple of 2 integers.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilation_rate&lt;/code&gt; &lt;/b&gt; : 2 정수의 튜플.</target>
        </trans-unit>
        <trans-unit id="093c83a463028d88ad129727bffed31a49a4061e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilation_rate&lt;/code&gt;&lt;/b&gt;: an integer or tuple/list of 2 integers, specifying the dilation rate to use for dilated convolution. Can be a single integer to specify the same value for all spatial dimensions. Currently, specifying any &lt;code&gt;dilation_rate&lt;/code&gt; value != 1 is incompatible with specifying any stride value != 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilation_rate&lt;/code&gt; &lt;/b&gt; : 확장 컨볼 루션에 사용할 확장 비율을 지정하는 정수 또는 튜플 / 2 개의 정수 목록입니다. 모든 공간 치수에 대해 동일한 값을 지정하는 단일 정수일 수 있습니다. 현재 &lt;code&gt;dilation_rate&lt;/code&gt; 값! = 1을 지정하면 보폭 값! = 1을 지정하는 것과 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="061e90e1d60495d7cd51ec86da9f2da6593b5147" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilation_rate&lt;/code&gt;&lt;/b&gt;: an integer or tuple/list of 3 integers, specifying the dilation rate to use for dilated convolution. Can be a single integer to specify the same value for all spatial dimensions. Currently, specifying any &lt;code&gt;dilation_rate&lt;/code&gt; value != 1 is incompatible with specifying any stride value != 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilation_rate&lt;/code&gt; &lt;/b&gt; : 확장 컨볼 루션에 사용할 확장 속도를 지정하는 정수 또는 튜플 / 3 개의 정수 목록입니다. 모든 공간 치수에 대해 동일한 값을 지정하는 단일 정수일 수 있습니다. 현재 &lt;code&gt;dilation_rate&lt;/code&gt; 값! = 1을 지정하면 보폭 값! = 1을 지정하는 것과 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3bdd2f3e3f12d0bf51201edaf98327871636ee8f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilation_rate&lt;/code&gt;&lt;/b&gt;: an integer or tuple/list of a single integer, specifying the dilation rate to use for dilated convolution. Currently, specifying any &lt;code&gt;dilation_rate&lt;/code&gt; value != 1 is incompatible with specifying any &lt;code&gt;strides&lt;/code&gt; value != 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilation_rate&lt;/code&gt; &lt;/b&gt; : 확장 컨볼 루션에 사용할 확장 속도를 지정하는 단일 정수의 정수 또는 튜플 / 목록입니다. 현재 &lt;code&gt;dilation_rate&lt;/code&gt; 값! = 1을 지정하면 &lt;code&gt;strides&lt;/code&gt; 값! = 1을 지정하는 것과 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cae28682dcf110527a47e8de3897654cdcf7cb64" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilation_rate&lt;/code&gt;&lt;/b&gt;: int32 Tensor of &lt;em&gt;known&lt;/em&gt; shape [num_spatial_dims].</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilation_rate&lt;/code&gt; &lt;/b&gt; : int32&lt;em&gt; 알려진&lt;/em&gt; 모양의텐서[num_spatial_dims].</target>
        </trans-unit>
        <trans-unit id="1d8d82e0f6aba59c41ad1699373eea7e17c65476" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilation_rate&lt;/code&gt;&lt;/b&gt;: integer dilate rate.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilation_rate&lt;/code&gt; &lt;/b&gt; : 정수 확장 비율.</target>
        </trans-unit>
        <trans-unit id="3227bf10667dee5dc5bc2d9603970e04bc030f5b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilation_rate&lt;/code&gt;&lt;/b&gt;: tuple of 2 integers.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilation_rate&lt;/code&gt; &lt;/b&gt; : 2 정수의 튜플.</target>
        </trans-unit>
        <trans-unit id="87601914a34e469c992d2601ff2c93676ccb1862" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilation_rate&lt;/code&gt;&lt;/b&gt;: tuple of 3 integers.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilation_rate&lt;/code&gt; &lt;/b&gt; : 3 정수의 튜플.</target>
        </trans-unit>
        <trans-unit id="2967f6333e6baed99a5c2c14238668729671f0c3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilation_rate&lt;/code&gt;&lt;/b&gt;: tuple of integers, dilation rates for the separable convolution.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilation_rate&lt;/code&gt; &lt;/b&gt; : 정수의 튜플, 분리 가능한 회선의 확장 속도.</target>
        </trans-unit>
        <trans-unit id="2873bec0a6788212a8ed09a1a28da426cc174e6c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilations&lt;/code&gt;&lt;/b&gt;: 1-D of size 2. The dilation rate in which we sample input values across the &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; dimensions in atrous convolution. If it is greater than 1, then all values of strides must be 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilations&lt;/code&gt; &lt;/b&gt; : 1-D of size 2. 팽창컨볼 루션에서 &lt;code&gt;height&lt;/code&gt; 와 &lt;code&gt;width&lt;/code&gt; 치수에걸쳐 입력 값을 샘플링하는 팽창 속도. 1보다 크면 모든 보폭 값은 1이어야합니다.</target>
        </trans-unit>
        <trans-unit id="ebb59b8b0f7887601c609f4d1a8005f9afbb7eaf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilations&lt;/code&gt;&lt;/b&gt;: A list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 4&lt;/code&gt;. 1-D of length 4. The input stride for atrous morphological dilation. Must be: &lt;code&gt;[1, rate_height, rate_width, 1]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilations&lt;/code&gt; &lt;/b&gt; :길이가 &lt;code&gt;&amp;gt;= 4&lt;/code&gt; &lt;code&gt;ints&lt;/code&gt; 목록. 길이가 1-D 인 경우 4. 형태 학적 팽창을위한 입력 보폭. &lt;code&gt;[1, rate_height, rate_width, 1]&lt;/code&gt; 이어야합니다.</target>
        </trans-unit>
        <trans-unit id="a9518ddbed2bfb59434141ed09ffb21787f3d802" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilations&lt;/code&gt;&lt;/b&gt;: A list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 4&lt;/code&gt;. The input stride for atrous morphological dilation. Must be: &lt;code&gt;[1, rate_height, rate_width, 1]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilations&lt;/code&gt; &lt;/b&gt; :길이가 &lt;code&gt;&amp;gt;= 4&lt;/code&gt; &lt;code&gt;ints&lt;/code&gt; 목록. 강력한 형태 학적 확장을위한 입력 보폭. &lt;code&gt;[1, rate_height, rate_width, 1]&lt;/code&gt; 이어야합니다.</target>
        </trans-unit>
        <trans-unit id="514e83f2e85353a931ee020926e5bed7ebf5bbd3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilations&lt;/code&gt;&lt;/b&gt;: Alias for dilation_rate</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilations&lt;/code&gt; &lt;/b&gt; :&lt;b&gt; dilation_rate의&lt;/b&gt; 별명</target>
        </trans-unit>
        <trans-unit id="e61d76acba71a5cdf5fea7cd681602bc0e150267" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilations&lt;/code&gt;&lt;/b&gt;: Alias of dilation_rate.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilations&lt;/code&gt; &lt;/b&gt; :&lt;b&gt; dilation_rate의&lt;/b&gt; 별칭.</target>
        </trans-unit>
        <trans-unit id="eb189995251431cba282e100becebd7a23a8e519" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilations&lt;/code&gt;&lt;/b&gt;: Alias of rate.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilations&lt;/code&gt; &lt;/b&gt; : 속도의 별칭.</target>
        </trans-unit>
        <trans-unit id="0a7f1d5ab03ae73994ec4828650d06aff9a5250e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilations&lt;/code&gt;&lt;/b&gt;: An int or list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;3&lt;/code&gt; which defaults to 1. The dilation factor for each dimension of input. If set to k &amp;gt; 1, there will be k-1 skipped cells between each filter element on that dimension. Dilations in the batch and depth dimensions must be 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilations&lt;/code&gt; &lt;/b&gt; :길이가 &lt;code&gt;1&lt;/code&gt; 또는 &lt;code&gt;3&lt;/code&gt; 이고 기본값이 1 인 &lt;code&gt;ints&lt;/code&gt; 또는 정수 목록입니다. 각 입력 차원에 대한 팽창 계수입니다. k&amp;gt; 1로 설정하면 해당 차원의 각 필터 요소 사이에 k-1 건너 뛴 셀이 있습니다. 배치 및 깊이 치수의 팽창은 1이어야합니다.</target>
        </trans-unit>
        <trans-unit id="50ddf989253c3e81894378d96f5b317a753873c6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilations&lt;/code&gt;&lt;/b&gt;: An int or list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt; or &lt;code&gt;4&lt;/code&gt;, defaults to 1. The dilation factor for each dimension of&lt;code&gt;input&lt;/code&gt;. If a single value is given it is replicated in the &lt;code&gt;H&lt;/code&gt; and &lt;code&gt;W&lt;/code&gt; dimension. By default the &lt;code&gt;N&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; dimensions are set to 1. If set to k &amp;gt; 1, there will be k-1 skipped cells between each filter element on that dimension. The dimension order is determined by the value of &lt;code&gt;data_format&lt;/code&gt;, see above for details. Dilations in the batch and depth dimensions if a 4-d tensor must be 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilations&lt;/code&gt; &lt;/b&gt; : 지능 또는 목록 &lt;code&gt;ints&lt;/code&gt; 길이를 갖는 &lt;code&gt;1&lt;/code&gt; , &lt;code&gt;2&lt;/code&gt; 또는 &lt;code&gt;4&lt;/code&gt; 의 각 차원에 대해 1로 디폴트가 팽창 계수 &lt;code&gt;input&lt;/code&gt; . 단일 값이 제공되면 &lt;code&gt;H&lt;/code&gt; 및 &lt;code&gt;W&lt;/code&gt; 차원에복제됩니다. 기본적으로 &lt;code&gt;N&lt;/code&gt; 및 &lt;code&gt;C&lt;/code&gt; 치수는 1로 설정됩니다. k&amp;gt; 1로 설정하면 해당 치수의 각 필터 요소 사이에 k-1 건너 뛴 셀이 있습니다. 차원 순서는 &lt;code&gt;data_format&lt;/code&gt; 값에 의해 결정됩니다. 자세한 내용은 위를 참조하십시오. 4 차원 텐서가 1이어야하는 경우 배치 및 깊이 치수의 팽창</target>
        </trans-unit>
        <trans-unit id="add5bf5b1ab30836607e1bb10a928a2e907720fe" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilations&lt;/code&gt;&lt;/b&gt;: An int or list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt; or &lt;code&gt;5&lt;/code&gt;, defaults to 1. The dilation factor for each dimension of&lt;code&gt;input&lt;/code&gt;. If a single value is given it is replicated in the &lt;code&gt;D&lt;/code&gt;, &lt;code&gt;H&lt;/code&gt; and &lt;code&gt;W&lt;/code&gt; dimension. By default the &lt;code&gt;N&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; dimensions are set to 1. If set to k &amp;gt; 1, there will be k-1 skipped cells between each filter element on that dimension. The dimension order is determined by the value of &lt;code&gt;data_format&lt;/code&gt;, see above for details. Dilations in the batch and depth dimensions if a 5-d tensor must be 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilations&lt;/code&gt; &lt;/b&gt; : 지능 또는 목록 &lt;code&gt;ints&lt;/code&gt; 길이를 갖는 &lt;code&gt;1&lt;/code&gt; , &lt;code&gt;3&lt;/code&gt; 또는 &lt;code&gt;5&lt;/code&gt; 의 각 차원에 대해 1로 디폴트가 팽창 계수 &lt;code&gt;input&lt;/code&gt; . 단일 값이 제공되면 &lt;code&gt;D&lt;/code&gt; , &lt;code&gt;H&lt;/code&gt; 및 &lt;code&gt;W&lt;/code&gt; 차원에복제됩니다. 기본적으로 &lt;code&gt;N&lt;/code&gt; 및 &lt;code&gt;C&lt;/code&gt; 치수는 1로 설정됩니다. k&amp;gt; 1로 설정하면 해당 치수의 각 필터 요소 사이에 k-1 건너 뛴 셀이 있습니다. 차원 순서는 &lt;code&gt;data_format&lt;/code&gt; 값에 의해 결정됩니다. 자세한 내용은 위를 참조하십시오. 5 차원 텐서가 1이어야하는 경우 배치 및 깊이 치수의 팽창</target>
        </trans-unit>
        <trans-unit id="615ee38a331d27730da35efd09414a378a20cc9c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilations&lt;/code&gt;&lt;/b&gt;: An int or list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;N&lt;/code&gt; or &lt;code&gt;N+2&lt;/code&gt;, defaults to 1. The dilation factor for each dimension of&lt;code&gt;input&lt;/code&gt;. If a single value is given it is replicated in the spatial dimensions. By default the &lt;code&gt;N&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; dimensions are set to 1. If set to k &amp;gt; 1, there will be k-1 skipped cells between each filter element on that dimension. The dimension order is determined by the value of &lt;code&gt;data_format&lt;/code&gt;, see above for details.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilations&lt;/code&gt; &lt;/b&gt; :는 INT 또는 목록 &lt;code&gt;ints&lt;/code&gt; 길이를 갖는 &lt;code&gt;1&lt;/code&gt; , &lt;code&gt;N&lt;/code&gt; 또는 &lt;code&gt;N+2&lt;/code&gt; , 각 차원에 대해 1로 디폴트 팽창 시킴 계수 &lt;code&gt;input&lt;/code&gt; . 단일 값이 제공되면 공간 차원으로 복제됩니다. 기본적으로 &lt;code&gt;N&lt;/code&gt; 및 &lt;code&gt;C&lt;/code&gt; 치수는 1로 설정됩니다. k&amp;gt; 1로 설정하면 해당 치수의 각 필터 요소 사이에 k-1 건너 뛴 셀이 있습니다. 차원 순서는 &lt;code&gt;data_format&lt;/code&gt; 값에 의해 결정됩니다. 자세한 내용은 위를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3f9599c4850b5a46f5ea5d256e4d471486257709" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilations&lt;/code&gt;&lt;/b&gt;: An optional list of &lt;code&gt;ints&lt;/code&gt;. Defaults to &lt;code&gt;[1, 1, 1, 1, 1]&lt;/code&gt;. 1-D tensor of length 5. The dilation factor for each dimension of &lt;code&gt;input&lt;/code&gt;. If set to k &amp;gt; 1, there will be k-1 skipped cells between each filter element on that dimension. The dimension order is determined by the value of &lt;code&gt;data_format&lt;/code&gt;, see above for details. Dilations in the batch and depth dimensions must be 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilations&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;ints&lt;/code&gt; 의 선택적 목록. 기본값은 &lt;code&gt;[1, 1, 1, 1, 1]&lt;/code&gt; 입니다. 길이의 1 차원 텐서 5. &lt;code&gt;input&lt;/code&gt; 각 차원에 대한 팽창 계수. k&amp;gt; 1로 설정하면 해당 차원의 각 필터 요소 사이에 k-1 건너 뛴 셀이 있습니다. 차원 순서는 &lt;code&gt;data_format&lt;/code&gt; 값에 의해 결정됩니다. 자세한 내용은 위를 참조하십시오. 배치 및 깊이 치수의 팽창은 1이어야합니다.</target>
        </trans-unit>
        <trans-unit id="2d24e41163216314930518194eb80280adc9c207" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilations&lt;/code&gt;&lt;/b&gt;: An optional list of &lt;code&gt;ints&lt;/code&gt;. Defaults to &lt;code&gt;[1, 1, 1, 1]&lt;/code&gt;. 1-D tensor of length 4. The dilation factor for each dimension of &lt;code&gt;input&lt;/code&gt;. If set to k &amp;gt; 1, there will be k-1 skipped cells between each filter element on that dimension. The dimension order is determined by the value of &lt;code&gt;data_format&lt;/code&gt;, see above for details. Dilations in the batch and depth dimensions must be 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilations&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;ints&lt;/code&gt; 의 선택적 목록. 기본값은 &lt;code&gt;[1, 1, 1, 1]&lt;/code&gt; 입니다. 길이의 1 차원 텐서 4. &lt;code&gt;input&lt;/code&gt; 각 차원에 대한 팽창 계수. k&amp;gt; 1로 설정하면 해당 차원의 각 필터 요소 사이에 k-1 건너 뛴 셀이 있습니다. 차원 순서는 &lt;code&gt;data_format&lt;/code&gt; 값에 의해 결정됩니다. 자세한 내용은 위를 참조하십시오. 배치 및 깊이 치수의 팽창은 1이어야합니다.</target>
        </trans-unit>
        <trans-unit id="9b56d084c304502f9b48cf4dd7c81aa5d8e92c17" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilations&lt;/code&gt;&lt;/b&gt;: Optional. Dilation rate. List of N ints &amp;gt;= 1. Defaults to [1]*N. If any value of dilation_rate is &amp;gt; 1, then all values of strides must be 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilations&lt;/code&gt; &lt;/b&gt; : 선택 사항. 팽창률. N ints의 목록&amp;gt; = 1. 기본값은 [1] * N입니다. dilation_rate의 값이 1보다 크면 모든 보폭 값은 1이어야합니다.</target>
        </trans-unit>
        <trans-unit id="367767f2ae3da5f6e3111009f80a254356b53e9f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dilations&lt;/code&gt;&lt;/b&gt;: Optional. Sequence of N ints &amp;gt;= 1. Specifies the filter upsampling/input downsampling rate. In the literature, the same parameter is sometimes called &lt;code&gt;input stride&lt;/code&gt; or &lt;code&gt;dilation&lt;/code&gt;. The effective filter size used for the convolution will be &lt;code&gt;spatial_filter_shape + (spatial_filter_shape - 1) * (rate - 1)&lt;/code&gt;, obtained by inserting (dilation_rate[i]-1) zeros between consecutive elements of the original filter in each spatial dimension i. If any value of dilation_rate is &amp;gt; 1, then all values of strides must be 1.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dilations&lt;/code&gt; &lt;/b&gt; : 선택 사항. N ints&amp;gt; = 1의 순서. 필터 업 샘플링 / 입력 다운 샘플링 속도를 지정합니다. 문헌에서 동일한 매개 변수를 &lt;code&gt;input stride&lt;/code&gt; 또는 &lt;code&gt;dilation&lt;/code&gt; 이라고도 합니다 . 컨벌루션에 사용되는 유효 필터 크기는 각 공간 차원 i에서 원래 필터의 연속 요소 사이에 (dilation_rate [i] -1) 0을 삽입하여 얻은 &lt;code&gt;spatial_filter_shape + (spatial_filter_shape - 1) * (rate - 1)&lt;/code&gt; 입니다. dilation_rate의 값이 1보다 크면 모든 보폭 값은 1이어야합니다.</target>
        </trans-unit>
        <trans-unit id="e214f8a544e8e1fe016633288e42ed07c3635677" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dim&lt;/code&gt;&lt;/b&gt;: 0-D (scalar). Equivalent to &lt;code&gt;axis&lt;/code&gt;, to be deprecated.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dim&lt;/code&gt; &lt;/b&gt; : 0-D (스칼라). 사용되지 않는 &lt;code&gt;axis&lt;/code&gt; 와 같습니다.</target>
        </trans-unit>
        <trans-unit id="ec03ac65f32e20004d2afc7771df95b171cb0f85" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dim&lt;/code&gt;&lt;/b&gt;: Deprecated alias for &lt;code&gt;axis&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dim&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;axis&lt;/code&gt; 대해 사용되지 않는 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="8ffec3b8bd37fb681229d161b61c45bd8efec9d3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dim&lt;/code&gt;&lt;/b&gt;: Deprecated alias for axis.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dim&lt;/code&gt; &lt;/b&gt; : 축에 사용되지 않는 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="716cbd495e37a649d7bf5d85729b15f9ad432858" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dim&lt;/code&gt;&lt;/b&gt;: The class dimension. Defaulted to -1 which is the last dimension.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dim&lt;/code&gt; &lt;/b&gt; : 클래스 차원입니다. 마지막 차원 인 -1로 기본 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="abea02575e5c0184dc0ca37031fc3c0a3d9baa0e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dim&lt;/code&gt;&lt;/b&gt;: The dimension along which the cosine distance is computed.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dim&lt;/code&gt; &lt;/b&gt; : 코사인 거리가 계산되는 치수입니다.</target>
        </trans-unit>
        <trans-unit id="cc31e830c5bce74e3baa391856300ac296139e63" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dim&lt;/code&gt;&lt;/b&gt;: The old (deprecated) name for &lt;code&gt;axis&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dim&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;axis&lt;/code&gt; 의 오래된 (더 이상 사용되지 않는) 이름입니다.</target>
        </trans-unit>
        <trans-unit id="d0c7b2326c54845d48208449b855da40af75a77b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dimension&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. int32 or int64, must be in the range &lt;code&gt;[-rank(input), rank(input))&lt;/code&gt;. Describes which dimension of the input Tensor to reduce across. For vectors, use dimension = 0.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dimension&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; 유형 중 하나 여야합니다. int32 또는 int64는 &lt;code&gt;[-rank(input), rank(input))&lt;/code&gt; 범위에 있어야합니다. 입력 텐서의 어느 치수를 축소해야하는지 설명합니다. 벡터의 경우 차원 = 0을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1e29a711fa5aeefa93baba92f66879d212b46b45" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dimension&lt;/code&gt;&lt;/b&gt;: An integer specifying dimension of the embedding, must be &amp;gt; 0.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dimension&lt;/code&gt; &lt;/b&gt; : 포함의 차원을 지정하는 정수는 0보다 커야합니다.</target>
        </trans-unit>
        <trans-unit id="c90cf02e1ebf534460b9b5843a33cb654d8f0467" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dimension&lt;/code&gt;&lt;/b&gt;: Either a &lt;code&gt;Dimension&lt;/code&gt; instance, an integer, or None.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dimension&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Dimension&lt;/code&gt; 인스턴스, 정수 또는 None입니다.</target>
        </trans-unit>
        <trans-unit id="8d4fb25f2dd992cd93f669d164bd2e471bad672e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dims&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1-D. Represents the shape of the output tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dims&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; 유형 중 하나 여야합니다. 1D. 출력 텐서의 모양을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="794c368a599275ed0b91bb9b50eb4f698b3a9651" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dims&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;indices&lt;/code&gt;. An 1-D &lt;code&gt;int&lt;/code&gt; Tensor. The shape of the array to use for unraveling indices.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dims&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;indices&lt;/code&gt; 과 유형이 같아야합니다. 1 차원 &lt;code&gt;int&lt;/code&gt; 텐서. 지수를 풀기 위해 사용할 배열의 모양입니다.</target>
        </trans-unit>
        <trans-unit id="8aaba21f20fa3800f24f14284b541ed6fd4d6e70" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dims&lt;/code&gt;&lt;/b&gt;: A list of Dimensions, or None if the shape is unspecified.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dims&lt;/code&gt; &lt;/b&gt; : 치수 목록 또는 모양이 지정되지 않은 경우 None입니다.</target>
        </trans-unit>
        <trans-unit id="4acaad84a579bdde2d31d0b8f5fd287bb0f419dc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dims&lt;/code&gt;&lt;/b&gt;: Tuple of integers. Permutation pattern, does not include the samples dimension. Indexing starts at 1. For instance, &lt;code&gt;(2, 1)&lt;/code&gt; permutes the first and second dimensions of the input.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dims&lt;/code&gt; &lt;/b&gt; : 정수의 튜플. 순열 패턴은 표본 차원을 포함하지 않습니다. 인덱싱은 1부터 시작합니다. 예를 들어 &lt;code&gt;(2, 1)&lt;/code&gt; 은 입력의 첫 번째와 두 번째 차원을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="5ff4a3ad3ca1375b0cb09288f47460740a1b87f5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;direction&lt;/code&gt;&lt;/b&gt;: The direction in which to sort the values (&lt;code&gt;'ASCENDING'&lt;/code&gt; or &lt;code&gt;'DESCENDING'&lt;/code&gt;).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;direction&lt;/code&gt; &lt;/b&gt; : 값을 정렬하는 방향 ( &lt;code&gt;'ASCENDING'&lt;/code&gt; 또는 &lt;code&gt;'DESCENDING'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1bfff3ab9107dde9da4f3921ae51ce036e3ffeda" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;directory&lt;/code&gt;&lt;/b&gt;: Path to the directory to read images from. Each subdirectory in this directory will be considered to contain images from one class, or alternatively you could specify class subdirectories via the &lt;code&gt;classes&lt;/code&gt; argument.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;directory&lt;/code&gt; &lt;/b&gt; : 이미지를 읽을 디렉토리의 경로입니다. 이 디렉토리의 각 서브 디렉토리는 한 클래스의 이미지를 포함하는 것으로 간주되거나, &lt;code&gt;classes&lt;/code&gt; 인수를 통해 클래스 서브 디렉토리를 지정할 수있습니다.</target>
        </trans-unit>
        <trans-unit id="f82b51755ab88077d06a3793106dbe57008c1d5b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;directory&lt;/code&gt;&lt;/b&gt;: The path to a directory in which to write checkpoints. A special file named &quot;checkpoint&quot; is also written to this directory (in a human-readable text format) which contains the state of the &lt;code&gt;CheckpointManager&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;directory&lt;/code&gt; &lt;/b&gt; : 검사 점을 쓸 디렉터리의 경로입니다. &quot;checkpoint&quot;라는 특수 파일도 &lt;code&gt;CheckpointManager&lt;/code&gt; 의 상태를 포함하는 사람이 읽을 수있는 텍스트 형식으로이 디렉토리에 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="987a1d8df2501a323a6b15d47f0df570a74f63d3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dirname&lt;/code&gt;&lt;/b&gt;: string, a path to a directory</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dirname&lt;/code&gt; &lt;/b&gt; : 문자열, 디렉토리 경로</target>
        </trans-unit>
        <trans-unit id="0a9d5b92740de1ee597c92386d82ee5157afeaf5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dirname&lt;/code&gt;&lt;/b&gt;: string, name of the directory to be created</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dirname&lt;/code&gt; &lt;/b&gt; : 문자열, 생성 될 디렉토리 이름</target>
        </trans-unit>
        <trans-unit id="af4355178bbd9550120519cbf96d6ddc51835c22" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dirname&lt;/code&gt;&lt;/b&gt;: string, path to a directory</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dirname&lt;/code&gt; &lt;/b&gt; : 문자열, 디렉토리 경로</target>
        </trans-unit>
        <trans-unit id="6390e4e922bc4de8a9ce7d36fec426ea057a8a1a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dirname&lt;/code&gt;&lt;/b&gt;: string, path to a potential directory</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dirname&lt;/code&gt; &lt;/b&gt; : 문자열, 잠재적 디렉토리 경로</target>
        </trans-unit>
        <trans-unit id="fd8a9933e09b1a876bde01e6091a9e973df4c3b6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;discovery_url&lt;/code&gt;&lt;/b&gt;: A URL template that points to the location of the discovery service. It should have two parameters {api} and {apiVersion} that when filled in produce an absolute URL to the discovery document for that service. The environment variable 'TPU_API_DISCOVERY_URL' will override this.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;discovery_url&lt;/code&gt; &lt;/b&gt; : 감지 서비스의 위치를 ​​가리키는 URL 템플리트입니다. 채워질 때 해당 서비스의 감지 문서에 대한 절대 URL을 생성하는 두 개의 매개 변수 {api} 및 {apiVersion}이 있어야합니다. 환경 변수 'TPU_API_DISCOVERY_URL'이이를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="aa1299a951b013e4e7eb312b82d67c5259e2a92e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;display_name&lt;/code&gt;&lt;/b&gt;: A string used to name this data in TensorBoard. If this is not set, then the node name will be used instead.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;display_name&lt;/code&gt; &lt;/b&gt; : TensorBoard에서이 데이터의 이름을 지정하는 데 사용되는 문자열입니다. 이것이 설정되지 않으면 노드 이름이 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="35bd8e44503beac54e400a99f1aa72b6568efbb8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dist_cls_a&lt;/code&gt;&lt;/b&gt;: the class of the first argument of the KL divergence.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dist_cls_a&lt;/code&gt; &lt;/b&gt; : KL 분기의 첫 번째 인수 클래스.</target>
        </trans-unit>
        <trans-unit id="b82acb7b24fd7590df2eddd2d1e4b422f214a9dd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dist_cls_b&lt;/code&gt;&lt;/b&gt;: the class of the second argument of the KL divergence.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dist_cls_b&lt;/code&gt; &lt;/b&gt; : KL 발산의 두 번째 인수 클래스.</target>
        </trans-unit>
        <trans-unit id="1da9041b9542ba601023a569547c34fc965cc315" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;distance_metric&lt;/code&gt;&lt;/b&gt;: The distance metric used for clustering. One of:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;distance_metric&lt;/code&gt; &lt;/b&gt; : 클러스터링에 사용되는 거리 메트릭입니다. 다음 중 하나 :</target>
        </trans-unit>
        <trans-unit id="e330b6171ca2f6e59b031a5371b34d9c03ee9bd6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;distortion&lt;/code&gt;&lt;/b&gt;: The distortion is used to skew the unigram probability distribution. Each weight is first raised to the distortion's power before adding to the internal unigram distribution. As a result, &lt;code&gt;distortion = 1.0&lt;/code&gt; gives regular unigram sampling (as defined by the vocab file), and &lt;code&gt;distortion = 0.0&lt;/code&gt; gives a uniform distribution.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;distortion&lt;/code&gt; &lt;/b&gt; : 왜곡은 유니 그램 확률 분포를 왜곡하는 데 사용됩니다. 내부 유니 그램 분포에 추가하기 전에 각 가중치가 먼저 왜곡의 힘으로 증가합니다. 결과적으로, &lt;code&gt;distortion = 1.0&lt;/code&gt; 은 (보브 파일에 의해 정의 된 바와 같이) 일정한 유니 그램 샘플링을 제공하고, &lt;code&gt;distortion = 0.0&lt;/code&gt; 은 균일 한 분포를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="919a45b8f8da6510bda4a29e07d6e4b8dee147ff" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;distribute&lt;/code&gt;&lt;/b&gt;: NOT SUPPORTED IN TF 2.0, please create and compile the model under distribution strategy scope instead of passing it to compile.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;distribute&lt;/code&gt; &lt;/b&gt; : TF 2.0에서 지원되지 않습니다. 모델을 컴파일로 전달하는 대신 배포 전략 범위에서 모델을 작성하고 컴파일하십시오.</target>
        </trans-unit>
        <trans-unit id="10aa62afaa5d3c6e847249e46eedbf0d32d1df34" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;distribution&lt;/code&gt;&lt;/b&gt;: A new instance of &lt;code&gt;type(self)&lt;/code&gt; initialized from the union of self.parameters and override_parameters_kwargs, i.e., &lt;code&gt;dict(self.parameters, **override_parameters_kwargs)&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;distribution&lt;/code&gt; &lt;/b&gt; :self.parameters와 override_parameters_kwargs의 합집합에서 초기화 된 &lt;code&gt;type(self)&lt;/code&gt; 의 새로운 인스턴스, 즉 &lt;code&gt;dict(self.parameters, **override_parameters_kwargs)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="69d07adb89ccb982a9f0354aaf769e5cfb53e04d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;distribution&lt;/code&gt;&lt;/b&gt;: Random distribution to use. One of &quot;normal&quot;, &quot;uniform&quot;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;distribution&lt;/code&gt; &lt;/b&gt; : 사용할 무작위 분포. &quot;정상&quot;, &quot;균일&quot;중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="8d8a3b17951e5593521758d9f68a0f85218d2a5a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;distribution&lt;/code&gt;&lt;/b&gt;: Random distribution to use. One of &quot;truncated_normal&quot;, &quot;untruncated_normal&quot; and &quot;uniform&quot;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;distribution&lt;/code&gt; &lt;/b&gt; : 사용할 무작위 분포. &quot;truncated_normal&quot;, &quot;untruncated_normal&quot;및 &quot;uniform&quot;중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="4d612f6df8f7275f9a577f6dfb7d69cceb1de745" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;distribution_a&lt;/code&gt;&lt;/b&gt;: The first distribution.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;distribution_a&lt;/code&gt; &lt;/b&gt; : 첫 번째 분포.</target>
        </trans-unit>
        <trans-unit id="e0462548218a9321fc8188d39fcaccd8e720d9e8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;distribution_b&lt;/code&gt;&lt;/b&gt;: The second distribution.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;distribution_b&lt;/code&gt; &lt;/b&gt; : 두 번째 분포.</target>
        </trans-unit>
        <trans-unit id="14723096e1a100bd3ba48305f60b8ece5f732d80" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dnn_activation_fn&lt;/code&gt;&lt;/b&gt;: Activation function applied to each layer. If None, will use &lt;a href=&quot;../nn/relu&quot;&gt;&lt;code&gt;tf.nn.relu&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dnn_activation_fn&lt;/code&gt; &lt;/b&gt; : 각 레이어에 적용되는 활성화 기능. None이면&lt;a href=&quot;../nn/relu&quot;&gt; &lt;code&gt;tf.nn.relu&lt;/code&gt; &lt;/a&gt; 를 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="41244a651bbe8c6e0a4e019269afbc96557c5ea5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dnn_dropout&lt;/code&gt;&lt;/b&gt;: When not None, the probability we will drop out a given coordinate.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dnn_dropout&lt;/code&gt; &lt;/b&gt; : None이 아니라면 주어진 좌표를 제거 할 확률입니다.</target>
        </trans-unit>
        <trans-unit id="e4f5745f7cc0b7210853717d6d8b3252c0e82921" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dnn_feature_columns&lt;/code&gt;&lt;/b&gt;: An iterable containing all the feature columns used by deep part of the model. All items in the set must be instances of classes derived from &lt;code&gt;FeatureColumn&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dnn_feature_columns&lt;/code&gt; &lt;/b&gt; : 모델의 깊은 부분에서 사용하는 모든 기능 열을 포함하는 iterable. 세트의 모든 항목은 &lt;code&gt;FeatureColumn&lt;/code&gt; 에서 파생 된 클래스의 인스턴스 여야합니다.</target>
        </trans-unit>
        <trans-unit id="1edd27913ab039c5ad0f1e698e01fd2e3f68ad43" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dnn_hidden_units&lt;/code&gt;&lt;/b&gt;: List of hidden units per layer. All layers are fully connected.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dnn_hidden_units&lt;/code&gt; &lt;/b&gt; : 레이어 당 숨겨진 단위 목록. 모든 레이어가 완전히 연결되었습니다.</target>
        </trans-unit>
        <trans-unit id="40484060e68fca835e15efa3cea516ad696307d6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dnn_model&lt;/code&gt;&lt;/b&gt;: a &lt;a href=&quot;../model&quot;&gt;&lt;code&gt;tf.keras.Model&lt;/code&gt;&lt;/a&gt;, its output must match the output of the linear model.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dnn_model&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../model&quot;&gt; &lt;code&gt;tf.keras.Model&lt;/code&gt; &lt;/a&gt; 의 출력은 선형 모델의 출력과 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="9b48ed9ea5a7d2883e7bdd915ccf7ac87da003c1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dnn_optimizer&lt;/code&gt;&lt;/b&gt;: An instance of &lt;code&gt;tf.keras.optimizers.*&lt;/code&gt; used to apply gradients to the deep part of the model. Can also be a string (one of 'Adagrad', 'Adam', 'Ftrl', 'RMSProp', 'SGD'), or callable. Defaults to Adagrad optimizer.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dnn_optimizer&lt;/code&gt; &lt;/b&gt; :모델의 깊은 부분에 그라디언트를 적용하는 데 사용되는 &lt;code&gt;tf.keras.optimizers.*&lt;/code&gt; 의 인스턴스입니다. 문자열 ( 'Adagrad', 'Adam', 'Ftrl', 'RMSProp', 'SGD'중 하나)이거나 호출 가능할 수도 있습니다. 기본값은 Adagrad 옵티 마이저입니다.</target>
        </trans-unit>
        <trans-unit id="e5f13a82f315e55bd4ce52fe4332f2b25fb9847c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dpi&lt;/code&gt;&lt;/b&gt;: Dots per inch.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dpi&lt;/code&gt; &lt;/b&gt; : 인치당 도트 수.</target>
        </trans-unit>
        <trans-unit id="97ae3384880bab679ac3abe43946f6ebaf7c64ed" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;driver_name&lt;/code&gt;&lt;/b&gt;: A 0-D &lt;a href=&quot;../../../../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; tensor containing the database type. Currently, the only supported value is 'sqlite'.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;driver_name&lt;/code&gt; &lt;/b&gt; :데이터베이스 유형을 포함하는 0-D&lt;a href=&quot;../../../../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt; 텐서입니다. 현재 지원되는 유일한 값은 'sqlite'입니다.</target>
        </trans-unit>
        <trans-unit id="ba615a9cf199c2fca4a4e9e4ff4e69cac2c144cc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;driver_name&lt;/code&gt;&lt;/b&gt;: A 0-D &lt;a href=&quot;../../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; tensor containing the database type. Currently, the only supported value is 'sqlite'.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;driver_name&lt;/code&gt; &lt;/b&gt; :데이터베이스 유형을 포함하는 0-D&lt;a href=&quot;../../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt; 텐서입니다. 현재 지원되는 유일한 값은 'sqlite'입니다.</target>
        </trans-unit>
        <trans-unit id="7d012ead4e5ee9ecdf79894d752bb6f22d14fc82" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;drop_control_dependency&lt;/code&gt;&lt;/b&gt;: Boolean indicating whether to drop control dependencies silently. This is due to TFLite not supporting control dependencies. (default True)</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;drop_control_dependency&lt;/code&gt; &lt;/b&gt; : 제어 종속성을 자동으로 삭제할지 여부를 나타내는 부울입니다. 이는 제어 종속성을 지원하지 않는 TFLite 때문입니다. (기본 True)</target>
        </trans-unit>
        <trans-unit id="b0e08abb990ae059914c29545d3f518fa968c1c0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;drop_final_batch&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;True&lt;/code&gt;, and the batch size does not evenly divide the input dataset size, the final smaller batch will be dropped. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;drop_final_batch&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;True&lt;/code&gt; 인경우배치 크기가 입력 데이터 세트 크기를 균등하게 나누지 않으면 최종 작은 배치가 삭제됩니다. 기본값은 &lt;code&gt;False&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2a89cc3d9fb406ea5f217c2d193a2e7bab864b3a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;drop_remainder&lt;/code&gt;&lt;/b&gt;: (Optional.) A &lt;a href=&quot;../../../../../tf#bool&quot;&gt;&lt;code&gt;tf.bool&lt;/code&gt;&lt;/a&gt; scalar &lt;a href=&quot;../../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, representing whether a window should be dropped in case its size is smaller than &lt;code&gt;window_size&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;drop_remainder&lt;/code&gt; &lt;/b&gt; : (선택 사항)&lt;a href=&quot;../../../../../tf#bool&quot;&gt; &lt;code&gt;tf.bool&lt;/code&gt; &lt;/a&gt; 스칼라&lt;a href=&quot;../../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; 로&lt;/a&gt; , 크기가 &lt;code&gt;window_size&lt;/code&gt; 보다 작은 경우에 윈도우를 드롭해야하는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="55faaa8470c09a06081b56ba00f25aa1f3a5012c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;drop_remainder&lt;/code&gt;&lt;/b&gt;: (Optional.) A &lt;a href=&quot;../../../../../tf#bool&quot;&gt;&lt;code&gt;tf.bool&lt;/code&gt;&lt;/a&gt; scalar &lt;a href=&quot;../../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, representing whether the last batch should be dropped in case its size is smaller than desired; the default behavior is not to drop the smaller batch.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;drop_remainder&lt;/code&gt; &lt;/b&gt; : (선택 사항)&lt;a href=&quot;../../../../../tf#bool&quot;&gt; &lt;code&gt;tf.bool&lt;/code&gt; &lt;/a&gt; 스칼라&lt;a href=&quot;../../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; .크기가 원하는 크기보다 작은 경우 마지막 배치를 삭제해야하는지 여부를 나타냅니다. 기본 동작은 작은 배치를 삭제하지 않는 것입니다.</target>
        </trans-unit>
        <trans-unit id="f6b075e12562b8f10348229387fd37382357f98d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;drop_remainder&lt;/code&gt;&lt;/b&gt;: (Optional.) A &lt;a href=&quot;../../../../../tf#bool&quot;&gt;&lt;code&gt;tf.bool&lt;/code&gt;&lt;/a&gt; scalar &lt;a href=&quot;../../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, representing whether the last batch should be dropped in the case it has fewer than &lt;code&gt;batch_size&lt;/code&gt; elements; the default behavior is not to drop the smaller batch.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;drop_remainder&lt;/code&gt; &lt;/b&gt; : (선택 사항)&lt;a href=&quot;../../../../../tf#bool&quot;&gt; &lt;code&gt;tf.bool&lt;/code&gt; &lt;/a&gt; 스칼라&lt;a href=&quot;../../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;batch_size&lt;/code&gt; 요소보다 적은 경우 마지막 배치를 삭제해야하는지 여부를 나타냅니다. 기본 동작은 작은 배치를 삭제하지 않는 것입니다.</target>
        </trans-unit>
        <trans-unit id="07991965fa13e755d50cadb8bd36be3db15990f8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;drop_remainder&lt;/code&gt;&lt;/b&gt;: (Optional.) A &lt;a href=&quot;../../../../tf#bool&quot;&gt;&lt;code&gt;tf.bool&lt;/code&gt;&lt;/a&gt; scalar &lt;a href=&quot;../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, representing whether a window should be dropped in case its size is smaller than &lt;code&gt;window_size&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;drop_remainder&lt;/code&gt; &lt;/b&gt; : (선택 사항)&lt;a href=&quot;../../../../tf#bool&quot;&gt; &lt;code&gt;tf.bool&lt;/code&gt; &lt;/a&gt; 스칼라&lt;a href=&quot;../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; 로&lt;/a&gt; , 크기가 &lt;code&gt;window_size&lt;/code&gt; 보다 작은 경우에 윈도우를 드롭해야하는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2af4260c37d34bb789f7fc5378b6892d78bdddab" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;drop_remainder&lt;/code&gt;&lt;/b&gt;: (Optional.) A &lt;a href=&quot;../../../../tf#bool&quot;&gt;&lt;code&gt;tf.bool&lt;/code&gt;&lt;/a&gt; scalar &lt;a href=&quot;../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, representing whether the last batch should be dropped in the case it has fewer than &lt;code&gt;batch_size&lt;/code&gt; elements; the default behavior is not to drop the smaller batch.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;drop_remainder&lt;/code&gt; &lt;/b&gt; : (선택 사항)&lt;a href=&quot;../../../../tf#bool&quot;&gt; &lt;code&gt;tf.bool&lt;/code&gt; &lt;/a&gt; 스칼라&lt;a href=&quot;../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;batch_size&lt;/code&gt; 요소보다 적은 경우 마지막 배치를 삭제해야하는지 여부를 나타냅니다. 기본 동작은 작은 배치를 삭제하지 않는 것입니다.</target>
        </trans-unit>
        <trans-unit id="febd20d7aabefb4ea937abed55f488f65d6208b9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;drop_remainder&lt;/code&gt;&lt;/b&gt;: (Optional.) A &lt;a href=&quot;../../../tf#bool&quot;&gt;&lt;code&gt;tf.bool&lt;/code&gt;&lt;/a&gt; scalar &lt;a href=&quot;../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, representing whether a window should be dropped in case its size is smaller than &lt;code&gt;window_size&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;drop_remainder&lt;/code&gt; &lt;/b&gt; : (선택 사항)&lt;a href=&quot;../../../tf#bool&quot;&gt; &lt;code&gt;tf.bool&lt;/code&gt; &lt;/a&gt; 스칼라&lt;a href=&quot;../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; 로&lt;/a&gt; , 크기가 &lt;code&gt;window_size&lt;/code&gt; 보다 작은 경우에 윈도우를 드롭해야하는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="de9e226f9bab3521b4527a9a157db40b9088345d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;drop_remainder&lt;/code&gt;&lt;/b&gt;: (Optional.) A &lt;a href=&quot;../../../tf#bool&quot;&gt;&lt;code&gt;tf.bool&lt;/code&gt;&lt;/a&gt; scalar &lt;a href=&quot;../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, representing whether the last batch should be dropped in case its size is smaller than desired; the default behavior is not to drop the smaller batch.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;drop_remainder&lt;/code&gt; &lt;/b&gt; : (선택 사항)&lt;a href=&quot;../../../tf#bool&quot;&gt; &lt;code&gt;tf.bool&lt;/code&gt; &lt;/a&gt; 스칼라&lt;a href=&quot;../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; .크기가 원하는 크기보다 작은 경우 마지막 배치를 삭제해야하는지 여부를 나타냅니다. 기본 동작은 작은 배치를 삭제하지 않는 것입니다.</target>
        </trans-unit>
        <trans-unit id="3752e828ed22675ebc1ed298a03eb4732d82e7c8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;drop_remainder&lt;/code&gt;&lt;/b&gt;: (Optional.) A &lt;a href=&quot;../../../tf#bool&quot;&gt;&lt;code&gt;tf.bool&lt;/code&gt;&lt;/a&gt; scalar &lt;a href=&quot;../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, representing whether the last batch should be dropped in the case it has fewer than &lt;code&gt;batch_size&lt;/code&gt; elements; the default behavior is not to drop the smaller batch.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;drop_remainder&lt;/code&gt; &lt;/b&gt; : (선택 사항)&lt;a href=&quot;../../../tf#bool&quot;&gt; &lt;code&gt;tf.bool&lt;/code&gt; &lt;/a&gt; 스칼라&lt;a href=&quot;../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;batch_size&lt;/code&gt; 요소보다 적은 경우 마지막 배치를 삭제해야하는지 여부를 나타냅니다. 기본 동작은 작은 배치를 삭제하지 않는 것입니다.</target>
        </trans-unit>
        <trans-unit id="696bce7682d099c4a4d488a451b0609d3d542093" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;drop_remainder&lt;/code&gt;&lt;/b&gt;: (Optional.) A &lt;a href=&quot;../../tf#bool&quot;&gt;&lt;code&gt;tf.bool&lt;/code&gt;&lt;/a&gt; scalar &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, representing whether a window should be dropped in case its size is smaller than &lt;code&gt;window_size&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;drop_remainder&lt;/code&gt; &lt;/b&gt; : (선택 사항)&lt;a href=&quot;../../tf#bool&quot;&gt; &lt;code&gt;tf.bool&lt;/code&gt; &lt;/a&gt; 스칼라&lt;a href=&quot;../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; 로&lt;/a&gt; , 크기가 &lt;code&gt;window_size&lt;/code&gt; 보다 작은 경우에 윈도우를 드롭해야하는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="23ba08e05ee23871633adf1fdcace2b9f58f4cac" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;drop_remainder&lt;/code&gt;&lt;/b&gt;: (Optional.) A &lt;a href=&quot;../../tf#bool&quot;&gt;&lt;code&gt;tf.bool&lt;/code&gt;&lt;/a&gt; scalar &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, representing whether the last batch should be dropped in the case it has fewer than &lt;code&gt;batch_size&lt;/code&gt; elements; the default behavior is not to drop the smaller batch.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;drop_remainder&lt;/code&gt; &lt;/b&gt; : (선택 사항)&lt;a href=&quot;../../tf#bool&quot;&gt; &lt;code&gt;tf.bool&lt;/code&gt; &lt;/a&gt; 스칼라&lt;a href=&quot;../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;batch_size&lt;/code&gt; 요소보다 적은 경우 마지막 배치를 삭제해야하는지 여부를 나타냅니다. 기본 동작은 작은 배치를 삭제하지 않는 것입니다.</target>
        </trans-unit>
        <trans-unit id="2c7e761c75ccb57d23e5324ea814c98ef56fc513" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dropout&lt;/code&gt;&lt;/b&gt;: Float between 0 and 1. Fraction of the units to drop for the linear transformation of the inputs.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dropout&lt;/code&gt; &lt;/b&gt; : 0에서 1 사이의 부동 소수점입니다. 입력의 선형 변환을 위해 제거 할 단위의 비율.</target>
        </trans-unit>
        <trans-unit id="82feed2dd4d5f91d915821742ecf89ce976d0428" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dropout&lt;/code&gt;&lt;/b&gt;: Float between 0 and 1. Fraction of the units to drop for the linear transformation of the inputs. Default: 0.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dropout&lt;/code&gt; &lt;/b&gt; : 0에서 1 사이의 부동 소수점입니다. 입력의 선형 변환을 위해 제거 할 단위의 비율. 기본값 : 0</target>
        </trans-unit>
        <trans-unit id="94dcd86dfa247a795ed3978fae71b64023b3f229" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dropout&lt;/code&gt;&lt;/b&gt;: When not &lt;code&gt;None&lt;/code&gt;, the probability we will drop out a given coordinate.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dropout&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;None&lt;/code&gt; 이 아닌 경우, 주어진 좌표를 제거 할 확률입니다.</target>
        </trans-unit>
        <trans-unit id="4d90dbb12aebaeb016df087d65bacf83a221ae61" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dropout_state_filter_visitor&lt;/code&gt;&lt;/b&gt;: (optional), default: (see below). Function that takes any hierarchical level of the state and returns a scalar or depth=1 structure of Python booleans describing which terms in the state should be dropped out. In addition, if the function returns &lt;code&gt;True&lt;/code&gt;, dropout is applied across this sublevel. If the function returns &lt;code&gt;False&lt;/code&gt;, dropout is not applied across this entire sublevel. Default behavior: perform dropout on all terms except the memory (&lt;code&gt;c&lt;/code&gt;) state of &lt;code&gt;LSTMCellState&lt;/code&gt; objects, and don't try to apply dropout to &lt;code&gt;TensorArray&lt;/code&gt; objects: &lt;code&gt;def dropout_state_filter_visitor(s): if isinstance(s, LSTMCellState): # Never perform dropout on the c state. return LSTMCellState(c=False, h=True) elif isinstance(s, TensorArray): return False return True&lt;/code&gt;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dropout_state_filter_visitor&lt;/code&gt; &lt;/b&gt; : (선택 사항), 기본값 : (아래 참조). 상태의 계층 적 수준을 취하고 상태에서 어떤 용어를 제거해야하는지 설명하는 Python 부울의 스칼라 또는 depth = 1 구조를 반환하는 함수입니다. 또한 함수가 &lt;code&gt;True&lt;/code&gt; 를 반환하면이 하위 수준에 드롭 아웃이 적용됩니다. 함수가 &lt;code&gt;False&lt;/code&gt; 를 반환하면이 전체 하위 수준에 드롭 아웃이 적용되지 않습니다. 기본 동작 : 메모리 (제외한 모든 조건에 드롭 아웃 수행 &lt;code&gt;c&lt;/code&gt; 의) 상태 &lt;code&gt;LSTMCellState&lt;/code&gt; 는 객체, 그리고에 드롭 아웃 적용하려고하지 않는 &lt;code&gt;TensorArray&lt;/code&gt; 이 객체 : &lt;code&gt;def dropout_state_filter_visitor(s): if isinstance(s, LSTMCellState): # Never perform dropout on the c state. return LSTMCellState(c=False, h=True) elif isinstance(s, TensorArray): return False return True&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d1bf4caf5bd118a0c6cbfa05343577b7367974a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dst&lt;/code&gt;&lt;/b&gt;: string, name of the file to which to copy to</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dst&lt;/code&gt; &lt;/b&gt; : 문자열, 복사 할 파일 이름</target>
        </trans-unit>
        <trans-unit id="b4afa8369fde8b11600c7dde5649b06de8c1dc01" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dst&lt;/code&gt;&lt;/b&gt;: string, pathname to which the file needs to be moved</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dst&lt;/code&gt; &lt;/b&gt; : 문자열, 파일을 이동해야하는 경로 이름</target>
        </trans-unit>
        <trans-unit id="8c4cf7f1cfeb7b71e8de2470c459ffaa26a78e83" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: (Optional) data type of the metric result.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : (선택 사항) 메트릭 결과의 데이터 유형입니다.</target>
        </trans-unit>
        <trans-unit id="f6d85bb2b223ca4648edf8f9705fe8324a03909a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: (Optional.) The data type for counter elements. Defaults to &lt;a href=&quot;../../../../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : (선택 사항) 카운터 요소의 데이터 유형입니다. 기본값은&lt;a href=&quot;../../../../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="05bb68034d57e2b566a4c312c5137f6120e1db9b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: (Optional.) The data type for counter elements. Defaults to &lt;a href=&quot;../../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : (선택 사항) 카운터 요소의 데이터 유형입니다. 기본값은&lt;a href=&quot;../../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="48455d04f14ee2adaa786dca287c4217e8e51e1a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: (Optional.) The required &lt;code&gt;DType&lt;/code&gt; of the returned &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;IndexedSlices&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : (선택 사항)반환 된 &lt;code&gt;Tensor&lt;/code&gt; 또는 &lt;code&gt;IndexedSlices&lt;/code&gt; 의 필수 &lt;code&gt;DType&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1ccc61fd6a249219553ea1c7dd68557d7a83997a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: (optional) The &lt;code&gt;dtype&lt;/code&gt; of the input, state, and output tensors. Required and used &lt;strong&gt;iff&lt;/strong&gt;&lt;code&gt;variational_recurrent = True&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : (선택 사항)입력, 상태 및 출력 텐서의 &lt;code&gt;dtype&lt;/code&gt; 입니다. 필수 및 사용&lt;strong&gt; iff variantal_recurrent &lt;/strong&gt; &lt;code&gt;variational_recurrent = True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="463a0bf1f140daa2c89d79e480c60ea2817004c3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: (optional) The data type for the initial state and expected output. Required if initial_state is not provided or RNN state has a heterogeneous dtype.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : (선택 사항) 초기 상태 및 예상 출력에 대한 데이터 유형입니다. initial_state가 제공되지 않거나 RNN 상태에 이종 dtype이있는 경우 필수입니다.</target>
        </trans-unit>
        <trans-unit id="e12ff389f1dc40406f0e223c9a14d0e38cd925c2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: (optional) The data type for the initial state. Required if either of the initial states are not provided.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : (선택 사항) 초기 상태의 데이터 유형입니다. 초기 상태 중 하나가 제공되지 않은 경우 필수입니다.</target>
        </trans-unit>
        <trans-unit id="d424841fe00751e41f00b2450a9ddd721984b497" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: (optional) The data type for the initial states and expected output. Required if initial_states are not provided or RNN states have a heterogeneous dtype.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : (선택 사항) 초기 상태 및 예상 출력에 대한 데이터 유형입니다. initial_states가 제공되지 않거나 RNN 상태에 이종 dtype이있는 경우 필수입니다.</target>
        </trans-unit>
        <trans-unit id="9c8e72ac30edb17d5d2462edb48f10bdec4a5497" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: (optional) The output type(s) of &lt;code&gt;fn&lt;/code&gt;. If &lt;code&gt;fn&lt;/code&gt; returns a structure of Tensors differing from the structure of &lt;code&gt;elems&lt;/code&gt;, then &lt;code&gt;dtype&lt;/code&gt; is not optional and must have the same structure as the output of &lt;code&gt;fn&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : (선택 사항) &lt;code&gt;fn&lt;/code&gt; 의 출력 유형입니다. 경우 &lt;code&gt;fn&lt;/code&gt; 반환의 구조는 다른 텐서의 구조 &lt;code&gt;elems&lt;/code&gt; , 다음 &lt;code&gt;dtype&lt;/code&gt; 선택하지 않고의 출력과 동일한 구조가 있어야합니다 &lt;code&gt;fn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a40790db77b7f408d3f5320d406a17f8b6fa600d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: (optional) the integer type, default to uint64.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : (선택 사항) 정수 유형이며 기본값은 uint64입니다.</target>
        </trans-unit>
        <trans-unit id="9bfa1789294b074e4f373f7aa9575061915ad49a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: (required) data type of the TensorArray.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; :&lt;b&gt; TensorArray의&lt;/b&gt; (필수) 데이터 유형입니다.</target>
        </trans-unit>
        <trans-unit id="afac5fca5dbd341a86f668ad01ac6df2e8af71ad" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: &lt;a href=&quot;dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; of values in the &lt;code&gt;IndexedSlices&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;dtypes/dtype&quot;&gt; &lt;code&gt;tf.DType&lt;/code&gt; &lt;/a&gt; 의 값 &lt;code&gt;IndexedSlices&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f2f387ec70750080b322642df85976baef5be68b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: &lt;a href=&quot;dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; of values in the &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;dtypes/dtype&quot;&gt; &lt;code&gt;tf.DType&lt;/code&gt; &lt;/a&gt; 의 값 &lt;code&gt;SparseTensor&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3a06fbe233bafec3be86f53634152c25af848881" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: &lt;a href=&quot;dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; of values in the RaggedTensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;dtypes/dtype&quot;&gt; &lt;code&gt;tf.DType&lt;/code&gt; &lt;/a&gt; 의 값 유형입니다.</target>
        </trans-unit>
        <trans-unit id="5be42513e12e9ab8d97b0f01786842c442ed60b2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;numpy.dtype&lt;/code&gt;. The type of elements for the returned &lt;code&gt;RaggedTensor&lt;/code&gt;. If not specified, then a default is chosen based on the scalar values in &lt;code&gt;pylist&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;numpy.dtype&lt;/code&gt; 입니다. 반환 된 &lt;code&gt;RaggedTensor&lt;/code&gt; 의 요소 유형입니다. 지정하지 않으면 &lt;code&gt;pylist&lt;/code&gt; 의 스칼라 값을 기반으로 기본값이 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="9857db2afa31495cfc85d3ed7ce4ff2eac5d661f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;DType&lt;/code&gt; to convert &lt;code&gt;image&lt;/code&gt; to.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;image&lt;/code&gt; 를변환 할 &lt;code&gt;DType&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7657aa262f9684190d2bdb1607cc3342550fd87b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;DType&lt;/code&gt;. Type of elements stored in this tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;DType&lt;/code&gt; 입니다. 이 텐서에 저장된 요소의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="9e7dc0d05c8c042620e9e846e2c9c38f2a05a23c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: A type for the returned &lt;code&gt;Tensor&lt;/code&gt;. Must be &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt; or &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 반환 된 &lt;code&gt;Tensor&lt;/code&gt; 의 유형입니다. 이어야 &lt;code&gt;float16&lt;/code&gt; 과 , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int8&lt;/code&gt; , &lt;code&gt;uint8&lt;/code&gt; , &lt;code&gt;int16&lt;/code&gt; , &lt;code&gt;uint16&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; , &lt;code&gt;complex128&lt;/code&gt; , &lt;code&gt;bool&lt;/code&gt; 또는 &lt;code&gt;string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="34908c90994083afe68615dbcf4e15a4e315883b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: A type for the returned &lt;code&gt;Tensor&lt;/code&gt;. Must be &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt; or &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 반환 된 &lt;code&gt;Tensor&lt;/code&gt; 의 유형입니다. 여야 &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int8&lt;/code&gt; , &lt;code&gt;uint8&lt;/code&gt; , &lt;code&gt;int16&lt;/code&gt; , &lt;code&gt;uint16&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; , &lt;code&gt;complex128&lt;/code&gt; 또는 &lt;code&gt;bool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c4fc47f40f7723cab096821db312f860659dcdf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.uint8, tf.uint16&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#uint8&quot;&gt;&lt;code&gt;tf.uint8&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 옵션&lt;a href=&quot;../dtypes/dtype&quot;&gt; &lt;code&gt;tf.DType&lt;/code&gt; &lt;/a&gt; 에서 : &lt;code&gt;tf.uint8, tf.uint16&lt;/code&gt; . 기본값은&lt;a href=&quot;../../tf#uint8&quot;&gt; &lt;code&gt;tf.uint8&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7f268894f172299f2536b3c908620f0c3ff2ccb1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Data type of input.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 입력 데이터 타입.</target>
        </trans-unit>
        <trans-unit id="374360162b11a951998affd67d603a372d02c19d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Data type of the &lt;code&gt;RaggedTensor&lt;/code&gt;. Must be one of: &lt;a href=&quot;../dtypes#int64&quot;&gt;&lt;code&gt;tf.dtypes.int64&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../dtypes#float32&quot;&gt;&lt;code&gt;tf.dtypes.float32&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../dtypes#string&quot;&gt;&lt;code&gt;tf.dtypes.string&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; :의 데이터 유형 &lt;code&gt;RaggedTensor&lt;/code&gt; 을 . &lt;a href=&quot;../dtypes#int64&quot;&gt; &lt;code&gt;tf.dtypes.int64&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../dtypes#float32&quot;&gt; &lt;code&gt;tf.dtypes.float32&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../dtypes#string&quot;&gt; &lt;code&gt;tf.dtypes.string&lt;/code&gt; &lt;/a&gt; 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="94b01070588745dd1c30737f173164437713eedd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Data type of the &lt;code&gt;TensorArray&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; :의 데이터 유형 &lt;code&gt;TensorArray&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="0aca1f49b604bb2739d3d4d5afa8e7b2fb967564" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Data type of the &lt;code&gt;value_key&lt;/code&gt; feature.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;value_key&lt;/code&gt; 기능의 데이터 유형입니다.</target>
        </trans-unit>
        <trans-unit id="da43256d489611af0a8d7d267a8f6cedfc15789b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Data type of the confusion matrix.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 혼동 행렬의 데이터 유형입니다.</target>
        </trans-unit>
        <trans-unit id="462b19d754b6482487d61256a97b8ece08e8fa3f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Data type of the matrix that this operator represents.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; :이 연산자가 나타내는 행렬의 데이터 유형입니다.</target>
        </trans-unit>
        <trans-unit id="de2811218b52e675ceff5ddcc797cd807a2d0a2e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Datatype of the accumulated gradients.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 누적 그래디언트의 데이터 유형입니다.</target>
        </trans-unit>
        <trans-unit id="be283d33a6331d1ebf493c29f5eb629a9c8795d9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Datatype of the input.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 입력 데이터 타입.</target>
        </trans-unit>
        <trans-unit id="ec3f87dff4c613384e76114a8e5692e24b7b4563" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Default data type, used if no &lt;code&gt;dtype&lt;/code&gt; argument is provided when calling the initializer.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; :이니셜 라이저를 호출 할 때 &lt;code&gt;dtype&lt;/code&gt; 인수가 제공되지 않은 경우 사용되는 기본 데이터 유형입니다.</target>
        </trans-unit>
        <trans-unit id="5cca63cf4f8c64d0e3601039089ae82bed8af32a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Default data type, used if no &lt;code&gt;dtype&lt;/code&gt; argument is provided when calling the initializer. Only floating point types are supported.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; :이니셜 라이저를 호출 할 때 &lt;code&gt;dtype&lt;/code&gt; 인수가 제공되지 않은 경우 사용되는 기본 데이터 유형입니다. 부동 소수점 유형 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="17be14b0fbc32042bdc19a2a089755e364d43592" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Default dtype of the layer (default of &lt;code&gt;None&lt;/code&gt; means use the type of the first input). Required when &lt;code&gt;build&lt;/code&gt; is called before &lt;code&gt;call&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 레이어의 기본 dtype입니다 (기본값 &lt;code&gt;None&lt;/code&gt; 은 첫 번째 입력 유형을 사용함을 의미합니다). &lt;code&gt;call&lt;/code&gt; 전에 &lt;code&gt;build&lt;/code&gt; 가 호출될 때 필요 합니다 .</target>
        </trans-unit>
        <trans-unit id="1be3abff9f365b96300b8004229a0d317ca8ce13" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Default dtype of the layer (default of &lt;code&gt;None&lt;/code&gt; means use the type of the first input). Required when &lt;code&gt;build&lt;/code&gt; is called before &lt;code&gt;call&lt;/code&gt;. When restoring from CudnnLSTM-trained checkpoints, use &lt;code&gt;CudnnCompatibleLSTMCell&lt;/code&gt; instead.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 레이어의 기본 dtype입니다 (기본값 &lt;code&gt;None&lt;/code&gt; 은 첫 번째 입력 유형을 사용함을 의미합니다). &lt;code&gt;call&lt;/code&gt; 전에 &lt;code&gt;build&lt;/code&gt; 가 호출될 때 필요 합니다 . CudnnLSTM 교육 체크 포인트에서 복원 할 때는 &lt;code&gt;CudnnCompatibleLSTMCell&lt;/code&gt; 을 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="749e58b30076fb167cb368c966c5c4e226d992ff" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Default dtype of the layer's weights (default of &lt;code&gt;None&lt;/code&gt; means use the type of the first input).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 레이어 가중치의 기본 dtype입니다 (기본값 &lt;code&gt;None&lt;/code&gt; 은 첫 번째 입력 유형을 사용함을 의미합니다).</target>
        </trans-unit>
        <trans-unit id="9bb05692618f96c5ed17c5e4cbe3fb21a92d526f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Dtype to use for generated arrays.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 생성 된 배열에 사용할 Dtype입니다.</target>
        </trans-unit>
        <trans-unit id="ef37703b7a6dd9df3e9e107debc0f969f918abb7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Dtype to use for the generated arrays.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 생성 된 배열에 사용할 Dtype입니다.</target>
        </trans-unit>
        <trans-unit id="217b069887fe1aa738eca90ace202bc855d192c4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Dtype to use for the returned array.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 반환 된 배열에 사용할 Dtype입니다.</target>
        </trans-unit>
        <trans-unit id="76462e87191c040ead5b7d8d30a092d76fcaf5d4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Dtype to use.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 사용할 Dtype입니다.</target>
        </trans-unit>
        <trans-unit id="024a6acfc774be4d115c95944bece4e923420d38" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Expected DataType of the input.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 입력의 예상 데이터 유형입니다.</target>
        </trans-unit>
        <trans-unit id="ee9bbd18d40b5c5e3efdfbee18249ce51ea42a04" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Expected type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 예상되는 유형입니다.</target>
        </trans-unit>
        <trans-unit id="0bc838ee6ccae9ff5dabbf2b43f81f6d83acaa48" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;weights&lt;/code&gt; is None, determines the type of the output bins.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;weights&lt;/code&gt; 가 None 인 경우 출력 빈의 유형을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="c369d44722b370c72ce72c36a1bde607d24bcc1f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: If set, initial_value will be converted to the given type. If &lt;code&gt;None&lt;/code&gt;, either the datatype will be kept (if &lt;code&gt;initial_value&lt;/code&gt; is a Tensor), or &lt;code&gt;convert_to_tensor&lt;/code&gt; will decide.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 설정하면 initial_value가 지정된 유형으로 변환됩니다. 경우 &lt;code&gt;None&lt;/code&gt; , 중 데이터 유형이 유지됩니다 (경우 &lt;code&gt;initial_value&lt;/code&gt; 이 텐서이다), 또는 &lt;code&gt;convert_to_tensor&lt;/code&gt; 가 결정합니다.</target>
        </trans-unit>
        <trans-unit id="121944991b86b1ff3adf24e4503676a0a75d3d38" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Integer dtype to use.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 사용할 정수 dtype입니다.</target>
        </trans-unit>
        <trans-unit id="73d9225880da78c582ffa9f2a5c483bd9c6085ba" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Optional DType of an element in the resulting &lt;code&gt;Tensor&lt;/code&gt;. Default is &lt;a href=&quot;../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 결과 &lt;code&gt;Tensor&lt;/code&gt; 에있는 요소의 선택적 DType입니다. 기본값은&lt;a href=&quot;../tf#float32&quot;&gt; &lt;code&gt;tf.float32&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="58c4fdef6846e8cfcd61b7741302d39ebe5dc76a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Optional dtype of the tensor. If not provided the dtype of the tensor created will be the type of the inital value.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 텐서의 선택적 dtype입니다. 제공되지 않으면 작성된 텐서의 dtype은 초기 값의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="fa30fc36aed77dec1c401e19ab07b918f64d795b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Optional dtype of the tensor. If not provided use the initializer dtype.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 텐서의 선택적 dtype입니다. 제공되지 않으면 이니셜 라이저 dtype을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="68f7bcff4cc08bf5b67d3edaa59f9b3d5aa481b0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Optional dtype of the tensor. If not provided will return tensor of &lt;a href=&quot;../../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 텐서의 선택적 dtype입니다. 제공하지 않으면&lt;a href=&quot;../../../tf#float32&quot;&gt; &lt;code&gt;tf.float32&lt;/code&gt; 의&lt;/a&gt; 텐서를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="7cf96d252a8b2a3a79bdbc92e51df24e56f004eb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Optional dtype of the tensor. If not provided will return tensor of &lt;a href=&quot;../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 텐서의 선택적 dtype입니다. 제공하지 않으면&lt;a href=&quot;../tf#float32&quot;&gt; &lt;code&gt;tf.float32&lt;/code&gt; 의&lt;/a&gt; 텐서를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="fcba407ba51f4c283a909937a3d67de5a6b3e426" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Optional dtype of the tensor. Only floating point and integer types are supported.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 텐서의 선택적 dtype입니다. 부동 소수점 및 정수 유형 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="e55ad6ef5c7623320c8d9d29fae842ca7c28683e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Optional dtype of the tensor. Only floating point types are supported.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 텐서의 선택적 dtype입니다. 부동 소수점 유형 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="8639d5b92f4694aabb3c0187792ccc9500cfff13" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Optional dtype of the tensor. Only numeric or boolean dtypes are supported.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 텐서의 선택적 dtype입니다. 숫자 또는 부울 dtype 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="5d81a032e312057612a63b2b29cac296d4851a76" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Optional element type for the returned tensor. If missing, the type is inferred from the type of &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 반환 된 텐서의 선택적 요소 유형입니다. 누락 된 경우 유형은 &lt;code&gt;value&lt;/code&gt; 유형에서 유추됩니다.</target>
        </trans-unit>
        <trans-unit id="61c7ac3de22f982e5d076cb4e30e3cae620c14e0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Optional tensor_pb2 DataType value.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 선택적 tensor_pb2 DataType 값입니다.</target>
        </trans-unit>
        <trans-unit id="6e4d92ce2bd0a1a3f50009e8e89564f2249b8ad8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Output data type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 출력 데이터 타입.</target>
        </trans-unit>
        <trans-unit id="dec7d9030f74d9f92fedd60b6ccd5e8c9e553bd2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Placeholder type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 자리 표시 자 유형입니다.</target>
        </trans-unit>
        <trans-unit id="4c342772d5c7f4a4734bd492d05b2ce779edb016" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: String, data type of returned Keras variable.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : String, 반환 된 Keras 변수의 데이터 유형.</target>
        </trans-unit>
        <trans-unit id="35a33604d990e42b203e00624c770bfac7826270" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: String, dtype of returned Keras variable.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : String, 반환 된 Keras 변수의 dtype.</target>
        </trans-unit>
        <trans-unit id="c3d55b311ef354eb3a7caacb37e07b12f5213d5a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: String, dtype of returned Keras variable. None uses the dtype of x.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : String, 반환 된 Keras 변수의 dtype. 없음 x의 dtype을 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="63f0275cc9a2894a844d892cbd2583757c72cc74" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: String, dtype of returned tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 문자열, 반환 된 텐서의 dtype</target>
        </trans-unit>
        <trans-unit id="8a71e474f1cad7dcc87f1bddcf3c4876a9d64492" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: String, either (&lt;code&gt;'float16'&lt;/code&gt;, &lt;code&gt;'float32'&lt;/code&gt;, or &lt;code&gt;'float64'&lt;/code&gt;).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : String, ( &lt;code&gt;'float16'&lt;/code&gt; , &lt;code&gt;'float32'&lt;/code&gt; 또는 &lt;code&gt;'float64'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5d1f6e8087f1395457165cb064707ff09117abf7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Tensor type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 텐서 타입.</target>
        </trans-unit>
        <trans-unit id="8b5fb9b65cbb00c78bb8f862ba7fcab6f8a6172f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The &lt;code&gt;DType&lt;/code&gt; of the result matrix. Must be a floating point type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; :결과 행렬의 &lt;code&gt;DType&lt;/code&gt; 입니다. 부동 소수점 유형이어야합니다.</target>
        </trans-unit>
        <trans-unit id="1f4c01d13e7b57a58f4c4ad7eb19db9bac398d90" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The &lt;code&gt;dtype&lt;/code&gt; of arguments to this operator. Default: &lt;code&gt;float32&lt;/code&gt;. Allowed dtypes: &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; :이 연산자에 대한 인수의 &lt;code&gt;dtype&lt;/code&gt; 입니다. 기본값은 &lt;code&gt;float32&lt;/code&gt; 입니다. 허용 dtypes : &lt;code&gt;float16&lt;/code&gt; 과 , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; , &lt;code&gt;complex128&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fd661f9c7d4da7a7708d705fa3975e91ad45d32f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The &lt;code&gt;dtype&lt;/code&gt; of the serialized &lt;code&gt;SparseTensor&lt;/code&gt; objects.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; :직렬화 된 &lt;code&gt;SparseTensor&lt;/code&gt; 객체의 &lt;code&gt;dtype&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="237858a7a0ed428a339d96768ac853639c00dd19" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The DType of an element in the resulting &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 결과 &lt;code&gt;Tensor&lt;/code&gt; 에있는 요소의 DType입니다.</target>
        </trans-unit>
        <trans-unit id="b4b5fdb4c8df83fa0ac8e5808e0cf6d320d39e93" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The data type expected by the input, as a string (&lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;...)</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 입력에서 예상되는 데이터 유형으로 문자열 ( &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; ...)</target>
        </trans-unit>
        <trans-unit id="b1c4120bab4b348b1aae5bc8b1a13f987b868ff3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The data type expected by the input. Default: &lt;code&gt;'float32'&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 입력에 필요한 데이터 유형입니다. 기본값은 &lt;code&gt;'float32'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="93730ffee56e38025297d5b85f25dc43785682a7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The data type for the &lt;code&gt;RaggedTensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; 다음의 데이터 유형 &lt;code&gt;RaggedTensor&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="8311b7d6d6a66a4cc078459523471c258d9a8793" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The data type of the output tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 출력 텐서의 데이터 유형입니다.</target>
        </trans-unit>
        <trans-unit id="dfb8ab8883fa5c17f243b7cadf9b538e5b9e99da" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The data type to produce. Must be a floating point type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 생성 할 데이터 유형입니다. 부동 소수점 유형이어야합니다.</target>
        </trans-unit>
        <trans-unit id="bac9725820860820d9fd62be5a72c20662735736" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The data type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 데이터 타입.</target>
        </trans-unit>
        <trans-unit id="a98d30861cb65bac1e96993b9e50e9fd4683a3d2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The data type. Only floating point types are supported.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 데이터 타입. 부동 소수점 유형 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="3a25249571ba1e30c6e02d9a49f38fe3b68a45e7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The desired DType of the returned &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 반환의 원하는 D- 타입 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0123ebb65929717d638503029eead50b66dc3b8d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The desired output &lt;code&gt;DType&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 원하는 출력 &lt;code&gt;DType&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="73c085e5cbd79b8c8a51f16d423b9691832b2d0e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The destination type. The list of supported dtypes is the same as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 대상 유형입니다. 지원되는 dtype 목록은 &lt;code&gt;x&lt;/code&gt; 와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="d39e28e9af4d658e227a655f4851f78403bb3820" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The dtype for &lt;code&gt;row_splits&lt;/code&gt;. One of &lt;a href=&quot;../tf#int32&quot;&gt;&lt;code&gt;tf.int32&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : row_splits의 &lt;code&gt;row_splits&lt;/code&gt; 입니다. &lt;a href=&quot;../tf#int32&quot;&gt; &lt;code&gt;tf.int32&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt; 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="65aec9e03872a9a6a73e440bd91db0702d08cfae" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The dtype of the layer's computations and weights (default of &lt;code&gt;None&lt;/code&gt; means use &lt;a href=&quot;../backend/floatx&quot;&gt;&lt;code&gt;tf.keras.backend.floatx&lt;/code&gt;&lt;/a&gt; in TensorFlow 2, or the type of the first input in TensorFlow 1).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 레이어 계산 및 가중치의 dtype (기본값은 &lt;code&gt;None&lt;/code&gt; 은TensorFlow 2에서&lt;a href=&quot;../backend/floatx&quot;&gt; &lt;code&gt;tf.keras.backend.floatx&lt;/code&gt; &lt;/a&gt; 또는 TensorFlow 1에서 첫 번째 입력 유형을 사용함 을의미합니다).</target>
        </trans-unit>
        <trans-unit id="b8c06aa5df2c3e2b7357593b23a02b8f50cca7e2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The output dtype; defaults to &lt;a href=&quot;../../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 출력 dtype; 기본값은&lt;a href=&quot;../../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e2a07d38ff9f7480e8df5f3d9eee35c1602eaecf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The output dtype; defaults to &lt;a href=&quot;../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 출력 dtype; 기본값은&lt;a href=&quot;../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9c4a6002ba4ba632aaab5dac487b134c93cc91c3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of &lt;code&gt;values&lt;/code&gt; elements in the tensor to be fed.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; :공급할 텐서의 &lt;code&gt;values&lt;/code&gt; 요소유형입니다.</target>
        </trans-unit>
        <trans-unit id="745ba5ab8fed0a1290f97e5c2e42758b08f9737f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of alpha, beta, and the output: &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, or &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : &amp;alpha;, &amp;beta;의 유형, 출력 : &lt;code&gt;float16&lt;/code&gt; 과 , &lt;code&gt;float32&lt;/code&gt; 또는 &lt;code&gt;float64&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="79c133788e05ac75d2b3b01fbd124585a7301c20" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of an element in the resulting &lt;code&gt;Tensor&lt;/code&gt;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 결과 &lt;code&gt;Tensor&lt;/code&gt; 의 요소 유형</target>
        </trans-unit>
        <trans-unit id="84444f1142d53d7b16796ddc01e2a2cedfd9599c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of element in the resulting &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 결과 &lt;code&gt;Tensor&lt;/code&gt; 의 요소 유형입니다.</target>
        </trans-unit>
        <trans-unit id="12e784045af4fe261522e0d815a185835cd66d4b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of elements for the returned &lt;code&gt;RaggedTensor&lt;/code&gt;. If not specified, then a default is chosen based on the scalar values in &lt;code&gt;pylist&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 반환 된 &lt;code&gt;RaggedTensor&lt;/code&gt; 의 요소 유형. 지정하지 않으면 &lt;code&gt;pylist&lt;/code&gt; 의 스칼라 값을 기반으로 기본값이 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="f17bb8b464fe3eee0b0c7e7f853b4d67822182f5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of elements in the tensor to be fed.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 공급할 텐서의 요소 유형입니다.</target>
        </trans-unit>
        <trans-unit id="b0a1f44c133c3b9e3f71f56a21cad93db429f1d6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of features. Only string and integer types are supported.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 기능의 유형입니다. 문자열 및 정수 유형 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="c8f96ae19179d22baf8ff0547828c8cbea1aa06d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of features. Only string and integer types are supported. If &lt;code&gt;None&lt;/code&gt;, it will be inferred from &lt;code&gt;vocabulary_list&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 기능의 유형입니다. 문자열 및 정수 유형 만 지원됩니다. 경우 &lt;code&gt;None&lt;/code&gt; , 그것에서 추론 할 것이다 &lt;code&gt;vocabulary_list&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5119d4fa61952d11852eac0ffbb28c3de32cf5b4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of the elements of the resulting tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 결과 텐서 요소의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="dde3739e5058bc9d1d759041531c9110ddd267aa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of the elements of the resulting tensor. If not specified, then a value is chosen based on the other args.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 결과 텐서 요소의 유형입니다. 지정하지 않으면 다른 인수에 따라 값이 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="89df241a5e86c890644ee861562a09712454c44a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of the event samples (default: int32).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 이벤트 샘플의 유형입니다 (기본값 : int32).</target>
        </trans-unit>
        <trans-unit id="f4877cbe2731d74673a74055c9cd7997b012d094" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of the event samples. &lt;code&gt;None&lt;/code&gt; implies no type-enforcement.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 이벤트 샘플의 유형입니다. &lt;code&gt;None&lt;/code&gt; 은 형식 시행을 의미하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="13b94bc612d7f14aaecf8387df4e49b2e180e040" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of the event samples. Default: &lt;code&gt;int32&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 이벤트 샘플의 유형입니다. 기본값은 &lt;code&gt;int32&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a4085410c3041643687258c948bfc5382badf511" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of the output tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 출력 텐서의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="b686457591d8e05282c4691fc5a7c572fc9dcb9f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of the output.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 출력 유형입니다.</target>
        </trans-unit>
        <trans-unit id="da7244c7c3802b4b50ccf343c3984200654987f3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of the output. Default: tf.int32</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 출력 유형입니다. 기본값 : tf.int32</target>
        </trans-unit>
        <trans-unit id="2f5d879724a1e953b3a6f797017217dea77c95dd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of the output: &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 출력 유형 : &lt;code&gt;float16&lt;/code&gt; , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; 또는 &lt;code&gt;int64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce50785e51df00238c0ff952882329e7854ada67" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of the output: &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, or &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 출력 유형 : &lt;code&gt;float16&lt;/code&gt; , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; 또는 &lt;code&gt;int64&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="34ae2acebbadb2f3f532f4010c7123e08c0997ec" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of the this &lt;code&gt;LinearOperator&lt;/code&gt;. Arguments to &lt;code&gt;matmul&lt;/code&gt; and &lt;code&gt;solve&lt;/code&gt; will have to be this type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; 다음이의 유형 &lt;code&gt;LinearOperator&lt;/code&gt; 을 . &lt;code&gt;matmul&lt;/code&gt; 및 &lt;code&gt;solve&lt;/code&gt; 에 대한 인수는이 유형이어야합니다.</target>
        </trans-unit>
        <trans-unit id="83c5816a78e5c0f60b9c452a243b2a6429a7e113" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of the variable. Defaults to &lt;code&gt;self.dtype&lt;/code&gt; or &lt;code&gt;float32&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 변수의 유형입니다. 기본값은 &lt;code&gt;self.dtype&lt;/code&gt; 또는 &lt;code&gt;float32&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3ad878a260895a92eb5f9558b2538f3473171350" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: The type of values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 값의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="63696da63c22dcc751a0a211e618f0e96f4b4258" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Type of the new or existing variable (defaults to &lt;code&gt;DT_FLOAT&lt;/code&gt;).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 새 변수 또는 기존 변수의 유형입니다 (기본값은 &lt;code&gt;DT_FLOAT&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="fb44cb14741c12b86e01731c72b07b74281288b9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Type of the variables. Ignored if &lt;code&gt;initializer&lt;/code&gt; is a &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 변수 유형. &lt;code&gt;initializer&lt;/code&gt; 가 &lt;code&gt;Tensor&lt;/code&gt; 인 경우 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="311cbd894b14ef044c5b025a15e02eff67370716" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Type of weights, such as &lt;a href=&quot;../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt;. Only float and integer weights are supported.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 가중치 유형 (예 :&lt;a href=&quot;../../tf#float32&quot;&gt; &lt;code&gt;tf.float32&lt;/code&gt; )&lt;/a&gt; . 부동 및 정수 가중치 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="8d004692b33dc5bc24bfe8dc8b0c40a0f4c55a9e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: Value convertible to &lt;a href=&quot;dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt;. The type of the tensor values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; :에 값이 전환&lt;a href=&quot;dtypes/dtype&quot;&gt; &lt;code&gt;tf.DType&lt;/code&gt; &lt;/a&gt; . 텐서 값의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="0372e048432271c3bd8e3e9e9c8578c8c7b1cb78" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: data type of returned Keras variable</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 반환 된&lt;b&gt; Keras&lt;/b&gt; 변수의 데이터 유형</target>
        </trans-unit>
        <trans-unit id="e0faa30434c1d658b7a2c35c5e8fe8a0fbb53103" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: default type passed to get_variable (defaults to DT_FLOAT).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; :&lt;b&gt; get_variable에&lt;/b&gt; 전달 된 기본 유형 (기본값은 DT_FLOAT).</target>
        </trans-unit>
        <trans-unit id="0987d567b0cf82828707c3daa8db69b03079120b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: defines the type of values. Default value is &lt;a href=&quot;../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt;. Must be a non-quantized, real integer or floating point type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 값의 유형을 정의합니다. 기본값은&lt;a href=&quot;../../tf#float32&quot;&gt; &lt;code&gt;tf.float32&lt;/code&gt; &lt;/a&gt; 입니다. 비 양자화, 실수 또는 부동 소수점 유형이어야합니다.</target>
        </trans-unit>
        <trans-unit id="a90e65b0b4ff51f80133230d8ca5f38def07683e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: dtype for returned histogram.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 반환 된 히스토그램의 경우 dtype입니다.</target>
        </trans-unit>
        <trans-unit id="f5d8ae70f3dc788dc0094c1a211fbd4861b26237" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: dtype of returned Keras variable. &lt;code&gt;None&lt;/code&gt; uses the dtype of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 반환 된 Keras 변수의 dtype &lt;code&gt;None&lt;/code&gt; &lt;code&gt;x&lt;/code&gt; 의 dtype을 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4ae757b5ee8573027fdb9506f12fe5a657a924e4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: integer type to use for the output. Defaults to int64.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 출력에 사용할 정수 유형입니다. 기본값은 int64입니다.</target>
        </trans-unit>
        <trans-unit id="7a4a829ef1dd8f275392546958bf061918fa132d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: output type of the resulting tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 결과 텐서의 출력 유형입니다.</target>
        </trans-unit>
        <trans-unit id="a12bf60ab3eb735bb5a6e0babbd705a7427051ba" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: the data type to use for the state.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; : 상태에 사용할 데이터 유형.</target>
        </trans-unit>
        <trans-unit id="a619c50ce02e501ed3f3bf4c52183d1704e07b91" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/b&gt;: type of variables created in this scope (defaults to the type in the passed scope, or inherited from parent scope).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/b&gt; :이 범위에서 작성된 변수 유형 (기본값은 전달 된 범위의 유형이거나 상위 범위에서 상 속됨).</target>
        </trans-unit>
        <trans-unit id="ebd4ae77a93327a34c1279d1fd4d71b3effb5228" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype_hint&lt;/code&gt;&lt;/b&gt;: Optional element type for the returned tensor, used when dtype is None. In some cases, a caller may not have a dtype in mind when converting to a tensor, so dtype_hint can be used as a soft preference. If the conversion to &lt;code&gt;dtype_hint&lt;/code&gt; is not possible, this argument has no effect.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype_hint&lt;/code&gt; &lt;/b&gt; : 반환 된 텐서의 선택적 요소 유형으로, dtype이 None 일 때 사용됩니다. 경우에 따라 호출자를 텐서로 변환 할 때 dtype을 염두에 두지 않을 수 있으므로 dtype_hint를 소프트 기본 설정으로 사용할 수 있습니다. &lt;code&gt;dtype_hint&lt;/code&gt; 로변환 할 수 없으면 이 인수는 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="830dd4cdac605062c095fdeff1a0c1a75efb5d31" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtype_hint&lt;/code&gt;&lt;/b&gt;: same meaning as preferred_dtype, and overrides it.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtype_hint&lt;/code&gt; &lt;/b&gt; :&lt;b&gt; preferred_dtype&lt;/b&gt; 과 같은 의미이며이를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="1d8df945300adea025354855633d2377307533f7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtypes&lt;/code&gt;&lt;/b&gt;: (Optional) A list of &lt;code&gt;DType&lt;/code&gt; objects that will be the types of the tensors that the operation produces.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtypes&lt;/code&gt; &lt;/b&gt; : (선택 사항)작업이 생성하는 텐서의 유형이 될 &lt;code&gt;DType&lt;/code&gt; 객체의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="17c8ce1ced7ce972779976284d9c85c411ad4842" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtypes&lt;/code&gt;&lt;/b&gt;: A list of &lt;code&gt;DType&lt;/code&gt; objects. The length of &lt;code&gt;dtypes&lt;/code&gt; must equal the number of tensors in each queue element.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtypes&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;DType&lt;/code&gt; 객체의 목록입니다. &lt;code&gt;dtypes&lt;/code&gt; 의 길이는각 큐 요소의 텐서 수와 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="b8594ffd635d50e6b89adc54270d3ce7b4592ad1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dtypes&lt;/code&gt;&lt;/b&gt;: A list of types. The length of dtypes must equal the number of tensors in each element.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dtypes&lt;/code&gt; &lt;/b&gt; : 유형 목록. dtype의 길이는 각 요소의 텐서 수와 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="b57c9f53b389739f597056f50e5f0bc9af72f3f2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dump_graphviz_dir&lt;/code&gt;&lt;/b&gt;: Full filepath of folder to dump the graphs at various stages of processing GraphViz .dot files. Preferred over --output_format=GRAPHVIZ_DOT in order to keep the requirements of the output file. (default None)</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dump_graphviz_dir&lt;/code&gt; &lt;/b&gt; : GraphViz .dot 파일 처리의 다양한 단계에서 그래프를 덤프 할 폴더의 전체 파일 경로입니다. 출력 파일의 요구 사항을 유지하기 위해 --output_format = GRAPHVIZ_DOT보다 선호됩니다. (기본 없음)</target>
        </trans-unit>
        <trans-unit id="8bbdfab79b124bef48b12fa62f17703b39f5d8a9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dump_graphviz_video&lt;/code&gt;&lt;/b&gt;: Boolean indicating whether to dump the graph after every graph transformation. (default False)</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dump_graphviz_video&lt;/code&gt; &lt;/b&gt; : 모든 그래프 변환 후 그래프를 덤프할지 여부를 나타내는 부울입니다. (기본 거짓)</target>
        </trans-unit>
        <trans-unit id="4ff02968019dce43c37ab42fb216bf868d6dda69" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dump_root&lt;/code&gt;&lt;/b&gt;: The directory path where the dumping information will be written.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dump_root&lt;/code&gt; &lt;/b&gt; : 덤핑 정보가 기록 될 디렉토리 경로.</target>
        </trans-unit>
        <trans-unit id="fe0d91e498fc7e0d7a2b177e9f25ba5ad3fc9030" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dynamic&lt;/code&gt;&lt;/b&gt;: Set this to &lt;code&gt;True&lt;/code&gt; if your layer should only be run eagerly, and should not be used to generate a static computation graph. This would be the case for a Tree-RNN or a recursive network, for example, or generally for any layer that manipulates tensors using Python control flow. If &lt;code&gt;False&lt;/code&gt;, we assume that the layer can safely be used to generate a static computation graph.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dynamic&lt;/code&gt; &lt;/b&gt; :레이어를 열성적으로 만 실행해야하고 정적 계산 그래프를 생성하는 데 사용하지 않아야하는경우이 값을 &lt;code&gt;True&lt;/code&gt; 로 설정하십시오. 예를 들어 Tree-RNN 또는 재귀 네트워크의 경우 또는 일반적으로 Python 제어 흐름을 사용하여 텐서를 조작하는 모든 레이어의 경우입니다. &lt;code&gt;False&lt;/code&gt; 인경우정적 계산 그래프를 생성하는 데 레이어를 안전하게 사용할 수 있다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="7ddb99c7c52aeaf64151d83e306932d0ca80b903" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dynamic_pad&lt;/code&gt;&lt;/b&gt;: Boolean. Allow variable dimensions in input shapes. The given dimensions are padded upon dequeue so that tensors within a batch have the same shapes.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dynamic_pad&lt;/code&gt; &lt;/b&gt; : 부울. 입력 모양에 다양한 치수를 허용합니다. 배치 내 텐서가 동일한 모양을 갖도록 주어진 치수가 대기열에 채워집니다.</target>
        </trans-unit>
        <trans-unit id="d7b37735b7fb389863b872cc2c2e05396d433dc5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dynamic_size&lt;/code&gt;&lt;/b&gt;: (optional) Python bool: If true, writes to the TensorArray can grow the TensorArray past its initial size. Default: False.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dynamic_size&lt;/code&gt; &lt;/b&gt; : (선택 사항) Python bool : true 인 경우 TensorArray에 쓰면 초기 크기를지나 TensorArray가 커질 수 있습니다. 기본값 : False</target>
        </trans-unit>
        <trans-unit id="de8381a6f0471fab114e20734b798f34c33993f3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;dynamic_size&lt;/code&gt;&lt;/b&gt;: Whether the &lt;code&gt;TensorArray&lt;/code&gt; can grow past its initial size.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;dynamic_size&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;TensorArray&lt;/code&gt; 가 초기 크기보다 커질 수있는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="e712466bc823bc6ec87277bfd946d65c5a31f440" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;e&lt;/code&gt;&lt;/b&gt;: Eigenvalues. Shape is &lt;code&gt;[..., N]&lt;/code&gt;. Sorted in non-decreasing order.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;e&lt;/code&gt; &lt;/b&gt; : 고유 값. 모양은 &lt;code&gt;[..., N]&lt;/code&gt; 입니다. 비 감소 순서로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="27cfde6bcff1785e52e8f9ebd31f3a8dc8e3ded7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;e&lt;/code&gt;&lt;/b&gt;: Eigenvalues. Shape is &lt;code&gt;[..., N]&lt;/code&gt;. The vector &lt;code&gt;e[..., :]&lt;/code&gt; contains the &lt;code&gt;N&lt;/code&gt; eigenvalues of &lt;code&gt;tensor[..., :, :]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;e&lt;/code&gt; &lt;/b&gt; : 고유 값. 모양은 &lt;code&gt;[..., N]&lt;/code&gt; 입니다. 벡터의 &lt;code&gt;e[..., :]&lt;/code&gt; 포함 &lt;code&gt;N&lt;/code&gt; 에서 의 고유 &lt;code&gt;tensor[..., :, :]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2fe325d4af0f46243540270017d676b88b966b35" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;element_length_func&lt;/code&gt;&lt;/b&gt;: function from element in &lt;code&gt;Dataset&lt;/code&gt; to &lt;a href=&quot;../../../tf#int32&quot;&gt;&lt;code&gt;tf.int32&lt;/code&gt;&lt;/a&gt;, determines the length of the element, which will determine the bucket it goes into.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;element_length_func&lt;/code&gt; 는&lt;/b&gt; : 기능 소자로부터의 &lt;code&gt;Dataset&lt;/code&gt; 에&lt;a href=&quot;../../../tf#int32&quot;&gt; &lt;code&gt;tf.int32&lt;/code&gt; &lt;/a&gt; ,이 들어가는 버킷을 결정하는 요소의 길이를 결정한다.</target>
        </trans-unit>
        <trans-unit id="d3b84c882e43b044c888d36c0fdbe99210bc0353" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;element_shape&lt;/code&gt;&lt;/b&gt;: (Optional.) A &lt;code&gt;TensorShape&lt;/code&gt; representing the shape of a row of &lt;code&gt;input_tensor&lt;/code&gt;, if it cannot be inferred.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;element_shape&lt;/code&gt; &lt;/b&gt; : (선택 사항)유추 될 수없는 경우 &lt;code&gt;input_tensor&lt;/code&gt; 행의 모양을 나타내는 &lt;code&gt;TensorShape&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="db12abc87f63b241933229016206248f9bb229b4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;element_shape&lt;/code&gt;&lt;/b&gt;: (optional, default: None) A &lt;code&gt;TensorShape&lt;/code&gt; object specifying the shape constraints of each of the elements of the TensorArray. Need not be fully defined.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;element_shape&lt;/code&gt; &lt;/b&gt; : (선택, 기본값 : 없음) &lt;code&gt;TensorShape&lt;/code&gt; 의 각 요소에 대한 모양 제약 조건을 지정하는 TensorShape 객체입니다. 완전히 정의 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="dfaddc702539e66cde81f6d34103389985cb0990" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;element_shape&lt;/code&gt;&lt;/b&gt;: The shape of each element in the &lt;code&gt;TensorArray&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;element_shape&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;TensorArray&lt;/code&gt; 의 각 요소 모양.</target>
        </trans-unit>
        <trans-unit id="6aad4bd9c34ece9b5a846198655fc10450c2e1ea" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;elems&lt;/code&gt;&lt;/b&gt;: A tensor or (possibly nested) sequence of tensors, each of which will be unpacked along their first dimension. The nested sequence of the resulting slices will be applied to &lt;code&gt;fn&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;elems&lt;/code&gt; &lt;/b&gt; : 텐서 또는 (아마 중첩 된) 텐서 시퀀스이며, 각각의 첫 번째 차원을 따라 압축이 풀립니다. 결과 슬라이스의 중첩 시퀀스가 &lt;code&gt;fn&lt;/code&gt; 에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="56137144166831340cacdb407331c41e8e7d772a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;elems&lt;/code&gt;&lt;/b&gt;: A tensor or (possibly nested) sequence of tensors, each of which will be unpacked along their first dimension. The nested sequence of the resulting slices will be mapped over by &lt;code&gt;fn&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;elems&lt;/code&gt; &lt;/b&gt; : 텐서 또는 (아마 중첩 된) 텐서 시퀀스이며, 각각의 첫 번째 차원을 따라 압축이 풀립니다. 결과 슬라이스의 중첩 시퀀스는 &lt;code&gt;fn&lt;/code&gt; 에 의해 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="6fc1f9fd1a997f84d586693abe0ce57dab729f2a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;elems&lt;/code&gt;&lt;/b&gt;: A tensor or (possibly nested) sequence of tensors, each of which will be unpacked along their first dimension. The nested sequence of the resulting slices will be the first argument to &lt;code&gt;fn&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;elems&lt;/code&gt; &lt;/b&gt; : 텐서 또는 (아마 중첩 된) 텐서 시퀀스이며, 각각의 첫 번째 차원을 따라 압축이 풀립니다. 결과 슬라이스의 중첩 시퀀스는 &lt;code&gt;fn&lt;/code&gt; 의 첫 번째 인수입니다.</target>
        </trans-unit>
        <trans-unit id="0e2662635fdc40608181d3523e74917c2a8677e0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;elems&lt;/code&gt;&lt;/b&gt;: tensor</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;elems&lt;/code&gt; &lt;/b&gt; : 텐서</target>
        </trans-unit>
        <trans-unit id="37f094942d949f7ace6ec45b6e4a9329dd5f5df7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ellipsis_mask&lt;/code&gt;&lt;/b&gt;: An &lt;code&gt;int32&lt;/code&gt; mask.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;ellipsis_mask&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;int32&lt;/code&gt; 마스크.</target>
        </trans-unit>
        <trans-unit id="e952aaf1eefc7875c135593fb17db8b66d722082" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;else_expression&lt;/code&gt;&lt;/b&gt;: either a tensor, or a callable that returns a tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;else_expression&lt;/code&gt; &lt;/b&gt; : 텐서 또는 텐서를 반환하는 호출 가능.</target>
        </trans-unit>
        <trans-unit id="bdcf40652a986117f4e71266c3685f9211c8321c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;embedding_config&lt;/code&gt;&lt;/b&gt;: If not None, a &lt;code&gt;TPUEmbeddingConfiguration&lt;/code&gt; proto describing the desired configuration of the hardware embedding lookup tables. If embedding_config is None, no hardware embeddings can be used.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;embedding_config&lt;/code&gt; &lt;/b&gt; : None이 아닌 경우, &lt;code&gt;TPUEmbeddingConfiguration&lt;/code&gt; 은 하드웨어 임베딩 조회 테이블의 원하는 구성을 설명합니다. embedding_config가 None이면 하드웨어 임베딩을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="129ba343101ac9af75150c1de6084aa833b481ee" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;embedding_config_spec&lt;/code&gt;&lt;/b&gt;: Optional EmbeddingConfigSpec instance to support using TPU embedding.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;embedding_config_spec&lt;/code&gt; &lt;/b&gt; : TPU 포함 사용을 지원하는 선택적 EmbeddingConfigSpec 인스턴스.</target>
        </trans-unit>
        <trans-unit id="73056f8df912b3ba055b80600a9d7dc159baaef8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;embedding_lookup_device&lt;/code&gt;&lt;/b&gt;: The device on which to run the embedding lookup. Valid options are &quot;cpu&quot;, &quot;tpu_tensor_core&quot;, and &quot;tpu_embedding_core&quot;. If specifying &quot;tpu_tensor_core&quot;, a tensor_core_shape must be supplied. Defaults to &quot;cpu&quot;. If not specified, the default behavior is embedding lookup on &quot;tpu_embedding_core&quot; for training and &quot;cpu&quot; for inference. Valid options for training : [&quot;tpu_embedding_core&quot;, &quot;tpu_tensor_core&quot;] Valid options for serving : [&quot;cpu&quot;, &quot;tpu_tensor_core&quot;] For training, tpu_embedding_core is good for large embedding vocab (&amp;gt;1M), otherwise, tpu_tensor_core is often sufficient. For serving, doing embedding lookup on tpu_tensor_core during serving is a way to reduce host cpu usage in cases where that is a bottleneck.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;embedding_lookup_device&lt;/code&gt; &lt;/b&gt; : 임베딩 조회를 실행할 장치입니다. 유효한 옵션은 &quot;cpu&quot;, &quot;tpu_tensor_core&quot;및 &quot;tpu_embedding_core&quot;입니다. &quot;tpu_tensor_core&quot;를 지정하는 경우 tensor_core_shape를 제공해야합니다. 기본값은 &quot;cpu&quot;입니다. 지정하지 않은 경우 기본 동작은 &quot;tpu_embedding_core&quot;에 대한 조회 및 훈련에 대한 &quot;cpu&quot;에 조회를 포함시키는 것입니다. 교육에 유효한 옵션 : [ &quot;tpu_embedding_core&quot;, &quot;tpu_tensor_core&quot;] 서빙에 유효한 옵션 : [ &quot;cpu&quot;, &quot;tpu_tensor_core&quot;] 교육을 위해 tpu_embedding_core는 대규모 임베드 vocab (&amp;gt; 1M)에 적합합니다. 그렇지 않으면 tpu_tensor_core로 충분합니다. 봉사를 위해</target>
        </trans-unit>
        <trans-unit id="987b675fa338c6651c2c5ba2c50b25bf5caf3fa0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;embedding_lookup_device&lt;/code&gt;&lt;/b&gt;: The device on which to run the embedding lookup. Valid options are &quot;cpu&quot;, &quot;tpu_tensor_core&quot;, and &quot;tpu_embedding_core&quot;. If specifying &quot;tpu_tensor_core&quot;, a tensor_core_shape must be supplied. If not specified, the default behavior is embedding lookup on &quot;tpu_embedding_core&quot; for training and &quot;cpu&quot; for inference. Valid options for training : [&quot;tpu_embedding_core&quot;, &quot;tpu_tensor_core&quot;] Valid options for serving : [&quot;cpu&quot;, &quot;tpu_tensor_core&quot;] For training, tpu_embedding_core is good for large embedding vocab (&amp;gt;1M), otherwise, tpu_tensor_core is often sufficient. For serving, doing embedding lookup on tpu_tensor_core during serving is a way to reduce host cpu usage in cases where that is a bottleneck.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;embedding_lookup_device&lt;/code&gt; &lt;/b&gt; : 임베딩 조회를 실행할 장치입니다. 유효한 옵션은 &quot;cpu&quot;, &quot;tpu_tensor_core&quot;및 &quot;tpu_embedding_core&quot;입니다. &quot;tpu_tensor_core&quot;를 지정하는 경우 tensor_core_shape를 제공해야합니다. 지정하지 않은 경우 기본 동작은 &quot;tpu_embedding_core&quot;에 대한 조회 및 훈련에 대한 &quot;cpu&quot;에 조회를 포함시키는 것입니다. 교육에 유효한 옵션 : [ &quot;tpu_embedding_core&quot;, &quot;tpu_tensor_core&quot;] 서빙에 유효한 옵션 : [ &quot;cpu&quot;, &quot;tpu_tensor_core&quot;] 교육을 위해 tpu_embedding_core는 대규모 임베드 vocab (&amp;gt; 1M)에 적합합니다. 그렇지 않으면 tpu_tensor_core로 충분합니다. 서빙하는 동안 서빙 중 tpu_tensor_core에서 내장 검색을 수행하면 병목 현상이 발생하는 경우 호스트 CPU 사용량을 줄일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0656af4d1701927ba55d548736d5202430fe06de" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;embedding_weights&lt;/code&gt;&lt;/b&gt;: A list of &lt;code&gt;P&lt;/code&gt; float &lt;code&gt;Tensor&lt;/code&gt;s or values representing partitioned embedding &lt;code&gt;Tensor&lt;/code&gt;s. Alternatively, a &lt;code&gt;PartitionedVariable&lt;/code&gt; created by partitioning along dimension 0. The total unpartitioned shape should be &lt;code&gt;[e_0, e_1, ..., e_m]&lt;/code&gt;, where &lt;code&gt;e_0&lt;/code&gt; represents the vocab size and &lt;code&gt;e_1, ..., e_m&lt;/code&gt; are the embedding dimensions.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;embedding_weights&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;P&lt;/code&gt; float &lt;code&gt;Tensor&lt;/code&gt; 또는 분할 된 임베딩 &lt;code&gt;Tensor&lt;/code&gt; 나타내는 값의목록입니다. 또는차원 0을 따라 &lt;code&gt;PartitionedVariable&lt;/code&gt; 만든 PartitionedVariable 입니다. 분할되지 않은 총 모양은 &lt;code&gt;[e_0, e_1, ..., e_m]&lt;/code&gt; 여기서 &lt;code&gt;e_0&lt;/code&gt; 은 vocab 크기를 나타내고 &lt;code&gt;e_1, ..., e_m&lt;/code&gt; 은 포함 크기입니다.</target>
        </trans-unit>
        <trans-unit id="37cb1fbebc4a0bf4ce0011c01e3fcf1fb4d34468" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;embeddings_constraint&lt;/code&gt;&lt;/b&gt;: Constraint function applied to the &lt;code&gt;embeddings&lt;/code&gt; matrix.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;embeddings_constraint&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;embeddings&lt;/code&gt; 매트릭스에적용되는 제약 함수.</target>
        </trans-unit>
        <trans-unit id="a13d20e1e86fb383539f4faba752cdba9a9ec4ef" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;embeddings_data&lt;/code&gt;&lt;/b&gt;: data to be embedded at layers specified in &lt;code&gt;embeddings_layer_names&lt;/code&gt;. Numpy array (if the model has a single input) or list of Numpy arrays (if the model has multiple inputs). Learn &lt;a href=&quot;https://www.tensorflow.org/programmers_guide/embedding&quot;&gt;more about embeddings&lt;/a&gt;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;embeddings_data&lt;/code&gt; &lt;/b&gt; :&lt;b&gt; embeddings_layer_names에&lt;/b&gt; 지정된 레이어에 &lt;code&gt;embeddings_layer_names&lt;/code&gt; 할 데이터입니다. Numpy 배열 (모델에 단일 입력이있는 경우) 또는 Numpy 배열 목록 (모델에 여러 입력이있는 경우) &lt;a href=&quot;https://www.tensorflow.org/programmers_guide/embedding&quot;&gt;퍼가기에&lt;/a&gt; 대해 자세히 알아보기</target>
        </trans-unit>
        <trans-unit id="c122105110e511229e16f30e35c267a3ddce2cb7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;embeddings_freq&lt;/code&gt;&lt;/b&gt;: frequency (in epochs) at which embedding layers will be visualized. If set to 0, embeddings won't be visualized.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;embeddings_freq&lt;/code&gt; &lt;/b&gt; : 임베딩 레이어가 시각화되는 빈도 (에포크)입니다. 0으로 설정하면 퍼가기가 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3cc4316d9131fe06b8e3bc5300387688e79dad43" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;embeddings_freq&lt;/code&gt;&lt;/b&gt;: frequency (in epochs) at which selected embedding layers will be saved. If set to 0, embeddings won't be computed. Data to be visualized in TensorBoard's Embedding tab must be passed as &lt;code&gt;embeddings_data&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;embeddings_freq&lt;/code&gt; &lt;/b&gt; : 선택한 포함 레이어가 저장 될 빈도 (에포크 단위). 0으로 설정하면 임베딩이 계산되지 않습니다. TensorBoard의 임베드 탭에서 시각화 할 데이터는 &lt;code&gt;embeddings_data&lt;/code&gt; 로 전달되어야합니다.</target>
        </trans-unit>
        <trans-unit id="dd04a472049b1bdf71c9f908566561b79597a9de" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;embeddings_initializer&lt;/code&gt;&lt;/b&gt;: Initializer for the &lt;code&gt;embeddings&lt;/code&gt; matrix.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;embeddings_initializer&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;embeddings&lt;/code&gt; 매트릭스의이니셜 라이저.</target>
        </trans-unit>
        <trans-unit id="b6542dea4af39e4fbd132cbfcdf2499ec9391fe3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;embeddings_layer_names&lt;/code&gt;&lt;/b&gt;: a list of names of layers to keep eye on. If None or empty list all the embedding layer will be watched.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;embeddings_layer_names&lt;/code&gt; &lt;/b&gt; : 감시 할 레이어 이름 목록입니다. 없음 또는 비어있는 목록이 있으면 모든 포함 레이어가 감시됩니다.</target>
        </trans-unit>
        <trans-unit id="d189fadb1fb199cbe378ab43878fa13e57f59ada" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;embeddings_metadata&lt;/code&gt;&lt;/b&gt;: a dictionary which maps layer name to a file name in which metadata for this embedding layer is saved. See the &lt;a href=&quot;https://www.tensorflow.org/how_tos/embedding_viz/#metadata_optional&quot;&gt;details&lt;/a&gt; about metadata files format. In case if the same metadata file is used for all embedding layers, string can be passed.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;embeddings_metadata&lt;/code&gt; &lt;/b&gt; : 레이어 이름을이 포함 레이어의 메타 데이터가 저장된 파일 이름에 매핑하는 사전입니다. 메타 데이터 파일 형식에 대한&lt;a href=&quot;https://www.tensorflow.org/how_tos/embedding_viz/#metadata_optional&quot;&gt; 세부 사항을&lt;/a&gt; 참조하십시오. 모든 임베드 레이어에 동일한 메타 데이터 파일을 사용하는 경우 문자열을 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="142b53125ed4867c97331b649fb1e1c5c305023b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;embeddings_regularizer&lt;/code&gt;&lt;/b&gt;: Regularizer function applied to the &lt;code&gt;embeddings&lt;/code&gt; matrix.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;embeddings_regularizer&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;embeddings&lt;/code&gt; 매트릭스에적용되는 정규화 기능.</target>
        </trans-unit>
        <trans-unit id="8b3f70dbf5569b5454e93bdee0da9c500d6c9ae0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;empty_key&lt;/code&gt;&lt;/b&gt;: the key to use to represent empty buckets internally. Must not be used in insert, remove or lookup operations.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;empty_key&lt;/code&gt; &lt;/b&gt; : 빈 버킷을 내부적으로 나타내는 데 사용하는 키. 삽입, 제거 또는 조회 작업에 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="fa83b54c019fabc80bb34a1dc4aba1e9ff0658b7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;empty_row_indicator&lt;/code&gt;&lt;/b&gt;: A bool vector of length &lt;code&gt;N&lt;/code&gt; indicating whether each input row was empty.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;empty_row_indicator&lt;/code&gt; &lt;/b&gt; :각 입력 행이 비어 있는지 여부를 나타내는길이 &lt;code&gt;N&lt;/code&gt; 의 bool 벡터.</target>
        </trans-unit>
        <trans-unit id="8883962d7905140f0b046efff38735e1abbb6650" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enable&lt;/code&gt;&lt;/b&gt;: (Boolean) Whether to enable or disable memory growth</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enable&lt;/code&gt; &lt;/b&gt; : (Boolean) 메모리 증가를 활성화 또는 비활성화할지 여부</target>
        </trans-unit>
        <trans-unit id="b5515adbfca13587481caa7605837267a5258a67" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enable&lt;/code&gt;&lt;/b&gt;: Whether operations should be dispatched synchronously. Valid values:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enable&lt;/code&gt; &lt;/b&gt; : 작업을 동 기적으로 전달해야하는지 여부입니다. 유효한 값 :</target>
        </trans-unit>
        <trans-unit id="4190be6c748cc670dd3ec1ce3706284eecc4519d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enabled&lt;/code&gt;&lt;/b&gt;: Whether to enable JIT compilation.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enabled&lt;/code&gt; &lt;/b&gt; : JIT 컴파일을 사용할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="a8c8826bd69c1db63a723b1987cf95d455719662" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enabled&lt;/code&gt;&lt;/b&gt;: Whether to enable soft placement.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enabled&lt;/code&gt; &lt;/b&gt; : 소프트 배치를 사용할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="6a77db0859fb6c77279cd53b266d46500acac5da" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enabled&lt;/code&gt;&lt;/b&gt;: Whether to enabled device placement logging.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enabled&lt;/code&gt; &lt;/b&gt; : 장치 배치 로깅을 활성화할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="7e858c789cca4cdd29e837a28d6b472cbd239e02" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;encoding&lt;/code&gt;&lt;/b&gt;: A string indicating the charset for decoding unicode.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;encoding&lt;/code&gt; &lt;/b&gt; : 유니 코드 디코딩을위한 문자셋을 나타내는 문자열.</target>
        </trans-unit>
        <trans-unit id="670aed7b1f9bba2edbc226d0f73dd481e0236867" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;encoding&lt;/code&gt;&lt;/b&gt;: A string indicating the charset for encoding unicode.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;encoding&lt;/code&gt; &lt;/b&gt; : 유니 코드 인코딩을위한 문자셋을 나타내는 문자열.</target>
        </trans-unit>
        <trans-unit id="b4d42595acb13f5e91b7c36839068139fddf6269" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;encoding&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;encoding&lt;/code&gt; &lt;/b&gt; : 선택적 &lt;code&gt;string&lt;/code&gt; 입니다. 기본값은 &lt;code&gt;&quot;&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="87b84cfd0b3447c703631a23df504dc0070d0e7f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;encoding&lt;/code&gt;&lt;/b&gt;: Encoding to use when writing string content. Only used if &lt;code&gt;content&lt;/code&gt; is text.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;encoding&lt;/code&gt; &lt;/b&gt; : 문자열 내용을 쓸 때 사용할 인코딩입니다. &lt;code&gt;content&lt;/code&gt; 이 텍스트 인경우에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2599f3e752cc7109a1082617806471810926a68e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;encoding&lt;/code&gt;&lt;/b&gt;: Optional constant &lt;code&gt;str&lt;/code&gt; for the desired encoding. Only &quot;wav&quot; is currently supported, but this is not guaranteed to remain the default, so if you want &quot;wav&quot; in particular, set this explicitly.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;encoding&lt;/code&gt; &lt;/b&gt; :원하는 인코딩에 대한선택적 상수 &lt;code&gt;str&lt;/code&gt; . 현재 &quot;wav&quot;만 지원되지만 이것이 기본값으로 유지되는 것은 아닙니다. 특히 &quot;wav&quot;를 원하는 경우이를 명시 적으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="cd7b75dd63f24ca47568cc76a638c68bd0be4b4c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;encoding&lt;/code&gt;&lt;/b&gt;: The type of encoding for the file. Defaults to none.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;encoding&lt;/code&gt; &lt;/b&gt; : 파일의 인코딩 유형입니다. 기본값은 none입니다.</target>
        </trans-unit>
        <trans-unit id="7d0d7c94d89ac952287102f4029f9260b006df14" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;end&lt;/code&gt;&lt;/b&gt;: An &lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;end&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;int32&lt;/code&gt; 또는 &lt;code&gt;int64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5bb555674c9cc562b614d6daf65f660292ca9ef4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;end&lt;/code&gt;&lt;/b&gt;: End character that is appended at the end the printed string. Defaults to the newline character.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;end&lt;/code&gt; &lt;/b&gt; : 인쇄 된 문자열의 끝에 추가되는 끝 문자입니다. 줄 바꿈 문자가 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="896e985d2b5cb4646e544db2ded4d59f47eb5e7e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;end&lt;/code&gt;&lt;/b&gt;: int, end of desired slice of the specified dataset</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;end&lt;/code&gt; &lt;/b&gt; : int, 지정된 데이터 집합의 원하는 슬라이스 끝</target>
        </trans-unit>
        <trans-unit id="9572521c8581b55fb3fca5a2255a18c0a830e784" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;end_learning_rate&lt;/code&gt;&lt;/b&gt;: A scalar &lt;code&gt;float32&lt;/code&gt; or &lt;code&gt;float64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; or a Python number. The minimal end learning rate.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;end_learning_rate&lt;/code&gt; &lt;/b&gt; : 스칼라 &lt;code&gt;float32&lt;/code&gt; 또는 &lt;code&gt;float64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 또는 Python 숫자 최소 학습률.</target>
        </trans-unit>
        <trans-unit id="1161c53fec47fe80c4415e0cbe1aa7fda0ddf840" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;end_mask&lt;/code&gt;&lt;/b&gt;: An &lt;code&gt;int32&lt;/code&gt; mask.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;end_mask&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;int32&lt;/code&gt; 마스크</target>
        </trans-unit>
        <trans-unit id="b374a7ebd2ba5ad867191d66d0af5abb08acc37d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enqueue_many&lt;/code&gt;&lt;/b&gt;: Whether each tensor in &lt;code&gt;tensor_list&lt;/code&gt; is a single example.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enqueue_many&lt;/code&gt; &lt;/b&gt; : 각 텐서 여부 &lt;code&gt;tensor_list&lt;/code&gt; 는 하나의 예입니다.</target>
        </trans-unit>
        <trans-unit id="77b6ed941563309a805a26a65365f6bb51284f96" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enqueue_many&lt;/code&gt;&lt;/b&gt;: Whether each tensor in &lt;code&gt;tensor_list_list&lt;/code&gt; is a single example.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enqueue_many&lt;/code&gt; &lt;/b&gt; : 각 텐서 여부 &lt;code&gt;tensor_list_list&lt;/code&gt; 는 하나의 예입니다.</target>
        </trans-unit>
        <trans-unit id="2e6f15ade1046d40a99143fc45a217812d70d7a1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enqueue_many&lt;/code&gt;&lt;/b&gt;: Whether each tensor in &lt;code&gt;tensors&lt;/code&gt; is a single example.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enqueue_many&lt;/code&gt; &lt;/b&gt; : 각 텐서 여부 &lt;code&gt;tensors&lt;/code&gt; 하나의 예입니다.</target>
        </trans-unit>
        <trans-unit id="17d41d9293b46a1fff325c8ec5400949afcb43ba" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enqueue_ops&lt;/code&gt;&lt;/b&gt;: List of enqueue ops to run in threads later.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enqueue_ops&lt;/code&gt; &lt;/b&gt; : 나중에 스레드에서 실행되는 enqueue op의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="e20c50ae00c8f031e1efca599bce33c84da09757" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ensure_minimum_range&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;0.01&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;ensure_minimum_range&lt;/code&gt; &lt;/b&gt; : 선택적인 &lt;code&gt;float&lt;/code&gt; . 기본값은 &lt;code&gt;0.01&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5456e49d1cb339451c120195c9151d8ccd4e44ae" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;entity&lt;/code&gt;&lt;/b&gt;: Python callable or class to convert.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;entity&lt;/code&gt; &lt;/b&gt; : 파이썬 호출 가능 또는 변환 할 클래스.</target>
        </trans-unit>
        <trans-unit id="68cc257fc7be5cf39dbead4cc6c6035229dfabb7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;entity&lt;/code&gt;&lt;/b&gt;: Python callable or class.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;entity&lt;/code&gt; &lt;/b&gt; : 파이썬 호출 가능 또는 클래스.</target>
        </trans-unit>
        <trans-unit id="e0279a9c1d8c3bece03e2eeab0551179f71046ff" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enum_class&lt;/code&gt;&lt;/b&gt;: class, the Enum class with all possible flag values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enum_class&lt;/code&gt; &lt;/b&gt; : class, 가능한 모든 플래그 값을 가지는 Enum 클래스</target>
        </trans-unit>
        <trans-unit id="a143c4a3d0888d655e664a9fcd3f1ad1df92f681" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enum_class&lt;/code&gt;&lt;/b&gt;: class, the Enum class with all the possible values for the flag.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enum_class&lt;/code&gt; &lt;/b&gt; : class, 플래그에 가능한 모든 값을 가지는 Enum 클래스</target>
        </trans-unit>
        <trans-unit id="fd3c1af30dd82931076973f072193877c62c2835" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enum_class&lt;/code&gt;&lt;/b&gt;: class, the Enum class with all the possible values for the flag. help: str, the help message.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enum_class&lt;/code&gt; &lt;/b&gt; : class, 플래그에 가능한 모든 값을 가지는 Enum 클래스 도움말 : str, 도움말 메시지</target>
        </trans-unit>
        <trans-unit id="b94cf76285f3e417f77cd38fb1a69e3de1b5bcd4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enum_values&lt;/code&gt;&lt;/b&gt;: [str], a non-empty list of string values in the enum.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enum_values&lt;/code&gt; &lt;/b&gt; : [str], 열거 형의 비어 있지 않은 문자열 값 목록.</target>
        </trans-unit>
        <trans-unit id="0283b7add41097c04b655d24f1a2ffe3fb8817e4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;enum_values&lt;/code&gt;&lt;/b&gt;: [str], a non-empty list of strings with the possible values for the flag.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;enum_values&lt;/code&gt; &lt;/b&gt; : [str], 플래그에 가능한 값이있는 비어 있지 않은 문자열 목록.</target>
        </trans-unit>
        <trans-unit id="e5516d81fe12ec745d5ce82f01d86d651c96d147" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;env&lt;/code&gt;&lt;/b&gt;: Dictionary of environment variable settings. If None, no environment variables will be set for the child process. This is to make tests more hermetic. NOTE: this behavior is different than the standard subprocess module.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;env&lt;/code&gt; &lt;/b&gt; : 환경 변수 설정의 사전. None이면 하위 프로세스에 환경 변수가 설정되지 않습니다. 이것은 테스트를보다 기밀로 만드는 것입니다. 참고 :이 동작은 표준 하위 프로세스 모듈과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="c71209f3892cc4b9d45d0d80ca14f98b41452947" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;environment&lt;/code&gt;&lt;/b&gt;: (String, optional) Overrides the environment TensorFlow operates in.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;environment&lt;/code&gt; &lt;/b&gt; : (String, optional) TensorFlow가 작동하는 환경을 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="3cc31952edced405ba1a9a287e150df9e1a64197" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;epoch&lt;/code&gt;&lt;/b&gt;: integer, index of epoch.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;epoch&lt;/code&gt; &lt;/b&gt; : 정수, epoch의 인덱스.</target>
        </trans-unit>
        <trans-unit id="1202c39bd5a005b0db2f3bba08e26d00cfe4cf9e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;epochs&lt;/code&gt;&lt;/b&gt;: Integer. Number of epochs to train the model. An epoch is an iteration over the entire &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; data provided. Note that in conjunction with &lt;code&gt;initial_epoch&lt;/code&gt;, &lt;code&gt;epochs&lt;/code&gt; is to be understood as &quot;final epoch&quot;. The model is not trained for a number of iterations given by &lt;code&gt;epochs&lt;/code&gt;, but merely until the epoch of index &lt;code&gt;epochs&lt;/code&gt; is reached.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;epochs&lt;/code&gt; &lt;/b&gt; : 정수. 모델을 훈련시킬 에포크 수. 에포크는제공된전체 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 데이터에대한 반복입니다. &lt;code&gt;initial_epoch&lt;/code&gt; 와 함께, &lt;code&gt;epochs&lt;/code&gt; 는 &quot;최종 에포크&quot;로 이해되어야합니다. 이 모델은 &lt;code&gt;epochs&lt;/code&gt; 에의해 주어진 많은 반복에 대해 훈련되지 않고단지 색인 &lt;code&gt;epochs&lt;/code&gt; 에 도달할 때까지훈련된다.</target>
        </trans-unit>
        <trans-unit id="397625181bdd5ab0aee2da1a962af1064943be67" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;epsilon&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; or a floating point value. A constant epsilon used to better conditioning the grad update.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;epsilon&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; 또는 부동 소수점 값. 그라데이션 업데이트를 더 잘 조절하는 데 사용되는 일정한 엡실론.</target>
        </trans-unit>
        <trans-unit id="05b304b4ecf304127ebb7410768ec5b6f0d38783" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;epsilon&lt;/code&gt;&lt;/b&gt;: A lower bound value for the norm. Will use &lt;code&gt;sqrt(epsilon)&lt;/code&gt; as the divisor if &lt;code&gt;norm &amp;lt; sqrt(epsilon)&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;epsilon&lt;/code&gt; &lt;/b&gt; : 규범의 하한값. 사용 &lt;code&gt;sqrt(epsilon)&lt;/code&gt; 경우 제수로 &lt;code&gt;norm &amp;lt; sqrt(epsilon)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55edcd586ebddc52b50a1a986392f392c5673555" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;epsilon&lt;/code&gt;&lt;/b&gt;: A small constant for numerical stability.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;epsilon&lt;/code&gt; &lt;/b&gt; : 수치 안정성을위한 작은 상수.</target>
        </trans-unit>
        <trans-unit id="96d33135f94eb44b6ca81ee0cf846df77bc38a26" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;epsilon&lt;/code&gt;&lt;/b&gt;: A small constant for numerical stability. This epsilon is &quot;epsilon hat&quot; in the Kingma and Ba paper (in the formula just before Section 2.1), not the epsilon in Algorithm 1 of the paper.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;epsilon&lt;/code&gt; &lt;/b&gt; : 수치 안정성을위한 작은 상수. 이 엡실론은 논문 1 알고리즘의 엡실론이 아니라 Kingma and Ba 논문 (2.1 바로 앞의 공식)에서 &quot;엡실론 모자&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="5a56b8a878983b93926b8474978759c95d16dab9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;epsilon&lt;/code&gt;&lt;/b&gt;: A small float number added to the variance of x.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;epsilon&lt;/code&gt; &lt;/b&gt; : x의 분산에 추가 된 작은 실수.</target>
        </trans-unit>
        <trans-unit id="12b794de15cd336e0fc9a6de70dbbfe461fcd5c2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;epsilon&lt;/code&gt;&lt;/b&gt;: A small floating point value to avoid zero denominator.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;epsilon&lt;/code&gt; &lt;/b&gt; : 0의 분모를 피하기위한 작은 부동 소수점 값.</target>
        </trans-unit>
        <trans-unit id="4629a6cf0d27b8d46d1b2f5b59c6d6cc7bcb3c44" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;epsilon&lt;/code&gt;&lt;/b&gt;: A small increment to add to avoid taking a log of zero.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;epsilon&lt;/code&gt; &lt;/b&gt; : 0의 로그를 피하기 위해 추가 할 작은 증분.</target>
        </trans-unit>
        <trans-unit id="d9285bdb868333f2e05f6e64a03b63e77207beaf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;epsilon&lt;/code&gt;&lt;/b&gt;: Fuzz factor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;epsilon&lt;/code&gt; &lt;/b&gt; : 퍼지 계수.</target>
        </trans-unit>
        <trans-unit id="d628f747620eb9e8b7ed6fc4dccd2d0a4f3285c3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;epsilon&lt;/code&gt;&lt;/b&gt;: Small float added to variance to avoid dividing by zero.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;epsilon&lt;/code&gt; &lt;/b&gt; : 0으로 나누지 않도록 분산에 작은 부동 소수점이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="1316299fcc0683ff705c37fd0d93118754de4f20" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;epsilon&lt;/code&gt;&lt;/b&gt;: Small value to avoid zero denominator.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;epsilon&lt;/code&gt; &lt;/b&gt; :&lt;b&gt; 영분&lt;/b&gt; 모를 피하기위한 작은 값.</target>
        </trans-unit>
        <trans-unit id="c6f62b2154b0698ecd07479ac2c65a991b7c5ced" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;equation&lt;/code&gt;&lt;/b&gt;: a &lt;code&gt;str&lt;/code&gt; describing the contraction, in the same format as &lt;code&gt;numpy.einsum&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;equation&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;numpy.einsum&lt;/code&gt; 과 같은 형식으로 수축을 설명하는 &lt;code&gt;str&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7852e8d38c4e1c526cbb395c796c2c9328d4070c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;err&lt;/code&gt;&lt;/b&gt;: A float value.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;err&lt;/code&gt; &lt;/b&gt; : float 값</target>
        </trans-unit>
        <trans-unit id="fd23db137c5d75d132445e1e169a980a6534f6e1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;err&lt;/code&gt;&lt;/b&gt;: a float value.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;err&lt;/code&gt; &lt;/b&gt; : float 값</target>
        </trans-unit>
        <trans-unit id="3238dc21bceb0e8b5cab8051bb791e879a748ffd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;err&lt;/code&gt;&lt;/b&gt;: a float. The maximum absolute difference allowed.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;err&lt;/code&gt; &lt;/b&gt; : float 허용되는 최대 절대 차이입니다.</target>
        </trans-unit>
        <trans-unit id="e4152e63129223d12a851a14402d394ee6701035" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;error_code&lt;/code&gt;&lt;/b&gt;: The &lt;code&gt;error_codes_pb2.Code&lt;/code&gt; describing the error.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;error_code&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;error_codes_pb2.Code&lt;/code&gt; 설명하는 error_codes_pb2.Code</target>
        </trans-unit>
        <trans-unit id="a1f25942ad99bf44bfaa50f04d6ef7b692b35e7a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;strict&quot;, &quot;replace&quot;, &quot;ignore&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;replace&quot;&lt;/code&gt;. Error handling policy when there is invalid formatting found in the input. The value of 'strict' will cause the operation to produce a InvalidArgument error on any invalid input formatting. A value of 'replace' (the default) will cause the operation to replace any invalid formatting in the input with the &lt;code&gt;replacement_char&lt;/code&gt; codepoint. A value of 'ignore' will cause the operation to skip any invalid formatting in the input and produce no corresponding output character.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;errors&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;&quot;strict&quot;, &quot;replace&quot;, &quot;ignore&quot;&lt;/code&gt; 의 선택적 &lt;code&gt;string&lt;/code&gt; 입니다. 기본값은 &lt;code&gt;&quot;replace&quot;&lt;/code&gt; 입니다. 입력에서 유효하지 않은 형식이 발견되면 오류 처리 정책. 'strict'값은 조작이 유효하지 않은 입력 형식에 대해 InvalidArgument 오류를 생성합니다. 값이 'replace'(기본값)이면 입력에서 유효하지 않은 형식이 &lt;code&gt;replacement_char&lt;/code&gt; 코드 포인트로 대체 됩니다. 'ignore'값은 조작이 입력에서 유효하지 않은 형식을 건너 뛰고 해당 출력 문자를 생성하지 않게합니다.</target>
        </trans-unit>
        <trans-unit id="ee2169f5baa07deb9babc3150727aa752b24f228" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/b&gt;: How to handle text to bytes encoding errors. Only used if &lt;code&gt;content&lt;/code&gt; is text.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;errors&lt;/code&gt; &lt;/b&gt; : 텍스트를 바이트로 인코딩 오류를 처리하는 방법입니다. &lt;code&gt;content&lt;/code&gt; 이 텍스트 인경우에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5fbfaef0dd5c5d4c57ece497379e582855de2242" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/b&gt;: Specifies the response when an input string can't be converted using the indicated encoding. One of:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;errors&lt;/code&gt; &lt;/b&gt; : 표시된 인코딩을 사용하여 입력 문자열을 변환 할 수 없을 때의 응답을 지정합니다. 다음 중 하나 :</target>
        </trans-unit>
        <trans-unit id="abed6f311c3164e2f17648b608e5da78e346cdb0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/b&gt;: Specifies the response when an invalid codepoint is encountered (optional). One of: * &lt;code&gt;'replace'&lt;/code&gt;: Replace invalid codepoint with the &lt;code&gt;replacement_char&lt;/code&gt;. (default) * &lt;code&gt;'ignore'&lt;/code&gt;: Skip invalid codepoints. * &lt;code&gt;'strict'&lt;/code&gt;: Raise an exception for any invalid codepoint.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;errors&lt;/code&gt; &lt;/b&gt; : 잘못된 코드 포인트가 발견 될 때 응답을 지정합니다 (선택 사항). * &lt;code&gt;'replace'&lt;/code&gt; 중 하나 :유효하지 않은 코드 포인트를 &lt;code&gt;replacement_char&lt;/code&gt; 로바꾸십시오 . (기본값) * &lt;code&gt;'ignore'&lt;/code&gt; : 유효하지 않은 코드 포인트를 건너 뜁니다. * &lt;code&gt;'strict'&lt;/code&gt; : 유효하지 않은 코드 포인트에 대해 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="2c8113ef387370df1b7598543b48b07ddaae2a79" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;errors_impl.InvalidArgumentError&lt;/code&gt;&lt;/b&gt;: If the shapes of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; do not match in any dimension other than the last dimension.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;errors_impl.InvalidArgumentError&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 의 모양이마지막 차원 이외의 차원에서 일치하지 않는 경우</target>
        </trans-unit>
        <trans-unit id="052f3b25eb9312492537f280a3035b092c7aa761" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;estimator&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../estimator&quot;&gt;&lt;code&gt;tf.estimator.Estimator&lt;/code&gt;&lt;/a&gt; instance to call evaluate.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;estimator&lt;/code&gt; &lt;/b&gt; :평가를 호출 할&lt;a href=&quot;../estimator&quot;&gt; &lt;code&gt;tf.estimator.Estimator&lt;/code&gt; &lt;/a&gt; 인스턴스.</target>
        </trans-unit>
        <trans-unit id="b8c1537c715470e106e9df611192b8c9df8980c0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;estimator&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../estimator&quot;&gt;&lt;code&gt;tf.estimator.Estimator&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;estimator&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../estimator&quot;&gt; &lt;code&gt;tf.estimator.Estimator&lt;/code&gt; &lt;/a&gt; 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="9470c5a36a9c9a4c061722312041477eca2acb5d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;estimator&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;estimator&quot;&gt;&lt;code&gt;tf.estimator.Estimator&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;estimator&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;estimator&quot;&gt; &lt;code&gt;tf.estimator.Estimator&lt;/code&gt; &lt;/a&gt; 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="9a17fa19c1fe07dc162bf6db66b3f923fe175e87" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;estimator&lt;/code&gt;&lt;/b&gt;: An &lt;code&gt;Estimator&lt;/code&gt; instance to train and evaluate.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;estimator&lt;/code&gt; &lt;/b&gt; :학습 및 평가할 &lt;code&gt;Estimator&lt;/code&gt; 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="2cb2191ca74bef2c3831295eebdfa37183f38ede" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;estimator&lt;/code&gt;&lt;/b&gt;: Estimator.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;estimator&lt;/code&gt; &lt;/b&gt; : 추정기.</target>
        </trans-unit>
        <trans-unit id="d451fdf82f817b4ff6a9d09f3c8f3551910dfdc7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;estimator&lt;/code&gt;&lt;/b&gt;: the &lt;code&gt;Estimator&lt;/code&gt; to export.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;estimator&lt;/code&gt; &lt;/b&gt; :내보낼 &lt;code&gt;Estimator&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b1b352dc706a9d0b6e205ddcad6f151713782100" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;eval_batch_size&lt;/code&gt;&lt;/b&gt;: An int representing evaluation batch size. Must be divisible by total number of replicas.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;eval_batch_size&lt;/code&gt; &lt;/b&gt; : 평가 배치 크기를 나타내는 int입니다. 총 복제본 수로 나눌 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="47a2d71bffc4bb26ebadcee8a8608efad4367041" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;eval_dir&lt;/code&gt;&lt;/b&gt;: If set, directory containing summary files with eval metrics. By default, &lt;code&gt;estimator.eval_dir()&lt;/code&gt; will be used.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;eval_dir&lt;/code&gt; &lt;/b&gt; : 설정된 경우 eval 지표가있는 요약 파일을 포함하는 디렉토리입니다. 기본적으로 &lt;code&gt;estimator.eval_dir()&lt;/code&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3ccf0fc18ed726ffb9d09ba210e90002e1bdde39" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;eval_distribute&lt;/code&gt;&lt;/b&gt;: An optional instance of &lt;a href=&quot;../distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt;. If specified, then Estimator will distribute the user's model during evaluation, according to the policy specified by that strategy. Setting &lt;code&gt;experimental_distribute.eval_distribute&lt;/code&gt; is preferred.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;eval_distribute&lt;/code&gt; &lt;/b&gt; :의 선택 예를&lt;a href=&quot;../distribute/strategy&quot;&gt; &lt;code&gt;tf.distribute.Strategy&lt;/code&gt; &lt;/a&gt; . 지정된 경우 Estimator는 해당 전략으로 지정된 정책에 따라 평가 중에 사용자의 모델을 분배합니다. &lt;code&gt;experimental_distribute.eval_distribute&lt;/code&gt; 설정하는것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="ca8c3bbdd406d86cc09db8f46c99675fa707025a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;eval_metric_ops&lt;/code&gt;&lt;/b&gt;: Dict of metric results keyed by name. The values of the dict can be one of the following: (1) instance of &lt;code&gt;Metric&lt;/code&gt; class. (2) Results of calling a metric function, namely a &lt;code&gt;(metric_tensor, update_op)&lt;/code&gt; tuple. &lt;code&gt;metric_tensor&lt;/code&gt; should be evaluated without any impact on state (typically is a pure computation results based on variables.). For example, it should not trigger the &lt;code&gt;update_op&lt;/code&gt; or requires any input fetching.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;eval_metric_ops&lt;/code&gt; &lt;/b&gt; : 이름으로 키가 지정된 메트릭 결과의&lt;b&gt; 딕트&lt;/b&gt; . dict의 값은 다음 중 하나 일 수 있습니다. (1) &lt;code&gt;Metric&lt;/code&gt; 클래스의인스턴스. (2) 메트릭 함수, 즉 &lt;code&gt;(metric_tensor, update_op)&lt;/code&gt; 튜플호출 결과. &lt;code&gt;metric_tensor&lt;/code&gt; 는 상태에 영향을주지 않으면 서 평가해야합니다 (일반적으로 변수를 기반으로 한 순수한 계산 결과입니다). 예를 들어 &lt;code&gt;update_op&lt;/code&gt; 를 트리거하거나 입력 페치를 필요로하지 않아야 합니다.</target>
        </trans-unit>
        <trans-unit id="ffd3487a0fe1ff4e8bc55f4f88a4dcced7093ce8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;eval_metrics&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;dict&lt;/code&gt; of metrics to be updated.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;eval_metrics&lt;/code&gt; &lt;/b&gt; :업데이트 할 지표의 &lt;code&gt;dict&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05d1348ed57e59ba242f47aef130f236a03bb40e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;eval_on_tpu&lt;/code&gt;&lt;/b&gt;: If False, evaluation runs on CPU or GPU. In this case, the model_fn must return &lt;code&gt;EstimatorSpec&lt;/code&gt; when called with &lt;code&gt;mode&lt;/code&gt; as &lt;code&gt;EVAL&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;eval_on_tpu&lt;/code&gt; &lt;/b&gt; : False이면 평가가 CPU 또는 GPU에서 실행됩니다. 이 경우, model_fn은 &lt;code&gt;mode&lt;/code&gt; 를 &lt;code&gt;EVAL&lt;/code&gt; 로 사용하여 호출 할 때 &lt;code&gt;EstimatorSpec&lt;/code&gt; 을 리턴해야합니다.</target>
        </trans-unit>
        <trans-unit id="84fb2bdf68289fd17b57bd71294504cd467b4599" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;eval_result&lt;/code&gt;&lt;/b&gt;: The output of &lt;a href=&quot;../compat/v1/estimator/estimator#evaluate&quot;&gt;&lt;code&gt;Estimator.evaluate&lt;/code&gt;&lt;/a&gt; on this checkpoint.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;eval_result&lt;/code&gt; &lt;/b&gt; :이 체크 포인트에서&lt;a href=&quot;../compat/v1/estimator/estimator#evaluate&quot;&gt; &lt;code&gt;Estimator.evaluate&lt;/code&gt; &lt;/a&gt; 의 출력.</target>
        </trans-unit>
        <trans-unit id="559157d736e997350334e6f3d004c09c66f4b790" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;eval_spec&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;EvalSpec&lt;/code&gt; instance to specify the evaluation and export specification.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;eval_spec&lt;/code&gt; &lt;/b&gt; :평가 및 내보내기 사양을 지정하는 &lt;code&gt;EvalSpec&lt;/code&gt; 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="b770dc6cb199bc1bd5b4ecb643020237beea8800" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;eval_training_input_configuration&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;SLICED&lt;/code&gt;, &lt;code&gt;input_fn&lt;/code&gt; is only invoked once on host 0 and the tensors are broadcasted to all other replicas. Unlike per_host_input_for_training=BROADCAST, each replica will only get a slice of the data instead of a whole copy. If &lt;code&gt;PER_HOST_V1&lt;/code&gt;, the behaviour is determined by per_host_input_for_training.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;eval_training_input_configuration&lt;/code&gt; &lt;/b&gt; : 만약 &lt;code&gt;SLICED&lt;/code&gt; , &lt;code&gt;input_fn&lt;/code&gt; 에만 호스트 0 번 호출되고 텐서는 다른 모든 복제본에 방송된다. per_host_input_for_training = BROADCAST와 달리 각 복제본은 전체 복사본 대신 데이터 조각 만 가져옵니다. 경우 &lt;code&gt;PER_HOST_V1&lt;/code&gt; , 동작은 per_host_input_for_training에 의해 결정된다.</target>
        </trans-unit>
        <trans-unit id="aa42a121c40929034c67335d64ef933f79d67267" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;evaluation_hooks&lt;/code&gt;&lt;/b&gt;: Iterable of &lt;code&gt;tf.train.SessionRunHook&lt;/code&gt; objects to run during evaluation.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;evaluation_hooks&lt;/code&gt; &lt;/b&gt; :&lt;b&gt; 평가&lt;/b&gt; 중에 실행할 &lt;code&gt;tf.train.SessionRunHook&lt;/code&gt; 객체의 반복 가능 .</target>
        </trans-unit>
        <trans-unit id="1e3908e2f436daaef2541d52f208121797d7320d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;evaluation_master&lt;/code&gt;&lt;/b&gt;: a string. The address of the master to use for eval. Defaults to master if not set.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;evaluation_master&lt;/code&gt; &lt;/b&gt; : 문자열. 평가에 사용할 마스터의 주소입니다. 설정하지 않으면 마스터로 기본 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="f47a9f95a697ea4d1dd1495f9bd95817ef86375c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;event&lt;/code&gt;&lt;/b&gt;: An &lt;code&gt;Event&lt;/code&gt; protocol buffer.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;event&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Event&lt;/code&gt; 프로토콜 버퍼.</target>
        </trans-unit>
        <trans-unit id="48f3ea8efec03296995aea90c0d2c24c9708abce" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;event_file_pattern&lt;/code&gt;&lt;/b&gt;: event file name pattern relative to model_dir. If None, however, the exporter would not be preemption-safe. To be preemption-safe, event_file_pattern must be specified.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;event_file_pattern&lt;/code&gt; &lt;/b&gt; :&lt;b&gt; model_dir에&lt;/b&gt; 상대적인 이벤트 파일 이름 패턴. 그러나 '없음'인 경우 수출 업체는 선점 안전하지 않습니다. 선점 안전을 위해서는 event_file_pattern을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="2bd04ca517f11e401f0fc7bfae00f6fd372b80aa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;event_shape&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;event_shape&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5dffa3066a955129ab91204f4edbbf98288763d8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;event_shape&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;TensorShape&lt;/code&gt;, possibly unknown.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;event_shape&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;TensorShape&lt;/code&gt; , 알 수 없음.</target>
        </trans-unit>
        <trans-unit id="4f35515232aca69d2179181018595733b29aaf64" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;every_n_iter&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;int&lt;/code&gt;, print the values of &lt;code&gt;tensors&lt;/code&gt; once every N local steps taken on the current worker.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;every_n_iter&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;int&lt;/code&gt; ,현재 작업자가 수행 한 N 개의 로컬 단계마다 한 번씩 &lt;code&gt;tensors&lt;/code&gt; 의 값을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="07fbffed5e8e5651e9b55a55b27872cb206beb19" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;every_n_iter&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;int&lt;/code&gt;, runs the evaluator once every N training iteration.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;every_n_iter&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;int&lt;/code&gt; , N 훈련 반복마다 한 번씩 평가자를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="fd208ed8e66846706db2a0af491f70ef2a60da55" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;every_n_secs&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;float&lt;/code&gt;, print the values of &lt;code&gt;tensors&lt;/code&gt; once every N seconds. Exactly one of &lt;code&gt;every_n_iter&lt;/code&gt; and &lt;code&gt;every_n_secs&lt;/code&gt; should be provided.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;every_n_secs&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;int&lt;/code&gt; 또는 &lt;code&gt;float&lt;/code&gt; ,N 초마다 한 번씩 &lt;code&gt;tensors&lt;/code&gt; 의 값을 인쇄하십시오. &lt;code&gt;every_n_iter&lt;/code&gt; 및 &lt;code&gt;every_n_secs&lt;/code&gt; 중 정확히 하나를제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="3ad292407dfd16d2025fa8268bb0cb2003a08081" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;ex&lt;/code&gt;&lt;/b&gt;: Optional &lt;code&gt;Exception&lt;/code&gt;, or Python &lt;code&gt;exc_info&lt;/code&gt; tuple as returned by &lt;code&gt;sys.exc_info()&lt;/code&gt;. If this is the first call to &lt;code&gt;request_stop()&lt;/code&gt; the corresponding exception is recorded and re-raised from &lt;code&gt;join()&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;ex&lt;/code&gt; &lt;/b&gt; : 선택적 &lt;code&gt;Exception&lt;/code&gt; , 또는 파이썬 &lt;code&gt;exc_info&lt;/code&gt; 에 의해 반환되는 튜플 &lt;code&gt;sys.exc_info()&lt;/code&gt; . 이것이 &lt;code&gt;request_stop()&lt;/code&gt; 대한 첫 번째 호출 인경우 해당 예외가 기록되고 &lt;code&gt;join()&lt;/code&gt; 에서 다시 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3c314d2ec676e94573339eee319151cd30deda27" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;example_id_column&lt;/code&gt;&lt;/b&gt;: The column name containing the example ids.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;example_id_column&lt;/code&gt; &lt;/b&gt; : 예제 ID를 포함하는 열 이름입니다.</target>
        </trans-unit>
        <trans-unit id="a1296b3ae278173091b6654036689a976f31f817" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;example_labels&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. a vector which contains the label/target associated with each example.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;example_labels&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;float32&lt;/code&gt; 유형의 &lt;code&gt;Tensor&lt;/code&gt; . 각 예제와 관련된 레이블 / 대상을 포함하는 벡터</target>
        </trans-unit>
        <trans-unit id="85dfbdf30c2c9b56afc98c1baaf05a9f5da0f613" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;example_name&lt;/code&gt;&lt;/b&gt;: A scalar (0-D Tensor) of strings (optional), the name of the serialized proto.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;example_name&lt;/code&gt; &lt;/b&gt; : 문자열의 스칼라 (0-D 텐서) (선택적), 직렬화 된 프로토의 이름.</target>
        </trans-unit>
        <trans-unit id="80160b502ad04794386389b5dcdfbd62b968aff5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;example_names&lt;/code&gt;&lt;/b&gt;: (Optional) A scalar string Tensor, the associated name.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;example_names&lt;/code&gt; &lt;/b&gt; : (선택 사항) 연관된 이름 인 스칼라 문자열 텐서.</target>
        </trans-unit>
        <trans-unit id="1f1c6d6d182342046f52153a8a7abe007d49a716" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;example_names&lt;/code&gt;&lt;/b&gt;: A vector (1-D Tensor) of strings (optional), the name of the serialized protos.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;example_names&lt;/code&gt; &lt;/b&gt; : 문자열의 벡터 (1 차원 텐서) (선택적), 직렬화 된 프로토스의 이름.</target>
        </trans-unit>
        <trans-unit id="ad28285973a82836d97583cb62caaf63d72557e6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;example_names&lt;/code&gt;&lt;/b&gt;: A vector (1-D Tensor) of strings (optional), the names of the serialized protos in the batch.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;example_names&lt;/code&gt; &lt;/b&gt; : 문자열의 벡터 (1 차원 텐서) (선택적), 배치에서 직렬화 된 프로토스의 이름.</target>
        </trans-unit>
        <trans-unit id="707a178ba9e4d66407d33dea9b88636cd6e74d09" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;example_state_data&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. a list of vectors containing the example state data.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;example_state_data&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;float32&lt;/code&gt; 유형의 &lt;code&gt;Tensor&lt;/code&gt; . 예시적인 상태 데이터를 포함하는 벡터의리스트.</target>
        </trans-unit>
        <trans-unit id="036df8b0ef9ecf500e474c02f1917e294216ce16" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;example_weights&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. a vector which contains the weight associated with each example.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;example_weights&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;float32&lt;/code&gt; 유형의 &lt;code&gt;Tensor&lt;/code&gt; . 각 예와 관련된 가중치를 포함하는 벡터</target>
        </trans-unit>
        <trans-unit id="0c5495c204897d084e685ace3058a089c9bfd71b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;examples&lt;/code&gt;&lt;/b&gt;: A string &lt;code&gt;Tensor&lt;/code&gt;, expected to accept serialized tf.Examples.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;examples&lt;/code&gt; &lt;/b&gt; :직렬화 된 tf.Examples를 허용 할 것으로 예상되는문자열 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8383cc376dd65e9129937606be52ead6b9cb440e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;exception_type&lt;/code&gt;&lt;/b&gt;: The expected type of exception that should be raised.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;exception_type&lt;/code&gt; &lt;/b&gt; : 예상되는 예외 유형입니다.</target>
        </trans-unit>
        <trans-unit id="91b55e4f0ab3840a1d5c4866acfe3f7edd85c51d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;exclusive&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;True&lt;/code&gt;, perform exclusive cumprod.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;exclusive&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;True&lt;/code&gt; &lt;b&gt;인&lt;/b&gt; 경우독점 cumprod를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="28380716f29dc10b6269cb7887d5402d56227147" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;exclusive&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;True&lt;/code&gt;, perform exclusive cumsum.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;exclusive&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;True&lt;/code&gt; &lt;b&gt;인&lt;/b&gt; 경우독점 cumsum을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="745fc7fca6056e3e7aa971336914966a6c19952b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;exclusive&lt;/code&gt;&lt;/b&gt;: If &lt;code&gt;True&lt;/code&gt;, perform exclusive cumulative log-sum-exp.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;exclusive&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;True&lt;/code&gt; &lt;b&gt;인&lt;/b&gt; 경우독점 누적 log-sum-exp를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="db5f52f5ce0354700a30030dea8ae1018cd8e4a9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;exclusive&lt;/code&gt;&lt;/b&gt;: True iff at most one predicate is allowed to evaluate to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;exclusive&lt;/code&gt; &lt;/b&gt; : 최대 하나의 술어가 &lt;code&gt;True&lt;/code&gt; 로 평가 될 수있습니다.</target>
        </trans-unit>
        <trans-unit id="26dbfe6aff765452c67be77a34085ea3d204a09c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;exclusive_resource_access&lt;/code&gt;&lt;/b&gt;: Whether the resources required by &lt;code&gt;fn&lt;/code&gt; should be exclusive to this &lt;code&gt;CriticalSection&lt;/code&gt;. Default: &lt;code&gt;True&lt;/code&gt;. You may want to set this to &lt;code&gt;False&lt;/code&gt; if you will be accessing a resource in read-only mode in two different CriticalSections.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;exclusive_resource_access&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;fn&lt;/code&gt; 에 필요한 자원이이 &lt;code&gt;CriticalSection&lt;/code&gt; 에 배타적이어야하는지 여부입니다. 기본값 : &lt;code&gt;True&lt;/code&gt; . 두 개의 다른 CriticalSection에서 읽기 전용 모드로 리소스에 액세스하려는 경우이 값을 &lt;code&gt;False&lt;/code&gt; 로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a55daf6a26ce9fee4b7346f0711c8a3e7d6977a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;execution_mode&lt;/code&gt;&lt;/b&gt;: (Optional.) Policy controlling how operations dispatched are actually executed. When set to None, an appropriate value will be picked automatically. The value picked may change between TensorFlow releases. Valid values:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;execution_mode&lt;/code&gt; &lt;/b&gt; : (선택 사항) 디스패치 작업이 실제로 실행되는 방식을 제어하는 ​​정책입니다. 없음으로 설정하면 적절한 값이 자동으로 선택됩니다. 선택된 값은 TensorFlow 릴리스간에 변경 될 수 있습니다. 유효한 값 :</target>
        </trans-unit>
        <trans-unit id="a36c79ea411b5dc735a95236c25aac422300d80c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;executor_type&lt;/code&gt;&lt;/b&gt;: a string for the name of the executor to be used to execute functions defined by tf.contrib.eager.defun.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;executor_type&lt;/code&gt; &lt;/b&gt; : tf.contrib.eager.defun에 의해 정의 된 함수를 실행하는 데 사용되는 실행기 이름의 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="ecd5121a423c8b0b38d247d42cd88373c74a5b40" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expand_animations&lt;/code&gt;&lt;/b&gt;: Controls the shape of the returned op's output. If &lt;code&gt;True&lt;/code&gt;, the returned op will produce a 3-D tensor for PNG, JPEG, and BMP files; and a 4-D tensor for all GIFs, whether animated or not. If, &lt;code&gt;False&lt;/code&gt;, the returned op will produce a 3-D tensor for all file types and will truncate animated GIFs to the first frame.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expand_animations&lt;/code&gt; &lt;/b&gt; : 반환 된 op 출력의 모양을 제어합니다. 경우 &lt;code&gt;True&lt;/code&gt; , 반환 된 영업 이익은 PNG, JPEG 및 BMP 파일에 대한 3 차원 텐서를 생성합니다; 애니메이션 여부에 관계없이 모든 GIF에 대한 4D 텐서. , 경우 &lt;code&gt;False&lt;/code&gt; , 반환 된 영업 이익은 모든 파일 유형에 대한 3 차원 텐서를 생성하고 첫 번째 프레임으로 애니메이션 GIF를 자릅니다.</target>
        </trans-unit>
        <trans-unit id="d181ac22b198854a762f51e01b19cc378912326a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expand_composites&lt;/code&gt;&lt;/b&gt;: If true, then composite tensors such as &lt;a href=&quot;../sparse/sparsetensor&quot;&gt;&lt;code&gt;tf.SparseTensor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../raggedtensor&quot;&gt;&lt;code&gt;tf.RaggedTensor&lt;/code&gt;&lt;/a&gt; are expanded into their component tensors.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expand_composites&lt;/code&gt; &lt;/b&gt; : true 인 경우&lt;a href=&quot;../sparse/sparsetensor&quot;&gt; &lt;code&gt;tf.SparseTensor&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;../raggedtensor&quot;&gt; &lt;code&gt;tf.RaggedTensor&lt;/code&gt; &lt;/a&gt; 와 같은 복합 텐서는 구성 요소 텐서로 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="358ad8d2f8bb5d0269351533e0fc3e5311e125f7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expand_composites&lt;/code&gt;&lt;/b&gt;: If true, then composite tensors such as tf.SparseTensor and tf.RaggedTensor are expanded into their component tensors.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expand_composites&lt;/code&gt; &lt;/b&gt; : true 인 경우 tf.SparseTensor 및 tf.RaggedTensor와 같은 복합 텐서는 구성 요소 텐서로 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="c9efc928064942a46b048395a5e34248483adea5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expand_nested&lt;/code&gt;&lt;/b&gt;: Whether to expand nested models into clusters.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expand_nested&lt;/code&gt; &lt;/b&gt; : 중첩 된 모델을 클러스터로 확장할지 여부</target>
        </trans-unit>
        <trans-unit id="08db62d46863d2643eb542e34c11be45cff3ba60" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expand_nested&lt;/code&gt;&lt;/b&gt;: whether to expand nested models into clusters.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expand_nested&lt;/code&gt; &lt;/b&gt; : 중첩 된 모델을 클러스터로 확장할지 여부</target>
        </trans-unit>
        <trans-unit id="7fb24ab0c7c265e1ba6e720892c72758d126f777" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expand_nonconcat_dim&lt;/code&gt;&lt;/b&gt;: Whether to allow the expansion in the non-concat dimensions. Defaulted to False.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expand_nonconcat_dim&lt;/code&gt; &lt;/b&gt; : 비 연속 치수의 확장 허용 여부입니다. 기본값은 False입니다.</target>
        </trans-unit>
        <trans-unit id="0e6cb6054a659adec49cef327d1afe805f975f36" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expand_nonconcat_dims&lt;/code&gt;&lt;/b&gt;: alias for expand_nonconcat_dim</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expand_nonconcat_dims&lt;/code&gt; &lt;/b&gt; :&lt;b&gt; expand_nonconcat_dim의&lt;/b&gt; 별명</target>
        </trans-unit>
        <trans-unit id="c3e8809e9e7ece436d62e5bdc3fa3a4006009690" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected&lt;/code&gt;&lt;/b&gt;: The &lt;code&gt;GraphDef&lt;/code&gt; we expected.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected&lt;/code&gt; &lt;/b&gt; :우리가 예상한 &lt;code&gt;GraphDef&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f559f5f4920bc2b79837da1fc5072f3ebf8cf92b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected_dtype&lt;/code&gt;&lt;/b&gt;: Expected data type.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected_dtype&lt;/code&gt; &lt;/b&gt; : 예상 데이터 유형입니다.</target>
        </trans-unit>
        <trans-unit id="afb0d4f17919df5bb28295184d7c33d5d1082fe7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected_end&lt;/code&gt;&lt;/b&gt;: str</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected_end&lt;/code&gt; &lt;/b&gt; : str</target>
        </trans-unit>
        <trans-unit id="5c1e14e570e56656739dc0f7a130c51f8dc6785a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected_err_re_or_predicate&lt;/code&gt;&lt;/b&gt;: If this is callable, it should be a function of one argument that inspects the passed-in exception and returns True (success) or False (please fail the test). Otherwise, the error message is expected to match this regular expression partially.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected_err_re_or_predicate&lt;/code&gt; &lt;/b&gt; : 호출 할 수있는 경우 전달 된 예외를 검사하고 True (성공) 또는 False (테스트에 실패)를 반환하는 하나의 인수 함수 여야합니다. 그렇지 않으면 오류 메시지가이 정규식과 부분적으로 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="0c90b743c9db744b45b95e36f62aef5878c83ad7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected_exception&lt;/code&gt;&lt;/b&gt;: Exception class expected to be raised.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected_exception&lt;/code&gt; &lt;/b&gt; : 예외 클래스가 발생할 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="0f64e8a1e374577864949fa30dd0d842aac559ab" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected_exception_message&lt;/code&gt;&lt;/b&gt;: String message expected in the raised exception. For a raise exception e, expected_exception_message must equal str(e).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected_exception_message&lt;/code&gt; &lt;/b&gt; : 발생한 예외에서 예상되는 문자열 메시지입니다. 발생 예외 e의 경우 expected_exception_message는 str (e)와 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="333b44ad8336d0abbd8618158726a13a6b6fd58c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected_len&lt;/code&gt;&lt;/b&gt;: The expected length of the container.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected_len&lt;/code&gt; &lt;/b&gt; : 컨테이너의 예상 길이입니다.</target>
        </trans-unit>
        <trans-unit id="779dd828570c71571c4ddf846809621cf77ab46b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected_message_maybe_ascii&lt;/code&gt;&lt;/b&gt;: proto message in original or ascii form.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected_message_maybe_ascii&lt;/code&gt; &lt;/b&gt; : 원본 또는 ASCII 형식의 프로토 메시지.</target>
        </trans-unit>
        <trans-unit id="d6873ed4a77d49ba02c7af44617aa0e0e0f07ca1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected_regex&lt;/code&gt;&lt;/b&gt;: Regex (re pattern object or string) expected to be found in error message.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected_regex&lt;/code&gt; &lt;/b&gt; : 정규식 (패턴 오브젝트 또는 문자열)이 오류 메시지에있을 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="dd5ac46ee5c7f87a6a1f7ca42b9cba3c196ec6b2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected_seq&lt;/code&gt;&lt;/b&gt;: A sequence containing elements we are expecting.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected_seq&lt;/code&gt; &lt;/b&gt; :&lt;b&gt; 예상되는&lt;/b&gt; 요소를 포함하는 시퀀스입니다.</target>
        </trans-unit>
        <trans-unit id="d69d9d323e0ff0ef21f3ac3b3b179d2755a59075" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected_set&lt;/code&gt;&lt;/b&gt;: (&lt;code&gt;list&lt;/code&gt;, &lt;code&gt;tuple&lt;/code&gt; or &lt;code&gt;set&lt;/code&gt;) The closed set that the elements of the value of &lt;code&gt;target&lt;/code&gt; are expected to fall into.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected_set&lt;/code&gt; &lt;/b&gt; : ( &lt;code&gt;list&lt;/code&gt; , &lt;code&gt;tuple&lt;/code&gt; 또는 &lt;code&gt;set&lt;/code&gt; ) &lt;code&gt;target&lt;/code&gt; 값의 요소가 포함될 &lt;b&gt;것으로 예상&lt;/b&gt; 되는 닫힌 집합입니다.</target>
        </trans-unit>
        <trans-unit id="dcf91dfb2943627f561701e23b942adac0110a22" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected_shape&lt;/code&gt;&lt;/b&gt;: A TensorShape. If set, initial_value is expected to have this shape.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected_shape&lt;/code&gt; &lt;/b&gt; : TensorShape. 설정되면 initial_value는이 모양을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="47d5a6c18211a19f990fb0b96d0920cd1972badb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected_start&lt;/code&gt;&lt;/b&gt;: str</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected_start&lt;/code&gt; &lt;/b&gt; : str</target>
        </trans-unit>
        <trans-unit id="57a132768d673a92bc9cf978dba236e236d23b45" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;expected_warning&lt;/code&gt;&lt;/b&gt;: Warning class expected to be triggered.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;expected_warning&lt;/code&gt; &lt;/b&gt; : 경고 클래스가 트리거 될 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="4bd1ddd20cc8b78f8f9775217264c9d25ef47417" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_autograph_options&lt;/code&gt;&lt;/b&gt;: Optional tuple of &lt;code&gt;tf.autograph.experimental.Feature&lt;/code&gt; values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_autograph_options&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;tf.autograph.experimental.Feature&lt;/code&gt; 값의 선택적 튜플.</target>
        </trans-unit>
        <trans-unit id="b3b83d4d1f6ae6bdfabee811c53cefc2afd73d32" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_compile&lt;/code&gt;&lt;/b&gt;: If True, the function is always compiled by &lt;a href=&quot;https://www.tensorflow.org/xla&quot;&gt;XLA&lt;/a&gt;. XLA may be more efficient in some cases (e.g. TPU, XLA_GPU, dense tensor computations).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_compile&lt;/code&gt; &lt;/b&gt; : True 인 경우 함수는 항상&lt;a href=&quot;https://www.tensorflow.org/xla&quot;&gt; XLA에&lt;/a&gt; 의해 컴파일됩니다. 경우에 따라 XLA가 더 효율적일 수 있습니다 (예 : TPU, XLA_GPU, 고밀도 텐서 계산).</target>
        </trans-unit>
        <trans-unit id="8c400712b641e320ef5956e1ecab68150334c323" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_debug_info_func&lt;/code&gt;&lt;/b&gt;: An experimental function to retrieve the graph debug info for a set of nodes from the &lt;code&gt;graph_def&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_debug_info_func&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;graph_def&lt;/code&gt; 에서 노드 집합에 대한 그래프 디버그 정보를 검색하는 실험 함수입니다.</target>
        </trans-unit>
        <trans-unit id="e0b5a91622fd1b50a0626e83c3380d6d6c4fcfb2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_delegates&lt;/code&gt;&lt;/b&gt;: Experimental. Subject to change. List of &lt;a href=&quot;https://www.tensorflow.org/lite/performance/delegates&quot;&gt;TfLiteDelegate&lt;/a&gt; objects returned by lite.load_delegate().</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_delegates&lt;/code&gt; &lt;/b&gt; : 실험적. 변경 될 수 있습니다. lite.load_delegate ()에 의해 반환 된&lt;a href=&quot;https://www.tensorflow.org/lite/performance/delegates&quot;&gt; TfLiteDelegate&lt;/a&gt; 객체의목록.</target>
        </trans-unit>
        <trans-unit id="15448903369024d9122fa201f798c873fec0769b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_distribute&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;tf.contrib.distribute.DistributeConfig&lt;/code&gt; object specifying DistributionStrategy-related configuration. The &lt;code&gt;train_distribute&lt;/code&gt; and &lt;code&gt;eval_distribute&lt;/code&gt; can be passed as parameters to &lt;code&gt;RunConfig&lt;/code&gt; or set in &lt;code&gt;experimental_distribute&lt;/code&gt; but not both.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_distribute&lt;/code&gt; &lt;/b&gt; :DistributionStrategy 관련 구성을 지정하는 선택적 &lt;code&gt;tf.contrib.distribute.DistributeConfig&lt;/code&gt; 객체입니다. &lt;code&gt;train_distribute&lt;/code&gt; 및 &lt;code&gt;eval_distribute&lt;/code&gt; 는 매개 변수로 전달 될 수 &lt;code&gt;RunConfig&lt;/code&gt; 또는 설정 &lt;code&gt;experimental_distribute&lt;/code&gt; 있지만 둘.</target>
        </trans-unit>
        <trans-unit id="2cd8dd7525500fb6fb4162541f089e6b8789cc8b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_gradient_multiplier_fn&lt;/code&gt;&lt;/b&gt;: (Optional) A Fn taking global step as input returning the current multiplier for all embedding gradients.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_gradient_multiplier_fn&lt;/code&gt; &lt;/b&gt; : (선택 사항) 모든 포함 그라디언트에 대한 현재 승수를 반환하는 입력으로 전역 단계를 취하는 Fn입니다.</target>
        </trans-unit>
        <trans-unit id="5bbfc26e28409b971d0e86c423e0fe51b8ad7895" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_host_call_every_n_steps&lt;/code&gt;&lt;/b&gt;: Within a training loop, this argument sets how often host calls are performed during training. Host calls will be evaluated every n steps within a training loop where n is the value of this argument.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_host_call_every_n_steps&lt;/code&gt; &lt;/b&gt; : 교육 루프 내에서이 인수는 교육 중에 호스트 호출이 수행되는 빈도를 설정합니다. 호스트 호출은 훈련 루프 내에서 n 단계마다 평가되며, 여기서 n은이 인수의 값입니다.</target>
        </trans-unit>
        <trans-unit id="e0189b6c58c9796882066a61f4d497bbf0a7a0da" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_implements&lt;/code&gt;&lt;/b&gt;: If provided, contains a name of a &quot;known&quot; function this implements. For example &quot;mycompany.my_recurrent_cell&quot;. This is stored as an attribute in inference function, which can then be detected when processing serialized function. See https://github.com/tensorflow/community/blob/master/rfcs/20190610-standardizing-composite_ops.md for details. For an example of utilizing this attribute see: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/compiler/mlir/lite/transforms/prepare_composite_functions_tf.cc The code above automatically detects and substitutes function that implements &quot;embedded_matmul&quot; and allows TFLite to substitute its own implementations. For instance, a tensorflow user can use this attribute to mark that their function also implements &lt;code&gt;embedded_matmul&lt;/code&gt;`` (perhaps more efficiently!) by specifying it using this flag.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_implements&lt;/code&gt; &lt;/b&gt; : 제공되는 경우이 기능이 구현하는 &quot;알려진&quot;기능의 이름을 포함합니다. 예를 들어 &quot;mycompany.my_recurrent_cell&quot;입니다. 이것은 추론 함수에 속성으로 저장되며 직렬화 된 함수를 처리 할 때 감지 될 수 있습니다. 자세한 내용은 https://github.com/tensorflow/community/blob/master/rfcs/20190610-standardizing-composite_ops.md를 참조하십시오. 이 속성을 활용하는 예는 다음을 참조하십시오. https://github.com/tensorflow/tensorflow/blob/master/tensorflow/compiler/mlir/lite/transforms/prepare_composite_functions_tf.cc 위 코드는 &quot;embedded_matmul을 구현하는 기능을 자동으로 감지하고 대체합니다. &quot;를 통해 TFLite가 자체 구현을 대체 할 수 있습니다. 예를 들어 &lt;code&gt;embedded_matmul&lt;/code&gt; ``이 플래그를 사용하여 지정함으로써 (아마도 더 효율적입니다!)</target>
        </trans-unit>
        <trans-unit id="bccd3aef681ac5150a2707dfd0498f97f5d8f19b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_max_worker_delay_secs&lt;/code&gt;&lt;/b&gt;: An optional integer specifying the maximum time a worker should wait before starting. By default, workers are started at staggered times, with each worker being delayed by up to 60 seconds. This is intended to reduce the risk of divergence, which can occur when many workers simultaneously update the weights of a randomly initialized model. Users who warm-start their models and train them for short durations (a few minutes or less) should consider reducing this default to improve training times.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_max_worker_delay_secs&lt;/code&gt; &lt;/b&gt; : 작업자가 시작하기 전에 대기해야하는 최대 시간을 지정하는 선택적 정수입니다. 기본적으로 작업자는 엇갈린 시간에 시작되며 각 작업자는 최대 60 초 지연됩니다. 이는 많은 작업자가 임의로 초기화 된 모델의 가중치를 동시에 업데이트 할 때 발생할 수있는 발산 위험을 줄이기위한 것입니다. 모델을 웜 스타트하고 짧은 시간 (몇 분 이하) 동안 모델을 훈련시키는 사용자는 훈련 시간을 개선하기 위해이 기본값을 줄이는 것을 고려해야합니다.</target>
        </trans-unit>
        <trans-unit id="cfe2e1e3d97cbfffd99b22d1087f94cd78dc51d5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_mode&lt;/code&gt;&lt;/b&gt;: &lt;a href=&quot;../../../../estimator/modekeys&quot;&gt;&lt;code&gt;tf.estimator.ModeKeys&lt;/code&gt;&lt;/a&gt; value indicating with mode will be exported. Note that this feature is experimental.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_mode&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../../../../estimator/modekeys&quot;&gt; &lt;code&gt;tf.estimator.ModeKeys&lt;/code&gt; &lt;/a&gt; 나타내는 tf.estimator.ModeKeys 값이 내보내집니다. 이 기능은 실험용입니다.</target>
        </trans-unit>
        <trans-unit id="d5ff5e55e72c0b739e198d8b4100ecf33879e591" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_mode&lt;/code&gt;&lt;/b&gt;: &lt;a href=&quot;../../../estimator/modekeys&quot;&gt;&lt;code&gt;tf.estimator.ModeKeys&lt;/code&gt;&lt;/a&gt; value indicating with mode will be exported. Note that this feature is experimental.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_mode&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../../../estimator/modekeys&quot;&gt; &lt;code&gt;tf.estimator.ModeKeys&lt;/code&gt; &lt;/a&gt; 나타내는 tf.estimator.ModeKeys 값이 내보내집니다. 이 기능은 실험용입니다.</target>
        </trans-unit>
        <trans-unit id="973477ad5e9b4a07ca5f8baf7d352d74be6608f4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_mode&lt;/code&gt;&lt;/b&gt;: &lt;a href=&quot;../modekeys&quot;&gt;&lt;code&gt;tf.estimator.ModeKeys&lt;/code&gt;&lt;/a&gt; value indicating with mode will be exported. Note that this feature is experimental.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_mode&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../modekeys&quot;&gt; &lt;code&gt;tf.estimator.ModeKeys&lt;/code&gt; &lt;/a&gt; 나타내는 tf.estimator.ModeKeys 값이 내보내집니다. 이 기능은 실험용입니다.</target>
        </trans-unit>
        <trans-unit id="1fbeed0602347f6fc948b3ad603ce296e1a96031" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_mode&lt;/code&gt;&lt;/b&gt;: &lt;a href=&quot;modekeys&quot;&gt;&lt;code&gt;tf.estimator.ModeKeys&lt;/code&gt;&lt;/a&gt; value indicating with mode will be exported. Note that this feature is experimental.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_mode&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;modekeys&quot;&gt; &lt;code&gt;tf.estimator.ModeKeys&lt;/code&gt; &lt;/a&gt; 나타내는 tf.estimator.ModeKeys 값이 내보내집니다. 이 기능은 실험용입니다.</target>
        </trans-unit>
        <trans-unit id="630bd5027256f3a3d567fb2299896d9cd87d2b86" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_new_converter&lt;/code&gt;&lt;/b&gt;: Experimental flag, subject to change. Enables MLIR-based conversion instead of TOCO conversion.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_new_converter&lt;/code&gt; &lt;/b&gt; : 실험용 플래그이며 변경 될 수 있습니다. TOCO 변환 대신 MLIR 기반 변환을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="e4ff5691ef82f9a7999599e75b3d610f134f7760" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_new_quantizer&lt;/code&gt;&lt;/b&gt;: Experimental flag, subject to change. Enables MLIR-based post-training quantization.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_new_quantizer&lt;/code&gt; &lt;/b&gt; : 실험용 플래그이며 변경 될 수 있습니다. MLIR 기반 사후 훈련 양자화를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="0c51da620ca48d5680b24b916890b3fb2687646d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_optional_features&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;None&lt;/code&gt;, a tuple of, or a single &lt;a href=&quot;../../../autograph/experimental/feature&quot;&gt;&lt;code&gt;tf.autograph.experimental.Feature&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_optional_features&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;None&lt;/code&gt; , 튜플 또는 단일&lt;a href=&quot;../../../autograph/experimental/feature&quot;&gt; &lt;code&gt;tf.autograph.experimental.Feature&lt;/code&gt; &lt;/a&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="810027721feb7fa91bab56cf6f5fb132ce076a19" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_optional_features&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;None&lt;/code&gt;, a tuple of, or a single &lt;a href=&quot;experimental/feature&quot;&gt;&lt;code&gt;tf.autograph.experimental.Feature&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_optional_features&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;None&lt;/code&gt; , 튜플 또는 단일&lt;a href=&quot;experimental/feature&quot;&gt; &lt;code&gt;tf.autograph.experimental.Feature&lt;/code&gt; &lt;/a&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="b9a02c8adabe5823d6720a55993e6fc04f68c1ff" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_relax_shapes&lt;/code&gt;&lt;/b&gt;: When True, &lt;code&gt;tf.function&lt;/code&gt; may generate fewer, graphs that are less specialized on input shapes.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_relax_shapes&lt;/code&gt; &lt;/b&gt; : True 인 경우 &lt;code&gt;tf.function&lt;/code&gt; 은 입력 모양에 덜 전문화 된 그래프를 더 적게 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="878fd4bdcf683b82c073979b752de7061539780e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_use_pfor&lt;/code&gt;&lt;/b&gt;: If true, uses pfor for computing the Jacobian. Else uses a tf.while_loop.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_use_pfor&lt;/code&gt; &lt;/b&gt; : true 인 경우, 야곱의 계산에 pfor를 사용합니다. 그렇지 않으면 tf.while_loop를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="445f37d71f9420a1e147479d5fc2c7d70758572d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;experimental_use_pfor&lt;/code&gt;&lt;/b&gt;: If true, vectorizes the jacobian computation. Else falls back to a sequential while_loop. Vectorization can sometimes fail or lead to excessive memory usage. This option can be used to disable vectorization in such cases.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;experimental_use_pfor&lt;/code&gt; &lt;/b&gt; : true 인 경우, 자 코비안 계산을 벡터화합니다. 그렇지 않으면 순차적 while_loop로 넘어갑니다. 벡터화가 때때로 실패하거나 과도한 메모리 사용으로 이어질 수 있습니다. 이 경우이 옵션을 사용하여 벡터화를 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4b9aa80f000525887487f43d400f8b133b0a5a8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;export_dir&lt;/code&gt;&lt;/b&gt;: A directory in which to write the SavedModel.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;export_dir&lt;/code&gt; &lt;/b&gt; :&lt;b&gt; SavedModel&lt;/b&gt; 을 쓸 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="705f4b3180cbd5ba4acbc8f35315db1e07747289" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;export_dir&lt;/code&gt;&lt;/b&gt;: Absolute string path to possible export location. For example, '/my/foo/model'.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;export_dir&lt;/code&gt; &lt;/b&gt; : 가능한 내보내기 위치에 대한 절대 문자열 경로. 예를 들어, '/ my / foo / model'입니다.</target>
        </trans-unit>
        <trans-unit id="0ca87583503206d5cb6ec20504d9e94d8db7ef59" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;export_dir&lt;/code&gt;&lt;/b&gt;: Directory in which the SavedModel protocol buffer and variables to be loaded are located.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;export_dir&lt;/code&gt; &lt;/b&gt; : 저장된 모델 프로토콜 버퍼 및로드 할 변수가있는 디렉토리.</target>
        </trans-unit>
        <trans-unit id="4843d16d2816df6ea0358ff98d1d5cb25150f0cd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;export_dir&lt;/code&gt;&lt;/b&gt;: The SavedModel directory to load from.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;export_dir&lt;/code&gt; &lt;/b&gt; :로드 할 SavedModel 디렉토리.</target>
        </trans-unit>
        <trans-unit id="357c25acd66cdc31130ca57cfb1bcd6baba2011a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;export_dir&lt;/code&gt;&lt;/b&gt;: The path to which the SavedModel will be stored.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;export_dir&lt;/code&gt; &lt;/b&gt; : SavedModel이 저장 될 경로.</target>
        </trans-unit>
        <trans-unit id="366d9434028b52adce60238565b97f57fe5a85b1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;export_dir_base&lt;/code&gt;&lt;/b&gt;: A string containing a directory in which to create timestamped subdirectories containing exported &lt;code&gt;SavedModel&lt;/code&gt;s.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;export_dir_base&lt;/code&gt; &lt;/b&gt; : 익스포트 된 &lt;code&gt;SavedModel&lt;/code&gt; 을 포함하는 시간 소인 서브 디렉토리를 작성할 디렉토리가 포함 된 문자열 .</target>
        </trans-unit>
        <trans-unit id="43b5d493efc2a84f7248c52c9c1b091e2746600e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;export_outputs&lt;/code&gt;&lt;/b&gt;: Describes the output signatures to be exported to &lt;code&gt;SavedModel&lt;/code&gt; and used during serving. A dict &lt;code&gt;{name: output}&lt;/code&gt; where:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;export_outputs&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;SavedModel&lt;/code&gt; 로 내보내지고서빙 중에 사용되는출력 서명을 설명합니다. dict &lt;code&gt;{name: output}&lt;/code&gt; 여기서</target>
        </trans-unit>
        <trans-unit id="06ce0b25d054a8357fa6698a00ab66bc7fdd8c6d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;export_path&lt;/code&gt;&lt;/b&gt;: A string containing a directory where to write the export.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;export_path&lt;/code&gt; &lt;/b&gt; : 내보내기를 쓸 디렉토리가 포함 된 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="18636faf54528a2666ca81006656429a7a67478a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;export_saved_model_api_version&lt;/code&gt;&lt;/b&gt;: ExportSavedModelApiVersion, V1 or V2. With V1, &lt;code&gt;export_saved_model()&lt;/code&gt; adds rewrite() and TPUPartitionedCallOp() for user; while in v2, user is expected to add rewrite(), TPUPartitionedCallOp() etc in their model_fn. A helper function &lt;code&gt;inference_on_tpu&lt;/code&gt; is provided for V2. brn_tpu_estimator.py includes examples for both versions i.e. TPUEstimatorExportTest and TPUEstimatorExportV2Test.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;export_saved_model_api_version&lt;/code&gt; &lt;/b&gt; : ExportSavedModelApiVersion, V1 또는 V2. V1에서 &lt;code&gt;export_saved_model()&lt;/code&gt; ()은 사용자를 위해 rewrite () 및 TPUPartitionedCallOp ()를 추가합니다. v2에서는 사용자가 model_fn에 rewrite (), TPUPartitionedCallOp () 등을 추가해야합니다. 도우미 함수 &lt;code&gt;inference_on_tpu&lt;/code&gt; 가 V2에 제공됩니다. brn_tpu_estimator.py에는 TPUEstimatorExportTest 및 TPUEstimatorExportV2Test의 두 버전에 대한 예제가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ba81a3afb61889243d2106958a4fa5b6e13c1df" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;export_scope&lt;/code&gt;&lt;/b&gt;: Optional &lt;code&gt;string&lt;/code&gt;. Name scope to remove.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;export_scope&lt;/code&gt; &lt;/b&gt; : 선택적 &lt;code&gt;string&lt;/code&gt; . 제거 할 이름 범위.</target>
        </trans-unit>
        <trans-unit id="b8da5f677d519129bdea6dd8406f58dd2941dedd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;export_scope&lt;/code&gt;&lt;/b&gt;: Optional &lt;code&gt;string&lt;/code&gt;. Name scope under which to extract the subgraph. The scope name will be striped from the node definitions for easy import later into new name scopes. If &lt;code&gt;None&lt;/code&gt;, the whole graph is exported. graph_def and export_scope cannot both be specified.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;export_scope&lt;/code&gt; &lt;/b&gt; : 선택적 &lt;code&gt;string&lt;/code&gt; . 하위 그래프를 추출 할 이름 범위입니다. 범위 이름은 나중에 새 이름 범위로 쉽게 가져올 수 있도록 노드 정의에서 분리됩니다. 경우 &lt;code&gt;None&lt;/code&gt; , 전체 그래프가 수출되고 있습니다. graph_def 및 export_scope를 모두 지정할 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="e554d0d10d0c7d7aeeb04ed334fb8515b916b03b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;export_to_cpu&lt;/code&gt;&lt;/b&gt;: If True, &lt;code&gt;export_saved_model()&lt;/code&gt; exports a metagraph for serving on CPU.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;export_to_cpu&lt;/code&gt; &lt;/b&gt; : True 인 경우 &lt;code&gt;export_saved_model()&lt;/code&gt; 은 CPU에 게재하기 위해 메타 그래프를 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="0bfba5b654be6679d6f4fcc831c9ceaf586d3b52" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;export_to_tpu&lt;/code&gt;&lt;/b&gt;: If True, &lt;code&gt;export_saved_model()&lt;/code&gt; exports a metagraph for serving on TPU. Note that unsupported export modes such as EVAL will be ignored. For those modes, only a CPU model will be exported. Currently, export_to_tpu only supports PREDICT.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;export_to_tpu&lt;/code&gt; &lt;/b&gt; : True 인 경우 &lt;code&gt;export_saved_model()&lt;/code&gt; 은 TPU에 게재하기 위해 메타 그래프를 내 보냅니다. EVAL과 같은 지원되지 않는 내보내기 모드는 무시됩니다. 이러한 모드의 경우 CPU 모델 만 내 보냅니다. 현재 export_to_tpu는 PREDICT 만 지원합니다.</target>
        </trans-unit>
        <trans-unit id="75c656e7971906cc68312302fee4679302c38c59" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;exporters&lt;/code&gt;&lt;/b&gt;: Iterable of &lt;code&gt;Exporter&lt;/code&gt;s, or a single one, or &lt;code&gt;None&lt;/code&gt;. &lt;code&gt;exporters&lt;/code&gt; will be invoked after each evaluation.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;exporters&lt;/code&gt; &lt;/b&gt; :의의 Iterable &lt;code&gt;Exporter&lt;/code&gt; 의, 또는 하나 하나, 또는 &lt;code&gt;None&lt;/code&gt; . &lt;code&gt;exporters&lt;/code&gt; 는 각 평가 후 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="b3eb21446d7fcee1282507e07f5420cc97b7875a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;exports_to_keep&lt;/code&gt;&lt;/b&gt;: Number of exports to keep. Older exports will be garbage-collected. Defaults to 5. Set to &lt;code&gt;None&lt;/code&gt; to disable garbage collection.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;exports_to_keep&lt;/code&gt; &lt;/b&gt; : 보관할 내보내기 수입니다. 오래된 수출은 가비지 수집됩니다. 가비지 콜렉션을 사용하지 않으려면 &lt;code&gt;None&lt;/code&gt; 으로설정하십시오.</target>
        </trans-unit>
        <trans-unit id="3b7d3b6d003242a7c9d593e752ab211d31a2a0b1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;extra_feed_dict&lt;/code&gt;&lt;/b&gt;: dict that allows fixing specified tensor values during the Jacobian calculation.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;extra_feed_dict&lt;/code&gt; &lt;/b&gt; : Jacobian 계산 중에 지정된 텐서 값을 수정할 수있는 dict입니다.</target>
        </trans-unit>
        <trans-unit id="120bf8951407ff490cb102aac8933ce61da7a34b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;extract&lt;/code&gt;&lt;/b&gt;: True tries extracting the file as an Archive, like tar or zip.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;extract&lt;/code&gt; &lt;/b&gt; : True는 tar 또는 zip과 같은 파일을 아카이브로 추출합니다.</target>
        </trans-unit>
        <trans-unit id="c51f8873288bd27aeb47732477620a5a239080d4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;extrapolation_value&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. Value used for extrapolation, when applicable.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;extrapolation_value&lt;/code&gt; &lt;/b&gt; : 선택적 &lt;code&gt;float&lt;/code&gt; . 기본값은 &lt;code&gt;0&lt;/code&gt; 입니다. 해당되는 경우 외삽에 사용되는 값.</target>
        </trans-unit>
        <trans-unit id="218da213a837bb12580d6b1542f294f8480deb90" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;extras&lt;/code&gt;&lt;/b&gt;: (optional) Dict mapping string keys to additional benchmark info. Values may be either floats or values that are convertible to strings.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;extras&lt;/code&gt; &lt;/b&gt; : (선택 사항) 추가 벤치 마크 정보에 대한 딕트 매핑 문자열 키. 값은 부동 소수점이거나 문자열로 변환 가능한 값일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5d31287ec55ec986dedf932f703c091f83a7479" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;f1&lt;/code&gt;&lt;/b&gt;: A float value.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;f1&lt;/code&gt; &lt;/b&gt; : float 값.</target>
        </trans-unit>
        <trans-unit id="d0c911e3b0b111f9e1b41798a5a6f6826fb2df61" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;f2&lt;/code&gt;&lt;/b&gt;: A float value.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;f2&lt;/code&gt; &lt;/b&gt; : float 값.</target>
        </trans-unit>
        <trans-unit id="0c0248ef1922dacb699f9d062e74f1edff2486cc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;f&lt;/code&gt;&lt;/b&gt;: function &lt;code&gt;f(*x)&lt;/code&gt; that returns a &lt;code&gt;Tensor&lt;/code&gt; or nested structure of &lt;code&gt;Tensor&lt;/code&gt; outputs.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;f&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; 또는 중첩 된 &lt;code&gt;Tensor&lt;/code&gt; 출력구조를 반환하는함수 &lt;code&gt;f(*x)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e950e8e04fe4a8be03856a5eb402f9f481db8cf6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;f&lt;/code&gt;&lt;/b&gt;: function &lt;code&gt;f(*x)&lt;/code&gt; that returns a &lt;code&gt;Tensor&lt;/code&gt; or sequence of &lt;code&gt;Tensor&lt;/code&gt; outputs.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;f&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; 또는 &lt;code&gt;Tensor&lt;/code&gt; 출력시퀀스를 반환하는함수 &lt;code&gt;f(*x)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="259d3bdc165a844ebdb99e50dafadf76af840766" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;f&lt;/code&gt;&lt;/b&gt;: function &lt;code&gt;f(*x)&lt;/code&gt; that returns a tuple &lt;code&gt;(y, grad_fn)&lt;/code&gt; where:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;f&lt;/code&gt; &lt;/b&gt; : 함수 &lt;code&gt;f(*x)&lt;/code&gt; 이 복귀 튜플 &lt;code&gt;(y, grad_fn)&lt;/code&gt; 여기서 :</target>
        </trans-unit>
        <trans-unit id="aecf5f03211918a237862be86795beb78b3c69cd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;f&lt;/code&gt;&lt;/b&gt;: the function.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;f&lt;/code&gt; &lt;/b&gt; : 기능.</target>
        </trans-unit>
        <trans-unit id="465854017d7b0c8f44fbc47e5fdeca9c73d65256" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;factor&lt;/code&gt;&lt;/b&gt;: Float. A multiplicative factor by which the values will be scaled.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;factor&lt;/code&gt; &lt;/b&gt; : 플로트. 값이 조정되는 승수입니다.</target>
        </trans-unit>
        <trans-unit id="142d5604d3a1a196ddb2ebad1894cf610a951040" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;factor&lt;/code&gt;&lt;/b&gt;: factor by which the learning rate will be reduced. new_lr = lr * factor</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;factor&lt;/code&gt; &lt;/b&gt; : 학습률이 감소되는 요인. new_lr = lr * 인자</target>
        </trans-unit>
        <trans-unit id="250a90d668fc5ed4b1fbd28dbbb8aa488c430701" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fail_on_nan_loss&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;bool&lt;/code&gt;, whether to raise exception when loss is NaN.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fail_on_nan_loss&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;bool&lt;/code&gt; , 손실이 NaN 일 때 예외 발생 여부.</target>
        </trans-unit>
        <trans-unit id="ca5c95159b5a6d5c664b0433809b71dfe51b7c46" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;false_fn&lt;/code&gt;&lt;/b&gt;: The callable to be performed if pred is false.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;false_fn&lt;/code&gt; &lt;/b&gt; : pred가 false 인 경우 수행 할 호출 가능입니다.</target>
        </trans-unit>
        <trans-unit id="f948b8052a14aebd639eaef361a879b402c976b4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;false_negatives&lt;/code&gt;&lt;/b&gt;: A float &lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[len(thresholds)]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;false_negatives&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;[len(thresholds)]&lt;/code&gt; 모양의 부동 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9df5467d2c33152a8ab52adb077c5e73dd6f569f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;false_positives&lt;/code&gt;&lt;/b&gt;: A float &lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[len(thresholds)]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;false_positives&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;[len(thresholds)]&lt;/code&gt; 모양의 부동 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="773379dad4a66e2752f62e0d46cd7c7550bc5e87" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;family&lt;/code&gt;&lt;/b&gt;: Optional; if provided, used as the prefix of the summary tag name, which controls the tab name used for display on Tensorboard.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;family&lt;/code&gt; &lt;/b&gt; : 선택; 제공된 경우 요약 태그 이름의 접 두부로 사용되며 Tensorboard에 표시하는 데 사용되는 탭 이름을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="be18ea0d8db43b5fa4ad202f4d94ea4a93c811be" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;family&lt;/code&gt;&lt;/b&gt;: Optional; if provided, used as the prefix of the summary tag, which controls the name used for display on TensorBoard when display_name is not set.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;family&lt;/code&gt; &lt;/b&gt; : 선택; 제공되는 경우, display_name이 설정되지 않은 경우 TensorBoard에 표시하는 데 사용되는 이름을 제어하는 ​​요약 태그의 접 두부로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2e16ff6374f072371b45366675cd004ca683e804" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fancy_upscaling&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. If true use a slower but nicer upscaling of the chroma planes (yuv420/422 only).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fancy_upscaling&lt;/code&gt; &lt;/b&gt; : 선택적인 &lt;code&gt;bool&lt;/code&gt; . 기본값은 &lt;code&gt;True&lt;/code&gt; 입니다. 참이면 크로마 평면의 더 느리지 만 더 나은 업 스케일링을 사용하십시오 (yuv420 / 422 만 해당).</target>
        </trans-unit>
        <trans-unit id="8c38708fdbb92f9d0fe9ec0bb5cbfd98ad5bcb32" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;farray1&lt;/code&gt;&lt;/b&gt;: a list of float values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;farray1&lt;/code&gt; &lt;/b&gt; : 부동 소수점 값 목록.</target>
        </trans-unit>
        <trans-unit id="a38504d02dd000863bda6f01bc214b20b9210c62" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;farray2&lt;/code&gt;&lt;/b&gt;: a list of float values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;farray2&lt;/code&gt; &lt;/b&gt; : float 값의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="06bda46c8151cdd640e3ff58eb048108074c555c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fast&lt;/code&gt;&lt;/b&gt;: bool. Defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fast&lt;/code&gt; &lt;/b&gt; : bool. 기본값은 &lt;code&gt;True&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="50c965013c51b67b28e517dd5e0325d45b2ef567" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_columns&lt;/code&gt;&lt;/b&gt;: All embedding &lt;code&gt;FeatureColumn&lt;/code&gt;s used by model.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_columns&lt;/code&gt; &lt;/b&gt; :모델에 사용되는모든 포함 &lt;code&gt;FeatureColumn&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eb3faaf90094db13975dbe72f23939dc91ebe135" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_columns&lt;/code&gt;&lt;/b&gt;: An iterable containing all feature columns. All items should be instances of classes derived from &lt;code&gt;FeatureColumn&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_columns&lt;/code&gt; &lt;/b&gt; : 모든 기능 열을 포함하는 iterable. 모든 항목은 &lt;code&gt;FeatureColumn&lt;/code&gt; 에서 파생 된 클래스의 인스턴스 여야합니다.</target>
        </trans-unit>
        <trans-unit id="19e0202b4d0851245b06be50dacf9153fc3718b4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_columns&lt;/code&gt;&lt;/b&gt;: An iterable containing all feature columns. All items should be instances of classes derived from &lt;code&gt;_FeatureColumn&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_columns&lt;/code&gt; &lt;/b&gt; : 모든 기능 열을 포함하는 iterable. 모든 항목은 &lt;code&gt;_FeatureColumn&lt;/code&gt; 에서 파생 된 클래스의 인스턴스 여야합니다.</target>
        </trans-unit>
        <trans-unit id="02143102ef50ab355054498a962b61637fa9b5a9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_columns&lt;/code&gt;&lt;/b&gt;: An iterable containing all the feature columns used by the model.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_columns&lt;/code&gt; &lt;/b&gt; : 모델이 사용하는 모든 기능 열을 포함하는 iterable.</target>
        </trans-unit>
        <trans-unit id="4e61befb309e40a37ee07940ff82a06ce5f9f306" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_columns&lt;/code&gt;&lt;/b&gt;: An iterable containing all the feature columns used by the model. All items in the set should be instances of classes derived from &lt;code&gt;FeatureColumn&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_columns&lt;/code&gt; &lt;/b&gt; : 모델이 사용하는 모든 기능 열을 포함하는 iterable. 세트의 모든 항목은 &lt;code&gt;FeatureColumn&lt;/code&gt; 에서 파생 된 클래스의 인스턴스 여야합니다.</target>
        </trans-unit>
        <trans-unit id="53e08e4b7c17d69a98a1b22f2525956a8b3fe704" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_columns&lt;/code&gt;&lt;/b&gt;: An iterable containing all the feature columns used by the model. All items in the set should be instances of classes derived from &lt;code&gt;_FeatureColumn&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_columns&lt;/code&gt; &lt;/b&gt; : 모델이 사용하는 모든 기능 열을 포함하는 iterable. 세트의 모든 항목은 &lt;code&gt;_FeatureColumn&lt;/code&gt; 에서 파생 된 클래스의 인스턴스 여야합니다.</target>
        </trans-unit>
        <trans-unit id="2ad13390960a703f684dd0098b6e2a07db44bd93" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_columns&lt;/code&gt;&lt;/b&gt;: An iterable containing the FeatureColumns to use as inputs to your model. All items should be instances of classes derived from &lt;code&gt;DenseColumn&lt;/code&gt; such as &lt;code&gt;numeric_column&lt;/code&gt;, &lt;code&gt;embedding_column&lt;/code&gt;, &lt;code&gt;bucketized_column&lt;/code&gt;, &lt;code&gt;indicator_column&lt;/code&gt;. If you have categorical features, you can wrap them with an &lt;code&gt;embedding_column&lt;/code&gt; or &lt;code&gt;indicator_column&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_columns&lt;/code&gt; &lt;/b&gt; : 모델의 입력으로 사용할 FeatureColumns를 포함하는 iterable입니다. 모든 항목은 &lt;code&gt;numeric_column&lt;/code&gt; , &lt;code&gt;embedding_column&lt;/code&gt; , &lt;code&gt;bucketized_column&lt;/code&gt; , &lt;code&gt;indicator_column&lt;/code&gt; 과 같은 &lt;code&gt;DenseColumn&lt;/code&gt; 에서 파생 된 클래스의 인스턴스 여야합니다. 범주 형 기능이있는 경우 &lt;code&gt;embedding_column&lt;/code&gt; 또는 &lt;code&gt;indicator_column&lt;/code&gt; 으로 래핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee41cd25990ff17eada282041c37fee6030e137e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_columns&lt;/code&gt;&lt;/b&gt;: An iterable containing the FeatureColumns to use as inputs to your model. All items should be instances of classes derived from &lt;code&gt;_DenseColumn&lt;/code&gt; such as &lt;code&gt;numeric_column&lt;/code&gt;, &lt;code&gt;embedding_column&lt;/code&gt;, &lt;code&gt;bucketized_column&lt;/code&gt;, &lt;code&gt;indicator_column&lt;/code&gt;. If you have categorical features, you can wrap them with an &lt;code&gt;embedding_column&lt;/code&gt; or &lt;code&gt;indicator_column&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_columns&lt;/code&gt; &lt;/b&gt; : 모델의 입력으로 사용할 FeatureColumns를 포함하는 iterable입니다. 모든 항목은 &lt;code&gt;numeric_column&lt;/code&gt; , &lt;code&gt;embedding_column&lt;/code&gt; , &lt;code&gt;bucketized_column&lt;/code&gt; , &lt;code&gt;indicator_column&lt;/code&gt; 과 같은 &lt;code&gt;_DenseColumn&lt;/code&gt; 에서 파생 된 클래스의 인스턴스 여야합니다. 범주 형 기능이있는 경우 &lt;code&gt;embedding_column&lt;/code&gt; 또는 &lt;code&gt;indicator_column&lt;/code&gt; 으로 래핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="910730bba73bc293cff6843d0266c96b17d56331" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_columns&lt;/code&gt;&lt;/b&gt;: An iterable containing the FeatureColumns to use as inputs to your model. All items should be instances of classes derived from &lt;code&gt;_FeatureColumn&lt;/code&gt;s.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_columns&lt;/code&gt; &lt;/b&gt; : 모델의 입력으로 사용할 FeatureColumns를 포함하는 iterable입니다. 모든 항목은 &lt;code&gt;_FeatureColumn&lt;/code&gt; 에서 파생 된 클래스의 인스턴스 여야합니다.</target>
        </trans-unit>
        <trans-unit id="7ca624383e958e4a13a0a6b9c64d8024d29c64b5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_columns&lt;/code&gt;&lt;/b&gt;: An iterable of dense sequence columns. Valid columns are</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_columns&lt;/code&gt; &lt;/b&gt; : 고밀도 시퀀스 열을 반복 할 수 있습니다. 유효한 열은</target>
        </trans-unit>
        <trans-unit id="aafda1c062b490d8c27ecbdb73effd53cf6c1d03" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_columns&lt;/code&gt;&lt;/b&gt;: An optionable iterable containing all the feature columns used by the model. All items in the set should be feature column instances that can be passed to &lt;code&gt;tf.feature_column.input_layer&lt;/code&gt;. If this is None, all features will be used.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_columns&lt;/code&gt; &lt;/b&gt; : 모델이 사용하는 모든 기능 열을 포함하는 선택 가능한 반복 가능. 세트의 모든 항목은 &lt;code&gt;tf.feature_column.input_layer&lt;/code&gt; 로 전달할 수있는 기능 열 인스턴스 여야 합니다. 이것이 None이면 모든 기능이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="20377cb620f3c8c364c3e06bcffb54d8d4bb9b8e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_columns&lt;/code&gt;&lt;/b&gt;: Iterable of &lt;code&gt;feature_column._FeatureColumn&lt;/code&gt; model inputs.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_columns&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;feature_column._FeatureColumn&lt;/code&gt; 모델 입력을반복 할 수있습니다.</target>
        </trans-unit>
        <trans-unit id="a48e9f91194104c163ef3f9315552ce37252b5a5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_importances&lt;/code&gt;&lt;/b&gt;: an OrderedDict, where the keys are the feature column names and the values are importances. It is sorted by importance.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_importances&lt;/code&gt; &lt;/b&gt; : OrderedDict. 키는 기능 열 이름이고 값은 중요합니다. 중요도에 따라 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="58fc683f2b23d75658d5fa3d5212d6221bf82729" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_spec&lt;/code&gt;&lt;/b&gt;: a dict of string to &lt;code&gt;VarLenFeature&lt;/code&gt;/&lt;code&gt;FixedLenFeature&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_spec&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;VarLenFeature&lt;/code&gt; / &lt;code&gt;FixedLenFeature&lt;/code&gt; 에 대한 문자열 dict.</target>
        </trans-unit>
        <trans-unit id="e0d767f317a7b81daa033f6537baca49ce14fd10" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feature_to_config_dict&lt;/code&gt;&lt;/b&gt;: A dictionary mapping features names to instances of the class &lt;code&gt;FeatureConfig&lt;/code&gt;. Either features_columns or the pair of &lt;code&gt;feature_to_config_dict&lt;/code&gt; and &lt;code&gt;table_to_config_dict&lt;/code&gt; must be specified.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feature_to_config_dict&lt;/code&gt; &lt;/b&gt; : 기능 이름을 &lt;code&gt;FeatureConfig&lt;/code&gt; 클래스의 인스턴스에 맵핑하는 사전. features_columns 또는 &lt;code&gt;feature_to_config_dict&lt;/code&gt; 및 &lt;code&gt;table_to_config_dict&lt;/code&gt; 쌍을지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="c43ca4540669dbf061dcebcd92d96444f8776bed" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; representing preactivation values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt; : 사전활성화 값을 나타내는 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4189b0389bd5104b99f4631ae79173a13532344b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; representing preactivation values. Must be one of the following types: &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt; : 사전활성화 값을 나타내는 &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;float16&lt;/code&gt; , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; 유형 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="e98b7e8a5304e83d3c897bad54100c6c97c6fcf4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; with type &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, or &lt;code&gt;int8&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;float&lt;/code&gt; , &lt;code&gt;double&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;uint8&lt;/code&gt; , &lt;code&gt;int16&lt;/code&gt; 또는 &lt;code&gt;int8&lt;/code&gt; 타입의 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99c21044633223177d0961140eb86d7ab1ca6528" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;uint8&lt;/code&gt; , &lt;code&gt;int16&lt;/code&gt; , &lt;code&gt;int8&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;bfloat16&lt;/code&gt; , &lt;code&gt;uint16&lt;/code&gt; , &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;uint32&lt;/code&gt; , &lt;code&gt;uint64&lt;/code&gt; , &lt;code&gt;qint8&lt;/code&gt; 유형 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="b94f5fe2c3391fc826a762096c2d09516b8198a4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;bfloat16&lt;/code&gt; , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; 유형 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="e708415e3be5c7bf39b2e8c2fa1b69d2e1617a9d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;qint16&lt;/code&gt;, &lt;code&gt;quint16&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;qint8&lt;/code&gt; , &lt;code&gt;quint8&lt;/code&gt; , &lt;code&gt;qint32&lt;/code&gt; , &lt;code&gt;qint16&lt;/code&gt; , &lt;code&gt;quint16&lt;/code&gt; 유형 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="26c316db6efbd60be0ab8367b4403d08adfcf761" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;dict&lt;/code&gt; mapping feature keys to &lt;code&gt;FixedLenFeature&lt;/code&gt; or &lt;code&gt;VarLenFeature&lt;/code&gt; values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt; :의 &lt;code&gt;dict&lt;/code&gt; 매핑 기능 키 &lt;code&gt;FixedLenFeature&lt;/code&gt; 또는 &lt;code&gt;VarLenFeature&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="5c9b4d9213d9017cfc07aa0777b09b942421d509" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;dict&lt;/code&gt; mapping feature keys to &lt;code&gt;FixedLenFeature&lt;/code&gt; or &lt;code&gt;VarLenFeature&lt;/code&gt; values. See &lt;a href=&quot;../../../../io/parse_example&quot;&gt;&lt;code&gt;tf.io.parse_example&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt; :의 &lt;code&gt;dict&lt;/code&gt; 매핑 기능 키 &lt;code&gt;FixedLenFeature&lt;/code&gt; 또는 &lt;code&gt;VarLenFeature&lt;/code&gt; 값. &lt;a href=&quot;../../../../io/parse_example&quot;&gt; &lt;code&gt;tf.io.parse_example&lt;/code&gt; 을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="543bb30fea51e3985018ba46f1925c30c7e543cf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;dict&lt;/code&gt; mapping feature keys to &lt;code&gt;FixedLenFeature&lt;/code&gt; or &lt;code&gt;VarLenFeature&lt;/code&gt; values. See &lt;a href=&quot;../../io/parse_example&quot;&gt;&lt;code&gt;tf.io.parse_example&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt; :의 &lt;code&gt;dict&lt;/code&gt; 매핑 기능 키 &lt;code&gt;FixedLenFeature&lt;/code&gt; 또는 &lt;code&gt;VarLenFeature&lt;/code&gt; 값. &lt;a href=&quot;../../io/parse_example&quot;&gt; &lt;code&gt;tf.io.parse_example&lt;/code&gt; 을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5c648a9fe9476c942a085d75bb36b23801b2bf61" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;dict&lt;/code&gt; mapping feature keys to &lt;code&gt;FixedLenFeature&lt;/code&gt;, &lt;code&gt;VarLenFeature&lt;/code&gt;, &lt;code&gt;RaggedFeature&lt;/code&gt;, and &lt;code&gt;SparseFeature&lt;/code&gt; values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt; :기능 키를 &lt;code&gt;FixedLenFeature&lt;/code&gt; , &lt;code&gt;VarLenFeature&lt;/code&gt; , &lt;code&gt;RaggedFeature&lt;/code&gt; 및 &lt;code&gt;SparseFeature&lt;/code&gt; 값에매핑하는 &lt;code&gt;dict&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b865dea667a79c1ca3b0163d533484efa9faa68c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;dict&lt;/code&gt; mapping feature keys to &lt;code&gt;FixedLenFeature&lt;/code&gt;, &lt;code&gt;VarLenFeature&lt;/code&gt;, &lt;code&gt;SparseFeature&lt;/code&gt;, and &lt;code&gt;RaggedFeature&lt;/code&gt; values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt; :기능 키를 &lt;code&gt;FixedLenFeature&lt;/code&gt; , &lt;code&gt;VarLenFeature&lt;/code&gt; , &lt;code&gt;SparseFeature&lt;/code&gt; 및 &lt;code&gt;RaggedFeature&lt;/code&gt; 값에매핑하는 &lt;code&gt;dict&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3bda4c2212f1976e05b0c00dd39d89420fd77b7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: A mapping from key to tensors. &lt;code&gt;_FeatureColumn&lt;/code&gt;s look up via these keys. For example &lt;code&gt;numeric_column('price')&lt;/code&gt; will look at 'price' key in this dict. Values are &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; depending on corresponding &lt;code&gt;_FeatureColumn&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt; : 키에서 텐서로의 매핑. &lt;code&gt;_FeatureColumn&lt;/code&gt; 은이 키를 통해 조회합니다. 예를 들어 &lt;code&gt;numeric_column('price')&lt;/code&gt; 은이 dict에서 'price'키를 봅니다. 값은 &lt;code&gt;Tensor&lt;/code&gt; 또는 &lt;code&gt;SparseTensor&lt;/code&gt; 이 대응에 따라 &lt;code&gt;_FeatureColumn&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="eff8c0e34ac2c90c6d0f5b3062dea200a23c3a90" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: A mapping from key to tensors. &lt;code&gt;_FeatureColumn&lt;/code&gt;s look up via these keys. For example &lt;code&gt;numeric_column('price')&lt;/code&gt; will look at 'price' key in this dict. Values can be a &lt;code&gt;SparseTensor&lt;/code&gt; or a &lt;code&gt;Tensor&lt;/code&gt; depends on corresponding &lt;code&gt;_FeatureColumn&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt; : 키에서 텐서로의 매핑. &lt;code&gt;_FeatureColumn&lt;/code&gt; 은이 키를 통해 조회합니다. 예를 들어 &lt;code&gt;numeric_column('price')&lt;/code&gt; 은이 dict에서 'price'키를 봅니다. 값은 &lt;code&gt;SparseTensor&lt;/code&gt; 이거나 &lt;code&gt;Tensor&lt;/code&gt; 는 해당 &lt;code&gt;_FeatureColumn&lt;/code&gt; 에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="4ccf833a8f17541d75bac3a40e4a286cebdea523" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: Input &lt;code&gt;dict&lt;/code&gt; mapping string feature names to &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; objects containing the values for that feature in a minibatch. Often to be used to fetch example-weight tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt; :문자열 피처 이름을 &lt;code&gt;SparseTensor&lt;/code&gt; 에서 해당 피처의 값을 포함하는 &lt;code&gt;Tensor&lt;/code&gt; 또는 SparseTensor 객체에맵핑하는입력 &lt;code&gt;dict&lt;/code&gt; . 예제 가중치 텐서를 가져 오는 데 종종 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="bbff894dbee39f00e25aa5a3bb2f64eca7356e75" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: Input &lt;code&gt;dict&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; objects.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; 또는 &lt;code&gt;SparseTensor&lt;/code&gt; 객체의입력 &lt;code&gt;dict&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="81dddb711450dd2260d08c0e60fb9b60a86c83ea" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: The features dict.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt; : 특징 dict.</target>
        </trans-unit>
        <trans-unit id="1646bf8abeb5775b5fe7ef56438a048a2757672c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: a dict of string to &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt; : 문자열 &lt;code&gt;Tensor&lt;/code&gt; 또는 &lt;code&gt;Tensor&lt;/code&gt; 대한 사전.</target>
        </trans-unit>
        <trans-unit id="b25d853a47874f50595b62ad27bdf04cbd6a4d6b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;features&lt;/code&gt;&lt;/b&gt;: a dict of string to &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;features&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; 에 문자열 dict.</target>
        </trans-unit>
        <trans-unit id="002d533d847cc9ed6f1f6780f313a56eb951f043" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;featurewise_center&lt;/code&gt;&lt;/b&gt;: Boolean. Set input mean to 0 over the dataset, feature-wise.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;featurewise_center&lt;/code&gt; &lt;/b&gt; : 부울. 기능별로 데이터 세트에서 입력 평균을 0으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="d7cfbb4bf783df879db7153e0c053994dc574f60" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;featurewise_std_normalization&lt;/code&gt;&lt;/b&gt;: Boolean. Divide inputs by std of the dataset, feature-wise.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;featurewise_std_normalization&lt;/code&gt; &lt;/b&gt; : 부울. 기능별로 데이터 세트의 표준 단위로 입력을 나눕니다.</target>
        </trans-unit>
        <trans-unit id="5ff2fd9000e46fbc6b3a8d10238709839d5c187c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feed_dict&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;dict&lt;/code&gt; of values to feed for each op iteration (see the &lt;code&gt;feed_dict&lt;/code&gt; parameter of &lt;code&gt;Session.run&lt;/code&gt;).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feed_dict&lt;/code&gt; &lt;/b&gt; :각 반복에 제공 할 값의 &lt;code&gt;dict&lt;/code&gt; ( &lt;code&gt;Session.run&lt;/code&gt; 의 &lt;code&gt;feed_dict&lt;/code&gt; 매개 변수참조).</target>
        </trans-unit>
        <trans-unit id="5e61a997966e4ad43c38a90c8a9339eac1f822ad" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feed_dict&lt;/code&gt;&lt;/b&gt;: A dictionary that maps &lt;code&gt;Tensor&lt;/code&gt; objects to feed values. See &lt;code&gt;tf.Session.run&lt;/code&gt; for a description of the valid feed values.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feed_dict&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; 오브젝트를 피드 값에맵핑하는 사전입니다. 유효한 피드 값에 대한 설명은 &lt;code&gt;tf.Session.run&lt;/code&gt; 을참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1036f45dc3ab63ec285d3a9262569f231239c12e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feed_dict&lt;/code&gt;&lt;/b&gt;: A dictionary that maps graph elements to values (described above).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feed_dict&lt;/code&gt; &lt;/b&gt; : 그래프 요소를 값에 매핑하는 사전입니다 (위 설명 참조).</target>
        </trans-unit>
        <trans-unit id="f0fab1a7e00c5bafa5ee7502db0842f48dd57361" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feed_dict&lt;/code&gt;&lt;/b&gt;: Exactly like the &lt;code&gt;feed_dict&lt;/code&gt; argument to &lt;code&gt;Session.Run()&lt;/code&gt;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feed_dict&lt;/code&gt; &lt;/b&gt; : 정확히 &lt;code&gt;feed_dict&lt;/code&gt; 인수를 &lt;code&gt;Session.Run()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0d5a746840f869cb27e91651267766e7fda05b8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feed_dict&lt;/code&gt;&lt;/b&gt;: Same as &lt;code&gt;tf.Session.run()&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feed_dict&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;tf.Session.run()&lt;/code&gt; 과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="eb6641f1f6e02019af3f22996db85e69abd34065" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feed_fn&lt;/code&gt;&lt;/b&gt;: function that takes no arguments and returns &lt;code&gt;dict&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; to feed.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feed_fn&lt;/code&gt; &lt;/b&gt; : 인수 및 반환을지지 않습니다 기능은 &lt;code&gt;dict&lt;/code&gt; 의 &lt;code&gt;Tensor&lt;/code&gt; 피드.</target>
        </trans-unit>
        <trans-unit id="08db981efd1576d061eaefa1ccebd5b4628bcdfd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feed_list&lt;/code&gt;&lt;/b&gt;: (Optional.) A list of &lt;code&gt;feed_dict&lt;/code&gt; keys. See &lt;code&gt;tf.Session.run&lt;/code&gt; for details of the allowable feed key types.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feed_list&lt;/code&gt; &lt;/b&gt; : (선택 사항) &lt;code&gt;feed_dict&lt;/code&gt; 키목록. 허용 가능한 피드 키 유형에 대한 자세한 내용은 &lt;code&gt;tf.Session.run&lt;/code&gt; 을참조하십시오.</target>
        </trans-unit>
        <trans-unit id="10ecef8eec6a00e4ff33cd54a642bd1132a20c1d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;feeds&lt;/code&gt;&lt;/b&gt;: A single graph element, or a list of graph elements.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;feeds&lt;/code&gt; &lt;/b&gt; : 단일 그래프 요소 또는 그래프 요소 목록.</target>
        </trans-unit>
        <trans-unit id="def87e316eda8f541fda73e72c54f93878b9e0e0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fetches&lt;/code&gt;&lt;/b&gt;: A single graph element, a list of graph elements, or a dictionary whose values are graph elements or lists of graph elements (described above).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fetches&lt;/code&gt; &lt;/b&gt; : 단일 그래프 요소, 그래프 요소 목록 또는 값이 그래프 요소 또는 그래프 요소 목록 인 사전 (위 설명)</target>
        </trans-unit>
        <trans-unit id="2a2cc6a01d67b4975cfba50354d1f7b67868c283" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fetches&lt;/code&gt;&lt;/b&gt;: A single graph element, a list of graph elements, or a dictionary whose values are graph elements or lists of graph elements (see documentation for &lt;code&gt;run&lt;/code&gt;).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fetches&lt;/code&gt; &lt;/b&gt; : 단일 그래프 요소, 그래프 요소 목록 또는 값이 그래프 요소 또는 그래프 요소 목록 인 사전 ( &lt;code&gt;run&lt;/code&gt; 문서 참조)</target>
        </trans-unit>
        <trans-unit id="6a322458c9b29e9c9ae052c305d51808f7a61ae9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fetches&lt;/code&gt;&lt;/b&gt;: A single graph element, or a list of graph elements.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fetches&lt;/code&gt; &lt;/b&gt; : 단일 그래프 요소 또는 그래프 요소 목록.</target>
        </trans-unit>
        <trans-unit id="b262662592afcf1ee1104e3cae2e8d1c9ace52f9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fetches&lt;/code&gt;&lt;/b&gt;: A value or list of values to fetch. See &lt;code&gt;tf.Session.run&lt;/code&gt; for details of the allowable fetch types.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fetches&lt;/code&gt; &lt;/b&gt; : 가져올 값 또는 값 목록입니다. 허용 가능한 페치 유형에 대한 자세한 내용은 &lt;code&gt;tf.Session.run&lt;/code&gt; 을참조하십시오.</target>
        </trans-unit>
        <trans-unit id="968037f9fc64b829e9dfcbab516fcc4e6389644d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fetches&lt;/code&gt;&lt;/b&gt;: Exactly like the 'fetches' argument to Session.Run(). Can be a single tensor or op, a list of 'fetches' or a dictionary of fetches. For example: fetches = global_step_tensor fetches = [train_op, summary_op, global_step_tensor] fetches = {'step': global_step_tensor, 'summ': summary_op} Note that this can recurse as expected: fetches = {'step': global_step_tensor, 'ops': [train_op, check_nan_op]}</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fetches&lt;/code&gt; &lt;/b&gt; : Session.Run ()의 'fetches'인수와 정확히 같습니다. 단일 텐서 또는 op, '페치'목록 또는 페치 사전 일 수 있습니다. 예 : fetches = global_step_tensor fetches = [train_op, summary_op, global_step_tensor] fetches = { 'step': global_step_tensor, 'summ': summary_op} 예상대로 되풀이 될 수 있습니다. fetches = { 'step': global_step_tensor, 'ops' : [train_op, check_nan_op]}</target>
        </trans-unit>
        <trans-unit id="40ba13f4197ac5e8d0c8056176a4cbb821fef41c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fetches&lt;/code&gt;&lt;/b&gt;: Same as &lt;code&gt;tf.Session.run()&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fetches&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;tf.Session.run()&lt;/code&gt; 과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="25b001dc12f4f7f98c697551201271d0e11752f0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fft_length&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. An int32 tensor of shape [1]. The FFT length.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fft_length&lt;/code&gt; &lt;/b&gt; 하십시오 &lt;code&gt;Tensor&lt;/code&gt; 형의 &lt;code&gt;int32&lt;/code&gt; . 형태의 int32 텐서 [1]. FFT 길이입니다.</target>
        </trans-unit>
        <trans-unit id="5da62ce359ed2c303dc6514814f729c773a7edcf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fft_length&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. An int32 tensor of shape [2]. The FFT length for each dimension.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fft_length&lt;/code&gt; &lt;/b&gt; 하십시오 &lt;code&gt;Tensor&lt;/code&gt; 형의 &lt;code&gt;int32&lt;/code&gt; . 형태의 int32 텐서 [2]. 각 치수의 FFT 길이입니다.</target>
        </trans-unit>
        <trans-unit id="8fabb1b45aaf449b149a43c3bb6ac322df1b0441" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fft_length&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. An int32 tensor of shape [3]. The FFT length for each dimension.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fft_length&lt;/code&gt; &lt;/b&gt; 하십시오 &lt;code&gt;Tensor&lt;/code&gt; 형의 &lt;code&gt;int32&lt;/code&gt; . 형태의 int32 텐서 [3]. 각 치수의 FFT 길이입니다.</target>
        </trans-unit>
        <trans-unit id="e66910e47dd1777e0ebcde31b538e1596bf4db30" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fft_length&lt;/code&gt;&lt;/b&gt;: An integer scalar &lt;code&gt;Tensor&lt;/code&gt;. The size of the FFT that produced &lt;code&gt;stfts&lt;/code&gt;. If not provided, uses the smallest power of 2 enclosing &lt;code&gt;frame_length&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fft_length&lt;/code&gt; &lt;/b&gt; : 정수 스칼라 &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;stfts&lt;/code&gt; 를 생성 한 FFT의 크기입니다. 제공되지 않은 경우 가장 작은 2의 엔 클로징 &lt;code&gt;frame_length&lt;/code&gt; 를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="e0c641c864e4b732ef08eaf734f77291730ee34b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fft_length&lt;/code&gt;&lt;/b&gt;: An integer scalar &lt;code&gt;Tensor&lt;/code&gt;. The size of the FFT to apply. If not provided, uses the smallest power of 2 enclosing &lt;code&gt;frame_length&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fft_length&lt;/code&gt; &lt;/b&gt; : 정수 스칼라 &lt;code&gt;Tensor&lt;/code&gt; . 적용 할 FFT의 크기입니다. 제공되지 않은 경우 가장 작은 2의 엔 클로징 &lt;code&gt;frame_length&lt;/code&gt; 를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="42fcaf24e7736ee1e5d1480ddddc8028d374ee12" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;field&lt;/code&gt;&lt;/b&gt;: String; JSON field under which the data will be stored. The field is used only if the payload is sent within a form (i.e. send_as_json is set to False).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;field&lt;/code&gt; &lt;/b&gt; : 문자열; 데이터가 저장 될 JSON 필드입니다. 이 필드는 페이로드가 양식 내에서 전송 된 경우에만 사용됩니다 (즉, send_as_json이 False로 설정 됨).</target>
        </trans-unit>
        <trans-unit id="c6fef43fd45790df770fe2c9d760b1dc32e44471" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;field_delim&lt;/code&gt;&lt;/b&gt;: (Optional.) A &lt;a href=&quot;../../../../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; scalar containing the delimiter character that separates fields in a record. Defaults to &lt;code&gt;&quot;,&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;field_delim&lt;/code&gt; &lt;/b&gt; : (선택 사항)레코드에서 필드를 구분하는 구분 문자를 포함하는&lt;a href=&quot;../../../../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt; 스칼라입니다. 기본값은 &lt;code&gt;&quot;,&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="28ebe0377269d36eca7a8e19f871cb79331d6859" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;field_delim&lt;/code&gt;&lt;/b&gt;: (Optional.) A &lt;a href=&quot;../../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; scalar containing the delimiter character that separates fields in a record. Defaults to &lt;code&gt;&quot;,&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;field_delim&lt;/code&gt; &lt;/b&gt; : (선택 사항)레코드에서 필드를 구분하는 구분 문자를 포함하는&lt;a href=&quot;../../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt; 스칼라입니다. 기본값은 &lt;code&gt;&quot;,&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b0e76c7c8e1082d8cf9f1c098e2792f246ff7d5b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;field_delim&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;,&quot;&lt;/code&gt;. Char delimiter to separate fields in a record.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;field_delim&lt;/code&gt; &lt;/b&gt; : 선택적 &lt;code&gt;string&lt;/code&gt; 입니다. 기본값은 &lt;code&gt;&quot;,&quot;&lt;/code&gt; 입니다. 레코드에서 필드를 구분하기위한 문자 구분 기호</target>
        </trans-unit>
        <trans-unit id="25de6b03dfa61f28291360a56cc4a297b044405a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;field_delim&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;,&quot;&lt;/code&gt;. char delimiter to separate fields in a record.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;field_delim&lt;/code&gt; &lt;/b&gt; : 선택적 &lt;code&gt;string&lt;/code&gt; 입니다. 기본값은 &lt;code&gt;&quot;,&quot;&lt;/code&gt; 입니다. 레코드에서 필드를 구분하기위한 문자 분리 문자.</target>
        </trans-unit>
        <trans-unit id="48687510ecd035aaca4077f58a51df8f3d800186" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;field_names&lt;/code&gt;&lt;/b&gt;: A list of &lt;code&gt;strings&lt;/code&gt;. List of strings containing proto field names.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;field_names&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;strings&lt;/code&gt; 목록. 프로토 필드 이름을 포함하는 문자열 목록.</target>
        </trans-unit>
        <trans-unit id="3bac6576c693530f13d485bb0b98c92a14057385" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;field_names&lt;/code&gt;&lt;/b&gt;: A list of &lt;code&gt;strings&lt;/code&gt;. List of strings containing proto field names. An extension field can be decoded by using its full name, e.g. EXT_PACKAGE.EXT_FIELD_NAME.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;field_names&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;strings&lt;/code&gt; 목록. 프로토 필드 이름을 포함하는 문자열 목록. 확장명 필드는 전체 이름 (예 : EXT_PACKAGE.EXT_FIELD_NAME)을 사용하여 디코딩 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a1371a38981b79230ed55ea7f9047379c18a05a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_format&lt;/code&gt;&lt;/b&gt;: Optional file format override. If omitted, the format to use is determined from the filename extension. If a file object was used instead of a filename, this parameter should always be used.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_format&lt;/code&gt; &lt;/b&gt; : 선택적 파일 형식 재정의. 생략하면 사용할 형식은 파일 이름 확장자에서 결정됩니다. 파일 이름 대신 파일 객체가 사용 된 경우이 매개 변수를 항상 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="9f25df5790e6ee5d91eab0aec95e25810e1f1078" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_hash&lt;/code&gt;&lt;/b&gt;: The expected hash string of the file after download. The sha256 and md5 hash algorithms are both supported.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_hash&lt;/code&gt; &lt;/b&gt; : 다운로드 후 파일의 예상 해시 문자열입니다. sha256 및 md5 해시 알고리즘이 모두 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="458bd1162631ed92409ba83e32ee9b823873ca3c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_path&lt;/code&gt;&lt;/b&gt;: Optional file path for the temp file. If not given, a unique file name will be generated and used. Slashes are allowed in the name; any missing intermediate directories will be created. NOTE: This path is the path that will be cleaned up, including any directories in the path, e.g., 'foo/bar/baz.txt' will &lt;code&gt;rm -r foo&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_path&lt;/code&gt; &lt;/b&gt; : 임시 파일의 선택적 파일 경로입니다. 지정하지 않으면 고유 한 파일 이름이 생성되어 사용됩니다. 이름에는 슬래시가 허용됩니다. 누락 된 중간 디렉토리가 작성됩니다. 참고 :이 경로는 경로에있는 디렉토리를 포함하여 정리할 경로입니다 (예 : 'foo / bar / baz.txt'는 &lt;code&gt;rm -r foo&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="af80f79d18138cf10965b7f04684ae3d20bcb7d1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_pattern&lt;/code&gt;&lt;/b&gt;: A string, a list of strings, or a &lt;a href=&quot;../../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; of string type (scalar or vector), representing the filename glob (i.e. shell wildcard) pattern(s) that will be matched.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_pattern&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 할 파일 이름 glob (예 : 셸 와일드 카드) 패턴을 나타내는문자열, 문자열 목록 또는문자열 유형 (스칼라 또는 벡터)의 tf.Tensor 입니다.</target>
        </trans-unit>
        <trans-unit id="bb49d051c02747a37ece94b1742cc57b6a1bca88" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_pattern&lt;/code&gt;&lt;/b&gt;: A string, a list of strings, or a &lt;a href=&quot;../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; of string type (scalar or vector), representing the filename glob (i.e. shell wildcard) pattern(s) that will be matched.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_pattern&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 할 파일 이름 glob (예 : 셸 와일드 카드) 패턴을 나타내는문자열, 문자열 목록 또는문자열 유형 (스칼라 또는 벡터)의 tf.Tensor 입니다.</target>
        </trans-unit>
        <trans-unit id="0903cc246f00526b13ca0735311b44598df16da1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_pattern&lt;/code&gt;&lt;/b&gt;: A string, a list of strings, or a &lt;a href=&quot;../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; of string type (scalar or vector), representing the filename glob (i.e. shell wildcard) pattern(s) that will be matched.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_pattern&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 할 파일 이름 glob (예 : 셸 와일드 카드) 패턴을 나타내는문자열, 문자열 목록 또는문자열 유형 (스칼라 또는 벡터)의 tf.Tensor 입니다.</target>
        </trans-unit>
        <trans-unit id="966a3bcf61f035f1c529fe2721fe2daa084745a2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_pattern&lt;/code&gt;&lt;/b&gt;: A string, a list of strings, or a &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; of string type (scalar or vector), representing the filename glob (i.e. shell wildcard) pattern(s) that will be matched.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_pattern&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 할 파일 이름 glob (예 : 셸 와일드 카드) 패턴을 나타내는문자열, 문자열 목록 또는문자열 유형 (스칼라 또는 벡터)의 tf.Tensor 입니다.</target>
        </trans-unit>
        <trans-unit id="0654b3a2831f97cbe1bd0a9b6685460355f2c423" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_pattern&lt;/code&gt;&lt;/b&gt;: List of files or patterns of file paths containing &lt;code&gt;Example&lt;/code&gt; records. See &lt;a href=&quot;../../../../io/gfile/glob&quot;&gt;&lt;code&gt;tf.io.gfile.glob&lt;/code&gt;&lt;/a&gt; for pattern rules.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_pattern&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Example&lt;/code&gt; 레코드를포함하는 파일 또는 파일 경로 패턴 목록. 패턴 규칙은&lt;a href=&quot;../../../../io/gfile/glob&quot;&gt; &lt;code&gt;tf.io.gfile.glob&lt;/code&gt; &lt;/a&gt; 를참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ad210f4c30baefc3d728aae60afa73ed935fbb5b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_pattern&lt;/code&gt;&lt;/b&gt;: List of files or patterns of file paths containing &lt;code&gt;Example&lt;/code&gt; records. See &lt;a href=&quot;../../io/gfile/glob&quot;&gt;&lt;code&gt;tf.io.gfile.glob&lt;/code&gt;&lt;/a&gt; for pattern rules.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_pattern&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Example&lt;/code&gt; 레코드를포함하는 파일 또는 파일 경로 패턴 목록. 패턴 규칙은&lt;a href=&quot;../../io/gfile/glob&quot;&gt; &lt;code&gt;tf.io.gfile.glob&lt;/code&gt; &lt;/a&gt; 를참조하십시오.</target>
        </trans-unit>
        <trans-unit id="57a821c98b3b4c8bf9044bdf390180df1ceb1503" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_pattern&lt;/code&gt;&lt;/b&gt;: List of files or patterns of file paths containing CSV records. See &lt;a href=&quot;../../../../io/gfile/glob&quot;&gt;&lt;code&gt;tf.io.gfile.glob&lt;/code&gt;&lt;/a&gt; for pattern rules.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_pattern&lt;/code&gt; &lt;/b&gt; : CSV 레코드를 포함하는 파일 또는 파일 경로 패턴 목록. 패턴 규칙은&lt;a href=&quot;../../../../io/gfile/glob&quot;&gt; &lt;code&gt;tf.io.gfile.glob&lt;/code&gt; &lt;/a&gt; 를참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0e3d1e7ee821bc8ede79475ef95fa148fbe825f1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_pattern&lt;/code&gt;&lt;/b&gt;: List of files or patterns of file paths containing CSV records. See &lt;a href=&quot;../../io/gfile/glob&quot;&gt;&lt;code&gt;tf.io.gfile.glob&lt;/code&gt;&lt;/a&gt; for pattern rules.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_pattern&lt;/code&gt; &lt;/b&gt; : CSV 레코드를 포함하는 파일 또는 파일 경로 패턴 목록. 패턴 규칙은&lt;a href=&quot;../../io/gfile/glob&quot;&gt; &lt;code&gt;tf.io.gfile.glob&lt;/code&gt; &lt;/a&gt; 를참조하십시오.</target>
        </trans-unit>
        <trans-unit id="76347e226cbc01999c64a414600757e91430a1b2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_prefix&lt;/code&gt;&lt;/b&gt;: A prefix to use for the checkpoint filenames (/path/to/directory/and_a_prefix).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_prefix&lt;/code&gt; &lt;/b&gt; : 검사 점 파일 이름 (/ path / to / directory / and_a_prefix)에 사용할 접두사입니다.</target>
        </trans-unit>
        <trans-unit id="9b170f2a5e71005991c09069b7ed6c051f74bdf6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_prefix&lt;/code&gt;&lt;/b&gt;: A prefix to use for the checkpoint filenames (/path/to/directory/and_a_prefix). Names are generated based on this prefix and &lt;a href=&quot;../../../train/checkpoint#save_counter&quot;&gt;&lt;code&gt;Checkpoint.save_counter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_prefix&lt;/code&gt; &lt;/b&gt; : 검사 점 파일 이름 (/ path / to / directory / and_a_prefix)에 사용할 접두사입니다. 이 접두사와&lt;a href=&quot;../../../train/checkpoint#save_counter&quot;&gt; &lt;code&gt;Checkpoint.save_counter&lt;/code&gt; 를&lt;/a&gt; 기반으로 이름이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="c0df6358adce3fe2d4a16f4c86332edb90ebb5d0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;file_prefix&lt;/code&gt;&lt;/b&gt;: A prefix to use for the checkpoint filenames (/path/to/directory/and_a_prefix). Names are generated based on this prefix and &lt;a href=&quot;checkpoint#save_counter&quot;&gt;&lt;code&gt;Checkpoint.save_counter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;file_prefix&lt;/code&gt; &lt;/b&gt; : 검사 점 파일 이름 (/ path / to / directory / and_a_prefix)에 사용할 접두사입니다. 이 접두사와&lt;a href=&quot;checkpoint#save_counter&quot;&gt; &lt;code&gt;Checkpoint.save_counter&lt;/code&gt; 를&lt;/a&gt; 기반으로 이름이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="00bae43fa5e83fdc7b2edebe18d4bc3152e8c20a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../../../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; scalar &lt;a href=&quot;../../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, representing the name of a directory on the filesystem to use for caching elements in this Dataset. If a filename is not provided, the dataset will be cached in memory.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../../../../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt; 스칼라&lt;a href=&quot;../../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; .이 데이터 세트의 요소를 캐싱하는 데 사용할 파일 시스템의 디렉토리 이름을 나타냅니다. 파일 이름을 제공하지 않으면 데이터 세트가 메모리에 캐시됩니다.</target>
        </trans-unit>
        <trans-unit id="d4c3ae989b1dc8a0710fbcdb880b9335dd2ea63f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; scalar &lt;a href=&quot;../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, representing the name of a directory on the filesystem to use for caching elements in this Dataset. If a filename is not provided, the dataset will be cached in memory.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../../../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt; 스칼라&lt;a href=&quot;../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; .이 데이터 세트의 요소를 캐싱하는 데 사용할 파일 시스템의 디렉토리 이름을 나타냅니다. 파일 이름을 제공하지 않으면 데이터 세트가 메모리에 캐시됩니다.</target>
        </trans-unit>
        <trans-unit id="c196046b04961a8fd160692ae0a5edde7a4cf4b8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; scalar &lt;a href=&quot;../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, representing the name of a directory on the filesystem to use for caching elements in this Dataset. If a filename is not provided, the dataset will be cached in memory.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt; 스칼라&lt;a href=&quot;../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; .이 데이터 세트의 요소를 캐싱하는 데 사용할 파일 시스템의 디렉토리 이름을 나타냅니다. 파일 이름을 제공하지 않으면 데이터 세트가 메모리에 캐시됩니다.</target>
        </trans-unit>
        <trans-unit id="6748e1abedc73ec7480419b41574d3ec1815a35b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; scalar &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, representing the name of a directory on the filesystem to use for caching elements in this Dataset. If a filename is not provided, the dataset will be cached in memory.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt; 스칼라&lt;a href=&quot;../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; .이 데이터 세트의 요소를 캐싱하는 데 사용할 파일 시스템의 디렉토리 이름을 나타냅니다. 파일 이름을 제공하지 않으면 데이터 세트가 메모리에 캐시됩니다.</target>
        </trans-unit>
        <trans-unit id="94b1d7d7e3fc75e79c5e3042dc1b488758323c48" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;string&lt;/code&gt; 유형의 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="69651a1838e5ca0bcc1f8361b41b75eb15479fd4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. scalar. The name of the file to which we write the contents.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;string&lt;/code&gt; 유형의 &lt;code&gt;Tensor&lt;/code&gt; . 스칼라. 내용을 작성하는 파일의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="aafc836084aebb8009fc17657b59164b0e373f85" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: If known at graph construction time, filename used for variable loading/saving.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt; : 그래프 생성시 알려진 경우 파일 이름은 가변 로딩 / 저장에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fb07d88ae4478cc6c887e21751f5dc3054cff910" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: Optional filename including the path for writing the generated &lt;code&gt;MetaGraphDef&lt;/code&gt; protocol buffer.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt; : 생성 된 &lt;code&gt;MetaGraphDef&lt;/code&gt; 프로토콜 버퍼를 작성하기위한 경로를 포함한 선택적 파일 이름입니다.</target>
        </trans-unit>
        <trans-unit id="1933befdfcebefaac5b9636d9ceb63018b97fee8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: Optional meta_graph filename including the path.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt; : 경로를 포함한 선택적 meta_graph 파일 이름.</target>
        </trans-unit>
        <trans-unit id="8a523a28c9621067190a3dcb62d76e5724869765" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: The filename of the text file to be used for initialization. The path must be accessible from wherever the graph is initialized (eg. trainer or eval workers). The filename may be a scalar &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt; : 초기화에 사용될 텍스트 파일의 파일 이름. 경로는 그래프가 초기화되는 곳 (예 : 트레이너 또는 평가자)에서 액세스 할 수 있어야합니다. 파일 이름은 스칼라 &lt;code&gt;Tensor&lt;/code&gt; 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="603cb8eb119c589c750a8caa73930a74f9ae2358" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: a string path indicating where to write the TFRecord data.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt; : TFRecord 데이터를 쓸 위치를 나타내는 문자열 경로입니다.</target>
        </trans-unit>
        <trans-unit id="9e41aebbf1952ff4c8844c44b8dfa3645f45be6e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: filename of the csv file, e.g. 'run/log.csv'.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt; : csv 파일의 파일 이름입니다 (예 : 'run / log.csv').</target>
        </trans-unit>
        <trans-unit id="79af45475486a3a27c945419189f831a01ca9dba" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: str, name of the file.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt; : str, 파일 이름.</target>
        </trans-unit>
        <trans-unit id="7387bd2657b0ae9338ad8879edc11d1e12d14fb9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: string or iterable of strings. The glob pattern(s).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt; : 문자열 또는 반복 가능한 문자열. 글로브 패턴.</target>
        </trans-unit>
        <trans-unit id="2a8cecd272039e98cbaedcd14ba0d31a224a90b3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: string, a filename</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt; : 문자열, 파일 이름</target>
        </trans-unit>
        <trans-unit id="6eb2b2705ac1dcafc915cb8dec760ac97002f355" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: string, a path</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt; : 문자열, 경로</target>
        </trans-unit>
        <trans-unit id="441728052a7f42c75d91b7d2e1570cdaaf910109" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/b&gt;: string, path to a file</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/b&gt; : 문자열, 파일 경로</target>
        </trans-unit>
        <trans-unit id="187bee72e1b084808f03706bca85a27e4f1848fc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename_suffix&lt;/code&gt;&lt;/b&gt;: A string. Every event file's name is suffixed with &lt;code&gt;suffix&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename_suffix&lt;/code&gt; &lt;/b&gt; : 문자열. 모든 이벤트 파일의 이름에 접미사 &lt;code&gt;suffix&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="827f0e54f2055fe640c2cbe2e9af9d9f0f2b17ba" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filename_suffix&lt;/code&gt;&lt;/b&gt;: optional suffix for the event file name. Defaults to &lt;code&gt;.v2&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filename_suffix&lt;/code&gt; &lt;/b&gt; : 이벤트 파일 이름의 선택적 접미사입니다. 기본값은 &lt;code&gt;.v2&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6ed310da40c77ca498d9d880e83e005f5c520f65" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filenames&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../../../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; tensor containing one or more filenames.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filenames&lt;/code&gt; &lt;/b&gt; :하나 이상의 파일 이름을 포함하는&lt;a href=&quot;../../../../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt; 텐서.</target>
        </trans-unit>
        <trans-unit id="1dd0ac60c8280b954dc80802ab33035b8c47a6bf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filenames&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; tensor or &lt;a href=&quot;../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; containing one or more filenames.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filenames&lt;/code&gt; &lt;/b&gt; :하나 이상의 파일 이름을 포함하는&lt;a href=&quot;../../../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt; 텐서 또는&lt;a href=&quot;../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="513554040db4808eeeea40ed4e4503c748aa46af" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filenames&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; tensor containing one or more filenames.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filenames&lt;/code&gt; &lt;/b&gt; :하나 이상의 파일 이름을 포함하는&lt;a href=&quot;../../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt; 텐서.</target>
        </trans-unit>
        <trans-unit id="6a5faa02d520b6f69d9fd8bdb03c4c85ad93903c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filenames&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; tensor or &lt;a href=&quot;dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; containing one or more filenames.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filenames&lt;/code&gt; &lt;/b&gt; :하나 이상의 파일 이름을 포함하는&lt;a href=&quot;../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt; 텐서 또는&lt;a href=&quot;dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="68fc06fe27b902b52769797197d89b53f6229f22" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filepath&lt;/code&gt;&lt;/b&gt;: One of the following:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filepath&lt;/code&gt; &lt;/b&gt; : 다음 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="169b24e2d7e18aee13fa3928c7ade9cbb3dcdd5d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filepath&lt;/code&gt;&lt;/b&gt;: String, path to SavedModel or H5 file to save the model.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filepath&lt;/code&gt; &lt;/b&gt; : 문자열, 모델을 저장할 SavedModel 또는 H5 파일의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="1b9fbc4fed1dd46e9d425aabcae528f45065a252" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filepath&lt;/code&gt;&lt;/b&gt;: String, path to the file to save the weights to. When saving in TensorFlow format, this is the prefix used for checkpoint files (multiple files are generated). Note that the '.h5' suffix causes weights to be saved in HDF5 format.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filepath&lt;/code&gt; &lt;/b&gt; : 문자열, 가중치를 저장할 파일의 경로입니다. TensorFlow 형식으로 저장할 때 이것은 검사 점 파일에 사용되는 접두사입니다 (여러 파일이 생성됨). '.h5'접미사는 가중치를 HDF5 형식으로 저장합니다.</target>
        </trans-unit>
        <trans-unit id="b046c8d1f1683b18a0ef568259acef07a08dcd64" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filepath&lt;/code&gt;&lt;/b&gt;: String, path to the weights file to load. For weight files in TensorFlow format, this is the file prefix (the same as was passed to &lt;code&gt;save_weights&lt;/code&gt;).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filepath&lt;/code&gt; &lt;/b&gt; : 문자열,로드 할 가중치 파일의 경로입니다. TensorFlow 형식의 가중치 파일의 경우 이는 파일 &lt;code&gt;save_weights&lt;/code&gt; 두부입니다 ( save_weights 에 전달 된 것과 동일 함 ).</target>
        </trans-unit>
        <trans-unit id="4534d70e06f16be545ccc3d79e67db81b55d76e5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filepath&lt;/code&gt;&lt;/b&gt;: string, path to save the model file.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filepath&lt;/code&gt; &lt;/b&gt; : 문자열, 모델 파일을 저장할 경로입니다.</target>
        </trans-unit>
        <trans-unit id="934eed605ce0b30e0d8774960a1424093e5adfdc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filepattern&lt;/code&gt;&lt;/b&gt;: The filename.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filepattern&lt;/code&gt; &lt;/b&gt; : 파일 이름.</target>
        </trans-unit>
        <trans-unit id="a9091d97e7edc27b74e526d82a375e6945be7d3b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fill&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. The value to pad if width &amp;gt; -1. If empty, pads with spaces. Another typical value is '0'. String cannot be longer than 1 character.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fill&lt;/code&gt; &lt;/b&gt; : 선택적 &lt;code&gt;string&lt;/code&gt; . 기본값은 &lt;code&gt;&quot;&quot;&lt;/code&gt; 입니다. 너비&amp;gt; -1 인 경우 채울 값입니다. 비어 있으면 공백으로 채 웁니다. 또 다른 일반적인 값은 '0'입니다. 문자열은 1자를 초과 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a1db14ba19942ba29c13e70a4c9be46818d9d36a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fill_mode&lt;/code&gt;&lt;/b&gt;: One of {&quot;constant&quot;, &quot;nearest&quot;, &quot;reflect&quot; or &quot;wrap&quot;}. Default is 'nearest'. Points outside the boundaries of the input are filled according to the given mode:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fill_mode&lt;/code&gt; &lt;/b&gt; : { &quot;constant&quot;, &quot;nearest&quot;, &quot;reflect&quot;또는 &quot;wrap&quot;} 중 하나입니다. 기본값은 '가장 가까운'입니다. 입력 경계 밖의 점은 주어진 모드에 따라 채워집니다.</target>
        </trans-unit>
        <trans-unit id="37811d3dbfab363525e11bd40d0e220d3ae881e2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/b&gt;: 4-D with shape &lt;code&gt;[filter_height, filter_width, in_channels, channel_multiplier]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/b&gt; : 모양 &lt;code&gt;[filter_height, filter_width, in_channels, channel_multiplier]&lt;/code&gt; 가진 4 차원.</target>
        </trans-unit>
        <trans-unit id="ff4a4f0f40aab8196e2d91f00e2c95ad812da660" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/b&gt;: A 4-D &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;value&lt;/code&gt; and shape &lt;code&gt;[height, width, output_channels, in_channels]&lt;/code&gt;. &lt;code&gt;filter&lt;/code&gt;'s &lt;code&gt;in_channels&lt;/code&gt; dimension must match that of &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;value&lt;/code&gt; 및 shape &lt;code&gt;[height, width, output_channels, in_channels]&lt;/code&gt; 와동일한 유형의 4 차원 &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;filter&lt;/code&gt; 의 &lt;code&gt;in_channels&lt;/code&gt; 측정 기준 은 &lt;code&gt;value&lt;/code&gt; 의 측정 기준 과 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="923c06d879ae0b9ff6e3eb07c4ae0694509cda42" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/b&gt;: A 5-D &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;value&lt;/code&gt; and shape &lt;code&gt;[depth, height, width, output_channels, in_channels]&lt;/code&gt;. &lt;code&gt;filter&lt;/code&gt;'s &lt;code&gt;in_channels&lt;/code&gt; dimension must match that of &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;value&lt;/code&gt; 및 shape와동일한 유형의 &lt;code&gt;[depth, height, width, output_channels, in_channels]&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; [깊이, 높이, 너비, output_channels, in_channels] . &lt;code&gt;filter&lt;/code&gt; 의 &lt;code&gt;in_channels&lt;/code&gt; 측정 기준 은 &lt;code&gt;value&lt;/code&gt; 의 측정 기준 과 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="827405e9358864dc57fdf18348b911178f0fd4ea" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 4-D with shape &lt;code&gt;[filter_height, filter_width, in_channels, depthwise_multiplier]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;bfloat16&lt;/code&gt; , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; 유형 중 하나 여야합니다. 형상의 4-D &lt;code&gt;[filter_height, filter_width, in_channels, depthwise_multiplier]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28dd66a1fb5cad7ab1b3caf3990a9103eba4ae4b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 4-D with shape &lt;code&gt;[filter_height, filter_width, in_channels, out_channels]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;bfloat16&lt;/code&gt; , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; 유형 중 하나 여야합니다. 셰이프가있는 4-D &lt;code&gt;[filter_height, filter_width, in_channels, out_channels]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="395209c511e8f94b6355cd8bb416d001d7d5532e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;qint16&lt;/code&gt;, &lt;code&gt;quint16&lt;/code&gt;. filter's input_depth dimension must match input's depth dimensions.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;qint8&lt;/code&gt; , &lt;code&gt;quint8&lt;/code&gt; , &lt;code&gt;qint32&lt;/code&gt; , &lt;code&gt;qint16&lt;/code&gt; , &lt;code&gt;quint16&lt;/code&gt; 유형 중 하나 여야합니다. 필터의 input_depth 치수는 입력의 깊이 치수와 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="763a3b9e0702b57f18c7afc2a425a720bbcc7b30" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;input&lt;/code&gt; 과 동일한 유형이어야 합니다 .</target>
        </trans-unit>
        <trans-unit id="19a9f17785dbdd5fbd3cd6965518fd2760552098" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. 3-D with shape &lt;code&gt;[filter_height, filter_width, depth]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;input&lt;/code&gt; 과 동일한 유형이어야 합니다 . 도형이 3 차원이고 &lt;code&gt;[filter_height, filter_width, depth]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc3f1ee3e07a3b305f70f5e09f6d05036e7a8907" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. A 4-D tensor of shape &lt;code&gt;[filter_height, filter_width, in_channels, out_channels]&lt;/code&gt;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;input&lt;/code&gt; 과 동일한 유형이어야 합니다 . 모양의 4 차원 텐서 &lt;code&gt;[filter_height, filter_width, in_channels, out_channels]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d4ef72a0326cdea1a3cdb30587600b7a58fefdd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. Shape &lt;code&gt;[filter_depth, filter_height, filter_width, in_channels, out_channels]&lt;/code&gt;. &lt;code&gt;in_channels&lt;/code&gt; must match between &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;filter&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;input&lt;/code&gt; 과 동일한 유형이어야 합니다 . 모양 &lt;code&gt;[filter_depth, filter_height, filter_width, in_channels, out_channels]&lt;/code&gt; . &lt;code&gt;in_channels&lt;/code&gt; 는 &lt;code&gt;input&lt;/code&gt; 과 &lt;code&gt;filter&lt;/code&gt; 사이에 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="7f932b91e98960061693ee974bf7b7a9e559efa7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/b&gt;: An (N+2)-D &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;input&lt;/code&gt; and shape &lt;code&gt;spatial_filter_shape + [in_channels, out_channels]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;input&lt;/code&gt; 및 모양과 공간이 같은(N + 2) -D &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;spatial_filter_shape + [in_channels, out_channels]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be70bd7cb11c3ddf2418488f71c24a5c998c949c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter_shape&lt;/code&gt;&lt;/b&gt;: If padding = &quot;SAME&quot;, specifies the shape of the convolution kernel/pooling window as an integer Tensor of shape [&amp;gt;=num_spatial_dims]. If padding = &quot;VALID&quot;, filter_shape is ignored and need not be specified.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter_shape&lt;/code&gt; &lt;/b&gt; : padding = &quot;SAME&quot;인 경우 컨볼 루션 커널 / 풀링 창의 모양을 정수 텐서 [&amp;gt; = num_spatial_dims]로 지정합니다. padding = &quot;VALID&quot;이면 filter_shape가 무시되며 지정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="55e427ec4b1b10dbc360d4651781d4fcde609953" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter_sigma&lt;/code&gt;&lt;/b&gt;: Default value 1.5 (width of gaussian filter).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter_sigma&lt;/code&gt; &lt;/b&gt; : 기본값 1.5 (가우스 필터의 너비).</target>
        </trans-unit>
        <trans-unit id="bcd67bc3b349db340860d76e69b54feb3399c777" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter_size&lt;/code&gt;&lt;/b&gt;: Default value 11 (size of gaussian filter).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter_size&lt;/code&gt; &lt;/b&gt; : 기본값 11 (가우스 필터의 크기).</target>
        </trans-unit>
        <trans-unit id="1f254ac8f2715633638e4f8518a1bf59fd44b380" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter_sizes&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. An integer vector representing the tensor shape of &lt;code&gt;filter&lt;/code&gt;, where &lt;code&gt;filter&lt;/code&gt; is a 4-D &lt;code&gt;[filter_height, filter_width, in_channels, depthwise_multiplier]&lt;/code&gt; tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter_sizes&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;int32&lt;/code&gt; 유형의 &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;filter&lt;/code&gt; 의 텐서 모양을 나타내는 정수 벡터. 여기서 &lt;code&gt;filter&lt;/code&gt; 는 4 차원 &lt;code&gt;[filter_height, filter_width, in_channels, depthwise_multiplier]&lt;/code&gt; 텐서입니다.</target>
        </trans-unit>
        <trans-unit id="5ad1fbd4a5bb79adddf2c718baf748f55666138b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter_sizes&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. An integer vector representing the tensor shape of &lt;code&gt;filter&lt;/code&gt;, where &lt;code&gt;filter&lt;/code&gt; is a 4-D &lt;code&gt;[filter_height, filter_width, in_channels, out_channels]&lt;/code&gt; tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter_sizes&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;int32&lt;/code&gt; 유형의 &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;filter&lt;/code&gt; 의 텐서 모양을 나타내는 정수 벡터입니다. 여기서 &lt;code&gt;filter&lt;/code&gt; 는 4-D &lt;code&gt;[filter_height, filter_width, in_channels, out_channels]&lt;/code&gt; 텐서입니다.</target>
        </trans-unit>
        <trans-unit id="9a1dcc0e17959c1a9e87c5197762074b7ce78960" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filter_sizes&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. An integer vector representing the tensor shape of &lt;code&gt;filter&lt;/code&gt;, where &lt;code&gt;filter&lt;/code&gt; is a 5-D &lt;code&gt;[filter_depth, filter_height, filter_width, in_channels, out_channels]&lt;/code&gt; tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filter_sizes&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;int32&lt;/code&gt; 유형의 &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;filter&lt;/code&gt; 의 텐서 모양을 나타내는 정수 벡터입니다. 여기서 &lt;code&gt;filter&lt;/code&gt; 는 5 차원 &lt;code&gt;[filter_depth, filter_height, filter_width, in_channels, out_channels]&lt;/code&gt; 텐서입니다.</target>
        </trans-unit>
        <trans-unit id="6f00b606e010af5f90fae31dca8f175221442bf2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: A 3-D &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;value&lt;/code&gt; and shape &lt;code&gt;[filter_width, output_channels, in_channels]&lt;/code&gt;. &lt;code&gt;filter&lt;/code&gt;'s &lt;code&gt;in_channels&lt;/code&gt; dimension must match that of &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;value&lt;/code&gt; 및 shape와 유형이 같은3 차원 &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;[filter_width, output_channels, in_channels]&lt;/code&gt; . &lt;code&gt;filter&lt;/code&gt; 의 &lt;code&gt;in_channels&lt;/code&gt; 측정 기준 은 &lt;code&gt;value&lt;/code&gt; 의 측정 기준 과 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="d078584a318c033ffe40339259eb4532b7f002c5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: A 3D &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt; : 3D &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;input&lt;/code&gt; 과 동일한 유형이어야 합니다 .</target>
        </trans-unit>
        <trans-unit id="9272dfbd692668c822ddf28055e0af3240844f19" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: A 3D &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt; : 3D &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;value&lt;/code&gt; 와 유형이 같아야 합니다 .</target>
        </trans-unit>
        <trans-unit id="c450d158c9eec814f24867c8da3d6951108243da" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: A 4-D &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;input&lt;/code&gt; and shape &lt;code&gt;[height, width, output_channels, in_channels]&lt;/code&gt;. &lt;code&gt;filter&lt;/code&gt;'s &lt;code&gt;in_channels&lt;/code&gt; dimension must match that of &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;input&lt;/code&gt; 및 모양과동일한 유형 &lt;code&gt;[height, width, output_channels, in_channels]&lt;/code&gt; 가진4 차원 &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;filter&lt;/code&gt; 의 &lt;code&gt;in_channels&lt;/code&gt; 차원은 &lt;code&gt;input&lt;/code&gt; 차원과 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="740bfa27afe645fe1e35de690c3e8fee2955d5d3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: A 4-D &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;value&lt;/code&gt; and shape &lt;code&gt;[filter_height, filter_width, in_channels, out_channels]&lt;/code&gt;. &lt;code&gt;filters&lt;/code&gt;' &lt;code&gt;in_channels&lt;/code&gt; dimension must match that of &lt;code&gt;value&lt;/code&gt;. Atrous convolution is equivalent to standard convolution with upsampled filters with effective height &lt;code&gt;filter_height + (filter_height - 1) * (rate - 1)&lt;/code&gt; and effective width &lt;code&gt;filter_width + (filter_width - 1) * (rate - 1)&lt;/code&gt;, produced by inserting &lt;code&gt;rate - 1&lt;/code&gt; zeros along consecutive elements across the &lt;code&gt;filters&lt;/code&gt;' spatial dimensions.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;value&lt;/code&gt; 및 모양과 유형이 같은4 차원 &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;[filter_height, filter_width, in_channels, out_channels]&lt;/code&gt; . &lt;code&gt;filters&lt;/code&gt; 의 &lt;code&gt;in_channels&lt;/code&gt; 측정 기준 은 &lt;code&gt;value&lt;/code&gt; 의 측정 기준 과 일치해야합니다. Atrous 컨벌루션 유효 높이로 업 샘플링 필터를 사용하여 표준 회선에 상당 &lt;code&gt;filter_height + (filter_height - 1) * (rate - 1)&lt;/code&gt; 과 유효 폭 &lt;code&gt;filter_width + (filter_width - 1) * (rate - 1)&lt;/code&gt; 의 삽입에 의해 생성 된 &lt;code&gt;rate - 1&lt;/code&gt; 0을 &lt;code&gt;filters&lt;/code&gt; 의 공간 치수에걸쳐 연속적인 요소를 따라.</target>
        </trans-unit>
        <trans-unit id="2209a47d3a63d703c7b73f2e1ca770c82abfe908" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: A 4-D &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;value&lt;/code&gt; and shape &lt;code&gt;[filter_height, filter_width, out_channels, in_channels]&lt;/code&gt;. &lt;code&gt;filters&lt;/code&gt;' &lt;code&gt;in_channels&lt;/code&gt; dimension must match that of &lt;code&gt;value&lt;/code&gt;. Atrous convolution is equivalent to standard convolution with upsampled filters with effective height &lt;code&gt;filter_height + (filter_height - 1) * (rate - 1)&lt;/code&gt; and effective width &lt;code&gt;filter_width + (filter_width - 1) * (rate - 1)&lt;/code&gt;, produced by inserting &lt;code&gt;rate - 1&lt;/code&gt; zeros along consecutive elements across the &lt;code&gt;filters&lt;/code&gt;' spatial dimensions.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;value&lt;/code&gt; 및 모양과 유형이 같은4 차원 &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;[filter_height, filter_width, out_channels, in_channels]&lt;/code&gt; . &lt;code&gt;filters&lt;/code&gt; 의 &lt;code&gt;in_channels&lt;/code&gt; 측정 기준 은 &lt;code&gt;value&lt;/code&gt; 의 측정 기준 과 일치해야합니다. Atrous 컨벌루션 유효 높이로 업 샘플링 필터를 사용하여 표준 회선에 상당 &lt;code&gt;filter_height + (filter_height - 1) * (rate - 1)&lt;/code&gt; 과 유효 폭 &lt;code&gt;filter_width + (filter_width - 1) * (rate - 1)&lt;/code&gt; 의 삽입에 의해 생성 된 &lt;code&gt;rate - 1&lt;/code&gt; 0을 &lt;code&gt;filters&lt;/code&gt; 의 공간 치수에걸쳐 연속적인 요소를 따라.</target>
        </trans-unit>
        <trans-unit id="fda613052f1b17996233a267fa0514490d85dbc4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: A 5-D &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;value&lt;/code&gt; and shape &lt;code&gt;[height, width, output_channels, in_channels]&lt;/code&gt;. &lt;code&gt;filter&lt;/code&gt;'s &lt;code&gt;in_channels&lt;/code&gt; dimension must match that of &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;value&lt;/code&gt; 및 shape와같은 유형의 &lt;code&gt;[height, width, output_channels, in_channels]&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; [높이, 너비, output_channels, in_channels] . &lt;code&gt;filter&lt;/code&gt; 의 &lt;code&gt;in_channels&lt;/code&gt; 측정 기준 은 &lt;code&gt;value&lt;/code&gt; 의 측정 기준 과 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="8579f7c0688b69dcd1188d9733dc6976235b7c38" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. 3-D with shape &lt;code&gt;[filter_height, filter_width, depth]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;input&lt;/code&gt; 과 동일한 유형이어야 합니다 . 도형이 3 차원이고 &lt;code&gt;[filter_height, filter_width, depth]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="156aacc244e99a4a36577190c89af1f241af2983" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. A 4-D tensor of shape &lt;code&gt;[filter_height, filter_width, in_channels, out_channels]&lt;/code&gt;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;input&lt;/code&gt; 과 동일한 유형이어야 합니다 . 모양의 4 차원 텐서 &lt;code&gt;[filter_height, filter_width, in_channels, out_channels]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0011eac1f288f7c3d0ee3cdcbe31281a1a65047e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. Shape &lt;code&gt;[filter_depth, filter_height, filter_width, in_channels, out_channels]&lt;/code&gt;. &lt;code&gt;in_channels&lt;/code&gt; must match between &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;filters&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;input&lt;/code&gt; 과 동일한 유형이어야 합니다 . 모양 &lt;code&gt;[filter_depth, filter_height, filter_width, in_channels, out_channels]&lt;/code&gt; . &lt;code&gt;in_channels&lt;/code&gt; 는 &lt;code&gt;input&lt;/code&gt; 과 &lt;code&gt;filters&lt;/code&gt; 사이에서 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="59678c7212a81ee706204a99a7f16c7b44dced62" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;value&lt;/code&gt;. 3-D with shape &lt;code&gt;[filters_height, filters_width, depth]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;value&lt;/code&gt; 와 유형이 같아야 합니다 . 모양이 3 차원 인 &lt;code&gt;[filters_height, filters_width, depth]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4740197e9f11ea15fe42a506c959a0fb8646658" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: Alias for filter.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt; :&lt;b&gt; 필터의&lt;/b&gt; 별칭.</target>
        </trans-unit>
        <trans-unit id="0b3ddcbc0718ba6d787eb433dbc3036d6eeca59e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: Alias of filter.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt; :&lt;b&gt; 필터&lt;/b&gt; 별칭.</target>
        </trans-unit>
        <trans-unit id="556820685c5be1ed5f014cb069239f6111df067a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: An (N+2)-D &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;input&lt;/code&gt; and shape &lt;code&gt;spatial_filter_shape + [in_channels, out_channels]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;input&lt;/code&gt; 및 모양과 공간이 같은(N + 2) -D &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;spatial_filter_shape + [in_channels, out_channels]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf396b4b3d6a7ac2c839a54ebd5ad2858e2f0b8d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: An N+2 dimensional &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;input&lt;/code&gt; and shape &lt;code&gt;spatial_filter_shape + [in_channels, out_channels]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;input&lt;/code&gt; 및 모양과 공간이 같은N + 2 차원 &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;spatial_filter_shape + [in_channels, out_channels]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="090408e5e39cbf5e2e89b2f229123bf6cd3bceb0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: Integer, the dimensionality of the output space (i.e. the number of filters in the convolution).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt; : 정수, 출력 공간의 차원 (즉, 컨볼 루션의 필터 수)입니다.</target>
        </trans-unit>
        <trans-unit id="2f60c84215b5966a97cb40b122fdcbc9dd3cebd9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;filters&lt;/code&gt;&lt;/b&gt;: Integer, the dimensionality of the output space (i.e. the number of output filters in the convolution).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;filters&lt;/code&gt; &lt;/b&gt; : 정수, 출력 공간의 차원 (즉, 컨볼 루션의 출력 필터 수)입니다.</target>
        </trans-unit>
        <trans-unit id="c95094fbcd7b6a6a59b21429ac9d3abde068206f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;final_ops&lt;/code&gt;&lt;/b&gt;: A single &lt;code&gt;Tensor&lt;/code&gt;, a list of &lt;code&gt;Tensors&lt;/code&gt; or a dictionary of names to &lt;code&gt;Tensors&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;final_ops&lt;/code&gt; &lt;/b&gt; : 단일 &lt;code&gt;Tensor&lt;/code&gt; 의 목록 &lt;code&gt;Tensors&lt;/code&gt; 거나 이름의 사전 &lt;code&gt;Tensors&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ea3eecb5d931c1360952fc82c5079204fe23d51" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;final_ops_feed_dict&lt;/code&gt;&lt;/b&gt;: A feed dictionary to use when running &lt;code&gt;final_ops_dict&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;final_ops_feed_dict&lt;/code&gt; &lt;/b&gt; : A가 실행할 때 사용하는 사전 공급 &lt;code&gt;final_ops_dict&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="b2d266cf47a18dc767407fbc434652b39ee92e8c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;first&lt;/code&gt;&lt;/b&gt;: A string containing JSON to decode and compare to second.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;first&lt;/code&gt; &lt;/b&gt; : JSON을 포함하고 두 번째와 디코딩 및 비교할 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="0ed0fb343cd4068f25ba7bb8228fb788ab5b7d0d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;first_decay_steps&lt;/code&gt;&lt;/b&gt;: A scalar &lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; or a Python number. Number of steps to decay over.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;first_decay_steps&lt;/code&gt; &lt;/b&gt; : 스칼라 &lt;code&gt;int32&lt;/code&gt; 또는 &lt;code&gt;int64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 또는 Python 숫자입니다. 붕괴 단계 수.</target>
        </trans-unit>
        <trans-unit id="f85bf1c1c8f310e441f1aee9f2129fcf3a673bc8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;first_n&lt;/code&gt;&lt;/b&gt;: Only log &lt;code&gt;first_n&lt;/code&gt; number of times. Negative numbers log always; this is the default.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;first_n&lt;/code&gt; &lt;/b&gt; : 만 로그인 &lt;code&gt;first_n&lt;/code&gt; 횟수를. 음수는 항상 기록됩니다. 이것이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="41fb2a2d03b0ec9fd4a17c97ee8c0e8ad5b567d2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;firstline_indent&lt;/code&gt;&lt;/b&gt;: str, indent for first line; if None, fall back to indent.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;firstline_indent&lt;/code&gt; &lt;/b&gt; : str, 첫 줄 들여 쓰기; 없는 경우 들여 쓰기로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="1ff91e04bd94e18db2d993b364247358bfcfff0d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fixed_length&lt;/code&gt;&lt;/b&gt;: If set, the first &lt;code&gt;fixed_length&lt;/code&gt; bytes of each element will be converted. Data will be zero-padded or truncated to the specified length.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fixed_length&lt;/code&gt; &lt;/b&gt; : 설정된 경우각 요소의 첫 번째 &lt;code&gt;fixed_length&lt;/code&gt; 바이트가 변환됩니다. 데이터는 길이가 0으로 채워지거나 지정된 길이로 잘립니다.</target>
        </trans-unit>
        <trans-unit id="96a37b52b1604881050327768edd7d5ca15f11be" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag&lt;/code&gt;&lt;/b&gt;: Flag, a flag that is key to the module.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag&lt;/code&gt; &lt;/b&gt; : 플래그, 모듈의 키입니다.</target>
        </trans-unit>
        <trans-unit id="0b9376230144a8a61471d7b5aceccc602815dea5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag&lt;/code&gt;&lt;/b&gt;: Flag, the Flag instance that is key to the module.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag&lt;/code&gt; &lt;/b&gt; : Flag, 모듈의 키인 Flag 인스턴스.</target>
        </trans-unit>
        <trans-unit id="4c4d1a485a5cef0b3cbda58e422ab4dee60447be" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_map&lt;/code&gt;&lt;/b&gt;: dict, a mapping where the keys are flag names (strings). values are treated according to their type:</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_map&lt;/code&gt; &lt;/b&gt; : dict, 키가 플래그 이름 (문자열) 인 매핑. 값은 유형에 따라 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="4c938b57af984163a89e4f43228861cff7b3e22d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_name&lt;/code&gt;&lt;/b&gt;: str, name of the flag</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_name&lt;/code&gt; &lt;/b&gt; : str, 깃발의 이름</target>
        </trans-unit>
        <trans-unit id="a13eb22b5c2a9938f6528493cd324daeb294ca27" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_name&lt;/code&gt;&lt;/b&gt;: str, name of the flag to be checked.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_name&lt;/code&gt; &lt;/b&gt; : str, 검사 할 플래그 이름.</target>
        </trans-unit>
        <trans-unit id="f13e64f22fdd76e06dcf5313788809dae2d55bb5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_name&lt;/code&gt;&lt;/b&gt;: str, the name of an already declared flag. (Redeclaring flags as key, including flags implicitly key because they were declared in this module, is a no-op.)</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_name&lt;/code&gt; &lt;/b&gt; : str, 이미 선언 된 플래그의 이름. (이 모듈에서 선언 되었기 때문에 암시 적으로 키인 플래그를 포함하여 플래그를 키로 선언하는 것은 no-op입니다.)</target>
        </trans-unit>
        <trans-unit id="8d6ca81394c3d249a69a6d1a769170b1ea42828c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_names&lt;/code&gt;&lt;/b&gt;: Sequence[str], names of the flags.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_names&lt;/code&gt; &lt;/b&gt; : Sequence [str], 플래그 이름.</target>
        </trans-unit>
        <trans-unit id="10aa061ba7cc244ffbc033b0ad3256eb262c69fe" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_names&lt;/code&gt;&lt;/b&gt;: [str], a list of the flag names to be checked.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_names&lt;/code&gt; &lt;/b&gt; : [str], 확인할 플래그 이름 목록.</target>
        </trans-unit>
        <trans-unit id="8eeb0880273425c085175ba1853b0c29ad331578" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_names&lt;/code&gt;&lt;/b&gt;: [str], names of the flags.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_names&lt;/code&gt; &lt;/b&gt; : [str], 플래그 이름.</target>
        </trans-unit>
        <trans-unit id="c2203aea65234d27e1ea9e68b00ed74f6eb6981b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_values&lt;/code&gt;&lt;/b&gt;: FlagValues, the FlagValues instance containing flags to remove.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_values&lt;/code&gt; &lt;/b&gt; : 제거 할 플래그를 포함하는 FlagValues ​​인스턴스 인 FlagValues</target>
        </trans-unit>
        <trans-unit id="2c727d75cfa16decd523deddf2056447240baf2d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_values&lt;/code&gt;&lt;/b&gt;: FlagValues, the FlagValues instance containing the first definition of flagname.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_values&lt;/code&gt; &lt;/b&gt; : FlagValues, flagname의 첫 번째 정의를 포함하는 FlagValues ​​인스턴스</target>
        </trans-unit>
        <trans-unit id="49b5d473a533d1696e8054daed862171c533b449" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_values&lt;/code&gt;&lt;/b&gt;: FlagValues, the FlagValues instance from which to copy flags.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_values&lt;/code&gt; &lt;/b&gt; : FlagValues, 플래그를 복사 할 FlagValues ​​인스턴스</target>
        </trans-unit>
        <trans-unit id="d58d37f4cd4df5ae3aa6d55aba5185e335d97ad4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_values&lt;/code&gt;&lt;/b&gt;: FlagValues, the FlagValues instance in which the flag will be declared as a key flag. This should almost never need to be overridden.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_values&lt;/code&gt; &lt;/b&gt; : FlagValues, 플래그가 키 플래그로 선언 될 FlagValues ​​인스턴스 거의 무시할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="ce111a671257b841351286cca1466a0bea008171" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_values&lt;/code&gt;&lt;/b&gt;: FlagValues, the FlagValues instance in which the flags will be declared as key flags. This should almost never need to be overridden.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_values&lt;/code&gt; &lt;/b&gt; : FlagValues, 플래그가 키 플래그로 선언되는 FlagValues ​​인스턴스 거의 무시할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="e0737f81c927d4b09f49bf70d0e7fcad586b9e2b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_values&lt;/code&gt;&lt;/b&gt;: FlagValues, the FlagValues instance with which the flag will be registered. This should almost never need to be overridden.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_values&lt;/code&gt; &lt;/b&gt; : FlagValues, 플래그가 등록 될 FlagValues ​​인스턴스 거의 무시할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="baba8db42097abb862ce9dc2ef717d175197f765" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_values&lt;/code&gt;&lt;/b&gt;: flags.FlagValues, optional FlagValues instance to validate against.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_values&lt;/code&gt; &lt;/b&gt; : flags.FlagValues, 유효성을 검사 할 선택적 FlagValues ​​인스턴스.</target>
        </trans-unit>
        <trans-unit id="927f6ae000f4a94e522cb4d6d96a2a0da2016adc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_values&lt;/code&gt;&lt;/b&gt;: flags.FlagValues, optional FlagValues instance where the flag is defined.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_values&lt;/code&gt; &lt;/b&gt; : flags.FlagValues, 플래그가 정의 된 선택적 FlagValues ​​인스턴스.</target>
        </trans-unit>
        <trans-unit id="5077e66af186b962a67a36f5eb416349c2d061ff" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flag_values&lt;/code&gt;&lt;/b&gt;: flags.FlagValues, optional FlagValues instance where the flags are defined.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flag_values&lt;/code&gt; &lt;/b&gt; : flags.FlagValues, 플래그가 정의 된 선택적 FlagValues ​​인스턴스.</target>
        </trans-unit>
        <trans-unit id="01bba97788527fef2b2608af54cdea0ed20cee20" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flagname&lt;/code&gt;&lt;/b&gt;: str, name of the flag to lookup.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flagname&lt;/code&gt; &lt;/b&gt; : str, 조회 할 플래그 이름.</target>
        </trans-unit>
        <trans-unit id="99bced660dfd1c36e86da7808e8da5fe2a5779f1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flagname&lt;/code&gt;&lt;/b&gt;: str, the name of the flag being redefined.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flagname&lt;/code&gt; &lt;/b&gt; : str, 재정의되는 플래그의 이름.</target>
        </trans-unit>
        <trans-unit id="9bd9ec1f3dc46bb90fc7942c4c8efeb75dfec03b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flagname&lt;/code&gt;&lt;/b&gt;: str, the name of the unrecognized flag.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flagname&lt;/code&gt; &lt;/b&gt; : str, 인식 할 수없는 플래그의 이름.</target>
        </trans-unit>
        <trans-unit id="5902ddfbda30cd6b3757e4cbe240ba20d5188f9f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flags.FlagError&lt;/code&gt;&lt;/b&gt;: UnrecognizedFlagError: if the referenced flag doesn't exist. DuplicateFlagError: if the alias name has been used by some existing flag.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flags.FlagError&lt;/code&gt; &lt;/b&gt; : UnrecognizedFlagError : 참조 된 플래그가없는 경우 DuplicateFlagError : 기존 플래그가 별칭 이름을 사용한 경우</target>
        </trans-unit>
        <trans-unit id="75643deea55ece091413944d6f97e9c1fa4551ae" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flagvalue&lt;/code&gt;&lt;/b&gt;: The value of the flag, empty if the flag is not defined.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flagvalue&lt;/code&gt; &lt;/b&gt; : 플래그의 값으로, 플래그가 정의되어 있지 않으면 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d43d437dc004f5d7b4b895272bd67554f21217fd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flat_sequence&lt;/code&gt;&lt;/b&gt;: flat sequence to pack.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flat_sequence&lt;/code&gt; &lt;/b&gt; : 패킹 할 플랫 시퀀스.</target>
        </trans-unit>
        <trans-unit id="b6e96d6e72aeccbf9df984e47ceca0d3ae943506" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flat_values&lt;/code&gt;&lt;/b&gt;: A potentially ragged tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flat_values&lt;/code&gt; &lt;/b&gt; : 잠재적으로 울퉁불퉁 한 텐서.</target>
        </trans-unit>
        <trans-unit id="f8ebe2201b55ca0a23984d2c50afb79fdd5a805c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;float_atol&lt;/code&gt;&lt;/b&gt;: absolute tolerance for float32.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;float_atol&lt;/code&gt; &lt;/b&gt; : float32에 대한 절대 허용 오차.</target>
        </trans-unit>
        <trans-unit id="91522b516a32662b5befa3e7c3eef2a9b43bfe75" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;float_rtol&lt;/code&gt;&lt;/b&gt;: relative tolerance for float32.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;float_rtol&lt;/code&gt; &lt;/b&gt; : float32에 대한 상대 허용 오차.</target>
        </trans-unit>
        <trans-unit id="e942413b85022c5eb2985a8f9c59d9bc6586c32b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flow&lt;/code&gt;&lt;/b&gt;: (optional) A float &lt;code&gt;Tensor&lt;/code&gt; scalar coming from an existing &lt;a href=&quot;tensorarray#flow&quot;&gt;&lt;code&gt;TensorArray.flow&lt;/code&gt;&lt;/a&gt;. Only supported in graph mode.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flow&lt;/code&gt; &lt;/b&gt; : (선택 사항)기존&lt;a href=&quot;tensorarray#flow&quot;&gt; &lt;code&gt;TensorArray.flow&lt;/code&gt; &lt;/a&gt; 에서 오는float &lt;code&gt;Tensor&lt;/code&gt; 스칼라입니다. 그래프 모드에서만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="93420c6c35c1c8ccc117ddde753c5f1a2b4f3aa3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flush_millis&lt;/code&gt;&lt;/b&gt;: the largest interval between flushes. Defaults to 120,000.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flush_millis&lt;/code&gt; &lt;/b&gt; : 플러시 간격이 가장&lt;b&gt; 큽니다&lt;/b&gt; . 기본값은 120,000입니다.</target>
        </trans-unit>
        <trans-unit id="ecb9d6edf8ee65d82e3a4522d0599facd373b7fa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flush_mode&lt;/code&gt;&lt;/b&gt;: flush mode or &lt;code&gt;None&lt;/code&gt;, Default: Z_NO_FLUSH.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flush_mode&lt;/code&gt; &lt;/b&gt; : 플러시 모드 또는 &lt;code&gt;None&lt;/code&gt; , 기본값 : Z_NO_FLUSH.</target>
        </trans-unit>
        <trans-unit id="0cd8c600da0fb0608e474be52464761485328bcc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;flush_secs&lt;/code&gt;&lt;/b&gt;: Number. How often, in seconds, to flush the pending events and summaries to disk.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;flush_secs&lt;/code&gt; &lt;/b&gt; : 숫자. 보류중인 이벤트 및 요약을 디스크로 플러시하는 빈도 (초)입니다.</target>
        </trans-unit>
        <trans-unit id="77fe21e433ce97e50581b88e48443f0d4b6caad9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: Callable that will be called upon each element in elems</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt; : 요소별로 호출되는 호출 가능</target>
        </trans-unit>
        <trans-unit id="40eac3b0fc679995f3aeb438b23d9a587a72b15a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: Callable that will be called upon each element in elems and an accumulator, for instance &lt;code&gt;lambda acc, x: acc + x&lt;/code&gt;</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt; : elems 및 accumulator의 각 요소에 대해 호출되는 호출 가능 (예 &lt;code&gt;lambda acc, x: acc + x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8188a03662ae05b19c7492c80da982c99b748c58" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: Function to call. Should take the variable as the first argument.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt; : 호출 할 함수입니다. 변수를 첫 번째 인수로 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="237a3bf5eeecbc6d9e54b296eedead9df52d724b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: Function to execute.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt; : 실행할 기능입니다.</target>
        </trans-unit>
        <trans-unit id="096f9001faa4c16704fc06d9831dc6dd3222afa0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: The callable to be performed.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt; : 수행 할 호출 가능</target>
        </trans-unit>
        <trans-unit id="dae78bb7c70d29e0bf038c7cd6f42329837b5065" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: The callable to be performed. It accepts one argument, which will have the same (possibly nested) structure as &lt;code&gt;elems&lt;/code&gt;, and returns a possibly nested structure of Tensors and Operations, which may be different than the structure of &lt;code&gt;elems&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt; : 수행 할 호출 가능 이 같은 (아마도 중첩 된) 구조해야합니다 하나 개의 인수, 수용 &lt;code&gt;elems&lt;/code&gt; 을 , 그리고 구조와 다를 수 있습니다 텐서 및 운영의 가능성이 중첩 된 구조를 반환 &lt;code&gt;elems&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="cf05c0273bac9b3c9cd3b2eb7961fb1752d5e97a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: The callable to be performed. It accepts one argument, which will have the same (possibly nested) structure as &lt;code&gt;elems&lt;/code&gt;. Its output must have the same structure as &lt;code&gt;dtype&lt;/code&gt; if one is provided, otherwise it must have the same structure as &lt;code&gt;elems&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt; : 수행 할 호출 가능 하나의 인수를 허용하는데 &lt;code&gt;elems&lt;/code&gt; 와 동일한 (중첩 된) 구조를 갖습니다. 출력은 &lt;code&gt;dtype&lt;/code&gt; 과 동일한 구조를 가져야 하며, 그렇지 않으면 &lt;code&gt;elems&lt;/code&gt; 와 동일한 구조를 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="060d1e7d99fee51eda65a1a57d5731c0f8e260c6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: The callable to be performed. It accepts two arguments. The first will have the same structure as &lt;code&gt;initializer&lt;/code&gt; if one is provided, otherwise it will have the same structure as &lt;code&gt;elems&lt;/code&gt;. The second will have the same (possibly nested) structure as &lt;code&gt;elems&lt;/code&gt;. Its output must have the same structure as &lt;code&gt;initializer&lt;/code&gt; if one is provided, otherwise it must have the same structure as &lt;code&gt;elems&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt; : 수행 할 호출 가능 두 가지 주장을 받아들입니다. 첫 번째는 &lt;code&gt;initializer&lt;/code&gt; 와 동일한 구조를제공하며, 그렇지 않으면 &lt;code&gt;elems&lt;/code&gt; 와 동일한 구조를 갖습니다. 두 번째는 &lt;code&gt;elems&lt;/code&gt; 와 동일한 구조 일 것입니다. 출력은 &lt;code&gt;initializer&lt;/code&gt; 와 동일한 구조를 가져야하며, 그렇지 않으면 &lt;code&gt;elems&lt;/code&gt; 와 동일한 구조를 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="16a5b8fee5bcd8e6619204de00ac93f5a266639d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: The function to execute. Must return at least one tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt; : 실행할 기능입니다. 적어도 하나의 텐서를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="7fea3e4bb6a1e8cc006c53984ed7b3fb8d5cfd55" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: The function to run. The inputs to the function must match the outputs of &lt;code&gt;input_iterator.get_next()&lt;/code&gt;. The output must be a &lt;a href=&quot;../../../../nest&quot;&gt;&lt;code&gt;tf.nest&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;Tensor&lt;/code&gt;s.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt; : 실행할 기능입니다. 함수의 입력은 &lt;code&gt;input_iterator.get_next()&lt;/code&gt; 의 출력과 일치해야합니다. &lt;a href=&quot;../../../../nest&quot;&gt; &lt;code&gt;tf.nest&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;Tensor&lt;/code&gt; tf.nest 여야합니다.</target>
        </trans-unit>
        <trans-unit id="3b8b3a7b9c888723235f53debae374b7942e3a6a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: The function to run. The inputs to the function must match the outputs of &lt;code&gt;input_iterator.get_next()&lt;/code&gt;. The output must be a &lt;a href=&quot;../../../nest&quot;&gt;&lt;code&gt;tf.nest&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;Tensor&lt;/code&gt;s.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt; : 실행할 기능입니다. 함수의 입력은 &lt;code&gt;input_iterator.get_next()&lt;/code&gt; 의 출력과 일치해야합니다. &lt;a href=&quot;../../../nest&quot;&gt; &lt;code&gt;tf.nest&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;Tensor&lt;/code&gt; tf.nest 여야합니다.</target>
        </trans-unit>
        <trans-unit id="cad5ce380f658f970708649115627b31a2e06640" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: The function to run. The output must be a &lt;a href=&quot;../../../../nest&quot;&gt;&lt;code&gt;tf.nest&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;Tensor&lt;/code&gt;s.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt; : 실행할 기능입니다. &lt;a href=&quot;../../../../nest&quot;&gt; &lt;code&gt;tf.nest&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;Tensor&lt;/code&gt; tf.nest 여야합니다.</target>
        </trans-unit>
        <trans-unit id="f6754bc8712db9f7a882bda774fe270dd055b8b4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: The function to run. The output must be a &lt;a href=&quot;../../../nest&quot;&gt;&lt;code&gt;tf.nest&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;Tensor&lt;/code&gt;s.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt; : 실행할 기능입니다. &lt;a href=&quot;../../../nest&quot;&gt; &lt;code&gt;tf.nest&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;Tensor&lt;/code&gt; tf.nest 여야합니다.</target>
        </trans-unit>
        <trans-unit id="46458cd8832e0478921c65677bb11511ade2c93c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: The function to run. The output must be a &lt;a href=&quot;../../nest&quot;&gt;&lt;code&gt;tf.nest&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;Tensor&lt;/code&gt;s.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt; : 실행할 기능입니다. &lt;a href=&quot;../../nest&quot;&gt; &lt;code&gt;tf.nest&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;Tensor&lt;/code&gt; tf.nest 여야합니다.</target>
        </trans-unit>
        <trans-unit id="47b3a368e3e5d585d8b7ed23fec0afb1add39749" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: The function to run. The output must be a &lt;a href=&quot;../nest&quot;&gt;&lt;code&gt;tf.nest&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;Tensor&lt;/code&gt;s.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt; : 실행할 기능입니다. &lt;a href=&quot;../nest&quot;&gt; &lt;code&gt;tf.nest&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;Tensor&lt;/code&gt; tf.nest 여야합니다.</target>
        </trans-unit>
        <trans-unit id="e8f6ca431e4b384b153633ab5cf75ed1ba193bdb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: The metric function to wrap, with signature &lt;code&gt;fn(y_true, y_pred, **kwargs)&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt; : 서명이 &lt;code&gt;fn(y_true, y_pred, **kwargs)&lt;/code&gt; 랩핑 할 메트릭 함수입니다.</target>
        </trans-unit>
        <trans-unit id="d1c4835db96b96d0803ea2c1d6d059c96d602c92" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: arbitrary function</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt; : 임의 함수</target>
        </trans-unit>
        <trans-unit id="eee3ac964de8ddff7e4d3348e1afce88b4e0a060" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: function to run (will be run once per replica).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt; : 실행할 기능입니다 (복제 본당 한 번 실행 됨).</target>
        </trans-unit>
        <trans-unit id="f82c8a8a7ff9cad5b805190ea5f47bfee2ac93f1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: function to run using this distribution strategy. The function must have the following signature: &lt;code&gt;def fn(context, inputs)&lt;/code&gt;. &lt;code&gt;context&lt;/code&gt; is an instance of &lt;code&gt;MultiStepContext&lt;/code&gt; that will be passed when &lt;code&gt;fn&lt;/code&gt; is run. &lt;code&gt;context&lt;/code&gt; can be used to specify the outputs to be returned from &lt;code&gt;fn&lt;/code&gt; by calling &lt;code&gt;context.set_last_step_output&lt;/code&gt;. It can also be used to capture non tensor outputs by &lt;code&gt;context.set_non_tensor_output&lt;/code&gt;. See &lt;code&gt;MultiStepContext&lt;/code&gt; documentation for more information. &lt;code&gt;inputs&lt;/code&gt; will have same type/structure as &lt;code&gt;iterator.get_next()&lt;/code&gt;. Typically, &lt;code&gt;fn&lt;/code&gt; will use &lt;code&gt;call_for_each_replica&lt;/code&gt; method of the strategy to distribute the computation over multiple replicas.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt; :이 배포 전략을 사용하여 실행하는 함수입니다. 이 함수에는 &lt;code&gt;def fn(context, inputs)&lt;/code&gt; 서명이 있어야합니다. &lt;code&gt;context&lt;/code&gt; 는 &lt;code&gt;fn&lt;/code&gt; 이 실행될때 전달되는 &lt;code&gt;MultiStepContext&lt;/code&gt; 의 인스턴스입니다. &lt;code&gt;context.set_last_step_output&lt;/code&gt; 을 호출하여 &lt;code&gt;fn&lt;/code&gt; 에서 리턴 할 출력을 지정하는 데 &lt;code&gt;context&lt;/code&gt; 를 사용할 수 있습니다. &lt;code&gt;context.set_non_tensor_output&lt;/code&gt; 에 의해 텐서가 아닌 출력을 캡처하는 데 사용될 수도 있습니다. 자세한 내용은 &lt;code&gt;MultiStepContext&lt;/code&gt; 설명서를 참조하십시오. &lt;code&gt;inputs&lt;/code&gt; 은 &lt;code&gt;iterator.get_next()&lt;/code&gt; 와 동일한 유형 / 구조를 갖습니다. 일반적으로 &lt;code&gt;fn&lt;/code&gt; 전략의 &lt;code&gt;call_for_each_replica&lt;/code&gt; 메소드를 사용 하여 여러 복제본에 계산을 분배합니다.</target>
        </trans-unit>
        <trans-unit id="2daf4f3e8231bce52df9f9c71f740625e713ac2b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/b&gt;: python function to be wrapped</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fn&lt;/code&gt; &lt;/b&gt; : 랩핑 할 파이썬 함수</target>
        </trans-unit>
        <trans-unit id="53223799498e83e9cc684a341d4019f6d62f1245" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fname&lt;/code&gt;&lt;/b&gt;: Name of the file. If an absolute path &lt;code&gt;/path/to/file.txt&lt;/code&gt; is specified the file will be saved at that location.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fname&lt;/code&gt; &lt;/b&gt; : 파일 이름 절대 경로 &lt;code&gt;/path/to/file.txt&lt;/code&gt; 를 지정하면 파일이 해당 위치에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="b033c525359b591ec5b6fe03d8d94dcfdb75ecdc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;footer_bytes&lt;/code&gt;&lt;/b&gt;: (Optional.) A &lt;a href=&quot;../../../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt; scalar representing the number of bytes to ignore at the end of a file.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;footer_bytes&lt;/code&gt; &lt;/b&gt; : (선택 사항)파일 끝에서 무시할 바이트 수를 나타내는&lt;a href=&quot;../../../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt; 스칼라입니다.</target>
        </trans-unit>
        <trans-unit id="1f5e1a4f7a54758cd2a379e4a1ae27885cae29d6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;footer_bytes&lt;/code&gt;&lt;/b&gt;: (Optional.) A &lt;a href=&quot;../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt; scalar representing the number of bytes to ignore at the end of a file.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;footer_bytes&lt;/code&gt; &lt;/b&gt; : (선택 사항)파일 끝에서 무시할 바이트 수를 나타내는&lt;a href=&quot;../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt; 스칼라입니다.</target>
        </trans-unit>
        <trans-unit id="4faf3c3af70d6225fc66fdab40475214857ec761" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;footer_bytes&lt;/code&gt;&lt;/b&gt;: An optional int. Defaults to 0.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;footer_bytes&lt;/code&gt; &lt;/b&gt; : 선택적 int. 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="2f4a7fd615a43bb0e0e07393957281a47d13b7c0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;force_gnu&lt;/code&gt;&lt;/b&gt;: bool, if False, --flagfile parsing obeys the FLAGS.is_gnu_getopt() value. If True, ignore the value and always follow gnu_getopt semantics.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;force_gnu&lt;/code&gt; &lt;/b&gt; : bool (False 인 경우) --flagfile 구문 분석은 FLAGS.is_gnu_getopt () 값을 따릅니다. True 인 경우 값을 무시하고 항상 gnu_getopt 의미를 따릅니다.</target>
        </trans-unit>
        <trans-unit id="56c77ddb47f217e7e289798149d3ddd41ecd3070" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;force_gpu&lt;/code&gt;&lt;/b&gt;: If True, pin all ops to &lt;code&gt;/device:GPU:0&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;force_gpu&lt;/code&gt; &lt;/b&gt; : True 인 경우 모든 op를 &lt;code&gt;/device:GPU:0&lt;/code&gt; 에 고정 합니다.</target>
        </trans-unit>
        <trans-unit id="486bc8fe0683a65e0debcb3a01e62a0dbb7c0774" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;forget_bias&lt;/code&gt;&lt;/b&gt;: Biases of the forget gate are initialized by default to 1 in order to reduce the scale of forgetting at the beginning of the training. Must set it manually to &lt;code&gt;0.0&lt;/code&gt; when restoring from CudnnLSTM trained checkpoints.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;forget_bias&lt;/code&gt; &lt;/b&gt; : 잊어 버리기의&lt;b&gt; Biases&lt;/b&gt; 는 훈련 초기에 잊어 버리는 규모를 줄이기 위해 기본적으로 1로 초기화됩니다. CudnnLSTM 훈련 된 체크 포인트에서 복원 할 때수동으로 &lt;code&gt;0.0&lt;/code&gt; 으로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="53f9763c97b999e21e476e6abb55cb6b91fd6002" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;forget_bias&lt;/code&gt;&lt;/b&gt;: float, The bias added to forget gates (see above). Must set to &lt;code&gt;0.0&lt;/code&gt; manually when restoring from CudnnLSTM-trained checkpoints.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;forget_bias&lt;/code&gt; &lt;/b&gt; : float, 게이트를 잊기 위해 추가 된 바이어스입니다 (위 참조). CudnnLSTM 교육을받은 체크 포인트에서 복원 할 때는 수동으로 &lt;code&gt;0.0&lt;/code&gt; 으로설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="e1a657eca3e3bd79bae2e53e2fd59f35526e3e93" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;format&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;&quot;, &quot;grayscale&quot;, &quot;rgb&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. Per pixel image format.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;format&lt;/code&gt; &lt;/b&gt; : 옵션 &lt;code&gt;string&lt;/code&gt; 에서 : &lt;code&gt;&quot;&quot;, &quot;grayscale&quot;, &quot;rgb&quot;&lt;/code&gt; . 기본값은 &lt;code&gt;&quot;&quot;&lt;/code&gt; 입니다. 픽셀 당 이미지 형식.</target>
        </trans-unit>
        <trans-unit id="58f1fc65f07ed3abe0716502d87ac011d9d8a44e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;formatter&lt;/code&gt;&lt;/b&gt;: function, takes dict of &lt;code&gt;tag&lt;/code&gt;-&amp;gt;&lt;code&gt;Tensor&lt;/code&gt; and returns a string. If &lt;code&gt;None&lt;/code&gt; uses default printing all tensors.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;formatter&lt;/code&gt; &lt;/b&gt; : 기능의 DICT 소요 &lt;code&gt;tag&lt;/code&gt; -&amp;gt; &lt;code&gt;Tensor&lt;/code&gt; 반환 문자열을. &lt;code&gt;None&lt;/code&gt; 이 기본 인쇄를 사용하면모든 텐서가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1f4bdc019dc78044e02ad87cd1f2270b72492215" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;forward_window_fn&lt;/code&gt;&lt;/b&gt;: window_fn used in the forward transform, &lt;code&gt;stft&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;forward_window_fn&lt;/code&gt; &lt;/b&gt; : 정방향 변환에 사용되는 &lt;code&gt;stft&lt;/code&gt; , stft .</target>
        </trans-unit>
        <trans-unit id="b34fef26f713d4a4049aefc462327ad24a82a637" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;frame_length&lt;/code&gt;&lt;/b&gt;: An integer scalar &lt;code&gt;Tensor&lt;/code&gt;. The window length in samples.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;frame_length&lt;/code&gt; &lt;/b&gt; : 정수 스칼라 &lt;code&gt;Tensor&lt;/code&gt; . 샘플의 윈도우 길이입니다.</target>
        </trans-unit>
        <trans-unit id="3ed6908c8b151962141373fd7813380a7c5044aa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;frame_length&lt;/code&gt;&lt;/b&gt;: The frame length in samples. An integer or scalar &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;frame_length&lt;/code&gt; &lt;/b&gt; : 샘플의 프레임 길이. 정수 또는 스칼라 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d65e886b051e456dd7001c89c999081f08d946f9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;frame_step&lt;/code&gt;&lt;/b&gt;: An integer or scalar &lt;code&gt;Tensor&lt;/code&gt; denoting overlap offsets. Must be less than or equal to &lt;code&gt;frame_length&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;frame_step&lt;/code&gt; &lt;/b&gt; :오버랩 오프셋을 나타내는정수 또는 스칼라 &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;frame_length&lt;/code&gt; 이하 여야합니다.</target>
        </trans-unit>
        <trans-unit id="df6a698fc033baa4d4824a5ffd54d0786054b6a0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;frame_step&lt;/code&gt;&lt;/b&gt;: An integer scalar &lt;code&gt;Tensor&lt;/code&gt;. The number of samples to step.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;frame_step&lt;/code&gt; &lt;/b&gt; : 정수 스칼라 &lt;code&gt;Tensor&lt;/code&gt; . 단계별 샘플 수입니다.</target>
        </trans-unit>
        <trans-unit id="70f8f275351cfd7939c2947d79878c07c9811676" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;frame_step&lt;/code&gt;&lt;/b&gt;: The frame hop size in samples. An integer or scalar &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;frame_step&lt;/code&gt; &lt;/b&gt; : 샘플의 프레임 홉 크기입니다. 정수 또는 스칼라 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="956061875db1cd9ae960ff3d90f2632a1f2a9504" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;frequency_weights&lt;/code&gt;&lt;/b&gt;: A tensor of positive weights which can be broadcast with x.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;frequency_weights&lt;/code&gt; &lt;/b&gt; : x로 브로드 캐스트 할 수있는 양의 가중치 텐서.</target>
        </trans-unit>
        <trans-unit id="f637da140c64a951ceeaa01a1a13a0511bd60fd9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;from_logits&lt;/code&gt;&lt;/b&gt;: (Optional ) Whether &lt;code&gt;y_pred&lt;/code&gt; is expected to be a logits tensor. By default, we assume that &lt;code&gt;y_pred&lt;/code&gt; encodes a probability distribution.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;from_logits&lt;/code&gt; &lt;/b&gt; : (선택 사항) &lt;code&gt;y_pred&lt;/code&gt; 가 로짓 텐서 일지여부입니다. 기본적으로 &lt;code&gt;y_pred&lt;/code&gt; 는 확률 분포를 인코딩한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="562663e56002bbc6321b532d43ddacebe7280703" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;from_logits&lt;/code&gt;&lt;/b&gt;: (Optional )Whether output is expected to be a logits tensor. By default, we consider that output encodes a probability distribution.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;from_logits&lt;/code&gt; &lt;/b&gt; : (선택 사항) 출력이 로짓 텐서인지 여부입니다. 기본적으로 출력은 확률 분포를 인코딩한다고 생각합니다.</target>
        </trans-unit>
        <trans-unit id="d08a5f1e8fbdbc59edf2a504a025295079cdcb49" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;from_logits&lt;/code&gt;&lt;/b&gt;: Boolean, whether &lt;code&gt;output&lt;/code&gt; is the result of a softmax, or is a tensor of logits.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;from_logits&lt;/code&gt; &lt;/b&gt; : 부울, &lt;code&gt;output&lt;/code&gt; 이 softmax의 결과인지, 로그의 텐서인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="4e543311b5764268e98e5b220414648873d17016" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;from_logits&lt;/code&gt;&lt;/b&gt;: Whether &lt;code&gt;output&lt;/code&gt; is expected to be a logits tensor. By default, we consider that &lt;code&gt;output&lt;/code&gt; encodes a probability distribution.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;from_logits&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;output&lt;/code&gt; 이 로짓 텐서 일지여부입니다. 기본적으로 &lt;code&gt;output&lt;/code&gt; 은 확률 분포를 인코딩한다고 생각합니다.</target>
        </trans-unit>
        <trans-unit id="8a1485f91aaa4b1b4b6397f2119c750f3f26d059" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;from_logits&lt;/code&gt;&lt;/b&gt;: Whether &lt;code&gt;y_pred&lt;/code&gt; is expected to be a logits tensor. By default, we assume that &lt;code&gt;y_pred&lt;/code&gt; encodes a probability distribution.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;from_logits&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;y_pred&lt;/code&gt; 가 로짓 텐서 일지여부입니다. 기본적으로 &lt;code&gt;y_pred&lt;/code&gt; 는 확률 분포를 인코딩한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="97d7f043a13e8ee307b687c85480e587edcab76c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;from_logits&lt;/code&gt;&lt;/b&gt;: Whether &lt;code&gt;y_pred&lt;/code&gt; is expected to be a logits tensor. By default, we assume that &lt;code&gt;y_pred&lt;/code&gt; encodes a probability distribution. Note: Using from_logits=True may be more numerically stable.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;from_logits&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;y_pred&lt;/code&gt; 가 로짓 텐서 일지여부입니다. 기본적으로 &lt;code&gt;y_pred&lt;/code&gt; 는 확률 분포를 인코딩한다고 가정합니다. 참고 : from_logits = True를 사용하면 수치 적으로 더 안정적 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dec1364c50baab2a32977e6f642dfaace353b8ef" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;from_logits&lt;/code&gt;&lt;/b&gt;: Whether to interpret &lt;code&gt;y_pred&lt;/code&gt; as a tensor of &lt;a href=&quot;https://en.wikipedia.org/wiki/Logit&quot;&gt;logit&lt;/a&gt; values. By default, we assume that &lt;code&gt;y_pred&lt;/code&gt; contains probabilities (i.e., values in [0, 1]). Note: Using from_logits=True may be more numerically stable.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;from_logits&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;y_pred&lt;/code&gt; 를&lt;a href=&quot;https://en.wikipedia.org/wiki/Logit&quot;&gt; 로짓&lt;/a&gt; 값의 텐서로 해석할지 여부입니다. 기본적으로 &lt;code&gt;y_pred&lt;/code&gt; 에는 확률 (예 : [0, 1]의 값)이 포함되어있다고 가정합니다. 참고 : from_logits = True를 사용하면 수치 적으로 더 안정적 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3892a9490cbbe6cb2bca1041bcb11baeeb86a6f1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;from_version&lt;/code&gt;&lt;/b&gt;: Optional. If this is set, returns a &lt;code&gt;GraphDef&lt;/code&gt; containing only the nodes that were added to this graph since its &lt;code&gt;version&lt;/code&gt; property had the given value.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;from_version&lt;/code&gt; &lt;/b&gt; : 선택 사항. 이것이 설정되면, &lt;code&gt;version&lt;/code&gt; 속성에 지정된 값이 &lt;code&gt;GraphDef&lt;/code&gt; 그래프에 추가 된 노드 만 포함하는 GraphDef 를반환합니다.</target>
        </trans-unit>
        <trans-unit id="a1046a6f35f1157ecaf356871ea3d7aae849ae1b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;full_matrices&lt;/code&gt;&lt;/b&gt;: An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If true, compute full-sized &lt;code&gt;q&lt;/code&gt; and &lt;code&gt;r&lt;/code&gt;. If false (the default), compute only the leading &lt;code&gt;P&lt;/code&gt; columns of &lt;code&gt;q&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;full_matrices&lt;/code&gt; &lt;/b&gt; : 선택적 &lt;code&gt;bool&lt;/code&gt; 입니다. 기본값은 &lt;code&gt;False&lt;/code&gt; 입니다. true 인 경우 전체 크기 &lt;code&gt;q&lt;/code&gt; 및 &lt;code&gt;r&lt;/code&gt; 을 계산하십시오. false (기본값)이면 &lt;code&gt;q&lt;/code&gt; 의 선행 &lt;code&gt;P&lt;/code&gt; 열만계산하십시오.</target>
        </trans-unit>
        <trans-unit id="3aa99409546a9678aae5065f2e3f063f5ad1635e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;full_matrices&lt;/code&gt;&lt;/b&gt;: If true, compute full-sized &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;v&lt;/code&gt;. If false (the default), compute only the leading &lt;code&gt;P&lt;/code&gt; singular vectors. Ignored if &lt;code&gt;compute_uv&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;full_matrices&lt;/code&gt; &lt;/b&gt; : true 인 경우 전체 크기 &lt;code&gt;u&lt;/code&gt; 및 &lt;code&gt;v&lt;/code&gt; 를 계산합니다. false 인 경우 (기본값) 선행 &lt;code&gt;P&lt;/code&gt; 특이 벡터만 계산합니다. &lt;code&gt;compute_uv&lt;/code&gt; 가 &lt;code&gt;False&lt;/code&gt; 인 경우 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="4c0103cb1cf9bd8b4e7251bc39201c403ec3044e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;full_name&lt;/code&gt;&lt;/b&gt;: Name of the full variable of which this &lt;code&gt;Variable&lt;/code&gt; is a slice.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;full_name&lt;/code&gt; &lt;/b&gt; :이 &lt;code&gt;Variable&lt;/code&gt; 가 슬라이스 인전체 변수의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="cd3ced338f5f6fb293dd96c7b4fca86661a13a7c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;full_shape&lt;/code&gt;&lt;/b&gt;: Shape of the full variable, as a list of int.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;full_shape&lt;/code&gt; &lt;/b&gt; : int의 목록으로 전체 변수의 모양.</target>
        </trans-unit>
        <trans-unit id="eee86b8c68ce7b1ab047f7ef98679a58f393ab22" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;func&lt;/code&gt;&lt;/b&gt;: A Python function which accepts a list of &lt;code&gt;Tensor&lt;/code&gt; objects having element types that match the corresponding &lt;a href=&quot;tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; objects in &lt;code&gt;inp&lt;/code&gt; and returns a list of &lt;code&gt;Tensor&lt;/code&gt; objects (or a single &lt;code&gt;Tensor&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt;) having element types that match the corresponding values in &lt;code&gt;Tout&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;func&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;inp&lt;/code&gt; 의 해당&lt;a href=&quot;tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 객체와 일치하는 요소 유형이있는 &lt;code&gt;Tensor&lt;/code&gt; 객체목록을 허용하고 해당 값과 일치하는 요소 유형이있는 &lt;code&gt;Tensor&lt;/code&gt; 객체목록(또는 단일 &lt;code&gt;Tensor&lt;/code&gt; 또는 &lt;code&gt;None&lt;/code&gt; )을반환하는Python 함수 &lt;code&gt;Tout&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ada9091eedb21103e50a5331b71e60310b3403a8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;func&lt;/code&gt;&lt;/b&gt;: A Python function, which accepts &lt;code&gt;ndarray&lt;/code&gt; objects as arguments and returns a list of &lt;code&gt;ndarray&lt;/code&gt; objects (or a single &lt;code&gt;ndarray&lt;/code&gt;). This function must accept as many arguments as there are tensors in &lt;code&gt;inp&lt;/code&gt;, and these argument types will match the corresponding &lt;a href=&quot;../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; objects in &lt;code&gt;inp&lt;/code&gt;. The returns &lt;code&gt;ndarray&lt;/code&gt;s must match the number and types defined &lt;code&gt;Tout&lt;/code&gt;. Important Note: Input and output numpy &lt;code&gt;ndarray&lt;/code&gt;s of &lt;code&gt;func&lt;/code&gt; are not guaranteed to be copies. In some cases their underlying memory will be shared with the corresponding TensorFlow tensors. In-place modification or storing &lt;code&gt;func&lt;/code&gt; input or return values in python datastructures without explicit (np.)copy can have non-deterministic consequences.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;func&lt;/code&gt; &lt;/b&gt; : Python 함수. &lt;code&gt;ndarray&lt;/code&gt; 객체를 인수로받아들이고 &lt;code&gt;ndarray&lt;/code&gt; 객체 (또는 단일 &lt;code&gt;ndarray&lt;/code&gt; )목록을 반환합니다. 이 함수는 &lt;code&gt;inp&lt;/code&gt; 에 텐서가있는 수만큼의 인수를 허용해야하며 이러한 인수 유형은 &lt;code&gt;inp&lt;/code&gt; 의 해당&lt;a href=&quot;../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 객체와 일치합니다. 수익은 &lt;code&gt;ndarray&lt;/code&gt; 의 정의 수 및 유형과 일치해야합니다 &lt;code&gt;Tout&lt;/code&gt; . 중요 사항 : &lt;code&gt;func&lt;/code&gt; 의입력 및 출력 numpy &lt;code&gt;ndarray&lt;/code&gt; 는 복사가 보장되지 않습니다. 어떤 경우에는 기본 메모리가 해당 TensorFlow 텐서와 공유됩니다. 전체 수정 또는 보관 &lt;code&gt;func&lt;/code&gt; 명시 적 (np.) 복사없이 파이썬 데이터 구조의 func 입력 또는 반환 값은 결정적이지 않은 결과를 초래할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="90b199c8c49073f6bcef9800ee8aed3edaca098d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;func&lt;/code&gt;&lt;/b&gt;: A Python function, which accepts &lt;code&gt;numpy.ndarray&lt;/code&gt; objects as arguments and returns a list of &lt;code&gt;numpy.ndarray&lt;/code&gt; objects (or a single &lt;code&gt;numpy.ndarray&lt;/code&gt;). This function must accept as many arguments as there are tensors in &lt;code&gt;inp&lt;/code&gt;, and these argument types will match the corresponding &lt;a href=&quot;tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; objects in &lt;code&gt;inp&lt;/code&gt;. The returns &lt;code&gt;numpy.ndarray&lt;/code&gt;s must match the number and types defined &lt;code&gt;Tout&lt;/code&gt;. Important Note: Input and output &lt;code&gt;numpy.ndarray&lt;/code&gt;s of &lt;code&gt;func&lt;/code&gt; are not guaranteed to be copies. In some cases their underlying memory will be shared with the corresponding TensorFlow tensors. In-place modification or storing &lt;code&gt;func&lt;/code&gt; input or return values in python datastructures without explicit (np.)copy can have non-deterministic consequences.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;func&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;numpy.ndarray&lt;/code&gt; 객체를 인수로허용하고 &lt;code&gt;numpy.ndarray&lt;/code&gt; 객체 (또는 단일 &lt;code&gt;numpy.ndarray&lt;/code&gt; )목록을 반환하는Python 함수입니다. 이 함수는 &lt;code&gt;inp&lt;/code&gt; 에 텐서가있는 수만큼의 인수를 허용해야하며 이러한 인수 유형은 &lt;code&gt;inp&lt;/code&gt; 의 해당&lt;a href=&quot;tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 객체와 일치합니다. 수익은 &lt;code&gt;numpy.ndarray&lt;/code&gt; 의 정의 수 및 유형과 일치해야합니다 &lt;code&gt;Tout&lt;/code&gt; . 중요 사항 : &lt;code&gt;numpy.ndarray&lt;/code&gt; 의 &lt;code&gt;func&lt;/code&gt; 입력 및 출력사본임을 보증하지 않습니다. 어떤 경우에는 기본 메모리가 해당 TensorFlow 텐서와 공유됩니다. 명시 적 (np.) 복사없이 파이썬 데이터 구조에서 적절한 수정 또는 &lt;code&gt;func&lt;/code&gt; 입력 또는 반환 값을 저장하면 결정적이지 않은 결과가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc137ed9aab62a25ce35352500cc8de41a2ebd2d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;func&lt;/code&gt;&lt;/b&gt;: A callable that accepts as many arguments as there are structures.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;func&lt;/code&gt; &lt;/b&gt; : 구조체가있는만큼 많은 인수를 허용하는 호출 가능.</target>
        </trans-unit>
        <trans-unit id="8172df55566d10b40efd148157b60d7ebc8a0472" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;func&lt;/code&gt;&lt;/b&gt;: function to decorate.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;func&lt;/code&gt; &lt;/b&gt; : 꾸미는 기능.</target>
        </trans-unit>
        <trans-unit id="7b60a169a1c962a3fae883e98bce7da742f7d374" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;func&lt;/code&gt;&lt;/b&gt;: the function to be compiled. If &lt;code&gt;func&lt;/code&gt; is None, &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; returns a decorator that can be invoked with a single argument - &lt;code&gt;func&lt;/code&gt;. In other words, &lt;code&gt;tf.function(input_signature=...)(func)&lt;/code&gt; is equivalent to &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function(func, input_signature=...)&lt;/code&gt;&lt;/a&gt;. The former can be used as decorator.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;func&lt;/code&gt; &lt;/b&gt; : 컴파일 할 함수. 경우 &lt;code&gt;func&lt;/code&gt; 아무도 없다,&lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; 은&lt;/a&gt; - 하나의 인수로 호출 할 수있는 장식 반환 &lt;code&gt;func&lt;/code&gt; . 즉, &lt;code&gt;tf.function(input_signature=...)(func)&lt;/code&gt; 은&lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function(func, input_signature=...)&lt;/code&gt; &lt;/a&gt; . 전자는 데코레이터로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b99a40e2e1b0ebc34b32dd3e0d3814f228264bec" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;func_&lt;/code&gt;&lt;/b&gt;: The function to wrap.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;func_&lt;/code&gt; &lt;/b&gt; : 랩핑 할 함수.</target>
        </trans-unit>
        <trans-unit id="079985e3db0804f2fe3c7f2f06344f4167ed0f67" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;funcs&lt;/code&gt;&lt;/b&gt;: List of TensorFlow ConcreteFunctions. The list should not contain duplicate elements.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;funcs&lt;/code&gt; &lt;/b&gt; : TensorFlow ConcreteFunctions 목록. 목록에는 중복 요소가 포함되지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="dc17438109b55ebb07e11982f4c56de942e251e0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;funcs&lt;/code&gt;&lt;/b&gt;: List of TensorFlow ConcreteFunctions. The list should not contain duplicate elements. Currently converter can only convert a single ConcreteFunction. Converting multiple functions is under development.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;funcs&lt;/code&gt; &lt;/b&gt; : TensorFlow ConcreteFunctions 목록. 목록에는 중복 요소가 포함되지 않아야합니다. 현재 변환기는 하나의 ConcreteFunction 만 변환 할 수 있습니다. 여러 기능 변환이 개발 중입니다.</target>
        </trans-unit>
        <trans-unit id="aa17ee65886355857f4662d8f9252552789cc0d1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;function&lt;/code&gt;&lt;/b&gt;: The callable taking two arguments and an optional msg= argument that raises self.failureException with a useful error message when the two arguments are not equal.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;function&lt;/code&gt; &lt;/b&gt; : 두 개의 인수를 사용하는 호출 가능 및 두 개의 인수가 같지 않을 때 유용한 오류 메시지와 함께 self.failureException을 발생시키는 선택적 msg = 인수</target>
        </trans-unit>
        <trans-unit id="59006cd68406039722ede19dc6595306bca4f8e6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;function&lt;/code&gt;&lt;/b&gt;: The function to be evaluated. Takes input tensor as first argument.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;function&lt;/code&gt; &lt;/b&gt; : 평가할 함수입니다. 입력 텐서를 첫 번째 인수로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="4d53bd33b475641c97a3c4b89afb687cbd93585e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;function_name&lt;/code&gt;&lt;/b&gt;: Name of the function (the custom op name in tflite)</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;function_name&lt;/code&gt; &lt;/b&gt; :&lt;b&gt; 함수&lt;/b&gt; 이름 (tflite의 사용자 정의 op 이름)</target>
        </trans-unit>
        <trans-unit id="ecfe26587251096e256f42d31f7fb9ba5b66e59f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;function_name&lt;/code&gt;&lt;/b&gt;: Name of the function that this tracks arguments for.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;function_name&lt;/code&gt; &lt;/b&gt; : 인수를 추적하는 함수의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="317c2bb4f23f0a229364851b44a2acebaeeaed62" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fused&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;None&lt;/code&gt; or &lt;code&gt;True&lt;/code&gt;, use a faster, fused implementation if possible. If &lt;code&gt;False&lt;/code&gt;, use the system recommended implementation.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fused&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;None&lt;/code&gt; 또는 &lt;code&gt;True&lt;/code&gt; 인 경우 가능하면 더 빠르고 융합 된 구현을 사용하십시오. 경우 &lt;code&gt;False&lt;/code&gt; , 시스템 권장 구현을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="9fada495dab8b3043d6741f1efc0d35135171680" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;fused&lt;/code&gt;&lt;/b&gt;: if &lt;code&gt;True&lt;/code&gt;, use a faster, fused implementation, or raise a ValueError if the fused implementation cannot be used. If &lt;code&gt;None&lt;/code&gt;, use the faster implementation if possible. If False, do not used the fused implementation.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;fused&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;True&lt;/code&gt; 인 경우 더 빠르고 융합 된 구현을 사용하거나 융합 된 구현을 사용할 수없는 경우 ValueError를 발생시킵니다. 경우 &lt;code&gt;None&lt;/code&gt; , 빠른 구현을 가능하면 사용합니다. False이면 통합 구현을 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="a903b89698d22332a9f78b1f27b80b3108684d23" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;g&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Graph&lt;/code&gt;. The parent graph.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;g&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Graph&lt;/code&gt; . 부모 그래프.</target>
        </trans-unit>
        <trans-unit id="99ff6695fb998b28e0c3f4a9fa80e62311e8aaf2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gain&lt;/code&gt;&lt;/b&gt;: A scalar or tensor. The constant multiplier.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gain&lt;/code&gt; &lt;/b&gt; : 스칼라 또는 텐서. 상수 승수입니다.</target>
        </trans-unit>
        <trans-unit id="b223d1d66c0ba1f2e3c8d9c86aceac4c0541d471" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gain&lt;/code&gt;&lt;/b&gt;: Multiplicative factor to apply to the identity matrix.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gain&lt;/code&gt; &lt;/b&gt; : 항등 행렬에 적용 할 승수입니다.</target>
        </trans-unit>
        <trans-unit id="1dbf3539b7b80ae652e2134b28ca5ae1a6455155" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gain&lt;/code&gt;&lt;/b&gt;: multiplicative factor to apply to the orthogonal matrix</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gain&lt;/code&gt; &lt;/b&gt; : 직교 행렬에 적용 할 곱셈 계수</target>
        </trans-unit>
        <trans-unit id="22dffb6500b34062121ded56104ad0fa6873bdb8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gamma&lt;/code&gt;&lt;/b&gt;: A 1D gamma Tensor with size matching the last dimension of t. If &quot;scale_after_normalization&quot; is true, this tensor will be multiplied with the normalized tensor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gamma&lt;/code&gt; &lt;/b&gt; : 크기가 t의 마지막 치수와 일치하는 1D 감마 텐서. &quot;scale_after_normalization&quot;이 true이면이 텐서에 정규화 된 텐서가 곱해집니다.</target>
        </trans-unit>
        <trans-unit id="9650d07800aedbda6b0fbb6568c322afdda4a09c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gamma&lt;/code&gt;&lt;/b&gt;: A scalar or tensor. Non negative real number.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gamma&lt;/code&gt; &lt;/b&gt; : 스칼라 또는 텐서. 음수가 아닌 실수.</target>
        </trans-unit>
        <trans-unit id="4edc8275051d31c363e714a15d706a18ee267b33" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gamma&lt;/code&gt;&lt;/b&gt;: Tensor by which to scale the input.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gamma&lt;/code&gt; &lt;/b&gt; : 입력 스케일링에 사용되는 텐서.</target>
        </trans-unit>
        <trans-unit id="51a4beb64a683a841c5e1557c1535538b15441ff" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gamma_constraint&lt;/code&gt;&lt;/b&gt;: An optional projection function to be applied to the &lt;code&gt;gamma&lt;/code&gt; weight after being updated by an &lt;code&gt;Optimizer&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gamma_constraint&lt;/code&gt; &lt;/b&gt; : 선택적 투영 함수에 적용되는 &lt;code&gt;gamma&lt;/code&gt; 업데이트 후의 중량 &lt;code&gt;Optimizer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce254e4de9c20c9addfe54728e04170b947b5539" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gamma_constraint&lt;/code&gt;&lt;/b&gt;: Optional constraint for the gamma weight.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gamma_constraint&lt;/code&gt; &lt;/b&gt; : 감마 가중치에 대한 선택적 제한 조건입니다.</target>
        </trans-unit>
        <trans-unit id="55c308552278f2d230ceebe92bdfbfe6c95786b3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gamma_initializer&lt;/code&gt;&lt;/b&gt;: Initializer for the gamma weight.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gamma_initializer&lt;/code&gt; &lt;/b&gt; : 감마 가중치의 이니셜 라이저.</target>
        </trans-unit>
        <trans-unit id="8c67530ed291d2d447846cc2a06703eee46bcdda" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gamma_regularizer&lt;/code&gt;&lt;/b&gt;: Optional regularizer for the gamma weight.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gamma_regularizer&lt;/code&gt; &lt;/b&gt; : 감마 가중치에 대한 선택적 정규화 기입니다.</target>
        </trans-unit>
        <trans-unit id="77e96276bcd5a6e36926deeb5bfda6b3d9beb909" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gate_gradients&lt;/code&gt;&lt;/b&gt;: How to gate the computation of gradients. Can be &lt;code&gt;GATE_NONE&lt;/code&gt;, &lt;code&gt;GATE_OP&lt;/code&gt;, or &lt;code&gt;GATE_GRAPH&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gate_gradients&lt;/code&gt; &lt;/b&gt; : 그래디언트 계산을 게이트하는 방법. 할 수 &lt;code&gt;GATE_NONE&lt;/code&gt; , &lt;code&gt;GATE_OP&lt;/code&gt; , 또는 &lt;code&gt;GATE_GRAPH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="257c04bc1b83149fa87ddbb78e3ba1dadecc922e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gate_gradients&lt;/code&gt;&lt;/b&gt;: If True, add a tuple around the gradients returned for an operations. This avoids some race conditions.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gate_gradients&lt;/code&gt; &lt;/b&gt; : True 인 경우 연산에 대해 반환 된 그라디언트 주위에 튜플을 추가합니다. 이것은 일부 경쟁 조건을 피합니다.</target>
        </trans-unit>
        <trans-unit id="cb89dff459f21a5555033ab5b0a3a41bf3981ed6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gate_gradients&lt;/code&gt;&lt;/b&gt;: See &lt;code&gt;gradients()&lt;/code&gt; documentation for details.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gate_gradients&lt;/code&gt; &lt;/b&gt; : 자세한 내용은 &lt;code&gt;gradients()&lt;/code&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f23484100118da449a4a025d6bcaf84020fe71c0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gaussian&lt;/code&gt;&lt;/b&gt;: &lt;a href=&quot;https://en.wikipedia.org/wiki/Gaussian_filter&quot;&gt;Gaussian kernel&lt;/a&gt; with radius 3, sigma = 1.5 / 3.0.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gaussian&lt;/code&gt; &lt;/b&gt; :반경이 3 인&lt;a href=&quot;https://en.wikipedia.org/wiki/Gaussian_filter&quot;&gt; 가우시안 커널&lt;/a&gt; , 시그마 = 1.5 / 3.0.</target>
        </trans-unit>
        <trans-unit id="e00d318ddfbf629392b8f8b1b02b89be6e05b0c0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;generator&lt;/code&gt;&lt;/b&gt;: A callable object that returns an object that supports the &lt;code&gt;iter()&lt;/code&gt; protocol. If &lt;code&gt;args&lt;/code&gt; is not specified, &lt;code&gt;generator&lt;/code&gt; must take no arguments; otherwise it must take as many arguments as there are values in &lt;code&gt;args&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;generator&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;iter()&lt;/code&gt; 프로토콜을 지원하는 객체를 반환하는 호출 가능한 객체. 경우 &lt;code&gt;args&lt;/code&gt; 지정되지 않은, &lt;code&gt;generator&lt;/code&gt; 인수를 취하지해야합니다 그렇지 않으면 &lt;code&gt;args&lt;/code&gt; 에 값이있는 수만큼 인수를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="d1b21e4b52f331d7f22d05628ec2ef0507b4aef3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;generator&lt;/code&gt;&lt;/b&gt;: a generator function which yields data</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;generator&lt;/code&gt; &lt;/b&gt; : 데이터를 생성하는 생성기 함수</target>
        </trans-unit>
        <trans-unit id="f9f82f91bc1b00365aafaa3445299c9c9306cb6a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;generator&lt;/code&gt;&lt;/b&gt;: the new &lt;code&gt;Generator&lt;/code&gt; object.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;generator&lt;/code&gt; &lt;/b&gt; : 새로운 &lt;code&gt;Generator&lt;/code&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="a1c86c47e3fa4d9fdbb5889c621c8ad107020bdf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_batch_size&lt;/code&gt;&lt;/b&gt;: Optional global batch size value. Defaults to (size of first dimension of &lt;code&gt;losses&lt;/code&gt;) * (number of replicas).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_batch_size&lt;/code&gt; &lt;/b&gt; : 선택적 글로벌 배치 크기 값. 기본값은 (첫 번째 &lt;code&gt;losses&lt;/code&gt; 크기의 크기) * (복제본 수)입니다.</target>
        </trans-unit>
        <trans-unit id="46b72e87af2d8cc20b1f539b492b602f7b480f1f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_batch_size&lt;/code&gt;&lt;/b&gt;: the global batch size which should be divisible by &lt;code&gt;num_replicas_in_sync&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_batch_size&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;num_replicas_in_sync&lt;/code&gt; 로 나눌 수있는 전역 배치 크기.</target>
        </trans-unit>
        <trans-unit id="ef1038470a6e06b2e5885e122aa06516c7123c09" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_norm&lt;/code&gt;&lt;/b&gt;: A 0-D (scalar) &lt;code&gt;Tensor&lt;/code&gt; representing the global norm.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_norm&lt;/code&gt; &lt;/b&gt; :전역 규범을 나타내는0-D (스칼라) &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5e7b4884751115dcf8e39808c71b421d25cb4de" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; containing the current training step number.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step&lt;/code&gt; &lt;/b&gt; :현재 훈련 단계 번호를 포함하는 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8bff0a46ea73755c38cc23700825120b9b6fe914" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step&lt;/code&gt;&lt;/b&gt;: A Python number. Global step to use for the decay computation. Must not be negative.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step&lt;/code&gt; &lt;/b&gt; : 파이썬 숫자. 붕괴 계산에 사용할 전역 단계. 음수가 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="b9f43286e3407c0dfc84c7dbb800dcaf52df5491" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step&lt;/code&gt;&lt;/b&gt;: A scalar &lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; or a Python number. Global step to use for the decay computation.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step&lt;/code&gt; &lt;/b&gt; : 스칼라 &lt;code&gt;int32&lt;/code&gt; 또는 &lt;code&gt;int64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 또는 Python 숫자입니다. 붕괴 계산에 사용할 전역 단계.</target>
        </trans-unit>
        <trans-unit id="e909d509f5c553197abd58bf08e6b8787a8b6bee" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step&lt;/code&gt;&lt;/b&gt;: A scalar &lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; or a Python number. Global step to use for the decay computation. Must not be negative.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step&lt;/code&gt; &lt;/b&gt; : 스칼라 &lt;code&gt;int32&lt;/code&gt; 또는 &lt;code&gt;int64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 또는 Python 숫자 붕괴 계산에 사용할 전역 단계. 음수가 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="59417f7977bf1777e9522fbf793569b36de5a5bb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step&lt;/code&gt;&lt;/b&gt;: An integer Tensor of size 1 that counts steps. The value from 'global_step' is used in summaries and checkpoint filenames. Default to the op named 'global_step' in the graph if it exists, is of rank 1, size 1, and of type tf.int32 or tf.int64. If &lt;code&gt;None&lt;/code&gt; the global step is not recorded in summaries and checkpoint files. Used by chief supervisors if a &lt;code&gt;logdir&lt;/code&gt; was specified.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step&lt;/code&gt; &lt;/b&gt; : 단계를 계산하는 크기 1의 정수 텐서. 'global_step'의 값은 요약 및 검사 점 파일 이름에 사용됩니다. 그래프에 'global_step'이라는 op가 있으면 기본값은 순위 1, 크기 1, 유형 tf.int32 또는 tf.int64입니다. 만약 &lt;code&gt;None&lt;/code&gt; 글로벌 단계는 요약 및 검사 점 파일에 기록되지 않습니다. &lt;code&gt;logdir&lt;/code&gt; 이 지정된경우 최고 감독자가 사용합니다.</target>
        </trans-unit>
        <trans-unit id="7374e735f645b13c608eabf7a890254c61458ee4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step&lt;/code&gt;&lt;/b&gt;: If provided the global step number is appended to &lt;code&gt;save_path&lt;/code&gt; to create the checkpoint filenames. The optional argument can be a &lt;code&gt;Tensor&lt;/code&gt;, a &lt;code&gt;Tensor&lt;/code&gt; name or an integer.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step&lt;/code&gt; &lt;/b&gt; : 제공된 경우검사 점 파일 이름을 작성하기 위해전역 단계 번호가 &lt;code&gt;save_path&lt;/code&gt; 에추가됩니다. 선택적 인수는 &lt;code&gt;Tensor&lt;/code&gt; , &lt;code&gt;Tensor&lt;/code&gt; 이름 또는 정수일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="87a1568cee58373502fce55d226ada2c7f20b286" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step&lt;/code&gt;&lt;/b&gt;: Int. global step this summary is associated with. If &lt;code&gt;None&lt;/code&gt;, it will try to fetch the current step.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step&lt;/code&gt; &lt;/b&gt; : Int. 이 요약과 관련된 전역 단계. 경우 &lt;code&gt;None&lt;/code&gt; , 현재 단계를 가져 오기 위해 노력할 것입니다.</target>
        </trans-unit>
        <trans-unit id="1a025f1193053f50d618c71091f83bd9aa9ffd37" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step&lt;/code&gt;&lt;/b&gt;: Number. Optional global step counter to record with the StepStats.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step&lt;/code&gt; &lt;/b&gt; : 숫자. StepStats와 함께 기록하기위한 선택적 글로벌 스텝 카운터.</target>
        </trans-unit>
        <trans-unit id="2e4f5a9b5eb586eeaea27cbb5ff1608c798634fa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step&lt;/code&gt;&lt;/b&gt;: Number. Optional global step counter to record with the graph.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step&lt;/code&gt; &lt;/b&gt; : 숫자. 그래프로 기록 할 수있는 선택적 글로벌 스텝 카운터.</target>
        </trans-unit>
        <trans-unit id="889ed9dfc7d33bb4fd7a195e45493284b3fda7d1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step&lt;/code&gt;&lt;/b&gt;: Number. Optional global step value to record with the summary.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step&lt;/code&gt; &lt;/b&gt; : 숫자. 요약과 함께 기록 할 선택적 글로벌 단계 값.</target>
        </trans-unit>
        <trans-unit id="2701be1e59a2a4e4ecb76076fa2910bd9c316f98" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step&lt;/code&gt;&lt;/b&gt;: Optional &lt;code&gt;Variable&lt;/code&gt; to increment by one after the variables have been updated.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step&lt;/code&gt; &lt;/b&gt; : 선택적 &lt;code&gt;Variable&lt;/code&gt; 가 업데이트 된 후 1 씩 증가합니다.</target>
        </trans-unit>
        <trans-unit id="5b4bbadc2f82f208d18bc448ec097667e4cebf1f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step&lt;/code&gt;&lt;/b&gt;: Optional Variable to increment by one after the variables have been updated.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step&lt;/code&gt; &lt;/b&gt; : 선택적 변수가 업데이트 된 후 1 씩 증가합니다.</target>
        </trans-unit>
        <trans-unit id="dd41ddad13ce9320cd7de0d0bc18aeb8a5622ca6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step_tensor&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Tensor&lt;/code&gt; or the &lt;code&gt;name&lt;/code&gt; of the operation that contains the global step.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step_tensor&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Tensor&lt;/code&gt; 또는글로벌 단계를 포함하는 조작의 &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b8ec04240a2b3d60f1577f4e63544417a4cac1e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;global_step_tensor&lt;/code&gt;&lt;/b&gt;: &lt;code&gt;Tensor&lt;/code&gt; to test.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;global_step_tensor&lt;/code&gt; &lt;/b&gt; :테스트 할 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30340eb3d7c8c261cc705f6709df1322b2c4556a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gnu_getopt&lt;/code&gt;&lt;/b&gt;: bool, whether or not to use GNU style scanning.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gnu_getopt&lt;/code&gt; &lt;/b&gt; : bool, GNU 스타일 스캐닝 사용 여부.</target>
        </trans-unit>
        <trans-unit id="07e39893773eca41d120a5a22cc4d78101f20ccc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;go_backwards&lt;/code&gt;&lt;/b&gt;: Boolean (default &lt;code&gt;False&lt;/code&gt;). If True, process the input sequence backwards and return the reversed sequence.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;go_backwards&lt;/code&gt; &lt;/b&gt; : 부울 (기본 &lt;code&gt;False&lt;/code&gt; ) True이면 입력 시퀀스를 거꾸로 처리하고 반대로 된 시퀀스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9a21b7df7336800f013f23af1c4d91555cb05c6f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;go_backwards&lt;/code&gt;&lt;/b&gt;: Boolean (default False). If True, process the input sequence backwards and return the reversed sequence.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;go_backwards&lt;/code&gt; &lt;/b&gt; : 부울 (기본 False) True이면 입력 시퀀스를 거꾸로 처리하고 반대로 된 시퀀스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="00361f6691efc613f1e6f293d4713457c659e8d5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;go_backwards&lt;/code&gt;&lt;/b&gt;: Boolean (default False). If True, process the input sequence backwards.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;go_backwards&lt;/code&gt; &lt;/b&gt; : 부울 (기본 False) True이면 입력 시퀀스를 거꾸로 처리하십시오.</target>
        </trans-unit>
        <trans-unit id="01bc68973b21f99af139e5039b446fe1a8820649" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;go_backwards&lt;/code&gt;&lt;/b&gt;: Boolean. If True, do the iteration over the time dimension in reverse order and return the reversed sequence.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;go_backwards&lt;/code&gt; &lt;/b&gt; : 부울. True 인 경우 시간 차원에서 반복을 역순으로 반복하고 역순을 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="ead1319816cc2e228bc9b78775bea182f8474cf8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gpus&lt;/code&gt;&lt;/b&gt;: Integer &amp;gt;= 2, number of on GPUs on which to create model replicas.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gpus&lt;/code&gt; &lt;/b&gt; : 정수&amp;gt; = 2, 모델 복제본을 생성 할 GPU 수.</target>
        </trans-unit>
        <trans-unit id="f61b5fe1abd360d74f503f53d0846e2425097bee" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gpus_per_node&lt;/code&gt;&lt;/b&gt;: Number of GPUs available on each node.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gpus_per_node&lt;/code&gt; &lt;/b&gt; : 각 노드에서 사용 가능한 GPU 수.</target>
        </trans-unit>
        <trans-unit id="5e63fbfe4121647ef332e2ab43642673330b2d86" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gpus_per_task&lt;/code&gt;&lt;/b&gt;: Number of GPUs to be used for each task.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gpus_per_task&lt;/code&gt; &lt;/b&gt; : 각 작업에 사용될 GPU 수.</target>
        </trans-unit>
        <trans-unit id="18aefcf72a3de6e72e7e810fe72420508ca9cd13" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;grace_period&lt;/code&gt;&lt;/b&gt;: Time (in seconds) to wait for process cleanup to propagate.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;grace_period&lt;/code&gt; &lt;/b&gt; : 프로세스 정리가 전파 될 때까지 기다리는 시간 (초)입니다.</target>
        </trans-unit>
        <trans-unit id="f9f312400eb1d3dc5f13c642a36658cb95e89e4a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;grad&lt;/code&gt;&lt;/b&gt;: The gradient &lt;code&gt;IndexedSlices&lt;/code&gt; to be applied.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;grad&lt;/code&gt; &lt;/b&gt; :적용 할그래디언트 &lt;code&gt;IndexedSlices&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4582445079dcec8e7961474fdadd39f23701bfc8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;grad&lt;/code&gt;&lt;/b&gt;: The gradient tensor to be applied.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;grad&lt;/code&gt; &lt;/b&gt; : 적용될 그라디언트 텐서.</target>
        </trans-unit>
        <trans-unit id="cb0bc0b6fabc410af7ac125f582532eefccb3dd4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;grad_indices&lt;/code&gt;&lt;/b&gt;: Indices of the sparse gradient to be applied.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;grad_indices&lt;/code&gt; &lt;/b&gt; : 적용될 희소 그라디언트의 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="67ecb662338a8c31d7f449bc16a1b6f5fecc020a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;grad_loss&lt;/code&gt;&lt;/b&gt;: Optional. A &lt;code&gt;Tensor&lt;/code&gt; holding the gradient computed for &lt;code&gt;loss&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;grad_loss&lt;/code&gt; &lt;/b&gt; : 선택 사항. 그라디언트를 유지하는 &lt;code&gt;Tensor&lt;/code&gt; 는 &lt;code&gt;loss&lt;/code&gt; 계산했습니다.</target>
        </trans-unit>
        <trans-unit id="6fba4cb529befac352abc9b584481c394628126e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;grad_shape&lt;/code&gt;&lt;/b&gt;: Shape of the sparse gradient to be applied.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;grad_shape&lt;/code&gt; &lt;/b&gt; : 적용 할 스파 스 그라디언트의 모양입니다.</target>
        </trans-unit>
        <trans-unit id="61efa4e2d5ffd6efc86b0e8937da5163c0db0680" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;grad_values&lt;/code&gt;&lt;/b&gt;: Values of the sparse gradient to be applied.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;grad_values&lt;/code&gt; &lt;/b&gt; : 적용 할 스파 스 그라디언트의 값입니다.</target>
        </trans-unit>
        <trans-unit id="65976e40dbfe1baf5c77b640180e422ec8fd31cb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;grad_ys&lt;/code&gt;&lt;/b&gt;: Optional. A &lt;code&gt;Tensor&lt;/code&gt; or list of tensors the same size as &lt;code&gt;ys&lt;/code&gt; and holding the gradients computed for each y in &lt;code&gt;ys&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;grad_ys&lt;/code&gt; &lt;/b&gt; : 선택 사항. &lt;code&gt;Tensor&lt;/code&gt; 또는 같은 크기 텐서 목록 &lt;code&gt;ys&lt;/code&gt; 와 각 예에 대해 계산 된 기울기 지주 &lt;code&gt;ys&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e7b827c7a451f4c8dcde0cf1069711f55e506370" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gradients&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Backpropagated gradients above the FakeQuantWithMinMaxArgs operation.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gradients&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;float32&lt;/code&gt; 유형의 &lt;code&gt;Tensor&lt;/code&gt; . FakeQuantWithMinMaxArgs 작업 위의 역 전파 그라디언트.</target>
        </trans-unit>
        <trans-unit id="ee50a7f33edc0edfc1c79d52cf6adaaf14b20e24" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gradients&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Backpropagated gradients above the FakeQuantWithMinMaxVars operation, shape one of: &lt;code&gt;[d]&lt;/code&gt;, &lt;code&gt;[b, d]&lt;/code&gt;, &lt;code&gt;[b, h, w, d]&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gradients&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;float32&lt;/code&gt; 유형의 &lt;code&gt;Tensor&lt;/code&gt; . FakeQuantWithMinMaxVars 연산 위의 역 전파 그라디언트는 &lt;code&gt;[d]&lt;/code&gt; , &lt;code&gt;[b, d]&lt;/code&gt; , &lt;code&gt;[b, h, w, d]&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="b00161514a2aea894e24c1156df985218ce2abab" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;gradients&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Backpropagated gradients above the FakeQuantWithMinMaxVars operation.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;gradients&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;float32&lt;/code&gt; 유형의 &lt;code&gt;Tensor&lt;/code&gt; . FakeQuantWithMinMaxVars 작업 위의 역 전파 그라디언트.</target>
        </trans-unit>
        <trans-unit id="f0a18a4bfc11072f26a2e1a7aaf86c2564af0282" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;grads&lt;/code&gt;&lt;/b&gt;: A list of tensors, each which will be divided by the loss scale. Can have None values, which are ignored.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;grads&lt;/code&gt; &lt;/b&gt; : 텐서 목록으로, 각각 손실 규모로 나뉩니다. None 값을 가질 수 있으며이 값은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="d6755c2f950a0006ebd81112e01107ae3eb071bb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;grads&lt;/code&gt;&lt;/b&gt;: A nested structure of unscaled gradients, each which is the gradient of the loss with respect to a weight. The gradients should have already been divided by the loss scale being before passed to this function. 'None' gradients are accepted, and are ignored.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;grads&lt;/code&gt; &lt;/b&gt; : 비 스케일 그라디언트의 중첩 구조로, 각각 가중치에 대한 손실의 그라디언트입니다. 그래디언트는 이미이 함수로 전달되기 전에 손실 스케일로 나눠져 있어야합니다. '없음'그라디언트가 허용되며 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="0cb91f3ec058b52458846dc3671a897c220758dc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;grads_and_vars&lt;/code&gt;&lt;/b&gt;: List of (gradient, variable) pairs as returned by &lt;code&gt;compute_gradients()&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;grads_and_vars&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;compute_gradients()&lt;/code&gt; 반환 한 (그라데이션, 변수) 쌍의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="eaee7e8dd6578ab40c7a016449b3e6d11b80d037" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;grads_and_vars&lt;/code&gt;&lt;/b&gt;: List of (gradient, variable) pairs as returned by compute_gradients().</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;grads_and_vars&lt;/code&gt; &lt;/b&gt; : compute_gradients ()에 의해 반환되는 (그라데이션, 변수) 쌍의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="017bb767fe85f72d00069ce5a4be6e9915fa8ea7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;grads_and_vars&lt;/code&gt;&lt;/b&gt;: List of (gradient, variable) pairs.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;grads_and_vars&lt;/code&gt; &lt;/b&gt; : (그라데이션, 변수) 쌍의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="c9ef81c8480eaf09cae105791daf1180e38948ca" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph&lt;/code&gt;&lt;/b&gt;: (Optional.) The &lt;code&gt;Graph&lt;/code&gt; to be launched (described above).</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph&lt;/code&gt; &lt;/b&gt; : (선택 사항) &lt;code&gt;Graph&lt;/code&gt; (위에서 설명).</target>
        </trans-unit>
        <trans-unit id="dabaf3dc7d973c85fd841de6286403a468794b43" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph&lt;/code&gt;&lt;/b&gt;: A &lt;a href=&quot;../../../graph&quot;&gt;&lt;code&gt;tf.Graph&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../graphdef&quot;&gt;&lt;code&gt;tf.compat.v1.GraphDef&lt;/code&gt;&lt;/a&gt; to output to the writer. This function will not write the default graph by default. When writing to an event log file, the associated step will be zero.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph&lt;/code&gt; &lt;/b&gt; :&lt;a href=&quot;../../../graph&quot;&gt; &lt;code&gt;tf.Graph&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;../graphdef&quot;&gt; &lt;code&gt;tf.compat.v1.GraphDef&lt;/code&gt; &lt;/a&gt; 는 기록기에 출력합니다. 이 기능은 기본적으로 기본 그래프를 쓰지 않습니다. 이벤트 로그 파일에 쓸 때 연관된 단계는 0입니다.</target>
        </trans-unit>
        <trans-unit id="817550d7f6ec353287d7d92bcff4d5780e526ec3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Graph&lt;/code&gt; object, such as &lt;code&gt;sess.graph&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;sess.graph&lt;/code&gt; 와 같은 &lt;code&gt;Graph&lt;/code&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="ad63fe9bb485aa92b1f8458bb4437ef0068e91b9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph&lt;/code&gt;&lt;/b&gt;: A &lt;code&gt;Graph&lt;/code&gt;. The graph that the model will use. Defaults to the default &lt;code&gt;Graph&lt;/code&gt;. The supervisor may add operations to the graph before creating a session, but the graph should not be modified by the caller after passing it to the supervisor.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph&lt;/code&gt; &lt;/b&gt; : &lt;code&gt;Graph&lt;/code&gt; . 모델이 사용할 그래프입니다. 기본 &lt;code&gt;Graph&lt;/code&gt; 기본 설정됩니다. 수퍼바이저는 세션을 생성하기 전에 그래프에 작업을 추가 할 수 있지만, 수퍼바이저에게 전달한 후 호출자가 그래프를 수정해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="cdc88e0083bd98318449b2ad7703c0bece94cb01" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;graph&lt;/code&gt;&lt;/b&gt;: If True, enables collection of executed graphs. It includes ones from tf.function invocation and ones from the legacy graph mode. The default is True.</source>
          <target state="translated">&lt;b&gt; &lt;code&gt;graph&lt;/code&gt; &lt;/b&gt; : True 인 경우 실행 된 그래프를 수집 할 수 있습니다. tf.function 호출과 레거시 그래프 모드를 포함합니다. 기본값은 True입니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
