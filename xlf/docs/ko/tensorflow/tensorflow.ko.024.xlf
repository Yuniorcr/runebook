<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="tensorflow">
    <body>
      <group id="tensorflow">
        <trans-unit id="04e026f533850d40e3b7ddbc9474b7727251b821" translate="yes" xml:space="preserve">
          <source>A function or class that can be called with a &lt;code&gt;filenames&lt;/code&gt; tensor and (optional) &lt;code&gt;reader_args&lt;/code&gt; and returns a &lt;code&gt;Dataset&lt;/code&gt; of &lt;code&gt;Example&lt;/code&gt; tensors. Defaults to &lt;a href=&quot;../tfrecorddataset&quot;&gt;&lt;code&gt;tf.data.TFRecordDataset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;filenames&lt;/code&gt; tensor 및 (선택 사항) &lt;code&gt;reader_args&lt;/code&gt; 를 사용하여 호출 할 수있는 함수 또는 클래스 이며 &lt;code&gt;Example&lt;/code&gt; 텐서 의 &lt;code&gt;Dataset&lt;/code&gt; 를 반환합니다 . 기본값은 &lt;a href=&quot;../tfrecorddataset&quot;&gt; &lt;code&gt;tf.data.TFRecordDataset&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="755d5d100625145de46473207f8b963d42be1562" translate="yes" xml:space="preserve">
          <source>A function pointer that can be used to write intermediate steps of graph transformation (optional).</source>
          <target state="translated">그래프 변환의 중간 단계를 작성하는 데 사용할 수있는 함수 포인터 (선택 사항).</target>
        </trans-unit>
        <trans-unit id="f1e037f2bb958c78e2dab2338a71a0f6d7699357" translate="yes" xml:space="preserve">
          <source>A function taking a &lt;a href=&quot;../../../../distribute/inputcontext&quot;&gt;&lt;code&gt;tf.distribute.InputContext&lt;/code&gt;&lt;/a&gt; instance and returning a &lt;a href=&quot;../../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../../distribute/inputcontext&quot;&gt; &lt;code&gt;tf.distribute.InputContext&lt;/code&gt; &lt;/a&gt; 인스턴스를 취하고 tf.data.Dataset 를 반환하는 &lt;a href=&quot;../../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b160c5a513aeacf7bb5e052f4cb72f878a4e185f" translate="yes" xml:space="preserve">
          <source>A function taking a &lt;a href=&quot;../../../../distribute/inputcontext&quot;&gt;&lt;code&gt;tf.distribute.InputContext&lt;/code&gt;&lt;/a&gt; object and returning a &lt;a href=&quot;../../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../../distribute/inputcontext&quot;&gt; &lt;code&gt;tf.distribute.InputContext&lt;/code&gt; &lt;/a&gt; 객체를 취하고 tf.data.Dataset 를 반환하는 &lt;a href=&quot;../../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ce493227fb56da256f8cc0eb9c27aac2b46edd17" translate="yes" xml:space="preserve">
          <source>A function taking a &lt;a href=&quot;../../../distribute/inputcontext&quot;&gt;&lt;code&gt;tf.distribute.InputContext&lt;/code&gt;&lt;/a&gt; instance and returning a &lt;a href=&quot;../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../distribute/inputcontext&quot;&gt; &lt;code&gt;tf.distribute.InputContext&lt;/code&gt; &lt;/a&gt; 인스턴스를 취하고 tf.data.Dataset 를 반환하는 &lt;a href=&quot;../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5b8ef87f9c196df5413d41ef65d7e610c9164096" translate="yes" xml:space="preserve">
          <source>A function taking a &lt;a href=&quot;../../../distribute/inputcontext&quot;&gt;&lt;code&gt;tf.distribute.InputContext&lt;/code&gt;&lt;/a&gt; object and returning a &lt;a href=&quot;../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../distribute/inputcontext&quot;&gt; &lt;code&gt;tf.distribute.InputContext&lt;/code&gt; &lt;/a&gt; 객체를 취하고 tf.data.Dataset 를 반환하는 &lt;a href=&quot;../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d1b224035f0c4a393f9273e8ab8ce0af6dd38c07" translate="yes" xml:space="preserve">
          <source>A function taking a &lt;a href=&quot;../inputcontext&quot;&gt;&lt;code&gt;tf.distribute.InputContext&lt;/code&gt;&lt;/a&gt; instance and returning a &lt;a href=&quot;../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../inputcontext&quot;&gt; &lt;code&gt;tf.distribute.InputContext&lt;/code&gt; &lt;/a&gt; 인스턴스를 취하고 tf.data.Dataset 를 반환하는 &lt;a href=&quot;../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="48a43faba9794e7462ef98e3fcc5ca93fda91bff" translate="yes" xml:space="preserve">
          <source>A function taking a &lt;a href=&quot;inputcontext&quot;&gt;&lt;code&gt;tf.distribute.InputContext&lt;/code&gt;&lt;/a&gt; instance and returning a &lt;a href=&quot;../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;inputcontext&quot;&gt; &lt;code&gt;tf.distribute.InputContext&lt;/code&gt; &lt;/a&gt; 인스턴스를 취하고 tf.data.Dataset 를 반환하는 &lt;a href=&quot;../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="916ad377cefbd361dab1ced381494b05d4db9a14" translate="yes" xml:space="preserve">
          <source>A function taking the &lt;code&gt;Tensor&lt;/code&gt; containing the (dynamic) shape of the input tensor and returning a pair (scale, bias) to apply to the normalized values (before gamma and beta), only during training. For example, if axis==-1, &lt;code&gt;adjustment = lambda shape: ( tf.random.uniform(shape[-1:], 0.93, 1.07), tf.random.uniform(shape[-1:], -0.1, 0.1))&lt;/code&gt; will scale the normalized value by up to 7% up or down, then shift the result by up to 0.1 (with independent scaling and bias for each feature but shared across all examples), and finally apply gamma and/or beta. If &lt;code&gt;None&lt;/code&gt;, no adjustment is applied. Cannot be specified if virtual_batch_size is specified.</source>
          <target state="translated">입력 텐서의 (동적) 모양을 포함 하는 &lt;code&gt;Tensor&lt;/code&gt; 를 취하고 훈련 중에 만 정규화 된 값 (감마 및 베타 이전)에 적용 할 쌍 (스케일, 편향)을 반환하는 함수입니다. 예를 들어 axis ==-1이면 &lt;code&gt;adjustment = lambda shape: ( tf.random.uniform(shape[-1:], 0.93, 1.07), tf.random.uniform(shape[-1:], -0.1, 0.1))&lt;/code&gt; 은 정규화 된 값을 최대 7 %까지 위 또는 아래로 조정 한 다음 결과를 최대 0.1까지 이동하고 (각 기능에 대해 독립적 인 조정 및 편향을 사용하지만 모든 예에서 공유 됨) 마지막으로 감마 및 / 또는 베타를 적용합니다. 경우 &lt;code&gt;None&lt;/code&gt; , 더 조정이 적용되지 않습니다. virtual_batch_size가 지정된 경우 지정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="1d2b7add5941933d72ffd45e2ac9c4a80d2cbe95" translate="yes" xml:space="preserve">
          <source>A function that can return a new numpy array pointing to the internal TFLite tensor state at any point. It is safe to hold the function forever, but it is not safe to hold the numpy array forever.</source>
          <target state="translated">언제라도 내부 TFLite 텐서 상태를 가리키는 새로운 numpy 배열을 반환 할 수있는 함수입니다. 함수를 영원히 유지하는 것이 안전하지만 numpy 배열을 영원히 유지하는 것은 안전하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b3034cda3dd125dadd5dc689162c0c47d2df0060" translate="yes" xml:space="preserve">
          <source>A function that constructs the features. Prediction continues until &lt;code&gt;input_fn&lt;/code&gt; raises an end-of-input exception (&lt;a href=&quot;../../../../errors/outofrangeerror&quot;&gt;&lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;StopIteration&lt;/code&gt;). See &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;Premade Estimators&lt;/a&gt; for more information. The function should construct and return one of the following:</source>
          <target state="translated">기능을 구성하는 함수입니다. &lt;code&gt;input_fn&lt;/code&gt; 이 입력 종료 예외 ( &lt;a href=&quot;../../../../errors/outofrangeerror&quot;&gt; &lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;StopIteration&lt;/code&gt; )를 발생 시킬 때까지 예측이 계속 됩니다. 자세한 내용은 &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;사전 제작 된 에스티 메이터&lt;/a&gt; 를 참조하십시오. 함수는 다음 중 하나를 생성하고 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="b407df0f11ad3ed2514bbcb6fc7096486efaaf8c" translate="yes" xml:space="preserve">
          <source>A function that constructs the features. Prediction continues until &lt;code&gt;input_fn&lt;/code&gt; raises an end-of-input exception (&lt;a href=&quot;../../../errors/outofrangeerror&quot;&gt;&lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;StopIteration&lt;/code&gt;). See &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;Premade Estimators&lt;/a&gt; for more information. The function should construct and return one of the following:</source>
          <target state="translated">기능을 구성하는 함수입니다. &lt;code&gt;input_fn&lt;/code&gt; 이 입력 종료 예외 ( &lt;a href=&quot;../../../errors/outofrangeerror&quot;&gt; &lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;StopIteration&lt;/code&gt; )를 발생 시킬 때까지 예측이 계속 됩니다. 자세한 내용은 &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;사전 제작 된 에스티 메이터&lt;/a&gt; 를 참조하십시오. 함수는 다음 중 하나를 생성하고 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="ada31dd3442a2171c18ae005e4e19b7f4e9106d0" translate="yes" xml:space="preserve">
          <source>A function that constructs the features. Prediction continues until &lt;code&gt;input_fn&lt;/code&gt; raises an end-of-input exception (&lt;a href=&quot;../../errors/outofrangeerror&quot;&gt;&lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;StopIteration&lt;/code&gt;). See &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;Premade Estimators&lt;/a&gt; for more information. The function should construct and return one of the following:</source>
          <target state="translated">기능을 구성하는 함수입니다. &lt;code&gt;input_fn&lt;/code&gt; 이 입력 종료 예외 ( &lt;a href=&quot;../../errors/outofrangeerror&quot;&gt; &lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;StopIteration&lt;/code&gt; )를 발생 시킬 때까지 예측이 계속 됩니다. 자세한 내용은 &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;사전 제작 된 에스티 메이터&lt;/a&gt; 를 참조하십시오. 함수는 다음 중 하나를 생성하고 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="8f8fc67d621ec986cdd006d4b86fd06fe1eba76f" translate="yes" xml:space="preserve">
          <source>A function that constructs the features. Prediction continues until &lt;code&gt;input_fn&lt;/code&gt; raises an end-of-input exception (&lt;a href=&quot;../errors/outofrangeerror&quot;&gt;&lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;StopIteration&lt;/code&gt;). See &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;Premade Estimators&lt;/a&gt; for more information. The function should construct and return one of the following:</source>
          <target state="translated">기능을 구성하는 함수입니다. &lt;code&gt;input_fn&lt;/code&gt; 이 입력 종료 예외 ( &lt;a href=&quot;../errors/outofrangeerror&quot;&gt; &lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;StopIteration&lt;/code&gt; )를 발생 시킬 때까지 예측이 계속 됩니다. 자세한 내용은 &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;사전 제작 된 에스티 메이터&lt;/a&gt; 를 참조하십시오. 함수는 다음 중 하나를 생성하고 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="aa34d1751ddb6c4b73c3da28819cd6a20b06d9cf" translate="yes" xml:space="preserve">
          <source>A function that constructs the input data for evaluation. See &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;Premade Estimators&lt;/a&gt; for more information. The function should construct and return one of the following:</source>
          <target state="translated">평가를 위해 입력 데이터를 구성하는 함수입니다. 자세한 내용은 &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;사전 제작 된 에스티 메이터&lt;/a&gt; 를 참조하십시오. 함수는 다음 중 하나를 생성하고 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="2fd9ec80dff5cf42950644d8194a99ab17335388" translate="yes" xml:space="preserve">
          <source>A function that converts instances of &lt;code&gt;base_type&lt;/code&gt; to &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;base_type&lt;/code&gt; 의 인스턴스 를 &lt;code&gt;Tensor&lt;/code&gt; 로 변환하는 함수입니다 .</target>
        </trans-unit>
        <trans-unit id="a91900f8a63cdae8aeb5cf96fa5c75c8d8638876" translate="yes" xml:space="preserve">
          <source>A function that maps &lt;code&gt;(old_state, input_element)&lt;/code&gt; to &lt;code&gt;(new_state, output_element)&lt;/code&gt;. It must take two arguments and return a pair of nested structures of tensors. The &lt;code&gt;new_state&lt;/code&gt; must match the structure of &lt;code&gt;initial_state&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(old_state, input_element)&lt;/code&gt; 를 &lt;code&gt;(new_state, output_element)&lt;/code&gt; 매핑하는 함수입니다 . 두 개의 인수를 취하고 텐서의 중첩 구조 쌍을 반환해야합니다. &lt;code&gt;new_state&lt;/code&gt; 의 구조와 일치해야합니다 &lt;code&gt;initial_state&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="de41f2aeb1523eef2fc6468bcbb9a32ea5f51aef" translate="yes" xml:space="preserve">
          <source>A function that maps &lt;code&gt;(old_state, input_element)&lt;/code&gt; to &lt;code&gt;new_state&lt;/code&gt;. It must take two arguments and return a new element The structure of &lt;code&gt;new_state&lt;/code&gt; must match the structure of &lt;code&gt;initial_state&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(old_state, input_element)&lt;/code&gt; 를 &lt;code&gt;new_state&lt;/code&gt; 에 매핑하는 함수입니다 . 두 개의 인수를 취하고 새로운 요소를 반환 해야합니다. &lt;code&gt;new_state&lt;/code&gt; 의 구조는 &lt;code&gt;initial_state&lt;/code&gt; 의 구조와 일치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="bea6afe9afccf3c2ffae48bdf115c17a17328635" translate="yes" xml:space="preserve">
          <source>A function that maps a nested structure of tensors (having shapes and types defined by &lt;code&gt;self.output_shapes&lt;/code&gt; and &lt;code&gt;self.output_types&lt;/code&gt;) to a scalar &lt;a href=&quot;../../../tf#bool&quot;&gt;&lt;code&gt;tf.bool&lt;/code&gt;&lt;/a&gt; tensor.</source>
          <target state="translated">텐서의 중첩 구조 ( &lt;code&gt;self.output_shapes&lt;/code&gt; 및 &lt;code&gt;self.output_types&lt;/code&gt; 로 정의 된 모양과 유형을 가짐 )를 스칼라 &lt;a href=&quot;../../../tf#bool&quot;&gt; &lt;code&gt;tf.bool&lt;/code&gt; &lt;/a&gt; 텐서에 매핑하는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="fddae30fc1a7e1ed0b6016166984205fd6cb57be" translate="yes" xml:space="preserve">
          <source>A function that provides input data for predicting as minibatches. See &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;Premade Estimators&lt;/a&gt; for more information. The function should construct and return one of the following:</source>
          <target state="translated">미니 배치로 예측하기위한 입력 데이터를 제공하는 함수입니다. 자세한 내용은 &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;사전 제작 된 에스티 메이터&lt;/a&gt; 를 참조하십시오. 함수는 다음 중 하나를 생성하고 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="0a07e4ae344da81f5a1f9d5888871a3dad85e7d7" translate="yes" xml:space="preserve">
          <source>A function that provides input data for training as minibatches. See &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;Premade Estimators&lt;/a&gt; for more information. The function should construct and return one of the following:</source>
          <target state="translated">훈련을위한 입력 데이터를 미니 배치로 제공하는 함수입니다. 자세한 내용은 &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;사전 제작 된 에스티 메이터&lt;/a&gt; 를 참조하십시오. 함수는 다음 중 하나를 생성하고 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="6bf8fd23c41c9e6a8271f8b6b2db84494524497b" translate="yes" xml:space="preserve">
          <source>A function that returns a CheckPointReader.</source>
          <target state="translated">CheckPointReader를 반환하는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="2f1734ef9614bde8b93c40908444d8f31ec16ea1" translate="yes" xml:space="preserve">
          <source>A function that returns a RNN cell instance that will be used to construct the RNN. If set, &lt;code&gt;units&lt;/code&gt; and &lt;code&gt;cell_type&lt;/code&gt; cannot be set. This is for advanced users who need additional customization beyond &lt;code&gt;units&lt;/code&gt; and &lt;code&gt;cell_type&lt;/code&gt;. Note that &lt;a href=&quot;../../keras/layers/stackedrnncells&quot;&gt;&lt;code&gt;tf.keras.layers.StackedRNNCells&lt;/code&gt;&lt;/a&gt; is needed for stacked RNNs.</source>
          <target state="translated">RNN을 구성하는 데 사용될 RNN 셀 인스턴스를 반환하는 함수입니다. 설정하면 &lt;code&gt;units&lt;/code&gt; 및 &lt;code&gt;cell_type&lt;/code&gt; 을 설정할 수 없습니다. &lt;code&gt;units&lt;/code&gt; 및 &lt;code&gt;cell_type&lt;/code&gt; 이외의 추가 사용자 정의가 필요한 고급 사용자를위한 것 입니다. 스택 RNN 에는 &lt;a href=&quot;../../keras/layers/stackedrnncells&quot;&gt; &lt;code&gt;tf.keras.layers.StackedRNNCells&lt;/code&gt; &lt;/a&gt; 가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="42f7d6ba97819b85df50f6f1b607f36944cbf9de" translate="yes" xml:space="preserve">
          <source>A function that takes global step and returns learning rate for the embedding table. If you intend to use the same learning rate for multiple embedding tables, please ensure that you pass the exact same python function to all calls of embedding_column, otherwise performence may suffer.</source>
          <target state="translated">전역 단계를 수행하고 임베딩 테이블의 학습률을 반환하는 함수입니다. 여러 임베딩 테이블에 동일한 학습률을 사용하려는 경우 embedding_column의 모든 호출에 정확히 동일한 Python 함수를 전달해야합니다. 그렇지 않으면 성능이 저하 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7cf02386258fc7aeb71483d451625e0583b9eebc" translate="yes" xml:space="preserve">
          <source>A function that takes global step and returns learning rate for the embedding table. If you intend to use the same learning rate for multiple embedding tables, please ensure that you pass the exact same python function to all calls of shared_embedding_columns, otherwise performence may suffer.</source>
          <target state="translated">전역 단계를 수행하고 임베딩 테이블의 학습률을 반환하는 함수입니다. 여러 임베딩 테이블에 동일한 학습률을 사용하려는 경우 shared_embedding_columns의 모든 호출에 정확히 동일한 Python 함수를 전달해야합니다. 그렇지 않으면 성능이 저하 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5ef92e4fd3c4ca987c2c7247527fc14a4bc8137" translate="yes" xml:space="preserve">
          <source>A function that takes no argument and returns a &lt;a href=&quot;../../../../estimator/export/servinginputreceiver&quot;&gt;&lt;code&gt;tf.estimator.export.ServingInputReceiver&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../estimator/export/tensorservinginputreceiver&quot;&gt;&lt;code&gt;tf.estimator.export.TensorServingInputReceiver&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인수를 취하지 않고 &lt;a href=&quot;../../../../estimator/export/servinginputreceiver&quot;&gt; &lt;code&gt;tf.estimator.export.ServingInputReceiver&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../../../estimator/export/tensorservinginputreceiver&quot;&gt; &lt;code&gt;tf.estimator.export.TensorServingInputReceiver&lt;/code&gt; 를&lt;/a&gt; 반환하는 함수입니다 .</target>
        </trans-unit>
        <trans-unit id="115923c70cd3a84bab1a858ac08a8922db123742" translate="yes" xml:space="preserve">
          <source>A function that takes no argument and returns a &lt;a href=&quot;../../../estimator/export/servinginputreceiver&quot;&gt;&lt;code&gt;tf.estimator.export.ServingInputReceiver&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../estimator/export/tensorservinginputreceiver&quot;&gt;&lt;code&gt;tf.estimator.export.TensorServingInputReceiver&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인수를 취하지 않고 &lt;a href=&quot;../../../estimator/export/servinginputreceiver&quot;&gt; &lt;code&gt;tf.estimator.export.ServingInputReceiver&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../../estimator/export/tensorservinginputreceiver&quot;&gt; &lt;code&gt;tf.estimator.export.TensorServingInputReceiver&lt;/code&gt; 를&lt;/a&gt; 반환하는 함수입니다 .</target>
        </trans-unit>
        <trans-unit id="8b2fd52e0428222c7dfac90a0c210a6d077ea8f1" translate="yes" xml:space="preserve">
          <source>A function that takes no argument and returns a &lt;a href=&quot;../export/servinginputreceiver&quot;&gt;&lt;code&gt;tf.estimator.export.ServingInputReceiver&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../export/tensorservinginputreceiver&quot;&gt;&lt;code&gt;tf.estimator.export.TensorServingInputReceiver&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인수를 취하지 않고 &lt;a href=&quot;../export/servinginputreceiver&quot;&gt; &lt;code&gt;tf.estimator.export.ServingInputReceiver&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../export/tensorservinginputreceiver&quot;&gt; &lt;code&gt;tf.estimator.export.TensorServingInputReceiver&lt;/code&gt; 를&lt;/a&gt; 반환하는 함수입니다 .</target>
        </trans-unit>
        <trans-unit id="7f657f23953527eee0ea37f6c4af104be9ef35ac" translate="yes" xml:space="preserve">
          <source>A function that takes no argument and returns a &lt;a href=&quot;export/servinginputreceiver&quot;&gt;&lt;code&gt;tf.estimator.export.ServingInputReceiver&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;export/tensorservinginputreceiver&quot;&gt;&lt;code&gt;tf.estimator.export.TensorServingInputReceiver&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인수를 취하지 않고 &lt;a href=&quot;export/servinginputreceiver&quot;&gt; &lt;code&gt;tf.estimator.export.ServingInputReceiver&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;export/tensorservinginputreceiver&quot;&gt; &lt;code&gt;tf.estimator.export.TensorServingInputReceiver&lt;/code&gt; 를&lt;/a&gt; 반환하는 함수입니다 .</target>
        </trans-unit>
        <trans-unit id="087924e9763f17e41196813d6a4f7bfd802ea316" translate="yes" xml:space="preserve">
          <source>A function that takes one &lt;code&gt;Dataset&lt;/code&gt; argument and returns a &lt;code&gt;Dataset&lt;/code&gt;.</source>
          <target state="translated">하나 개 걸리는 함수 &lt;code&gt;Dataset&lt;/code&gt; 인수와 반환 &lt;code&gt;Dataset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d332db7506a2324bfc834360c2c82a93ca603ae2" translate="yes" xml:space="preserve">
          <source>A function that when called will execute the step defined by &lt;code&gt;feed_list&lt;/code&gt; and &lt;code&gt;fetches&lt;/code&gt; in this session.</source>
          <target state="translated">으로 정의하는 단계 실행할 때 호출되는 함수 &lt;code&gt;feed_list&lt;/code&gt; 및 &lt;code&gt;fetches&lt;/code&gt; 이 세션에있다.</target>
        </trans-unit>
        <trans-unit id="37a8b0e8802f2c2dcbaa2b864cb6a155dd4b779a" translate="yes" xml:space="preserve">
          <source>A function to encapsulate a set of variables which should be created once and reused. An enclosing scope will be created either when &lt;code&gt;make_template&lt;/code&gt; is called or when the result is called, depending on the value of &lt;code&gt;create_scope_now_&lt;/code&gt;. Regardless of the value, the first time the template is called it will enter the scope with no reuse, and call &lt;code&gt;func_&lt;/code&gt; to create variables, which are guaranteed to be unique. All subsequent calls will re-enter the scope and reuse those variables.</source>
          <target state="translated">한 번 작성하여 재사용해야하는 변수 세트를 캡슐화하는 함수입니다. &lt;code&gt;create_scope_now_&lt;/code&gt; 값에 따라 &lt;code&gt;make_template&lt;/code&gt; 이 호출되거나 결과가 호출 될 때 엔 클로징 범위가 작성됩니다 . 값에 관계없이 템플릿을 처음 호출하면 재사용없이 스코프에 들어가고 &lt;code&gt;func_&lt;/code&gt; 를 호출 하여 고유 한 변수를 만듭니다. 이후의 모든 호출은 범위를 다시 입력하고 해당 변수를 재사용합니다.</target>
        </trans-unit>
        <trans-unit id="86f87b373f624b095ec7460f222934c44889994d" translate="yes" xml:space="preserve">
          <source>A function to pass to &lt;a href=&quot;../../../device&quot;&gt;&lt;code&gt;tf.device()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../device&quot;&gt; &lt;code&gt;tf.device()&lt;/code&gt; &lt;/a&gt; 에 전달할 함수 입니다.</target>
        </trans-unit>
        <trans-unit id="e507487fb143c20b8985140a1ee48f148bf713b4" translate="yes" xml:space="preserve">
          <source>A function which should obey the following signature:</source>
          <target state="translated">다음 서명을 준수해야하는 기능 :</target>
        </trans-unit>
        <trans-unit id="0b13feffa676a45ce4e5880ed8185e43212a45c9" translate="yes" xml:space="preserve">
          <source>A general property of Fourier transforms is the correspondence between Hermitian functions and real valued transforms.</source>
          <target state="translated">푸리에 변환의 일반적인 속성은 Hermitian 함수와 실제 값 변환 간의 일치 성입니다.</target>
        </trans-unit>
        <trans-unit id="40dbcd1c92c0d5a2e6a08892f23f6b16b5b4af6f" translate="yes" xml:space="preserve">
          <source>A general quantization scheme is being developed in &lt;code&gt;tf.contrib.quantize&lt;/code&gt;. (deprecated)</source>
          <target state="translated">일반적인 양자화 방식은 &lt;code&gt;tf.contrib.quantize&lt;/code&gt; 에서 개발되고 있습니다 . (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="6dae6fdab89389bf00896683581777bdcd551086" translate="yes" xml:space="preserve">
          <source>A generator or &lt;a href=&quot;../utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; instance. A more detailed description of unpacking behavior for iterator types (Dataset, generator, Sequence) is given in the &lt;code&gt;Unpacking behavior for iterator-like inputs&lt;/code&gt; section of &lt;code&gt;Model.fit&lt;/code&gt;.</source>
          <target state="translated">생성기 또는 &lt;a href=&quot;../utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt; 인스턴스 반복자 유형 (데이터 세트, 생성기, 시퀀스)의 압축 풀기 동작에 대한 자세한 설명 은 &lt;code&gt;Model.fit&lt;/code&gt; 의 &lt;code&gt;Unpacking behavior for iterator-like inputs&lt;/code&gt; 대한 압축 풀기 동작 섹션에 있습니다 .</target>
        </trans-unit>
        <trans-unit id="768d5d0510973ce7852ef461d605d0b6a0341f9d" translate="yes" xml:space="preserve">
          <source>A generator or &lt;a href=&quot;../utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; returning &lt;code&gt;(inputs, targets)&lt;/code&gt; or &lt;code&gt;(inputs, targets, sample weights)&lt;/code&gt;. A more detailed description of unpacking behavior for iterator types (Dataset, generator, Sequence) is given below.</source>
          <target state="translated">생성기 또는 &lt;a href=&quot;../utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; 가&lt;/a&gt; &lt;code&gt;(inputs, targets)&lt;/code&gt; 또는 &lt;code&gt;(inputs, targets, sample weights)&lt;/code&gt; 반환 합니다. 반복자 유형 (데이터 세트, 생성기, 시퀀스)에 대한 언 패킹 동작에 대한 자세한 설명이 아래에 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="a574a8233d70359b8089016d59bacc02f827efb0" translate="yes" xml:space="preserve">
          <source>A generator or &lt;a href=&quot;../utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; returning &lt;code&gt;(inputs, targets)&lt;/code&gt; or &lt;code&gt;(inputs, targets, sample_weights)&lt;/code&gt;. A more detailed description of unpacking behavior for iterator types (Dataset, generator, Sequence) is given below.</source>
          <target state="translated">&lt;code&gt;(inputs, targets)&lt;/code&gt; 또는 &lt;code&gt;(inputs, targets, sample_weights)&lt;/code&gt; 반환 하는 생성기 또는 &lt;a href=&quot;../utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt; . 반복기 유형 (데이터 세트, 생성기, 시퀀스)에 대한 압축 해제 동작에 대한 자세한 설명은 아래에 나와 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd3ce1f23dd08cbec3539aab43830fb1c765dcb6" translate="yes" xml:space="preserve">
          <source>A generator or &lt;a href=&quot;../utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; returning &lt;code&gt;(inputs, targets)&lt;/code&gt; or &lt;code&gt;(inputs, targets, sample_weights)&lt;/code&gt;. A more detailed description of unpacking behavior for iterator types (Dataset, generator, Sequence) is given in the &lt;code&gt;Unpacking behavior for iterator-like inputs&lt;/code&gt; section of &lt;code&gt;Model.fit&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(inputs, targets)&lt;/code&gt; 또는 &lt;code&gt;(inputs, targets, sample_weights)&lt;/code&gt; 반환 하는 생성기 또는 &lt;a href=&quot;../utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt; . 반복자 유형 (데이터 집합, 발전기, 서열)에 대한 문제를 풀기의보다 상세한 설명이 주어진다 &lt;code&gt;Unpacking behavior for iterator-like inputs&lt;/code&gt; 섹션 &lt;code&gt;Model.fit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a6cd5a4abb16efce3a6ffc5f457799bb4bec776" translate="yes" xml:space="preserve">
          <source>A generator or &lt;a href=&quot;utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; instance. A more detailed description of unpacking behavior for iterator types (Dataset, generator, Sequence) is given in the &lt;code&gt;Unpacking behavior for iterator-like inputs&lt;/code&gt; section of &lt;code&gt;Model.fit&lt;/code&gt;.</source>
          <target state="translated">생성기 또는 &lt;a href=&quot;utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt; 인스턴스 반복자 유형 (데이터 세트, 생성기, 시퀀스)의 압축 풀기 동작에 대한 자세한 설명 은 &lt;code&gt;Model.fit&lt;/code&gt; 의 &lt;code&gt;Unpacking behavior for iterator-like inputs&lt;/code&gt; 대한 압축 풀기 동작 섹션에 있습니다 .</target>
        </trans-unit>
        <trans-unit id="117e55bd470c619b4b8109e69b70189a26ab211b" translate="yes" xml:space="preserve">
          <source>A generator or &lt;a href=&quot;utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; returning &lt;code&gt;(inputs, targets)&lt;/code&gt; or &lt;code&gt;(inputs, targets, sample weights)&lt;/code&gt;. A more detailed description of unpacking behavior for iterator types (Dataset, generator, Sequence) is given below.</source>
          <target state="translated">생성기 또는 &lt;a href=&quot;utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; 가&lt;/a&gt; &lt;code&gt;(inputs, targets)&lt;/code&gt; 또는 &lt;code&gt;(inputs, targets, sample weights)&lt;/code&gt; 반환 합니다. 반복자 유형 (데이터 세트, 생성기, 시퀀스)에 대한 언 패킹 동작에 대한 자세한 설명이 아래에 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="937d7c63e40c85c4b83ab093121870b1904a33b7" translate="yes" xml:space="preserve">
          <source>A generator or &lt;a href=&quot;utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; returning &lt;code&gt;(inputs, targets)&lt;/code&gt; or &lt;code&gt;(inputs, targets, sample_weights)&lt;/code&gt;. A more detailed description of unpacking behavior for iterator types (Dataset, generator, Sequence) is given below.</source>
          <target state="translated">&lt;code&gt;(inputs, targets)&lt;/code&gt; 또는 &lt;code&gt;(inputs, targets, sample_weights)&lt;/code&gt; 반환 하는 생성기 또는 &lt;a href=&quot;utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt; . 반복기 유형 (데이터 세트, 생성기, 시퀀스)에 대한 압축 해제 동작에 대한 자세한 설명은 아래에 나와 있습니다.</target>
        </trans-unit>
        <trans-unit id="57ecb0068165b9bb68697b26446af44be9d63715" translate="yes" xml:space="preserve">
          <source>A generator or &lt;a href=&quot;utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; returning &lt;code&gt;(inputs, targets)&lt;/code&gt; or &lt;code&gt;(inputs, targets, sample_weights)&lt;/code&gt;. A more detailed description of unpacking behavior for iterator types (Dataset, generator, Sequence) is given in the &lt;code&gt;Unpacking behavior for iterator-like inputs&lt;/code&gt; section of &lt;code&gt;Model.fit&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(inputs, targets)&lt;/code&gt; 또는 &lt;code&gt;(inputs, targets, sample_weights)&lt;/code&gt; 반환 하는 생성기 또는 &lt;a href=&quot;utils/sequence&quot;&gt; &lt;code&gt;keras.utils.Sequence&lt;/code&gt; &lt;/a&gt; . 반복자 유형 (데이터 집합, 발전기, 서열)에 대한 문제를 풀기의보다 상세한 설명이 주어진다 &lt;code&gt;Unpacking behavior for iterator-like inputs&lt;/code&gt; 섹션 &lt;code&gt;Model.fit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="74d8e7584c8502e555bb1aa2c69e02e0c43bab17" translate="yes" xml:space="preserve">
          <source>A generic error that is raised when TensorFlow execution fails.</source>
          <target state="translated">TensorFlow 실행이 실패 할 때 발생하는 일반 오류입니다.</target>
        </trans-unit>
        <trans-unit id="b318a9b0aebf3b8c24c401c926ff44ff48149e7b" translate="yes" xml:space="preserve">
          <source>A generic hash table that is immutable once initialized.</source>
          <target state="translated">초기화되면 변경할 수없는 일반 해시 테이블입니다.</target>
        </trans-unit>
        <trans-unit id="9e404a1952ab026d231d015b84b2bb40ee1d4d57" translate="yes" xml:space="preserve">
          <source>A generic mutable hash table implementation using tensors as backing store.</source>
          <target state="translated">백업 저장소로 텐서를 사용하는 일반 변경 가능한 해시 테이블 구현입니다.</target>
        </trans-unit>
        <trans-unit id="1ab0a1ee2759a21396b9049276a8e91cdecef9b3" translate="yes" xml:space="preserve">
          <source>A generic prediction need not be either a classification or a regression.</source>
          <target state="translated">일반적인 예측은 분류 또는 회귀 일 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="774634c6ba0a038c147c22b5db9c920286ce0ba7" translate="yes" xml:space="preserve">
          <source>A generic probability distribution base class.</source>
          <target state="translated">일반적인 확률 분포 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="daec8919073c9700c9e0ae03be2bfb6e44661f18" translate="yes" xml:space="preserve">
          <source>A gradients tensor.</source>
          <target state="translated">그라디언트 텐서.</target>
        </trans-unit>
        <trans-unit id="629bf9ca057669baa75d209ce92ac7d0b5ceab6a" translate="yes" xml:space="preserve">
          <source>A graph def that we should convert.</source>
          <target state="translated">변환해야하는 그래프 정의.</target>
        </trans-unit>
        <trans-unit id="0e202103f3c508fc6072b86db222cb45b4f8140b" translate="yes" xml:space="preserve">
          <source>A graph maintains a stack of name scopes. A &lt;code&gt;with name_scope(...):&lt;/code&gt; statement pushes a new name onto the stack for the lifetime of the context.</source>
          <target state="translated">그래프는 이름 범위의 스택을 유지합니다. A는 &lt;code&gt;with name_scope(...):&lt;/code&gt; 문은 문맥의 수명에 대한 스택에 새 이름을 푸시합니다.</target>
        </trans-unit>
        <trans-unit id="897236caf2e623d75f9ab15e09ab3056694119ad" translate="yes" xml:space="preserve">
          <source>A graph_pb2.GraphDef proto containing nodes for all of the Operations in the underlying TensorFlow graph.</source>
          <target state="translated">기본 TensorFlow 그래프의 모든 작업에 대한 노드를 포함하는 graph_pb2.GraphDef 프로토.</target>
        </trans-unit>
        <trans-unit id="3aec0624cc4d5783d1211d6f76f359ca1b22403f" translate="yes" xml:space="preserve">
          <source>A graph_pb2.GraphDef proto.</source>
          <target state="translated">graph_pb2.GraphDef 프로토.</target>
        </trans-unit>
        <trans-unit id="77ef5d5fc53d8bf838c4a7b5d59d36764edf6dbb" translate="yes" xml:space="preserve">
          <source>A guide to convolution arithmetic for deep learning</source>
          <target state="translated">딥 러닝을위한 컨볼 루션 산술 가이드</target>
        </trans-unit>
        <trans-unit id="034c80a2c60903190d19f01df3f2397795f7955b" translate="yes" xml:space="preserve">
          <source>A handle for a sequence of partial runs.</source>
          <target state="translated">일련의 부분 실행에 대한 핸들입니다.</target>
        </trans-unit>
        <trans-unit id="a6a1378b5db6ffcd37f150dce3e6c8a6a0ded67a" translate="yes" xml:space="preserve">
          <source>A handle for partial run.</source>
          <target state="translated">부분 실행을위한 핸들.</target>
        </trans-unit>
        <trans-unit id="a6eecd6a6dd5701259d326ee2b458459b11047b5" translate="yes" xml:space="preserve">
          <source>A handle to the conditional accumulator, created by sub- classes</source>
          <target state="translated">하위 클래스에 의해 생성 된 조건부 누산기에 대한 핸들</target>
        </trans-unit>
        <trans-unit id="cf7217884768b0ed34871e690cefcc257ef49e0e" translate="yes" xml:space="preserve">
          <source>A hook which evaluates &lt;code&gt;Tensors&lt;/code&gt; at the end of a session.</source>
          <target state="translated">세션이 끝날 때 &lt;code&gt;Tensors&lt;/code&gt; 를 평가하는 후크 .</target>
        </trans-unit>
        <trans-unit id="a99e7eb8980d8aecaeaa87628c8cc0d2d54bd2f5" translate="yes" xml:space="preserve">
          <source>A keras layer style scope.</source>
          <target state="translated">케 라스 레이어 스타일 범위.</target>
        </trans-unit>
        <trans-unit id="67b8055727d78d198c688827c0c5bc4b30276e80" translate="yes" xml:space="preserve">
          <source>A kernel multinomial logistic regression model with Gaussian kernel for MNIST:</source>
          <target state="translated">MNIST 용 가우스 커널을 사용하는 커널 다항 로지스틱 회귀 모델 :</target>
        </trans-unit>
        <trans-unit id="3725a74041a88e0e71f7bd78c9618f0ae2e5dcee" translate="yes" xml:space="preserve">
          <source>A knob to control how many iterations are dispatched in parallel. This knob can be used to control the total memory usage.</source>
          <target state="translated">병렬로 전달되는 반복 수를 제어하는 ​​노브입니다. 이 노브는 총 메모리 사용량을 제어하는 ​​데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b6b0d6b81c580108de43a8179ecd0a2c615549f6" translate="yes" xml:space="preserve">
          <source>A layer author can opt-out their layer from the automatic input casting by passing &lt;code&gt;autocast=False&lt;/code&gt; to the base Layer's constructor. This disables the autocasting part of the V2 behavior for that layer, but not the defaulting to floatx part of the V2 behavior.</source>
          <target state="translated">레이어 작성자는 &lt;code&gt;autocast=False&lt;/code&gt; 를 기본 레이어의 생성자 에 전달하여 자동 입력 캐스팅에서 레이어를 옵트 아웃 할 수 있습니다 . 그러면 해당 레이어에 대한 V2 동작의 자동 캐스팅 부분이 비활성화되지만 V2 동작의 floatx 부분이 기본값이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="ecc3b03ff020b59215b09c5dc972ed40c2fac02f" translate="yes" xml:space="preserve">
          <source>A layer author can prevent a variable from being wrapped with an &lt;code&gt;AutoCastVariable&lt;/code&gt; by passing &lt;code&gt;experimental_autocast=False&lt;/code&gt; to &lt;code&gt;add_weight&lt;/code&gt;:</source>
          <target state="translated">레이어 작성자는 &lt;code&gt;experimental_autocast=False&lt;/code&gt; 를 &lt;code&gt;add_weight&lt;/code&gt; 에 전달 하여 변수가 &lt;code&gt;AutoCastVariable&lt;/code&gt; 로 래핑되는 것을 방지 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3bd8d13aaec8d265f25ce34270507cd3b13305ad" translate="yes" xml:space="preserve">
          <source>A layer config is a Python dictionary (serializable) containing the configuration of a layer. The same layer can be reinstantiated later (without its trained weights) from this configuration.</source>
          <target state="translated">레이어 구성은 레이어 구성을 포함하는 Python 사전 (직렬화 가능)입니다. 이 구성에서 나중에 동일한 레이어를 훈련 된 가중치없이 다시 인스턴스화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e8082dbba1b63bb958d20b12d3d59de036f2a8c1" translate="yes" xml:space="preserve">
          <source>A layer for sequence input.</source>
          <target state="translated">시퀀스 입력을위한 레이어입니다.</target>
        </trans-unit>
        <trans-unit id="e9ee0721b7c50996e55d55ffabe9132357667c0e" translate="yes" xml:space="preserve">
          <source>A layer instance.</source>
          <target state="translated">레이어 인스턴스.</target>
        </trans-unit>
        <trans-unit id="56c6bf56a762394d9bcac54188435065a9a325a1" translate="yes" xml:space="preserve">
          <source>A layer is a callable object that takes as input one or more tensors and that outputs one or more tensors. It involves &lt;em&gt;computation&lt;/em&gt;, defined in the &lt;code&gt;call()&lt;/code&gt; method, and a &lt;em&gt;state&lt;/em&gt; (weight variables), defined either in the constructor &lt;code&gt;__init__()&lt;/code&gt; or in the &lt;code&gt;build()&lt;/code&gt; method.</source>
          <target state="translated">레이어는 하나 이상의 텐서를 입력으로 사용하고 하나 이상의 텐서를 출력하는 호출 가능한 객체입니다. 그것은 관련된 &lt;em&gt;연산&lt;/em&gt; 에 정의, &lt;code&gt;call()&lt;/code&gt; 하는 방법 및 &lt;em&gt;상태&lt;/em&gt; (중량 변수), 생성자에 정의 된 하나 &lt;code&gt;__init__()&lt;/code&gt; 또는에 &lt;code&gt;build()&lt;/code&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="a72b6252f623c916179028126646a46d38e2b21a" translate="yes" xml:space="preserve">
          <source>A layer is a class implementing common neural networks operations, such as convolution, batch norm, etc. These operations require managing weights, losses, updates, and inter-layer connectivity.</source>
          <target state="translated">계층은 컨볼 루션, 배치 표준 등과 같은 일반적인 신경망 작업을 구현하는 클래스입니다. 이러한 작업에는 가중치, 손실, 업데이트 및 계층 간 연결 관리가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="7eb44606ebd8da4cc2c8216fa6c17a0e613dbcfb" translate="yes" xml:space="preserve">
          <source>A layer subclass can prevent its inputs from being autocasted by passing &lt;code&gt;autocast=False&lt;/code&gt; to the layer constructor. For example:</source>
          <target state="translated">레이어 하위 클래스는 &lt;code&gt;autocast=False&lt;/code&gt; 를 레이어 생성자 에 전달하여 입력이 자동 전송되는 것을 방지 할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f2bd24ff359d0351bcfd41d15f4f71cdcf5330ab" translate="yes" xml:space="preserve">
          <source>A layer that produces a dense &lt;code&gt;Tensor&lt;/code&gt; based on given &lt;code&gt;feature_columns&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;feature_columns&lt;/code&gt; 를 기반으로 밀도가 높은 &lt;code&gt;Tensor&lt;/code&gt; 를 생성하는 레이어입니다 .</target>
        </trans-unit>
        <trans-unit id="6ff2c8ecd82971faf94f7ab1879dfc1584a8bdeb" translate="yes" xml:space="preserve">
          <source>A layer that uses tf.einsum as the backing computation.</source>
          <target state="translated">tf.einsum을 백업 계산으로 사용하는 계층입니다.</target>
        </trans-unit>
        <trans-unit id="f7e81390d9d00a1e1aa37b2a6852ce1994a0c69f" translate="yes" xml:space="preserve">
          <source>A layer will cast its inputs to its compute dtype in TensorFlow 2. For example:</source>
          <target state="translated">레이어는 입력을 TensorFlow 2의 계산 dtype으로 캐스팅합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="39cb59d16a363f20e8f6f619bbebdc671daee7ba" translate="yes" xml:space="preserve">
          <source>A length T list of inputs, each a &lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[batch_size, input_size]&lt;/code&gt;, or a nested tuple of such elements.</source>
          <target state="translated">입력의 길이 T 목록, 각각 &lt;code&gt;[batch_size, input_size]&lt;/code&gt; 모양 의 &lt;code&gt;Tensor&lt;/code&gt; 또는 이러한 요소의 중첩 된 튜플.</target>
        </trans-unit>
        <trans-unit id="a13357746ae654b16f2ee2640060c004c4cd9e2d" translate="yes" xml:space="preserve">
          <source>A length T list of inputs, each a &lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[batch_size, input_size]&lt;/code&gt;.</source>
          <target state="translated">길이 T 입력 목록, 각각 &lt;code&gt;[batch_size, input_size]&lt;/code&gt; 모양 의 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ad72b8d9696235b11c5ec5cf39cbbb712549b6b8" translate="yes" xml:space="preserve">
          <source>A length T list of inputs, each a tensor of shape [batch_size, input_size], or a nested tuple of such elements.</source>
          <target state="translated">입력의 길이 T 목록, 각각 [batch_size, input_size] 모양의 텐서 또는 이러한 요소의 중첩 된 튜플.</target>
        </trans-unit>
        <trans-unit id="9f69bc7c63477f1e229b93d4411e71c7a0de6e37" translate="yes" xml:space="preserve">
          <source>A lightweight, extensible re-implementation of traceback.extract_stack.</source>
          <target state="translated">traceback.extract_stack의 가볍고 확장 가능한 재 구현.</target>
        </trans-unit>
        <trans-unit id="f24aec1619d93e9644a4db3d95546de46cb781b0" translate="yes" xml:space="preserve">
          <source>A limit on the number of frames to return.</source>
          <target state="translated">반환 할 프레임 수에 대한 제한입니다.</target>
        </trans-unit>
        <trans-unit id="59559a4a568a8e97178a6e75e9f6ab5eed5bf17a" translate="yes" xml:space="preserve">
          <source>A list (length &lt;code&gt;count&lt;/code&gt;) of &lt;code&gt;Generator&lt;/code&gt; objects independent of each other. The new generators have the same RNG algorithm as the old one.</source>
          <target state="translated">서로 독립적 인 &lt;code&gt;Generator&lt;/code&gt; 객체 의 목록 (길이 &lt;code&gt;count&lt;/code&gt; ) 새로운 생성기는 이전과 동일한 RNG 알고리즘을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="7d3f364bd3724f4c0d8921659b970def7f30ce1d" translate="yes" xml:space="preserve">
          <source>A list of (&lt;code&gt;Tensor&lt;/code&gt;, &lt;code&gt;shape&lt;/code&gt;) tuples, wherein &lt;code&gt;shape&lt;/code&gt; is the expected shape of &lt;code&gt;Tensor&lt;/code&gt;. See the example code above. The &lt;code&gt;shape&lt;/code&gt; must be an iterable. Each element of the iterable can be either a concrete integer value or a string that abstractly represents the dimension. For example,</source>
          <target state="translated">(목록 &lt;code&gt;Tensor&lt;/code&gt; , &lt;code&gt;shape&lt;/code&gt; ) 튜플은 상기 &lt;code&gt;shape&lt;/code&gt; 의 형상 인 것으로 &lt;code&gt;Tensor&lt;/code&gt; . 위의 예제 코드를 참조하십시오. &lt;code&gt;shape&lt;/code&gt; 반복 가능해야합니다. iterable의 각 요소는 구체적인 정수 값이거나 차원을 추상적으로 나타내는 문자열 일 수 있습니다. 예를 들면</target>
        </trans-unit>
        <trans-unit id="af3c32de844696788126f1b2185a7022169bd472" translate="yes" xml:space="preserve">
          <source>A list of (gradient, variable) pairs.</source>
          <target state="translated">(그라데이션, 변수) 쌍의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="970720dee4a72b5b0c1b2d5f9b68f3f200d6afca" translate="yes" xml:space="preserve">
          <source>A list of (gradient, variable) pairs. Variable is always present, but gradient can be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">(그라데이션, 변수) 쌍의 목록입니다. 변수는 항상 존재하지만 그래디언트는 &lt;code&gt;None&lt;/code&gt; 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="21667b414bc6a3fb0025e830df0e0d1eb2ccecc9" translate="yes" xml:space="preserve">
          <source>A list of 1-D integer tensors. The &lt;code&gt;i&lt;/code&gt;th tensor is used as the &lt;code&gt;row_lengths&lt;/code&gt; for the &lt;code&gt;i&lt;/code&gt;th ragged dimension.</source>
          <target state="translated">1 차원 정수 텐서 목록입니다. &lt;code&gt;i&lt;/code&gt; 번째 텐서는로서 사용 &lt;code&gt;row_lengths&lt;/code&gt; 위한 &lt;code&gt;i&lt;/code&gt; 번째의 비정형 사이즈.</target>
        </trans-unit>
        <trans-unit id="e37abb3715587e8f09f739e16ac2a958611888af" translate="yes" xml:space="preserve">
          <source>A list of 1-D integer tensors. The &lt;code&gt;i&lt;/code&gt;th tensor is used as the &lt;code&gt;row_splits&lt;/code&gt; for the &lt;code&gt;i&lt;/code&gt;th ragged dimension.</source>
          <target state="translated">1 차원 정수 텐서 목록입니다. &lt;code&gt;i&lt;/code&gt; 번째 텐서는로서 사용 &lt;code&gt;row_splits&lt;/code&gt; 위한 &lt;code&gt;i&lt;/code&gt; 번째의 비정형 사이즈.</target>
        </trans-unit>
        <trans-unit id="3c359848870f8f2c4abf2c9bc75921255e14b17a" translate="yes" xml:space="preserve">
          <source>A list of 1-D integer tensors. The &lt;code&gt;i&lt;/code&gt;th tensor is used as the &lt;code&gt;value_rowids&lt;/code&gt; for the &lt;code&gt;i&lt;/code&gt;th ragged dimension.</source>
          <target state="translated">1 차원 정수 텐서 목록입니다. &lt;code&gt;i&lt;/code&gt; 번째 텐서는로서 사용 &lt;code&gt;value_rowids&lt;/code&gt; 위한 &lt;code&gt;i&lt;/code&gt; 번째의 비정형 사이즈.</target>
        </trans-unit>
        <trans-unit id="7407eb70ab6e1904aca4b924ae813b5c3197cde5" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;../../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; objects with compatible structure.</source>
          <target state="translated">호환 가능한 구조를 가진 &lt;a href=&quot;../../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; 객체 의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="895f8deff0952e23d5d581e6d26b9cf1245b2620" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;../dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; objects with compatible structure.</source>
          <target state="translated">호환 가능한 구조를 가진 &lt;a href=&quot;../dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; 객체 의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="81d0b8e2d2abccfd2cb82f334e3b6fcc12719c02" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; objects of same size and &lt;a href=&quot;../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; dtype.</source>
          <target state="translated">동일한 크기 및 &lt;a href=&quot;../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt; dtype 의 &lt;a href=&quot;../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 개체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="98c07bd72bf364acb55b834638c4fe6e57308955" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../indexedslices&quot;&gt;&lt;code&gt;tf.IndexedSlices&lt;/code&gt;&lt;/a&gt; objects, each with the same shape and type. &lt;a href=&quot;../indexedslices&quot;&gt;&lt;code&gt;tf.IndexedSlices&lt;/code&gt;&lt;/a&gt; objects will be converted into dense tensors prior to adding.</source>
          <target state="translated">각각 모양과 유형이 동일한 &lt;a href=&quot;../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../indexedslices&quot;&gt; &lt;code&gt;tf.IndexedSlices&lt;/code&gt; &lt;/a&gt; 객체 의 목록입니다 . &lt;a href=&quot;../indexedslices&quot;&gt; &lt;code&gt;tf.IndexedSlices&lt;/code&gt; &lt;/a&gt; 객체는 추가하기 전에 조밀 한 텐서로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="a130934cc736e58deed1ecdfc770262f8115990f" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../raggedtensor&quot;&gt;&lt;code&gt;tf.RaggedTensor&lt;/code&gt;&lt;/a&gt;. May not be empty. All &lt;code&gt;values&lt;/code&gt; must have the same rank and the same dtype; but unlike &lt;a href=&quot;../stack&quot;&gt;&lt;code&gt;tf.stack&lt;/code&gt;&lt;/a&gt;, they can have arbitrary dimension sizes.</source>
          <target state="translated">&lt;a href=&quot;../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../raggedtensor&quot;&gt; &lt;code&gt;tf.RaggedTensor&lt;/code&gt; &lt;/a&gt; 의 목록입니다 . 비워 둘 수 없습니다. 모든 &lt;code&gt;values&lt;/code&gt; 은 동일한 순위와 동일한 dtype을 가져야합니다. 그러나 &lt;a href=&quot;../stack&quot;&gt; &lt;code&gt;tf.stack&lt;/code&gt; &lt;/a&gt; 과 달리 임의의 차원 크기를 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ba2233edb3deaa59ec4b694995548ea98109254" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 개체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="9d50308ad5861850da204023d941316fad8e71e3" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;DType&lt;/code&gt; objects. The length of &lt;code&gt;dtypes&lt;/code&gt; must equal the number of tensors in each queue element.</source>
          <target state="translated">&lt;code&gt;DType&lt;/code&gt; 개체 목록입니다 . &lt;code&gt;dtypes&lt;/code&gt; 의 길이는 각 큐 요소의 텐서 수와 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="73ba6ecc563793bd420b43a820fd092ead979b2a" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;DType&lt;/code&gt; objects. The length of &lt;code&gt;types&lt;/code&gt; must equal the number of tensors in each queue element, except the first priority element. The first tensor in each element is the priority, which must be type int64.</source>
          <target state="translated">&lt;code&gt;DType&lt;/code&gt; 개체 목록입니다 . &lt;code&gt;types&lt;/code&gt; 의 길이 는 첫 번째 우선 순위 요소를 제외하고 각 큐 요소의 텐서 수와 같아야합니다. 각 요소의 첫 번째 텐서는 우선 순위이며 int64 유형이어야합니다.</target>
        </trans-unit>
        <trans-unit id="a3366c2478c02e590bf57faa2bdd9e74f558977b" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Ncontext_sparse&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;int64&lt;/code&gt; 유형 의 &lt;code&gt;Ncontext_sparse&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="ae90bdc4322225d45513cef14fe3d481b555c0de" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Nfeature_list_dense&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;int64&lt;/code&gt; 유형 의 &lt;code&gt;Nfeature_list_dense&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="393cf021c25c15c072b89c502a61f680a0f6772a" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Nfeature_list_sparse&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;int64&lt;/code&gt; 유형 의 &lt;code&gt;Nfeature_list_sparse&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="9ed402a542dc6affbc9b3a1ad4f8cb329160f8ed" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;OUTPUT_RAGGED_RANK&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; objects with the same type as &lt;code&gt;params_nested_splits&lt;/code&gt;.</source>
          <target state="translated">목록 &lt;code&gt;OUTPUT_RAGGED_RANK&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 같은 유형의 객체 &lt;code&gt;params_nested_splits&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2158f10314f4de4c33cf71bf87c64fa3ea4ae93d" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Operation&lt;/code&gt; and/or &lt;code&gt;Tensor&lt;/code&gt; objects from the imported graph, corresponding to the names in &lt;code&gt;return_elements&lt;/code&gt;, and None if &lt;code&gt;returns_elements&lt;/code&gt; is None.</source>
          <target state="translated">가져온 그래프에서 &lt;code&gt;return_elements&lt;/code&gt; 의 이름에 해당하는 &lt;code&gt;Operation&lt;/code&gt; 및 / 또는 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록이며 , &lt;code&gt;returns_elements&lt;/code&gt; 가 None 인 경우 None입니다.</target>
        </trans-unit>
        <trans-unit id="3948acb762262a6eb092a315420f919506d21479" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Operation&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;Operation&lt;/code&gt; 개체 의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="1d04f8282ad1dfd304a65bf4fdb27d97a7c63640" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Operation&lt;/code&gt; or &lt;code&gt;Tensor&lt;/code&gt; objects which must be executed or computed before running the operations defined in the context. Can also be &lt;code&gt;None&lt;/code&gt; to clear the control dependencies.</source>
          <target state="translated">컨텍스트에 정의 된 작업을 실행하기 전에 실행하거나 계산해야하는 &lt;code&gt;Operation&lt;/code&gt; 또는 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 제어 종속성을 지우려면 &lt;code&gt;None&lt;/code&gt; 이 될 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2d0eae275b130f82a66d269e46105410f1b9d94f" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Operation&lt;/code&gt; or &lt;code&gt;Tensor&lt;/code&gt; objects which must be executed or computed before running the operations defined in the context. Can also be &lt;code&gt;None&lt;/code&gt; to clear the control dependencies. If eager execution is enabled, any callable object in the &lt;code&gt;control_inputs&lt;/code&gt; list will be called.</source>
          <target state="translated">컨텍스트에 정의 된 작업을 실행하기 전에 실행하거나 계산해야하는 &lt;code&gt;Operation&lt;/code&gt; 또는 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 제어 종속성을 지우려면 &lt;code&gt;None&lt;/code&gt; 이 될 수도 있습니다 . 즉시 실행이 활성화 된 경우 &lt;code&gt;control_inputs&lt;/code&gt; 목록 의 모든 호출 가능한 개체 가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="b1bfbf374a956012100da9a43d9e5ea6326975d2" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Operation&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;Operation&lt;/code&gt; 목록 .</target>
        </trans-unit>
        <trans-unit id="495d01fec8e8c8ff2fda58fe1477e1368163ae8c" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;QueueBase&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;QueueBase&lt;/code&gt; 개체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="9b673a704608ded73cb3cc5ca70bc427955478a8" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;QueueRunners&lt;/code&gt;. If not specified, we'll use the list of queue runners gathered in the graph under the key &lt;code&gt;GraphKeys.QUEUE_RUNNERS&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;QueueRunners&lt;/code&gt; 목록입니다 . 지정되지 않은 경우 &lt;code&gt;GraphKeys.QUEUE_RUNNERS&lt;/code&gt; 키 아래의 그래프에 수집 된 큐 러너 목록을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="2e535b817c796fc4e38e7ac4cccb7daf56b7fbe7" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;RaggedTensor&lt;/code&gt; or &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RaggedTensor&lt;/code&gt; 또는 &lt;code&gt;Tensor&lt;/code&gt; 또는 &lt;code&gt;SparseTensor&lt;/code&gt; 의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="c52e318179ca09ec2796e62092dea8a8caf5924f" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects of type &lt;code&gt;Tout&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tout&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="bd9a505db34d003b2f2894ac034b2e3b98dd2b27" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects of type &lt;code&gt;component_types&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;component_types&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="d6dda19f384b81c656dd15097bdc48006b27a6f4" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects of type &lt;code&gt;context_sparse_types&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;context_sparse_types&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="a7b8601a47c6441844c727b5dccbe77497cc37d4" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects of type &lt;code&gt;dtypes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dtypes&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="d349382114450fbc9478a8ddf4c083319043121f" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects of type &lt;code&gt;feature_list_dense_types&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;feature_list_dense_types&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="ed1256411560220b6003f60bb3de26f9dcf60ca5" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects of type &lt;code&gt;feature_list_sparse_types&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;feature_list_sparse_types&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="cb98a38eaea56f14f5a0d1c54eb0a15e39564dde" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects of type &lt;code&gt;output_types&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;output_types&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="8a0450b0feb0bc7a65da5ca9c73e6eeff22f31c7" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects of type &lt;code&gt;ragged_split_types&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ragged_split_types&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="9e1b96f951c47a466f34acb5819e6f94db3ad62b" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects of type &lt;code&gt;ragged_value_types&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ragged_value_types&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="4a7ecca7643a6f2b8b18082c85f87089383dffd3" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects of type &lt;code&gt;sparse_types&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sparse_types&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="42f7ce21ecfa26fbda988a228c5dc5dac62781fa" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects or a single &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 객체 목록 또는 단일 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3958625a29412330a2ccf398998ca2d472c7eafb" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects that will be inputs to the &lt;code&gt;Operation&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Operation&lt;/code&gt; 에 대한 입력이 될 &lt;code&gt;Tensor&lt;/code&gt; 객체 의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="66a810a8043eab55063362e766ebf65e1c6127da" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with specific types. Acceptable types are &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;. One tensor per column of the input record, with either a scalar default value for that column or an empty vector if the column is required.</source>
          <target state="translated">특정 유형 이있는 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 허용되는 유형은 &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;string&lt;/code&gt; 입니다. 입력 레코드의 열당 하나의 텐서 (해당 열에 대한 스칼라 기본값 또는 열이 필요한 경우 빈 벡터 포함).</target>
        </trans-unit>
        <trans-unit id="309d6a2f5c7d83b4704137817c6496cd7671f7ff" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with the same shape and type.</source>
          <target state="translated">모양과 유형이 동일한 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="ca073c7ce3ece2cd7c7de22267a95f5b92d992f8" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with the same type in: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A list of one or more Tensors representing the splits of the input &lt;code&gt;RaggedTensor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; 형식이 동일한 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 입력 &lt;code&gt;RaggedTensor&lt;/code&gt; 의 분할을 나타내는 하나 이상의 Tensor 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="564e5ce6daa87c7076303b9b035f2175456751c7" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;. A TensorList of float32 scalars, one for each dynamic learning rate tag: see the comments in //third_party/tensorflow/core/protobuf/tpu/optimization_parameters.proto. Multiple tables can share the same dynamic learning rate tag as specified in the configuration. If the learning rates for all tables are constant, this list should be empty.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 각 동적 학습률 태그에 대해 하나씩 float32 스칼라의 TensorList : //third_party/tensorflow/core/protobuf/tpu/optimization_parameters.proto의 주석을 참조하십시오. 여러 테이블이 구성에 지정된 것과 동일한 동적 학습률 태그를 공유 할 수 있습니다. 모든 테이블의 학습률이 일정한 경우이 목록은 비어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="e157b815d988e4eddbacf923c251a9f9f6d39c41" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;. a list of matrices which contains the dense feature values.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 조밀 한 특성 값을 포함하는 행렬 목록.</target>
        </trans-unit>
        <trans-unit id="d6e66918ae4577f071ff9a0dc47e72e180518cf7" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;. a list of vectors which contains feature value associated with each feature group.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 각 기능 그룹과 관련된 기능 값을 포함하는 벡터 목록.</target>
        </trans-unit>
        <trans-unit id="1933aff8c41698c30ecbd3d9c375211e62aae314" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;. float; List of Rank 1 Tensor each containing float values for a single feature.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 흙손; 단일 특성에 대한 부동 값을 각각 포함하는 순위 1 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="1fb27484f10b9203177ea6bddf5b4271c6f9387f" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;. float; List of Rank 1 Tensors each containing values for a single feature.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 흙손; 각각 단일 특성에 대한 값을 포함하는 순위 1 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="5168c5d7cf25f261ca6166e4dfafcea69e54ebf4" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;. string; List of Rank 2 Tensor each containing the summaries for a single feature.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 끈; 단일 기능에 대한 요약이 포함 된 랭크 2 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="656eff1469b2f5177c6fe356b95a4de5bc23fbef" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int32&lt;/code&gt;. List of rank 1 tensors representing the dimension in each feature.</source>
          <target state="translated">유형이 &lt;code&gt;int32&lt;/code&gt; 인 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 각 특성의 차원을 나타내는 순위 1 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="b4cda4f051223c044425eab68eecdc53354af922" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int32&lt;/code&gt;. List of rank 1 tensors representing the nodes for which this feature has a split.</source>
          <target state="translated">유형이 &lt;code&gt;int32&lt;/code&gt; 인 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 이 기능이 분할 된 노드를 나타내는 순위 1 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="4c298c52ea18e8c1c443c55b7fd22ef932f07740" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int64&lt;/code&gt;. 2-D. Indices of each input &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="translated">유형이 &lt;code&gt;int64&lt;/code&gt; 인 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 2-D. 각 입력 &lt;code&gt;SparseTensor&lt;/code&gt; 의 인덱스입니다 .</target>
        </trans-unit>
        <trans-unit id="20b0acf741a4b628441e4aa3c669eb0148d421f2" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int64&lt;/code&gt;. a list of vectors which contain example indices.</source>
          <target state="translated">유형이 &lt;code&gt;int64&lt;/code&gt; 인 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 예제 인덱스를 포함하는 벡터 목록.</target>
        </trans-unit>
        <trans-unit id="032e826f4b8b56ac8cf8f135c3a3084289a599d1" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;resource&lt;/code&gt;. A list of iterator handles (unused). This is added so that automatic control dependencies get added during function tracing that ensure this op runs after all the dependent iterators are deleted.</source>
          <target state="translated">&lt;code&gt;resource&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 반복기 핸들 목록 (사용되지 않음). 이는 모든 종속 반복기가 삭제 된 후이 작업이 실행되도록하는 함수 추적 중에 자동 제어 종속성이 추가되도록 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="3a082ca315931611a8112ba101cadfeef671346c" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;string&lt;/code&gt;. A list of Ncontext_dense string Tensors (scalars). The keys expected in the SequenceExamples' context features associated with dense values.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . Ncontext_dense 문자열 텐서 (스칼라) 목록입니다. 조밀 한 값과 관련된 SequenceExamples의 컨텍스트 기능에서 예상되는 키입니다.</target>
        </trans-unit>
        <trans-unit id="6ac0baa20033e29361f9626f2a174e7219b6db5e" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;string&lt;/code&gt;. A list of Ncontext_sparse string Tensors (scalars). The keys expected in the Examples' features associated with context_sparse values.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . Ncontext_sparse 문자열 텐서 (스칼라) 목록입니다. context_sparse 값과 관련된 예제 기능에서 예상되는 키입니다.</target>
        </trans-unit>
        <trans-unit id="8a570b571163e62f13f20ae7aca2780fe2d2ce26" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;string&lt;/code&gt;. A list of Ndense string Tensors (scalars). The keys expected in the Examples' features associated with dense values.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . Ndense 문자열 텐서 (스칼라) 목록입니다. 조밀 한 값과 관련된 예제의 기능에서 예상되는 키입니다.</target>
        </trans-unit>
        <trans-unit id="b8148392f2f2a224ea631709f3b81f08897e398d" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;string&lt;/code&gt;. A list of Nfeature_list_dense string Tensors (scalars). The keys expected in the SequenceExamples' feature_lists associated with lists of dense values.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . Nfeature_list_dense 문자열 텐서 (스칼라)의 목록입니다. 조밀 한 값 목록과 관련된 SequenceExamples의 feature_lists에서 예상되는 키입니다.</target>
        </trans-unit>
        <trans-unit id="b1fe438ca8449d3bfeacfe9d312f3a08c9f8be2f" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;string&lt;/code&gt;. A list of Nfeature_list_sparse string Tensors (scalars). The keys expected in the FeatureLists associated with sparse values.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . Nfeature_list_sparse 문자열 텐서 (스칼라) 목록입니다. 희소 값과 관련된 FeatureLists에서 예상되는 키입니다.</target>
        </trans-unit>
        <trans-unit id="f695879d97ab54f59a98c871f047a8fe585d474e" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;string&lt;/code&gt;. A list of Nsparse string Tensors (scalars). The keys expected in the Examples' features associated with sparse values.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . Nsparse 문자열 텐서 (스칼라) 목록입니다. 희소 값과 관련된 예제의 기능에서 예상되는 키입니다.</target>
        </trans-unit>
        <trans-unit id="c232fc677804ee96a22382348570875e8dd674bc" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with type mutable &lt;code&gt;float32&lt;/code&gt;. a list of vectors where each value is the weight associated with a feature group.</source>
          <target state="translated">유형이 변경 가능한 &lt;code&gt;float32&lt;/code&gt; 인 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 각 값이 기능 그룹과 관련된 가중치 인 벡터 목록.</target>
        </trans-unit>
        <trans-unit id="8595ff1fcccb1f9fcf95a36a5a05228b6956a84f" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with types from: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">유형이 &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;string&lt;/code&gt; 인 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="d0f2b5d16577b310e5f0d33ae4edee045db8a49b" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with types from: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;. One tensor per column of the input record, with either a scalar default value for that column or an empty vector if the column is required.</source>
          <target state="translated">유형이 &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;string&lt;/code&gt; 인 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 입력 레코드의 열당 하나의 텐서 (해당 열에 대한 스칼라 기본값 또는 열이 필요한 경우 빈 벡터 포함).</target>
        </trans-unit>
        <trans-unit id="3884d933d53e1fb90b910e7d2cb30b762c7f5350" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with types from: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;. A dict mapping string keys to &lt;code&gt;Tensor&lt;/code&gt;s. The keys of the dict must match the dense_keys of the feature.</source>
          <target state="translated">유형이 &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;string&lt;/code&gt; 인 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 문자열 키를 &lt;code&gt;Tensor&lt;/code&gt; 에 매핑하는 dict . dict의 키는 기능의 density_keys와 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="66dfea85ab618b2ca06149cca0fecf6e284edbc1" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with types from: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;. A list of Ncontext_dense Tensors (some may be empty). context_dense_defaults[j] provides default values when the SequenceExample's context map lacks context_dense_key[j]. If an empty Tensor is provided for context_dense_defaults[j], then the Feature context_dense_keys[j] is required. The input type is inferred from context_dense_defaults[j], even when it's empty. If context_dense_defaults[j] is not empty, its shape must match context_dense_shapes[j].</source>
          <target state="translated">유형이 &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;string&lt;/code&gt; 인 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . Ncontext_dense 텐서 목록 (일부는 비어있을 수 있음). context_dense_defaults [j]는 SequenceExample의 컨텍스트 맵에 context_dense_key [j]가없는 경우 기본값을 제공합니다. context_dense_defaults [j]에 빈 Tensor가 제공되면 Feature context_dense_keys [j]가 필요합니다. 입력 유형은 비어있는 경우에도 context_dense_defaults [j]에서 유추됩니다. context_dense_defaults [j]가 비어 있지 않으면 해당 모양이 context_dense_shapes [j]와 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="7d8a0ea08851e32ef875521d8af5099e6bdbdcbd" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with types from: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;. A list of Ndense Tensors (some may be empty). dense_defaults[j] provides default values when the example's feature_map lacks dense_key[j]. If an empty Tensor is provided for dense_defaults[j], then the Feature dense_keys[j] is required. The input type is inferred from dense_defaults[j], even when it's empty. If dense_defaults[j] is not empty, and dense_shapes[j] is fully defined, then the shape of dense_defaults[j] must match that of dense_shapes[j]. If dense_shapes[j] has an undefined major dimension (variable strides dense feature), dense_defaults[j] must contain a single element: the padding element.</source>
          <target state="translated">유형이 &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;string&lt;/code&gt; 인 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . Ndense Tensor 목록 (일부는 비어있을 수 있음). density_defaults [j]는 예제의 feature_map에 density_key [j]가없는 경우 기본값을 제공합니다. density_defaults [j]에 빈 Tensor가 제공되면 Feature density_keys [j]가 필요합니다. 입력 유형은 비어있는 경우에도 density_defaults [j]에서 유추됩니다. density_defaults [j]가 비어 있지 않고 density_shapes [j]가 완전히 정의 된 경우에는 density_defaults [j]의 모양이 density_shapes [j]의 모양과 일치해야합니다. density_shapes [j]에 정의되지 않은 주요 차원 (변수 보폭 조밀 기능)이있는 경우 density_defaults [j]는 단일 요소 인 패딩 요소를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="80f369453d2821ccea7af80a2e1884e059d62a67" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with types from: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;. A list of Tensors (some may be empty), whose length matches the length of &lt;code&gt;dense_keys&lt;/code&gt;. dense_defaults[j] provides default values when the example's feature_map lacks dense_key[j]. If an empty Tensor is provided for dense_defaults[j], then the Feature dense_keys[j] is required. The input type is inferred from dense_defaults[j], even when it's empty. If dense_defaults[j] is not empty, and dense_shapes[j] is fully defined, then the shape of dense_defaults[j] must match that of dense_shapes[j]. If dense_shapes[j] has an undefined major dimension (variable strides dense feature), dense_defaults[j] must contain a single element: the padding element.</source>
          <target state="translated">유형이 &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;string&lt;/code&gt; 인 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 길이가 &lt;code&gt;dense_keys&lt;/code&gt; 의 길이와 일치하는 Tensor 목록 (일부는 비어있을 수 있음) . density_defaults [j]는 예제의 feature_map에 density_key [j]가없는 경우 기본값을 제공합니다. density_defaults [j]에 빈 Tensor가 제공되면 Feature density_keys [j]가 필요합니다. 입력 유형은 비어있는 경우에도 density_defaults [j]에서 유추됩니다. density_defaults [j]가 비어 있지 않고 density_shapes [j]가 완전히 정의 된 경우에는 density_defaults [j]의 모양이 density_shapes [j]의 모양과 일치해야합니다. density_shapes [j]에 정의되지 않은 주요 차원 (변수 보폭 조밀 기능)이있는 경우 density_defaults [j]는 단일 요소 인 패딩 요소를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="9658b09c81b31157b161547a8cee667053c1dc67" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with types from: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;. A list of Tensors (some may be empty). Corresponds 1:1 with &lt;code&gt;dense_keys&lt;/code&gt;. dense_defaults[j] provides default values when the example's feature_map lacks dense_key[j]. If an empty Tensor is provided for dense_defaults[j], then the Feature dense_keys[j] is required. The input type is inferred from dense_defaults[j], even when it's empty. If dense_defaults[j] is not empty, and dense_shapes[j] is fully defined, then the shape of dense_defaults[j] must match that of dense_shapes[j]. If dense_shapes[j] has an undefined major dimension (variable strides dense feature), dense_defaults[j] must contain a single element: the padding element.</source>
          <target state="translated">유형이 &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;string&lt;/code&gt; 인 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . Tensor 목록 (일부는 비어있을 수 있음). &lt;code&gt;dense_keys&lt;/code&gt; 와 1 : 1에 해당 합니다. density_defaults [j]는 예제의 feature_map에 density_key [j]가없는 경우 기본값을 제공합니다. density_defaults [j]에 빈 Tensor가 제공되면 Feature density_keys [j]가 필요합니다. 입력 유형은 비어있는 경우에도 density_defaults [j]에서 유추됩니다. density_defaults [j]가 비어 있지 않고 density_shapes [j]가 완전히 정의 된 경우에는 density_defaults [j]의 모양이 density_shapes [j]의 모양과 일치해야합니다. density_shapes [j]에 정의되지 않은 주요 차원 (변수 보폭 조밀 기능)이있는 경우 density_defaults [j]는 단일 요소 인 패딩 요소를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="2c74e8415f13bdc611eb90201b976fa0e0dbce01" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with types from: &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;. 1-D. values of each &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="translated">유형이 &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;string&lt;/code&gt; 인 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 1-D. 각 &lt;code&gt;SparseTensor&lt;/code&gt; 의 값 .</target>
        </trans-unit>
        <trans-unit id="224248e073acd9d9ca12240dbf8a8c881f5a56cc" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects with types from: &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;. 2-D. Columns represented by dense &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">유형이 &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;string&lt;/code&gt; 인 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 2-D. 조밀 한 &lt;code&gt;Tensor&lt;/code&gt; 로 표현되는 열 .</target>
        </trans-unit>
        <trans-unit id="8be71d6b78bbc1267549e9141ae34040b236f36f" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects, each with same shape and type.</source>
          <target state="translated">모양과 유형이 각각 같은 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="687a26222f981704d16dc8c2ec1750974f1d7612" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects, or a single Tensor. The list of tensors to format into the template string. If a solitary tensor is passed in, the input tensor will automatically be wrapped as a list.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 객체 목록 또는 단일 Tensor. 템플릿 문자열로 형식을 지정할 텐서 목록입니다. 단독 텐서가 전달되면 입력 텐서는 자동으로 목록으로 래핑됩니다.</target>
        </trans-unit>
        <trans-unit id="16e39da1e1f9d6789030bfa5870e00fd8c75225b" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="d73aaf859dddca597f1c1b7d755790a394a71e8e" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. &lt;code&gt;N&lt;/code&gt; tensors to save.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . 저장할 텐서 &lt;code&gt;N&lt;/code&gt; 개 .</target>
        </trans-unit>
        <trans-unit id="ac88b0031972ec9a5ab0a695ab86496cca254b58" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. A list of arguments for the function.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . 함수의 인수 목록입니다.</target>
        </trans-unit>
        <trans-unit id="13c3ade0860bab137f4b182b7c326ca0238ff412" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. A list of input tensors passed to the branch function.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . 분기 함수에 전달 된 입력 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="d4a439437aca5bcab2db6d6dea23b954fb58bc38" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. A list of input tensors whose types are T.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . 유형이 T 인 입력 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="a41f4e2a547e06a38d96966462d65597c65c29f5" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. A list of input tensors.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . 입력 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="bd87ddee858aaa29b06635d7390b1c496af1bdb9" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. A list of scalars containing the padding value to use for each of the outputs.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . 각 출력에 사용할 패딩 값이 포함 된 스칼라 목록입니다.</target>
        </trans-unit>
        <trans-unit id="48dd08939cda5503435785e78308464a37249acf" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. A list of tensors that will be inserted into the outfeed queue as an XLA tuple.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . 아웃 피드 큐에 XLA 튜플로 삽입 될 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="060db9465963ef5f30d593c39b59a538fc553535" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. A list of tensors that will be provided using the infeed mechanism.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . 인피 드 메커니즘을 사용하여 제공 될 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="cd8eb25fce037c0f443c9d6aa9784a12a4b4829d" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. A list of tensors to print out when op is evaluated.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . op가 평가 될 때 인쇄 할 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="2714a2d245cb859dd3562c04f6396094b806c03b" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. A list of tensors whose types are &lt;code&gt;Targuments&lt;/code&gt;, corresponding to the inputs the function should be mapped over.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . 함수가 매핑되어야하는 입력에 해당하는 유형이 &lt;code&gt;Targuments&lt;/code&gt; 인 텐서 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="0cf59d2c33d14ee4bf20a3563d51d0fd87056c1e" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. A list of tensors whose types are &lt;code&gt;Tcaptured&lt;/code&gt;, corresponding to the captured inputs of the defun.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . defun의 캡처 된 입력에 해당하는 유형이 &lt;code&gt;Tcaptured&lt;/code&gt; 인 텐서 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="28daca73f5c11831d8e966c2c78d519f0da592e4" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. A list of tensors, typically values that were captured when building a closure for &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . 일반적으로 &lt;code&gt;f&lt;/code&gt; 에 대한 클로저를 만들 때 캡처 된 텐서 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="bd09f9aa77da9e277b6320b5adbdee58533a35fb" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. A list of tensors, typically values that were captured when building a closure for &lt;code&gt;finalize_func&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . 텐서 목록. 일반적으로 &lt;code&gt;finalize_func&lt;/code&gt; 에 대한 클로저를 빌드 할 때 캡처 된 값입니다 .</target>
        </trans-unit>
        <trans-unit id="f99701dcd87a323b40c1b9b59953e44ea9c5b5e3" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. A list of tensors, typically values that were captured when building a closure for &lt;code&gt;init_func&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . 텐서 목록. 일반적으로 &lt;code&gt;init_func&lt;/code&gt; 에 대한 클로저를 빌드 할 때 캡처 된 값입니다 .</target>
        </trans-unit>
        <trans-unit id="eae934fccd3fbfae16c0388e93be8d0b8b65ac48" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. A list of tensors, typically values that were captured when building a closure for &lt;code&gt;key_func&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . 텐서 목록. 일반적으로 &lt;code&gt;key_func&lt;/code&gt; 에 대한 클로저를 빌드 할 때 캡처 된 값입니다 .</target>
        </trans-unit>
        <trans-unit id="5d83446373e73f16113ad592fb3439b481553f0d" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. A list of tensors, typically values that were captured when building a closure for &lt;code&gt;predicate&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . 일반적으로 &lt;code&gt;predicate&lt;/code&gt; 에 대한 클로저를 빌드 할 때 캡처 된 값인 텐서 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="3ed714c47a464356bc0428cd381fd4be6176910d" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. A list of tensors, typically values that were captured when building a closure for &lt;code&gt;reduce_func&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . 일반적으로 &lt;code&gt;reduce_func&lt;/code&gt; 에 대한 클로저를 빌드 할 때 캡처 된 텐서 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="e1e20e2785375c01af9c33ab9eeec57ad41bba79" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. A nested structure of tensors, representing the initial state of the transformation.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . 변환의 초기 상태를 나타내는 텐서의 중첩 구조입니다.</target>
        </trans-unit>
        <trans-unit id="9584c33243f49cf8048bc24338e2d4efc48ba5c2" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. Additional arguments to pass to &lt;code&gt;f&lt;/code&gt; beyond those produced by &lt;code&gt;input_dataset&lt;/code&gt;. Evaluated once when the dataset is instantiated.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . &lt;code&gt;input_dataset&lt;/code&gt; 에 의해 생성 된 것 이상 으로 &lt;code&gt;f&lt;/code&gt; 에 전달할 추가 인수 입니다. 데이터 세트가 인스턴스화 될 때 한 번 평가됩니다.</target>
        </trans-unit>
        <trans-unit id="43a1073582c87b626eb42dd6ef41f849b9d2a42d" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. Every &lt;code&gt;Tensor&lt;/code&gt; in &lt;code&gt;tensor_list&lt;/code&gt; must have the same size in the first dimension.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . 모든 &lt;code&gt;Tensor&lt;/code&gt; 의 &lt;code&gt;tensor_list&lt;/code&gt; 은 첫 번째 차원의 크기가 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="18d76a040277c0bd0fcc06ddb85641e81d27d937" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. Has the same type as &lt;code&gt;context_dense_defaults&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . &lt;code&gt;context_dense_defaults&lt;/code&gt; 와 유형이 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="582bc437c4691d32431e62a9de6e83195ee900e9" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. Has the same type as &lt;code&gt;dense_defaults&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . &lt;code&gt;dense_defaults&lt;/code&gt; 와 동일한 유형 입니다.</target>
        </trans-unit>
        <trans-unit id="428a28a97df38df77f4b442fd9ebcc6342bbf1b2" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. Has the same type as &lt;code&gt;in_tensors&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . &lt;code&gt;in_tensors&lt;/code&gt; 와 동일한 유형 입니다.</target>
        </trans-unit>
        <trans-unit id="e2888c0e18331c427ff3ab0a7d211173a616975f" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. Has the same type as &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 객체 의 목록입니다 . &lt;code&gt;input&lt;/code&gt; 과 유형이 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="6505d71658065c227fa6b78a904a11706562f54b" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. Has the same type as &lt;code&gt;record_defaults&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . &lt;code&gt;record_defaults&lt;/code&gt; 와 동일한 유형 입니다.</target>
        </trans-unit>
        <trans-unit id="729dcc9eae154a49b4ae36493337e0069d8d738a" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. Has the same type as &lt;code&gt;record_defaults&lt;/code&gt;. Each tensor will have the same shape as records.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 객체 의 목록입니다 . &lt;code&gt;record_defaults&lt;/code&gt; 와 동일한 유형을 갖습니다 . 각 텐서는 레코드와 모양이 동일합니다.</target>
        </trans-unit>
        <trans-unit id="5ee7affb08daa939d139cac36cef8de104cc11f9" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. List of Tensors that will provide input to the Op.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . Op에 입력을 제공 할 Tensor 목록입니다.</target>
        </trans-unit>
        <trans-unit id="d37af7faac81785c8e5573c959607330559856c2" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. List of tensors containing values for the corresponding field.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . 해당 필드의 값을 포함하는 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="b90ac2bdaf4f880d20def9618db7073c17f8131b" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. One or more tensors from which the enqueued tensors should be taken.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . 대기열에 추가 된 텐서를 가져와야하는 하나 이상의 텐서입니다.</target>
        </trans-unit>
        <trans-unit id="679948b67139b3ceb27ad241dd34016c834704c5" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. The arguments to the function.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . 함수에 대한 인수입니다.</target>
        </trans-unit>
        <trans-unit id="d69dd6f40b80d4b07cb3a1e903846f2b601a3890" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. The list of tensors to format into the placeholder string.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . 자리 표시 자 문자열로 형식을 지정할 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="35ace337d7ef0839fed5103c7c5336a988fedd3e" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. The tensors to print out when condition is false.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . 조건이 거짓 일 때 인쇄 할 텐서입니다.</target>
        </trans-unit>
        <trans-unit id="07e7ff7919f900191aec872c5bac1648cab0e0f1" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. a list of input tensors of size N + M;</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . 크기 N + M의 입력 텐서 목록;</target>
        </trans-unit>
        <trans-unit id="6586a973e9140dafedd5ba7e1fb6bada598f1196" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; objects. a list of tensors dtypes A list of data types that inserted values should adhere to.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 개체 목록입니다 . 텐서 dtypes 목록 삽입 된 값이 준수해야하는 데이터 유형 목록입니다.</target>
        </trans-unit>
        <trans-unit id="0559d21a24c1272e71d75e40ae944804df7651bf" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; of length &lt;code&gt;len(xs)&lt;/code&gt; where each tensor is the &lt;code&gt;sum(dy/dx)&lt;/code&gt; for y in &lt;code&gt;ys&lt;/code&gt; and for x in &lt;code&gt;xs&lt;/code&gt;.</source>
          <target state="translated">길이 &lt;code&gt;len(xs)&lt;/code&gt; 의 &lt;code&gt;Tensor&lt;/code&gt; 목록입니다. 여기서 각 텐서는 &lt;code&gt;ys&lt;/code&gt; 의 y 와 &lt;code&gt;xs&lt;/code&gt; 의 x에 대한 &lt;code&gt;sum(dy/dx)&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="53837313cda5f602399303358b0dd60e22985a06" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; or a single &lt;code&gt;Tensor&lt;/code&gt; which &lt;code&gt;func&lt;/code&gt; computes.</source>
          <target state="translated">목록 &lt;code&gt;Tensor&lt;/code&gt; 또는 단일 &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;func&lt;/code&gt; 계산합니다.</target>
        </trans-unit>
        <trans-unit id="e8a3523624a44721fbe9563f7b86d87e0df82f10" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; or a single &lt;code&gt;Tensor&lt;/code&gt; which &lt;code&gt;func&lt;/code&gt; computes; an empty list if &lt;code&gt;func&lt;/code&gt; returns None.</source>
          <target state="translated">목록 &lt;code&gt;Tensor&lt;/code&gt; 또는 단일 &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;func&lt;/code&gt; 계산해; &lt;code&gt;func&lt;/code&gt; 이 None을 반환 하면 빈 목록</target>
        </trans-unit>
        <trans-unit id="3c221d6b94b41a665a143e689bc994bcc12d16e7" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt; representing the coefficients of the polynomial.</source>
          <target state="translated">다항식의 계수를 나타내는 &lt;code&gt;Tensor&lt;/code&gt; 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="9692d16a4db174306066a0b256cddd5cce9b78dd" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt;s or &lt;code&gt;IndexedSlices&lt;/code&gt;, some entries can be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 또는 &lt;code&gt;IndexedSlices&lt;/code&gt; 목록 , 일부 항목은 &lt;code&gt;None&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ef797ac2362bc9724a932267e7a7ee3975dfe1a8" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt;s or &lt;code&gt;float&lt;/code&gt;s or &lt;code&gt;int&lt;/code&gt;s that specifies the values for the intervals defined by &lt;code&gt;boundaries&lt;/code&gt;. It should have one more element than &lt;code&gt;boundaries&lt;/code&gt;, and all elements should have the same type.</source>
          <target state="translated">&lt;code&gt;boundaries&lt;/code&gt; 정의 된 간격의 값을 지정하는 &lt;code&gt;Tensor&lt;/code&gt; , &lt;code&gt;float&lt;/code&gt; , &lt;code&gt;int&lt;/code&gt; 의 목록입니다 . &lt;code&gt;boundaries&lt;/code&gt; 보다 하나 이상의 요소가 있어야하며 모든 요소는 동일한 유형을 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="46c84e6eb8744e44f41ca73d8448ed3ae488db2a" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt;s or &lt;code&gt;int&lt;/code&gt;s or &lt;code&gt;float&lt;/code&gt;s with strictly increasing entries, and with all elements having the same type as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">엄격하게 증가하는 항목이 있고 모든 요소가 &lt;code&gt;x&lt;/code&gt; 와 동일한 유형을 갖는 &lt;code&gt;Tensor&lt;/code&gt; , &lt;code&gt;int&lt;/code&gt; 또는 &lt;code&gt;float&lt;/code&gt; 의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="fc11bdbf141f2914c01210c7beab6ded5074b5b4" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensor&lt;/code&gt;s or &lt;code&gt;int&lt;/code&gt;s or &lt;code&gt;float&lt;/code&gt;s with strictly increasing entries, and with all elements having the same type as the optimizer step.</source>
          <target state="translated">항목이 엄격하게 증가하고 모든 요소가 최적화 단계와 동일한 유형을 갖는 &lt;code&gt;Tensor&lt;/code&gt; 또는 &lt;code&gt;int&lt;/code&gt; 또는 &lt;code&gt;float&lt;/code&gt; 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="38b2bc0e07d6b9e3e25a39be2a06ee0bbe1049a2" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;TensorShape&lt;/code&gt; objects, with the same length as &lt;code&gt;dtypes&lt;/code&gt;. Any dimension in the &lt;code&gt;TensorShape&lt;/code&gt; containing value &lt;code&gt;None&lt;/code&gt; is dynamic and allows values to be enqueued with variable size in that dimension.</source>
          <target state="translated">목록 &lt;code&gt;TensorShape&lt;/code&gt; 는 같은 길이로, 객체 &lt;code&gt;dtypes&lt;/code&gt; . &lt;code&gt;None&lt;/code&gt; 값을 포함 하는 &lt;code&gt;TensorShape&lt;/code&gt; 의 모든 차원 은 동적이며 해당 차원에서 값을 가변 크기로 대기열에 넣을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e2f0979a232592a0c8654842d6dbffe15125895" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Tensors&lt;/code&gt; of the same type as &lt;code&gt;list_t&lt;/code&gt;.</source>
          <target state="translated">목록 &lt;code&gt;Tensors&lt;/code&gt; 와 동일한 유형의 &lt;code&gt;list_t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c81f956eb8a1e565f3c9d9b080cfe1b4cc87855" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Variable&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;Variable&lt;/code&gt; 객체 의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="3cec9c867479c13040704f132cae03265271d6ae" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Variable&lt;/code&gt;/&lt;code&gt;SaveableObject&lt;/code&gt;, or a dictionary mapping names to &lt;code&gt;SaveableObject&lt;/code&gt;s. If &lt;code&gt;None&lt;/code&gt;, defaults to the list of all saveable objects.</source>
          <target state="translated">목록 &lt;code&gt;Variable&lt;/code&gt; / &lt;code&gt;SaveableObject&lt;/code&gt; , 또는에 대한 사전 매핑 이름 &lt;code&gt;SaveableObject&lt;/code&gt; 의. 만약 &lt;code&gt;None&lt;/code&gt; , 모든 저장 기능 제공 개체의 목록 기본값.</target>
        </trans-unit>
        <trans-unit id="829ed0c13d030d5c04f4d7fbd8f5a41fccc6f656" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;_TPUSharedEmbeddingColumnV2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;_TPUSharedEmbeddingColumnV2&lt;/code&gt; 의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="161450a920946c9a58d15441dd5c2336d6ed7618" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;floats&lt;/code&gt; that has length &amp;gt;= 4. Pooling ratio for each dimension of &lt;code&gt;value&lt;/code&gt;, currently only supports row and col dimension and should be &amp;gt;= 1.0. For example, a valid pooling ratio looks like [1.0, 1.44, 1.73, 1.0]. The first and last elements must be 1.0 because we don't allow pooling on batch and channels dimensions. 1.44 and 1.73 are pooling ratio on height and width dimensions respectively.</source>
          <target state="translated">길이가 4 보다 큰 &lt;code&gt;floats&lt;/code&gt; 목록입니다. &lt;code&gt;value&lt;/code&gt; 의 각 차원에 대한 풀링 비율은 현재 행 및 열 차원 만 지원하며&amp;gt; = 1.0이어야합니다. 예를 들어 유효한 풀링 비율은 [1.0, 1.44, 1.73, 1.0]과 같습니다. 배치 및 채널 차원에서 풀링을 허용하지 않으므로 첫 번째 및 마지막 요소는 1.0이어야합니다. 1.44 및 1.73은 각각 높이 및 너비 치수에 대한 풀링 비율입니다.</target>
        </trans-unit>
        <trans-unit id="30b2dfd4daf52fe11cfb0903116de10b679d8f5e" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;floats&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 4&lt;/code&gt;. Pooling ratio for each dimension of &lt;code&gt;value&lt;/code&gt;, currently only supports row and col dimension and should be &amp;gt;= 1.0. For example, a valid pooling ratio looks like [1.0, 1.44, 1.73, 1.0]. The first and last elements must be 1.0 because we don't allow pooling on batch and channels dimensions. 1.44 and 1.73 are pooling ratio on height and width dimensions respectively.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 4&lt;/code&gt; &lt;code&gt;floats&lt;/code&gt; 목록 . &lt;code&gt;value&lt;/code&gt; 의 각 차원에 대한 풀링 비율은 현재 행 및 열 차원 만 지원하며&amp;gt; = 1.0이어야합니다. 예를 들어 유효한 풀링 비율은 [1.0, 1.44, 1.73, 1.0]과 같습니다. 배치 및 채널 차원에서 풀링을 허용하지 않으므로 첫 번째 및 마지막 요소는 1.0이어야합니다. 1.44 및 1.73은 각각 높이 및 너비 치수에 대한 풀링 비율입니다.</target>
        </trans-unit>
        <trans-unit id="325e745b87f243029b13d24f7d7f8f32a315a323" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;floats&lt;/code&gt;. A sorted list of floats gives the boundary of the buckets.</source>
          <target state="translated">&lt;code&gt;floats&lt;/code&gt; 목록 . 정렬 된 float 목록은 버킷의 경계를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e98d34bd35f9fd3635a70f1c336debb0bd2c063c" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 1&lt;/code&gt;.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 1&lt;/code&gt; &lt;code&gt;ints&lt;/code&gt; 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="c13ef6231415166364ff64a25f2cedd77fdb145d" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 4&lt;/code&gt;. 1-D of length 4. The input stride for atrous morphological dilation. Must be: &lt;code&gt;[1, rate_height, rate_width, 1]&lt;/code&gt;.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 4&lt;/code&gt; &lt;code&gt;ints&lt;/code&gt; 목록입니다 . 길이 4의 1-D. 격렬한 형태 학적 확장을위한 입력 보폭. &lt;code&gt;[1, rate_height, rate_width, 1]&lt;/code&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="747772e42c48f9b1f39e80fb973d70c33e80d00b" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 4&lt;/code&gt;. 1-D of length 4. The stride of the sliding window for each dimension of the input tensor. Must be: &lt;code&gt;[1, stride_height, stride_width, 1]&lt;/code&gt;.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 4&lt;/code&gt; &lt;code&gt;ints&lt;/code&gt; 목록입니다 . 길이 4의 1-D. 입력 텐서의 각 차원에 대한 슬라이딩 창의 보폭. &lt;code&gt;[1, stride_height, stride_width, 1]&lt;/code&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="cfdb12714a447a29b599e0b568a2047f984bf270" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 4&lt;/code&gt;. How far the centers of two consecutive patches are in the images. Must be: &lt;code&gt;[1, stride_rows, stride_cols, 1]&lt;/code&gt;.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 4&lt;/code&gt; &lt;code&gt;ints&lt;/code&gt; 목록입니다 . 연속 된 두 패치의 중심이 이미지에서 얼마나 멀리 떨어져 있는지. &lt;code&gt;[1, stride_rows, stride_cols, 1]&lt;/code&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="2e7266bf03119dcca911bb1a76d390eb119173f8" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 4&lt;/code&gt;. Must be: &lt;code&gt;[1, rate_rows, rate_cols, 1]&lt;/code&gt;. This is the input stride, specifying how far two consecutive patch samples are in the input. Equivalent to extracting patches with &lt;code&gt;patch_sizes_eff = patch_sizes + (patch_sizes - 1) * (rates - 1)&lt;/code&gt;, followed by subsampling them spatially by a factor of &lt;code&gt;rates&lt;/code&gt;. This is equivalent to &lt;code&gt;rate&lt;/code&gt; in dilated (a.k.a. Atrous) convolutions.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 4&lt;/code&gt; &lt;code&gt;ints&lt;/code&gt; 목록입니다 . &lt;code&gt;[1, rate_rows, rate_cols, 1]&lt;/code&gt; 이어야합니다 . 이것은 입력에서 두 개의 연속적인 패치 샘플이 얼마나 멀리 떨어져 있는지 지정하는 입력 보폭입니다. &lt;code&gt;patch_sizes_eff = patch_sizes + (patch_sizes - 1) * (rates - 1)&lt;/code&gt; 을 사용하여 패치를 추출한 다음 &lt;code&gt;rates&lt;/code&gt; 계수로 공간적으로 서브 샘플링하는 것과 같습니다 . 이것은 확장 된 (일명 Atrous) 컨볼 루션의 &lt;code&gt;rate&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="83de24e20789c08a545d80a27559de1adf491c11" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 4&lt;/code&gt;. The input stride for atrous morphological dilation. Must be: &lt;code&gt;[1, rate_height, rate_width, 1]&lt;/code&gt;.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 4&lt;/code&gt; &lt;code&gt;ints&lt;/code&gt; 목록입니다 . atrous morphological dilation을위한 입력 보폭. &lt;code&gt;[1, rate_height, rate_width, 1]&lt;/code&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="d4f7f5c5fbcdded1bde7dd3b843387f0200ff853" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 4&lt;/code&gt;. The size of the sliding window for each dimension of &lt;code&gt;images&lt;/code&gt;.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 4&lt;/code&gt; &lt;code&gt;ints&lt;/code&gt; 목록입니다 . &lt;code&gt;images&lt;/code&gt; 각 차원에 대한 슬라이딩 창의 크기입니다 .</target>
        </trans-unit>
        <trans-unit id="c8fcf7ced67a38290e0ec7a4cb7896c0d629c1c6" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 4&lt;/code&gt;. The size of the sliding window for each dimension of &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 4&lt;/code&gt; &lt;code&gt;ints&lt;/code&gt; 목록입니다 . &lt;code&gt;value&lt;/code&gt; 의 각 차원에 대한 슬라이딩 창의 크기입니다 .</target>
        </trans-unit>
        <trans-unit id="7034f603543e16b05ee5c4da1d7e1c65839188d9" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 4&lt;/code&gt;. The size of the sliding window for each dimension of the input.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 4&lt;/code&gt; &lt;code&gt;ints&lt;/code&gt; 목록입니다 . 입력의 각 차원에 대한 슬라이딩 창의 크기입니다.</target>
        </trans-unit>
        <trans-unit id="17b152e806c382935df1b0d86524d3e1c6eccb6d" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 4&lt;/code&gt;. The size of the window for each dimension of the input tensor.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 4&lt;/code&gt; &lt;code&gt;ints&lt;/code&gt; 목록입니다 . 입력 텐서의 각 차원에 대한 창의 크기입니다.</target>
        </trans-unit>
        <trans-unit id="70579d087f015b35b705db7311ff2bb52eb451d7" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 4&lt;/code&gt;. The stride of the sliding window for each dimension of &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 4&lt;/code&gt; &lt;code&gt;ints&lt;/code&gt; 목록입니다 . &lt;code&gt;value&lt;/code&gt; 의 각 차원에 대한 슬라이딩 윈도우의 보폭입니다 .</target>
        </trans-unit>
        <trans-unit id="e3133cd62de14ce7dcb233ceadac0601971bbf9d" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 4&lt;/code&gt;. The stride of the sliding window for each dimension of the input tensor.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 4&lt;/code&gt; &lt;code&gt;ints&lt;/code&gt; 목록입니다 . 입력 텐서의 각 차원에 대한 슬라이딩 윈도우의 보폭입니다.</target>
        </trans-unit>
        <trans-unit id="449cb23a6ee74142a9aac6ad112782104c09e91b" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 4&lt;/code&gt;. The stride of the sliding window for each dimension of the input tensor. Must be: &lt;code&gt;[1, stride_height, stride_width, 1]&lt;/code&gt;.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 4&lt;/code&gt; &lt;code&gt;ints&lt;/code&gt; 목록입니다 . 입력 텐서의 각 차원에 대한 슬라이딩 윈도우의 보폭입니다. &lt;code&gt;[1, stride_height, stride_width, 1]&lt;/code&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="1627d08def98f53c6cf30f4d67cbea492bb60b27" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 4&lt;/code&gt;. The stride of the sliding window for each dimension of the input.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 4&lt;/code&gt; &lt;code&gt;ints&lt;/code&gt; 목록입니다 . 입력의 각 차원에 대한 슬라이딩 창의 보폭입니다.</target>
        </trans-unit>
        <trans-unit id="8355dca00ad3a149cea99fc85b6a7df07a529c9c" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 5&lt;/code&gt;. 1-D of length 5. How far the centers of two consecutive patches are in &lt;code&gt;input&lt;/code&gt;. Must be: &lt;code&gt;[1, stride_planes, stride_rows, stride_cols, 1]&lt;/code&gt;.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 5&lt;/code&gt; &lt;code&gt;ints&lt;/code&gt; 목록입니다 . 길이의 1-D 5. 연속 된 두 패치의 중심이 &lt;code&gt;input&lt;/code&gt; . &lt;code&gt;[1, stride_planes, stride_rows, stride_cols, 1]&lt;/code&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="79f70e020c0bd865c113f16b5ccd2f244debceca" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 5&lt;/code&gt;. 1-D tensor of length 5. The size of the window for each dimension of the input tensor. Must have &lt;code&gt;ksize[0] = ksize[4] = 1&lt;/code&gt;.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 5&lt;/code&gt; &lt;code&gt;ints&lt;/code&gt; 목록입니다 . 길이의 1 차원 텐서 5. 입력 텐서의 각 차원에 대한 창의 크기. &lt;code&gt;ksize[0] = ksize[4] = 1&lt;/code&gt; 이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="68260bd4ab45b44087631118d2be22f92a3570bc" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 5&lt;/code&gt;. 1-D tensor of length 5. The stride of the sliding window for each dimension of &lt;code&gt;input&lt;/code&gt;. Must have &lt;code&gt;strides[0] = strides[4] = 1&lt;/code&gt;.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 5&lt;/code&gt; &lt;code&gt;ints&lt;/code&gt; 목록입니다 . 길이의 1 차원 텐서 5. 각 &lt;code&gt;input&lt;/code&gt; 차원에 대한 슬라이딩 윈도우의 보폭 . &lt;code&gt;strides[0] = strides[4] = 1&lt;/code&gt; 이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="3659f571dc8fd4d0c0c11952aad2cf7f14254089" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 5&lt;/code&gt;. The size of the sliding window for each dimension of &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 5&lt;/code&gt; &lt;code&gt;ints&lt;/code&gt; 목록입니다 . &lt;code&gt;input&lt;/code&gt; 각 차원에 대한 슬라이딩 창의 크기입니다 .</target>
        </trans-unit>
        <trans-unit id="4a9aefdf9f90eac893536a18de20b17f270fab06" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ints&lt;/code&gt; 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="530b2ec3f796ff1f151fb9cf991c2287ad52805a" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt;. 1-D of length 4. The stride of the sliding window for each dimension of &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ints&lt;/code&gt; 목록입니다 . 길이의 1-D 4. 각 &lt;code&gt;input&lt;/code&gt; 차원에 대한 슬라이딩 창의 보폭 .</target>
        </trans-unit>
        <trans-unit id="1bf298814a188f776bbaa2c36cc6edb7fe0849c2" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt;. 1-D of length 4. The stride of the sliding window for each dimension of &lt;code&gt;input&lt;/code&gt;. Must be in the same order as the dimension specified with format.</source>
          <target state="translated">&lt;code&gt;ints&lt;/code&gt; 목록입니다 . 길이의 1-D 4. 각 &lt;code&gt;input&lt;/code&gt; 차원에 대한 슬라이딩 창의 보폭 . format으로 지정된 차원과 동일한 순서 여야합니다.</target>
        </trans-unit>
        <trans-unit id="c144b4a1a2e0f651df017c71ac7060b67d94c7aa" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt;. 1-D tensor of length 4. The stride of the sliding window for each dimension of &lt;code&gt;input&lt;/code&gt;. The dimension order is determined by the value of &lt;code&gt;data_format&lt;/code&gt;, see below for details.</source>
          <target state="translated">&lt;code&gt;ints&lt;/code&gt; 목록입니다 . 길이 4의 1 차원 텐서 . 각 &lt;code&gt;input&lt;/code&gt; 차원에 대한 슬라이딩 윈도우의 보폭 . 차원 순서는 &lt;code&gt;data_format&lt;/code&gt; 값에 의해 결정됩니다 . 자세한 내용은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4079972bfb9822738680f4589844dc1d2034db54" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt;. A list of integers specifying the identifier of the embedding table (offset of TableDescriptor in the TPUEmbeddingConfiguration) to lookup the corresponding input. The ith input is looked up using table_ids[i]. The size of the table_ids list must be equal to that of sample_indices, embedding_indices and aggregation_weights.</source>
          <target state="translated">&lt;code&gt;ints&lt;/code&gt; 목록입니다 . 해당 입력을 조회하기 위해 임베딩 테이블의 식별자 (TPUEmbeddingConfiguration의 TableDescriptor 오프셋)를 지정하는 정수 목록입니다. i 번째 입력은 table_ids [i]를 사용하여 조회됩니다. table_ids 목록의 크기는 sample_indices, embedding_indices 및 aggregate_weights의 크기와 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="88de06857ff8be3fe26e2e82cd220c0abbe4becc" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt;. List of stride values.</source>
          <target state="translated">&lt;code&gt;ints&lt;/code&gt; 목록입니다 . 보폭 값 목록.</target>
        </trans-unit>
        <trans-unit id="2faf5ab2cade5ebaa29597d91bc1b937c351b45a" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt;. The key used to seed the hash function, passed as a list of two uint64 elements.</source>
          <target state="translated">&lt;code&gt;ints&lt;/code&gt; 목록입니다 . 해시 함수를 시드하는 데 사용되는 키로, 두 개의 uint64 요소 목록으로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="b180f1bee8a081108e37d8c1bb9cc799dde81767" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt;. The size of the window for each dimension of the input tensor. The length must be 4 to match the number of dimensions of the input.</source>
          <target state="translated">&lt;code&gt;ints&lt;/code&gt; 목록입니다 . 입력 텐서의 각 차원에 대한 창의 크기입니다. 입력의 차원 수와 일치하려면 길이가 4 여야합니다.</target>
        </trans-unit>
        <trans-unit id="47a0c41ea3f6c2b400f42b2a2567a3deca8f1cf4" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt;. The sizes of the ngrams to create.</source>
          <target state="translated">&lt;code&gt;ints&lt;/code&gt; 목록입니다 . 생성 할 ngram의 크기입니다.</target>
        </trans-unit>
        <trans-unit id="8ae59c61d5f55f93e226ab241f47e763f10ae94f" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt;. The stride of the sliding window for each dimension of the input of the convolution.</source>
          <target state="translated">&lt;code&gt;ints&lt;/code&gt; 목록입니다 . 컨볼 루션 입력의 각 차원에 대한 슬라이딩 윈도우의 보폭입니다.</target>
        </trans-unit>
        <trans-unit id="1e4db6f7c0914df4f2442f1eefbdf04115441903" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt;. The stride of the sliding window for each dimension of the input of the convolution. Must be in the same order as the dimension specified with format.</source>
          <target state="translated">&lt;code&gt;ints&lt;/code&gt; 목록입니다 . 컨볼 루션 입력의 각 차원에 대한 슬라이딩 윈도우의 보폭입니다. format으로 지정된 차원과 동일한 순서 여야합니다.</target>
        </trans-unit>
        <trans-unit id="d46a8718b3e06cddfd8fe0f94870db8662f3d59f" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt;. The stride of the sliding window for each dimension of the input tensor.</source>
          <target state="translated">&lt;code&gt;ints&lt;/code&gt; 목록입니다 . 입력 텐서의 각 차원에 대한 슬라이딩 윈도우의 보폭입니다.</target>
        </trans-unit>
        <trans-unit id="0a9e5bcba2ce49532f69c5c951e51ca26e407104" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt;. The stride of the sliding window for each dimension of the input tensor. The length must be 4 to match the number of dimensions of the input.</source>
          <target state="translated">&lt;code&gt;ints&lt;/code&gt; 목록입니다 . 입력 텐서의 각 차원에 대한 슬라이딩 윈도우의 보폭입니다. 입력의 차원 수와 일치하려면 길이가 4 여야합니다.</target>
        </trans-unit>
        <trans-unit id="571a37e8717073bd9103a43d4c989634f2780627" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;ints&lt;/code&gt;. list of stride values.</source>
          <target state="translated">&lt;code&gt;ints&lt;/code&gt; 목록입니다 . 보폭 값 목록.</target>
        </trans-unit>
        <trans-unit id="f434c6725f5b6aefd02b82cd6da7a383872abfa0" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;num&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; objects with the same type as &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 와 동일한 유형을 가진 &lt;code&gt;num&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 객체 의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="0dfc5e61eb56aa342d32eda7f31a16dee12ec41c" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;num_features&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형 의 &lt;code&gt;num_features&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="08a5b062d2d0b84b453f87c9d703318d0c31973d" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;num_outputs&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형 의 &lt;code&gt;num_outputs&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="0754283bdc2d82ddc79f906d9befe1fccd59ff34" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;num_params&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; objects with the same type as &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; 와 동일한 유형을 가진 &lt;code&gt;num_params&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 객체 의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="ac40504d78a513db52abe040b4f19bb9daffd787" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;num_params_biases&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; objects with the same type as &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; 와 동일한 유형을 가진 &lt;code&gt;num_params_biases&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 객체 의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="48b751ce194b34bd6cab6eb5cb6f8bc031b6b4f1" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;num_params_weights&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; objects with the same type as &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; 와 동일한 유형을 가진 &lt;code&gt;num_params_weights&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 객체 의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="e17937ea86b059b133ad000044ace83cb9e3145f" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;num_partitions&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; objects with the same type as &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; 와 동일한 유형 의 &lt;code&gt;num_partitions&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 오브젝트 목록 .</target>
        </trans-unit>
        <trans-unit id="b93f62a6acb16cd9411f1a2746d1f44737a63686" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;num_replicas&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; objects with the same type as &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; 과 동일한 유형을 가진 &lt;code&gt;num_replicas&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 객체 의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="90a0dd68403f7f40601ceb758b899b353c59b103" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;num_sparse&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;int64&lt;/code&gt; 유형 의 &lt;code&gt;num_sparse&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="a2ddef4c12cacf974988c7290dfb051b1c04d846" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;num_split&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; objects with the same type as &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 와 동일한 유형을 가진 &lt;code&gt;num_split&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 객체 의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="316f1eb017ad332707d55a96b2e1bd80bf84d923" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;num_split&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; objects with the same type as &lt;code&gt;values&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;values&lt;/code&gt; 과 유형이 같은 &lt;code&gt;num_split&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 객체 의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="f0149c498655236ec00c39dc3e7adde2bb407681" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;num_split&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;int64&lt;/code&gt; 유형 의 &lt;code&gt;num_split&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="32d95c8d161a6b816f9b9c67c56dd6b00f015510" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;output_ragged_rank&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;Tsplits&lt;/code&gt;.</source>
          <target state="translated">목록 &lt;code&gt;output_ragged_rank&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 유형의 개체 &lt;code&gt;Tsplits&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bdfdc0b8ef8d856bc91c022dd392bc92c0ec3d4d" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;string&lt;/code&gt; for prediction keys. Defaults to &lt;code&gt;None&lt;/code&gt;, meaning if not specified, predictions will be created for all the pre-defined valid keys in the head.</source>
          <target state="translated">예측 키 의 &lt;code&gt;string&lt;/code&gt; 목록입니다 . 기본값은 &lt;code&gt;None&lt;/code&gt; 입니다 . 지정하지 않으면 헤드의 모든 사전 정의 된 유효한 키에 대한 예측이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="b47ec89a452652d86e9054873984c16c6ed71ddc" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;string&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; objects containing serialized &lt;code&gt;Summary&lt;/code&gt; protocol buffers.</source>
          <target state="translated">직렬화 된 &lt;code&gt;Summary&lt;/code&gt; 프로토콜 버퍼를 포함하는 &lt;code&gt;string&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="c85667eb79358f3208df13ee91fa5aa8292fc04e" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;strings&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 1&lt;/code&gt;.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 1&lt;/code&gt; &lt;code&gt;strings&lt;/code&gt; 목록 .</target>
        </trans-unit>
        <trans-unit id="456d3f879b4e9eee2809ae1af7903753e083991f" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;strings&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 1&lt;/code&gt;. A list of devices the iterator works across.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 1&lt;/code&gt; &lt;code&gt;strings&lt;/code&gt; 목록 . 반복기가 작동하는 장치 목록입니다.</target>
        </trans-unit>
        <trans-unit id="fb5b0076da64f42601809f45a6a83d204236be2b" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;strings&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;strings&lt;/code&gt; 목록 .</target>
        </trans-unit>
        <trans-unit id="925661b9d9b5702d656e50070a8f4cd363a4c91f" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;strings&lt;/code&gt;. A list of &lt;code&gt;num_sparse&lt;/code&gt; strings. The keys expected in the Examples' features associated with sparse values.</source>
          <target state="translated">&lt;code&gt;strings&lt;/code&gt; 목록 . &lt;code&gt;num_sparse&lt;/code&gt; 문자열 목록입니다 . 희소 값과 관련된 예제의 기능에서 예상되는 키입니다.</target>
        </trans-unit>
        <trans-unit id="6b4abf968a05c95936f58af18cdc79dd767e3dab" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;strings&lt;/code&gt;. A list of Ncontext_dense string Tensors (scalars). The keys expected in the SequenceExamples' context features associated with dense values.</source>
          <target state="translated">&lt;code&gt;strings&lt;/code&gt; 목록 . Ncontext_dense 문자열 텐서 (스칼라) 목록입니다. 조밀 한 값과 관련된 SequenceExamples의 컨텍스트 기능에서 예상되는 키입니다.</target>
        </trans-unit>
        <trans-unit id="68a9f919d8e5000266e2c3e6029f7e8e355bf48a" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;strings&lt;/code&gt;. A list of Ncontext_sparse string Tensors (scalars). The keys expected in the Examples' features associated with context_sparse values.</source>
          <target state="translated">&lt;code&gt;strings&lt;/code&gt; 목록 . Ncontext_sparse 문자열 텐서 (스칼라) 목록입니다. context_sparse 값과 관련된 예제 기능에서 예상되는 키입니다.</target>
        </trans-unit>
        <trans-unit id="1192f72e1d9bbf6db7a930bd256e5649cdf107d7" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;strings&lt;/code&gt;. A list of Ndense string Tensors (scalars). The keys expected in the Examples features associated with dense values.</source>
          <target state="translated">&lt;code&gt;strings&lt;/code&gt; 목록 . Ndense 문자열 텐서 (스칼라) 목록입니다. 밀도 값과 관련된 예제 기능에서 예상되는 키입니다.</target>
        </trans-unit>
        <trans-unit id="118c039dbbb3a427df2b5f9605944144f2f3339d" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;strings&lt;/code&gt;. A list of Nfeature_list_dense string Tensors (scalars). The keys expected in the SequenceExamples' feature_lists associated with lists of dense values.</source>
          <target state="translated">&lt;code&gt;strings&lt;/code&gt; 목록 . Nfeature_list_dense 문자열 텐서 (스칼라)의 목록입니다. 조밀 한 값 목록과 관련된 SequenceExamples의 feature_lists에서 예상되는 키입니다.</target>
        </trans-unit>
        <trans-unit id="afe7db06aa717a28439eb4b0a5510112f463a544" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;strings&lt;/code&gt;. A list of Nfeature_list_sparse string Tensors (scalars). The keys expected in the FeatureLists associated with sparse values.</source>
          <target state="translated">&lt;code&gt;strings&lt;/code&gt; 목록 . Nfeature_list_sparse 문자열 텐서 (스칼라) 목록입니다. 희소 값과 관련된 FeatureLists에서 예상되는 키입니다.</target>
        </trans-unit>
        <trans-unit id="fe930a09b8e03e89453294e15090914ec3c3cf91" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;strings&lt;/code&gt;. A list of string keys in the examples features. The results for these keys will be returned as &lt;code&gt;SparseTensor&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;strings&lt;/code&gt; 목록 . 예제 기능의 문자열 키 목록입니다. 이러한 키의 결과는 &lt;code&gt;SparseTensor&lt;/code&gt; 개체 로 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="e4c34fcb1b616d0aa18e8c8b1ea16f8de82daec8" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;strings&lt;/code&gt;. A vector listing the FeatureList keys which may be missing from the SequenceExamples. If the associated FeatureList is missing, it is treated as empty. By default, any FeatureList not listed in this vector must exist in the SequenceExamples.</source>
          <target state="translated">&lt;code&gt;strings&lt;/code&gt; 목록 . SequenceExamples에서 누락 될 수있는 FeatureList 키를 나열하는 벡터입니다. 연결된 FeatureList가 없으면 비어있는 것으로 처리됩니다. 기본적으로이 벡터에 나열되지 않은 FeatureList는 SequenceExamples에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="28d19d72b57bc8b5648159e4258bc86a63936050" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;strings&lt;/code&gt;. List of strings containing proto field names.</source>
          <target state="translated">&lt;code&gt;strings&lt;/code&gt; 목록 . proto 필드 이름을 포함하는 문자열 목록입니다.</target>
        </trans-unit>
        <trans-unit id="cd5b56f22b6180db2abeb13a6fca26025128e206" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;strings&lt;/code&gt;. List of strings containing proto field names. An extension field can be decoded by using its full name, e.g. EXT_PACKAGE.EXT_FIELD_NAME.</source>
          <target state="translated">&lt;code&gt;strings&lt;/code&gt; 목록 . proto 필드 이름을 포함하는 문자열 목록입니다. 확장 필드는 전체 이름 (예 : EXT_PACKAGE.EXT_FIELD_NAME)을 사용하여 디코딩 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de06ba5632f78417d14a27bd5fcde261357df876" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;strings&lt;/code&gt;. The keys expected in the Examples' features associated with dense values.</source>
          <target state="translated">&lt;code&gt;strings&lt;/code&gt; 목록 . 조밀 한 값과 관련된 예제의 기능에서 예상되는 키입니다.</target>
        </trans-unit>
        <trans-unit id="da6eb52259c6e7bdcfcc4acba32689bbfaa679e4" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;strings&lt;/code&gt;. The types of the row partition tensors. At present, these can be:</source>
          <target state="translated">&lt;code&gt;strings&lt;/code&gt; 목록 . 행 파티션 텐서의 유형입니다. 현재 다음이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4a2a308fbd000f84f10a3a674e8bf45852596fa" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;sum(dy/dx)&lt;/code&gt; for each x in &lt;code&gt;xs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;xs&lt;/code&gt; 의 각 x에 대한 &lt;code&gt;sum(dy/dx)&lt;/code&gt; 목록 .</target>
        </trans-unit>
        <trans-unit id="6f806107ae6a195b1b8b15b5309139d7625f987c" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;tf.DTypes&lt;/code&gt; from: &lt;code&gt;tf.float32, tf.int64, tf.string&lt;/code&gt;. A list of &lt;code&gt;DTypes&lt;/code&gt; of the same length as &lt;code&gt;sparse_keys&lt;/code&gt;. Only &lt;a href=&quot;../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;FloatList&lt;/code&gt;), &lt;a href=&quot;../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;Int64List&lt;/code&gt;), and &lt;a href=&quot;../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;BytesList&lt;/code&gt;) are supported.</source>
          <target state="translated">목록 &lt;code&gt;tf.DTypes&lt;/code&gt; :에서 &lt;code&gt;tf.float32, tf.int64, tf.string&lt;/code&gt; . 목록 &lt;code&gt;DTypes&lt;/code&gt; 과 같은 길이의 &lt;code&gt;sparse_keys&lt;/code&gt; . 만 &lt;a href=&quot;../../tf#float32&quot;&gt; &lt;code&gt;tf.float32&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;FloatList&lt;/code&gt; ), &lt;a href=&quot;../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;Int64List&lt;/code&gt; ), 및 &lt;a href=&quot;../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;BytesList&lt;/code&gt; 는 ) 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="7245a17e4a4679a45c258979e13c6a1bf7c20ddf" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;tf.DTypes&lt;/code&gt; from: &lt;code&gt;tf.float32, tf.int64, tf.string&lt;/code&gt;. A list of &lt;code&gt;num_ragged&lt;/code&gt; types; the data types of data in each Feature given in ragged_keys (where &lt;code&gt;num_ragged = sparse_keys.size()&lt;/code&gt;). Currently the ParseExample supports DT_FLOAT (FloatList), DT_INT64 (Int64List), and DT_STRING (BytesList).</source>
          <target state="translated">목록 &lt;code&gt;tf.DTypes&lt;/code&gt; :에서 &lt;code&gt;tf.float32, tf.int64, tf.string&lt;/code&gt; . &lt;code&gt;num_ragged&lt;/code&gt; 유형 목록입니다 . ragged_keys (여기서 &lt;code&gt;num_ragged = sparse_keys.size()&lt;/code&gt; )에 지정된 각 지형지 물의 데이터 유형 . 현재 ParseExample은 DT_FLOAT (FloatList), DT_INT64 (Int64List) 및 DT_STRING (BytesList)을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="0a29c0d5cf7bd41f07210ee096fc12b757d95557" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;tf.DTypes&lt;/code&gt; from: &lt;code&gt;tf.float32, tf.int64, tf.string&lt;/code&gt;. A list of &lt;code&gt;num_sparse&lt;/code&gt; types; the data types of data in each Feature given in sparse_keys. Currently the ParseExample supports DT_FLOAT (FloatList), DT_INT64 (Int64List), and DT_STRING (BytesList).</source>
          <target state="translated">목록 &lt;code&gt;tf.DTypes&lt;/code&gt; :에서 &lt;code&gt;tf.float32, tf.int64, tf.string&lt;/code&gt; . &lt;code&gt;num_sparse&lt;/code&gt; 유형 목록입니다 . sparse_keys에 제공된 각 기능의 데이터 유형. 현재 ParseExample은 DT_FLOAT (FloatList), DT_INT64 (Int64List) 및 DT_STRING (BytesList)을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="c1a949afc2c45257feeb419f173d49023724f657" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;tf.DTypes&lt;/code&gt; from: &lt;code&gt;tf.float32, tf.int64, tf.string&lt;/code&gt;. A list of &lt;code&gt;num_sparse&lt;/code&gt; types; the data types of data in each Feature given in sparse_keys. Currently the ParseSingleExample op supports DT_FLOAT (FloatList), DT_INT64 (Int64List), and DT_STRING (BytesList).</source>
          <target state="translated">목록 &lt;code&gt;tf.DTypes&lt;/code&gt; :에서 &lt;code&gt;tf.float32, tf.int64, tf.string&lt;/code&gt; . &lt;code&gt;num_sparse&lt;/code&gt; 유형 목록입니다 . sparse_keys에 제공된 각 기능의 데이터 유형. 현재 ParseSingleExample 작업은 DT_FLOAT (FloatList), DT_INT64 (Int64List) 및 DT_STRING (BytesList)을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="eecf984be0c4430b5ed43667cd13a3444f49ef15" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;tf.DTypes&lt;/code&gt; from: &lt;code&gt;tf.float32, tf.int64, tf.string&lt;/code&gt;. A list of Nsparse types; the data types of data in each Feature given in sparse_keys. Currently the ParseExample supports DT_FLOAT (FloatList), DT_INT64 (Int64List), and DT_STRING (BytesList).</source>
          <target state="translated">목록 &lt;code&gt;tf.DTypes&lt;/code&gt; :에서 &lt;code&gt;tf.float32, tf.int64, tf.string&lt;/code&gt; . Nsparse 유형 목록입니다. sparse_keys에 제공된 각 기능의 데이터 유형. 현재 ParseExample은 DT_FLOAT (FloatList), DT_INT64 (Int64List) 및 DT_STRING (BytesList)을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="ef4fd0d75d3ce457dc61680be84831cf39935c85" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;tf.DTypes&lt;/code&gt; from: &lt;code&gt;tf.int32, tf.int64&lt;/code&gt;. A list of &lt;code&gt;num_ragged&lt;/code&gt; types; the data types of row_splits in each Feature given in ragged_keys (where &lt;code&gt;num_ragged = sparse_keys.size()&lt;/code&gt;). May be DT_INT32 or DT_INT64.</source>
          <target state="translated">&lt;code&gt;tf.DTypes&lt;/code&gt; 목록 : &lt;code&gt;tf.int32, tf.int64&lt;/code&gt; . &lt;code&gt;num_ragged&lt;/code&gt; 유형 목록입니다 . ragged_keys (여기서 &lt;code&gt;num_ragged = sparse_keys.size()&lt;/code&gt; )에 제공된 각 기능의 row_splits 데이터 유형 . DT_INT32 또는 DT_INT64 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="71b2fcc96dbc61a5496e5a14bc9d040db359b02a" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;tf.DTypes&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 1&lt;/code&gt;.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 1&lt;/code&gt; &lt;code&gt;tf.DTypes&lt;/code&gt; 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="93e8d490fc0b90f0f0860a83e8d7bcad06c73d87" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;tf.DTypes&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 1&lt;/code&gt;. A list of types.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 1&lt;/code&gt; &lt;code&gt;tf.DTypes&lt;/code&gt; 목록입니다 . 유형 목록입니다.</target>
        </trans-unit>
        <trans-unit id="2f660b817ae5450d11e58e1374d46ce19e04d203" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;tf.DTypes&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 1&lt;/code&gt;. The element types of each element in &lt;code&gt;outputs&lt;/code&gt;.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 1&lt;/code&gt; &lt;code&gt;tf.DTypes&lt;/code&gt; 목록입니다 . &lt;code&gt;outputs&lt;/code&gt; 에있는 각 요소의 요소 유형 .</target>
        </trans-unit>
        <trans-unit id="915390ae49054f5576e7c48fdb8c0696275d27a8" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;tf.DTypes&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 1&lt;/code&gt;. The type list for the return values.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 1&lt;/code&gt; &lt;code&gt;tf.DTypes&lt;/code&gt; 목록입니다 . 반환 값의 유형 목록입니다.</target>
        </trans-unit>
        <trans-unit id="8a34e747b1e897276dec0f9aec0bc70cbff7f2a0" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;tf.DTypes&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 1&lt;/code&gt;. The type of each component in a tuple.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 1&lt;/code&gt; &lt;code&gt;tf.DTypes&lt;/code&gt; 목록입니다 . 튜플의 각 구성 요소 유형입니다.</target>
        </trans-unit>
        <trans-unit id="e532969ec258bbd80374c9b9feb2c0870bd58197" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;tf.DTypes&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 1&lt;/code&gt;. The type of each component in a value.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 1&lt;/code&gt; &lt;code&gt;tf.DTypes&lt;/code&gt; 목록입니다 . 값에있는 각 구성 요소의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="2dd5ee8caf5c27d138c7ba399d3d3c7e7e3bec7c" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;tf.DTypes&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 1&lt;/code&gt;. shape {N}. The list of expected dtype for the tensors. Must match those stored in the checkpoint.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 1&lt;/code&gt; &lt;code&gt;tf.DTypes&lt;/code&gt; 목록입니다 . {N} 모양. 텐서의 예상 dtype 목록입니다. 체크 포인트에 저장된 것과 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="15deff569094668942aa424d6431a35a9f419aa1" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;tf.DTypes&lt;/code&gt; that has length &lt;code&gt;&amp;gt;= 1&lt;/code&gt;. the type list for the input list.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 1&lt;/code&gt; &lt;code&gt;tf.DTypes&lt;/code&gt; 목록입니다 . 입력 목록의 유형 목록입니다.</target>
        </trans-unit>
        <trans-unit id="9069e0ffe401d6abd387528659a755abc1bc5cca" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;tf.DTypes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tf.DTypes&lt;/code&gt; 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="49d52916f6e9e8444d25da3b8b0cdf8d7d411bac" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;tf.DTypes&lt;/code&gt;. A list of output types.</source>
          <target state="translated">&lt;code&gt;tf.DTypes&lt;/code&gt; 목록입니다 . 출력 유형 목록입니다.</target>
        </trans-unit>
        <trans-unit id="f45933d6c7cfc7be26571b3e9dd10749dfefe783" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;tf.DTypes&lt;/code&gt;. Data types of the outputs from the op. The length of the list specifies the number of outputs.</source>
          <target state="translated">&lt;code&gt;tf.DTypes&lt;/code&gt; 목록입니다 . 연산의 출력 데이터 유형. 목록의 길이는 출력 수를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="205ed1032a2788e78479392f3dc33f2b89d84e24" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;tf.DTypes&lt;/code&gt;. List of TF types to use for the respective field in field_names.</source>
          <target state="translated">&lt;code&gt;tf.DTypes&lt;/code&gt; 목록입니다 . field_names의 각 필드에 사용할 TF 유형 목록입니다.</target>
        </trans-unit>
        <trans-unit id="a416657110b28ad33a7a01f97d1293f2c6a30ccc" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;tf.DTypes&lt;/code&gt;. The types of the outputs of the function.</source>
          <target state="translated">&lt;code&gt;tf.DTypes&lt;/code&gt; 목록입니다 . 함수의 출력 유형입니다.</target>
        </trans-unit>
        <trans-unit id="3c2220b6be1e9017a8721a4ad0f7169054c777b9" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;top_paths&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;int64&lt;/code&gt; 유형 의 &lt;code&gt;top_paths&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="d40c6858cf1a28e006e98e8acbe56c4bae2412e9" translate="yes" xml:space="preserve">
          <source>A list of Dimensions, or None if the shape is unspecified.</source>
          <target state="translated">차원 목록 또는 모양이 지정되지 않은 경우 없음입니다.</target>
        </trans-unit>
        <trans-unit id="27ae5148ecdbfb6c699141dd7adffaf33495a25b" translate="yes" xml:space="preserve">
          <source>A list of Hessian matrices of &lt;code&gt;sum(ys)&lt;/code&gt; for each &lt;code&gt;x&lt;/code&gt; in &lt;code&gt;xs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;xs&lt;/code&gt; 의 각 &lt;code&gt;x&lt;/code&gt; 에 대한 &lt;code&gt;sum(ys)&lt;/code&gt; 의 헤 시안 행렬 목록 .</target>
        </trans-unit>
        <trans-unit id="0523bc3d39c2fba8f886a20095c66fdbef6fe8ac" translate="yes" xml:space="preserve">
          <source>A list of N &lt;code&gt;Tensor&lt;/code&gt;s with rank N.</source>
          <target state="translated">순위 가 N 인 N &lt;code&gt;Tensor&lt;/code&gt; 의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="4f8fc22b360cc9ce47e10cff0543aa980254a26e" translate="yes" xml:space="preserve">
          <source>A list of Numpy arrays.</source>
          <target state="translated">Numpy 배열의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="da78d060e6966cb90545bbf5c28ff0f9ebdb9c36" translate="yes" xml:space="preserve">
          <source>A list of Operations.</source>
          <target state="translated">작업 목록.</target>
        </trans-unit>
        <trans-unit id="60a0363aa77e14dcc878c79efe23c460849b24c6" translate="yes" xml:space="preserve">
          <source>A list of Python &lt;code&gt;Exception&lt;/code&gt; objects. The list is empty if no exception was captured. (No exceptions are captured when using a Coordinator.)</source>
          <target state="translated">파이썬 &lt;code&gt;Exception&lt;/code&gt; 목록 객체 . 예외가 포착되지 않으면 목록이 비어 있습니다. 코디네이터를 사용할 때 예외가 캡처되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="725bfbda2dc8ed339cb928bb3a579bae5a24afd1" translate="yes" xml:space="preserve">
          <source>A list of SupportedOp.</source>
          <target state="translated">SupportedOp의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="27858dcd3cd08df8743673fa2bd47eecea435cc0" translate="yes" xml:space="preserve">
          <source>A list of Variable objects.</source>
          <target state="translated">변수 객체의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="aa3db51df438f276add1871fe2b3df6d10f4c199" translate="yes" xml:space="preserve">
          <source>A list of Variable or Tensor objects. The variables and Tensors must be of types bfloat16, float16, float32, or float64.</source>
          <target state="translated">Variable 또는 Tensor 객체의 목록입니다. 변수와 Tensor는 bfloat16, float16, float32 또는 float64 유형이어야합니다.</target>
        </trans-unit>
        <trans-unit id="141aba6516f51dac9f11c5da07e8d66fbc10b739" translate="yes" xml:space="preserve">
          <source>A list of Variables corresponding to the slicing.</source>
          <target state="translated">슬라이싱에 해당하는 변수 목록.</target>
        </trans-unit>
        <trans-unit id="d4ca752547b2cfa6a666ce76facc24f3bba7f311" translate="yes" xml:space="preserve">
          <source>A list of Variables to warm-start. If you do not have access to the &lt;code&gt;Variable&lt;/code&gt; objects at the call site, please use the above option.</source>
          <target state="translated">웜 스타트 할 변수 목록. 콜 사이트에서 &lt;code&gt;Variable&lt;/code&gt; 개체에 액세스 할 수없는 경우 위 옵션을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="4bdaa7bb3a7224cdc529193483ec1d24307dc041" translate="yes" xml:space="preserve">
          <source>A list of additional scalar losses to be added to the training and evaluation loss, such as regularization losses. Note that, the &lt;code&gt;mode&lt;/code&gt; arg is not used in the &lt;code&gt;tf.estimator.*Head&lt;/code&gt;. If the update of the metrics doesn't rely on &lt;code&gt;mode&lt;/code&gt;, it can be safely ignored in the method signature.</source>
          <target state="translated">정규화 손실과 같이 훈련 및 평가 손실에 추가 할 추가 스칼라 손실 목록입니다. 그것을 참고 &lt;code&gt;mode&lt;/code&gt; 인수는 사용되지 않는다 &lt;code&gt;tf.estimator.*Head&lt;/code&gt; . 메트릭 업데이트가 &lt;code&gt;mode&lt;/code&gt; 에 의존하지 않는 경우 메서드 서명에서 무시해도됩니다.</target>
        </trans-unit>
        <trans-unit id="1d18cc3ab3475070c04c403185cc4357b493a5f1" translate="yes" xml:space="preserve">
          <source>A list of additional scalar losses to be added to the training loss, such as regularization losses.</source>
          <target state="translated">정규화 손실과 같이 훈련 손실에 추가 할 추가 스칼라 손실 목록입니다.</target>
        </trans-unit>
        <trans-unit id="b192651275cafc2dc541810f4058e888ab57f91d" translate="yes" xml:space="preserve">
          <source>A list of additional scalar losses to be added to the training loss, such as regularization losses. These losses are usually expressed as a batch average, so for best results, in each head, users need to use the default &lt;code&gt;loss_reduction=SUM_OVER_BATCH_SIZE&lt;/code&gt; to avoid scaling errors. Compared to the regularization losses for each head, this loss is to regularize the merged loss of all heads in multi head, and will be added to the overall training loss of multi head.</source>
          <target state="translated">정규화 손실과 같이 훈련 손실에 추가 할 추가 스칼라 손실 목록입니다. 이러한 손실은 일반적으로 배치 평균으로 표시되므로 최상의 결과를 얻으려면 각 헤드에서 사용자가 기본 &lt;code&gt;loss_reduction=SUM_OVER_BATCH_SIZE&lt;/code&gt; 를 사용하여 확장 오류를 방지해야합니다. 각 헤드의 정규화 손실과 비교하여이 손실은 멀티 헤드의 모든 헤드의 병합 손실을 정규화하기위한 것이며 멀티 헤드의 전체 훈련 손실에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="bc6c0cb36a21a39daa26090762bc7c4529f62ed0" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; object with the same type.</source>
          <target state="translated">유형이 동일한 &lt;code&gt;Tensor&lt;/code&gt; 객체가 1 개 이상 포함 된 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="f30daac05893627ff3828927a19cf303eb24fc66" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with the same type as &lt;code&gt;weights&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;weights&lt;/code&gt; 와 동일한 유형을 가진 최소 1 개의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="bdbf2c7af1a81130a15f596d24e9ce331abd9dae" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with the same type in: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;, &lt;code&gt;variant&lt;/code&gt;.</source>
          <target state="translated">동일한 유형을 가진 최소 1 개의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록 : &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;uint8&lt;/code&gt; , &lt;code&gt;int16&lt;/code&gt; , &lt;code&gt;int8&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;qint8&lt;/code&gt; , &lt;code&gt;quint8&lt;/code&gt; , &lt;code&gt;qint32&lt;/code&gt; , &lt;code&gt;bfloat16&lt;/code&gt; , &lt;code&gt;uint16&lt;/code&gt; , &lt;code&gt;complex128&lt;/code&gt; , &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;uint32&lt;/code&gt; , &lt;code&gt;uint64&lt;/code&gt; , &lt;code&gt;variant&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d88e7323de17e9dc6005246abeae5f8866e6762" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with the same type in: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. A list of &lt;code&gt;Tensor&lt;/code&gt; objects, each with same shape and type.</source>
          <target state="translated">동일한 유형을 가진 최소 1 개의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록 : &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;uint8&lt;/code&gt; , &lt;code&gt;int16&lt;/code&gt; , &lt;code&gt;int8&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;qint8&lt;/code&gt; , &lt;code&gt;quint8&lt;/code&gt; , &lt;code&gt;qint32&lt;/code&gt; , &lt;code&gt;bfloat16&lt;/code&gt; , &lt;code&gt;uint16&lt;/code&gt; , &lt;code&gt;complex128&lt;/code&gt; , &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;uint32&lt;/code&gt; , &lt;code&gt;uint64&lt;/code&gt; . 모양과 유형이 각각 같은 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="051758a6ca76f1fad975afa5132af23db0997ca2" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with the same type in: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;half&lt;/code&gt; , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; 같은 유형을 가진 최소 1 개의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록 .</target>
        </trans-unit>
        <trans-unit id="0c2bedb752a3779ebd92a3b4446870f39a63ecd7" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with the same type in: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;half&lt;/code&gt; , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; 유형이 동일한 &lt;code&gt;Tensor&lt;/code&gt; 객체가 1 개 이상 포함 된 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="00d5722d53b092ad7f68db5b120691c4a4e65b24" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with the same type in: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A list of rank 1 Tensors specifying the break points for splitting embedding_indices and aggregation_weights into rows. It corresponds to ids.row_splits in embedding_lookup(), when ids is a RaggedTensor.</source>
          <target state="translated">&lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; 유형이 동일한 &lt;code&gt;Tensor&lt;/code&gt; 객체가 1 개 이상 포함 된 목록입니다 . embedding_indices 및 aggregate_weights를 행으로 분할하기위한 중단 점을 지정하는 순위 1 텐서 목록입니다. ids가 RaggedTensor 인 경우 embedding_lookup ()의 ids.row_splits에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="c258d4c11fc7b641231e0f4f060fa83c31324b71" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with the same type in: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A list of rank 1 Tensors specifying the training example and feature to which the corresponding embedding_indices and aggregation_weights values belong. sample_indices[i] must equal b * nf + f, where nf is the number of features from the corresponding table, f is in [0, nf), and b is in [0, batch size).</source>
          <target state="translated">&lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; 유형이 동일한 &lt;code&gt;Tensor&lt;/code&gt; 객체가 1 개 이상 포함 된 목록입니다 . 해당 embedding_indices 및 aggregate_weights 값이 속하는 학습 예제 및 기능을 지정하는 순위 1 텐서 목록입니다. sample_indices [i]는 b * nf + f와 같아야합니다. 여기서 nf는 해당 테이블의 기능 수, f는 [0, nf)에, b는 [0, 배치 크기)에 있습니다.</target>
        </trans-unit>
        <trans-unit id="47dd839bcbb386bdc3e86fa49de761393c99855e" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with the same type in: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A list of rank 1 Tensors specifying the training example to which the corresponding embedding_indices and aggregation_weights values belong. It corresponds to sp_ids.indices[:,0] in embedding_lookup_sparse().</source>
          <target state="translated">&lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; 유형이 동일한 &lt;code&gt;Tensor&lt;/code&gt; 객체가 1 개 이상 포함 된 목록입니다 . 해당 embedding_indices 및 aggregate_weights 값이 속하는 학습 예제를 지정하는 순위 1 텐서 목록입니다. embedding_lookup_sparse ()의 sp_ids.indices [:, 0]에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="a52976eaa7fc6dc94eb61c3c9cdd83e85153ac64" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with the same type in: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. The &lt;code&gt;nested_row_splits&lt;/code&gt; tensors that define the row-partitioning for the &lt;code&gt;params&lt;/code&gt; RaggedTensor input.</source>
          <target state="translated">&lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; 유형이 동일한 &lt;code&gt;Tensor&lt;/code&gt; 객체가 1 개 이상 포함 된 목록입니다 . &lt;code&gt;nested_row_splits&lt;/code&gt; 의 의 행 파티셔닝 정의 텐서 &lt;code&gt;params&lt;/code&gt; RaggedTensor 입력.</target>
        </trans-unit>
        <trans-unit id="dbc4d8bb7156a431349da24745b2344e5626c016" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with the same type in: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. The &lt;code&gt;row_splits&lt;/code&gt; for the &lt;code&gt;RaggedTensor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; 유형이 동일한 &lt;code&gt;Tensor&lt;/code&gt; 객체가 1 개 이상 포함 된 목록입니다 . &lt;code&gt;row_splits&lt;/code&gt; 에 대한 &lt;code&gt;RaggedTensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2bfa0c240fc47e9925bb8b075e883a4dca7311a" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with the same type in: &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; 유형이 동일한 &lt;code&gt;Tensor&lt;/code&gt; 객체 1 개 이상 목록 .</target>
        </trans-unit>
        <trans-unit id="73a36d963eff811bd4be75580c202dfa452821a7" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with the same type.</source>
          <target state="translated">동일한 유형을 가진 최소 1 개의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="b5d5b81daf9abed24d4d958458801456c221e576" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with the same type. List of 1 or 2 Tensors.</source>
          <target state="translated">동일한 유형을 가진 최소 1 개의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 1 개 또는 2 개의 Tensor 목록.</target>
        </trans-unit>
        <trans-unit id="e514cc1748668d4526358498733f62cb55775180" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with the same type. Must be of same shape and type.</source>
          <target state="translated">동일한 유형을 가진 최소 1 개의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 모양과 유형이 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="89f644fbce604487d1689d548e5d46de85cf532b" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with the same type. Tensors to be concatenated. All must have size 1 in the first dimension and same shape.</source>
          <target state="translated">동일한 유형을 가진 최소 1 개의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 연결할 텐서. 모두 첫 번째 차원에서 크기 1과 동일한 모양을 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="ddd500eab5546b0059ef680b77ca695a3e45babc" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with the same type. The input tensors, exactly one of which will become available.</source>
          <target state="translated">동일한 유형을 가진 최소 1 개의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 입력 텐서 중 정확히 하나를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34df6bd0018d5614ab799584311cca7cedbe1d0e" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;. A TensorList of gradients with which to update embedding tables. This argument has the same length and shapes as the return value of RecvTPUEmbeddingActivations, but contains gradients of the model's loss with respect to the embedding activations. The embedding tables are updated from these gradients via the optimizer specified in the TPU embedding configuration given to tpu.initialize_system.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형의 최소 1 개의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 임베딩 테이블을 업데이트하는 데 사용할 그라디언트의 TensorList입니다. 이 인수는 RecvTPUEmbeddingActivations의 반환 값과 길이 및 모양이 동일하지만 임베딩 활성화에 대한 모델 손실의 기울기를 포함합니다. 임베딩 테이블은 tpu.initialize_system에 제공된 TPU 임베딩 구성에 지정된 최적화 프로그램을 통해 이러한 기울기에서 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="95a3a48513b831e4e623a65ad27a94bcbef993f7" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;. A list of Rank 3 tensor (#shape=[max_splits, bucket, 2]) for accumulated stats summary (gradient/hessian) per node per buckets for each feature. The first dimension of the tensor is the maximum number of splits, and thus not all elements of it will be used, but only the indexes specified by node_ids will be used.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형의 최소 1 개의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 각 기능의 버킷 당 노드 당 누적 통계 요약 (그래디언트 / 헤 시안)에 대한 순위 3 텐서 (# shape = [max_splits, bucket, 2]) 목록입니다. 텐서의 첫 번째 차원은 최대 분할 수이므로 모든 요소가 사용되지는 않지만 node_ids에 지정된 인덱스 만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a68253cad4658feba2293bedaaf0a8304832f638" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;. A list of Rank 4 tensor (#shape=[max_splits, feature_dims, bucket, stats_dims]) for accumulated stats summary (gradient/hessian) per node, per dimension, per buckets for each feature. The first dimension of the tensor is the maximum number of splits, and thus not all elements of it will be used, but only the indexes specified by node_ids will be used.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형의 최소 1 개의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 노드 별, 차원 별, 각 특성의 버킷 별 누적 통계 요약 (그래디언트 / 헤 시안)에 대한 순위 4 텐서 (# shape = [max_splits, feature_dims, bucket, stats_dims]) 목록입니다. 텐서의 첫 번째 차원은 최대 분할 수이므로 모든 요소가 사용되지는 않지만 node_ids에 지정된 인덱스 만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c46de0cf047c9d3efcdc5bbcd39c431b0361f676" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;. float; List of Rank 1 Tensors each containing the bucket boundaries for a feature.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형의 최소 1 개의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 흙손; 기능에 대한 버킷 경계를 각각 포함하는 순위 1 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="4163fdce782b984a548221ec835c9a41bdba85b0" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int32&lt;/code&gt;.</source>
          <target state="translated">유형이 &lt;code&gt;int32&lt;/code&gt; 인 최소 1 개의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="5e19b0bedab0c7d9e6145f8157873c0d2ac5c414" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int32&lt;/code&gt;. A list of 1D tensors, one for each embedding table, containing the indices into the tables.</source>
          <target state="translated">최소 1 개의 목록 &lt;code&gt;Tensor&lt;/code&gt; 유형이 &lt;code&gt;int32&lt;/code&gt; 인 Tensor 객체 . 테이블의 인덱스를 포함하는 임베딩 테이블마다 하나씩 1D 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="28edcbb940a4efb526c890bf8bb5239b115c1d37" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int32&lt;/code&gt;. A list of rank 1 Tensors containing bucket id for each feature.</source>
          <target state="translated">최소 1 개의 목록 &lt;code&gt;Tensor&lt;/code&gt; 유형이 &lt;code&gt;int32&lt;/code&gt; 인 Tensor 객체 . 각 기능의 버킷 ID를 포함하는 순위 1 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="fee22f2e75a00de06fcaaf1430be58056d171417" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int32&lt;/code&gt;. Rank 1 tensor with ids for each feature. This is the real id of the feature that will be used in the split.</source>
          <target state="translated">최소 1 개의 목록 &lt;code&gt;Tensor&lt;/code&gt; 유형이 &lt;code&gt;int32&lt;/code&gt; 인 Tensor 객체 . 각 기능에 대한 ID가있는 텐서 순위 1 개. 분할에 사용될 기능의 실제 ID입니다.</target>
        </trans-unit>
        <trans-unit id="58bbb40f160702f79e474967d4afbfbf7433a0fc" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int32&lt;/code&gt;. int32 list of Rank 1 Tensors, each containing the bucketized feature (for each feature column).</source>
          <target state="translated">최소 1 개의 목록 &lt;code&gt;Tensor&lt;/code&gt; 유형이 &lt;code&gt;int32&lt;/code&gt; 인 Tensor 객체 . 버킷 화 된 기능을 포함하는 순위 1 텐서의 int32 목록 (각 기능 열에 대해).</target>
        </trans-unit>
        <trans-unit id="64d027e3a5f6f5fe1bab08d583063831e635745f" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int64&lt;/code&gt;. A list of int64 tensors representing the desired padded shapes of the corresponding output components. These shapes may be partially specified, using &lt;code&gt;-1&lt;/code&gt; to indicate that a particular dimension should be padded to the maximum size of all batch elements.</source>
          <target state="translated">유형 이있는 최소 1 개의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록 &lt;code&gt;int64&lt;/code&gt; 인 . 해당 출력 구성 요소의 원하는 패딩 된 모양을 나타내는 int64 텐서 목록입니다. 이러한 모양은 부분적으로 지정 될 수 있으며 &lt;code&gt;-1&lt;/code&gt; 을 사용하여 특정 차원이 모든 배치 요소의 최대 크기로 채워 져야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="121536a12eb38d35d1749d79fb850f9559ae6511" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;string&lt;/code&gt;. A list of string tensors. The tensors must all have the same shape, or be scalars. Scalars may be mixed in; these will be broadcast to the shape of non-scalar inputs.</source>
          <target state="translated">최소 1 개의 &lt;code&gt;Tensor&lt;/code&gt; 목록유형이 &lt;code&gt;string&lt;/code&gt; 인 객체 . 문자열 텐서 목록입니다. 텐서는 모두 같은 모양이거나 스칼라 여야합니다. 스칼라가 혼합 될 수 있습니다. 이들은 비 스칼라 입력의 형태로 브로드 캐스트됩니다.</target>
        </trans-unit>
        <trans-unit id="18ffdde05d0ed83885cb750d82b0286ef4e0f73f" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;string&lt;/code&gt;. Can be of any shape. Each must contain serialized &lt;code&gt;Summary&lt;/code&gt; protocol buffers.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 유형 이있는 최소 1 개의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록 . 모든 모양이 될 수 있습니다. 각각은 직렬화 된 &lt;code&gt;Summary&lt;/code&gt; 프로토콜 버퍼를 포함해야합니다 .</target>
        </trans-unit>
        <trans-unit id="00e785fbb648b17111042a241918d6407a14ce11" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;variant&lt;/code&gt;. &lt;code&gt;N&lt;/code&gt; datasets with the same type that will be interleaved according to the values of &lt;code&gt;selector_input_dataset&lt;/code&gt;.</source>
          <target state="translated">유형이 &lt;code&gt;variant&lt;/code&gt; 인 최소 1 개의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 값에 따라 인터리브 될 동일한 유형의 데이터 세트 &lt;code&gt;N&lt;/code&gt; 개 &lt;code&gt;selector_input_dataset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa1773ae605bb39c31080bc3b206440c5dd6b656" translate="yes" xml:space="preserve">
          <source>A list of at least 1 &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;variant&lt;/code&gt;. List of &lt;code&gt;N&lt;/code&gt; variant Tensors representing datasets to be zipped together.</source>
          <target state="translated">유형이 &lt;code&gt;variant&lt;/code&gt; 인 최소 1 개의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 함께 압축 할 데이터 세트를 나타내는 &lt;code&gt;N&lt;/code&gt; 변형 텐서 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="c96268dee6ca22d144d5376a700172b62a3f7e7b" translate="yes" xml:space="preserve">
          <source>A list of at least 1 mutable &lt;code&gt;Tensor&lt;/code&gt; objects with the same type. A list of ref tensors, one of which will be forwarded to &lt;code&gt;output&lt;/code&gt;.</source>
          <target state="translated">동일한 유형을 가진 최소 1 개의 변경 가능한 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . ref 텐서 목록, 그중 하나는 &lt;code&gt;output&lt;/code&gt; 으로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="f90c121b61ee9fc3578fc87e205bb4b7383871eb" translate="yes" xml:space="preserve">
          <source>A list of at least 1 mutable &lt;code&gt;Tensor&lt;/code&gt; objects with the same type. The input tensors, exactly one of which will become available.</source>
          <target state="translated">동일한 유형을 가진 최소 1 개의 변경 가능한 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 입력 텐서 중 정확히 하나를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8253b1a59a95745f591fee2b760c75adf76ca5a1" translate="yes" xml:space="preserve">
          <source>A list of at least 2 &lt;code&gt;Tensor&lt;/code&gt; objects with the same type. List of &lt;code&gt;N&lt;/code&gt; Tensors to concatenate. Their ranks and types must match, and their sizes must match in all dimensions except &lt;code&gt;concat_dim&lt;/code&gt;.</source>
          <target state="translated">유형이 동일한 2 개 이상의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 연결할 &lt;code&gt;N&lt;/code&gt; 개의 텐서 목록입니다 . 순위와 유형은 일치해야하며 크기는 &lt;code&gt;concat_dim&lt;/code&gt; 을 제외한 모든 차원에서 일치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0b6956527a70edc41a1bda9d3ecb425d15ad26c4" translate="yes" xml:space="preserve">
          <source>A list of at least 2 &lt;code&gt;Tensor&lt;/code&gt; objects with the same type. The &lt;code&gt;N&lt;/code&gt; Tensors to concatenate. Their ranks and types must match, and their sizes must match in all dimensions except &lt;code&gt;concat_dim&lt;/code&gt;.</source>
          <target state="translated">유형이 동일한 2 개 이상의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . &lt;code&gt;N&lt;/code&gt; 텐서는 연결할 수 있습니다. 순위와 유형은 일치해야하며 크기는 &lt;code&gt;concat_dim&lt;/code&gt; 을 제외한 모든 차원에서 일치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e879a20070b45eaa9736b6cdee307455dca77263" translate="yes" xml:space="preserve">
          <source>A list of at least 2 &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int32&lt;/code&gt;. The &lt;code&gt;N&lt;/code&gt; int32 vectors representing shape of tensors being concatenated.</source>
          <target state="translated">유형이 &lt;code&gt;int32&lt;/code&gt; 인 최소 2 개의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . &lt;code&gt;N&lt;/code&gt; 의 텐서의 형상을 나타내는 INT32 벡터가 연접되어있다.</target>
        </trans-unit>
        <trans-unit id="ab319b8aa88c68a388bffb207b72d2945c178e26" translate="yes" xml:space="preserve">
          <source>A list of at least 2 &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int64&lt;/code&gt;. 2-D. Indices of each input &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="translated">유형이 &lt;code&gt;int64&lt;/code&gt; 인 최소 2 개의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 . 2-D. 각 입력 &lt;code&gt;SparseTensor&lt;/code&gt; 의 인덱스입니다 .</target>
        </trans-unit>
        <trans-unit id="0cd22eaf20c78667461a88504cd3cf556a5912b1" translate="yes" xml:space="preserve">
          <source>A list of at least 2 &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;variant&lt;/code&gt;.</source>
          <target state="translated">유형이 &lt;code&gt;variant&lt;/code&gt; 인 최소 2 개의 &lt;code&gt;Tensor&lt;/code&gt; 객체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="d556871efd6548ff8bd8c782dd638051e159e035" translate="yes" xml:space="preserve">
          <source>A list of attribute the profiler node has.</source>
          <target state="translated">프로파일 러 노드의 속성 목록입니다.</target>
        </trans-unit>
        <trans-unit id="84856502ba51a7b434b4015da852abc6ecf63896" translate="yes" xml:space="preserve">
          <source>A list of categorical columns returned from &lt;code&gt;categorical_column_with_identity&lt;/code&gt;, &lt;code&gt;weighted_categorical_column&lt;/code&gt;, &lt;code&gt;categorical_column_with_vocabulary_file&lt;/code&gt;, &lt;code&gt;categorical_column_with_vocabulary_list&lt;/code&gt;, &lt;code&gt;sequence_categorical_column_with_identity&lt;/code&gt;, &lt;code&gt;sequence_categorical_column_with_vocabulary_file&lt;/code&gt;, &lt;code&gt;sequence_categorical_column_with_vocabulary_list&lt;/code&gt;</source>
          <target state="translated">범주 컬럼의 목록에서 반환 &lt;code&gt;categorical_column_with_identity&lt;/code&gt; , &lt;code&gt;weighted_categorical_column&lt;/code&gt; , &lt;code&gt;categorical_column_with_vocabulary_file&lt;/code&gt; , &lt;code&gt;categorical_column_with_vocabulary_list&lt;/code&gt; , &lt;code&gt;sequence_categorical_column_with_identity&lt;/code&gt; , &lt;code&gt;sequence_categorical_column_with_vocabulary_file&lt;/code&gt; , &lt;code&gt;sequence_categorical_column_with_vocabulary_list&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="df06b49ae6332331c744631eecf1fb3bb66c0d2d" translate="yes" xml:space="preserve">
          <source>A list of checkpoint filenames, sorted from oldest to newest.</source>
          <target state="translated">가장 오래된 것부터 최신 것까지 정렬 된 검사 점 파일 이름의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="894f567e72efa821c1d5efb29b9d5f2c223f5e49" translate="yes" xml:space="preserve">
          <source>A list of checkpoint filenames.</source>
          <target state="translated">체크 포인트 파일 이름 목록입니다.</target>
        </trans-unit>
        <trans-unit id="a68ac1daeccaff1a5e0320e6e22c925d3a219931" translate="yes" xml:space="preserve">
          <source>A list of collection names to which the Variable will be added. Note that variables will also be added to collections &lt;code&gt;tf.GraphKeys.GLOBAL_VARIABLES&lt;/code&gt; and &lt;code&gt;ops.GraphKeys.MODEL_VARIABLES&lt;/code&gt;.</source>
          <target state="translated">변수가 추가 될 컬렉션 이름 목록입니다. 변수는 &lt;code&gt;tf.GraphKeys.GLOBAL_VARIABLES&lt;/code&gt; 및 &lt;code&gt;ops.GraphKeys.MODEL_VARIABLES&lt;/code&gt; 컬렉션에도 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="cef11f85a8b51fa6cd2204217b66c9c3b5572283" translate="yes" xml:space="preserve">
          <source>A list of collection names to which the Variable will be added. Note that, variables will also be added to collections &lt;code&gt;tf.GraphKeys.GLOBAL_VARIABLES&lt;/code&gt; and &lt;code&gt;ops.GraphKeys.MODEL_VARIABLES&lt;/code&gt;.</source>
          <target state="translated">변수가 추가 될 컬렉션 이름 목록입니다. 변수는 &lt;code&gt;tf.GraphKeys.GLOBAL_VARIABLES&lt;/code&gt; 및 &lt;code&gt;ops.GraphKeys.MODEL_VARIABLES&lt;/code&gt; 컬렉션에도 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="9c1abecd64eb1d56aa5eb8eec5b9f67d1d6e2c15" translate="yes" xml:space="preserve">
          <source>A list of default values for the CSV fields. Each item in the list is either a valid CSV &lt;code&gt;DType&lt;/code&gt; (float32, float64, int32, int64, string), or a &lt;code&gt;Tensor&lt;/code&gt; object with one of the above types. One per column of CSV data, with either a scalar &lt;code&gt;Tensor&lt;/code&gt; default value for the column if it is optional, or &lt;code&gt;DType&lt;/code&gt; or empty &lt;code&gt;Tensor&lt;/code&gt; if required. If both this and &lt;code&gt;select_columns&lt;/code&gt; are specified, these must have the same lengths, and &lt;code&gt;column_defaults&lt;/code&gt; is assumed to be sorted in order of increasing column index.</source>
          <target state="translated">CSV 필드의 기본값 목록입니다. 목록의 각 항목은 유효한 CSV &lt;code&gt;DType&lt;/code&gt; (float32, float64, int32, int64, 문자열)이거나 위 유형 중 하나가 있는 &lt;code&gt;Tensor&lt;/code&gt; 객체입니다. 선택 사항 인 경우 열에 대한 스칼라 &lt;code&gt;Tensor&lt;/code&gt; 기본값을 사용 하거나 필요한 경우 &lt;code&gt;DType&lt;/code&gt; 또는 빈 &lt;code&gt;Tensor&lt;/code&gt; 를 사용하여 CSV 데이터 열당 하나씩 . this와 &lt;code&gt;select_columns&lt;/code&gt; 가 모두 지정되면 길이가 같아야하며 &lt;code&gt;column_defaults&lt;/code&gt; 는 열 인덱스가 증가하는 순서대로 정렬 된 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="e5ed544ad8fb906568861af27db59d9ddaeb1c9f" translate="yes" xml:space="preserve">
          <source>A list of dense columns that converts from sparse input. The order of results follows the ordering of &lt;code&gt;categorical_columns&lt;/code&gt;.</source>
          <target state="translated">희소 입력을 변환하는 조밀 한 열 목록입니다. 결과 순서는 &lt;code&gt;categorical_columns&lt;/code&gt; 순서를 따릅니다 .</target>
        </trans-unit>
        <trans-unit id="6ab6ea772de9890152756ad85192bc5323eefaf6" translate="yes" xml:space="preserve">
          <source>A list of devices in the session.</source>
          <target state="translated">세션의 장치 목록.</target>
        </trans-unit>
        <trans-unit id="676e0bec17c161f918770d9d05cc94c5926ca48b" translate="yes" xml:space="preserve">
          <source>A list of devices with a state &amp;amp; compute distribution policy.</source>
          <target state="translated">상태 및 계산 배포 정책이있는 장치 목록</target>
        </trans-unit>
        <trans-unit id="e0030bf54d3666754533c753d393e2de5c9b6059" translate="yes" xml:space="preserve">
          <source>A list of dictionaries containing tensor information.</source>
          <target state="translated">텐서 정보가 포함 된 사전 목록입니다.</target>
        </trans-unit>
        <trans-unit id="ef34228d3b962d1439d43f752f38349915e0897c" translate="yes" xml:space="preserve">
          <source>A list of dimensions along which to concatenate the outputs of &lt;code&gt;computation&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt;. &lt;code&gt;None&lt;/code&gt; means &quot;concatenate all outputs along dimension 0&quot;. If not &lt;code&gt;None&lt;/code&gt;, there must be one dimension per output. Ignored if &lt;code&gt;outputs_from_all_shards&lt;/code&gt; is False.</source>
          <target state="translated">&lt;code&gt;computation&lt;/code&gt; 의 출력을 연결할 차원 목록 또는 &lt;code&gt;None&lt;/code&gt; . &lt;code&gt;None&lt;/code&gt; 은 &quot;차원 0을 따라 모든 출력을 연결&quot;을 의미합니다. &lt;code&gt;None&lt;/code&gt; 이 아니라면 출력 당 하나의 차원이 있어야합니다. &lt;code&gt;outputs_from_all_shards&lt;/code&gt; 가 False 이면 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="fd8b6c288667751e55b971bcf2689a2d468c35b9" translate="yes" xml:space="preserve">
          <source>A list of dimensions along which to shard &lt;code&gt;inputs&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt;. &lt;code&gt;None&lt;/code&gt; means &quot;shard all inputs along dimension 0&quot;. If not &lt;code&gt;None&lt;/code&gt;, there must be one dimension per input.</source>
          <target state="translated">&lt;code&gt;inputs&lt;/code&gt; 을 분할 할 차원 목록 또는 &lt;code&gt;None&lt;/code&gt; . &lt;code&gt;None&lt;/code&gt; 은 &quot;차원 0을 따라 모든 입력을 분할&quot;을 의미합니다. &lt;code&gt;None&lt;/code&gt; 이 아니라면 입력 당 하나의 차원이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="e1b18e2dd965aa032859ac318c0e117b3ac50f2e" translate="yes" xml:space="preserve">
          <source>A list of filenames, sorted from oldest to newest.</source>
          <target state="translated">가장 오래된 것부터 최신 것까지 정렬 된 파일 이름 목록입니다.</target>
        </trans-unit>
        <trans-unit id="6a05df33114a802b70f74430bf5b7ae7d87f85d7" translate="yes" xml:space="preserve">
          <source>A list of floats, indicating the number of seconds since the Epoch when each checkpoint was generated.</source>
          <target state="translated">각 체크 포인트가 생성되었을 때 Epoch 이후의 시간 (초)을 나타내는 부동 소수점 목록입니다.</target>
        </trans-unit>
        <trans-unit id="2088dfcca746f6b7afcaa6a88035b5f866270c7b" translate="yes" xml:space="preserve">
          <source>A list of functions decorated with @Defun that has length &lt;code&gt;&amp;gt;= 1&lt;/code&gt;.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 1&lt;/code&gt; @Defun으로 장식 된 함수 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="8deeec7d6119f6bac4f5cc0bd7b1df886bf2bd29" translate="yes" xml:space="preserve">
          <source>A list of functions decorated with @Defun that has length &lt;code&gt;&amp;gt;= 1&lt;/code&gt;. A list of functions each of which takes 'inputs' and returns a list of tensors, whose types are the same as what every other branch returns.</source>
          <target state="translated">길이가 &lt;code&gt;&amp;gt;= 1&lt;/code&gt; @Defun으로 장식 된 함수 목록입니다 . 각각 '입력'을 취하고 다른 모든 분기가 반환하는 것과 유형이 동일한 텐서 목록을 반환하는 함수 목록입니다.</target>
        </trans-unit>
        <trans-unit id="797840eff9a8eed1f5120e88744a065030988560" translate="yes" xml:space="preserve">
          <source>A list of groups of elements. Each group of elements is a list of objects that are equal. The elements in each group must be less than the elements in the group after it. For example, these groups are totally ordered: [None], [1], [2, 2], [3]. **kwargs: optional msg keyword argument can be passed.</source>
          <target state="translated">요소 그룹 목록입니다. 각 요소 그룹은 동일한 객체 목록입니다. 각 그룹의 요소는 그 다음 그룹의 요소보다 작아야합니다. 예를 들어, 이러한 그룹은 [없음], [1], [2, 2], [3]으로 완전히 정렬됩니다. ** kwargs : 선택적 msg 키워드 인수를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd46754609e1cbf4d12cc96acf4e14a449602d6d" translate="yes" xml:space="preserve">
          <source>A list of human readable strings describing all issues encountered. It is up to the caller to decide whether to treat this as an error condition.</source>
          <target state="translated">발생한 모든 문제를 설명하는 사람이 읽을 수있는 문자열 목록입니다. 이를 오류 조건으로 처리할지 여부를 결정하는 것은 호출자에게 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe1aaad31f33a555d035f639d94c1325738681a1" translate="yes" xml:space="preserve">
          <source>A list of input details.</source>
          <target state="translated">입력 세부 사항 목록.</target>
        </trans-unit>
        <trans-unit id="3b71cf75549722ca3c4637a7d4ef5a2568e7600e" translate="yes" xml:space="preserve">
          <source>A list of input tensors or &lt;code&gt;None&lt;/code&gt; (equivalent to an empty list). Each input can be a nested structure containing values that are convertible to tensors. Note that passing an N-dimension list of compatible values will result in a N-dimension list of scalar tensors rather than a single Rank-N tensors. If you need different behavior, convert part of inputs to tensors with &lt;a href=&quot;../../../convert_to_tensor&quot;&gt;&lt;code&gt;tf.convert_to_tensor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">입력 텐서 목록 또는 &lt;code&gt;None&lt;/code&gt; (빈 목록과 동일). 각 입력은 텐서로 변환 할 수있는 값을 포함하는 중첩 구조 일 수 있습니다. 호환되는 값의 N 차원 목록을 전달하면 단일 Rank-N 텐서가 아닌 스칼라 텐서의 N 차원 목록이 생성됩니다. 다른 동작이 필요한 경우 &lt;a href=&quot;../../../convert_to_tensor&quot;&gt; &lt;code&gt;tf.convert_to_tensor&lt;/code&gt; &lt;/a&gt; 를 사용하여 입력의 일부를 텐서로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="e3dec7f10580f39880c72e4e4992dea1542569be" translate="yes" xml:space="preserve">
          <source>A list of input tensors or None (equivalent to an empty list). Each input tensor has a corresponding shard axes, given by &lt;code&gt;input_shard_axes&lt;/code&gt;, which must have size divisible by &lt;code&gt;num_shards&lt;/code&gt;.</source>
          <target state="translated">입력 텐서 목록 또는 없음 (빈 목록과 동일). 각 입력 텐서에는 &lt;code&gt;input_shard_axes&lt;/code&gt; 로 지정된 해당 샤드 축이 있으며 , 크기는 &lt;code&gt;num_shards&lt;/code&gt; 로 나눌 수 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="48f6f33e969944e03859c6687a967fdbd117f0e1" translate="yes" xml:space="preserve">
          <source>A list of input tensors or None (equivalent to an empty list). The 0-th dimension of each Tensor must have size divisible by &lt;code&gt;num_shards&lt;/code&gt;.</source>
          <target state="translated">입력 텐서 목록 또는 없음 (빈 목록과 동일). 각 Tensor의 0 번째 차원은 &lt;code&gt;num_shards&lt;/code&gt; 로 나눌 수있는 크기를 가져야 합니다.</target>
        </trans-unit>
        <trans-unit id="796cfff946aa68157126facff30e20a0cb6614fc" translate="yes" xml:space="preserve">
          <source>A list of inputs or &lt;code&gt;None&lt;/code&gt; (equivalent to an empty list). Each input can be a nested structure containing values that are convertible to tensors. Note that passing an N-dimension list of compatible values will result in a N-dimension list of scalar tensors rather than a single Rank-N tensors. If you need different behavior, convert part of inputs to tensors with &lt;a href=&quot;../../convert_to_tensor&quot;&gt;&lt;code&gt;tf.convert_to_tensor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">입력 목록 또는 &lt;code&gt;None&lt;/code&gt; (빈 목록과 동일). 각 입력은 텐서로 변환 할 수있는 값을 포함하는 중첩 구조 일 수 있습니다. 호환되는 값의 N 차원 목록을 전달하면 단일 Rank-N 텐서가 아닌 스칼라 텐서의 N 차원 목록이 생성됩니다. 다른 동작이 필요한 경우 &lt;a href=&quot;../../convert_to_tensor&quot;&gt; &lt;code&gt;tf.convert_to_tensor&lt;/code&gt; &lt;/a&gt; 를 사용하여 입력의 일부를 텐서로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="a79875db350d23a491f9d13d08df051e06a5d696" translate="yes" xml:space="preserve">
          <source>A list of integer scalars. The &lt;code&gt;i&lt;/code&gt;th scalar is used as the &lt;code&gt;nrows&lt;/code&gt; for the &lt;code&gt;i&lt;/code&gt;th ragged dimension.</source>
          <target state="translated">정수 스칼라 목록입니다. &lt;code&gt;i&lt;/code&gt; 번째는 스칼라로서 사용 &lt;code&gt;nrows&lt;/code&gt; 위한 &lt;code&gt;i&lt;/code&gt; 번째의 비정형 사이즈.</target>
        </trans-unit>
        <trans-unit id="a73522ee383aacf3da5926f8225905620e626239" translate="yes" xml:space="preserve">
          <source>A list of integer. Axes to compute the mean.</source>
          <target state="translated">정수 목록입니다. 평균을 계산하는 축입니다.</target>
        </trans-unit>
        <trans-unit id="13272c8c8e1f825ddf3bc7a0b82f6ae46d90c50f" translate="yes" xml:space="preserve">
          <source>A list of integer. The length must be the same as the number of dimensions in &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">정수 목록입니다. 길이는 &lt;code&gt;x&lt;/code&gt; 의 차원 수와 같아야합니다 .</target>
        </trans-unit>
        <trans-unit id="ba19c17ba28ebbff53014ca9cf93e1c20d9c780f" translate="yes" xml:space="preserve">
          <source>A list of integers or &lt;code&gt;None&lt;/code&gt; for each dimension.</source>
          <target state="translated">각 차원에 대한 정수 목록 또는 &lt;code&gt;None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57d14e099d83c90f6ad14ba137ee541667e19b25" translate="yes" xml:space="preserve">
          <source>A list of ints. The stride of the sliding window for each dimension of the input tensor.</source>
          <target state="translated">정수 목록입니다. 입력 텐서의 각 차원에 대한 슬라이딩 윈도우의 보폭입니다.</target>
        </trans-unit>
        <trans-unit id="6dde00699be101a1b3f7179187181cc5a29f7586" translate="yes" xml:space="preserve">
          <source>A list of length top_paths, where &lt;code&gt;decoded[j]&lt;/code&gt; is a &lt;code&gt;SparseTensor&lt;/code&gt; containing the decoded outputs:</source>
          <target state="translated">길이 top_paths 목록. 여기서 &lt;code&gt;decoded[j]&lt;/code&gt; 는 디코딩 된 출력을 포함 하는 &lt;code&gt;SparseTensor&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="782ff1d792b4f24c1aa8133c810764e6f52fa98c" translate="yes" xml:space="preserve">
          <source>A list of lists of input tensors or &lt;code&gt;None&lt;/code&gt; (equivalent to &lt;code&gt;[[]]&lt;/code&gt;), indexed by &lt;code&gt;[replica_num][input_num]&lt;/code&gt;. All replicas must have the same number of inputs. Each input can be a nested structure containing values that are convertible to tensors. Note that passing an N-dimension list of compatible values will result in a N-dimension list of scalar tensors rather than a single Rank-N tensors. If you need different behavior, convert part of inputs to tensors with &lt;a href=&quot;../../../convert_to_tensor&quot;&gt;&lt;code&gt;tf.convert_to_tensor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;[replica_num][input_num]&lt;/code&gt; 으로 인덱싱 된 입력 텐서 목록 또는 &lt;code&gt;None&lt;/code&gt; ( &lt;code&gt;[[]]&lt;/code&gt; 과 동일) 목록입니다 . 모든 복제본에는 동일한 수의 입력이 있어야합니다. 각 입력은 텐서로 변환 할 수있는 값을 포함하는 중첩 구조 일 수 있습니다. 호환되는 값의 N 차원 목록을 전달하면 단일 Rank-N 텐서가 아닌 스칼라 텐서의 N 차원 목록이 생성됩니다. 다른 동작이 필요한 경우 &lt;a href=&quot;../../../convert_to_tensor&quot;&gt; &lt;code&gt;tf.convert_to_tensor&lt;/code&gt; &lt;/a&gt; 를 사용하여 입력의 일부를 텐서로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="a1f91d895458e436dfb9c6b2908e32b35b5e5bc3" translate="yes" xml:space="preserve">
          <source>A list of lists of top class prediction tuples &lt;code&gt;(class_name, class_description, score)&lt;/code&gt;. One list of tuples per sample in batch input.</source>
          <target state="translated">최상위 클래스 예측 튜플 목록 &lt;code&gt;(class_name, class_description, score)&lt;/code&gt; . 일괄 입력에서 샘플 당 하나의 튜플 목록.</target>
        </trans-unit>
        <trans-unit id="c9ba7996fdc00b9953a90e531553360e68d61c10" translate="yes" xml:space="preserve">
          <source>A list of local &lt;code&gt;Variable&lt;/code&gt; objects.</source>
          <target state="translated">로컬 &lt;code&gt;Variable&lt;/code&gt; 객체 의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="34f884bf60c4d4227a960ef8e169f06dc80680ea" translate="yes" xml:space="preserve">
          <source>A list of local Variable objects.</source>
          <target state="translated">로컬 변수 객체의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="7f6dbe5b56172987658d3967f4b01ddde4091fe9" translate="yes" xml:space="preserve">
          <source>A list of managed checkpoints.</source>
          <target state="translated">관리되는 체크 포인트 목록.</target>
        </trans-unit>
        <trans-unit id="cf08bb9391b5cc27873242655249506616e9a2fd" translate="yes" xml:space="preserve">
          <source>A list of mirrored values, one per pair in &lt;code&gt;value_destination_pairs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value_destination_pairs&lt;/code&gt; 의 쌍당 하나씩 미러 된 값의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="cc2bd7a1e27fa8ae1474bdcb838a43db2c3fdf30" translate="yes" xml:space="preserve">
          <source>A list of mtimes (in microseconds) of the found checkpoints.</source>
          <target state="translated">찾은 체크 포인트의 mtimes (마이크로 초) 목록입니다.</target>
        </trans-unit>
        <trans-unit id="f0e4c1cf9fff8d88f42a94e754c2d8b80ae57f6b" translate="yes" xml:space="preserve">
          <source>A list of names for this optimizer's slots.</source>
          <target state="translated">이 옵티 마이저 슬롯의 이름 목록입니다.</target>
        </trans-unit>
        <trans-unit id="313bd752cc637eb71d3b7da3ff23339cf640a070" translate="yes" xml:space="preserve">
          <source>A list of nodes with the unnecessary ones removed.</source>
          <target state="translated">불필요한 노드가 제거 된 노드 목록.</target>
        </trans-unit>
        <trans-unit id="875ba3d92d9801f7e5b994453039d7df2fdd354e" translate="yes" xml:space="preserve">
          <source>A list of output details.</source>
          <target state="translated">출력 세부 사항 목록.</target>
        </trans-unit>
        <trans-unit id="5fcdf97a23df774a72a90c369cd51b5e05545bcb" translate="yes" xml:space="preserve">
          <source>A list of output tensors.</source>
          <target state="translated">출력 텐서 목록.</target>
        </trans-unit>
        <trans-unit id="65a1316fba6cb825d10622b8c7f4f22c5e874328" translate="yes" xml:space="preserve">
          <source>A list of outputs, indexed by &lt;code&gt;[replica_num]&lt;/code&gt; each output can be a nested structure same as what computation() returns with a few exceptions.</source>
          <target state="translated">각 출력마다 &lt;code&gt;[replica_num]&lt;/code&gt; 으로 색인 된 출력 목록은 몇 가지 예외를 제외하고 계산 ()이 반환하는 것과 동일한 중첩 구조 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ccccc03a452ed04ae7458175910408e5b5621f8" translate="yes" xml:space="preserve">
          <source>A list of regexes specifying the types.</source>
          <target state="translated">유형을 지정하는 정규식 목록입니다.</target>
        </trans-unit>
        <trans-unit id="58e1223d9284e7ab972b48890fee2ff77adc3cd1" translate="yes" xml:space="preserve">
          <source>A list of regularization losses as Tensors.</source>
          <target state="translated">텐서로서의 정규화 손실 목록.</target>
        </trans-unit>
        <trans-unit id="30ff6ace285ebae2f4541ed3e46d45181768cf08" translate="yes" xml:space="preserve">
          <source>A list of resource container name strings, or &lt;code&gt;None&lt;/code&gt; if all of all the containers are to be reset.</source>
          <target state="translated">리소스 컨테이너 이름 문자열의 목록 또는 모든 컨테이너를 재설정 &lt;code&gt;None&lt;/code&gt; 경우 없음 입니다.</target>
        </trans-unit>
        <trans-unit id="99e59fe657eb3bb5ccb4a9b1b47843250fa4c71f" translate="yes" xml:space="preserve">
          <source>A list of shapes (each a &lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;) that has length &lt;code&gt;&amp;gt;= 1&lt;/code&gt;.</source>
          <target state="translated">도형의 목록 (각 &lt;a href=&quot;../tensorshape&quot;&gt; &lt;code&gt;tf.TensorShape&lt;/code&gt; &lt;/a&gt; 또는 목록 &lt;code&gt;ints&lt;/code&gt; 길이를 가짐) &lt;code&gt;&amp;gt;= 1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0728c2dd4254a2316b6ba4c189949b93bfca89ad" translate="yes" xml:space="preserve">
          <source>A list of shapes (each a &lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;) that has length &lt;code&gt;&amp;gt;= 1&lt;/code&gt;. A list of shapes.</source>
          <target state="translated">도형의 목록 (각 &lt;a href=&quot;../tensorshape&quot;&gt; &lt;code&gt;tf.TensorShape&lt;/code&gt; &lt;/a&gt; 또는 목록 &lt;code&gt;ints&lt;/code&gt; 길이를 가짐) &lt;code&gt;&amp;gt;= 1&lt;/code&gt; . 도형 목록입니다.</target>
        </trans-unit>
        <trans-unit id="3be4d9569b94d8cdfaf53a564f955b1aceb83b1b" translate="yes" xml:space="preserve">
          <source>A list of shapes (each a &lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;) that has length &lt;code&gt;&amp;gt;= 1&lt;/code&gt;. The list of shapes being produced.</source>
          <target state="translated">도형의 목록 (각 &lt;a href=&quot;../tensorshape&quot;&gt; &lt;code&gt;tf.TensorShape&lt;/code&gt; &lt;/a&gt; 또는 목록 &lt;code&gt;ints&lt;/code&gt; 길이를 가짐) &lt;code&gt;&amp;gt;= 1&lt;/code&gt; . 생성되는 모양 목록입니다.</target>
        </trans-unit>
        <trans-unit id="659ecc40e9467699604f39530acf8be8c8ef2efb" translate="yes" xml:space="preserve">
          <source>A list of shapes (each a &lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;). A list of &lt;code&gt;num_dense&lt;/code&gt; shapes; the shapes of data in each Feature given in dense_keys (where &lt;code&gt;num_dense = dense_keys.size()&lt;/code&gt;). The number of elements in the Feature corresponding to dense_key[j] must always equal dense_shapes[j].NumEntries(). If dense_shapes[j] == (D0, D1, ..., DN) then the shape of output Tensor dense_values[j] will be (|serialized|, D0, D1, ..., DN): The dense outputs are just the inputs row-stacked by batch. This works for dense_shapes[j] = (-1, D1, ..., DN). In this case the shape of the output Tensor dense_values[j] will be (|serialized|, M, D1, .., DN), where M is the maximum number of blocks of elements of length D1 * .... * DN, across all minibatch entries in the input. Any minibatch entry with less than M blocks of elements of length D1 * ... * DN will be padded with the corresponding default_value scalar element along the second dimension.</source>
          <target state="translated">모양 목록 (각각 &lt;a href=&quot;../tensorshape&quot;&gt; &lt;code&gt;tf.TensorShape&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;ints&lt;/code&gt; 목록 ). &lt;code&gt;num_dense&lt;/code&gt; 모양 의 목록입니다 . density_keys (여기서 &lt;code&gt;num_dense = dense_keys.size()&lt;/code&gt; 주어진 각 지형지 물의 데이터 모양 )). density_key [j]에 해당하는 기능의 요소 수는 항상 density_shapes [j] .NumEntries ()와 같아야합니다. density_shapes [j] == (D0, D1, ..., DN)이면 출력 Tensor density_values ​​[j]의 모양은 (| serialized |, D0, D1, ..., DN) : 밀도가 높은 출력은 다음과 같습니다. 배치에 의해 행 스택 된 입력 만. 이는 density_shapes [j] = (-1, D1, ..., DN)에서 작동합니다. 이 경우 출력 Tensor density_values ​​[j]의 모양은 (| serialized |, M, D1, .., DN)이됩니다. 여기서 M은 길이가 D1 * .... * DN 인 요소의 최대 블록 수입니다. , 입력의 모든 미니 배치 항목에서. 길이가 D1 * ... * DN 인 요소 블록이 M 개 미만인 미니 배치 항목은 두 번째 차원을 따라 해당 default_value 스칼라 요소로 채워집니다.</target>
        </trans-unit>
        <trans-unit id="a5e95008e5c870796c768acddecaf43eb41b61f6" translate="yes" xml:space="preserve">
          <source>A list of shapes (each a &lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;). A list of Ndense shapes; the shapes of data in each Feature given in dense_keys. The number of elements in the Feature corresponding to dense_key[j] must always equal dense_shapes[j].NumEntries(). If dense_shapes[j] == (D0, D1, ..., DN) then the shape of output Tensor dense_values[j] will be (|serialized|, D0, D1, ..., DN): The dense outputs are just the inputs row-stacked by batch. This works for dense_shapes[j] = (-1, D1, ..., DN). In this case the shape of the output Tensor dense_values[j] will be (|serialized|, M, D1, .., DN), where M is the maximum number of blocks of elements of length D1 * .... * DN, across all minibatch entries in the input. Any minibatch entry with less than M blocks of elements of length D1 * ... * DN will be padded with the corresponding default_value scalar element along the second dimension.</source>
          <target state="translated">도형 목록 (각각 &lt;a href=&quot;../tensorshape&quot;&gt; &lt;code&gt;tf.TensorShape&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;ints&lt;/code&gt; 목록). Ndense 모양의 목록; density_keys에 주어진 각 지형지 물의 데이터 형태. density_key [j]에 해당하는 기능의 요소 수는 항상 density_shapes [j] .NumEntries ()와 같아야합니다. density_shapes [j] == (D0, D1, ..., DN)이면 출력 Tensor density_values ​​[j]의 모양은 (| serialized |, D0, D1, ..., DN) : 밀도가 높은 출력은 다음과 같습니다. 배치에 의해 행 스택 된 입력 만. 이는 density_shapes [j] = (-1, D1, ..., DN)에서 작동합니다. 이 경우 출력 Tensor density_values ​​[j]의 모양은 (| serialized |, M, D1, .., DN)이됩니다. 여기서 M은 길이가 D1 * .... * DN 인 요소의 최대 블록 수입니다. , 입력의 모든 미니 배치 항목에서. 길이가 D1 * ... * DN 인 요소 블록이 M 개 미만인 미니 배치 항목은 두 번째 차원을 따라 해당 default_value 스칼라 요소로 채워집니다.</target>
        </trans-unit>
        <trans-unit id="4b6216d1349ad51e03c1605af87f24e4dfc70b34" translate="yes" xml:space="preserve">
          <source>A list of shapes (each a &lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;). List of tuples with the same length as &lt;code&gt;dense_keys&lt;/code&gt;. The shape of the data for each dense feature referenced by &lt;code&gt;dense_keys&lt;/code&gt;. Required for any input tensors identified by &lt;code&gt;dense_keys&lt;/code&gt;. Must be either fully defined, or may contain an unknown first dimension. An unknown first dimension means the feature is treated as having a variable number of blocks, and the output shape along this dimension is considered unknown at graph build time. Padding is applied for minibatch elements smaller than the maximum number of blocks for the given feature along this dimension.</source>
          <target state="translated">모양 목록 (각각 &lt;a href=&quot;../tensorshape&quot;&gt; &lt;code&gt;tf.TensorShape&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;ints&lt;/code&gt; 목록 ). &lt;code&gt;dense_keys&lt;/code&gt; 와 길이가 같은 튜플 목록입니다 . &lt;code&gt;dense_keys&lt;/code&gt; 참조하는 각 조밀 기능에 대한 데이터의 모양 . &lt;code&gt;dense_keys&lt;/code&gt; 식별되는 모든 입력 텐서에 필요합니다 . 완전히 정의되거나 알 수없는 첫 번째 차원을 포함 할 수 있습니다. 알 수없는 첫 번째 차원은 기능이 가변 개수의 블록을 갖는 것으로 처리되고이 차원에 따른 출력 모양은 그래프 빌드시 알 수없는 것으로 간주됨을 의미합니다. 패딩은이 차원을 따라 주어진 피쳐에 대한 최대 블록 수보다 작은 미니 배치 요소에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="fa6f021907bebcf43d1ff408e2f96c69c4e7a83a" translate="yes" xml:space="preserve">
          <source>A list of shapes (each a &lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;). The shape of each component in a value. The length of this attr must be either 0 or the same as the length of component_types. If the length of this attr is 0, the shapes of queue elements are not constrained, and only one element may be dequeued at a time.</source>
          <target state="translated">모양 목록 (각각 &lt;a href=&quot;../tensorshape&quot;&gt; &lt;code&gt;tf.TensorShape&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;ints&lt;/code&gt; 목록 ). 값에서 각 구성 요소의 모양입니다. 이 속성의 길이는 0이거나 component_types의 길이와 같아야합니다. 이 속성의 길이가 0이면 큐 요소의 모양이 제한되지 않으며 한 번에 하나의 요소 만 큐에서 제외 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d612c246bcdc791c039a88780fb115ab5d15ed00" translate="yes" xml:space="preserve">
          <source>A list of shapes (each a &lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;). The shapes of data in each Feature given in dense_keys. The length of this list must match the length of &lt;code&gt;dense_keys&lt;/code&gt;. The number of elements in the Feature corresponding to dense_key[j] must always equal dense_shapes[j].NumEntries(). If dense_shapes[j] == (D0, D1, ..., DN) then the shape of output Tensor dense_values[j] will be (D0, D1, ..., DN): In the case dense_shapes[j] = (-1, D1, ..., DN), the shape of the output Tensor dense_values[j] will be (M, D1, .., DN), where M is the number of blocks of elements of length D1 * .... * DN, in the input.</source>
          <target state="translated">모양 목록 (각각 &lt;a href=&quot;../tensorshape&quot;&gt; &lt;code&gt;tf.TensorShape&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;ints&lt;/code&gt; 목록 ). density_keys에 주어진 각 지형지 물의 데이터 형태. 이 목록의 길이는 &lt;code&gt;dense_keys&lt;/code&gt; 의 길이와 일치해야합니다 . density_key [j]에 해당하는 기능의 요소 수는 항상 density_shapes [j] .NumEntries ()와 같아야합니다. density_shapes [j] == (D0, D1, ..., DN)이면 출력 Tensor density_values ​​[j]의 모양은 (D0, D1, ..., DN)이됩니다.이 경우에는 density_shapes [j] = (-1, D1, ..., DN), 출력 Tensor density_values ​​[j]의 모양은 (M, D1, .., DN)이됩니다. 여기서 M은 길이가 D1 * 인 요소의 블록 수입니다. ... * DN, 입력.</target>
        </trans-unit>
        <trans-unit id="7cb88ae289f0754c4da93502036c9ce0ded45a5b" translate="yes" xml:space="preserve">
          <source>A list of shapes (each a &lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;). The shapes of each tensor in &lt;code&gt;inputs&lt;/code&gt;.</source>
          <target state="translated">모양 목록 (각각 &lt;a href=&quot;../tensorshape&quot;&gt; &lt;code&gt;tf.TensorShape&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;ints&lt;/code&gt; 목록 ). &lt;code&gt;inputs&lt;/code&gt; 에서 각 텐서의 모양 .</target>
        </trans-unit>
        <trans-unit id="1ec971aa82d5c3f42fe6b4495d4e7863a3e21ef5" translate="yes" xml:space="preserve">
          <source>A list of shapes (each a &lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;). The shapes of each tensor in &lt;code&gt;outputs&lt;/code&gt;.</source>
          <target state="translated">모양 목록 (각각 &lt;a href=&quot;../tensorshape&quot;&gt; &lt;code&gt;tf.TensorShape&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;ints&lt;/code&gt; 목록 ). &lt;code&gt;outputs&lt;/code&gt; 에서 각 텐서의 모양 .</target>
        </trans-unit>
        <trans-unit id="5d3f1845830e8acbf55963c2d7d925c5df80156e" translate="yes" xml:space="preserve">
          <source>A list of strings containing filenames that match the given pattern(s).</source>
          <target state="translated">주어진 패턴과 일치하는 파일 이름을 포함하는 문자열 목록.</target>
        </trans-unit>
        <trans-unit id="e9c28ae4322b5b35227a35fa6236a00a73d28b22" translate="yes" xml:space="preserve">
          <source>A list of strings containing operation names in &lt;code&gt;graph_def&lt;/code&gt; that will be returned as &lt;code&gt;Operation&lt;/code&gt; objects; and/or tensor names in &lt;code&gt;graph_def&lt;/code&gt; that will be returned as &lt;code&gt;Tensor&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;Operation&lt;/code&gt; 객체 로 반환 될 &lt;code&gt;graph_def&lt;/code&gt; 의 작업 이름을 포함하는 문자열 목록입니다 . 및 / 또는 &lt;code&gt;Tensor&lt;/code&gt; 객체 로 반환 될 &lt;code&gt;graph_def&lt;/code&gt; 의 텐서 이름 .</target>
        </trans-unit>
        <trans-unit id="e8a1395a7cdbd3c706ed1e039dae00368307f0a5" translate="yes" xml:space="preserve">
          <source>A list of strings represents possible label values. If given, labels must be string type and have any value in &lt;code&gt;label_vocabulary&lt;/code&gt;. If it is not given, that means labels are already encoded as integer or float within &lt;code&gt;[0, 1]&lt;/code&gt; for &lt;code&gt;n_classes=2&lt;/code&gt; and encoded as integer values in {0, 1,..., n_classes-1} for &lt;code&gt;n_classes&amp;gt;2&lt;/code&gt;. Also, there will be errors if vocabulary is not provided and labels are string.</source>
          <target state="translated">문자열 목록은 가능한 레이블 값을 나타냅니다. 주어진 경우 레이블은 문자열 유형이어야하며 &lt;code&gt;label_vocabulary&lt;/code&gt; 에 값이 있어야 합니다. 이 주어지지 않는다면, 그 수단 라벨 이미 내의 정수 또는 부동으로 인코딩된다 &lt;code&gt;[0, 1]&lt;/code&gt; 에 대한 &lt;code&gt;n_classes=2&lt;/code&gt; 및 {0,1, ..., n_classes-1}에 대한의 정수 값으로서 인코딩 &lt;code&gt;n_classes&amp;gt;2&lt;/code&gt; . 또한 어휘가 제공되지 않고 레이블이 문자열 인 경우 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ac260c4b3d318ba0819d9d81e644f87417fac4be" translate="yes" xml:space="preserve">
          <source>A list of strings represents possible label values. If given, labels must be string type and have any value in &lt;code&gt;label_vocabulary&lt;/code&gt;. If it is not given, that means labels are already encoded as integer or float within [0, 1] for &lt;code&gt;n_classes=2&lt;/code&gt; and encoded as integer values in {0, 1,..., n_classes-1} for &lt;code&gt;n_classes&lt;/code&gt;&amp;gt;2 . Also there will be errors if vocabulary is not provided and labels are string.</source>
          <target state="translated">문자열 목록은 가능한 레이블 값을 나타냅니다. 주어진 경우 레이블은 문자열 유형이어야하며 &lt;code&gt;label_vocabulary&lt;/code&gt; 에 값이 있어야 합니다. 지정하지 않으면 레이블이 이미 &lt;code&gt;n_classes=2&lt;/code&gt; 의 경우 [0, 1] 내에서 정수 또는 부동 소수점으로 인코딩되고 &lt;code&gt;n_classes&lt;/code&gt; &amp;gt; 2의 경우 {0, 1, ..., n_classes-1}의 정수 값으로 인코딩 되었음을 의미 합니다. 어휘가 제공되지 않고 레이블이 문자열 인 경우에도 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="33f184406815471eb5c4ace9819efe5049aaa9cb" translate="yes" xml:space="preserve">
          <source>A list of strings represents possible label values. If it is not given, that means labels are already encoded as integer within [0, n_classes) or multi-hot Tensor. If given, labels must be SparseTensor &lt;code&gt;string&lt;/code&gt; type and have any value in &lt;code&gt;label_vocabulary&lt;/code&gt;. Also there will be errors if vocabulary is not provided and labels are string.</source>
          <target state="translated">문자열 목록은 가능한 레이블 값을 나타냅니다. 지정하지 않으면 레이블이 [0, n_classes) 또는 멀티 핫 텐서 내에서 이미 정수로 인코딩되었음을 의미합니다. 주어진 경우 레이블은 SparseTensor &lt;code&gt;string&lt;/code&gt; 유형 이어야하며 label_vocabulary에 값이 &lt;code&gt;label_vocabulary&lt;/code&gt; 합니다. 어휘가 제공되지 않고 레이블이 문자열 인 경우에도 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="73f118ddab82d9333e3db0261ca681be7951f507" translate="yes" xml:space="preserve">
          <source>A list of strings specifying the destination node names.</source>
          <target state="translated">대상 노드 이름을 지정하는 문자열 목록입니다.</target>
        </trans-unit>
        <trans-unit id="0d7b2a914893aa60f6f7679af47ef3ed5ba8c2c0" translate="yes" xml:space="preserve">
          <source>A list of strings, corresponding to the names of jobs in this cluster.</source>
          <target state="translated">이 클러스터의 작업 이름에 해당하는 문자열 목록.</target>
        </trans-unit>
        <trans-unit id="798db29de80e750cbc5caa5809e07cc5d2ad34c5" translate="yes" xml:space="preserve">
          <source>A list of strings, each a regex scope provided to tf.compat.v1.get_collection with GLOBAL_VARIABLES (please see tf.compat.v1.get_collection). For backwards compatibility reasons, this is separate from the single-string argument type.</source>
          <target state="translated">GLOBAL_VARIABLES를 사용하여 tf.compat.v1.get_collection에 제공되는 각 문자열 목록 (tf.compat.v1.get_collection 참조). 이전 버전과의 호환성을 위해 단일 문자열 인수 유형과 별개입니다.</target>
        </trans-unit>
        <trans-unit id="b44601d95aed398533b315393c7658ab21760d57" translate="yes" xml:space="preserve">
          <source>A list of strings, such as [ 'fox', 'dog' ]</source>
          <target state="translated">[ 'fox', 'dog']과 같은 문자열 목록</target>
        </trans-unit>
        <trans-unit id="4c3ffb19901b10c1e92361270b816ce8f79931d3" translate="yes" xml:space="preserve">
          <source>A list of strings.</source>
          <target state="translated">문자열 목록.</target>
        </trans-unit>
        <trans-unit id="a563c5eee3a1b322ff1f2acc9d9e8d32f0a63c70" translate="yes" xml:space="preserve">
          <source>A list of task addresses, where the index in the list corresponds to the task index of each task. The list may contain &lt;code&gt;None&lt;/code&gt; if the job was defined with a sparse set of task indices.</source>
          <target state="translated">작업 주소 목록. 목록의 색인은 각 작업의 작업 색인에 해당합니다. 작업이 희소 한 작업 색인 세트로 정의 된 경우 목록에 &lt;code&gt;None&lt;/code&gt; 이 포함될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="061fddafbe09fcf3061907fd6a0bd75609947f48" translate="yes" xml:space="preserve">
          <source>A list of tensors to print out when op is evaluated.</source>
          <target state="translated">op가 평가 될 때 인쇄 할 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="25c03cf32e2f24a32e8b17affa41fd6628aa7794" translate="yes" xml:space="preserve">
          <source>A list of tensors, each which will be divided by the loss scale. Can have None values, which are ignored.</source>
          <target state="translated">텐서 목록, 각각은 손실 척도로 나뉩니다. 무시되는 없음 값을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="767a4da564890180c7aee3b7a2974c85cfe04692" translate="yes" xml:space="preserve">
          <source>A list of tensors, one for each element of &lt;code&gt;tensor_list&lt;/code&gt;. If the tensor in &lt;code&gt;tensor_list&lt;/code&gt; has shape &lt;code&gt;[N, a, b, .., z]&lt;/code&gt;, then the corresponding output tensor will have shape &lt;code&gt;[a, b, ..., z]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tensor_list&lt;/code&gt; 의 각 요소마다 하나씩 텐서 목록 . &lt;code&gt;tensor_list&lt;/code&gt; 의 텐서의 모양이 &lt;code&gt;[N, a, b, .., z]&lt;/code&gt; 인 경우 해당 출력 텐서의 모양은 &lt;code&gt;[a, b, ..., z]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0f518d32b21e8dcbd8866294624116d1f10bc099" translate="yes" xml:space="preserve">
          <source>A list of tensors.</source>
          <target state="translated">텐서 목록.</target>
        </trans-unit>
        <trans-unit id="8d7c8899ff158f374a747c292fca8b4655f488a3" translate="yes" xml:space="preserve">
          <source>A list of threads that are running the standard services. You can use the Supervisor's Coordinator to join these threads with: sv.coord.Join(</source>
          <target state="translated">표준 서비스를 실행하는 스레드 목록. Supervisor 's Coordinator를 사용하여 다음 스레드를 다음과 결합 할 수 있습니다. sv.coord.Join (</target>
        </trans-unit>
        <trans-unit id="70c1a6778ffd2809d6e88113cd995508eb098b34" translate="yes" xml:space="preserve">
          <source>A list of threads.</source>
          <target state="translated">스레드 목록.</target>
        </trans-unit>
        <trans-unit id="27c99352f5a73fccb7a7df98f7e4090f8e64b5fc" translate="yes" xml:space="preserve">
          <source>A list of tuples of checkpoint filenames and timestamps.</source>
          <target state="translated">체크 포인트 파일 이름 및 타임 스탬프의 튜플 목록입니다.</target>
        </trans-unit>
        <trans-unit id="74c6ecf84c3f50735f844af152ce287ac1b2b917" translate="yes" xml:space="preserve">
          <source>A list of tuples or dictionaries of tensors to enqueue.</source>
          <target state="translated">대기열에 넣을 텐서의 튜플 또는 사전 목록입니다.</target>
        </trans-unit>
        <trans-unit id="09332652c8a1eee7be320e6f733b565a8574c0f1" translate="yes" xml:space="preserve">
          <source>A list of types. The length of dtypes must equal the number of tensors in each element.</source>
          <target state="translated">유형 목록입니다. dtype의 길이는 각 요소의 텐서 수와 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="841e6d9a52085740de2bc93240e27c68f3e7a5e9" translate="yes" xml:space="preserve">
          <source>A list of unigram counts or probabilities, one per ID in sequential order. Exactly one of &lt;code&gt;vocab_file&lt;/code&gt; and &lt;code&gt;unigrams&lt;/code&gt; should be passed to this operation.</source>
          <target state="translated">유니 그램 수 또는 확률 목록 (순차적으로 ID 당 하나씩). &lt;code&gt;vocab_file&lt;/code&gt; 및 &lt;code&gt;unigrams&lt;/code&gt; 중 정확히 하나 가이 작업에 전달되어야합니다.</target>
        </trans-unit>
        <trans-unit id="fbdb323923c300f1913184f8f1ba903854b5a0ee" translate="yes" xml:space="preserve">
          <source>A list of update ops.</source>
          <target state="translated">업데이트 작업 목록입니다.</target>
        </trans-unit>
        <trans-unit id="21f0d929dbe9d32c1ca978885556b121ee0b05ae" translate="yes" xml:space="preserve">
          <source>A list of valid task indices in the given job.</source>
          <target state="translated">주어진 작업에서 유효한 작업 인덱스 목록.</target>
        </trans-unit>
        <trans-unit id="058e76a8b10c4a5e6df0d220dc6309d1d85e1466" translate="yes" xml:space="preserve">
          <source>A list of variables which encode the current state of &lt;code&gt;Optimizer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Optimizer&lt;/code&gt; 의 현재 상태를 인코딩하는 변수 목록 .</target>
        </trans-unit>
        <trans-unit id="a5206ff28d11dafb8c3388688e308072b0ee10a9" translate="yes" xml:space="preserve">
          <source>A list of variables.</source>
          <target state="translated">변수 목록.</target>
        </trans-unit>
        <trans-unit id="b83d0150524c693079a6299b7117ec9e6a7274b6" translate="yes" xml:space="preserve">
          <source>A list of variables: The variables will be keyed with their op name in the checkpoint files.</source>
          <target state="translated">변수 목록 : 변수는 검사 점 파일에 op 이름으로 입력됩니다.</target>
        </trans-unit>
        <trans-unit id="26bdf00283c3046675d532aeff0531bd68fd7b6a" translate="yes" xml:space="preserve">
          <source>A list of words (or tokens).</source>
          <target state="translated">단어 (또는 토큰) 목록입니다.</target>
        </trans-unit>
        <trans-unit id="516796b10e21437c5df7826834b8a3004c3df312" translate="yes" xml:space="preserve">
          <source>A list or a tuple of PerReplica objects (or tensors with device set if there is one device) and destinations.</source>
          <target state="translated">PerReplica 객체 (또는 장치가 하나 인 경우 장치가 설정된 텐서) 및 대상의 목록 또는 튜플입니다.</target>
        </trans-unit>
        <trans-unit id="43801b7c57359c72162e9bc777b428b6494140af" translate="yes" xml:space="preserve">
          <source>A list or dictionary of tensors with the same number and types as &lt;code&gt;tensors_list[i]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tensors_list[i]&lt;/code&gt; 와 동일한 수 및 유형을 가진 텐서의 목록 또는 사전입니다 .</target>
        </trans-unit>
        <trans-unit id="45b2263e9081918548a889a781077a6c078feb00" translate="yes" xml:space="preserve">
          <source>A list or dictionary of tensors with the same types as &lt;code&gt;tensors&lt;/code&gt; (except if the input is a list of one element, then it returns a tensor, not a list).</source>
          <target state="translated">같은 유형 텐서의 목록 또는 사전 &lt;code&gt;tensors&lt;/code&gt; (입력 요소가 하나의리스트 인 경우는 제외하고는 텐서 아니라리스트를 반환한다).</target>
        </trans-unit>
        <trans-unit id="e8f98f20008824709ea658b13f7b8c84789af90d" translate="yes" xml:space="preserve">
          <source>A list or dictionary of tensors with the same types as &lt;code&gt;tensors&lt;/code&gt;.</source>
          <target state="translated">같은 유형 텐서의 목록이나 사전 &lt;code&gt;tensors&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c01dcc7d66468d75b519a4418bc1d8685188ff5d" translate="yes" xml:space="preserve">
          <source>A list or dictionary of tensors with the types as &lt;code&gt;tensors&lt;/code&gt;.</source>
          <target state="translated">유형이 &lt;code&gt;tensors&lt;/code&gt; 인 텐서 목록 또는 사전입니다 .</target>
        </trans-unit>
        <trans-unit id="89ac4aaac90a07f709616f3ff2e0e8d393af6b26" translate="yes" xml:space="preserve">
          <source>A list or nested structure of Tensors (or None), one for each element in &lt;code&gt;sources&lt;/code&gt;. Returned structure is the same as the structure of &lt;code&gt;sources&lt;/code&gt;. Note if any gradient is sparse (IndexedSlices), jacobian function currently makes it dense and returns a Tensor instead. This may change in the future.</source>
          <target state="translated">&lt;code&gt;sources&lt;/code&gt; 각 요소마다 하나씩 텐서 (또는 없음)의 목록 또는 중첩 구조입니다 . 반환 된 구조는 &lt;code&gt;sources&lt;/code&gt; 의 구조와 동일 합니다 . 그래디언트가 드문 경우 (IndexedSlices) jacobian 함수는 현재 밀도를 높이고 대신 텐서를 반환합니다. 향후 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="089ca38f97ec457535804f178d634b47fe3b733f" translate="yes" xml:space="preserve">
          <source>A list or tuple of &lt;code&gt;Variable&lt;/code&gt; objects to update to minimize &lt;code&gt;loss&lt;/code&gt;. In Tensorflow 1.x, by default these are the list of variables collected in the graph under the key &lt;code&gt;GraphKeys.TRAINABLE_VARIABLES&lt;/code&gt;. As Tensorflow 2.x doesn't have collections and GraphKeys, trainable_variables need to be passed explicitly here.</source>
          <target state="translated">&lt;code&gt;loss&lt;/code&gt; 을 최소화하기 위해 업데이트 할 &lt;code&gt;Variable&lt;/code&gt; 객체 의 목록 또는 튜플입니다 . Tensorflow 1.x에서는 기본적으로 &lt;code&gt;GraphKeys.TRAINABLE_VARIABLES&lt;/code&gt; 키 아래의 그래프에 수집 된 변수 목록입니다 . Tensorflow 2.x에는 컬렉션과 GraphKey가 없으므로 trainable_variables를 여기에 명시 적으로 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="36b02b75a5fb5ccdc64fff4ab74b3d8b3dbddf54" translate="yes" xml:space="preserve">
          <source>A list or tuple of Python integers or a 1-D &lt;code&gt;int32&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt;. If provided, the returned &lt;code&gt;Tensor&lt;/code&gt; will have leading batch dimensions of this shape.</source>
          <target state="translated">Python 정수 또는 1-D &lt;code&gt;int32&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 의 목록 또는 튜플입니다 . 제공되는 경우 반환 된 &lt;code&gt;Tensor&lt;/code&gt; 는이 모양의 선행 배치 차원을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="6d32bc12fbbc23921fe940123ee61874c3560947" translate="yes" xml:space="preserve">
          <source>A list or tuple of strings representing possible label values. If it is not given, that means labels are already encoded as an integer within [0, n_classes). If given, labels must be of string type and have any value in &lt;code&gt;label_vocabulary&lt;/code&gt;. Note that errors will be raised if &lt;code&gt;label_vocabulary&lt;/code&gt; is not provided but labels are strings. If both &lt;code&gt;n_classes&lt;/code&gt; and &lt;code&gt;label_vocabulary&lt;/code&gt; are provided, &lt;code&gt;label_vocabulary&lt;/code&gt; should contain exactly &lt;code&gt;n_classes&lt;/code&gt; items.</source>
          <target state="translated">가능한 레이블 값을 나타내는 문자열 목록 또는 튜플입니다. 지정하지 않으면 레이블이 [0, n_classes) 내에서 이미 정수로 인코딩되었음을 의미합니다. 주어진 경우 레이블은 문자열 유형이어야하며 &lt;code&gt;label_vocabulary&lt;/code&gt; 에 값이 있어야 합니다. &lt;code&gt;label_vocabulary&lt;/code&gt; 가 제공되지 않았지만 레이블이 문자열 이면 오류가 발생합니다 . 두 경우 &lt;code&gt;n_classes&lt;/code&gt; 및 &lt;code&gt;label_vocabulary&lt;/code&gt; 가 제공됩니다, &lt;code&gt;label_vocabulary&lt;/code&gt; 는 정확히 포함해야 &lt;code&gt;n_classes&lt;/code&gt; 항목을.</target>
        </trans-unit>
        <trans-unit id="f99df49899aaf48e5c907162525e94d3f6955f2d" translate="yes" xml:space="preserve">
          <source>A list or tuple of strings representing possible label values. If it is not given, that means labels are already encoded within [0, 1]. If given, labels must be string type and have any value in &lt;code&gt;label_vocabulary&lt;/code&gt;. Note that errors will be raised if &lt;code&gt;label_vocabulary&lt;/code&gt; is not provided but labels are strings.</source>
          <target state="translated">가능한 레이블 값을 나타내는 문자열 목록 또는 튜플입니다. 지정하지 않으면 레이블이 [0, 1] 내에서 이미 인코딩되었음을 의미합니다. 주어진 경우 레이블은 문자열 유형이어야하며 &lt;code&gt;label_vocabulary&lt;/code&gt; 에 값이 있어야 합니다. &lt;code&gt;label_vocabulary&lt;/code&gt; 가 제공되지 않았지만 레이블이 문자열 이면 오류가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="2d90dfecf8097a99dba105372958c4c73390ab93" translate="yes" xml:space="preserve">
          <source>A list or tuple of tensorflow data types or a single tensorflow data type if there is only one, indicating what &lt;code&gt;func&lt;/code&gt; returns.</source>
          <target state="translated">tensorflow 데이터 유형의 목록 또는 튜플 또는 하나만있는 경우 단일 tensorflow 데이터 유형으로 &lt;code&gt;func&lt;/code&gt; 가 반환 하는 내용을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="4a20cd9511e98c76cacdfb00de99c52427c22d6a" translate="yes" xml:space="preserve">
          <source>A list or tuple of tensorflow data types or a single tensorflow data type if there is only one, indicating what &lt;code&gt;func&lt;/code&gt; returns; an empty list if no value is returned (i.e., if the return value is &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="translated">tensorflow 데이터 유형의 목록 또는 튜플 또는 하나만있는 경우 단일 tensorflow 데이터 유형으로 &lt;code&gt;func&lt;/code&gt; 가 반환 하는 내용을 나타냅니다 . 값이 반환되지 않으면 빈 목록 (즉, 반환 값이 &lt;code&gt;None&lt;/code&gt; 인 경우 ).</target>
        </trans-unit>
        <trans-unit id="07c2c86cbc055a9a80d956603fb97af8a3039dbd" translate="yes" xml:space="preserve">
          <source>A list or tuple of update ops to be run at training time. For example, layers such as BatchNormalization create mean and variance update ops that need to be run at training time. In Tensorflow 1.x, these are thrown into an UPDATE_OPS collection. As Tensorflow 2.x doesn't have collections, update_ops need to be passed explicitly here.</source>
          <target state="translated">학습 시간에 실행할 업데이트 작업의 목록 또는 튜플입니다. 예를 들어 BatchNormalization과 같은 레이어는 학습 시간에 실행해야하는 평균 및 분산 업데이트 작업을 생성합니다. Tensorflow 1.x에서 이들은 UPDATE_OPS 컬렉션으로 던져집니다. Tensorflow 2.x에는 컬렉션이 없으므로 여기에 update_ops를 명시 적으로 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="b73974a18ef294f2673415717c1539701e2b73f4" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;context_sparse_keys&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;int64&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;context_sparse_keys&lt;/code&gt; 와 길이가 같은 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="7d0623732cafe7218818d061c3d7b7ec96d6784d" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;dense_features&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;dense_features&lt;/code&gt; 와 길이가 같은 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="607c7fe3201bda7c233087f69baccc331c24d82e" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;dense_features&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;. a list of vectors where the values are the weights associated with a dense feature group.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;dense_features&lt;/code&gt; 와 길이가 같은 목록입니다 . 값이 조밀 한 기능 그룹과 관련된 가중치 인 벡터 목록.</target>
        </trans-unit>
        <trans-unit id="8f85d86d48af90a0e6b41af0eaf8c141c3394314" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;dimension_ids&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;. List of rank 1 tensors representing the gains for each of the feature's split.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;dimension_ids&lt;/code&gt; 와 길이가 같은 목록입니다 . 각 기능 분할에 대한 이득을 나타내는 순위 1 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="9ce7405d784735360141ce134af6ed15f02edf3f" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;dimension_ids&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;. List of rank 2 tensors with left leaf contribs for each of the feature's splits. Will be added to the previous node values to constitute the values of the left nodes.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;dimension_ids&lt;/code&gt; 와 길이가 같은 목록입니다 . 각 피처 분할에 대해 왼쪽 리프 기여도가있는 랭크 2 텐서 목록입니다. 왼쪽 노드의 값을 구성하기 위해 이전 노드 값에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="4e27d4739349ea06e639c8e62e8f14e6714b0bcf" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;dimension_ids&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;. List of rank 2 tensors with right leaf contribs for each of the feature's splits. Will be added to the previous node values to constitute the values of the right nodes.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;dimension_ids&lt;/code&gt; 와 길이가 같은 목록입니다 . 각 피처 분할에 대해 오른쪽 리프 기여도가있는 랭크 2 텐서 목록입니다. 오른쪽 노드의 값을 구성하기 위해 이전 노드 값에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="273dd320f3e9ea0d220721851f3755e2f8a16f29" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;dimension_ids&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int32&lt;/code&gt;. List of rank 1 tensors representing the nodes for which this feature has a split.</source>
          <target state="translated">&lt;code&gt;int32&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;dimension_ids&lt;/code&gt; 와 길이가 같은 목록입니다 . 이 기능이 분할 된 노드를 나타내는 순위 1 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="3c93fe30f72df61223a91059e0cf37aac8f5cdd3" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;dimension_ids&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int32&lt;/code&gt;. List of rank 1 tensors representing the thesholds for each of the feature's split.</source>
          <target state="translated">&lt;code&gt;int32&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;dimension_ids&lt;/code&gt; 와 길이가 같은 목록입니다 . 각 피처 분할에 대한 보류를 나타내는 순위 1 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="81da7897ec4c0931f1c679de627a70ccf37ac64f" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;dimension_ids&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;string&lt;/code&gt;. List of rank 1 tensors representing the split type for each feature.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;dimension_ids&lt;/code&gt; 와 길이가 같은 목록입니다 . 각 기능의 분할 유형을 나타내는 순위 1 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="0238119a1a0becf7bff16df80a256be853b8767a" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;feature_list_sparse_keys&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;int64&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;feature_list_sparse_keys&lt;/code&gt; 와 길이가 같은 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="d28dc958c3dd3dabb65054d4bbc6d19cb61d59f9" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;float_values&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;float_values&lt;/code&gt; 와 길이가 같은 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="e87287994d39151878884196511051bfe1e164fa" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;float_values&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;. float; List of Rank 1 Tensors each containing the bucket boundaries for a single feature.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;float_values&lt;/code&gt; 와 길이가 같은 목록입니다 . 흙손; 단일 기능에 대한 버킷 경계를 포함하는 랭크 1 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="60e940781e5d6fbba77ff4caa21948d8508e3216" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;float_values&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;int32&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;float_values&lt;/code&gt; 와 길이가 같은 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="5a610dfe02d96f0df0513ece7a128b896b60847f" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;indices&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with the same type.</source>
          <target state="translated">같은 길이의리스트 &lt;code&gt;indices&lt;/code&gt; 의 &lt;code&gt;Tensor&lt;/code&gt; 동일한 유형 개체.</target>
        </trans-unit>
        <trans-unit id="b53cda35ea4ea0ba5bf4268afdc1404a52f793fe" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;indices&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with the same type. 1-D. Non-empty values of each &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="translated">같은 길이의리스트 &lt;code&gt;indices&lt;/code&gt; 의 &lt;code&gt;Tensor&lt;/code&gt; 동일한 유형 개체. 1-D. 각 &lt;code&gt;SparseTensor&lt;/code&gt; 의 비어 있지 않은 값 .</target>
        </trans-unit>
        <trans-unit id="6cddc1f4b717d01d33d1888f8ec4cc6aac61556e" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;indices&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int64&lt;/code&gt;. 1-D. Shapes of each &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="translated">유형이 &lt;code&gt;int64&lt;/code&gt; 인 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;indices&lt;/code&gt; 와 길이가 같은 목록입니다 . 1-D. 각 &lt;code&gt;SparseTensor&lt;/code&gt; 의 모양 .</target>
        </trans-unit>
        <trans-unit id="9ebd0d1763e98f1d6879ff42f6b977c0ff1b1b48" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;input&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;out_type&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;out_type&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 &lt;code&gt;input&lt;/code&gt; 과 동일한 길이의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="b46adcafe52eb4519a7b3f9cbdab6dbd786d82ad" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;node_ids&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;. List of rank 1 tensors representing the gains for each of the feature's split.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;node_ids&lt;/code&gt; 와 길이가 같은 목록입니다 . 각 기능 분할에 대한 이득을 나타내는 순위 1 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="d0b0c502d970e30150b14abb8f7d2e6e25501c39" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;node_ids&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;. List of rank 2 tensors with left leaf contribs for each of the feature's splits. Will be added to the previous node values to constitute the values of the left nodes.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;node_ids&lt;/code&gt; 와 길이가 같은 목록입니다 . 각 피처 분할에 대해 왼쪽 리프 기여도가있는 랭크 2 텐서 목록입니다. 왼쪽 노드의 값을 구성하기 위해 이전 노드 값에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="2bf7625d8cf74e7c5e7ac0e99d3ba895573d25b8" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;node_ids&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;. List of rank 2 tensors with right leaf contribs for each of the feature's splits. Will be added to the previous node values to constitute the values of the right nodes.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;node_ids&lt;/code&gt; 와 길이가 같은 목록입니다 . 각 피처 분할에 대해 오른쪽 리프 기여도가있는 랭크 2 텐서 목록입니다. 오른쪽 노드의 값을 구성하기 위해 이전 노드 값에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="471e8f256296bde4e50461cd46ce03a96bd65418" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;node_ids&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int32&lt;/code&gt;. List of rank 1 tensors representing the thesholds for each of the feature's split.</source>
          <target state="translated">&lt;code&gt;int32&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;node_ids&lt;/code&gt; 와 길이가 같은 목록입니다 . 각 피처 분할에 대한 보류를 나타내는 순위 1 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="d421fa6c54023ac4f4c4b5377aca9d0c92c916fc" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;sample_indices&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with the same type in: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. A list of rank 1 Tensors containing per sample -- i.e. per (training example, feature) -- aggregation weights.</source>
          <target state="translated">동일한 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;sample_indices&lt;/code&gt; 와 길이가 동일한 목록 : &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; . 샘플 당 (예 : 학습 예, 기능) 별 집계 가중치를 포함하는 순위 1 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="e277727d07790828d9c6f13de27ebee6e06cd6c1" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;sample_indices&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with the same type in: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. A list of rank 1 Tensors containing per training example aggregation weights. It corresponds to sp_weights.values in embedding_lookup_sparse().</source>
          <target state="translated">동일한 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;sample_indices&lt;/code&gt; 와 길이가 동일한 목록 : &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; . 학습 예제 별 집계 가중치를 포함하는 순위 1 텐서 목록입니다. embedding_lookup_sparse ()의 sp_weights.values에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="4aad31e89cbc9755525dfa424830bd34733dd08a" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;sample_indices&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with the same type in: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A list of rank 1 Tensors, indices into the embedding tables.</source>
          <target state="translated">같은 길이의리스트 &lt;code&gt;sample_indices&lt;/code&gt; 의 &lt;code&gt;Tensor&lt;/code&gt; : 동일한 유형 개체 &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; . 순위 1 텐서 목록, 임베딩 테이블에 대한 인덱스.</target>
        </trans-unit>
        <trans-unit id="319b2c4e59fed647887336367ffd74f83327468e" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;sample_indices&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with the same type in: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A list of rank 1 Tensors, indices into the embedding tables. It corresponds to sp_ids.values in embedding_lookup_sparse().</source>
          <target state="translated">같은 길이의리스트 &lt;code&gt;sample_indices&lt;/code&gt; 의 &lt;code&gt;Tensor&lt;/code&gt; : 동일한 유형 개체 &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; . 순위 1 텐서 목록, 임베딩 테이블에 대한 인덱스. embedding_lookup_sparse ()의 sp_ids.values에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="5a4928b60107d34184f7c4ab64693d2496be9b20" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;sample_splits&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with the same type in: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. A list of rank 1 Tensors containing per training example aggregation weights. It corresponds to the values field of a RaggedTensor with the same row_splits as ids in embedding_lookup(), when ids is a RaggedTensor.</source>
          <target state="translated">동일한 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;sample_splits&lt;/code&gt; 와 길이가 같은 목록 : &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; . 학습 예제 별 집계 가중치를 포함하는 순위 1 텐서 목록입니다. ids가 RaggedTensor 인 경우 embedding_lookup ()의 id와 동일한 row_splits가있는 RaggedTensor의 값 필드에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="757936ae3d44138f48ed78c49e2c80bc203f7ecf" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;sample_splits&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with the same type in: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A list of rank 1 Tensors, indices into the embedding tables. It corresponds to ids.values in embedding_lookup(), when ids is a RaggedTensor.</source>
          <target state="translated">같은 길이의리스트 &lt;code&gt;sample_splits&lt;/code&gt; 의 &lt;code&gt;Tensor&lt;/code&gt; : 동일한 유형 개체 &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; . 순위 1 텐서 목록, 임베딩 테이블에 대한 인덱스. ids가 RaggedTensor 인 경우 embedding_lookup ()의 ids.values에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="79842f565fb187a657c838c63141085cff7839fc" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;shape&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;int32&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 &lt;code&gt;shape&lt;/code&gt; 과 길이가 같은 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="37fa3615e9190a1b58dce19bfc17c592ed138d18" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;sparse_example_indices&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;sparse_example_indices&lt;/code&gt; 와 길이가 같은 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="34d7d1f18c004c269272ede605090a56c9b78f5a" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;sparse_example_indices&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;. a list of vectors where each value is the weight associated with a sparse feature group.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;sparse_example_indices&lt;/code&gt; 와 길이가 같은 목록입니다 . 각 값이 희소 특징 그룹과 관련된 가중치 인 벡터 목록.</target>
        </trans-unit>
        <trans-unit id="7346183e0197a57725ad04cb25de6b824266ebcb" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;sparse_example_indices&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int64&lt;/code&gt;. a list of vectors where each value is the indices which has corresponding weights in sparse_weights. This field maybe omitted for the dense approach.</source>
          <target state="translated">&lt;code&gt;int64&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;sparse_example_indices&lt;/code&gt; 와 길이가 같은 목록입니다 . 각 값이 sparse_weights에 해당 가중치를 갖는 인덱스 인 벡터 목록. 이 필드는 조밀 한 접근 방식을 위해 생략 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9093ce7b88405ada40f02c0dcfd0af67c09f5c43" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;sparse_example_indices&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int64&lt;/code&gt;. a list of vectors which contain feature indices.</source>
          <target state="translated">&lt;code&gt;int64&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;sparse_example_indices&lt;/code&gt; 와 길이가 같은 목록입니다 . 특징 인덱스를 포함하는 벡터 목록.</target>
        </trans-unit>
        <trans-unit id="ac87508202a0c026c29fe23bf21011d597f597f2" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;sparse_keys&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;int64&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;sparse_keys&lt;/code&gt; 와 길이가 같은 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="01ba1e6161dcceccfcd6b2133ba78e4e286e3c42" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;stats_summary_list&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;stats_summary_list&lt;/code&gt; 와 길이가 같은 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="de31586b9d1c0262490d901646ea7ff174464abb" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;stats_summary_list&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int32&lt;/code&gt;.</source>
          <target state="translated">유형이 &lt;code&gt;int32&lt;/code&gt; 인 &lt;code&gt;Tensor&lt;/code&gt; 객체의 &lt;code&gt;stats_summary_list&lt;/code&gt; 와 길이가 같은 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="87ab4f5f27edbf63f3a5d19beef4f7dc98633cea" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;values&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;. The maximum scalar values for each of the input tensors.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 &lt;code&gt;values&lt;/code&gt; 과 길이가 같은 목록입니다 . 각 입력 텐서의 최대 스칼라 값입니다.</target>
        </trans-unit>
        <trans-unit id="668652d17a94ba674a487376db9ddcf35557c2e0" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;values&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;float32&lt;/code&gt;. The minimum scalar values for each of the input tensors.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; 유형 의 &lt;code&gt;Tensor&lt;/code&gt; 객체 &lt;code&gt;values&lt;/code&gt; 과 길이가 같은 목록입니다 . 각 입력 텐서의 최소 스칼라 값입니다.</target>
        </trans-unit>
        <trans-unit id="28a32abbbdec1a7e85205ea43c24563c05dc7ca6" translate="yes" xml:space="preserve">
          <source>A list with the same length as &lt;code&gt;weights&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with the same type as &lt;code&gt;weights&lt;/code&gt;.</source>
          <target state="translated">같은 길이의 목록 &lt;code&gt;weights&lt;/code&gt; 의 &lt;code&gt;Tensor&lt;/code&gt; 같은 유형의 객체 &lt;code&gt;weights&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8156d7599e2d2bcde8db4497b38a6ad886598a0c" translate="yes" xml:space="preserve">
          <source>A list-specific equality assertion.</source>
          <target state="translated">리스트 특정의 등식 주장.</target>
        </trans-unit>
        <trans-unit id="c0a5448971eb757d85ea4bd7afc366bf2c45177f" translate="yes" xml:space="preserve">
          <source>A load status object, which can be used to make assertions about the status of a checkpoint restoration and run initialization/restore ops.</source>
          <target state="translated">검사 점 복원 상태에 대한 어설 션을 만들고 초기화 / 복원 작업을 실행하는 데 사용할 수있는로드 상태 개체입니다.</target>
        </trans-unit>
        <trans-unit id="4db26cd0f30a11bb7f91a843e8881dcbfd6bca96" translate="yes" xml:space="preserve">
          <source>A load status object, which can be used to make assertions about the status of a checkpoint restoration.</source>
          <target state="translated">검사 점 복원 상태에 대한 어설 션을 만드는 데 사용할 수있는로드 상태 개체</target>
        </trans-unit>
        <trans-unit id="bcb38bc4cb17c7b6f2a514aba1d30ceead1d637f" translate="yes" xml:space="preserve">
          <source>A load status object, which can be used to make assertions about the status of a checkpoint restoration. See &lt;code&gt;restore&lt;/code&gt; for details.</source>
          <target state="translated">검사 점 복원 상태에 대한 어설 션을 만드는 데 사용할 수있는로드 상태 개체입니다. 자세한 내용은 &lt;code&gt;restore&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="16cb6c2d4ca9015d9fd480f6440ce739be504b1c" translate="yes" xml:space="preserve">
          <source>A local &lt;a href=&quot;server&quot;&gt;&lt;code&gt;tf.distribute.Server&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">로컬 &lt;a href=&quot;server&quot;&gt; &lt;code&gt;tf.distribute.Server&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4072c5addf0e90b7cd5b0618fc42e760fb098760" translate="yes" xml:space="preserve">
          <source>A log directory read by TensorBoard to export the profile results.</source>
          <target state="translated">프로필 결과를 내보내기 위해 TensorBoard에서 읽은 로그 디렉터리입니다.</target>
        </trans-unit>
        <trans-unit id="1311367145b6a8b1b2cc75a1d24c106856b16b4b" translate="yes" xml:space="preserve">
          <source>A logical to physical core mapping, represented as a rank 3 numpy array. See the description of the &lt;code&gt;core_assignment&lt;/code&gt; property for more details.</source>
          <target state="translated">랭크 3 numpy 배열로 표시되는 논리적 대 물리적 코어 매핑입니다. 자세한 내용은 &lt;code&gt;core_assignment&lt;/code&gt; 속성에 대한 설명 을 참조하세요.</target>
        </trans-unit>
        <trans-unit id="afa55bdd057cb62609427c930a51a7136c98746f" translate="yes" xml:space="preserve">
          <source>A logit Tensor, the output of logit_fn.</source>
          <target state="translated">logit_fn의 출력 인 로짓 텐서.</target>
        </trans-unit>
        <trans-unit id="c72e3125f20e02c8d840d644bf209a60b4e99e30" translate="yes" xml:space="preserve">
          <source>A logit_fn (see below).</source>
          <target state="translated">logit_fn (아래 참조).</target>
        </trans-unit>
        <trans-unit id="c62e13dea713f4778a64607e58a5adaac4bba472" translate="yes" xml:space="preserve">
          <source>A logit_fn as defined above.</source>
          <target state="translated">위에 정의 된 logit_fn.</target>
        </trans-unit>
        <trans-unit id="490c4d676637cea322d4040e132d7915403149de" translate="yes" xml:space="preserve">
          <source>A long description of the summary sequence. Markdown is supported.</source>
          <target state="translated">요약 순서에 대한 자세한 설명입니다. Markdown이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="ee65fe6827a929fc81d126db9ec40983a7a7dae1" translate="yes" xml:space="preserve">
          <source>A loss &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">손실 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18ea36b1dd3eabfd69e8d77143db3627248cb816" translate="yes" xml:space="preserve">
          <source>A loss identifier. One of None or string name of a loss function/class or loss configuration dictionary or a loss function or a loss class instance</source>
          <target state="translated">손실 식별자. 손실 함수 / 클래스 또는 손실 구성 사전 또는 손실 함수 또는 손실 클래스 인스턴스의 없음 또는 문자열 이름 중 하나</target>
        </trans-unit>
        <trans-unit id="38963ebb34f2ec88a625b8e314255d82c5a09349" translate="yes" xml:space="preserve">
          <source>A lower bound value for the norm. Will use &lt;code&gt;sqrt(epsilon)&lt;/code&gt; as the divisor if &lt;code&gt;norm &amp;lt; sqrt(epsilon)&lt;/code&gt;.</source>
          <target state="translated">표준의 하한값입니다. 사용 &lt;code&gt;sqrt(epsilon)&lt;/code&gt; 경우 제수로 &lt;code&gt;norm &amp;lt; sqrt(epsilon)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98fa34a7ee4bc534cb246bc696a76ca3a0498417" translate="yes" xml:space="preserve">
          <source>A map from restore_names to variables. The restore_name is either the original or the moving average version of the variable name, depending on whether the variable name is in the &lt;code&gt;moving_avg_variables&lt;/code&gt;.</source>
          <target state="translated">restore_names에서 변수로의 맵입니다. restore_name은 변수 이름이 &lt;code&gt;moving_avg_variables&lt;/code&gt; 에 있는지 여부에 따라 변수 이름의 원래 버전 또는 이동 평균 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="ddf9d331c67d3c1ffeb8627727743aa5c5bc5879" translate="yes" xml:space="preserve">
          <source>A map of accelerator types to number of cores.</source>
          <target state="translated">여러 코어에 대한 가속기 유형의 맵.</target>
        </trans-unit>
        <trans-unit id="93d01b3e2343b903a52ecbc7a87b96c95114e451" translate="yes" xml:space="preserve">
          <source>A mapping from key to tensors. &lt;code&gt;_FeatureColumn&lt;/code&gt;s look up via these keys. For example &lt;code&gt;numeric_column('price')&lt;/code&gt; will look at 'price' key in this dict. Values are &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; depending on corresponding &lt;code&gt;_FeatureColumn&lt;/code&gt;.</source>
          <target state="translated">키에서 텐서로의 매핑. &lt;code&gt;_FeatureColumn&lt;/code&gt; 은이 키를 통해 조회합니다. 예를 들어 &lt;code&gt;numeric_column('price')&lt;/code&gt; 는이 dict에서 'price'키를 찾습니다. 값은 &lt;code&gt;Tensor&lt;/code&gt; 또는 &lt;code&gt;SparseTensor&lt;/code&gt; 이 대응에 따라 &lt;code&gt;_FeatureColumn&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="e5e748fa0b3451081d0b0d641cd71ca513122086" translate="yes" xml:space="preserve">
          <source>A mapping from key to tensors. &lt;code&gt;_FeatureColumn&lt;/code&gt;s look up via these keys. For example &lt;code&gt;numeric_column('price')&lt;/code&gt; will look at 'price' key in this dict. Values can be a &lt;code&gt;SparseTensor&lt;/code&gt; or a &lt;code&gt;Tensor&lt;/code&gt; depends on corresponding &lt;code&gt;_FeatureColumn&lt;/code&gt;.</source>
          <target state="translated">키에서 텐서로의 매핑. &lt;code&gt;_FeatureColumn&lt;/code&gt; 은이 키를 통해 조회합니다. 예를 들어 &lt;code&gt;numeric_column('price')&lt;/code&gt; 는이 dict에서 'price'키를 찾습니다. 값은 &lt;code&gt;SparseTensor&lt;/code&gt; 또는 &lt;code&gt;Tensor&lt;/code&gt; 가 해당 &lt;code&gt;_FeatureColumn&lt;/code&gt; 에 따라 달라집니다 .</target>
        </trans-unit>
        <trans-unit id="50d99829aa79e718c292abd10588b631cfc9b058" translate="yes" xml:space="preserve">
          <source>A mapping of TensorFlow jobs to label selectors. This allows users to specify many TensorFlow jobs in one Cluster Resolver, and each job can have pods belong with different label selectors. For example, a sample mapping might be</source>
          <target state="translated">TensorFlow 작업을 라벨 선택기에 매핑합니다. 이를 통해 사용자는 하나의 Cluster Resolver에서 많은 TensorFlow 작업을 지정할 수 있으며 각 작업은 서로 다른 레이블 선택기에 속하는 포드를 가질 수 있습니다. 예를 들어 샘플 매핑은 다음과 같을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e5facd307aad789304d9c4d18bc73ba8780a08a" translate="yes" xml:space="preserve">
          <source>A mask tensor (or list of tensors if the layer has multiple inputs).</source>
          <target state="translated">마스크 텐서 (또는 레이어에 여러 입력이있는 경우 텐서 목록)</target>
        </trans-unit>
        <trans-unit id="710aeb3b519798683230cd99335c676db1613050" translate="yes" xml:space="preserve">
          <source>A mask tensor (or list of tensors if the layer has multiple outputs).</source>
          <target state="translated">마스크 텐서 (또는 레이어에 여러 출력이있는 경우 텐서 목록)</target>
        </trans-unit>
        <trans-unit id="51d7585a87d4a0324f152906d47b5275754711da" translate="yes" xml:space="preserve">
          <source>A mask tensor of shape &lt;code&gt;lengths.shape + (maxlen,)&lt;/code&gt;, cast to specified dtype.</source>
          <target state="translated">모양 &lt;code&gt;lengths.shape + (maxlen,)&lt;/code&gt; 의 마스크 텐서로 , 지정된 dtype으로 캐스트됩니다.</target>
        </trans-unit>
        <trans-unit id="f5d1d5761ae2ac64c185b9659bd4936a5b4d090e" translate="yes" xml:space="preserve">
          <source>A matrix (2-D &lt;code&gt;Tensor&lt;/code&gt;) with &lt;code&gt;N&lt;/code&gt; rows and &lt;code&gt;3&lt;/code&gt; columns. Each column represents serialized &lt;code&gt;SparseTensor&lt;/code&gt;'s indices, values, and shape (respectively).</source>
          <target state="translated">&lt;code&gt;N&lt;/code&gt; 개의 행과 &lt;code&gt;3&lt;/code&gt; 개의 열이 있는 행렬 (2 차원 &lt;code&gt;Tensor&lt;/code&gt; ) 각 열은 직렬화 된 &lt;code&gt;SparseTensor&lt;/code&gt; 의 인덱스, 값 및 모양을 나타냅니다 (각각).</target>
        </trans-unit>
        <trans-unit id="e2838d604627693e3be68e6c63512034477d6c10" translate="yes" xml:space="preserve">
          <source>A mean &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">평균 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70ec66d07c47e583a77ce679fd3c9e3b1aaf2444" translate="yes" xml:space="preserve">
          <source>A metric identifier. One of None or string name of a metric function/class or metric configuration dictionary or a metric function or a metric class instance</source>
          <target state="translated">메트릭 식별자입니다. 메트릭 함수 / 클래스 또는 메트릭 구성 사전 또는 메트릭 함수 또는 메트릭 클래스 인스턴스의 없음 또는 문자열 이름 중 하나</target>
        </trans-unit>
        <trans-unit id="97459d37433ba4a16cf9d883811df3e60f1b50a2" translate="yes" xml:space="preserve">
          <source>A mini-batch of inputs to the Metric.</source>
          <target state="translated">메트릭에 대한 입력의 미니 배치.</target>
        </trans-unit>
        <trans-unit id="c549f46f367eb85a482b7e03be2cbd1a7d2e28c1" translate="yes" xml:space="preserve">
          <source>A minimal example is given below:</source>
          <target state="translated">다음은 최소한의 예입니다.</target>
        </trans-unit>
        <trans-unit id="7558532e7e5d992c3cb51d2e6ede1331cd26b46e" translate="yes" xml:space="preserve">
          <source>A mirrored variable or device string specifying the destination devices to copy &lt;code&gt;tensor&lt;/code&gt; to.</source>
          <target state="translated">&lt;code&gt;tensor&lt;/code&gt; 를 복사 할 대상 장치를 지정하는 미러링 된 변수 또는 장치 문자열 입니다.</target>
        </trans-unit>
        <trans-unit id="9231d86e38f289febcfc2883323328298e4ea32a" translate="yes" xml:space="preserve">
          <source>A mirrored variable, a per-replica tensor, or a device string. The return value will be copied to all destination devices (or all the devices where the &lt;code&gt;destinations&lt;/code&gt; value resides). To perform an all-reduction, pass &lt;code&gt;value&lt;/code&gt; to &lt;code&gt;destinations&lt;/code&gt;.</source>
          <target state="translated">미러링 된 변수, 복제 본당 텐서 또는 장치 문자열입니다. 반환 값은 모든 대상 장치 (또는 모든 장치에 복사됩니다 &lt;code&gt;destinations&lt;/code&gt; 상주 가치). 전체 축소를 수행하려면 &lt;code&gt;value&lt;/code&gt; 을 &lt;code&gt;destinations&lt;/code&gt; 로 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="32b2fe821485c5560ac4e459cb8c0902809f907b" translate="yes" xml:space="preserve">
          <source>A mixin for putting Python state in an object-based checkpoint.</source>
          <target state="translated">파이썬을 상태 기반 객체 기반 체크 포인트에 넣는 믹스 인.</target>
        </trans-unit>
        <trans-unit id="d0a2cf26bcd8846b75a5171da6238d25b0d7e8cf" translate="yes" xml:space="preserve">
          <source>A module is a named container for &lt;a href=&quot;variable&quot;&gt;&lt;code&gt;tf.Variable&lt;/code&gt;&lt;/a&gt;s, other &lt;a href=&quot;module&quot;&gt;&lt;code&gt;tf.Module&lt;/code&gt;&lt;/a&gt;s and functions which apply to user input. For example a dense layer in a neural network might be implemented as a &lt;a href=&quot;module&quot;&gt;&lt;code&gt;tf.Module&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">모듈은 &lt;a href=&quot;variable&quot;&gt; &lt;code&gt;tf.Variable&lt;/code&gt; &lt;/a&gt; , 다른 &lt;a href=&quot;module&quot;&gt; &lt;code&gt;tf.Module&lt;/code&gt; &lt;/a&gt; 및 사용자 입력에 적용되는 함수를 위한 명명 된 컨테이너입니다 . 예를 들어 신경망의 고밀도 계층은 &lt;a href=&quot;module&quot;&gt; &lt;code&gt;tf.Module&lt;/code&gt; &lt;/a&gt; 로 구현 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c124104a1d5b43cde1fce6d9c048fc0365bacff7" translate="yes" xml:space="preserve">
          <source>A month (1 &amp;lt;= month &amp;lt;= 12) in year. Must be an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">연도의 한 달 (1 &amp;lt;= 월 &amp;lt;= 12). &lt;code&gt;int&lt;/code&gt; 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="2507784164d896840e0c93652aa25a02a59a1447" translate="yes" xml:space="preserve">
          <source>A multi-hot tensor of shape &lt;code&gt;[D0, D1, ... DN, n_classes]&lt;/code&gt;</source>
          <target state="translated">모양의 멀티 핫 텐서 &lt;code&gt;[D0, D1, ... DN, n_classes]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5181a4184b3ba0a46d0dcd849c5ab606d8156ba0" translate="yes" xml:space="preserve">
          <source>A multi_enum_class flag.</source>
          <target state="translated">multi_enum_class 플래그.</target>
        </trans-unit>
        <trans-unit id="9f149ca168c8995adc7c131c686c6714210e338b" translate="yes" xml:space="preserve">
          <source>A mutable &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dtype&lt;/code&gt; 유형 의 변경 가능한 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66c600386c134529e6550dcfd2b00fc33d9b71da" translate="yes" xml:space="preserve">
          <source>A mutable &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">가변 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="38582b4d065e170551242cf55e02ee3790b6920d" translate="yes" xml:space="preserve">
          <source>A mutable &lt;code&gt;Tensor&lt;/code&gt;. A mutable Tensor. Should be from a Variable node.</source>
          <target state="translated">가변 &lt;code&gt;Tensor&lt;/code&gt; . 가변 텐서. 변수 노드에서 가져와야합니다.</target>
        </trans-unit>
        <trans-unit id="3041bc8ad733449a83e4c0ca6b97f8f52569f5ae" translate="yes" xml:space="preserve">
          <source>A mutable &lt;code&gt;Tensor&lt;/code&gt;. A reference to the temporary variable tensor.</source>
          <target state="translated">가변 &lt;code&gt;Tensor&lt;/code&gt; . 임시 변수 텐서에 대한 참조입니다.</target>
        </trans-unit>
        <trans-unit id="577eb87e525bdbac80a75f3d0abc77948f6fadcc" translate="yes" xml:space="preserve">
          <source>A mutable &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="translated">가변 &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;data&lt;/code&gt; 와 유형이 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="0d1ec3ce2436916ac5430e4b753b4566bdefaaa5" translate="yes" xml:space="preserve">
          <source>A mutable &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">가변 &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;input&lt;/code&gt; 과 동일한 유형 을가 집니다.</target>
        </trans-unit>
        <trans-unit id="c01fe5a23674751ac39fb4486c785fc26d130370" translate="yes" xml:space="preserve">
          <source>A mutable &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;inputs&lt;/code&gt;.</source>
          <target state="translated">가변 &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;inputs&lt;/code&gt; 과 유형이 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="5f16341e38b7d7aae0e05110edd2076d9c1a7c1b" translate="yes" xml:space="preserve">
          <source>A mutable &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;ref&lt;/code&gt;.</source>
          <target state="translated">가변 &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;ref&lt;/code&gt; 와 동일한 유형을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="e345a5b8299f2374f7e7c12be80bad26bcc8ee15" translate="yes" xml:space="preserve">
          <source>A mutable &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;var&lt;/code&gt;.</source>
          <target state="translated">가변 &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;var&lt;/code&gt; 와 동일한 유형 입니다.</target>
        </trans-unit>
        <trans-unit id="6dff2ca22f754cc1b6531478799eb7f30f8c2ad4" translate="yes" xml:space="preserve">
          <source>A mutable &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;.</source>
          <target state="translated">가변 &lt;code&gt;Tensor&lt;/code&gt; . 다음 유형 중 하나 여야합니다 &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;uint8&lt;/code&gt; , &lt;code&gt;int16&lt;/code&gt; , &lt;code&gt;int8&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;qint8&lt;/code&gt; , &lt;code&gt;quint8&lt;/code&gt; , &lt;code&gt;qint32&lt;/code&gt; , &lt;code&gt;bfloat16&lt;/code&gt; , &lt;code&gt;uint16&lt;/code&gt; , &lt;code&gt;complex128&lt;/code&gt; , &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;uint32&lt;/code&gt; , &lt;code&gt;uint64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f252d985d933077b29c0a9fc8cb69c6cc0fd7c60" translate="yes" xml:space="preserve">
          <source>A mutable &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. A mutable Tensor. Should be from a Variable node.</source>
          <target state="translated">가변 &lt;code&gt;Tensor&lt;/code&gt; . 다음 유형 중 하나 여야합니다 &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;uint8&lt;/code&gt; , &lt;code&gt;int16&lt;/code&gt; , &lt;code&gt;int8&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;qint8&lt;/code&gt; , &lt;code&gt;quint8&lt;/code&gt; , &lt;code&gt;qint32&lt;/code&gt; , &lt;code&gt;bfloat16&lt;/code&gt; , &lt;code&gt;uint16&lt;/code&gt; , &lt;code&gt;complex128&lt;/code&gt; , &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;uint32&lt;/code&gt; , &lt;code&gt;uint64&lt;/code&gt; . 가변 텐서. 변수 노드에서 가져와야합니다.</target>
        </trans-unit>
        <trans-unit id="1bfa3f9d46d1702e7b5f711acd94cbe7369ceee0" translate="yes" xml:space="preserve">
          <source>A mutable &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. Should be from a &lt;code&gt;Variable&lt;/code&gt; node.</source>
          <target state="translated">가변 &lt;code&gt;Tensor&lt;/code&gt; . 다음 유형 중 하나 여야합니다 &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;uint8&lt;/code&gt; , &lt;code&gt;int16&lt;/code&gt; , &lt;code&gt;int8&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;qint8&lt;/code&gt; , &lt;code&gt;quint8&lt;/code&gt; , &lt;code&gt;qint32&lt;/code&gt; , &lt;code&gt;bfloat16&lt;/code&gt; , &lt;code&gt;uint16&lt;/code&gt; , &lt;code&gt;complex128&lt;/code&gt; , &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;uint32&lt;/code&gt; , &lt;code&gt;uint64&lt;/code&gt; . &lt;code&gt;Variable&lt;/code&gt; 노드 에서 가져와야 합니다.</target>
        </trans-unit>
        <trans-unit id="1c7a1a1b166ae8af6e4af7e524d8dba3017fd1f1" translate="yes" xml:space="preserve">
          <source>A mutable &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. Should be from a Variable().</source>
          <target state="translated">가변 &lt;code&gt;Tensor&lt;/code&gt; . 다음 유형 중 하나 여야합니다 &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;uint8&lt;/code&gt; , &lt;code&gt;int16&lt;/code&gt; , &lt;code&gt;int8&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;qint8&lt;/code&gt; , &lt;code&gt;quint8&lt;/code&gt; , &lt;code&gt;qint32&lt;/code&gt; , &lt;code&gt;bfloat16&lt;/code&gt; , &lt;code&gt;uint16&lt;/code&gt; , &lt;code&gt;complex128&lt;/code&gt; , &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;uint32&lt;/code&gt; , &lt;code&gt;uint64&lt;/code&gt; . Variable ()에서 가져와야합니다.</target>
        </trans-unit>
        <trans-unit id="82aa3add4496669e663c693ca1da0ea74f5e5887" translate="yes" xml:space="preserve">
          <source>A mutable &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;. Should be from a &lt;code&gt;Variable&lt;/code&gt; node.</source>
          <target state="translated">가변 &lt;code&gt;Tensor&lt;/code&gt; . 다음 유형 중 하나 여야합니다 &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;uint8&lt;/code&gt; , &lt;code&gt;uint16&lt;/code&gt; , &lt;code&gt;int16&lt;/code&gt; , &lt;code&gt;int8&lt;/code&gt; , &lt;code&gt;complex64&lt;/code&gt; , &lt;code&gt;complex128&lt;/code&gt; , &lt;code&gt;qint8&lt;/code&gt; , &lt;code&gt;quint8&lt;/code&gt; , &lt;code&gt;qint32&lt;/code&gt; , &lt;code&gt;half&lt;/code&gt; . &lt;code&gt;Variable&lt;/code&gt; 노드 에서 가져와야 합니다.</target>
        </trans-unit>
        <trans-unit id="caf9733b6a2820b69212cb6176cadf3559607f25" translate="yes" xml:space="preserve">
          <source>A mutable &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Should be from a &lt;code&gt;Variable&lt;/code&gt; node.</source>
          <target state="translated">가변 &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;bfloat16&lt;/code&gt; , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; , &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; 유형 중 하나 여야합니다 . &lt;code&gt;Variable&lt;/code&gt; 노드 에서 가져와야 합니다.</target>
        </trans-unit>
        <trans-unit id="d4b450ebb2637508c419509e3ed3ddc7739950cc" translate="yes" xml:space="preserve">
          <source>A mutable &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Should be from a scalar &lt;code&gt;Variable&lt;/code&gt; node.</source>
          <target state="translated">가변 &lt;code&gt;Tensor&lt;/code&gt; . 다음 유형 중 하나 여야합니다 : &lt;code&gt;int32&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; . 스칼라 &lt;code&gt;Variable&lt;/code&gt; 노드 에서 가져와야 합니다.</target>
        </trans-unit>
        <trans-unit id="2a49d7bf38c05bdf95cd682025df3da33809daf3" translate="yes" xml:space="preserve">
          <source>A mutable &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;var&lt;/code&gt;.</source>
          <target state="translated">가변 &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;var&lt;/code&gt; 와 동일한 유형이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="d68aa156dff5f1f2a6fd583580361c27449b8b82" translate="yes" xml:space="preserve">
          <source>A mutable &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;var&lt;/code&gt;. Should be from a Variable().</source>
          <target state="translated">가변 &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;var&lt;/code&gt; 와 동일한 유형이어야합니다 . Variable ()에서 가져와야합니다.</target>
        </trans-unit>
        <trans-unit id="fd4058a2f3afbfab4825609f47978f60f1ae6e0f" translate="yes" xml:space="preserve">
          <source>A mutable &lt;code&gt;Tensor&lt;/code&gt;. Should be from a &lt;code&gt;Variable&lt;/code&gt; node.</source>
          <target state="translated">가변 &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;Variable&lt;/code&gt; 노드 에서 가져와야 합니다.</target>
        </trans-unit>
        <trans-unit id="528d684a49bb5fd7d0385ca0696aa9e016f2d262" translate="yes" xml:space="preserve">
          <source>A mutable &lt;code&gt;Tensor&lt;/code&gt;. Should be from a &lt;code&gt;Variable&lt;/code&gt; node. May be uninitialized.</source>
          <target state="translated">가변 &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;Variable&lt;/code&gt; 노드 에서 가져와야 합니다. 초기화되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7b759bd5cd09a91bbbc74e915af48b248404750" translate="yes" xml:space="preserve">
          <source>A mutable &lt;code&gt;Tensor&lt;/code&gt;. The ref tensor to be forwarded to the appropriate output.</source>
          <target state="translated">가변 &lt;code&gt;Tensor&lt;/code&gt; . 적절한 출력으로 전달할 참조 텐서입니다.</target>
        </trans-unit>
        <trans-unit id="1e4545597a197a202607d6a5e22743798600408b" translate="yes" xml:space="preserve">
          <source>A mutable &lt;code&gt;Tensor&lt;/code&gt;. The tensor to be made available to the child frame.</source>
          <target state="translated">가변 &lt;code&gt;Tensor&lt;/code&gt; . 자식 프레임에 사용할 수있는 텐서입니다.</target>
        </trans-unit>
        <trans-unit id="a99a89cdb520362e5e0ec72c06d740e70dbceaf9" translate="yes" xml:space="preserve">
          <source>A mutable &lt;code&gt;Tensor&lt;/code&gt;. The tensor to be made available to the next iteration.</source>
          <target state="translated">가변 &lt;code&gt;Tensor&lt;/code&gt; . 다음 반복에 사용할 수있는 텐서입니다.</target>
        </trans-unit>
        <trans-unit id="94b9f4613a114af525d9ae6523648ed5904840b8" translate="yes" xml:space="preserve">
          <source>A mutable &lt;code&gt;Tensor&lt;/code&gt;. The tensor to be made available to the parent frame.</source>
          <target state="translated">가변 &lt;code&gt;Tensor&lt;/code&gt; . 부모 프레임에서 사용할 수있는 텐서입니다.</target>
        </trans-unit>
        <trans-unit id="e15d369fcf9519a13c89eb449ce7851b12802a9a" translate="yes" xml:space="preserve">
          <source>A name for prefixing the operations (optional).</source>
          <target state="translated">작업 접두사 이름 (선택 사항).</target>
        </trans-unit>
        <trans-unit id="13a392f386bc10d4382317dc2cbea065008e3064" translate="yes" xml:space="preserve">
          <source>A name for the generated node. If display_name is not set, it will also serve as the tag name in TensorBoard. (In that case, the tag name will inherit tf name scopes.)</source>
          <target state="translated">생성 된 노드의 이름입니다. display_name이 설정되지 않은 경우 TensorBoard에서 태그 이름으로도 사용됩니다. (이 경우 태그 이름은 tf 이름 범위를 상속합니다.)</target>
        </trans-unit>
        <trans-unit id="7800913307dfc95b7d1aaa7f75fcb9080e5bfa62" translate="yes" xml:space="preserve">
          <source>A name for the generated node. Will also serve as a series name in TensorBoard.</source>
          <target state="translated">생성 된 노드의 이름입니다. TensorBoard에서 시리즈 이름으로도 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8d8b87673275d081ca662aa50dfc16a5cb70c09b" translate="yes" xml:space="preserve">
          <source>A name for the generated node. Will also serve as the series name in TensorBoard.</source>
          <target state="translated">생성 된 노드의 이름입니다. TensorBoard에서 시리즈 이름으로도 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e5d5ec50be3d0361d762d8d16330e226a1568909" translate="yes" xml:space="preserve">
          <source>A name for the operation (optional)</source>
          <target state="translated">작업 이름 (선택 사항)</target>
        </trans-unit>
        <trans-unit id="d2d47c6e9fca4420d3dcb2a72279de84696cdd6c" translate="yes" xml:space="preserve">
          <source>A name for the operation (optional).</source>
          <target state="translated">작업의 이름 (선택 사항).</target>
        </trans-unit>
        <trans-unit id="11307224a65513477c0e83fbf26b558bc42d9bf2" translate="yes" xml:space="preserve">
          <source>A name for the operation (optional). If not specified &quot;conv_transpose&quot; is used.</source>
          <target state="translated">작업의 이름 (선택 사항). 지정하지 않으면 &quot;conv_transpose&quot;가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e05fb9670b558250646b7271d563965070116d27" translate="yes" xml:space="preserve">
          <source>A name for the operation (optional). If not specified &quot;erosion2d&quot; is used.</source>
          <target state="translated">작업의 이름 (선택 사항). 지정하지 않으면 &quot;erosion2d&quot;가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="baea7fe0b425903a15a21bbafe6d7a2ef8b8e53e" translate="yes" xml:space="preserve">
          <source>A name for the operation (optional). If not specified &quot;nn_relu_layer&quot; is used.</source>
          <target state="translated">작업의 이름 (선택 사항). 지정하지 않으면 &quot;nn_relu_layer&quot;가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b47b843b66e82ca6f39ebcb0d0c64c7457c3c23d" translate="yes" xml:space="preserve">
          <source>A name for the operation (optional). If not specified &quot;xw_plus_b&quot; is used.</source>
          <target state="translated">작업의 이름 (선택 사항). 지정하지 않으면 &quot;xw_plus_b&quot;가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="43d5a99153ebd84f4b6390fd3cf3af5cda627805" translate="yes" xml:space="preserve">
          <source>A name for the operation.</source>
          <target state="translated">작업의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="863d48b4acbb8080c0f4bbdef2410f12cb4b3c76" translate="yes" xml:space="preserve">
          <source>A name for the operation. Defaults to &quot;range&quot;.</source>
          <target state="translated">작업의 이름입니다. 기본값은 &quot;범위&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="51af3f501b6a9cb7f5487e933eec1de15fc17212" translate="yes" xml:space="preserve">
          <source>A name for the operations (optional).</source>
          <target state="translated">작업의 이름 (선택 사항).</target>
        </trans-unit>
        <trans-unit id="70c08551a4d228da65e9b6138687d262c3f45564" translate="yes" xml:space="preserve">
          <source>A name for the scope created by this template. If necessary, the name will be made unique by appending &lt;code&gt;_N&lt;/code&gt; to the name.</source>
          <target state="translated">이 템플릿으로 만든 범위의 이름입니다. 필요한 경우 이름에 &lt;code&gt;_N&lt;/code&gt; 을 추가 하여 이름을 고유하게 만듭니다.</target>
        </trans-unit>
        <trans-unit id="bc631f8764bb163b46f53582336f62f6c22cc955" translate="yes" xml:space="preserve">
          <source>A name for the scope.</source>
          <target state="translated">범위의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="7b2b1ca9f3fd477d57ba1473a0f4f40b7263f138" translate="yes" xml:space="preserve">
          <source>A name for the summary to be written.</source>
          <target state="translated">작성할 요약의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="30469110eb7502b88d0c1de88fb598eab9605993" translate="yes" xml:space="preserve">
          <source>A name for the underlying op.</source>
          <target state="translated">기본 작업의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="f6332218fe52a98f5f540e5ee728abaea7c098d7" translate="yes" xml:space="preserve">
          <source>A name for this &lt;code&gt;LinearOperator&lt;/code&gt;</source>
          <target state="translated">이 &lt;code&gt;LinearOperator&lt;/code&gt; 의 이름</target>
        </trans-unit>
        <trans-unit id="ac77d565428fe54f1a25abe97b07b2e7879af73f" translate="yes" xml:space="preserve">
          <source>A name for this &lt;code&gt;LinearOperator&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;LinearOperator&lt;/code&gt; 의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="bae9d5517c91de20226098159802f4178651af75" translate="yes" xml:space="preserve">
          <source>A name for this &lt;code&gt;LinearOperator&lt;/code&gt;. Default is &lt;code&gt;operator.name + &quot;_adjoint&quot;&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;LinearOperator&lt;/code&gt; 의 이름입니다 . 기본값은 &lt;code&gt;operator.name + &quot;_adjoint&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="90622332681d3103c350919d5a031dce64ccce6f" translate="yes" xml:space="preserve">
          <source>A name for this &lt;code&gt;LinearOperator&lt;/code&gt;. Default is &lt;code&gt;operator.name + &quot;_inv&quot;&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;LinearOperator&lt;/code&gt; 의 이름입니다 . 기본값은 &lt;code&gt;operator.name + &quot;_inv&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c086063a0c9ccd82c06eb7074ad607a0b4b9227b" translate="yes" xml:space="preserve">
          <source>A name for this &lt;code&gt;LinearOperator&lt;/code&gt;. Default is the individual operators names joined with &lt;code&gt;_o_&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;LinearOperator&lt;/code&gt; 의 이름입니다 . 기본값은 &lt;code&gt;_o_&lt;/code&gt; 로 결합 된 개별 연산자 이름 입니다.</target>
        </trans-unit>
        <trans-unit id="585ed4194f5134e836c88c00dec89fb20363d29e" translate="yes" xml:space="preserve">
          <source>A name for this &lt;code&gt;LinearOperator&lt;/code&gt;. Default is the individual operators names joined with &lt;code&gt;_x_&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;LinearOperator&lt;/code&gt; 의 이름입니다 . 기본값은 &lt;code&gt;_x_&lt;/code&gt; 로 결합 된 개별 연산자 이름 입니다.</target>
        </trans-unit>
        <trans-unit id="2997187f9c33f6b29282deac1ce28281103c98e4" translate="yes" xml:space="preserve">
          <source>A name for this &lt;code&gt;Op&lt;/code&gt;.</source>
          <target state="translated">이에 대한 이름 &lt;code&gt;Op&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b8bc07d2087a119c272780b0b28c4bd70e201b8" translate="yes" xml:space="preserve">
          <source>A name for this &lt;code&gt;Op&lt;/code&gt;. Defaults to &quot;collapse_repeated_labels&quot;.</source>
          <target state="translated">이에 대한 이름 &lt;code&gt;Op&lt;/code&gt; . 기본값은 &quot;collapse_repeated_labels&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="5410b3a465a13dcc049a160b65929f8ccdae82e4" translate="yes" xml:space="preserve">
          <source>A name for this &lt;code&gt;Op&lt;/code&gt;. Defaults to &quot;ctc_loss_dense&quot;.</source>
          <target state="translated">이에 대한 이름 &lt;code&gt;Op&lt;/code&gt; . 기본값은 &quot;ctc_loss_dense&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="ea06347f4456d8e28403890af626abd6bddbd32a" translate="yes" xml:space="preserve">
          <source>A name for this &lt;code&gt;Op&lt;/code&gt;. Defaults to &quot;ctc_unique_labels&quot;.</source>
          <target state="translated">이에 대한 이름 &lt;code&gt;Op&lt;/code&gt; . 기본값은 &quot;ctc_unique_labels&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="0ab0760e4ad57b983241e4d313a1356151590810" translate="yes" xml:space="preserve">
          <source>A name for this &lt;code&gt;Op&lt;/code&gt;. Defaults to &quot;eye&quot;.</source>
          <target state="translated">이에 대한 이름 &lt;code&gt;Op&lt;/code&gt; . 기본값은 &quot;눈&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="209c79c3546425223fb969bac0a89b14389731ba" translate="yes" xml:space="preserve">
          <source>A name for this op.</source>
          <target state="translated">이 작전의 이름.</target>
        </trans-unit>
        <trans-unit id="1830af614ea3214012f015ce66b1861ac0fff108" translate="yes" xml:space="preserve">
          <source>A name for this operation (defaults to 'histogram_fixed_width').</source>
          <target state="translated">이 작업의 이름 (기본값 : 'histogram_fixed_width').</target>
        </trans-unit>
        <trans-unit id="96c892991c680c28392171631ac0f8813c92a4e7" translate="yes" xml:space="preserve">
          <source>A name for this operation (optional).</source>
          <target state="translated">이 작업의 이름 (선택 사항).</target>
        </trans-unit>
        <trans-unit id="67a6883ed9292c53018ea92b1ee00ab1cae2f6d0" translate="yes" xml:space="preserve">
          <source>A name for this operation (optional). Defaults to &quot;EnsureShape&quot;.</source>
          <target state="translated">이 작업의 이름 (선택 사항). 기본값은 &quot;EnsureShape&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="591b001b12758863164a941da044c4fb91ac7305" translate="yes" xml:space="preserve">
          <source>A name for this operation (optional). Defaults to &quot;assert_equal&quot;.</source>
          <target state="translated">이 작업의 이름 (선택 사항). 기본값은 &quot;assert_equal&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="711861986173b78b6b950849db967dc14f5a185e" translate="yes" xml:space="preserve">
          <source>A name for this operation (optional). Defaults to &quot;assert_greater&quot;.</source>
          <target state="translated">이 작업의 이름 (선택 사항). 기본값은 &quot;assert_greater&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="fc3fb4eb110cb7a0080e3bee7f2b2727b5c48389" translate="yes" xml:space="preserve">
          <source>A name for this operation (optional). Defaults to &quot;assert_greater_equal&quot;.</source>
          <target state="translated">이 작업의 이름 (선택 사항). 기본값은 &quot;assert_greater_equal&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="f24197e019bd1f6593bdd465076de53bdbb110ab" translate="yes" xml:space="preserve">
          <source>A name for this operation (optional). Defaults to &quot;assert_integer&quot;.</source>
          <target state="translated">이 작업의 이름 (선택 사항). 기본값은 &quot;assert_integer&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="56d101cd64f7c0064658db0b801707099cc7c6b0" translate="yes" xml:space="preserve">
          <source>A name for this operation (optional). Defaults to &quot;assert_less&quot;.</source>
          <target state="translated">이 작업의 이름 (선택 사항). 기본값은 &quot;assert_less&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="2867fc369c8edb8bfe0f6d75c8c069aff60670b7" translate="yes" xml:space="preserve">
          <source>A name for this operation (optional). Defaults to &quot;assert_less_equal&quot;.</source>
          <target state="translated">이 작업의 이름 (선택 사항). 기본값은 &quot;assert_less_equal&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="fc13f8451c0cf9b90a9ab13b452e232dcb4c8006" translate="yes" xml:space="preserve">
          <source>A name for this operation (optional). Defaults to &quot;assert_near&quot;.</source>
          <target state="translated">이 작업의 이름 (선택 사항). 기본값은 &quot;assert_near&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="d4a5d7a145b85d72bef9ff556dd2c56b67b48781" translate="yes" xml:space="preserve">
          <source>A name for this operation (optional). Defaults to &quot;assert_negative&quot;.</source>
          <target state="translated">이 작업의 이름 (선택 사항). 기본값은 &quot;assert_negative&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="514c99499f83a68890292acb88490fa8ea416936" translate="yes" xml:space="preserve">
          <source>A name for this operation (optional). Defaults to &quot;assert_non_negative&quot;.</source>
          <target state="translated">이 작업의 이름 (선택 사항). 기본값은 &quot;assert_non_negative&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="c4eb779d4416145d5d1ee4a5e664624864a15e06" translate="yes" xml:space="preserve">
          <source>A name for this operation (optional). Defaults to &quot;assert_non_positive&quot;.</source>
          <target state="translated">이 작업의 이름 (선택 사항). 기본값은 &quot;assert_non_positive&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="526939d7cf68b701de4b34f2c5b30e535ea100a3" translate="yes" xml:space="preserve">
          <source>A name for this operation (optional). Defaults to &quot;assert_none_equal&quot;.</source>
          <target state="translated">이 작업의 이름 (선택 사항). 기본값은 &quot;assert_none_equal&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="ab95780507d711b6206ceb387184071f2bc7374e" translate="yes" xml:space="preserve">
          <source>A name for this operation (optional). Defaults to &quot;assert_positive&quot;.</source>
          <target state="translated">이 작업의 이름 (선택 사항). 기본값은 &quot;assert_positive&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="272d1fdcf7dc0b22f2291790008e0020ceeeee71" translate="yes" xml:space="preserve">
          <source>A name for this operation (optional). Defaults to &quot;assert_rank&quot;.</source>
          <target state="translated">이 작업의 이름 (선택 사항). 기본값은 &quot;assert_rank&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="8bdc8278c3080089f20076205bf173570b563626" translate="yes" xml:space="preserve">
          <source>A name for this operation (optional). Defaults to &quot;assert_rank_at_least&quot;.</source>
          <target state="translated">이 작업의 이름 (선택 사항). 기본값은 &quot;assert_rank_at_least&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="d6550d251602c3624b20a17751b00f670b2d77f1" translate="yes" xml:space="preserve">
          <source>A name for this operation (optional). Defaults to &quot;assert_rank_in&quot;.</source>
          <target state="translated">이 작업의 이름 (선택 사항). 기본값은 &quot;assert_rank_in&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="42668bddcd7b7c4be1af1d3cc0018800aa224d92" translate="yes" xml:space="preserve">
          <source>A name for this operation (optional). Defaults to &quot;assert_shapes&quot;.</source>
          <target state="translated">이 작업의 이름 (선택 사항). 기본값은 &quot;assert_shapes&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="ddb5d985cb48a7ae77683b6ae2266c5b9777bc6e" translate="yes" xml:space="preserve">
          <source>A name for this operation (optional). Defaults to &quot;is_non_decreasing&quot;</source>
          <target state="translated">이 작업의 이름 (선택 사항). 기본값은 &quot;is_non_decreasing&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="b24ca72927b68709dace2043bc0f0c3a25d15756" translate="yes" xml:space="preserve">
          <source>A name for this operation (optional). Defaults to &quot;is_strictly_increasing&quot;</source>
          <target state="translated">이 작업의 이름 (선택 사항). 기본값은 &quot;is_strictly_increasing&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="1012425b129a8e84638e89d616164d383961612c" translate="yes" xml:space="preserve">
          <source>A name for this operation. Defaults to &quot;assert_scalar&quot;</source>
          <target state="translated">이 작업의 이름입니다. 기본값은 &quot;assert_scalar&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="3ad86bdf8501ca63d960175b000045c489a86d70" translate="yes" xml:space="preserve">
          <source>A name for this operation. Defaults to &quot;assert_type&quot;</source>
          <target state="translated">이 작업의 이름입니다. 기본값은 &quot;assert_type&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="2eee73e6a2857bac03657f372d15ac704c46a76c" translate="yes" xml:space="preserve">
          <source>A name for this summary. The summary tag used for TensorBoard will be this name prefixed by any active name scopes.</source>
          <target state="translated">이 요약의 이름입니다. TensorBoard에 사용되는 요약 태그는이 이름 앞에 활성 이름 범위가 붙습니다.</target>
        </trans-unit>
        <trans-unit id="856d8c93729ed1b291d64f1fd2f84315b77fc1bb" translate="yes" xml:space="preserve">
          <source>A name of the operation (optional)</source>
          <target state="translated">작업 이름 (선택 사항)</target>
        </trans-unit>
        <trans-unit id="200fd73753628738d39c9f576090d124bef80aaa" translate="yes" xml:space="preserve">
          <source>A name of the operation (optional).</source>
          <target state="translated">작업의 이름 (선택 사항).</target>
        </trans-unit>
        <trans-unit id="ec48cd096e90bb4c5513053219fc1c44ee3037ae" translate="yes" xml:space="preserve">
          <source>A name prefix for the RaggedTensor (optional).</source>
          <target state="translated">RaggedTensor의 이름 접두사 (선택 사항).</target>
        </trans-unit>
        <trans-unit id="d45be4375324406fbc007e909e456dd473bc19a8" translate="yes" xml:space="preserve">
          <source>A name prefix for the returned tensor (optional).</source>
          <target state="translated">반환 된 텐서의 이름 접두사 (선택 사항).</target>
        </trans-unit>
        <trans-unit id="81d80821d58012070a0f412bd832a2dd3f58f1c2" translate="yes" xml:space="preserve">
          <source>A name prefix for the returned tensors (optional)</source>
          <target state="translated">반환 된 텐서의 이름 접두사 (선택 사항)</target>
        </trans-unit>
        <trans-unit id="aa55ad8a27f0d3cf33fbffdede09d396c58310d0" translate="yes" xml:space="preserve">
          <source>A name prefix for the returned tensors (optional).</source>
          <target state="translated">반환 된 텐서의 이름 접두사 (선택 사항).</target>
        </trans-unit>
        <trans-unit id="269d6ea5a9190d4418629431f701d1daec61a9fd" translate="yes" xml:space="preserve">
          <source>A name scope for the associated operations (optional).</source>
          <target state="translated">연관된 작업의 이름 범위 (선택 사항).</target>
        </trans-unit>
        <trans-unit id="f2bf776ca9ccdb763d241c32c1144b1db056ff2b" translate="yes" xml:space="preserve">
          <source>A name scope for the operation.</source>
          <target state="translated">작업의 이름 범위입니다.</target>
        </trans-unit>
        <trans-unit id="4961134af188c71fed4e84a040049b8db2655eab" translate="yes" xml:space="preserve">
          <source>A name scope to use for ops added by this method.</source>
          <target state="translated">이 메서드에 의해 추가 된 작업에 사용할 이름 범위입니다.</target>
        </trans-unit>
        <trans-unit id="005989016eb3dc143da4a2bb8019ce18ff059c84" translate="yes" xml:space="preserve">
          <source>A name to give this &lt;code&gt;Op&lt;/code&gt; (optional).</source>
          <target state="translated">이름은이 제공하는 &lt;code&gt;Op&lt;/code&gt; (옵션).</target>
        </trans-unit>
        <trans-unit id="a75d1c4877138a62aaf545514b0f77c5cf24719e" translate="yes" xml:space="preserve">
          <source>A name to give this &lt;code&gt;Op&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Op&lt;/code&gt; 에 부여 할 이름 입니다.</target>
        </trans-unit>
        <trans-unit id="d0e4c0ff6a8e5daefc45e44dd3c0c4a16bda52b2" translate="yes" xml:space="preserve">
          <source>A name to give this &lt;code&gt;Op&lt;/code&gt;. Defaults to &quot;assert_type&quot;</source>
          <target state="translated">이 &lt;code&gt;Op&lt;/code&gt; 에 부여 할 이름 입니다. 기본값은 &quot;assert_type&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="cedb04bc33344f5420c194c84ad802fab0a01af4" translate="yes" xml:space="preserve">
          <source>A name to give this &lt;code&gt;Op&lt;/code&gt;. Defaults to &lt;code&gt;cholesky_solve&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Op&lt;/code&gt; 에 부여 할 이름 입니다. 기본값은 &lt;code&gt;cholesky_solve&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="33b9e8cd526d3265dd11f024647bcee655619fb0" translate="yes" xml:space="preserve">
          <source>A name to give this &lt;code&gt;Op&lt;/code&gt;. Defaults to &lt;code&gt;logdet&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Op&lt;/code&gt; 에 부여 할 이름 입니다. 기본값은 &lt;code&gt;logdet&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8a02285f44e1af4cb33cdf14dc997dc0a1274147" translate="yes" xml:space="preserve">
          <source>A name to prepend to all ops created by this class.</source>
          <target state="translated">이 클래스에서 만든 모든 작업 앞에 추가 할 이름입니다.</target>
        </trans-unit>
        <trans-unit id="ca9f2c98b31116fa266c8d8f91d3741048398069" translate="yes" xml:space="preserve">
          <source>A namedtuple representing the final state with fields:</source>
          <target state="translated">필드가있는 최종 상태를 나타내는 명명 된 튜플 :</target>
        </trans-unit>
        <trans-unit id="cb8595491f14a7d0e67df4d95eb9d1a7656d679e" translate="yes" xml:space="preserve">
          <source>A negative &lt;code&gt;pos&lt;/code&gt; indicates distance within the string backwards from the end.</source>
          <target state="translated">음의 &lt;code&gt;pos&lt;/code&gt; 끝에서 문자열 뒤쪽에서 거리를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b30197c88135bf8bc2d5941147dd87a3a9b633cb" translate="yes" xml:space="preserve">
          <source>A nest of NumPy input arrays that will be converted into a dataset. Note that lists of Numpy arrays are stacked, as that is normal &lt;a href=&quot;../../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; behavior.</source>
          <target state="translated">데이터 세트로 변환 될 NumPy 입력 배열의 중첩입니다. Numpy 배열의 목록은 일반적인 &lt;a href=&quot;../../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; 동작 이므로 누적됩니다 .</target>
        </trans-unit>
        <trans-unit id="55f47f0b47628b23e9796b59c6b9d739c2017afb" translate="yes" xml:space="preserve">
          <source>A nest of NumPy input arrays that will be converted into a dataset. Note that lists of Numpy arrays are stacked, as that is normal &lt;a href=&quot;../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; behavior.</source>
          <target state="translated">데이터 세트로 변환 될 NumPy 입력 배열의 중첩입니다. Numpy 배열의 목록은 일반적인 &lt;a href=&quot;../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; 동작 이므로 누적됩니다 .</target>
        </trans-unit>
        <trans-unit id="1ef32e8d422d1c5c9b1e5f6a050ade5aa38641cf" translate="yes" xml:space="preserve">
          <source>A nest of NumPy input arrays that will be distributed evenly across all replicas. Note that lists of Numpy arrays are stacked, as that is normal &lt;a href=&quot;../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; behavior.</source>
          <target state="translated">모든 복제본에 균등하게 분산되는 NumPy 입력 어레이의 중첩. Numpy 배열의 목록은 일반적인 &lt;a href=&quot;../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; 동작 이므로 누적됩니다 .</target>
        </trans-unit>
        <trans-unit id="cc6d09a53b4b141c31ef1c35c02b7d02bcc149af" translate="yes" xml:space="preserve">
          <source>A nested &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;tuple&lt;/code&gt; or &lt;code&gt;np.ndarray&lt;/code&gt;. Any nested element that is not a &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;tuple&lt;/code&gt; must be a scalar value compatible with &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="translated">중첩 된 &lt;code&gt;list&lt;/code&gt; , &lt;code&gt;tuple&lt;/code&gt; 또는 &lt;code&gt;np.ndarray&lt;/code&gt; . &lt;code&gt;list&lt;/code&gt; 이나 &lt;code&gt;tuple&lt;/code&gt; 이 아닌 중첩 된 요소는 &lt;code&gt;dtype&lt;/code&gt; 과 호환되는 스칼라 값이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="e34a7c7ae8041c8bab361a65a14395a4247d8de0" translate="yes" xml:space="preserve">
          <source>A nested &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;tuple&lt;/code&gt; or &lt;code&gt;np.ndarray&lt;/code&gt;. Any nested element that is not a &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;tuple&lt;/code&gt; or &lt;code&gt;np.ndarray&lt;/code&gt; must be a scalar value compatible with &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="translated">중첩 된 &lt;code&gt;list&lt;/code&gt; , &lt;code&gt;tuple&lt;/code&gt; 또는 &lt;code&gt;np.ndarray&lt;/code&gt; . 이 아닌 모든 중첩 된 요소 &lt;code&gt;list&lt;/code&gt; , &lt;code&gt;tuple&lt;/code&gt; 또는 &lt;code&gt;np.ndarray&lt;/code&gt; 는 호환 스칼라 값이어야합니다 &lt;code&gt;dtype&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="44b136a5e063ef79be02101d3a40cf422399db33" translate="yes" xml:space="preserve">
          <source>A nested Python &lt;code&gt;list&lt;/code&gt;.</source>
          <target state="translated">중첩 된 파이썬 &lt;code&gt;list&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9a3d0474cc5aa30d331ee1458558f917892c7b4" translate="yes" xml:space="preserve">
          <source>A nested list to describe the partition dims for all the tensors from input_fn(). The structure of input_partition_dims must match the structure of &lt;code&gt;features&lt;/code&gt; and &lt;code&gt;labels&lt;/code&gt; from input_fn(). The total number of partitions must match &lt;code&gt;num_cores_per_replica&lt;/code&gt;. For example, if input_fn() returns two tensors: images with shape [N, H, W, C] and labels [N]. input_partition_dims = [[1, 2, 2, 1], None] will split the images to 4 pieces and feed into 4 TPU cores. labels tensor are directly broadcasted to all the TPU cores since the partition dims is &lt;code&gt;None&lt;/code&gt;. Current limitations: This feature is only supported with the PER_HOST_V2 input mode.</source>
          <target state="translated">input_fn ()의 모든 텐서에 대한 파티션 희미 함을 설명하는 중첩 목록입니다. input_partition_dims의 구조는 input_fn () 의 &lt;code&gt;features&lt;/code&gt; 및 &lt;code&gt;labels&lt;/code&gt; 구조와 일치해야합니다 . 총 파티션 수는 &lt;code&gt;num_cores_per_replica&lt;/code&gt; 와 일치해야합니다 . 예를 들어 input_fn ()이 두 개의 텐서를 반환하는 경우 : 모양이 [N, H, W, C]이고 레이블이 [N] 인 이미지. input_partition_dims = [[1, 2, 2, 1], None]은 이미지를 4 개로 분할하고 4 개의 TPU 코어로 공급합니다. 파티션 dims가 &lt;code&gt;None&lt;/code&gt; 이므로 label tensor는 모든 TPU 코어에 직접 브로드 캐스트됩니다 . 현재 제한 사항 :이 기능은 PER_HOST_V2 입력 모드에서만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="6dc1104b7d3cbdaf8a4374b660c857fd324e0b3b" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;a href=&quot;../../../../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; objects corresponding to each component of an element of this dataset.</source>
          <target state="translated">이 데이터 세트 요소의 각 구성 요소에 해당하는 &lt;a href=&quot;../../../../dtypes/dtype&quot;&gt; &lt;code&gt;tf.DType&lt;/code&gt; &lt;/a&gt; 오브젝트 의 중첩 구조 .</target>
        </trans-unit>
        <trans-unit id="8bd1b03a2d945ca9a29080cab383bbf81aed0cef" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;a href=&quot;../../../../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; objects corresponding to each component of an element yielded by &lt;code&gt;generator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;generator&lt;/code&gt; 가 생성 한 요소의 각 구성 요소에 해당하는 &lt;a href=&quot;../../../../dtypes/dtype&quot;&gt; &lt;code&gt;tf.DType&lt;/code&gt; &lt;/a&gt; 객체 의 중첩 된 구조입니다 .</target>
        </trans-unit>
        <trans-unit id="d89e818a2ce26b0acc89962b02f38f0a6dbbdd9d" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;a href=&quot;../../../../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; objects corresponding to each component of an element of this dataset.</source>
          <target state="translated">이 데이터 세트 요소의 각 구성 요소에 해당하는 &lt;a href=&quot;../../../../tensorshape&quot;&gt; &lt;code&gt;tf.TensorShape&lt;/code&gt; &lt;/a&gt; 객체 의 중첩 구조입니다 .</target>
        </trans-unit>
        <trans-unit id="285e54adae96016613be370a8bf3d8cc27e8eaaf" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;a href=&quot;../../../../typespec&quot;&gt;&lt;code&gt;tf.TypeSpec&lt;/code&gt;&lt;/a&gt; objects matching the structure of an element of this dataset and specifying the type of individual components.</source>
          <target state="translated">이 데이터 세트의 요소 구조와 일치하고 개별 구성 요소의 유형을 지정하는 &lt;a href=&quot;../../../../typespec&quot;&gt; &lt;code&gt;tf.TypeSpec&lt;/code&gt; &lt;/a&gt; 오브젝트 의 중첩 구조 .</target>
        </trans-unit>
        <trans-unit id="65da60f0e5084062890522dc90df315f0597395f" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;a href=&quot;../../../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; objects corresponding to each component of an element of this dataset.</source>
          <target state="translated">이 데이터 세트 요소의 각 구성 요소에 해당하는 &lt;a href=&quot;../../../dtypes/dtype&quot;&gt; &lt;code&gt;tf.DType&lt;/code&gt; &lt;/a&gt; 오브젝트 의 중첩 구조 .</target>
        </trans-unit>
        <trans-unit id="03eaab2e157722b0f9741f511a9e656a4cc68a61" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;a href=&quot;../../../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; objects corresponding to each component of an element of this iterator.</source>
          <target state="translated">이 반복기 요소의 각 구성 요소에 해당하는 &lt;a href=&quot;../../../dtypes/dtype&quot;&gt; &lt;code&gt;tf.DType&lt;/code&gt; &lt;/a&gt; 개체 의 중첩 된 구조입니다 .</target>
        </trans-unit>
        <trans-unit id="27a3e7439b70405235969fd3ea6ec26ab9f590d5" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;a href=&quot;../../../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; objects corresponding to each component of an element yielded by &lt;code&gt;generator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;generator&lt;/code&gt; 가 생성 한 요소의 각 구성 요소에 해당하는 &lt;a href=&quot;../../../dtypes/dtype&quot;&gt; &lt;code&gt;tf.DType&lt;/code&gt; &lt;/a&gt; 객체 의 중첩 된 구조입니다 .</target>
        </trans-unit>
        <trans-unit id="298e6aa68a40d5a4b5ae06eaca74792cd77abcb3" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;a href=&quot;../../../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; objects objects matching the structure of dataset / iterator elements and specifying the shape of the individual components.</source>
          <target state="translated">&lt;a href=&quot;../../../dtypes/dtype&quot;&gt; &lt;code&gt;tf.DType&lt;/code&gt; &lt;/a&gt; 객체 의 중첩 구조는 데이터 세트 / 반복자 요소의 구조와 일치하고 개별 구성 요소의 모양을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="ded3891f490744e777c9bd8bd3987ea55c646b1d" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;a href=&quot;../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 객체 의 중첩 구조</target>
        </trans-unit>
        <trans-unit id="b07191c2a9cf1ce7db5597b47bd131d89c165b13" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;a href=&quot;../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;s, &lt;a href=&quot;../../../sparse/sparsetensor&quot;&gt;&lt;code&gt;tf.SparseTensor&lt;/code&gt;&lt;/a&gt;s or &lt;a href=&quot;../../../raggedtensor&quot;&gt;&lt;code&gt;tf.RaggedTensor&lt;/code&gt;&lt;/a&gt;s, with the same structure as &lt;code&gt;feature_config&lt;/code&gt;. Inputs will be downcast to &lt;a href=&quot;../../../../tf#int32&quot;&gt;&lt;code&gt;tf.int32&lt;/code&gt;&lt;/a&gt;. Only one type out of &lt;a href=&quot;../../../sparse/sparsetensor&quot;&gt;&lt;code&gt;tf.SparseTensor&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../raggedtensor&quot;&gt;&lt;code&gt;tf.RaggedTensor&lt;/code&gt;&lt;/a&gt; is supported per call.</source>
          <target state="translated">&lt;code&gt;feature_config&lt;/code&gt; 와 동일한 구조를 갖는 &lt;a href=&quot;../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; s, &lt;a href=&quot;../../../sparse/sparsetensor&quot;&gt; &lt;code&gt;tf.SparseTensor&lt;/code&gt; &lt;/a&gt; s 또는 &lt;a href=&quot;../../../raggedtensor&quot;&gt; &lt;code&gt;tf.RaggedTensor&lt;/code&gt; &lt;/a&gt; s 의 중첩 된 구조 . 입력은 &lt;a href=&quot;../../../../tf#int32&quot;&gt; &lt;code&gt;tf.int32&lt;/code&gt; &lt;/a&gt; 로 다운 캐스트됩니다 . &lt;a href=&quot;../../../sparse/sparsetensor&quot;&gt; &lt;code&gt;tf.SparseTensor&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../../raggedtensor&quot;&gt; &lt;code&gt;tf.RaggedTensor&lt;/code&gt; &lt;/a&gt; 중 하나의 유형 만 호출 당 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="a2f6bd9724183797118a8c617d8c914697b8505b" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;a href=&quot;../../../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; objects corresponding to each component of an element of this dataset.</source>
          <target state="translated">이 데이터 세트 요소의 각 구성 요소에 해당하는 &lt;a href=&quot;../../../tensorshape&quot;&gt; &lt;code&gt;tf.TensorShape&lt;/code&gt; &lt;/a&gt; 객체 의 중첩 구조입니다 .</target>
        </trans-unit>
        <trans-unit id="8fd60314de13abefae446ca57564a946ed1c861a" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;a href=&quot;../../../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; objects corresponding to each component of an element of this iterator.</source>
          <target state="translated">이 반복기 요소의 각 구성 요소에 해당하는 &lt;a href=&quot;../../../tensorshape&quot;&gt; &lt;code&gt;tf.TensorShape&lt;/code&gt; &lt;/a&gt; 개체 의 중첩 구조입니다 .</target>
        </trans-unit>
        <trans-unit id="99c60276c1f108f3bca1adbef3b8144ebdfc6d1f" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;a href=&quot;../../../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; objects matching the structure of the dataset / iterator elements and specifying the shape of the individual components.</source>
          <target state="translated">데이터 세트 / 반복자 요소의 구조와 일치하고 개별 구성 요소의 모양을 지정하는 &lt;a href=&quot;../../../tensorshape&quot;&gt; &lt;code&gt;tf.TensorShape&lt;/code&gt; &lt;/a&gt; 객체 의 중첩 구조 .</target>
        </trans-unit>
        <trans-unit id="3bfd3512923e5421f65540048b3cadd61670f099" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;a href=&quot;../../../typespec&quot;&gt;&lt;code&gt;tf.TypeSpec&lt;/code&gt;&lt;/a&gt; objects matching the structure of an element of this dataset and specifying the type of individual components.</source>
          <target state="translated">이 데이터 세트의 요소 구조와 일치하고 개별 구성 요소의 유형을 지정하는 &lt;a href=&quot;../../../typespec&quot;&gt; &lt;code&gt;tf.TypeSpec&lt;/code&gt; &lt;/a&gt; 오브젝트 의 중첩 구조 .</target>
        </trans-unit>
        <trans-unit id="549ff20970f6cbcd75d1ecb0ab89ec04ee54950c" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;a href=&quot;../../../typespec&quot;&gt;&lt;code&gt;tf.TypeSpec&lt;/code&gt;&lt;/a&gt; objects matching the structure of an element of this iterator and specifying the type of individual components.</source>
          <target state="translated">이 반복자의 요소 구조와 일치하고 개별 구성 요소의 유형을 지정하는 &lt;a href=&quot;../../../typespec&quot;&gt; &lt;code&gt;tf.TypeSpec&lt;/code&gt; &lt;/a&gt; 오브젝트 의 중첩 구조 .</target>
        </trans-unit>
        <trans-unit id="987f3c40f8e770e2040c13bd2bdf2758261a96db" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;a href=&quot;../../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; objects corresponding to each component of an element yielded by &lt;code&gt;generator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;generator&lt;/code&gt; 가 생성 한 요소의 각 구성 요소에 해당하는 &lt;a href=&quot;../../dtypes/dtype&quot;&gt; &lt;code&gt;tf.DType&lt;/code&gt; &lt;/a&gt; 객체 의 중첩 된 구조입니다 .</target>
        </trans-unit>
        <trans-unit id="5a8c6ff9627d9f20a608b23516d0931716b199cd" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;a href=&quot;../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; objects, corresponding to the single element of &lt;code&gt;dataset&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dataset&lt;/code&gt; 의 단일 요소에 해당하는 &lt;a href=&quot;../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 객체 의 중첩 구조입니다 .</target>
        </trans-unit>
        <trans-unit id="2b9d9a6fa327b072a7f893fda4d5ae3d6ac72342" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;a href=&quot;../../typespec&quot;&gt;&lt;code&gt;tf.TypeSpec&lt;/code&gt;&lt;/a&gt; objects matching the structure of an element of &lt;code&gt;dataset_or_iterator&lt;/code&gt; and spacifying the type of individal components.</source>
          <target state="translated">중첩 된 구조 &lt;a href=&quot;../../typespec&quot;&gt; &lt;code&gt;tf.TypeSpec&lt;/code&gt; 은&lt;/a&gt; 의 요소의 구성과 일치하는 오브젝트 &lt;code&gt;dataset_or_iterator&lt;/code&gt; 을 하고 individal 요소의 유형을 spacifying.</target>
        </trans-unit>
        <trans-unit id="eb1dab3b3384c690b9b2e0015d8354bd5b6ed3f0" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;a href=&quot;../../typespec&quot;&gt;&lt;code&gt;tf.TypeSpec&lt;/code&gt;&lt;/a&gt; objects matching the structure of an element of &lt;code&gt;dataset_or_iterator&lt;/code&gt; and specifying the type of individual components.</source>
          <target state="translated">중첩 된 구조 &lt;a href=&quot;../../typespec&quot;&gt; &lt;code&gt;tf.TypeSpec&lt;/code&gt; 은&lt;/a&gt; 의 요소의 구성과 일치하는 오브젝트 &lt;code&gt;dataset_or_iterator&lt;/code&gt; 를 개별 요소의 유형을 지정.</target>
        </trans-unit>
        <trans-unit id="847fe7aece0fae36db7906ba03367a0bce8d288d" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;a href=&quot;../../typespec&quot;&gt;&lt;code&gt;tf.TypeSpec&lt;/code&gt;&lt;/a&gt; objects matching the structure of an element of this dataset and specifying the type of individual components.</source>
          <target state="translated">이 데이터 세트의 요소 구조와 일치하고 개별 구성 요소의 유형을 지정하는 &lt;a href=&quot;../../typespec&quot;&gt; &lt;code&gt;tf.TypeSpec&lt;/code&gt; &lt;/a&gt; 오브젝트 의 중첩 구조 .</target>
        </trans-unit>
        <trans-unit id="29ff352b9b269d298505bd2e06adc3e83612f0e0" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; objects corresponding to each component of an element yielded by &lt;code&gt;generator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;generator&lt;/code&gt; 가 생성 한 요소의 각 구성 요소에 해당하는 &lt;a href=&quot;../dtypes/dtype&quot;&gt; &lt;code&gt;tf.DType&lt;/code&gt; &lt;/a&gt; 객체 의 중첩 된 구조입니다 .</target>
        </trans-unit>
        <trans-unit id="e3fa78288412319b1eabab21812a4ba03cc23e5d" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 객체 의 중첩 구조입니다 .</target>
        </trans-unit>
        <trans-unit id="2621a89990b35badc4ffb3646c3778377e833525" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;a href=&quot;../typespec&quot;&gt;&lt;code&gt;tf.TypeSpec&lt;/code&gt;&lt;/a&gt; objects matching the structure of an element of this dataset and specifying the type of individual components.</source>
          <target state="translated">이 데이터 세트의 요소 구조와 일치하고 개별 구성 요소의 유형을 지정하는 &lt;a href=&quot;../typespec&quot;&gt; &lt;code&gt;tf.TypeSpec&lt;/code&gt; &lt;/a&gt; 오브젝트 의 중첩 구조 .</target>
        </trans-unit>
        <trans-unit id="4bacd313c416dfe0c88cd55e16fb8779c6a8286c" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;a href=&quot;../typespec&quot;&gt;&lt;code&gt;tf.TypeSpec&lt;/code&gt;&lt;/a&gt; objects matching the structure of an element of this optional.</source>
          <target state="translated">이 선택적 요소의 구조와 일치하는 &lt;a href=&quot;../typespec&quot;&gt; &lt;code&gt;tf.TypeSpec&lt;/code&gt; &lt;/a&gt; 객체 의 중첩 된 구조입니다 .</target>
        </trans-unit>
        <trans-unit id="00bf17ec919b290bb357a9d20d0d53ab3f40a95e" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;a href=&quot;featureconfig&quot;&gt;&lt;code&gt;tf.tpu.experimental.embedding.FeatureConfig&lt;/code&gt;&lt;/a&gt; configs.</source>
          <target state="translated">&lt;a href=&quot;featureconfig&quot;&gt; &lt;code&gt;tf.tpu.experimental.embedding.FeatureConfig&lt;/code&gt; &lt;/a&gt; 구성 의 중첩 된 구조입니다 .</target>
        </trans-unit>
        <trans-unit id="5ea5ef7efed331a427575aa823f079f32e33b1c2" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;code&gt;Tensor&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; 의 중첩 구조입니다 .</target>
        </trans-unit>
        <trans-unit id="4aaebb34502ddb30afe2dee285656f6730cc084a" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;code&gt;TypeSpec&lt;/code&gt; objects that represents the type specification of the iterator elements.</source>
          <target state="translated">반복기 요소의 형식 사양을 나타내는 &lt;code&gt;TypeSpec&lt;/code&gt; 개체 의 중첩 된 구조입니다 .</target>
        </trans-unit>
        <trans-unit id="df7003e270520f4f4d88d3bc39310d5a77b2519d" translate="yes" xml:space="preserve">
          <source>A nested structure of &lt;code&gt;TypeSpec&lt;/code&gt; objects that represents the type specification of the optional element.</source>
          <target state="translated">선택적 요소의 유형 사양을 나타내는 &lt;code&gt;TypeSpec&lt;/code&gt; 개체 의 중첩 된 구조입니다 .</target>
        </trans-unit>
        <trans-unit id="032985727cd12a2b1e9def735d4952cde4120d3d" translate="yes" xml:space="preserve">
          <source>A nested structure of Python &lt;code&gt;type&lt;/code&gt; objects corresponding to each component of an element of this dataset.</source>
          <target state="translated">이 데이터 세트 요소의 각 구성 요소에 해당하는 Python &lt;code&gt;type&lt;/code&gt; 오브젝트 의 중첩 구조 .</target>
        </trans-unit>
        <trans-unit id="172efc90b6378685fac2017dee9686b9f2a581a0" translate="yes" xml:space="preserve">
          <source>A nested structure of Python &lt;code&gt;type&lt;/code&gt; objects corresponding to each component of an element of this iterator.</source>
          <target state="translated">이 반복기 요소의 각 구성 요소에 해당하는 Python &lt;code&gt;type&lt;/code&gt; 객체 의 중첩 된 구조입니다 .</target>
        </trans-unit>
        <trans-unit id="ff6ff66e9b323177fa669ff8943d000d02c3d400" translate="yes" xml:space="preserve">
          <source>A nested structure of Python &lt;code&gt;type&lt;/code&gt; objects matching the structure of the dataset / iterator elements and specifying the class of the individual components.</source>
          <target state="translated">데이터 세트 / 반복자 요소의 구조와 일치하고 개별 구성 요소의 클래스를 지정하는 Python &lt;code&gt;type&lt;/code&gt; 오브젝트 의 중첩 구조 .</target>
        </trans-unit>
        <trans-unit id="83be60bb275374e84bb18cc1aa583b3a990f482d" translate="yes" xml:space="preserve">
          <source>A nested structure of datasets.</source>
          <target state="translated">데이터 세트의 중첩 구조입니다.</target>
        </trans-unit>
        <trans-unit id="ee436ddc3679d9a18c1e68b40f03abb58e8a4ce8" translate="yes" xml:space="preserve">
          <source>A nested structure of gradients, with structure matching the &lt;code&gt;feature_config&lt;/code&gt; passed to this object.</source>
          <target state="translated">이 객체에 전달 된 &lt;code&gt;feature_config&lt;/code&gt; 와 구조가 일치하는 그라디언트의 중첩 구조입니다 .</target>
        </trans-unit>
        <trans-unit id="fa2937efef037399281b6a678ec28b7270af841f" translate="yes" xml:space="preserve">
          <source>A nested structure of tensors, representing the initial state of the accumulator.</source>
          <target state="translated">누산기의 초기 상태를 나타내는 텐서의 중첩 구조입니다.</target>
        </trans-unit>
        <trans-unit id="ad88780619c0d5d422ebd6125862d720d5c185f7" translate="yes" xml:space="preserve">
          <source>A nested structure of tensors, with the same structure as &lt;code&gt;feature_config&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;feature_config&lt;/code&gt; 와 동일한 구조를 갖는 텐서의 중첩 구조</target>
        </trans-unit>
        <trans-unit id="873244e2eca4afc4ce22160c47b527752e310c53" translate="yes" xml:space="preserve">
          <source>A nested structure of tf.TensorShape representing the shape to which the respective component of each input element in each replica should be padded. Any unknown dimensions (e.g. tf.compat.v1.Dimension(None) in a tf.TensorShape or -1 in a tensor-like object) will be padded to the maximum size of that dimension over all replicas. The structure of &lt;code&gt;maximum_shapes&lt;/code&gt; needs to be the same as &lt;code&gt;inputs[0]&lt;/code&gt;.</source>
          <target state="translated">각 복제본에있는 각 입력 요소의 각 구성 요소를 패딩해야하는 모양을 나타내는 tf.TensorShape의 중첩 구조입니다. 알 수없는 차원 (예 : tf.TensorShape의 tf.compat.v1.Dimension (None) 또는 텐서 유사 객체의 -1)은 모든 복제본에 대해 해당 차원의 최대 크기로 채워집니다. &lt;code&gt;maximum_shapes&lt;/code&gt; 의 구조는 &lt;code&gt;inputs[0]&lt;/code&gt; 과 동일해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e7f9a45c97cc829fc41ae4c24223873d55c19066" translate="yes" xml:space="preserve">
          <source>A nested structure of unscaled gradients, each which is the gradient of the loss with respect to a weight. The gradients should have already been divided by the loss scale being before passed to this function. 'None' gradients are accepted, and are ignored.</source>
          <target state="translated">가중치에 대한 손실의 기울기 인 스케일되지 않은 기울기의 중첩 구조입니다. 그래디언트는 이미이 함수로 전달되기 전에 손실 스케일로 나뉘 었어 야합니다. '없음'그래디언트는 허용되며 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="9cb591edb31f3d4ee11914c4c6f3bfd6cb8090f1" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;estimator&quot;&gt;&lt;code&gt;tf.estimator.Estimator&lt;/code&gt;&lt;/a&gt; which has a union of original metrics with given ones.</source>
          <target state="translated">지정된 측정 항목과 원래 측정 항목을 &lt;a href=&quot;estimator&quot;&gt; &lt;code&gt;tf.estimator.Estimator&lt;/code&gt; &lt;/a&gt; 새로운 tf.estimator.Estimator</target>
        </trans-unit>
        <trans-unit id="4047eb21d6acb76a2bb43e6f717808743c03209f" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;DeviceSpec&lt;/code&gt; which combines &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;dev&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 과 &lt;code&gt;dev&lt;/code&gt; 를 결합한 새로운 &lt;code&gt;DeviceSpec&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b43197d5924f8a3c159b059ca629dbc9fc8d9742" translate="yes" xml:space="preserve">
          <source>A new RNG seed that is a deterministic function of the inputs and is statistically safe for producing a stream of new pseudo-random values. It will have the same dtype as &lt;code&gt;data&lt;/code&gt; (if &lt;code&gt;data&lt;/code&gt; doesn't have an explict dtype, the dtype will be determined by &lt;a href=&quot;../../convert_to_tensor&quot;&gt;&lt;code&gt;tf.convert_to_tensor&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">입력의 결정적 함수이며 새로운 의사 랜덤 값 스트림을 생성하는 데 통계적으로 안전한 새로운 RNG 시드입니다. &lt;code&gt;data&lt;/code&gt; 와 동일한 dtype을 갖습니다 ( &lt;code&gt;data&lt;/code&gt; 에 명시 적 dtype이없는 경우 dtype은 &lt;a href=&quot;../../convert_to_tensor&quot;&gt; &lt;code&gt;tf.convert_to_tensor&lt;/code&gt; 에&lt;/a&gt; 의해 결정됩니다 ).</target>
        </trans-unit>
        <trans-unit id="1f94d56653c7ed17a4d8dfb2105ce4a06306a782" translate="yes" xml:space="preserve">
          <source>A new TensorArray object with flow that ensures the control dependencies from the contexts will become control dependencies for writes, reads, etc. Use this object all for subsequent operations.</source>
          <target state="translated">컨텍스트의 제어 종속성이 쓰기, 읽기 등에 대한 제어 종속성이되도록하는 흐름이있는 새 TensorArray 오브젝트. 후속 작업에이 오브젝트를 모두 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ce29b31f8523e0ff9f1da1f017081adc1a33b949" translate="yes" xml:space="preserve">
          <source>A new TensorArray object with flow that ensures the control dependencies from the contexts will become control dependencies for writes, reads, etc. Use this object for all subsequent operations.</source>
          <target state="translated">컨텍스트의 컨트롤 종속성이 쓰기, 읽기 등에 대한 컨트롤 종속성이되도록하는 흐름이있는 새 TensorArray 개체입니다. 모든 후속 작업에이 개체를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="1b44a475171903f2262c4dad70399100c6f4cec5" translate="yes" xml:space="preserve">
          <source>A new TensorArray object with flow that ensures the scatter occurs. Use this object for all subsequent operations.</source>
          <target state="translated">분산이 발생하도록하는 흐름이있는 새로운 TensorArray 객체. 모든 후속 작업에이 개체를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="d39aabdab98ef2a3b51ee906a908c5193e4957a6" translate="yes" xml:space="preserve">
          <source>A new TensorArray object with flow that ensures the split occurs. Use this object for all subsequent operations.</source>
          <target state="translated">분할 발생을 보장하는 흐름이있는 새로운 TensorArray 객체. 모든 후속 작업에이 개체를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="7d50e8a7dc7f53581be1e1eff60e4848aa922753" translate="yes" xml:space="preserve">
          <source>A new TensorArray object with flow that ensures the unstack occurs. Use this object for all subsequent operations.</source>
          <target state="translated">언 스택 발생을 보장하는 흐름이있는 새로운 TensorArray 객체. 모든 후속 작업에이 개체를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="d61638eeb4b6642e1f06c2b2d4eb6969ddd1108d" translate="yes" xml:space="preserve">
          <source>A new TensorArray object with flow that ensures the write occurs. Use this object for all subsequent operations.</source>
          <target state="translated">쓰기 발생을 보장하는 흐름이있는 새로운 TensorArray 객체. 모든 후속 작업에이 개체를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="5cf4b3edb4912360ca66985e075b5d2ead1f3b4a" translate="yes" xml:space="preserve">
          <source>A new axis. This is used to insert a new shape=1 dimension and is produced using &lt;code&gt;new_axis_mask&lt;/code&gt;. For example, &lt;code&gt;foo[:, ...]&lt;/code&gt; where &lt;code&gt;foo&lt;/code&gt; is shape &lt;code&gt;(3, 4)&lt;/code&gt; produces a &lt;code&gt;(1, 3, 4)&lt;/code&gt; tensor.</source>
          <target state="translated">새로운 축. 이것은 새로운 shape = 1 차원을 삽입하는 데 사용되며 &lt;code&gt;new_axis_mask&lt;/code&gt; 를 사용하여 생성됩니다 . 예를 들어, &lt;code&gt;foo[:, ...]&lt;/code&gt; 여기서 &lt;code&gt;foo&lt;/code&gt; 는 모양 &lt;code&gt;(3, 4)&lt;/code&gt; 는 &lt;code&gt;(1, 3, 4)&lt;/code&gt; 텐서를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="01fab6a7d07020db014ef3c449851522786f6d63" translate="yes" xml:space="preserve">
          <source>A new graphdef with all ops contained in OpHints being replaced by a single op call with the right parameters.</source>
          <target state="translated">OpHints에 포함 된 모든 op가있는 새로운 graphdef는 올바른 매개 변수를 가진 단일 op 호출로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="6c98c7b70213a5652a8c1657a6f310323004361f" translate="yes" xml:space="preserve">
          <source>A new instance of &lt;code&gt;type(self)&lt;/code&gt; initialized from the union of self.parameters and override_parameters_kwargs, i.e., &lt;code&gt;dict(self.parameters, **override_parameters_kwargs)&lt;/code&gt;.</source>
          <target state="translated">self.parameters와 override_parameters_kwargs, 즉 &lt;code&gt;dict(self.parameters, **override_parameters_kwargs)&lt;/code&gt; 의 결합으로 초기화 된 &lt;code&gt;type(self)&lt;/code&gt; 의 새 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="7a990e4bdcf7b4a5cca9e22b8f531fc5da830f36" translate="yes" xml:space="preserve">
          <source>A new list the same size as &lt;code&gt;grads&lt;/code&gt;, where every non-None value in &lt;code&gt;grads&lt;/code&gt; is divided by &lt;a href=&quot;lossscaleoptimizer#loss_scale&quot;&gt;&lt;code&gt;LossScaleOptimizer.loss_scale()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">새로운리스트와 동일한 사이즈 &lt;code&gt;grads&lt;/code&gt; 모든 비 없음 값 &lt;code&gt;grads&lt;/code&gt; 로 나누어 &lt;a href=&quot;lossscaleoptimizer#loss_scale&quot;&gt; &lt;code&gt;LossScaleOptimizer.loss_scale()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f269677e043f91454d2cb438ce040e7e72f79c25" translate="yes" xml:space="preserve">
          <source>A new list which has the original list combined with what we read from any flagfile(s).</source>
          <target state="translated">모든 플래그 파일에서 읽은 내용과 원래 목록이 결합 된 새 목록입니다.</target>
        </trans-unit>
        <trans-unit id="80653b0a88999951149dfb179353958e351c5d57" translate="yes" xml:space="preserve">
          <source>A new structure with the same arity as &lt;code&gt;structure&lt;/code&gt;, whose values correspond to &lt;code&gt;func(x[0], x[1], ...)&lt;/code&gt; where &lt;code&gt;x[i]&lt;/code&gt; is a value in the corresponding location in &lt;code&gt;structure[i]&lt;/code&gt;. If there are different sequence types and &lt;code&gt;check_types&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt; the sequence types of the first structure will be used.</source>
          <target state="translated">&lt;code&gt;func(x[0], x[1], ...)&lt;/code&gt; 해당하는 값을 가진 구조와 동일한 동일성을 &lt;code&gt;structure&lt;/code&gt; 새로운 구조. 여기서 &lt;code&gt;x[i]&lt;/code&gt; 는 &lt;code&gt;structure[i]&lt;/code&gt; 의 해당 위치에있는 값입니다 . 다른 시퀀스 유형이 있고 &lt;code&gt;check_types&lt;/code&gt; 가 &lt;code&gt;False&lt;/code&gt; 이면 첫 번째 구조의 시퀀스 유형이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="49b71ef00e11f10dea9b492e03607ab7e8c6a7d8" translate="yes" xml:space="preserve">
          <source>A non-empty &lt;code&gt;Tensor&lt;/code&gt;, or an object whose type has a registered &lt;code&gt;Tensor&lt;/code&gt; conversion function. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;,&lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. See also &lt;code&gt;convert_to_tensor&lt;/code&gt;</source>
          <target state="translated">비어 있지 않은 &lt;code&gt;Tensor&lt;/code&gt; 또는 유형에 등록 된 &lt;code&gt;Tensor&lt;/code&gt; 변환 함수 가있는 객체입니다 . &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; 유형 중 하나 여야합니다 . &lt;code&gt;convert_to_tensor&lt;/code&gt; 참조</target>
        </trans-unit>
        <trans-unit id="2a3b960c87b43c3118da0892efd0698e7b126745" translate="yes" xml:space="preserve">
          <source>A non-empty &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="translated">비어 있지 않은 &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;half&lt;/code&gt; , &lt;code&gt;float32&lt;/code&gt; , &lt;code&gt;float64&lt;/code&gt; 유형 중 하나 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="556b113ef914577ef3fccb24009d6a83fa5ec86a" translate="yes" xml:space="preserve">
          <source>A non-empty string. The name to use for accumulators created for the optimizer.</source>
          <target state="translated">비어 있지 않은 문자열입니다. 최적화 프로그램 용으로 생성 된 누산기에 사용할 이름입니다.</target>
        </trans-unit>
        <trans-unit id="77a3f7c10def4861d13730339d1b382fb091f7c5" translate="yes" xml:space="preserve">
          <source>A non-negative &lt;code&gt;int&lt;/code&gt; that used to bucket the hashed values. If &lt;code&gt;num_buckets != 0&lt;/code&gt;, then &lt;code&gt;output = hashed_value % num_buckets&lt;/code&gt;.</source>
          <target state="translated">해시 된 값을 버킷 화하는 데 사용되는 음이 아닌 &lt;code&gt;int&lt;/code&gt; 입니다. 경우 &lt;code&gt;num_buckets != 0&lt;/code&gt; , 다음 &lt;code&gt;output = hashed_value % num_buckets&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c94655637069aef54a69d2cef4b1e606fbedc1da" translate="yes" xml:space="preserve">
          <source>A non-negative integer.</source>
          <target state="translated">음이 아닌 정수.</target>
        </trans-unit>
        <trans-unit id="f042f724a0ee7f7c0180df576d6d2b3184d1e801" translate="yes" xml:space="preserve">
          <source>A non-negative integer. Breaks collective operations into packs of certain size. If it's zero, the value is determined automatically. This only applies to all-reduce with &lt;code&gt;MultiWorkerMirroredStrategy&lt;/code&gt; currently.</source>
          <target state="translated">음이 아닌 정수. 집단 작업을 특정 크기의 팩으로 나눕니다. 0이면 값이 자동으로 결정됩니다. 이것은 현재 &lt;code&gt;MultiWorkerMirroredStrategy&lt;/code&gt; 를 사용하는 all-reduce에만 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="a773636a6931f5b812932e8494ebe8efeba4c688" translate="yes" xml:space="preserve">
          <source>A normalized &lt;code&gt;Tensor&lt;/code&gt; with the same shape as &lt;code&gt;tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tensor&lt;/code&gt; 와 같은 모양을 가진 정규화 된 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee8f45bd2b79bb8e62157688f73881e1352693db" translate="yes" xml:space="preserve">
          <source>A normalized copy of the array.</source>
          <target state="translated">배열의 정규화 된 사본입니다.</target>
        </trans-unit>
        <trans-unit id="2be61ee29779aed6f3b85a0ce95b3266796d04ed" translate="yes" xml:space="preserve">
          <source>A note about name scoping: Setting &lt;code&gt;reuse&lt;/code&gt; does not impact the naming of other ops such as mult. See related discussion on &lt;a href=&quot;https://github.com/tensorflow/tensorflow/issues/6189&quot;&gt;github#6189&lt;/a&gt;</source>
          <target state="translated">이름 범위 지정에 대한 참고 사항 : &lt;code&gt;reuse&lt;/code&gt; 설정 은 멀티와 같은 다른 작업의 이름 지정에는 영향을 미치지 않습니다. &lt;a href=&quot;https://github.com/tensorflow/tensorflow/issues/6189&quot;&gt;github # 6189&lt;/a&gt; 에 대한 관련 토론을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4588062531d1a4c033993bab1f51dc9ac067a320" translate="yes" xml:space="preserve">
          <source>A note about the attribute merge_repeated: For the beam search decoder, this means that if consecutive entries in a beam are the same, only the first of these is emitted. That is, when the top path is &quot;A B B B B&quot;, &quot;A B&quot; is returned if merge_repeated = True but &quot;A B B B B&quot; is returned if merge_repeated = False.</source>
          <target state="translated">merge_repeated 속성에 대한 참고 사항 : 빔 검색 디코더의 경우 이는 빔의 연속 항목이 동일하면 이들 중 첫 번째 항목 만 방출됨을 의미합니다. 즉, 최상위 경로가 &quot;ABBB B&quot;인 경우 merge_repeated = True이면 &quot;A B&quot;가 반환되고 merge_repeated = False이면 &quot;ABBB B&quot;가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="515cf6e7d5779c6a4e37249f93c68f332465ee2c" translate="yes" xml:space="preserve">
          <source>A note about the attribute merge_repeated: if enabled, when consecutive logits' maximum indices are the same, only the first of these is emitted. Labeling the blank '*', the sequence &quot;A B B * B B&quot; becomes &quot;A B B&quot; if merge_repeated = True and &quot;A B B B B&quot; if merge_repeated = False.</source>
          <target state="translated">merge_repeated 속성에 대한 참고 사항 : 활성화 된 경우 연속 로짓의 최대 인덱스가 동일 할 때 이들 중 첫 번째 만 방출됩니다. 공백 '*'에 레이블을 지정하면 시퀀스 &quot;ABB * B B&quot;는 merge_repeated = True이면 &quot;AB B&quot;가되고 merge_repeated = False이면 &quot;ABBB B&quot;가됩니다.</target>
        </trans-unit>
        <trans-unit id="0d16cdd9f92379dd2769d3d7b8c57d1565ddce58" translate="yes" xml:space="preserve">
          <source>A note about the parameter &lt;code&gt;name&lt;/code&gt;:</source>
          <target state="translated">매개 변수 &lt;code&gt;name&lt;/code&gt; 에 대한 참고 사항 :</target>
        </trans-unit>
        <trans-unit id="d9e77bfdfb34eaa9306aa5aeaf5d94016c57c62e" translate="yes" xml:space="preserve">
          <source>A note about using variable scopes in multi-threaded environment: Variable scopes are thread local, so one thread will not see another thread's current scope. Also, when using &lt;code&gt;default_name&lt;/code&gt;, unique scopes names are also generated only on a per thread basis. If the same name was used within a different thread, that doesn't prevent a new thread from creating the same scope. However, the underlying variable store is shared across threads (within the same graph). As such, if another thread tries to create a new variable with the same name as a variable created by a previous thread, it will fail unless reuse is True.</source>
          <target state="translated">다중 스레드 환경에서 변수 범위 사용에 대한 참고 사항 : 변수 범위는 스레드 로컬이므로 한 스레드는 다른 스레드의 현재 범위를 볼 수 없습니다. 또한 &lt;code&gt;default_name&lt;/code&gt; 을 사용할 때 고유 한 범위 이름도 스레드별로 생성됩니다. 동일한 이름이 다른 스레드 내에서 사용 된 경우에도 새 스레드가 동일한 범위를 작성하지 못하게됩니다. 그러나 기본 변수 저장소는 동일한 그래프 내에서 스레드간에 공유됩니다. 따라서 다른 스레드가 이전 스레드에서 작성된 변수와 동일한 이름으로 새 변수를 작성하려고하면 재사용이 True가 아니면 실패합니다.</target>
        </trans-unit>
        <trans-unit id="c578c84a116d09ab9bee57bca5ac3e9adffff1ed" translate="yes" xml:space="preserve">
          <source>A note on serialization and deserialization:</source>
          <target state="translated">직렬화 및 역 직렬화에 대한 참고 사항 :</target>
        </trans-unit>
        <trans-unit id="7ae3889802af19dd453aacc16a4dfed6f3fcfad7" translate="yes" xml:space="preserve">
          <source>A number of specialized tensors are available: see &lt;a href=&quot;variable&quot;&gt;&lt;code&gt;tf.Variable&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;constant&quot;&gt;&lt;code&gt;tf.constant&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;tf.placeholder&lt;/code&gt;, &lt;a href=&quot;sparse/sparsetensor&quot;&gt;&lt;code&gt;tf.sparse.SparseTensor&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;raggedtensor&quot;&gt;&lt;code&gt;tf.RaggedTensor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;variable&quot;&gt; &lt;code&gt;tf.Variable&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;constant&quot;&gt; &lt;code&gt;tf.constant&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;tf.placeholder&lt;/code&gt; , &lt;a href=&quot;sparse/sparsetensor&quot;&gt; &lt;code&gt;tf.sparse.SparseTensor&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;raggedtensor&quot;&gt; &lt;code&gt;tf.RaggedTensor&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="04000fa95bd0cdac00634e65bdc92645aba6cc1a" translate="yes" xml:space="preserve">
          <source>A numeric &lt;code&gt;Tensor&lt;/code&gt; of arbitrary size.</source>
          <target state="translated">임의 크기 의 숫자 &lt;code&gt;Tensor&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c715c08a235334cdcefcab590d98a1edff4750f4" translate="yes" xml:space="preserve">
          <source>A numpy &lt;code&gt;array&lt;/code&gt;.</source>
          <target state="translated">numpy &lt;code&gt;array&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1fb6345a57f9330d4527148bdd361f311e1cdb19" translate="yes" xml:space="preserve">
          <source>A numpy &lt;code&gt;ndarray&lt;/code&gt; with a copy of the value of this variable.</source>
          <target state="translated">이 변수 값의 사본이있는 numpy &lt;code&gt;ndarray&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16391f83e94ed5ef757b54cdac1523c5bb0f6102" translate="yes" xml:space="preserve">
          <source>A numpy array corresponding to the value of this tensor.</source>
          <target state="translated">이 텐서의 값에 해당하는 numpy 배열입니다.</target>
        </trans-unit>
        <trans-unit id="04ae48c99f0576b3fbfaee6acb2d7439e713cd0a" translate="yes" xml:space="preserve">
          <source>A numpy array of any type and shape; or a RaggedTensorValue.</source>
          <target state="translated">모든 유형 및 모양의 numpy 배열; 또는 RaggedTensorValue.</target>
        </trans-unit>
        <trans-unit id="5a3609dd23a6ca797765528376e7e4c3af15d074" translate="yes" xml:space="preserve">
          <source>A numpy array of class predictions.</source>
          <target state="translated">수많은 클래스 예측 배열.</target>
        </trans-unit>
        <trans-unit id="eea9a897cbf000179dda47215800b27e493aa485" translate="yes" xml:space="preserve">
          <source>A numpy array with the tensor contents.</source>
          <target state="translated">텐서 내용이 포함 된 numpy 배열입니다.</target>
        </trans-unit>
        <trans-unit id="1a7763bbbebf71c99f0971d1df765757d534bd84" translate="yes" xml:space="preserve">
          <source>A numpy dtype string.</source>
          <target state="translated">numpy dtype 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="9aedba14ca369679748e7a2a60c222074801011b" translate="yes" xml:space="preserve">
          <source>A numpy ndarray containing the constant value of the given &lt;code&gt;tensor&lt;/code&gt;, or None if it cannot be calculated.</source>
          <target state="translated">주어진 &lt;code&gt;tensor&lt;/code&gt; 의 상수 값을 포함하는 numpy ndarray 이거나 계산할 수없는 경우 None입니다.</target>
        </trans-unit>
        <trans-unit id="23611f92d429e465f863866d3a3e08d3721c3783" translate="yes" xml:space="preserve">
          <source>A numpy-style shape tuple.</source>
          <target state="translated">뾰족한 스타일의 튜플.</target>
        </trans-unit>
        <trans-unit id="2bfe20e7ae6beb392a7e6d4e8634a7c65c1401b2" translate="yes" xml:space="preserve">
          <source>A object that can be converted to &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; 로 변환 할 수있는 객체입니다 .</target>
        </trans-unit>
        <trans-unit id="071e4ccce28288aa91e5e8c6c5a06a390aee904e" translate="yes" xml:space="preserve">
          <source>A one-dimensional dense column which is generated with &lt;code&gt;numeric_column&lt;/code&gt;.</source>
          <target state="translated">A one-dimensional dense column which is generated with &lt;code&gt;numeric_column&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fcf3cc429324f3d06c75e529be623f971ba3ff9" translate="yes" xml:space="preserve">
          <source>A one-machine strategy that puts all variables on a single device.</source>
          <target state="translated">모든 변수를 단일 장치에 배치하는 단일 시스템 전략입니다.</target>
        </trans-unit>
        <trans-unit id="99f8624f2adf3db910ca742c325786a0418c792a" translate="yes" xml:space="preserve">
          <source>A one-shot iterator bundles the logic for defining the dataset and the state of the iterator in a single op, which allows simple input pipelines to be defined without an additional initialization (&quot;MakeIterator&quot;) step.</source>
          <target state="translated">A one-shot iterator bundles the logic for defining the dataset and the state of the iterator in a single op, which allows simple input pipelines to be defined without an additional initialization (&quot;MakeIterator&quot;) step.</target>
        </trans-unit>
        <trans-unit id="c6673b1081df07b67877fdc09f7b2915765f1dc1" translate="yes" xml:space="preserve">
          <source>A optional list of default values for the CSV fields. One item per selected column of the input record. Each item in the list is either a valid CSV dtype (float32, float64, int32, int64, or string), or a &lt;code&gt;Tensor&lt;/code&gt; with one of the aforementioned types. The tensor can either be a scalar default value (if the column is optional), or an empty tensor (if the column is required). If a dtype is provided instead of a tensor, the column is also treated as required. If this list is not provided, tries to infer types based on reading the first num_rows_for_inference rows of files specified, and assumes all columns are optional, defaulting to &lt;code&gt;0&lt;/code&gt; for numeric values and &lt;code&gt;&quot;&quot;&lt;/code&gt; for string values. If both this and &lt;code&gt;select_columns&lt;/code&gt; are specified, these must have the same lengths, and &lt;code&gt;column_defaults&lt;/code&gt; is assumed to be sorted in order of increasing column index.</source>
          <target state="translated">CSV 필드에 대한 선택적 기본값 목록입니다. 입력 레코드의 선택한 열당 하나의 항목. 목록의 각 항목은 유효한 CSV dtype (float32, float64, int32, int64 또는 문자열)이거나 앞서 언급 한 유형 중 하나가 있는 &lt;code&gt;Tensor&lt;/code&gt; 입니다. 텐서는 스칼라 기본값 (열이 선택 사항 인 경우)이거나 빈 텐서 (열이 필요한 경우) 일 수 있습니다. 텐서 대신 dtype이 제공되면 열도 필요에 따라 처리됩니다. 이 목록이 제공되지 않으면 지정된 파일의 첫 번째 num_rows_for_inference 행을 읽어 유형을 추론하고 모든 열이 선택 사항이라고 가정합니다. 기본값 은 숫자 값의 경우 &lt;code&gt;0&lt;/code&gt; 이고 문자열 값의 경우 &lt;code&gt;&quot;&quot;&lt;/code&gt; 입니다. 이것과 &lt;code&gt;select_columns&lt;/code&gt; 가 모두지정된 경우 길이가 같아야하며 &lt;code&gt;column_defaults&lt;/code&gt; 는 열 인덱스가 증가하는 순서대로 정렬 된 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="b94c1f6a9e2865b6f80cce246bfbd0b96364e48a" translate="yes" xml:space="preserve">
          <source>A optional string corresponding to the label column. If provided, the data for this column is returned as a separate &lt;code&gt;Tensor&lt;/code&gt; from the features dictionary, so that the dataset complies with the format expected by a &lt;code&gt;tf.Estimator.train&lt;/code&gt; or &lt;code&gt;tf.Estimator.evaluate&lt;/code&gt; input function.</source>
          <target state="translated">레이블 열에 해당하는 선택적 문자열입니다. 제공되는 경우이 열의 데이터 는 기능 사전에서 별도의 &lt;code&gt;Tensor&lt;/code&gt; 로 반환 되므로 데이터 세트는 &lt;code&gt;tf.Estimator.train&lt;/code&gt; 또는 &lt;code&gt;tf.Estimator.evaluate&lt;/code&gt; 입력 함수에서 예상하는 형식을 준수합니다 .</target>
        </trans-unit>
        <trans-unit id="541aa19d654d36e7358ba7d637a07b52b0d63859" translate="yes" xml:space="preserve">
          <source>A padded 3D tensor.</source>
          <target state="translated">패딩 처리 된 3D 텐서.</target>
        </trans-unit>
        <trans-unit id="7b7355b17a9018279a68a1ff2c60564c01f7a48f" translate="yes" xml:space="preserve">
          <source>A padded 4D tensor.</source>
          <target state="translated">패딩 처리 된 4D 텐서.</target>
        </trans-unit>
        <trans-unit id="5ab1180ef3c85ba8e928af5472db8687c9680406" translate="yes" xml:space="preserve">
          <source>A padded 5D tensor.</source>
          <target state="translated">패딩 처리 된 5D 텐서.</target>
        </trans-unit>
        <trans-unit id="22c4e36f2f9fbba13a880976032fd12c4e193a4e" translate="yes" xml:space="preserve">
          <source>A pair (outputs, state) where:</source>
          <target state="translated">다음과 같은 쌍 (출력, 상태) :</target>
        </trans-unit>
        <trans-unit id="b375ad004275c6bc88a0ebf479ba796e9c78d6dd" translate="yes" xml:space="preserve">
          <source>A pair (outputs, state) where: outputs is a length T list of outputs (one for each input) states is the final state</source>
          <target state="translated">한 쌍의 출력 (상태, 출력)은 다음과 같습니다. 출력은 길이 T 출력 (각 입력에 대해 하나씩) 상태의 목록입니다. 최종 상태입니다</target>
        </trans-unit>
        <trans-unit id="9149cbdfc7d0e920f18ef720e4952ed8de4042ec" translate="yes" xml:space="preserve">
          <source>A pair (sess, initialized) where 'initialized' is &lt;code&gt;True&lt;/code&gt; if the session could be recovered and initialized, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">세션을 복구하고 초기화 할 수 있으면 'initialized'가 &lt;code&gt;True&lt;/code&gt; 인 쌍 (sess, initialized) , &lt;code&gt;False&lt;/code&gt; 않으면 False</target>
        </trans-unit>
        <trans-unit id="ead21afe1578a40094a41f45e95a257a591bc9b2" translate="yes" xml:space="preserve">
          <source>A pair &lt;code&gt;(elapsed_time, elapsed_steps)&lt;/code&gt;, where &lt;code&gt;elapsed_time&lt;/code&gt; is the number of seconds between the current trigger and the last one (a float), and &lt;code&gt;elapsed_steps&lt;/code&gt; is the number of steps between the current trigger and the last one. Both values will be set to &lt;code&gt;None&lt;/code&gt; on the first trigger.</source>
          <target state="translated">쌍 &lt;code&gt;(elapsed_time, elapsed_steps)&lt;/code&gt; . 여기서 &lt;code&gt;elapsed_time&lt;/code&gt; 은 현재 트리거와 마지막 트리거 (float) 사이의 초 수이고 &lt;code&gt;elapsed_steps&lt;/code&gt; 는 현재 트리거와 마지막 트리거 사이의 단계 수입니다. 첫 번째 트리거에서 두 값이 모두 &lt;code&gt;None&lt;/code&gt; 으로 설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="2a24593bd2c773168b0b427f4133d7f0c5c1101d" translate="yes" xml:space="preserve">
          <source>A pair of graph elements. The first is a placeholder for feeding a tensor handle and the second is a deletion operation.</source>
          <target state="translated">한 쌍의 그래프 요소. 첫 번째는 텐서 핸들을 공급하기위한 자리 표시 자이고 두 번째는 삭제 작업입니다.</target>
        </trans-unit>
        <trans-unit id="e97f4b0e519db72a901e13d9aed0adc825b78e27" translate="yes" xml:space="preserve">
          <source>A pair of lists, where the first is a list of 2-d numpy arrays representing the theoretical Jacobians for each argument, and the second list is the numerical ones. Each 2-d array has &quot;x_size&quot; rows and &quot;y_size&quot; columns where &quot;x_size&quot; is the number of elements in the corresponding argument and &quot;y_size&quot; is the number of elements in f(x).</source>
          <target state="translated">한 쌍의 목록. 첫 번째는 각 인수에 대한 이론적 Jacobians를 나타내는 2 차원 numpy 배열의 목록이고 두 번째 목록은 숫자입니다. 각 2 차원 배열에는 &quot;x_size&quot;행과 &quot;y_size&quot;열이 있습니다. 여기서 &quot;x_size&quot;는 해당 인수의 요소 수이고 &quot;y_size&quot;는 f (x)의 요소 수입니다.</target>
        </trans-unit>
        <trans-unit id="d6064d8b031c364b18f53a2fc87f90a079876dcb" translate="yes" xml:space="preserve">
          <source>A pair of lists, where the first is a list of 2-d numpy arrays representing the theoretical Jacobians for each argument, and the second list is the numerical ones. Each 2-d array has &quot;y_size&quot; rows and &quot;x_size&quot; columns where &quot;x_size&quot; is the number of elements in the corresponding argument and &quot;y_size&quot; is the number of elements in f(x).</source>
          <target state="translated">한 쌍의 목록으로, 첫 번째는 각 인수에 대한 이론적 야 코비 행렬을 나타내는 2 차원 numpy 배열 목록이고 두 번째 목록은 숫자 목록입니다. 각 2 차원 배열에는 &quot;y_size&quot;행과 &quot;x_size&quot;열이 있습니다. 여기서 &quot;x_size&quot;는 해당 인수의 요소 수이고 &quot;y_size&quot;는 f (x)의 요소 수입니다.</target>
        </trans-unit>
        <trans-unit id="64d768a4f574738379ea320cc8772706cfee2ae3" translate="yes" xml:space="preserve">
          <source>A pair of tensors with the first tensor containing all keys and the second tensors containing all values in the table.</source>
          <target state="translated">첫 번째 텐서는 모든 키를 포함하고 두 번째 텐서는 테이블의 모든 값을 포함하는 한 쌍의 텐서입니다.</target>
        </trans-unit>
        <trans-unit id="7f35ab0b03f92bd3b97cf7c7c48bcf7674c27e22" translate="yes" xml:space="preserve">
          <source>A pair of tensors. The first is a placeholder for feeding a tensor handle and the second is the tensor in the session state keyed by the tensor handle.</source>
          <target state="translated">텐서 쌍. 첫 번째는 텐서 핸들을 공급하는 자리 표시 자이고 두 번째는 세션 상태의 텐서 핸들이 텐서 핸들입니다.</target>
        </trans-unit>
        <trans-unit id="605b568512abda7e2c3678ee363558205b2761f1" translate="yes" xml:space="preserve">
          <source>A parallel version of the &lt;a href=&quot;../dataset#interleave&quot;&gt;&lt;code&gt;Dataset.interleave()&lt;/code&gt;&lt;/a&gt; transformation. (deprecated)</source>
          <target state="translated">&lt;a href=&quot;../dataset#interleave&quot;&gt; &lt;code&gt;Dataset.interleave()&lt;/code&gt; &lt;/a&gt; 변환 의 병렬 버전입니다 . (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="08289a0898d5c13cd5af8be51ca1e6f064c29cd1" translate="yes" xml:space="preserve">
          <source>A partition function usable as the &lt;code&gt;partitioner&lt;/code&gt; argument to &lt;code&gt;variable_scope&lt;/code&gt; and &lt;code&gt;get_variable&lt;/code&gt;.</source>
          <target state="translated">는 AS 가능한 파티션 기능 &lt;code&gt;partitioner&lt;/code&gt; 에 인수 &lt;code&gt;variable_scope&lt;/code&gt; 및 &lt;code&gt;get_variable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d0203a41f3c7cd1a3384da6cdb24e15536f6216a" translate="yes" xml:space="preserve">
          <source>A per-replica value with one value per replica.</source>
          <target state="translated">복제 본당 하나의 값이있는 복제 본당 값입니다.</target>
        </trans-unit>
        <trans-unit id="07cdc41c49d6d9e28c24ed2513cffc989bbe389a" translate="yes" xml:space="preserve">
          <source>A permutation of the dimensions of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">의 차원의 순열 . &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="828565eb72a11d72e3a2024363d7f39784c043c9" translate="yes" xml:space="preserve">
          <source>A permutation of the dimensions of &lt;code&gt;a&lt;/code&gt;. This should be a vector.</source>
          <target state="translated">의 차원의 순열 . 이것은 벡터 여야합니다. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="695cd6ece71bf1a79043e6fd92dc31bdf56344d4" translate="yes" xml:space="preserve">
          <source>A permutation of the dimensions of &lt;code&gt;sp_input&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sp_input&lt;/code&gt; 차원의 순열 .</target>
        </trans-unit>
        <trans-unit id="281890aa97dd15e157e8ca9ca3fea4e49ff16f7b" translate="yes" xml:space="preserve">
          <source>A permutation, is defined by an integer vector &lt;code&gt;v&lt;/code&gt; whose values are unique and are in the range &lt;code&gt;[0, ... n]&lt;/code&gt;. Applying the permutation on an input matrix has the folllowing meaning: the value of &lt;code&gt;v&lt;/code&gt; at index &lt;code&gt;i&lt;/code&gt; says to move the &lt;code&gt;v[i]&lt;/code&gt;-th row of the input matrix to the &lt;code&gt;i&lt;/code&gt;-th row. Because all values are unique, this will result in a permutation of the rows the input matrix. Note, that the permutation vector &lt;code&gt;v&lt;/code&gt; has the same semantics as &lt;a href=&quot;../transpose&quot;&gt;&lt;code&gt;tf.transpose&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">순열은 값이 고유하고 &lt;code&gt;[0, ... n]&lt;/code&gt; 범위 에있는 정수 벡터 &lt;code&gt;v&lt;/code&gt; 로 정의됩니다 . 값 : 입력 매트릭스의 전치를 적용하는 것은 의미가 folllowing &lt;code&gt;v&lt;/code&gt; 인덱스 &lt;code&gt;i&lt;/code&gt; 가 이동하는 말했다 &lt;code&gt;v[i]&lt;/code&gt; 받는 입력 행렬의 번째 행 &lt;code&gt;i&lt;/code&gt; 번째 행. 모든 값이 고유하기 때문에 입력 행렬의 행이 순열됩니다. 순열 벡터 &lt;code&gt;v&lt;/code&gt; 는 &lt;a href=&quot;../transpose&quot;&gt; &lt;code&gt;tf.transpose&lt;/code&gt; &lt;/a&gt; 와 동일한 의미를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="18015f8f1cf7fbae096f452b113de1815275c229" translate="yes" xml:space="preserve">
          <source>A placeholder op for a value that will be fed into the computation.</source>
          <target state="translated">계산에 입력 할 값에 대한 자리 표시 자 작업입니다.</target>
        </trans-unit>
        <trans-unit id="c99921d53c4331d27cbb9268cf44565d928cb834" translate="yes" xml:space="preserve">
          <source>A placeholder op that passes through &lt;code&gt;input&lt;/code&gt; when its output is not fed.</source>
          <target state="translated">출력이 공급되지 않을 때 &lt;code&gt;input&lt;/code&gt; 을 통과하는 자리 표시 자 op입니다 .</target>
        </trans-unit>
        <trans-unit id="c8d4190d7281fdbd304bce892c534c686bd07e59" translate="yes" xml:space="preserve">
          <source>A plain value, i.e. an integer or None.</source>
          <target state="translated">일반 값, 즉 정수 또는 없음</target>
        </trans-unit>
        <trans-unit id="8ad3552ee252fb7152e38588be46176679bc8049" translate="yes" xml:space="preserve">
          <source>A positive float (fraction of original height), or a tuple of size 2 representing lower and upper bound for resizing vertically. When represented as a single float, this value is used for both the upper and lower bound. For instance, &lt;code&gt;factor=(0.2, 0.3)&lt;/code&gt; results in an output with height changed by a random amount in the range &lt;code&gt;[20%, 30%]&lt;/code&gt;. &lt;code&gt;factor=(-0.2, 0.3)&lt;/code&gt; results in an output with height changed by a random amount in the range &lt;code&gt;[-20%, +30%].&lt;/code&gt;factor=0.2&lt;code&gt;results in an output with height changed by a random amount in the range&lt;/code&gt;[-20%, +20%]&lt;code&gt;. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;interpolation&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; String, the interpolation method. Defaults to&lt;/code&gt;bilinear&lt;code&gt;. Supports&lt;/code&gt;bilinear&lt;code&gt;,&lt;/code&gt;nearest&lt;code&gt;,&lt;/code&gt;bicubic&lt;code&gt;,&lt;/code&gt;area&lt;code&gt;,&lt;/code&gt;lanczos3&lt;code&gt;,&lt;/code&gt;lanczos5&lt;code&gt;,&lt;/code&gt;gaussian&lt;code&gt;,&lt;/code&gt;mitchellcubic&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;seed&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; Integer. Used to create a random seed. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;name`</source>
          <target state="translated">양수 부동 소수점 (원래 높이의 일부) 또는 세로 크기 조정을위한 하한 및 상한을 나타내는 크기 2의 튜플입니다. 단일 부동으로 표시 될 때이 값은 상한과 하한 모두에 사용됩니다. 예를 들어 &lt;code&gt;factor=(0.2, 0.3)&lt;/code&gt; 은 &lt;code&gt;[20%, 30%]&lt;/code&gt; 범위에서 임의의 양만큼 높이가 변경된 출력을 생성 합니다. &lt;code&gt;factor=(-0.2, 0.3)&lt;/code&gt; 은 &lt;code&gt;[-20%, +30%].&lt;/code&gt; 범위에서 임의의 양만큼 높이가 변경된 출력을 생성 합니다. factor = 0.2 &lt;code&gt;results in an output with height changed by a random amount in the range&lt;/code&gt; [-20 %, + 20 %] 범위에서 임의의 양만큼 높이가 변경된 출력을 생성 &lt;code&gt;. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt; 보간 &lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; String, the interpolation method. Defaults to&lt;/code&gt; bilinear &lt;code&gt;. Supports&lt;/code&gt; bilinear &lt;code&gt;,&lt;/code&gt; 가장 가까운 &lt;code&gt;,&lt;/code&gt; bicubic &lt;code&gt;,&lt;/code&gt; area &lt;code&gt;,&lt;/code&gt; lanczos3 &lt;code&gt;,&lt;/code&gt; lanczos5 &lt;code&gt;,&lt;/code&gt; gaussian &lt;code&gt;,&lt;/code&gt; mitchellcubic &lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt; seed &lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; Integer. Used to create a random seed. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt; `</target>
        </trans-unit>
        <trans-unit id="d2ed0d8685f098c15e85272d060a6fa225dddb80" translate="yes" xml:space="preserve">
          <source>A positive float (fraction of original height), or a tuple of size 2 representing lower and upper bound for resizing vertically. When represented as a single float, this value is used for both the upper and lower bound. For instance, &lt;code&gt;factor=(0.2, 0.3)&lt;/code&gt; results in an output with width changed by a random amount in the range &lt;code&gt;[20%, 30%]&lt;/code&gt;. &lt;code&gt;factor=(-0.2, 0.3)&lt;/code&gt; results in an output with width changed by a random amount in the range &lt;code&gt;[-20%, +30%].&lt;/code&gt;factor=0.2&lt;code&gt;results in an output with width changed by a random amount in the range&lt;/code&gt;[-20%, +20%]&lt;code&gt;. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;interpolation&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; String, the interpolation method. Defaults to&lt;/code&gt;bilinear&lt;code&gt;. Supports&lt;/code&gt;bilinear&lt;code&gt;,&lt;/code&gt;nearest&lt;code&gt;,&lt;/code&gt;bicubic&lt;code&gt;,&lt;/code&gt;area&lt;code&gt;,&lt;/code&gt;lanczos3&lt;code&gt;,&lt;/code&gt;lanczos5&lt;code&gt;,&lt;/code&gt;gaussian&lt;code&gt;,&lt;/code&gt;mitchellcubic&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;seed&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; Integer. Used to create a random seed. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;name`</source>
          <target state="translated">양수 부동 소수점 (원래 높이의 일부) 또는 세로 크기 조정을위한 하한 및 상한을 나타내는 크기 2의 튜플입니다. 단일 부동으로 표시 될 때이 값은 상한과 하한 모두에 사용됩니다. 예를 들어 &lt;code&gt;factor=(0.2, 0.3)&lt;/code&gt; 은 &lt;code&gt;[20%, 30%]&lt;/code&gt; 범위에서 임의의 양만큼 너비가 변경된 출력을 생성 합니다. &lt;code&gt;factor=(-0.2, 0.3)&lt;/code&gt; 은 &lt;code&gt;[-20%, +30%].&lt;/code&gt; 범위에서 임의의 양만큼 너비가 변경된 출력을 생성 합니다. factor = 0.2 &lt;code&gt;results in an output with width changed by a random amount in the range&lt;/code&gt; [-20 %, + 20 %] 범위에서 임의의 양만큼 너비가 변경된 출력을 생성 &lt;code&gt;. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt; 보간 &lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; String, the interpolation method. Defaults to&lt;/code&gt; bilinear &lt;code&gt;. Supports&lt;/code&gt; bilinear &lt;code&gt;,&lt;/code&gt; 가장 가까운 &lt;code&gt;,&lt;/code&gt; bicubic &lt;code&gt;,&lt;/code&gt; area &lt;code&gt;,&lt;/code&gt; lanczos3 &lt;code&gt;,&lt;/code&gt; lanczos5 &lt;code&gt;,&lt;/code&gt; gaussian &lt;code&gt;,&lt;/code&gt; mitchellcubic &lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt; seed &lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; Integer. Used to create a random seed. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt; `</target>
        </trans-unit>
        <trans-unit id="3b5a5cbd973768b755a4300ed5a88c030cbae002" translate="yes" xml:space="preserve">
          <source>A positive int32. The stride with which we sample input values across the &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; dimensions. Equivalently, the rate by which we upsample the filter values by inserting zeros across the &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; dimensions. In the literature, the same parameter is sometimes called &lt;code&gt;input stride&lt;/code&gt; or &lt;code&gt;dilation&lt;/code&gt;.</source>
          <target state="translated">양의 int32입니다. &lt;code&gt;height&lt;/code&gt; 및 &lt;code&gt;width&lt;/code&gt; 차원 에서 입력 값을 샘플링하는 보폭입니다 . 마찬가지로 &lt;code&gt;height&lt;/code&gt; 및 &lt;code&gt;width&lt;/code&gt; 차원에 0을 삽입하여 필터 값을 업 샘플링하는 비율 입니다. 문헌에서 동일한 매개 변수를 &lt;code&gt;input stride&lt;/code&gt; 또는 &lt;code&gt;dilation&lt;/code&gt; 이라고도 합니다 .</target>
        </trans-unit>
        <trans-unit id="4c277c1b1178b876f69f57609044f950e90ffe3d" translate="yes" xml:space="preserve">
          <source>A positive integer (optional). If specified, limits the number of steps the output tensor may be evaluated.</source>
          <target state="translated">양의 정수 (선택 사항). 지정된 경우 출력 텐서가 평가 될 수있는 단계 수를 제한합니다.</target>
        </trans-unit>
        <trans-unit id="69462762509076b10675bb369a5f56318aaa4167" translate="yes" xml:space="preserve">
          <source>A positive integer specifying the number of groups in which the input is split along the channel axis. Each group is convolved separately with &lt;code&gt;filters / groups&lt;/code&gt; filters. The output is the concatenation of all the &lt;code&gt;groups&lt;/code&gt; results along the channel axis. Input channels and &lt;code&gt;filters&lt;/code&gt; must both be divisible by &lt;code&gt;groups&lt;/code&gt;.</source>
          <target state="translated">채널 축을 따라 입력이 분할되는 그룹 수를 지정하는 양의 정수입니다. 각 그룹은 &lt;code&gt;filters / groups&lt;/code&gt; 필터 와 별도로 컨볼 루션됩니다 . 출력은 채널 축을 따라 모든 &lt;code&gt;groups&lt;/code&gt; 결과를 연결 한 것입니다 . 입력 채널과 &lt;code&gt;filters&lt;/code&gt; 는 모두 &lt;code&gt;groups&lt;/code&gt; 으로 나눌 수 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="edc4eabc159afc6ec7f7039f4f78c4f9445a53f6" translate="yes" xml:space="preserve">
          <source>A possibly batched vector of shape &lt;code&gt;[..., N]&lt;/code&gt; containing the initial guess for the solution.</source>
          <target state="translated">해에 대한 초기 추측을 포함하는 &lt;code&gt;[..., N]&lt;/code&gt; 모양의 가능한 일괄 처리 벡터입니다 .</target>
        </trans-unit>
        <trans-unit id="04fe45e89d51ffb4382d3eb82462de69296b64fa" translate="yes" xml:space="preserve">
          <source>A possibly batched vector of shape &lt;code&gt;[..., N]&lt;/code&gt; containing the right-hand size vector.</source>
          <target state="translated">오른쪽 크기 벡터를 포함하는 &lt;code&gt;[..., N]&lt;/code&gt; 모양의 가능한 일괄 처리 벡터입니다 .</target>
        </trans-unit>
        <trans-unit id="63bdd68171f28915201bdbdd8f45379238537caa" translate="yes" xml:space="preserve">
          <source>A possibly nested sequence of &lt;a href=&quot;../../../../tensorspec&quot;&gt;&lt;code&gt;tf.TensorSpec&lt;/code&gt;&lt;/a&gt; objects, used to specify the expected model inputs. See &lt;a href=&quot;../../../../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">예상되는 모델 입력을 지정하는 데 사용되는 &lt;a href=&quot;../../../../tensorspec&quot;&gt; &lt;code&gt;tf.TensorSpec&lt;/code&gt; &lt;/a&gt; 개체 의 중첩 된 시퀀스입니다 . 자세한 내용은 &lt;a href=&quot;../../../../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="be1c05d2070068c0082e6f7b2ff3734040ec1ad7" translate="yes" xml:space="preserve">
          <source>A possibly nested sequence of &lt;a href=&quot;tensorspec&quot;&gt;&lt;code&gt;tf.TensorSpec&lt;/code&gt;&lt;/a&gt; objects specifying the shapes and dtypes of the Tensors that will be supplied to this function. If &lt;code&gt;None&lt;/code&gt;, a separate function is instantiated for each inferred input signature. If input_signature is specified, every input to &lt;code&gt;func&lt;/code&gt; must be a &lt;code&gt;Tensor&lt;/code&gt;, and &lt;code&gt;func&lt;/code&gt; cannot accept &lt;code&gt;**kwargs&lt;/code&gt;.</source>
          <target state="translated">이 함수에 제공 될 Tensor의 모양과 dtype을 지정하는 &lt;a href=&quot;tensorspec&quot;&gt; &lt;code&gt;tf.TensorSpec&lt;/code&gt; &lt;/a&gt; 객체 의 중첩 된 시퀀스입니다 . 경우 &lt;code&gt;None&lt;/code&gt; , 별도의 기능은 각각의 추정 된 입력 서명 인스턴스화된다. input_signature이 지정된 경우에 모든 입력 &lt;code&gt;func&lt;/code&gt; 해야 &lt;code&gt;Tensor&lt;/code&gt; 및 &lt;code&gt;func&lt;/code&gt; 받아 들일 수 없다 &lt;code&gt;**kwargs&lt;/code&gt; 로를 .</target>
        </trans-unit>
        <trans-unit id="a8ff081912e631475daae8e03b390afe304b6538" translate="yes" xml:space="preserve">
          <source>A potentially ragged boolean tensor. &lt;code&gt;mask&lt;/code&gt;'s shape must be a prefix of &lt;code&gt;data&lt;/code&gt;'s shape. &lt;code&gt;rank(mask)&lt;/code&gt; must be known statically.</source>
          <target state="translated">잠재적으로 비정형 부울 텐서입니다. &lt;code&gt;mask&lt;/code&gt; 의 모양은 &lt;code&gt;data&lt;/code&gt; 모양 의 접두사 여야합니다 . &lt;code&gt;rank(mask)&lt;/code&gt; 는 정적으로 알려야합니다.</target>
        </trans-unit>
        <trans-unit id="b1886506e78a14c2d6c3b86cbddb618ea7325d67" translate="yes" xml:space="preserve">
          <source>A potentially ragged integer Tensor with shape &lt;code&gt;self.shape[:axis]&lt;/code&gt;.</source>
          <target state="translated">모양이 &lt;code&gt;self.shape[:axis]&lt;/code&gt; 인 잠재적으로 거친 정수 텐서 .</target>
        </trans-unit>
        <trans-unit id="3309258b8cfaa72d5ddc1c5bc72fd675dfae89a6" translate="yes" xml:space="preserve">
          <source>A potentially ragged tensor of any dtype and shape &lt;code&gt;[nvals, ...]&lt;/code&gt;.</source>
          <target state="translated">dtype 및 shape &lt;code&gt;[nvals, ...]&lt;/code&gt; 의 잠재적으로 비정형 텐서입니다 .</target>
        </trans-unit>
        <trans-unit id="8b81accfef9822cf3f5efb8922a464977609f543" translate="yes" xml:space="preserve">
          <source>A potentially ragged tensor that is formed by retaining the elements in &lt;code&gt;data&lt;/code&gt; where the corresponding value in &lt;code&gt;mask&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mask&lt;/code&gt; 의 해당 값 이 &lt;code&gt;True&lt;/code&gt; 인 &lt;code&gt;data&lt;/code&gt; 의 요소를 유지하여 형성되는 잠재적으로 거친 텐서입니다 .</target>
        </trans-unit>
        <trans-unit id="c77b54b94101dabacf241997e364383a4db092d7" translate="yes" xml:space="preserve">
          <source>A potentially ragged tensor with rank &lt;code&gt;K&lt;/code&gt; and the specified &lt;code&gt;ragged_rank&lt;/code&gt;, containing the values from &lt;code&gt;pylist&lt;/code&gt;.</source>
          <target state="translated">순위 잠재적 울퉁불퉁 텐서 &lt;code&gt;K&lt;/code&gt; 지정된 &lt;code&gt;ragged_rank&lt;/code&gt; 의 값을 포함 &lt;code&gt;pylist&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c793be5fa59754ec666e0e9790ac1c6ec27c068e" translate="yes" xml:space="preserve">
          <source>A potentially ragged tensor with shape &lt;code&gt;[nvals, ...]&lt;/code&gt;.</source>
          <target state="translated">모양이 &lt;code&gt;[nvals, ...]&lt;/code&gt; 인 잠재적으로 비정형 텐서 .</target>
        </trans-unit>
        <trans-unit id="ffd45ac58ce5a053870d73e19980a4d6fbbc34bd" translate="yes" xml:space="preserve">
          <source>A potentially ragged tensor.</source>
          <target state="translated">불규칙한 텐서.</target>
        </trans-unit>
        <trans-unit id="8f94a5586de25d804d1e907e6fd460f756925307" translate="yes" xml:space="preserve">
          <source>A prediction-flavored signature_def.</source>
          <target state="translated">예측이 좋은 signature_def.</target>
        </trans-unit>
        <trans-unit id="67b05069cba0da835930ccf98c8cf106e6090011" translate="yes" xml:space="preserve">
          <source>A prefix to use for the checkpoint filenames (/path/to/directory/and_a_prefix).</source>
          <target state="translated">체크 포인트 파일 이름에 사용할 접두사 (/ path / to / directory / and_a_prefix).</target>
        </trans-unit>
        <trans-unit id="cff96f2eb6e722107ce3ced312368b7da4bf4695" translate="yes" xml:space="preserve">
          <source>A prefix to use for the checkpoint filenames (/path/to/directory/and_a_prefix). Names are generated based on this prefix and &lt;a href=&quot;checkpoint#save_counter&quot;&gt;&lt;code&gt;Checkpoint.save_counter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">체크 포인트 파일 이름에 사용할 접두사 (/ path / to / directory / and_a_prefix). 이 접두사와 &lt;a href=&quot;checkpoint#save_counter&quot;&gt; &lt;code&gt;Checkpoint.save_counter&lt;/code&gt; 를&lt;/a&gt; 기반으로 이름이 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="54d853ca5160bf5ec242ec932f7fd576fe5b554b" translate="yes" xml:space="preserve">
          <source>A prefix to use for the checkpoint filenames (/path/to/directory/and_a_prefix). Names are generated based on this prefix and &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/train/Checkpoint#save_counter&quot;&gt;&lt;code&gt;Checkpoint.save_counter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">체크 포인트 파일 이름에 사용할 접두사 (/ path / to / directory / and_a_prefix). 이 접두사와 &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/train/Checkpoint#save_counter&quot;&gt; &lt;code&gt;Checkpoint.save_counter&lt;/code&gt; 를&lt;/a&gt; 기반으로 이름이 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="e20e4853546059a6d433d0b093ad98238cfe35f8" translate="yes" xml:space="preserve">
          <source>A proto field that contains a submessage or group can only be converted to &lt;code&gt;DT_STRING&lt;/code&gt; (the serialized submessage). This is to reduce the complexity of the API. The resulting string can be used as input to another instance of the decode_proto op.</source>
          <target state="translated">하위 메시지 또는 그룹이 포함 된 프로토 필드는 &lt;code&gt;DT_STRING&lt;/code&gt; (직렬화 된 하위 메시지)으로 만 변환 할 수 있습니다 . 이는 API의 복잡성을 줄이기위한 것입니다. 결과 문자열은 다른 decode_proto op 인스턴스에 대한 입력으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7dcac7ecbf3d4d7aa7a038b2a081dddd7dfaac5e" translate="yes" xml:space="preserve">
          <source>A python integer, indicating the dimension along which to stack. (Note: Unlike &lt;a href=&quot;../stack&quot;&gt;&lt;code&gt;tf.stack&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;axis&lt;/code&gt; parameter must be statically known.) Negative values are supported only if the rank of at least one &lt;code&gt;values&lt;/code&gt; value is statically known.</source>
          <target state="translated">스택 할 차원을 나타내는 Python 정수입니다. (주 : 달리 &lt;a href=&quot;../stack&quot;&gt; &lt;code&gt;tf.stack&lt;/code&gt; 는&lt;/a&gt; 상기 &lt;code&gt;axis&lt;/code&gt; . 파라미터는 정적 알려져 있어야) 네거티브 값은 적어도 하나의 랭크 만 지원되는 &lt;code&gt;values&lt;/code&gt; 값은 정적으로 알려져있다.</target>
        </trans-unit>
        <trans-unit id="914c50c2ec307d4877943bf6d170a75963c137f1" translate="yes" xml:space="preserve">
          <source>A python list or tuple of float thresholds in &lt;code&gt;[0, 1]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[0, 1]&lt;/code&gt; 에있는 부동 소수점 임계 값의 파이썬 목록 또는 튜플 .</target>
        </trans-unit>
        <trans-unit id="49ff4fa1b9da0ffc3c26c80fa877aa1089ee31d0" translate="yes" xml:space="preserve">
          <source>A python module containing the Python wrappers for Ops defined in the plugin.</source>
          <target state="translated">플러그인에 정의 된 Ops 용 Python 래퍼가 포함 된 Python 모듈입니다.</target>
        </trans-unit>
        <trans-unit id="6312179a8c7aae72db69101b44bfc76661b62bb1" translate="yes" xml:space="preserve">
          <source>A python object to check.</source>
          <target state="translated">확인할 파이썬 객체입니다.</target>
        </trans-unit>
        <trans-unit id="724a7e399f2ef38504001db05a8799e740658497" translate="yes" xml:space="preserve">
          <source>A python scalar or a scalar tensor. Lower bound of the range of random values to generate (inclusive).</source>
          <target state="translated">파이썬 스칼라 또는 스칼라 텐서. 생성 할 임의 값 범위의 하한 (포함)입니다.</target>
        </trans-unit>
        <trans-unit id="16a34c85aca1d440b3f51980838cec6f1b414426" translate="yes" xml:space="preserve">
          <source>A python scalar or a scalar tensor. Lower bound of the range of random values to generate.</source>
          <target state="translated">파이썬 스칼라 또는 스칼라 텐서. 생성 할 임의 값 범위의 하한입니다.</target>
        </trans-unit>
        <trans-unit id="02cf3a27a80d7dbed23aac876ceb665dc6275b09" translate="yes" xml:space="preserve">
          <source>A python scalar or a scalar tensor. Upper bound of the range of random values to generate (exclusive).</source>
          <target state="translated">파이썬 스칼라 또는 스칼라 텐서. 생성 할 임의 값 범위의 상한 (배타적).</target>
        </trans-unit>
        <trans-unit id="814864f0ef6a9688a71a57a0f7784b25e955dd44" translate="yes" xml:space="preserve">
          <source>A python scalar or a scalar tensor. Upper bound of the range of random values to generate. Defaults to 1 for float types.</source>
          <target state="translated">파이썬 스칼라 또는 스칼라 텐서. 생성 할 임의 값 범위의 상한입니다. float 유형의 경우 기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="cafad61479fdb01c47931a5f011744008a2d5453" translate="yes" xml:space="preserve">
          <source>A python tuple of int values describing how each tensor produced by the Estimator &lt;code&gt;input_fn&lt;/code&gt; should be split across the TPU compute shards. For example, if your input_fn produced (images, labels) where the images tensor is in &lt;code&gt;HWCN&lt;/code&gt; format, your shard dimensions would be [3, 0], where 3 corresponds to the &lt;code&gt;N&lt;/code&gt; dimension of your images Tensor, and 0 corresponds to the dimension along which to split the labels to match up with the corresponding images. If None is supplied, and per_host_input_for_training is True, batches will be sharded based on the major dimension. If tpu_config.per_host_input_for_training is False or &lt;code&gt;PER_HOST_V2&lt;/code&gt;, batch_axis is ignored.</source>
          <target state="translated">Estimator &lt;code&gt;input_fn&lt;/code&gt; 에 의해 생성 된 각 텐서를 TPU 컴퓨팅 샤드로 분할 하는 방법을 설명하는 int 값의 Python 튜플입니다 . 예를 들어 input_fn이 이미지 텐서가 &lt;code&gt;HWCN&lt;/code&gt; 형식 인 경우 (이미지, 레이블) 생성 된 경우 샤드 크기는 [3, 0]이됩니다. 여기서 3은 이미지 Tensor 의 &lt;code&gt;N&lt;/code&gt; 차원에 해당하고 0은 차원에 해당합니다. 라벨을 분할하여 해당 이미지와 일치시킵니다. None이 제공되고 per_host_input_for_training이 True 인 경우 배치는 주요 차원을 기반으로 분할됩니다. tpu_config.per_host_input_for_training이 False 또는 &lt;code&gt;PER_HOST_V2&lt;/code&gt; 인 경우 batch_axis는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="b5ceb52854fc9dd10aa14a3068b434c0ea2dc9e4" translate="yes" xml:space="preserve">
          <source>A quasi-SVM classifier for MNIST:</source>
          <target state="translated">MNIST에 대한 유사 SVM 분류기 :</target>
        </trans-unit>
        <trans-unit id="a1d8276415a3ff329d58320dd490307ab692e13e" translate="yes" xml:space="preserve">
          <source>A queue implementation that dequeues elements in a random order.</source>
          <target state="translated">임의의 순서로 요소를 큐에 넣는 큐 구현입니다.</target>
        </trans-unit>
        <trans-unit id="9d0134f9689ac4ee6cd7704c2a945bf83ab7a481" translate="yes" xml:space="preserve">
          <source>A queue implementation that dequeues elements in first-in first-out order.</source>
          <target state="translated">선입 선출 순서로 요소를 대기열에서 제외하는 대기열 구현입니다.</target>
        </trans-unit>
        <trans-unit id="fc491c6af236b62389c6e2f8eef971ec0f61f02b" translate="yes" xml:space="preserve">
          <source>A queue implementation that dequeues elements in prioritized order.</source>
          <target state="translated">우선 순위에 따라 요소를 대기열에서 제외시키는 대기열 구현입니다.</target>
        </trans-unit>
        <trans-unit id="396b75c7761043a0a93042f21d4b549189c81c0c" translate="yes" xml:space="preserve">
          <source>A queue is a TensorFlow data structure that stores tensors across multiple steps, and exposes operations that enqueue and dequeue tensors.</source>
          <target state="translated">큐는 여러 단계에 걸쳐 텐서를 저장하고 텐서를 대기열에 넣고 대기열에서 빼는 작업을 노출하는 TensorFlow 데이터 구조입니다.</target>
        </trans-unit>
        <trans-unit id="2a4c6dd6f98f9feabc821ff4b506e8de40779380" translate="yes" xml:space="preserve">
          <source>A queue that produces elements in first-in first-out order.</source>
          <target state="translated">선입 선출 순서로 요소를 생성하는 대기열입니다.</target>
        </trans-unit>
        <trans-unit id="1ae603985cb0dfae7b74f97452e06e53d863a524" translate="yes" xml:space="preserve">
          <source>A queue that produces elements sorted by the first component value.</source>
          <target state="translated">첫 번째 구성 요소 값으로 정렬 된 요소를 생성하는 큐입니다.</target>
        </trans-unit>
        <trans-unit id="7ee4b8b0c2224e0356fefdf0a50f23436fe25ada" translate="yes" xml:space="preserve">
          <source>A queue that randomizes the order of elements.</source>
          <target state="translated">요소의 순서를 무작위로 지정하는 큐입니다.</target>
        </trans-unit>
        <trans-unit id="fa49f0cc597736c054b6a2eeafb31e37979cca9c" translate="yes" xml:space="preserve">
          <source>A queue with the output rows. A &lt;code&gt;QueueRunner&lt;/code&gt; for the queue is added to the current &lt;code&gt;QUEUE_RUNNER&lt;/code&gt; collection of the current graph.</source>
          <target state="translated">출력 행이있는 큐 큐 의 &lt;code&gt;QueueRunner&lt;/code&gt; 가 현재 그래프 의 현재 &lt;code&gt;QUEUE_RUNNER&lt;/code&gt; 콜렉션에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="87db13c2cbb39d81423e8f46faa81e8b742e5d32" translate="yes" xml:space="preserve">
          <source>A queue with the output strings. A &lt;code&gt;QueueRunner&lt;/code&gt; for the Queue is added to the current &lt;code&gt;Graph&lt;/code&gt;'s &lt;code&gt;QUEUE_RUNNER&lt;/code&gt; collection.</source>
          <target state="translated">출력 문자열이있는 큐 &lt;code&gt;QueueRunner&lt;/code&gt; 큐의 현재에 추가 &lt;code&gt;Graph&lt;/code&gt; 의 &lt;code&gt;QUEUE_RUNNER&lt;/code&gt; 의 모음입니다.</target>
        </trans-unit>
        <trans-unit id="f3413bef773b42f8f15dc3d4f9fcaaa4910a1e1f" translate="yes" xml:space="preserve">
          <source>A range &lt;code&gt;begin:end:stride&lt;/code&gt;. This is used to specify how much to choose from a given dimension. &lt;code&gt;stride&lt;/code&gt; can be any integer but 0. &lt;code&gt;begin&lt;/code&gt; is an integer which represents the index of the first value to select while &lt;code&gt;end&lt;/code&gt; represents the index of the last value to select. The number of values selected in each dimension is &lt;code&gt;end - begin&lt;/code&gt; if &lt;code&gt;stride &amp;gt; 0&lt;/code&gt; and &lt;code&gt;begin - end&lt;/code&gt; if &lt;code&gt;stride &amp;lt; 0&lt;/code&gt;. &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; can be negative where &lt;code&gt;-1&lt;/code&gt; is the last element, &lt;code&gt;-2&lt;/code&gt; is the second to last. &lt;code&gt;begin_mask&lt;/code&gt; controls whether to replace the explicitly given &lt;code&gt;begin&lt;/code&gt; with an implicit effective value of &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;stride &amp;gt; 0&lt;/code&gt; and &lt;code&gt;-1&lt;/code&gt; if &lt;code&gt;stride &amp;lt; 0&lt;/code&gt;. &lt;code&gt;end_mask&lt;/code&gt; is analogous but produces the number required to create the largest open interval. For example, given a shape &lt;code&gt;(3,)&lt;/code&gt; tensor &lt;code&gt;foo[:]&lt;/code&gt;, the effective &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; are &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;3&lt;/code&gt;. Do not assume this is equivalent to &lt;code&gt;foo[0:-1]&lt;/code&gt; which has an effective &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; of &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt;. Another example is &lt;code&gt;foo[-2::-1]&lt;/code&gt; which reverses the first dimension of a tensor while dropping the last two (in the original order elements). For example &lt;code&gt;foo = [1,2,3,4]; foo[-2::-1]&lt;/code&gt; is &lt;code&gt;[4,3]&lt;/code&gt;.</source>
          <target state="translated">범위 &lt;code&gt;begin:end:stride&lt;/code&gt; . 이것은 주어진 차원에서 선택할 양을 지정하는 데 사용됩니다. &lt;code&gt;stride&lt;/code&gt; 는 모든 정수가 될 수 있지만 0입니다. &lt;code&gt;begin&lt;/code&gt; 은 선택할 첫 번째 값의 인덱스를 나타내는 정수이고 &lt;code&gt;end&lt;/code&gt; 는 선택할 마지막 값의 인덱스를 나타냅니다. 각 차원에서 선택된 값의 수는 &lt;code&gt;end - begin&lt;/code&gt; 경우 &lt;code&gt;stride &amp;gt; 0&lt;/code&gt; 및 &lt;code&gt;begin - end&lt;/code&gt; 경우 &lt;code&gt;stride &amp;lt; 0&lt;/code&gt; . &lt;code&gt;begin&lt;/code&gt; 및 &lt;code&gt;end&lt;/code&gt; 는 음수 일 수 있습니다. 여기서 &lt;code&gt;-1&lt;/code&gt; 은 마지막 요소이고 &lt;code&gt;-2&lt;/code&gt; 는 두 번째 에서 마지막 요소 입니다. &lt;code&gt;begin_mask&lt;/code&gt; &lt;code&gt;stride &amp;gt; 0&lt;/code&gt; 경우 명시 적으로 지정된 &lt;code&gt;begin&lt;/code&gt; 을 &lt;code&gt;0&lt;/code&gt; 의 암시 적 유효 값 으로 대체할지 여부를 제어 하고 &lt;code&gt;stride &amp;lt; 0&lt;/code&gt; 경우 &lt;code&gt;-1&lt;/code&gt; 을 제어 합니다 . &lt;code&gt;end_mask&lt;/code&gt; 는 유사하지만 가장 큰 열기 간격을 만드는 데 필요한 수를 생성합니다. 예를 들어, 모양 &lt;code&gt;(3,)&lt;/code&gt; 텐서 &lt;code&gt;foo[:]&lt;/code&gt; 주어지면 유효한 &lt;code&gt;begin&lt;/code&gt; 과 &lt;code&gt;end&lt;/code&gt; 은 &lt;code&gt;0&lt;/code&gt; 과 &lt;code&gt;3&lt;/code&gt; 입니다. 이것이 유효한 &lt;code&gt;begin&lt;/code&gt; 과 &lt;code&gt;end&lt;/code&gt; 이 &lt;code&gt;0&lt;/code&gt; 과 &lt;code&gt;2&lt;/code&gt; 인 &lt;code&gt;foo[0:-1]&lt;/code&gt; 과 동일하다고 가정하지 마십시오 .. 또 다른 예는 &lt;code&gt;foo[-2::-1]&lt;/code&gt; 으로, 텐서의 첫 번째 차원을 뒤집으면서 마지막 두 개를 삭제합니다 (원래 순서 요소). 예를 들어 &lt;code&gt;foo = [1,2,3,4]; foo[-2::-1]&lt;/code&gt; 은 &lt;code&gt;[4,3]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="294b43015af10ac44819f175eeb5181a660db901" translate="yes" xml:space="preserve">
          <source>A rank 1 int32 array describing the shape of the TPU topology.</source>
          <target state="translated">TPU 토폴로지의 형태를 설명하는 순위 1 int32 배열입니다.</target>
        </trans-unit>
        <trans-unit id="2b8a3506959ceefe0ab2277a5874050b44d60ff2" translate="yes" xml:space="preserve">
          <source>A rank 1 integer &lt;code&gt;Tensor&lt;/code&gt; representing the broadcasted shape.</source>
          <target state="translated">방송 된 형태를 나타내는 1 등급 정수 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b8880b51e18da83ae037fe1d790fe7cc5862cd6" translate="yes" xml:space="preserve">
          <source>A rank 1 integer &lt;code&gt;Tensor&lt;/code&gt;, representing the shape of x.</source>
          <target state="translated">x의 모양을 나타내는 순위 1 정수 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a5a191f05870088287506dc572e7144ecbe63b6" translate="yes" xml:space="preserve">
          <source>A rank 1 integer &lt;code&gt;Tensor&lt;/code&gt;, representing the shape of y.</source>
          <target state="translated">y의 모양을 나타내는 순위 1 정수 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f354126b25e63428cc3c5b30fe77ca74ffee7b8" translate="yes" xml:space="preserve">
          <source>A rank 4 numpy array that describes the mapping from TensorFlow TPU devices to TPU fabric coordinates, or &lt;code&gt;None&lt;/code&gt;. Ignored if &lt;code&gt;serialized is not&lt;/code&gt;None`.</source>
          <target state="translated">TensorFlow TPU 기기에서 TPU 패브릭 좌표로의 매핑을 설명하는 랭크 4 numpy 배열 또는 &lt;code&gt;None&lt;/code&gt; . &lt;code&gt;serialized is not&lt;/code&gt; None 이 아니면 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="9e51c729d2a0cde407f4b783c381eaf74adb5723" translate="yes" xml:space="preserve">
          <source>A rank &lt;code&gt;R &amp;gt; 0&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; to be unstacked.</source>
          <target state="translated">랭크 &lt;code&gt;R &amp;gt; 0&lt;/code&gt; 스택 해제 될 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="482736b28b8a4219e8b527bc0a43dd8bcee7bd9c" translate="yes" xml:space="preserve">
          <source>A rank &lt;code&gt;n + 1&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt;, &lt;code&gt;n &amp;gt;= 0&lt;/code&gt; with type &lt;code&gt;float&lt;/code&gt;, or &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">A rank &lt;code&gt;n + 1&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; , &lt;code&gt;n &amp;gt;= 0&lt;/code&gt; with type &lt;code&gt;float&lt;/code&gt; 또는 &lt;code&gt;double&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb7e1e88b8be0fb93a7862b669df3ff18b2ef744" translate="yes" xml:space="preserve">
          <source>A real numeric &lt;code&gt;Tensor&lt;/code&gt;. Any shape. Values to use to build the histogram.</source>
          <target state="translated">실제 숫자 &lt;code&gt;Tensor&lt;/code&gt; . 모든 모양. 히스토그램을 작성하는 데 사용할 값입니다.</target>
        </trans-unit>
        <trans-unit id="8a3caf28fc52cf19bfff5b4ab3ada4da8f3d6912" translate="yes" xml:space="preserve">
          <source>A real numeric Tensor containing a single value.</source>
          <target state="translated">단일 값을 포함하는 실수 텐서.</target>
        </trans-unit>
        <trans-unit id="e8578de16f8741a97ef6d5751440f0f81359124f" translate="yes" xml:space="preserve">
          <source>A real numeric scalar value, convertible to a &lt;code&gt;float32&lt;/code&gt; Tensor.</source>
          <target state="translated">&lt;code&gt;float32&lt;/code&gt; Tensor 로 변환 할 수있는 실수 형 스칼라 값 입니다.</target>
        </trans-unit>
        <trans-unit id="f3c1ad92b901d1ad0777baf6399d0ed48f90556e" translate="yes" xml:space="preserve">
          <source>A reducer is represented as a tuple of the three functions:</source>
          <target state="translated">감속기는 세 가지 기능의 튜플로 표현됩니다.</target>
        </trans-unit>
        <trans-unit id="83bdcc4157db10015e3e5b0142564671d0766e40" translate="yes" xml:space="preserve">
          <source>A reducer is represented as a tuple of the three functions: 1) initialization function: key =&amp;gt; initial state 2) reduce function: (old state, input) =&amp;gt; new state 3) finalization function: state =&amp;gt; result</source>
          <target state="translated">감속기는 세 가지 기능의 튜플로 표시됩니다. 1) 초기화 기능 : 키 =&amp;gt; 초기 상태 2) 기능 감소 : (이전 상태, 입력) =&amp;gt; 새로운 상태 3) 최종 기능 : 상태 =&amp;gt; 결과</target>
        </trans-unit>
        <trans-unit id="75c06ac6cf33632deea307655d1812c23905a5fb" translate="yes" xml:space="preserve">
          <source>A reducer is used for reducing a set of elements.</source>
          <target state="translated">감속기는 요소 집합을 줄이는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="757f4a32a00d00e326cd9033570cecb722e13544" translate="yes" xml:space="preserve">
          <source>A regression-flavored signature_def.</source>
          <target state="translated">회귀 맛의 signature_def.</target>
        </trans-unit>
        <trans-unit id="5d06d43451fceec6dc9fd041251112e3f5386251" translate="yes" xml:space="preserve">
          <source>A regressor for TensorFlow DNN models.</source>
          <target state="translated">TensorFlow DNN 모델의 회귀 기입니다.</target>
        </trans-unit>
        <trans-unit id="5ddd7df562448ad4720ab5bbd697a7eab17a53a4" translate="yes" xml:space="preserve">
          <source>A regressor that can establish a simple baseline.</source>
          <target state="translated">간단한 기준을 설정할 수있는 회귀 기입니다.</target>
        </trans-unit>
        <trans-unit id="ac67a25f3ea670385f1773b92c19040691c92f6c" translate="yes" xml:space="preserve">
          <source>A regular expression (string) that captures which variables to warm-start (see tf.compat.v1.get_collection). This expression will only consider variables in the TRAINABLE_VARIABLES collection -- if you need to warm-start non_TRAINABLE vars (such as optimizer accumulators or batch norm statistics), please use the below option.</source>
          <target state="translated">웜 스타트 할 변수를 캡처하는 정규식 (문자열) (tf.compat.v1.get_collection 참조). 이 표현식은 TRAINABLE_VARIABLES 컬렉션의 변수 만 고려합니다. 비 _TRAINABLE 변수 (예 : 최적화 프로그램 누산기 또는 일괄 표준 통계)를 웜 스타트해야하는 경우 아래 옵션을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="98e3c187466785e64c25e1fedf25e875027248f4" translate="yes" xml:space="preserve">
          <source>A regularizer instance.</source>
          <target state="translated">정규화 인스턴스.</target>
        </trans-unit>
        <trans-unit id="ef278a4c4a6cc25c4908331ca79c94b961a28df9" translate="yes" xml:space="preserve">
          <source>A regularizer that applies a L1 regularization penalty.</source>
          <target state="translated">L1 정규화 패널티를 적용하는 정규화입니다.</target>
        </trans-unit>
        <trans-unit id="2dcdf6eb7db94b9df999a6a4615997b526f22834" translate="yes" xml:space="preserve">
          <source>A regularizer that applies a L2 regularization penalty.</source>
          <target state="translated">L2 정규화 패널티를 적용하는 정규화입니다.</target>
        </trans-unit>
        <trans-unit id="dfbdc06705463d24c68f2d77e602815bf08d7d78" translate="yes" xml:space="preserve">
          <source>A regularizer that applies both L1 and L2 regularization penalties.</source>
          <target state="translated">L1 및 L2 정규화 페널티를 모두 적용하는 정규화 기입니다.</target>
        </trans-unit>
        <trans-unit id="6d6c20d03c5c4ad55c081ed54de8145ecceac57a" translate="yes" xml:space="preserve">
          <source>A relative tolerance of change in the loss between iterations. Stops learning if the loss changes less than this amount. This may not work correctly if &lt;code&gt;use_mini_batch=True&lt;/code&gt;.</source>
          <target state="translated">반복 간의 손실 변화에 대한 상대적 허용 오차입니다. 손실이이 금액보다 적게 변하면 학습을 중지합니다. &lt;code&gt;use_mini_batch=True&lt;/code&gt; 인 경우 올바르게 작동하지 않을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="571dfab5ae76b3889249c21a15c0ff0bd2ea5000" translate="yes" xml:space="preserve">
          <source>A representative dataset that can be used to evaluate optimizations by the converter. E.g. converter can use these examples to estimate (min, max) ranges by calibrating the model on inputs. This can allow converter to quantize a converted floating point model.</source>
          <target state="translated">변환기에서 최적화를 평가하는 데 사용할 수있는 대표적인 데이터 세트입니다. 예를 들어 변환기는 이러한 예를 사용하여 입력에 대한 모델을 교정하여 (최소, 최대) 범위를 추정 할 수 있습니다. 이를 통해 변환기는 변환 된 부동 소수점 모델을 양자화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2fa679300fc31b7e30daf499f5c1958367ac6a64" translate="yes" xml:space="preserve">
          <source>A representative dataset that can be used to generate input and output samples for the model. The converter can use the dataset to evaluate different optimizations.</source>
          <target state="translated">모델에 대한 입력 및 출력 샘플을 생성하는 데 사용할 수있는 대표적인 데이터 세트입니다. 변환기는 데이터 세트를 사용하여 다양한 최적화를 평가할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="62758f298a30770d84e8f73d0293e5629d4cd93c" translate="yes" xml:space="preserve">
          <source>A representative dataset that can be used to generate input and output samples for the model. The converter can use the dataset to evaluate different optimizations. Note that this is an optional attribute but it is necessary if INT8 is the only support builtin ops in target ops.</source>
          <target state="translated">모델에 대한 입력 및 출력 샘플을 생성하는 데 사용할 수있는 대표적인 데이터 세트입니다. 변환기는 데이터 세트를 사용하여 다양한 최적화를 평가할 수 있습니다. 이것은 선택적 속성이지만 INT8이 대상 작업에서 유일한 지원 내장 작업 인 경우 필요합니다.</target>
        </trans-unit>
        <trans-unit id="e2f05934ab66597b643bc4e9c114b0d8813acf93" translate="yes" xml:space="preserve">
          <source>A resource container is distributed across all workers in the same cluster as &lt;code&gt;target&lt;/code&gt;. When a resource container on &lt;code&gt;target&lt;/code&gt; is reset, resources associated with that container will be cleared. In particular, all Variables in the container will become undefined: they lose their values and shapes.</source>
          <target state="translated">자원 컨테이너는 &lt;code&gt;target&lt;/code&gt; 과 동일한 클러스터의 모든 작업자에게 분산됩니다 . &lt;code&gt;target&lt;/code&gt; 의 자원 컨테이너 가 재설정되면 해당 컨테이너와 연관된 자원이 지워집니다. 특히 컨테이너의 모든 변수는 정의되지 않으며 값과 모양이 손실됩니다.</target>
        </trans-unit>
        <trans-unit id="de2d127d49356628c3dcfa6dcd301ca43c24b9e5" translate="yes" xml:space="preserve">
          <source>A return type for a serving_input_receiver_fn.</source>
          <target state="translated">serving_input_receiver_fn의 리턴 유형입니다.</target>
        </trans-unit>
        <trans-unit id="0ac211a3db85176b3d27ffc488df9bb5fc62ce2e" translate="yes" xml:space="preserve">
          <source>A rotated tensor of the same type and shape as &lt;code&gt;image&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;image&lt;/code&gt; 와 동일한 유형 및 모양의 회전 된 텐서 .</target>
        </trans-unit>
        <trans-unit id="6361504d418869a0af9d4f189120173fa24eab9f" translate="yes" xml:space="preserve">
          <source>A sampler can be used to sample from a subset of the original range in order to speed up the whole computation through parallelism. This parameter (together with &lt;code&gt;num_shards&lt;/code&gt;) indicates the particular partition number of the operation, when partitioning is being used.</source>
          <target state="translated">병렬 처리를 통해 전체 계산 속도를 높이기 위해 샘플러를 사용하여 원래 범위의 하위 집합에서 샘플링 할 수 있습니다. 이 매개 변수 ( &lt;code&gt;num_shards&lt;/code&gt; 와 함께 )는 파티셔닝이 사용될 때 작업의 특정 파티션 번호를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="1aff9ea9442104f4b76eeefebfd18874d2594d0a" translate="yes" xml:space="preserve">
          <source>A sampler can be used to sample from a subset of the original range in order to speed up the whole computation through parallelism. This parameter (together with &lt;code&gt;shard&lt;/code&gt;) indicates the number of partitions that are being used in the overall computation.</source>
          <target state="translated">병렬 처리를 통해 전체 계산 속도를 높이기 위해 샘플러를 사용하여 원래 범위의 하위 집합에서 샘플링 할 수 있습니다. 이 매개 변수 ( &lt;code&gt;shard&lt;/code&gt; 와 함께 )는 전체 계산에 사용되는 파티션 수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="bb77779cdb1d948c347b9c3675b9ffc04c142bda" translate="yes" xml:space="preserve">
          <source>A saver constructed from &lt;code&gt;saver_def&lt;/code&gt; in &lt;code&gt;MetaGraphDef&lt;/code&gt; or None.</source>
          <target state="translated">&lt;code&gt;saver_def&lt;/code&gt; 의 &lt;code&gt;MetaGraphDef&lt;/code&gt; 또는 None으로 구성된 세이버 .</target>
        </trans-unit>
        <trans-unit id="71c8614c8e5021b53b430b32f22b961395f4c49a" translate="yes" xml:space="preserve">
          <source>A scalar (0-D Tensor) of strings (optional), the name of the serialized proto.</source>
          <target state="translated">직렬화 된 proto의 이름 인 문자열 (선택 사항)의 스칼라 (0-D Tensor)입니다.</target>
        </trans-unit>
        <trans-unit id="afc9bbe4ce6d06877c3181d5eddc7e0b80b27b71" translate="yes" xml:space="preserve">
          <source>A scalar (0-D Tensor) of type string, a single binary serialized &lt;code&gt;SequenceExample&lt;/code&gt; proto.</source>
          <target state="translated">문자열 유형의 스칼라 (0-D Tensor), 단일 이진 직렬화 &lt;code&gt;SequenceExample&lt;/code&gt; 프로토.</target>
        </trans-unit>
        <trans-unit id="9adbeea3912ffc0f6faa934c0212e77ffa9d053f" translate="yes" xml:space="preserve">
          <source>A scalar &lt;a href=&quot;../../../../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Tensor&lt;/code&gt; representing the cardinality of the dataset. If the cardinality is infinite or unknown, &lt;code&gt;cardinality&lt;/code&gt; returns the named constants &lt;a href=&quot;../../../../data#INFINITE_CARDINALITY&quot;&gt;&lt;code&gt;tf.data.INFINITE_CARDINALITY&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../../data#UNKNOWN_CARDINALITY&quot;&gt;&lt;code&gt;tf.data.UNKNOWN_CARDINALITY&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="translated">데이터 세트의 카디널리티를 나타내는 스칼라 &lt;a href=&quot;../../../../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Tensor&lt;/code&gt; 입니다. 카디널리티가 무한하거나 알 수없는 경우 &lt;code&gt;cardinality&lt;/code&gt; 는 각각 명명 된 상수 &lt;a href=&quot;../../../../data#INFINITE_CARDINALITY&quot;&gt; &lt;code&gt;tf.data.INFINITE_CARDINALITY&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../../../data#UNKNOWN_CARDINALITY&quot;&gt; &lt;code&gt;tf.data.UNKNOWN_CARDINALITY&lt;/code&gt; 를&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4765f7279e53d8625ff5588f4c03c26f7bb7ba38" translate="yes" xml:space="preserve">
          <source>A scalar &lt;a href=&quot;../../../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Tensor&lt;/code&gt; representing the cardinality of the dataset. If the cardinality is infinite or unknown, &lt;code&gt;cardinality&lt;/code&gt; returns the named constants &lt;a href=&quot;../../../data#INFINITE_CARDINALITY&quot;&gt;&lt;code&gt;tf.data.INFINITE_CARDINALITY&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../data#UNKNOWN_CARDINALITY&quot;&gt;&lt;code&gt;tf.data.UNKNOWN_CARDINALITY&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="translated">데이터 세트의 카디널리티를 나타내는 스칼라 &lt;a href=&quot;../../../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Tensor&lt;/code&gt; 입니다. 카디널리티가 무한하거나 알 수없는 경우 &lt;code&gt;cardinality&lt;/code&gt; 는 각각 명명 된 상수 &lt;a href=&quot;../../../data#INFINITE_CARDINALITY&quot;&gt; &lt;code&gt;tf.data.INFINITE_CARDINALITY&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../../data#UNKNOWN_CARDINALITY&quot;&gt; &lt;code&gt;tf.data.UNKNOWN_CARDINALITY&lt;/code&gt; 를&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6df56b0aa903965203eda5b8e93379f87b2e23e7" translate="yes" xml:space="preserve">
          <source>A scalar &lt;a href=&quot;../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; of type &lt;a href=&quot;../../../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; that evaluates to a handle produced by the &lt;code&gt;Iterator.string_handle()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;Iterator.string_handle()&lt;/code&gt; 메서드에 의해 생성 된 핸들로 평가되는 &lt;a href=&quot;../../../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt; 유형 의 스칼라 &lt;a href=&quot;../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="51856a6da4fbcb1e748b15eda8881eea55d5e2b0" translate="yes" xml:space="preserve">
          <source>A scalar &lt;a href=&quot;../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; of type &lt;a href=&quot;../../../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">스칼라 &lt;a href=&quot;../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 형의 &lt;a href=&quot;../../../../tf#string&quot;&gt; &lt;code&gt;tf.string&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9be82e4f979a66016799d9ae91a3478b837b88fc" translate="yes" xml:space="preserve">
          <source>A scalar &lt;a href=&quot;../../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Tensor&lt;/code&gt; representing the cardinality of &lt;code&gt;dataset&lt;/code&gt;. If the cardinality is infinite or unknown, the operation returns the named constant &lt;code&gt;INFINITE_CARDINALITY&lt;/code&gt; and &lt;code&gt;UNKNOWN_CARDINALITY&lt;/code&gt; respectively.</source>
          <target state="translated">&lt;code&gt;dataset&lt;/code&gt; 의 카디널리티를 나타내는 스칼라 &lt;a href=&quot;../../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Tensor&lt;/code&gt; . 카디널리티가 무한하거나 알 수없는 경우 조작은 각각 명명 된 상수 &lt;code&gt;INFINITE_CARDINALITY&lt;/code&gt; 및 &lt;code&gt;UNKNOWN_CARDINALITY&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="20d678cfead6a05659870bdcb43b2174ac5e65b9" translate="yes" xml:space="preserve">
          <source>A scalar &lt;a href=&quot;../../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Tensor&lt;/code&gt; representing the cardinality of the dataset. If the cardinality is infinite or unknown, &lt;code&gt;cardinality&lt;/code&gt; returns the named constants &lt;a href=&quot;../../data#INFINITE_CARDINALITY&quot;&gt;&lt;code&gt;tf.data.INFINITE_CARDINALITY&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../data#UNKNOWN_CARDINALITY&quot;&gt;&lt;code&gt;tf.data.UNKNOWN_CARDINALITY&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="translated">데이터 세트의 카디널리티를 나타내는 스칼라 &lt;a href=&quot;../../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Tensor&lt;/code&gt; 입니다. 카디널리티가 무한하거나 알 수없는 경우 &lt;code&gt;cardinality&lt;/code&gt; 는 각각 명명 된 상수 &lt;a href=&quot;../../data#INFINITE_CARDINALITY&quot;&gt; &lt;code&gt;tf.data.INFINITE_CARDINALITY&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../data#UNKNOWN_CARDINALITY&quot;&gt; &lt;code&gt;tf.data.UNKNOWN_CARDINALITY&lt;/code&gt; 를&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9e15281f957e60247b1fcc1c1517c70998f29079" translate="yes" xml:space="preserve">
          <source>A scalar &lt;a href=&quot;../../../tf#variant&quot;&gt;&lt;code&gt;tf.variant&lt;/code&gt;&lt;/a&gt; tensor representing a dataset.</source>
          <target state="translated">데이터 세트를 나타내는 스칼라 &lt;a href=&quot;../../../tf#variant&quot;&gt; &lt;code&gt;tf.variant&lt;/code&gt; &lt;/a&gt; 텐서입니다.</target>
        </trans-unit>
        <trans-unit id="624a56e23900d20a38233b26e9429a43b08640fc" translate="yes" xml:space="preserve">
          <source>A scalar &lt;a href=&quot;../../../tf#variant&quot;&gt;&lt;code&gt;tf.variant&lt;/code&gt;&lt;/a&gt; tensor representing the given dataset.</source>
          <target state="translated">주어진 데이터 세트를 나타내는 스칼라 &lt;a href=&quot;../../../tf#variant&quot;&gt; &lt;code&gt;tf.variant&lt;/code&gt; &lt;/a&gt; 텐서.</target>
        </trans-unit>
        <trans-unit id="2dd58f2dffef648acaeb7cf35590d3e6fd405ff1" translate="yes" xml:space="preserve">
          <source>A scalar &lt;a href=&quot;../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; of type &lt;a href=&quot;../../../tf#bool&quot;&gt;&lt;code&gt;tf.bool&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">스칼라 &lt;a href=&quot;../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 형의 &lt;a href=&quot;../../../tf#bool&quot;&gt; &lt;code&gt;tf.bool&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d3f75422681b24e8410731da9030207a5e38e29b" translate="yes" xml:space="preserve">
          <source>A scalar &lt;a href=&quot;../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Tensor&lt;/code&gt; representing the cardinality of the dataset. If the cardinality is infinite or unknown, &lt;code&gt;cardinality&lt;/code&gt; returns the named constants &lt;a href=&quot;../data#INFINITE_CARDINALITY&quot;&gt;&lt;code&gt;tf.data.INFINITE_CARDINALITY&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../data#UNKNOWN_CARDINALITY&quot;&gt;&lt;code&gt;tf.data.UNKNOWN_CARDINALITY&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="translated">데이터 세트의 카디널리티를 나타내는 스칼라 &lt;a href=&quot;../../tf#int64&quot;&gt; &lt;code&gt;tf.int64&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Tensor&lt;/code&gt; 입니다. 카디널리티가 무한하거나 알 수없는 경우 &lt;code&gt;cardinality&lt;/code&gt; 는 각각 명명 된 상수 &lt;a href=&quot;../data#INFINITE_CARDINALITY&quot;&gt; &lt;code&gt;tf.data.INFINITE_CARDINALITY&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../data#UNKNOWN_CARDINALITY&quot;&gt; &lt;code&gt;tf.data.UNKNOWN_CARDINALITY&lt;/code&gt; 를&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="457d2c096e2eb1a49c8b127eb590a5b88b7e8569" translate="yes" xml:space="preserve">
          <source>A scalar &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; of type &lt;a href=&quot;../../tf#bool&quot;&gt;&lt;code&gt;tf.bool&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">스칼라 &lt;a href=&quot;../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 형의 &lt;a href=&quot;../../tf#bool&quot;&gt; &lt;code&gt;tf.bool&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d5cf0a4cad52b8bff8de2b0a09a696c5eb42fda2" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;Tensor&lt;/code&gt; containing the number of elements to dequeue.</source>
          <target state="translated">대기열에서 제거 할 요소 수를 포함 하는 스칼라 &lt;code&gt;Tensor&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bc1b99f6e66d1c3a191449ddc6172449740d3bb2" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;Tensor&lt;/code&gt; indicating the window length to generate.</source>
          <target state="translated">생성 할 창 길이를 나타내는 스칼라 &lt;code&gt;Tensor&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4d7a225c702fdda301c0d08ada7b94867350bf51" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;Tensor&lt;/code&gt; of the same type as &lt;code&gt;learning_rate&lt;/code&gt;. The decayed learning rate.</source>
          <target state="translated">&lt;code&gt;learning_rate&lt;/code&gt; 와 동일한 유형 의 스칼라 &lt;code&gt;Tensor&lt;/code&gt; . 쇠퇴 학습 속도.</target>
        </trans-unit>
        <trans-unit id="3bd7c69d033cbe58dc5460525202cd5808832868" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 유형 의 스칼라 &lt;code&gt;Tensor&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="7fef64c8436ee07d54ef97e4cdfe0057ebab72c0" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The serialized &lt;code&gt;Summary&lt;/code&gt; protocol buffer resulting from the merging.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 유형 의 스칼라 &lt;code&gt;Tensor&lt;/code&gt; 입니다 . 병합으로 인해 직렬화 된 &lt;code&gt;Summary&lt;/code&gt; 프로토콜 버퍼입니다.</target>
        </trans-unit>
        <trans-unit id="60c124bc77bb109228d81443cf566344db78e38b" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The serialized &lt;code&gt;Summary&lt;/code&gt; protocol buffer.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 유형 의 스칼라 &lt;code&gt;Tensor&lt;/code&gt; 입니다 . 직렬화 된 &lt;code&gt;Summary&lt;/code&gt; 프로토콜 버퍼</target>
        </trans-unit>
        <trans-unit id="a9404dcdc7701ad26eb6651bf9ce91e47f56fc26" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Which contains a &lt;code&gt;Summary&lt;/code&gt; protobuf.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 유형 의 스칼라 &lt;code&gt;Tensor&lt;/code&gt; 입니다 . 여기에는 &lt;code&gt;Summary&lt;/code&gt; 프로토 타입이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="cec1d334e1c6799ff9f3bfa0442924b23dca2ea5" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;Tensor&lt;/code&gt; representing regularized training loss used in train and eval.</source>
          <target state="translated">기차와 평가에 사용되는 정규화 된 훈련 손실을 나타내는 스칼라 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="24bc7bbbe81f06edc6905a2088f00834b96685ba" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;Tensor&lt;/code&gt; representing the current area-under-curve.</source>
          <target state="translated">현재 곡선 아래 영역을 나타내는 스칼라 &lt;code&gt;Tensor&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c61d4318d6b60a3e9e77d2df2b4da91bb2bec1b6" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;Tensor&lt;/code&gt; representing the sensitivity at the given &lt;code&gt;specificity&lt;/code&gt; value.</source>
          <target state="translated">주어진 &lt;code&gt;specificity&lt;/code&gt; 값 에서 민감도를 나타내는 스칼라 &lt;code&gt;Tensor&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e8c022ef85cfc20af4d22012b145f22ec544e51f" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;Tensor&lt;/code&gt; representing the specificity at the given &lt;code&gt;sensitivity&lt;/code&gt; value.</source>
          <target state="translated">주어진 &lt;code&gt;sensitivity&lt;/code&gt; 값 에서 특이성을 나타내는 스칼라 &lt;code&gt;Tensor&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d59e55cf0edb9fce57473d65cef8af265889eab2" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;Tensor&lt;/code&gt; that returns the weighted loss.</source>
          <target state="translated">가중 손실을 반환 하는 스칼라 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b532159783a8214533efe0f232f0ccfada71d994" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;Tensor&lt;/code&gt; with dtype &lt;code&gt;out_type&lt;/code&gt;.</source>
          <target state="translated">dtype &lt;code&gt;out_type&lt;/code&gt; 인 스칼라 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="93682ae3c3282bf6c5c638c6238126189c8d6d76" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;x&lt;/code&gt;. The probability that each element of &lt;code&gt;x&lt;/code&gt; is discarded.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 와 동일한 유형을 가진 스칼라 &lt;code&gt;Tensor&lt;/code&gt; . &lt;code&gt;x&lt;/code&gt; 의 각 요소 가 버릴 확률입니다 .</target>
        </trans-unit>
        <trans-unit id="2ed61d8d1a4cd3b10ed81f2315a153c4a029480a" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;Tensor&lt;/code&gt; with the same type as x. The probability that each element is dropped. For example, setting rate=0.1 would drop 10% of input elements.</source>
          <target state="translated">x와 유형이 같은 스칼라 &lt;code&gt;Tensor&lt;/code&gt; . 각 요소가 삭제 될 확률입니다. 예를 들어 rate = 0.1로 설정하면 입력 요소의 10 %가 떨어집니다.</target>
        </trans-unit>
        <trans-unit id="dbcb58340df198a6928719fc4985eb20f838f144" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;float32&lt;/code&gt; or &lt;code&gt;float64&lt;/code&gt; Tensor or a Python number. Minimum learning rate value as a fraction of initial_learning_rate.</source>
          <target state="translated">스칼라 &lt;code&gt;float32&lt;/code&gt; 또는 &lt;code&gt;float64&lt;/code&gt; Tensor 또는 Python 숫자. initial_learning_rate에 대한 최소 학습률 값입니다.</target>
        </trans-unit>
        <trans-unit id="f5b7f2afdc7cf60d5ed0c19833b98ede886809fb" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;float32&lt;/code&gt; or &lt;code&gt;float64&lt;/code&gt; Tensor or a Python number. Minimum learning rate value as a fraction of learning_rate.</source>
          <target state="translated">스칼라 &lt;code&gt;float32&lt;/code&gt; 또는 &lt;code&gt;float64&lt;/code&gt; Tensor 또는 Python 숫자. learning_rate에 대한 최소 학습률 값입니다.</target>
        </trans-unit>
        <trans-unit id="92c7f547c53a999f30dcf2c7879c71fd6c34b7e0" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;float32&lt;/code&gt; or &lt;code&gt;float64&lt;/code&gt; Tensor or a Python number. Minimum learning rate value as a fraction of the initial_learning_rate.</source>
          <target state="translated">스칼라 &lt;code&gt;float32&lt;/code&gt; 또는 &lt;code&gt;float64&lt;/code&gt; Tensor 또는 Python 숫자. initial_learning_rate의 비율로 표시되는 최소 학습률 값입니다.</target>
        </trans-unit>
        <trans-unit id="b57f06351280de1302c066fc3617ccf841069e25" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;float32&lt;/code&gt; or &lt;code&gt;float64&lt;/code&gt; Tensor or a Python number. Minimum learning rate value as a fraction of the learning_rate.</source>
          <target state="translated">스칼라 &lt;code&gt;float32&lt;/code&gt; 또는 &lt;code&gt;float64&lt;/code&gt; Tensor 또는 Python 숫자. learning_rate에 대한 최소 학습률 값입니다.</target>
        </trans-unit>
        <trans-unit id="c60f46ea177622b9abc1f0156dca197d2a527618" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;float32&lt;/code&gt; or &lt;code&gt;float64&lt;/code&gt; Tensor or a Python number. The initial learning rate.</source>
          <target state="translated">스칼라 &lt;code&gt;float32&lt;/code&gt; 또는 &lt;code&gt;float64&lt;/code&gt; Tensor 또는 Python 숫자. 초기 학습률입니다.</target>
        </trans-unit>
        <trans-unit id="3969f8de6ec3ea3a0d5cddfdb2ae7266619b03df" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;float32&lt;/code&gt; or &lt;code&gt;float64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; or a Python number. The decay rate.</source>
          <target state="translated">스칼라 &lt;code&gt;float32&lt;/code&gt; 또는 &lt;code&gt;float64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 또는 Python 숫자. 붕괴율.</target>
        </trans-unit>
        <trans-unit id="bdf0b050840888fe29b4c80c1ab0d7a7911c0de9" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;float32&lt;/code&gt; or &lt;code&gt;float64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; or a Python number. The initial learning rate.</source>
          <target state="translated">스칼라 &lt;code&gt;float32&lt;/code&gt; 또는 &lt;code&gt;float64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 또는 Python 숫자. 초기 학습률입니다.</target>
        </trans-unit>
        <trans-unit id="3c26308549e9f304de1adf40cc5c647e21db9f41" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;float32&lt;/code&gt; or &lt;code&gt;float64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; or a Python number. The minimal end learning rate.</source>
          <target state="translated">스칼라 &lt;code&gt;float32&lt;/code&gt; 또는 &lt;code&gt;float64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 또는 Python 숫자. 최소 최종 학습률입니다.</target>
        </trans-unit>
        <trans-unit id="3f7e153a1da3d11fd48e1d648413314b6452b7de" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;float32&lt;/code&gt; or &lt;code&gt;float64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; or a Python number. The power of the polynomial. Defaults to linear, 1.0.</source>
          <target state="translated">스칼라 &lt;code&gt;float32&lt;/code&gt; 또는 &lt;code&gt;float64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 또는 Python 숫자. 다항식의 힘. 기본값은 선형, 1.0입니다.</target>
        </trans-unit>
        <trans-unit id="b497cbdbea4846690844c3cc5bf01a42110643d9" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;float32&lt;/code&gt; or &lt;code&gt;float64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; or a Python number. Used to derive the initial learning rate of the i-th period:</source>
          <target state="translated">스칼라 &lt;code&gt;float32&lt;/code&gt; 또는 &lt;code&gt;float64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 또는 Python 숫자. i 번째 기간의 초기 학습률을 도출하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c7f7ce63b26d1c6cebadfbac882e72b8c9803e12" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;float32&lt;/code&gt; or &lt;code&gt;float64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; or a Python number. Used to derive the number of iterations in the i-th period</source>
          <target state="translated">스칼라 &lt;code&gt;float32&lt;/code&gt; 또는 &lt;code&gt;float64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 또는 Python 숫자. i 번째 기간의 반복 횟수를 유도하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e852ba2ac5b05c26e49345190e8a431ce89109a0" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; or a Python number. Global step to use for the decay computation.</source>
          <target state="translated">스칼라 &lt;code&gt;int32&lt;/code&gt; 또는 &lt;code&gt;int64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 또는 Python 숫자. 감쇠 계산에 사용할 전역 단계입니다.</target>
        </trans-unit>
        <trans-unit id="2e1a16fa8ba0f6190c96d338cc2f75c324ad375b" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; or a Python number. Global step to use for the decay computation. Must not be negative.</source>
          <target state="translated">스칼라 &lt;code&gt;int32&lt;/code&gt; 또는 &lt;code&gt;int64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 또는 Python 숫자. 감쇠 계산에 사용할 전역 단계입니다. 음수가 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="e8ccbabccfbf96b5a86ceb9d6d99ff06e921ec69" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; or a Python number. Must be positive. See the decay computation above.</source>
          <target state="translated">스칼라 &lt;code&gt;int32&lt;/code&gt; 또는 &lt;code&gt;int64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 또는 Python 숫자. 긍정적이어야합니다. 위의 붕괴 계산을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="720e1145e4c49bc2119a170ac3dcc01e1e3642b8" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; or a Python number. Number of steps to decay over.</source>
          <target state="translated">스칼라 &lt;code&gt;int32&lt;/code&gt; 또는 &lt;code&gt;int64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; 또는 Python 숫자. 붕괴 할 단계 수입니다.</target>
        </trans-unit>
        <trans-unit id="9e20542a108f3ad9213feba869d06cc3c40a9584" translate="yes" xml:space="preserve">
          <source>A scalar &lt;code&gt;int64&lt;/code&gt; Tensor (or Python int) containing the new size of the last dimension, &lt;code&gt;all(0 &amp;lt;= sp_ids.values &amp;lt; vocab_size)&lt;/code&gt;. Or a list thereof with &lt;code&gt;all(0 &amp;lt;= sp_ids[i].values &amp;lt; vocab_size[i])&lt;/code&gt; for all &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">마지막 차원의 새 크기 &lt;code&gt;all(0 &amp;lt;= sp_ids.values &amp;lt; vocab_size)&lt;/code&gt; 포함 하는 스칼라 &lt;code&gt;int64&lt;/code&gt; Tensor (또는 Python int ) . 또는 이들의리스트와 &lt;code&gt;all(0 &amp;lt;= sp_ids[i].values &amp;lt; vocab_size[i])&lt;/code&gt; 모두 &lt;code&gt;i&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b3854c9428145454021ee7ae0c8151094825755f" translate="yes" xml:space="preserve">
          <source>A scalar boolean tensor indicating if 'contents' may be a JPEG image. is_jpeg is susceptible to false positives.</source>
          <target state="translated">'콘텐츠'가 JPEG 이미지인지 여부를 나타내는 스칼라 부울 텐서. is_jpeg는 오 탐지에 취약합니다.</target>
        </trans-unit>
        <trans-unit id="ebc48ef59921384ed53685b6004a2e7ac8071833" translate="yes" xml:space="preserve">
          <source>A scalar defining the depth of the one hot dimension.</source>
          <target state="translated">핫 차원의 깊이를 정의하는 스칼라입니다.</target>
        </trans-unit>
        <trans-unit id="6eca76bb038fcbc23037c7c79e34a8ef83dc6cf5" translate="yes" xml:space="preserve">
          <source>A scalar defining the value to fill in output when &lt;code&gt;indices[j] != i&lt;/code&gt;. (default: 0)</source>
          <target state="translated">&lt;code&gt;indices[j] != i&lt;/code&gt; 때 출력을 채울 값을 정의하는 스칼라 입니다. (기본값 : 0)</target>
        </trans-unit>
        <trans-unit id="1579c8e762fcab2823ea3f3fa14cb5b5eee67cd7" translate="yes" xml:space="preserve">
          <source>A scalar defining the value to fill in output when &lt;code&gt;indices[j] = i&lt;/code&gt;. (default: 1)</source>
          <target state="translated">&lt;code&gt;indices[j] = i&lt;/code&gt; 때 출력을 채울 값을 정의하는 스칼라 입니다. (기본값 : 1)</target>
        </trans-unit>
        <trans-unit id="7d0f1c21470d8d6767b7bbe3062209c25f89a3fe" translate="yes" xml:space="preserve">
          <source>A scalar determining whether to return the result of &lt;code&gt;true_fn&lt;/code&gt; or &lt;code&gt;false_fn&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true_fn&lt;/code&gt; 또는 &lt;code&gt;false_fn&lt;/code&gt; 의 결과를 반환할지 여부를 결정하는 스칼라 입니다.</target>
        </trans-unit>
        <trans-unit id="e6cefc2593d3111b88defa9212a6b6e58ccdd0b0" translate="yes" xml:space="preserve">
          <source>A scalar float representing the Soft NMS sigma parameter; See Bodla et al, &lt;a href=&quot;https://arxiv.org/abs/1704.04503&quot;&gt;https://arxiv.org/abs/1704.04503&lt;/a&gt;). When &lt;code&gt;soft_nms_sigma=0.0&lt;/code&gt; (which is default), we fall back to standard (hard) NMS.</source>
          <target state="translated">Soft NMS 시그마 매개 변수를 나타내는 스칼라 float입니다. Bodla et al, &lt;a href=&quot;https://arxiv.org/abs/1704.04503&quot;&gt;https://arxiv.org/abs/1704.04503 참조&lt;/a&gt; ). 때 &lt;code&gt;soft_nms_sigma=0.0&lt;/code&gt; (기본값 인), 우리는 다시 표준 (하드) NMS에 떨어진다.</target>
        </trans-unit>
        <trans-unit id="119f0257840a23bf7f505b4105ae504746b368c0" translate="yes" xml:space="preserve">
          <source>A scalar int64 Tensor (or Python int) containing the new size of the last dimension, &lt;code&gt;all(0 &amp;lt;= sp_input.values &amp;lt; vocab_size)&lt;/code&gt;.</source>
          <target state="translated">마지막 차원의 새 크기 &lt;code&gt;all(0 &amp;lt;= sp_input.values &amp;lt; vocab_size)&lt;/code&gt; 포함하는 스칼라 int64 Tensor (또는 Python int ) .</target>
        </trans-unit>
        <trans-unit id="76d34acab0305eb8b71ddee9f493160ad654f8ab" translate="yes" xml:space="preserve">
          <source>A scalar integer &lt;code&gt;Tensor&lt;/code&gt; indicating the axis to frame. Defaults to the last axis. Supports negative values for indexing from the end.</source>
          <target state="translated">프레임 할 축을 나타내는 스칼라 정수 &lt;code&gt;Tensor&lt;/code&gt; 입니다. 기본값은 마지막 축입니다. 끝부터 인덱싱 할 때 음수 값을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="709178ee138b78e4ff56b887e1a5ef2b822f0109" translate="yes" xml:space="preserve">
          <source>A scalar integer &lt;code&gt;Tensor&lt;/code&gt; representing the maximum number of boxes to be selected by non-max suppression per class</source>
          <target state="translated">클래스 당 비 최대 억제에 의해 선택 될 최대 상자 수를 나타내는 스칼라 정수 &lt;code&gt;Tensor&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7720daa3dad3a89e44053b2a37f3f441af5185e6" translate="yes" xml:space="preserve">
          <source>A scalar integer &lt;code&gt;Tensor&lt;/code&gt; representing the maximum number of boxes to be selected by non-max suppression.</source>
          <target state="translated">비 최대 억제에 의해 선택 될 최대 상자 수를 나타내는 정수 스칼라 &lt;code&gt;Tensor&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e60218ff433d39903fb95394f8e791d7d46e6f6a" translate="yes" xml:space="preserve">
          <source>A scalar integer indicating the number of segments. Defaults to &lt;code&gt;max(segment_ids) + 1&lt;/code&gt; (or zero if &lt;code&gt;segment_ids&lt;/code&gt; is empty).</source>
          <target state="translated">세그먼트 수를 나타내는 정수 스칼라. 기본값은 &lt;code&gt;max(segment_ids) + 1&lt;/code&gt; (또는 &lt;code&gt;segment_ids&lt;/code&gt; 가 비어있는 경우 0 )입니다.</target>
        </trans-unit>
        <trans-unit id="b1a6123ef13f6a8e3c8e6453467b8fb2a0ae40de" translate="yes" xml:space="preserve">
          <source>A scalar integer tensor. Must be nonnegative. The size of the outer axis of &lt;code&gt;values&lt;/code&gt; must be evenly divisible by &lt;code&gt;uniform_row_length&lt;/code&gt;.</source>
          <target state="translated">스칼라 정수 텐서. 음수가 아니어야합니다. &lt;code&gt;values&lt;/code&gt; 의 바깥 쪽 축 크기는 &lt;code&gt;uniform_row_length&lt;/code&gt; 로 균등하게 나눌 수 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="1bd819e3a20db409d8dd7cb46c602b974dd08d7a" translate="yes" xml:space="preserve">
          <source>A scalar integer. The number of times the image is rotated by 90 degrees.</source>
          <target state="translated">스칼라 정수. 이미지가 90도 회전 된 횟수입니다.</target>
        </trans-unit>
        <trans-unit id="b239f964cfd5d72754ede003ae3213bb957cdb79" translate="yes" xml:space="preserve">
          <source>A scalar or a scalar &lt;code&gt;Tensor&lt;/code&gt;. Defaults to 0.0.</source>
          <target state="translated">스칼라 또는 스칼라 &lt;code&gt;Tensor&lt;/code&gt; . 기본값은 0.0입니다.</target>
        </trans-unit>
        <trans-unit id="22468fbbb0abb3836b894abf85203ebb6e35ce09" translate="yes" xml:space="preserve">
          <source>A scalar or tensor. Non-negative real number.</source>
          <target state="translated">스칼라 또는 텐서. 음이 아닌 실수.</target>
        </trans-unit>
        <trans-unit id="06a6719d1e78e460b06064b0e5477bff6e108a9b" translate="yes" xml:space="preserve">
          <source>A scalar or tensor. The constant multiplier.</source>
          <target state="translated">스칼라 또는 텐서. 상수 승수입니다.</target>
        </trans-unit>
        <trans-unit id="bc51cd5bbb0c71373db9d890115a6bf4cd0ec5f2" translate="yes" xml:space="preserve">
          <source>A scalar regularization loss.</source>
          <target state="translated">스칼라 정규화 손실</target>
        </trans-unit>
        <trans-unit id="212aa394b778898da465fd264ae1bb9a22d40126" translate="yes" xml:space="preserve">
          <source>A scalar representing the maximum number of boxes retained over all classes.</source>
          <target state="translated">모든 클래스에서 유지되는 최대 상자 수를 나타내는 스칼라입니다.</target>
        </trans-unit>
        <trans-unit id="15cc344ed1228240ff3e453fe5a8f79236045a64" translate="yes" xml:space="preserve">
          <source>A scalar string &lt;a href=&quot;../../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; that summarizes the aggregated statistics.</source>
          <target state="translated">집계 된 통계를 요약 하는 스칼라 문자열 &lt;a href=&quot;../../../../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc09d34c4154ba000bc19491fd9009ccad167089" translate="yes" xml:space="preserve">
          <source>A scalar string Tensor, a single serialized Example.</source>
          <target state="translated">직렬화 된 단일 예제 인 스칼라 문자열 Tensor.</target>
        </trans-unit>
        <trans-unit id="1b0beca6a15807a7acb5193fc151f10cd1802966" translate="yes" xml:space="preserve">
          <source>A scalar string tensor representing a unique handle for &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; 대한 고유 한 핸들을 나타내는 스칼라 문자열 텐서 입니다.</target>
        </trans-unit>
        <trans-unit id="879cb3f4c5db3357983cd336caa2b171fd4521e5" translate="yes" xml:space="preserve">
          <source>A scalar tensor containing the number of elements in this queue.</source>
          <target state="translated">이 큐의 요소 수를 포함하는 스칼라 텐서.</target>
        </trans-unit>
        <trans-unit id="695863e017e0148f300ab97b2cc033f008c96017" translate="yes" xml:space="preserve">
          <source>A scalar tensor containing the number of elements in this table.</source>
          <target state="translated">이 테이블의 요소 수를 포함하는 스칼라 텐서.</target>
        </trans-unit>
        <trans-unit id="fc398a64606dfa7d31cb4a1e8dbb91f4b938f676" translate="yes" xml:space="preserve">
          <source>A scalar tensor.</source>
          <target state="translated">스칼라 텐서.</target>
        </trans-unit>
        <trans-unit id="8a0c988750167d2f92199684d7a4157c4d5e248e" translate="yes" xml:space="preserve">
          <source>A scalar threshold.</source>
          <target state="translated">스칼라 임계 값입니다.</target>
        </trans-unit>
        <trans-unit id="7855512e0b49d6a3e254b47e5155e241fbe9f7ab" translate="yes" xml:space="preserve">
          <source>A scalar value in range &lt;code&gt;[0, 1]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[0, 1]&lt;/code&gt; 범위의 스칼라 값입니다 .</target>
        </trans-unit>
        <trans-unit id="8a03dc5c7da1219427c08acf26fedc368e7c3f5d" translate="yes" xml:space="preserve">
          <source>A scalar which is the 'key' part of the state, if the RNG algorithm is counter-based; otherwise it raises a ValueError.</source>
          <target state="translated">RNG 알고리즘이 카운터 기반 인 경우 상태의 '핵심'부분 인 스칼라. 그렇지 않으면 ValueError가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="db33c799610172563020f0a895148d4787e9069d" translate="yes" xml:space="preserve">
          <source>A scalar, slope of negative section (default=&lt;code&gt;0.&lt;/code&gt;).</source>
          <target state="translated">음수 섹션의 스칼라 기울기 (기본값 = &lt;code&gt;0.&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="08679988a9aca544f04f466dd53b86618c2fbc63" translate="yes" xml:space="preserve">
          <source>A scalar, slope of negative section.</source>
          <target state="translated">음의 단면의 스칼라 기울기입니다.</target>
        </trans-unit>
        <trans-unit id="9048e86598230927164ad2e372240f525ef23ac7" translate="yes" xml:space="preserve">
          <source>A scalar, slope of negative section. &lt;code&gt;alpha&lt;/code&gt; controls the value to which an ELU saturates for negative net inputs.</source>
          <target state="translated">음의 단면의 스칼라 기울기입니다. &lt;code&gt;alpha&lt;/code&gt; 는 음의 순 입력에 대해 ELU가 포화되는 값을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="c9bd6f6888d54437a0aa066c18c0b6290830cf9f" translate="yes" xml:space="preserve">
          <source>A scalar. Amount to add to the pixel values.</source>
          <target state="translated">스칼라. 픽셀 값에 추가 할 양입니다.</target>
        </trans-unit>
        <trans-unit id="b971284985e1fd27216acb3e85f266c78bf2bf1e" translate="yes" xml:space="preserve">
          <source>A scale &lt;code&gt;Tensor&lt;/code&gt;, often denoted \(\gamma\) in equations, or &lt;code&gt;None&lt;/code&gt;. If present, the scale is applied to the normalized tensor.</source>
          <target state="translated">척도 &lt;code&gt;Tensor&lt;/code&gt; , 방정식에서 종종 \ (\ gamma \) 또는 &lt;code&gt;None&lt;/code&gt; 으로 표시 됩니다. 존재하는 경우 스케일이 정규화 된 텐서에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="e08ebe1487e7d7147de29e9e6fe9e985bff7c1c3" translate="yes" xml:space="preserve">
          <source>A scope in which the creator is active</source>
          <target state="translated">제작자가 활성화 된 범위</target>
        </trans-unit>
        <trans-unit id="77a030bab91e42e31379eb1822105c990bea4833" translate="yes" xml:space="preserve">
          <source>A scope previously captured from a &lt;code&gt;with g.name_scope(...) as scope:&lt;/code&gt; statement will be treated as an &quot;absolute&quot; name scope, which makes it possible to re-enter existing scopes.</source>
          <target state="translated">&lt;code&gt;with g.name_scope(...) as scope:&lt;/code&gt; 문 으로 사용 하여 이전에 캡처 한 범위 는 &quot;절대&quot;이름 범위로 취급되므로 기존 범위를 다시 입력 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c2091507e2bd3a9d1e1786e1197586c2da1ef2d" translate="yes" xml:space="preserve">
          <source>A scope that can be captured and reused.</source>
          <target state="translated">캡처하여 재사용 할 수있는 범위입니다.</target>
        </trans-unit>
        <trans-unit id="e5e67afc394c97187e0bebdd9f384ca0eefd6709" translate="yes" xml:space="preserve">
          <source>A second process could wait for the model to be ready by doing the following:</source>
          <target state="translated">두 번째 프로세스는 다음을 수행하여 모델이 준비 될 때까지 기다릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="530bf647e684a731c37a5a3007d1c2d0eeeabc45" translate="yes" xml:space="preserve">
          <source>A seed is a 1024-bit unsigned integer represented either as a Python integer or a vector of integers. Seeds shorter than 1024-bit will be padded. The padding, the internal structure of a seed and the way a seed is converted to a state are all opaque (unspecified). The only semantics specification of seeds is that two different seeds are likely to produce two independent generators (but no guarantee).</source>
          <target state="translated">시드는 Python 정수 또는 정수 벡터로 표시되는 1024 비트 부호없는 정수입니다. 1024 비트보다 짧은 시드가 채워집니다. 패딩, 시드의 내부 구조 및 시드가 상태로 변환되는 방식은 모두 불투명합니다 (지정되지 않음). 씨앗의 의미 론적 사양은 두 개의 다른 씨앗이 두 개의 독립적 인 생성기를 생성 할 가능성이 있다는 것입니다 (그러나 보장 할 수는 없습니다).</target>
        </trans-unit>
        <trans-unit id="cf4e210721534ef1423c49023e20dd36738258c0" translate="yes" xml:space="preserve">
          <source>A sequence containing elements we are expecting.</source>
          <target state="translated">우리가 기대하는 요소를 포함하는 시퀀스.</target>
        </trans-unit>
        <trans-unit id="a52c88b605a6993135f49142d9f4499dd74df60e" translate="yes" xml:space="preserve">
          <source>A sequence expected at the beginning of the whole parameter.</source>
          <target state="translated">전체 매개 변수의 시작 부분에 예상되는 시퀀스입니다.</target>
        </trans-unit>
        <trans-unit id="2d1ff0497aa3aeeee9262a095dd0628b3c858b59" translate="yes" xml:space="preserve">
          <source>A sequence of (value, destinations) pairs. See &lt;code&gt;reduce_to()&lt;/code&gt; for a description.</source>
          <target state="translated">(값, 대상) 쌍의 시퀀스입니다. 설명은 &lt;code&gt;reduce_to()&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6ae648cfee02424d887ea4585218f3d5e0db02a8" translate="yes" xml:space="preserve">
          <source>A sequence of 4 positive integers, or &lt;code&gt;None&lt;/code&gt;. If not &lt;code&gt;None&lt;/code&gt;, the shape of the TPU topology, in number of cores. Ignored if &lt;code&gt;serialized&lt;/code&gt; is not &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">4 개의 양의 정수 시퀀스 또는 &lt;code&gt;None&lt;/code&gt; . &lt;code&gt;None&lt;/code&gt; 이 아니라면 TPU 토폴로지의 형태 (코어 수)입니다. &lt;code&gt;serialized&lt;/code&gt; 가 &lt;code&gt;None&lt;/code&gt; 이 아니면 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="09a8fedfc1da0e2e67f7e6c72cba7be8b4084e0e" translate="yes" xml:space="preserve">
          <source>A sequence of &lt;code&gt;num&lt;/code&gt; evenly-spaced values are generated beginning at &lt;code&gt;start&lt;/code&gt; along a given &lt;code&gt;axis&lt;/code&gt;. If &lt;code&gt;num &amp;gt; 1&lt;/code&gt;, the values in the sequence increase by &lt;code&gt;stop - start / num - 1&lt;/code&gt;, so that the last one is exactly &lt;code&gt;stop&lt;/code&gt;. If &lt;code&gt;num &amp;lt;= 0&lt;/code&gt;, &lt;code&gt;ValueError&lt;/code&gt; is raised.</source>
          <target state="translated">의 순서 &lt;code&gt;num&lt;/code&gt; 같은 간격 값에서 시작하여 생성 된 &lt;code&gt;start&lt;/code&gt; 소정 따라 &lt;code&gt;axis&lt;/code&gt; . 경우 &lt;code&gt;num &amp;gt; 1&lt;/code&gt; 에 의해 시퀀스 증가 값 &lt;code&gt;stop - start / num - 1&lt;/code&gt; 그래서 마지막 정확하게 것을, &lt;code&gt;stop&lt;/code&gt; . 경우 &lt;code&gt;num &amp;lt;= 0&lt;/code&gt; , &lt;code&gt;ValueError&lt;/code&gt; 를가 상승한다.</target>
        </trans-unit>
        <trans-unit id="bf98cd264922542a4ef025914d24e10fe6bc8364" translate="yes" xml:space="preserve">
          <source>A sequence of &lt;code&gt;num&lt;/code&gt; evenly-spaced values are generated beginning at &lt;code&gt;start&lt;/code&gt;. If &lt;code&gt;num &amp;gt; 1&lt;/code&gt;, the values in the sequence increase by &lt;code&gt;stop - start / num - 1&lt;/code&gt;, so that the last one is exactly &lt;code&gt;stop&lt;/code&gt;.</source>
          <target state="translated">균등 간격 의 &lt;code&gt;num&lt;/code&gt; 값 시퀀스가 시작시 &lt;code&gt;start&lt;/code&gt; 됩니다. 경우 &lt;code&gt;num &amp;gt; 1&lt;/code&gt; 에 의해 시퀀스 증가 값 &lt;code&gt;stop - start / num - 1&lt;/code&gt; 그래서 마지막 정확하게 것을, &lt;code&gt;stop&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="08e30c7ca33fe38ea153b1e3e49998f6893c5ae0" translate="yes" xml:space="preserve">
          <source>A sequence of FrameSummary objects (filename, lineno, name, line) corresponding to the call stack of the current thread.</source>
          <target state="translated">현재 스레드의 호출 스택에 해당하는 일련의 FrameSummary 객체 (파일 이름, lineno, 이름, line)입니다.</target>
        </trans-unit>
        <trans-unit id="b61bbcedff18821028938512ef5b7d99a8e19509" translate="yes" xml:space="preserve">
          <source>A sequence of all submodules.</source>
          <target state="translated">모든 서브 모듈의 순서.</target>
        </trans-unit>
        <trans-unit id="36263a5739432d1f2b055e1be78646379f2eb349" translate="yes" xml:space="preserve">
          <source>A sequence of categorical terms where ids are set by hashing.</source>
          <target state="translated">ID가 해싱으로 설정되는 일련의 범주 형 용어입니다.</target>
        </trans-unit>
        <trans-unit id="2bff9a296c5a7877bd3d4dbd5ac5d0502f3d07fa" translate="yes" xml:space="preserve">
          <source>A sequence of categorical terms where ids use a vocabulary file.</source>
          <target state="translated">id가 어휘 파일을 사용하는 일련의 범주 용어.</target>
        </trans-unit>
        <trans-unit id="dd0ab871771f18b8d363bcfbab500833905c84e5" translate="yes" xml:space="preserve">
          <source>A sequence of categorical terms where ids use an in-memory list.</source>
          <target state="translated">ID가 메모리 내 목록을 사용하는 일련의 범주 형 용어입니다.</target>
        </trans-unit>
        <trans-unit id="f7ab15892a7e9179658e56b1d25b0b66b935b0ae" translate="yes" xml:space="preserve">
          <source>A sequence of devices for non-slot variables.</source>
          <target state="translated">비 슬롯 변수에 대한 일련의 장치.</target>
        </trans-unit>
        <trans-unit id="67e94409e0a0352ce5c92fdd70a94c25b6ac7714" translate="yes" xml:space="preserve">
          <source>A sequence of variables for the current module (sorted by attribute name) followed by variables from all submodules recursively (breadth first).</source>
          <target state="translated">현재 모듈에 대한 일련의 변수 (속성 이름별로 정렬)와 모든 하위 모듈의 변수가 반복적으로 나타납니다 (먼저 우선).</target>
        </trans-unit>
        <trans-unit id="c4a666998ce954cb080a2ab6eb46441fc51766b3" translate="yes" xml:space="preserve">
          <source>A serializable learning rate decay schedule.</source>
          <target state="translated">직렬화 가능한 학습 속도 소멸 일정.</target>
        </trans-unit>
        <trans-unit id="edcc0e956e51b550a54da482e8492caaf9df6b58" translate="yes" xml:space="preserve">
          <source>A serializable version of the underlying TensorFlow graph.</source>
          <target state="translated">기본 TensorFlow 그래프의 직렬화 가능한 버전입니다.</target>
        </trans-unit>
        <trans-unit id="1dc2bff64c58fcfff8d3aaf720da1715fa0097c7" translate="yes" xml:space="preserve">
          <source>A serialized &lt;code&gt;TopologyProto&lt;/code&gt; that describes the TPU system. Note: the topology must be evaluated using &lt;code&gt;Session.run&lt;/code&gt; before it can be used.</source>
          <target state="translated">TPU 시스템을 설명 하는 직렬화 된 &lt;code&gt;TopologyProto&lt;/code&gt; 프로토콜입니다. 참고 : 토폴로지를 사용하려면 &lt;code&gt;Session.run&lt;/code&gt; 을 사용하여 토폴로지를 평가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8d3184b9de5a593488fe0ce249fded63b9214c17" translate="yes" xml:space="preserve">
          <source>A serialized &lt;code&gt;TopologyProto&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt;. If not &lt;code&gt;None&lt;/code&gt;, the serialized proto is parsed to discover the topology.</source>
          <target state="translated">직렬화 된 &lt;code&gt;TopologyProto&lt;/code&gt; 또는 &lt;code&gt;None&lt;/code&gt; . &lt;code&gt;None&lt;/code&gt; 이 아니라면 직렬화 된 proto는 토폴로지를 찾기 위해 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="4389f26dc0e95b4e35aaec3fdbc152855ba437ee" translate="yes" xml:space="preserve">
          <source>A serving_input_receiver_fn suitable for use in serving.</source>
          <target state="translated">서빙에 사용하기에 적합한 serving_input_receiver_fn.</target>
        </trans-unit>
        <trans-unit id="29d6797cc20e6af50f6a7861d112f89dcb98a910" translate="yes" xml:space="preserve">
          <source>A serving_input_receiver_fn.</source>
          <target state="translated">serving_input_receiver_fn.</target>
        </trans-unit>
        <trans-unit id="5799c08f4a79e43e1781fa23dddbebcebeabf8bc" translate="yes" xml:space="preserve">
          <source>A session may own resources, such as &lt;a href=&quot;../../variable&quot;&gt;&lt;code&gt;tf.Variable&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../queue/queuebase&quot;&gt;&lt;code&gt;tf.queue.QueueBase&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;readerbase&quot;&gt;&lt;code&gt;tf.compat.v1.ReaderBase&lt;/code&gt;&lt;/a&gt;. It is important to release these resources when they are no longer required. To do this, either invoke the &lt;code&gt;tf.Session.close&lt;/code&gt; method on the session, or use the session as a context manager. The following two examples are equivalent:</source>
          <target state="translated">세션은 &lt;a href=&quot;../../variable&quot;&gt; &lt;code&gt;tf.Variable&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../queue/queuebase&quot;&gt; &lt;code&gt;tf.queue.QueueBase&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;readerbase&quot;&gt; &lt;code&gt;tf.compat.v1.ReaderBase&lt;/code&gt; &lt;/a&gt; 와 같은 리소스를 소유 할 수 있습니다. . 더 이상 필요하지 않은 자원을 해제하는 것이 중요합니다. 이를 수행하려면 세션 에서 &lt;code&gt;tf.Session.close&lt;/code&gt; 메소드를 호출 하거나 세션을 컨텍스트 관리자로 사용하십시오. 다음 두 가지 예는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="4c8ea517060eb91d3e13360df1f63aa4749ad9f2" translate="yes" xml:space="preserve">
          <source>A set-specific equality assertion.</source>
          <target state="translated">세트 고유의 등식 주장.</target>
        </trans-unit>
        <trans-unit id="afe5170f49e89d748b6d396263a22e67edc84e34" translate="yes" xml:space="preserve">
          <source>A shape [2] Tensor, the seed to the random number generator. Must have dtype &lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt;. (When using XLA, only &lt;code&gt;int32&lt;/code&gt; is allowed.)</source>
          <target state="translated">난수 생성기의 시드 인 모양 [2] Tensor. dtype &lt;code&gt;int32&lt;/code&gt; 또는 &lt;code&gt;int64&lt;/code&gt; 가 있어야합니다 . (XLA를 사용하는 경우 &lt;code&gt;int32&lt;/code&gt; 만 허용됩니다.)</target>
        </trans-unit>
        <trans-unit id="33972e3727aa49e353e2d7d9080c4890641d10ed" translate="yes" xml:space="preserve">
          <source>A shape that is at least as specific as &lt;code&gt;self&lt;/code&gt; with at least the given rank.</source>
          <target state="translated">적어도 주어진 등급 으로 &lt;code&gt;self&lt;/code&gt; 만큼이나 특정한 모양 .</target>
        </trans-unit>
        <trans-unit id="78e418e01992a19bc52f9ad56bdda309faaef890" translate="yes" xml:space="preserve">
          <source>A shape that is at least as specific as &lt;code&gt;self&lt;/code&gt; with at most the given rank.</source>
          <target state="translated">주어진 등급을 가진 &lt;code&gt;self&lt;/code&gt; 만큼이나 특정한 모양 .</target>
        </trans-unit>
        <trans-unit id="21a6c1b024bb4e7e914b2c1719fef6303f9383bf" translate="yes" xml:space="preserve">
          <source>A shape that is at least as specific as &lt;code&gt;self&lt;/code&gt; with the given rank.</source>
          <target state="translated">주어진 등급 으로 &lt;code&gt;self&lt;/code&gt; 만큼이나 특정한 모양 .</target>
        </trans-unit>
        <trans-unit id="8de56db3d615bdbfef8d08c98f2398740bca45a4" translate="yes" xml:space="preserve">
          <source>A shape tuple (integers), not including the batch size. For instance, &lt;code&gt;shape=(32,)&lt;/code&gt; indicates that the expected input will be batches of 32-dimensional vectors. Elements of this tuple can be None; 'None' elements represent dimensions where the shape is not known.</source>
          <target state="translated">배치 크기를 포함하지 않는 모양 튜플 (정수). 예를 들어 &lt;code&gt;shape=(32,)&lt;/code&gt; 는 예상 입력이 32 차원 벡터의 배치임을 나타냅니다. 이 튜플의 요소는 None이 될 수 있습니다. '없음'요소는 모양이 알려지지 않은 치수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="6522390f4e555a3ae203a9334e3e195ba8a08bc3" translate="yes" xml:space="preserve">
          <source>A shape tuple (or list of shape tuples if the layer has multiple inputs).</source>
          <target state="translated">모양 튜플 (또는 레이어에 여러 입력이있는 경우 모양 튜플 목록)</target>
        </trans-unit>
        <trans-unit id="22da322ba04c926f1be77ca3c8446e0c7933bbc2" translate="yes" xml:space="preserve">
          <source>A shape tuple (or list of shape tuples if the layer has multiple outputs).</source>
          <target state="translated">모양 튜플 (또는 레이어에 여러 출력이있는 경우 모양 튜플 목록)</target>
        </trans-unit>
        <trans-unit id="e518471e71e3dc7e3061defa15caa4314c01aa77" translate="yes" xml:space="preserve">
          <source>A short description of a test method.</source>
          <target state="translated">테스트 방법에 대한 간단한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="81490131ec59f1e3576009d94a772d780f67a6e6" translate="yes" xml:space="preserve">
          <source>A shuffling queue into which tensors from &lt;code&gt;tensors&lt;/code&gt; are enqueued.</source>
          <target state="translated">텐서의 &lt;code&gt;tensors&lt;/code&gt; 가 큐에 들어가는 셔플 링 큐 입니다.</target>
        </trans-unit>
        <trans-unit id="7b69206bf1d76b9cc82d4556d6fffd018443bc94" translate="yes" xml:space="preserve">
          <source>A shuffling queue into which tensors from &lt;code&gt;tensors_list&lt;/code&gt; are enqueued.</source>
          <target state="translated">&lt;code&gt;tensors_list&lt;/code&gt; 의 텐서가 큐에 들어가는 셔플 링 큐 입니다.</target>
        </trans-unit>
        <trans-unit id="7cff53c7ab808a0e0b377c9e05e9a19928744459" translate="yes" xml:space="preserve">
          <source>A simple 2-D tensor matrix multiplication:</source>
          <target state="translated">간단한 2 차원 텐서 매트릭스 곱셈 :</target>
        </trans-unit>
        <trans-unit id="249a87e2b04c4f6eb0eae5f23a9fd524a7228f1b" translate="yes" xml:space="preserve">
          <source>A simple implementation of &lt;code&gt;dynamic_rnn&lt;/code&gt; via &lt;code&gt;raw_rnn&lt;/code&gt; looks like this:</source>
          <target state="translated">&lt;code&gt;raw_rnn&lt;/code&gt; 을 통한 &lt;code&gt;dynamic_rnn&lt;/code&gt; 의 간단한 구현은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6dc94176f153c70a1bde4fd719178348436cdc8e" translate="yes" xml:space="preserve">
          <source>A single &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt; which contains the next input for all replicas.</source>
          <target state="translated">모든 복제본에 대한 다음 입력을 포함 하는 단일 &lt;a href=&quot;../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;distributedvalues&quot;&gt; &lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="72f1373cb61431fc2dca16c19568a3dbee0cb9dd" translate="yes" xml:space="preserve">
          <source>A single &lt;code&gt;SparseTensor&lt;/code&gt; with &lt;code&gt;values&lt;/code&gt; property of type &lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt; or a Python list of such &lt;code&gt;SparseTensor&lt;/code&gt;s or a list thereof.</source>
          <target state="translated">단일 &lt;code&gt;SparseTensor&lt;/code&gt; 와 &lt;code&gt;values&lt;/code&gt; 유형의 속성 &lt;code&gt;int32&lt;/code&gt; 또는 &lt;code&gt;int64&lt;/code&gt; 또는 파이썬의리스트 &lt;code&gt;SparseTensor&lt;/code&gt; S 또는 이들의리스트.</target>
        </trans-unit>
        <trans-unit id="c336b3670eb44fe6d2abb11549e5348b1181ceef" translate="yes" xml:space="preserve">
          <source>A single &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt;, representing the feature to be passed to the model.</source>
          <target state="translated">모델에 전달할 기능을 나타내는 단일 &lt;code&gt;Tensor&lt;/code&gt; 또는 &lt;code&gt;SparseTensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="475f0c831013649a1925d6aae611468a0db25f95" translate="yes" xml:space="preserve">
          <source>A single &lt;code&gt;Tensor&lt;/code&gt;, a list of &lt;code&gt;Tensors&lt;/code&gt; or a dictionary of names to &lt;code&gt;Tensors&lt;/code&gt;.</source>
          <target state="translated">하나의 &lt;code&gt;Tensor&lt;/code&gt; 의 목록 &lt;code&gt;Tensors&lt;/code&gt; 거나 이름의 사전 &lt;code&gt;Tensors&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72e8f4ddeed8abf6fba52ad6233c7d45895bbd11" translate="yes" xml:space="preserve">
          <source>A single graph element, a list of graph elements, or a dictionary whose values are graph elements or lists of graph elements (described above).</source>
          <target state="translated">단일 그래프 요소, 그래프 요소 목록 또는 값이 그래프 요소 또는 그래프 요소 목록 (위에 설명 됨) 인 사전.</target>
        </trans-unit>
        <trans-unit id="c90ee3cc7eb548cb93148583d1434106434c7dd2" translate="yes" xml:space="preserve">
          <source>A single graph element, a list of graph elements, or a dictionary whose values are graph elements or lists of graph elements (see documentation for &lt;code&gt;run&lt;/code&gt;).</source>
          <target state="translated">단일 그래프 요소, 그래프 요소 목록 또는 값이 그래프 요소 또는 그래프 요소 목록 인 사전 ( &lt;code&gt;run&lt;/code&gt; 에 대한 문서 참조 ).</target>
        </trans-unit>
        <trans-unit id="5139cfb904108bfe43f81b9329f80abbf39c6049" translate="yes" xml:space="preserve">
          <source>A single graph element, or a list of graph elements.</source>
          <target state="translated">단일 그래프 요소 또는 그래프 요소 목록입니다.</target>
        </trans-unit>
        <trans-unit id="f5f738d53d8978a588cd825f4cb5c016742256e7" translate="yes" xml:space="preserve">
          <source>A single index. This is used to keep only elements that have a given index. For example (&lt;code&gt;foo[2, :]&lt;/code&gt; on a shape &lt;code&gt;(5,6)&lt;/code&gt; tensor produces a shape &lt;code&gt;(6,)&lt;/code&gt; tensor. This is encoded in &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; and &lt;code&gt;shrink_axis_mask&lt;/code&gt;.</source>
          <target state="translated">단일 색인. 이것은 주어진 인덱스가있는 요소 만 유지하는 데 사용됩니다. 예를 들어 ( &lt;code&gt;foo[2, :]&lt;/code&gt; on a shape &lt;code&gt;(5,6)&lt;/code&gt; tensor는 shape &lt;code&gt;(6,)&lt;/code&gt; tensor를 생성합니다 . 이것은 &lt;code&gt;begin&lt;/code&gt; 및 &lt;code&gt;end&lt;/code&gt; 및 &lt;code&gt;shrink_axis_mask&lt;/code&gt; 로 인코딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="b8ed89f14fa81f9de7b06f4d767f408cab776d00" translate="yes" xml:space="preserve">
          <source>A single integer specifying the spatial dimensions of the filters.</source>
          <target state="translated">필터의 공간 차원을 지정하는 단일 정수입니다.</target>
        </trans-unit>
        <trans-unit id="1128f0f34bb961563a53ee890aa292715e375dec" translate="yes" xml:space="preserve">
          <source>A single integer specifying the strides of the convolution. Specifying any &lt;code&gt;stride&lt;/code&gt; value != 1 is incompatible with specifying any &lt;code&gt;dilation_rate&lt;/code&gt; value != 1.</source>
          <target state="translated">컨볼 루션의 스트라이드를 지정하는 단일 정수입니다. &lt;code&gt;stride&lt;/code&gt; 지정 값을! = 1 상관 지정과 호환되지 않는 &lt;code&gt;dilation_rate&lt;/code&gt; 의 값을! 1 =.</target>
        </trans-unit>
        <trans-unit id="491fb3b45a17122bb8d9c6b8ffc07496c68ed913" translate="yes" xml:space="preserve">
          <source>A single integer, specifying the dilation rate to use for dilated convolution. Currently, specifying any &lt;code&gt;dilation_rate&lt;/code&gt; value != 1 is incompatible with specifying any stride value != 1.</source>
          <target state="translated">확장 된 회선에 사용할 확장 속도를 지정하는 단일 정수입니다. 현재, &lt;code&gt;dilation_rate&lt;/code&gt; 값! = 1을 지정하는 것은 stride 값! = 1을 지정하는 것과 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="11e09cab279969ab96f859ab8660dd443af41ff7" translate="yes" xml:space="preserve">
          <source>A single tensor or a list of tensors (depending on the passed argument) that has no gradient with respect to any other variable.</source>
          <target state="translated">다른 변수와 관련하여 기울기가없는 단일 텐서 또는 전달 된 인수에 따라 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="336586f09d46221ef564356f1e2ec5a6a9b6fc57" translate="yes" xml:space="preserve">
          <source>A single tensor representing the complete embedding tensor, or a list of P tensors all of same shape except for the first dimension, representing sharded embedding tensors. Alternatively, a &lt;code&gt;PartitionedVariable&lt;/code&gt;, created by partitioning along dimension 0. Each element must be appropriately sized for the given &lt;code&gt;partition_strategy&lt;/code&gt;.</source>
          <target state="translated">완전한 임베딩 텐서를 나타내는 단일 텐서 또는 분할 된 임베딩 텐서를 나타내는 첫 번째 차원을 제외하고 동일한 형태의 P 텐서 목록. 또는 차원 0을 따라 &lt;code&gt;PartitionedVariable&lt;/code&gt; 하여 생성 된 PartitionedVariable입니다 . 각 요소는 주어진 항목에 대해 적절한 크기 여야합니다. &lt;code&gt;partition_strategy&lt;/code&gt; 에 합니다 .</target>
        </trans-unit>
        <trans-unit id="fecb632ed9ad745c027d74725667bba96e7744c3" translate="yes" xml:space="preserve">
          <source>A single tensor representing the complete embedding tensor, or a list of tensors all of same shape except for the first dimension, representing sharded embedding tensors following &quot;div&quot; partition strategy.</source>
          <target state="translated">완전한 임베딩 텐서를 나타내는 단일 텐서 또는 &quot;div&quot;파티션 전략에 따라 분할 된 임베딩 텐서를 나타내는 첫 번째 차원을 제외하고 모두 동일한 형태의 텐서 목록입니다.</target>
        </trans-unit>
        <trans-unit id="1365669260b55187d90c1a108c0f8053fa6b9a81" translate="yes" xml:space="preserve">
          <source>A single tensor representing the complete embedding tensor, or a list tensors all of same shape except for the first dimension, representing sharded embedding tensors. Alternatively, a &lt;code&gt;PartitionedVariable&lt;/code&gt;, created by partitioning along dimension 0. Each element must be appropriately sized for the given &lt;code&gt;partition_strategy&lt;/code&gt;.</source>
          <target state="translated">완전한 임베딩 텐서를 나타내는 단일 텐서 또는 분할 된 임베딩 텐서를 나타내는 첫 번째 차원을 제외하고 모두 동일한 모양의 목록 텐서입니다. 또는 차원 0을 따라 &lt;code&gt;PartitionedVariable&lt;/code&gt; 하여 생성 된 PartitionedVariable입니다 . 각 요소는 주어진 &lt;code&gt;partition_strategy&lt;/code&gt; 에 대해 적절한 크기 여야 합니다 .</target>
        </trans-unit>
        <trans-unit id="648338940506df57a7af120bce9853e9a9fbc1c6" translate="yes" xml:space="preserve">
          <source>A single tf.function can generate many ConcreteFunctions. If a downstream tool wants to refer to all concrete functions generated by a single tf.function you can use the &lt;code&gt;function_aliases&lt;/code&gt; argument to store a map from the alias name to all concrete function names. E.g.</source>
          <target state="translated">단일 tf.function은 많은 ConcreteFunction을 생성 할 수 있습니다. 다운 스트림 도구를 사용하면 사용할 수있는 단일 tf.function에 의해 생성 된 모든 콘크리트의 기능을 참조하기를 원한다면 &lt;code&gt;function_aliases&lt;/code&gt; 을 인수를 하여 별칭 이름에서 모든 구체적인 함수 이름으로의 맵을 저장할 . 예</target>
        </trans-unit>
        <trans-unit id="32645d256ae7d71305d1f326018cccd37c921df8" translate="yes" xml:space="preserve">
          <source>A single unsigned integer or None. If passed, the hash function used will be SipHash64, with these values used as an additional input (known as a &quot;salt&quot; in cryptography). These should be non-zero. Defaults to &lt;code&gt;None&lt;/code&gt; (in that case, the FarmHash64 hash function is used). It also supports tuple/list of 2 unsigned integer numbers, see reference paper for details.</source>
          <target state="translated">부호없는 단일 정수 또는 없음. 전달 된 경우 사용되는 해시 함수는 SipHash64가되며 이러한 값은 추가 입력으로 사용됩니다 (암호화에서 &quot;솔트&quot;라고 함). 0이 아니어야합니다. 기본값은 &lt;code&gt;None&lt;/code&gt; (이 경우 FarmHash64 해시 함수가 사용됨). 또한 부호없는 정수 2 개의 튜플 / 목록을 지원합니다. 자세한 내용은 참조 문서를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="944678b60482617549f1d79746fefd73164f1570" translate="yes" xml:space="preserve">
          <source>A single value compatible with &lt;code&gt;dtype&lt;/code&gt; or an iterable of values compatible with &lt;code&gt;dtype&lt;/code&gt; which the column takes on during &lt;code&gt;tf.Example&lt;/code&gt; parsing if data is missing. A default value of &lt;code&gt;None&lt;/code&gt; will cause &lt;a href=&quot;../io/parse_example&quot;&gt;&lt;code&gt;tf.io.parse_example&lt;/code&gt;&lt;/a&gt; to fail if an example does not contain this column. If a single value is provided, the same value will be applied as the default value for every item. If an iterable of values is provided, the shape of the &lt;code&gt;default_value&lt;/code&gt; should be equal to the given &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dtype&lt;/code&gt; 과 호환되는 단일 값 또는 데이터가 누락 된 경우 &lt;code&gt;tf.Example&lt;/code&gt; 구문 분석 중에 열이 수행하는 dtype 과 호환되는 값의 &lt;code&gt;dtype&lt;/code&gt; 입니다 . 기본값 &lt;code&gt;None&lt;/code&gt; 은 예제에이 열이 포함되지 않은 경우 &lt;a href=&quot;../io/parse_example&quot;&gt; &lt;code&gt;tf.io.parse_example&lt;/code&gt; &lt;/a&gt; 이 실패합니다. 단일 값을 제공하면 모든 항목에 대해 동일한 값이 기본값으로 적용됩니다. 반복 가능한 값이 제공되면 &lt;code&gt;default_value&lt;/code&gt; 의 모양은 주어진 &lt;code&gt;shape&lt;/code&gt; 과 같아야합니다. .</target>
        </trans-unit>
        <trans-unit id="cd46ab33e902bd5b140e9d60cf5a742075413ec9" translate="yes" xml:space="preserve">
          <source>A single value compatible with &lt;code&gt;dtype&lt;/code&gt; that is used for padding the sparse data into a dense &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">희소 데이터를 조밀 한 &lt;code&gt;Tensor&lt;/code&gt; 로 채우는 데 사용되는 &lt;code&gt;dtype&lt;/code&gt; 과 호환되는 단일 값 입니다.</target>
        </trans-unit>
        <trans-unit id="8dc7c52714e94742d3cf830f966b7905c8545a9b" translate="yes" xml:space="preserve">
          <source>A single-element list. &lt;code&gt;decoded[0]&lt;/code&gt; is an &lt;code&gt;SparseTensor&lt;/code&gt; containing the decoded outputs s.t.:</source>
          <target state="translated">단일 요소 목록입니다. &lt;code&gt;decoded[0]&lt;/code&gt; 은 &lt;code&gt;SparseTensor&lt;/code&gt; 입니다. 디코딩 된 출력 st를 포함 입니다.</target>
        </trans-unit>
        <trans-unit id="10c122e2ef249eb022b493c688f50523f2796b31" translate="yes" xml:space="preserve">
          <source>A slight difference exists in the interpretation of the &lt;code&gt;shape&lt;/code&gt; parameter between &lt;code&gt;stateless_gamma&lt;/code&gt; and &lt;code&gt;gamma&lt;/code&gt;: in &lt;code&gt;gamma&lt;/code&gt;, the &lt;code&gt;shape&lt;/code&gt; is always prepended to the shape of the broadcast of &lt;code&gt;alpha&lt;/code&gt; with &lt;code&gt;beta&lt;/code&gt;; whereas in &lt;code&gt;stateless_gamma&lt;/code&gt; the &lt;code&gt;shape&lt;/code&gt; parameter must always encompass the shapes of each of &lt;code&gt;alpha&lt;/code&gt; and &lt;code&gt;beta&lt;/code&gt; (which must broadcast together to match the trailing dimensions of &lt;code&gt;shape&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;stateless_gamma&lt;/code&gt; 와 &lt;code&gt;gamma&lt;/code&gt; 사이 의 &lt;code&gt;shape&lt;/code&gt; 매개 변수 해석에는 약간의 차이가 있습니다 . &lt;code&gt;gamma&lt;/code&gt; 에서 &lt;code&gt;shape&lt;/code&gt; 는 항상 &lt;code&gt;alpha&lt;/code&gt; 와 &lt;code&gt;beta&lt;/code&gt; 의 방송 형태에 추가됩니다 . 반면에 &lt;code&gt;stateless_gamma&lt;/code&gt; &lt;code&gt;shape&lt;/code&gt; 파라미터는 항상 각각의 형상 포괄해야 &lt;code&gt;alpha&lt;/code&gt; 및 &lt;code&gt;beta&lt;/code&gt; (후미 치수와 일치하도록 함께 방송한다 &lt;code&gt;shape&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c03aa55cd363a7afe707aadbe8a286ba2cb52937" translate="yes" xml:space="preserve">
          <source>A slight difference exists in the interpretation of the &lt;code&gt;shape&lt;/code&gt; parameter between &lt;code&gt;stateless_poisson&lt;/code&gt; and &lt;code&gt;poisson&lt;/code&gt;: in &lt;code&gt;poisson&lt;/code&gt;, the &lt;code&gt;shape&lt;/code&gt; is always prepended to the shape of &lt;code&gt;lam&lt;/code&gt;; whereas in &lt;code&gt;stateless_poisson&lt;/code&gt; the shape of &lt;code&gt;lam&lt;/code&gt; must match the trailing dimensions of &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;stateless_poisson&lt;/code&gt; 과 &lt;code&gt;poisson&lt;/code&gt; 사이 의 &lt;code&gt;shape&lt;/code&gt; 매개 변수 해석에는 약간의 차이가 있습니다 . &lt;code&gt;poisson&lt;/code&gt; 에서는 &lt;code&gt;shape&lt;/code&gt; 이 항상 &lt;code&gt;lam&lt;/code&gt; 의 모양 앞에 추가됩니다 . 있는 반면 &lt;code&gt;stateless_poisson&lt;/code&gt; 의 모양 &lt;code&gt;lam&lt;/code&gt; 의 후행 크기와 일치해야합니다 &lt;code&gt;shape&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53da0d9b4528f105b3a0b731a72f3d3c04dee418" translate="yes" xml:space="preserve">
          <source>A small constant for numerical stability.</source>
          <target state="translated">수치 적 안정성을위한 작은 상수.</target>
        </trans-unit>
        <trans-unit id="2ae589a4fae967bfd1ebb7ecce1bc6d81c5d16b1" translate="yes" xml:space="preserve">
          <source>A small constant for numerical stability. This epsilon is &quot;epsilon hat&quot; in the Kingma and Ba paper (in the formula just before Section 2.1), not the epsilon in Algorithm 1 of the paper.</source>
          <target state="translated">수치 적 안정성을위한 작은 상수. 이 엡실론은 Kingma 및 Ba 논문 (섹션 2.1 직전 공식)에서 &quot;엡실론 모자&quot;이며, 논문 알고리즘 1의 엡실론이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="387d127d941f943ebbc5e579612d70aa32c4fc2c" translate="yes" xml:space="preserve">
          <source>A small constant for numerical stability. This epsilon is &quot;epsilon hat&quot; in the Kingma and Ba paper (in the formula just before Section 2.1), not the epsilon in Algorithm 1 of the paper. Defaults to 1e-7.</source>
          <target state="translated">수치 적 안정성을위한 작은 상수. 이 엡실론은 Kingma 및 Ba 논문 (섹션 2.1 직전 공식)에서 &quot;엡실론 모자&quot;이며, 논문 알고리즘 1의 엡실론이 아닙니다. 기본값은 1e-7입니다.</target>
        </trans-unit>
        <trans-unit id="a4f30a20c66e3e5e79d9e35486548786689ea308" translate="yes" xml:space="preserve">
          <source>A small float number added to the variance of x.</source>
          <target state="translated">x의 분산에 더해진 작은 부동 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="5cd047874404cd5a32894ffeb4a65b1b457f2ae2" translate="yes" xml:space="preserve">
          <source>A small float number to avoid dividing by 0.</source>
          <target state="translated">0으로 나누지 않도록하는 작은 부동 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="ec1c7d424e2a5972671cb09953fc19016a60f6b0" translate="yes" xml:space="preserve">
          <source>A small floating point value to avoid zero denominator.</source>
          <target state="translated">0 분모를 피하기위한 작은 부동 소수점 값.</target>
        </trans-unit>
        <trans-unit id="dabd00d8ee497a766bfd024d1aac503169ece093" translate="yes" xml:space="preserve">
          <source>A small increment to add to avoid taking a log of zero.</source>
          <target state="translated">로그가 0이되는 것을 방지하기 위해 추가 할 작은 증분입니다.</target>
        </trans-unit>
        <trans-unit id="a4b016e60660f6bcaa110e5996dfc34678f3d0a4" translate="yes" xml:space="preserve">
          <source>A snapshot of Python source files involved in the execution of the TensorFlow program.</source>
          <target state="translated">TensorFlow 프로그램 실행과 관련된 Python 소스 파일의 스냅 샷입니다.</target>
        </trans-unit>
        <trans-unit id="83330bf4c3c5bde9bbe0f10459d192f50e83897e" translate="yes" xml:space="preserve">
          <source>A sorted 1-D integer Tensor, with &lt;code&gt;shape=[num_segments + 1]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;shape=[num_segments + 1]&lt;/code&gt; 정렬 된 1 차원 정수형 텐서 입니다.</target>
        </trans-unit>
        <trans-unit id="b5909e318fb74a97bb3de78cda4ac62d0fc1ca7e" translate="yes" xml:space="preserve">
          <source>A sorted 1-D integer Tensor, with &lt;code&gt;shape=[splits[-1]]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;shape=[splits[-1]]&lt;/code&gt; 정렬 된 1 차원 정수형 텐서</target>
        </trans-unit>
        <trans-unit id="9eb1c040e0be38fd2431bed72907cfc9b0a871cd" translate="yes" xml:space="preserve">
          <source>A sorted 1-D integer Tensor. &lt;code&gt;splits[0]&lt;/code&gt; must be zero.</source>
          <target state="translated">정렬 된 1 차원 정수 Tensor. &lt;code&gt;splits[0]&lt;/code&gt; 은 0 이어야합니다.</target>
        </trans-unit>
        <trans-unit id="735d6b319b0088fc97f6b38a969426443bf34e05" translate="yes" xml:space="preserve">
          <source>A sorted list of the replicas that are attached to that task and logical_core.</source>
          <target state="translated">해당 작업과 logical_core에 연결된 복제본의 정렬 된 목록입니다.</target>
        </trans-unit>
        <trans-unit id="3a4fe8f4bbfe455195a939ee5e3f7b424e3ff791" translate="yes" xml:space="preserve">
          <source>A sorted list or tuple of floats specifying the boundaries.</source>
          <target state="translated">경계를 지정하는 정렬 된 목록 또는 부동 소수점 튜플입니다.</target>
        </trans-unit>
        <trans-unit id="5fc2cd026a02ef4099d9651b09d26d582f49d312" translate="yes" xml:space="preserve">
          <source>A sparse gradient is represented by its indices, values and possibly empty or None shape. Indices must be a vector representing the locations of non-zero entries in the tensor. Values are the non-zero slices of the gradient, and must have the same first dimension as indices, i.e., the nnz represented by indices and values must be consistent. Shape, if not empty or None, must be consistent with the accumulator's shape (if also provided).</source>
          <target state="translated">스파 스 그라디언트는 인덱스, 값 및 비어 있거나 없음 모양으로 표시됩니다. 인덱스는 텐서에서 0이 아닌 항목의 위치를 ​​나타내는 벡터 여야합니다. 값은 그라디언트의 0이 아닌 조각이며 인덱스와 동일한 첫 번째 차원을 가져야합니다. 즉, 인덱스로 표시된 nnz와 값은 일치해야합니다. 비어 있지 않거나 없음 인 경우 모양은 축 압기 모양과 일치해야합니다 (제공된 경우).</target>
        </trans-unit>
        <trans-unit id="8a000dcd80669048f4944b91acc2d5e412c7c996" translate="yes" xml:space="preserve">
          <source>A sparse representation of a set of tensor slices at given indices.</source>
          <target state="translated">주어진 인덱스에서 텐서 슬라이스 세트의 희소 표현.</target>
        </trans-unit>
        <trans-unit id="cbd2c355c48674d6b630356da3cc349377818c2a" translate="yes" xml:space="preserve">
          <source>A sparse tensor representation of the labels.</source>
          <target state="translated">레이블의 희박한 텐서 표현.</target>
        </trans-unit>
        <trans-unit id="29ca01fbce10f7485bb28b6d17ddbd446d0b6f4b" translate="yes" xml:space="preserve">
          <source>A stack that produces elements in first-in last-out order.</source>
          <target state="translated">선입 선출 순서로 요소를 생성하는 스택입니다.</target>
        </trans-unit>
        <trans-unit id="cc8b78fd72c2dcc26ba3c5a28a39aca059882dee" translate="yes" xml:space="preserve">
          <source>A stacked &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;values&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;values&lt;/code&gt; 와 동일한 유형 의 스택 형 &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72a42f0265f4fd3e5999fd3d9aaecc04b83fec5b" translate="yes" xml:space="preserve">
          <source>A state &amp;amp; compute distribution policy on a list of devices.</source>
          <target state="translated">장치 목록에 대한 상태 및 계산 배포 정책.</target>
        </trans-unit>
        <trans-unit id="fbff670771b0fac60295b5ee274db3e14d6f89bf" translate="yes" xml:space="preserve">
          <source>A state saver object with methods &lt;code&gt;state&lt;/code&gt; and &lt;code&gt;save_state&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;state&lt;/code&gt; 및 &lt;code&gt;save_state&lt;/code&gt; 메소드가있는 상태 보호기 객체 .</target>
        </trans-unit>
        <trans-unit id="165808aa80fec68f5071d8d70de7ac69522d5d4b" translate="yes" xml:space="preserve">
          <source>A stateful resource that aggregates statistics from one or more iterators.</source>
          <target state="translated">하나 이상의 반복자에서 통계를 집계하는 상태 저장 리소스입니다.</target>
        </trans-unit>
        <trans-unit id="b4294fa04d74d1c83e6cb380932bd1df339ca8dc" translate="yes" xml:space="preserve">
          <source>A stateless version of PyFunc.</source>
          <target state="translated">PyFunc의 상태 비 저장 버전입니다.</target>
        </trans-unit>
        <trans-unit id="828801850b95033710d6fb904a0a5fd455671d06" translate="yes" xml:space="preserve">
          <source>A string (not ending with '/') will create a new name scope, in which &lt;code&gt;name&lt;/code&gt; is appended to the prefix of all operations created in the context. If &lt;code&gt;name&lt;/code&gt; has been used before, it will be made unique by calling &lt;code&gt;self.unique_name(name)&lt;/code&gt;.</source>
          <target state="translated">문자열 ( '/'로 끝나지 않음)은 컨텍스트에서 생성 된 모든 작업의 ​​접두사에 &lt;code&gt;name&lt;/code&gt; 이 추가 되는 새 이름 범위를 만듭니다 . 이전에 &lt;code&gt;name&lt;/code&gt; 을 사용한 적이 있으면 &lt;code&gt;self.unique_name(name)&lt;/code&gt; 을 호출하여 고유하게 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="a7933e9cedba6a4e901692ca1ecb98ecec10f2b7" translate="yes" xml:space="preserve">
          <source>A string &lt;code&gt;Tensor&lt;/code&gt; giving predicted class labels. May be &lt;code&gt;None&lt;/code&gt;, but only if &lt;code&gt;scores&lt;/code&gt; is set. Interpretation varies-- see class doc.</source>
          <target state="translated">예측 된 클래스 레이블을 제공 하는 문자열 &lt;code&gt;Tensor&lt;/code&gt; . 하지 않을 수 &lt;code&gt;None&lt;/code&gt; 하지만 경우에만 &lt;code&gt;scores&lt;/code&gt; 설정됩니다. 해석은 다양합니다. 클래스 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c3c265aa645089a427e616a0e8d00c925e9cc233" translate="yes" xml:space="preserve">
          <source>A string &lt;code&gt;Tensor&lt;/code&gt; of rank &lt;code&gt;N&lt;/code&gt;, the strings to split. If &lt;code&gt;rank(input)&lt;/code&gt; is not known statically, then it is assumed to be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">분할 할 문자열 인 순위 &lt;code&gt;N&lt;/code&gt; 의 문자열 &lt;code&gt;Tensor&lt;/code&gt; 입니다 . 경우 &lt;code&gt;rank(input)&lt;/code&gt; 정적으로 공지되어 있지 않은 경우, 것으로 가정 &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56cf0ba0fb63c413cc72c5b089a42037c885ade7" translate="yes" xml:space="preserve">
          <source>A string &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;RaggedTensor&lt;/code&gt;: the strings to split. Must have a statically known rank (&lt;code&gt;N&lt;/code&gt;).</source>
          <target state="translated">문자열 &lt;code&gt;Tensor&lt;/code&gt; 또는 &lt;code&gt;RaggedTensor&lt;/code&gt; : 분할 할 문자열입니다. 정적으로 알려진 순위 ( &lt;code&gt;N&lt;/code&gt; ) 가 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="6ed174f75293962f10fb53616fe63ffd17a27754" translate="yes" xml:space="preserve">
          <source>A string &lt;code&gt;Tensor&lt;/code&gt;, expected to accept serialized tf.Examples.</source>
          <target state="translated">직렬화 된 tf.Examples를 허용 할 것으로 예상되는 &lt;code&gt;Tensor&lt;/code&gt; 문자열 입니다.</target>
        </trans-unit>
        <trans-unit id="1ca5fba359ab3b1192413ed9bf0c7382b9dea4ac" translate="yes" xml:space="preserve">
          <source>A string &lt;code&gt;Tensor&lt;/code&gt;. Note that the ClassificationResponse message requires that class labels are strings, not integers or anything else.</source>
          <target state="translated">문자열 &lt;code&gt;Tensor&lt;/code&gt; . ClassificationResponse 메시지는 클래스 레이블이 정수가 아닌 문자열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="2f86e6785df037590655ffdcebb7b8de839b3fcf" translate="yes" xml:space="preserve">
          <source>A string Tensor for the summary or &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">요약을위한 문자열 텐서 또는 &lt;code&gt;None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="372ec93a5c88e4b3fc314515ba0dcd32710bc4d3" translate="yes" xml:space="preserve">
          <source>A string Tensor.</source>
          <target state="translated">문자열 텐서.</target>
        </trans-unit>
        <trans-unit id="fcf902d8d1d22bacd15adb63600f04bf7cb78508" translate="yes" xml:space="preserve">
          <source>A string Tensor. Result of a SerializeState of a Reader with matching type.</source>
          <target state="translated">문자열 Tensor. 유형이 일치하는 판독기의 SerializeState의 결과입니다.</target>
        </trans-unit>
        <trans-unit id="1fcf2c2d7d785029aa2210e49102fc01e0357a87" translate="yes" xml:space="preserve">
          <source>A string added between each input being joined. Defaults to '&lt;em&gt;X&lt;/em&gt;'.</source>
          <target state="translated">결합되는 각 입력 사이에 추가되는 문자열입니다. 기본값은 ' &lt;em&gt;X&lt;/em&gt; '입니다.</target>
        </trans-unit>
        <trans-unit id="4e7b94ea6fc885073025f5f12ea78ca108249074" translate="yes" xml:space="preserve">
          <source>A string added between each string being joined.</source>
          <target state="translated">결합되는 각 문자열 사이에 추가되는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="04cc2173632b0f99d4bb0dd9b4b52b577a6a65e4" translate="yes" xml:space="preserve">
          <source>A string added between each string being joined. Defaults to '&lt;em&gt;X&lt;/em&gt;'.</source>
          <target state="translated">결합되는 각 문자열 사이에 추가되는 문자열입니다. 기본값은 ' &lt;em&gt;X&lt;/em&gt; '입니다.</target>
        </trans-unit>
        <trans-unit id="aee09f05f01ef0f2a84ea2020ff39a008aa55459" translate="yes" xml:space="preserve">
          <source>A string containing JSON to decode and compare to first.</source>
          <target state="translated">먼저 디코딩하고 비교할 JSON이 포함 된 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="acb639f8b98c6450afa4b5a09b6d1393570d0bb8" translate="yes" xml:space="preserve">
          <source>A string containing JSON to decode and compare to second.</source>
          <target state="translated">디코딩하고 초와 비교할 JSON이 포함 된 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="940b0f467f9725c976d6f80ac91e42b183d15da7" translate="yes" xml:space="preserve">
          <source>A string containing a directory in which to create timestamped subdirectories containing exported &lt;code&gt;SavedModel&lt;/code&gt;s.</source>
          <target state="translated">내 보낸 &lt;code&gt;SavedModel&lt;/code&gt; 을 포함하는 타임 스탬프가 지정된 하위 디렉터리를 생성 할 디렉터리가 포함 된 문자열 입니다.</target>
        </trans-unit>
        <trans-unit id="2177b75f8f2253f7e8c6f3431d3bf68c89f22d84" translate="yes" xml:space="preserve">
          <source>A string containing a directory where to write the export.</source>
          <target state="translated">내보내기를 작성할 디렉토리가 포함 된 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="bbb59e7094cadd3722fc629a19898bcbe99afa9a" translate="yes" xml:space="preserve">
          <source>A string containing a session target for this server.</source>
          <target state="translated">이 서버의 세션 대상을 포함하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="50b2362fb87c35632192d57deaf04714b4c8eb35" translate="yes" xml:space="preserve">
          <source>A string containing the output dimension(s) to apply a bias to. Each character in the &lt;code&gt;bias_axes&lt;/code&gt; string should correspond to a character in the output portion of the &lt;code&gt;equation&lt;/code&gt; string.</source>
          <target state="translated">편향을 적용 할 출력 차원이 포함 된 문자열입니다. &lt;code&gt;bias_axes&lt;/code&gt; 문자열의 각 문자 는 &lt;code&gt;equation&lt;/code&gt; 문자열 의 출력 부분에있는 문자와 일치해야 합니다.</target>
        </trans-unit>
        <trans-unit id="1ff161cec6106dfa59a67821e1741bd656ce281b" translate="yes" xml:space="preserve">
          <source>A string corresponding to the TPU to use. It can be the TPU name or TPU worker gRPC address. If not set, it will try automatically resolve the TPU address on Cloud TPUs.</source>
          <target state="translated">사용할 TPU에 해당하는 문자열입니다. TPU 이름 또는 TPU 작업자 gRPC 주소 일 수 있습니다. 설정하지 않으면 Cloud TPU에서 TPU 주소를 자동으로 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2d564ff3995fa2a1ad835107e486697ba4e8e248" translate="yes" xml:space="preserve">
          <source>A string device name or TensorFlow &lt;code&gt;DeviceSpec&lt;/code&gt; object.</source>
          <target state="translated">문자열 장치 이름 또는 TensorFlow &lt;code&gt;DeviceSpec&lt;/code&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="f884ed0b539e10ca29cb6e4f2800981c65af1c17" translate="yes" xml:space="preserve">
          <source>A string filepath to a checkpoint to warm-start from, or a &lt;code&gt;WarmStartSettings&lt;/code&gt; object to fully configure warm-starting. If the string filepath is provided instead of a &lt;code&gt;WarmStartSettings&lt;/code&gt;, then all weights and biases are warm-started, and it is assumed that vocabularies and Tensor names are unchanged.</source>
          <target state="translated">웜 스타트 할 체크 포인트에 대한 문자열 파일 경로 또는 웜 스타트 를 완전히 구성하기 위한 &lt;code&gt;WarmStartSettings&lt;/code&gt; 개체입니다. &lt;code&gt;WarmStartSettings&lt;/code&gt; 대신 문자열 파일 경로가 제공 되면 모든 가중치 및 편향이 웜 스타트되고 어휘 및 Tensor 이름이 변경되지 않은 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="a8ee671f1b4cfd2d710406b57e43245f950eee97" translate="yes" xml:space="preserve">
          <source>A string filepath to a checkpoint to warm-start from, or a &lt;code&gt;WarmStartSettings&lt;/code&gt; object to fully configure warm-starting. If the string filepath is provided instead of a &lt;code&gt;WarmStartSettings&lt;/code&gt;, then all weights are warm-started, and it is assumed that vocabularies and Tensor names are unchanged.</source>
          <target state="translated">웜 스타트 할 체크 포인트에 대한 문자열 파일 경로 또는 웜 스타트 를 완전히 구성하기 위한 &lt;code&gt;WarmStartSettings&lt;/code&gt; 개체입니다. &lt;code&gt;WarmStartSettings&lt;/code&gt; 대신 문자열 파일 경로가 제공 되면 모든 가중치가 웜 스타트되고 어휘 및 Tensor 이름이 변경되지 않은 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="3c17071f97d31d7c43422fdcac91f22a8021edd7" translate="yes" xml:space="preserve">
          <source>A string identifying the label. It means tf.Example stores labels with this key.</source>
          <target state="translated">레이블을 식별하는 문자열입니다. 이는 tf.Example이이 키로 레이블을 저장함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="f198952ac600c0dc0f6d69476b9bb61668084fc9" translate="yes" xml:space="preserve">
          <source>A string indicating how to connect to the tf.data service. The string should be in the format</source>
          <target state="translated">tf.data 서비스에 연결하는 방법을 나타내는 문자열입니다. 문자열은 형식이어야합니다.</target>
        </trans-unit>
        <trans-unit id="17c787c9d44116908071ce3b1c91f58dba87013e" translate="yes" xml:space="preserve">
          <source>A string indicating the charset for decoding unicode.</source>
          <target state="translated">유니 코드 디코딩을위한 문자 집합을 나타내는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="5a962b8b550adb886c1c4d1b8f8a8617ab8f5bdc" translate="yes" xml:space="preserve">
          <source>A string indicating the charset for encoding unicode.</source>
          <target state="translated">유니 코드 인코딩을위한 문자 집합을 나타내는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="d62edd2466a574745633dac97ed976ac6efd12c9" translate="yes" xml:space="preserve">
          <source>A string indicating the path to the generated conversion logs.</source>
          <target state="translated">생성 된 전환 로그의 경로를 나타내는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="a811cea97f7c5b80475cc4637f5263fdc1028730" translate="yes" xml:space="preserve">
          <source>A string name for the foldl node in the graph</source>
          <target state="translated">그래프에서 foldl 노드의 문자열 이름</target>
        </trans-unit>
        <trans-unit id="5d45fce0c3e23dfdf211e1a781be321763cd2271" translate="yes" xml:space="preserve">
          <source>A string name for the foldr node in the graph</source>
          <target state="translated">그래프에서 폴더 노드의 문자열 이름</target>
        </trans-unit>
        <trans-unit id="021a47f3d271e365411a5f66cf215740b4dd9605" translate="yes" xml:space="preserve">
          <source>A string name for the map node in the graph</source>
          <target state="translated">그래프에서 맵 노드의 문자열 이름</target>
        </trans-unit>
        <trans-unit id="3c3fa07faf6975a2c20e19011b08b1239b9a2069" translate="yes" xml:space="preserve">
          <source>A string name to prepend to created ops.</source>
          <target state="translated">생성 된 작업 앞에 추가 할 문자열 이름입니다.</target>
        </trans-unit>
        <trans-unit id="c45a3e05528986eb374c536affa811f62aec5b20" translate="yes" xml:space="preserve">
          <source>A string of monitoring output.</source>
          <target state="translated">모니터링 출력 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="40f2a710f776306a550eeb33c051ab663db5f6db" translate="yes" xml:space="preserve">
          <source>A string of the form &lt;code&gt;dim0 dim1 ... dimN-1 slice-spec&lt;/code&gt; where the &lt;code&gt;dimI&lt;/code&gt; are the dimensions of the larger tensor and &lt;code&gt;slice-spec&lt;/code&gt; specifies what part is covered by the tensor to save.</source>
          <target state="translated">&lt;code&gt;dim0 dim1 ... dimN-1 slice-spec&lt;/code&gt; 형식의 문자열입니다. 여기서 &lt;code&gt;dimI&lt;/code&gt; 는 더 큰 텐서의 차원이고 &lt;code&gt;slice-spec&lt;/code&gt; 은 저장할 텐서가 다루는 부분을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b349a6d0c8b5118b6180a23ff77d1b5b0b0350a1" translate="yes" xml:space="preserve">
          <source>A string or None. Specifies whether the channel dimension of the &lt;code&gt;input&lt;/code&gt; and output is the last dimension (default, or if &lt;code&gt;data_format&lt;/code&gt; does not start with &quot;NC&quot;), or the second dimension (if &lt;code&gt;data_format&lt;/code&gt; starts with &quot;NC&quot;). For N=1, the valid values are &quot;NWC&quot; (default) and &quot;NCW&quot;. For N=2, the valid values are &quot;NHWC&quot; (default) and &quot;NCHW&quot;. For N=3, the valid values are &quot;NDHWC&quot; (default) and &quot;NCDHW&quot;.</source>
          <target state="translated">문자열 또는 없음. &lt;code&gt;input&lt;/code&gt; 및 출력 의 채널 차원이 마지막 차원 (기본값 또는 &lt;code&gt;data_format&lt;/code&gt; 이 &quot;NC&quot;로 시작하지 않는 경우 ) 또는 두 번째 차원 ( &lt;code&gt;data_format&lt;/code&gt; 이 &quot;NC&quot;로 시작하는 경우)인지 지정 합니다. N = 1의 경우 유효한 값은 &quot;NWC&quot;(기본값) 및 &quot;NCW&quot;입니다. N = 2의 경우 유효한 값은 &quot;NHWC&quot;(기본값) 및 &quot;NCHW&quot;입니다. N = 3의 경우 유효한 값은 &quot;NDHWC&quot;(기본값) 및 &quot;NCDHW&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="3992e9555ab7182fc8a58c5aa4d2be8dafc7c11f" translate="yes" xml:space="preserve">
          <source>A string or a &lt;code&gt;NumericColumn&lt;/code&gt; created by &lt;a href=&quot;../../../feature_column/numeric_column&quot;&gt;&lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt;&lt;/a&gt; defining feature column representing weights. It is used to down weight or boost examples during training. It will be multiplied by the loss of the example. If it is a string, it is used as a key to fetch weight tensor from the &lt;code&gt;features&lt;/code&gt;. If it is a &lt;code&gt;NumericColumn&lt;/code&gt;, raw tensor is fetched by key &lt;code&gt;weight_column.key&lt;/code&gt;, then weight_column.normalizer_fn is applied on it to get weight tensor.</source>
          <target state="translated">문자열 또는 &lt;code&gt;NumericColumn&lt;/code&gt; 가 만든 &lt;a href=&quot;../../../feature_column/numeric_column&quot;&gt; &lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt; &lt;/a&gt; 가중치를 나타내는 기능 열을 정의. 훈련 중에 체중을 줄이거 나 사례를 늘리는 데 사용됩니다. 예제의 손실이 곱해집니다. 문자열 인 경우 &lt;code&gt;features&lt;/code&gt; 에서 가중치 텐서를 가져 오는 키로 사용됩니다 . 그것은 경우 &lt;code&gt;NumericColumn&lt;/code&gt; , 원료 텐서 키에 의해 페치 &lt;code&gt;weight_column.key&lt;/code&gt; , 다음 weight_column.normalizer_fn 체중 텐서를 얻기 위해 그것을 적용된다.</target>
        </trans-unit>
        <trans-unit id="880b327425558dab1ed6555d5e49e60af0bc3d00" translate="yes" xml:space="preserve">
          <source>A string or a &lt;code&gt;NumericColumn&lt;/code&gt; created by &lt;a href=&quot;../../feature_column/numeric_column&quot;&gt;&lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt;&lt;/a&gt; defining feature column representing weights. It is used to down weight or boost examples during training. It will be multiplied by the loss of the example. If it is a string, it is used as a key to fetch weight tensor from the &lt;code&gt;features&lt;/code&gt;. If it is a &lt;code&gt;NumericColumn&lt;/code&gt;, raw tensor is fetched by key &lt;code&gt;weight_column.key&lt;/code&gt;, then weight_column.normalizer_fn is applied on it to get weight tensor.</source>
          <target state="translated">문자열 또는 &lt;code&gt;NumericColumn&lt;/code&gt; 가 만든 &lt;a href=&quot;../../feature_column/numeric_column&quot;&gt; &lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt; &lt;/a&gt; 가중치를 나타내는 기능 열을 정의. 훈련 중에 체중을 줄이거 나 사례를 늘리는 데 사용됩니다. 예제의 손실이 곱해집니다. 문자열 인 경우 &lt;code&gt;features&lt;/code&gt; 에서 가중치 텐서를 가져 오는 키로 사용됩니다 . 그것은 경우 &lt;code&gt;NumericColumn&lt;/code&gt; , 원료 텐서 키에 의해 페치 &lt;code&gt;weight_column.key&lt;/code&gt; , 다음 weight_column.normalizer_fn 체중 텐서를 얻기 위해 그것을 적용된다.</target>
        </trans-unit>
        <trans-unit id="15588375f627d959026c215af57323e17cd39320" translate="yes" xml:space="preserve">
          <source>A string or a &lt;code&gt;NumericColumn&lt;/code&gt; created by &lt;a href=&quot;../feature_column/numeric_column&quot;&gt;&lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt;&lt;/a&gt; defining feature column representing weights. It is used to down weight or boost examples during training. It will be multiplied by the loss of the example.</source>
          <target state="translated">문자열 또는 &lt;code&gt;NumericColumn&lt;/code&gt; 가 만든 &lt;a href=&quot;../feature_column/numeric_column&quot;&gt; &lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt; &lt;/a&gt; 가중치를 나타내는 기능 열을 정의. 훈련 중에 체중을 줄이거 나 사례를 늘리는 데 사용됩니다. 예제의 손실이 곱해집니다.</target>
        </trans-unit>
        <trans-unit id="cb92372f6c87208ab3e075f815b3f63a80ab7a1a" translate="yes" xml:space="preserve">
          <source>A string or a &lt;code&gt;NumericColumn&lt;/code&gt; created by &lt;a href=&quot;../feature_column/numeric_column&quot;&gt;&lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt;&lt;/a&gt; defining feature column representing weights. It is used to down weight or boost examples during training. It will be multiplied by the loss of the example. If it is a string, it is used as a key to fetch weight tensor from the &lt;code&gt;features&lt;/code&gt;. If it is a &lt;code&gt;NumericColumn&lt;/code&gt;, raw tensor is fetched by key &lt;code&gt;weight_column.key&lt;/code&gt;, then weight_column.normalizer_fn is applied on it to get weight tensor.</source>
          <target state="translated">문자열 또는 &lt;code&gt;NumericColumn&lt;/code&gt; 가 만든 &lt;a href=&quot;../feature_column/numeric_column&quot;&gt; &lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt; &lt;/a&gt; 가중치를 나타내는 기능 열을 정의. 훈련 중에 체중을 줄이거 나 사례를 늘리는 데 사용됩니다. 예제의 손실이 곱해집니다. 문자열 인 경우 &lt;code&gt;features&lt;/code&gt; 에서 가중치 텐서를 가져 오는 키로 사용됩니다 . 그것은 경우 &lt;code&gt;NumericColumn&lt;/code&gt; , 원료 텐서 키에 의해 페치 &lt;code&gt;weight_column.key&lt;/code&gt; , 다음 weight_column.normalizer_fn 체중 텐서를 얻기 위해 그것을 적용된다.</target>
        </trans-unit>
        <trans-unit id="856014443d365d5350f168be52f31dee731d0851" translate="yes" xml:space="preserve">
          <source>A string or a &lt;code&gt;NumericColumn&lt;/code&gt; created by &lt;a href=&quot;../feature_column/numeric_column&quot;&gt;&lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt;&lt;/a&gt; defining feature column representing weights. It is used to down weight or boost examples during training. It will be multiplied by the loss of the example. If it is a string, it is used as a key to fetch weight tensor from the &lt;code&gt;features&lt;/code&gt;. If it is a &lt;code&gt;_NumericColumn&lt;/code&gt;, raw tensor is fetched by key &lt;code&gt;weight_column.key&lt;/code&gt;, then weight_column.normalizer_fn is applied on it to get weight tensor.</source>
          <target state="translated">문자열 또는 &lt;code&gt;NumericColumn&lt;/code&gt; 가 만든 &lt;a href=&quot;../feature_column/numeric_column&quot;&gt; &lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt; &lt;/a&gt; 가중치를 나타내는 기능 열을 정의. 훈련 중에 체중을 줄이거 나 사례를 늘리는 데 사용됩니다. 예제의 손실이 곱해집니다. 문자열 인 경우 &lt;code&gt;features&lt;/code&gt; 에서 가중치 텐서를 가져 오는 키로 사용됩니다 . 그것은 경우 &lt;code&gt;_NumericColumn&lt;/code&gt; , 원료 텐서 키에 의해 페치 &lt;code&gt;weight_column.key&lt;/code&gt; , 다음 weight_column.normalizer_fn 체중 텐서를 얻기 위해 그것을 적용된다.</target>
        </trans-unit>
        <trans-unit id="0cfd75e66a6dd7f57f2b8fa4c7c70a21c52abe25" translate="yes" xml:space="preserve">
          <source>A string or a &lt;code&gt;NumericColumn&lt;/code&gt; created by &lt;a href=&quot;../feature_column/numeric_column&quot;&gt;&lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt;&lt;/a&gt; defining feature column representing weights. It is used to down weight or boost examples during training. It will be multiplied by the loss of the example. Per-class weighting is not supported.</source>
          <target state="translated">문자열 또는 &lt;code&gt;NumericColumn&lt;/code&gt; 가 만든 &lt;a href=&quot;../feature_column/numeric_column&quot;&gt; &lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt; &lt;/a&gt; 가중치를 나타내는 기능 열을 정의. 훈련 중에 체중을 줄이거 나 사례를 늘리는 데 사용됩니다. 예제의 손실이 곱해집니다. 클래스 별 가중치는 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9c1d33c2439e82daf30557600e1dde8604ee94be" translate="yes" xml:space="preserve">
          <source>A string or a &lt;code&gt;NumericColumn&lt;/code&gt; created by &lt;a href=&quot;../feature_column/numeric_column&quot;&gt;&lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt;&lt;/a&gt; defining feature column representing weights. It will be multiplied by the loss of the example.</source>
          <target state="translated">문자열 또는 &lt;code&gt;NumericColumn&lt;/code&gt; 가 만든 &lt;a href=&quot;../feature_column/numeric_column&quot;&gt; &lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt; &lt;/a&gt; 가중치를 나타내는 기능 열을 정의. 예제의 손실이 곱해집니다.</target>
        </trans-unit>
        <trans-unit id="5cdb54f0c5143b89cb4ea41bee74cbcfd51e5324" translate="yes" xml:space="preserve">
          <source>A string or a &lt;code&gt;NumericColumn&lt;/code&gt; created by &lt;code&gt;tf.fc_old.numeric_column&lt;/code&gt; defining feature column representing weights. It is used to downweight or boost examples during training. It will be multiplied by the loss of the example. If it is a string, it is used as a key to fetch weight tensor from the &lt;code&gt;features&lt;/code&gt;. If it is a &lt;code&gt;NumericColumn&lt;/code&gt;, raw tensor is fetched by key &lt;code&gt;weight_column.key&lt;/code&gt;, then &lt;code&gt;weight_column.normalizer_fn&lt;/code&gt; is applied on it to get weight tensor.</source>
          <target state="translated">문자열 또는 &lt;code&gt;NumericColumn&lt;/code&gt; 가 만든 &lt;code&gt;tf.fc_old.numeric_column&lt;/code&gt; 가중치를 나타내는 기능 열을 정의. 훈련 중에 예제를 줄이거 나 늘리는 데 사용됩니다. 예제의 손실이 곱해집니다. 문자열 인 경우 &lt;code&gt;features&lt;/code&gt; 에서 가중치 텐서를 가져 오는 키로 사용됩니다 . 그것은 경우 &lt;code&gt;NumericColumn&lt;/code&gt; , 원료 텐서 키에 의해 페치 &lt;code&gt;weight_column.key&lt;/code&gt; , 다음 &lt;code&gt;weight_column.normalizer_fn&lt;/code&gt; 체중 텐서를 얻기 위해 그것을 적용된다.</target>
        </trans-unit>
        <trans-unit id="5050d56435b4d23369368c15a06983129a351f10" translate="yes" xml:space="preserve">
          <source>A string or a &lt;code&gt;_NumericColumn&lt;/code&gt; created by &lt;a href=&quot;../feature_column/numeric_column&quot;&gt;&lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt;&lt;/a&gt; defining feature column representing weights. It is used to down weight or boost examples during training. It will be multiplied by the loss of the example. If it is a string, it is used as a key to fetch weight tensor from the &lt;code&gt;features&lt;/code&gt;. If it is a &lt;code&gt;_NumericColumn&lt;/code&gt;, raw tensor is fetched by key &lt;code&gt;weight_column.key&lt;/code&gt;, then weight_column.normalizer_fn is applied on it to get weight tensor.</source>
          <target state="translated">문자열 또는 &lt;code&gt;_NumericColumn&lt;/code&gt; 가 만든 &lt;a href=&quot;../feature_column/numeric_column&quot;&gt; &lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt; &lt;/a&gt; 가중치를 나타내는 기능 열을 정의. 훈련 중에 체중을 줄이거 나 사례를 늘리는 데 사용됩니다. 예제의 손실이 곱해집니다. 문자열 인 경우 &lt;code&gt;features&lt;/code&gt; 에서 가중치 텐서를 가져 오는 키로 사용됩니다 . 그것은 경우 &lt;code&gt;_NumericColumn&lt;/code&gt; , 원료 텐서 키에 의해 페치 &lt;code&gt;weight_column.key&lt;/code&gt; , 다음 weight_column.normalizer_fn 체중 텐서를 얻기 위해 그것을 적용된다.</target>
        </trans-unit>
        <trans-unit id="fd567643aff89fcbf08588752a1ead5c0fdfae2b" translate="yes" xml:space="preserve">
          <source>A string or a &lt;code&gt;_NumericColumn&lt;/code&gt; created by &lt;a href=&quot;../feature_column/numeric_column&quot;&gt;&lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt;&lt;/a&gt; defining feature column representing weights. It is used to downweight or boost examples during training. It will be multiplied by the loss of the example. If it is a string, it is used as a key to fetch weight tensor from the &lt;code&gt;features&lt;/code&gt;. If it is a &lt;code&gt;_NumericColumn&lt;/code&gt;, raw tensor is fetched by key &lt;code&gt;weight_column.key&lt;/code&gt;, then weight_column.normalizer_fn is applied on it to get weight tensor.</source>
          <target state="translated">문자열 또는 &lt;code&gt;_NumericColumn&lt;/code&gt; 가 만든 &lt;a href=&quot;../feature_column/numeric_column&quot;&gt; &lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt; &lt;/a&gt; 가중치를 나타내는 기능 열을 정의. 훈련 중에 예제를 줄이거 나 늘리는 데 사용됩니다. 예제의 손실이 곱해집니다. 문자열 인 경우 &lt;code&gt;features&lt;/code&gt; 에서 가중치 텐서를 가져 오는 키로 사용됩니다 . 그것은 경우 &lt;code&gt;_NumericColumn&lt;/code&gt; , 원료 텐서 키에 의해 페치 &lt;code&gt;weight_column.key&lt;/code&gt; , 다음 weight_column.normalizer_fn 체중 텐서를 얻기 위해 그것을 적용된다.</target>
        </trans-unit>
        <trans-unit id="5b8d797684eae7ff3c2041864b1bbecfe5202932" translate="yes" xml:space="preserve">
          <source>A string or a &lt;code&gt;_NumericColumn&lt;/code&gt; created by &lt;a href=&quot;../feature_column/numeric_column&quot;&gt;&lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt;&lt;/a&gt; defining feature column representing weights. It will be multiplied by the loss of the example.</source>
          <target state="translated">문자열 또는 &lt;code&gt;_NumericColumn&lt;/code&gt; 가 만든 &lt;a href=&quot;../feature_column/numeric_column&quot;&gt; &lt;code&gt;tf.feature_column.numeric_column&lt;/code&gt; &lt;/a&gt; 가중치를 나타내는 기능 열을 정의. 예제의 손실이 곱해집니다.</target>
        </trans-unit>
        <trans-unit id="ea99c0b636ad3044000af9c9c80b56d55d511415" translate="yes" xml:space="preserve">
          <source>A string representing the current name scope.</source>
          <target state="translated">현재 이름 범위를 나타내는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="583e93f2c538cdb3a19b3c9f599465387ab12f40" translate="yes" xml:space="preserve">
          <source>A string scalar Tensor.</source>
          <target state="translated">string 형 스칼라 Tensor.</target>
        </trans-unit>
        <trans-unit id="7a4fcbba15fa435cf2a54cce22a1d22392a9e212" translate="yes" xml:space="preserve">
          <source>A string specifying how to combine embedding results for each entry. Currently &quot;mean&quot;, &quot;sqrtn&quot; and &quot;sum&quot; are supported, with &quot;mean&quot; the default.</source>
          <target state="translated">각 항목에 대한 임베딩 결과를 결합하는 방법을 지정하는 문자열입니다. 현재 &quot;mean&quot;, &quot;sqrtn&quot;및 &quot;sum&quot;이 지원되며 기본값은 &quot;mean&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="c6caab470ac8220bb67f4bc13a3215c98e913d82" translate="yes" xml:space="preserve">
          <source>A string specifying how to reduce if a categorical column is multivalent. Except &lt;code&gt;numeric_column&lt;/code&gt;, almost all columns passed to &lt;code&gt;linear_model&lt;/code&gt; are considered as categorical columns. It combines each categorical column independently. Currently &quot;mean&quot;, &quot;sqrtn&quot; and &quot;sum&quot; are supported, with &quot;sum&quot; the default for linear model. &quot;sqrtn&quot; often achieves good accuracy, in particular with bag-of-words columns.</source>
          <target state="translated">범주 형 열이 다가 인 경우 줄이는 방법을 지정하는 문자열입니다. &lt;code&gt;numeric_column&lt;/code&gt; 을 제외하고 &lt;code&gt;linear_model&lt;/code&gt; 에 전달 된 거의 모든 열이 범주 형 열로 간주됩니다. 각 범주 열을 독립적으로 결합합니다. 현재 &quot;평균&quot;, &quot;sqrtn&quot;및 &quot;합계&quot;가 지원되며 선형 모델의 기본값은 &quot;합계&quot;입니다. &quot;sqrtn&quot;은 특히 bag-of-words 열에서 우수한 정확도를 달성하는 경우가 많습니다.</target>
        </trans-unit>
        <trans-unit id="6d4f265c4bbc1a4d0af511c1ce80ce5ab3d2b5f0" translate="yes" xml:space="preserve">
          <source>A string specifying how to reduce if a categorical column is multivalent. One of &quot;mean&quot;, &quot;sqrtn&quot;, and &quot;sum&quot; -- these are effectively different ways to do example-level normalization, which can be useful for bag-of-words features. for more details, see &lt;code&gt;tf.feature_column.linear_model&lt;/code&gt;.</source>
          <target state="translated">범주 형 열이 다가 인 경우 줄이는 방법을 지정하는 문자열입니다. &quot;mean&quot;, &quot;sqrtn&quot;및 &quot;sum&quot;중 하나-이들은 예제 수준의 정규화를 수행하는 효과적인 다른 방법으로, bag-of-words 기능에 유용 할 수 있습니다. 자세한 내용은 &lt;code&gt;tf.feature_column.linear_model&lt;/code&gt; 을 참조 하세요 .</target>
        </trans-unit>
        <trans-unit id="7dd5e71fe7b4b73e92858e5c113149e88b05c0c7" translate="yes" xml:space="preserve">
          <source>A string specifying how to reduce if a categorical column is multivalent. One of &quot;mean&quot;, &quot;sqrtn&quot;, and &quot;sum&quot;.</source>
          <target state="translated">범주 형 열이 다가 인 경우 줄이는 방법을 지정하는 문자열입니다. &quot;mean&quot;, &quot;sqrtn&quot;및 &quot;sum&quot;중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="0dd6d33667b2b3c8739d44c1abe8de475745318d" translate="yes" xml:space="preserve">
          <source>A string specifying how to reduce if there are multiple entries in a single row for a non-sequence column. For more information, see &lt;a href=&quot;../../../../feature_column/embedding_column&quot;&gt;&lt;code&gt;tf.feature_column.embedding_column&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비 순차 열에 대해 단일 행에 여러 항목이있는 경우 줄이는 방법을 지정하는 문자열입니다. 자세한 내용은 &lt;a href=&quot;../../../../feature_column/embedding_column&quot;&gt; &lt;code&gt;tf.feature_column.embedding_column&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ad6868cb1082013cac31e380bb2de891098ebc9b" translate="yes" xml:space="preserve">
          <source>A string specifying how to reduce if there are multiple entries in a single row. Currently 'mean', 'sqrtn' and 'sum' are supported, with 'mean' the default. 'sqrtn' often achieves good accuracy, in particular with bag-of-words columns. Each of this can be thought as example level normalizations on the column. For more information, see &lt;code&gt;tf.embedding_lookup_sparse&lt;/code&gt;.</source>
          <target state="translated">단일 행에 여러 항목이있는 경우 축소 방법을 지정하는 문자열입니다. 현재 'mean', 'sqrtn'및 'sum'이 지원되며 기본값은 'mean'입니다. 'sqrtn'은 특히 bag-of-words 열에서 종종 우수한 정확도를 달성합니다. 이 각각은 열에 대한 예제 수준 정규화로 생각할 수 있습니다. 자세한 내용은 &lt;code&gt;tf.embedding_lookup_sparse&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2d2e848f6b91f43aabd9a13f8bbec2e95430a3b5" translate="yes" xml:space="preserve">
          <source>A string specifying how to reduce if there are multiple entries in a single row. Currently 'mean', 'sqrtn', 'sum' are supported, with 'mean' the default. 'sqrtn' often achieves good accuracy, in particular with bag-of-words columns. For more information, see &lt;a href=&quot;../../../nn/embedding_lookup_sparse&quot;&gt;&lt;code&gt;tf.nn.embedding_lookup_sparse&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">단일 행에 여러 항목이있는 경우 축소 방법을 지정하는 문자열입니다. 현재 'mean', 'sqrtn', 'sum'이 지원되며 기본값은 'mean'입니다. 'sqrtn'은 특히 bag-of-words 열에서 종종 우수한 정확도를 달성합니다. 자세한 내용은 &lt;a href=&quot;../../../nn/embedding_lookup_sparse&quot;&gt; &lt;code&gt;tf.nn.embedding_lookup_sparse&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c14ecc8b4cb6604980395440d496d1352aad5b89" translate="yes" xml:space="preserve">
          <source>A string specifying how to reduce the linear model if a categorical column is multivalent. One of &quot;mean&quot;, &quot;sqrtn&quot;, and &quot;sum&quot; -- these are effectively different ways to do example-level normalization, which can be useful for bag-of-words features. For more details, see &lt;code&gt;tf.feature_column.linear_model&lt;/code&gt;.</source>
          <target state="translated">범주 형 열이 다가 인 경우 선형 모델을 줄이는 방법을 지정하는 문자열입니다. &quot;mean&quot;, &quot;sqrtn&quot;및 &quot;sum&quot;중 하나-이들은 예제 수준의 정규화를 수행하는 효과적인 다른 방법으로, bag-of-words 기능에 유용 할 수 있습니다. 자세한 내용은 &lt;code&gt;tf.feature_column.linear_model&lt;/code&gt; 을 참조 하세요 .</target>
        </trans-unit>
        <trans-unit id="3834402a3c058365dd2c8da8d42e9c9d83fb0e2b" translate="yes" xml:space="preserve">
          <source>A string specifying job name the process belongs to and an integer specifying the task index the process belongs to in that job.</source>
          <target state="translated">프로세스가 속한 작업 이름을 지정하는 문자열과 해당 작업에서 프로세스가 속한 작업 인덱스를 지정하는 정수입니다.</target>
        </trans-unit>
        <trans-unit id="66c28eb5b9d98f24a13aa13bb2b39e3ae2753fdb" translate="yes" xml:space="preserve">
          <source>A string specifying job name the process belongs to and an integner specifying the task index the process belongs to in that job.</source>
          <target state="translated">프로세스가 속하는 작업 이름을 지정하는 문자열 및 프로세스가 해당 작업에 속하는 작업 색인을 지정하는 정수.</target>
        </trans-unit>
        <trans-unit id="570a90de1171a7d8e6762e3ecd1bfac99abfe1a1" translate="yes" xml:space="preserve">
          <source>A string specifying the partitioning strategy, relevant if &lt;code&gt;len(params) &amp;gt; 1&lt;/code&gt;. Currently &lt;code&gt;&quot;div&quot;&lt;/code&gt; and &lt;code&gt;&quot;mod&quot;&lt;/code&gt; are supported. Default is &lt;code&gt;&quot;mod&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;len(params) &amp;gt; 1&lt;/code&gt; 경우 관련된 분할 전략을 지정하는 문자열 입니다. 현재 &lt;code&gt;&quot;div&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;mod&quot;&lt;/code&gt; 가 지원됩니다. 기본값은 &lt;code&gt;&quot;mod&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3c8347783aa5d5f3ca542e68e6941dc02da95363" translate="yes" xml:space="preserve">
          <source>A string specifying the partitioning strategy, relevant if &lt;code&gt;len(params) &amp;gt; 1&lt;/code&gt;. Currently &lt;code&gt;&quot;div&quot;&lt;/code&gt; and &lt;code&gt;&quot;mod&quot;&lt;/code&gt; are supported. Default is &lt;code&gt;&quot;mod&quot;&lt;/code&gt;. See &lt;code&gt;tf.nn.embedding_lookup&lt;/code&gt; for more details.</source>
          <target state="translated">&lt;code&gt;len(params) &amp;gt; 1&lt;/code&gt; 경우 관련된 분할 전략을 지정하는 문자열 입니다. 현재 &lt;code&gt;&quot;div&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;mod&quot;&lt;/code&gt; 가 지원됩니다. 기본값은 &lt;code&gt;&quot;mod&quot;&lt;/code&gt; 입니다. 자세한 내용은 &lt;code&gt;tf.nn.embedding_lookup&lt;/code&gt; 을 참조하세요.</target>
        </trans-unit>
        <trans-unit id="c15289261513a2ca4c3542ba0d4cab2c0a30bbe5" translate="yes" xml:space="preserve">
          <source>A string specifying the partitioning strategy, relevant if &lt;code&gt;len(weights) &amp;gt; 1&lt;/code&gt;. Currently &lt;code&gt;&quot;div&quot;&lt;/code&gt; and &lt;code&gt;&quot;mod&quot;&lt;/code&gt; are supported. Default is &lt;code&gt;&quot;mod&quot;&lt;/code&gt;. See &lt;code&gt;tf.nn.embedding_lookup&lt;/code&gt; for more details.</source>
          <target state="translated">&lt;code&gt;len(weights) &amp;gt; 1&lt;/code&gt; 경우 관련된 분할 전략을 지정하는 문자열 입니다. 현재 &lt;code&gt;&quot;div&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;mod&quot;&lt;/code&gt; 가 지원됩니다. 기본값은 &lt;code&gt;&quot;mod&quot;&lt;/code&gt; 입니다. 자세한 내용은 &lt;code&gt;tf.nn.embedding_lookup&lt;/code&gt; 을 참조하세요.</target>
        </trans-unit>
        <trans-unit id="9827b52099da2a137c010d16484dca4fffc67f00" translate="yes" xml:space="preserve">
          <source>A string specifying the partitioning strategy. Currently &lt;code&gt;&quot;div&quot;&lt;/code&gt; and &lt;code&gt;&quot;mod&quot;&lt;/code&gt; are supported. Default is &lt;code&gt;&quot;div&quot;&lt;/code&gt;.</source>
          <target state="translated">파티셔닝 전략을 지정하는 문자열. 현재 &lt;code&gt;&quot;div&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;mod&quot;&lt;/code&gt; 가 지원됩니다. 기본값은 &lt;code&gt;&quot;div&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c27492ab3d3c7f294dd3938c975d07bfd96ec2d6" translate="yes" xml:space="preserve">
          <source>A string specifying the policy for how data should be processed by tf.data workers. Currently, the only supported value is &quot;parallel_epochs&quot;.</source>
          <target state="translated">tf.data 작업자가 데이터를 처리하는 방법에 대한 정책을 지정하는 문자열입니다. 현재 유일하게 지원되는 값은 &quot;parallel_epochs&quot;입니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
