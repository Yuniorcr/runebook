<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="nim">
    <body>
      <group id="nim">
        <trans-unit id="2e84aded15a4dce7fa32ff9274352ce415d6c1a7" translate="yes" xml:space="preserve">
          <source>See also &lt;em&gt;getCustomPragmaVal&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;getCustomPragmaVal&lt;/em&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="397e58039ec924dd88eae423221c59ae4164ec76" translate="yes" xml:space="preserve">
          <source>See also &lt;em&gt;hasCustomPragma&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;hasCustomPragma&lt;/em&gt; 참조&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="158612fe403e9ded24807d705a5e535f24b55b64" translate="yes" xml:space="preserve">
          <source>See also &lt;em&gt;repr&lt;/em&gt;, &lt;em&gt;lispRepr&lt;/em&gt;, and &lt;em&gt;astGenRepr&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;repr&lt;/em&gt; , &lt;em&gt;lispRepr&lt;/em&gt; 및 &lt;em&gt;astGenRepr&lt;/em&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1ec2854aa3891f1afbcabb78062c8a9bd4a052a2" translate="yes" xml:space="preserve">
          <source>See also &lt;em&gt;repr&lt;/em&gt;, &lt;em&gt;treeRepr&lt;/em&gt;, and &lt;em&gt;astGenRepr&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;repr&lt;/em&gt; , &lt;em&gt;treeRepr&lt;/em&gt; 및 &lt;em&gt;astGenRepr&lt;/em&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="597467af3eae67fa0e1bc983ecbd4275692c9f35" translate="yes" xml:space="preserve">
          <source>See also &lt;em&gt;repr&lt;/em&gt;, &lt;em&gt;treeRepr&lt;/em&gt;, and &lt;em&gt;lispRepr&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;repr&lt;/em&gt; , &lt;em&gt;treeRepr&lt;/em&gt; 및 &lt;em&gt;lispRepr&lt;/em&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1cd50ccb05e94d25f4e0618842ed1a7f8a06b947" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;apis&quot;&gt;API naming design&lt;/a&gt; document.</source>
          <target state="translated">&lt;a href=&quot;apis&quot;&gt;API 명명 설계&lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="371a87eafb4de078ff674d69a5a89c186532eb49" translate="yes" xml:space="preserve">
          <source>See also:</source>
          <target state="translated">또한보십시오:</target>
        </trans-unit>
        <trans-unit id="3d7e475eafff03633b5613857913d5e2c81acf97" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#allocShared0,Natural&quot;&gt;allocShared0&lt;/a&gt;.</source>
          <target state="translated">참조 : &lt;a href=&quot;#allocShared0,Natural&quot;&gt;allocShared0&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="843bda3db4712edbcd6b9df44e3a1feb2e04cf4f" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#templates-limitations-of-the-method-call-syntax&quot;&gt;Limitations of the method call syntax&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#templates-limitations-of-the-method-call-syntax&quot;&gt;메소드 호출 구문의 제한 사항&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="134288782bb5bcfc11c246b2fe53ceb3bd016399" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;db_odbc&quot;&gt;db_odbc&lt;/a&gt;, &lt;a href=&quot;db_postgres&quot;&gt;db_postgres&lt;/a&gt;, &lt;a href=&quot;db_mysql&quot;&gt;db_mysql&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;db_odbc&quot;&gt;db_odbc&lt;/a&gt; , &lt;a href=&quot;db_postgres&quot;&gt;db_postgres&lt;/a&gt; , &lt;a href=&quot;db_mysql&quot;&gt;db_mysql&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b602f00227041e32bbea05ec9419db9ca3913e68" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;db_odbc&quot;&gt;db_odbc&lt;/a&gt;, &lt;a href=&quot;db_sqlite&quot;&gt;db_sqlite&lt;/a&gt;, &lt;a href=&quot;db_mysql&quot;&gt;db_mysql&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;db_odbc&quot;&gt;db_odbc&lt;/a&gt; , &lt;a href=&quot;db_sqlite&quot;&gt;db_sqlite&lt;/a&gt; , &lt;a href=&quot;db_mysql&quot;&gt;db_mysql&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="552c1373b853f1fdc119ba44224e31ffef581dcc" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;db_odbc&quot;&gt;db_odbc&lt;/a&gt;, &lt;a href=&quot;db_sqlite&quot;&gt;db_sqlite&lt;/a&gt;, &lt;a href=&quot;db_postgres&quot;&gt;db_postgres&lt;/a&gt;.</source>
          <target state="translated">참조 : &lt;a href=&quot;db_odbc&quot;&gt;db_odbc&lt;/a&gt; , &lt;a href=&quot;db_sqlite&quot;&gt;db_sqlite&lt;/a&gt; ,&lt;a href=&quot;db_postgres&quot;&gt; db_postgres&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dfbc3119399a1e39fc0881eab1af3e49a07506f2" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;db_postgres&quot;&gt;db_postgres&lt;/a&gt;, &lt;a href=&quot;db_sqlite&quot;&gt;db_sqlite&lt;/a&gt;, &lt;a href=&quot;db_mysql&quot;&gt;db_mysql&lt;/a&gt;.</source>
          <target state="translated">참조 : &lt;a href=&quot;db_postgres&quot;&gt;db_postgres&lt;/a&gt; , &lt;a href=&quot;db_sqlite&quot;&gt;db_sqlite&lt;/a&gt; , &lt;a href=&quot;db_mysql&quot;&gt;db_mysql&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4a58566255fef7a43538068edfefb3c7c0ee78e5" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;https://en.wikipedia.org/wiki/Tz_database&quot;&gt;https://en.wikipedia.org/wiki/Tz_database&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;https://en.wikipedia.org/wiki/Tz_database&quot;&gt;https://en.wikipedia.org/wiki/Tz_database&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c3eba3f13e6bf5c937a14dc5157230a2d515628" translate="yes" xml:space="preserve">
          <source>See also: std/jsonutils for hookable json serialization/deserialization of arbitrary types.</source>
          <target state="translated">참조 : std / jsonutils for hookable json serialization / deserialization of random types.</target>
        </trans-unit>
        <trans-unit id="83a8d070c49fb8255855f33b2e12c71c19e06c7a" translate="yes" xml:space="preserve">
          <source>See also:ven</source>
          <target state="translated">참조 : ven</target>
        </trans-unit>
        <trans-unit id="7210897998bd22d53a943b0d63318de4e68e08ab" translate="yes" xml:space="preserve">
          <source>See source switch</source>
          <target state="translated">소스 스위치 참조</target>
        </trans-unit>
        <trans-unit id="c74e71336dab7a2e43161134901c59ee9ce8f85f" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://github.com/nim-lang/nimble#readme&quot;&gt;Nimble readme&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://github.com/nim-lang/nimble#readme&quot;&gt;Nimble readme&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9716956ee4c391a60ffca3d3606313d84f461c53" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;marshal&quot;&gt;marshal&lt;/a&gt; module for what this module allows you to do.</source>
          <target state="translated">참고 항목 &lt;a href=&quot;marshal&quot;&gt;정렬 화를&lt;/a&gt;이 모듈로 할 수있는 작업 모듈을 .</target>
        </trans-unit>
        <trans-unit id="f57cd1b91125ed2d0400600252552b0116de4292" translate="yes" xml:space="preserve">
          <source>See the docstring of &lt;a href=&quot;macros#getProjectPath&quot;&gt;macros.getProjectPath()&lt;/a&gt; for an example to see the distinction between the &lt;code&gt;currentSourcePath&lt;/code&gt; and &lt;code&gt;getProjectPath&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;currentSourcePath&lt;/code&gt; 와 &lt;code&gt;getProjectPath&lt;/code&gt; 간의 차이점을 확인하려면 &lt;a href=&quot;macros#getProjectPath&quot;&gt;macros.getProjectPath ()&lt;/a&gt; 의 문서 문자열 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="89337e668b6922f1b3b9fc80ddb86974a2724135" translate="yes" xml:space="preserve">
          <source>See the documentation of &lt;a href=&quot;#GC_ref,string&quot;&gt;GC_ref&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#GC_ref,string&quot;&gt;GC_ref&lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="81b8d3c2c7da851f8357605755ae3101cf8fc78b" translate="yes" xml:space="preserve">
          <source>See the documentation of Nim's soft realtime &lt;a href=&quot;gc&quot;&gt;GC&lt;/a&gt; for further information.</source>
          <target state="translated">Nim의 소프트 실시간 &lt;a href=&quot;gc&quot;&gt;GC&lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="979679f9f460fc6a468e14281d075338bc9b413e" translate="yes" xml:space="preserve">
          <source>See the following (incomplete) example:</source>
          <target state="translated">다음 (불완전한) 예를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b540b4bb5311d1c9ac20c8464b2f3e453e746bc3" translate="yes" xml:space="preserve">
          <source>See the following NimScript:</source>
          <target state="translated">다음 NimScript를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="387cfbde3ee86288c077827a6cc5c3f634db22fd" translate="yes" xml:space="preserve">
          <source>See top level documentation of this module about how &lt;code&gt;scanf&lt;/code&gt; works.</source>
          <target state="translated">&lt;code&gt;scanf&lt;/code&gt; 방법에 대해서는이 모듈의 최상위 문서를 참조하십시오 작동 방식 .</target>
        </trans-unit>
        <trans-unit id="b4985d545e511c0eae8a67fa27c39ad7147c0724" translate="yes" xml:space="preserve">
          <source>See top level documentation of this module about how &lt;code&gt;scanp&lt;/code&gt; works.</source>
          <target state="translated">&lt;code&gt;scanp&lt;/code&gt; 방법에 대해서는 이 모듈의 최상위 문서를 참조하십시오 작동 .</target>
        </trans-unit>
        <trans-unit id="cfc6b1de301d13380cf42ea2783acb39720a9bfd" translate="yes" xml:space="preserve">
          <source>See, e.g.:</source>
          <target state="translated">예 :</target>
        </trans-unit>
        <trans-unit id="f40b41a194a89e314ef14f7724b344a13e9f60fd" translate="yes" xml:space="preserve">
          <source>Selecting tests by pattern</source>
          <target state="translated">패턴별로 테스트 선택</target>
        </trans-unit>
        <trans-unit id="fbdf889d0c96e2cebf493cd851025778459db217" translate="yes" xml:space="preserve">
          <source>Self assignments</source>
          <target state="translated">자기 할당</target>
        </trans-unit>
        <trans-unit id="8b4bbec947651e93846e1abf0fd481f4163985c4" translate="yes" xml:space="preserve">
          <source>Semantic analysis recognizes and resolves the macro invocation.</source>
          <target state="translated">의미 론적 분석은 매크로 호출을 인식하고 해결합니다.</target>
        </trans-unit>
        <trans-unit id="1eac1ee1eb715372cc8a1c687d3bb54262fbae98" translate="yes" xml:space="preserve">
          <source>Semantic checking for 'parallel'.</source>
          <target state="translated">'병렬'에 대한 의미 검사.</target>
        </trans-unit>
        <trans-unit id="8b151e1603a3f30367c2b3cec9e424926a71b4e6" translate="yes" xml:space="preserve">
          <source>Semantically the same as &lt;code&gt;cmp(normalize($a), normalize($b))&lt;/code&gt;. It is just optimized to not allocate temporary strings. This should NOT be used to compare Nim identifier names. use &lt;code&gt;macros.eqIdent&lt;/code&gt; for that. Returns:</source>
          <target state="translated">의미 상 &lt;code&gt;cmp(normalize($a), normalize($b))&lt;/code&gt; 합니다. 임시 문자열을 할당하지 않도록 최적화되었습니다. Nim 식별자 이름을 비교하는 데 사용해서는 안됩니다. 이를 위해 &lt;code&gt;macros.eqIdent&lt;/code&gt; 를 사용 하십시오 . 보고:</target>
        </trans-unit>
        <trans-unit id="310483b902e72895f55c75452b18157642311c62" translate="yes" xml:space="preserve">
          <source>Semantically the same as &lt;code&gt;cmp(normalize($a), normalize($b))&lt;/code&gt;. It is just optimized to not allocate temporary strings. This should NOT be used to compare Nim identifier names. use &lt;em&gt;macros.eqIdent&lt;/em&gt; for that. Returns:</source>
          <target state="translated">의미 적으로 &lt;code&gt;cmp(normalize($a), normalize($b))&lt;/code&gt; 합니다. 임시 문자열을 할당하지 않도록 최적화되었습니다. Nim 식별자 이름을 비교하는 데 사용해서는 안됩니다. &lt;em&gt;macros.eqIdent&lt;/em&gt; 사용&lt;em&gt;&lt;/em&gt; 를 . 보고:</target>
        </trans-unit>
        <trans-unit id="fe3d9ff74577a0fd6e4f556727cc210a9ce9a387" translate="yes" xml:space="preserve">
          <source>Semantically the same as &lt;code&gt;cmp(normalize(a), normalize(b))&lt;/code&gt;. It is just optimized to not allocate temporary strings. This should NOT be used to compare Nim identifier names. Use &lt;a href=&quot;macros#eqIdent,string,string&quot;&gt;macros.eqIdent&lt;/a&gt; for that.</source>
          <target state="translated">의미 상 &lt;code&gt;cmp(normalize(a), normalize(b))&lt;/code&gt; 합니다. 임시 문자열을 할당하지 않도록 최적화되었습니다. Nim 식별자 이름을 비교하는 데 사용해서는 안됩니다. &lt;a href=&quot;macros#eqIdent,string,string&quot;&gt;이를&lt;/a&gt; 위해 macros.eqIdent 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="0c8a203644fa71ccfac204cf794cac43cb056bec" translate="yes" xml:space="preserve">
          <source>Semantically the same as &lt;code&gt;cmp(normalize(a), normalize(b))&lt;/code&gt;. It is just optimized to not allocate temporary strings. This should NOT be used to compare Nim identifier names. use &lt;em&gt;macros.eqIdent&lt;/em&gt; for that. Returns:</source>
          <target state="translated">의미 적으로 &lt;code&gt;cmp(normalize(a), normalize(b))&lt;/code&gt; 합니다. 임시 문자열을 할당하지 않도록 최적화되었습니다. Nim 식별자 이름을 비교하는 데 사용해서는 안됩니다. &lt;em&gt;macros.eqIdent&lt;/em&gt; 사용&lt;em&gt;&lt;/em&gt; 를 . 보고:</target>
        </trans-unit>
        <trans-unit id="35ee868f8885d37a97939546d68b678aa3fda4f4" translate="yes" xml:space="preserve">
          <source>Semantically this is the same as &lt;code&gt;pred&lt;/code&gt;.</source>
          <target state="translated">의미 적으로 이것은 &lt;code&gt;pred&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="6de77ffd37607ff9518c4f9e8e5386cd009439b2" translate="yes" xml:space="preserve">
          <source>Semantically very similar to &lt;em&gt;info&lt;/em&gt;, but meant to be messages you want to be actively notified about (depending on your application). These could be, for example, grouped by hour and mailed out.</source>
          <target state="translated">의미 상 &lt;em&gt;정보&lt;/em&gt; 와 매우 유사&lt;em&gt;&lt;/em&gt; 하지만 응용 프로그램에 따라 적극적으로 알림을 받으려는 메시지를 의미합니다. 예를 들어 시간별로 그룹화되어 발송 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="170573f174a216ca03d9ab682d5f2a88dc2b1d9e" translate="yes" xml:space="preserve">
          <source>Send a message to the server, and wait for a primary reply. &lt;code&gt;\c\L&lt;/code&gt; is added for you.</source>
          <target state="translated">서버에 메시지를 보내고 기본 응답을 기다립니다. &lt;code&gt;\c\L&lt;/code&gt; 이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="eb05c63ae79e85902bbf38dec3e22ba5659ec963" translate="yes" xml:space="preserve">
          <source>Sends &lt;code&gt;cmd&lt;/code&gt; on the socket connected to the SMTP server.</source>
          <target state="translated">SMTP 서버에 연결된 소켓에서 &lt;code&gt;cmd&lt;/code&gt; 를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="63217fdf9c05113069261bfb7f82b228cd9313a7" translate="yes" xml:space="preserve">
          <source>Sends &lt;code&gt;data&lt;/code&gt; to &lt;code&gt;socket&lt;/code&gt;. The returned future will complete once all data has been sent.</source>
          <target state="translated">&lt;code&gt;socket&lt;/code&gt; 에 &lt;code&gt;data&lt;/code&gt; 를 보냅니다 . 모든 데이터가 전송되면 반환 된 미래는 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="808586c92c7155d7aa45db302e4d798013a29d17" translate="yes" xml:space="preserve">
          <source>Sends &lt;code&gt;data&lt;/code&gt; to socket &lt;code&gt;sock&lt;/code&gt;. This is basically a nicer implementation of &lt;code&gt;sockets.sendAsync&lt;/code&gt;.</source>
          <target state="translated">소켓 &lt;code&gt;sock&lt;/code&gt; &lt;code&gt;data&lt;/code&gt; 를 보냅니다 . 이것은 기본적으로 &lt;code&gt;sockets.sendAsync&lt;/code&gt; 의 더 나은 구현입니다 .</target>
        </trans-unit>
        <trans-unit id="0f44cbe7038e29ec39697e4aee0dac9b82e51886" translate="yes" xml:space="preserve">
          <source>Sends &lt;code&gt;data&lt;/code&gt; to specified destination &lt;code&gt;saddr&lt;/code&gt;, using socket &lt;code&gt;socket&lt;/code&gt;. The returned future will complete once all data has been sent.</source>
          <target state="translated">소켓 &lt;code&gt;socket&lt;/code&gt; 사용하여 지정된 대상 &lt;code&gt;saddr&lt;/code&gt; 로 &lt;code&gt;data&lt;/code&gt; 를 보냅니다. . 모든 데이터가 전송되면 반환 된 미래는 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="a182e14ae39a6a6ff86eecf3bc70c0b36c727808" translate="yes" xml:space="preserve">
          <source>Sends &lt;code&gt;msg&lt;/code&gt; from &lt;code&gt;fromAddr&lt;/code&gt; to the addresses specified in &lt;code&gt;toAddrs&lt;/code&gt;. Messages may be formed using &lt;code&gt;createMessage&lt;/code&gt; by converting the Message into a string.</source>
          <target state="translated">&lt;code&gt;fromAddr&lt;/code&gt; 에서 &lt;code&gt;toAddrs&lt;/code&gt; 에 지정된 주소로 &lt;code&gt;msg&lt;/code&gt; 를 보냅니다 . &lt;code&gt;createMessage&lt;/code&gt; 를 사용하여 메시지를 구성 할 수 있습니다. 문자열로 변환하여 메시지.</target>
        </trans-unit>
        <trans-unit id="e5a27dce3f2a133605f9afba21dbcbe87d7d9e13" translate="yes" xml:space="preserve">
          <source>Sends &lt;code&gt;size&lt;/code&gt; bytes from &lt;code&gt;buf&lt;/code&gt; to &lt;code&gt;socket&lt;/code&gt;. The returned future will complete once all data has been sent.</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; 에서 &lt;code&gt;socket&lt;/code&gt; 로 &lt;code&gt;size&lt;/code&gt; 바이트를 보냅니다 . 모든 데이터가 전송되면 반환 된 미래는 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="9e7e96bcee9931f66ca2928c5b6efe5d36c93669" translate="yes" xml:space="preserve">
          <source>Sends a message to a thread. &lt;code&gt;msg&lt;/code&gt; is deeply copied.</source>
          <target state="translated">스레드에 메시지를 보냅니다. &lt;code&gt;msg&lt;/code&gt; 는 깊이 복사됩니다.</target>
        </trans-unit>
        <trans-unit id="1c025e36735a284a6113a0c92eca75e8debbc052" translate="yes" xml:space="preserve">
          <source>Sends a signal to a running process by calling &lt;code&gt;kill&lt;/code&gt;. Raise exception in case of failure e.g. process not running.</source>
          <target state="translated">&lt;code&gt;kill&lt;/code&gt; 을 호출하여 실행중인 프로세스에 신호를 보냅니다 . 실패한 경우 예외를 발생시킵니다 (예 : 프로세스가 실행되지 않음).</target>
        </trans-unit>
        <trans-unit id="01f065120e6e60bdc491ddc417a1b9c65f718648" translate="yes" xml:space="preserve">
          <source>Sends an AUTH command to the server to login as the &lt;code&gt;username&lt;/code&gt; using &lt;code&gt;password&lt;/code&gt;. May fail with ReplyError.</source>
          <target state="translated">&lt;code&gt;password&lt;/code&gt; 사용 하여 &lt;code&gt;username&lt;/code&gt; 으로 로그인하기 위해 서버에 AUTH 명령을 보냅니다 . ReplyError로 인해 실패 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="25ffc10d9cb8e1ef8e3b0a351837cdbdd813d092" translate="yes" xml:space="preserve">
          <source>Sends an AUTH command to the server to login as the &lt;em&gt;username&lt;/em&gt; using &lt;em&gt;password&lt;/em&gt;. May fail with ReplyError.</source>
          <target state="translated">&lt;em&gt;password를&lt;/em&gt; 사용 하여 &lt;em&gt;사용자 이름&lt;/em&gt; 으로 로그인하도록 AUTH 명령을 서버에 보냅니다 . ReplyError로 실패 할 수 있습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5ec0a390eca744b4e21d1c9faa664e07afa13bdd" translate="yes" xml:space="preserve">
          <source>Sends data to a socket.</source>
          <target state="translated">소켓으로 데이터를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="33ad671989ea5eac38ff7d3c0f12e1c1f50e5df6" translate="yes" xml:space="preserve">
          <source>Sends the specified headers to the requesting client.</source>
          <target state="translated">지정된 헤더를 요청 클라이언트로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="46a8a1dd73dbabd61f162180b0b42a38618f31fb" translate="yes" xml:space="preserve">
          <source>Seqs</source>
          <target state="translated">Seqs</target>
        </trans-unit>
        <trans-unit id="8403ac45ac059f2c8c6613c8df7a4c5dbe989f54" translate="yes" xml:space="preserve">
          <source>Seqs are no longer nil by default, but set and empty. Check for zero length instead.</source>
          <target state="translated">Seq는 더 이상 기본적으로 nil이 아니지만 설정되고 비어 있습니다. 대신 길이가 0인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="384e168993597f6718f5c31eb4b427bdccbb5664" translate="yes" xml:space="preserve">
          <source>Seqs can use &lt;code&gt;realloc&lt;/code&gt; in the implementation.</source>
          <target state="translated">Seq는 구현에서 &lt;code&gt;realloc&lt;/code&gt; 을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3074a16babd576481f6d30b0f45e8d125986e54b" translate="yes" xml:space="preserve">
          <source>Sequence variables are initialized with &lt;code&gt;@[]&lt;/code&gt;.</source>
          <target state="translated">시퀀스 변수는 &lt;code&gt;@[]&lt;/code&gt; 로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="13f83690e6aa5f38a2f0263c037f8aaafe1a56cd" translate="yes" xml:space="preserve">
          <source>Sequence: Apply expressions &lt;code&gt;A&lt;/code&gt;, ..., &lt;code&gt;Z&lt;/code&gt;, in this order, to consume consecutive portions of the text ahead, as long as they succeed. Indicate success if all succeeded. Otherwise do not consume any text and indicate failure. The sequence's precedence is higher than that of ordered choice: &lt;code&gt;A B / C&lt;/code&gt; means &lt;code&gt;(A B) / Z&lt;/code&gt; and not &lt;code&gt;A (B / Z)&lt;/code&gt;.</source>
          <target state="translated">순서 : &lt;code&gt;A&lt;/code&gt; , ..., &lt;code&gt;Z&lt;/code&gt; 표현식 을이 순서대로 적용 하여 성공하는 한 앞으로 텍스트의 연속적인 부분을 소비합니다. 모두 성공하면 성공을 나타냅니다. 그렇지 않으면 텍스트를 사용하지 않고 실패를 표시합니다. 시퀀스의 우선 순위는 정렬 된 선택보다 높습니다. &lt;code&gt;A B / C&lt;/code&gt; 는 &lt;code&gt;A (B / Z)&lt;/code&gt; 아니라 &lt;code&gt;(A B) / Z&lt;/code&gt; 의미 합니다.</target>
        </trans-unit>
        <trans-unit id="88178136525c6478718f7b2fc55007e115123eaa" translate="yes" xml:space="preserve">
          <source>Sequence: Apply expressions &lt;em&gt;A&lt;/em&gt;, ..., &lt;em&gt;Z&lt;/em&gt;, in this order, to consume consecutive portions of the text ahead, as long as they succeed. Indicate success if all succeeded. Otherwise do not consume any text and indicate failure. The sequence's precedence is higher than that of ordered choice: &lt;code&gt;A B / C&lt;/code&gt; means &lt;code&gt;(A B) / Z&lt;/code&gt; and not &lt;code&gt;A (B / Z)&lt;/code&gt;.</source>
          <target state="translated">시퀀스 : 표현식 &lt;em&gt;A&lt;/em&gt; , ..., &lt;em&gt;Z&lt;/em&gt; 를이 순서대로 적용 하여 텍스트가 성공하는 한 연속 된 텍스트 부분을 소비합니다. 모두 성공하면 성공을 나타냅니다. 그렇지 않으면 텍스트를 소비하지 않고 실패를 나타냅니다. 순서의 우선 순위는 순서대로 선택한 순서보다 높습니다. &lt;code&gt;A B / C&lt;/code&gt; 는 &lt;code&gt;A (B / Z)&lt;/code&gt; 아닌 &lt;code&gt;(A B) / Z&lt;/code&gt; 의미합니다. 합니다.</target>
        </trans-unit>
        <trans-unit id="b5fb636023abb67d347041d398442118f79ea091" translate="yes" xml:space="preserve">
          <source>Sequences</source>
          <target state="translated">Sequences</target>
        </trans-unit>
        <trans-unit id="0bc1ddda48aa18861bbd55aff84f335ccf39403e" translate="yes" xml:space="preserve">
          <source>Sequences and strings are implemented as pointers to resizeable buffers, but Nim requires copying for assignments. Apart from RTTI the compiler could generate copy procedures for any type that needs one. However, this would make the code bigger and the RTTI is likely already there for the GC.</source>
          <target state="translated">시퀀스와 문자열은 크기 조정 가능한 버퍼에 대한 포인터로 구현되지만 할당을 위해서는 복사가 필요합니다. RTTI 외에도 컴파일러는 필요한 모든 유형에 대해 복사 절차를 생성 할 수 있습니다. 그러나 이것은 코드를 더 크게 만들고 RTTI는 이미 GC에있을 가능성이 큽니다.</target>
        </trans-unit>
        <trans-unit id="5a52dd463d27a8ba5f3355a484a83258d1f51219" translate="yes" xml:space="preserve">
          <source>Sequences are always indexed with an &lt;code&gt;int&lt;/code&gt; starting at position 0. The &lt;a href=&quot;system#len,seq%5BT%5D&quot;&gt;len&lt;/a&gt;, &lt;a href=&quot;system#low&quot;&gt;low&lt;/a&gt; and &lt;a href=&quot;system#high&quot;&gt;high&lt;/a&gt; operations are available for sequences too. The notation &lt;code&gt;x[i]&lt;/code&gt; can be used to access the i-th element of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">시퀀스는 항상 위치 0에서 시작 하여 &lt;code&gt;int&lt;/code&gt; 로 색인 됩니다. &lt;a href=&quot;system#len,seq%5BT%5D&quot;&gt;len&lt;/a&gt; , &lt;a href=&quot;system#low&quot;&gt;low&lt;/a&gt; 및 &lt;a href=&quot;system#high&quot;&gt;high&lt;/a&gt; 연산도 시퀀스에 사용할 수 있습니다. 표기 &lt;code&gt;x[i]&lt;/code&gt; 액세스의 i 번째 요소 사용될 수 &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d57a688b0804db680b53148991bfaf47d165ac64" translate="yes" xml:space="preserve">
          <source>Sequences are similar to arrays but of dynamic length which may change during runtime (like strings). Sequences are implemented as growable arrays, allocating pieces of memory as items are added. A sequence &lt;code&gt;S&lt;/code&gt; is always indexed by integers from 0 to &lt;code&gt;len(S)-1&lt;/code&gt; and its bounds are checked. Sequences can be constructed by the array constructor &lt;code&gt;[]&lt;/code&gt; in conjunction with the array to sequence operator &lt;code&gt;@&lt;/code&gt;. Another way to allocate space for a sequence is to call the built-in &lt;code&gt;newSeq&lt;/code&gt; procedure.</source>
          <target state="translated">시퀀스는 배열과 비슷하지만 런타임 중에 문자열과 같이 변경 될 수있는 동적 길이입니다. 시퀀스는 확장 가능한 배열로 구현되어 항목이 추가 될 때 메모리 조각을 할당합니다. 시퀀스 &lt;code&gt;S&lt;/code&gt; 는 항상 0에서 &lt;code&gt;len(S)-1&lt;/code&gt; 까지의 정수로 색인화되며 그 경계가 점검됩니다. 배열 생성자 &lt;code&gt;[]&lt;/code&gt; 는 배열 연산자와 배열 연산자 &lt;code&gt;@&lt;/code&gt; 를 사용하여 시퀀스를 구성 할 수 있습니다 . 시퀀스를위한 공간을 할당하는 또 다른 방법은 내장 &lt;code&gt;newSeq&lt;/code&gt; 프로 시저 를 호출하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="f4caee0ce61eb9f9010da8278c6bb9819fd97bcc" translate="yes" xml:space="preserve">
          <source>Sequences are similar to arrays but of dynamic length which may change during runtime (like strings). Since sequences are resizable they are always allocated on the heap and garbage collected.</source>
          <target state="translated">시퀀스는 배열과 비슷하지만 런타임 중에 문자열과 같이 변경 될 수있는 동적 길이입니다. 시퀀스 크기를 조정할 수 있으므로 항상 힙에 할당되고 가비지 수집됩니다.</target>
        </trans-unit>
        <trans-unit id="de40162a10ac517da4c83478490320d176010324" translate="yes" xml:space="preserve">
          <source>Sequences can be constructed by the array constructor &lt;code&gt;[]&lt;/code&gt; in conjunction with the array to sequence operator &lt;code&gt;@&lt;/code&gt;. Another way to allocate space for a sequence is to call the built-in &lt;a href=&quot;system#newSeq&quot;&gt;newSeq&lt;/a&gt; procedure.</source>
          <target state="translated">배열 생성자 &lt;code&gt;[]&lt;/code&gt; 는 배열 연산자와 배열 연산자 &lt;code&gt;@&lt;/code&gt; 를 사용하여 시퀀스를 구성 할 수 있습니다 . 시퀀스를위한 공간을 할당하는 또 다른 방법은 내장 &lt;a href=&quot;system#newSeq&quot;&gt;newSeq&lt;/a&gt; 프로 시저 를 호출하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="b1a86d44e623c263eef82d8d046d86f56123addc" translate="yes" xml:space="preserve">
          <source>Serialization utilities for the compiler.</source>
          <target state="translated">컴파일러 용 직렬화 유틸리티.</target>
        </trans-unit>
        <trans-unit id="0206b2b50d1f9fdcd7cb32bb6c80e5cbafff1ba9" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;n&lt;/code&gt;'s &lt;code&gt;i&lt;/code&gt;'th child to &lt;code&gt;child&lt;/code&gt;.</source>
          <target state="translated">설정 &lt;code&gt;n&lt;/code&gt; 의 &lt;code&gt;i&lt;/code&gt; '으로 일 아이 &lt;code&gt;child&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="382013311d593d4fc5f3d775cc83027690f80d35" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;oneshot&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; if you want periodic notifications.</source>
          <target state="translated">정기적으로 알림을 &lt;code&gt;oneshot&lt;/code&gt; 을 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="ac3b3dbadd2d80926e6b2ef30c5d46cd3af98beb" translate="yes" xml:space="preserve">
          <source>Set PSK identity hint to use.</source>
          <target state="translated">사용할 PSK ID 힌트를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="6918c72f84d286d5af152ac4df6b4979ca60c30b" translate="yes" xml:space="preserve">
          <source>Set a checkpoint identified by &lt;code&gt;msg&lt;/code&gt;. Upon test failure all checkpoints encountered so far are printed out. Example:</source>
          <target state="translated">&lt;code&gt;msg&lt;/code&gt; 로 식별되는 체크 포인트를 설정합니다 . 테스트 실패시 지금까지 발견 된 모든 체크 포인트가 인쇄됩니다. 예:</target>
        </trans-unit>
        <trans-unit id="fca3a3f78708e6e8ef0a5fc9e87f9955562e0cf8" translate="yes" xml:space="preserve">
          <source>Set a checkpoint identified by &lt;em&gt;msg&lt;/em&gt;. Upon test failure all checkpoints encountered so far are printed out. Example:</source>
          <target state="translated">&lt;em&gt;msg로&lt;/em&gt; 식별되는 검사 점을 설정하십시오 . 테스트가 실패하면 지금까지 발생한 모든 검사 점이 인쇄됩니다. 예:</target>
        </trans-unit>
        <trans-unit id="bea824346555421d7b4f79726afe2253b1cb518f" translate="yes" xml:space="preserve">
          <source>Set a file length.</source>
          <target state="translated">파일 길이를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="81a080ecb577e6e5c45a07c970f01e7857c841c3" translate="yes" xml:space="preserve">
          <source>Set automatic curve selection.</source>
          <target state="translated">자동 곡선 선택을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="abb4da8f53976c10c6722300fc689b2d215c41e5" translate="yes" xml:space="preserve">
          <source>Set callback called when OpenSSL needs PSK (for client).</source>
          <target state="translated">OpenSSL에 PSK (클라이언트 용)가 필요할 때 호출되는 콜백을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="18edc59e062af37dea81ac6e186b07fd669cf629" translate="yes" xml:space="preserve">
          <source>Set callback called when OpenSSL needs PSK (for server).</source>
          <target state="translated">OpenSSL에 PSK (서버용)가 필요할 때 호출되는 콜백을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="15d3bae1ed60cc30cc6b1500349df3ea633d044d" translate="yes" xml:space="preserve">
          <source>Set complete status for exceptions indicated by &lt;code&gt;excepts&lt;/code&gt; according to the representation in the object pointed to by &lt;code&gt;flagp&lt;/code&gt;.</source>
          <target state="translated">예외 설정 완료 상태로 표시 &lt;code&gt;excepts&lt;/code&gt; 가 가리키는 객체의 표현에 따르면 &lt;code&gt;flagp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2eb3a86185513109bd4d845afe43667d09e37d7b" translate="yes" xml:space="preserve">
          <source>Set complete status for exceptions indicated by &lt;em&gt;excepts&lt;/em&gt; according to the representation in the object pointed to by &lt;em&gt;flagp&lt;/em&gt;.</source>
          <target state="translated">예외 설정 완료 상태로 표시 &lt;em&gt;excepts&lt;/em&gt; 가 가리키는 객체의 표현에 따르면 &lt;em&gt;, 깃대&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="33ac2bcee80b5462c33e07494b4201714806558a" translate="yes" xml:space="preserve">
          <source>Set event &lt;code&gt;ev&lt;/code&gt; to signaled state.</source>
          <target state="translated">이벤트 &lt;code&gt;ev&lt;/code&gt; 를 신호 상태로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="caab561e9360f5b03bbaa05a1412b0e6faa1a2d3" translate="yes" xml:space="preserve">
          <source>Set the SNI server name extension to be used in a client hello. Returns 1 if SNI was set, 0 if current SSL configuration doesn't support SNI.</source>
          <target state="translated">클라이언트 hello에 사용될 SNI 서버 이름 확장자를 설정하십시오. SNI가 설정된 경우 1을, 현재 SSL 구성이 SNI를 지원하지 않으면 0을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="ec2788dcf8be591ed6a7f6e6a23a5f17199035e0" translate="yes" xml:space="preserve">
          <source>Set the appropriate bit in the page descriptor indicating that the cell points to the start of a memory block.</source>
          <target state="translated">셀이 메모리 블록의 시작을 가리키는 것을 나타내는 페이지 디스크립터에서 적절한 비트를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="be778905c0bc766264b1775d017b7217e1afea98" translate="yes" xml:space="preserve">
          <source>Set the callback to be used on listening SSL connections when the client hello is received.</source>
          <target state="translated">클라이언트 hello가 수신 될 때 SSL 연결 청취에 사용될 콜백을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="0fac9ec3061f996fde74f3ca4daa0bf22a5f48f7" translate="yes" xml:space="preserve">
          <source>Set the length of a sequence</source>
          <target state="translated">시퀀스 길이 설정</target>
        </trans-unit>
        <trans-unit id="300fa407b8a8eb2c9e1e0d5cce10b34f6a8aba60" translate="yes" xml:space="preserve">
          <source>Set the pointer to be used in the callback registered to &lt;code&gt;SSL_CTX_set_tlsext_servername_callback&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SSL_CTX_set_tlsext_servername_callback&lt;/code&gt; 에 등록 된 콜백에 사용될 포인터를 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="facaeed5def5c1ec0d1296bc94bea17d9d9a94e4" translate="yes" xml:space="preserve">
          <source>Set the pragma of a proc type</source>
          <target state="translated">proc 유형의 pragma 설정</target>
        </trans-unit>
        <trans-unit id="522e420d1c78352cf170d6138c8c65441ff02374" translate="yes" xml:space="preserve">
          <source>Set the pragma of a proc type.</source>
          <target state="translated">proc 유형의 pragma를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="d9e622bfe4065b4d695f1cd50de3ac91dc21d615" translate="yes" xml:space="preserve">
          <source>Set the value of a property of name &lt;code&gt;field&lt;/code&gt; in a JsAssoc &lt;code&gt;obj&lt;/code&gt; to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">JsAssoc &lt;code&gt;obj&lt;/code&gt; 의 이름 &lt;code&gt;field&lt;/code&gt; 속성 값 을 &lt;code&gt;v&lt;/code&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="4dba09c0da0792f1505ac68737c4ff649b374a3e" translate="yes" xml:space="preserve">
          <source>Set the value of a property of name &lt;code&gt;field&lt;/code&gt; in a JsObject &lt;code&gt;obj&lt;/code&gt; to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">JsObject &lt;code&gt;obj&lt;/code&gt; 의 이름 &lt;code&gt;field&lt;/code&gt; 속성 값 을 &lt;code&gt;v&lt;/code&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="d39aea59047168d929f9e5b4e91f67157f32e9e7" translate="yes" xml:space="preserve">
          <source>Set the value of a property of name &lt;em&gt;field&lt;/em&gt; in a JsAssoc &lt;em&gt;obj&lt;/em&gt; to &lt;em&gt;v&lt;/em&gt;.</source>
          <target state="translated">JsAssoc &lt;em&gt;obj&lt;/em&gt; 에서 name &lt;em&gt;필드&lt;/em&gt; 의 특성 값 을 &lt;em&gt;v로 설정하십시오&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3db21d69f3f8485742c0994bd2b4a1ac360b9852" translate="yes" xml:space="preserve">
          <source>Set the value of a property of name &lt;em&gt;field&lt;/em&gt; in a JsObject &lt;em&gt;obj&lt;/em&gt; to &lt;em&gt;v&lt;/em&gt;.</source>
          <target state="translated">JsObject &lt;em&gt;obj&lt;/em&gt; 에서 name &lt;em&gt;필드&lt;/em&gt; 의 특성 값 을 &lt;em&gt;v로 설정하십시오&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7c89896e70c07f25f58ea2d7af836ca00841398d" translate="yes" xml:space="preserve">
          <source>Set this error handler to override the existing behaviour on an unhandled exception.</source>
          <target state="translated">처리되지 않은 예외에 대한 기존 동작을 재정의하려면이 오류 처리기를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="feefe4f2978826c8b8835a8eb4fe929b3b887914" translate="yes" xml:space="preserve">
          <source>Set this to influence how mkDir, rmDir, rmFile etc. behave</source>
          <target state="translated">mkDir, rmDir, rmFile 등이 작동하는 방식에 영향을 미치도록 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0b58454d8d9fe8a045cc25d39f64cc3339f13034" translate="yes" xml:space="preserve">
          <source>Set this variable to provide a procedure that should be called in case of an &lt;code&gt;unhandle exception&lt;/code&gt; event. The standard handler writes an error message and terminates the program, except when using &lt;code&gt;--os:any&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;unhandle exception&lt;/code&gt; 이벤트의 경우 호출해야하는 프로 시저를 제공하려면이 변수를 설정하십시오 . 표준 핸들러는 &lt;code&gt;--os:any&lt;/code&gt; 를 사용하는 경우를 제외하고 오류 메시지를 작성하고 프로그램을 종료합니다 .</target>
        </trans-unit>
        <trans-unit id="7a301eea8886c2633248758a938de4b6f0a30a5a" translate="yes" xml:space="preserve">
          <source>Set this variable to provide a procedure that should be called in case of an &lt;span id=&quot;out-of-memory_1&quot;&gt;out of memory&lt;/span&gt; event. The standard handler writes an error message and terminates the program.</source>
          <target state="translated">&lt;span id=&quot;out-of-memory_1&quot;&gt;메모리 부족&lt;/span&gt; 이벤트 &lt;span id=&quot;out-of-memory_1&quot;&gt;의&lt;/span&gt; 경우 호출해야하는 프로 시저를 제공하려면이 변수를 설정하십시오 . 표준 핸들러는 오류 메시지를 작성하고 프로그램을 종료합니다.</target>
        </trans-unit>
        <trans-unit id="cc77a1d3da71ce9d8ef7a90a239ccce2678cbecf" translate="yes" xml:space="preserve">
          <source>Set to true in order to quit immediately on fail. Default is false, unless the &lt;code&gt;NIMTEST_ABORT_ON_ERROR&lt;/code&gt; environment variable is set for the non-js target.</source>
          <target state="translated">실패시 즉시 종료하려면 true로 설정하십시오. &lt;code&gt;NIMTEST_ABORT_ON_ERROR&lt;/code&gt; 환경 변수가 j 가 아닌 대상에 설정되어 있지 않으면 기본값은 false 입니다.</target>
        </trans-unit>
        <trans-unit id="6ba8a4e35c2ca993f0910108377e4d4052112de4" translate="yes" xml:space="preserve">
          <source>Set type</source>
          <target state="translated">세트 타입</target>
        </trans-unit>
        <trans-unit id="d47b4981fdc7a2eb1fbb4b1bc20247ad446b37e9" translate="yes" xml:space="preserve">
          <source>Set whether a socket is inheritable by child processes. Returns &lt;code&gt;true&lt;/code&gt; on success.</source>
          <target state="translated">소켓이 자식 프로세스에서 상속 가능한지 여부를 설정합니다. 성공하면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="2ab262f44dfc9e1ee8adf98c1aa64de34434fa83" translate="yes" xml:space="preserve">
          <source>Sets</source>
          <target state="translated">Sets</target>
        </trans-unit>
        <trans-unit id="1a97ca6df4b28df8fec73620143ea23188bf9ac3" translate="yes" xml:space="preserve">
          <source>Sets a Nim compiler command line switch, for example &lt;code&gt;switch(&quot;checks&quot;, &quot;on&quot;)&lt;/code&gt;.</source>
          <target state="translated">Nim 컴파일러 명령 줄 스위치를 설정합니다 &lt;code&gt;switch(&quot;checks&quot;, &quot;on&quot;)&lt;/code&gt; 예 : switch ( &quot;checks&quot;, &quot;on&quot;)) .</target>
        </trans-unit>
        <trans-unit id="2b58a2dc522a6a8ba321f78fee1a6c388a06c415" translate="yes" xml:space="preserve">
          <source>Sets a callback on &lt;code&gt;future&lt;/code&gt; which raises an exception if the future finished with an error.</source>
          <target state="translated">&lt;code&gt;future&lt;/code&gt; 에 콜백을 설정 하여 미래에 오류가 발생한 경우 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="f18cddf82c447234efe959bdba8cc636037f06fc" translate="yes" xml:space="preserve">
          <source>Sets a configuration 'key' like 'gcc.options.always' to its value.</source>
          <target state="translated">'gcc.options.always'와 같은 구성 '키'를 해당 값으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="d46a344c3d7a8738543b24b1f6ba63ae6f78fe53" translate="yes" xml:space="preserve">
          <source>Sets a cookie.</source>
          <target state="translated">쿠키를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="03eec28dff51fe39b759a8188816472d0c23101b" translate="yes" xml:space="preserve">
          <source>Sets a field from a &lt;code&gt;JObject&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JObject&lt;/code&gt; 에서 필드를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="7e9befb4cdae1e6823e43dc2c6ff05a4d14679a4" translate="yes" xml:space="preserve">
          <source>Sets a field from a &lt;em&gt;JObject&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;JObject&lt;/em&gt; 로부터 필드를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="64c9c676dcf700abc6d6aeae9f425050fe86b71a" translate="yes" xml:space="preserve">
          <source>Sets a field of &lt;code&gt;x&lt;/code&gt;; &lt;code&gt;x&lt;/code&gt; represents an object or a tuple.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 의 필드를 설정합니다 . &lt;code&gt;x&lt;/code&gt; 는 객체 또는 튜플을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d4330fd231f5baba2eff5e0be59951b63b8986b5" translate="yes" xml:space="preserve">
          <source>Sets an assertion failure handler that will intercept any assert statements following &lt;code&gt;onFailedAssert&lt;/code&gt; in the current module scope.</source>
          <target state="translated">현재 모듈 범위에서 &lt;code&gt;onFailedAssert&lt;/code&gt; 다음에 오는 모든 assert 문을 가로 챌 어설 션 실패 핸들러를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="ec9850c80890ceba2abbf806a1f610eb26626643" translate="yes" xml:space="preserve">
          <source>Sets an assertion failure handler that will intercept any assert statements following &lt;em&gt;onFailedAssert&lt;/em&gt; in the current module scope.</source>
          <target state="translated">현재 모듈 범위에서 &lt;em&gt;onFailedAssert&lt;/em&gt; 다음에 &lt;em&gt;오는&lt;/em&gt; 어설 션 문을 가로 챌 어설 션 실패 처리기를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="e7653e6b7bc64f3b13394c7cdb660c7b34887d53" translate="yes" xml:space="preserve">
          <source>Sets are often used to define a type for the &lt;em&gt;flags&lt;/em&gt; of a procedure. This is a cleaner (and type safe) solution than defining integer constants that have to be &lt;code&gt;or&lt;/code&gt;'ed together.</source>
          <target state="translated">세트는 종종 프로 시저 의 &lt;em&gt;플래그&lt;/em&gt; 유형을 정의하는 데 사용됩니다 . 이 있어야 정의 정수 상수보다 클리너 (입력 금고) 솔루션 &lt;code&gt;or&lt;/code&gt; 함께 에드 '.</target>
        </trans-unit>
        <trans-unit id="c2d72ef2dff8a1ecfc77b14fb5fb6845b0292abd" translate="yes" xml:space="preserve">
          <source>Sets are often used to define a type for the &lt;em&gt;flags&lt;/em&gt; of a procedure. This is a much cleaner (and type safe) solution than just defining integer constants that should be &lt;code&gt;or&lt;/code&gt;'ed together.</source>
          <target state="translated">세트는 종종 프로 시저 &lt;em&gt;플래그&lt;/em&gt; 의 유형을 정의하는 데 사용됩니다 . 이것은 함께 &lt;code&gt;or&lt;/code&gt; 함께 정수 상수를 정의하는 것보다 훨씬 깨끗하고 안전한 솔루션 입니다.</target>
        </trans-unit>
        <trans-unit id="b1196a7636e138500281b6029122d47c3358474c" translate="yes" xml:space="preserve">
          <source>Sets blocking mode on socket</source>
          <target state="translated">소켓에서 차단 모드를 설정합니다</target>
        </trans-unit>
        <trans-unit id="5a2f39b3a6fa12685dce4cec4aebd5a5a8e594a6" translate="yes" xml:space="preserve">
          <source>Sets blocking mode on socket.</source>
          <target state="translated">소켓에서 차단 모드를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="13d87b8c2a64eaf422ebe52b694323f1b95af950" translate="yes" xml:space="preserve">
          <source>Sets can be constructed via the set constructor: &lt;code&gt;{}&lt;/code&gt; is the empty set. The empty set is type compatible with any concrete set type. The constructor can also be used to include elements (and ranges of elements):</source>
          <target state="translated">세트 생성자를 통해 세트를 구성 할 수 있습니다. &lt;code&gt;{}&lt;/code&gt; 은 빈 세트입니다. 빈 세트는 모든 콘크리트 세트 유형과 호환되는 유형입니다. 생성자를 사용하여 요소 (및 요소 범위)를 포함 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c70ba56414b5c4f667e41bd0273c23bf52416e2" translate="yes" xml:space="preserve">
          <source>Sets file access and modification times.</source>
          <target state="translated">파일 액세스 및 수정 시간을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="7c204196126cdd879acd680d24d30aaf38839f0b" translate="yes" xml:space="preserve">
          <source>Sets function that returns PSK based on the client identity.</source>
          <target state="translated">클라이언트 ID를 기반으로 PSK를 반환하는 함수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="100097d058008ef76ad407d5cedae724ee7a4479" translate="yes" xml:space="preserve">
          <source>Sets function that returns the client identity and the PSK based on identity hint from the server.</source>
          <target state="translated">서버의 ID 힌트를 기반으로 클라이언트 ID 및 PSK를 반환하는 기능을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="593b179784d31587e9e35012a25f04eecb3bc779" translate="yes" xml:space="preserve">
          <source>Sets in object variants are not supported.</source>
          <target state="translated">객체 변형의 세트는 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dabb4963a555ba7124e0874b5417cee4a3363cf2" translate="yes" xml:space="preserve">
          <source>Sets option &lt;code&gt;opt&lt;/code&gt; to a boolean value specified by &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">옵션 &lt;code&gt;opt&lt;/code&gt; 를 value로 지정된 부울 값으로 설정 &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d93dc7806a4b8aafc058121c889d01e9bc9e1010" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;file&lt;/code&gt;'s last modification time. &lt;code&gt;OSError&lt;/code&gt; is raised in case of an error.</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt; 의 마지막 수정 시간을 설정합니다 . 오류가 발생하면 &lt;code&gt;OSError&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f9b2940d72b32b640ab2b037c4f1cddaddf0cde2" translate="yes" xml:space="preserve">
          <source>Sets the &lt;em&gt;file&lt;/em&gt;'s last modification time. &lt;em&gt;OSError&lt;/em&gt; is raised in case of an error.</source>
          <target state="translated">&lt;em&gt;파일&lt;/em&gt; 의 마지막 수정 시간을 설정합니다 . 오류가 발생하면 &lt;em&gt;OSError&lt;/em&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d5b26cbb49c30f67f96de9649314db27310c4bbd" translate="yes" xml:space="preserve">
          <source>Sets the &lt;span id=&quot;current-working-directory_2&quot;&gt;current working directory&lt;/span&gt;; &lt;code&gt;OSError&lt;/code&gt; is raised if &lt;code&gt;newDir&lt;/code&gt; cannot been set.</source>
          <target state="translated">&lt;span id=&quot;current-working-directory_2&quot;&gt;현재 작업 디렉토리를&lt;/span&gt; 설정합니다 . &lt;code&gt;newDir&lt;/code&gt; 을 설정할 수 없으면 &lt;code&gt;OSError&lt;/code&gt; 가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="b83f8f862eba6356a93ce6941ee575f1de05800f" translate="yes" xml:space="preserve">
          <source>Sets the &lt;span id=&quot;current-working-directory_2&quot;&gt;current working directory&lt;/span&gt;; &lt;em&gt;OSError&lt;/em&gt; is raised if &lt;em&gt;newDir&lt;/em&gt; cannot been set.</source>
          <target state="translated">&lt;span id=&quot;current-working-directory_2&quot;&gt;현재 작업 디렉토리를&lt;/span&gt; 설정합니다 . &lt;em&gt;newDir을&lt;/em&gt; 설정할 수 없으면 &lt;em&gt;OSError&lt;/em&gt; 가 발생합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="37f5e53f3803952f681635d49b1492116ff1a455" translate="yes" xml:space="preserve">
          <source>Sets the Key value of the specified Section.</source>
          <target state="translated">지정된 섹션의 키 값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="00b3ac21b4fd8f490fe4405f83f8b1b7115c9557" translate="yes" xml:space="preserve">
          <source>Sets the Nim command that should be continued with after this Nimscript has finished.</source>
          <target state="translated">이 Nimscript가 완료된 후 계속되어야하는 Nim 명령을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="96ae2a7cbffbe18e4ea0603b2fb2dc4c766990e6" translate="yes" xml:space="preserve">
          <source>Sets the associated text with the node &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="translated">노드 &lt;code&gt;n&lt;/code&gt; 과 연관된 텍스트를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="87abeb99d41327c00d41131c2b1df7d7eff1e0f8" translate="yes" xml:space="preserve">
          <source>Sets the attributes belonging to &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; 에 속하는 속성을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="708b4b6c9e0d57db94c6183596576ff0bc92cff2" translate="yes" xml:space="preserve">
          <source>Sets the bindparam at the specified paramIndex to null (default behaviour by sqlite).</source>
          <target state="translated">지정된 paramIndex의 bindparam을 null로 설정합니다 (sqlite의 기본 동작).</target>
        </trans-unit>
        <trans-unit id="a8e8f8486f8b126f04c244b5acc79c545422b032" translate="yes" xml:space="preserve">
          <source>Sets the callback proc to be called when data was placed inside the future stream.</source>
          <target state="translated">데이터가 향후 스트림 내에 배치 될 때 호출 될 콜백 proc을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="dfd402f8b29e8041ffa26bd2e46cfccf9560e819" translate="yes" xml:space="preserve">
          <source>Sets the callback proc to be called when the future completes.</source>
          <target state="translated">향후 완료시 콜백 proc이 호출되도록 설정합니다.</target>
        </trans-unit>
        <trans-unit id="053c02a4b2979fae406022db5d3a29ef87bfa829" translate="yes" xml:space="preserve">
          <source>Sets the client data of &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; 의 클라이언트 데이터를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="c9ae06bd0984f0293128986a81092db8a14511a6" translate="yes" xml:space="preserve">
          <source>Sets the current exception.</source>
          <target state="translated">현재 예외를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="f9e8db12df8976898c3683af93e2ef63aa759ecb" translate="yes" xml:space="preserve">
          <source>Sets the encoding of a database connection, returns &lt;code&gt;true&lt;/code&gt; for success, &lt;code&gt;false&lt;/code&gt; for failure.</source>
          <target state="translated">데이터베이스 연결의 인코딩을 설정하고 성공하면 &lt;code&gt;false&lt;/code&gt; 를, 실패 하면 false 를 반환 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2bd9d81344500b645186c4c243c4d7737df7028e" translate="yes" xml:space="preserve">
          <source>Sets the encoding of a database connection, returns true for success, false for failure. result = set_character_set(connection, encoding) == 0</source>
          <target state="translated">데이터베이스 연결의 인코딩을 설정하고 성공하면 true를, 실패하면 false를 반환합니다. 결과 = set_character_set (연결, 인코딩) == 0</target>
        </trans-unit>
        <trans-unit id="f49eaca1bc9584314490407c09115be8bfb3c3f8" translate="yes" xml:space="preserve">
          <source>Sets the file permissions for &lt;code&gt;filename&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;filename&lt;/code&gt; 에 대한 파일 권한을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="391f6c97e26be0460151a1c2c219741f098813a9" translate="yes" xml:space="preserve">
          <source>Sets the float value of &lt;code&gt;x&lt;/code&gt;. &lt;code&gt;x&lt;/code&gt; needs to represent some float.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 의 부동 소수점 값을 설정합니다 . &lt;code&gt;x&lt;/code&gt; 는 일부 부동 소수점을 나타내야합니다.</target>
        </trans-unit>
        <trans-unit id="9a160c5f28384ff8d9cb2001fe120c533b9f14fa" translate="yes" xml:space="preserve">
          <source>Sets the global log filter.</source>
          <target state="translated">글로벌 로그 필터를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0767527cb84f2c78c768c161ec01249708d5c674" translate="yes" xml:space="preserve">
          <source>Sets the header entries associated with &lt;code&gt;key&lt;/code&gt; to the specified list of values. Replaces any existing values.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 와 연관된 헤더 항목 을 지정된 값 목록으로 설정합니다. 기존 값을 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="40dc1f7f5fdb7181bdc36917f48448e2fa2ec3e5" translate="yes" xml:space="preserve">
          <source>Sets the header entries associated with &lt;code&gt;key&lt;/code&gt; to the specified list of values. Replaces any existing values. If &lt;code&gt;value&lt;/code&gt; is empty, deletes the header entries associated with &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 와 관련된 헤더 항목 을 지정된 값 목록으로 설정합니다. 기존 값을 바꿉니다. &lt;code&gt;value&lt;/code&gt; 이 비어 있으면 &lt;code&gt;key&lt;/code&gt; 와 관련된 헤더 항목을 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="30775b9da4f687e49b7ce056c05167e372e5d957" translate="yes" xml:space="preserve">
          <source>Sets the header entries associated with &lt;code&gt;key&lt;/code&gt; to the specified value. Replaces any existing values.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 와 연관된 헤더 항목 을 지정된 값으로 설정합니다. 기존 값을 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="9d7d565e294c74c7f76daa93a38c7d68240d9e2d" translate="yes" xml:space="preserve">
          <source>Sets the identity hint passed to server.</source>
          <target state="translated">서버에 전달 된 아이디 힌트를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="283156a6acb8bcd0d3e8b5763450930bdd971e22" translate="yes" xml:space="preserve">
          <source>Sets the integer value of &lt;code&gt;x&lt;/code&gt;. &lt;code&gt;x&lt;/code&gt; needs to represent some integer, a bool, a char, an enum or a small enough bit set.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 의 정수 값을 설정합니다 . &lt;code&gt;x&lt;/code&gt; 는 정수, bool, char, enum 또는 충분히 작은 비트 세트를 나타내야합니다.</target>
        </trans-unit>
        <trans-unit id="65c031fc2aef4a7634f8667fdab309ba78debf9d" translate="yes" xml:space="preserve">
          <source>Sets the length of seq &lt;code&gt;s&lt;/code&gt; to &lt;code&gt;newlen&lt;/code&gt;. &lt;code&gt;T&lt;/code&gt; may be any sequence type.</source>
          <target state="translated">seq &lt;code&gt;s&lt;/code&gt; 길이 를 &lt;code&gt;newlen&lt;/code&gt; 으로 설정합니다 . &lt;code&gt;T&lt;/code&gt; 는 임의의 시퀀스 유형일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="20f23eec24dcbddba7ff082688b7f63dd1279b55" translate="yes" xml:space="preserve">
          <source>Sets the length of string &lt;code&gt;s&lt;/code&gt; to &lt;code&gt;newlen&lt;/code&gt;.</source>
          <target state="translated">문자열 &lt;code&gt;s&lt;/code&gt; 의 길이 를 &lt;code&gt;newlen&lt;/code&gt; 으로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="63216137bbdf91e172a311486c6a23efc82fd37a" translate="yes" xml:space="preserve">
          <source>Sets the maximum thread pool size. The default value of this is &lt;code&gt;MaxThreadPoolSize&lt;/code&gt; (256).</source>
          <target state="translated">최대 스레드 풀 크기를 설정합니다. 기본값은 &lt;code&gt;MaxThreadPoolSize&lt;/code&gt; (256)입니다.</target>
        </trans-unit>
        <trans-unit id="e644dada578b6273b65d62f42aaa1f250d5acbce" translate="yes" xml:space="preserve">
          <source>Sets the minimum thread pool size. The default value of this is 4.</source>
          <target state="translated">최소 스레드 풀 크기를 설정합니다. 기본값은 4입니다.</target>
        </trans-unit>
        <trans-unit id="8f334452b5bc32c96c49c5d94ce21f49fb0c33f3" translate="yes" xml:space="preserve">
          <source>Sets the pointer value of &lt;code&gt;x&lt;/code&gt;. &lt;code&gt;x&lt;/code&gt; needs to be of kind &lt;code&gt;akString&lt;/code&gt;, &lt;code&gt;akCString&lt;/code&gt;, &lt;code&gt;akProc&lt;/code&gt;, &lt;code&gt;akRef&lt;/code&gt;, &lt;code&gt;akPtr&lt;/code&gt;, &lt;code&gt;akPointer&lt;/code&gt;, &lt;code&gt;akSequence&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 의 포인터 값을 설정합니다 . &lt;code&gt;x&lt;/code&gt; 는 &lt;code&gt;akString&lt;/code&gt; , &lt;code&gt;akCString&lt;/code&gt; , &lt;code&gt;akProc&lt;/code&gt; , &lt;code&gt;akRef&lt;/code&gt; , &lt;code&gt;akPtr&lt;/code&gt; , &lt;code&gt;akPointer&lt;/code&gt; , &lt;code&gt;akSequence&lt;/code&gt; 종류 여야 합니다.</target>
        </trans-unit>
        <trans-unit id="8a91595f35711ee7f00ee522840ce4142db46774" translate="yes" xml:space="preserve">
          <source>Sets the position &lt;code&gt;pos&lt;/code&gt; of the stream &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">스트림 &lt;code&gt;s&lt;/code&gt; 의 위치 &lt;code&gt;pos&lt;/code&gt; 를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="cde44825811fc9045b3cdcbd8dc04231770b2041" translate="yes" xml:space="preserve">
          <source>Sets the position of the file pointer that is used for read/write operations. The file's first byte has the index zero.</source>
          <target state="translated">읽기 / 쓰기 작업에 사용되는 파일 포인터의 위치를 ​​설정합니다. 파일의 첫 번째 바이트의 인덱스는 0입니다.</target>
        </trans-unit>
        <trans-unit id="0fb9989a950b0e97dd640d33ad6e061cff645cb0" translate="yes" xml:space="preserve">
          <source>Sets the session id context in which a session can be reused. Used for permitting clients to reuse a session id instead of doing a new handshake.</source>
          <target state="translated">세션을 재사용 할 수있는 세션 ID 컨텍스트를 설정합니다. 클라이언트가 새 핸드 셰이크를 수행하는 대신 세션 ID를 재사용하도록 허용하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6868a1443664ffdc67c5bea377269ba80d173e4a" translate="yes" xml:space="preserve">
          <source>Sets the string value of &lt;code&gt;x&lt;/code&gt;. &lt;code&gt;x&lt;/code&gt; needs to represent a string.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 의 문자열 값을 설정합니다 . &lt;code&gt;x&lt;/code&gt; 는 문자열을 나타내야합니다.</target>
        </trans-unit>
        <trans-unit id="7c0c53853dd91b5ff6ed1242c0964339f8370c92" translate="yes" xml:space="preserve">
          <source>Sets the string value of a string literal or comment. Setting &lt;code&gt;strVal&lt;/code&gt; is disallowed for &lt;code&gt;nnkIdent&lt;/code&gt; and &lt;code&gt;nnkSym&lt;/code&gt; nodes; a new node must be created using &lt;code&gt;ident&lt;/code&gt; or &lt;code&gt;bindSym&lt;/code&gt; instead.</source>
          <target state="translated">문자열 리터럴 또는 주석의 문자열 값을 설정합니다. 설정 &lt;code&gt;strVal&lt;/code&gt; 이 허용되지 않는 &lt;code&gt;nnkIdent&lt;/code&gt; 및 &lt;code&gt;nnkSym&lt;/code&gt; 노드; 대신 &lt;code&gt;ident&lt;/code&gt; 또는 &lt;code&gt;bindSym&lt;/code&gt; 을 사용하여 새 노드를 만들어야합니다 .</target>
        </trans-unit>
        <trans-unit id="2e8f9cfb17018c1aa33989b3c068d0134beadcc0" translate="yes" xml:space="preserve">
          <source>Sets the tag name of &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; 의 태그 이름을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="8fa087f6ec74e4f8bac3289c0ce3118bb4dac0ff" translate="yes" xml:space="preserve">
          <source>Sets the terminal style.</source>
          <target state="translated">터미널 스타일을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="e624588f393759507f3613c629e6df9eaa251266" translate="yes" xml:space="preserve">
          <source>Sets the terminal's background color.</source>
          <target state="translated">터미널의 배경색을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="ba839ae8690b617da587c686a5f041a1f15dd58c" translate="yes" xml:space="preserve">
          <source>Sets the terminal's background true color.</source>
          <target state="translated">단말기의 배경 트루 컬러를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="692d91dc53c987f088c17432a09d05df33286dc2" translate="yes" xml:space="preserve">
          <source>Sets the terminal's cursor to the (x,y) position. (0,0) is the upper left of the screen.</source>
          <target state="translated">터미널 커서를 (x, y) 위치로 설정합니다. (0,0)은 화면의 왼쪽 상단입니다.</target>
        </trans-unit>
        <trans-unit id="3a93a60c09c9561641755272688e52a0376880fe" translate="yes" xml:space="preserve">
          <source>Sets the terminal's cursor to the x position. The y position is not changed.</source>
          <target state="translated">터미널의 커서를 x ​​위치로 설정합니다. y 위치는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4b5b2e99977b2a5492673f05761bcdb029825663" translate="yes" xml:space="preserve">
          <source>Sets the terminal's cursor to the y position. The x position is not changed. &lt;strong&gt;Warning&lt;/strong&gt;: This is not supported on UNIX!</source>
          <target state="translated">터미널 커서를 y 위치로 설정합니다. x 위치는 변경되지 않습니다. &lt;strong&gt;경고&lt;/strong&gt; : 이것은 UNIX에서 지원되지 않습니다!</target>
        </trans-unit>
        <trans-unit id="33d6e610d0a3c1c7ea14e8ff71649b85e0821381" translate="yes" xml:space="preserve">
          <source>Sets the terminal's foreground color.</source>
          <target state="translated">터미널의 전경색을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="2b7fb45a7a27531e9ca1ac031875d00590ed7793" translate="yes" xml:space="preserve">
          <source>Sets the terminal's foreground true color.</source>
          <target state="translated">터미널의 전경색을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="7714c61c3f3d9f772b2ea45c02e8bc9a858ba006" translate="yes" xml:space="preserve">
          <source>Sets the unsigned integer value of &lt;code&gt;c&lt;/code&gt;. &lt;code&gt;c&lt;/code&gt; needs to represent an unsigned integer.</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; 의 부호없는 정수 값을 설정합니다 . &lt;code&gt;c&lt;/code&gt; 는 부호없는 정수를 나타내야합니다.</target>
        </trans-unit>
        <trans-unit id="96a201b3a7b43a80f0b306f8984a4b564246e81c" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;span id=&quot;environment-variable_2&quot;&gt;environment variable&lt;/span&gt; named &lt;code&gt;key&lt;/code&gt; to &lt;code&gt;val&lt;/code&gt;. If an error occurs, &lt;code&gt;OSError&lt;/code&gt; is raised.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 라는 &lt;span id=&quot;environment-variable_2&quot;&gt;환경 변수&lt;/span&gt; 의 값 을 &lt;code&gt;val&lt;/code&gt; 로 설정 합니다. 오류가 발생하면 &lt;code&gt;OSError&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="91482f1b5393b325da785c74a1abd16ee7cfe6ca" translate="yes" xml:space="preserve">
          <source>Sets the value of the environment variable named &lt;code&gt;key&lt;/code&gt; to &lt;code&gt;val&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 라는 환경 변수의 값 을 &lt;code&gt;val&lt;/code&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="58b128f1f1dfd81080ace41d9a53a79e98c77e32" translate="yes" xml:space="preserve">
          <source>Setter for backward compatibility.</source>
          <target state="translated">이전 버전과의 호환성을위한 세터입니다.</target>
        </trans-unit>
        <trans-unit id="2409ea624ba698b2734c243a9f2d2956dda21e7e" translate="yes" xml:space="preserve">
          <source>Setter for the &lt;code&gt;handleWrite&lt;/code&gt; event.</source>
          <target state="translated">&lt;code&gt;handleWrite&lt;/code&gt; 이벤트의 세터입니다 .</target>
        </trans-unit>
        <trans-unit id="eeb75e5fb3034090080da9d3f3fa70dd0de9be87" translate="yes" xml:space="preserve">
          <source>Setting the optional argument &lt;code&gt;isSorted&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; (default: false) uses a faster algorithm for deduplication.</source>
          <target state="translated">선택적 인수 &lt;code&gt;isSorted&lt;/code&gt; 를 &lt;code&gt;true&lt;/code&gt; (기본값 : false)로 설정하면 중복 제거에 더 빠른 알고리즘이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7655e5151bc276acbf89d38beaab125af1057fee" translate="yes" xml:space="preserve">
          <source>Setup code to be executed when Unix signals are received. The currently handled signal is injected as &lt;code&gt;sig&lt;/code&gt; into the calling scope.</source>
          <target state="translated">유닉스 신호가 수신 될 때 실행되는 설정 코드. 현재 처리 된 신호는 호출 범위에 &lt;code&gt;sig&lt;/code&gt; 로 주입됩니다 .</target>
        </trans-unit>
        <trans-unit id="5d92c2e8b2137b358d6e0cee27dc8213007e445f" translate="yes" xml:space="preserve">
          <source>Severity:</source>
          <target state="translated">Severity:</target>
        </trans-unit>
        <trans-unit id="4438d5cf2b81bdd383ce9074e1f2ffceafc43c3c" translate="yes" xml:space="preserve">
          <source>ShadowIdent</source>
          <target state="translated">ShadowIdent</target>
        </trans-unit>
        <trans-unit id="50d0d8dd11a959484cb838e05c14b2e51b64c68d" translate="yes" xml:space="preserve">
          <source>Shared</source>
          <target state="translated">Shared</target>
        </trans-unit>
        <trans-unit id="b9aac6edcd9fccee278d1d720b29ecfb0939f38d" translate="yes" xml:space="preserve">
          <source>Shared global compiletime state</source>
          <target state="translated">공유 전역 컴파일 타임 상태</target>
        </trans-unit>
        <trans-unit id="28dc378515622329465eaea75a1dd093caa6b12c" translate="yes" xml:space="preserve">
          <source>Shared list support.</source>
          <target state="translated">공유 목록 지원</target>
        </trans-unit>
        <trans-unit id="e93d86b822e12c4d9ce33d7af413f341c5867140" translate="yes" xml:space="preserve">
          <source>Shared table support for Nim. Use plain old non GC'ed keys and values or you'll be in trouble. Uses a single lock to protect the table, lockfree implementations welcome but if lock contention is so high that you need a lockfree hash table, you're doing it wrong.</source>
          <target state="translated">Nim에 대한 공유 테이블 지원 GC가 아닌 일반 키와 값을 사용하면 문제가 발생할 수 있습니다. 단일 잠금을 사용하여 테이블을 보호하고 잠금이없는 구현은 환영하지만 잠금 경합이 너무 커서 잠금이없는 해시 테이블이 필요한 경우 잘못하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="b35c274554cb71995ed14f23d6a3ebbd411eedd0" translate="yes" xml:space="preserve">
          <source>Shift left</source>
          <target state="translated">왼쪽으로 이동</target>
        </trans-unit>
        <trans-unit id="fabc59d4bb0fcca4f5c29efed7b54ba8d94597bf" translate="yes" xml:space="preserve">
          <source>Shift right</source>
          <target state="translated">오른쪽으로 이동</target>
        </trans-unit>
        <trans-unit id="ec91193d5f88e5c879887f1193cd72ef6a694d25" translate="yes" xml:space="preserve">
          <source>Shifts right by pushing copies of the leftmost bit in from the left, and let the rightmost bits fall off.</source>
          <target state="translated">가장 왼쪽 비트의 사본을 왼쪽에서 밀어 오른쪽으로 이동하고 가장 오른쪽 비트가 떨어지도록합니다.</target>
        </trans-unit>
        <trans-unit id="05a85db16fbdbc68d6790c4c1c6d2377589785de" translate="yes" xml:space="preserve">
          <source>Short description of Nim's modules</source>
          <target state="translated">님의 모듈에 대한 간단한 설명</target>
        </trans-unit>
        <trans-unit id="3aea3a391a6ebfd7b559fa27a009254bdee9654e" translate="yes" xml:space="preserve">
          <source>Short notation for:</source>
          <target state="translated">다음에 대한 짧은 표기법 :</target>
        </trans-unit>
        <trans-unit id="743a8a6e42afa971c5a91d25f2e7366f89c05bd6" translate="yes" xml:space="preserve">
          <source>Short options: &lt;code&gt;-abcd&lt;/code&gt;, &lt;code&gt;-e:5&lt;/code&gt;, &lt;code&gt;-e=5&lt;/code&gt;</source>
          <target state="translated">짧은 옵션 : &lt;code&gt;-abcd&lt;/code&gt; , &lt;code&gt;-e:5&lt;/code&gt; , &lt;code&gt;-e=5&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b40ffe9db9b97f7227d428a8e93cd1910e5bd51" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;?(a *(b a))&lt;/code&gt;. Usually used for separators.</source>
          <target state="translated">&lt;code&gt;?(a *(b a))&lt;/code&gt; 바로 가기입니다 . 일반적으로 구분 기호에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0fea2072669df686bfd29fd3b1504df5061432af" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;?(a +(b a))&lt;/code&gt;. Usually used for separators.</source>
          <target state="translated">&lt;code&gt;?(a +(b a))&lt;/code&gt; 바로 가기입니다 . 일반적으로 구분 기호에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="61df98e646d471f3cc81f21594a081645c57fc92" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;add(c, frmt % args)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;add(c, frmt % args)&lt;/code&gt; 바로 가기입니다 .</target>
        </trans-unit>
        <trans-unit id="cb96e2c575443083f6d3ddc0cd31cddbe58784dd" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;toHex(x, T.sizeOf * 2)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;toHex(x, T.sizeOf * 2)&lt;/code&gt; 바로 가기</target>
        </trans-unit>
        <trans-unit id="b499ef59274dc3e29d9adbbb60da1c24ad6345a4" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;toHex(x, T.sizeof * 2)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;toHex(x, T.sizeof * 2)&lt;/code&gt; 단축키</target>
        </trans-unit>
        <trans-unit id="7cec7bed372aa4a41fea0fb2576ec1b87b806cd2" translate="yes" xml:space="preserve">
          <source>Shortcut for creating a new proc.</source>
          <target state="translated">새로운 proc 생성을위한 바로 가기.</target>
        </trans-unit>
        <trans-unit id="fa1ae7780b692f2aaef2766e9852e76ffbe8210c" translate="yes" xml:space="preserve">
          <source>Shortcut version of &lt;code&gt;isSorted&lt;/code&gt; that uses &lt;code&gt;system.cmp[T]&lt;/code&gt; as the comparison function.</source>
          <target state="translated">비교 함수로 &lt;code&gt;system.cmp[T]&lt;/code&gt; 를 사용 하는 &lt;code&gt;isSorted&lt;/code&gt; 의 바로 가기 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="bb63d12819e214026ee21353c5d02f05e9e25f1e" translate="yes" xml:space="preserve">
          <source>Shortcut version of &lt;code&gt;sort&lt;/code&gt; that uses &lt;code&gt;system.cmp[T]&lt;/code&gt; as the comparison function.</source>
          <target state="translated">비교 함수로 &lt;code&gt;system.cmp[T]&lt;/code&gt; 를 사용 하는 &lt;code&gt;sort&lt;/code&gt; 바로 가기 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="0d8ef09c46a3c98b8065e38b53fd2b5f4a51c3b6" translate="yes" xml:space="preserve">
          <source>Shortcut version of &lt;code&gt;sorted&lt;/code&gt; that uses &lt;code&gt;system.cmp[T]&lt;/code&gt; as the comparison function.</source>
          <target state="translated">비교 함수로 &lt;code&gt;system.cmp[T]&lt;/code&gt; 를 사용 하는 &lt;code&gt;sorted&lt;/code&gt; 의 바로 가기 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="4f9539002b86530179421f52fa92949ef36aae77" translate="yes" xml:space="preserve">
          <source>Shortcut version to assign in let blocks. Example:</source>
          <target state="translated">let 블록에 할당 할 바로 가기 버전입니다. 예:</target>
        </trans-unit>
        <trans-unit id="7f2812564b5e2e84d2a67a63d392d651dcda3d10" translate="yes" xml:space="preserve">
          <source>Shorthand for &lt;code&gt;dt.inZone(local())&lt;/code&gt;.</source>
          <target state="translated">대한 속기 &lt;code&gt;dt.inZone(local())&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="088f96652b3ac9c5f1a3b23e8ff7e823708ee634" translate="yes" xml:space="preserve">
          <source>Shorthand for &lt;code&gt;dt.inZone(utc())&lt;/code&gt;.</source>
          <target state="translated">대한 속기 &lt;code&gt;dt.inZone(utc())&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7cc17510fc204a22966fffd1886072211dea19a4" translate="yes" xml:space="preserve">
          <source>Shorthand for &lt;code&gt;getTime().local&lt;/code&gt;.</source>
          <target state="translated">대한 속기 &lt;code&gt;getTime().local&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ccefd273539ba57e397a1a987afc4b367d6fd0cb" translate="yes" xml:space="preserve">
          <source>Shorthand for &lt;code&gt;t.inZone(local())&lt;/code&gt;.</source>
          <target state="translated">대한 속기 &lt;code&gt;t.inZone(local())&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d38209d424b19a4a50f30394d53391f0377fef8" translate="yes" xml:space="preserve">
          <source>Shorthand for &lt;code&gt;t.inZone(utc())&lt;/code&gt;.</source>
          <target state="translated">대한 속기 &lt;code&gt;t.inZone(utc())&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6166daff0169e3dc89cc83eb9c8606a8a6917a8d" translate="yes" xml:space="preserve">
          <source>Shorthand for constructing a &lt;code&gt;TimeFormat&lt;/code&gt; and using it to format &lt;code&gt;dt&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TimeFormat&lt;/code&gt; 을 구성하고 &lt;code&gt;dt&lt;/code&gt; 형식을 지정하는 데 사용 하는 축약 형입니다 .</target>
        </trans-unit>
        <trans-unit id="f394b42391f134971c4fd4caf836bd1af83856ed" translate="yes" xml:space="preserve">
          <source>Shorthand for constructing a &lt;code&gt;TimeFormat&lt;/code&gt; and using it to format &lt;code&gt;time&lt;/code&gt;. Will use the timezone specified by &lt;code&gt;zone&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TimeFormat&lt;/code&gt; 을 구성하고 &lt;code&gt;time&lt;/code&gt; 형식을 지정하는 데 사용 하는 축약 형입니다 . &lt;code&gt;zone&lt;/code&gt; 에 지정된 시간대를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="719276957fc6ed6b9a172fd432c232dc57b61097" translate="yes" xml:space="preserve">
          <source>Shorthand for constructing a &lt;code&gt;TimeFormat&lt;/code&gt; and using it to parse &lt;code&gt;input&lt;/code&gt; as a &lt;code&gt;DateTime&lt;/code&gt;, then converting it a &lt;code&gt;Time&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TimeFormat&lt;/code&gt; 을 구성하고 이를 사용하여 &lt;code&gt;input&lt;/code&gt; 을 &lt;code&gt;DateTime&lt;/code&gt; 으로 구문 분석 한 다음이를 &lt;code&gt;Time&lt;/code&gt; 으로 변환하기 위한 속기입니다 .</target>
        </trans-unit>
        <trans-unit id="634ede6a595bd79a1f089d455148e4b9e1b829dc" translate="yes" xml:space="preserve">
          <source>Shorthand for constructing a &lt;code&gt;TimeFormat&lt;/code&gt; and using it to parse &lt;code&gt;input&lt;/code&gt; as a &lt;code&gt;DateTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TimeFormat&lt;/code&gt; 을 구성하고 &lt;code&gt;input&lt;/code&gt; 을 &lt;code&gt;DateTime&lt;/code&gt; 으로 구문 분석하는 데 사용 하는 축약 형입니다 .</target>
        </trans-unit>
        <trans-unit id="eb112f6069236175255e5aa766ddfdc15d8e83fa" translate="yes" xml:space="preserve">
          <source>Should be unique per-application to prevent clients from malfunctioning.</source>
          <target state="translated">클라이언트의 오작동을 방지하려면 응용 프로그램별로 고유해야합니다.</target>
        </trans-unit>
        <trans-unit id="0a88a0a1d83dbc4654c51021948189560a75286b" translate="yes" xml:space="preserve">
          <source>Shows global variables declarations.</source>
          <target state="translated">전역 변수 선언을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="0e16604c6fe1879f13dbc7c436126fd3ae0ebb67" translate="yes" xml:space="preserve">
          <source>Shows the cursor.</source>
          <target state="translated">커서를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="5ddc127fefceccd7916455147b0c6cd1bfd5eb59" translate="yes" xml:space="preserve">
          <source>Shows when the C compiler is called.</source>
          <target state="translated">C 컴파일러가 호출 된시기를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="1b60798c2099f20f0f2535d3a19340f650249fbc" translate="yes" xml:space="preserve">
          <source>Shuffles a sequence of elements in-place using the given state.</source>
          <target state="translated">주어진 상태를 사용하여 일련의 요소를 제자리에서 섞습니다.</target>
        </trans-unit>
        <trans-unit id="be96c883ecd1172cbfc91d4eca65e877ffa5a561" translate="yes" xml:space="preserve">
          <source>Shuffles a sequence of elements in-place.</source>
          <target state="translated">일련의 요소를 제자리에서 섞습니다.</target>
        </trans-unit>
        <trans-unit id="f6c115494f631d2990f8ccceca9c4ac7e1743d1c" translate="yes" xml:space="preserve">
          <source>SigHash:</source>
          <target state="translated">SigHash:</target>
        </trans-unit>
        <trans-unit id="8b3d8d665a765918b70a3f5f0378d51df00b92dd" translate="yes" xml:space="preserve">
          <source>Sign</source>
          <target state="translated">Sign</target>
        </trans-unit>
        <trans-unit id="d4b65152ddd9ed727a5b974dbd925dbf2cede700" translate="yes" xml:space="preserve">
          <source>Sign function.</source>
          <target state="translated">사인 기능.</target>
        </trans-unit>
        <trans-unit id="65a4950085292c6592af7d8392c4038e653ea152" translate="yes" xml:space="preserve">
          <source>Sign function. Returns -1 for negative numbers and &lt;em&gt;NegInf&lt;/em&gt;, 1 for positive numbers and &lt;em&gt;Inf&lt;/em&gt;, and 0 for positive zero, negative zero and &lt;em&gt;NaN&lt;/em&gt;.</source>
          <target state="translated">부호 기능. -1을 리턴하고 음수 대 &lt;em&gt;NegInf&lt;/em&gt; , 양수 및 1 &lt;em&gt;Inf를&lt;/em&gt; , 0 포지티브 제로 부의 제로위한 &lt;em&gt;NaN이&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="8831fa9078748ee02f2347f5d90c34f992582819" translate="yes" xml:space="preserve">
          <source>Signal handling in Nim</source>
          <target state="translated">Nim의 신호 처리</target>
        </trans-unit>
        <trans-unit id="6495d8aeb6d6604ef079f31f632c7e8bc79fe7eb" translate="yes" xml:space="preserve">
          <source>Signed 16 bit integer type.</source>
          <target state="translated">부호있는 16 비트 정수 유형입니다.</target>
        </trans-unit>
        <trans-unit id="ade94dc0ec03404943258fee69d3635d0a915f85" translate="yes" xml:space="preserve">
          <source>Signed 32 bit integer type.</source>
          <target state="translated">부호있는 32 비트 정수 유형.</target>
        </trans-unit>
        <trans-unit id="c655157d6edb14b496ef6ec67249a979210a45c5" translate="yes" xml:space="preserve">
          <source>Signed 64 bit integer type.</source>
          <target state="translated">부호있는 64 비트 정수 유형입니다.</target>
        </trans-unit>
        <trans-unit id="b02c63d9ae34fa9dbe045d2bf0a9ad8f43c7c8cf" translate="yes" xml:space="preserve">
          <source>Signed 8 bit integer type.</source>
          <target state="translated">부호있는 8 비트 정수 유형.</target>
        </trans-unit>
        <trans-unit id="7b53e8317a2be593c00e2288d20119694e47fff1" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#fastRows.i,DbConn,SqlQuery,varargs%5Bstring,%5D&quot;&gt;fastRows iterator&lt;/a&gt; but returns a handle that can be used to get column text on demand using &lt;code&gt;[]&lt;/code&gt;. Returned handle is valid only within the iterator body.</source>
          <target state="translated">&lt;a href=&quot;#fastRows.i,DbConn,SqlQuery,varargs%5Bstring,%5D&quot;&gt;fastRows 반복기&lt;/a&gt; 와 유사 하지만 &lt;code&gt;[]&lt;/code&gt; 를 사용하여 요청시 열 텍스트를 가져 오는 데 사용할 수있는 핸들을 반환합니다 . 반환 된 핸들은 반복기 본문 내에서만 유효합니다.</target>
        </trans-unit>
        <trans-unit id="c8272e5fe5bd54b658c2b49b74dfdc92bb711c1d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#fastRows.i,DbConn,SqlQuery,varargs%5Bstring,%5D&quot;&gt;fastRows iterator&lt;/a&gt;, but slower and safe.</source>
          <target state="translated">&lt;a href=&quot;#fastRows.i,DbConn,SqlQuery,varargs%5Bstring,%5D&quot;&gt;fastRows iterator&lt;/a&gt; 와 유사 하지만 느리고 안전합니다.</target>
        </trans-unit>
        <trans-unit id="4915bf05bba90db2df07eeb6cf1012b453bc0dfb" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#gorge,string,string,string&quot;&gt;gorge&lt;/a&gt; but also returns the precious exit code.</source>
          <target state="translated">유사 &lt;a href=&quot;#gorge,string,string,string&quot;&gt;계곡&lt;/a&gt; 뿐만 아니라 귀중한 종료 코드를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="292a12d3e71f75031b1c6b16614af47b6a79f416" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#instantRows.i,DbConn,SqlQuery,varargs%5Bstring,%5D&quot;&gt;instantRows iterator&lt;/a&gt;, but sets information about columns to &lt;code&gt;columns&lt;/code&gt;.</source>
          <target state="translated">유사 &lt;a href=&quot;#instantRows.i,DbConn,SqlQuery,varargs%5Bstring,%5D&quot;&gt;instantRows 반복자&lt;/a&gt; 에 열에 대한,하지만 세트 정보를 &lt;code&gt;columns&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65a36d122cc877a21da0c599e24846ea87562a05" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;assert&lt;/code&gt; but is always turned on regardless of &lt;code&gt;--assertions&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;assert&lt;/code&gt; 와 유사 하지만 &lt;code&gt;--assertions&lt;/code&gt; 와 관계없이 항상 켜져 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd15e6abde428958f8d56e6928b10e64dad75239" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;map&lt;/code&gt;, with the difference that the &lt;code&gt;callback&lt;/code&gt; returns an &lt;code&gt;Option&lt;/code&gt;, not a raw value. This allows multiple procs with a signature of &lt;code&gt;A -&amp;gt; Option[B]&lt;/code&gt; to be chained together.</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; 과 유사 하지만 &lt;code&gt;callback&lt;/code&gt; 이 원시 값이 아닌 &lt;code&gt;Option&lt;/code&gt; 을 반환 한다는 차이점이 있습니다. 이를 통해 &lt;code&gt;A -&amp;gt; Option[B]&lt;/code&gt; 의 시그니처를 가진 여러 프로세스를 함께 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f006508366ff589e263e35089658634396886e2b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;recvLine&lt;/code&gt; but designed for non-blocking sockets.</source>
          <target state="translated">&lt;code&gt;recvLine&lt;/code&gt; 과 유사 하지만 비 차단 소켓 용으로 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="3088f8f41c176a8c6c078dcbb7290cd8f5dcfe1d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;write&lt;/code&gt;, but treating terminal style arguments specially. When some argument is &lt;code&gt;Style&lt;/code&gt;, &lt;code&gt;set[Style]&lt;/code&gt;, &lt;code&gt;ForegroundColor&lt;/code&gt;, &lt;code&gt;BackgroundColor&lt;/code&gt; or &lt;code&gt;TerminalCmd&lt;/code&gt; then it is not sent directly to &lt;code&gt;f&lt;/code&gt;, but instead corresponding terminal style proc is called.</source>
          <target state="translated">유사 &lt;code&gt;write&lt;/code&gt; ,하지만 특별히 터미널 스타일의 인수를 치료. 일부 인수가 &lt;code&gt;Style&lt;/code&gt; , &lt;code&gt;set[Style]&lt;/code&gt; , &lt;code&gt;ForegroundColor&lt;/code&gt; , &lt;code&gt;BackgroundColor&lt;/code&gt; 또는 &lt;code&gt;TerminalCmd&lt;/code&gt; 이면 &lt;code&gt;f&lt;/code&gt; 로 직접 전송되지 않고 대신 해당 터미널 스타일 proc이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="775c84deb7fd1acce89cc09f380ce7f83b7c3680" translate="yes" xml:space="preserve">
          <source>Similar to POSIX's &lt;span id=&quot;getpeername_1&quot;&gt;getpeername&lt;/span&gt;</source>
          <target state="translated">POSIX의 &lt;span id=&quot;getpeername_1&quot;&gt;getpeername과&lt;/span&gt; 유사&lt;span id=&quot;getpeername_1&quot;&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9112c6f819f5ac3102803b1b46b40279bc4dc6e4" translate="yes" xml:space="preserve">
          <source>Similar to POSIX's &lt;span id=&quot;getsockname_1&quot;&gt;getsockname&lt;/span&gt;.</source>
          <target state="translated">POSIX의 &lt;span id=&quot;getsockname_1&quot;&gt;getsockname과&lt;/span&gt; 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="a943ce20a0f9601994a3e46ff6cc4ac4f303120c" translate="yes" xml:space="preserve">
          <source>Similar to prettyprint in Python.</source>
          <target state="translated">Python의 prettyprint와 유사합니다.</target>
        </trans-unit>
        <trans-unit id="d2e693268581eb85ccb9d912d8123a5c262ce9d5" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;a href=&quot;#filter,openArray%5BT%5D,proc(T)&quot;&gt;filter proc&lt;/a&gt;, but modifies the sequence directly.</source>
          <target state="translated">&lt;a href=&quot;#filter,openArray%5BT%5D,proc(T)&quot;&gt;필터 proc&lt;/a&gt; 과 유사 하지만 시퀀스를 직접 수정합니다.</target>
        </trans-unit>
        <trans-unit id="d23f8837af17d948ac41ffcd02bd63cca20c677c" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;a href=&quot;#foreign-function-interface-importc-pragma&quot;&gt;importc pragma for C&lt;/a&gt;, the &lt;code&gt;importcpp&lt;/code&gt; pragma can be used to import &lt;span id=&quot;cplusplus_2&quot;&gt;C++&lt;/span&gt; methods or C++ symbols in general. The generated code then uses the C++ method calling syntax: &lt;code&gt;obj-&amp;gt;method(arg)&lt;/code&gt;. In combination with the &lt;code&gt;header&lt;/code&gt; and &lt;code&gt;emit&lt;/code&gt; pragmas this allows &lt;em&gt;sloppy&lt;/em&gt; interfacing with libraries written in C++:</source>
          <target state="translated">받는 유사 &lt;a href=&quot;#foreign-function-interface-importc-pragma&quot;&gt;C에 대한 importc 프라그&lt;/a&gt; 의 &lt;code&gt;importcpp&lt;/code&gt; 의 pragma는 가져올 수 있습니다 &lt;span id=&quot;cplusplus_2&quot;&gt;C ++&lt;/span&gt; 일반적으로 방법 또는 C ++ 문자. 그런 다음 생성 된 코드는 C ++ 메소드 호출 구문 &lt;code&gt;obj-&amp;gt;method(arg)&lt;/code&gt; 합니다. 와 결합 &lt;code&gt;header&lt;/code&gt; 및 &lt;code&gt;emit&lt;/code&gt; 프라 그마이 수 &lt;em&gt;정치 못한&lt;/em&gt; C ++로 작성된 라이브러리와 인터페이스를 :</target>
        </trans-unit>
        <trans-unit id="f0db59dc951868b6d9e5ad7d56c503fc95dfe4f0" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;a href=&quot;#foreign-function-interface-importc-pragma&quot;&gt;importc pragma for C&lt;/a&gt;, the &lt;code&gt;importobjc&lt;/code&gt; pragma can be used to import &lt;span id=&quot;objective-c_2&quot;&gt;Objective C&lt;/span&gt; methods. The generated code then uses the Objective C method calling syntax: &lt;code&gt;[obj method param1: arg]&lt;/code&gt;. In addition with the &lt;code&gt;header&lt;/code&gt; and &lt;code&gt;emit&lt;/code&gt; pragmas this allows &lt;em&gt;sloppy&lt;/em&gt; interfacing with libraries written in Objective C:</source>
          <target state="translated">받는 유사 &lt;a href=&quot;#foreign-function-interface-importc-pragma&quot;&gt;C 대 importc 프라그&lt;/a&gt; 상기 &lt;code&gt;importobjc&lt;/code&gt; 래그를 가져올 수있다 &lt;span id=&quot;objective-c_2&quot;&gt;목표 C의&lt;/span&gt; 방법. 그런 다음 생성 된 코드는 Objective C 메소드 호출 구문 &lt;code&gt;[obj method param1: arg]&lt;/code&gt; 합니다. &lt;code&gt;header&lt;/code&gt; 및 &lt;code&gt;emit&lt;/code&gt; pragma 외에도 Objective C로 작성된 라이브러리와의 &lt;em&gt;느슨한&lt;/em&gt; 인터페이스를 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="30f83d5094b3b2c2095fb8df318a109e2f118c51" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;a href=&quot;#implementation-specific-pragmas-importcpp-pragma&quot;&gt;importcpp pragma for C++&lt;/a&gt;, the &lt;code&gt;importjs&lt;/code&gt; pragma can be used to import Javascript methods or symbols in general. The generated code then uses the Javascript method calling syntax: &lt;code&gt;obj.method(arg)&lt;/code&gt;.</source>
          <target state="translated">받는 유사 &lt;a href=&quot;#implementation-specific-pragmas-importcpp-pragma&quot;&gt;C에 대한 importcpp 프라그 ++&lt;/a&gt; 의 &lt;code&gt;importjs&lt;/code&gt; pragma는 일반적으로 자바 스크립트 방법 또는 기호를 가져올 수 있습니다. 생성 된 코드는 &lt;code&gt;obj.method(arg)&lt;/code&gt; 구문을 호출하는 Javascript 메소드를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="b3835c00a1817f2f63063c1f1fc98f8cc86d7417" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;a href=&quot;#open,CsvParser,Stream,string,char,char,char&quot;&gt;other open proc&lt;/a&gt;, but creates the file stream for you.</source>
          <target state="translated">&lt;a href=&quot;#open,CsvParser,Stream,string,char,char,char&quot;&gt;다른 open proc&lt;/a&gt; 과 유사 하지만 파일 스트림을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="3adf311c5dd828b7c450080b9fe51795b3cb57d5" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;code&gt;import&lt;/code&gt; statement, the AST is different for &lt;code&gt;export ... except&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;import&lt;/code&gt; 문과 유사하게 AST는 &lt;code&gt;export ... except&lt;/code&gt; 따라 다릅니다 ... 제외 .</target>
        </trans-unit>
        <trans-unit id="17f571225bcdb0061542084cc744c2d22c9a95bd" translate="yes" xml:space="preserve">
          <source>Similarly to &lt;span id=&quot;argv_1&quot;&gt;argv&lt;/span&gt; in C, it is possible to call &lt;code&gt;paramStr(0)&lt;/code&gt; but this will return OS specific contents (usually the name of the invoked executable). You should avoid this and call &lt;a href=&quot;#getAppFilename&quot;&gt;getAppFilename()&lt;/a&gt; instead.</source>
          <target state="translated">C의 &lt;span id=&quot;argv_1&quot;&gt;argv&lt;/span&gt; 와 마찬가지로 &lt;code&gt;paramStr(0)&lt;/code&gt; 을 호출하는 것이 가능 하지만 OS 특정 내용 (보통 호출 된 실행 파일의 이름)을 반환합니다. 이를 피하고 대신 &lt;a href=&quot;#getAppFilename&quot;&gt;getAppFilename ()을&lt;/a&gt; 호출해야 합니다.</target>
        </trans-unit>
        <trans-unit id="0836ce8cc993ea5e6c237d5e13b1926310dd2fc9" translate="yes" xml:space="preserve">
          <source>Similarly to the old &lt;code&gt;doc&lt;/code&gt; command the old &lt;code&gt;jsondoc&lt;/code&gt; command has been renamed &lt;code&gt;jsondoc0&lt;/code&gt;.</source>
          <target state="translated">이전 &lt;code&gt;doc&lt;/code&gt; 명령과 마찬가지로 이전 &lt;code&gt;jsondoc&lt;/code&gt; 명령의 이름이 &lt;code&gt;jsondoc0&lt;/code&gt; 으로 변경 되었습니다 .</target>
        </trans-unit>
        <trans-unit id="923d2208cc2a00f7a0f1b3452857f4ae436b40d2" translate="yes" xml:space="preserve">
          <source>Similarly, any procedure and procedure type declarations that are longer than one line should do the same thing.</source>
          <target state="translated">마찬가지로, 한 줄보다 긴 프로 시저 및 프로 시저 유형 선언도 동일한 작업을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="03199fb1565fa787d6b802de955cc02879b12e5f" translate="yes" xml:space="preserve">
          <source>Simple PEG (Parsing expression grammar) matching. Uses no memorization, but uses superoperators and symbol inlining to improve performance. Note: Matching performance is hopefully competitive with optimized regular expression engines.</source>
          <target state="translated">간단한 PEG (Parsing expression grammar) 일치 암기는 사용하지 않지만 성능을 향상시키기 위해 수퍼 오퍼레이터와 심볼 인라이닝을 사용합니다. 참고 : 일치하는 성능은 최적화 된 정규식 엔진과 경쟁력이 있기를 바랍니다.</target>
        </trans-unit>
        <trans-unit id="8f109940019fa8f67d309a7a93e8cba672fd495f" translate="yes" xml:space="preserve">
          <source>Simple alias analysis for the HLO and the code generators.</source>
          <target state="translated">HLO 및 코드 생성기에 대한 간단한 별칭 분석.</target>
        </trans-unit>
        <trans-unit id="642d63f4b98668cb5f7dde10bc28bf59ccdf215c" translate="yes" xml:space="preserve">
          <source>Simple assertions</source>
          <target state="translated">간단한 어설 션</target>
        </trans-unit>
        <trans-unit id="edcc542b12309c356f091b9913fd4380c94b4828" translate="yes" xml:space="preserve">
          <source>Simple example that parses the &lt;code&gt;/etc/passwd&lt;/code&gt; file line by line:</source>
          <target state="translated">&lt;code&gt;/etc/passwd&lt;/code&gt; 파일을 한 줄씩 파싱하는 간단한 예 :</target>
        </trans-unit>
        <trans-unit id="e8a60d51d4165fef55cc82ac2db54d5e0a688774" translate="yes" xml:space="preserve">
          <source>Simply add --os:nintendoswitch to your usual &lt;code&gt;nim c&lt;/code&gt; or &lt;code&gt;nim cpp&lt;/code&gt; command and set the &lt;code&gt;passC&lt;/code&gt; and &lt;code&gt;passL&lt;/code&gt; command line switches to something like:</source>
          <target state="translated">일반적인 &lt;code&gt;nim c&lt;/code&gt; 또는 &lt;code&gt;nim cpp&lt;/code&gt; 명령에 &lt;code&gt;passC&lt;/code&gt; : nintendoswitch를 추가 하고 passC 및 &lt;code&gt;passL&lt;/code&gt; 명령 행 스위치를 다음과 같이 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="68a7be01748634fb01ff7166d62b5973bd7b996d" translate="yes" xml:space="preserve">
          <source>Since 1.4 the &lt;code&gt;compile&lt;/code&gt; pragma is also available with this syntax:</source>
          <target state="translated">1.4부터 &lt;code&gt;compile&lt;/code&gt; pragma는 다음 구문으로도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a34c23e158369fa61d7370c7d9f4ae3a6b97d78" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;check&lt;/code&gt; will rewrite some expressions for supporting checkpoints (namely assigns expressions to variables), some type conversions are not supported. For example &lt;code&gt;check 4.0 == 2 + 2&lt;/code&gt; won't work. But &lt;code&gt;doAssert 4.0 == 2 + 2&lt;/code&gt; works. Make sure both sides of the operator (such as &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt; and so on) have the same type.</source>
          <target state="translated">&lt;code&gt;check&lt;/code&gt; 는 체크 포인트를 지원하기 위해 일부 표현식을 다시 작성 하므로 (즉, 표현식을 변수에 할당) 일부 유형 변환은 지원되지 않습니다. 예를 들어 &lt;code&gt;check 4.0 == 2 + 2&lt;/code&gt; 는 작동하지 않습니다. 그러나 &lt;code&gt;doAssert 4.0 == 2 + 2&lt;/code&gt; 작동합니다. 연산자의 양쪽 (예 : &lt;code&gt;==&lt;/code&gt; , &lt;code&gt;&amp;gt;=&lt;/code&gt; 등)이 동일한 유형 인지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="b090179dd62a9781100bf21383b86b639866ae6b" translate="yes" xml:space="preserve">
          <source>Since Nim generates C++ directly, any destructor is called implicitly by the C++ compiler at the scope exits. This means that often one can get away with not wrapping the destructor at all! However when it needs to be invoked explicitly, it needs to be wrapped. The pattern language provides everything that is required:</source>
          <target state="translated">Nim은 C ++을 직접 생성하므로 범위 종료시 C ++ 컴파일러가 모든 소멸자를 내재적으로 호출합니다. 이것은 종종 소멸자를 감싸지 않고 도망 갈 수 있음을 의미합니다! 그러나 명시 적으로 호출해야하는 경우 랩핑해야합니다. 패턴 언어는 필요한 모든 것을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a08766f230e2db6ee357e42bd10c592a8931e7e2" translate="yes" xml:space="preserve">
          <source>Since Nim generates C++ directly, any destructor is called implicitly by the C++ compiler at the scope exits. This means that often one can get away with not wrapping the destructor at all! However, when it needs to be invoked explicitly, it needs to be wrapped. The pattern language provides everything that is required:</source>
          <target state="translated">Nim은 C ++를 직접 생성하므로 모든 소멸자는 범위가 종료 될 때 C ++ 컴파일러에 의해 암시 적으로 호출됩니다. 이것은 종종 소멸자를 전혀 래핑하지 않고 도망 갈 수 있음을 의미합니다! 그러나 명시 적으로 호출해야하는 경우 래핑해야합니다. 패턴 언어는 필요한 모든 것을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2836b4cd35895fbe3e4607ab829e68b8adca5bab" translate="yes" xml:space="preserve">
          <source>Since Nim is implemented in Nim, one of the nice things of this feature is that any user with an IDE supporting it can quickly jump around the standard library implementation and see exactly what a proc does, learning about the language and seeing real life examples of how to write/implement specific features.</source>
          <target state="translated">Nim이 Nim으로 구현되었으므로이 기능의 좋은 점 중 하나는 IDE를 지원하는 모든 사용자가 표준 라이브러리 구현을 신속하게 건너 뛰고 proc이 수행하는 내용을 정확히보고 언어에 대해 배우고 실제 사례를 볼 수 있다는 것입니다. 특정 기능을 작성 / 구현하는 방법.</target>
        </trans-unit>
        <trans-unit id="81d6398a9d34106da960c47713538b3d721fae12" translate="yes" xml:space="preserve">
          <source>Since Nim's garbage collector is not aware of the C code, once the &lt;code&gt;gimme&lt;/code&gt; proc has finished it can reclaim the memory of the &lt;code&gt;cstring&lt;/code&gt;. However, from a practical standpoint, the C code invoking the &lt;code&gt;gimme&lt;/code&gt; function directly will be able to use it since Nim's garbage collector has not had a chance to run &lt;em&gt;yet&lt;/em&gt;. This gives you enough time to make a copy for the C side of the program, as calling any further Nim procs &lt;em&gt;might&lt;/em&gt; trigger garbage collection making the previously returned string garbage. Or maybe you are &lt;a href=&quot;gc&quot;&gt;yourself triggering the collection&lt;/a&gt;.</source>
          <target state="translated">Nim의 가비지 수집기는 C 코드를 인식하지 못하므로 &lt;code&gt;gimme&lt;/code&gt; proc이 완료되면 &lt;code&gt;cstring&lt;/code&gt; 의 메모리를 회수 할 수 있습니다 . 그러나 실용적인 관점에서 &lt;code&gt;gimme&lt;/code&gt; 함수를 직접 호출하는 C 코드 는 Nim의 가비지 수집기가 &lt;em&gt;아직&lt;/em&gt; 실행할 기회가 없기 때문에이 기능을 직접 사용할 수 있습니다 . 추가 Nim 프로세스를 호출하면 가비지 콜렉션 &lt;em&gt;이&lt;/em&gt; 트리거되어 이전에 리턴 된 문자열 가비지 &lt;em&gt;가 생성 될 수 있으므로&lt;/em&gt; 프로그램의 C 측에 복사 할 수있는 충분한 시간을 제공합니다 . 아니면 &lt;a href=&quot;gc&quot;&gt;자신이 컬렉션을 트리거하고&lt;/a&gt; 있을 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4c2d2708a6e9c531e547adff103c4d9f239c3ef0" translate="yes" xml:space="preserve">
          <source>Since closures capture local variables by reference it is often not wanted behavior inside loop bodies. See &lt;a href=&quot;system#closureScope&quot;&gt;closureScope&lt;/a&gt; for details on how to change this behavior.</source>
          <target state="translated">클로저는 로컬 변수를 참조로 캡처하기 때문에 루프 바디 내부의 동작을 원하지 않는 경우가 많습니다. 이 동작을 변경하는 방법에 대한 자세한 내용 은 &lt;a href=&quot;system#closureScope&quot;&gt;closureScope&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="552195d72fbf0830717fab62ebd8d08d848bf691" translate="yes" xml:space="preserve">
          <source>Since closures capture local variables by reference it is often not wanted behavior inside loop bodies. See &lt;a href=&quot;system#closureScope.t,untyped&quot;&gt;closureScope&lt;/a&gt; and &lt;a href=&quot;sugar#capture.m,openArray%5Btyped%5D,untyped&quot;&gt;capture&lt;/a&gt; for details on how to change this behavior.</source>
          <target state="translated">클로저는 참조로 지역 변수를 캡처하기 때문에 종종 루프 본문 내부의 동작을 원하지 않습니다. 이 동작을 변경하는 방법에 대한 자세한 내용 은 &lt;a href=&quot;system#closureScope.t,untyped&quot;&gt;closureScope&lt;/a&gt; 및 &lt;a href=&quot;sugar#capture.m,openArray%5Btyped%5D,untyped&quot;&gt;캡처&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="433b2057ed04740122c7f9487a7fd644b8ab062a" translate="yes" xml:space="preserve">
          <source>Since counting up occurs so often in programs, Nim also has a &lt;a href=&quot;system#...i,S,T&quot;&gt;..&lt;/a&gt; iterator that does the same:</source>
          <target state="translated">카운트 업은 프로그램에서 자주 발생하기 때문에 Nim에는 &lt;a href=&quot;system#...i,S,T&quot;&gt;..&lt;/a&gt; 반복자가 있습니다.</target>
        </trans-unit>
        <trans-unit id="93b9436d2e11b6874047b8e15d5dc1bf4d0cec15" translate="yes" xml:space="preserve">
          <source>Since it's slower and more complex, the &lt;code&gt;TimeInterval&lt;/code&gt; type should be avoided unless the program explicitly needs the features it offers that &lt;code&gt;Duration&lt;/code&gt; doesn't have.</source>
          <target state="translated">더 느리고 더 복잡하기 때문에 프로그램이 &lt;code&gt;Duration&lt;/code&gt; 에 없는 기능을 명시 적으로 필요로하지 않는 한 &lt;code&gt;TimeInterval&lt;/code&gt; 유형은 피해야합니다 .</target>
        </trans-unit>
        <trans-unit id="3f5358496f3a495272baef5ad9c4459080748780" translate="yes" xml:space="preserve">
          <source>Since module names are generally long to be descriptive, you can also define a shorter alias to use when qualifying symbols.</source>
          <target state="translated">일반적으로 모듈 이름은 설명이 길기 때문에 기호를 한정 할 때 사용할 짧은 별칭을 정의 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="eeb691770c7129b48bc1fbd85364e037b06e51a3" translate="yes" xml:space="preserve">
          <source>Since objects can reside on the heap or on the stack this greatly enhances the expressivity of the language:</source>
          <target state="translated">객체는 힙이나 스택에있을 수 있으므로 언어의 표현성이 크게 향상됩니다.</target>
        </trans-unit>
        <trans-unit id="331192843adea979e377c3992b74f025b10df9c2" translate="yes" xml:space="preserve">
          <source>Since operations on unsigned numbers wrap around and are unchecked so are type conversion to unsigned integers and between unsigned integers. The rationale for this is mostly better interoperability with the C Programming language when algorithms are ported from C to Nim.</source>
          <target state="translated">부호없는 숫자에 대한 연산은 줄 바꿈되고 확인되지 않으므로 부호없는 정수로의 형식 변환과 부호없는 정수 사이의 형식 변환도 마찬가지입니다. 이에 대한 이론적 근거는 알고리즘이 C에서 Nim으로 이식 될 때 C 프로그래밍 언어와의 상호 운용성이 대체로 더 우수하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="d18abb59d5555a0cd68ad92ca498969b76edc73a" translate="yes" xml:space="preserve">
          <source>Since some cases are specific to either &lt;code&gt;ProcRun&lt;/code&gt; or &lt;code&gt;CaasRun&lt;/code&gt; modes, you can prefix a line with the mode and the line will be processed only in that mode.</source>
          <target state="translated">경우에 따라서는 &lt;code&gt;ProcRun&lt;/code&gt; 또는 &lt;code&gt;CaasRun&lt;/code&gt; 모드에만 해당되므로, 줄 앞에 해당 모드를 추가하면 해당 모드에서만 줄이 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="d1b539956855f09af0d247b1afd8148391989674" translate="yes" xml:space="preserve">
          <source>Since templates and macros that are not declared as &lt;code&gt;immediate&lt;/code&gt; participate in overloading resolution it's essential to have a way to pass unresolved expressions to a template or macro. This is what the meta-type &lt;code&gt;untyped&lt;/code&gt; accomplishes:</source>
          <target state="translated">&lt;code&gt;immediate&lt;/code&gt; 선언되지 않은 템플릿과 매크로 는 오버로드 해상도에 참여하기 때문에 해결되지 않은 식을 템플릿이나 매크로에 전달하는 방법이 필수적입니다. 이것이 메타 유형의 유형이 &lt;code&gt;untyped&lt;/code&gt; 것입니다.</target>
        </trans-unit>
        <trans-unit id="4f93b29b3f3f11e052482e3266e4043530f6cf04" translate="yes" xml:space="preserve">
          <source>Since templates and macros that are not declared as &lt;code&gt;immediate&lt;/code&gt; participate in overloading resolution, it's essential to have a way to pass unresolved expressions to a template or macro. This is what the meta-type &lt;code&gt;untyped&lt;/code&gt; accomplishes:</source>
          <target state="translated">&lt;code&gt;immediate&lt;/code&gt; 선언되지 않은 템플릿과 매크로 는 오버로딩 해결에 참여하기 때문에 해결되지 않은 식을 템플릿이나 매크로에 전달할 수있는 방법이 있어야합니다. 유형이 &lt;code&gt;untyped&lt;/code&gt; 메타 유형이 수행하는 작업은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5deb55cb5338b11670b5f1b4d20273c176501851" translate="yes" xml:space="preserve">
          <source>Since the input is not modified you can use it to transform the type of the elements in the input container.</source>
          <target state="translated">입력이 수정되지 않았으므로 입력 컨테이너에있는 요소의 유형을 변환하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="20070e544008a5d9a536d614aa3a8b327168b8fa" translate="yes" xml:space="preserve">
          <source>Since the input is not modified you can use this version of &lt;code&gt;map&lt;/code&gt; to transform the type of the elements in the input container.</source>
          <target state="translated">입력이 수정되지 않았으므로이 버전의 &lt;code&gt;map&lt;/code&gt; 을 사용 하여 입력 컨테이너의 요소 유형을 변환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5f532f85411b067a2d463c5934fb4743aca80177" translate="yes" xml:space="preserve">
          <source>Since this is a low-level proc, its usage is discouraged - using &lt;a href=&quot;#new,ref.T,proc(ref.T)&quot;&gt;new&lt;/a&gt; for the most cases suffices that one never needs to know &lt;code&gt;x&lt;/code&gt;'s size.</source>
          <target state="translated">이것은 저수준 proc이기 때문에 사용을 권장하지 않습니다 . 대부분의 경우 &lt;a href=&quot;#new,ref.T,proc(ref.T)&quot;&gt;new&lt;/a&gt; 를 사용 하면 &lt;code&gt;x&lt;/code&gt; 의 크기 를 알 필요가없는 것으로 충분합니다 .</target>
        </trans-unit>
        <trans-unit id="8bd7e9132b57aa66fa0c89392e52a98747d0fab5" translate="yes" xml:space="preserve">
          <source>Since types are graphs which can have cycles, the above algorithm needs an auxiliary set &lt;code&gt;s&lt;/code&gt; to detect this case.</source>
          <target state="translated">유형 사이클을 가질 수 그래프이기 때문에, 상기 알고리즘은 보조 세트가 필요 &lt;code&gt;s&lt;/code&gt; 이 경우를 검출하기 위해.</target>
        </trans-unit>
        <trans-unit id="f3dcd1c82a829a4227717350f8fd411e8aaea9d3" translate="yes" xml:space="preserve">
          <source>Since version 1.4 Nim allows view types to be used as local variables. This feature needs to be enabled via &lt;code&gt;{.experimental: &quot;views&quot;.}&lt;/code&gt;.</source>
          <target state="translated">버전 1.4 Nim에서는 뷰 유형을 지역 변수로 사용할 수 있습니다. 이 기능은 &lt;code&gt;{.experimental: &quot;views&quot;.}&lt;/code&gt; 를 통해 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e698ccac27e2dbd3952eaaebea4bd82ea28ca388" translate="yes" xml:space="preserve">
          <source>Since version 1.4 a stricter definition of &quot;side effect&quot; is available. In addition to the existing rule that a side effect is calling a function with side effects the following rule is also enforced:</source>
          <target state="translated">버전 1.4부터 &quot;부작용&quot;에 대한보다 엄격한 정의를 사용할 수 있습니다. 부작용이 부작용이있는 함수를 호출한다는 기존 규칙 외에도 다음 규칙이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="9208e5c267e7dac1fc686af9da95a5f46c1b01e6" translate="yes" xml:space="preserve">
          <source>Since version 1.4 of the Nim compiler, there is a &lt;code&gt;.noalias&lt;/code&gt; annotation for variables and parameters. It is mapped directly to C/C++'s &lt;code&gt;restrict&lt;/code&gt; keyword and means that the underlying pointer is pointing to a unique location in memory, no other aliases to this location exist. It is &lt;em&gt;unchecked&lt;/em&gt; that this alias restriction is followed, if the restriction is violated, the backend optimizer is free to miscompile the code. This is an &lt;strong&gt;unsafe&lt;/strong&gt; language feature.</source>
          <target state="translated">Nim 컴파일러 버전 1.4부터 변수 및 매개 변수에 대한 &lt;code&gt;.noalias&lt;/code&gt; 주석이 있습니다. C / C ++의 &lt;code&gt;restrict&lt;/code&gt; 키워드 에 직접 매핑되며 기본 포인터가 메모리의 고유 한 위치를 가리키고 있으며이 위치에 대한 다른 별칭이 존재하지 않음을 의미합니다. 이다 &lt;em&gt;선택하지 않은&lt;/em&gt; 제한이 코드를 miscompile 자유롭게 최적화 백엔드을 위반하는 경우,이 별명 제한이 따랐다된다. 이것은 &lt;strong&gt;안전하지 않은&lt;/strong&gt; 언어 기능입니다.</target>
        </trans-unit>
        <trans-unit id="693c97bf55b6187119c714b7b185fa6734646019" translate="yes" xml:space="preserve">
          <source>Since we adopt the &quot;replay the top level statements&quot; idea, the natural solution to this problem is to emit pseudo top level statements that reflect the mutations done to the global variable. However, this is MUCH harder than it sounds, for example &lt;code&gt;squeaknim&lt;/code&gt; uses this snippet:</source>
          <target state="translated">우리는 &quot;최상위 진술 재생&quot;아이디어를 채택하기 때문에이 문제에 대한 자연스러운 해결책은 전역 변수에 수행 된 돌연변이를 반영하는 의사 최상위 진술을 방출하는 것입니다. 그러나 이것은 소리보다 훨씬 어렵습니다. 예를 들어 &lt;code&gt;squeaknim&lt;/code&gt; 은 다음 코드를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="d11cd8a4ff2f39268c05039e2c72e08ef63a5b60" translate="yes" xml:space="preserve">
          <source>Since we are building on the previous example generating source code, we will only mention the differences to it. Instead of creating a temporary &lt;code&gt;string&lt;/code&gt; variable and writing into it source code as if it were written &lt;em&gt;by hand&lt;/em&gt;, we use the &lt;code&gt;result&lt;/code&gt; variable directly and create a statement list node (&lt;code&gt;nnkStmtList&lt;/code&gt;) which will hold our children (line 7).</source>
          <target state="translated">앞의 예제 생성 소스 코드를 기반으로하기 때문에 그 차이점 만 언급 할 것입니다. &lt;em&gt;손&lt;/em&gt; 으로 작성한 것처럼 임시 &lt;code&gt;string&lt;/code&gt; 변수를 작성하고 소스 코드 에 작성하는 대신 &lt;code&gt;result&lt;/code&gt; 변수를 직접 사용 하고 하위 항목 (7 행)을 보유 할 명령문 목록 노드 ( &lt;code&gt;nnkStmtList&lt;/code&gt; )를 작성합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cdb05cd2f305000f7f94c3da680ee4946309a15f" translate="yes" xml:space="preserve">
          <source>Sink parameter inference</source>
          <target state="translated">싱크 매개 변수 추론</target>
        </trans-unit>
        <trans-unit id="983be52a4540f9d2a43055b42f56961154c5877e" translate="yes" xml:space="preserve">
          <source>Sink parameters</source>
          <target state="translated">싱크 매개 변수</target>
        </trans-unit>
        <trans-unit id="67281e7beeac085659bafd0aefa97a7715dd587c" translate="yes" xml:space="preserve">
          <source>Skips &lt;code&gt;size&lt;/code&gt; amount of bytes.</source>
          <target state="translated">바이트 &lt;code&gt;size&lt;/code&gt; 건너 뜁니다 .</target>
        </trans-unit>
        <trans-unit id="fb41024839925b343322cf01b17a70592da073f3" translate="yes" xml:space="preserve">
          <source>Skips all characters until one char from the set &lt;code&gt;until&lt;/code&gt; is found or the end is reached. Returns number of characters skipped.</source>
          <target state="translated">세트에서 하나 개의 문자까지 모든 문자를 스킵 &lt;code&gt;until&lt;/code&gt; 발견 또는 끝에 도달. 건너 뛴 문자 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="caa40925a8a5ba1ec2c47da0074b9498483ee486" translate="yes" xml:space="preserve">
          <source>Skips all characters until one char from the set &lt;em&gt;until&lt;/em&gt; is found or the end is reached. Returns number of characters skipped.</source>
          <target state="translated">세트에서 하나 개의 문자까지 모든 문자를 스킵 &lt;em&gt;할 때까지&lt;/em&gt; 발견 또는 끝에 도달. 건너 뛴 문자 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e94f2b52417357dd29ae1b03b173bbfce2d399bb" translate="yes" xml:space="preserve">
          <source>Skips all characters until the char &lt;code&gt;until&lt;/code&gt; is found or the end is reached. Returns number of characters skipped.</source>
          <target state="translated">문자를 찾을 &lt;code&gt;until&lt;/code&gt; 또는 끝에 도달 할 때까지 모든 문자를 건너 뜁니다 . 건너 뛴 문자 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c0250535bb44963b382eb260412b12ae060f9664" translate="yes" xml:space="preserve">
          <source>Skips all characters until the char &lt;em&gt;until&lt;/em&gt; is found or the end is reached. Returns number of characters skipped.</source>
          <target state="translated">문자를 찾거나 끝에 도달 &lt;em&gt;할&lt;/em&gt; 때까지 모든 문자를 건너 뜁니다 . 건너 뛴 문자 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a145e3097f1a81a3e06b61a7cce38b21250bb3d5" translate="yes" xml:space="preserve">
          <source>Skips all characters while one char from the set &lt;code&gt;token&lt;/code&gt; is found. Returns number of characters skipped.</source>
          <target state="translated">설정된 &lt;code&gt;token&lt;/code&gt; 에서 하나의 문자 가 발견 되는 동안 모든 문자를 건너 뜁니다 . 건너 뛴 문자 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="82c633400ddfee46423e0bdfdd5bf1035984706d" translate="yes" xml:space="preserve">
          <source>Skips all characters while one char from the set &lt;em&gt;token&lt;/em&gt; is found. Returns number of characters skipped.</source>
          <target state="translated">설정된 &lt;em&gt;토큰&lt;/em&gt; 에서 하나의 문자 가 발견 되는 동안 모든 문자를 건너 뜁니다 . 건너 뛴 문자 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e7c8076f2280bb4f56da2f4ba9faf089bdaf35a9" translate="yes" xml:space="preserve">
          <source>Skips optional whitespace.</source>
          <target state="translated">선택적 공백을 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="569c7becfddeaafe0c5d76cdf30a8b63c43839be" translate="yes" xml:space="preserve">
          <source>Skips the &lt;code&gt;token&lt;/code&gt; starting at &lt;code&gt;s[start]&lt;/code&gt;. Returns the length of &lt;code&gt;token&lt;/code&gt; or 0 if there was no &lt;code&gt;token&lt;/code&gt; at &lt;code&gt;s[start]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;s[start]&lt;/code&gt; 에서 시작 하는 &lt;code&gt;token&lt;/code&gt; 건너 뜁니다 . 반환의 길이 &lt;code&gt;token&lt;/code&gt; 경우 더가되었다 0 &lt;code&gt;token&lt;/code&gt; 에서 &lt;code&gt;s[start]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="62eecb03f4e2a7bf298b97756963fd5118d60dc6" translate="yes" xml:space="preserve">
          <source>Skips the range information of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 의 범위 정보를 건너 뜁니다 .</target>
        </trans-unit>
        <trans-unit id="74c80ddc8c975b77caa19dfaa5b5c47ce6a6e404" translate="yes" xml:space="preserve">
          <source>Skips the whitespace starting at &lt;code&gt;s[start]&lt;/code&gt;. Returns the number of skipped characters.</source>
          <target state="translated">&lt;code&gt;s[start]&lt;/code&gt; 에서 시작하는 공백을 건너 뜁니다 . 건너 뛴 문자 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f420035ec51fd1d6520bb5ec464beba29fc34388" translate="yes" xml:space="preserve">
          <source>Sleeps &lt;code&gt;milsecs&lt;/code&gt; milliseconds.</source>
          <target state="translated">잠들지 &lt;code&gt;milsecs&lt;/code&gt; 의 밀리 초.</target>
        </trans-unit>
        <trans-unit id="a31cdc7b6bea95ab5013f980d43f2dff3c83c9b3" translate="yes" xml:space="preserve">
          <source>Slice assignment for arrays.</source>
          <target state="translated">어레이에 대한 슬라이스 할당.</target>
        </trans-unit>
        <trans-unit id="738459284820ace2e2b97e0067da1f253611c8fb" translate="yes" xml:space="preserve">
          <source>Slice assignment for sequences.</source>
          <target state="translated">시퀀스에 대한 슬라이스 할당.</target>
        </trans-unit>
        <trans-unit id="3a12395d358076a57e44a09e41858f58becb94c2" translate="yes" xml:space="preserve">
          <source>Slice assignment for strings.</source>
          <target state="translated">문자열에 대한 슬라이스 할당.</target>
        </trans-unit>
        <trans-unit id="7bdae08e3c94e37520144102d82ade90610d41ee" translate="yes" xml:space="preserve">
          <source>Slice of a sequence (both ends included)</source>
          <target state="translated">시퀀스 슬라이스 (양 끝 포함)</target>
        </trans-unit>
        <trans-unit id="0a95dd25c5ad2e71daba68a1591ce47bcb3bca07" translate="yes" xml:space="preserve">
          <source>Slice of a sequence (excluded upper bound)</source>
          <target state="translated">시퀀스 슬라이스 (상한 제외)</target>
        </trans-unit>
        <trans-unit id="4c17466bea729f3230b195fe511dca70995ef812" translate="yes" xml:space="preserve">
          <source>Slice of a sequence but &lt;code&gt;b&lt;/code&gt; is a reversed index (both ends included)</source>
          <target state="translated">시퀀스의 슬라이스이지만 &lt;code&gt;b&lt;/code&gt; 는 반전 된 인덱스입니다 (두 끝 모두 포함됨).</target>
        </trans-unit>
        <trans-unit id="dcdb817e9b5c00e535f953048ec2689a62b77853" translate="yes" xml:space="preserve">
          <source>Slice operation for NimNode. Returns a seq of child of &lt;code&gt;n&lt;/code&gt; who inclusive range [n[x.a], n[x.b]].</source>
          <target state="translated">NimNode에 대한 슬라이스 작업. 범위 [n [xa], n [xb]]를 포함 하는 &lt;code&gt;n&lt;/code&gt; 의 자식 시퀀스를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="557c2f12609d13e21194b24d3f02d3f02ed131e7" translate="yes" xml:space="preserve">
          <source>Slice operation for arrays. Returns the inclusive range &lt;code&gt;[a[x.a], a[x.b]]&lt;/code&gt;:</source>
          <target state="translated">어레이에 대한 슬라이스 작업. 포함 범위 &lt;code&gt;[a[x.a], a[x.b]]&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a411055507caf9e139ed5eafcba675b1165d9131" translate="yes" xml:space="preserve">
          <source>Slice operation for sequences. Returns the inclusive range &lt;code&gt;[s[x.a], s[x.b]]&lt;/code&gt;:</source>
          <target state="translated">시퀀스에 대한 슬라이스 작업. 포함 범위 &lt;code&gt;[s[x.a], s[x.b]]&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="66d3b2f324bd3a58c583fd8c2cb6d4c868914800" translate="yes" xml:space="preserve">
          <source>Slice operation for strings. Returns the inclusive range &lt;code&gt;[s[x.a], s[x.b]]&lt;/code&gt;:</source>
          <target state="translated">문자열에 대한 슬라이스 작업. 포함 범위 &lt;code&gt;[s[x.a], s[x.b]]&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a455933ba1827ec6d2d6cea6cb61c05bd3954351" translate="yes" xml:space="preserve">
          <source>Slices</source>
          <target state="translated">Slices</target>
        </trans-unit>
        <trans-unit id="3b0fe98905d1d18450c150302cb674830bef8f5f" translate="yes" xml:space="preserve">
          <source>Slices are optimized so that no copy is performed. This optimization is not yet performed for ordinary slices outside of a &lt;code&gt;parallel&lt;/code&gt; section.</source>
          <target state="translated">복사가 수행되지 않도록 슬라이스가 최적화됩니다. &lt;code&gt;parallel&lt;/code&gt; 섹션 외부의 일반 슬라이스에 대해서는이 최적화가 아직 수행되지 않았습니다 .</target>
        </trans-unit>
        <trans-unit id="d448a6ae510e0bef65396ba523229cd2784b29e1" translate="yes" xml:space="preserve">
          <source>Slices can also be used in the set constructor and in ordinal case statements, but then they are special-cased by the compiler.</source>
          <target state="translated">슬라이스는 집합 생성자 및 서수 case 문에서도 사용할 수 있지만 컴파일러에서 특수한 경우입니다.</target>
        </trans-unit>
        <trans-unit id="6b4413ae4cc49215fae1d8456ab98bdf32cdd690" translate="yes" xml:space="preserve">
          <source>Slices look similar to subranges types in syntax but are used in a different context. A slice is just an object of type Slice which contains two bounds, &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. By itself a slice is not very useful, but other collection types define operators which accept Slice objects to define ranges.</source>
          <target state="translated">슬라이스는 구문에서 하위 범위 유형과 비슷해 보이지만 다른 컨텍스트에서 사용됩니다. 슬라이스는 &lt;em&gt;a&lt;/em&gt; 와 &lt;em&gt;b의&lt;/em&gt; 두 경계를 포함하는 Slice 유형의 객체 일뿐 입니다. 슬라이스 자체는 그다지 유용하지 않지만 다른 컬렉션 유형은 슬라이스 객체를 허용하는 범위를 정의하는 연산자를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="c3fee626664b2a86ccfce0881ad458405c843067" translate="yes" xml:space="preserve">
          <source>Slightly different version of &lt;code&gt;acceptAddr&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;acceptAddr&lt;/code&gt; 의 버전이 약간 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="eee7a8ef42831f93c54af4a6309b748729834ca0" translate="yes" xml:space="preserve">
          <source>SmallLshouldNotBeUsed</source>
          <target state="translated">SmallLshouldNotBeUsed</target>
        </trans-unit>
        <trans-unit id="52ac925f65972ce69213db46d24ae265801bf57f" translate="yes" xml:space="preserve">
          <source>Smallest normal number for Nim's &lt;code&gt;float&lt;/code&gt; type. (= 2^-1022).</source>
          <target state="translated">Nim의 &lt;code&gt;float&lt;/code&gt; 유형에 대한 가장 작은 일반 수입니다 . (= 2 ^ -1022).</target>
        </trans-unit>
        <trans-unit id="75f4dd2393a33188b388008b159b576f9d6c37ce" translate="yes" xml:space="preserve">
          <source>So &quot;pure object oriented&quot; code is easy to write:</source>
          <target state="translated">따라서 &quot;순수한 객체 지향&quot;코드는 작성하기 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="1884ef29a0caad9d01db393c26a4dacb7998bb83" translate="yes" xml:space="preserve">
          <source>So in many cases a callback does not cause the compiler to be overly conservative in its effect analysis.</source>
          <target state="translated">따라서 많은 경우 콜백으로 인해 컴파일러가 효과 분석에서 지나치게 보수적 인 원인이되지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="d04b96e54f57571cb5f26f417c712886d005cc49" translate="yes" xml:space="preserve">
          <source>So it is not necessary to write &lt;code&gt;peg&quot; 'abc' &quot;&lt;/code&gt; in the above example.</source>
          <target state="translated">따라서 위의 예제에서 &lt;code&gt;peg&quot; 'abc' &quot;&lt;/code&gt; 를 작성할 필요는 없습니다 .</target>
        </trans-unit>
        <trans-unit id="8675cecc3e20035fc6e573ebf270227f7c7eb995" translate="yes" xml:space="preserve">
          <source>So now &lt;code&gt;G.c&lt;/code&gt; MUST contain both &lt;code&gt;P1&lt;/code&gt; and &lt;code&gt;P2&lt;/code&gt;, but we haven't even loaded &lt;code&gt;P1&lt;/code&gt; from the symbol file, nor do we want to because we then quickly would restore large parts of the whole program.</source>
          <target state="translated">이제 &lt;code&gt;G.c&lt;/code&gt; 는 &lt;code&gt;P1&lt;/code&gt; 과 &lt;code&gt;P2&lt;/code&gt; 를 모두 포함해야 하지만 심볼 파일에서 &lt;code&gt;P1&lt;/code&gt; 을 로드 하지 않았으며 전체 프로그램의 큰 부분을 빠르게 복원하기 때문에 원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bf5a11d19a510b9d440c6d28006850b22f216e57" translate="yes" xml:space="preserve">
          <source>So the path returned by this proc is determined at run time.</source>
          <target state="translated">따라서이 proc에서 반환하는 경로는 런타임에 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="d2837e373a9e08b8e4ae0fadd7bcf34bea8bba71" translate="yes" xml:space="preserve">
          <source>So the string &lt;code&gt;b&lt;/code&gt; is of length 19, and two different ways of specifying the indices are</source>
          <target state="translated">따라서 문자열 &lt;code&gt;b&lt;/code&gt; 의 길이는 19이며 인덱스를 지정하는 두 가지 다른 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e588b1291d20c18b6f2648d5846b37301ef51066" translate="yes" xml:space="preserve">
          <source>So what about &lt;code&gt;2 * a&lt;/code&gt;? We should tell the compiler &lt;code&gt;*&lt;/code&gt; is commutative. We cannot really do that however as the following code only swaps arguments blindly:</source>
          <target state="translated">그래서 &lt;code&gt;2 * a&lt;/code&gt; 어떻습니까? 우리는 &lt;code&gt;*&lt;/code&gt; 컴파일러 가 정식 적이 라고 말해야한다 . 그러나 다음 코드는 인수를 맹목적으로 교환하기 때문에 실제로는 그렇게 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b4e6066da4ec97671c84015a233816abeed1a8d1" translate="yes" xml:space="preserve">
          <source>So, now that we are done with the basics, let's see what Nim offers apart from a nice syntax for procedural programming: &lt;a href=&quot;tut2&quot;&gt;Part II&lt;/a&gt;</source>
          <target state="translated">그래서, 우리는 기본으로 수행되는 지금,의는 절차 적 프로그래밍을위한 좋은 구문에서 떨어져 어떤 님의 이벤트 보자 : &lt;a href=&quot;tut2&quot;&gt;파트 II를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99f2336f838a801c19d553e0c88c363ba411da59" translate="yes" xml:space="preserve">
          <source>SockClosed</source>
          <target state="translated">SockClosed</target>
        </trans-unit>
        <trans-unit id="2e364384ea1af26a7ae5749a4ee47846386614a6" translate="yes" xml:space="preserve">
          <source>SockConnected</source>
          <target state="translated">SockConnected</target>
        </trans-unit>
        <trans-unit id="ecb1db9b50d2375a93db032e8269b906e3a2d434" translate="yes" xml:space="preserve">
          <source>SockConnecting</source>
          <target state="translated">SockConnecting</target>
        </trans-unit>
        <trans-unit id="f96262d38e15e56e293b395e3a4e585d00445d21" translate="yes" xml:space="preserve">
          <source>SockIdle</source>
          <target state="translated">SockIdle</target>
        </trans-unit>
        <trans-unit id="49173abf46e65756efd207d62345b6562084170d" translate="yes" xml:space="preserve">
          <source>SockListening</source>
          <target state="translated">SockListening</target>
        </trans-unit>
        <trans-unit id="540e5e4a700a40f5403f5305e76a47af819360b6" translate="yes" xml:space="preserve">
          <source>SockUDPBound</source>
          <target state="translated">SockUDPBound</target>
        </trans-unit>
        <trans-unit id="22beb4639862a7b9b676d1e4836131999f91ce5b" translate="yes" xml:space="preserve">
          <source>Socket has been closed.</source>
          <target state="translated">소켓이 닫혔습니다.</target>
        </trans-unit>
        <trans-unit id="879f6e69a5675653a92a791913da83a48c7fb678" translate="yes" xml:space="preserve">
          <source>Socket has only just been initialised, not connected or closed.</source>
          <target state="translated">소켓은 연결되거나 닫히지 않고 방금 초기화되었습니다.</target>
        </trans-unit>
        <trans-unit id="af4d7eba62345b81d526d2643d898eb239b5cdcf" translate="yes" xml:space="preserve">
          <source>Socket is a UDP socket which is listening for data.</source>
          <target state="translated">소켓은 데이터를 수신하는 UDP 소켓입니다.</target>
        </trans-unit>
        <trans-unit id="54b2d18985d4b7f5023824f4fcfddd48ab27cdff" translate="yes" xml:space="preserve">
          <source>Socket is a server socket and is listening for connections.</source>
          <target state="translated">소켓은 서버 소켓이며 연결을 수신하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="b53ea21e56f48fba083f112fde7dee58dc547eb7" translate="yes" xml:space="preserve">
          <source>Socket is connected to a server.</source>
          <target state="translated">소켓이 서버에 연결되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="84e26ccd61f472edc6a5d97a690d05af186f5bed" translate="yes" xml:space="preserve">
          <source>Socket is in the process of connecting to a server.</source>
          <target state="translated">소켓이 서버에 연결하는 중입니다.</target>
        </trans-unit>
        <trans-unit id="53b421c08a7dc0ab4bbd194fdc55f0c8077afbc0" translate="yes" xml:space="preserve">
          <source>Sockets which are &lt;strong&gt;not&lt;/strong&gt; ready for reading, writing or which don't have errors waiting on them are removed from the &lt;code&gt;readfds&lt;/code&gt;, &lt;code&gt;writefds&lt;/code&gt;, &lt;code&gt;exceptfds&lt;/code&gt; sequences respectively.</source>
          <target state="translated">있는 소켓 &lt;strong&gt;되지&lt;/strong&gt; 읽기 또는 쓰기를위한 준비, 그들을 기다리고 오류가에서 제거하지 않아도 &lt;code&gt;readfds&lt;/code&gt; , &lt;code&gt;writefds&lt;/code&gt; , &lt;code&gt;exceptfds&lt;/code&gt; 의 각각 시퀀스.</target>
        </trans-unit>
        <trans-unit id="eeaf7cd16f980da6b98bfcf871cf3ec9d79ad65f" translate="yes" xml:space="preserve">
          <source>Soft real-time support</source>
          <target state="translated">소프트 실시간 지원</target>
        </trans-unit>
        <trans-unit id="b4f91bdb0e1b0e40fff4debcd0fea22f1999f491" translate="yes" xml:space="preserve">
          <source>Solution</source>
          <target state="translated">Solution</target>
        </trans-unit>
        <trans-unit id="441c0981544196354c221a53804d865bc53f74b3" translate="yes" xml:space="preserve">
          <source>Solution ~~~~~~~~</source>
          <target state="translated">해결책 ~~~~~~~~</target>
        </trans-unit>
        <trans-unit id="a18f034cd6a34c65d1fee4d43db529e754f206cf" translate="yes" xml:space="preserve">
          <source>Some builtins set an error flag. This is then turned into a proper exception. &lt;strong&gt;Note&lt;/strong&gt;: Ordinary application code should not call this.</source>
          <target state="translated">일부 내장은 오류 플래그를 설정합니다. 그런 다음 적절한 예외로 바뀝니다. &lt;strong&gt;참고&lt;/strong&gt; : 일반 응용 프로그램 코드는 이것을 호출해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="ab83d5be81d7366ced8b35ee80f8254106e6acd0" translate="yes" xml:space="preserve">
          <source>Some child may be missing. A missing child is a node of kind &lt;code&gt;nnkEmpty&lt;/code&gt;; a child can never be nil.</source>
          <target state="translated">일부 어린이가 없을 수 있습니다. 누락 된 자식은 &lt;code&gt;nnkEmpty&lt;/code&gt; 종류의 노드입니다 . 아이는 절대 무가 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c5ca282a7a9a25d5ce998e6c70b0077256d83ad6" translate="yes" xml:space="preserve">
          <source>Some examples on how to configure a Proxy for &lt;code&gt;HttpClient&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;HttpClient&lt;/code&gt; 용 프록시를 구성하는 방법에 대한 몇 가지 예 :</target>
        </trans-unit>
        <trans-unit id="01706013cfdbcb0fc543d3c97784f3f4c235d630" translate="yes" xml:space="preserve">
          <source>Some examples:</source>
          <target state="translated">몇 가지 예 :</target>
        </trans-unit>
        <trans-unit id="4c99805f6416ffdad0dc984ed644d17c7e09fec8" translate="yes" xml:space="preserve">
          <source>Some features of compiled Nim may not work on NimScript, but often a graceful and seamless fallback degradation is used.</source>
          <target state="translated">컴파일 된 Nim의 일부 기능은 NimScript에서 작동하지 않을 수 있지만 종종 우아하고 원활한 폴백 저하가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fe96e74863b969e67aadbcee97242dea95a7b5c7" translate="yes" xml:space="preserve">
          <source>Some file not essential for the compiler's working could not be opened.</source>
          <target state="translated">컴파일러 작업에 필수적이지 않은 일부 파일을 열 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a01546d483ad56932b56e6f4f843c335f7232622" translate="yes" xml:space="preserve">
          <source>Some keywords are unused; they are reserved for future developments of the language.</source>
          <target state="translated">일부 키워드는 사용되지 않습니다. 그들은 언어의 미래 발전을 위해 예약되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="11703393969cdcd0e15d09365b58d998d6c52d0e" translate="yes" xml:space="preserve">
          <source>Some or all of these restrictions are likely to be lifted over time.</source>
          <target state="translated">이러한 제한의 일부 또는 전부는 시간이 지남에 따라 해제 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7cb6d242fa43323b661e091ed4496920bf211e2d" translate="yes" xml:space="preserve">
          <source>Some terminology: in the example &lt;code&gt;question&lt;/code&gt; is called a (formal) &lt;em&gt;parameter&lt;/em&gt;, &lt;code&gt;&quot;Should I...&quot;&lt;/code&gt; is called an &lt;em&gt;argument&lt;/em&gt; that is passed to this parameter.</source>
          <target state="translated">일부 용어는 : 예제에 &lt;code&gt;question&lt;/code&gt; A (공식)라고 &lt;em&gt;매개 변수&lt;/em&gt; , &lt;code&gt;&quot;Should I...&quot;&lt;/code&gt; 이라고 &lt;em&gt;주장&lt;/em&gt; 이 매개 변수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="6e93c59acfbd4ca81868fe83cdee12101d3d70c7" translate="yes" xml:space="preserve">
          <source>Some user defined warning.</source>
          <target state="translated">일부 사용자 정의 경고.</target>
        </trans-unit>
        <trans-unit id="2792a0bbee79e8f9cbb1037fd31c4e0799e70c9e" translate="yes" xml:space="preserve">
          <source>Some user-defined warning.</source>
          <target state="translated">일부 사용자 정의 경고.</target>
        </trans-unit>
        <trans-unit id="3e528bc25235f43baac24e5a82e6fba6ce5447ef" translate="yes" xml:space="preserve">
          <source>Sometimes a C++ class has a private copy constructor and so code like &lt;code&gt;Class c = Class(1,2);&lt;/code&gt; must not be generated but instead &lt;code&gt;Class c(1,2);&lt;/code&gt;. For this purpose the Nim proc that wraps a C++ constructor needs to be annotated with the &lt;span id=&quot;constructor_1&quot;&gt;constructor&lt;/span&gt; pragma. This pragma also helps to generate faster C++ code since construction then doesn't invoke the copy constructor:</source>
          <target state="translated">때때로 C ++ 클래스에는 개인용 복사 생성자가 있으므로 &lt;code&gt;Class c = Class(1,2);&lt;/code&gt; 와 같은 코드가 있습니다 . 생성되지 않고 대신 &lt;code&gt;Class c(1,2);&lt;/code&gt; . 이를 위해 C ++ 생성자를 래핑하는 Nim proc에 &lt;span id=&quot;constructor_1&quot;&gt;생성자&lt;/span&gt; pragma를 주석 처리해야합니다 . 이 pragma는 또한 생성자가 복사 생성자를 호출하지 않으므로 더 빠른 C ++ 코드를 생성하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="bcc3be723e61378a7bd341a598c9cdaf7ca74930" translate="yes" xml:space="preserve">
          <source>Sometimes it is required to explicitly &lt;code&gt;move&lt;/code&gt; a value into its final position:</source>
          <target state="translated">때로는 값을 최종 위치로 명시 적으로 &lt;code&gt;move&lt;/code&gt; 해야하는 경우가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e2bd3dc5145a046d8756e4c3b5e6319385dd6c64" translate="yes" xml:space="preserve">
          <source>Somewhat confusingly, &lt;code&gt;spawn&lt;/code&gt; is also used in the &lt;code&gt;parallel&lt;/code&gt; statement with slightly different semantics. &lt;code&gt;spawn&lt;/code&gt; always takes a call expression of the form &lt;code&gt;f(a, ...)&lt;/code&gt;. Let &lt;code&gt;T&lt;/code&gt; be &lt;code&gt;f&lt;/code&gt;'s return type. If &lt;code&gt;T&lt;/code&gt; is &lt;code&gt;void&lt;/code&gt; then &lt;code&gt;spawn&lt;/code&gt;'s return type is also &lt;code&gt;void&lt;/code&gt; otherwise it is &lt;code&gt;FlowVar[T]&lt;/code&gt;.</source>
          <target state="translated">다소 혼란스럽게도 &lt;code&gt;spawn&lt;/code&gt; 은 의미가 약간 다른 &lt;code&gt;parallel&lt;/code&gt; 명령문 에도 사용됩니다 . &lt;code&gt;spawn&lt;/code&gt; 은 항상 &lt;code&gt;f(a, ...)&lt;/code&gt; 형식의 호출 식을 사용합니다 . 하자 &lt;code&gt;T&lt;/code&gt; 는 수 &lt;code&gt;f&lt;/code&gt; 를 의 반환 유형입니다. 경우 &lt;code&gt;T&lt;/code&gt; 는 이다 &lt;code&gt;void&lt;/code&gt; 후 &lt;code&gt;spawn&lt;/code&gt; 의 반환형 또한 &lt;code&gt;void&lt;/code&gt; 그것이 그렇지 &lt;code&gt;FlowVar[T]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05a12e43a6dd4074ef2ab1e6ecd922c3cb38965c" translate="yes" xml:space="preserve">
          <source>Sorts &lt;code&gt;t&lt;/code&gt; according to the function &lt;code&gt;cmp&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cmp&lt;/code&gt; 함수에 따라 &lt;code&gt;t&lt;/code&gt; 를 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="8099a50b2ff1aef1a572229dbc6bb83bcf343291" translate="yes" xml:space="preserve">
          <source>Sorts the count table so that, by default, the entry with the highest counter comes first.</source>
          <target state="translated">기본적으로 카운터가 가장 높은 항목이 먼저 오도록 개수 테이블을 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="6da13addb000b67d42a6d66391713819e634149f" translate="yes" xml:space="preserve">
          <source>Source</source>
          <target state="translated">Source</target>
        </trans-unit>
        <trans-unit id="e2de8e03eb7da80a014273d286391bd6a4e6c758" translate="yes" xml:space="preserve">
          <source>Source Code Filters</source>
          <target state="translated">소스 코드 필터</target>
        </trans-unit>
        <trans-unit id="3c6c119ba4476a2d13a835d7d4fcadc52e3ed050" translate="yes" xml:space="preserve">
          <source>Source code filters</source>
          <target state="translated">소스 코드 필터</target>
        </trans-unit>
        <trans-unit id="c53df7c2a21cf1297f0d2b03c1f92cdd4f7da3c4" translate="yes" xml:space="preserve">
          <source>Source highlighter for programming or markup languages. Currently only few languages are supported, other languages may be added. The interface supports one language nested in another.</source>
          <target state="translated">프로그래밍 또는 마크 업 언어를위한 소스 형광펜. 현재 일부 언어 만 지원되며 다른 언어가 추가 될 수 있습니다. 이 인터페이스는 한 언어가 다른 언어에 중첩 된 언어를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="a31654d6246eaac5d66d384cc8c25494e0ce3446" translate="yes" xml:space="preserve">
          <source>SourceMap:</source>
          <target state="translated">SourceMap:</target>
        </trans-unit>
        <trans-unit id="78e40bbde6cea61ee465b837c9694d3b3df9fb7d" translate="yes" xml:space="preserve">
          <source>SourceNode:</source>
          <target state="translated">SourceNode:</target>
        </trans-unit>
        <trans-unit id="eab896c29ce50dc39f5dca1063b76a5383b27e44" translate="yes" xml:space="preserve">
          <source>Spacing also determines whether &lt;code&gt;(a, b)&lt;/code&gt; is parsed as an argument list of a call or whether it is parsed as a tuple constructor:</source>
          <target state="translated">간격은 또한 &lt;code&gt;(a, b)&lt;/code&gt; 가 호출의 인수 목록으로 구문 분석되는지 또는 튜플 생성자로 구문 분석되는지 여부를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="97ec2600b2e9e2b39f1b45d05ed5cf67fa2a6b53" translate="yes" xml:space="preserve">
          <source>Spacing also determines whether &lt;code&gt;(a, b)&lt;/code&gt; is parsed as an the argument list of a call or whether it is parsed as a tuple constructor:</source>
          <target state="translated">간격은 &lt;code&gt;(a, b)&lt;/code&gt; 가 호출의 인수 목록으로 구문 분석되는지 또는 튜플 생성자로 구문 분석되는지 여부를 판별합니다.</target>
        </trans-unit>
        <trans-unit id="49958459a4b8e1eb5bdebb01446519ea2cfeeae3" translate="yes" xml:space="preserve">
          <source>Spacing and Whitespace Conventions</source>
          <target state="translated">간격 및 공백 규칙</target>
        </trans-unit>
        <trans-unit id="f85b49adfe2544a4256034716240a926337b5692" translate="yes" xml:space="preserve">
          <source>Spawn statement</source>
          <target state="translated">스폰 진술</target>
        </trans-unit>
        <trans-unit id="7f5e6ec9291de36ece3989223451c6d866841e20" translate="yes" xml:space="preserve">
          <source>Spawns a new task if a CPU core is ready, otherwise executes the call in the calling thread.</source>
          <target state="translated">CPU 코어가 준비되면 새 작업을 생성하고, 그렇지 않으면 호출 스레드에서 호출을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="491354246b5eb961b32b192cc1c055827162214c" translate="yes" xml:space="preserve">
          <source>Special Operators</source>
          <target state="translated">특수 연산자</target>
        </trans-unit>
        <trans-unit id="e552d4b23e8c0dfe309d5166ff7dd844ec3d8ffe" translate="yes" xml:space="preserve">
          <source>Special Types</source>
          <target state="translated">특수 유형</target>
        </trans-unit>
        <trans-unit id="b23516a1efd1b704e237ef91f3620e190e02d0f3" translate="yes" xml:space="preserve">
          <source>Special built-in that takes a variable number of arguments. Each argument is converted to a string via &lt;code&gt;$&lt;/code&gt;, so it works for user-defined types that have an overloaded &lt;code&gt;$&lt;/code&gt; operator. It is roughly equivalent to &lt;code&gt;writeLine(stdout, x); flushFile(stdout)&lt;/code&gt;, but available for the JavaScript target too.</source>
          <target state="translated">가변 개수의 인수를 사용하는 특수 내장. 각 인수는 &lt;code&gt;$&lt;/code&gt; 를 통해 문자열로 변환 되므로 &lt;code&gt;$&lt;/code&gt; 연산자 가 오버로드 된 사용자 정의 유형에 작동합니다. &lt;code&gt;writeLine(stdout, x); flushFile(stdout)&lt;/code&gt; 와 거의 같습니다 . flushFile (stdout) 이지만 JavaScript 대상에도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f05b76e5943515524507d846a60375ad51a71e57" translate="yes" xml:space="preserve">
          <source>Special care has to be taken if an untraced object contains traced objects like traced references, strings or sequences: in order to free everything properly, the built-in procedure &lt;code&gt;GCunref&lt;/code&gt; has to be called before freeing the untraced memory manually:</source>
          <target state="translated">추적되지 않은 개체에 추적 된 참조, 문자열 또는 시퀀스와 같은 추적 된 개체가 포함되어 있으면 특별한주의를 기울여야합니다. 모든 것을 올바르게 해제하려면 추적되지 않은 메모리를 수동으로 해제하기 전에 내장 프로 시저 &lt;code&gt;GCunref&lt;/code&gt; 를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="d5bf82fca68e0b30f5ae500e954ab224338fb45e" translate="yes" xml:space="preserve">
          <source>Special care has to be taken if an untraced object contains traced objects like traced references, strings, or sequences: in order to free everything properly, the built-in procedure &lt;code&gt;reset&lt;/code&gt; has to be called before freeing the untraced memory manually:</source>
          <target state="translated">추적되지 않은 개체에 추적 된 참조, 문자열 또는 시퀀스와 같은 추적 된 개체가 포함 된 경우 특별한주의가 필요합니다. 모든 것을 올바르게 해제하려면 추적되지 않은 메모리를 수동으로 해제하기 전에 내장 프로 시저 &lt;code&gt;reset&lt;/code&gt; 을 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="61a1144053e885f25b2f29b96643ca53009d88fc" translate="yes" xml:space="preserve">
          <source>Special compile-time procedure that checks whether &lt;code&gt;x&lt;/code&gt; can be compiled without any semantic error. This can be used to check whether a type supports some operation:</source>
          <target state="translated">의미 오류없이 &lt;code&gt;x&lt;/code&gt; 를 컴파일 할 수 있는지 확인하는 특수 컴파일 타임 프로 시저입니다 . 유형이 일부 작업을 지원하는지 여부를 확인하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2474ad95af7f4da4dbda7d91ab5b8790b6f4e700" translate="yes" xml:space="preserve">
          <source>Special compile-time procedure that checks whether &lt;code&gt;x&lt;/code&gt; is declared in the current scope. &lt;code&gt;x&lt;/code&gt; has to be an identifier.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 가 현재 범위에서 선언 되었는지 여부를 확인하는 특수 컴파일 타임 프로 시저입니다 . &lt;code&gt;x&lt;/code&gt; 는 식별자 여야합니다.</target>
        </trans-unit>
        <trans-unit id="ba9abb737c39687f0994b908852ee20d14e995ef" translate="yes" xml:space="preserve">
          <source>Special compile-time procedure that checks whether &lt;code&gt;x&lt;/code&gt; is declared. &lt;code&gt;x&lt;/code&gt; has to be an identifier or a qualified identifier.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 가 선언 되었는지 확인하는 특수 컴파일 타임 프로 시저입니다 . &lt;code&gt;x&lt;/code&gt; 는 식별자 또는 정규화 된 식별자 여야합니다.</target>
        </trans-unit>
        <trans-unit id="5c3f74c4622d8b905ff6bbe0dc34addb3b5b1cdd" translate="yes" xml:space="preserve">
          <source>Special compile-time procedure that checks whether &lt;code&gt;x&lt;/code&gt; is defined.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 가 정의 되었는지 확인하는 특수 컴파일 타임 프로 시저입니다 .</target>
        </trans-unit>
        <trans-unit id="a17ccd8347abd9eacd874ea7f27e074ed74467ae" translate="yes" xml:space="preserve">
          <source>Special compile-time procedure that checks whether &lt;em&gt;x&lt;/em&gt; can be compiled without any semantic error. This can be used to check whether a type supports some operation:</source>
          <target state="translated">시맨틱 오류없이 &lt;em&gt;x&lt;/em&gt; 를 컴파일 할 수 있는지 확인하는 특수 컴파일 타임 프로 시저 유형이 일부 작업을 지원하는지 여부를 확인하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a820fa7aa10cc8d5c0e8b3e7af391dbbe69898ef" translate="yes" xml:space="preserve">
          <source>Special compile-time procedure that checks whether &lt;em&gt;x&lt;/em&gt; is declared in the current scope. &lt;em&gt;x&lt;/em&gt; has to be an identifier.</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt; 가 현재 범위에서 선언되어 있는지 확인하는 특수 컴파일 타임 프로 시저 &lt;em&gt;x&lt;/em&gt; 는 식별자 여야합니다.</target>
        </trans-unit>
        <trans-unit id="a4043ead367d4586fd4c1c0c21c211b7645a7f10" translate="yes" xml:space="preserve">
          <source>Special compile-time procedure that checks whether &lt;em&gt;x&lt;/em&gt; is declared. &lt;em&gt;x&lt;/em&gt; has to be an identifier or a qualified identifier. This can be used to check whether a library provides a certain feature or not:</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt; 가 선언 되었는지 확인하는 특수한 컴파일 타임 프로 시저 &lt;em&gt;x&lt;/em&gt; 는 식별자 또는 한정된 식별자 여야합니다. 라이브러리가 특정 기능을 제공하는지 여부를 확인하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c5d0a758aca8fbe6d34b755784c8711b34f72c9" translate="yes" xml:space="preserve">
          <source>Special compile-time procedure that checks whether &lt;em&gt;x&lt;/em&gt; is defined. &lt;em&gt;x&lt;/em&gt; is an external symbol introduced through the compiler's &lt;a href=&quot;nimc#compile-time-symbols&quot;&gt;-d:x switch&lt;/a&gt; to enable build time conditionals:</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt; 가 정의 되어 있는지 확인하는 특수한 컴파일 타임 절차 . &lt;em&gt;x&lt;/em&gt; 는 빌드 시간 조건을 활성화하기 위해 컴파일러의 &lt;a href=&quot;nimc#compile-time-symbols&quot;&gt;-d : x 스위치&lt;/a&gt; 를 통해 도입 된 외부 심볼입니다 .</target>
        </trans-unit>
        <trans-unit id="9417dbf6690f564bf56645ff26108dd839309071" translate="yes" xml:space="preserve">
          <source>Special future that acts as a queue. Its API is still experimental and so is subject to change.</source>
          <target state="translated">대기열 역할을하는 특별한 미래. API는 아직 실험 중이므로 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b87469217d52eb90970a30a86cef1ff844cf6f1d" translate="yes" xml:space="preserve">
          <source>Special magic to prohibit dynamic binding for &lt;span id=&quot;method_1&quot;&gt;method&lt;/span&gt; calls. This is similar to &lt;span id=&quot;super_1&quot;&gt;super&lt;/span&gt; in ordinary OO languages.</source>
          <target state="translated">&lt;span id=&quot;method_1&quot;&gt;메서드&lt;/span&gt; 호출에 대한 동적 바인딩을 금지하는 특별한 마법 . 이것은 일반적인 OO 언어의 &lt;span id=&quot;super_1&quot;&gt;super&lt;/span&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="57782b746713c4b81ac3390082e47036bd29bd10" translate="yes" xml:space="preserve">
          <source>Special node kinds</source>
          <target state="translated">특수 노드 종류</target>
        </trans-unit>
        <trans-unit id="202355e0f6c77c7ad33ab91f862395103c925576" translate="yes" xml:space="preserve">
          <source>Specifies an OS Error Code.</source>
          <target state="translated">OS 오류 코드를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="8fff1eb8c0263a617b1052dd18dc76abb01e14c4" translate="yes" xml:space="preserve">
          <source>Specifies the default calling convention for all procedures (and procedure types) that follow.</source>
          <target state="translated">뒤에 나오는 모든 프로 시저 및 프로 시저 유형에 대한 기본 호출 규칙을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="33f3e9bd75e7c34e8805079b75662d2523e05166" translate="yes" xml:space="preserve">
          <source>Specifies whether this attribute was specified in the original document</source>
          <target state="translated">이 속성이 원본 문서에 지정되었는지 여부를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="9340a269dc5c3688e5ddd09b6883c53291b53287" translate="yes" xml:space="preserve">
          <source>Specify the suite name delimited by &lt;code&gt;&quot;::&quot;&lt;/code&gt;.</source>
          <target state="translated">스위트 이름을 &lt;code&gt;&quot;::&quot;&lt;/code&gt; 으로 구분하여 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="ba777a0b8be9b27a2fc0aebaa99a53bd014d0bab" translate="yes" xml:space="preserve">
          <source>Specify the test name as a command line argument.</source>
          <target state="translated">테스트 이름을 명령 행 인수로 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="9ce8d37027aa3f3951f0667dbca699e808c4574d" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;fromProc&lt;/code&gt;, which is a string specifying the name of the proc that this future belongs to, is a good habit as it helps with debugging.</source>
          <target state="translated">지정 &lt;code&gt;fromProc&lt;/code&gt; 가 디버깅에 도움이로이 미래에 속한 시저의 이름을 지정하는 문자열입니다, 좋은 습관입니다.</target>
        </trans-unit>
        <trans-unit id="b1caea9869ffec0e67a014cd78af1ef02ba40db6" translate="yes" xml:space="preserve">
          <source>Specifying the location of the query</source>
          <target state="translated">쿼리 위치 지정</target>
        </trans-unit>
        <trans-unit id="d2f174e711006287701c5f441d450e26931799ec" translate="yes" xml:space="preserve">
          <source>Split a number into mantissa and exponent.</source>
          <target state="translated">숫자를 가수와 지수로 나눕니다.</target>
        </trans-unit>
        <trans-unit id="d3924b51dd7eaa83d08808569b1b0ce045cdc5be" translate="yes" xml:space="preserve">
          <source>Split a number into mantissa and exponent. &lt;em&gt;frexp&lt;/em&gt; calculates the mantissa m (a float greater than or equal to 0.5 and less than 1) and the integer value n such that &lt;em&gt;x&lt;/em&gt; (the original float value) equals m * 2**n. frexp stores n in &lt;em&gt;exponent&lt;/em&gt; and returns m.</source>
          <target state="translated">숫자를 가수와 지수로 나눕니다. &lt;em&gt;frexp&lt;/em&gt; 는 가수 m (0.5보다 크거나 같고 1보다 작은 float)과 &lt;em&gt;x&lt;/em&gt; (원래 float 값)가 m * 2 ** n 과 같은 정수 값 n을 계산합니다 . frexp는 n을 &lt;em&gt;지수로&lt;/em&gt; 저장 하고 m을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b1a1cb29495ce67ea56086c46fa44c987798e3da" translate="yes" xml:space="preserve">
          <source>Split the string at the first or last occurrence of &lt;code&gt;sep&lt;/code&gt; into a 3-tuple</source>
          <target state="translated">&lt;code&gt;sep&lt;/code&gt; 의 첫 번째 또는 마지막 항목에있는 문자열을 3 튜플로 분할합니다.</target>
        </trans-unit>
        <trans-unit id="0745140758afddfc4ee7cc02a1b14f4076dc0642" translate="yes" xml:space="preserve">
          <source>Split the string at the first or last occurrence of &lt;em&gt;sep&lt;/em&gt; into a 3-tuple</source>
          <target state="translated">&lt;em&gt;sep&lt;/em&gt; 의 첫 번째 또는 마지막 발생시 문자열을 3 개의 튜플로 분할</target>
        </trans-unit>
        <trans-unit id="357da91d1643f9b4aeae31c6c0a61d13264596ca" translate="yes" xml:space="preserve">
          <source>Split the string at the last occurrence of &lt;code&gt;sep&lt;/code&gt; into a 3-tuple</source>
          <target state="translated">&lt;code&gt;sep&lt;/code&gt; 의 마지막 항목에서 문자열을 3 튜플로 분할합니다.</target>
        </trans-unit>
        <trans-unit id="696d32e8d8bbfbcb085e88d7ad30d5090043c8af" translate="yes" xml:space="preserve">
          <source>Split the string at the last occurrence of &lt;em&gt;sep&lt;/em&gt; into a 3-tuple</source>
          <target state="translated">&lt;em&gt;sep&lt;/em&gt; 이 마지막으로 &lt;em&gt;나타날&lt;/em&gt; 때 문자열을 3 개의 튜플로 분할</target>
        </trans-unit>
        <trans-unit id="c2eeb3fff11c6c010331265e51db6f03f0c0bec3" translate="yes" xml:space="preserve">
          <source>Splits a &lt;span id=&quot;command-line_1&quot;&gt;command line&lt;/span&gt; into several components.</source>
          <target state="translated">&lt;span id=&quot;command-line_1&quot;&gt;명령 줄&lt;/span&gt; 을 여러 구성 요소로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="9b30837131faaf707d014d0ca36f825f274439f5" translate="yes" xml:space="preserve">
          <source>Splits a &lt;span id=&quot;command-line_1&quot;&gt;command line&lt;/span&gt; into several components; This proc is only occasionally useful, better use the &lt;em&gt;parseopt&lt;/em&gt; module.</source>
          <target state="translated">&lt;span id=&quot;command-line_1&quot;&gt;명령 행&lt;/span&gt; 을 여러 구성 요소로 분할합니다 . 이 proc은 가끔 유용하며 &lt;em&gt;parseopt&lt;/em&gt; 모듈을 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="e2f6fefaa7fc5767e6bf862c955b2209fdb94636" translate="yes" xml:space="preserve">
          <source>Splits a directory into (head, tail), so that &lt;code&gt;head / tail == path&lt;/code&gt; (except for edge cases like &quot;/usr&quot;).</source>
          <target state="translated">디렉토리를 (head, tail)로 분할하여 &lt;code&gt;head / tail == path&lt;/code&gt; ( &quot;/ usr&quot;과 같은 엣지 케이스 제외)</target>
        </trans-unit>
        <trans-unit id="ac12284f2a93033e5edf4ff581177a4ce6291213" translate="yes" xml:space="preserve">
          <source>Splits a directory into &lt;code&gt;(head, tail)&lt;/code&gt; tuple, so that &lt;code&gt;head / tail == path&lt;/code&gt; (except for edge cases like &quot;/usr&quot;).</source>
          <target state="translated">디렉토리를 &lt;code&gt;(head, tail)&lt;/code&gt; 튜플 로 분할하여 &lt;code&gt;head / tail == path&lt;/code&gt; 되도록합니다 ( &quot;/ usr&quot;과 같은 가장자리 사례 제외).</target>
        </trans-unit>
        <trans-unit id="d3a95cdd0557cc6b3279f5bbb847dfba5f79895c" translate="yes" xml:space="preserve">
          <source>Splits a filename into (dir, filename, extension). &lt;em&gt;dir&lt;/em&gt; does not end in &lt;em&gt;DirSep&lt;/em&gt;. &lt;em&gt;extension&lt;/em&gt; includes the leading dot.</source>
          <target state="translated">파일 이름을 (dir, filename, extension)으로 분할합니다. &lt;em&gt;dir&lt;/em&gt; 은 &lt;em&gt;DirSep로 끝나지&lt;/em&gt; 않습니다 . &lt;em&gt;확장&lt;/em&gt; 에는 선행 점이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="6ffa278e38247a2ac1e703979b50080bb13cb151" translate="yes" xml:space="preserve">
          <source>Splits a filename into &lt;code&gt;(dir, name, extension)&lt;/code&gt; tuple.</source>
          <target state="translated">파일 이름을 &lt;code&gt;(dir, name, extension)&lt;/code&gt; 튜플 로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="0c5c122db23042cfd90a1244f72637508f1b7c36" translate="yes" xml:space="preserve">
          <source>Splits a unicode string at whitespace runes.</source>
          <target state="translated">공백 룬에서 유니 코드 문자열을 분할합니다.</target>
        </trans-unit>
        <trans-unit id="e0eb4dbfc23466e146d47e1aef0ca2210571b493" translate="yes" xml:space="preserve">
          <source>Splits and distributes a sequence &lt;code&gt;s&lt;/code&gt; into &lt;code&gt;num&lt;/code&gt; sub-sequences.</source>
          <target state="translated">시퀀스 &lt;code&gt;s&lt;/code&gt; 를 &lt;code&gt;num&lt;/code&gt; 개의 하위 시퀀스로 분할하고 배포합니다 .</target>
        </trans-unit>
        <trans-unit id="38adfc0e948e54bb128886ea5c9d463e755da1e5" translate="yes" xml:space="preserve">
          <source>Splits and distributes a sequence &lt;em&gt;s&lt;/em&gt; into &lt;em&gt;num&lt;/em&gt; sub sequences.</source>
          <target state="translated">시퀀스 &lt;em&gt;s&lt;/em&gt; 를 &lt;em&gt;num&lt;/em&gt; 하위 시퀀스 로 나누고 분배합니다 .</target>
        </trans-unit>
        <trans-unit id="67034fa7574c4c2dc789cafa922979103e9da0c5" translate="yes" xml:space="preserve">
          <source>Splits path &lt;code&gt;p&lt;/code&gt; in the format &lt;code&gt;/home/user/.nimble/pkgs/package-0.1&lt;/code&gt; into &lt;code&gt;(/home/user/.nimble/pkgs/package, 0.1)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/home/user/.nimble/pkgs/package-0.1&lt;/code&gt; 형식의 경로 &lt;code&gt;p&lt;/code&gt; 를 &lt;code&gt;(/home/user/.nimble/pkgs/package, 0.1)&lt;/code&gt; 으로 분할합니다.</target>
        </trans-unit>
        <trans-unit id="a0c6e0e448f34874bff64437b7d2ab91fdf935d9" translate="yes" xml:space="preserve">
          <source>Splits the string &lt;code&gt;s&lt;/code&gt; at whitespace stripping leading and trailing whitespace if necessary. If &lt;code&gt;maxsplit&lt;/code&gt; is specified and is positive, no more than &lt;code&gt;maxsplit&lt;/code&gt; splits is made.</source>
          <target state="translated">문자열 분할 &lt;code&gt;s&lt;/code&gt; 제거 선도하고 필요한 경우 공백을 후행 공백에. 경우 &lt;code&gt;maxsplit&lt;/code&gt; 이 지정입니다 긍정적 인, 더 이상 &lt;code&gt;maxsplit&lt;/code&gt; 분할이 이루어지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a79255370060c2e50f8a5845d572dc8618abf3bc" translate="yes" xml:space="preserve">
          <source>Splits the string &lt;code&gt;s&lt;/code&gt; into a seq of substrings.</source>
          <target state="translated">문자열 &lt;code&gt;s&lt;/code&gt; 를 일련 의 하위 문자열로 나눕니다.</target>
        </trans-unit>
        <trans-unit id="311bb78cfb0803fbb4897fbb48f104ca2b75267d" translate="yes" xml:space="preserve">
          <source>Splits the string &lt;code&gt;s&lt;/code&gt; into its containing lines.</source>
          <target state="translated">문자열 &lt;code&gt;s&lt;/code&gt; 를 포함하는 행으로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="9d3dfa37086f0dbeae0676940a5409ddabb65851" translate="yes" xml:space="preserve">
          <source>Splits the string &lt;code&gt;s&lt;/code&gt; into substrings from the right using a string separator. Works exactly the same as &lt;a href=&quot;#split.i,string,char,int&quot;&gt;split iterator&lt;/a&gt; except in reverse order.</source>
          <target state="translated">문자열 구분 기호를 사용하여 문자열 &lt;code&gt;s&lt;/code&gt; 를 오른쪽에서 하위 문자열 로 분할합니다 . 역순을 제외하고는 &lt;a href=&quot;#split.i,string,char,int&quot;&gt;분할 반복기&lt;/a&gt; 와 정확히 동일하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="b41c3cbf2f0adaa0bbee65160f20951f5269090f" translate="yes" xml:space="preserve">
          <source>Splits the string &lt;code&gt;s&lt;/code&gt; into substrings from the right using a string separator. Works exactly the same as &lt;a href=&quot;#split.i,string,string,int&quot;&gt;split iterator&lt;/a&gt; except in reverse order.</source>
          <target state="translated">문자열 구분 기호를 사용하여 문자열 &lt;code&gt;s&lt;/code&gt; 를 오른쪽에서 하위 문자열 로 분할합니다 . 역순을 제외하고는 &lt;a href=&quot;#split.i,string,string,int&quot;&gt;분할 반복기&lt;/a&gt; 와 정확히 동일하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="d44dd104aac4dadd7ca43c2656e20ef01f7597d4" translate="yes" xml:space="preserve">
          <source>Splits the string &lt;code&gt;s&lt;/code&gt; into substrings using a group of separators.</source>
          <target state="translated">구분 기호 그룹을 사용하여 문자열 &lt;code&gt;s&lt;/code&gt; 를 하위 문자열 로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="dd727d6fb32d8fea32dc574d9e3bd25f3c2e615d" translate="yes" xml:space="preserve">
          <source>Splits the string &lt;code&gt;s&lt;/code&gt; into substrings using a single separator.</source>
          <target state="translated">단일 구분 기호를 사용하여 문자열 &lt;code&gt;s&lt;/code&gt; 를 하위 문자열 로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="19087b979124f5e2b74c5183ac9c7a06ad26185e" translate="yes" xml:space="preserve">
          <source>Splits the string &lt;code&gt;s&lt;/code&gt; into substrings using a string separator.</source>
          <target state="translated">문자열 구분 기호를 사용하여 문자열 &lt;code&gt;s&lt;/code&gt; 를 하위 문자열 로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="cb7b44f53469c886c88f238f833dcf716ae5cf1d" translate="yes" xml:space="preserve">
          <source>Splits the string &lt;code&gt;s&lt;/code&gt; into substrings.</source>
          <target state="translated">문자열 &lt;code&gt;s&lt;/code&gt; 를 하위 문자열 로 나눕니다.</target>
        </trans-unit>
        <trans-unit id="7bee92474f34808ecc0e41e36df829980b2f1e85" translate="yes" xml:space="preserve">
          <source>Splits the string &lt;em&gt;s&lt;/em&gt; into its containing lines.</source>
          <target state="translated">문자열 분할 &lt;em&gt;들&lt;/em&gt; 의 포함 라인에.</target>
        </trans-unit>
        <trans-unit id="5b2ee834c17d5b26b6e4fac9083478adf72ace42" translate="yes" xml:space="preserve">
          <source>Splits the string &lt;em&gt;s&lt;/em&gt; into substrings from the right using a string separator. Works exactly the same as &lt;a href=&quot;#split.i,string,char,int&quot;&gt;split iterator&lt;/a&gt; except in reverse order.</source>
          <target state="translated">문자열 분할 &lt;em&gt;들&lt;/em&gt; 스트링 분리기를 사용하여 오른쪽에 하위. 역순을 제외하고 &lt;a href=&quot;#split.i,string,char,int&quot;&gt;split iterator&lt;/a&gt; 와 정확히 동일하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="087310e18b69609a2aa211f0f42cebd7c1cd07af" translate="yes" xml:space="preserve">
          <source>Splits the string &lt;em&gt;s&lt;/em&gt; into substrings from the right using a string separator. Works exactly the same as &lt;a href=&quot;#split.i,string,string,int&quot;&gt;split iterator&lt;/a&gt; except in reverse order.</source>
          <target state="translated">문자열 분할 &lt;em&gt;들&lt;/em&gt; 스트링 분리기를 사용하여 오른쪽에 하위. 역순을 제외하고 &lt;a href=&quot;#split.i,string,string,int&quot;&gt;split iterator&lt;/a&gt; 와 정확히 동일하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="cd60b97467de78d203515610e7c117f7aca90a40" translate="yes" xml:space="preserve">
          <source>Splits the string &lt;em&gt;s&lt;/em&gt; into substrings using a group of separators.</source>
          <target state="translated">구분 기호 그룹을 사용하여 문자열 &lt;em&gt;s&lt;/em&gt; 를 하위 문자열 로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="006e1144089a0526e01f597553d1e7c5c932d6fd" translate="yes" xml:space="preserve">
          <source>Splits the string &lt;em&gt;s&lt;/em&gt; into substrings using a single separator.</source>
          <target state="translated">문자열 분할 &lt;em&gt;S를&lt;/em&gt; 하나의 세퍼레이터를 사용하여 문자열로.</target>
        </trans-unit>
        <trans-unit id="f52fdc09a9930420c66d61ce94065811386774f2" translate="yes" xml:space="preserve">
          <source>Splits the string &lt;em&gt;s&lt;/em&gt; into substrings using a string separator.</source>
          <target state="translated">문자열 구분 기호를 사용하여 문자열 &lt;em&gt;s&lt;/em&gt; 를 하위 문자열 로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="bdcf8c0eeb58a21cdf0ea123c375dc7b74b4c1c3" translate="yes" xml:space="preserve">
          <source>Splits the string &lt;em&gt;s&lt;/em&gt; into substrings.</source>
          <target state="translated">문자열 &lt;em&gt;s&lt;/em&gt; 를 하위 문자열 로 나눕니다.</target>
        </trans-unit>
        <trans-unit id="1dd687207c4fa000c40c633be6645ca101c42a3b" translate="yes" xml:space="preserve">
          <source>Splits the unicode string &lt;code&gt;s&lt;/code&gt; into substrings using a group of separators.</source>
          <target state="translated">구분 기호 그룹을 사용하여 유니 코드 문자열 &lt;code&gt;s&lt;/code&gt; 를 하위 문자열로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="1e4a4f107d4eed5022d7f5095d62d3117ae4133e" translate="yes" xml:space="preserve">
          <source>Splits the unicode string &lt;code&gt;s&lt;/code&gt; into substrings using a single separator.</source>
          <target state="translated">단일 구분 기호를 사용하여 유니 코드 문자열 &lt;code&gt;s&lt;/code&gt; 를 하위 문자열로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="79f43d40e9d396354de7c696aca8c199f1bcedbe" translate="yes" xml:space="preserve">
          <source>Square root for a complex number &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">복소수 &lt;code&gt;z&lt;/code&gt; 에 대한 제곱근 .</target>
        </trans-unit>
        <trans-unit id="7ba91be4e0a331af370fe3ce81d200f372c209c4" translate="yes" xml:space="preserve">
          <source>Square root for a complex number &lt;em&gt;z&lt;/em&gt;.</source>
          <target state="translated">복소수에 대한 제곱근 &lt;em&gt;Z&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="c7d890a6474c971c057ab4ea575d83552a62c69b" translate="yes" xml:space="preserve">
          <source>StackTrace</source>
          <target state="translated">StackTrace</target>
        </trans-unit>
        <trans-unit id="5834da0d9d1f734eeb82b865257b78b65132ac61" translate="yes" xml:space="preserve">
          <source>StackTrace option</source>
          <target state="translated">StackTrace 옵션</target>
        </trans-unit>
        <trans-unit id="10d2c7526b4992169414241d9760448b09f2d9fa" translate="yes" xml:space="preserve">
          <source>Standalone NimScript</source>
          <target state="translated">독립형 NimScript</target>
        </trans-unit>
        <trans-unit id="97a27501491262c65d421114e5586483e201f5db" translate="yes" xml:space="preserve">
          <source>Standard format implementation for &lt;code&gt;SomeFloat&lt;/code&gt;. It makes little sense to call this directly, but it is required to exist by the &lt;code&gt;&amp;amp;&lt;/code&gt; macro.</source>
          <target state="translated">표준 형식으로 구현 &lt;code&gt;SomeFloat&lt;/code&gt; . 이것을 직접 호출하는 것은 거의 의미가 없지만 &lt;code&gt;&amp;amp;&lt;/code&gt; 매크로에 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="6c9988eb477879aef4e84166efb847dbda62ecb3" translate="yes" xml:space="preserve">
          <source>Standard format implementation for &lt;code&gt;SomeInteger&lt;/code&gt;. It makes little sense to call this directly, but it is required to exist by the &lt;code&gt;&amp;amp;&lt;/code&gt; macro.</source>
          <target state="translated">표준 형식으로 구현 &lt;code&gt;SomeInteger&lt;/code&gt; . 이것을 직접 호출하는 것은 거의 의미가 없지만 &lt;code&gt;&amp;amp;&lt;/code&gt; 매크로에 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="82b4f534d5b70cca26d540da82df24c1661c25fa" translate="yes" xml:space="preserve">
          <source>Standard format implementation for &lt;code&gt;string&lt;/code&gt;. It makes little sense to call this directly, but it is required to exist by the &lt;code&gt;&amp;amp;&lt;/code&gt; macro.</source>
          <target state="translated">표준 형식으로 구현 &lt;code&gt;string&lt;/code&gt; . 이것을 직접 호출하는 것은 거의 의미가 없지만 &lt;code&gt;&amp;amp;&lt;/code&gt; 매크로에 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="286926a53b71c9700c85a0fe22c8494800f423ec" translate="yes" xml:space="preserve">
          <source>Standard format specifier for strings, integers and floats</source>
          <target state="translated">문자열, 정수 및 부동 소수점에 대한 표준 형식 지정자</target>
        </trans-unit>
        <trans-unit id="b905956828f2d2a0346b285adad0c659b8f2c859" translate="yes" xml:space="preserve">
          <source>Standard input, output, error streams are inherited from the calling process. This operation is also often called &lt;span id=&quot;system_1&quot;&gt;system&lt;/span&gt;.</source>
          <target state="translated">표준 입력, 출력, 오류 스트림은 호출 프로세스에서 상속됩니다. 이 작업은 종종 &lt;span id=&quot;system_1&quot;&gt;시스템&lt;/span&gt; 이라고도 &lt;span id=&quot;system_1&quot;&gt;합니다&lt;/span&gt; .</target>
        </trans-unit>
        <trans-unit id="508cfdd242a4dbc44b800a23c67d10428e2c6d2c" translate="yes" xml:space="preserve">
          <source>Standard library modules</source>
          <target state="translated">표준 라이브러리 모듈</target>
        </trans-unit>
        <trans-unit id="8145c9acb86fe443ae75d4c5e7fe94e5a200ea66" translate="yes" xml:space="preserve">
          <source>Start of a borrow</source>
          <target state="translated">대출 시작</target>
        </trans-unit>
        <trans-unit id="e4536991ce4cfc6d6a8e33066d777f94420dea8c" translate="yes" xml:space="preserve">
          <source>Start types with a capital &lt;code&gt;T&lt;/code&gt;, unless they are pointers/references which start with &lt;code&gt;P&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;P&lt;/code&gt; 로 시작하는 포인터 / 참조가 아닌 경우 대문자 &lt;code&gt;T&lt;/code&gt; 로 시작하십시오 .</target>
        </trans-unit>
        <trans-unit id="59898b19b077c1855bd9ba49e69a1b8694d1ea8a" translate="yes" xml:space="preserve">
          <source>Start watching the file descriptor for read availability and then call the callback &lt;code&gt;cb&lt;/code&gt;.</source>
          <target state="translated">읽기 가능한 파일 디스크립터를보고 콜백 &lt;code&gt;cb&lt;/code&gt; 를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="c48d22286fde2df857b4c72495d932198256b33b" translate="yes" xml:space="preserve">
          <source>Start watching the file descriptor for write availability and then call the callback &lt;code&gt;cb&lt;/code&gt;.</source>
          <target state="translated">쓰기 가능한 파일 디스크립터를보고 콜백 &lt;code&gt;cb&lt;/code&gt; 를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="9b421a7f08c76f9a999f702b3886f234006dc2b2" translate="yes" xml:space="preserve">
          <source>StartSize:</source>
          <target state="translated">StartSize:</target>
        </trans-unit>
        <trans-unit id="054ba33cb4253dee325c37ab2294e9af5ddaf8b9" translate="yes" xml:space="preserve">
          <source>Starting from Nim v0.20, sets are initialized by default and it is not necessary to call this function explicitly.</source>
          <target state="translated">Nim v0.20부터 세트는 기본적으로 초기화되며이 함수를 명시 적으로 호출 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="6fc27f00a8be268d46b405b0b4c067109aa2c4d4" translate="yes" xml:space="preserve">
          <source>Starting from Nim v0.20, tables are initialized by default and it is not necessary to call this function explicitly.</source>
          <target state="translated">Nim v0.20부터 테이블은 기본적으로 초기화되며이 함수를 명시 적으로 호출 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="7e536d288d0851f6d9e8276875d7977f4844842b" translate="yes" xml:space="preserve">
          <source>Starting with c2nim version 0.9.8 it is also possible to directly embed Nim code in the C file. This is handy when you don't want to modify the generated Nim code at all. Nim code can be embedded directly via &lt;code&gt;#@ Nim code here @#&lt;/code&gt;:</source>
          <target state="translated">c2nim 버전 0.9.8부터는 Nim 코드를 C 파일에 직접 포함시킬 수도 있습니다. 생성 된 Nim 코드를 전혀 수정하지 않으려는 경우에 편리합니다. Nim 코드는 &lt;code&gt;#@ Nim code here @#&lt;/code&gt; 를 통해 직접 임베드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bde902e0e1c0a059e5fe83c9f5f9792a0e51c8a5" translate="yes" xml:space="preserve">
          <source>Starting with the simplest case, a &lt;code&gt;type&lt;/code&gt; section appears much like &lt;code&gt;var&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt;.</source>
          <target state="translated">가장 간단한 경우부터 &lt;code&gt;type&lt;/code&gt; 섹션은 &lt;code&gt;var&lt;/code&gt; 및 &lt;code&gt;const&lt;/code&gt; 와 매우 유사 합니다.</target>
        </trans-unit>
        <trans-unit id="5750880c4922c991ffb618071f7738d4d0253363" translate="yes" xml:space="preserve">
          <source>Starting with version 0.13.0 of the language Nim supports multiline comments. They look like:</source>
          <target state="translated">언어의 0.10.1 버전부터 Nim은 여러 줄 주석을 지원합니다. 그들은 다음과 같습니다</target>
        </trans-unit>
        <trans-unit id="0bc24feae6a6568706e81e7f2d7d483485e4dca3" translate="yes" xml:space="preserve">
          <source>Starting with version 0.14 of the language, Nim supports &lt;code&gt;field&lt;/code&gt; as a shortcut for &lt;code&gt;self.field&lt;/code&gt; comparable to the &lt;span id=&quot;this_1&quot;&gt;this&lt;/span&gt; keyword in Java or C++. This feature has to be explicitly enabled via a &lt;code&gt;{.this: self.}&lt;/code&gt; statement pragma. This pragma is active for the rest of the module:</source>
          <target state="translated">언어의 0.14 버전부터 Nim은 Java 또는 C ++에서 &lt;span id=&quot;this_1&quot;&gt;this&lt;/span&gt; 키워드 와 비교할 수있는 &lt;code&gt;self.field&lt;/code&gt; 의 바로 가기로 &lt;code&gt;field&lt;/code&gt; 를 지원 합니다 . 이 기능은 &lt;code&gt;{.this: self.}&lt;/code&gt; 문 pragma 를 통해 명시 적으로 활성화해야합니다 . 이 pragma는 나머지 모듈에 대해 활성화되어 있습니다.&lt;span id=&quot;this_1&quot;&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9e2e52b1cadad2c9efa4d34e7de55389562156da" translate="yes" xml:space="preserve">
          <source>Starting with version 0.20 &lt;code&gt;system.reset&lt;/code&gt; cannot be used anymore to support object branch changes as this never was completely memory safe.</source>
          <target state="translated">버전 0.20부터 &lt;code&gt;system.reset&lt;/code&gt; 은 완전히 메모리에 안전하지 않았기 때문에 더 이상 객체 분기 변경을 지원하는 데 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d8d827e84f9b4faa44ae63a13679c36985de42aa" translate="yes" xml:space="preserve">
          <source>Starts a process. &lt;code&gt;Command&lt;/code&gt; is the executable file, &lt;code&gt;workingDir&lt;/code&gt; is the process's working directory. If &lt;code&gt;workingDir == &quot;&quot;&lt;/code&gt; the current directory is used (default). &lt;code&gt;args&lt;/code&gt; are the command line arguments that are passed to the process. On many operating systems, the first command line argument is the name of the executable. &lt;code&gt;args&lt;/code&gt; should &lt;em&gt;not&lt;/em&gt; contain this argument! &lt;code&gt;env&lt;/code&gt; is the environment that will be passed to the process. If &lt;code&gt;env == nil&lt;/code&gt; (default) the environment is inherited of the parent process. &lt;code&gt;options&lt;/code&gt; are additional flags that may be passed to &lt;code&gt;startProcess&lt;/code&gt;. See the documentation of &lt;a href=&quot;#ProcessOption&quot;&gt;ProcessOption&lt;/a&gt; for the meaning of these flags.</source>
          <target state="translated">프로세스를 시작합니다. &lt;code&gt;Command&lt;/code&gt; 는 실행 파일이고 &lt;code&gt;workingDir&lt;/code&gt; 은 프로세스의 작업 디렉토리입니다. 경우 &lt;code&gt;workingDir == &quot;&quot;&lt;/code&gt; 현재 디렉토리가 사용됩니다 (기본값). &lt;code&gt;args&lt;/code&gt; 는 프로세스에 전달되는 명령 줄 인수입니다. 많은 운영 체제에서 첫 번째 명령 줄 인수는 실행 파일의 이름입니다. &lt;code&gt;args&lt;/code&gt; 는 이 인수를 포함 &lt;em&gt;하지 않아야&lt;/em&gt; 합니다! &lt;code&gt;env&lt;/code&gt; 는 프로세스에 전달 될 환경입니다. 경우 &lt;code&gt;env == nil&lt;/code&gt; (기본값) 환경은 부모 프로세스의 상속됩니다. &lt;code&gt;options&lt;/code&gt; 은 &lt;code&gt;startProcess&lt;/code&gt; 에 전달할 수있는 추가 플래그입니다 . 문서를 참조하십시오&lt;a href=&quot;#ProcessOption&quot;&gt;&lt;/a&gt;이 플래그의 의미에 대한 ProcessOption .</target>
        </trans-unit>
        <trans-unit id="fb2ad21d99439d76c4ae769b916f899ad8dad268" translate="yes" xml:space="preserve">
          <source>Starts a process. &lt;em&gt;Command&lt;/em&gt; is the executable file, &lt;em&gt;workingDir&lt;/em&gt; is the process's working directory. If &lt;code&gt;workingDir == &quot;&quot;&lt;/code&gt; the current directory is used. &lt;em&gt;args&lt;/em&gt; are the command line arguments that are passed to the process. On many operating systems, the first command line argument is the name of the executable. &lt;em&gt;args&lt;/em&gt; should not contain this argument! &lt;em&gt;env&lt;/em&gt; is the environment that will be passed to the process. If &lt;code&gt;env == nil&lt;/code&gt; the environment is inherited of the parent process. &lt;em&gt;options&lt;/em&gt; are additional flags that may be passed to &lt;em&gt;startProcess&lt;/em&gt;. See the documentation of &lt;code&gt;ProcessOption&lt;/code&gt; for the meaning of these flags. You need to &lt;em&gt;close&lt;/em&gt; the process when done.</source>
          <target state="translated">프로세스를 시작합니다. &lt;em&gt;Command&lt;/em&gt; 는 실행 파일이며 &lt;em&gt;workingDir&lt;/em&gt; 은 프로세스의 작업 디렉토리입니다. 경우 &lt;code&gt;workingDir == &quot;&quot;&lt;/code&gt; 현재 디렉토리가 사용됩니다. &lt;em&gt;인수&lt;/em&gt; 는 프로세스에 전달되는 명령 줄 인수입니다. 많은 운영 체제에서 첫 번째 명령 줄 인수는 실행 파일의 이름입니다. &lt;em&gt;인수&lt;/em&gt; 는이 인수를 포함해서는 안됩니다! &lt;em&gt;env&lt;/em&gt; 는 프로세스에 전달 될 환경입니다. 경우 &lt;code&gt;env == nil&lt;/code&gt; 환경은 부모 프로세스의 상속됩니다. &lt;em&gt;옵션&lt;/em&gt; 은 &lt;em&gt;startProcess에&lt;/em&gt; 전달 될 수있는 추가 플래그입니다 . &lt;code&gt;ProcessOption&lt;/code&gt; 의 설명서를 참조하십시오이 플래그의 의미에 대해. 완료되면 프로세스 를 &lt;em&gt;닫아야&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="e1e47e87b9fe76e44fbbfad1b5c2f3cec6f694d4" translate="yes" xml:space="preserve">
          <source>Starts main coroutine scheduler loop which exits when all coroutines exit. Calling this proc starts execution of first coroutine.</source>
          <target state="translated">모든 코 루틴이 종료되면 종료되는 메인 코 루틴 스케줄러 루프를 시작합니다. 이 proc을 호출하면 첫 번째 코 루틴 실행이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="e4b62e8fbf218158e05c575bcb526db8434456d7" translate="yes" xml:space="preserve">
          <source>Starts the process of listening for incoming HTTP connections on the specified address and port.</source>
          <target state="translated">지정된 주소와 포트에서 들어오는 HTTP 연결 수신 프로세스를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="95e9a635c9383520925e14042d4b923fd6c3ac7c" translate="yes" xml:space="preserve">
          <source>Startswith vs full match</source>
          <target state="translated">Startswith vs 전체 경기</target>
        </trans-unit>
        <trans-unit id="7e30de8f52f810c2a275a803821a909d39faabee" translate="yes" xml:space="preserve">
          <source>State of a random number generator.</source>
          <target state="translated">난수 생성기의 상태입니다.</target>
        </trans-unit>
        <trans-unit id="2f3fd7595abb518c6624f116892060fa788f065b" translate="yes" xml:space="preserve">
          <source>State of the random number generator. The procs that use the default state are &lt;strong&gt;not&lt;/strong&gt; thread-safe!</source>
          <target state="translated">난수 생성기의 상태입니다. 기본 상태를 사용하는 프로세서는 스레드로부터 안전 &lt;strong&gt;하지 않습니다&lt;/strong&gt; !</target>
        </trans-unit>
        <trans-unit id="585af40bd2ea53a8fcbac51a9fdd078062535c3e" translate="yes" xml:space="preserve">
          <source>Statement Macros</source>
          <target state="translated">명세서 매크로</target>
        </trans-unit>
        <trans-unit id="c1d090a6c68c4210ac3bd5dfc03a161d8ee95112" translate="yes" xml:space="preserve">
          <source>Statement list</source>
          <target state="translated">명세서 목록</target>
        </trans-unit>
        <trans-unit id="e9d413cd91133512c4e3171d0a7ea1f91f1b99be" translate="yes" xml:space="preserve">
          <source>Statement list expression</source>
          <target state="translated">명령문리스트 표현식</target>
        </trans-unit>
        <trans-unit id="561838a377363a51093422d3a816d894fc64a7aa" translate="yes" xml:space="preserve">
          <source>Statement macros are defined just as expression macros. However, they are invoked by an expression following a colon.</source>
          <target state="translated">명령문 매크로는 표현식 매크로로 정의됩니다. 그러나 콜론 다음에 오는 표현식에 의해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="5653cebc057d4791ce07031ad9286e729de6d691" translate="yes" xml:space="preserve">
          <source>Statements</source>
          <target state="translated">Statements</target>
        </trans-unit>
        <trans-unit id="5328a225bf88e0ed36c05ac4a8717682f2fb065b" translate="yes" xml:space="preserve">
          <source>Statements and expressions</source>
          <target state="translated">진술과 표현</target>
        </trans-unit>
        <trans-unit id="28b50d2ede0bbc0df4e2532f866848d6bf82cffb" translate="yes" xml:space="preserve">
          <source>Statements and indentation</source>
          <target state="translated">진술과 들여 쓰기</target>
        </trans-unit>
        <trans-unit id="2f0b50bd8139f25d6003b6a910f512893ff24a3e" translate="yes" xml:space="preserve">
          <source>Statements are separated into &lt;span id=&quot;simple-statements_1&quot;&gt;simple statements&lt;/span&gt; and &lt;span id=&quot;complex-statements_1&quot;&gt;complex statements&lt;/span&gt;. Simple statements are statements that cannot contain other statements like assignments, calls or the &lt;code&gt;return&lt;/code&gt; statement; complex statements can contain other statements. To avoid the &lt;span id=&quot;dangling-else-problem_1&quot;&gt;dangling else problem&lt;/span&gt;, complex statements always have to be indented. The details can be found in the grammar.</source>
          <target state="translated">문장은 &lt;span id=&quot;simple-statements_1&quot;&gt;간단한 문장&lt;/span&gt; 과 &lt;span id=&quot;complex-statements_1&quot;&gt;복잡한 문장&lt;/span&gt; 으로 구분됩니다 . 간단한 문장은 할당, 호출 또는 &lt;code&gt;return&lt;/code&gt; 문장 과 같은 다른 문장을 포함 할 수없는 문장입니다. 복잡한 문장에는 다른 문장이 포함될 수 있습니다. &lt;span id=&quot;dangling-else-problem_1&quot;&gt;다른 문제가 발생&lt;/span&gt; 하지 않도록하려면 복잡한 명령문을 들여 쓰기해야합니다. 세부 사항은 문법에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fba5dd4ca2b6b328a09b55992855fa1acb35f141" translate="yes" xml:space="preserve">
          <source>Statements are separated into &lt;span id=&quot;simple-statements_1&quot;&gt;simple statements&lt;/span&gt; and &lt;span id=&quot;complex-statements_1&quot;&gt;complex statements&lt;/span&gt;. Simple statements are statements that cannot contain other statements like assignments, calls, or the &lt;code&gt;return&lt;/code&gt; statement; complex statements can contain other statements. To avoid the &lt;span id=&quot;dangling-else-problem_1&quot;&gt;dangling else problem&lt;/span&gt;, complex statements always have to be indented. The details can be found in the grammar.</source>
          <target state="translated">문으로 분리되어 &lt;span id=&quot;simple-statements_1&quot;&gt;간단한 문장&lt;/span&gt; 과 &lt;span id=&quot;complex-statements_1&quot;&gt;복잡한 문장&lt;/span&gt; . 단순 문은 할당, 호출 또는 &lt;code&gt;return&lt;/code&gt; 문과 같은 다른 문을 포함 할 수없는 문입니다. 복잡한 문은 다른 문을 포함 할 수 있습니다. &lt;span id=&quot;dangling-else-problem_1&quot;&gt;dangling else 문제&lt;/span&gt; 를 방지하려면 복잡한 문을 항상 들여 쓰기해야합니다. 세부 사항은 문법에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="646910fd00778eecee134cf3dda84aa157fee983" translate="yes" xml:space="preserve">
          <source>Statements can also occur in an expression context that looks like &lt;code&gt;(stmt1; stmt2; ...; ex)&lt;/code&gt;. This is called a statement list expression or &lt;code&gt;(;)&lt;/code&gt;. The type of &lt;code&gt;(stmt1; stmt2; ...; ex)&lt;/code&gt; is the type of &lt;code&gt;ex&lt;/code&gt;. All the other statements must be of type &lt;code&gt;void&lt;/code&gt;. (One can use &lt;code&gt;discard&lt;/code&gt; to produce a &lt;code&gt;void&lt;/code&gt; type.) &lt;code&gt;(;)&lt;/code&gt; does not introduce a new scope.</source>
          <target state="translated">문은 &lt;code&gt;(stmt1; stmt2; ...; ex)&lt;/code&gt; 와 같은 식 컨텍스트에서도 발생할 수 있습니다 . 이를 명령문 목록 표현식 또는 &lt;code&gt;(;)&lt;/code&gt; 이라고 합니다. 의 유형 &lt;code&gt;(stmt1; stmt2; ...; ex)&lt;/code&gt; 의 유형입니다 &lt;code&gt;ex&lt;/code&gt; . 다른 모든 명령문은 &lt;code&gt;void&lt;/code&gt; 유형이어야합니다 . ( &lt;code&gt;discard&lt;/code&gt; 를 사용하여 &lt;code&gt;void&lt;/code&gt; 유형 을 생성 할 수 있습니다 .) &lt;code&gt;(;)&lt;/code&gt; 은 새 범위를 도입하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="73e132de8d234237b097eae09c8f41a5d3aeb437" translate="yes" xml:space="preserve">
          <source>Statements can also occur in an expression context that looks like &lt;code&gt;(stmt1; stmt2; ...; ex)&lt;/code&gt;. This is called an statement list expression or &lt;code&gt;(;)&lt;/code&gt;. The type of &lt;code&gt;(stmt1; stmt2; ...; ex)&lt;/code&gt; is the type of &lt;code&gt;ex&lt;/code&gt;. All the other statements must be of type &lt;code&gt;void&lt;/code&gt;. (One can use &lt;code&gt;discard&lt;/code&gt; to produce a &lt;code&gt;void&lt;/code&gt; type.) &lt;code&gt;(;)&lt;/code&gt; does not introduce a new scope.</source>
          <target state="translated">&lt;code&gt;(stmt1; stmt2; ...; ex)&lt;/code&gt; 와 같은 표현식 컨텍스트에서도 명령문이 발생할 수 있습니다 . 이를 명령문 목록 표현식 또는 &lt;code&gt;(;)&lt;/code&gt; 라고합니다 . 의 유형 &lt;code&gt;(stmt1; stmt2; ...; ex)&lt;/code&gt; 의 유형입니다 &lt;code&gt;ex&lt;/code&gt; . 다른 모든 명령문은 &lt;code&gt;void&lt;/code&gt; 유형이어야합니다 . &lt;code&gt;void&lt;/code&gt; 를 생성하기 위해 &lt;code&gt;discard&lt;/code&gt; 를 사용할 수 있습니다 . &lt;code&gt;(;)&lt;/code&gt; 는 새로운 범위를 도입하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="09ba2d803c92fca5d318023b8b22a1bf044aeec2" translate="yes" xml:space="preserve">
          <source>States that &lt;em&gt;every&lt;/em&gt; other parameter must not alias with the marked parameter.</source>
          <target state="translated">미국이 &lt;em&gt;모든&lt;/em&gt; 다른 매개 변수 표시 매개 변수를 사용하지 별칭해야합니다.</target>
        </trans-unit>
        <trans-unit id="b21c7be07ec4d071647590676d7c707716706eb2" translate="yes" xml:space="preserve">
          <source>States that the marked parameter needs to alias with &lt;em&gt;some&lt;/em&gt; other parameter.</source>
          <target state="translated">와 별명 매개 변수를 필요로 표시한다고 &lt;em&gt;몇 가지&lt;/em&gt; 다른 매개 변수를.</target>
        </trans-unit>
        <trans-unit id="bda29e5bb4f9a6e91109576feba5b699a9ffa7c4" translate="yes" xml:space="preserve">
          <source>Static params can also appear in the signatures of generic types:</source>
          <target state="translated">정적 매개 변수는 일반 유형의 서명에도 나타날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd4eea69c0fcf4c239e8f32cdb22fe3e56921d96" translate="yes" xml:space="preserve">
          <source>Static statement/expression</source>
          <target state="translated">정적 진술 / 표현</target>
        </trans-unit>
        <trans-unit id="1efa0116abdd20c68f5da9f1569291c9d6bcab18" translate="yes" xml:space="preserve">
          <source>Static types, like &lt;code&gt;static[int]&lt;/code&gt;, use &lt;code&gt;nnkIdent&lt;/code&gt; wrapped in &lt;code&gt;nnkStaticTy&lt;/code&gt;.</source>
          <target state="translated">static &lt;code&gt;static[int]&lt;/code&gt; 와 같은 정적 유형 은 &lt;code&gt;nnkIdent&lt;/code&gt; 래핑 된 &lt;code&gt;nnkStaticTy&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="df6826b4250b90fb4e378254d9554431e3e76513" translate="yes" xml:space="preserve">
          <source>Statically typed wrapper around a JavaScript object.</source>
          <target state="translated">JavaScript 객체 주위에 정적으로 입력 된 래퍼입니다.</target>
        </trans-unit>
        <trans-unit id="f99da6af391d7d0b1782b934b78439cc36d3ec64" translate="yes" xml:space="preserve">
          <source>Statistical analysis framework for performing basic statistical analysis of data. The data is analysed in a single pass, when a data value is pushed to the &lt;code&gt;RunningStat&lt;/code&gt; or &lt;code&gt;RunningRegress&lt;/code&gt; objects</source>
          <target state="translated">데이터의 기본 통계 분석을 수행하기위한 통계 분석 프레임 워크. 데이터 값이 &lt;code&gt;RunningStat&lt;/code&gt; 또는 &lt;code&gt;RunningRegress&lt;/code&gt; 객체로 푸시되면 단일 패스로 데이터가 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="95c5b7897012d8f6b29894d9aacb62893a21c7dd" translate="yes" xml:space="preserve">
          <source>StdTmpl filter</source>
          <target state="translated">StdTmpl 필터</target>
        </trans-unit>
        <trans-unit id="f01bcf09d3999d8ff32f40e4babcd56fd243439c" translate="yes" xml:space="preserve">
          <source>Stop the process &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">프로세스 &lt;code&gt;p&lt;/code&gt; 를 중지하십시오 .</target>
        </trans-unit>
        <trans-unit id="2d517ff3e91f20612466e4d677722b435331123f" translate="yes" xml:space="preserve">
          <source>Stop the process &lt;em&gt;p&lt;/em&gt;. On Posix OSes the procedure sends &lt;code&gt;SIGTERM&lt;/code&gt; to the process. On Windows the Win32 API function &lt;code&gt;TerminateProcess()&lt;/code&gt; is called to stop the process.</source>
          <target state="translated">프로세스 &lt;em&gt;p를&lt;/em&gt; 중지하십시오 . Posix OS에서 절차는 &lt;code&gt;SIGTERM&lt;/code&gt; 을 프로세스로 보냅니다 . Windows 에서는 프로세스를 중지하기 위해 Win32 API 함수 &lt;code&gt;TerminateProcess()&lt;/code&gt; 가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="bc5263d66fdbb64aa225f236a1dbed39f2d42302" translate="yes" xml:space="preserve">
          <source>Stop-The-World</source>
          <target state="translated">Stop-The-World</target>
        </trans-unit>
        <trans-unit id="193670292bbf8be6929e6f76418e0773142d3e9f" translate="yes" xml:space="preserve">
          <source>Stops coroutine execution and resumes no sooner than after &lt;code&gt;sleeptime&lt;/code&gt; seconds. Until then other coroutines are executed.</source>
          <target state="translated">코 루틴 실행을 중지하고 잠자기 &lt;code&gt;sleeptime&lt;/code&gt; 초) 이 지나면 다시 시작합니다 . 그때까지 다른 코 루틴이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="c692f32f2608c4a295dcfea18799b8cd9fd2f756" translate="yes" xml:space="preserve">
          <source>Stops the program immediately with an exit code.</source>
          <target state="translated">종료 코드를 사용하여 프로그램을 즉시 중지합니다.</target>
        </trans-unit>
        <trans-unit id="d9d5cef2efc720228c0c221a35830c78881194f2" translate="yes" xml:space="preserve">
          <source>Store implementation-defined representation of the exception flags indicated by &lt;code&gt;excepts&lt;/code&gt; in the object pointed to by &lt;code&gt;flagp&lt;/code&gt;.</source>
          <target state="translated">상점에 표시된 예외 플래그의 표현을 구현 정의 &lt;code&gt;excepts&lt;/code&gt; 가 가리키는 객체의 &lt;code&gt;flagp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c7da5ae9d8453249af10e3df51f169922c5fe26" translate="yes" xml:space="preserve">
          <source>Store implementation-defined representation of the exception flags indicated by &lt;em&gt;excepts&lt;/em&gt; in the object pointed to by &lt;em&gt;flagp&lt;/em&gt;.</source>
          <target state="translated">상점에 표시된 예외 플래그의 표현을 구현 정의 &lt;em&gt;excepts&lt;/em&gt; 가 가리키는 객체의 &lt;em&gt;깃대&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="8268d6e4b9be7ccfcfe066a034332d9bcafbeeea" translate="yes" xml:space="preserve">
          <source>Store the current floating-point environment in the object pointed to by &lt;code&gt;envp&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;envp&lt;/code&gt; 가 가리키는 객체에 현재 부동 소수점 환경을 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="bd07ac3fcadc296f8eadaaee32c2d2045b485375" translate="yes" xml:space="preserve">
          <source>Store the current floating-point environment in the object pointed to by &lt;em&gt;envp&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;envp가&lt;/em&gt; 가리키는 객체에 현재 부동 소수점 환경을 저장하십시오 .</target>
        </trans-unit>
        <trans-unit id="40e7a2b6ddfea5b837df42d90b7fd7add017d514" translate="yes" xml:space="preserve">
          <source>Stores &lt;code&gt;data&lt;/code&gt; into the stream &lt;code&gt;s&lt;/code&gt;. Raises &lt;code&gt;IOError&lt;/code&gt; in case of an error.</source>
          <target state="translated">를 저장 &lt;code&gt;data&lt;/code&gt; 스트림에 &lt;code&gt;s&lt;/code&gt; . 발생시킵니다 &lt;code&gt;IOError&lt;/code&gt; 오류의 경우.</target>
        </trans-unit>
        <trans-unit id="ed122e970e1da75eae7113f501ba6a2683599b66" translate="yes" xml:space="preserve">
          <source>Stores arbitrary data inside SSLContext. The unique &lt;em&gt;index&lt;/em&gt; should be retrieved using getSslContextExtraDataIndex.</source>
          <target state="translated">SSLContext 내에 임의의 데이터를 저장합니다. 고유 &lt;em&gt;인덱스&lt;/em&gt; 는 getSslContextExtraDataIndex를 사용하여 검색해야합니다.</target>
        </trans-unit>
        <trans-unit id="2fa0a940c47eecc3f50a043ebe8e6456850e3f34" translate="yes" xml:space="preserve">
          <source>Stores arbitrary data inside SslContext. The unique &lt;code&gt;index&lt;/code&gt; should be retrieved using getSslContextExtraDataIndex.</source>
          <target state="translated">SslContext 내부에 임의의 데이터를 저장합니다. 고유 &lt;code&gt;index&lt;/code&gt; 는 getSslContextExtraDataIndex를 사용하여 검색해야합니다.</target>
        </trans-unit>
        <trans-unit id="41cbaf30792865ae79e69a46a9135338653fe0c7" translate="yes" xml:space="preserve">
          <source>Stores in &lt;code&gt;strAddress&lt;/code&gt; the string representation of the address inside &lt;code&gt;sockAddr&lt;/code&gt;</source>
          <target state="translated">에 저장 &lt;code&gt;strAddress&lt;/code&gt; 는 내부 주소의 문자열 표현 &lt;code&gt;sockAddr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3561a6520c3d5d295122d365e075a71d866713db" translate="yes" xml:space="preserve">
          <source>Stores the empty string or the last headline/overline found in the rst document, so it can be used as a prettier name for term index generation.</source>
          <target state="translated">첫 번째 문서에서 찾은 빈 문자열 또는 마지막 헤드 라인 / 개요를 저장하므로 용어 색인 생성을위한 더 예쁜 이름으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa73ae490dea18312118c1acb687cc242079e2b2" translate="yes" xml:space="preserve">
          <source>Stream interface that supports writing or reading.</source>
          <target state="translated">쓰기 또는 읽기를 지원하는 스트림 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="48c0d4450fba91caf6c704085748bb15b5343e9a" translate="yes" xml:space="preserve">
          <source>Stream interface that supports writing or reading. Note that these fields here shouldn't be used directly. They are accessible so that a stream implementation can override them.</source>
          <target state="translated">쓰기 또는 읽기를 지원하는 스트림 인터페이스. 이 필드는 직접 사용해서는 안됩니다. 스트림 구현이이를 대체 할 수 있도록 액세스 가능합니다.</target>
        </trans-unit>
        <trans-unit id="cabdf5f339b4a71e54d49c88b1a15db7fadb01b9" translate="yes" xml:space="preserve">
          <source>Strict funcs</source>
          <target state="translated">엄격한 기능</target>
        </trans-unit>
        <trans-unit id="377711b7bd00a9dea981c29d816c64a150328294" translate="yes" xml:space="preserve">
          <source>Strictly speaking, &lt;code&gt;NimScript&lt;/code&gt; is the subset of Nim that can be evaluated by Nim's builtin virtual machine (VM). This VM is used for Nim's compiletime function evaluation features.</source>
          <target state="translated">엄밀히 말하면 &lt;code&gt;NimScript&lt;/code&gt; 는 Nim의 내장 가상 머신 (VM)에서 평가할 수있는 Nim의 하위 집합입니다. 이 VM은 Nim의 컴파일 타임 함수 평가 기능에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="51a31e0d2f2e0f77e70f94326ee6904303908d73" translate="yes" xml:space="preserve">
          <source>String &lt;span id=&quot;interpolation_1&quot;&gt;interpolation&lt;/span&gt; / &lt;span id=&quot;format_1&quot;&gt;format&lt;/span&gt; inspired by Python's &lt;code&gt;f&lt;/code&gt;-strings.</source>
          <target state="translated">파이썬의 &lt;code&gt;f&lt;/code&gt; - string 에서 영감을 얻은 문자열 &lt;span id=&quot;interpolation_1&quot;&gt;보간&lt;/span&gt; / &lt;span id=&quot;format_1&quot;&gt;형식&lt;/span&gt; .</target>
        </trans-unit>
        <trans-unit id="dff366ef5455c79b8728295225889786b796cf17" translate="yes" xml:space="preserve">
          <source>String and character literals</source>
          <target state="translated">문자열과 문자 리터럴</target>
        </trans-unit>
        <trans-unit id="8592962cea78137eedb95afe4474ceef0bee804c" translate="yes" xml:space="preserve">
          <source>String assignments are sometimes expensive in Nim: They are required to copy the whole string. However, the compiler is often smart enough to not copy strings. Due to the argument passing semantics, strings are never copied when passed to subroutines. The compiler does not copy strings that are a result from a procedure call, because the callee returns a new string anyway. Thus it is efficient to do:</source>
          <target state="translated">문자열 할당은 때때로 Nim에서 비쌉니다 : 전체 문자열을 복사해야합니다. 그러나 컴파일러는 종종 문자열을 복사하지 않을 정도로 똑똑합니다. 의미 전달 인수로 인해 서브 루틴으로 전달 될 때 문자열이 복사되지 않습니다. 수신자는 어쨌든 새 문자열을 반환하므로 컴파일러는 프로 시저 호출의 결과 인 문자열을 복사하지 않습니다. 따라서 다음을 수행하는 것이 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="2f35eb8a304dec2796aaa4695e18ec4dc804f3b0" translate="yes" xml:space="preserve">
          <source>String assignments are sometimes expensive in Nim: They are required to copy the whole string. However, the compiler is often smart enough to not copy strings. Due to the argument passing semantics, strings are never copied when passed to subroutines. The compiler does not copy strings that are a result of a procedure call, because the callee returns a new string anyway. Thus it is efficient to do:</source>
          <target state="translated">Nim에서 문자열 할당은 때때로 비용이 많이 듭니다. 전체 문자열을 복사하는 데 필요합니다. 그러나 컴파일러는 종종 문자열을 복사하지 않을만큼 똑똑합니다. 인수 전달 의미로 인해 문자열은 서브 루틴으로 전달 될 때 복사되지 않습니다. 컴파일러는 호출 수신자가 어쨌든 새 문자열을 반환하기 때문에 프로 시저 호출의 결과 인 문자열을 복사하지 않습니다. 따라서 다음을 수행하는 것이 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="f72b5d43e5245ea7b69b536ff3f8c988cbabcd7f" translate="yes" xml:space="preserve">
          <source>String handling</source>
          <target state="translated">문자열 처리</target>
        </trans-unit>
        <trans-unit id="5993cb336c6391ee8eea94b873bb797a1c4d4619" translate="yes" xml:space="preserve">
          <source>String literals</source>
          <target state="translated">문자열 리터럴</target>
        </trans-unit>
        <trans-unit id="af12c2e063676108d00610ed5b2b199ea508a589" translate="yes" xml:space="preserve">
          <source>String literals are enclosed in double quotes. The &lt;code&gt;var&lt;/code&gt; statement declares a new variable named &lt;code&gt;name&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt; with the value that is returned by the &lt;a href=&quot;system#readLine,File&quot;&gt;readLine&lt;/a&gt; procedure. Since the compiler knows that &lt;a href=&quot;system#readLine,File&quot;&gt;readLine&lt;/a&gt; returns a string, you can leave out the type in the declaration (this is called &lt;span id=&quot;local-type-inference_1&quot;&gt;local type inference&lt;/span&gt;). So this will work too:</source>
          <target state="translated">문자열 리터럴은 큰 따옴표로 묶습니다. &lt;code&gt;var&lt;/code&gt; 에 문은 새로운 변수 이름을 선언 &lt;code&gt;name&lt;/code&gt; 형식의 &lt;code&gt;string&lt;/code&gt; 에 의해 반환되는 값 &lt;a href=&quot;system#readLine,File&quot;&gt;의 readline&lt;/a&gt; 절차를. 컴파일러는 &lt;a href=&quot;system#readLine,File&quot;&gt;readLine&lt;/a&gt; 이 문자열을 리턴 한다는 것을 알고 있으므로 선언에서 유형을 생략 할 수 있습니다 ( &lt;span id=&quot;local-type-inference_1&quot;&gt;로컬 유형 유추&lt;/span&gt; 라고 함 ). 그래서 이것은 작동합니다 :</target>
        </trans-unit>
        <trans-unit id="cbd76253c7810952b365eda2c20cec5a247a7e14" translate="yes" xml:space="preserve">
          <source>String literals are enclosed in double quotes; character literals in single quotes. Special characters are escaped with &lt;code&gt;\&lt;/code&gt;: &lt;code&gt;\n&lt;/code&gt; means newline, &lt;code&gt;\t&lt;/code&gt; means tabulator, etc. There are also &lt;em&gt;raw&lt;/em&gt; string literals:</source>
          <target state="translated">문자열 리터럴은 큰 따옴표로 묶습니다. 작은 따옴표로 된 문자 리터럴. 특수 문자와 이스케이프 &lt;code&gt;\&lt;/code&gt; : &lt;code&gt;\n&lt;/code&gt; 수단은 줄 바꿈, &lt;code&gt;\t&lt;/code&gt; 수단의 도표 작성 등도 있습니다 &lt;em&gt;원시&lt;/em&gt; 문자열 리터럴은 :</target>
        </trans-unit>
        <trans-unit id="91beede65eb4bf81fa0a0b03f71ed1840d87fbad" translate="yes" xml:space="preserve">
          <source>String literals can also be delimited by three double quotes &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt; ... &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt;. Literals in this form may run for several lines, may contain &lt;code&gt;&quot;&lt;/code&gt; and do not interpret any escape sequences. For convenience, when the opening &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt; is followed by a newline (there may be whitespace between the opening &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt; and the newline), the newline (and the preceding whitespace) is not included in the string. The ending of the string literal is defined by the pattern &lt;code&gt;&quot;&quot;&quot;[^&quot;]&lt;/code&gt;, so this:</source>
          <target state="translated">문자열 리터럴은 세 개의 큰 따옴표 &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt; ... &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt; 로 구분할 수도 있습니다 . 이 형식의 리터럴은 여러 줄에 걸쳐 실행될 수 있으며 &lt;code&gt;&quot;&lt;/code&gt; 이스케이프 시퀀스를 해석하지 않을 수 있습니다 . 편의상 여는 &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt; 다음에 줄 바꿈이있을 때 (개시 &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt; 와 줄 바꿈 사이에 공백이있을 수 있음 ) 개행 문자 (및 앞의 공백)는 문자열에 포함되지 않습니다. 문자열 리터럴의 끝은 &lt;code&gt;&quot;&quot;&quot;[^&quot;]&lt;/code&gt; 패턴으로 정의 되므로 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a98bf22b08be1e87b2f87e1e68dc04c240c4f84a" translate="yes" xml:space="preserve">
          <source>String literals can be delimited by matching double quotes, and can contain the following &lt;span id=&quot;escape-sequences_1&quot;&gt;escape sequences&lt;/span&gt;:</source>
          <target state="translated">문자열 리터럴은 큰 따옴표를 일치시켜 구분할 수 있으며 다음 &lt;span id=&quot;escape-sequences_1&quot;&gt;이스케이프 시퀀스를&lt;/span&gt; 포함 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="add4920af30df00399258f443c32b23c074019f6" translate="yes" xml:space="preserve">
          <source>String match ignoring case for back reference.</source>
          <target state="translated">역 참조를위한 문자열 일치 무시 사례.</target>
        </trans-unit>
        <trans-unit id="2a6aa06ff131f3961de8e3d1902b39032ccdc0a1" translate="yes" xml:space="preserve">
          <source>String match ignoring case.</source>
          <target state="translated">대소 문자를 무시하는 문자열 일치</target>
        </trans-unit>
        <trans-unit id="147076ac16a166598cdc8c313b99f065ab615a6a" translate="yes" xml:space="preserve">
          <source>String match ignoring style for back reference.</source>
          <target state="translated">역 참조를위한 문자열 일치 무시 스타일</target>
        </trans-unit>
        <trans-unit id="bb24a4c20f47d52b01a258419055f6b3dfdee121" translate="yes" xml:space="preserve">
          <source>String match ignoring style.</source>
          <target state="translated">스타일을 무시하는 문자열 일치</target>
        </trans-unit>
        <trans-unit id="c06a57a4f2d33b3ec4aba4bcc126cb96b2ca0fd4" translate="yes" xml:space="preserve">
          <source>String tables can be created from a table constructor:</source>
          <target state="translated">테이블 생성자에서 문자열 테이블을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="02ac6c5d15d3833eb25c8fee2851790ab39dbbb4" translate="yes" xml:space="preserve">
          <source>String type</source>
          <target state="translated">문자열 타입</target>
        </trans-unit>
        <trans-unit id="986c54b2d8959694bd3a8d1059f1a28ae674bd61" translate="yes" xml:space="preserve">
          <source>String variables are &lt;strong&gt;mutable&lt;/strong&gt;, so appending to a string is possible, and quite efficient. Strings in Nim are both zero-terminated and have a length field. A string's length can be retrieved with the builtin &lt;code&gt;len&lt;/code&gt; procedure; the length never counts the terminating zero. Accessing the terminating zero is an error, it only exists so that a Nim string can be converted to a &lt;code&gt;cstring&lt;/code&gt; without doing a copy.</source>
          <target state="translated">문자열 변수는 &lt;strong&gt;변경 가능&lt;/strong&gt; 하므로 문자열에 추가하는 것이 가능하고 매우 효율적입니다. Nim의 문자열은 모두 0으로 끝나고 길이 필드가 있습니다. 문자열의 길이는 내장으로 검색 할 수 &lt;code&gt;len&lt;/code&gt; 절차; 길이는 종료 0을 계산하지 않습니다. 종료 0에 액세스하는 것은 오류이며, Nim 문자열을 복사하지 않고 &lt;code&gt;cstring&lt;/code&gt; 으로 변환 할 수 있도록하기 위해서만 존재합니다 .</target>
        </trans-unit>
        <trans-unit id="e4831917e69eebb7897b456dcb4145f3b7c82210" translate="yes" xml:space="preserve">
          <source>String: If the text ahead is the string &lt;code&gt;s&lt;/code&gt;, consume it and indicate success. Otherwise indicate failure.</source>
          <target state="translated">문자열 : 앞의 텍스트가 문자열 &lt;code&gt;s&lt;/code&gt; 이면 그것을 소비하고 성공을 나타냅니다. 그렇지 않으면 실패를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9582510d33852bda61d01257c5b36aff25c4246c" translate="yes" xml:space="preserve">
          <source>String: If the text ahead is the string &lt;em&gt;s&lt;/em&gt;, consume it and indicate success. Otherwise indicate failure.</source>
          <target state="translated">문자열 : 앞의 텍스트가 문자열 &lt;em&gt;s&lt;/em&gt; 이면이를 소비하고 성공을 나타냅니다. 그렇지 않으면 실패를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9a09aa3c39f092009e6609bfafb36c2128a51f83" translate="yes" xml:space="preserve">
          <source>StringStream example</source>
          <target state="translated">StringStream 예</target>
        </trans-unit>
        <trans-unit id="3816c4beac471c733eed1d91c213f8c2b6a29262" translate="yes" xml:space="preserve">
          <source>Strings</source>
          <target state="translated">Strings</target>
        </trans-unit>
        <trans-unit id="3fef5979e2a970ce485675c739e2e35d04689a53" translate="yes" xml:space="preserve">
          <source>Strings and C strings</source>
          <target state="translated">문자열과 C 문자열</target>
        </trans-unit>
        <trans-unit id="19bd41d59bb8dc6eee7ca9c170eaa4e292de1ef1" translate="yes" xml:space="preserve">
          <source>Strings and characters</source>
          <target state="translated">문자열과 문자</target>
        </trans-unit>
        <trans-unit id="1b710e9083a424ca250da057248ace9578ab56d8" translate="yes" xml:space="preserve">
          <source>Strings are compared by their lexicographical order. All comparison operators are available. Strings can be indexed like arrays (lower bound is 0). Unlike arrays, they can be used in case statements:</source>
          <target state="translated">문자열은 사전 순으로 비교됩니다. 모든 비교 연산자를 사용할 수 있습니다. 문자열은 배열처럼 인덱싱 할 수 있습니다 (하한은 0 임). 배열과 달리 case 문에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="09c9bb4c72fe3ad8b1a94e6b29d07b028ab504ba" translate="yes" xml:space="preserve">
          <source>Strings are compared using their lexicographical order. All the comparison operators are supported. By convention, all strings are UTF-8 encoded, but this is not enforced. For example, when reading strings from binary files, they are merely a sequence of bytes. The index operation &lt;code&gt;s[i]&lt;/code&gt; means the i-th &lt;em&gt;char&lt;/em&gt; of &lt;code&gt;s&lt;/code&gt;, not the i-th &lt;em&gt;unichar&lt;/em&gt;.</source>
          <target state="translated">문자열은 사전 순서를 사용하여 비교됩니다. 모든 비교 연산자가 지원됩니다. 일반적으로 모든 문자열은 UTF-8로 인코딩되지만 적용되지는 않습니다. 예를 들어, 이진 파일에서 문자열을 읽을 때는 문자열 시퀀스 일뿐입니다. 인덱스 연산 &lt;code&gt;s[i]&lt;/code&gt; 는 i 번째 &lt;em&gt;unichar가&lt;/em&gt; 아니라 &lt;code&gt;s&lt;/code&gt; 의 i 번째 &lt;em&gt;char&lt;/em&gt; 을 의미합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="68f5a8dcb38cb2dcf8c5a38294f5911b71dc18ba" translate="yes" xml:space="preserve">
          <source>Strings in Nim may contain any 8-bit value, even embedded zeros. However some operations may interpret the first binary zero as a terminator.</source>
          <target state="translated">Nim의 문자열에는 8 비트 값이 포함될 수 있으며 0도 포함됩니다. 그러나 일부 연산은 첫 번째 이진 0을 종료 자로 해석 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b34aa10a7504c11b1c238076600885e8cb63777" translate="yes" xml:space="preserve">
          <source>Strip filter</source>
          <target state="translated">스트립 필터</target>
        </trans-unit>
        <trans-unit id="ed31dda70030a93e67177317a039cfd3e3734206" translate="yes" xml:space="preserve">
          <source>Strips leading or trailing &lt;code&gt;chars&lt;/code&gt; (default: whitespace characters) from &lt;code&gt;s&lt;/code&gt; and returns the resulting string.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; 에서 선행 또는 후행 &lt;code&gt;chars&lt;/code&gt; (기본값 : 공백 문자)를 제거 하고 결과 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0528a036ebc20f049e02735e957a9e69e7d20605" translate="yes" xml:space="preserve">
          <source>Strips leading or trailing &lt;code&gt;runes&lt;/code&gt; from &lt;code&gt;s&lt;/code&gt; and returns the resulting string.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; 에서 선행 또는 후행 &lt;code&gt;runes&lt;/code&gt; 제거 하고 결과 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="98e0d86ad6cb0129df0228988af89dce21ec584d" translate="yes" xml:space="preserve">
          <source>Strips leading or trailing &lt;em&gt;chars&lt;/em&gt; from &lt;em&gt;s&lt;/em&gt; and returns the resulting string.</source>
          <target state="translated">&lt;em&gt;s&lt;/em&gt; 에서 선행 또는 후행 &lt;em&gt;문자를&lt;/em&gt; 제거 하고 결과 문자열을 반환합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1a23feeef3810340d4dff8161926809602ebbc2c" translate="yes" xml:space="preserve">
          <source>Stropping</source>
          <target state="translated">Stropping</target>
        </trans-unit>
        <trans-unit id="21f9526f58e090a716c92c0f2c45fe2304e24cfe" translate="yes" xml:space="preserve">
          <source>StructuralEquivTypes:</source>
          <target state="translated">StructuralEquivTypes:</target>
        </trans-unit>
        <trans-unit id="c8ff4b4dfac3e5ecfb01fa66e040f2be24062608" translate="yes" xml:space="preserve">
          <source>Structured types</source>
          <target state="translated">구조화 된 유형</target>
        </trans-unit>
        <trans-unit id="6617ba0382b36cb88686c64241a0d1066459e84e" translate="yes" xml:space="preserve">
          <source>Style insensitive comparison.</source>
          <target state="translated">스타일에 둔감 한 비교.</target>
        </trans-unit>
        <trans-unit id="47c3fbfee5ccaddc82435585c637b37f1eed421b" translate="yes" xml:space="preserve">
          <source>Style insensitive comparison. &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; can be an identifier or a symbol.</source>
          <target state="translated">스타일에 둔감 한 비교. &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 는 식별자 또는 기호 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7ef7b5bcdc52cbe8c006a48a534919da0164b0d" translate="yes" xml:space="preserve">
          <source>Style insensitive comparison. &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; can be an identifier or a symbol. Both may be wrapped in an export marker (&lt;code&gt;nnkPostfix&lt;/code&gt;) or quoted with backticks (&lt;code&gt;nnkAccQuoted&lt;/code&gt;), these nodes will be unwrapped.</source>
          <target state="translated">스타일을 구분하지 않는 비교. &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 는 식별자 또는 기호 일 수 있습니다. 둘 다 내보내기 마커 ( &lt;code&gt;nnkPostfix&lt;/code&gt; ) 로 래핑 되거나 백틱 ( &lt;code&gt;nnkAccQuoted&lt;/code&gt; )으로 인용 될 수 있으며, 이러한 노드는 래핑 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="327f538ea37da49ccf2c271b65129745ac5559a5" translate="yes" xml:space="preserve">
          <source>Style insensitive comparison. &lt;code&gt;a&lt;/code&gt; can be an identifier or a symbol.</source>
          <target state="translated">스타일에 둔감 한 비교. 식별자 또는 심볼 일 수있다. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe38eee2775ebb0dccfc1c31ce7f9ba6f5199be7" translate="yes" xml:space="preserve">
          <source>Style insensitive comparison. &lt;code&gt;a&lt;/code&gt; can be an identifier or a symbol. &lt;code&gt;a&lt;/code&gt; may be wrapped in an export marker (&lt;code&gt;nnkPostfix&lt;/code&gt;) or quoted with backticks (&lt;code&gt;nnkAccQuoted&lt;/code&gt;), these nodes will be unwrapped.</source>
          <target state="translated">스타일을 구분하지 않는 비교. &lt;code&gt;a&lt;/code&gt; 는 식별자 또는 기호 일 수 있습니다. &lt;code&gt;a&lt;/code&gt; 는 내보내기 마커 ( &lt;code&gt;nnkPostfix&lt;/code&gt; ) 로 감싸 거나 백틱으로 인용 ( &lt;code&gt;nnkAccQuoted&lt;/code&gt; ) 할 수 있으며, 이러한 노드는 풀립니다 .</target>
        </trans-unit>
        <trans-unit id="a24820daa51bd1dce30c8565c1d952ac958b1e4f" translate="yes" xml:space="preserve">
          <source>Style insensitive comparison. &lt;code&gt;b&lt;/code&gt; can be an identifier or a symbol.</source>
          <target state="translated">스타일에 둔감 한 비교. &lt;code&gt;b&lt;/code&gt; 는 식별자 또는 기호 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="68efefda666d35196458a4aa9ecc04059a39cd3d" translate="yes" xml:space="preserve">
          <source>Style insensitive comparison. &lt;code&gt;b&lt;/code&gt; can be an identifier or a symbol. &lt;code&gt;b&lt;/code&gt; may be wrapped in an export marker (&lt;code&gt;nnkPostfix&lt;/code&gt;) or quoted with backticks (&lt;code&gt;nnkAccQuoted&lt;/code&gt;), these nodes will be unwrapped.</source>
          <target state="translated">스타일을 구분하지 않는 비교. &lt;code&gt;b&lt;/code&gt; 는 식별자 또는 기호 일 수 있습니다. &lt;code&gt;b&lt;/code&gt; 는 내보내기 마커 ( &lt;code&gt;nnkPostfix&lt;/code&gt; ) 로 래핑 되거나 백틱 ( &lt;code&gt;nnkAccQuoted&lt;/code&gt; )으로 인용 될 수 있으며 이러한 노드는 래핑 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="af3750102e983bbf33f619b8dae0de2a0f4b3c0c" translate="yes" xml:space="preserve">
          <source>Subrange of &lt;code&gt;TimeUnit&lt;/code&gt; that only includes units of fixed duration. These are the units that can be represented by a &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">고정 기간 단위 만 포함 하는 &lt;code&gt;TimeUnit&lt;/code&gt; 의 하위 범위입니다 . 이것들은 &lt;code&gt;Duration&lt;/code&gt; 으로 나타낼 수있는 단위입니다 .</target>
        </trans-unit>
        <trans-unit id="c3435d7cc8ec39979e476fdb02a131d9a1f16a5a" translate="yes" xml:space="preserve">
          <source>Subrange or subtype match: &lt;code&gt;a&lt;/code&gt; is a &lt;code&gt;range[T]&lt;/code&gt; and &lt;code&gt;T&lt;/code&gt; matches &lt;code&gt;f&lt;/code&gt; exactly. Or: &lt;code&gt;a&lt;/code&gt; is a subtype of &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">하위 범위 또는 하위 유형 일치 : &lt;code&gt;a&lt;/code&gt; 는 &lt;code&gt;range[T]&lt;/code&gt; 이고 &lt;code&gt;T&lt;/code&gt; 는 &lt;code&gt;f&lt;/code&gt; 와 정확히 일치 합니다. 또는 &lt;code&gt;a&lt;/code&gt; 는 &lt;code&gt;f&lt;/code&gt; 의 하위 유형입니다 .</target>
        </trans-unit>
        <trans-unit id="6ee14d0889156d81963bda220fbb8514a525f717" translate="yes" xml:space="preserve">
          <source>Subrange types</source>
          <target state="translated">하위 범위 유형</target>
        </trans-unit>
        <trans-unit id="041d20cfb351df25518b1fc63a1180aa4794aa06" translate="yes" xml:space="preserve">
          <source>Subranges</source>
          <target state="translated">Subranges</target>
        </trans-unit>
        <trans-unit id="b5f3755a0b5ea501c2ceef9602ab2b833039d687" translate="yes" xml:space="preserve">
          <source>Substitution Expressions (subex)</source>
          <target state="translated">대체 표현 (subex)</target>
        </trans-unit>
        <trans-unit id="7d8a041d3929bb71cef59957beca9b8c1bb1cd15" translate="yes" xml:space="preserve">
          <source>Substitution variables can also be words (that is &lt;code&gt;[A-Za-z_]+[A-Za-z0-9_]*&lt;/code&gt;) in which case the arguments in &lt;code&gt;a&lt;/code&gt; with even indices are keys and with odd indices are the corresponding values. An example:</source>
          <target state="translated">대체 변수는 단어 일 수도 있습니다 (즉, &lt;code&gt;[A-Za-z_]+[A-Za-z0-9_]*&lt;/code&gt; ).이 경우 짝수 인덱스가 있는 &lt;code&gt;a&lt;/code&gt; 의 인수 가 키이고 홀수 인덱스가있는 인수 가 해당 값입니다. 예 :</target>
        </trans-unit>
        <trans-unit id="10ae1fbab8828c5f045753afbdada38d4797d019" translate="yes" xml:space="preserve">
          <source>Substitution variables can also be words (that is &lt;code&gt;[A-Za-z_]+[A-Za-z0-9_]*&lt;/code&gt;) in which case the arguments in &lt;em&gt;a&lt;/em&gt; with even indices are keys and with odd indices are the corresponding values. An example:</source>
          <target state="translated">대체 변수는 또한 단어가 될 수있다 (하다 &lt;code&gt;[A-Za-z_]+[A-Za-z0-9_]*&lt;/code&gt; )이 경우에 인자 짝수 인덱스를 가지는 키 및 홀수 인덱스와의 대응 값은이다. 예를 들면 :&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9a0e9e6f7df11fde63e722a169f4fe0ff2f5fc7a" translate="yes" xml:space="preserve">
          <source>Substrings are separated by a substring containing only &lt;code&gt;seps&lt;/code&gt;.</source>
          <target state="translated">부분 문자열은 &lt;code&gt;seps&lt;/code&gt; 만 포함하는 부분 문자열로 구분됩니다 .</target>
        </trans-unit>
        <trans-unit id="393219e1ffcafefc140be02c9a10b0a650d451b9" translate="yes" xml:space="preserve">
          <source>Substrings are separated by a substring containing only &lt;code&gt;seps&lt;/code&gt;. Example:</source>
          <target state="translated">부분 문자열은 &lt;code&gt;seps&lt;/code&gt; 만 포함하는 부분 문자열로 구분됩니다 . 예:</target>
        </trans-unit>
        <trans-unit id="834dbbb6edc63f93dd355df612f58e6f6c9305b3" translate="yes" xml:space="preserve">
          <source>Substrings are separated by a substring containing only &lt;em&gt;seps&lt;/em&gt;.</source>
          <target state="translated">하위 문자열은 &lt;em&gt;seps&lt;/em&gt; 만 포함하는 하위 문자열로 구분됩니다 .</target>
        </trans-unit>
        <trans-unit id="6d2ec85e175386f10e5a8dc9ec3874b1df9dc2ae" translate="yes" xml:space="preserve">
          <source>Substrings are separated by a substring containing only &lt;em&gt;seps&lt;/em&gt;. Examples:</source>
          <target state="translated">하위 문자열은 &lt;em&gt;seps&lt;/em&gt; 만 포함하는 하위 문자열로 구분됩니다 . 예 :</target>
        </trans-unit>
        <trans-unit id="be853aa7bf975de74384a04b1fe36ba6c01bdc50" translate="yes" xml:space="preserve">
          <source>Substrings are separated by the PEG &lt;code&gt;sep&lt;/code&gt;. Examples:</source>
          <target state="translated">부분 문자열은 PEG &lt;code&gt;sep&lt;/code&gt; 로 구분됩니다 . 예 :</target>
        </trans-unit>
        <trans-unit id="9b3a380e1c6cb3aaa0328c36e53f0fcd3dd31ec2" translate="yes" xml:space="preserve">
          <source>Substrings are separated by the PEG &lt;em&gt;sep&lt;/em&gt;. Examples:</source>
          <target state="translated">하위 문자열은 PEG &lt;em&gt;sep&lt;/em&gt; 로 구분됩니다 . 예 :</target>
        </trans-unit>
        <trans-unit id="1da09ee470795aabb12af952ea91295a6dcc948d" translate="yes" xml:space="preserve">
          <source>Substrings are separated by the character &lt;code&gt;sep&lt;/code&gt;. The code:</source>
          <target state="translated">부분 문자열은 &lt;code&gt;sep&lt;/code&gt; 문자로 구분됩니다 . 코드:</target>
        </trans-unit>
        <trans-unit id="e91de9d53e26c3248ed96f64d99b705efaf9da39" translate="yes" xml:space="preserve">
          <source>Substrings are separated by the character &lt;em&gt;sep&lt;/em&gt;. The code:</source>
          <target state="translated">부분 문자열은 문자 &lt;em&gt;sep&lt;/em&gt; 로 구분됩니다 . 코드:</target>
        </trans-unit>
        <trans-unit id="5bff515ff93456666b03df7f012092cf65f567c4" translate="yes" xml:space="preserve">
          <source>Substrings are separated by the regular expression &lt;code&gt;sep&lt;/code&gt; (and the portion matched by &lt;code&gt;sep&lt;/code&gt; is not returned).</source>
          <target state="translated">문자열이 정규 표현식에 의해 분리된다 &lt;code&gt;sep&lt;/code&gt; (과 일치하는 부분 &lt;code&gt;sep&lt;/code&gt; 리턴되지 않는다).</target>
        </trans-unit>
        <trans-unit id="799f7b16cf2e826efc255a9159fd97837bb460e8" translate="yes" xml:space="preserve">
          <source>Substrings are separated by the rune &lt;code&gt;sep&lt;/code&gt;. The code:</source>
          <target state="translated">하위 문자열은 룬 &lt;code&gt;sep&lt;/code&gt; 로 구분됩니다 . 코드:</target>
        </trans-unit>
        <trans-unit id="93e4eba90d9b72a5cf8fcf3b37b99d2c505e1551" translate="yes" xml:space="preserve">
          <source>Substrings are separated by the string &lt;code&gt;sep&lt;/code&gt;. The code:</source>
          <target state="translated">하위 문자열은 &lt;code&gt;sep&lt;/code&gt; 문자열로 구분됩니다 . 코드:</target>
        </trans-unit>
        <trans-unit id="77b0e0650c570e7b64016690ce5a1aefbb121a1a" translate="yes" xml:space="preserve">
          <source>Substrings are separated by the string &lt;code&gt;sep&lt;/code&gt;. This is a wrapper around the &lt;a href=&quot;#split.i,string,string,int&quot;&gt;split iterator&lt;/a&gt;.</source>
          <target state="translated">하위 문자열은 &lt;code&gt;sep&lt;/code&gt; 문자열로 구분됩니다 . 이것은 &lt;a href=&quot;#split.i,string,string,int&quot;&gt;분할 반복자를&lt;/a&gt; 둘러싼 래퍼 입니다.</target>
        </trans-unit>
        <trans-unit id="e8588d2a952b8b1b868045a8e60e1b1612fbdf6e" translate="yes" xml:space="preserve">
          <source>Substrings are separated by the string &lt;em&gt;sep&lt;/em&gt;. The code:</source>
          <target state="translated">부분 문자열은 문자열 &lt;em&gt;sep&lt;/em&gt; 로 구분됩니다 . 코드:</target>
        </trans-unit>
        <trans-unit id="969d144035ae8c1097f28295048d2e10839468b5" translate="yes" xml:space="preserve">
          <source>Substrings are separated by the string &lt;em&gt;sep&lt;/em&gt;. This is a wrapper around the &lt;a href=&quot;#split.i,string,string,int&quot;&gt;split iterator&lt;/a&gt;.</source>
          <target state="translated">부분 문자열은 문자열 &lt;em&gt;sep&lt;/em&gt; 로 구분됩니다 . 이것은 &lt;a href=&quot;#split.i,string,string,int&quot;&gt;split iterator를&lt;/a&gt; 감싸는 래퍼 입니다.</target>
        </trans-unit>
        <trans-unit id="40eddb03da5311724753730e36fe8edd7e714d48" translate="yes" xml:space="preserve">
          <source>Substrings are separated from the right by the char &lt;code&gt;sep&lt;/code&gt;.</source>
          <target state="translated">부분 문자열은 char &lt;code&gt;sep&lt;/code&gt; 로 오른쪽에서 분리됩니다 .</target>
        </trans-unit>
        <trans-unit id="518967ba497c08dc430a7afa2799aa4c61e41859" translate="yes" xml:space="preserve">
          <source>Substrings are separated from the right by the char &lt;em&gt;sep&lt;/em&gt;</source>
          <target state="translated">부분 문자열은 char &lt;em&gt;sep에&lt;/em&gt; 의해 오른쪽에서 분리됩니다&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="78205c1327471e57b729f9463aae45060c95e813" translate="yes" xml:space="preserve">
          <source>Substrings are separated from the right by the set of chars &lt;code&gt;seps&lt;/code&gt;</source>
          <target state="translated">하위 문자열은 문자 &lt;code&gt;seps&lt;/code&gt; 세트로 오른쪽에서 분리됩니다.</target>
        </trans-unit>
        <trans-unit id="2cd528c9f9109219b97fe511dbbed0b9acbd1118" translate="yes" xml:space="preserve">
          <source>Substrings are separated from the right by the set of chars &lt;em&gt;seps&lt;/em&gt;</source>
          <target state="translated">문자열이 문자의 집합으로 오른쪽 분리 &lt;em&gt;SEPS&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f2af270304fa55dd07e0f5b384f2a6d2e1440870" translate="yes" xml:space="preserve">
          <source>Substrings are separated from the right by the string &lt;code&gt;sep&lt;/code&gt;</source>
          <target state="translated">부분 문자열은 문자열 &lt;code&gt;sep&lt;/code&gt; 로 오른쪽에서 분리됩니다.</target>
        </trans-unit>
        <trans-unit id="5e2f8adf7c1cab6995d76bf2a7d0ca46134fd40b" translate="yes" xml:space="preserve">
          <source>Substrings are separated from the right by the string &lt;em&gt;sep&lt;/em&gt;</source>
          <target state="translated">부분 문자열은 문자열 &lt;em&gt;sep에&lt;/em&gt; 의해 오른쪽에서 분리됩니다&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f96fd7e06b2e3440bae01cbcfe7490ed94381668" translate="yes" xml:space="preserve">
          <source>Subtract &lt;code&gt;interval&lt;/code&gt; from &lt;code&gt;dt&lt;/code&gt;. Components from &lt;code&gt;interval&lt;/code&gt; are subtracted in the order of their size, i.e first the &lt;code&gt;years&lt;/code&gt; component, then the &lt;code&gt;months&lt;/code&gt; component and so on. The returned &lt;code&gt;DateTime&lt;/code&gt; will have the same timezone as the input.</source>
          <target state="translated">&lt;code&gt;dt&lt;/code&gt; 에서 &lt;code&gt;interval&lt;/code&gt; 을 뺍니다 . 에서 구성 요소 &lt;code&gt;interval&lt;/code&gt; 크기의 순서로 차감 즉, 먼저 &lt;code&gt;years&lt;/code&gt; 구성 요소, 다음 &lt;code&gt;months&lt;/code&gt; 구성 요소 등) 됩니다. 반환 된 &lt;code&gt;DateTime&lt;/code&gt; 은 입력과 동일한 시간대를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="7ddabda6a94d4ecf6207252d0760c4da079abe43" translate="yes" xml:space="preserve">
          <source>Subtract &lt;code&gt;interval&lt;/code&gt; from &lt;code&gt;dt&lt;/code&gt;. Components from &lt;code&gt;interval&lt;/code&gt; are subtracted in the order of their size, i.e. first the &lt;code&gt;years&lt;/code&gt; component, then the &lt;code&gt;months&lt;/code&gt; component and so on. The returned &lt;code&gt;DateTime&lt;/code&gt; will have the same timezone as the input.</source>
          <target state="translated">&lt;code&gt;dt&lt;/code&gt; 에서 &lt;code&gt;interval&lt;/code&gt; 을 뺍니다 . &lt;code&gt;interval&lt;/code&gt; 에서 구성 요소는 크기 순서로 뺍니다. 즉, 먼저 &lt;code&gt;years&lt;/code&gt; 구성 요소, &lt;code&gt;months&lt;/code&gt; 구성 요소 등이됩니다. 반환 된 &lt;code&gt;DateTime&lt;/code&gt; 은 입력과 동일한 시간대를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="76bc475fe96d51312be250027df1a17a17035b2c" translate="yes" xml:space="preserve">
          <source>Subtract &lt;em&gt;y&lt;/em&gt; from &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="translated">에서 &lt;em&gt;y&lt;/em&gt; 를 빼기&lt;em&gt;x&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="b1dcda865799d69866263f2964a5c388fd816f8c" translate="yes" xml:space="preserve">
          <source>Subtract &lt;em&gt;y&lt;/em&gt; from the complex number &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="translated">복소수에서 &lt;em&gt;y&lt;/em&gt; 를 빼기&lt;em&gt; x&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="7d4f3fc03c45197f8110a3f544c2fd44b496e0b4" translate="yes" xml:space="preserve">
          <source>Subtract a duration from another.</source>
          <target state="translated">다른 기간에서 기간을 뺍니다.</target>
        </trans-unit>
        <trans-unit id="ddfcb7d6ba4f72a5504bc8577140f749d6ae9902" translate="yes" xml:space="preserve">
          <source>Subtract int &lt;code&gt;y&lt;/code&gt; from rational &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">유리수 &lt;code&gt;x&lt;/code&gt; 에서 int &lt;code&gt;y&lt;/code&gt; 를 뺍니다 .</target>
        </trans-unit>
        <trans-unit id="0a0ad440585f43f54b766a259c1467e330bf63c8" translate="yes" xml:space="preserve">
          <source>Subtract int &lt;em&gt;y&lt;/em&gt; from rational &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="translated">유리수 &lt;em&gt;x&lt;/em&gt; 에서 int &lt;em&gt;y&lt;/em&gt; 빼기&lt;em&gt;&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="48be88b737940913a48d4fd9320daab0033608d8" translate="yes" xml:space="preserve">
          <source>Subtract rational &lt;code&gt;y&lt;/code&gt; from int &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">int &lt;code&gt;x&lt;/code&gt; 에서 유리수 &lt;code&gt;y&lt;/code&gt; 를 뺍니다 .</target>
        </trans-unit>
        <trans-unit id="46e2d73a83376b07d184f993db972b68b307d5ec" translate="yes" xml:space="preserve">
          <source>Subtract rational &lt;code&gt;y&lt;/code&gt; from rational &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">유리 &lt;code&gt;x&lt;/code&gt; 에서 유리 &lt;code&gt;y&lt;/code&gt; 를 뺍니다 .</target>
        </trans-unit>
        <trans-unit id="5428a30fe88840d786a7f61b7d233914d258e100" translate="yes" xml:space="preserve">
          <source>Subtract rational &lt;em&gt;y&lt;/em&gt; from int &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="translated">int &lt;em&gt;x&lt;/em&gt; 에서 유리수 &lt;em&gt;y&lt;/em&gt; 를 뺍니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="41acafc64eeedf3eca00c862873071d48f536cc2" translate="yes" xml:space="preserve">
          <source>Subtract rational &lt;em&gt;y&lt;/em&gt; from rational &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="translated">유리수 &lt;em&gt;x&lt;/em&gt; 에서 유리수 &lt;em&gt;y&lt;/em&gt; 를 뺍니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7bef7ee0413bb39584843be44a786acae479c9b7" translate="yes" xml:space="preserve">
          <source>Subtract two complex numbers.</source>
          <target state="translated">두 개의 복소수를 뺍니다.</target>
        </trans-unit>
        <trans-unit id="7189d91ec5033b9efd0a25062c31f9a16c88f644" translate="yes" xml:space="preserve">
          <source>Subtract two rational numbers.</source>
          <target state="translated">두 개의 유리수를 뺍니다.</target>
        </trans-unit>
        <trans-unit id="944ce3055be2c1506a6f4cf43940954ed91dc625" translate="yes" xml:space="preserve">
          <source>Subtracts &lt;code&gt;interval&lt;/code&gt; from Time &lt;code&gt;time&lt;/code&gt;. If &lt;code&gt;interval&lt;/code&gt; contains any years, months, weeks or days the operation is performed in the local timezone.</source>
          <target state="translated">시간 &lt;code&gt;time&lt;/code&gt; 에서 &lt;code&gt;interval&lt;/code&gt; 을 뺍니다 . 경우 &lt;code&gt;interval&lt;/code&gt; 어떤 년, 월, 주 또는 일을 포함하는 작업이 로컬 시간대에 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="9aaf7c8d6f2f11472f82e5d6c9e441eaf1e803ea" translate="yes" xml:space="preserve">
          <source>Subtracts &lt;code&gt;y&lt;/code&gt; from &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 에서 &lt;code&gt;y&lt;/code&gt; 를 뺍니다 .</target>
        </trans-unit>
        <trans-unit id="000947a7b3b6b45852df6f5a592408f7e55c3bb3" translate="yes" xml:space="preserve">
          <source>Subtracts &lt;em&gt;interval&lt;/em&gt; from Time &lt;em&gt;time&lt;/em&gt;. If &lt;em&gt;interval&lt;/em&gt; contains any years, months, weeks or days the operation is performed in the local timezone.</source>
          <target state="translated">감산은 &lt;em&gt;간격&lt;/em&gt; 시간에서 &lt;em&gt;시간&lt;/em&gt; . 경우 &lt;em&gt;간격이&lt;/em&gt; 어떤 년, 월, 주 또는 일을 포함하는 작업이 로컬 시간대에 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="333dcd5ddf8f4d8066eab6ce4acb5ae7c09ae03c" translate="yes" xml:space="preserve">
          <source>Subtracts TimeInterval &lt;code&gt;ti1&lt;/code&gt; from &lt;code&gt;ti2&lt;/code&gt;.</source>
          <target state="translated">감산 TimeInterval이 &lt;code&gt;ti1&lt;/code&gt; 에서 &lt;code&gt;ti2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab37d7d74d0690d843f99475e2b31299825724cb" translate="yes" xml:space="preserve">
          <source>Subtracts a complex number from a real number.</source>
          <target state="translated">실수에서 복소수를 뺍니다.</target>
        </trans-unit>
        <trans-unit id="f6179323b99f6b40288e7176393e0e598ec9f2ba" translate="yes" xml:space="preserve">
          <source>Subtracts a duration of time from a &lt;code&gt;Time&lt;/code&gt;.</source>
          <target state="translated">A로부터 시간의 기간 뺍 &lt;code&gt;Time&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="582e7682b862198d4239abefa67a9fecca5c5924" translate="yes" xml:space="preserve">
          <source>Subtracts a real number from a complex number.</source>
          <target state="translated">복소수에서 실수를 뺍니다.</target>
        </trans-unit>
        <trans-unit id="8dcbc2b9a13a2d866e0df3c601f071ff376561ec" translate="yes" xml:space="preserve">
          <source>Subtracts complex &lt;em&gt;y&lt;/em&gt; from float &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="translated">float &lt;em&gt;x&lt;/em&gt; 에서 복소수 &lt;em&gt;y&lt;/em&gt; 를 뺍니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4c88d3850624fa5509b42b7c6454e560083b18e5" translate="yes" xml:space="preserve">
          <source>Subtracts float &lt;em&gt;y&lt;/em&gt; from complex &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="translated">복소수 &lt;em&gt;x&lt;/em&gt; 에서 float &lt;em&gt;y&lt;/em&gt; 를 뺍니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="65d015878cceb4f8d8a39c36dce9d824dea87723" translate="yes" xml:space="preserve">
          <source>Subtracts two colors.</source>
          <target state="translated">두 가지 색상을 뺍니다.</target>
        </trans-unit>
        <trans-unit id="6a08c0f16b6d22458d9c7221ea300e0cef66dcb1" translate="yes" xml:space="preserve">
          <source>Subtracts two complex numbers.</source>
          <target state="translated">두 개의 복소수를 뺍니다.</target>
        </trans-unit>
        <trans-unit id="f70590b4a99f5ea41cbbb277fc8ae20c97c2f508" translate="yes" xml:space="preserve">
          <source>Subtype relation</source>
          <target state="translated">하위 유형 관계</target>
        </trans-unit>
        <trans-unit id="0dfbf551cd1febe9be3271e47b0ace6915b7e99f" translate="yes" xml:space="preserve">
          <source>Success, SuccessX</source>
          <target state="translated">성공, 성공 X</target>
        </trans-unit>
        <trans-unit id="d9aa2dd47e2183e4004b0890583ddab7b0dd3b84" translate="yes" xml:space="preserve">
          <source>Successful compilation of a library or a binary.</source>
          <target state="translated">라이브러리 또는 바이너리를 성공적으로 컴파일했습니다.</target>
        </trans-unit>
        <trans-unit id="bccf359ef69004b63964665e2e48bb58d4970187" translate="yes" xml:space="preserve">
          <source>Successor of the value</source>
          <target state="translated">가치의 후계자</target>
        </trans-unit>
        <trans-unit id="885db975a310a3bb649f91e5771f94988987874d" translate="yes" xml:space="preserve">
          <source>Suffix</source>
          <target state="translated">Suffix</target>
        </trans-unit>
        <trans-unit id="4589042171dbe8f1a5e4569b69df29c880a50af3" translate="yes" xml:space="preserve">
          <source>Sugar for &lt;code&gt;contains&lt;/code&gt;.</source>
          <target state="translated">에 대한 설탕이 &lt;code&gt;contains&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2da8c7f3bedfe81ad1e8a038dd4904e8594f00e7" translate="yes" xml:space="preserve">
          <source>Sugar for &lt;code&gt;not contains&lt;/code&gt;.</source>
          <target state="translated">설탕은 &lt;code&gt;not contains&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e3e076ed673ec7f1a40d1724dfcc98398c4fee1" translate="yes" xml:space="preserve">
          <source>Sugar for contains</source>
          <target state="translated">포함하는 설탕</target>
        </trans-unit>
        <trans-unit id="2b0f1741006e1749638aebbba0c62519275602e6" translate="yes" xml:space="preserve">
          <source>Sugar for not containing</source>
          <target state="translated">함유하지 않은 설탕</target>
        </trans-unit>
        <trans-unit id="c429acd1fc1dbbffd5706a259a4f3be6e3278832" translate="yes" xml:space="preserve">
          <source>Suggest:</source>
          <target state="translated">Suggest:</target>
        </trans-unit>
        <trans-unit id="861edba00547bc9ce7a08df78d4378766418179f" translate="yes" xml:space="preserve">
          <source>Suggestions</source>
          <target state="translated">Suggestions</target>
        </trans-unit>
        <trans-unit id="5d328375d9f44cbf3eef8e63532f27aa7009b1d3" translate="yes" xml:space="preserve">
          <source>Suggestions:</source>
          <target state="translated">Suggestions:</target>
        </trans-unit>
        <trans-unit id="941d7d9ac0746aafb3a7018083b0465f921dce61" translate="yes" xml:space="preserve">
          <source>Supported OS primitives: &lt;code&gt;epoll&lt;/code&gt;, &lt;code&gt;kqueue&lt;/code&gt;, &lt;code&gt;poll&lt;/code&gt; and Windows &lt;code&gt;select&lt;/code&gt;.</source>
          <target state="translated">지원되는 OS의 기본 요소 : &lt;code&gt;epoll&lt;/code&gt; , &lt;code&gt;kqueue&lt;/code&gt; , &lt;code&gt;poll&lt;/code&gt; 및 Windows &lt;code&gt;select&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a5f3ef8bd9a226a902e3da626f593d8f6bdd720e" translate="yes" xml:space="preserve">
          <source>Supported PEG grammar</source>
          <target state="translated">지원되는 PEG 문법</target>
        </trans-unit>
        <trans-unit id="661b90f796dfd97d6afc8726044a463c8a749d15" translate="yes" xml:space="preserve">
          <source>Supported Syntax</source>
          <target state="translated">지원되는 구문</target>
        </trans-unit>
        <trans-unit id="1c6497a7220530457d234109b305f50a47ad3300" translate="yes" xml:space="preserve">
          <source>Supported architectures</source>
          <target state="translated">지원되는 아키텍처</target>
        </trans-unit>
        <trans-unit id="9d80112951ed980c75468e1be3b86df0f222e090" translate="yes" xml:space="preserve">
          <source>Supported features: files, sockets, pipes, timers, processes, signals and user events.</source>
          <target state="translated">지원되는 기능 : 파일, 소켓, 파이프, 타이머, 프로세스, 신호 및 사용자 이벤트.</target>
        </trans-unit>
        <trans-unit id="922e354db556982aaec9d3960cdeb221956777ff" translate="yes" xml:space="preserve">
          <source>Supported syntax with default empty &lt;code&gt;shortNoVal&lt;/code&gt;/&lt;code&gt;longNoVal&lt;/code&gt;:</source>
          <target state="translated">기본 비어있는 &lt;code&gt;shortNoVal&lt;/code&gt; / &lt;code&gt;longNoVal&lt;/code&gt; 을 지원하는 구문 :</target>
        </trans-unit>
        <trans-unit id="5162ee7d4f4f1e41461276a963caa4a048308cec" translate="yes" xml:space="preserve">
          <source>Supports IPv4 and v6. Raises OSError if external networking is not set up.</source>
          <target state="translated">IPv4 및 v6을 지원합니다. 외부 네트워킹이 설정되지 않은 경우 OSError를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="52fecfba1182fabfdebf61ef0bd285c76b11a6aa" translate="yes" xml:space="preserve">
          <source>Suspends the execution of the current async procedure for the next &lt;code&gt;ms&lt;/code&gt; milliseconds.</source>
          <target state="translated">다음 &lt;code&gt;ms&lt;/code&gt; 밀리 초 동안 현재 비동기 프로 시저 실행을 일시 중단합니다 .</target>
        </trans-unit>
        <trans-unit id="0468603d5fbfa15bd32a0e6672e8fad9e7cbdc71" translate="yes" xml:space="preserve">
          <source>Suspends the process &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">프로세스 &lt;code&gt;p&lt;/code&gt; 를 일시 중단합니다 .</target>
        </trans-unit>
        <trans-unit id="d5c77fcc8428eb1c29fb0edea391c5fde177f006" translate="yes" xml:space="preserve">
          <source>Suspends the process &lt;em&gt;p&lt;/em&gt;.</source>
          <target state="translated">프로세스 &lt;em&gt;p를&lt;/em&gt; 일시 중단합니다 .</target>
        </trans-unit>
        <trans-unit id="210dd62a81e43d19e22018878ba665485e0526cb" translate="yes" xml:space="preserve">
          <source>Swap</source>
          <target state="translated">Swap</target>
        </trans-unit>
        <trans-unit id="a2103316f6a099c259e3abf30bc81f64100ca60d" translate="yes" xml:space="preserve">
          <source>Swaps the case of runes in &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; 에서 룬의 대소 문자를 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="ff172170c09b0a3f643ea6f3860725b0e3adcde6" translate="yes" xml:space="preserve">
          <source>Swaps the case of unicode characters in &lt;em&gt;s&lt;/em&gt;</source>
          <target state="translated">유니 코드 문자의 경우를 &lt;em&gt;s로&lt;/em&gt; 바꿉니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="55b596882450b0f897f71f7b842053dfc1583f85" translate="yes" xml:space="preserve">
          <source>Swaps the positions of elements in a sequence randomly.</source>
          <target state="translated">순서대로 요소의 위치를 ​​무작위로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="1d14f451765cae99c8b0356d90ed76636a29054d" translate="yes" xml:space="preserve">
          <source>Swaps the values &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">값 &lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 를 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="b6f23536d801e4506595523f1216206672f0638f" translate="yes" xml:space="preserve">
          <source>SymChars:</source>
          <target state="translated">SymChars:</target>
        </trans-unit>
        <trans-unit id="744372acefa9757da1222512b711ff06b3d40265" translate="yes" xml:space="preserve">
          <source>SymStartChars:</source>
          <target state="translated">SymStartChars:</target>
        </trans-unit>
        <trans-unit id="0ccabcb7feef7d8bfe041ead9426ae3125086c8c" translate="yes" xml:space="preserve">
          <source>Symbol binding in templates</source>
          <target state="translated">템플릿의 심볼 바인딩</target>
        </trans-unit>
        <trans-unit id="e15d9719893fff31a651b51709f3f17053857c18" translate="yes" xml:space="preserve">
          <source>Symbol lookup in generics</source>
          <target state="translated">제네릭의 심볼 조회</target>
        </trans-unit>
        <trans-unit id="93722351d20a0af3b4b9e37b38817089ab39c090" translate="yes" xml:space="preserve">
          <source>Symbol lookup of the identifiers &lt;code&gt;items&lt;/code&gt;/&lt;code&gt;pairs&lt;/code&gt; is performed after the rewriting step, so that all overloads of &lt;code&gt;items&lt;/code&gt;/&lt;code&gt;pairs&lt;/code&gt; are taken into account.</source>
          <target state="translated">식별자 &lt;code&gt;items&lt;/code&gt; / &lt;code&gt;pairs&lt;/code&gt; 의 심볼 조회는 재 작성 단계 후에 수행되므로, &lt;code&gt;items&lt;/code&gt; / &lt;code&gt;pairs&lt;/code&gt; 의 모든 과부하 가 고려됩니다.</target>
        </trans-unit>
        <trans-unit id="84e33e2c80c65f15d6048f2ca6f92d94cfd3e6de" translate="yes" xml:space="preserve">
          <source>Symbol usages</source>
          <target state="translated">기호 사용법</target>
        </trans-unit>
        <trans-unit id="0c7332bdf466f5f68df89f2831c695ce02cc7410" translate="yes" xml:space="preserve">
          <source>SymbolFilesOption.disabledSf</source>
          <target state="translated">SymbolFilesOption.disabledSf</target>
        </trans-unit>
        <trans-unit id="8babda77261b567a42d37ee56eb6678ce1946e14" translate="yes" xml:space="preserve">
          <source>SymbolFilesOption.readOnlySf</source>
          <target state="translated">SymbolFilesOption.readOnlySf</target>
        </trans-unit>
        <trans-unit id="889c622d41271044d56ec9f334c67fa68e20a7a5" translate="yes" xml:space="preserve">
          <source>SymbolFilesOption.v2Sf</source>
          <target state="translated">SymbolFilesOption.v2Sf</target>
        </trans-unit>
        <trans-unit id="5d7481b99530cfdcd71148a8f08a4a7d000c5a83" translate="yes" xml:space="preserve">
          <source>SymbolFilesOption.writeOnlySf</source>
          <target state="translated">SymbolFilesOption.writeOnlySf</target>
        </trans-unit>
        <trans-unit id="8dc27488446e3674a454ce3a37c5e92bd4ece99f" translate="yes" xml:space="preserve">
          <source>SymbolFilesOption:</source>
          <target state="translated">SymbolFilesOption:</target>
        </trans-unit>
        <trans-unit id="15d2715339927ab1cacbd3a795da09326886df84" translate="yes" xml:space="preserve">
          <source>Symbolic link.</source>
          <target state="translated">심볼릭 링크.</target>
        </trans-unit>
        <trans-unit id="11ad0ab4dc32899beb01665dac0504b053480af8" translate="yes" xml:space="preserve">
          <source>Symbols declared in an &lt;em&gt;enter&lt;/em&gt; handler can be made visible in the corresponding &lt;em&gt;leave&lt;/em&gt; handler by annotating them with an &lt;em&gt;inject&lt;/em&gt; pragma.</source>
          <target state="translated">&lt;em&gt;enter&lt;/em&gt; 처리기에 선언 된 기호 는 &lt;em&gt;주입&lt;/em&gt; pragma 로 주석을 달아 해당 &lt;em&gt;휴가&lt;/em&gt; 처리기에 표시 될 수 있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a4b7119bc873b1a47de2955098054673778589df" translate="yes" xml:space="preserve">
          <source>Synonym for existsDir</source>
          <target state="translated">존재의 동의어</target>
        </trans-unit>
        <trans-unit id="ba60d4cc263ff180c27a4a09e6b636cd98ac4e3b" translate="yes" xml:space="preserve">
          <source>Synonym for existsFile</source>
          <target state="translated">existFile의 동의어</target>
        </trans-unit>
        <trans-unit id="e8aa2bdcd24d6964731df6f38e8110132abbce66" translate="yes" xml:space="preserve">
          <source>Syntactically a &lt;em&gt;type conversion&lt;/em&gt; is like a procedure call, but a type name replaces the procedure name. A type conversion is always safe in the sense that a failure to convert a type to another results in an exception (if it cannot be determined statically).</source>
          <target state="translated">구문 상 &lt;em&gt;유형 변환&lt;/em&gt; 은 프로 시저 호출과 유사하지만 유형 이름이 프로 시저 이름을 대체합니다. 형식 변환은 형식을 다른 형식으로 변환하지 못하면 예외가 발생한다는 점에서 항상 안전합니다 (정적으로 결정할 수없는 경우).</target>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="9c59412440fcb6dd3270f66f446a4acc85d89be4" translate="yes" xml:space="preserve">
          <source>Syntax sugar for anonymous procedures.</source>
          <target state="translated">익명의 절차를위한 구문 설탕.</target>
        </trans-unit>
        <trans-unit id="34e99581fb757dec95618e6a889447ca27d23d47" translate="yes" xml:space="preserve">
          <source>Syntax sugar for anonymous procedures. It also supports pragmas.</source>
          <target state="translated">익명 절차를위한 구문 설탕. pragma도 지원합니다.</target>
        </trans-unit>
        <trans-unit id="a492d9c66fdcf105c885da59425dccb0b62e918e" translate="yes" xml:space="preserve">
          <source>Syntax sugar for procedure types.</source>
          <target state="translated">프로 시저 유형의 구문 설탕.</target>
        </trans-unit>
        <trans-unit id="090d2c17d0e3b49191766104900e7e0e5757f58c" translate="yes" xml:space="preserve">
          <source>System module</source>
          <target state="translated">시스템 모듈</target>
        </trans-unit>
        <trans-unit id="2e2159d4e1bf250922bd0a832c5179a9837c51e5" translate="yes" xml:space="preserve">
          <source>T = enum</source>
          <target state="translated">T = 열거 형</target>
        </trans-unit>
        <trans-unit id="7bf06928097d3025ba2525d66887d7e565394638" translate="yes" xml:space="preserve">
          <source>T and F</source>
          <target state="translated">T와 F</target>
        </trans-unit>
        <trans-unit id="9655813e1e7c7f6c428016e80a6f257f15bd6b83" translate="yes" xml:space="preserve">
          <source>T or F</source>
          <target state="translated">T 또는 F</target>
        </trans-unit>
        <trans-unit id="99ddbbe1d12468a3bb122c33a8c5a19531ef8f85" translate="yes" xml:space="preserve">
          <source>T xor F</source>
          <target state="translated">T xor F</target>
        </trans-unit>
        <trans-unit id="090eb4fe16e0c9bd93046d5c0caf4b4e5375d9de" translate="yes" xml:space="preserve">
          <source>TAliasRequest.aqNoAlias</source>
          <target state="translated">TAliasRequest.aqNoAlias</target>
        </trans-unit>
        <trans-unit id="9e99e877d2acbd2c47750bfa5fe15b5e4be0e9dd" translate="yes" xml:space="preserve">
          <source>TAliasRequest.aqNone</source>
          <target state="translated">TAliasRequest.aqNone</target>
        </trans-unit>
        <trans-unit id="3b9540619d955548287c56fd8358e5ab40527365" translate="yes" xml:space="preserve">
          <source>TAliasRequest.aqShouldAlias</source>
          <target state="translated">TAliasRequest.aqShouldAlias</target>
        </trans-unit>
        <trans-unit id="abd61547197301fab0806d6b212d0bb969d259aa" translate="yes" xml:space="preserve">
          <source>TAliasRequest:</source>
          <target state="translated">TAliasRequest:</target>
        </trans-unit>
        <trans-unit id="d1bffc479a787652b12c41fc4c5808751b8a4077" translate="yes" xml:space="preserve">
          <source>TAnalysisResult.arMaybe</source>
          <target state="translated">TAnalysisResult.arMaybe</target>
        </trans-unit>
        <trans-unit id="9f4a17edbbe6cb2cc0b63e7ec3e299b9db176fac" translate="yes" xml:space="preserve">
          <source>TAnalysisResult.arNo</source>
          <target state="translated">TAnalysisResult.arNo</target>
        </trans-unit>
        <trans-unit id="3bb147aaa9d00e08eb958a70f4bae995c0d91d59" translate="yes" xml:space="preserve">
          <source>TAnalysisResult.arYes</source>
          <target state="translated">TAnalysisResult.arYes</target>
        </trans-unit>
        <trans-unit id="e3eaef50e6505ffc7e36b376760669b9f4fe93c7" translate="yes" xml:space="preserve">
          <source>TAnalysisResult:</source>
          <target state="translated">TAnalysisResult:</target>
        </trans-unit>
        <trans-unit id="8fd0259835a56c0f3580e5eb8f25cfe36d225fed" translate="yes" xml:space="preserve">
          <source>TAssignableResult.arDiscriminant</source>
          <target state="translated">TAssignableResult.arDiscriminant</target>
        </trans-unit>
        <trans-unit id="4f206160338f2bc09ca1871a69630c32d8248d87" translate="yes" xml:space="preserve">
          <source>TAssignableResult.arLValue</source>
          <target state="translated">TAssignableResult.arLValue</target>
        </trans-unit>
        <trans-unit id="84eb35b6dba78ea2cef704554bf189be9efafd23" translate="yes" xml:space="preserve">
          <source>TAssignableResult.arLentValue</source>
          <target state="translated">TAssignableResult.arLentValue</target>
        </trans-unit>
        <trans-unit id="674344dfc69a0549ec6f6caa5208f571e4782b62" translate="yes" xml:space="preserve">
          <source>TAssignableResult.arLocalLValue</source>
          <target state="translated">TAssignableResult.arLocalLValue</target>
        </trans-unit>
        <trans-unit id="88984952f180a101386c63119a49295ac9c428a1" translate="yes" xml:space="preserve">
          <source>TAssignableResult.arNone</source>
          <target state="translated">TAssignableResult.arNone</target>
        </trans-unit>
        <trans-unit id="65209175a6eb966146d97a6b217331fc3efd6e19" translate="yes" xml:space="preserve">
          <source>TAssignableResult.arStrange</source>
          <target state="translated">TAssignableResult.arStrange</target>
        </trans-unit>
        <trans-unit id="b61b4f562634ca2382688ce6dee38f4f2bdf0a1c" translate="yes" xml:space="preserve">
          <source>TAssignableResult:</source>
          <target state="translated">TAssignableResult:</target>
        </trans-unit>
        <trans-unit id="ba60f160fae4ee555f0995b17da06ce18395c4ee" translate="yes" xml:space="preserve">
          <source>TBackend.backendC</source>
          <target state="translated">TBackend.backendC</target>
        </trans-unit>
        <trans-unit id="47cab8a73c1d9de043f08d58638d2de5f471c6c6" translate="yes" xml:space="preserve">
          <source>TBackend.backendCpp</source>
          <target state="translated">TBackend.backendCpp</target>
        </trans-unit>
        <trans-unit id="b425a8a08ced80279a15c45a21823c3a9d7376a6" translate="yes" xml:space="preserve">
          <source>TBackend.backendInvalid</source>
          <target state="translated">TBackend.backendInvalid</target>
        </trans-unit>
        <trans-unit id="e5950512bf57e080367bead93844ef2a952f9a9b" translate="yes" xml:space="preserve">
          <source>TBackend.backendJs</source>
          <target state="translated">TBackend.backendJs</target>
        </trans-unit>
        <trans-unit id="6b4de21450363a59cdfdc75549b19a668e151940" translate="yes" xml:space="preserve">
          <source>TBackend.backendObjc</source>
          <target state="translated">TBackend.backendObjc</target>
        </trans-unit>
        <trans-unit id="4948dd9271546832db73f6b92d72a004cf510359" translate="yes" xml:space="preserve">
          <source>TBackend:</source>
          <target state="translated">TBackend:</target>
        </trans-unit>
        <trans-unit id="464549773e0f36df43358a91e96fb5346407c32a" translate="yes" xml:space="preserve">
          <source>TBaseLexer:</source>
          <target state="translated">TBaseLexer:</target>
        </trans-unit>
        <trans-unit id="8b6283cd0e7ffbd5a0b9ad65915013b58b147ccf" translate="yes" xml:space="preserve">
          <source>TBitSet:</source>
          <target state="translated">TBitSet:</target>
        </trans-unit>
        <trans-unit id="81f277a8b534f53e425565b059a377958f281ff5" translate="yes" xml:space="preserve">
          <source>TBlock:</source>
          <target state="translated">TBlock:</target>
        </trans-unit>
        <trans-unit id="42213550788a90ad634d18e01023519c93065bb4" translate="yes" xml:space="preserve">
          <source>TCFileSection.cfsDatInitProc</source>
          <target state="translated">TCFileSection.cfsDatInitProc</target>
        </trans-unit>
        <trans-unit id="83da7c346a03cfc5523374a8597578ef358e455b" translate="yes" xml:space="preserve">
          <source>TCFileSection.cfsData</source>
          <target state="translated">TCFileSection.cfsData</target>
        </trans-unit>
        <trans-unit id="a2f3162a75cb9ede0e7184c1a4528935f6eab997" translate="yes" xml:space="preserve">
          <source>TCFileSection.cfsDebugInit</source>
          <target state="translated">TCFileSection.cfsDebugInit</target>
        </trans-unit>
        <trans-unit id="22303716874311d8b18642a52463e8e7aaad609f" translate="yes" xml:space="preserve">
          <source>TCFileSection.cfsDynLibDeinit</source>
          <target state="translated">TCFileSection.cfsDynLibDeinit</target>
        </trans-unit>
        <trans-unit id="ef5f47d0fa5f4736a725f1acc39637e8b5d0c4e4" translate="yes" xml:space="preserve">
          <source>TCFileSection.cfsDynLibInit</source>
          <target state="translated">TCFileSection.cfsDynLibInit</target>
        </trans-unit>
        <trans-unit id="4284bb123ec8434328aa471e125cc393538237ee" translate="yes" xml:space="preserve">
          <source>TCFileSection.cfsFieldInfo</source>
          <target state="translated">TCFileSection.cfsFieldInfo</target>
        </trans-unit>
        <trans-unit id="a2f685453f063f8fcc7980e4d0554fae8b9df67f" translate="yes" xml:space="preserve">
          <source>TCFileSection.cfsForwardTypes</source>
          <target state="translated">TCFileSection.cfsForwardTypes</target>
        </trans-unit>
        <trans-unit id="81c771526539d273d44821ae1bf474b36952f696" translate="yes" xml:space="preserve">
          <source>TCFileSection.cfsFrameDefines</source>
          <target state="translated">TCFileSection.cfsFrameDefines</target>
        </trans-unit>
        <trans-unit id="85a4c2fcd327f5bf1463091b6365c8a88491b0da" translate="yes" xml:space="preserve">
          <source>TCFileSection.cfsHeaders</source>
          <target state="translated">TCFileSection.cfsHeaders</target>
        </trans-unit>
        <trans-unit id="27cc7b9abe19b1113111cc4302bef927da4fdebb" translate="yes" xml:space="preserve">
          <source>TCFileSection.cfsInitProc</source>
          <target state="translated">TCFileSection.cfsInitProc</target>
        </trans-unit>
        <trans-unit id="9722a07d420358e51870c7daa03c3491451b2b16" translate="yes" xml:space="preserve">
          <source>TCFileSection.cfsMergeInfo</source>
          <target state="translated">TCFileSection.cfsMergeInfo</target>
        </trans-unit>
        <trans-unit id="9879d0aecc918ca7f764d6a73d55eafd57a7b8fa" translate="yes" xml:space="preserve">
          <source>TCFileSection.cfsProcHeaders</source>
          <target state="translated">TCFileSection.cfsProcHeaders</target>
        </trans-unit>
        <trans-unit id="e153f8ecc187abebaead1cde1600f31fdeaf8207" translate="yes" xml:space="preserve">
          <source>TCFileSection.cfsProcs</source>
          <target state="translated">TCFileSection.cfsProcs</target>
        </trans-unit>
        <trans-unit id="33e49a0d0475c8c71aa1b87396d28efd456d594e" translate="yes" xml:space="preserve">
          <source>TCFileSection.cfsSeqTypes</source>
          <target state="translated">TCFileSection.cfsSeqTypes</target>
        </trans-unit>
        <trans-unit id="f18e24b057c0e8da6e8c5842f770766601e2bf37" translate="yes" xml:space="preserve">
          <source>TCFileSection.cfsTypeInfo</source>
          <target state="translated">TCFileSection.cfsTypeInfo</target>
        </trans-unit>
        <trans-unit id="7264008a6f64784fccaf5659eff746df0b89bc0a" translate="yes" xml:space="preserve">
          <source>TCFileSection.cfsTypeInit1</source>
          <target state="translated">TCFileSection.cfsTypeInit1</target>
        </trans-unit>
        <trans-unit id="a586dabeb3f2a2e3823561214d57882a3a4bc41c" translate="yes" xml:space="preserve">
          <source>TCFileSection.cfsTypeInit2</source>
          <target state="translated">TCFileSection.cfsTypeInit2</target>
        </trans-unit>
        <trans-unit id="6a10eb98d3f40354de0a371c2bc8641a02c57a53" translate="yes" xml:space="preserve">
          <source>TCFileSection.cfsTypeInit3</source>
          <target state="translated">TCFileSection.cfsTypeInit3</target>
        </trans-unit>
        <trans-unit id="262b7d6f36a56f17f4885dc435c491c59c05981b" translate="yes" xml:space="preserve">
          <source>TCFileSection.cfsTypes</source>
          <target state="translated">TCFileSection.cfsTypes</target>
        </trans-unit>
        <trans-unit id="658174bf1e7c3714580e736a3773f8f34c37c0d2" translate="yes" xml:space="preserve">
          <source>TCFileSection.cfsVars</source>
          <target state="translated">TCFileSection.cfsVars</target>
        </trans-unit>
        <trans-unit id="f940acbf71c2e811134b19d9815d7af5cc511ff6" translate="yes" xml:space="preserve">
          <source>TCFileSection:</source>
          <target state="translated">TCFileSection:</target>
        </trans-unit>
        <trans-unit id="bd2eb7d2929fe353516bd1ab62e8d26c0922b8bf" translate="yes" xml:space="preserve">
          <source>TCFileSections:</source>
          <target state="translated">TCFileSections:</target>
        </trans-unit>
        <trans-unit id="63fe1176f0f91ebb3462db2f35035f1af02222a5" translate="yes" xml:space="preserve">
          <source>TCProcFlag.beforeRetNeeded</source>
          <target state="translated">TCProcFlag.beforeRetNeeded</target>
        </trans-unit>
        <trans-unit id="8a3de9a38938ea21cb0f7881d5c73512e3961723" translate="yes" xml:space="preserve">
          <source>TCProcFlag.hasCurFramePointer</source>
          <target state="translated">TCProcFlag.hasCurFramePointer</target>
        </trans-unit>
        <trans-unit id="906ef6cd7813507030e5f50f09da6a19e24ae441" translate="yes" xml:space="preserve">
          <source>TCProcFlag.nimErrorFlagAccessed</source>
          <target state="translated">TCProcFlag.nimErrorFlagAccessed</target>
        </trans-unit>
        <trans-unit id="47999d0ded51c41e3e24f41fa3095c57e53ef1dc" translate="yes" xml:space="preserve">
          <source>TCProcFlag.nimErrorFlagDeclared</source>
          <target state="translated">TCProcFlag.nimErrorFlagDeclared</target>
        </trans-unit>
        <trans-unit id="baa42914ebdab4145b15752106e3ad021c10b5e6" translate="yes" xml:space="preserve">
          <source>TCProcFlag.nimErrorFlagDisabled</source>
          <target state="translated">TCProcFlag.nimErrorFlagDisabled</target>
        </trans-unit>
        <trans-unit id="9b73986239384b0399ea49ffcb2b5282e7b565a2" translate="yes" xml:space="preserve">
          <source>TCProcFlag.noSafePoints</source>
          <target state="translated">TCProcFlag.noSafePoints</target>
        </trans-unit>
        <trans-unit id="438d50495a1c0482520d8f5a9acf9b8ea9b14dfe" translate="yes" xml:space="preserve">
          <source>TCProcFlag.threadVarAccessed</source>
          <target state="translated">TCProcFlag.threadVarAccessed</target>
        </trans-unit>
        <trans-unit id="068c96332b3781f91b5c7ea1bf538654d0cca5e2" translate="yes" xml:space="preserve">
          <source>TCProcFlag:</source>
          <target state="translated">TCProcFlag:</target>
        </trans-unit>
        <trans-unit id="74038cd6af44efe376ad0d27230545ce3deb53c4" translate="yes" xml:space="preserve">
          <source>TCProcSection.cpsInit</source>
          <target state="translated">TCProcSection.cpsInit</target>
        </trans-unit>
        <trans-unit id="f08e7684d84dd04009cae7ba674a257a327b9c9f" translate="yes" xml:space="preserve">
          <source>TCProcSection.cpsLocals</source>
          <target state="translated">TCProcSection.cpsLocals</target>
        </trans-unit>
        <trans-unit id="93ce2106a001608ad27fd991c5a4560437974772" translate="yes" xml:space="preserve">
          <source>TCProcSection.cpsStmts</source>
          <target state="translated">TCProcSection.cpsStmts</target>
        </trans-unit>
        <trans-unit id="0255670bad17b97a18f78a2021c0b21cedd190a2" translate="yes" xml:space="preserve">
          <source>TCProcSection:</source>
          <target state="translated">TCProcSection:</target>
        </trans-unit>
        <trans-unit id="db9e23cd67b553d9b37739efce9531e3dc4cf8e4" translate="yes" xml:space="preserve">
          <source>TCProcSections:</source>
          <target state="translated">TCProcSections:</target>
        </trans-unit>
        <trans-unit id="425cae7846aad1a8a0722c092195cc1f1aa3c5f9" translate="yes" xml:space="preserve">
          <source>TCTypeKind.ctArray</source>
          <target state="translated">TCTypeKind.ctArray</target>
        </trans-unit>
        <trans-unit id="fed82c6e6ad74bde87c150ee347678255103d9a1" translate="yes" xml:space="preserve">
          <source>TCTypeKind.ctBool</source>
          <target state="translated">TCTypeKind.ctBool</target>
        </trans-unit>
        <trans-unit id="fd92a7e686e4d205e9d568b296f56d4674975c01" translate="yes" xml:space="preserve">
          <source>TCTypeKind.ctCString</source>
          <target state="translated">TCTypeKind.ctCString</target>
        </trans-unit>
        <trans-unit id="16482dc5784f4ce39686b872888114cdfb7d14d1" translate="yes" xml:space="preserve">
          <source>TCTypeKind.ctChar</source>
          <target state="translated">TCTypeKind.ctChar</target>
        </trans-unit>
        <trans-unit id="f3561403a9393facbda042c931d9fa2922bbc397" translate="yes" xml:space="preserve">
          <source>TCTypeKind.ctFloat</source>
          <target state="translated">TCTypeKind.ctFloat</target>
        </trans-unit>
        <trans-unit id="3b953786c16a620285bfb5be169c3dc3248ead50" translate="yes" xml:space="preserve">
          <source>TCTypeKind.ctFloat128</source>
          <target state="translated">TCTypeKind.ctFloat128</target>
        </trans-unit>
        <trans-unit id="a0d203aa9dc618dada8d7541bb8edd2eacfd7023" translate="yes" xml:space="preserve">
          <source>TCTypeKind.ctFloat32</source>
          <target state="translated">TCTypeKind.ctFloat32</target>
        </trans-unit>
        <trans-unit id="adca57f852aa3f7fac6fc716f3c213981e66a5ed" translate="yes" xml:space="preserve">
          <source>TCTypeKind.ctFloat64</source>
          <target state="translated">TCTypeKind.ctFloat64</target>
        </trans-unit>
        <trans-unit id="ddbc42f2a12f0f20b69983e01b4f1705525ddf5e" translate="yes" xml:space="preserve">
          <source>TCTypeKind.ctInt</source>
          <target state="translated">TCTypeKind.ctInt</target>
        </trans-unit>
        <trans-unit id="b1ee915b446aa54896478d0bbfa38f32d3c9f8e9" translate="yes" xml:space="preserve">
          <source>TCTypeKind.ctInt16</source>
          <target state="translated">TCTypeKind.ctInt16</target>
        </trans-unit>
        <trans-unit id="fca6648bddb17826b36de39a79d14f2ce5dab372" translate="yes" xml:space="preserve">
          <source>TCTypeKind.ctInt32</source>
          <target state="translated">TCTypeKind.ctInt32</target>
        </trans-unit>
        <trans-unit id="5968a87421aff762325037b2dfc6420b4f151e3e" translate="yes" xml:space="preserve">
          <source>TCTypeKind.ctInt64</source>
          <target state="translated">TCTypeKind.ctInt64</target>
        </trans-unit>
        <trans-unit id="2021b89fd44ddae73fc6ae7e805bf6a59ab6d6d3" translate="yes" xml:space="preserve">
          <source>TCTypeKind.ctInt8</source>
          <target state="translated">TCTypeKind.ctInt8</target>
        </trans-unit>
        <trans-unit id="ac3d9ea71ddf246fd394da81058bda2c3e1060f2" translate="yes" xml:space="preserve">
          <source>TCTypeKind.ctNimSeq</source>
          <target state="translated">TCTypeKind.ctNimSeq</target>
        </trans-unit>
        <trans-unit id="241ad616c8519b854bacf58cadeb7eddfcbb3b95" translate="yes" xml:space="preserve">
          <source>TCTypeKind.ctNimStr</source>
          <target state="translated">TCTypeKind.ctNimStr</target>
        </trans-unit>
        <trans-unit id="dd76cf6070b667c9aaf632467929ab68b4ddea3d" translate="yes" xml:space="preserve">
          <source>TCTypeKind.ctProc</source>
          <target state="translated">TCTypeKind.ctProc</target>
        </trans-unit>
        <trans-unit id="d0e5d545c193e6b16336356b321f4bbb5e18ca22" translate="yes" xml:space="preserve">
          <source>TCTypeKind.ctPtr</source>
          <target state="translated">TCTypeKind.ctPtr</target>
        </trans-unit>
        <trans-unit id="5c5a742448e6ed2290b375a19091918aa9070e18" translate="yes" xml:space="preserve">
          <source>TCTypeKind.ctPtrToArray</source>
          <target state="translated">TCTypeKind.ctPtrToArray</target>
        </trans-unit>
        <trans-unit id="5419a73c4a4ae4c8fd32ffc797c83b6c9bb03a4b" translate="yes" xml:space="preserve">
          <source>TCTypeKind.ctStruct</source>
          <target state="translated">TCTypeKind.ctStruct</target>
        </trans-unit>
        <trans-unit id="648b9d5d2cfe015ae7575f0f5416f058449b1c1b" translate="yes" xml:space="preserve">
          <source>TCTypeKind.ctUInt</source>
          <target state="translated">TCTypeKind.ctUInt</target>
        </trans-unit>
        <trans-unit id="3e74b3d0ecf8039b359881f293a45e9e2fa59d28" translate="yes" xml:space="preserve">
          <source>TCTypeKind.ctUInt16</source>
          <target state="translated">TCTypeKind.ctUInt16</target>
        </trans-unit>
        <trans-unit id="227e7bb398a3797c5c8706ffaa9e41fe9869033e" translate="yes" xml:space="preserve">
          <source>TCTypeKind.ctUInt32</source>
          <target state="translated">TCTypeKind.ctUInt32</target>
        </trans-unit>
        <trans-unit id="348eaa9d1c0e98b248adeb6bad03b0cfbe29ffcf" translate="yes" xml:space="preserve">
          <source>TCTypeKind.ctUInt64</source>
          <target state="translated">TCTypeKind.ctUInt64</target>
        </trans-unit>
        <trans-unit id="c22e04ffdc7558dd7add9813756d77113cad95c8" translate="yes" xml:space="preserve">
          <source>TCTypeKind.ctUInt8</source>
          <target state="translated">TCTypeKind.ctUInt8</target>
        </trans-unit>
        <trans-unit id="0efd65ffd46c4a915dfa90826d3205ca3807b200" translate="yes" xml:space="preserve">
          <source>TCTypeKind.ctVoid</source>
          <target state="translated">TCTypeKind.ctVoid</target>
        </trans-unit>
        <trans-unit id="f5d5e3207be476929da1aa65772c18c691a811ae" translate="yes" xml:space="preserve">
          <source>TCTypeKind:</source>
          <target state="translated">TCTypeKind:</target>
        </trans-unit>
        <trans-unit id="93a95fc350f17eacd790c327955c8d34b81a89d6" translate="yes" xml:space="preserve">
          <source>TCallingConvention.ccCDecl</source>
          <target state="translated">TCallingConvention.ccCDecl</target>
        </trans-unit>
        <trans-unit id="81bc7a0d74facdf4e56e4d9df4d30d5ae0bf458f" translate="yes" xml:space="preserve">
          <source>TCallingConvention.ccClosure</source>
          <target state="translated">TCallingConvention.ccClosure</target>
        </trans-unit>
        <trans-unit id="10b75a3aa41de7dcaa9cd60ba045eed2fdf22c49" translate="yes" xml:space="preserve">
          <source>TCallingConvention.ccFastCall</source>
          <target state="translated">TCallingConvention.ccFastCall</target>
        </trans-unit>
        <trans-unit id="b11cb71aa00c268e067823b1c86acb8a98ce15fd" translate="yes" xml:space="preserve">
          <source>TCallingConvention.ccInline</source>
          <target state="translated">TCallingConvention.ccInline</target>
        </trans-unit>
        <trans-unit id="d1c26cff634a02771f8678df56b03fd4df0ff457" translate="yes" xml:space="preserve">
          <source>TCallingConvention.ccNimCall</source>
          <target state="translated">TCallingConvention.ccNimCall</target>
        </trans-unit>
        <trans-unit id="574701d3062e27086000cbdab8f602c1af3a504b" translate="yes" xml:space="preserve">
          <source>TCallingConvention.ccNoConvention</source>
          <target state="translated">TCallingConvention.ccNoConvention</target>
        </trans-unit>
        <trans-unit id="f9ef22e03a653294292b6108a2e0bfd441c1b4de" translate="yes" xml:space="preserve">
          <source>TCallingConvention.ccNoInline</source>
          <target state="translated">TCallingConvention.ccNoInline</target>
        </trans-unit>
        <trans-unit id="136af9879b85067f5468c3a0165282aadd9cb46f" translate="yes" xml:space="preserve">
          <source>TCallingConvention.ccSafeCall</source>
          <target state="translated">TCallingConvention.ccSafeCall</target>
        </trans-unit>
        <trans-unit id="7a1955f4e18508cbc73a1de8b5f66371d063d363" translate="yes" xml:space="preserve">
          <source>TCallingConvention.ccStdCall</source>
          <target state="translated">TCallingConvention.ccStdCall</target>
        </trans-unit>
        <trans-unit id="a44d325498c2f701aa3679a6e80a130e21ee72b3" translate="yes" xml:space="preserve">
          <source>TCallingConvention.ccSysCall</source>
          <target state="translated">TCallingConvention.ccSysCall</target>
        </trans-unit>
        <trans-unit id="a62ab5161a16c78a9dd93ae6f6ace8c23cdf3fae" translate="yes" xml:space="preserve">
          <source>TCallingConvention.ccThisCall</source>
          <target state="translated">TCallingConvention.ccThisCall</target>
        </trans-unit>
        <trans-unit id="79f65e355c36e1d45162d74e67e9a7d1ed73cacc" translate="yes" xml:space="preserve">
          <source>TCallingConvention:</source>
          <target state="translated">TCallingConvention:</target>
        </trans-unit>
        <trans-unit id="8dac5a2d52d7b2c1bee6a4c8ccbfbc0b3c0b15a8" translate="yes" xml:space="preserve">
          <source>TCandidate:</source>
          <target state="translated">TCandidate:</target>
        </trans-unit>
        <trans-unit id="97fb4678ecc2f651fd369000398f3a9d5868a6ba" translate="yes" xml:space="preserve">
          <source>TCandidateState.csEmpty</source>
          <target state="translated">TCandidateState.csEmpty</target>
        </trans-unit>
        <trans-unit id="ed2069ddd5b155784cb581eda975d0c3c958f319" translate="yes" xml:space="preserve">
          <source>TCandidateState.csMatch</source>
          <target state="translated">TCandidateState.csMatch</target>
        </trans-unit>
        <trans-unit id="712377bfa336be52b5f77a1693d585f4d5e1ed1c" translate="yes" xml:space="preserve">
          <source>TCandidateState.csNoMatch</source>
          <target state="translated">TCandidateState.csNoMatch</target>
        </trans-unit>
        <trans-unit id="e328671f4b570e298ac11ef4e159264c81c0c605" translate="yes" xml:space="preserve">
          <source>TCandidateState:</source>
          <target state="translated">TCandidateState:</target>
        </trans-unit>
        <trans-unit id="9d9b72eb6a8aaf038ca0166afe10cc3b64daa2c4" translate="yes" xml:space="preserve">
          <source>TCheckPointResult.cpExact</source>
          <target state="translated">TCheckPointResult.cpExact</target>
        </trans-unit>
        <trans-unit id="c9ff01ddfc7ffa032aa8aadd535aae6b36c8471f" translate="yes" xml:space="preserve">
          <source>TCheckPointResult.cpFuzzy</source>
          <target state="translated">TCheckPointResult.cpFuzzy</target>
        </trans-unit>
        <trans-unit id="e8f9753ac576618b56a52c005cf61d7b25941988" translate="yes" xml:space="preserve">
          <source>TCheckPointResult.cpNone</source>
          <target state="translated">TCheckPointResult.cpNone</target>
        </trans-unit>
        <trans-unit id="92f544f8ec24d87928fc488ec91b74c11da001ba" translate="yes" xml:space="preserve">
          <source>TCheckPointResult:</source>
          <target state="translated">TCheckPointResult:</target>
        </trans-unit>
        <trans-unit id="f5629cc9aa98e05cf7cbe09784c8cf9602dba61a" translate="yes" xml:space="preserve">
          <source>TCmdLinePass.passCmd1</source>
          <target state="translated">TCmdLinePass.passCmd1</target>
        </trans-unit>
        <trans-unit id="a10f0236d2403d8acbb22dd1cf8248e2ffd4a9f7" translate="yes" xml:space="preserve">
          <source>TCmdLinePass.passCmd2</source>
          <target state="translated">TCmdLinePass.passCmd2</target>
        </trans-unit>
        <trans-unit id="ea549e2498d2286691faca881eea35f227d431fb" translate="yes" xml:space="preserve">
          <source>TCmdLinePass.passPP</source>
          <target state="translated">TCmdLinePass.passPP</target>
        </trans-unit>
        <trans-unit id="8a4829c80b302af7709f94d6462f8f8b37fee280" translate="yes" xml:space="preserve">
          <source>TCmdLinePass:</source>
          <target state="translated">TCmdLinePass:</target>
        </trans-unit>
        <trans-unit id="bd552b16581c4431dac01a1442f9e501eb51f1a6" translate="yes" xml:space="preserve">
          <source>TCommands.cmdCheck</source>
          <target state="translated">TCommands.cmdCheck</target>
        </trans-unit>
        <trans-unit id="a395a5e8a24534a6e5fb1cc042d39b3011610577" translate="yes" xml:space="preserve">
          <source>TCommands.cmdCompileToBackend</source>
          <target state="translated">TCommands.cmdCompileToBackend</target>
        </trans-unit>
        <trans-unit id="a42535fd616ccf15d470c726bbb125ae02dc66d3" translate="yes" xml:space="preserve">
          <source>TCommands.cmdCompileToC</source>
          <target state="translated">TCommands.cmdCompileToC</target>
        </trans-unit>
        <trans-unit id="e4255dec6a145c52d20102d6429643025fe5a4e4" translate="yes" xml:space="preserve">
          <source>TCommands.cmdCompileToCpp</source>
          <target state="translated">TCommands.cmdCompileToCpp</target>
        </trans-unit>
        <trans-unit id="f5c7892c69b9bf5a48ba02bd7cdc3f175d618b27" translate="yes" xml:space="preserve">
          <source>TCommands.cmdCompileToJS</source>
          <target state="translated">TCommands.cmdCompileToJS</target>
        </trans-unit>
        <trans-unit id="264a3e225e140fceed226949aca3fcebe8f3b10a" translate="yes" xml:space="preserve">
          <source>TCommands.cmdCompileToLLVM</source>
          <target state="translated">TCommands.cmdCompileToLLVM</target>
        </trans-unit>
        <trans-unit id="473f137f7fbae2ef7faf0ed3c684945db4546b12" translate="yes" xml:space="preserve">
          <source>TCommands.cmdCompileToOC</source>
          <target state="translated">TCommands.cmdCompileToOC</target>
        </trans-unit>
        <trans-unit id="36ccfbbb1a92afafb4d6b97f7516c67353bb6f9e" translate="yes" xml:space="preserve">
          <source>TCommands.cmdDef</source>
          <target state="translated">TCommands.cmdDef</target>
        </trans-unit>
        <trans-unit id="e5fb4c45978279f79593949e467baffc74e8f10b" translate="yes" xml:space="preserve">
          <source>TCommands.cmdDoc</source>
          <target state="translated">TCommands.cmdDoc</target>
        </trans-unit>
        <trans-unit id="0e24208bf1517026812982a7ed02d35ccb9042db" translate="yes" xml:space="preserve">
          <source>TCommands.cmdDump</source>
          <target state="translated">TCommands.cmdDump</target>
        </trans-unit>
        <trans-unit id="98a577ac7f09d51d4a7e5f1b686351d6540a9a68" translate="yes" xml:space="preserve">
          <source>TCommands.cmdGenDepend</source>
          <target state="translated">TCommands.cmdGenDepend</target>
        </trans-unit>
        <trans-unit id="64fc2ba39e0b374636e8c66bb63fc4ee41aad948" translate="yes" xml:space="preserve">
          <source>TCommands.cmdIdeTools</source>
          <target state="translated">TCommands.cmdIdeTools</target>
        </trans-unit>
        <trans-unit id="7c20e8136d43cc36e1c6c8667d3e2733768e32c1" translate="yes" xml:space="preserve">
          <source>TCommands.cmdInteractive</source>
          <target state="translated">TCommands.cmdInteractive</target>
        </trans-unit>
        <trans-unit id="33b0a6f81ea6a04f1379f989df3c50c2d332c288" translate="yes" xml:space="preserve">
          <source>TCommands.cmdInterpret</source>
          <target state="translated">TCommands.cmdInterpret</target>
        </trans-unit>
        <trans-unit id="e6dcc501d23c5c2739711ef53e0009c8b4a6dec4" translate="yes" xml:space="preserve">
          <source>TCommands.cmdJsonScript</source>
          <target state="translated">TCommands.cmdJsonScript</target>
        </trans-unit>
        <trans-unit id="97198827bc943c43baa1c53054e8533a24de0464" translate="yes" xml:space="preserve">
          <source>TCommands.cmdNone</source>
          <target state="translated">TCommands.cmdNone</target>
        </trans-unit>
        <trans-unit id="1ab9fc80828d7250943d946d7d2319b1acd08ae4" translate="yes" xml:space="preserve">
          <source>TCommands.cmdParse</source>
          <target state="translated">TCommands.cmdParse</target>
        </trans-unit>
        <trans-unit id="c32395c49bda5906cd592d029d30a6bb3c5026b3" translate="yes" xml:space="preserve">
          <source>TCommands.cmdPretty</source>
          <target state="translated">TCommands.cmdPretty</target>
        </trans-unit>
        <trans-unit id="eb556be1b4f62c1a3a93c0e8ff13948a799cc962" translate="yes" xml:space="preserve">
          <source>TCommands.cmdRst2html</source>
          <target state="translated">TCommands.cmdRst2html</target>
        </trans-unit>
        <trans-unit id="5da4650defce860c667769dee7193e8498a2a0ad" translate="yes" xml:space="preserve">
          <source>TCommands.cmdRst2tex</source>
          <target state="translated">TCommands.cmdRst2tex</target>
        </trans-unit>
        <trans-unit id="64ddd037417593a629e91e967059afd65fb27698" translate="yes" xml:space="preserve">
          <source>TCommands.cmdRun</source>
          <target state="translated">TCommands.cmdRun</target>
        </trans-unit>
        <trans-unit id="969d90396359c41c75a8f29baa0ae2d9212fe45b" translate="yes" xml:space="preserve">
          <source>TCommands.cmdScan</source>
          <target state="translated">TCommands.cmdScan</target>
        </trans-unit>
        <trans-unit id="1847e599d6282603d592509e56c2d8f1f9e0538a" translate="yes" xml:space="preserve">
          <source>TCommands:</source>
          <target state="translated">TCommands:</target>
        </trans-unit>
        <trans-unit id="5eaa51e56a59414ecdd6a75976b39488603cc3d0" translate="yes" xml:space="preserve">
          <source>TContext:</source>
          <target state="translated">TContext:</target>
        </trans-unit>
        <trans-unit id="d7cc0442a529fc7529e82c2bf7d6e7d5bb65d4fc" translate="yes" xml:space="preserve">
          <source>TCtx:</source>
          <target state="translated">TCtx:</target>
        </trans-unit>
        <trans-unit id="195e4da264a2f397b3232c2c5560c51acb9f65bb" translate="yes" xml:space="preserve">
          <source>TDest:</source>
          <target state="translated">TDest:</target>
        </trans-unit>
        <trans-unit id="cbfd62a47169eee74e94411d2bfbf7f959fb3308" translate="yes" xml:space="preserve">
          <source>TDistinctCompare.dcEq</source>
          <target state="translated">TDistinctCompare.dcEq</target>
        </trans-unit>
        <trans-unit id="dc6f8fb50381306bd8381572b67cf18849f3c631" translate="yes" xml:space="preserve">
          <source>TDistinctCompare.dcEqIgnoreDistinct</source>
          <target state="translated">TDistinctCompare.dcEqIgnoreDistinct</target>
        </trans-unit>
        <trans-unit id="b2d87488c3e79ef691a6618bfec1f3f2bbcc6d38" translate="yes" xml:space="preserve">
          <source>TDistinctCompare.dcEqOrDistinctOf</source>
          <target state="translated">TDistinctCompare.dcEqOrDistinctOf</target>
        </trans-unit>
        <trans-unit id="06f749db066d634fe69c8e5f2394c07f2e6d4afe" translate="yes" xml:space="preserve">
          <source>TDistinctCompare:</source>
          <target state="translated">TDistinctCompare:</target>
        </trans-unit>
        <trans-unit id="c1a045530d66aaefcfd32f62d5a28dc23f114d44" translate="yes" xml:space="preserve">
          <source>TEndian.bigEndian</source>
          <target state="translated">TEndian.bigEndian</target>
        </trans-unit>
        <trans-unit id="7816be3cfbba9428956423e3c25473222c346f55" translate="yes" xml:space="preserve">
          <source>TEndian.littleEndian</source>
          <target state="translated">TEndian.littleEndian</target>
        </trans-unit>
        <trans-unit id="e4a26b6d928486e704027107da77373221c66978" translate="yes" xml:space="preserve">
          <source>TEndian:</source>
          <target state="translated">TEndian:</target>
        </trans-unit>
        <trans-unit id="0b094726f79d8beae1c8fbca060493d329d8d040" translate="yes" xml:space="preserve">
          <source>TErrorHandling.doAbort</source>
          <target state="translated">TErrorHandling.doAbort</target>
        </trans-unit>
        <trans-unit id="7a36a9eed4b2285200296bab2967d7e131cb9b46" translate="yes" xml:space="preserve">
          <source>TErrorHandling.doNothing</source>
          <target state="translated">TErrorHandling.doNothing</target>
        </trans-unit>
        <trans-unit id="4996a789e0f45661f1a264a744d85c45c6cd8e22" translate="yes" xml:space="preserve">
          <source>TErrorHandling.doRaise</source>
          <target state="translated">TErrorHandling.doRaise</target>
        </trans-unit>
        <trans-unit id="577b412fb4a1d1dc9bdbce201002f8ca39cfdce4" translate="yes" xml:space="preserve">
          <source>TErrorHandling:</source>
          <target state="translated">TErrorHandling:</target>
        </trans-unit>
        <trans-unit id="a643397e93d4c788bbb7fffbbdafaab8c1823c9f" translate="yes" xml:space="preserve">
          <source>TErrorOutput.eStdErr</source>
          <target state="translated">TErrorOutput.eStdErr</target>
        </trans-unit>
        <trans-unit id="093b36feaaba354bfd608fd54bf4d474f5dbd34d" translate="yes" xml:space="preserve">
          <source>TErrorOutput.eStdOut</source>
          <target state="translated">TErrorOutput.eStdOut</target>
        </trans-unit>
        <trans-unit id="d660f6bee37ac21160ef0e80576d012a35cf5deb" translate="yes" xml:space="preserve">
          <source>TErrorOutput:</source>
          <target state="translated">TErrorOutput:</target>
        </trans-unit>
        <trans-unit id="144cd1c9e7eb37f563ca7207df08e09644991c9d" translate="yes" xml:space="preserve">
          <source>TErrorOutputs:</source>
          <target state="translated">TErrorOutputs:</target>
        </trans-unit>
        <trans-unit id="b65c98c24217c5167d726e2096fd55e8cebf169c" translate="yes" xml:space="preserve">
          <source>TEvalMode.emConst</source>
          <target state="translated">TEvalMode.emConst</target>
        </trans-unit>
        <trans-unit id="b24dbf919f3eea13cf7725dc419743cf269d1f57" translate="yes" xml:space="preserve">
          <source>TEvalMode.emOptimize</source>
          <target state="translated">TEvalMode.emOptimize</target>
        </trans-unit>
        <trans-unit id="21af9db47a58c1ec57a6e3778f62f894d7fc2823" translate="yes" xml:space="preserve">
          <source>TEvalMode.emRepl</source>
          <target state="translated">TEvalMode.emRepl</target>
        </trans-unit>
        <trans-unit id="861f3a4fae63e09c03266175c270b82e76bb5ce9" translate="yes" xml:space="preserve">
          <source>TEvalMode.emStaticExpr</source>
          <target state="translated">TEvalMode.emStaticExpr</target>
        </trans-unit>
        <trans-unit id="03d761930c4584e62abd8c38506eb2dcc07f3a33" translate="yes" xml:space="preserve">
          <source>TEvalMode.emStaticStmt</source>
          <target state="translated">TEvalMode.emStaticStmt</target>
        </trans-unit>
        <trans-unit id="583eef705c53b9e7456bf497c48d60983991767d" translate="yes" xml:space="preserve">
          <source>TEvalMode:</source>
          <target state="translated">TEvalMode:</target>
        </trans-unit>
        <trans-unit id="d66ed6fa310f43b8fafdabce7e60cdfa88a1c316" translate="yes" xml:space="preserve">
          <source>TExprFlag.efAllowDestructor</source>
          <target state="translated">TExprFlag.efAllowDestructor</target>
        </trans-unit>
        <trans-unit id="e3a5d2cb441f88e17354422ef2eff7f671aeba01" translate="yes" xml:space="preserve">
          <source>TExprFlag.efAllowStmt</source>
          <target state="translated">TExprFlag.efAllowStmt</target>
        </trans-unit>
        <trans-unit id="5665d4367851ced78e5beae791bcfba0f8cb3f5f" translate="yes" xml:space="preserve">
          <source>TExprFlag.efDetermineType</source>
          <target state="translated">TExprFlag.efDetermineType</target>
        </trans-unit>
        <trans-unit id="86f5f321e74c29e48785af7f38be9bdc042ce7da" translate="yes" xml:space="preserve">
          <source>TExprFlag.efExplain</source>
          <target state="translated">TExprFlag.efExplain</target>
        </trans-unit>
        <trans-unit id="222246cff5e81e9ce4c21c530cbdb959aa4e389e" translate="yes" xml:space="preserve">
          <source>TExprFlag.efFromHlo</source>
          <target state="translated">TExprFlag.efFromHlo</target>
        </trans-unit>
        <trans-unit id="086e7f1666d384ccdb7b3a33a0a4828d12b6a5d9" translate="yes" xml:space="preserve">
          <source>TExprFlag.efInCall</source>
          <target state="translated">TExprFlag.efInCall</target>
        </trans-unit>
        <trans-unit id="425fbecfa7c32bbc4a512012e35d489d9ad2195e" translate="yes" xml:space="preserve">
          <source>TExprFlag.efInTypeof</source>
          <target state="translated">TExprFlag.efInTypeof</target>
        </trans-unit>
        <trans-unit id="453fe11cc07edfd2058704b5b85bc2905e71e632" translate="yes" xml:space="preserve">
          <source>TExprFlag.efLValue</source>
          <target state="translated">TExprFlag.efLValue</target>
        </trans-unit>
        <trans-unit id="b9bf3e20779b347d10a74c32957efd9812cb1088" translate="yes" xml:space="preserve">
          <source>TExprFlag.efNeedStatic</source>
          <target state="translated">TExprFlag.efNeedStatic</target>
        </trans-unit>
        <trans-unit id="f0be1304b99d6476f3d2d386bb3a8a3e53ce7cbb" translate="yes" xml:space="preserve">
          <source>TExprFlag.efNoEvaluateGeneric</source>
          <target state="translated">TExprFlag.efNoEvaluateGeneric</target>
        </trans-unit>
        <trans-unit id="1d0d81db382de51362b7d40f8f5bd95437eb72bb" translate="yes" xml:space="preserve">
          <source>TExprFlag.efNoSem2Check</source>
          <target state="translated">TExprFlag.efNoSem2Check</target>
        </trans-unit>
        <trans-unit id="0966b550662aae2069cd3f9e8ffa3f4805b1d706" translate="yes" xml:space="preserve">
          <source>TExprFlag.efNoSemCheck</source>
          <target state="translated">TExprFlag.efNoSemCheck</target>
        </trans-unit>
        <trans-unit id="b84bd448043bbfa1ff3238af33100eee0f074229" translate="yes" xml:space="preserve">
          <source>TExprFlag.efNoUndeclared</source>
          <target state="translated">TExprFlag.efNoUndeclared</target>
        </trans-unit>
        <trans-unit id="5cdebc4108673a8a25020c7d96a1427848341efe" translate="yes" xml:space="preserve">
          <source>TExprFlag.efOperand</source>
          <target state="translated">TExprFlag.efOperand</target>
        </trans-unit>
        <trans-unit id="2fe3feec64c6b49ce9d3e0f14911d857e0890365" translate="yes" xml:space="preserve">
          <source>TExprFlag.efPreferNilResult</source>
          <target state="translated">TExprFlag.efPreferNilResult</target>
        </trans-unit>
        <trans-unit id="9212e957dc794f1b89b80e88aa3be6d78a83a6d1" translate="yes" xml:space="preserve">
          <source>TExprFlag.efPreferStatic</source>
          <target state="translated">TExprFlag.efPreferStatic</target>
        </trans-unit>
        <trans-unit id="83898066f2c6c791e1e1b8b1a5eded1b55c00a29" translate="yes" xml:space="preserve">
          <source>TExprFlag.efWantIterator</source>
          <target state="translated">TExprFlag.efWantIterator</target>
        </trans-unit>
        <trans-unit id="6757db6faaed692acd3d7edb340f2f80c4a5ca05" translate="yes" xml:space="preserve">
          <source>TExprFlag.efWantStmt</source>
          <target state="translated">TExprFlag.efWantStmt</target>
        </trans-unit>
        <trans-unit id="153bb1f71d8d248e5310f1d20667ad5adfcdc60e" translate="yes" xml:space="preserve">
          <source>TExprFlag.efWantValue</source>
          <target state="translated">TExprFlag.efWantValue</target>
        </trans-unit>
        <trans-unit id="2a12d56dc82fc4779097e8c583badca1e605700d" translate="yes" xml:space="preserve">
          <source>TExprFlag:</source>
          <target state="translated">TExprFlag:</target>
        </trans-unit>
        <trans-unit id="a1afbee9db86a071d50094fdde2511d353548200" translate="yes" xml:space="preserve">
          <source>TExprFlags:</source>
          <target state="translated">TExprFlags:</target>
        </trans-unit>
        <trans-unit id="df846925fa4b164913492b0f48f64e7a3e56f1b3" translate="yes" xml:space="preserve">
          <source>TFileInfo:</source>
          <target state="translated">TFileInfo:</target>
        </trans-unit>
        <trans-unit id="cb1209377dd519801a2b16f6718b5e706a941579" translate="yes" xml:space="preserve">
          <source>TFullReg:</source>
          <target state="translated">TFullReg:</target>
        </trans-unit>
        <trans-unit id="e57069641587564f47566909c6618204c8c3c79b" translate="yes" xml:space="preserve">
          <source>TGCMode.gcArc</source>
          <target state="translated">TGCMode.gcArc</target>
        </trans-unit>
        <trans-unit id="69cc8b318bc878de4446f78ec9276b4c5e629cac" translate="yes" xml:space="preserve">
          <source>TGCMode.gcBoehm</source>
          <target state="translated">TGCMode.gcBoehm</target>
        </trans-unit>
        <trans-unit id="f58deaa0aab78e1d794050254f0eb3d421c2a40c" translate="yes" xml:space="preserve">
          <source>TGCMode.gcGo</source>
          <target state="translated">TGCMode.gcGo</target>
        </trans-unit>
        <trans-unit id="7b562f673e552b43eed5836343c4bd72b38c2e90" translate="yes" xml:space="preserve">
          <source>TGCMode.gcHooks</source>
          <target state="translated">TGCMode.gcHooks</target>
        </trans-unit>
        <trans-unit id="adbf10f777ba634e7ef939b890bb4d2c43777635" translate="yes" xml:space="preserve">
          <source>TGCMode.gcMarkAndSweep</source>
          <target state="translated">TGCMode.gcMarkAndSweep</target>
        </trans-unit>
        <trans-unit id="159c15add3cfccc23e4d699c1e5d77ed1aa77747" translate="yes" xml:space="preserve">
          <source>TGCMode.gcNone</source>
          <target state="translated">TGCMode.gcNone</target>
        </trans-unit>
        <trans-unit id="8c8eb7c0a67657ef8f1191c0fddb1ec739e141f5" translate="yes" xml:space="preserve">
          <source>TGCMode.gcOrc</source>
          <target state="translated">TGCMode.gcOrc</target>
        </trans-unit>
        <trans-unit id="4b7d00076df8be4472540bb1f598225046d1d891" translate="yes" xml:space="preserve">
          <source>TGCMode.gcRefc</source>
          <target state="translated">TGCMode.gcRefc</target>
        </trans-unit>
        <trans-unit id="0fed358f886e9352996a151d7a430db04fe1ebb3" translate="yes" xml:space="preserve">
          <source>TGCMode.gcRegions</source>
          <target state="translated">TGCMode.gcRegions</target>
        </trans-unit>
        <trans-unit id="5faab9c2b84f3d14acfc1ad6e6379dc1e8bf33f1" translate="yes" xml:space="preserve">
          <source>TGCMode.gcUnselected</source>
          <target state="translated">TGCMode.gcUnselected</target>
        </trans-unit>
        <trans-unit id="e2434f99b2cee53f68c9fa0759851838eef9a547" translate="yes" xml:space="preserve">
          <source>TGCMode.gcV2</source>
          <target state="translated">TGCMode.gcV2</target>
        </trans-unit>
        <trans-unit id="929433d1f08b29b637bc275f792d90a259a4d170" translate="yes" xml:space="preserve">
          <source>TGCMode:</source>
          <target state="translated">TGCMode:</target>
        </trans-unit>
        <trans-unit id="8b380402239af148704f7f1580d328c8c16fe860" translate="yes" xml:space="preserve">
          <source>TGlobalOption.gloptNone</source>
          <target state="translated">TGlobalOption.gloptNone</target>
        </trans-unit>
        <trans-unit id="599a4eb790a6bc2b6527f8e9f34c02eee2989576" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optBenchmarkVM</source>
          <target state="translated">TGlobalOption.optBenchmarkVM</target>
        </trans-unit>
        <trans-unit id="dd785adff94a8298951dbed8b2f8ceb1fd2820c4" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optCDebug</source>
          <target state="translated">TGlobalOption.optCDebug</target>
        </trans-unit>
        <trans-unit id="a8a78715e65d40f7789c47a8d2f296a45b0e3fef" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optCompileOnly</source>
          <target state="translated">TGlobalOption.optCompileOnly</target>
        </trans-unit>
        <trans-unit id="cce5ef4f00f5f21165da4894ac37b1d8350fe210" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optDocInternal</source>
          <target state="translated">TGlobalOption.optDocInternal</target>
        </trans-unit>
        <trans-unit id="50b87ad48e7f271689c0208f0ff29f3be1494a8f" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optDynlibOverrideAll</source>
          <target state="translated">TGlobalOption.optDynlibOverrideAll</target>
        </trans-unit>
        <trans-unit id="51483315c3c67ecc5583b2661ada8da0da4a8098" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optEmbedOrigSrc</source>
          <target state="translated">TGlobalOption.optEmbedOrigSrc</target>
        </trans-unit>
        <trans-unit id="edb5a16e329895c23c4dbe574b47477021301a9e" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optEnableDeepCopy</source>
          <target state="translated">TGlobalOption.optEnableDeepCopy</target>
        </trans-unit>
        <trans-unit id="7db35cc26f5df0cadd57f60ba32026953e11e46b" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optExcessiveStackTrace</source>
          <target state="translated">TGlobalOption.optExcessiveStackTrace</target>
        </trans-unit>
        <trans-unit id="6b204c33981644b81cbeaea73b66ef63d7a9d3af" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optForceFullMake</source>
          <target state="translated">TGlobalOption.optForceFullMake</target>
        </trans-unit>
        <trans-unit id="3fac47af551a1c8d3d8145461ff7a44c75b1377e" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optGenDynLib</source>
          <target state="translated">TGlobalOption.optGenDynLib</target>
        </trans-unit>
        <trans-unit id="4914384b62763d69e97c4cb5602c7ed3024a0797" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optGenGuiApp</source>
          <target state="translated">TGlobalOption.optGenGuiApp</target>
        </trans-unit>
        <trans-unit id="fd31c83899667891265f470ff7f8373ddf98aec7" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optGenIndex</source>
          <target state="translated">TGlobalOption.optGenIndex</target>
        </trans-unit>
        <trans-unit id="5c09dacd24eedc0c9fe6b4384fbeb7f2e72623a9" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optGenMapping</source>
          <target state="translated">TGlobalOption.optGenMapping</target>
        </trans-unit>
        <trans-unit id="8b0586ecab9c8f58cd3482faf3fcb3e47e3d1a07" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optGenScript</source>
          <target state="translated">TGlobalOption.optGenScript</target>
        </trans-unit>
        <trans-unit id="cfb4eafac1a4364c10c6245d2ae305754a06541e" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optGenStaticLib</source>
          <target state="translated">TGlobalOption.optGenStaticLib</target>
        </trans-unit>
        <trans-unit id="734e9ecd82fb5bfe1306f8fdcdf96463a811becf" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optHotCodeReloading</source>
          <target state="translated">TGlobalOption.optHotCodeReloading</target>
        </trans-unit>
        <trans-unit id="f08c891793564e7b000a0df226ce329e06b439bf" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optIdeDebug</source>
          <target state="translated">TGlobalOption.optIdeDebug</target>
        </trans-unit>
        <trans-unit id="b0e705ddfbd3809b9138859710f00eb5faa1bd39" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optIdeTerse</source>
          <target state="translated">TGlobalOption.optIdeTerse</target>
        </trans-unit>
        <trans-unit id="c568f1294d6c6c313b76ce5e6712aa23b7821563" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optListCmd</source>
          <target state="translated">TGlobalOption.optListCmd</target>
        </trans-unit>
        <trans-unit id="870dbd23be172fc736a1b93f66d9bd5f14be3292" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optListFullPaths</source>
          <target state="translated">TGlobalOption.optListFullPaths</target>
        </trans-unit>
        <trans-unit id="700bf237df30a4180839b8effe69731fd1f3053f" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optMixedMode</source>
          <target state="translated">TGlobalOption.optMixedMode</target>
        </trans-unit>
        <trans-unit id="533096649c20bad8dac8b46307dbfc231d92a5cd" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optMultiMethods</source>
          <target state="translated">TGlobalOption.optMultiMethods</target>
        </trans-unit>
        <trans-unit id="abfd36aa7d074d3c0878e3396e8181328f54f6d7" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optNimV12Emulation</source>
          <target state="translated">TGlobalOption.optNimV12Emulation</target>
        </trans-unit>
        <trans-unit id="1a1e0c8aa4344d2d71ebdcc19bdeb524693e2581" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optNimV1Emulation</source>
          <target state="translated">TGlobalOption.optNimV1Emulation</target>
        </trans-unit>
        <trans-unit id="b520f32bd3a5378c1873cd582983c69ce9faca49" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optNoLinking</source>
          <target state="translated">TGlobalOption.optNoLinking</target>
        </trans-unit>
        <trans-unit id="28e4f68ecda43d996169c845da2d1084a14671b2" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optNoMain</source>
          <target state="translated">TGlobalOption.optNoMain</target>
        </trans-unit>
        <trans-unit id="0500b998e632afb680844f88bee20a52539065c5" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optNoNimblePath</source>
          <target state="translated">TGlobalOption.optNoNimblePath</target>
        </trans-unit>
        <trans-unit id="6b422d6167f4781a144792148778c8b688c34384" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optOwnedRefs</source>
          <target state="translated">TGlobalOption.optOwnedRefs</target>
        </trans-unit>
        <trans-unit id="dea794c534dd2c88656d1d95410bc4ec014b30e2" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optPanics</source>
          <target state="translated">TGlobalOption.optPanics</target>
        </trans-unit>
        <trans-unit id="7dde37aad48dbf6883c3f55a6b333a003be64ebb" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optProduceAsm</source>
          <target state="translated">TGlobalOption.optProduceAsm</target>
        </trans-unit>
        <trans-unit id="d1b84244b58e7266a717730c761012d2d81834e6" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optProfileVM</source>
          <target state="translated">TGlobalOption.optProfileVM</target>
        </trans-unit>
        <trans-unit id="31d487a86481da003262b59fc21a43060895a0b2" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optRun</source>
          <target state="translated">TGlobalOption.optRun</target>
        </trans-unit>
        <trans-unit id="1a04158d8ca8dd963ff9324aeb5d2c079693503b" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optSeqDestructors</source>
          <target state="translated">TGlobalOption.optSeqDestructors</target>
        </trans-unit>
        <trans-unit id="d28fb1e507f6114603cab3759a3da7898cafa1cb" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optShowAllMismatches</source>
          <target state="translated">TGlobalOption.optShowAllMismatches</target>
        </trans-unit>
        <trans-unit id="834e8d058e3823e080d472cbe672b1588ba604de" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optSkipParentConfigFiles</source>
          <target state="translated">TGlobalOption.optSkipParentConfigFiles</target>
        </trans-unit>
        <trans-unit id="90046a95c8e42e2fd7396fbd2e802b8414fcb8ae" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optSkipProjConfigFile</source>
          <target state="translated">TGlobalOption.optSkipProjConfigFile</target>
        </trans-unit>
        <trans-unit id="8855308d87d54959d6d22b13a28475900bccf9f7" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optSkipSystemConfigFile</source>
          <target state="translated">TGlobalOption.optSkipSystemConfigFile</target>
        </trans-unit>
        <trans-unit id="e51c5d48f6047044b03e1b173c8866c3f0f3c3bd" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optSkipUserConfigFile</source>
          <target state="translated">TGlobalOption.optSkipUserConfigFile</target>
        </trans-unit>
        <trans-unit id="d30fcaf754c861dc4c945b32c606eab8847da1da" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optSourcemap</source>
          <target state="translated">TGlobalOption.optSourcemap</target>
        </trans-unit>
        <trans-unit id="26ddef943ba85ef623d3b98abe56a5e1f76980ce" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optStdout</source>
          <target state="translated">TGlobalOption.optStdout</target>
        </trans-unit>
        <trans-unit id="7c5160fd254dae2f4e1f78f7fdc94d85a04beaa9" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optStyleError</source>
          <target state="translated">TGlobalOption.optStyleError</target>
        </trans-unit>
        <trans-unit id="59b7da2e20bd0184759d180c6ecf204be50472d5" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optStyleHint</source>
          <target state="translated">TGlobalOption.optStyleHint</target>
        </trans-unit>
        <trans-unit id="697a2b4fc660d66a4741c9c11e39f59600f618d1" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optTaintMode</source>
          <target state="translated">TGlobalOption.optTaintMode</target>
        </trans-unit>
        <trans-unit id="7eea5ed4b2b8b77743951e15d209e7df55e00577" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optThreadAnalysis</source>
          <target state="translated">TGlobalOption.optThreadAnalysis</target>
        </trans-unit>
        <trans-unit id="750b5d11e89c1d5e8dad4ca00d7190f20f6d6c39" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optThreads</source>
          <target state="translated">TGlobalOption.optThreads</target>
        </trans-unit>
        <trans-unit id="cbd7f8297dc93526dfd7575396145f29a944c042" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optTinyRtti</source>
          <target state="translated">TGlobalOption.optTinyRtti</target>
        </trans-unit>
        <trans-unit id="fd055223a3119f5b0739afb633873664106ba3ca" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optTlsEmulation</source>
          <target state="translated">TGlobalOption.optTlsEmulation</target>
        </trans-unit>
        <trans-unit id="db414d4354ef6c554b69397ee1eca3c2fb822947" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optUseColors</source>
          <target state="translated">TGlobalOption.optUseColors</target>
        </trans-unit>
        <trans-unit id="0434f2b2982a8381d3de4df0e23461de41c214d5" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optUseNimcache</source>
          <target state="translated">TGlobalOption.optUseNimcache</target>
        </trans-unit>
        <trans-unit id="618ae316ced41fa6d64c8d636507b9af7ce679fb" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optWasNimscript</source>
          <target state="translated">TGlobalOption.optWasNimscript</target>
        </trans-unit>
        <trans-unit id="d9b989da80224dd48c75f93483bbec2b7bb124ee" translate="yes" xml:space="preserve">
          <source>TGlobalOption.optWholeProject</source>
          <target state="translated">TGlobalOption.optWholeProject</target>
        </trans-unit>
        <trans-unit id="379165687e02058c89fe85b841f664d5eac7ee79" translate="yes" xml:space="preserve">
          <source>TGlobalOption:</source>
          <target state="translated">TGlobalOption:</target>
        </trans-unit>
        <trans-unit id="5dd8310491a04f0245c58a6319a940807e1b2e3b" translate="yes" xml:space="preserve">
          <source>TGlobalOptions:</source>
          <target state="translated">TGlobalOptions:</target>
        </trans-unit>
        <trans-unit id="4434fd593bde3375839bc932883b120b979c7044" translate="yes" xml:space="preserve">
          <source>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</source>
          <target state="translated">이 소프트웨어는 저작권 소유자 및 배포자에 의해 &quot;있는 그대로&quot;제공되며, 명시 적 또는 묵시적 보증을 포함하되 이에 국한되지는 않지만 상품성 및 특정 목적에의 적합성에 대한 묵시적 보증은 이에 제한되지 않습니다. 어떠한 경우에도 저작권 소유자 나 제공자는 직접적, 간접적, 우발적, 특별, 간접적 또는 결과적 손해에 대해 책임을지지 않습니다 (대체 상품 또는 서비스의 제조, 데이터 손실, 사용 손실, 데이터 손실). 또는 비즈니스 중단) 계약, 엄격 책임 또는 불법 행위 (어떠한 태만 또는 기타 포함)에 관계없이 본 소프트웨어를 사용하지 않더라도 본 소프트웨어를 사용하지 않더라도 발생하는 책임 이론에 따라 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6e5de60640f034402366be7f32d134149aea4f54" translate="yes" xml:space="preserve">
          <source>TIIPair:</source>
          <target state="translated">TIIPair:</target>
        </trans-unit>
        <trans-unit id="f231c103b85e23a1e45843db2c6ad208ef2990ca" translate="yes" xml:space="preserve">
          <source>TIIPairSeq:</source>
          <target state="translated">TIIPairSeq:</target>
        </trans-unit>
        <trans-unit id="86da597e949d2e50fefecc498479a37be5fc1cd0" translate="yes" xml:space="preserve">
          <source>TIITable:</source>
          <target state="translated">TIITable:</target>
        </trans-unit>
        <trans-unit id="6307c6b93fde2cd6a2749a48eb27d311fb788518" translate="yes" xml:space="preserve">
          <source>TIdNodePair:</source>
          <target state="translated">TIdNodePair:</target>
        </trans-unit>
        <trans-unit id="260e7ff0c61257ec914d0ab3be79dd7dca24d6a7" translate="yes" xml:space="preserve">
          <source>TIdNodePairSeq:</source>
          <target state="translated">TIdNodePairSeq:</target>
        </trans-unit>
        <trans-unit id="c1668376966c27e26f66363660e1d3c7bf28197a" translate="yes" xml:space="preserve">
          <source>TIdNodeTable:</source>
          <target state="translated">TIdNodeTable:</target>
        </trans-unit>
        <trans-unit id="3e989b1d371527ce777e09ef2cfc4b70b23214f0" translate="yes" xml:space="preserve">
          <source>TIdObj:</source>
          <target state="translated">TIdObj:</target>
        </trans-unit>
        <trans-unit id="b969e5ce2ca233943030f8e71afd97b8c7c4094c" translate="yes" xml:space="preserve">
          <source>TIdPair:</source>
          <target state="translated">TIdPair:</target>
        </trans-unit>
        <trans-unit id="bb5995d5881cf4b3df01d503fe90afd162ed9486" translate="yes" xml:space="preserve">
          <source>TIdPairSeq:</source>
          <target state="translated">TIdPairSeq:</target>
        </trans-unit>
        <trans-unit id="4a6ae3010b08395fee0fe7a17f3e51b3322200fb" translate="yes" xml:space="preserve">
          <source>TIdTable:</source>
          <target state="translated">TIdTable:</target>
        </trans-unit>
        <trans-unit id="5d7f25dffd32b7c07095238b04ad043dd8605518" translate="yes" xml:space="preserve">
          <source>TIdent:</source>
          <target state="translated">TIdent:</target>
        </trans-unit>
        <trans-unit id="d626ce0a5745c5eef87689caa1d0fac79d5c4a25" translate="yes" xml:space="preserve">
          <source>TIdentIter:</source>
          <target state="translated">TIdentIter:</target>
        </trans-unit>
        <trans-unit id="4b5022c75734b4560bd802765da8fb41f4bc6746" translate="yes" xml:space="preserve">
          <source>TImplication.impNo</source>
          <target state="translated">TImplication.impNo</target>
        </trans-unit>
        <trans-unit id="cbf03431c603943664f6f3c1a74619534ec2c7fb" translate="yes" xml:space="preserve">
          <source>TImplication.impUnknown</source>
          <target state="translated">TImplication.impUnknown</target>
        </trans-unit>
        <trans-unit id="f266a18743840b7953b3777fa0f133cd0c0fb0df" translate="yes" xml:space="preserve">
          <source>TImplication.impYes</source>
          <target state="translated">TImplication.impYes</target>
        </trans-unit>
        <trans-unit id="430f40656b46a624e3c790bb663ddbf857aa7993" translate="yes" xml:space="preserve">
          <source>TImplication:</source>
          <target state="translated">TImplication:</target>
        </trans-unit>
        <trans-unit id="744f1334bd787aeff859e078c122e3fa55f0308d" translate="yes" xml:space="preserve">
          <source>TInfoCC:</source>
          <target state="translated">TInfoCC:</target>
        </trans-unit>
        <trans-unit id="70f23df867b33be890aa904cb6e511a85b933a27" translate="yes" xml:space="preserve">
          <source>TInfoCCProp.hasAssume</source>
          <target state="translated">TInfoCCProp.hasAssume</target>
        </trans-unit>
        <trans-unit id="bbfbeb3628f9a5325d13549002e647d6b73f30c4" translate="yes" xml:space="preserve">
          <source>TInfoCCProp.hasAttribute</source>
          <target state="translated">TInfoCCProp.hasAttribute</target>
        </trans-unit>
        <trans-unit id="015bb6b826c54f6b7618a1c688949e5c1d3c6343" translate="yes" xml:space="preserve">
          <source>TInfoCCProp.hasComputedGoto</source>
          <target state="translated">TInfoCCProp.hasComputedGoto</target>
        </trans-unit>
        <trans-unit id="95021a3431457a6ba24e87f207f3a37b27791110" translate="yes" xml:space="preserve">
          <source>TInfoCCProp.hasCpp</source>
          <target state="translated">TInfoCCProp.hasCpp</target>
        </trans-unit>
        <trans-unit id="413c85815d44d7fbf25e99abe831b7aa0093cb4b" translate="yes" xml:space="preserve">
          <source>TInfoCCProp.hasDeclspec</source>
          <target state="translated">TInfoCCProp.hasDeclspec</target>
        </trans-unit>
        <trans-unit id="5f2c60a63fbefd4310e0790871b8f2255b3d516b" translate="yes" xml:space="preserve">
          <source>TInfoCCProp.hasGcGuard</source>
          <target state="translated">TInfoCCProp.hasGcGuard</target>
        </trans-unit>
        <trans-unit id="7473d4046c29babecf8a1ab0e0d269f5a6ac7ac0" translate="yes" xml:space="preserve">
          <source>TInfoCCProp.hasGnuAsm</source>
          <target state="translated">TInfoCCProp.hasGnuAsm</target>
        </trans-unit>
        <trans-unit id="b162c66371f25355197c7ff74634bd2eac3b84ad" translate="yes" xml:space="preserve">
          <source>TInfoCCProp.hasSwitchRange</source>
          <target state="translated">TInfoCCProp.hasSwitchRange</target>
        </trans-unit>
        <trans-unit id="145ffe068b50fcaad746862f0cadb0e5554e0dff" translate="yes" xml:space="preserve">
          <source>TInfoCCProp:</source>
          <target state="translated">TInfoCCProp:</target>
        </trans-unit>
        <trans-unit id="cc5ffafe1083069d300b64e107b5192aa3f36ac2" translate="yes" xml:space="preserve">
          <source>TInfoCCProps:</source>
          <target state="translated">TInfoCCProps:</target>
        </trans-unit>
        <trans-unit id="57c88b132a7105b1d190dac8d4839300a3a486cf" translate="yes" xml:space="preserve">
          <source>TInfoCPU:</source>
          <target state="translated">TInfoCPU:</target>
        </trans-unit>
        <trans-unit id="9fa4aee3c738c9728f67555174b2b4fc4c8194b0" translate="yes" xml:space="preserve">
          <source>TInfoOS:</source>
          <target state="translated">TInfoOS:</target>
        </trans-unit>
        <trans-unit id="e499b37ca159ea305f951d06a4e8b65e2ae51d57" translate="yes" xml:space="preserve">
          <source>TInfoOSProp.ospCaseInsensitive</source>
          <target state="translated">TInfoOSProp.ospCaseInsensitive</target>
        </trans-unit>
        <trans-unit id="8097e9fd0e7c897f7b3f5e1339d026035da472be" translate="yes" xml:space="preserve">
          <source>TInfoOSProp.ospLacksThreadVars</source>
          <target state="translated">TInfoOSProp.ospLacksThreadVars</target>
        </trans-unit>
        <trans-unit id="05bb07c4a2559de9ca2abd01928796b0d7bb9349" translate="yes" xml:space="preserve">
          <source>TInfoOSProp.ospNeedsPIC</source>
          <target state="translated">TInfoOSProp.ospNeedsPIC</target>
        </trans-unit>
        <trans-unit id="80f5c107338231bd87d177203f72986a53d328ee" translate="yes" xml:space="preserve">
          <source>TInfoOSProp.ospPosix</source>
          <target state="translated">TInfoOSProp.ospPosix</target>
        </trans-unit>
        <trans-unit id="6dbbd08a2e1f8ec7bf447d7de44169c342e94d21" translate="yes" xml:space="preserve">
          <source>TInfoOSProp:</source>
          <target state="translated">TInfoOSProp:</target>
        </trans-unit>
        <trans-unit id="20d606d6b8689be3bf1f0dd7be6f2d92e1bb22f7" translate="yes" xml:space="preserve">
          <source>TInfoOSProps:</source>
          <target state="translated">TInfoOSProps:</target>
        </trans-unit>
        <trans-unit id="f49d617e324568c4e5c73763fa7c893827c4ab13" translate="yes" xml:space="preserve">
          <source>TInstantiation:</source>
          <target state="translated">TInstantiation:</target>
        </trans-unit>
        <trans-unit id="1b9eb7cd3f382ffb4621ef60a63a7ffc09f17dcf" translate="yes" xml:space="preserve">
          <source>TInstantiationPair:</source>
          <target state="translated">TInstantiationPair:</target>
        </trans-unit>
        <trans-unit id="c225cc5e4942e93bbc9e09d42a3eea2bfc9cedb0" translate="yes" xml:space="preserve">
          <source>TInstr:</source>
          <target state="translated">TInstr:</target>
        </trans-unit>
        <trans-unit id="4a2370bd964fd47d99f113fa35ecec99b8f36e95" translate="yes" xml:space="preserve">
          <source>TInstrType:</source>
          <target state="translated">TInstrType:</target>
        </trans-unit>
        <trans-unit id="00a3636762946169ec43842620dc61474ea74353" translate="yes" xml:space="preserve">
          <source>TLLRepl:</source>
          <target state="translated">TLLRepl:</target>
        </trans-unit>
        <trans-unit id="b6cce306660bd6178c92995be2df78cdae60e064" translate="yes" xml:space="preserve">
          <source>TLLStream:</source>
          <target state="translated">TLLStream:</target>
        </trans-unit>
        <trans-unit id="dacf3ac86c6eda3297e22ba8d247ae0ca03e4569" translate="yes" xml:space="preserve">
          <source>TLLStreamKind.llsFile</source>
          <target state="translated">TLLStreamKind.llsFile</target>
        </trans-unit>
        <trans-unit id="bb767963bca4da4d17e9f903ad7c1d4d1f76a17f" translate="yes" xml:space="preserve">
          <source>TLLStreamKind.llsNone</source>
          <target state="translated">TLLStreamKind.llsNone</target>
        </trans-unit>
        <trans-unit id="ac4f6a41314a754edaaaba4e188bf8a0c652d409" translate="yes" xml:space="preserve">
          <source>TLLStreamKind.llsStdIn</source>
          <target state="translated">TLLStreamKind.llsStdIn</target>
        </trans-unit>
        <trans-unit id="ac8fb3be7f51fee5ffad54090f6d1f3b9de82230" translate="yes" xml:space="preserve">
          <source>TLLStreamKind.llsString</source>
          <target state="translated">TLLStreamKind.llsString</target>
        </trans-unit>
        <trans-unit id="4da3b4dbfdfa72a8dfb6c5784bcc0061e5c39dc0" translate="yes" xml:space="preserve">
          <source>TLLStreamKind:</source>
          <target state="translated">TLLStreamKind:</target>
        </trans-unit>
        <trans-unit id="dfd473b5c10291dd76ebacb3da45ad20eab0b4fd" translate="yes" xml:space="preserve">
          <source>TLS clients might attempt to resume a session using the session id context, thus it must be set if verifyMode is set to CVerifyPeer or CVerifyPeerUseEnvVars, otherwise the connection will fail and SslError will be raised if resumption occurs.</source>
          <target state="translated">TLS 클라이언트는 세션 ID 컨텍스트를 사용하여 세션 재개를 시도 할 수 있으므로 verifyMode가 CVerifyPeer 또는 CVerifyPeerUseEnvVars로 설정된 경우 설정해야합니다. 그렇지 않으면 연결이 실패하고 재개가 발생하면 SslError가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="95458c97651a8e26a66fa3adba95359545206970" translate="yes" xml:space="preserve">
          <source>TLabel:</source>
          <target state="translated">TLabel:</target>
        </trans-unit>
        <trans-unit id="b0ef8088263efb3f7fc595c09f782d99461877eb" translate="yes" xml:space="preserve">
          <source>TLib:</source>
          <target state="translated">TLib:</target>
        </trans-unit>
        <trans-unit id="7de1c991e5d582fe5dcf85991e662a2a74a8b23f" translate="yes" xml:space="preserve">
          <source>TLibKind.libDynamic</source>
          <target state="translated">TLibKind.libDynamic</target>
        </trans-unit>
        <trans-unit id="daa7d3fb1021153b765faa9744d7a208fa2fa29e" translate="yes" xml:space="preserve">
          <source>TLibKind.libHeader</source>
          <target state="translated">TLibKind.libHeader</target>
        </trans-unit>
        <trans-unit id="a8468b1ce9f7486ffa3dc641df47380b58b38621" translate="yes" xml:space="preserve">
          <source>TLibKind:</source>
          <target state="translated">TLibKind:</target>
        </trans-unit>
        <trans-unit id="aa4a845c7c26b344d337420ecb2882ef384760df" translate="yes" xml:space="preserve">
          <source>TLineInfo.offsetA,offsetB would be cleaner but it's only enabled for nimpretty, we'd need to check performance impact to enable it for nimdoc.</source>
          <target state="translated">TLineInfo.offsetA, offsetB는 더 깨끗하지만 nimpretty에 대해서만 활성화됩니다. nimdoc에 대해 활성화하려면 성능 영향을 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="105ee17f8647ffe2150f31ebb28c29e4a5d382a1" translate="yes" xml:space="preserve">
          <source>TLineInfo:</source>
          <target state="translated">TLineInfo:</target>
        </trans-unit>
        <trans-unit id="d1f810499fe34e6a01195e57dfc00fef11728080" translate="yes" xml:space="preserve">
          <source>TLoc:</source>
          <target state="translated">TLoc:</target>
        </trans-unit>
        <trans-unit id="ece973f8b02221754fc49656de1d2e1d254b7a63" translate="yes" xml:space="preserve">
          <source>TLocFlag.lfDynamicLib</source>
          <target state="translated">TLocFlag.lfDynamicLib</target>
        </trans-unit>
        <trans-unit id="a0285aff291d9adfeed578d8fdc0ccf6ef9b5dc1" translate="yes" xml:space="preserve">
          <source>TLocFlag.lfEnforceDeref</source>
          <target state="translated">TLocFlag.lfEnforceDeref</target>
        </trans-unit>
        <trans-unit id="b283fcb8b3bcb881c17e53e3c4e8d82a7f7e7de5" translate="yes" xml:space="preserve">
          <source>TLocFlag.lfExportLib</source>
          <target state="translated">TLocFlag.lfExportLib</target>
        </trans-unit>
        <trans-unit id="16c48ddecce296459f2dfaf735e2a48ffce3c55d" translate="yes" xml:space="preserve">
          <source>TLocFlag.lfFullExternalName</source>
          <target state="translated">TLocFlag.lfFullExternalName</target>
        </trans-unit>
        <trans-unit id="92f9bff3afdc48ec645643c44cf99b4716d61207" translate="yes" xml:space="preserve">
          <source>TLocFlag.lfHeader</source>
          <target state="translated">TLocFlag.lfHeader</target>
        </trans-unit>
        <trans-unit id="3e3ca7da8acfb9720a5d59bdd2638ff5837d7da0" translate="yes" xml:space="preserve">
          <source>TLocFlag.lfImportCompilerProc</source>
          <target state="translated">TLocFlag.lfImportCompilerProc</target>
        </trans-unit>
        <trans-unit id="370994907eb45c4881d31bf5580438cfa9283081" translate="yes" xml:space="preserve">
          <source>TLocFlag.lfIndirect</source>
          <target state="translated">TLocFlag.lfIndirect</target>
        </trans-unit>
        <trans-unit id="2f1b263f859bacf4df8bf8f4a66d90d8cf419301" translate="yes" xml:space="preserve">
          <source>TLocFlag.lfNoDecl</source>
          <target state="translated">TLocFlag.lfNoDecl</target>
        </trans-unit>
        <trans-unit id="8a02e7b1cc1ee8a2df69d1e53fec4c73ce8e1c74" translate="yes" xml:space="preserve">
          <source>TLocFlag.lfNoDeepCopy</source>
          <target state="translated">TLocFlag.lfNoDeepCopy</target>
        </trans-unit>
        <trans-unit id="774ffc6a30c9ffb3c7715b2fa4cca6c49704f780" translate="yes" xml:space="preserve">
          <source>TLocFlag.lfPrepareForMutation</source>
          <target state="translated">TLocFlag.lfPrepareForMutation</target>
        </trans-unit>
        <trans-unit id="5bd0008c3c4afe61055ec627253fdc0703181807" translate="yes" xml:space="preserve">
          <source>TLocFlag.lfSingleUse</source>
          <target state="translated">TLocFlag.lfSingleUse</target>
        </trans-unit>
        <trans-unit id="9141cef254a830af25272b0d9f05c45b28f9f9e5" translate="yes" xml:space="preserve">
          <source>TLocFlag:</source>
          <target state="translated">TLocFlag:</target>
        </trans-unit>
        <trans-unit id="bf843ba501e489e46fdeac630f89cd9c8777c47a" translate="yes" xml:space="preserve">
          <source>TLocFlags:</source>
          <target state="translated">TLocFlags:</target>
        </trans-unit>
        <trans-unit id="14b86769520664976aba08344c39ee320b3c372b" translate="yes" xml:space="preserve">
          <source>TLocKind.locCall</source>
          <target state="translated">TLocKind.locCall</target>
        </trans-unit>
        <trans-unit id="b086306aaff0b753f47116b6d904f6fc018699ff" translate="yes" xml:space="preserve">
          <source>TLocKind.locData</source>
          <target state="translated">TLocKind.locData</target>
        </trans-unit>
        <trans-unit id="4ce1a98f7f49d402ab439fe92a53dfed9c824222" translate="yes" xml:space="preserve">
          <source>TLocKind.locExpr</source>
          <target state="translated">TLocKind.locExpr</target>
        </trans-unit>
        <trans-unit id="f88794708f8bbb6dd16750d0a679b2068c34a00f" translate="yes" xml:space="preserve">
          <source>TLocKind.locField</source>
          <target state="translated">TLocKind.locField</target>
        </trans-unit>
        <trans-unit id="946cf8cd321d3eaab735cffeed3b197199e254c4" translate="yes" xml:space="preserve">
          <source>TLocKind.locGlobalVar</source>
          <target state="translated">TLocKind.locGlobalVar</target>
        </trans-unit>
        <trans-unit id="a137a1135cfda032c5cb42074f8caa391954a24e" translate="yes" xml:space="preserve">
          <source>TLocKind.locLocalVar</source>
          <target state="translated">TLocKind.locLocalVar</target>
        </trans-unit>
        <trans-unit id="27b89867676a1748c0a1357a862422c29185ea37" translate="yes" xml:space="preserve">
          <source>TLocKind.locNone</source>
          <target state="translated">TLocKind.locNone</target>
        </trans-unit>
        <trans-unit id="229ea656acb11a4421179c139e79808f80a804f2" translate="yes" xml:space="preserve">
          <source>TLocKind.locOther</source>
          <target state="translated">TLocKind.locOther</target>
        </trans-unit>
        <trans-unit id="84af444a15b6db52a7f2cdf427d83468111104d5" translate="yes" xml:space="preserve">
          <source>TLocKind.locParam</source>
          <target state="translated">TLocKind.locParam</target>
        </trans-unit>
        <trans-unit id="613e20cba738e8ea555e052beafa26478d2577d6" translate="yes" xml:space="preserve">
          <source>TLocKind.locProc</source>
          <target state="translated">TLocKind.locProc</target>
        </trans-unit>
        <trans-unit id="1f31c1a82193cfd75e37ea182ca328c705088e7e" translate="yes" xml:space="preserve">
          <source>TLocKind.locTemp</source>
          <target state="translated">TLocKind.locTemp</target>
        </trans-unit>
        <trans-unit id="bcfeef750f60c08c2261c2a45549ce649aeb57af" translate="yes" xml:space="preserve">
          <source>TLocKind:</source>
          <target state="translated">TLocKind:</target>
        </trans-unit>
        <trans-unit id="752e1177f5aad7a1068ce8cd878699737b0a4622" translate="yes" xml:space="preserve">
          <source>TLockLevel:</source>
          <target state="translated">TLockLevel:</target>
        </trans-unit>
        <trans-unit id="4c5e41e0c3894295b7aa93028daa254321d143f9" translate="yes" xml:space="preserve">
          <source>TLookupFlag.checkAmbiguity</source>
          <target state="translated">TLookupFlag.checkAmbiguity</target>
        </trans-unit>
        <trans-unit id="b4e6a372ae9773e92d1a72c5e9da3df41797fbff" translate="yes" xml:space="preserve">
          <source>TLookupFlag.checkModule</source>
          <target state="translated">TLookupFlag.checkModule</target>
        </trans-unit>
        <trans-unit id="9f4fb37b4b527e5022037d30cb3674fe485032f5" translate="yes" xml:space="preserve">
          <source>TLookupFlag.checkPureEnumFields</source>
          <target state="translated">TLookupFlag.checkPureEnumFields</target>
        </trans-unit>
        <trans-unit id="4132dea51785235b7c64904366f94859dbe0d168" translate="yes" xml:space="preserve">
          <source>TLookupFlag.checkUndeclared</source>
          <target state="translated">TLookupFlag.checkUndeclared</target>
        </trans-unit>
        <trans-unit id="dd39cc0bcf78bd3be322d362887eecd384c7815d" translate="yes" xml:space="preserve">
          <source>TLookupFlag:</source>
          <target state="translated">TLookupFlag:</target>
        </trans-unit>
        <trans-unit id="aebaa5abc0db50983046262a0a26b4b07009f451" translate="yes" xml:space="preserve">
          <source>TMagic.mAbsI</source>
          <target state="translated">TMagic.mAbsI</target>
        </trans-unit>
        <trans-unit id="430fefcf33dcb1bac39800cb3bf09413da8d322b" translate="yes" xml:space="preserve">
          <source>TMagic.mAccessEnv</source>
          <target state="translated">TMagic.mAccessEnv</target>
        </trans-unit>
        <trans-unit id="66357c5b59ab77225c636de99957642b495c1244" translate="yes" xml:space="preserve">
          <source>TMagic.mAddF64</source>
          <target state="translated">TMagic.mAddF64</target>
        </trans-unit>
        <trans-unit id="d33ac58ac73f0ce54dafdafa57d69d56122518d6" translate="yes" xml:space="preserve">
          <source>TMagic.mAddI</source>
          <target state="translated">TMagic.mAddI</target>
        </trans-unit>
        <trans-unit id="bbba5b9569d8a71e3b353fea3add44637f53c49a" translate="yes" xml:space="preserve">
          <source>TMagic.mAddU</source>
          <target state="translated">TMagic.mAddU</target>
        </trans-unit>
        <trans-unit id="ee53d33d77a77f5bd622033156950702ae7088d9" translate="yes" xml:space="preserve">
          <source>TMagic.mAddr</source>
          <target state="translated">TMagic.mAddr</target>
        </trans-unit>
        <trans-unit id="8c9e32a1056127e405fa4f104b7905998a486483" translate="yes" xml:space="preserve">
          <source>TMagic.mAlignOf</source>
          <target state="translated">TMagic.mAlignOf</target>
        </trans-unit>
        <trans-unit id="61546d4f00fe2313d339dd1843c036b753345f93" translate="yes" xml:space="preserve">
          <source>TMagic.mAnd</source>
          <target state="translated">TMagic.mAnd</target>
        </trans-unit>
        <trans-unit id="224626c876115f95bad1b7affc78d3bdf27ebd8e" translate="yes" xml:space="preserve">
          <source>TMagic.mAppType</source>
          <target state="translated">TMagic.mAppType</target>
        </trans-unit>
        <trans-unit id="ae95bfadff4cc3a86b3cd292e5d0262a4d2ac5a2" translate="yes" xml:space="preserve">
          <source>TMagic.mAppendSeqElem</source>
          <target state="translated">TMagic.mAppendSeqElem</target>
        </trans-unit>
        <trans-unit id="b16a8a15bcbebeb652f4b3296e4d9ed97336b9d1" translate="yes" xml:space="preserve">
          <source>TMagic.mAppendStrCh</source>
          <target state="translated">TMagic.mAppendStrCh</target>
        </trans-unit>
        <trans-unit id="5af537dd82cb737631fcb3b975ab84088c607815" translate="yes" xml:space="preserve">
          <source>TMagic.mAppendStrStr</source>
          <target state="translated">TMagic.mAppendStrStr</target>
        </trans-unit>
        <trans-unit id="d9a200d76cf20fab9ac23af8ad59d3cdb6ff2e1b" translate="yes" xml:space="preserve">
          <source>TMagic.mArrGet</source>
          <target state="translated">TMagic.mArrGet</target>
        </trans-unit>
        <trans-unit id="6d4d27868f17265f2b1b16762270536bad434a67" translate="yes" xml:space="preserve">
          <source>TMagic.mArrPut</source>
          <target state="translated">TMagic.mArrPut</target>
        </trans-unit>
        <trans-unit id="4217f6a35b8f9d321eb80bef999dedd700157aac" translate="yes" xml:space="preserve">
          <source>TMagic.mArrToSeq</source>
          <target state="translated">TMagic.mArrToSeq</target>
        </trans-unit>
        <trans-unit id="a91729f119553f45a12434c031f9e50526f357da" translate="yes" xml:space="preserve">
          <source>TMagic.mArray</source>
          <target state="translated">TMagic.mArray</target>
        </trans-unit>
        <trans-unit id="5facb5909c5cc7159886690dbc5d531dabcbf4dc" translate="yes" xml:space="preserve">
          <source>TMagic.mAsgn</source>
          <target state="translated">TMagic.mAsgn</target>
        </trans-unit>
        <trans-unit id="26c0c48f97e1ffdc82732c345e702d5403dfe477" translate="yes" xml:space="preserve">
          <source>TMagic.mAshrI</source>
          <target state="translated">TMagic.mAshrI</target>
        </trans-unit>
        <trans-unit id="c75e7938b4aa088220a281daf9ff817988c3e123" translate="yes" xml:space="preserve">
          <source>TMagic.mAstToStr</source>
          <target state="translated">TMagic.mAstToStr</target>
        </trans-unit>
        <trans-unit id="54daa6aa9926ed83c347712227b33cd4073fec6c" translate="yes" xml:space="preserve">
          <source>TMagic.mBitandI</source>
          <target state="translated">TMagic.mBitandI</target>
        </trans-unit>
        <trans-unit id="4a9704dd121386d9645102d5148d7ced6a744724" translate="yes" xml:space="preserve">
          <source>TMagic.mBitnotI</source>
          <target state="translated">TMagic.mBitnotI</target>
        </trans-unit>
        <trans-unit id="728bf57023be7f6f33094801a39fd25e7e31efa3" translate="yes" xml:space="preserve">
          <source>TMagic.mBitorI</source>
          <target state="translated">TMagic.mBitorI</target>
        </trans-unit>
        <trans-unit id="2625a0b94798d5545259832ea97abbe6721943f9" translate="yes" xml:space="preserve">
          <source>TMagic.mBitxorI</source>
          <target state="translated">TMagic.mBitxorI</target>
        </trans-unit>
        <trans-unit id="301803ded6b19d66ea3103c6d4008d348672acea" translate="yes" xml:space="preserve">
          <source>TMagic.mBool</source>
          <target state="translated">TMagic.mBool</target>
        </trans-unit>
        <trans-unit id="712dbf8e200ec38e2c92b225617d5e3903f84afd" translate="yes" xml:space="preserve">
          <source>TMagic.mBoolDefine</source>
          <target state="translated">TMagic.mBoolDefine</target>
        </trans-unit>
        <trans-unit id="df2aadda99452adddcf84fd4a2164969e89280a5" translate="yes" xml:space="preserve">
          <source>TMagic.mBoolToStr</source>
          <target state="translated">TMagic.mBoolToStr</target>
        </trans-unit>
        <trans-unit id="329bcf0a5d039d3e90a7f6039b6a510506b66f04" translate="yes" xml:space="preserve">
          <source>TMagic.mBuildCPU</source>
          <target state="translated">TMagic.mBuildCPU</target>
        </trans-unit>
        <trans-unit id="c189645f35a7d634595cc13529ed4b4ea5ae24fb" translate="yes" xml:space="preserve">
          <source>TMagic.mBuildOS</source>
          <target state="translated">TMagic.mBuildOS</target>
        </trans-unit>
        <trans-unit id="3bbc89d80e884c5d0aaefa8e447abf226287fb57" translate="yes" xml:space="preserve">
          <source>TMagic.mBuiltinType</source>
          <target state="translated">TMagic.mBuiltinType</target>
        </trans-unit>
        <trans-unit id="bc77cfdfb2086ad3fd6611db61828756a56e0141" translate="yes" xml:space="preserve">
          <source>TMagic.mCStrToStr</source>
          <target state="translated">TMagic.mCStrToStr</target>
        </trans-unit>
        <trans-unit id="6a68f718be9387962a99e6265a3fe38072b91d38" translate="yes" xml:space="preserve">
          <source>TMagic.mCard</source>
          <target state="translated">TMagic.mCard</target>
        </trans-unit>
        <trans-unit id="ad6c4d4b3f47bc51c34d0be8a8a68860b365b9e9" translate="yes" xml:space="preserve">
          <source>TMagic.mChar</source>
          <target state="translated">TMagic.mChar</target>
        </trans-unit>
        <trans-unit id="060287d95bfb69c55c0e8f2d98258c66b71afa5a" translate="yes" xml:space="preserve">
          <source>TMagic.mCharToStr</source>
          <target state="translated">TMagic.mCharToStr</target>
        </trans-unit>
        <trans-unit id="f248d8a692f516e8047c0081ab047a605ff22985" translate="yes" xml:space="preserve">
          <source>TMagic.mChr</source>
          <target state="translated">TMagic.mChr</target>
        </trans-unit>
        <trans-unit id="00994fc7fc9b606a902788bce26799f510743232" translate="yes" xml:space="preserve">
          <source>TMagic.mCompileDate</source>
          <target state="translated">TMagic.mCompileDate</target>
        </trans-unit>
        <trans-unit id="7930f739e172e494bbe399205b72385641c984b5" translate="yes" xml:space="preserve">
          <source>TMagic.mCompileOption</source>
          <target state="translated">TMagic.mCompileOption</target>
        </trans-unit>
        <trans-unit id="2a8ac0a19997db97b55b1c5085829751b7ea4c07" translate="yes" xml:space="preserve">
          <source>TMagic.mCompileOptionArg</source>
          <target state="translated">TMagic.mCompileOptionArg</target>
        </trans-unit>
        <trans-unit id="bc13be53d20c26fa8222b77c375ab9a9a02e8665" translate="yes" xml:space="preserve">
          <source>TMagic.mCompileTime</source>
          <target state="translated">TMagic.mCompileTime</target>
        </trans-unit>
        <trans-unit id="045117aaf4ab6052b6980512115f1d56e7bc8d29" translate="yes" xml:space="preserve">
          <source>TMagic.mCompiles</source>
          <target state="translated">TMagic.mCompiles</target>
        </trans-unit>
        <trans-unit id="1cfa6a1cb39ec45dbc3ea9c0f9f49c877c14e9a7" translate="yes" xml:space="preserve">
          <source>TMagic.mConStrStr</source>
          <target state="translated">TMagic.mConStrStr</target>
        </trans-unit>
        <trans-unit id="9d1c70e31b326a88ced20099419540a6e1414572" translate="yes" xml:space="preserve">
          <source>TMagic.mCpuEndian</source>
          <target state="translated">TMagic.mCpuEndian</target>
        </trans-unit>
        <trans-unit id="9fe677ea2f77e546a3c4ebdd7dafc385fb9b95b6" translate="yes" xml:space="preserve">
          <source>TMagic.mCstring</source>
          <target state="translated">TMagic.mCstring</target>
        </trans-unit>
        <trans-unit id="7a107906a9a62042bf88e3bc47038a60c783edd1" translate="yes" xml:space="preserve">
          <source>TMagic.mDec</source>
          <target state="translated">TMagic.mDec</target>
        </trans-unit>
        <trans-unit id="eb680f58be6763467c8290389e9fa988ab7348a9" translate="yes" xml:space="preserve">
          <source>TMagic.mDeclared</source>
          <target state="translated">TMagic.mDeclared</target>
        </trans-unit>
        <trans-unit id="ebb5e42aefdeeb49f009dbab9c1eef351bc3f32c" translate="yes" xml:space="preserve">
          <source>TMagic.mDeclaredInScope</source>
          <target state="translated">TMagic.mDeclaredInScope</target>
        </trans-unit>
        <trans-unit id="29c923f85d1a90b852427d8421346cfeeb9c2ef9" translate="yes" xml:space="preserve">
          <source>TMagic.mDeepCopy</source>
          <target state="translated">TMagic.mDeepCopy</target>
        </trans-unit>
        <trans-unit id="d8c17e0d10ea1fd5fa15204fb25cd99a95f0abb1" translate="yes" xml:space="preserve">
          <source>TMagic.mDefault</source>
          <target state="translated">TMagic.mDefault</target>
        </trans-unit>
        <trans-unit id="f877e5c8a9550ff52a05cddbffdf5b68357c336f" translate="yes" xml:space="preserve">
          <source>TMagic.mDefined</source>
          <target state="translated">TMagic.mDefined</target>
        </trans-unit>
        <trans-unit id="f22bbe4f0d4aa0957bb15c11d30aead96f590955" translate="yes" xml:space="preserve">
          <source>TMagic.mDestroy</source>
          <target state="translated">TMagic.mDestroy</target>
        </trans-unit>
        <trans-unit id="367c457f6bf2fa445da13569509ce780e33bb07b" translate="yes" xml:space="preserve">
          <source>TMagic.mDistinct</source>
          <target state="translated">TMagic.mDistinct</target>
        </trans-unit>
        <trans-unit id="934640950cdbf262d0d3c56750129abb6c73a475" translate="yes" xml:space="preserve">
          <source>TMagic.mDivF64</source>
          <target state="translated">TMagic.mDivF64</target>
        </trans-unit>
        <trans-unit id="6c2700f321227e636a3c5b3c804b842e59678778" translate="yes" xml:space="preserve">
          <source>TMagic.mDivI</source>
          <target state="translated">TMagic.mDivI</target>
        </trans-unit>
        <trans-unit id="18df62b71969e2f51fb28351382715c8bcdc22e5" translate="yes" xml:space="preserve">
          <source>TMagic.mDivU</source>
          <target state="translated">TMagic.mDivU</target>
        </trans-unit>
        <trans-unit id="c9a78df79b3545eecdc2110a2317037a4ff6f9aa" translate="yes" xml:space="preserve">
          <source>TMagic.mDotDot</source>
          <target state="translated">TMagic.mDotDot</target>
        </trans-unit>
        <trans-unit id="0cd589f10e4cd6794e8d857df348fdfe9f470ccf" translate="yes" xml:space="preserve">
          <source>TMagic.mEcho</source>
          <target state="translated">TMagic.mEcho</target>
        </trans-unit>
        <trans-unit id="40d6aab7cf40e86c08a9bfa8a933c847eb9a691a" translate="yes" xml:space="preserve">
          <source>TMagic.mEnumToStr</source>
          <target state="translated">TMagic.mEnumToStr</target>
        </trans-unit>
        <trans-unit id="776537e27d8590515d4fca8f30538d97b5cc568c" translate="yes" xml:space="preserve">
          <source>TMagic.mEqB</source>
          <target state="translated">TMagic.mEqB</target>
        </trans-unit>
        <trans-unit id="049e04ae64faa3f9ebd9ed5c261ff95175589df7" translate="yes" xml:space="preserve">
          <source>TMagic.mEqCString</source>
          <target state="translated">TMagic.mEqCString</target>
        </trans-unit>
        <trans-unit id="5695b2803f6132f5d1de8b3deca53218c1e1e1e1" translate="yes" xml:space="preserve">
          <source>TMagic.mEqCh</source>
          <target state="translated">TMagic.mEqCh</target>
        </trans-unit>
        <trans-unit id="3b44819eed0d835141249f81ce271a0782fac8e6" translate="yes" xml:space="preserve">
          <source>TMagic.mEqEnum</source>
          <target state="translated">TMagic.mEqEnum</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
