<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="react_bootstrap">
    <body>
      <group id="react_bootstrap">
        <trans-unit id="694224a5885e118770230aa30dac9a9b3299e194" translate="yes" xml:space="preserve">
          <source>&quot;left&quot;|&quot;right&quot;|{ sm: &quot;left&quot;|&quot;right&quot; }|{ md: &quot;left&quot;|&quot;right&quot; }|{ lg: &quot;left&quot;|&quot;right&quot; }|{ xl: &quot;left&quot;|&quot;right&quot;}</source>
          <target state="translated">&quot;왼쪽&quot;| &quot;오른쪽&quot;| {sm : &quot;왼쪽&quot;| &quot;오른쪽&quot;} | {md : &quot;왼쪽&quot;| &quot;오른쪽&quot;} | {lg : &quot;왼쪽&quot;| &quot;오른쪽&quot;} | {xl : &quot;왼쪽&quot; | &quot;오른쪽&quot;}</target>
        </trans-unit>
        <trans-unit id="199b5bdd109c1eee98dc879f05b6526e0c50eabf" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2014&amp;ndash;present Stephen J. Collings, Matthew Honnibal, Pieter Vanderwerff</source>
          <target state="translated">&amp;copy; 2014&amp;ndash; 현재 Stephen J. Collings, Matthew Honnibal, Pieter Vanderwerff</target>
        </trans-unit>
        <trans-unit id="d46a9c22e09867d3c6f107df850d748de90a2d6b" translate="yes" xml:space="preserve">
          <source>'div' | elementType</source>
          <target state="translated">'div' | elementType</target>
        </trans-unit>
        <trans-unit id="a882844bff5e3536f4a22c2b68612b61bb0303c9" translate="yes" xml:space="preserve">
          <source>'hover' | 'click' |'focus' | Array&amp;lt;'hover' | 'click' |'focus'&amp;gt;</source>
          <target state="translated">'호버'| '클릭'| '초점'| 배열 &amp;lt; 'hover'| '클릭'| '초점'&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9081f9b8facfebc9388d4c70cb36bc25e64f3cd5" translate="yes" xml:space="preserve">
          <source>'input' | 'textarea' | 'select' | elementType</source>
          <target state="translated">'입력'| 'textarea'| '선택'| elementType</target>
        </trans-unit>
        <trans-unit id="f83f675c3f5d3e4d5967524ca986cc5da48a73f5" translate="yes" xml:space="preserve">
          <source>'input' | elementType</source>
          <target state="translated">'입력'| elementType</target>
        </trans-unit>
        <trans-unit id="3db29a9c6077c947d5d1439ff8d0c532f7c6eab0" translate="yes" xml:space="preserve">
          <source>'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light'</source>
          <target state="translated">'기본'| '보조'| '성공'| '위험'| '경고'| '정보'| '어두운'| '빛'</target>
        </trans-unit>
        <trans-unit id="edc9d1d2e96266056bd5282fef687449f1c0a3cb" translate="yes" xml:space="preserve">
          <source>(Generally it's better to use &lt;code&gt;ToggleButtonGroup&lt;/code&gt; directly)</source>
          <target state="translated">(일반적으로 &lt;code&gt;ToggleButtonGroup&lt;/code&gt; 을 직접 사용하는 것이 좋습니다 )</target>
        </trans-unit>
        <trans-unit id="945448fc02ab77194d69e1322efdb1fdd0b6bae3" translate="yes" xml:space="preserve">
          <source>... And import it on the main Sass file.</source>
          <target state="translated">... 그리고 메인 Sass 파일로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="201f8a73a8be0db82d645483150dc11c6b8a05cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;getting-started/introduction/index&quot;&gt;Get started&lt;/a&gt;&lt;a href=&quot;components/alerts/index&quot;&gt;Components&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;getting-started/introduction/index&quot;&gt;시작하기 &lt;/a&gt;&lt;a href=&quot;components/alerts/index&quot;&gt;구성 요소&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0cda9af09ba5f2597a1f29f267e998529be67437" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/questions/ask&quot;&gt;Ask questions&lt;/a&gt; about specific problems you have faced, including details about what exactly you are trying to do. Make sure you tag your question with &lt;code&gt;react-bootstrap&lt;/code&gt;. You can also read through &lt;a href=&quot;https://stackoverflow.com/questions/tagged/react-bootstrap&quot;&gt;existing React-Bootstrap questions&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/questions/ask&quot;&gt;&lt;/a&gt;정확히 무엇을하려고하는지에 대한 세부 사항을 포함하여 직면 한 특정 문제에 대해 질문 하십시오. &lt;code&gt;react-bootstrap&lt;/code&gt; 으로 질문에 태그를 지정하세요 . &lt;a href=&quot;https://stackoverflow.com/questions/tagged/react-bootstrap&quot;&gt;기존 React-Bootstrap 질문을&lt;/a&gt; 읽을 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="02f06bffa2a3056df5b8b389f73de6f81fd02716" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;Card.Text&amp;gt;&lt;/code&gt; outputs &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags around the content, so you can use multiple &lt;code&gt;&amp;lt;Card.Text&amp;gt;&lt;/code&gt;s to create separate paragraphs.</source>
          <target state="translated">&lt;code&gt;&amp;lt;Card.Text&amp;gt;&lt;/code&gt; 는 콘텐츠 주위에 &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 태그를 출력 하므로 여러 &lt;code&gt;&amp;lt;Card.Text&amp;gt;&lt;/code&gt; 를 사용하여 별도의 단락을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="78100208e9fb158f3f101be3e21ec7550cd6e08f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;Nav&amp;gt;&lt;/code&gt; markup is very flexible and styling is controlled via classes so you can use whatever elements you like to build your navs. By default &lt;code&gt;&amp;lt;Nav&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;Nav.Item&amp;gt;&lt;/code&gt; both render &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s instead of &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; elements respectively. This because it's possible (and common) to leave off the &lt;code&gt;&amp;lt;Nav.Item&amp;gt;&lt;/code&gt;'s and render a &lt;code&gt;&amp;lt;Nav.Link&amp;gt;&lt;/code&gt; directly, which would create invalid markup by default (&lt;code&gt;ul &amp;gt; a&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&amp;lt;Nav&amp;gt;&lt;/code&gt; 마크 업은 매우 유연하며 스타일은 클래스를 통해 제어되므로 원하는 요소를 사용하여 탐색 을 빌드 할 수 있습니다. 기본적으로 &lt;code&gt;&amp;lt;Nav&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;Nav.Item&amp;gt;&lt;/code&gt; 모두 &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 요소 대신 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 를 렌더링 합니다. 이는 &lt;code&gt;&amp;lt;Nav.Item&amp;gt;&lt;/code&gt; 을 &lt;code&gt;&amp;lt;Nav.Link&amp;gt;&lt;/code&gt; 하고 &amp;lt;Nav.Link&amp;gt;를 직접 렌더링하는 것이 가능하고 일반적이기 때문에 기본적으로 잘못된 마크 업을 생성합니다 ( &lt;code&gt;ul &amp;gt; a&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="fb942c593f52601276f2b0381e9cee9460f3c4d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'21by9'&lt;/code&gt; | &lt;code&gt;'16by9'&lt;/code&gt; | &lt;code&gt;'4by3'&lt;/code&gt; | &lt;code&gt;'1by1'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'21by9'&lt;/code&gt; | &lt;code&gt;'16by9'&lt;/code&gt; | &lt;code&gt;'4by3'&lt;/code&gt; | &lt;code&gt;'1by1'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24000e3538b76e958b9e5c86e15044d30aa45e49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'auto'&lt;/code&gt; | &lt;code&gt;'top'&lt;/code&gt; | &lt;code&gt;'bottom'&lt;/code&gt; | &lt;code&gt;'left'&lt;/code&gt; | &lt;code&gt;'right'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'auto'&lt;/code&gt; | &lt;code&gt;'top'&lt;/code&gt; | &lt;code&gt;'bottom'&lt;/code&gt; | &lt;code&gt;'left'&lt;/code&gt; | &lt;code&gt;'right'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa17ca3591468d546f846c9ae7c0a4096653587b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'auto-start'&lt;/code&gt; | &lt;code&gt;'auto'&lt;/code&gt; | &lt;code&gt;'auto-end'&lt;/code&gt; | &lt;code&gt;'top-start'&lt;/code&gt; | &lt;code&gt;'top'&lt;/code&gt; | &lt;code&gt;'top-end'&lt;/code&gt; | &lt;code&gt;'right-start'&lt;/code&gt; | &lt;code&gt;'right'&lt;/code&gt; | &lt;code&gt;'right-end'&lt;/code&gt; | &lt;code&gt;'bottom-end'&lt;/code&gt; | &lt;code&gt;'bottom'&lt;/code&gt; | &lt;code&gt;'bottom-start'&lt;/code&gt; | &lt;code&gt;'left-end'&lt;/code&gt; | &lt;code&gt;'left'&lt;/code&gt; | &lt;code&gt;'left-start'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'auto-start'&lt;/code&gt; | &lt;code&gt;'auto'&lt;/code&gt; | &lt;code&gt;'auto-end'&lt;/code&gt; | &lt;code&gt;'top-start'&lt;/code&gt; | &lt;code&gt;'top'&lt;/code&gt; | &lt;code&gt;'top-end'&lt;/code&gt; | &lt;code&gt;'right-start'&lt;/code&gt; | &lt;code&gt;'right'&lt;/code&gt; | &lt;code&gt;'right-end'&lt;/code&gt; | &lt;code&gt;'bottom-end'&lt;/code&gt; | &lt;code&gt;'bottom'&lt;/code&gt; | &lt;code&gt;'bottom-start'&lt;/code&gt; | &lt;code&gt;'left-end'&lt;/code&gt; | &lt;code&gt;'left'&lt;/code&gt; | &lt;code&gt;'left-start'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1ff15bfa66407fc9238a68189cf4598f5e514d66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'border'&lt;/code&gt; | &lt;code&gt;'grow'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'border'&lt;/code&gt; | &lt;code&gt;'grow'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3534460436562c41cac055aa1c6821b12a5a3e34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'button'&lt;/code&gt; | &lt;code&gt;'reset'&lt;/code&gt; | &lt;code&gt;'submit'&lt;/code&gt; | &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'button'&lt;/code&gt; | &lt;code&gt;'reset'&lt;/code&gt; | &lt;code&gt;'submit'&lt;/code&gt; | &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1ea308685c16d04b3ecc455260b61cd80c246896" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'checkbox'&lt;/code&gt; | &lt;code&gt;'radio'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'checkbox'&lt;/code&gt; | &lt;code&gt;'radio'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d50e565da02731d87244a61356f5944d59e02932" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'click'&lt;/code&gt; | &lt;code&gt;'mousedown'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'click'&lt;/code&gt; | &lt;code&gt;'mousedown'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="17d265d303b1840906902fd0ef1b5001c45337b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'height'&lt;/code&gt; | &lt;code&gt;'width'&lt;/code&gt; | function</source>
          <target state="translated">&lt;code&gt;'height'&lt;/code&gt; | &lt;code&gt;'width'&lt;/code&gt; | 함수</target>
        </trans-unit>
        <trans-unit id="3d5d9ecc30072310406303c090ee99ff8f4ddff5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'hover'&lt;/code&gt; | &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'hover'&lt;/code&gt; | &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="15635690485cabaca828d067397f0555beb205d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'light'&lt;/code&gt; | &lt;code&gt;'dark'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'light'&lt;/code&gt; | &lt;code&gt;'dark'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc482fe8a1a41648a6127dcceebbf435db60bb55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'primary'&lt;/code&gt; | &lt;code&gt;'secondary'&lt;/code&gt; | &lt;code&gt;'success'&lt;/code&gt; | &lt;code&gt;'danger'&lt;/code&gt; | &lt;code&gt;'warning'&lt;/code&gt; | &lt;code&gt;'info'&lt;/code&gt; | &lt;code&gt;'dark'&lt;/code&gt; | &lt;code&gt;'light'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'primary'&lt;/code&gt; | &lt;code&gt;'secondary'&lt;/code&gt; | &lt;code&gt;'success'&lt;/code&gt; | &lt;code&gt;'danger'&lt;/code&gt; | &lt;code&gt;'warning'&lt;/code&gt; | &lt;code&gt;'info'&lt;/code&gt; | &lt;code&gt;'dark'&lt;/code&gt; | &lt;code&gt;'light'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26738770bf11d534393aabdfa0f415e72c3ce996" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'primary'&lt;/code&gt; | &lt;code&gt;'secondary'&lt;/code&gt; | &lt;code&gt;'success'&lt;/code&gt; | &lt;code&gt;'danger'&lt;/code&gt; | &lt;code&gt;'warning'&lt;/code&gt; | &lt;code&gt;'info'&lt;/code&gt; | &lt;code&gt;'dark'&lt;/code&gt; | &lt;code&gt;'light'&lt;/code&gt; | &lt;code&gt;'white'&lt;/code&gt; | &lt;code&gt;'muted'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'primary'&lt;/code&gt; | &lt;code&gt;'secondary'&lt;/code&gt; | &lt;code&gt;'success'&lt;/code&gt; | &lt;code&gt;'danger'&lt;/code&gt; | &lt;code&gt;'warning'&lt;/code&gt; | &lt;code&gt;'info'&lt;/code&gt; | &lt;code&gt;'dark'&lt;/code&gt; | &lt;code&gt;'light'&lt;/code&gt; | &lt;code&gt;'white'&lt;/code&gt; | &lt;code&gt;'muted'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="714a39a09d51bf2bfd83743fc8f9613645ff45d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'primary'&lt;/code&gt; | &lt;code&gt;'secondary'&lt;/code&gt; | &lt;code&gt;'success'&lt;/code&gt; | &lt;code&gt;'danger'&lt;/code&gt; | &lt;code&gt;'warning'&lt;/code&gt; | &lt;code&gt;'info'&lt;/code&gt; | &lt;code&gt;'light'&lt;/code&gt; | &lt;code&gt;'dark'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'primary'&lt;/code&gt; | &lt;code&gt;'secondary'&lt;/code&gt; | &lt;code&gt;'success'&lt;/code&gt; | &lt;code&gt;'danger'&lt;/code&gt; | &lt;code&gt;'warning'&lt;/code&gt; | &lt;code&gt;'info'&lt;/code&gt; | &lt;code&gt;'light'&lt;/code&gt; | &lt;code&gt;'dark'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3b9fca5b788724b96eae816c50b2480ecf508a82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'radio'&lt;/code&gt; | &lt;code&gt;'checkbox'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'radio'&lt;/code&gt; | &lt;code&gt;'checkbox'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="50613b52cbd723201bfc5bd928100f4a358f474e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'radio'&lt;/code&gt; | &lt;code&gt;'checkbox'&lt;/code&gt; | &lt;code&gt;'switch'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'radio'&lt;/code&gt; | &lt;code&gt;'checkbox'&lt;/code&gt; | &lt;code&gt;'switch'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d47b733cc001bf580f7891c4a75f5fc380797ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'sm'&lt;/code&gt; | &lt;code&gt;'lg','xl'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'sm'&lt;/code&gt; | &lt;code&gt;'lg','xl'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eac9c49e3452f09a682d73499add60519e1be276" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'sm'&lt;/code&gt; | &lt;code&gt;'lg'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'sm'&lt;/code&gt; | &lt;code&gt;'lg'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2da7df59bf39987ce97cb08f06fb588c7acc17e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'static'&lt;/code&gt; | &lt;code&gt;true&lt;/code&gt; | &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'static'&lt;/code&gt; | &lt;code&gt;true&lt;/code&gt; | &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52570fa20d31dac19fb14dd82d525d2c066b29a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'success'&lt;/code&gt; | &lt;code&gt;'danger'&lt;/code&gt; | &lt;code&gt;'warning'&lt;/code&gt; | &lt;code&gt;'info'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'success'&lt;/code&gt; | &lt;code&gt;'danger'&lt;/code&gt; | &lt;code&gt;'warning'&lt;/code&gt; | &lt;code&gt;'info'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f995061499b1eb89fa5b58c745aafae364d183f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'tabs'&lt;/code&gt; | &lt;code&gt;'pills'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'tabs'&lt;/code&gt; | &lt;code&gt;'pills'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea7101a97de20173632eedc01816e161b3bb68fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'top'&lt;/code&gt; | &lt;code&gt;'bottom'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'top'&lt;/code&gt; | &lt;code&gt;'bottom'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b63e646931d29fab13f4456298a29fde1b7d4df3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'up'&lt;/code&gt; | &lt;code&gt;'left'&lt;/code&gt; | &lt;code&gt;'right'&lt;/code&gt; | &lt;code&gt;'down'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'up'&lt;/code&gt; | &lt;code&gt;'left'&lt;/code&gt; | &lt;code&gt;'right'&lt;/code&gt; | &lt;code&gt;'down'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bfc66d1fe216ba62130a951c966c0ef16b6b2922" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'valid'&lt;/code&gt; | &lt;code&gt;'invalid'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'valid'&lt;/code&gt; | &lt;code&gt;'invalid'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="61bfac3ad2c70df8a2545bb9153139873eaae7b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Overlay&lt;/code&gt; is the fundamental component for positioning and controlling tooltip visibility. It's a wrapper around Popper.js, that adds support for transitions, and visibility toggling.</source>
          <target state="translated">&lt;code&gt;Overlay&lt;/code&gt; 는 툴팁 가시성을 배치하고 제어하기위한 기본 구성 요소입니다. 전환 및 가시성 전환에 대한 지원을 추가하는 Popper.js의 래퍼입니다.</target>
        </trans-unit>
        <trans-unit id="27ae77f1d8edccde2c392f1c6686503509c19359" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tabs&lt;/code&gt; can be controlled directly when you want to handle the selection logic personally.</source>
          <target state="translated">&lt;code&gt;Tabs&lt;/code&gt; 선택 논리를 개인적으로 처리하려는 경우 탭 을 직접 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4cc16546e5dfab39e85b501978f4fdd75c80a982" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active&lt;/code&gt; prop removed and moved to &lt;code&gt;NavLink&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;active&lt;/code&gt; 소품이 제거되고 &lt;code&gt;NavLink&lt;/code&gt; 로 이동했습니다 .</target>
        </trans-unit>
        <trans-unit id="6b1d8dbb1cf424ed39e81e9a92271017727995ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;activeHref&lt;/code&gt; is removed (only activeKey now)</source>
          <target state="translated">&lt;code&gt;activeHref&lt;/code&gt; 가 제거되었습니다 (현재 activeKey 만 해당).</target>
        </trans-unit>
        <trans-unit id="507435015884b15833c19212db6484dca9d952b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bsClass&lt;/code&gt; -&amp;gt; &lt;code&gt;bsPrefix&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bsClass&lt;/code&gt; -&amp;gt; &lt;code&gt;bsPrefix&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="821d17cd9a58cc7a071dff1a0f3246c64b117a24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bsRole&lt;/code&gt; has been removed from all components. Components now communicate via context to allow intermediate nesting of child components</source>
          <target state="translated">&lt;code&gt;bsRole&lt;/code&gt; 이 모든 구성 요소에서 제거되었습니다. 구성 요소는 이제 컨텍스트를 통해 통신하여 자식 구성 요소의 중간 중첩을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="7d3650da917fff717b522a4af0a2bfe07b176959" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bsStyle&lt;/code&gt; -&amp;gt; &lt;code&gt;variant&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bsStyle&lt;/code&gt; -&amp;gt; &lt;code&gt;variant&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a369b56b4ae16c0d7cd639c4ddd17b4d8dffe66d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bsStyle&lt;/code&gt; renamed to &lt;code&gt;variant&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bsStyle&lt;/code&gt; 이 &lt;code&gt;variant&lt;/code&gt; 이름이 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="c754ae0b1d58446c62b3357d908226ce1e2fffa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;componentClass&lt;/code&gt; -&amp;gt; &lt;code&gt;as&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;componentClass&lt;/code&gt; -&amp;gt; &lt;code&gt;as&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d9a70291b7c42b08b74a4566506740171a65f063" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;divider&lt;/code&gt; has been split out into &lt;code&gt;Dropdown.Divider&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;divider&lt;/code&gt; 이 &lt;code&gt;Dropdown.Divider&lt;/code&gt; 으로 분할되었습니다.</target>
        </trans-unit>
        <trans-unit id="cce5e96ae9cad5cd812d1dc2fc5dae947753c70f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; | &lt;code&gt;true&lt;/code&gt; | &lt;code&gt;'keyboard'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; | &lt;code&gt;true&lt;/code&gt; | &lt;code&gt;'keyboard'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="82e849bfda1305878bd7175d39c2b5280f1fe93f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;header&lt;/code&gt; has been split out into &lt;code&gt;Dropdown.Header&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;header&lt;/code&gt; 가 &lt;code&gt;Dropdown.Header&lt;/code&gt; 로 분할되었습니다.</target>
        </trans-unit>
        <trans-unit id="95eb03ce697e8d240fd77da7b9f586dfb2dd142c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;href&lt;/code&gt; attribute for the inner &lt;code&gt;a&lt;/code&gt; element</source>
          <target state="translated">&lt;code&gt;href&lt;/code&gt; 내부 &lt;code&gt;a&lt;/code&gt; 요소에 대한 href 속성</target>
        </trans-unit>
        <trans-unit id="78adcb46a55ec9106746f5540b1068ed81b2e8df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Accordion from 'react-bootstrap/Accordion'&lt;/code&gt;Copy import code for the Accordion component</source>
          <target state="translated">&lt;code&gt;import Accordion from 'react-bootstrap/Accordion'&lt;/code&gt; 에서 Accordion 가져 오기 Accordion 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="bd9a6b2ebb333acb2a2dd5885716d06381a4e187" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Alert from 'react-bootstrap/Alert'&lt;/code&gt;Copy import code for the Alert component</source>
          <target state="translated">&lt;code&gt;import Alert from 'react-bootstrap/Alert'&lt;/code&gt; 에서 경고 가져 오기 경고 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="fc6e26b48ea8d53662103c64fdfc31221370f471" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Badge from 'react-bootstrap/Badge'&lt;/code&gt;Copy import code for the Badge component</source>
          <target state="translated">&lt;code&gt;import Badge from 'react-bootstrap/Badge'&lt;/code&gt; 에서 배지 가져 오기 배지 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="35addd4cf4abc4979eb704b13f57733a22f3f85c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Breadcrumb from 'react-bootstrap/Breadcrumb'&lt;/code&gt;Copy import code for the Breadcrumb component</source>
          <target state="translated">&lt;code&gt;import Breadcrumb from 'react-bootstrap/Breadcrumb'&lt;/code&gt; 에서 Breadcrumb 가져 오기 Breadcrumb 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="52a75ced2251a146e2a96ce1f540569a05e93eb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Button from 'react-bootstrap/Button'&lt;/code&gt;Copy import code for the Button component</source>
          <target state="translated">&lt;code&gt;import Button from 'react-bootstrap/Button'&lt;/code&gt; 에서 버튼 가져 오기 버튼 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="a9640776d3838b3d85baf03fa799ccc01f249569" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import ButtonGroup from 'react-bootstrap/ButtonGroup'&lt;/code&gt;Copy import code for the ButtonGroup component</source>
          <target state="translated">&lt;code&gt;import ButtonGroup from 'react-bootstrap/ButtonGroup'&lt;/code&gt; 에서 ButtonGroup 가져 오기 ButtonGroup 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="7031c8f32535fb9831fdec5bf22d0a5492dcc1e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import ButtonToolbar from 'react-bootstrap/ButtonToolbar'&lt;/code&gt;Copy import code for the ButtonToolbar component</source>
          <target state="translated">&lt;code&gt;import ButtonToolbar from 'react-bootstrap/ButtonToolbar'&lt;/code&gt; 에서 ButtonToolbar 가져 오기 ButtonToolbar 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="81fb0db93faa4a9d4d2e54394e9c33832b8d802b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Card from 'react-bootstrap/Card'&lt;/code&gt;Copy import code for the Card component</source>
          <target state="translated">&lt;code&gt;import Card from 'react-bootstrap/Card'&lt;/code&gt; 에서 카드 가져 오기 카드 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="9824d7c40ac186507c5b3162e84a2267f6127efe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import CardColumns from 'react-bootstrap/CardColumns'&lt;/code&gt;Copy import code for the CardColumns component</source>
          <target state="translated">&lt;code&gt;import CardColumns from 'react-bootstrap/CardColumns'&lt;/code&gt; 에서 CardColumns 가져 오기 CardColumns 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="49721a4ed734e2b4e68d710c3b1ec79c88370f7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import CardDeck from 'react-bootstrap/CardDeck'&lt;/code&gt;Copy import code for the CardDeck component</source>
          <target state="translated">&lt;code&gt;import CardDeck from 'react-bootstrap/CardDeck'&lt;/code&gt; 에서 CardDeck 가져 오기 CardDeck 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="3ffe1a98933c7048224970886b735249344f4cb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import CardGroup from 'react-bootstrap/CardGroup'&lt;/code&gt;Copy import code for the CardGroup component</source>
          <target state="translated">&lt;code&gt;import CardGroup from 'react-bootstrap/CardGroup'&lt;/code&gt; 에서 CardGroup 가져 오기 CardGroup 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="22d23df65532bd226eff2c9301769fb3b566234e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Carousel from 'react-bootstrap/Carousel'&lt;/code&gt;Copy import code for the Carousel component</source>
          <target state="translated">&lt;code&gt;import Carousel from 'react-bootstrap/Carousel'&lt;/code&gt; 에서 Carousel 가져 오기 Carousel 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="fa2fd729d6d9fe04fed7bfc7f84a849282020fff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Col from 'react-bootstrap/Col'&lt;/code&gt;Copy import code for the Col component</source>
          <target state="translated">&lt;code&gt;import Col from 'react-bootstrap/Col'&lt;/code&gt; 에서 Col 가져 오기 Col 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="2f12f912f45c6785c59f31c3328b89dc526480af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Collapse from 'react-bootstrap/Collapse'&lt;/code&gt;Copy import code for the Collapse component</source>
          <target state="translated">&lt;code&gt;import Collapse from 'react-bootstrap/Collapse'&lt;/code&gt; 에서 축소 축소 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="fa4d156cb82ee4fb7e1e2c16aec7fa783368bd0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Container from 'react-bootstrap/Container'&lt;/code&gt;Copy import code for the Container component</source>
          <target state="translated">&lt;code&gt;import Container from 'react-bootstrap/Container'&lt;/code&gt; 에서 컨테이너 가져 오기 컨테이너 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="460560ea927327ef2006fe26fca972ffd4d4a57d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Dropdown from 'react-bootstrap/Dropdown'&lt;/code&gt;Copy import code for the Dropdown component</source>
          <target state="translated">&lt;code&gt;import Dropdown from 'react-bootstrap/Dropdown'&lt;/code&gt; 에서 드롭 다운 가져 오기 드롭 다운 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="f6a57c9f800055e2a28a26982c52d5b6ff9e81d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import DropdownButton from 'react-bootstrap/DropdownButton'&lt;/code&gt;Copy import code for the DropdownButton component</source>
          <target state="translated">&lt;code&gt;import DropdownButton from 'react-bootstrap/DropdownButton'&lt;/code&gt; 에서 DropdownButton 가져 오기 DropdownButton 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="53cfb0aaf0ae1f1b2eec4e2db0024011dd5ff733" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Fade from 'react-bootstrap/Fade'&lt;/code&gt;Copy import code for the Fade component</source>
          <target state="translated">&lt;code&gt;import Fade from 'react-bootstrap/Fade'&lt;/code&gt; 에서 Fade 가져 오기 Fade 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="c5cd105877d294435c496759d7a093e85a1bcaac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Figure from 'react-bootstrap/Figure'&lt;/code&gt;Copy import code for the Figure component</source>
          <target state="translated">&lt;code&gt;import Figure from 'react-bootstrap/Figure'&lt;/code&gt; 에서 Figure 가져 오기 Figure 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="2880b747f49aac672ed015d885b9a3f692e460e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import FigureCaption from 'react-bootstrap/FigureCaption'&lt;/code&gt;Copy import code for the FigureCaption component</source>
          <target state="translated">&lt;code&gt;import FigureCaption from 'react-bootstrap/FigureCaption'&lt;/code&gt; 에서 FigureCaption 가져 오기 FigureCaption 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="5f962bc7236a69fbdd3317082445be230b33fd23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import FigureImage from 'react-bootstrap/FigureImage'&lt;/code&gt;Copy import code for the FigureImage component</source>
          <target state="translated">&lt;code&gt;import FigureImage from 'react-bootstrap/FigureImage'&lt;/code&gt; 에서 FigureImage 가져 오기 FigureImage 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="39c136edfde27df7d7644e092141e348826d6d8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Form from 'react-bootstrap/Form'&lt;/code&gt;Copy import code for the Form component</source>
          <target state="translated">&lt;code&gt;import Form from 'react-bootstrap/Form'&lt;/code&gt; 에서 양식 가져 오기 양식 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="a55e4f28fb067ff79dc6ac57c77d2e8a29bfb333" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import FormCheck from 'react-bootstrap/FormCheck'&lt;/code&gt;Copy import code for the FormCheck component</source>
          <target state="translated">&lt;code&gt;import FormCheck from 'react-bootstrap/FormCheck'&lt;/code&gt; 에서 FormCheck 가져 오기 FormCheck 컴포넌트의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="0089b5ac8f3b79e47116dc88d9f5545592b1b056" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import FormControl from 'react-bootstrap/FormControl'&lt;/code&gt;Copy import code for the FormControl component</source>
          <target state="translated">&lt;code&gt;import FormControl from 'react-bootstrap/FormControl'&lt;/code&gt; 에서 FormControl 가져 오기 FormControl 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="edc905377552da07bffa34065ac7ea67c451cd8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import FormFile from 'react-bootstrap/FormFile'&lt;/code&gt;Copy import code for the FormFile component</source>
          <target state="translated">&lt;code&gt;import FormFile from 'react-bootstrap/FormFile'&lt;/code&gt; 에서 FormFile 가져 오기 FormFile 컴포넌트의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="669968b581fe9992aca2b3b31f26a13bc58bbeab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Image from 'react-bootstrap/Image'&lt;/code&gt;Copy import code for the Image component</source>
          <target state="translated">&lt;code&gt;import Image from 'react-bootstrap/Image'&lt;/code&gt; 에서 이미지 가져 오기 이미지 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="5e41bf5a0c25d3018b0e9116e0f15cbc6599c434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import InputGroup from 'react-bootstrap/InputGroup'&lt;/code&gt;Copy import code for the InputGroup component</source>
          <target state="translated">&lt;code&gt;import InputGroup from 'react-bootstrap/InputGroup'&lt;/code&gt; 에서 InputGroup 가져 오기 InputGroup 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="ee3facf5c113e63d43ff6cc9672a92554f58cdde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Jumbotron from 'react-bootstrap/Jumbotron'&lt;/code&gt;Copy import code for the Jumbotron component</source>
          <target state="translated">&lt;code&gt;import Jumbotron from 'react-bootstrap/Jumbotron'&lt;/code&gt; 에서 Jumbotron 가져 오기 Jumbotron 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="794440aabef5d4b1a6524c5d63e9242d4f71e762" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import ListGroup from 'react-bootstrap/ListGroup'&lt;/code&gt;Copy import code for the ListGroup component</source>
          <target state="translated">&lt;code&gt;import ListGroup from 'react-bootstrap/ListGroup'&lt;/code&gt; 에서 ListGroup 가져 오기 ListGroup 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="e28a73d23bab8a6af801713e6f0b1ba316c76501" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Media from 'react-bootstrap/Media'&lt;/code&gt;Copy import code for the Media component</source>
          <target state="translated">&lt;code&gt;import Media from 'react-bootstrap/Media'&lt;/code&gt; 에서 미디어 가져 오기 미디어 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="d615e24d8fd6b446d93ac2b23c37d1917eccf27b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Modal from 'react-bootstrap/Modal'&lt;/code&gt;Copy import code for the Modal component</source>
          <target state="translated">&lt;code&gt;import Modal from 'react-bootstrap/Modal'&lt;/code&gt; 에서 모달 가져 오기 모달 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="cf53b48db9cd8ed51f1507a83adf87557255602f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import ModalBody from 'react-bootstrap/ModalBody'&lt;/code&gt;Copy import code for the ModalBody component</source>
          <target state="translated">&lt;code&gt;import ModalBody from 'react-bootstrap/ModalBody'&lt;/code&gt; 에서 ModalBody 가져 오기 ModalBody 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="2296c917a57e25b653961e7ac929a88f8dadbe86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import ModalDialog from 'react-bootstrap/ModalDialog'&lt;/code&gt;Copy import code for the ModalDialog component</source>
          <target state="translated">&lt;code&gt;import ModalDialog from 'react-bootstrap/ModalDialog'&lt;/code&gt; 에서 ModalDialog 가져 오기 ModalDialog 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="948f7d27f021dc51a5a912969b9baaf98ab18537" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import ModalFooter from 'react-bootstrap/ModalFooter'&lt;/code&gt;Copy import code for the ModalFooter component</source>
          <target state="translated">&lt;code&gt;import ModalFooter from 'react-bootstrap/ModalFooter'&lt;/code&gt; 에서 ModalFooter 가져 오기 ModalFooter 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="8d1e8505fa6ddaf0288eaa39563e5f0611f8ded9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import ModalHeader from 'react-bootstrap/ModalHeader'&lt;/code&gt;Copy import code for the ModalHeader component</source>
          <target state="translated">&lt;code&gt;import ModalHeader from 'react-bootstrap/ModalHeader'&lt;/code&gt; 에서 ModalHeader 가져 오기 ModalHeader 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="edd6a7a84112ca135f64e869f717d8e9deeede16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import ModalTitle from 'react-bootstrap/ModalTitle'&lt;/code&gt;Copy import code for the ModalTitle component</source>
          <target state="translated">&lt;code&gt;import ModalTitle from 'react-bootstrap/ModalTitle'&lt;/code&gt; 에서 ModalTitle 가져 오기 ModalTitle 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="49e232799ef5db3a989069a5692bae0601e61369" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Nav from 'react-bootstrap/Nav'&lt;/code&gt;Copy import code for the Nav component</source>
          <target state="translated">&lt;code&gt;import Nav from 'react-bootstrap/Nav'&lt;/code&gt; 에서 Nav 가져 오기 Nav 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="b947128632452a4d15f8e155e521bec49023878e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import NavDropdown from 'react-bootstrap/NavDropdown'&lt;/code&gt;Copy import code for the NavDropdown component</source>
          <target state="translated">&lt;code&gt;import NavDropdown from 'react-bootstrap/NavDropdown'&lt;/code&gt; 에서 NavDropdown 가져 오기 NavDropdown 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="166b40b0fdb48b682780a097982961fd25924361" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Navbar from 'react-bootstrap/Navbar'&lt;/code&gt;Copy import code for the Navbar component</source>
          <target state="translated">&lt;code&gt;import Navbar from 'react-bootstrap/Navbar'&lt;/code&gt; 에서 Navbar 가져 오기 Navbar 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="d7deb9d2d0488f9ba3b71c316a59612640a76992" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Overlay from 'react-bootstrap/Overlay'&lt;/code&gt;Copy import code for the Overlay component</source>
          <target state="translated">&lt;code&gt;import Overlay from 'react-bootstrap/Overlay'&lt;/code&gt; 에서 오버레이 가져 오기 오버레이 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="a8dc164e312e925f56a9d3e87ac30159e928ceb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import OverlayTrigger from 'react-bootstrap/OverlayTrigger'&lt;/code&gt;Copy import code for the OverlayTrigger component</source>
          <target state="translated">&lt;code&gt;import OverlayTrigger from 'react-bootstrap/OverlayTrigger'&lt;/code&gt; 에서 OverlayTrigger 가져 오기 OverlayTrigger 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="05b823faf3bde25a30dd07db4a184c4889e35e8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import PageItem from 'react-bootstrap/PageItem'&lt;/code&gt;Copy import code for the PageItem component</source>
          <target state="translated">&lt;code&gt;import PageItem from 'react-bootstrap/PageItem'&lt;/code&gt; 에서 PageItem 가져 오기 PageItem 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="c45fbcc92779f31bde78e8960a1872ec70799bc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Pagination from 'react-bootstrap/Pagination'&lt;/code&gt;Copy import code for the Pagination component</source>
          <target state="translated">&lt;code&gt;import Pagination from 'react-bootstrap/Pagination'&lt;/code&gt; 에서 페이지 매김 가져 오기 페이지 매김 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="f8946dae14b6fd87d910a2b453d22de94e0bc44b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Popover from 'react-bootstrap/Popover'&lt;/code&gt;Copy import code for the Popover component</source>
          <target state="translated">&lt;code&gt;import Popover from 'react-bootstrap/Popover'&lt;/code&gt; 에서 Popover 가져 오기 Popover 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="07b27e429c8c98a91718b1bf60ecc02cfb0482c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import PopoverContent from 'react-bootstrap/PopoverContent'&lt;/code&gt;Copy import code for the PopoverContent component</source>
          <target state="translated">&lt;code&gt;import PopoverContent from 'react-bootstrap/PopoverContent'&lt;/code&gt; 에서 PopoverContent 가져 오기 PopoverContent 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="f2a5b137bd6380e0d1610aa7b25a4bf5f6b05e8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import PopoverTitle from 'react-bootstrap/PopoverTitle'&lt;/code&gt;Copy import code for the PopoverTitle component</source>
          <target state="translated">&lt;code&gt;import PopoverTitle from 'react-bootstrap/PopoverTitle'&lt;/code&gt; 에서 PopoverTitle 가져 오기 PopoverTitle 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="a6c98bbc411f0e1061569de6afea7f926fe3fb68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import ProgressBar from 'react-bootstrap/ProgressBar'&lt;/code&gt;Copy import code for the ProgressBar component</source>
          <target state="translated">&lt;code&gt;import ProgressBar from 'react-bootstrap/ProgressBar'&lt;/code&gt; 에서 ProgressBar 가져 오기 ProgressBar 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="8310fc7c47e1d0b1344d1c2a01dccd335ef9c1d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import ResponsiveEmbed from 'react-bootstrap/ResponsiveEmbed'&lt;/code&gt;Copy import code for the ResponsiveEmbed component</source>
          <target state="translated">&lt;code&gt;import ResponsiveEmbed from 'react-bootstrap/ResponsiveEmbed'&lt;/code&gt; 에서 ResponsiveEmbed 가져 오기 ResponsiveEmbed 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="0adc4e2d1a08c5ed48177aae616f506537d16f1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Row from 'react-bootstrap/Row'&lt;/code&gt;Copy import code for the Row component</source>
          <target state="translated">&lt;code&gt;import Row from 'react-bootstrap/Row'&lt;/code&gt; 에서 행 가져 오기 행 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="ef0a6ec98aa9fa5605eed0e0e18a100770139528" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Spinner from 'react-bootstrap/Spinner'&lt;/code&gt;Copy import code for the Spinner component</source>
          <target state="translated">&lt;code&gt;import Spinner from 'react-bootstrap/Spinner'&lt;/code&gt; 에서 Spinner 가져 오기 Spinner 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="96b89b3400c42e7e9d60438304e49198d6e696d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import SplitButton from 'react-bootstrap/SplitButton'&lt;/code&gt;Copy import code for the SplitButton component</source>
          <target state="translated">&lt;code&gt;import SplitButton from 'react-bootstrap/SplitButton'&lt;/code&gt; 에서 SplitButton 가져 오기 SplitButton 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="2db3321152cfb71a01e02c9a61466aa7627be9bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Tab from 'react-bootstrap/Tab'&lt;/code&gt;Copy import code for the Tab component</source>
          <target state="translated">&lt;code&gt;import Tab from 'react-bootstrap/Tab'&lt;/code&gt; 에서 탭 가져 오기 탭 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="3c1b65339a00f338199b77a1d3f288958abfaeb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import TabContainer from 'react-bootstrap/TabContainer'&lt;/code&gt;Copy import code for the TabContainer component</source>
          <target state="translated">&lt;code&gt;import TabContainer from 'react-bootstrap/TabContainer'&lt;/code&gt; 에서 TabContainer 가져 오기 TabContainer 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="2598ba1777c24e9d90a7a18aa6760964092bc2b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import TabContent from 'react-bootstrap/TabContent'&lt;/code&gt;Copy import code for the TabContent component</source>
          <target state="translated">&lt;code&gt;import TabContent from 'react-bootstrap/TabContent'&lt;/code&gt; 에서 TabContent 가져 오기 TabContent 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="2b97586633b99374a737236fad628cc8292c98f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import TabPane from 'react-bootstrap/TabPane'&lt;/code&gt;Copy import code for the TabPane component</source>
          <target state="translated">&lt;code&gt;import TabPane from 'react-bootstrap/TabPane'&lt;/code&gt; 에서 TabPane 가져 오기 TabPane 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="bcd407030d5334d8b2f17b906b6d8b4bfe79ea9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Table from 'react-bootstrap/Table'&lt;/code&gt;Copy import code for the Table component</source>
          <target state="translated">&lt;code&gt;import Table from 'react-bootstrap/Table'&lt;/code&gt; 에서 테이블 가져 오기 테이블 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="ecf4e12fa29d26f15d6f752fa325952c16120024" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Tabs from 'react-bootstrap/Tabs'&lt;/code&gt;Copy import code for the Tabs component</source>
          <target state="translated">&lt;code&gt;import Tabs from 'react-bootstrap/Tabs'&lt;/code&gt; 에서 탭 가져 오기 탭 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="ef0c2f113781b5677e99e613405bef18d79e901a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Toast from 'react-bootstrap/Toast'&lt;/code&gt;Copy import code for the Toast component</source>
          <target state="translated">&lt;code&gt;import Toast from 'react-bootstrap/Toast'&lt;/code&gt; 에서 Toast 가져 오기 Toast 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="d6fe686be24b5f18cb7e1e49765cf5fad7eac195" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import ToastBody from 'react-bootstrap/ToastBody'&lt;/code&gt;Copy import code for the ToastBody component</source>
          <target state="translated">&lt;code&gt;import ToastBody from 'react-bootstrap/ToastBody'&lt;/code&gt; 에서 ToastBody 가져 오기 ToastBody 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="13f317338fc992000ca94a453ba7748ee5deb0fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import ToastHeader from 'react-bootstrap/ToastHeader'&lt;/code&gt;Copy import code for the ToastHeader component</source>
          <target state="translated">&lt;code&gt;import ToastHeader from 'react-bootstrap/ToastHeader'&lt;/code&gt; 에서 ToastHeader 가져 오기 ToastHeader 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="d0f6af456262129ab89dd8d0a4d9de5b838463fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import ToggleButton from 'react-bootstrap/ToggleButton'&lt;/code&gt;Copy import code for the ToggleButton component</source>
          <target state="translated">&lt;code&gt;import ToggleButton from 'react-bootstrap/ToggleButton'&lt;/code&gt; 에서 ToggleButton 가져 오기 ToggleButton 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="b83617fe1aeecb4ea16267937c08e8fcddfa5842" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'&lt;/code&gt;Copy import code for the ToggleButtonGroup component</source>
          <target state="translated">&lt;code&gt;import ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'&lt;/code&gt; 에서 ToggleButtonGroup 가져 오기 ToggleButtonGroup 구성 요소의 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="eaacb06ba0efbd26f0858afa7cf6114631766987" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import Tooltip from 'react-bootstrap/Tooltip'&lt;/code&gt;Copy import code for the Tooltip component</source>
          <target state="translated">&lt;code&gt;import Tooltip from 'react-bootstrap/Tooltip'&lt;/code&gt; 에서 도구 설명 가져 오기 도구 설명 구성 요소에 대한 가져 오기 코드 복사</target>
        </trans-unit>
        <trans-unit id="6c9155d0e29a76d4d02ab47b99f54b67005fe19c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inverse&lt;/code&gt; removed and replaced with &lt;code&gt;variant=&quot;dark&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;inverse&lt;/code&gt; 제거 및 &lt;code&gt;variant=&quot;dark&quot;&lt;/code&gt; 로 대체</target>
        </trans-unit>
        <trans-unit id="b8a5ba13698a5e413a9d4be342fc925d89b503d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;noCaret&lt;/code&gt; is removed because it's not optional with the styles anymore</source>
          <target state="translated">&lt;code&gt;noCaret&lt;/code&gt; 더 이상 스타일에서 선택 사항이 아니기 때문에 noCaret 이 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="4241d15e2b7e2d49cba45992f914ea978a04230f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onDismiss&lt;/code&gt; renamed to &lt;code&gt;onClose&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;onDismiss&lt;/code&gt; 가 onClose 로 이름이 변경되었습니다 &lt;code&gt;onClose&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b409ec7184349929eede5c4eb3c8344bcabe9fac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onToggle&lt;/code&gt; is called with the desired next &lt;code&gt;show&lt;/code&gt;, and generally should be passed back to the &lt;code&gt;show&lt;/code&gt; prop. &lt;code&gt;onToggle&lt;/code&gt; fires &lt;em&gt;after&lt;/em&gt; the configured &lt;code&gt;delay&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;onToggle&lt;/code&gt; 은 원하는 다음 &lt;code&gt;show&lt;/code&gt; 와 함께 호출되며 일반적으로 &lt;code&gt;show&lt;/code&gt; prop에 다시 전달되어야합니다 . &lt;code&gt;onToggle&lt;/code&gt; 은 구성된 &lt;code&gt;delay&lt;/code&gt; &lt;em&gt;후&lt;/em&gt; 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="b4c8a56134955c34244c63c17bb46d077d9e83a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;target&lt;/code&gt; attribute for the inner &lt;code&gt;a&lt;/code&gt; element</source>
          <target state="translated">&lt;code&gt;target&lt;/code&gt; 내부 &lt;code&gt;a&lt;/code&gt; 요소 의 대상 속성</target>
        </trans-unit>
        <trans-unit id="1c2a34ef1e916f8f29a37bef0b2978c0c111e221" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;title&lt;/code&gt; attribute for the inner &lt;code&gt;a&lt;/code&gt; element</source>
          <target state="translated">&lt;code&gt;title&lt;/code&gt; 내부 &lt;code&gt;a&lt;/code&gt; 요소 의 제목 속성</target>
        </trans-unit>
        <trans-unit id="5d0dfc29d033c8b430cae3069e5cb7d02531267e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;title&lt;/code&gt; attribute for the underlying &lt;code&gt;FormCheckLabel&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;title&lt;/code&gt; 기본 &lt;code&gt;FormCheckLabel&lt;/code&gt; 의제목 속성입니다 .</target>
        </trans-unit>
        <trans-unit id="b8ea9a927cb57012e86f373e635c03b6eee0909b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; | &lt;code&gt;&quot;sm&quot;&lt;/code&gt; | &lt;code&gt;&quot;md&quot;&lt;/code&gt; | &lt;code&gt;&quot;lg&quot;&lt;/code&gt; | &lt;code&gt;&quot;xl&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; | &lt;code&gt;&quot;sm&quot;&lt;/code&gt; | &lt;code&gt;&quot;md&quot;&lt;/code&gt; | &lt;code&gt;&quot;lg&quot;&lt;/code&gt; | &lt;code&gt;&quot;xl&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a48b2b8c670b8545d10d76e9727c91ac2feaf01f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; | &lt;code&gt;'sm'&lt;/code&gt; | &lt;code&gt;'md'&lt;/code&gt; | &lt;code&gt;'lg'&lt;/code&gt; | &lt;code&gt;'xl'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; | &lt;code&gt;'sm'&lt;/code&gt; | &lt;code&gt;'md'&lt;/code&gt; | &lt;code&gt;'lg'&lt;/code&gt; | &lt;code&gt;'xl'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ce52df3e9bc29324a345bff52944c41014e3f6f1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;All unknown props are passed through to the &lt;code&gt;Dropdown&lt;/code&gt; component.&lt;/em&gt; Only the Button &lt;code&gt;variant&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt; and &lt;code&gt;bsPrefix&lt;/code&gt; props are passed to the toggle, along with menu-related props are passed to the &lt;code&gt;Dropdown.Menu&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;알려지지 않은 모든 소품은 &lt;code&gt;Dropdown&lt;/code&gt; 구성 요소 로 전달됩니다 . &lt;/em&gt;버튼 &lt;code&gt;variant&lt;/code&gt; , &lt;code&gt;size&lt;/code&gt; 및 &lt;code&gt;bsPrefix&lt;/code&gt; 소품 만 토글에 전달되고 메뉴 관련 소품과 함께 &lt;code&gt;Dropdown.Menu&lt;/code&gt; 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="f95d946479395ad488202dde2673fba1b241e9ea" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;All unknown props are passed through to the &lt;code&gt;Dropdown&lt;/code&gt; component.&lt;/em&gt; The Button &lt;code&gt;variant&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt; and &lt;code&gt;bsPrefix&lt;/code&gt; props are passed to the button and toggle, and menu-related props are passed to the &lt;code&gt;Dropdown.Menu&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;알려지지 않은 모든 소품은 &lt;code&gt;Dropdown&lt;/code&gt; 구성 요소 로 전달됩니다 . &lt;/em&gt;버튼 &lt;code&gt;variant&lt;/code&gt; , &lt;code&gt;size&lt;/code&gt; 및 &lt;code&gt;bsPrefix&lt;/code&gt; 소품은 버튼 및 토글에 전달되고 메뉴 관련 소품은 &lt;code&gt;Dropdown.Menu&lt;/code&gt; 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="34c1afe91f31694e23bf12a71f8b8ecbb148747c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: Bootstrap only partially supports 'width'! You will need to supply your own CSS animation for the &lt;code&gt;.width&lt;/code&gt; CSS class.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;참고 : 부트 스트랩은 '너비'를 부분적으로 만 지원합니다! &lt;code&gt;.width&lt;/code&gt; CSS 클래스에 대해 고유 한 CSS 애니메이션을 제공해야합니다 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f7e071942c85dfe409ae72f8e7545c2600dd2064" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: For custom dropdown components, you will have to pass the &lt;code&gt;rootCloseEvent&lt;/code&gt; to &lt;code&gt;&amp;lt;RootCloseWrapper&amp;gt;&lt;/code&gt; in your custom dropdown menu component (&lt;a href=&quot;https://github.com/react-bootstrap/react-bootstrap/blob/v0.31.5/src/DropdownMenu.js#L115-L119&quot;&gt;similarly to how it is implemented in &lt;code&gt;&amp;lt;Dropdown.Menu&amp;gt;&lt;/code&gt;&lt;/a&gt;).&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;참고 : 사용자 정의 드롭 다운 구성 요소의 경우, 당신은 통과해야합니다 &lt;code&gt;rootCloseEvent&lt;/code&gt; 에 &lt;code&gt;&amp;lt;RootCloseWrapper&amp;gt;&lt;/code&gt; 을 (사용자 정의 드롭 다운 메뉴 구성 요소 &lt;a href=&quot;https://github.com/react-bootstrap/react-bootstrap/blob/v0.31.5/src/DropdownMenu.js#L115-L119&quot;&gt;가 구현되는 방식과 유사하게 &lt;code&gt;&amp;lt;Dropdown.Menu&amp;gt;&lt;/code&gt; &lt;/a&gt; ).&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="650757007ed0b2fc9ee3d022ef30dfb8ab81e646" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: Using responsive alignment will disable Popper usage for positioning.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;참고 : 반응 형 정렬을 사용하면 위치 지정에 Popper 사용이 비활성화됩니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6de78ed25a18ef0e0cd820ccc3fb82f94b292a0b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;see &lt;a href=&quot;#dropdown-menu-props&quot;&gt;DropdownMenu&lt;/a&gt; for more details&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;자세한 내용 은 &lt;a href=&quot;#dropdown-menu-props&quot;&gt;드롭 다운 메뉴&lt;/a&gt; 를 참조하세요.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d162e44f05b88b093628b7920c09649b1909adfc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;see &lt;a href=&quot;#menu-props&quot;&gt;DropdownMenu&lt;/a&gt; for more details&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;자세한 내용 은 &lt;a href=&quot;#menu-props&quot;&gt;드롭 다운 메뉴&lt;/a&gt; 를 참조하세요.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="de3a70de3b18e2ea78499357bc73c0446f3c6f00" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;em&gt;controlled by: &lt;code&gt;onChange&lt;/code&gt;, initial prop: &lt;code&gt;defaultValue&lt;/code&gt;&lt;/em&gt;&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;&lt;em&gt;제어 : &lt;code&gt;onChange&lt;/code&gt; , 초기 소품 : &lt;code&gt;defaultValue&lt;/code&gt; &lt;/em&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b1f36b0a432aee2767a795ca7c5ad239064c7f1d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;em&gt;controlled by: &lt;code&gt;onClose&lt;/code&gt;, initial prop: &lt;code&gt;defaultShow&lt;/code&gt;&lt;/em&gt;&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;&lt;em&gt;제어 : &lt;code&gt;onClose&lt;/code&gt; , 초기 소품 : &lt;code&gt;defaultShow&lt;/code&gt; &lt;/em&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="afb6cdd1b03fd507805825ca439d3a24f627b07b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;em&gt;controlled by: &lt;code&gt;onSelect&lt;/code&gt;, initial prop: &lt;code&gt;defaultActiveindex&lt;/code&gt;&lt;/em&gt;&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;&lt;em&gt;제어 : &lt;code&gt;onSelect&lt;/code&gt; , 초기 소품 : &lt;code&gt;defaultActiveindex&lt;/code&gt; &lt;/em&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3e3195da939cae83a1941f92aafdeb622257810b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;em&gt;controlled by: &lt;code&gt;onSelect&lt;/code&gt;, initial prop: &lt;code&gt;defaultActivekey&lt;/code&gt;&lt;/em&gt;&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;&lt;em&gt;제어 : &lt;code&gt;onSelect&lt;/code&gt; , 초기 소품 : &lt;code&gt;defaultActivekey&lt;/code&gt; &lt;/em&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ef063ea25ea9c6a4a17e4254a960f9b11019401e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;em&gt;controlled by: &lt;code&gt;onToggle&lt;/code&gt;, initial prop: &lt;code&gt;defaultExpanded&lt;/code&gt;&lt;/em&gt;&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;&lt;em&gt;제어 : &lt;code&gt;onToggle&lt;/code&gt; , 초기 소품 : &lt;code&gt;defaultExpanded&lt;/code&gt; &lt;/em&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d3688ae3c568cbc774aeb933fd767f984e187320" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;em&gt;controlled by: &lt;code&gt;onToggle&lt;/code&gt;, initial prop: &lt;code&gt;defaultShow&lt;/code&gt;&lt;/em&gt;&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;&lt;em&gt;제어 : &lt;code&gt;onToggle&lt;/code&gt; , 초기 소품 : &lt;code&gt;defaultShow&lt;/code&gt; &lt;/em&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8e1602685560720fe544fe0c80e25a2f5facabae" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;em&gt;controls &lt;code&gt;`show`&lt;/code&gt;&lt;/em&gt;&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;&lt;em&gt;컨트롤 &lt;code&gt;`show`&lt;/code&gt; &lt;/em&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="95f1711c5ce3f2e62b2ddfa129925b0ac2feceab" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;em&gt;controls &lt;code&gt;activeIndex&lt;/code&gt;&lt;/em&gt;&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;&lt;em&gt; &lt;code&gt;activeIndex&lt;/code&gt; 제어&lt;/em&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="086266017780d3929de9a385679b0a468748337f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;em&gt;controls &lt;code&gt;activeKey&lt;/code&gt;&lt;/em&gt;&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;&lt;em&gt; &lt;code&gt;activeKey&lt;/code&gt; 제어&lt;/em&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ef1e891014d0c28cffb2e0fad8d74ead5b86f04d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;em&gt;controls &lt;code&gt;expanded&lt;/code&gt;&lt;/em&gt;&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;&lt;em&gt;컨트롤 &lt;code&gt;expanded&lt;/code&gt; &lt;/em&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d7f83ace7ac27cdf138ea1c173988c0cd3aa2db7" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;em&gt;controls &lt;code&gt;show&lt;/code&gt;&lt;/em&gt;&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;&lt;em&gt;컨트롤 &lt;code&gt;show&lt;/code&gt; &lt;/em&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="574b9bffb3d8f7924268bde9a024c752b362abaa" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;em&gt;controls &lt;code&gt;value&lt;/code&gt;&lt;/em&gt;&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;&lt;em&gt; &lt;code&gt;value&lt;/code&gt; 통제하다&lt;/em&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2777466607621f9f45fdb6e7d1deca1e166ec112" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; Border Spinner - &lt;code&gt;border&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;테두리 스피너- &lt;code&gt;border&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="472c920636ab40fb85223f6f4a1fd981bc14235b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; Grow Spinner - &lt;code&gt;grow&lt;/code&gt; &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;스피너 성장- &lt;code&gt;grow&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="02b8b1b502041081115c3c231afdaa9bbdae5867" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated: Use align=&quot;right&quot; &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않음 : align = &quot;right&quot;사용 &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bbb9cf08811f10149b5932b9ebb716b4e61d1140" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New to or unfamiliar with flexbox?&lt;/strong&gt;&lt;a href=&quot;https://css-tricks.com/snippets/css/a-guide-to-flexbox/#flexbox-background&quot;&gt;Read this CSS Tricks flexbox guide&lt;/a&gt; for background, terminology, guidelines, and code snippets.</source>
          <target state="translated">&lt;strong&gt;Flexbox가 처음이신가요? &lt;/strong&gt;배경, 용어, 지침 및 코드 스 니펫에 대한 &lt;a href=&quot;https://css-tricks.com/snippets/css/a-guide-to-flexbox/#flexbox-background&quot;&gt;이 CSS 트릭 플렉스 박스 가이드&lt;/a&gt; 를 읽어보세요 .</target>
        </trans-unit>
        <trans-unit id="0d61c30933210a22300f45d4cb946bcee03aff88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Not supported in &amp;lt;= IE11 and other older browsers without a polyfill&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;폴리 필이없는 &amp;lt;= IE11 및 기타 이전 브라우저에서는 지원되지 않습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="752623b38a6ee8f9371a07f7fe9a323811841d31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PLEASE FIRST READ THE UPSTREAM BOOSTRAP MIGRATION GUIDE&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;먼저 UPSTREAM BOOSTRAP 마이그레이션 가이드를 읽으십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="70b6d73abd07ce65d3879880454d4085519590b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pro Tip:&lt;/strong&gt; Using the function form of OverlayTrigger avoids a &lt;code&gt;React.findDOMNode&lt;/code&gt; call, for those trying to be strict mode compliant.</source>
          <target state="translated">&lt;strong&gt;프로 팁 :&lt;/strong&gt; OverlayTrigger의 함수 형식을 사용하면 엄격 모드를 준수하려는 사람들을 위해 &lt;code&gt;React.findDOMNode&lt;/code&gt; 호출을 피할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2fa746610b78a129ad486cc47a2c66f06f68ecd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Rebuilt&lt;/strong&gt; for React.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;React를 위해 &lt;strong&gt;다시 빌드&lt;/strong&gt; 되었습니다.</target>
        </trans-unit>
        <trans-unit id="8250f5c00609f05b34f3edbafe1cb5dbbf088228" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Required if &lt;code&gt;type&lt;/code&gt; is set to &lt;code&gt;'radio'&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;type&lt;/code&gt; 이 &lt;code&gt;'radio'&lt;/code&gt; 설정된 경우 필수&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bf81798d5e59ce971099464de1a13375d06b70a8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&amp;lt;CardHeader&amp;gt;&lt;/code&gt; can be styled by passing a heading element through the &lt;code&gt;&amp;lt;as&amp;gt;&lt;/code&gt; prop</source>
          <target state="translated">&lt;code&gt;&amp;lt;CardHeader&amp;gt;&lt;/code&gt; 관통 제목 소자를 통과시킴으로써 스타일 수 &lt;code&gt;&amp;lt;as&amp;gt;&lt;/code&gt; 소품</target>
        </trans-unit>
        <trans-unit id="ab1fb8b2dd91543890da21f18af8371666c52d62" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;react-transition-group&lt;/code&gt; Transition component used to animate the Toast on dismissal.</source>
          <target state="translated">A는 &lt;code&gt;react-transition-group&lt;/code&gt; 기각에 토스트 애니메이션을 사용 전이 성분.</target>
        </trans-unit>
        <trans-unit id="650adf566fe53b41d0ed8dcbc4703cad85e623fa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;type&lt;/code&gt; passed to the non-toggle Button</source>
          <target state="translated">비토 글 버튼에 전달 된 &lt;code&gt;type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d65eacd1825e7a729e2a8d7e7cbbb3bfc019d9b8" translate="yes" xml:space="preserve">
          <source>A Callback fired when the close button is clicked.</source>
          <target state="translated">닫기 버튼을 클릭하면 콜백이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="9db56cbdec1afc282f95242042c177cac9faefe7" translate="yes" xml:space="preserve">
          <source>A Callback fired when the close button is clicked. If used directly inside a Modal component, the onHide will automatically be propagated up to the parent Modal &lt;code&gt;onHide&lt;/code&gt;.</source>
          <target state="translated">닫기 버튼을 클릭하면 콜백이 시작됩니다. Modal 컴포넌트 내부에서 직접 사용되는 경우 onHide는 상위 Modal &lt;code&gt;onHide&lt;/code&gt; 까지 자동으로 전파됩니다 .</target>
        </trans-unit>
        <trans-unit id="5d444af11e965c59d63101220e2e7132f34b6645" translate="yes" xml:space="preserve">
          <source>A Component type that provides the modal content Markup. This is a useful prop when you want to use your own styles and markup to create a custom modal component.</source>
          <target state="translated">모달 콘텐츠 마크 업을 제공하는 구성 요소 유형입니다. 사용자 지정 모달 구성 요소를 만들기 위해 고유 한 스타일과 마크 업을 사용하려는 경우 유용한 소품입니다.</target>
        </trans-unit>
        <trans-unit id="e852bfec7fd6a6b87a5cb0bf55e1c7137c673c00" translate="yes" xml:space="preserve">
          <source>A HTML id attribute, necessary for proper form accessibility.</source>
          <target state="translated">적절한 양식 접근성에 필요한 HTML id 속성입니다.</target>
        </trans-unit>
        <trans-unit id="68037c9d8c659d4d4129ae41811d5726941b57e2" translate="yes" xml:space="preserve">
          <source>A HTML id attribute, necessary for proper form accessibility. An id is recommended for allowing label clicks to toggle the check control.</source>
          <target state="translated">적절한 양식 접근성에 필요한 HTML id 속성입니다. 라벨 클릭으로 체크 컨트롤을 전환 할 수 있도록 ID를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="a8a176cd962edfe08196ff7ea6f3c9fd238e1e2a" translate="yes" xml:space="preserve">
          <source>A Modal can also be without an animation. For that set the &quot;animation&quot; prop to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">모달은 애니메이션이 없을 수도 있습니다. 이를 위해 &quot;animation&quot;prop을 &lt;code&gt;false&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="249c532b1cfffca1a4969a7d6a596db6e39c13b8" translate="yes" xml:space="preserve">
          <source>A ModalManager instance used to track and manage the state of open Modals. Useful when customizing how modals interact within a container</source>
          <target state="translated">열린 모달의 상태를 추적하고 관리하는 데 사용되는 ModalManager 인스턴스입니다. 모달이 컨테이너 내에서 상호 작용하는 방식을 사용자 지정할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="89af977cd05ff23fed491b8e2dbf9f77225c60de" translate="yes" xml:space="preserve">
          <source>A Popper.js config object passed to the the underlying popper instance.</source>
          <target state="translated">기본 popper 인스턴스에 전달 된 Popper.js 구성 개체입니다.</target>
        </trans-unit>
        <trans-unit id="24997a913490a5788f092891e5603babccde9f0f" translate="yes" xml:space="preserve">
          <source>A Simple React Component</source>
          <target state="translated">간단한 React 구성 요소</target>
        </trans-unit>
        <trans-unit id="67cae3824dfcff9fd69e63f51f945754d3f95cb7" translate="yes" xml:space="preserve">
          <source>A Toast can also automatically hide after X milliseconds. For that, use the &lt;code&gt;autohide&lt;/code&gt; prop in combination with &lt;code&gt;delay&lt;/code&gt; the prop to sepecify the delay. But be aware, that it will only trigger the &lt;code&gt;onClose&lt;/code&gt; function, you have to set manually the show property.</source>
          <target state="translated">토스트는 X 밀리 초 후에 자동으로 숨길 수도 있습니다. 이 경우, 사용하는 &lt;code&gt;autohide&lt;/code&gt; 와 함께 소품을 &lt;code&gt;delay&lt;/code&gt; 지연을 sepecify하는 소품. 그러나 이는 &lt;code&gt;onClose&lt;/code&gt; 함수 만 트리거 하므로 show 속성을 수동으로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="685c03d47455f3f6700e4226fd044df291cb60b3" translate="yes" xml:space="preserve">
          <source>A callback fired when a NavItem is selected.</source>
          <target state="translated">NavItem이 선택 될 때 발생하는 콜백입니다.</target>
        </trans-unit>
        <trans-unit id="a4f8151caa0abde613a2d99730854129bda3490d" translate="yes" xml:space="preserve">
          <source>A callback fired when a descendant of a child &lt;code&gt;&amp;lt;Nav&amp;gt;&lt;/code&gt; is selected. Should be used to execute complex closing or other miscellaneous actions desired after selecting a descendant of &lt;code&gt;&amp;lt;Nav&amp;gt;&lt;/code&gt;. Does nothing if no &lt;code&gt;&amp;lt;Nav&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;Nav&amp;gt;&lt;/code&gt; descendants exist. The callback is called with an eventKey, which is a prop from the selected &lt;code&gt;&amp;lt;Nav&amp;gt;&lt;/code&gt; descendant, and an event.</source>
          <target state="translated">하위 &lt;code&gt;&amp;lt;Nav&amp;gt;&lt;/code&gt; 의 하위 항목 이 선택 될 때 발생하는 콜백 입니다. &lt;code&gt;&amp;lt;Nav&amp;gt;&lt;/code&gt; 의 하위 항목을 선택한 후 복잡한 닫기 또는 기타 원하는 기타 작업을 실행하는 데 사용해야합니다 . &lt;code&gt;&amp;lt;Nav&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;Nav&amp;gt;&lt;/code&gt; 하위 항목이 없으면 아무 작업도 수행하지 않습니다. 콜백은 선택된 &lt;code&gt;&amp;lt;Nav&amp;gt;&lt;/code&gt; 자손 의 prop 인 eventKey와 이벤트와 함께 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="deb8d33e3c686e59359fbae6d049d777ad4d45e7" translate="yes" xml:space="preserve">
          <source>A callback fired when a menu item is selected.</source>
          <target state="translated">메뉴 항목이 선택되면 발생하는 콜백입니다.</target>
        </trans-unit>
        <trans-unit id="6f848983db0cb7694afc3ba229a3094c17750ff6" translate="yes" xml:space="preserve">
          <source>A callback fired when a tab is selected.</source>
          <target state="translated">탭이 선택되면 실행되는 콜백입니다.</target>
        </trans-unit>
        <trans-unit id="2fc9afaaad5def716ae2ad636cea0acc324b7429" translate="yes" xml:space="preserve">
          <source>A callback fired when the &lt;code&gt;&amp;lt;Navbar&amp;gt;&lt;/code&gt; body collapses or expands. Fired when a &lt;code&gt;&amp;lt;Navbar.Toggle&amp;gt;&lt;/code&gt; is clicked and called with the new &lt;code&gt;expanded&lt;/code&gt; boolean value.</source>
          <target state="translated">&lt;code&gt;&amp;lt;Navbar&amp;gt;&lt;/code&gt; 본문이 축소되거나 확장 될 때 실행되는 콜백 입니다. 때 해고 &lt;code&gt;&amp;lt;Navbar.Toggle&amp;gt;&lt;/code&gt; 를 클릭하고 새로운 불려 &lt;code&gt;expanded&lt;/code&gt; 부울 값입니다.</target>
        </trans-unit>
        <trans-unit id="0e0726f5b431699e2d0cdbacc572dafa91e5dad5" translate="yes" xml:space="preserve">
          <source>A callback fired when the &lt;code&gt;NavLink&lt;/code&gt; is selected.</source>
          <target state="translated">&lt;code&gt;NavLink&lt;/code&gt; 가 선택 되면 실행되는 콜백 입니다.</target>
        </trans-unit>
        <trans-unit id="a05bf77e22725f5442a19a77118ed095c58aafd1" translate="yes" xml:space="preserve">
          <source>A callback fired when the &lt;code&gt;value&lt;/code&gt; prop changes</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 소품이 변경 되면 실행되는 콜백</target>
        </trans-unit>
        <trans-unit id="17080f8801e083e099e45d2a522400ef3c3534c2" translate="yes" xml:space="preserve">
          <source>A callback fired when the Dropdown wishes to change visibility. Called with the requested &lt;code&gt;show&lt;/code&gt; value, the DOM event, and the source that fired it: &lt;code&gt;'click'&lt;/code&gt;,&lt;code&gt;'keydown'&lt;/code&gt;,&lt;code&gt;'rootClose'&lt;/code&gt;, or &lt;code&gt;'select'&lt;/code&gt;.</source>
          <target state="translated">드롭 다운이 가시성을 변경하려고 할 때 발생하는 콜백입니다. 요청 된 &lt;code&gt;show&lt;/code&gt; 값, DOM 이벤트 및이를 발생시킨 소스 ( &lt;code&gt;'click'&lt;/code&gt; , &lt;code&gt;'keydown'&lt;/code&gt; , &lt;code&gt;'rootClose'&lt;/code&gt; 또는 &lt;code&gt;'select'&lt;/code&gt; ) 와 함께 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="10f69daaa83b3de41959923362f4c264051f68c2" translate="yes" xml:space="preserve">
          <source>A callback fired when the Modal is opening.</source>
          <target state="translated">모달이 열릴 때 발생하는 콜백입니다.</target>
        </trans-unit>
        <trans-unit id="63ad39901fdf2677d4fd2c30e81b02fb3852e15b" translate="yes" xml:space="preserve">
          <source>A callback fired when the escape key, if specified in &lt;code&gt;keyboard&lt;/code&gt;, is pressed.</source>
          <target state="translated">이스케이프 키 ( &lt;code&gt;keyboard&lt;/code&gt; 에 지정된 경우 )를 누르면 발생하는 콜백 입니다.</target>
        </trans-unit>
        <trans-unit id="2681993f45b24e20763e81ddcc86cda7643f984d" translate="yes" xml:space="preserve">
          <source>A callback fired when the header closeButton or non-static backdrop is clicked. Required if either are specified.</source>
          <target state="translated">헤더 closeButton 또는 비 정적 배경을 클릭하면 실행되는 콜백입니다. 둘 중 하나가 지정된 경우 필수입니다.</target>
        </trans-unit>
        <trans-unit id="eb6d55d518bf1cc057d2a02d974568f1125fc55c" translate="yes" xml:space="preserve">
          <source>A callback fired when the underlying input element changes. This is passed directly to the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; so shares the same signature as a native &lt;code&gt;onChange&lt;/code&gt; event.</source>
          <target state="translated">기본 입력 요소가 변경 될 때 발생하는 콜백입니다. 이것은 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 에 직접 전달 되므로 네이티브 &lt;code&gt;onChange&lt;/code&gt; 이벤트 와 동일한 서명을 공유합니다 .</target>
        </trans-unit>
        <trans-unit id="72e971e5417169c3ab120b34a052028d2eb52502" translate="yes" xml:space="preserve">
          <source>A callback function for when this component is clicked</source>
          <target state="translated">이 컴포넌트를 클릭했을 때의 콜백 함수</target>
        </trans-unit>
        <trans-unit id="c46adacaa2b8e28f39b0c9e6eed40e2b1797fd81" translate="yes" xml:space="preserve">
          <source>A callback invoked by the overlay when it wishes to be hidden. Required if &lt;code&gt;rootClose&lt;/code&gt; is specified.</source>
          <target state="translated">숨김을 원할 때 오버레이에서 호출하는 콜백입니다. &lt;code&gt;rootClose&lt;/code&gt; 가 지정된 경우 필수 입니다.</target>
        </trans-unit>
        <trans-unit id="eb13fcb75060c5e1f27941fcb9298ef3c13c38d9" translate="yes" xml:space="preserve">
          <source>A callback that fires when the user triggers a change in tooltip visibility.</source>
          <target state="translated">사용자가 툴팁 가시성 변경을 트리거 할 때 발생하는 콜백입니다.</target>
        </trans-unit>
        <trans-unit id="07dcdb34a164bc5c591b153dbd638affdb03ec70" translate="yes" xml:space="preserve">
          <source>A component instance, DOM node, or function that returns either. The &lt;code&gt;container&lt;/code&gt; element will have the Overlay appended to it via a React portal.</source>
          <target state="translated">구성 요소 인스턴스, DOM 노드 또는 둘 중 하나를 반환하는 함수입니다. &lt;code&gt;container&lt;/code&gt; 요소는 포털 반작용을 통해 추가 오버레이있을 것이다.</target>
        </trans-unit>
        <trans-unit id="c59eab25a999c4e830e96bfba3b89516b37d5567" translate="yes" xml:space="preserve">
          <source>A component instance, DOM node, or function that returns either. The overlay will be positioned in relation to the &lt;code&gt;target&lt;/code&gt;</source>
          <target state="translated">구성 요소 인스턴스, DOM 노드 또는 둘 중 하나를 반환하는 함수입니다. 오버레이는 &lt;code&gt;target&lt;/code&gt; 을 기준으로 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="3cec7bf14e56c3b909852a3754b9b724b8c348e5" translate="yes" xml:space="preserve">
          <source>A convenience component for simple or general use dropdowns. Renders a &lt;code&gt;Button&lt;/code&gt; toggle and all &lt;code&gt;children&lt;/code&gt; are passed directly to the default &lt;code&gt;Dropdown.Menu&lt;/code&gt;. This component accepts all of &lt;a href=&quot;#dropdown-props&quot;&gt;&lt;code&gt;Dropdown&lt;/code&gt;'s props&lt;/a&gt;.</source>
          <target state="translated">단순 또는 일반 사용 드롭 다운을위한 편리한 구성 요소입니다. &lt;code&gt;Button&lt;/code&gt; 토글을 렌더링 하고 모든 &lt;code&gt;children&lt;/code&gt; 은 기본 &lt;code&gt;Dropdown.Menu&lt;/code&gt; 로 직접 전달됩니다 . 이 컴포넌트는 모든 &lt;a href=&quot;#dropdown-props&quot;&gt; &lt;code&gt;Dropdown&lt;/code&gt; 의 소품을&lt;/a&gt; 받아 들 입니다.</target>
        </trans-unit>
        <trans-unit id="261bd4d2820d20a3d87773f63b09535607a6c0dc" translate="yes" xml:space="preserve">
          <source>A convenience component for simple or general use split button dropdowns. Renders a &lt;code&gt;ButtonGroup&lt;/code&gt; containing a &lt;code&gt;Button&lt;/code&gt; and a &lt;code&gt;Button&lt;/code&gt; toggle for the &lt;code&gt;Dropdown&lt;/code&gt;. All &lt;code&gt;children&lt;/code&gt; are passed directly to the default &lt;code&gt;Dropdown.Menu&lt;/code&gt;. This component accepts all of &lt;a href=&quot;#dropdown-props&quot;&gt;&lt;code&gt;Dropdown&lt;/code&gt;'s props&lt;/a&gt;.</source>
          <target state="translated">단순 또는 일반적인 사용 분할 버튼 드롭 다운을위한 편리한 구성 요소입니다. &lt;code&gt;Dropdown&lt;/code&gt; 에 대한 &lt;code&gt;Button&lt;/code&gt; 및 &lt;code&gt;Button&lt;/code&gt; 토글을 포함 하는 &lt;code&gt;ButtonGroup&lt;/code&gt; 을 렌더링합니다 . 모든 &lt;code&gt;children&lt;/code&gt; 은 기본 &lt;code&gt;Dropdown.Menu&lt;/code&gt; 에 직접 전달됩니다 . 이 컴포넌트는 &lt;a href=&quot;#dropdown-props&quot;&gt; &lt;code&gt;Dropdown&lt;/code&gt; &lt;/a&gt; 의 모든 소품을 받아 들 입니다.</target>
        </trans-unit>
        <trans-unit id="e267a29e68e8b56841baa2915a3e066a36e2caf5" translate="yes" xml:space="preserve">
          <source>A convenience prop for add the &lt;code&gt;text-muted&lt;/code&gt; class, since it's so commonly used here.</source>
          <target state="translated">여기에서 일반적으로 사용되는 &lt;code&gt;text-muted&lt;/code&gt; 클래스 를 추가하는 편리한 소품입니다 .</target>
        </trans-unit>
        <trans-unit id="24db148589833510c3cdd1cac612ad3146a5a048" translate="yes" xml:space="preserve">
          <source>A convenience prop for adding &lt;code&gt;bg-*&lt;/code&gt; utility classes since they are so commonly used here. &lt;code&gt;light&lt;/code&gt; and &lt;code&gt;dark&lt;/code&gt; are common choices but any &lt;code&gt;bg-*&lt;/code&gt; class is supported, including any custom ones you might define.</source>
          <target state="translated">&lt;code&gt;bg-*&lt;/code&gt; 유틸리티 클래스 를 추가하기위한 편리한 소품입니다 . &lt;code&gt;light&lt;/code&gt; 과 &lt;code&gt;dark&lt;/code&gt; 일반적인 선택이지만 어떤 &lt;code&gt;bg-*&lt;/code&gt; 클래스를 정의 할 수 있습니다 사용자 정의 포함한 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="d9be3c448f38d2cf0c961a6eee7c8e694cd18ef7" translate="yes" xml:space="preserve">
          <source>A convenience prop shortcut for adding &lt;code&gt;position-static&lt;/code&gt; to the input, for correct styling when used without an FormCheckLabel</source>
          <target state="translated">FormCheckLabel없이 사용할 때 올바른 스타일링을 위해 입력에 &lt;code&gt;position-static&lt;/code&gt; 을 추가하는 편리한 소품 바로 가기</target>
        </trans-unit>
        <trans-unit id="d666995f2427a4f065086770c09aa94680b0a54d" translate="yes" xml:space="preserve">
          <source>A css class to apply to the Modal dialog DOM node.</source>
          <target state="translated">모달 대화 상자 DOM 노드에 적용 할 css 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="d16f26e1834e5cbe879b4eda99354360f7bc9ee7" translate="yes" xml:space="preserve">
          <source>A custom styled File uploader.</source>
          <target state="translated">맞춤 스타일 파일 업 로더.</target>
        </trans-unit>
        <trans-unit id="f249d2fc7d32835b126193181c5e4405a52ec57b" translate="yes" xml:space="preserve">
          <source>A function that takes an &lt;code&gt;eventKey&lt;/code&gt; and &lt;code&gt;type&lt;/code&gt; and returns a unique id for child tab &lt;code&gt;&amp;lt;NavItem&amp;gt;&lt;/code&gt;s and &lt;code&gt;&amp;lt;TabPane&amp;gt;&lt;/code&gt;s. The function &lt;em&gt;must&lt;/em&gt; be a pure function, meaning it should always return the &lt;em&gt;same&lt;/em&gt; id for the same set of inputs. The default value requires that an &lt;code&gt;id&lt;/code&gt; to be set for the &lt;code&gt;&amp;lt;TabContainer&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;eventKey&lt;/code&gt; 및 &lt;code&gt;type&lt;/code&gt; 을 취하고 하위 탭 &lt;code&gt;&amp;lt;NavItem&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;TabPane&amp;gt;&lt;/code&gt; 의 고유 ID를 반환하는 함수입니다 . 함수 &lt;em&gt;는&lt;/em&gt; 순수 함수 &lt;em&gt;여야&lt;/em&gt; 합니다. 즉 , 동일한 입력 세트에 대해 항상 &lt;em&gt;동일한&lt;/em&gt; ID를 반환해야합니다 . 기본값 을 사용하려면 &lt;code&gt;&amp;lt;TabContainer&amp;gt;&lt;/code&gt; 에 대한 &lt;code&gt;id&lt;/code&gt; 를 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="38c0a7761c2e8ec7e7cd180739daac4123df19cd" translate="yes" xml:space="preserve">
          <source>A key that associates the &lt;code&gt;TabPane&lt;/code&gt; with it's controlling &lt;code&gt;NavLink&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TabPane&lt;/code&gt; 을 연결하는 키는 &lt;code&gt;NavLink&lt;/code&gt; 를 제어 합니다 .</target>
        </trans-unit>
        <trans-unit id="b8201e3af800089c9062dab973305efbc228f96a" translate="yes" xml:space="preserve">
          <source>A key that corresponds to the collapse component that gets triggered when this has been clicked.</source>
          <target state="translated">클릭시 트리거되는 축소 구성 요소에 해당하는 키입니다.</target>
        </trans-unit>
        <trans-unit id="e91d21ed5f67b2a18352240b37b9815d06c3365c" translate="yes" xml:space="preserve">
          <source>A key that corresponds to the toggler that triggers this collapse's expand or collapse.</source>
          <target state="translated">이 축소의 확장 또는 축소를 트리거하는 토글 러에 해당하는 키입니다.</target>
        </trans-unit>
        <trans-unit id="28a12f2cd84134510c8d829d52b4bdc20335fe80" translate="yes" xml:space="preserve">
          <source>A lightweight, flexible component that can optionally extend the entire viewport to showcase key content on your site.</source>
          <target state="translated">선택적으로 전체 뷰포트를 확장하여 사이트에 주요 콘텐츠를 표시 할 수있는 가볍고 유연한 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="8b9c215b220545cb18e75a0e0e1cac28b01c6f45" translate="yes" xml:space="preserve">
          <source>A message to display when the input is in a validation state</source>
          <target state="translated">입력이 유효성 검사 상태 일 때 표시 할 메시지</target>
        </trans-unit>
        <trans-unit id="0a7ab231e83c029f0e1528f7f4ff26ee1c3a5202" translate="yes" xml:space="preserve">
          <source>A millisecond delay amount to show and hide the Overlay once triggered</source>
          <target state="translated">트리거 된 오버레이를 표시하고 숨기는 밀리 초 지연 시간</target>
        </trans-unit>
        <trans-unit id="de2d565ef4687e3f985eaca8dc9d79068822f1c4" translate="yes" xml:space="preserve">
          <source>A modal with header, body, and set of actions in the footer. Use &lt;code&gt;&amp;lt;Modal/&amp;gt;&lt;/code&gt; in combination with other components to show or hide your Modal. The &lt;code&gt;&amp;lt;Modal/&amp;gt;&lt;/code&gt; Component comes with a few convenient &quot;sub components&quot;: &lt;code&gt;&amp;lt;Modal.Header/&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;Modal.Title/&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;Modal.Body/&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;Modal.Footer/&amp;gt;&lt;/code&gt;, which you can use to build the Modal content.</source>
          <target state="translated">바닥 글에 머리글, 본문 및 작업 집합이있는 모달입니다. &lt;code&gt;&amp;lt;Modal/&amp;gt;&lt;/code&gt; 을 표시하거나 숨기려면 다른 구성 요소와 함께 &amp;lt;Modal /&amp;gt; 을 사용하십시오 . &lt;code&gt;&amp;lt;Modal/&amp;gt;&lt;/code&gt; 요소는 몇 가지 편리한 &quot;하위 구성 요소&quot;와 함께 제공 : &lt;code&gt;&amp;lt;Modal.Header/&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;Modal.Title/&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;Modal.Body/&amp;gt;&lt;/code&gt; , 그리고 &lt;code&gt;&amp;lt;Modal.Footer/&amp;gt;&lt;/code&gt; , 당신이 사용할 수있는 모달 콘텐츠를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="042c57e2112fc2e5b59d42db96c690902b5d697c" translate="yes" xml:space="preserve">
          <source>A popover component, like those found in iOS.</source>
          <target state="translated">iOS에서 볼 수있는 것과 같은 팝 오버 구성 요소.</target>
        </trans-unit>
        <trans-unit id="a719298fb4e28d663d6356f18d961a1276dc0bd6" translate="yes" xml:space="preserve">
          <source>A powerful, responsive navigation header, the navbar. Includes support for branding, navigation, and more</source>
          <target state="translated">강력하고 반응이 빠른 탐색 헤더 인 navbar. 브랜딩, 탐색 등에 대한 지원 포함</target>
        </trans-unit>
        <trans-unit id="c6b0c5d46abe86565685a9ad6e50108e28efad46" translate="yes" xml:space="preserve">
          <source>A ref attached to the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element</source>
          <target state="translated">&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 요소에 첨부 된 참조</target>
        </trans-unit>
        <trans-unit id="ec263774ed4aa3e45fdbb845e508fd74f67cead0" translate="yes" xml:space="preserve">
          <source>A responsive navigation header, including support for branding, navigation, and more. Here&amp;rsquo;s an example of all the sub-components included in a responsive light-themed navbar that automatically collapses at the lg (large) breakpoint.</source>
          <target state="translated">브랜딩, 탐색 등에 대한 지원을 포함하는 반응 형 탐색 헤더입니다. 다음은 lg (대형) 중단 점에서 자동으로 축소되는 반응 형 라이트 테마 탐색 모음에 포함 된 모든 하위 구성 요소의 예입니다.</target>
        </trans-unit>
        <trans-unit id="4b52d16296241d549d44f9b943d32743a875e43e" translate="yes" xml:space="preserve">
          <source>A seperate bsPrefix used for custom controls</source>
          <target state="translated">사용자 지정 컨트롤에 사용되는 별도의 bsPrefix</target>
        </trans-unit>
        <trans-unit id="c148973bfabe91ec472a5f82a796c5c0dd3f7273" translate="yes" xml:space="preserve">
          <source>A set of &lt;em&gt;presentational&lt;/em&gt; components for building pagination UI.</source>
          <target state="translated">페이지 매김 UI 구축을위한 &lt;em&gt;프리젠 테이션&lt;/em&gt; 구성 요소 세트입니다 .</target>
        </trans-unit>
        <trans-unit id="760308e3035317e48448e98c007a4827f4551430" translate="yes" xml:space="preserve">
          <source>A set of components for positioning beautiful overlays, tooltips, popovers, and anything else you need.</source>
          <target state="translated">아름다운 오버레이, 툴팁, 팝 오버 및 기타 필요한 항목을 배치하기위한 구성 요소 세트입니다.</target>
        </trans-unit>
        <trans-unit id="4f70bae1cd3d6d6f4a994ab335b8db4c9b3e9ab9" translate="yes" xml:space="preserve">
          <source>A set of popper options and props passed directly to Popper.</source>
          <target state="translated">Popper에 직접 전달되는 popper 옵션 및 소품 세트입니다.</target>
        </trans-unit>
        <trans-unit id="769c35d38a37af15a915cc565c7a482f224b6bd0" translate="yes" xml:space="preserve">
          <source>A simple flexible branding component. Images are supported but will likely require custom styling to work well.</source>
          <target state="translated">단순하고 유연한 브랜딩 구성 요소입니다. 이미지가 지원되지만 제대로 작동하려면 사용자 지정 스타일이 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bea1fe985fe770c15c001a3dd4626649939b9c1f" translate="yes" xml:space="preserve">
          <source>A slideshow component for cycling through elements&amp;mdash;images or slides of text&amp;mdash;like a carousel.</source>
          <target state="translated">캐 러셀과 같은 요소 (이미지 또는 텍스트 슬라이드)를 순환하는 슬라이드 쇼 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="bfd16a84b77bc05bef95ac1bfea5e82037657c88" translate="yes" xml:space="preserve">
          <source>A switch has the markup of a custom checkbox but uses &lt;code&gt;type=&quot;switch&quot;&lt;/code&gt; to render a toggle switch. Switches also support the same customizable children as &lt;code&gt;&amp;lt;FormCheck&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">스위치에는 사용자 정의 확인란의 마크 업이 있지만 &lt;code&gt;type=&quot;switch&quot;&lt;/code&gt; 를 사용하여 토글 스위치를 렌더링합니다. 스위치는 또한 &lt;code&gt;&amp;lt;FormCheck&amp;gt;&lt;/code&gt; 와 동일한 사용자 지정 가능한 자식을 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="83536685cc13aaba0b8b3a29d6c3ce8c4d28e54e" translate="yes" xml:space="preserve">
          <source>A tooltip component for a more stylish alternative to that anchor tag &lt;code&gt;title&lt;/code&gt; attribute.</source>
          <target state="translated">해당 앵커 태그 &lt;code&gt;title&lt;/code&gt; 속성 에 대한보다 세련된 대안을위한 도구 설명 구성 요소입니다 .</target>
        </trans-unit>
        <trans-unit id="dfc45499a6a19d83bc0861ef9d573cc9faec5275" translate="yes" xml:space="preserve">
          <source>A unique identifier for the Component, the &lt;code&gt;eventKey&lt;/code&gt; makes it distinguishable from others in a set. Similar to React's &lt;code&gt;key&lt;/code&gt; prop, in that it only needs to be unique amongst the Components siblings, not globally.</source>
          <target state="translated">구성 요소의 고유 식별자 인 &lt;code&gt;eventKey&lt;/code&gt; 를 사용하면 집합의 다른 식별자 와 구별 할 수 있습니다. React의 &lt;code&gt;key&lt;/code&gt; 소품과 유사하게 전역 적으로가 아니라 구성 요소 형제 사이에서만 고유해야한다는 점입니다.</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="13f2fc1af305be2f49290ba2b85dd109f961052a" translate="yes" xml:space="preserve">
          <source>ARIA</source>
          <target state="translated">ARIA</target>
        </trans-unit>
        <trans-unit id="f24f1930a6b6f87cdf9838c8fbe666968da062ac" translate="yes" xml:space="preserve">
          <source>ARIA label for the nav element &lt;a href=&quot;https://www.w3.org/TR/wai-aria-practices/#breadcrumb&quot;&gt;https://www.w3.org/TR/wai-aria-practices/#breadcrumb&lt;/a&gt;</source>
          <target state="translated">nav 요소의 ARIA 레이블 &lt;a href=&quot;https://www.w3.org/TR/wai-aria-practices/#breadcrumb&quot;&gt;https://www.w3.org/TR/wai-aria-practices/#breadcrumb&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c9cca657f2d3ad5793bb1ef0c84a37c4eb03775e" translate="yes" xml:space="preserve">
          <source>ARIA role for the Nav, in the context of a TabContainer, the default will be set to &quot;tablist&quot;, but can be overridden by the Nav when set explicitly.</source>
          <target state="translated">Nav에 대한 ARIA 역할, TabContainer 컨텍스트에서 기본값은 &quot;tablist&quot;로 설정되지만 명시 적으로 설정된 경우 Nav에 의해 재정의 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca88ffecc09414e2570f07c56031033806617544" translate="yes" xml:space="preserve">
          <source>ARIA role of collapsible element</source>
          <target state="translated">접을 수있는 요소의 ARIA 역할</target>
        </trans-unit>
        <trans-unit id="6b21fb791ac05170893860c248401cd24a59b732" translate="yes" xml:space="preserve">
          <source>About</source>
          <target state="translated">About</target>
        </trans-unit>
        <trans-unit id="d660049bc1f2f54fc0e3f4ace6fa5eb205f2f1e0" translate="yes" xml:space="preserve">
          <source>Accessibility</source>
          <target state="translated">Accessibility</target>
        </trans-unit>
        <trans-unit id="208a37645b0a5a30990da45902f524c20a1e935a" translate="yes" xml:space="preserve">
          <source>Accessible by default</source>
          <target state="translated">기본적으로 액세스 가능</target>
        </trans-unit>
        <trans-unit id="ecfe3fe97ca2d63a3bf20b68dee98cc026735e2e" translate="yes" xml:space="preserve">
          <source>Accessible label for the toggle; the value of &lt;code&gt;title&lt;/code&gt; if not specified.</source>
          <target state="translated">토글에 액세스 할 수있는 레이블입니다. 지정되지 않은 경우 &lt;code&gt;title&lt;/code&gt; 의 값 .</target>
        </trans-unit>
        <trans-unit id="21191a043a6120d9be09860a4004ff1ba6657d82" translate="yes" xml:space="preserve">
          <source>Accordion</source>
          <target state="translated">Accordion</target>
        </trans-unit>
        <trans-unit id="dd9eb1290e692164b2690a518460ce359573e310" translate="yes" xml:space="preserve">
          <source>Accordion.Collapse</source>
          <target state="translated">Accordion.Collapse</target>
        </trans-unit>
        <trans-unit id="94c034891317dde6fddeae42341a6f93a0bbd58d" translate="yes" xml:space="preserve">
          <source>Accordion.Toggle</source>
          <target state="translated">Accordion.Toggle</target>
        </trans-unit>
        <trans-unit id="a483ef71e81a0ac69739d2708c9d40779337b726" translate="yes" xml:space="preserve">
          <source>Accordions provide a way to restrict Card components to only open one at a time.</source>
          <target state="translated">아코디언은 카드 구성 요소를 한 번에 하나씩 만 열도록 제한하는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f0b0a856ec62b727c405f617e00e010a2b993539" translate="yes" xml:space="preserve">
          <source>Accordions use Card components to provide styling of the Accordion components. Use AccordionToggle to provide a button that switches between each AccordionCollapse component.</source>
          <target state="translated">Accordion은 Card 구성 요소를 사용하여 Accordion 구성 요소의 스타일을 제공합니다. AccordionToggle을 사용하여 각 AccordionCollapse 구성 요소 사이를 전환하는 버튼을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ad3471ae96d5191d2f5e3fd24fd3a4bed211c42e" translate="yes" xml:space="preserve">
          <source>Across every breakpoint, use &lt;code&gt;responsive&lt;/code&gt; for horizontally scrolling tables. Responsive tables are wrapped automatically in a &lt;code&gt;div&lt;/code&gt;. The following example has 12 columns that are scrollable horizontally.</source>
          <target state="translated">모든 중단 점에서 가로로 스크롤되는 표에 &lt;code&gt;responsive&lt;/code&gt; 을 사용 합니다. 반응 형 테이블은 &lt;code&gt;div&lt;/code&gt; 에서 자동으로 래핑됩니다 . 다음 예제에는 가로로 스크롤 할 수있는 12 개의 열이 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b5496ed83209f2f55f75a6ea36dc3fb90c12573" translate="yes" xml:space="preserve">
          <source>Actionable items</source>
          <target state="translated">실행 가능한 항목</target>
        </trans-unit>
        <trans-unit id="1a8ef5d3e8affe17fc1d9ff3228db31d1fa24a5e" translate="yes" xml:space="preserve">
          <source>Active items</source>
          <target state="translated">활성 항목</target>
        </trans-unit>
        <trans-unit id="dafbf0cc0477432a074b7d990e0024641e16e1d9" translate="yes" xml:space="preserve">
          <source>Active state</source>
          <target state="translated">활성 상태</target>
        </trans-unit>
        <trans-unit id="06c7f604e3824cd33abe6593e55c6ab1a5cb8a98" translate="yes" xml:space="preserve">
          <source>Add &quot;invalid&quot; validation styles to the control and accompanying label</source>
          <target state="translated">컨트롤 및 동반 레이블에 &quot;잘못된&quot;유효성 검사 스타일 추가</target>
        </trans-unit>
        <trans-unit id="31d1a2f3ffb962574b4c90e323cbfdd7d0b38aed" translate="yes" xml:space="preserve">
          <source>Add &quot;valid&quot; validation styles to the control</source>
          <target state="translated">컨트롤에 &quot;유효한&quot;유효성 검사 스타일 추가</target>
        </trans-unit>
        <trans-unit id="df0a74bf4cef7b3abb68b39844f5a0c7c911c752" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;animated&lt;/code&gt; prop to animate the stripes right to left. Not available in IE9 and below.</source>
          <target state="translated">&lt;code&gt;animated&lt;/code&gt; 소품을 추가 하여 줄무늬를 오른쪽에서 왼쪽으로 애니메이션합니다. IE9 이하에서는 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4e02c0911878d69034614bf0d4eb6372da232a3b" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;label&lt;/code&gt; prop to show a visible percentage. For low percentages, consider adding a min-width to ensure the label's text is fully visible.</source>
          <target state="translated">보이는 비율을 표시하려면 &lt;code&gt;label&lt;/code&gt; 소품을 추가하세요 . 낮은 백분율의 경우 레이블의 텍스트가 완전히 표시되도록 최소 너비를 추가하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="010f0e89b14fb92401120bd76902fad191412eee" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;srOnly&lt;/code&gt; prop to hide the label visually.</source>
          <target state="translated">레이블을 시각적으로 숨기려면 &lt;code&gt;srOnly&lt;/code&gt; 소품을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="202f415f09d1122cb52e0bfa8f5daa855ac06474" translate="yes" xml:space="preserve">
          <source>Add a collapse toggle animation to an element or component.</source>
          <target state="translated">요소 또는 구성 요소에 축소 토글 애니메이션을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="6bae28a959e332161d99b6e47275a438013b6d20" translate="yes" xml:space="preserve">
          <source>Add a fade animation to a child element or component.</source>
          <target state="translated">하위 요소 또는 구성 요소에 페이드 애니메이션을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="597dccd47b07e7b1cfbedb8417d7951eba1a6439" translate="yes" xml:space="preserve">
          <source>Add a header to label sections of actions.</source>
          <target state="translated">작업의 레이블 섹션에 헤더를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="c76d856935dc0c96cf1f84db57a4edc240667a6b" translate="yes" xml:space="preserve">
          <source>Add an optional extra class name to .modal-backdrop It could end up looking like class=&quot;modal-backdrop foo-modal-backdrop in&quot;.</source>
          <target state="translated">선택적인 추가 클래스 이름을 .modal-backdrop에 추가하십시오. 결국 class = &quot;modal-backdrop foo-modal-backdrop in&quot;처럼 보일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eca328e2d92f99346a186f901ffba2c6e28b27a0" translate="yes" xml:space="preserve">
          <source>Add an optional extra class name to .modal-content</source>
          <target state="translated">.modal-content에 선택적 추가 클래스 이름 추가</target>
        </trans-unit>
        <trans-unit id="d51f539e09015eae6256b120e7512619f9cea05e" translate="yes" xml:space="preserve">
          <source>Add any of the below mentioned modifier classes to change the appearance of a badge.</source>
          <target state="translated">배지의 모양을 변경하려면 아래 언급 된 수정 자 클래스를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="781d93e18ee2349b710feb6aaee3f904df4e9486" translate="yes" xml:space="preserve">
          <source>Add dialogs to your site for lightboxes, user notifications, or completely custom content.</source>
          <target state="translated">라이트 박스, 사용자 알림 또는 완전한 사용자 지정 콘텐츠를 위해 사이트에 대화 상자를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="7e85938569423d1522565581f24f05efafbd3819" translate="yes" xml:space="preserve">
          <source>Add some navigation to a card&amp;rsquo;s header (or block) with React Bootstrap&amp;rsquo;s &lt;a href=&quot;../navs/index&quot;&gt;Nav&lt;/a&gt; components.</source>
          <target state="translated">React Bootstrap의 &lt;a href=&quot;../navs/index&quot;&gt;Nav&lt;/a&gt; 구성 요소 를 사용하여 카드의 헤더 (또는 블록)에 탐색을 추가 합니다.</target>
        </trans-unit>
        <trans-unit id="117db0a8f9f855beedaeed46613c918486e48d57" translate="yes" xml:space="preserve">
          <source>Add the &lt;code&gt;disabled&lt;/code&gt; attribute to a &lt;code&gt;&amp;lt;fieldset&amp;gt;&lt;/code&gt; to disable all the controls within.</source>
          <target state="translated">&lt;code&gt;disabled&lt;/code&gt; 속성을 &lt;code&gt;&amp;lt;fieldset&amp;gt;&lt;/code&gt; 에 추가하여 모든 컨트롤을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="00bf2170eaf032dc8ea63ea7f92433c00d277180" translate="yes" xml:space="preserve">
          <source>Add the &lt;code&gt;disabled&lt;/code&gt; boolean attribute on an input to prevent user interactions and make it appear lighter.</source>
          <target state="translated">입력에 &lt;code&gt;disabled&lt;/code&gt; 부울 속성을 추가하여 사용자 상호 작용을 방지하고 더 밝게 표시합니다.</target>
        </trans-unit>
        <trans-unit id="225aff7fcd42fcf0870b079bac919806962c06f5" translate="yes" xml:space="preserve">
          <source>Add the &lt;code&gt;dismissible&lt;/code&gt; prop to add a functioning dismiss button to the Alert.</source>
          <target state="translated">추가 &lt;code&gt;dismissible&lt;/code&gt; 작동하는이 경고에 버튼을 기각 추가 소품.</target>
        </trans-unit>
        <trans-unit id="1501d1aad952afcfb8944714f06c17b599ebb846" translate="yes" xml:space="preserve">
          <source>Add the &lt;code&gt;flush&lt;/code&gt; variant to remove outer borders and rounded corners to render list group items edge-to-edge in a parent container &lt;a href=&quot;../cards/index#list-groups&quot;&gt;such as a &lt;code&gt;Card&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">바깥 쪽 테두리와 둥근 모서리를 제거 하는 &lt;code&gt;flush&lt;/code&gt; 변형을 추가하여 &lt;a href=&quot;../cards/index#list-groups&quot;&gt; &lt;code&gt;Card&lt;/code&gt; &lt;/a&gt; 와 같은 상위 컨테이너에서 목록 그룹 항목을 가장자리에서 가장자리까지 렌더링합니다 .</target>
        </trans-unit>
        <trans-unit id="e379c0113a821ac864f0c595e66acd54b3349d84" translate="yes" xml:space="preserve">
          <source>Add the &lt;code&gt;pill&lt;/code&gt; modifier to make badges more rounded with some additional horizontal padding</source>
          <target state="translated">추가 수평 패딩으로 배지를 더 둥글게 만들 려면 &lt;code&gt;pill&lt;/code&gt; 수정자를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="502e42b9328e49a884042838b429588410eccb91" translate="yes" xml:space="preserve">
          <source>Add the &lt;code&gt;readOnly&lt;/code&gt; prop on an input to prevent modification of the input's value. Read-only inputs appear lighter (just like disabled inputs), but retain the standard cursor.</source>
          <target state="translated">입력 값의 수정을 방지하려면 입력에 &lt;code&gt;readOnly&lt;/code&gt; prop을 추가하십시오 . 읽기 전용 입력은 비활성화 된 입력처럼 더 밝게 표시되지만 표준 커서는 그대로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="b41d2916712524d0876a8d05b0636dbcb889bdac" translate="yes" xml:space="preserve">
          <source>Add the relative form sizing classes to the &lt;code&gt;InputGroup&lt;/code&gt; and contents within will automatically resize&amp;mdash;no need for repeating the form control size classes on each element.</source>
          <target state="translated">&lt;code&gt;InputGroup&lt;/code&gt; 에 상대적인 양식 크기 조정 클래스를 추가하면 각 요소에서 양식 컨트롤 크기 클래스를 반복 할 필요없이 그 안의 내용이 자동으로 크기가 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="b2850bc1398bce6a251308c1d2f3827a62eccd7f" translate="yes" xml:space="preserve">
          <source>Additional Import Options</source>
          <target state="translated">추가 가져 오기 옵션</target>
        </trans-unit>
        <trans-unit id="179ef057a4a91663c27ec808707389b992786114" translate="yes" xml:space="preserve">
          <source>Additional content</source>
          <target state="translated">추가 콘텐츠</target>
        </trans-unit>
        <trans-unit id="5b6b3ed08e2a440240f2140eefbe98af8cfee9cf" translate="yes" xml:space="preserve">
          <source>Additional props passed as-is to the underlying &lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt; element</source>
          <target state="translated">기본 &lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt; 요소에 있는 그대로 전달되는 추가 소품</target>
        </trans-unit>
        <trans-unit id="3965da9466d03d4506a1f14648be04a38b9c356c" translate="yes" xml:space="preserve">
          <source>Additional props passed as-is to the underlying link for non-active items.</source>
          <target state="translated">비활성 항목의 기본 링크에있는 그대로 전달되는 추가 소품입니다.</target>
        </trans-unit>
        <trans-unit id="5b272b246d1ebbb53e80b16b3bede432e6ac9ed7" translate="yes" xml:space="preserve">
          <source>Adds a variant to the list-group</source>
          <target state="translated">목록 그룹에 변형을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="1a0361e4594c134fbf912c81bb159a001b9a0481" translate="yes" xml:space="preserve">
          <source>Adds a visual &quot;active&quot; state to a Breadcrumb Item and disables the link.</source>
          <target state="translated">Breadcrumb 항목에 시각적 &quot;활성&quot;상태를 추가하고 링크를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="298fb204aaa6c5099038db78c6ccae436115dd3e" translate="yes" xml:space="preserve">
          <source>Adds borders on all sides of the table and cells.</source>
          <target state="translated">표와 셀의 모든면에 테두리를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="0d78435af25a0c8ab7c4cfbbd73e49a4e636252b" translate="yes" xml:space="preserve">
          <source>Adds zebra-striping to any table row within the &lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt; 내의 테이블 행에 얼룩말 줄무늬를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="5126940d744a6dff391a643edf858b06f00785ed" translate="yes" xml:space="preserve">
          <source>Advanced usage</source>
          <target state="translated">고급 사용법</target>
        </trans-unit>
        <trans-unit id="b969680a4943d3e0dd28ec47387f131504ca1678" translate="yes" xml:space="preserve">
          <source>Alert</source>
          <target state="translated">Alert</target>
        </trans-unit>
        <trans-unit id="4e2281b2b0b39dfbc936e366c26508fcbdc626e3" translate="yes" xml:space="preserve">
          <source>Alert.Heading</source>
          <target state="translated">Alert.Heading</target>
        </trans-unit>
        <trans-unit id="5d0e9abb415d783955e75e2451e20d2280173291" translate="yes" xml:space="preserve">
          <source>Alert.Link</source>
          <target state="translated">Alert.Link</target>
        </trans-unit>
        <trans-unit id="d0efe0b2c75c1c670b3146f5f276e23a667f15ec" translate="yes" xml:space="preserve">
          <source>Alerts</source>
          <target state="translated">Alerts</target>
        </trans-unit>
        <trans-unit id="00fad116ed6163acd8a1a62eafad90762d7f43fa" translate="yes" xml:space="preserve">
          <source>Alerts are available for any length of text, as well as an optional dismiss button. For proper styling, use one of the eight &lt;code&gt;variant&lt;/code&gt;s.</source>
          <target state="translated">모든 길이의 텍스트와 선택적인 닫기 버튼에 대한 경고를 사용할 수 있습니다. 적절한 스타일을 지정하려면 8 가지 &lt;code&gt;variant&lt;/code&gt; 중 하나를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="af565ac1623219de581d19046c1b50c1109c504e" translate="yes" xml:space="preserve">
          <source>Alerts can contain whatever content you like. Headers, paragraphs, dividers, go crazy.</source>
          <target state="translated">경고에는 원하는 모든 콘텐츠가 포함될 수 있습니다. 머리글, 단락, 구분선은 미쳐 버립니다.</target>
        </trans-unit>
        <trans-unit id="200eea50b842c3f61a483277f49373d8135decea" translate="yes" xml:space="preserve">
          <source>Align the menu to the right side of the Dropdown toggle</source>
          <target state="translated">드롭 다운 토글의 오른쪽에 메뉴 정렬</target>
        </trans-unit>
        <trans-unit id="9e32f76f0cd51b6f0895ed732200ec04e96b3d4b" translate="yes" xml:space="preserve">
          <source>Alignment and orientation</source>
          <target state="translated">정렬 및 방향</target>
        </trans-unit>
        <trans-unit id="9df339acb13a32243d5e516608f939c69478168d" translate="yes" xml:space="preserve">
          <source>Aligns the Dropdown menu to the right of it's container.</source>
          <target state="translated">드롭 다운 메뉴를 컨테이너 오른쪽에 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="2b53c8cc33a4cde3f871c40a0d00e5b65898e878" translate="yes" xml:space="preserve">
          <source>Aligns the dropdown menu responsively.</source>
          <target state="translated">드롭 다운 메뉴를 반응 적으로 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="daef8d0d2b9ff17b679365c87ba8c3c74811bc2a" translate="yes" xml:space="preserve">
          <source>Aligns the dropdown menu to the specified side of the container. You can also align the menu responsively for breakpoints starting at &lt;code&gt;sm&lt;/code&gt; and up. The alignment direction will affect the specified breakpoint or larger.</source>
          <target state="translated">드롭 다운 메뉴를 컨테이너의 지정된면에 맞 춥니 다. &lt;code&gt;sm&lt;/code&gt; 이상 에서 시작하는 중단 점에 대해 반응 적으로 메뉴를 정렬 할 수도 있습니다 . 정렬 방향은 지정된 중단 점 이상에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="1a9ffd072db7c919a19f0c21a4ffb2c54773cf6e" translate="yes" xml:space="preserve">
          <source>All standard visual variants are available for both animation styles by setting the &lt;code&gt;variant&lt;/code&gt; property. Alternatively spinners can be custom sized with the &lt;code&gt;style&lt;/code&gt; property, or custom CSS classes.</source>
          <target state="translated">&lt;code&gt;variant&lt;/code&gt; 속성 을 설정하여 두 애니메이션 스타일에 대해 모든 표준 시각적 변형을 사용할 수 있습니다 . 또는 &lt;code&gt;style&lt;/code&gt; 속성 또는 사용자 지정 CSS 클래스를 사용하여 스피너의 크기를 사용자 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3256ba18e0e427110deebc0d99e766ba868a3338" translate="yes" xml:space="preserve">
          <source>All utils have been removed from main exports, most were internal already and the rest have been moved to external libraries</source>
          <target state="translated">모든 유틸리티는 기본 내보내기에서 제거되었으며 대부분은 이미 내부에 있었고 나머지는 외부 라이브러리로 이동되었습니다.</target>
        </trans-unit>
        <trans-unit id="450f48c54fa96ad6f77d398b2ddb104d10be05f8" translate="yes" xml:space="preserve">
          <source>Allow Dropdown to flip in case of an overlapping on the reference element. For more information refer to Popper.js's flip &lt;a href=&quot;https://popper.js.org/docs/v2/modifiers/flip/&quot;&gt;docs&lt;/a&gt;.</source>
          <target state="translated">참조 요소에서 겹치는 경우 드롭 다운이 뒤집 히도록 허용합니다. 자세한 내용은 Popper.js의 flip &lt;a href=&quot;https://popper.js.org/docs/v2/modifiers/flip/&quot;&gt;문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8db0b88e1d27c96fd2778573165e3838a0aed37c" translate="yes" xml:space="preserve">
          <source>Allow browsers to determine video or slideshow dimensions based on the width of their containing block by creating an intrinsic ratio that will properly scale on any device.</source>
          <target state="translated">브라우저가 모든 장치에서 적절하게 확장되는 고유 비율을 생성하여 컨테이너 블록의 너비를 기반으로 비디오 또는 슬라이드 쇼 크기를 결정할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="e3fc2a28ed7500f6b56fa9e0ffd8c8b9652baf26" translate="yes" xml:space="preserve">
          <source>Allow the Container to fill all of its available horizontal space.</source>
          <target state="translated">컨테이너가 사용 가능한 모든 수평 공간을 채울 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="849deb999746fa620dd5c25c94e0c95a3db28647" translate="yes" xml:space="preserve">
          <source>Allows for providing some custom logic for how much the Collapse component should animate in its specified dimension. Called with the current dimension prop value and the DOM node.</source>
          <target state="translated">Collapse 구성 요소가 지정된 차원에서 애니메이션되는 정도에 대한 사용자 지정 논리를 제공 할 수 있습니다. 현재 차원 prop 값과 DOM 노드로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="f817dcee7cc8adc8280142cc8880c0de3f57832d" translate="yes" xml:space="preserve">
          <source>Allows scrolling the &lt;code&gt;&amp;lt;Modal.Body&amp;gt;&lt;/code&gt; instead of the entire Modal when overflowing.</source>
          <target state="translated">오버플로시 전체 모달 대신 &lt;code&gt;&amp;lt;Modal.Body&amp;gt;&lt;/code&gt; 를 스크롤 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d59318846dd63ebde58e34d1747969efbf51213" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use this shorthand version for Cards with body only, and no other children</source>
          <target state="translated">또는 본문 만 있고 다른 하위가없는 카드에 대해이 단축 버전을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="72674b903316c5d888e9bb1f4ca48554ccaa5e3e" translate="yes" xml:space="preserve">
          <source>Alternatives to hidden labels</source>
          <target state="translated">숨겨진 라벨의 대안</target>
        </trans-unit>
        <trans-unit id="a8e6c203013232b08509b3013ebdd20f03f37d26" translate="yes" xml:space="preserve">
          <source>Always Responsive</source>
          <target state="translated">항상 반응</target>
        </trans-unit>
        <trans-unit id="f2d037263783e0df15c47306614c67f531ca61b6" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;href&lt;/code&gt; passed to the Toggle component</source>
          <target state="translated">Toggle 구성 요소에 전달 된 &lt;code&gt;href&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4fabd84748c00307716e7093cdf94113786be497" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;href&lt;/code&gt; passed to the non-toggle Button</source>
          <target state="translated">비토 글 버튼에 전달 된 &lt;code&gt;href&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="05e6d1cd5779d24eae595f72360c06c3b2dd70e4" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;onClick&lt;/code&gt; handler passed to the Toggle component</source>
          <target state="translated">Toggle 구성 요소에 전달 된 &lt;code&gt;onClick&lt;/code&gt; 핸들러</target>
        </trans-unit>
        <trans-unit id="45e9db07c3fe28d4531bb803cbb5f73cad86847b" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;onClick&lt;/code&gt; handler passed to the non-toggle Button</source>
          <target state="translated">&lt;code&gt;onClick&lt;/code&gt; 버튼에 전달 된 onClick 핸들러</target>
        </trans-unit>
        <trans-unit id="17bc2fdcce2e78b2cfcbeb03649c34948a895bb4" translate="yes" xml:space="preserve">
          <source>An ARIA accessible role applied to the Menu component. This should generally be set to 'status'</source>
          <target state="translated">메뉴 구성 요소에 적용된 ARIA 액세스 가능 역할입니다. 일반적으로 '상태'로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="bbaeff10a055e146ac0908b2750bde947a22369f" translate="yes" xml:space="preserve">
          <source>An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown</source>
          <target state="translated">메뉴 구성 요소에 적용된 ARIA 액세스 가능 역할입니다. '메뉴'로 설정하면 드롭 다운</target>
        </trans-unit>
        <trans-unit id="ef02d2b373a29aef27321af21f2385bae04357b5" translate="yes" xml:space="preserve">
          <source>An ARIA role describing the button group. Usually the default &quot;group&quot; role is fine. An &lt;code&gt;aria-label&lt;/code&gt; or &lt;code&gt;aria-labelledby&lt;/code&gt; prop is also recommended.</source>
          <target state="translated">버튼 그룹을 설명하는 ARIA 역할입니다. 일반적으로 기본 &quot;그룹&quot;역할은 괜찮습니다. &lt;code&gt;aria-label&lt;/code&gt; 또는 &lt;code&gt;aria-labelledby&lt;/code&gt; 소품도 좋습니다.</target>
        </trans-unit>
        <trans-unit id="86fab4f328ee5aaf82cfec52ffb26b849a41f814" translate="yes" xml:space="preserve">
          <source>An HTML &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; name for each child button.</source>
          <target state="translated">각 하위 버튼에 대한 HTML &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 이름.</target>
        </trans-unit>
        <trans-unit id="5ec6f47aadfa3999a3fd7d76178a194cf60589d2" translate="yes" xml:space="preserve">
          <source>An Overlay injected set of props for positioning the popover arrow.</source>
          <target state="translated">팝 오버 화살표를 배치하기위한 오버레이 삽입 된 소품 세트입니다.</target>
        </trans-unit>
        <trans-unit id="95f664ab0cd7720fe40ca5f0a3ac59cc0f94268b" translate="yes" xml:space="preserve">
          <source>An Overlay injected set of props for positioning the tooltip arrow.</source>
          <target state="translated">툴팁 화살표의 위치를 ​​지정하기위한 오버레이 주입 소품 세트입니다.</target>
        </trans-unit>
        <trans-unit id="df24cf1ea9d02468bc95491597a60d878df4e047" translate="yes" xml:space="preserve">
          <source>An accessible ARIA label for the toggler button.</source>
          <target state="translated">토글 버튼에 액세스 할 수있는 ARIA 레이블입니다.</target>
        </trans-unit>
        <trans-unit id="6bfc1050155bf3245fe55cbb71c48f6e7ade299c" translate="yes" xml:space="preserve">
          <source>An accessible label indicating the active state..</source>
          <target state="translated">활성 상태를 나타내는 액세스 가능한 레이블 ..</target>
        </trans-unit>
        <trans-unit id="1291525b10bc045c64d4dd180a394abd71dba1af" translate="yes" xml:space="preserve">
          <source>An alternative visual variant.</source>
          <target state="translated">대체 시각적 변형.</target>
        </trans-unit>
        <trans-unit id="b4741a0a1e4d6af3ef6ac3e7b2a02fa204a510af" translate="yes" xml:space="preserve">
          <source>An anchor &lt;code&gt;target&lt;/code&gt; passed to the non-toggle Button</source>
          <target state="translated">비토 글 버튼에 전달 된 앵커 &lt;code&gt;target&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ef3ebcb9f0da24c23076861c0b48671a73e1ce0" translate="yes" xml:space="preserve">
          <source>An element or text to overlay next to the target.</source>
          <target state="translated">대상 옆에 오버레이 할 요소 또는 텍스트입니다.</target>
        </trans-unit>
        <trans-unit id="11ed8b477547d52d61fb99364ab68add83348469" translate="yes" xml:space="preserve">
          <source>An href, when provided the Brand will render as an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element (unless &lt;code&gt;as&lt;/code&gt; is provided).</source>
          <target state="translated">반드시 href, 브랜드가로 렌더링 제공 할 때 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; (하지 않는 한 요소 &lt;code&gt;as&lt;/code&gt; 제공됩니다).</target>
        </trans-unit>
        <trans-unit id="841662e10125bc274515d15c42cff4924346eb16" translate="yes" xml:space="preserve">
          <source>An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.</source>
          <target state="translated">화면 판독기와 같은 보조 기술에 필요한 전환 버튼의 html id 속성입니다.</target>
        </trans-unit>
        <trans-unit id="b3016407199468aee9c58aa74130579dfaa7f0a8" translate="yes" xml:space="preserve">
          <source>An html id attribute, necessary for accessibility</source>
          <target state="translated">접근성에 필요한 html id 속성</target>
        </trans-unit>
        <trans-unit id="c3dea1e71a231b48a7926106578519d4232ee9ff" translate="yes" xml:space="preserve">
          <source>An html id attribute, necessary for assistive technologies, such as screen readers.</source>
          <target state="translated">화면 판독기와 같은 보조 기술에 필요한 html id 속성입니다.</target>
        </trans-unit>
        <trans-unit id="1b4f7fe882211639536012d6b31f3ba44e658f72" translate="yes" xml:space="preserve">
          <source>And of course &lt;a href=&quot;#forms-custom&quot;&gt;custom form controls&lt;/a&gt; are supported.</source>
          <target state="translated">물론 &lt;a href=&quot;#forms-custom&quot;&gt;사용자 지정 양식 컨트롤&lt;/a&gt; 이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="c8b7104d1e31a8570635768da418a0662dce68b8" translate="yes" xml:space="preserve">
          <source>Animate the alert dismissal. Defaults to using &lt;code&gt;&amp;lt;Fade&amp;gt;&lt;/code&gt; animation or use &lt;code&gt;false&lt;/code&gt; to disable. A custom &lt;code&gt;react-transition-group&lt;/code&gt; Transition can also be provided.</source>
          <target state="translated">경고 해제를 애니메이션합니다. 기본값은 &lt;code&gt;&amp;lt;Fade&amp;gt;&lt;/code&gt; 애니메이션을 사용하거나 &lt;code&gt;false&lt;/code&gt; 를 사용하여 비활성화합니다. 사용자 지정 &lt;code&gt;react-transition-group&lt;/code&gt; 전환도 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8b9cfab85fa67c97020b05cacedbffd7c31b2a1e" translate="yes" xml:space="preserve">
          <source>Animate the entering and exiting of the Overlay. &lt;code&gt;true&lt;/code&gt; will use the &lt;code&gt;&amp;lt;Fade&amp;gt;&lt;/code&gt; transition, or a custom react-transition-group &lt;code&gt;&amp;lt;Transition&amp;gt;&lt;/code&gt; component can be provided.</source>
          <target state="translated">오버레이의 시작 및 종료를 애니메이션합니다. &lt;code&gt;true&lt;/code&gt; 는 &lt;code&gt;&amp;lt;Fade&amp;gt;&lt;/code&gt; 전환을 사용하거나 사용자 정의 react-transition-group &lt;code&gt;&amp;lt;Transition&amp;gt;&lt;/code&gt; 구성 요소를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0d5c5a2688980fcf75f2d96f742cf81b23302df" translate="yes" xml:space="preserve">
          <source>Animate's the stripes from right to left</source>
          <target state="translated">Animate의 줄무늬는 오른쪽에서 왼쪽으로</target>
        </trans-unit>
        <trans-unit id="45dbdd70502ea39b116a520ceaf2fbd1f05c61d7" translate="yes" xml:space="preserve">
          <source>Animated</source>
          <target state="translated">Animated</target>
        </trans-unit>
        <trans-unit id="c77dcdedc0f40e8dac08a08c8bef7255abb90e75" translate="yes" xml:space="preserve">
          <source>Animations</source>
          <target state="translated">Animations</target>
        </trans-unit>
        <trans-unit id="5eda7007c836ba701f2ebe39224b9d38a78c4fb9" translate="yes" xml:space="preserve">
          <source>Anytime you need to display a piece of content, like an image with an optional caption, consider using a &lt;code&gt;Figure&lt;/code&gt;.</source>
          <target state="translated">선택적 캡션이있는 이미지와 같은 콘텐츠를 표시해야 할 때마다 &lt;code&gt;Figure&lt;/code&gt; 를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="204132521fcb3c72d8525043b5077e5e63df84b8" translate="yes" xml:space="preserve">
          <source>Apply Bootstrap's custom elements by adding the &lt;code&gt;custom&lt;/code&gt; prop.</source>
          <target state="translated">&lt;code&gt;custom&lt;/code&gt; 소품 을 추가하여 부트 스트랩의 커스텀 요소를 적용 합니다.</target>
        </trans-unit>
        <trans-unit id="81c470ea5c095c1aec34babdd92a2f9ba40614fe" translate="yes" xml:space="preserve">
          <source>Apply a CSS fade transition to the toast</source>
          <target state="translated">알림에 CSS 페이드 전환 적용</target>
        </trans-unit>
        <trans-unit id="d8157b3809769d74b364a6882f2a124facde6b1f" translate="yes" xml:space="preserve">
          <source>Apply styling an alignment for use in a Navbar. This prop will be set automatically when the Nav is used inside a Navbar.</source>
          <target state="translated">Navbar에서 사용할 정렬 스타일을 적용합니다. 이 소품은 Navbar 내에서 Nav를 사용할 때 자동으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="88e373c1cc53b6a0d21a50b4490027415f179e43" translate="yes" xml:space="preserve">
          <source>As one of the oldest React libraries, React-Bootstrap has evolved and grown alongside React, making it an excellent choice as your UI foundation.</source>
          <target state="translated">가장 오래된 React 라이브러리 중 하나 인 React-Bootstrap은 React와 함께 진화하고 성장하여 UI 기반으로 탁월한 선택이되었습니다.</target>
        </trans-unit>
        <trans-unit id="3d552328fa1ac30219f2ad961e904709d592f1f0" translate="yes" xml:space="preserve">
          <source>As shown in the previous examples, our grid system allows you to place any number of &lt;code&gt;&amp;lt;Col&amp;gt;&lt;/code&gt;s within a &lt;code&gt;&amp;lt;Row&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;Form.Row&amp;gt;&lt;/code&gt;. They'll split the available width equally between them. You may also pick a subset of your columns to take up more or less space, while the remaining &lt;code&gt;&amp;lt;Col&amp;gt;&lt;/code&gt;s equally split the rest, with specific column classes like &lt;code&gt;&amp;lt;Col xs={7}&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">이전 예에서 볼 수 있듯이, 그리드 시스템을 사용하면 &lt;code&gt;&amp;lt;Row&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;Form.Row&amp;gt;&lt;/code&gt; 내에 원하는 수의 &lt;code&gt;&amp;lt;Col&amp;gt;&lt;/code&gt; 을 배치 할 수 있습니다. 사용 가능한 너비를 균등하게 분할합니다. 더 많거나 적은 공간을 차지하기 위해 열의 하위 집합을 선택할 수도 있으며 나머지 &lt;code&gt;&amp;lt;Col&amp;gt;&lt;/code&gt; 은 &lt;code&gt;&amp;lt;Col xs={7}&amp;gt;&lt;/code&gt; 과 같은 특정 열 클래스를 사용하여 나머지를 균등하게 분할 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a5453d153f97551e8423b3e45dc476e8215fd73" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;&amp;lt;Tooltip&amp;gt;&lt;/code&gt;s, you can control the placement of the Popover.</source>
          <target state="translated">&lt;code&gt;&amp;lt;Tooltip&amp;gt;&lt;/code&gt; 과 마찬가지로 Popover의 위치를 ​​제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="29dc67938abc552f3761ae7f5939b85ce82e82d1" translate="yes" xml:space="preserve">
          <source>As with DropdownButton, &lt;code&gt;SplitButton&lt;/code&gt; is provided as convenience component.</source>
          <target state="translated">DropdownButton과 마찬가지로 &lt;code&gt;SplitButton&lt;/code&gt; 은 편의 구성 요소로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="96ee075717292ff080466c2ca2211d49d22e6a30" translate="yes" xml:space="preserve">
          <source>Assistive technologies such as screen readers will have trouble with your forms if you don&amp;rsquo;t include a label for every input. For these inline forms, you can hide the labels using the &lt;code&gt;srOnly&lt;/code&gt; prop. There are further alternative methods of providing a label for assistive technologies, such as the &lt;code&gt;aria-label&lt;/code&gt;, &lt;code&gt;aria-labelledby&lt;/code&gt; or &lt;code&gt;title&lt;/code&gt; attribute. If none of these are present, assistive technologies may resort to using the &lt;code&gt;placeholder&lt;/code&gt; attribute, if present, but note that use of &lt;code&gt;placeholder&lt;/code&gt; as a replacement for other labelling methods is not advised.</source>
          <target state="translated">모든 입력에 대한 레이블을 포함하지 않으면 화면 판독기와 같은 보조 기술이 양식에 문제가 있습니다. 이러한 인라인 양식의 경우 &lt;code&gt;srOnly&lt;/code&gt; 소품을 사용하여 레이블을 숨길 수 있습니다 . &lt;code&gt;aria-label&lt;/code&gt; , &lt;code&gt;aria-labelledby&lt;/code&gt; 또는 &lt;code&gt;title&lt;/code&gt; 속성 과 같은 보조 기술에 대한 레이블을 제공하는 추가 대체 방법이 있습니다. 이들 중 어느 것도 존재하지 않는 경우 보조 기술은 존재하는 경우 &lt;code&gt;placeholder&lt;/code&gt; 속성 을 사용하는 데 의지 할 수 있지만 다른 라벨링 방법을 대체하기 위해 &lt;code&gt;placeholder&lt;/code&gt; 를 사용하는 것은 권장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="25209d807f44883cbeab0c8935ae9fcc37cb83ea" translate="yes" xml:space="preserve">
          <source>Associating help text with form controls</source>
          <target state="translated">도움말 텍스트를 양식 컨트롤과 연결</target>
        </trans-unit>
        <trans-unit id="b3ff0f28485101499463c989ee0eb8c4d2a1583b" translate="yes" xml:space="preserve">
          <source>Auto hide the toast</source>
          <target state="translated">토스트 자동 숨기기</target>
        </trans-unit>
        <trans-unit id="e0f44dd0f2801c867d05bdc93deb91e75a5b923d" translate="yes" xml:space="preserve">
          <source>Auto-layout columns</source>
          <target state="translated">자동 레이아웃 열</target>
        </trans-unit>
        <trans-unit id="08822f3f1444011f2475f123298ebc13498bd0a8" translate="yes" xml:space="preserve">
          <source>Auto-layout for flexbox grid columns also means you can set the width of one column and have the sibling columns automatically resize around it. You may use predefined grid classes (as shown below), grid mixins, or inline widths. Note that the other columns will resize no matter the width of the center column.</source>
          <target state="translated">Flexbox 그리드 열에 대한 자동 레이아웃은 또한 한 열의 너비를 설정하고 형제 열의 크기를 자동으로 조정할 수 있음을 의미합니다. 미리 정의 된 그리드 클래스 (아래 그림 참조), 그리드 믹스 인 또는 인라인 너비를 사용할 수 있습니다. 다른 열은 가운데 열의 너비에 관계없이 크기가 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="c2d4a1cb3d5b1469aae3391536b45f6a4385db82" translate="yes" xml:space="preserve">
          <source>Auto-sizing</source>
          <target state="translated">Auto-sizing</target>
        </trans-unit>
        <trans-unit id="32c99fcbcb4bcf8ff5595d33ee8ecce11ac2fdf9" translate="yes" xml:space="preserve">
          <source>Autohide</source>
          <target state="translated">Autohide</target>
        </trans-unit>
        <trans-unit id="b9f561e1d565ceee050bbac3469c1e0ba96bf4da" translate="yes" xml:space="preserve">
          <source>Awesome React Bootstrap Components</source>
          <target state="translated">멋진 React Bootstrap 구성 요소</target>
        </trans-unit>
        <trans-unit id="874df4e774343ace22071f648b6b67d11e21b307" translate="yes" xml:space="preserve">
          <source>Background Color</source>
          <target state="translated">배경색</target>
        </trans-unit>
        <trans-unit id="6d12c8adbefeaeacac0d48274df3a195ca9a1d17" translate="yes" xml:space="preserve">
          <source>Badge</source>
          <target state="translated">Badge</target>
        </trans-unit>
        <trans-unit id="6fb78b306b6d2e0a0bd5ea56b6ea6787beb70e84" translate="yes" xml:space="preserve">
          <source>Badge &amp;amp; Label</source>
          <target state="translated">배지 및 라벨</target>
        </trans-unit>
        <trans-unit id="2c578dc888bc9805915a1839502adddce2592af7" translate="yes" xml:space="preserve">
          <source>Badges</source>
          <target state="translated">Badges</target>
        </trans-unit>
        <trans-unit id="97a6a248e48f849fa4f22df644786963aed6804a" translate="yes" xml:space="preserve">
          <source>Badges can be used as part of links or buttons to provide a counter.</source>
          <target state="translated">배지는 카운터를 제공하는 링크 또는 버튼의 일부로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b44ff43627ee60183851373f2bdcd2b74fa31ecb" translate="yes" xml:space="preserve">
          <source>Badges scale to match the size of the immediate parent element by using relative font sizing and em units.</source>
          <target state="translated">배지는 상대적인 글꼴 크기 및 em 단위를 사용하여 직계 부모 요소의 크기에 맞게 크기를 조정합니다.</target>
        </trans-unit>
        <trans-unit id="2b75f45c16f8bb115a63a7d1bccd08f7c8843201" translate="yes" xml:space="preserve">
          <source>Base Nav</source>
          <target state="translated">기본 탐색</target>
        </trans-unit>
        <trans-unit id="aa2c96dacf00c451ef465f6115a45a20bccf1256" translate="yes" xml:space="preserve">
          <source>Basic</source>
          <target state="translated">Basic</target>
        </trans-unit>
        <trans-unit id="dac6b24f78471a132bc9a7ec7774530351b54fb0" translate="yes" xml:space="preserve">
          <source>Basic Example</source>
          <target state="translated">기본 예</target>
        </trans-unit>
        <trans-unit id="20b19d89ef0aed3f2d4f1afed1d3f801c6b85aa5" translate="yes" xml:space="preserve">
          <source>Basic example</source>
          <target state="translated">기본 예</target>
        </trans-unit>
        <trans-unit id="e2e0d969482954a99f12080bd0754c6ef6cc3b4d" translate="yes" xml:space="preserve">
          <source>Because React-Bootstrap completely reimplements Bootstrap's JavaScript, it's not automatically compatible with themes that extend the default JavaScript behaviors.</source>
          <target state="translated">React-Bootstrap은 Bootstrap의 JavaScript를 완전히 다시 구현하기 때문에 기본 JavaScript 동작을 확장하는 테마와 자동으로 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="49cab6ae0421afd6da8bc69fb0f322f1497ece64" translate="yes" xml:space="preserve">
          <source>Because React-Bootstrap doesn't depend on a very precise version of Bootstrap, we don't ship with any included CSS. However, some stylesheet &lt;strong&gt;is required&lt;/strong&gt; to use these components.</source>
          <target state="translated">React-Bootstrap은 매우 정확한 버전의 Bootstrap에 의존하지 않기 때문에 CSS가 포함되어 있지 않습니다. 그러나 이러한 구성 요소를 사용 &lt;strong&gt;하려면&lt;/strong&gt; 일부 스타일 시트 &lt;strong&gt;가 필요&lt;/strong&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="e3a579498514c7236e3b0902972239435090113d" translate="yes" xml:space="preserve">
          <source>Because the media object has so few structural requirements, you can also use these classes on list HTML elements. On your &lt;code&gt;ul&lt;/code&gt; or &lt;code&gt;ol&lt;/code&gt; , add the .list-unstyled to remove any browser default list styles, use &lt;code&gt;&amp;lt;Media as=&quot;li&quot;&amp;gt;&lt;/code&gt; to render as a list item. As always, use spacing utilities wherever needed to fine tune.</source>
          <target state="translated">미디어 개체에는 구조적 요구 사항이 거의 없기 때문에 이러한 클래스를 목록 HTML 요소에 사용할 수도 있습니다. 당신에 &lt;code&gt;ul&lt;/code&gt; 또는 &lt;code&gt;ol&lt;/code&gt; 의 .list-스타일이 적용되지 않은 모든 브라우저의 기본 목록 스타일을 제거, 사용 추가 &lt;code&gt;&amp;lt;Media as=&quot;li&quot;&amp;gt;&lt;/code&gt; 목록 항목으로 렌더링 할 수 있습니다. 항상 그렇듯이 미세 조정이 필요할 때마다 간격 유틸리티를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="4b59ec6da5a8f147a94f0c173b5f1ef31bd9b7c1" translate="yes" xml:space="preserve">
          <source>Below is a &lt;em&gt;rough&lt;/em&gt; account of the breaking API changes as well as the minimal change to migrate</source>
          <target state="translated">아래는 주요 API 변경 사항과 마이그레이션 할 최소 변경 사항에 대한 &lt;em&gt;대략적인&lt;/em&gt; 설명입니다.</target>
        </trans-unit>
        <trans-unit id="3f9328071514d710bca48c70dfb87c1796b18713" translate="yes" xml:space="preserve">
          <source>Below is a &lt;em&gt;static&lt;/em&gt; modal dialog (without the positioning) to demonstrate the look and feel of the Modal.</source>
          <target state="translated">아래는 모달의 모양과 느낌을 보여주는 &lt;em&gt;정적&lt;/em&gt; 모달 대화 상자 (위치 지정 없음)입니다.</target>
        </trans-unit>
        <trans-unit id="b1dd66e619b90df549cfac42ee578623b23607e8" translate="yes" xml:space="preserve">
          <source>Block-level help text in forms can be created using &lt;code&gt;&amp;lt;Form.Text&amp;gt;&lt;/code&gt;. Inline help text can be flexibly implemented using any inline HTML element and utility classes like&lt;code&gt;.text-muted&lt;/code&gt;.</source>
          <target state="translated">양식의 블록 수준 도움말 텍스트는 &lt;code&gt;&amp;lt;Form.Text&amp;gt;&lt;/code&gt; 를 사용하여 만들 수 있습니다 . 인라인 도움말 텍스트는 인라인 HTML 요소 및 &lt;code&gt;.text-muted&lt;/code&gt; 와 같은 유틸리티 클래스를 사용하여 유연하게 구현할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="718a7e8a582e982e452dd5700addba4ffc1cf40d" translate="yes" xml:space="preserve">
          <source>Body</source>
          <target state="translated">Body</target>
        </trans-unit>
        <trans-unit id="89ec4ec2bf400e823f3ca49d0cb938b0fedd7bab" translate="yes" xml:space="preserve">
          <source>Bootstrap</source>
          <target state="translated">Bootstrap</target>
        </trans-unit>
        <trans-unit id="9d4c7b5e1f4a0931a3a7a1541fcc219d0ee4d092" translate="yes" xml:space="preserve">
          <source>Bootstrap 3 support will continue in react-bootstrap versions &amp;lt; &lt;code&gt;v1.0.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;v1.0.0&lt;/code&gt; -bootstrap 버전 &amp;lt; v1.0.0 에서 부트 스트랩 3 지원이 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="5444cacf2a222f2505ee6ca094e2d3024ed998ea" translate="yes" xml:space="preserve">
          <source>Bootstrap 4 support will be in react-bootstrap versions &amp;gt;= &lt;code&gt;v1.0.0&lt;/code&gt;</source>
          <target state="translated">부트 스트랩 4 지원은 react-bootstrap 버전&amp;gt; = &lt;code&gt;v1.0.0&lt;/code&gt; 에서 이루어집니다.</target>
        </trans-unit>
        <trans-unit id="1ff6c53d9b740756bd83b05afa3d0fd64f32d19c" translate="yes" xml:space="preserve">
          <source>Bootstrap also provides a way to translate the &amp;ldquo;Browse&amp;rdquo; text in HTML with the &lt;code&gt;data-browse&lt;/code&gt; attribute which can be added to the custom input label (example in Dutch):</source>
          <target state="translated">부트 스트랩은 또한 사용자 정의 입력 레이블에 추가 할 수있는 &lt;code&gt;data-browse&lt;/code&gt; 속성을 사용하여 HTML의 &quot;찾아보기&quot;텍스트를 번역하는 방법을 제공합니다 (네덜란드어 예제) :</target>
        </trans-unit>
        <trans-unit id="d82c399deff78a48f5ccef1189fbe1f95ac1483f" translate="yes" xml:space="preserve">
          <source>Bootstrap at its core</source>
          <target state="translated">핵심의 부트 스트랩</target>
        </trans-unit>
        <trans-unit id="01e9c885d923e600209ecaedb6ac415a1b145a78" translate="yes" xml:space="preserve">
          <source>Bootstrap includes a few general use CSS transitions that can be applied to a number of components. React Bootstrap, bundles them up into a few composable &lt;code&gt;&amp;lt;Transition&amp;gt;&lt;/code&gt; components from &lt;a href=&quot;https://github.com/reactjs/react-transition-group&quot;&gt;react-transition-group&lt;/a&gt;, a commonly used animation wrapper for React.</source>
          <target state="translated">부트 스트랩에는 여러 구성 요소에 적용 할 수있는 몇 가지 일반적인 사용 CSS 전환이 포함되어 있습니다. React Bootstrap은 React 에서 일반적으로 사용되는 애니메이션 래퍼 인 &lt;a href=&quot;https://github.com/reactjs/react-transition-group&quot;&gt;react-transition-group&lt;/a&gt; 에서 몇 가지 구성 가능한 &lt;code&gt;&amp;lt;Transition&amp;gt;&lt;/code&gt; 구성 요소 로 번들로 묶습니다 .</target>
        </trans-unit>
        <trans-unit id="ed743dd2b1e9231af751e03c11345de60d372383" translate="yes" xml:space="preserve">
          <source>Bootstrap offers two animation styles for spinners. The animation style can be configured with the &lt;code&gt;animation&lt;/code&gt; property. An animation style must always be provided when creating a spinner.</source>
          <target state="translated">Bootstrap은 스피너를위한 두 가지 애니메이션 스타일을 제공합니다. 애니메이션 스타일은 &lt;code&gt;animation&lt;/code&gt; 속성 으로 구성 할 수 있습니다 . 스피너를 만들 때 항상 애니메이션 스타일을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="2bd2b4550e65e3656ecb6da538269d11ff79d728" translate="yes" xml:space="preserve">
          <source>Bootstrap only supports &lt;strong&gt;one&lt;/strong&gt; modal window at a time. Nested modals aren&amp;rsquo;t supported, but if you really need them the underlying &lt;code&gt;react-overlays&lt;/code&gt; can support them if you're willing.</source>
          <target state="translated">부트 스트랩은 &lt;strong&gt;한 번에 하나의&lt;/strong&gt; 모달 창만 지원합니다 . 중첩 된 모달은 지원되지 않지만 실제로 필요한 경우 기본 &lt;code&gt;react-overlays&lt;/code&gt; 가 지원할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae3f9a1bcf954e327f895f04c14fb65e56ee27ec" translate="yes" xml:space="preserve">
          <source>Bootstrap scopes the &lt;code&gt;:valid&lt;/code&gt; and &lt;code&gt;:invalid&lt;/code&gt; styles to parent &lt;code&gt;.was-validated&lt;/code&gt; class, usually applied to the &lt;code&gt;&amp;lt;Form&amp;gt;&lt;/code&gt; (you can use the &lt;code&gt;validated&lt;/code&gt; prop as a shortcut). Otherwise, any required field without a value shows up as invalid on page load. This way, you may choose when to activate them (typically after form submission is attempted).</source>
          <target state="translated">부트 스트랩은 &lt;code&gt;:valid&lt;/code&gt; 및 &lt;code&gt;:invalid&lt;/code&gt; 스타일을 부모 &lt;code&gt;.was-validated&lt;/code&gt; 클래스로 범위를 지정하며 일반적으로 &lt;code&gt;&amp;lt;Form&amp;gt;&lt;/code&gt; 에 적용됩니다 ( &lt;code&gt;validated&lt;/code&gt; prop을 바로 가기로 사용할 수 있음 ). 그렇지 않으면 값이없는 필수 필드는 페이지로드시 유효하지 않은 것으로 표시됩니다. 이런 식으로 활성화시기를 선택할 수 있습니다 (일반적으로 양식 제출을 시도한 후).</target>
        </trans-unit>
        <trans-unit id="efde4688e8d97b0c5fd1fc2694663db67650f550" translate="yes" xml:space="preserve">
          <source>Bootstrap with state</source>
          <target state="translated">상태가있는 부트 스트랩</target>
        </trans-unit>
        <trans-unit id="ac13f9b283b2d109f31e016e2b6407c0a3fef0f2" translate="yes" xml:space="preserve">
          <source>Bootstrap&amp;rsquo;s cards provide a flexible and extensible content container with multiple variants and options.</source>
          <target state="translated">Bootstrap의 카드는 다양한 변형 및 옵션이있는 유연하고 확장 가능한 콘텐츠 컨테이너를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4dbf467cbbed8d13fbb34921ed2beb129fd67cdd" translate="yes" xml:space="preserve">
          <source>Bootstrap&amp;rsquo;s grid system uses a series of containers, rows, and columns to layout and align content. It&amp;rsquo;s built with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Using_CSS_flexible_boxes&quot;&gt;flexbox&lt;/a&gt; and is fully responsive. Below is an example and an in-depth look at how the grid comes together.</source>
          <target state="translated">Bootstrap의 그리드 시스템은 일련의 컨테이너, 행 및 열을 사용하여 콘텐츠를 레이아웃하고 정렬합니다. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Using_CSS_flexible_boxes&quot;&gt;flexbox로&lt;/a&gt; 제작되었으며 완벽하게 반응합니다. 아래는 그리드가 어떻게 결합되는지에 대한 예와 심층적입니다.</target>
        </trans-unit>
        <trans-unit id="d2e11d38b1003efa73a6af8aa5093dbe39c6761e" translate="yes" xml:space="preserve">
          <source>Border Color</source>
          <target state="translated">테두리 색상</target>
        </trans-unit>
        <trans-unit id="62b4aa574f708ad26153df481b7f720473b4f1c5" translate="yes" xml:space="preserve">
          <source>Brand</source>
          <target state="translated">Brand</target>
        </trans-unit>
        <trans-unit id="c766e665183df1bd0aa1d956b163b9e6375ea465" translate="yes" xml:space="preserve">
          <source>Breadcrumb</source>
          <target state="translated">Breadcrumb</target>
        </trans-unit>
        <trans-unit id="a84960bfcadf1687eb437afe3667755c352e2495" translate="yes" xml:space="preserve">
          <source>Breadcrumb.Item</source>
          <target state="translated">Breadcrumb.Item</target>
        </trans-unit>
        <trans-unit id="0ecef6f95577e3e82d8917d2d3e89d1aa83afd09" translate="yes" xml:space="preserve">
          <source>Breadcrumbs</source>
          <target state="translated">Breadcrumbs</target>
        </trans-unit>
        <trans-unit id="d120bdab95ba1a4b722bb5d29008a1f93fca6a29" translate="yes" xml:space="preserve">
          <source>Breakpoint specific</source>
          <target state="translated">중단 점 특정</target>
        </trans-unit>
        <trans-unit id="c19df7b14898e0f81ed80b54e4b5f8450a723790" translate="yes" xml:space="preserve">
          <source>Browser globals</source>
          <target state="translated">브라우저 전역</target>
        </trans-unit>
        <trans-unit id="caa7ae8131b0e358dca91885f3b90f7468dff074" translate="yes" xml:space="preserve">
          <source>Browser support</source>
          <target state="translated">브라우저 지원</target>
        </trans-unit>
        <trans-unit id="c443b3bab402d43e591d1fb87abc0dfecb2b151e" translate="yes" xml:space="preserve">
          <source>Built with compatibility in mind, we embrace our bootstrap core and strive to be compatible with the world's largest UI ecosystem.</source>
          <target state="translated">호환성을 염두에두고 구축 된 우리는 부트 스트랩 코어를 수용하고 세계에서 가장 큰 UI 에코 시스템과 호환되도록 노력합니다.</target>
        </trans-unit>
        <trans-unit id="794145f030ff721599a0353a9b2e59e9a92b9bf1" translate="yes" xml:space="preserve">
          <source>Button</source>
          <target state="translated">Button</target>
        </trans-unit>
        <trans-unit id="bee6e68837dfd48364096af1277b760dc1e74f70" translate="yes" xml:space="preserve">
          <source>Button addons</source>
          <target state="translated">버튼 애드온</target>
        </trans-unit>
        <trans-unit id="85c4ca2992312e4af7b03899fb2c15a5f894fc58" translate="yes" xml:space="preserve">
          <source>Button groups</source>
          <target state="translated">버튼 그룹</target>
        </trans-unit>
        <trans-unit id="dc52f55da5bad4b80f93319b47170a68ef20a1c9" translate="yes" xml:space="preserve">
          <source>Button loading state</source>
          <target state="translated">버튼 로딩 상태</target>
        </trans-unit>
        <trans-unit id="166d3caf92a7a99df5f5003b68c81c2aedad1bac" translate="yes" xml:space="preserve">
          <source>Button tags</source>
          <target state="translated">버튼 태그</target>
        </trans-unit>
        <trans-unit id="114b7758e0ae27bd3b8b329e1bd4244464b3f039" translate="yes" xml:space="preserve">
          <source>Button toolbar</source>
          <target state="translated">버튼 도구 모음</target>
        </trans-unit>
        <trans-unit id="db27c070291763157930659db7978fefbbf6184d" translate="yes" xml:space="preserve">
          <source>ButtonGroup</source>
          <target state="translated">ButtonGroup</target>
        </trans-unit>
        <trans-unit id="5be4e38ad48d8ead06ef526d4594a3bda8ef51bf" translate="yes" xml:space="preserve">
          <source>ButtonToolbar</source>
          <target state="translated">ButtonToolbar</target>
        </trans-unit>
        <trans-unit id="503d46db37b0db45db898aabed77244252918ca2" translate="yes" xml:space="preserve">
          <source>Buttons</source>
          <target state="translated">Buttons</target>
        </trans-unit>
        <trans-unit id="710a336c7f76ed1c6ae133064f49dec4fa9b2d96" translate="yes" xml:space="preserve">
          <source>Buttons can also be used to style &lt;code&gt;checkbox&lt;/code&gt; and &lt;code&gt;radio&lt;/code&gt; form elements. This is helpful when you want a toggle button that works neatly inside an HTML form.</source>
          <target state="translated">버튼을 사용하여 &lt;code&gt;checkbox&lt;/code&gt; 및 &lt;code&gt;radio&lt;/code&gt; 양식 요소의 스타일을 지정할 수도 있습니다 . 이는 HTML 양식 내에서 깔끔하게 작동하는 토글 버튼을 원할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="7fb7f9f31a080e4b9c6a33985d732d62d2020b9c" translate="yes" xml:space="preserve">
          <source>Buttons with Dropdowns</source>
          <target state="translated">드롭 다운이있는 버튼</target>
        </trans-unit>
        <trans-unit id="05fe174ea8a189265086b75eb90a8e4e2812b4d8" translate="yes" xml:space="preserve">
          <source>By default, a dropdown menu is aligned to the left, but you can switch it by passing &lt;code&gt;right&lt;/code&gt; to the &lt;code&gt;align&lt;/code&gt; prop on a &lt;code&gt;&amp;lt;DropdownMenu&amp;gt;&lt;/code&gt; or passing &lt;code&gt;right&lt;/code&gt; to the &lt;code&gt;menuAlign&lt;/code&gt; prop on the &lt;code&gt;&amp;lt;DropdownButton&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;SplitButton&amp;gt;&lt;/code&gt; as seen below.</source>
          <target state="translated">기본적으로, 드롭 다운 메뉴가 왼쪽에 정렬되어 있지만 통과하여 전환 할 수 있습니다 &lt;code&gt;right&lt;/code&gt; 받는 &lt;code&gt;align&lt;/code&gt; A의 소품 &lt;code&gt;&amp;lt;DropdownMenu&amp;gt;&lt;/code&gt; 또는 통과 &lt;code&gt;right&lt;/code&gt; 받는 &lt;code&gt;menuAlign&lt;/code&gt; 의 온 소품 &lt;code&gt;&amp;lt;DropdownButton&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;SplitButton&amp;gt;&lt;/code&gt; 아래와 같이.</target>
        </trans-unit>
        <trans-unit id="5f97cb6e4e4c42e2826555e17b9e27e65b9c8047" translate="yes" xml:space="preserve">
          <source>By default, any number of checkboxes and radios that are immediate sibling will be vertically stacked and appropriately spaced with FormCheck.</source>
          <target state="translated">기본적으로 직계 형제 인 체크 박스와 라디오는 수직으로 쌓이고 FormCheck와 적절한 간격으로 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="66febfce79aff9411a07c17290a0fa0fc95f1cc3" translate="yes" xml:space="preserve">
          <source>By default, browsers will treat all native form controls (&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; elements) inside a &lt;code&gt;&amp;lt;fieldset disabled&amp;gt;&lt;/code&gt; as disabled, preventing both keyboard and mouse interactions on them. However, if your form also includes &lt;code&gt;&amp;lt;a ... class=&quot;btn btn-*&quot;&amp;gt;&lt;/code&gt; elements, these will only be given a style of &lt;code&gt;pointer-events: none&lt;/code&gt;. As noted in the section about &lt;a href=&quot;../buttons/index#disabled-state&quot;&gt;disabled state for buttons&lt;/a&gt; (and specifically in the sub-section for anchor elements), this CSS property is not yet standardized and isn&amp;rsquo;t fully supported in Internet Explorer 10, and won&amp;rsquo;t prevent keyboard users from being able to focus or activate these links. So to be safe, use custom JavaScript to disable such links.</source>
          <target state="translated">기본적으로 브라우저는 &lt;code&gt;&amp;lt;fieldset disabled&amp;gt;&lt;/code&gt; 내부의 모든 기본 양식 컨트롤 ( &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 요소) 을 비활성화 된 것으로 처리하여 키보드 및 마우스 상호 작용을 방지합니다. 그러나 양식에 &lt;code&gt;&amp;lt;a ... class=&quot;btn btn-*&quot;&amp;gt;&lt;/code&gt; 요소 도 포함되어있는 경우 이러한 요소에는 &lt;code&gt;pointer-events: none&lt;/code&gt; 스타일 만 제공됩니다 . none . &lt;a href=&quot;../buttons/index#disabled-state&quot;&gt;버튼의 비활성화 상태에 대한&lt;/a&gt; 섹션에서 언급했듯이(특히 앵커 요소에 대한 하위 섹션에서)이 CSS 속성은 아직 표준화되지 않았으며 Internet Explorer 10에서 완전히 지원되지 않으며 키보드 사용자가 이러한 링크에 초점을 맞추거나 활성화하는 것을 방해하지 않습니다. 따라서 안전을 위해 사용자 지정 JavaScript를 사용하여 이러한 링크를 비활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="f5e2486f254f630f714154642e6e1261f6e033b5" translate="yes" xml:space="preserve">
          <source>By provided &lt;code&gt;children&lt;/code&gt; to the &lt;code&gt;FormCheck&lt;/code&gt; you can forgo the default rendering and handle it yourself. (You can still provide an &lt;code&gt;id&lt;/code&gt; to the &lt;code&gt;FormCheck&lt;/code&gt; or &lt;code&gt;FormGroup&lt;/code&gt; and have it propagate to the label and input).</source>
          <target state="translated">&lt;code&gt;FormCheck&lt;/code&gt; 에 &lt;code&gt;children&lt;/code&gt; 을 제공 하면 기본 렌더링을 무시 하고 직접 처리 할 수 ​​있습니다. (당신은 여전히 &lt;code&gt;id&lt;/code&gt; 를 &lt;code&gt;FormCheck&lt;/code&gt; 또는 &lt;code&gt;FormGroup&lt;/code&gt; 에 제공 하고 레이블과 입력에 전파 할 수 있습니다).</target>
        </trans-unit>
        <trans-unit id="f21731b2dfdfe44eb164f5feb6cdcd9c48f733bb" translate="yes" xml:space="preserve">
          <source>By providing &lt;code&gt;children&lt;/code&gt; to the &lt;code&gt;FormFile&lt;/code&gt; you can forgo the default rendering and handle it yourself. (You can still provide an &lt;code&gt;id&lt;/code&gt; to the &lt;code&gt;FormFile&lt;/code&gt; and have it propagate to the label and input).</source>
          <target state="translated">&lt;code&gt;FormFile&lt;/code&gt; 에 &lt;code&gt;children&lt;/code&gt; 을 제공 하면 기본 렌더링을 무시 하고 직접 처리 할 수 ​​있습니다. (당신은 여전히 &lt;code&gt;id&lt;/code&gt; 를 &lt;code&gt;FormFile&lt;/code&gt; 에 제공하고 그것을 레이블과 입력에 전파하도록 할 수 있습니다 .)</target>
        </trans-unit>
        <trans-unit id="cf520b63275812a1fc128759e498e18554879f72" translate="yes" xml:space="preserve">
          <source>By relying entirely on the Bootstrap stylesheet, React-Bootstrap just works with the thousands of Bootstrap themes you already love.</source>
          <target state="translated">Bootstrap 스타일 시트에 전적으로 의존함으로써 React-Bootstrap은 이미 좋아하는 수천 개의 Bootstrap 테마와 함께 작동합니다.</target>
        </trans-unit>
        <trans-unit id="194e13da720a1f025685e5d677eba8a1aff3860a" translate="yes" xml:space="preserve">
          <source>CSS</source>
          <target state="translated">CSS</target>
        </trans-unit>
        <trans-unit id="5fb9d0779f9b784d8dc7120e3d0ba3e212464b2a" translate="yes" xml:space="preserve">
          <source>Callback fired after the Modal finishes transitioning in</source>
          <target state="translated">모달이 전환을 마친 후 발생하는 콜백</target>
        </trans-unit>
        <trans-unit id="2908a3a723e67981164e77a0e538071bb78b14fc" translate="yes" xml:space="preserve">
          <source>Callback fired after the Modal finishes transitioning out</source>
          <target state="translated">모달 전환이 완료된 후 콜백이 시작되었습니다.</target>
        </trans-unit>
        <trans-unit id="05b7963daaa4c81cbb75559aa79ceeeee7bc94db" translate="yes" xml:space="preserve">
          <source>Callback fired after the Overlay finishes transitioning in</source>
          <target state="translated">오버레이가 전환을 마친 후 발생하는 콜백</target>
        </trans-unit>
        <trans-unit id="ca6fb824627f5c02baa87bb08d042961c3817839" translate="yes" xml:space="preserve">
          <source>Callback fired after the Overlay finishes transitioning out</source>
          <target state="translated">오버레이 전환이 완료된 후 콜백이 실행 됨</target>
        </trans-unit>
        <trans-unit id="5a0b85d7b5d8ea2e0e3e0224a17a95e4474e550c" translate="yes" xml:space="preserve">
          <source>Callback fired after the component has collapsed</source>
          <target state="translated">구성 요소가 접힌 후 콜백이 시작되었습니다.</target>
        </trans-unit>
        <trans-unit id="8bb20cafc39198bd0458fd1201d5d779ba5d1adb" translate="yes" xml:space="preserve">
          <source>Callback fired after the component has expanded</source>
          <target state="translated">요소가 확장 된 후 콜백이 실행되었습니다.</target>
        </trans-unit>
        <trans-unit id="0473c86a19ff1b151c082b0c915533ea7c38fd77" translate="yes" xml:space="preserve">
          <source>Callback fired after the component has faded out</source>
          <target state="translated">구성 요소가 페이드 아웃 된 후 콜백이 실행되었습니다.</target>
        </trans-unit>
        <trans-unit id="3f7a0db1a4731378ed3ce6ef5c15917770e6292e" translate="yes" xml:space="preserve">
          <source>Callback fired after the component starts to collapse</source>
          <target state="translated">구성 요소가 축소되기 시작한 후 콜백이 실행 됨</target>
        </trans-unit>
        <trans-unit id="ddcbe884ed4ae847c8dd04153767703e70252976" translate="yes" xml:space="preserve">
          <source>Callback fired after the component starts to expand</source>
          <target state="translated">요소가 확장되기 시작한 후 콜백이 실행 됨</target>
        </trans-unit>
        <trans-unit id="371b271c1f26afefab2b691aa82c8209d0f81db9" translate="yes" xml:space="preserve">
          <source>Callback fired after the component starts to fade in</source>
          <target state="translated">구성 요소가 페이드 인을 시작한 후 호출 된 콜백</target>
        </trans-unit>
        <trans-unit id="c8313ad33d2c269201490519613060f3cc63a9a2" translate="yes" xml:space="preserve">
          <source>Callback fired after the component starts to fade out</source>
          <target state="translated">구성 요소가 페이드 아웃되기 시작한 후 호출 된 콜백</target>
        </trans-unit>
        <trans-unit id="aeaebaf7fc123ac4a89b56707df27de0fab184a7" translate="yes" xml:space="preserve">
          <source>Callback fired after the has component faded in</source>
          <target state="translated">has 구성 요소가 페이드 인 된 후 콜백이 시작되었습니다.</target>
        </trans-unit>
        <trans-unit id="9d6f6b7bf9ace536a02f9ac86bdbcd67fa780414" translate="yes" xml:space="preserve">
          <source>Callback fired as the Modal begins to transition in</source>
          <target state="translated">모달이 전환되기 시작하면 콜백이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="cd86ba65f6952781c1fce68c2c703cbc7835c7f9" translate="yes" xml:space="preserve">
          <source>Callback fired as the Modal begins to transition out</source>
          <target state="translated">모달이 전환되기 시작하면 콜백이 시작됨</target>
        </trans-unit>
        <trans-unit id="00b1ca234464a99f22247efa250d128c913f7217" translate="yes" xml:space="preserve">
          <source>Callback fired as the Overlay begins to transition in</source>
          <target state="translated">오버레이가 전환되기 시작하면 콜백이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="169b64951a1e7b5c7c9df698bdfbd57fccd4e1dd" translate="yes" xml:space="preserve">
          <source>Callback fired as the Overlay begins to transition out</source>
          <target state="translated">오버레이가 전환되기 시작하면 콜백이 실행 됨</target>
        </trans-unit>
        <trans-unit id="b9ccab1f01d3e32f40dfce2ffdb9142c925059e0" translate="yes" xml:space="preserve">
          <source>Callback fired before the Modal transitions in</source>
          <target state="translated">모달 전환 전에 발생한 콜백</target>
        </trans-unit>
        <trans-unit id="336d636ecba15c6091db42a295c299f8fb1f17c7" translate="yes" xml:space="preserve">
          <source>Callback fired before the Overlay transitions in</source>
          <target state="translated">오버레이 전환 전에 발생한 콜백</target>
        </trans-unit>
        <trans-unit id="df6259d0a4967e5b9cf8514ae235ade227d73287" translate="yes" xml:space="preserve">
          <source>Callback fired before the component collapses</source>
          <target state="translated">구성 요소가 축소되기 전에 콜백이 시작되었습니다.</target>
        </trans-unit>
        <trans-unit id="fc815b9c1078ea21ddc9cf4089109c3b32f8f0a5" translate="yes" xml:space="preserve">
          <source>Callback fired before the component expands</source>
          <target state="translated">요소가 확장되기 전에 호출 된 콜백</target>
        </trans-unit>
        <trans-unit id="8cc2ce4cf6dd81a986c3eb83b7ed4c96edbb9156" translate="yes" xml:space="preserve">
          <source>Callback fired before the component fades in</source>
          <target state="translated">구성 요소가 페이드 인하 기 전에 콜백이 실행되었습니다.</target>
        </trans-unit>
        <trans-unit id="d32cd9ea8ce502f841824e4d84b55360789cb90b" translate="yes" xml:space="preserve">
          <source>Callback fired before the component fades out</source>
          <target state="translated">구성 요소가 페이드 아웃되기 전에 호출 된 콜백</target>
        </trans-unit>
        <trans-unit id="11cba20fb6fcdf94bfb3f83dc66816c42978fd43" translate="yes" xml:space="preserve">
          <source>Callback fired right before the Modal transitions out</source>
          <target state="translated">모달 전환이 끝나기 직전에 콜백이 시작되었습니다.</target>
        </trans-unit>
        <trans-unit id="b32f9e8f1f834a481d798657f442943e41bed49f" translate="yes" xml:space="preserve">
          <source>Callback fired right before the Overlay transitions out</source>
          <target state="translated">오버레이가 전환되기 직전에 콜백이 실행되었습니다.</target>
        </trans-unit>
        <trans-unit id="a359e7de4e79b358b6c1f76f7c01951dd9076a41" translate="yes" xml:space="preserve">
          <source>Callback fired when a Tab is selected.</source>
          <target state="translated">탭을 선택하면 콜백이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="76f0e2e1045d83cc3541c97d16bbefe52afc97ab" translate="yes" xml:space="preserve">
          <source>Callback fired when a button is pressed, depending on whether the &lt;code&gt;type&lt;/code&gt; is &lt;code&gt;'radio'&lt;/code&gt; or &lt;code&gt;'checkbox'&lt;/code&gt;, &lt;code&gt;onChange&lt;/code&gt; will be called with the value or array of active values</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 이 &lt;code&gt;'radio'&lt;/code&gt; 또는 &lt;code&gt;'checkbox'&lt;/code&gt; 인지 여부에 따라 버튼을 누르면 콜백 이 실행되며 , &lt;code&gt;onChange&lt;/code&gt; 는 활성 값의 값 또는 배열로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="6f7e5dbd354789e9c7f43f71712f1e001aef0047" translate="yes" xml:space="preserve">
          <source>Callback fired when a slide transition ends.</source>
          <target state="translated">슬라이드 전환이 종료되면 콜백이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="c7f7741283959f993b41a125928a8ad9baacef68" translate="yes" xml:space="preserve">
          <source>Callback fired when a slide transition starts.</source>
          <target state="translated">슬라이드 전환이 시작되면 콜백이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="45a841748fa1e418cfa915be6e1b288a92e9c543" translate="yes" xml:space="preserve">
          <source>Callback fired when alert is closed.</source>
          <target state="translated">알림이 종료되면 콜백이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="d33b86277dc85981463eb50d96a374162770fe42" translate="yes" xml:space="preserve">
          <source>Callback fired when the active item changes.</source>
          <target state="translated">활성 항목이 변경되면 콜백이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="3649e73f9c9acb51f01debac4cc4865508a55f96" translate="yes" xml:space="preserve">
          <source>Callback fired when the menu item is clicked.</source>
          <target state="translated">메뉴 항목을 클릭하면 콜백이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="d6b05a980abaeaac219792f5c13dd5da11355033" translate="yes" xml:space="preserve">
          <source>Callback fired when the menu item is selected.</source>
          <target state="translated">메뉴 항목이 선택되면 콜백이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="4d4ce73b15660f20977ad7efab2283c51bdae008" translate="yes" xml:space="preserve">
          <source>Card</source>
          <target state="translated">Card</target>
        </trans-unit>
        <trans-unit id="9b55fd3ac89d0cc0dcd86de51462c56faf008cd6" translate="yes" xml:space="preserve">
          <source>Card Columns</source>
          <target state="translated">카드 열</target>
        </trans-unit>
        <trans-unit id="fe8f8cae4cf3853d6844889169b59bf5df3d516f" translate="yes" xml:space="preserve">
          <source>Card Deck</source>
          <target state="translated">카드 데크</target>
        </trans-unit>
        <trans-unit id="ab73e853eeb3e52fbf51637f49ccf46ae0b3247b" translate="yes" xml:space="preserve">
          <source>Card Groups</source>
          <target state="translated">카드 그룹</target>
        </trans-unit>
        <trans-unit id="1daa70ca3e270be81f0f2c5c86bc897fcd8f7971" translate="yes" xml:space="preserve">
          <source>Card Styles</source>
          <target state="translated">카드 스타일</target>
        </trans-unit>
        <trans-unit id="f83b655b3ba916fe19a31416e6ef987408907da1" translate="yes" xml:space="preserve">
          <source>Card layout</source>
          <target state="translated">카드 레이아웃</target>
        </trans-unit>
        <trans-unit id="07cc5f5e1dd68c1d72edf2f4cc1143a5dcdcc026" translate="yes" xml:space="preserve">
          <source>Card.Body</source>
          <target state="translated">Card.Body</target>
        </trans-unit>
        <trans-unit id="30739d8c6e772a8e1776dc286bbd149a406fdc94" translate="yes" xml:space="preserve">
          <source>Card.Img</source>
          <target state="translated">Card.Img</target>
        </trans-unit>
        <trans-unit id="892039c92480b41745ec9662d9088639d880c3f2" translate="yes" xml:space="preserve">
          <source>Card.ImgOverlay</source>
          <target state="translated">Card.ImgOverlay</target>
        </trans-unit>
        <trans-unit id="1372a40d32048fa7864d50f7b365ac1ad3a776e3" translate="yes" xml:space="preserve">
          <source>CardColumns</source>
          <target state="translated">CardColumns</target>
        </trans-unit>
        <trans-unit id="5699d3e71d787f12a15eafd10d9ece3af7467b2d" translate="yes" xml:space="preserve">
          <source>CardDeck</source>
          <target state="translated">CardDeck</target>
        </trans-unit>
        <trans-unit id="e273fd4c27436a1177b401ec14dcbf73844b0311" translate="yes" xml:space="preserve">
          <source>CardGroup</source>
          <target state="translated">CardGroup</target>
        </trans-unit>
        <trans-unit id="0f830bc25e52f96121b00a67378be1abeaa3f274" translate="yes" xml:space="preserve">
          <source>Cards</source>
          <target state="translated">Cards</target>
        </trans-unit>
        <trans-unit id="9ae567206c892dad59367b38c3595b1fb0a7c171" translate="yes" xml:space="preserve">
          <source>Cards include a few options for working with images. Choose from appending &amp;ldquo;image caps&amp;rdquo; at either end of a card, overlaying images with card content, or simply embedding the image in a card.</source>
          <target state="translated">카드에는 이미지 작업을위한 몇 가지 옵션이 있습니다. 카드의 양쪽 끝에 &quot;이미지 캡&quot;을 추가하거나, 카드 콘텐츠와 이미지를 오버레이하거나, 단순히 카드에 이미지를 삽입 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1f842e1950136f97e6b449b2ee8ee2a88c9d214" translate="yes" xml:space="preserve">
          <source>Carousel</source>
          <target state="translated">Carousel</target>
        </trans-unit>
        <trans-unit id="e0e62ce4778833522e8cd53e05286dd64e398b37" translate="yes" xml:space="preserve">
          <source>Carousel.Caption</source>
          <target state="translated">Carousel.Caption</target>
        </trans-unit>
        <trans-unit id="67e147a2bc0ccb762a233fd0bc964c04a8adfbf7" translate="yes" xml:space="preserve">
          <source>Carousel.Item</source>
          <target state="translated">Carousel.Item</target>
        </trans-unit>
        <trans-unit id="a1f84807f6a7bc63dcbf73f84a403b8277082245" translate="yes" xml:space="preserve">
          <source>Carousels</source>
          <target state="translated">Carousels</target>
        </trans-unit>
        <trans-unit id="b33fdd38b6e3e5992f674fb776ad690a38aa4d96" translate="yes" xml:space="preserve">
          <source>Carousels don&amp;rsquo;t automatically normalize slide dimensions. As such, you may need to use additional utilities or custom styles to appropriately size content. While carousels support previous/next controls and indicators, they&amp;rsquo;re not explicitly required. Add and customize as you see fit.</source>
          <target state="translated">캐 러셀은 슬라이드 크기를 자동으로 정규화하지 않습니다. 따라서 컨텐츠의 크기를 적절하게 조정하려면 추가 유틸리티 또는 사용자 정의 스타일을 사용해야 할 수 있습니다. 캐 러셀은 이전 / 다음 컨트롤 및 표시기를 지원하지만 명시 적으로 필요하지는 않습니다. 원하는대로 추가하고 사용자 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="3f042044440a554bea3a31e8a9a7b1f0834d9be9" translate="yes" xml:space="preserve">
          <source>Caveat with anchors</source>
          <target state="translated">앵커에 대한 경고</target>
        </trans-unit>
        <trans-unit id="bc5d80915f1425e5e3bdf0f29532642a9b901589" translate="yes" xml:space="preserve">
          <source>Change the order of content in media objects by modifying the HTML itself, or by adding some custom flexbox CSS to set the &lt;code&gt;order&lt;/code&gt; property (to an integer of your choosing).</source>
          <target state="translated">HTML 자체를 수정하거나 사용자 지정 flexbox CSS를 추가 하여 (선택한 정수로) &lt;code&gt;order&lt;/code&gt; 속성 을 설정하여 미디어 개체의 콘텐츠 순서를 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="a996861c76f104cefe2745666745967f5f06f142" translate="yes" xml:space="preserve">
          <source>Change the underlying component CSS base class name and modifier class names prefix. &lt;strong&gt;This is an escape hatch&lt;/strong&gt; for working with heavily customized bootstrap css.</source>
          <target state="translated">기본 구성 요소 CSS 기본 클래스 이름 및 수정 자 클래스 이름 접두사를 변경합니다. &lt;strong&gt;이것은&lt;/strong&gt; 고도로 맞춤화 된 부트 스트랩 CSS로 작업하기위한 &lt;strong&gt;탈출 해치&lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ee0ddeece347122961a34096fa535455e7c52403" translate="yes" xml:space="preserve">
          <source>Changes the animation style of the spinner.</source>
          <target state="translated">스피너의 애니메이션 스타일을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="e52dc46f51cc232cd229d5eb0cc279d036249d88" translate="yes" xml:space="preserve">
          <source>Changes the flow of the list group items from vertical to horizontal. A value of &lt;code&gt;null&lt;/code&gt; (the default) sets it to vertical for all breakpoints; Just including the prop sets it for all breakpoints, while &lt;code&gt;{sm|md|lg|xl}&lt;/code&gt; makes the list group horizontal starting at that breakpoint&amp;rsquo;s &lt;code&gt;min-width&lt;/code&gt;.</source>
          <target state="translated">목록 그룹 항목의 흐름을 세로에서 가로로 변경합니다. &lt;code&gt;null&lt;/code&gt; (기본값) 값은 모든 중단 점에 대해 수직으로 설정합니다. prop을 포함하면 모든 중단 점에 대해 설정되는 반면 &lt;code&gt;{sm|md|lg|xl}&lt;/code&gt; 은 해당 중단 점의 &lt;code&gt;min-width&lt;/code&gt; 에서 시작하는 목록 그룹을 수평으로 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="4970b3faa1ad0c8f94378ab6faca672af6dd051e" translate="yes" xml:space="preserve">
          <source>Changing containers</source>
          <target state="translated">컨테이너 변경</target>
        </trans-unit>
        <trans-unit id="23ace2d0ebff0028d737ef1bd3fa7a48c5bc6aca" translate="yes" xml:space="preserve">
          <source>Changing prefixes is an escape hatch and generally shouldn't be used.</source>
          <target state="translated">접두사 변경은 이스케이프 해치이므로 일반적으로 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="60ef195e89c1e6dcd55a3cf2d60d3485becfe886" translate="yes" xml:space="preserve">
          <source>Chat rooms</source>
          <target state="translated">대화방</target>
        </trans-unit>
        <trans-unit id="0452cb0eaec0c911f50375a1956f8ec6136e1b27" translate="yes" xml:space="preserve">
          <source>Checkbox / Radio</source>
          <target state="translated">체크 박스 / 라디오</target>
        </trans-unit>
        <trans-unit id="37953e6bf70cdf42e9c346602872f3e98802e08e" translate="yes" xml:space="preserve">
          <source>Checkbox and Radio</source>
          <target state="translated">체크 박스 및 라디오</target>
        </trans-unit>
        <trans-unit id="7cb38c3adffe70a105337ee87a172f6de16123f4" translate="yes" xml:space="preserve">
          <source>Checkboxes and Radios</source>
          <target state="translated">체크 박스 및 라디오</target>
        </trans-unit>
        <trans-unit id="99cfab1677c09acb6724cfeb5e5952fb194ef237" translate="yes" xml:space="preserve">
          <source>Checkboxes and radios</source>
          <target state="translated">체크 박스 및 라디오</target>
        </trans-unit>
        <trans-unit id="7d409c4cb3632896593ad6939bcce63d6ca23bba" translate="yes" xml:space="preserve">
          <source>Child elements (only allows elements of type )</source>
          <target state="translated">하위 요소 (유형의 요소 만 허용)</target>
        </trans-unit>
        <trans-unit id="55215015089d887fd6a7e67d74e94274a9c90a03" translate="yes" xml:space="preserve">
          <source>Children prop should only contain a single child, and is enforced as such</source>
          <target state="translated">어린이 소품은 한 명의 어린이 만 포함해야하며 그렇게 시행됩니다.</target>
        </trans-unit>
        <trans-unit id="4263b68b284df1c08db292e1ce33646672a58953" translate="yes" xml:space="preserve">
          <source>Close the modal when escape key is pressed</source>
          <target state="translated">Esc 키를 누르면 모달을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="3e44ce8c4c7707f647efeae28819c47004c4c13d" translate="yes" xml:space="preserve">
          <source>Col</source>
          <target state="translated">Col</target>
        </trans-unit>
        <trans-unit id="9cf188d3a6779d63b36b10275b0228ae22ec97d6" translate="yes" xml:space="preserve">
          <source>Collapse</source>
          <target state="translated">Collapse</target>
        </trans-unit>
        <trans-unit id="d330b9f3360c20ab3fd22f417f68161108f476e5" translate="yes" xml:space="preserve">
          <source>Color schemes</source>
          <target state="translated">색 구성표</target>
        </trans-unit>
        <trans-unit id="7b4c01ece88090cf379e40677cb200a846c228a9" translate="yes" xml:space="preserve">
          <source>Column sizing</source>
          <target state="translated">열 크기 조정</target>
        </trans-unit>
        <trans-unit id="39e7514272b759d4bd08da32f98b93269c08ff32" translate="yes" xml:space="preserve">
          <source>Combine sets of &lt;code&gt;&amp;lt;ButtonGroup&amp;gt;&lt;/code&gt;s into a &lt;code&gt;&amp;lt;ButtonToolbar&amp;gt;&lt;/code&gt; for more complex components.</source>
          <target state="translated">보다 복잡한 구성 요소를 위해 &lt;code&gt;&amp;lt;ButtonGroup&amp;gt;&lt;/code&gt; 집합을 &amp;lt; &lt;code&gt;&amp;lt;ButtonToolbar&amp;gt;&lt;/code&gt; 로 결합합니다 .</target>
        </trans-unit>
        <trans-unit id="70f2e48c8fd9c75f0244761b4d04b8ef3e75648b" translate="yes" xml:space="preserve">
          <source>Component size variations.</source>
          <target state="translated">구성 요소 크기 변형.</target>
        </trans-unit>
        <trans-unit id="f597f4a49eb7489b52350d29cbcebef3ab034fe3" translate="yes" xml:space="preserve">
          <source>Component visual or contextual style variants.</source>
          <target state="translated">구성 요소 시각적 또는 상황 별 스타일 변형.</target>
        </trans-unit>
        <trans-unit id="feaa414115643d958582709ff488a141259a237c" translate="yes" xml:space="preserve">
          <source>Consolidated into a single component. Component's name is &lt;code&gt;FormCheck&lt;/code&gt; (also exported on &lt;code&gt;Form&lt;/code&gt; as &lt;code&gt;Form.Check&lt;/code&gt;)</source>
          <target state="translated">단일 구성 요소로 통합되었습니다. 구성 요소의 이름은 &lt;code&gt;FormCheck&lt;/code&gt; 입니다 (또한 &lt;code&gt;Form&lt;/code&gt; 에서 &lt;code&gt;Form.Check&lt;/code&gt; 로 내보내 짐 ).</target>
        </trans-unit>
        <trans-unit id="e6443af99d2f470f50affd5057bf48db2d09dae4" translate="yes" xml:space="preserve">
          <source>Container</source>
          <target state="translated">Container</target>
        </trans-unit>
        <trans-unit id="e040a458f46532a90ec69fa0b4bfc33ba151c98b" translate="yes" xml:space="preserve">
          <source>Containers</source>
          <target state="translated">Containers</target>
        </trans-unit>
        <trans-unit id="ff3d1732e27ec6e11f8eedafb9030b92e6349881" translate="yes" xml:space="preserve">
          <source>Containers provide a means to center and horizontally pad your site&amp;rsquo;s contents. Use &lt;code&gt;Container&lt;/code&gt; for a responsive pixel width.</source>
          <target state="translated">컨테이너는 사이트 콘텐츠를 중앙에 가로로 채우는 수단을 제공합니다. 반응 형 픽셀 너비에 &lt;code&gt;Container&lt;/code&gt; 를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="20018f674f071f0d5155f902c149dd46a2550788" translate="yes" xml:space="preserve">
          <source>Content types</source>
          <target state="translated">콘텐츠 유형</target>
        </trans-unit>
        <trans-unit id="c86d5e9c54261669f96fecc16a3f47e52624a29e" translate="yes" xml:space="preserve">
          <source>Contextual alternatives</source>
          <target state="translated">상황에 맞는 대안</target>
        </trans-unit>
        <trans-unit id="efc21d80aa54be100ea1897ad506641353ee533b" translate="yes" xml:space="preserve">
          <source>Contextual classes</source>
          <target state="translated">상황 별 클래스</target>
        </trans-unit>
        <trans-unit id="0f154936ebd731672f3f2a0ef062f86f21d318f4" translate="yes" xml:space="preserve">
          <source>Contextual variations</source>
          <target state="translated">문맥 변화</target>
        </trans-unit>
        <trans-unit id="a60a223c98b2c36522f0b7f89f57ae14e144678a" translate="yes" xml:space="preserve">
          <source>Contributors</source>
          <target state="translated">Contributors</target>
        </trans-unit>
        <trans-unit id="affe9b7bc76a9bc51faeed3685538c63e8d9ad62" translate="yes" xml:space="preserve">
          <source>Control the rendering of the DropdownMenu. All non-menu props (listed here) are passed through to the &lt;code&gt;as&lt;/code&gt; Component.</source>
          <target state="translated">DropdownMenu의 렌더링을 제어합니다. 메뉴가 아닌 모든 소품 (여기에 나열 됨)은 구성 요소 &lt;code&gt;as&lt;/code&gt; 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="97685510acde7c9a29789293a89c38a9aee5520b" translate="yes" xml:space="preserve">
          <source>Control the size of buttons and form elements from the top-level.</source>
          <target state="translated">최상위 수준에서 버튼 및 양식 요소의 크기를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="c531fa90fe48974c47daf92597e244093285b5bf" translate="yes" xml:space="preserve">
          <source>ControlLabel</source>
          <target state="translated">ControlLabel</target>
        </trans-unit>
        <trans-unit id="3040122209570156baf48fd7cbda4da342dceb0c" translate="yes" xml:space="preserve">
          <source>Controlled</source>
          <target state="translated">Controlled</target>
        </trans-unit>
        <trans-unit id="7f870854a1f0a28f0307a88f1b589de1bb54246b" translate="yes" xml:space="preserve">
          <source>Controls &lt;b&gt;only appear inline in viewports that are at least 576px wide&lt;/b&gt; to account for narrow viewports on mobile devices.</source>
          <target state="translated">컨트롤 은 모바일 장치의 좁은 뷰포트를 고려 &lt;b&gt;하여 최소 576px 너비의 뷰포트에서만 인라인으로 나타납니다&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="02c503a55bfb35fc913877ab516bfebbd4c5979e" translate="yes" xml:space="preserve">
          <source>Controls and input groups receive &lt;code&gt;width: auto&lt;/code&gt; to override the Bootstrap default &lt;code&gt;width: 100%&lt;/code&gt;.</source>
          <target state="translated">컨트롤 및 입력 그룹은 &lt;code&gt;width: auto&lt;/code&gt; 를 수신 하여 Bootstrap 기본 &lt;code&gt;width: 100%&lt;/code&gt; 를 재정의합니다 .</target>
        </trans-unit>
        <trans-unit id="200df4d9f23c691b578226cd1ee91a9dc21d38a2" translate="yes" xml:space="preserve">
          <source>Controls are &lt;code&gt;display: flex&lt;/code&gt;, collapsing any HTML white space and allowing you to provide alignment control with spacing and utilities.</source>
          <target state="translated">컨트롤은 &lt;code&gt;display: flex&lt;/code&gt; , HTML 공백을 축소하고 간격 및 유틸리티로 정렬 제어를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9317bef9af525bcfb90232f508b98e519f1d0893" translate="yes" xml:space="preserve">
          <source>Controls the current visible slide</source>
          <target state="translated">현재 보이는 슬라이드를 제어합니다</target>
        </trans-unit>
        <trans-unit id="88d2b532698a6d0199748e485d23e2a47f735ed6" translate="yes" xml:space="preserve">
          <source>Controls the focus behavior for when the Dropdown is opened. Set to &lt;code&gt;true&lt;/code&gt; to always focus the first menu item, &lt;code&gt;keyboard&lt;/code&gt; to focus only when navigating via the keyboard, or &lt;code&gt;false&lt;/code&gt; to disable completely</source>
          <target state="translated">드롭 다운이 열릴 때의 포커스 동작을 제어합니다. 항상 첫 번째 메뉴 항목에 초점을 맞추 려면 &lt;code&gt;true&lt;/code&gt; 로 설정하고 , &lt;code&gt;keyboard&lt;/code&gt; 를 통해 탐색 할 때만 초점을 맞추려면 키보드를, 완전히 비활성화하려면 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="67f3fe05616e9f96f49ce84d93ee55d74ea9b4e4" translate="yes" xml:space="preserve">
          <source>Controls the visibility of the Dropdown menu</source>
          <target state="translated">드롭 다운 메뉴의 가시성을 제어합니다</target>
        </trans-unit>
        <trans-unit id="20d6a2fa84971fe0d8d09a3ffc82f902238b63ba" translate="yes" xml:space="preserve">
          <source>Controls the visiblity of the navbar body</source>
          <target state="translated">navbar 본문의 가시성을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="282eda334e22898f679a1a0c8ecffe834fba20cd" translate="yes" xml:space="preserve">
          <source>Controls the visual state of the Alert.</source>
          <target state="translated">경고의 시각적 상태를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="26909410a99574e1b89cf92381d2188fb6810d8a" translate="yes" xml:space="preserve">
          <source>Create a fixed navbar along the top or bottom of the screen, that scrolls with the page. A convenience prop for the &lt;code&gt;fixed-*&lt;/code&gt; positioning classes.</source>
          <target state="translated">페이지와 함께 스크롤되는 화면 상단 또는 하단을 따라 고정 탐색 모음을 만듭니다. &lt;code&gt;fixed-*&lt;/code&gt; 포지셔닝 클래스를 위한 편의 소품 .</target>
        </trans-unit>
        <trans-unit id="a73cd5b84cf1aa5fc0378de61fb90754d0b8d523" translate="yes" xml:space="preserve">
          <source>Create a set of NavItems each with an &lt;code&gt;eventKey&lt;/code&gt; corresponding to the eventKey of a &lt;code&gt;TabPane&lt;/code&gt;. Wrap the whole thing in a &lt;code&gt;TabContainer&lt;/code&gt; and you have fully functioning custom tabs component. Check out the below example making use of the grid system and pills.</source>
          <target state="translated">&lt;code&gt;TabPane&lt;/code&gt; 의 eventKey에 해당 하는 &lt;code&gt;eventKey&lt;/code&gt; 를 사용하여 각각 NavItems 집합을 만듭니다 . 모든 것을 &lt;code&gt;TabContainer&lt;/code&gt; 로 감싸면 완벽하게 작동하는 사용자 정의 탭 구성 요소가 있습니다. 그리드 시스템과 알약을 사용하는 아래 예제를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="0f868422f459139ed3a68f58bd15bacfd9b20000" translate="yes" xml:space="preserve">
          <source>Create block level buttons&amp;mdash;those that span the full width of a parent&amp;mdash;by adding &lt;code&gt;block&lt;/code&gt;</source>
          <target state="translated">블록 레벨 버튼-이러한 추가 바이 모 (A)의 전체 폭에 걸쳐 그 생성 &lt;code&gt;block&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d37da6bcbc69cc5b33355cdccdcc1b98992b964" translate="yes" xml:space="preserve">
          <source>Create dynamic tabbed interfaces, as described in the &lt;a href=&quot;https://www.w3.org/TR/wai-aria-practices/#tabpanel&quot;&gt;&lt;abbr&gt;WAI&lt;/abbr&gt; &lt;abbr&gt;ARIA&lt;/abbr&gt; Authoring Practices&lt;/a&gt;. &lt;code&gt;Tabs&lt;/code&gt; is a higher-level component for quickly creating a &lt;code&gt;Nav&lt;/code&gt; matched with a set of &lt;code&gt;TabPane&lt;/code&gt;s.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/wai-aria-practices/#tabpanel&quot;&gt;&lt;abbr&gt;WAI &lt;/abbr&gt; &lt;abbr&gt;ARIA&lt;/abbr&gt; Authoring Practices에&lt;/a&gt; 설명 된대로 동적 탭 인터페이스를 만듭니다 . &lt;code&gt;Tabs&lt;/code&gt; 는 &lt;code&gt;TabPane&lt;/code&gt; 집합과 일치 하는 &lt;code&gt;Nav&lt;/code&gt; 를 빠르게 생성하기위한 상위 수준 구성 요소입니다 .</target>
        </trans-unit>
        <trans-unit id="51b375adacc1bb9dc95dd9983a7b6e62c93ddccf" translate="yes" xml:space="preserve">
          <source>Create lists of content in a card with a flush list group.</source>
          <target state="translated">플러시 목록 그룹을 사용하여 카드에 콘텐츠 목록을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="f69eea99dcabf76ad2c30c78f8a78e8781c71891" translate="yes" xml:space="preserve">
          <source>Create stacked navs by changing the flex item direction with the &lt;code&gt;.flex-column&lt;/code&gt; class, or your own css. You can even use the responsive versions to stack in some viewports but not others (e.g. &lt;code&gt;.flex-sm-column&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;.flex-column&lt;/code&gt; 클래스 또는 자체 CSS로 플렉스 항목 방향을 변경하여 스택 탐색을 만듭니다 . 반응 형 버전을 사용하여 일부 뷰포트에 스택 할 수도 있지만 다른 뷰포트에는 스택 할 수 없습니다 (예 : &lt;code&gt;.flex-sm-column&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b2d65fbbd11e81b901f08688d606777d9b4fed32" translate="yes" xml:space="preserve">
          <source>Creating an Overlay</source>
          <target state="translated">오버레이 만들기</target>
        </trans-unit>
        <trans-unit id="c6b74000c4863d7dc00ca3333f0274a2ee5b837f" translate="yes" xml:space="preserve">
          <source>Cross fade slides instead of the default slide animation</source>
          <target state="translated">기본 슬라이드 애니메이션 대신 크로스 페이드 슬라이드</target>
        </trans-unit>
        <trans-unit id="f5e9c47e144b4bc17523b7ea704257c9dd3450ae" translate="yes" xml:space="preserve">
          <source>Cross-browser compatibility</source>
          <target state="translated">브라우저 간 호환성</target>
        </trans-unit>
        <trans-unit id="1c06efed5e0e8d7af8ed0a6fe87926b679e08ae7" translate="yes" xml:space="preserve">
          <source>Current value of progress</source>
          <target state="translated">현재 진행 가치</target>
        </trans-unit>
        <trans-unit id="4d54fe8fd46c56a30159b1fd79caa79965bea66b" translate="yes" xml:space="preserve">
          <source>Current version: 1.5.0</source>
          <target state="translated">현재 버전 : 1.5.0</target>
        </trans-unit>
        <trans-unit id="83953b25f5c3049196c5e03b92d3c2d097e0d1b2" translate="yes" xml:space="preserve">
          <source>Custom Dropdown Components</source>
          <target state="translated">사용자 지정 드롭 다운 구성 요소</target>
        </trans-unit>
        <trans-unit id="9fe1ee4768776c9a6069f1dcd63030d3f79df5c4" translate="yes" xml:space="preserve">
          <source>Custom Tab Layout</source>
          <target state="translated">맞춤 탭 레이아웃</target>
        </trans-unit>
        <trans-unit id="5bf11e19c51d2a0a7c58612f23943d5032a92d21" translate="yes" xml:space="preserve">
          <source>Custom Toggle</source>
          <target state="translated">사용자 지정 토글</target>
        </trans-unit>
        <trans-unit id="de827e66cfed2d723474608dc19de5f9a356fad6" translate="yes" xml:space="preserve">
          <source>Custom Toggle with Expansion Awareness</source>
          <target state="translated">확장 인식 기능이있는 사용자 지정 토글</target>
        </trans-unit>
        <trans-unit id="264b1e11f21d3bc4a8ffc3c05bf4f5931ecb6ab3" translate="yes" xml:space="preserve">
          <source>Custom button styles for actions in forms, dialogs, and more with support for multiple sizes, states, and more.</source>
          <target state="translated">다양한 크기, 상태 등을 지원하는 양식, 대화 상자 등의 작업에 대한 사용자 정의 버튼 스타일.</target>
        </trans-unit>
        <trans-unit id="493bc408f4f1165cfcce700f0f229020692b7a01" translate="yes" xml:space="preserve">
          <source>Custom checkbox and radio styles are achieved with a resourceful use of the &lt;code&gt;:checked&lt;/code&gt; selector and &lt;code&gt;:after&lt;/code&gt; pseudo elements, but are Structurally similar to the default &lt;code&gt;FormCheck&lt;/code&gt;. By default the checked and indeterminate icons use embedded svg icons from &lt;a href=&quot;https://useiconic.com/open&quot;&gt;Open Iconic&lt;/a&gt;.</source>
          <target state="translated">사용자 정의 확인란 및 라디오 스타일은 &lt;code&gt;:checked&lt;/code&gt; 선택기 및 &lt;code&gt;:after&lt;/code&gt; 의사 요소를 사용하여 얻을 수 있지만 구조적으로 기본 &lt;code&gt;FormCheck&lt;/code&gt; 와 유사합니다 . 기본적으로 선택 및 확정되지 않은 아이콘은 &lt;a href=&quot;https://useiconic.com/open&quot;&gt;Open Iconic의&lt;/a&gt; 포함 된 svg 아이콘을 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="66a3bef192d801a366077433bb5b29d7bdb7ae5a" translate="yes" xml:space="preserve">
          <source>Custom form controls and selects are also supported.</source>
          <target state="translated">사용자 지정 양식 컨트롤 및 선택도 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="0a616fac015ef86d7956fdeec6efd828dd3c107c" translate="yes" xml:space="preserve">
          <source>Custom forms</source>
          <target state="translated">사용자 정의 양식</target>
        </trans-unit>
        <trans-unit id="ebe7831581447b030cf17ce91c0e13df8d00b718" translate="yes" xml:space="preserve">
          <source>Custom variants and sizes should follow the pattern of the default bootstrap variants, and define css classes matching: &lt;code&gt;component-*&lt;/code&gt;. React bootstrap builds the component &lt;code&gt;classNames&lt;/code&gt; in a consistent way that you can rely on. For instance this custom Button.</source>
          <target state="translated">사용자 지정 변형 및 크기는 기본 부트 스트랩 변형의 패턴을 따라야하며 &lt;code&gt;component-*&lt;/code&gt; 와 일치하는 CSS 클래스를 정의해야 합니다. React 부트 스트랩은 신뢰할 수있는 일관된 방식으로 구성 요소 &lt;code&gt;classNames&lt;/code&gt; 를 빌드합니다 . 예를 들어이 사용자 정의 버튼.</target>
        </trans-unit>
        <trans-unit id="d7f0ac9e007291a6ccc21d036f4711505ad9d0b1" translate="yes" xml:space="preserve">
          <source>Customization</source>
          <target state="translated">Customization</target>
        </trans-unit>
        <trans-unit id="aca428117ee8be83b63828350a256c689e7d720d" translate="yes" xml:space="preserve">
          <source>Customize Bootstrap</source>
          <target state="translated">부트 스트랩 사용자 지정</target>
        </trans-unit>
        <trans-unit id="d4909a35308b9708e4373b6a61150ae4db48f64a" translate="yes" xml:space="preserve">
          <source>Customizing FormCheck rendering</source>
          <target state="translated">FormCheck 렌더링 사용자 정의</target>
        </trans-unit>
        <trans-unit id="0a9d44aae946a1d0ed01b48ae7b2ed114446e05c" translate="yes" xml:space="preserve">
          <source>Customizing FormFile rendering</source>
          <target state="translated">FormFile 렌더링 사용자 정의</target>
        </trans-unit>
        <trans-unit id="585f102a8500aa72f04b3c67fe35741e3696bbac" translate="yes" xml:space="preserve">
          <source>Customizing trigger behavior</source>
          <target state="translated">트리거 동작 사용자 지정</target>
        </trans-unit>
        <trans-unit id="2b3c0325a7e37da56a7ca45754ae0665d60a2d27" translate="yes" xml:space="preserve">
          <source>Dark Table</source>
          <target state="translated">다크 테이블</target>
        </trans-unit>
        <trans-unit id="808d7dca8a74d84af27a2d6602c3d786de45fe1e" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Default</target>
        </trans-unit>
        <trans-unit id="33640c1cc954f543deab34a1adf146403e417d45" translate="yes" xml:space="preserve">
          <source>Default (stacked)</source>
          <target state="translated">기본값 (스택)</target>
        </trans-unit>
        <trans-unit id="b89291a606bb1706df8bfd482fedacbb7e024ae6" translate="yes" xml:space="preserve">
          <source>Default progress bar.</source>
          <target state="translated">기본 진행률 표시 줄.</target>
        </trans-unit>
        <trans-unit id="e0e58056d10bf26567010f118e5555f109e8830c" translate="yes" xml:space="preserve">
          <source>Defines HTML button type attribute.</source>
          <target state="translated">HTML 버튼 유형 속성을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="2414df0ed5fae95cb3319300a241d17116a56a6f" translate="yes" xml:space="preserve">
          <source>Defines image position inside the card.</source>
          <target state="translated">카드 내부의 이미지 위치를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="2b4035987766c8f9234b74745d610e5b45afb739" translate="yes" xml:space="preserve">
          <source>Delay hiding the toast (ms)</source>
          <target state="translated">토스트 숨기기 지연 (ms)</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="1546c0bd6a5aa846da05055aa33e6c0ec4789e1c" translate="yes" xml:space="preserve">
          <source>Determines the direction and location of the Menu in relation to it's Toggle.</source>
          <target state="translated">토글과 관련하여 메뉴의 방향과 위치를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="ea5c377cc6bf85a2837806b08fbc48aa4d2d2dd9" translate="yes" xml:space="preserve">
          <source>Disable the menu item, making it unselectable.</source>
          <target state="translated">메뉴 항목을 비활성화하여 선택 불가능하게 만듭니다.</target>
        </trans-unit>
        <trans-unit id="402a04eb30d5fc2d47ef255a4923622881fa69c1" translate="yes" xml:space="preserve">
          <source>Disabled elements</source>
          <target state="translated">비활성화 된 요소</target>
        </trans-unit>
        <trans-unit id="78c6018d1bf19906b96f16d35e6821365ee1f73f" translate="yes" xml:space="preserve">
          <source>Disabled forms</source>
          <target state="translated">비활성화 된 양식</target>
        </trans-unit>
        <trans-unit id="c5c6cc6a9b45c61bd67edd0b1039f122f2c298ac" translate="yes" xml:space="preserve">
          <source>Disabled items</source>
          <target state="translated">장애인 품목</target>
        </trans-unit>
        <trans-unit id="5f3e361039102b664cd571c88c200e55a513d04e" translate="yes" xml:space="preserve">
          <source>Disabled state</source>
          <target state="translated">비활성화 상태</target>
        </trans-unit>
        <trans-unit id="bc7e87c06af33ed66dba26b38d8648845b170dcc" translate="yes" xml:space="preserve">
          <source>Disables both Buttons</source>
          <target state="translated">두 버튼 모두 비활성화</target>
        </trans-unit>
        <trans-unit id="9dd625a15ab5dd1afe90527d5d2bb5eaadf9ca69" translate="yes" xml:space="preserve">
          <source>Disables the Button, preventing mouse events, even if the underlying component is an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element</source>
          <target state="translated">Button을 비활성화하여 기본 구성 요소가 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 요소 인 경우에도 마우스 이벤트를 방지합니다.</target>
        </trans-unit>
        <trans-unit id="f2879cbb1ce239d53658746527daceb2d4136b06" translate="yes" xml:space="preserve">
          <source>Disables the PageItem</source>
          <target state="translated">PageItem을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="d9d766f0e78836926113fdfe7c1d823a2532093f" translate="yes" xml:space="preserve">
          <source>Disables the control.</source>
          <target state="translated">컨트롤을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="637596322f19a5843712e5455003dfefb249cd14" translate="yes" xml:space="preserve">
          <source>Disables the toggle NavLink</source>
          <target state="translated">토글 NavLink를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="9643f749610880698b2422fb71b8c92f991bc171" translate="yes" xml:space="preserve">
          <source>Discuss questions in the &lt;code&gt;#react-bootstrap&lt;/code&gt; channel on the &lt;a href=&quot;https://discord.gg/AKfs9vpvRW&quot;&gt;Reactiflux Discord&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://discord.gg/AKfs9vpvRW&quot;&gt;Reactiflux Discord&lt;/a&gt; 의 &lt;code&gt;#react-bootstrap&lt;/code&gt; 채널에서 질문에 대해 토론하십시오 .</target>
        </trans-unit>
        <trans-unit id="f16dedd40cc2790ba99703a18df165e4f043f496" translate="yes" xml:space="preserve">
          <source>Dismissible</source>
          <target state="translated">Dismissible</target>
        </trans-unit>
        <trans-unit id="63920500adae831499ae5700cd35e5e1507f8c41" translate="yes" xml:space="preserve">
          <source>Dismissing</source>
          <target state="translated">Dismissing</target>
        </trans-unit>
        <trans-unit id="fd5308608a74adf620af3c0deaf9a6f44f7ba5c9" translate="yes" xml:space="preserve">
          <source>Display as a button toggle group.</source>
          <target state="translated">버튼 토글 그룹으로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="a7698a78959c651ff354cea833d622a5f153ff47" translate="yes" xml:space="preserve">
          <source>Display feedback as a tooltip.</source>
          <target state="translated">도구 설명으로 피드백을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="13c96d0b3444e1f6f6a6f2589ba5a7950a7301c1" translate="yes" xml:space="preserve">
          <source>Display the series of labels, form controls, and buttons on a single horizontal row</source>
          <target state="translated">단일 가로 행에 일련의 레이블, 양식 컨트롤 및 단추 표시</target>
        </trans-unit>
        <trans-unit id="a94e70495e58b047e9bce80abd4a3e7bb7319f79" translate="yes" xml:space="preserve">
          <source>Displaying related images and text with the Figure component.</source>
          <target state="translated">Figure 구성 요소를 사용하여 관련 이미지 및 텍스트 표시.</target>
        </trans-unit>
        <trans-unit id="57a6e485cec0dae34aa59ea74ee90a9f7f78fbdb" translate="yes" xml:space="preserve">
          <source>Drop directions</source>
          <target state="translated">드롭 방향</target>
        </trans-unit>
        <trans-unit id="fc2d12b944acebe30dd287a5a171feeca740c24d" translate="yes" xml:space="preserve">
          <source>Dropdown</source>
          <target state="translated">Dropdown</target>
        </trans-unit>
        <trans-unit id="442586ca0ca2c09fb97a8620a3c724d165456830" translate="yes" xml:space="preserve">
          <source>Dropdown items</source>
          <target state="translated">드롭 다운 항목</target>
        </trans-unit>
        <trans-unit id="51f63ff0d305c52d1fd83fd6ce29c118357cad88" translate="yes" xml:space="preserve">
          <source>Dropdown.Divider</source>
          <target state="translated">Dropdown.Divider</target>
        </trans-unit>
        <trans-unit id="ceb80cace39c746f2b8111964388151f0dba2821" translate="yes" xml:space="preserve">
          <source>Dropdown.Header</source>
          <target state="translated">Dropdown.Header</target>
        </trans-unit>
        <trans-unit id="650cc3b62a12453b9c841b1ddf41d5566647851e" translate="yes" xml:space="preserve">
          <source>Dropdown.Item</source>
          <target state="translated">Dropdown.Item</target>
        </trans-unit>
        <trans-unit id="61e2e94f8b421c34c09678ce0a228a579cd62fd0" translate="yes" xml:space="preserve">
          <source>Dropdown.Menu</source>
          <target state="translated">Dropdown.Menu</target>
        </trans-unit>
        <trans-unit id="06b44b390549b33fe865e911ee9b45490a0f8612" translate="yes" xml:space="preserve">
          <source>Dropdown.Toggle</source>
          <target state="translated">Dropdown.Toggle</target>
        </trans-unit>
        <trans-unit id="64de6813355cf36eced9be22ff3946aab3cc50df" translate="yes" xml:space="preserve">
          <source>DropdownButton</source>
          <target state="translated">DropdownButton</target>
        </trans-unit>
        <trans-unit id="8f21793af840a0e59ef3d2b46e23a1d1871ab3e5" translate="yes" xml:space="preserve">
          <source>DropdownButton will forward Button props to the underlying Toggle component</source>
          <target state="translated">DropdownButton은 Button 소품을 기본 Toggle 구성 요소로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="e692024a3651878b09eaca6f238cad6043a32a61" translate="yes" xml:space="preserve">
          <source>DropdownMenu is not rendered until opened</source>
          <target state="translated">DropdownMenu는 열릴 때까지 렌더링되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8cc8b023c02824db6fbbeab06a61b65db57b5e75" translate="yes" xml:space="preserve">
          <source>Dropdowns</source>
          <target state="translated">Dropdowns</target>
        </trans-unit>
        <trans-unit id="81d4a32e654504cd4bcdc4123685421a2171e61c" translate="yes" xml:space="preserve">
          <source>Dropdowns are toggleable, contextual overlays for displaying lists of links and more. Like overlays, Dropdowns are built using a third-party library &lt;a href=&quot;https://popper.js.org/&quot;&gt;Popper.js&lt;/a&gt;, which provides dynamic positioning and viewport detection.</source>
          <target state="translated">드롭 다운은 링크 목록 등을 표시하기위한 전환 가능한 상황 별 오버레이입니다. 오버레이와 마찬가지로 드롭 다운은 동적 위치 지정 및 뷰포트 감지를 제공하는 타사 라이브러리 &lt;a href=&quot;https://popper.js.org/&quot;&gt;Popper.js를&lt;/a&gt; 사용하여 빌드됩니다 .</target>
        </trans-unit>
        <trans-unit id="43717d9ec594553c30b5af0fb0506e13c18ebe2b" translate="yes" xml:space="preserve">
          <source>Dropdowns work with buttons of all sizes.</source>
          <target state="translated">드롭 다운은 모든 크기의 버튼에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="5e92eb1d5390c2aa1faeff809f5ac7843cf4a2b8" translate="yes" xml:space="preserve">
          <source>Dropdowns?</source>
          <target state="translated">Dropdowns?</target>
        </trans-unit>
        <trans-unit id="133ecfd75427eb1fc2eeb779b1c5e15fee523ede" translate="yes" xml:space="preserve">
          <source>Duration of the collapse animation in milliseconds, to ensure that finishing callbacks are fired even if the original browser transition end events are canceled</source>
          <target state="translated">원래 브라우저 전환 종료 이벤트가 취소 된 경우에도 종료 콜백이 실행되도록하기위한 축소 애니메이션의 기간 (밀리 초)</target>
        </trans-unit>
        <trans-unit id="b1e148e8e5f94fb630603882291ddf7c6b84cb47" translate="yes" xml:space="preserve">
          <source>Duration of the fade animation in milliseconds, to ensure that finishing callbacks are fired even if the original browser transition end events are canceled</source>
          <target state="translated">원래 브라우저 전환 종료 이벤트가 취소 된 경우에도 종료 콜백이 실행되도록하기위한 페이드 애니메이션의 기간 (밀리 초)</target>
        </trans-unit>
        <trans-unit id="463a71bc01079f8b7a7abff04424c50a93e6d109" translate="yes" xml:space="preserve">
          <source>Dynamic tabbed interfaces</source>
          <target state="translated">동적 탭 인터페이스</target>
        </trans-unit>
        <trans-unit id="04129dcf6272dadf73c5437231ab2a262d6ba22d" translate="yes" xml:space="preserve">
          <source>Dynamic tabbed interfaces should not contain dropdown menus, as this causes both usability and accessibility issues. From a usability perspective, the fact that the currently displayed tab&amp;rsquo;s trigger element is not immediately visible (as it&amp;rsquo;s inside the closed dropdown menu) can cause confusion. From an accessibility point of view, there is currently no sensible way to map this sort of construct to a standard WAI ARIA pattern, meaning that it cannot be easily made understandable to users of assistive technologies.</source>
          <target state="translated">동적 탭 인터페이스에는 사용 성과 접근성 문제가 모두 발생하므로 드롭 다운 메뉴가 포함되어서는 안됩니다. 사용성 관점에서 현재 표시된 탭의 트리거 요소가 즉시 표시되지 않는다는 사실 (닫힌 드롭 다운 메뉴 내부에 있음)은 혼동을 일으킬 수 있습니다. 접근성 관점에서 볼 때 현재 이러한 종류의 구성을 표준 WAI ARIA 패턴에 매핑하는 현명한 방법은 없습니다. 즉, 보조 기술 사용자가 쉽게 이해할 수 있도록 만들 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="adacf842777f85831215038a490b20a0df0098e1" translate="yes" xml:space="preserve">
          <source>Each component is implemented with accessibility in mind. The result is a set of accessible-by-default components, over what is possible from plain Bootstrap.</source>
          <target state="translated">각 구성 요소는 접근성을 염두에두고 구현됩니다. 결과는 일반 부트 스트랩에서 가능한 것보다 기본적으로 액세스 가능한 구성 요소 집합입니다.</target>
        </trans-unit>
        <trans-unit id="dbf95c6d5cc3a341a3349755d9951ec21799f6a9" translate="yes" xml:space="preserve">
          <source>Each of the Card components in the Accordion can have their entire header clickable, by setting the AccordionToggle's underlying component to be a CardHeader component.</source>
          <target state="translated">AccordionToggle의 기본 구성 요소를 CardHeader 구성 요소로 설정하면 Accordion의 각 Card 구성 요소에서 전체 헤더를 클릭 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bcd93eef301b9576862008b7fe2d555d8ef5455b" translate="yes" xml:space="preserve">
          <source>Elements with the &lt;code&gt;disabled&lt;/code&gt; attribute aren&amp;rsquo;t interactive, meaning users cannot hover or click them to trigger a popover (or tooltip). As a workaround, you&amp;rsquo;ll want to trigger the overlay from a wrapper &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; and override the &lt;code&gt;pointer-events&lt;/code&gt; on the disabled element.</source>
          <target state="translated">&lt;code&gt;disabled&lt;/code&gt; 속성이 있는 요소 는 대화 형이 아니므로 사용자가 마우스를 가리 키거나 클릭하여 팝 오버 (또는 툴팁)를 트리거 할 수 없습니다. 해결 방법으로 래퍼 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 에서 오버레이를 트리거 하고 비활성화 된 요소 의 &lt;code&gt;pointer-events&lt;/code&gt; 를 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39d0513e49719b5500f4e89ad42a733d18c8edf5" translate="yes" xml:space="preserve">
          <source>Enable a hover state on table rows within a &lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt; 내의 테이블 행에서 마우스 오버 상태를 활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="1d4294a0061f89b36a090a4c7c4dc38338d1974b" translate="yes" xml:space="preserve">
          <source>Enables animation on the Carousel as it transitions between slides.</source>
          <target state="translated">슬라이드 사이를 전환 할 때 슬라이드 쇼에서 애니메이션을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="37bc19822f9f6260eeb201b4380facfc0c3ac2ae" translate="yes" xml:space="preserve">
          <source>Encapsulating animations into components has the added benefit of making them more broadly useful, as well as portable for using in other libraries. All React-bootstrap components that can be animated, support pluggable &lt;code&gt;&amp;lt;Transition&amp;gt;&lt;/code&gt; components.</source>
          <target state="translated">애니메이션을 구성 요소로 캡슐화하면 다른 라이브러리에서 사용하기 위해 이식 할 수있을뿐만 아니라보다 광범위하게 유용하게 만드는 추가 이점이 있습니다. 애니메이션 할 수있는 모든 React-bootstrap 구성 요소는 플러그 가능한 &lt;code&gt;&amp;lt;Transition&amp;gt;&lt;/code&gt; 구성 요소를 지원 합니다.</target>
        </trans-unit>
        <trans-unit id="1bd56266a200170f62a0b9b2353966892822fe0d" translate="yes" xml:space="preserve">
          <source>Entire Header Clickable</source>
          <target state="translated">전체 헤더 클릭 가능</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="4d57eab2982917a09762907ac77e408c3ca66fc9" translate="yes" xml:space="preserve">
          <source>External Links</source>
          <target state="translated">외부 링크</target>
        </trans-unit>
        <trans-unit id="90f0501c38ce299f74533d128520a5dc74515f02" translate="yes" xml:space="preserve">
          <source>Extra props are passed to the underlying Dropdown component, not the Toggle.</source>
          <target state="translated">추가 소품은 토글이 아닌 기본 드롭 다운 구성 요소에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="5298d08bb7ae7d01f4efcdbb94ff03fc487fd11c" translate="yes" xml:space="preserve">
          <source>Fade</source>
          <target state="translated">Fade</target>
        </trans-unit>
        <trans-unit id="6c6ecde537dd873ae10880d2795ed797549cd95e" translate="yes" xml:space="preserve">
          <source>Fancy larger or smaller buttons? Add &lt;code&gt;size=&quot;lg&quot;&lt;/code&gt;, &lt;code&gt;size=&quot;sm&quot;&lt;/code&gt; for additional sizes.</source>
          <target state="translated">더 크거나 작은 버튼을 원하십니까? &lt;code&gt;size=&quot;lg&quot;&lt;/code&gt; 추가하려면 size = &quot;lg&quot; , &lt;code&gt;size=&quot;sm&quot;&lt;/code&gt; 을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="49adfb5485aa3072f4ed62963d0b4febf440af94" translate="yes" xml:space="preserve">
          <source>Feel free to mix input groups with button groups in your toolbars. Similar to the example above, you&amp;rsquo;ll likely need some utilities though to space things properly.</source>
          <target state="translated">툴바의 버튼 그룹과 입력 그룹을 자유롭게 혼합하십시오. 위의 예와 유사하게 공간을 올바르게 배치하려면 유틸리티가 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f20e66b17a6eb7c2baf1ab68337d91eaf6f4f80" translate="yes" xml:space="preserve">
          <source>Figure</source>
          <target state="translated">Figure</target>
        </trans-unit>
        <trans-unit id="0dcd079a524386ba90ed2a251a195592ea5bd756" translate="yes" xml:space="preserve">
          <source>FigureCaption</source>
          <target state="translated">FigureCaption</target>
        </trans-unit>
        <trans-unit id="df6d83b8d67928d21ca2fc4b221b268df5229140" translate="yes" xml:space="preserve">
          <source>FigureImage</source>
          <target state="translated">FigureImage</target>
        </trans-unit>
        <trans-unit id="55c78353fbcd604dd46a8989b3a9dc11fc982d4b" translate="yes" xml:space="preserve">
          <source>Figures</source>
          <target state="translated">Figures</target>
        </trans-unit>
        <trans-unit id="2c3cafa4db3f3e1e51b3dff4303502dbe42b7a89" translate="yes" xml:space="preserve">
          <source>File</source>
          <target state="translated">File</target>
        </trans-unit>
        <trans-unit id="61f5dd446cc17debdb674cfdda8a804be36d7b9a" translate="yes" xml:space="preserve">
          <source>Fill and justify</source>
          <target state="translated">채우기 및 양쪽 맞춤</target>
        </trans-unit>
        <trans-unit id="45ad3b8fd41619cb069e6c08f486c1d7b0b3f126" translate="yes" xml:space="preserve">
          <source>Fixed bottom</source>
          <target state="translated">고정 바닥</target>
        </trans-unit>
        <trans-unit id="d21e45b3aeef90a7849020fdfeee04f847d7ffc0" translate="yes" xml:space="preserve">
          <source>Fixed top</source>
          <target state="translated">고정 상단</target>
        </trans-unit>
        <trans-unit id="8bc9b7abbb676300656203a17863a0f0b8a2c2bf" translate="yes" xml:space="preserve">
          <source>Fluid</source>
          <target state="translated">Fluid</target>
        </trans-unit>
        <trans-unit id="ab3182305d605d3a5fe49819948b606865acc2af" translate="yes" xml:space="preserve">
          <source>Fluid Container</source>
          <target state="translated">유체 용기</target>
        </trans-unit>
        <trans-unit id="7c936d7c5a91dca9198671c84f6c29001e1635e0" translate="yes" xml:space="preserve">
          <source>Flush</source>
          <target state="translated">Flush</target>
        </trans-unit>
        <trans-unit id="61f45cd9388f2f02490c474e1b2e52ac8e1a17b7" translate="yes" xml:space="preserve">
          <source>For a lighter touch, Buttons also come in &lt;code&gt;outline-*&lt;/code&gt; variants with no background color.</source>
          <target state="translated">가벼운 터치를 위해 버튼은 배경색이없는 &lt;code&gt;outline-*&lt;/code&gt; 변형으로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="95cc78bfe8571bb47a311233d587d39b77259059" translate="yes" xml:space="preserve">
          <source>For a nicer experience with checked state management use the &lt;code&gt;&amp;lt;ToggleButtonGroup&amp;gt;&lt;/code&gt; instead of a &lt;code&gt;&amp;lt;ButtonGroup toggle&amp;gt;&lt;/code&gt; component. The group behaves as a form component, where the &lt;code&gt;value&lt;/code&gt; is an array of the selected &lt;code&gt;value&lt;/code&gt;s for a named checkbox group or the single toggled &lt;code&gt;value&lt;/code&gt; in a similarly named radio group.</source>
          <target state="translated">확인 된 상태 관리에 대한 더 나은 경험 을 위해 &lt;code&gt;&amp;lt;ButtonGroup toggle&amp;gt;&lt;/code&gt; 구성 요소 대신 &lt;code&gt;&amp;lt;ToggleButtonGroup&amp;gt;&lt;/code&gt; 을 사용합니다 . 그룹은 양식 구성 요소로 작동합니다. 여기서 &lt;code&gt;value&lt;/code&gt; 은 명명 된 확인란 그룹에 대해 선택된 &lt;code&gt;value&lt;/code&gt; 배열 또는 비슷한 이름의 라디오 그룹에서 전환 된 단일 &lt;code&gt;value&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c594765fe5924e5faa21b14f5f505c7b28f33941" translate="yes" xml:space="preserve">
          <source>For basic closing behavior after all &lt;code&gt;&amp;lt;Nav&amp;gt;&lt;/code&gt; descendant onSelect events in mobile viewports, try using collapseOnSelect.</source>
          <target state="translated">모바일 뷰포트에서 모든 &lt;code&gt;&amp;lt;Nav&amp;gt;&lt;/code&gt; 하위 onSelect 이벤트 이후의 기본 닫기 동작을 보려면 collapseOnSelect를 사용해보세요.</target>
        </trans-unit>
        <trans-unit id="2da78cb163ce914f84fa3f26cc95ca5159f4a465" translate="yes" xml:space="preserve">
          <source>For building more complex pagination UI, there are few convenient sub-components for adding &quot;First&quot;, &quot;Previous&quot;, &quot;Next&quot;, and &quot;Last&quot; buttons, as well as an &lt;code&gt;Ellipsis&lt;/code&gt; item for indicating previous or continuing results.</source>
          <target state="translated">더 복잡한 페이지 매김 UI를 구축하기 위해 &quot;처음&quot;, &quot;이전&quot;, &quot;다음&quot;및 &quot;마지막&quot;버튼을 추가하기위한 편리한 하위 구성 요소와 이전 또는 계속되는 결과를 나타내는 &lt;code&gt;Ellipsis&lt;/code&gt; 항목 이 거의 없습니다 .</target>
        </trans-unit>
        <trans-unit id="597a4762a96ca076df9f9cfb6e998f7d8a13f89b" translate="yes" xml:space="preserve">
          <source>For even more customization and cross browser consistency, use our completely custom form elements to replace the browser defaults. They&amp;rsquo;re built on top of semantic and accessible markup, so they&amp;rsquo;re solid replacements for any default form control.</source>
          <target state="translated">더 많은 사용자 정의 및 브라우저 간 일관성을 위해 완전히 사용자 정의 된 양식 요소를 사용하여 브라우저 기본값을 대체하십시오. 시맨틱하고 액세스 가능한 마크 업을 기반으로 구축되었으므로 모든 기본 양식 컨트롤을 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b07fc9fcca1a3c8a13312c6870b0de7ec98b043" translate="yes" xml:space="preserve">
          <source>For file inputs, use &lt;code&gt;Form.File&lt;/code&gt;.</source>
          <target state="translated">파일 입력의 경우 &lt;code&gt;Form.File&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="7c11b7be84b2acc5dedc5899e096cd57fc1ec598" translate="yes" xml:space="preserve">
          <source>For links, use the &lt;code&gt;&amp;lt;Alert.Link&amp;gt;&lt;/code&gt; component to provide matching colored links within any alert.</source>
          <target state="translated">링크의 경우 &lt;code&gt;&amp;lt;Alert.Link&amp;gt;&lt;/code&gt; 구성 요소를 사용하여 모든 경고 내에서 일치하는 색상 링크를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ad78d8ea2e562454fe57cc05e894dfe47028556b" translate="yes" xml:space="preserve">
          <source>For more advanced behaviors &lt;code&gt;&amp;lt;OverlayTrigger&amp;gt;&lt;/code&gt; accepts a function child that passes in the injected &lt;code&gt;ref&lt;/code&gt; and event handlers that correspond to the configured &lt;code&gt;trigger&lt;/code&gt; prop.</source>
          <target state="translated">고급 동작의 경우 &lt;code&gt;&amp;lt;OverlayTrigger&amp;gt;&lt;/code&gt; 는 구성된 &lt;code&gt;trigger&lt;/code&gt; 소품에 해당하는 삽입 된 &lt;code&gt;ref&lt;/code&gt; 및 이벤트 처리기를 전달하는 하위 함수를 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="6714b07e03cb1973966fbb70a307ec3271026b96" translate="yes" xml:space="preserve">
          <source>For more complex layouts the flexible &lt;code&gt;TabContainer&lt;/code&gt;, &lt;code&gt;TabContent&lt;/code&gt;, and &lt;code&gt;TabPane&lt;/code&gt; components along with any style of &lt;code&gt;Nav&lt;/code&gt; allow you to quickly piece together your own Tabs component with additional markup needed.</source>
          <target state="translated">더 복잡한 레이아웃의 경우 유연한 &lt;code&gt;TabContainer&lt;/code&gt; , &lt;code&gt;TabContent&lt;/code&gt; 및 &lt;code&gt;TabPane&lt;/code&gt; 구성 요소와 모든 스타일의 &lt;code&gt;Nav&lt;/code&gt; 를 사용하면 필요한 추가 마크 업과 함께 고유 한 Tabs 구성 요소를 빠르게 조합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e85fee2576de520f9d8c5b6459afcabb9b882828" translate="yes" xml:space="preserve">
          <source>For native HTML form validation&amp;ndash;&lt;a href=&quot;https://caniuse.com/#feat=form-validation&quot;&gt;available in all our supported browsers&lt;/a&gt;, the &lt;code&gt;:valid&lt;/code&gt; and &lt;code&gt;:invalid&lt;/code&gt; pseudo selectors are used to apply validation styles as well as display feedback messages.</source>
          <target state="translated">&lt;a href=&quot;https://caniuse.com/#feat=form-validation&quot;&gt;지원되는 모든 브라우저에서 사용할 수있는&lt;/a&gt; 기본 HTML 양식 유효성 검사의 경우 &lt;code&gt;:valid&lt;/code&gt; 및 &lt;code&gt;:invalid&lt;/code&gt; 의사 선택기를 사용하여 유효성 검사 스타일을 적용하고 피드백 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="698b294002e1a0d4d0424904650afdbed8131c95" translate="yes" xml:space="preserve">
          <source>For offsetting grid columns you can set an &lt;code&gt;offset&lt;/code&gt; value or for a more general layout, use the margin class utilities.</source>
          <target state="translated">그리드 열 &lt;code&gt;offset&lt;/code&gt; 경우 오프셋 값을 설정 하거나보다 일반적인 레이아웃의 경우 마진 클래스 유틸리티를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b75e2983d2abbeedc901071faec46bdc28bf2e1" translate="yes" xml:space="preserve">
          <source>For systems that generate more notifications, consider using a wrapping element so they can easily stack.</source>
          <target state="translated">더 많은 알림을 생성하는 시스템의 경우 쉽게 스택 할 수 있도록 래핑 요소를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="d65f0fd83d20a0fb3f999920fc68410cddc14896" translate="yes" xml:space="preserve">
          <source>For textual form controls&amp;mdash;like &lt;code&gt;input&lt;/code&gt;s, &lt;code&gt;select&lt;/code&gt;s, and &lt;code&gt;textarea&lt;/code&gt;s&amp;mdash;use the &lt;code&gt;FormControl&lt;/code&gt; component. FormControl adds some additional styles for general appearance, focus state, sizing, and more.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; , &lt;code&gt;select&lt;/code&gt; , &lt;code&gt;textarea&lt;/code&gt; 와 같은 텍스트 양식 컨트롤 의 경우 &lt;code&gt;FormControl&lt;/code&gt; 구성 요소를 사용합니다 . FormControl은 일반적인 모양, 초점 상태, 크기 조정 등에 대한 몇 가지 추가 스타일을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="4bdbfbe9b2f581c9e3800ec371b3579965d0d24e" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;range&lt;/code&gt; form control you can pass the &lt;code&gt;custom&lt;/code&gt; prop to get custom styling of the select element. The track (the background) and thumb (the value) are both styled to appear the same across browsers. As only IE and Firefox support &amp;ldquo;filling&amp;rdquo; their track from the left or right of the thumb as a means to visually indicate progress, we do not currently support it.</source>
          <target state="translated">를 들어 &lt;code&gt;range&lt;/code&gt; 폼 컨트롤 당신은 전달할 수 있습니다 &lt;code&gt;custom&lt;/code&gt; 선택 요소의 사용자 정의 스타일을 얻을 소품. 트랙 (배경)과 썸 (값)은 모두 브라우저에서 동일하게 표시되도록 스타일이 지정됩니다. IE와 Firefox만이 진행 상황을 시각적으로 표시하는 수단으로 엄지 손가락의 왼쪽 또는 오른쪽에서 트랙을 &quot;채우기&quot;를 지원하므로 현재 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c0f5f253462a6010ff7f371c755b4a7a6e863661" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;select&lt;/code&gt; form control you can pass the &lt;code&gt;custom&lt;/code&gt; prop to get custom styling of the select element. Custom styles are limited to the &lt;code&gt;select&lt;/code&gt; initial appearance and cannot modify the &lt;code&gt;option&lt;/code&gt; styling due to browser limitations.</source>
          <target state="translated">를 들어 &lt;code&gt;select&lt;/code&gt; 폼 컨트롤 당신은 전달할 수 있습니다 &lt;code&gt;custom&lt;/code&gt; 선택 요소의 사용자 정의 스타일을 얻을 소품. 사용자 정의 스타일은 &lt;code&gt;select&lt;/code&gt; 초기 모양 으로 제한되며 브라우저 제한으로 인해 &lt;code&gt;option&lt;/code&gt; 스타일을 수정할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="fa2eebb8b9133b1cf23e194e63375d3b7700dc06" translate="yes" xml:space="preserve">
          <source>For the non-textual checkbox and radio controls, &lt;code&gt;FormCheck&lt;/code&gt; provides a single component for both types that adds some additional styling and improved layout.</source>
          <target state="translated">텍스트가 아닌 확인란 및 라디오 컨트롤의 경우 &lt;code&gt;FormCheck&lt;/code&gt; 는 두 가지 유형에 대해 일부 추가 스타일과 향상된 레이아웃을 추가하는 단일 구성 요소를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2c725dbe480a9d335296a94826e259505ad9cb21" translate="yes" xml:space="preserve">
          <source>For this, the Overlay component also injects a a &lt;code&gt;popper&lt;/code&gt; prop with a &lt;code&gt;scheduleUpdate()&lt;/code&gt; method that an overlay component can use to reposition itself.</source>
          <target state="translated">이를 위해 Overlay 구성 요소는 오버레이 구성 요소가 자체 위치를 변경하는 데 사용할 수 있는 &lt;code&gt;scheduleUpdate()&lt;/code&gt; 메서드가있는 &lt;code&gt;popper&lt;/code&gt; prop 도 삽입 합니다.</target>
        </trans-unit>
        <trans-unit id="d6d336e303c717adffa7112ee31f6a14b76f8cf5" translate="yes" xml:space="preserve">
          <source>For those that want to customize everything, you can forgo the included Toggle and Menu components, and create your own. By providing custom components to the &lt;code&gt;as&lt;/code&gt; prop, you can control how each component behaves. Custom toggle and menu components &lt;strong&gt;must&lt;/strong&gt; be able to accept refs.</source>
          <target state="translated">모든 것을 사용자 정의하려는 경우 포함 된 토글 및 메뉴 구성 요소를 무시하고 직접 만들 수 있습니다. &lt;code&gt;as&lt;/code&gt; prop에 커스텀 컴포넌트를 제공 하면 각 컴포넌트의 작동 방식을 제어 할 수 있습니다. 사용자 지정 토글 및 메뉴 구성 요소 &lt;strong&gt;는 참조&lt;/strong&gt; 를 수락 할 수 &lt;strong&gt;있어야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="601c78fffe3862e569a34efa0084c2fff2c09369" translate="yes" xml:space="preserve">
          <source>Force the contents of your nav to extend the full available width. To proportionately fill the space use &lt;code&gt;fill&lt;/code&gt;. Notice that the nav is the entire width but each nav item is a different size.</source>
          <target state="translated">탐색 내용을 강제로 사용 가능한 전체 너비로 확장합니다. 비례하여 공간 사용을 작성하려면 &lt;code&gt;fill&lt;/code&gt; . 탐색은 전체 너비이지만 각 탐색 항목은 크기가 다릅니다.</target>
        </trans-unit>
        <trans-unit id="80446347ede53cf9ce56b3d59fda4b5c96dc25c4" translate="yes" xml:space="preserve">
          <source>Form</source>
          <target state="translated">Form</target>
        </trans-unit>
        <trans-unit id="2479e5380d9da4ab9ba17026b83b2589c09f1836" translate="yes" xml:space="preserve">
          <source>Form controls</source>
          <target state="translated">양식 컨트롤</target>
        </trans-unit>
        <trans-unit id="70d75a3591b8757c51cc5bd8e831c6b1a770c0aa" translate="yes" xml:space="preserve">
          <source>Form grid</source>
          <target state="translated">양식 그리드</target>
        </trans-unit>
        <trans-unit id="7d5f58c6889735ce3fc87fe27f36cc9f49b56e20" translate="yes" xml:space="preserve">
          <source>Form groups</source>
          <target state="translated">양식 그룹</target>
        </trans-unit>
        <trans-unit id="e857bfe89dc29335c565000faee6b97c06ed039e" translate="yes" xml:space="preserve">
          <source>Form libraries and server-rendered styles</source>
          <target state="translated">양식 라이브러리 및 서버 렌더링 스타일</target>
        </trans-unit>
        <trans-unit id="5d2094819b532b1011803d0ca7f3e57f9f55ff72" translate="yes" xml:space="preserve">
          <source>Form row</source>
          <target state="translated">양식 행</target>
        </trans-unit>
        <trans-unit id="801c4e7f8407d119a4aa3ced1112193b0e57f2e5" translate="yes" xml:space="preserve">
          <source>Form.Check</source>
          <target state="translated">Form.Check</target>
        </trans-unit>
        <trans-unit id="b7f505d62f14cde1c2c01b57d3c68a530ed5adc5" translate="yes" xml:space="preserve">
          <source>Form.Control</source>
          <target state="translated">Form.Control</target>
        </trans-unit>
        <trans-unit id="1970e322521027a8a8a4ab431ecfa5d3ebad72ee" translate="yes" xml:space="preserve">
          <source>Form.File</source>
          <target state="translated">Form.File</target>
        </trans-unit>
        <trans-unit id="1fbf962ab123d140929e8f1369076f1010195af1" translate="yes" xml:space="preserve">
          <source>Form.Group</source>
          <target state="translated">Form.Group</target>
        </trans-unit>
        <trans-unit id="3aa914db52f2ec2ab711e68e3c0a7233a3f20612" translate="yes" xml:space="preserve">
          <source>Form.Label</source>
          <target state="translated">Form.Label</target>
        </trans-unit>
        <trans-unit id="cf4924a390ab559a3975785a12e8da3fd67e0f86" translate="yes" xml:space="preserve">
          <source>Form.Row</source>
          <target state="translated">Form.Row</target>
        </trans-unit>
        <trans-unit id="40b547f3d964b015c219ba88fdac48bdefe8a4bd" translate="yes" xml:space="preserve">
          <source>Form.Text</source>
          <target state="translated">Form.Text</target>
        </trans-unit>
        <trans-unit id="46a56cd8b9d4756a97094eb9d1fb362fccb23348" translate="yes" xml:space="preserve">
          <source>FormCheck.Input</source>
          <target state="translated">FormCheck.Input</target>
        </trans-unit>
        <trans-unit id="ffcba3857c02276153b6672f2473c1157a34dbb4" translate="yes" xml:space="preserve">
          <source>FormCheck.Label</source>
          <target state="translated">FormCheck.Label</target>
        </trans-unit>
        <trans-unit id="e9ec4230b31c5e05a7d438ca3e588c4f04de9eeb" translate="yes" xml:space="preserve">
          <source>FormControl and FormCheck both apply &lt;code&gt;display: block&lt;/code&gt; with &lt;code&gt;width: 100%&lt;/code&gt; to controls, which means they stack vertically by default. Additional components and props can be used to vary this layout on a per-form basis.</source>
          <target state="translated">FormControl과 FormCheck는 모두 &lt;code&gt;display: block&lt;/code&gt; with &lt;code&gt;width: 100%&lt;/code&gt; 를 컨트롤에 적용 합니다. 즉, 기본적으로 세로로 쌓입니다. 추가 구성 요소 및 소품을 사용하여 양식별로이 레이아웃을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="995168ab6e605ab9e3649e2367e0b2339b28b60f" translate="yes" xml:space="preserve">
          <source>FormControl.Feedback</source>
          <target state="translated">FormControl.Feedback</target>
        </trans-unit>
        <trans-unit id="80a943c52556ee3b1d6e75fea6f8a982a8ad15e9" translate="yes" xml:space="preserve">
          <source>FormFile.Input</source>
          <target state="translated">FormFile.Input</target>
        </trans-unit>
        <trans-unit id="1bc46748e120fe53c15b92f04a5c1a881a6892b1" translate="yes" xml:space="preserve">
          <source>FormFile.Label</source>
          <target state="translated">FormFile.Label</target>
        </trans-unit>
        <trans-unit id="4bec9575721b2739ed1e7c56eb6c8471084fcbcf" translate="yes" xml:space="preserve">
          <source>Forms</source>
          <target state="translated">Forms</target>
        </trans-unit>
        <trans-unit id="1a87ab2a75edb575217c043ce3cbe0c58ff1efe4" translate="yes" xml:space="preserve">
          <source>Fully Collapsed State</source>
          <target state="translated">완전히 접힌 상태</target>
        </trans-unit>
        <trans-unit id="aea1441c4464ae1f2add79c95168ee41d1da4175" translate="yes" xml:space="preserve">
          <source>Function that returns the height or width of the animating DOM node</source>
          <target state="translated">애니메이션 DOM 노드의 높이 또는 너비를 반환하는 함수</target>
        </trans-unit>
        <trans-unit id="3cc887fb95568ee1844ff9002224f01252c42c4d" translate="yes" xml:space="preserve">
          <source>Generally, if you stick to the Bootstrap defined classes and variants, there isn't anything you need to do to use a custom theme with React-Bootstrap. It just works. But we also make coloring outside the lines easy to do.</source>
          <target state="translated">일반적으로 Bootstrap에서 정의한 클래스와 변형을 고수한다면 React-Bootstrap에서 사용자 지정 테마를 사용하기 위해 수행 할 작업이 없습니다. 그냥 작동합니다. 그러나 우리는 또한 선 밖의 채색을 쉽게 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf5aefda50ce2bf251c464143961081ed829ad78" translate="yes" xml:space="preserve">
          <source>Get Involved</source>
          <target state="translated">참여하다</target>
        </trans-unit>
        <trans-unit id="026cccc86780cd75eb4feb70c6b64d77d2afd6ea" translate="yes" xml:space="preserve">
          <source>Get involved with React Bootstrap &lt;a href=&quot;https://github.com/react-bootstrap/react-bootstrap/issues/new&quot;&gt;by opening an issue&lt;/a&gt; or submitting a pull request. See our &lt;a href=&quot;https://github.com/react-bootstrap/react-bootstrap/blob/master/CONTRIBUTING.md&quot;&gt;contributing guidelines&lt;/a&gt; here.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/react-bootstrap/react-bootstrap/issues/new&quot;&gt;이슈를&lt;/a&gt; 열거 나 풀 요청을 제출하여 React Bootstrap 에 참여하십시오 . 여기에서 &lt;a href=&quot;https://github.com/react-bootstrap/react-bootstrap/blob/master/CONTRIBUTING.md&quot;&gt;기여 지침을&lt;/a&gt; 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="e9a3df261e67430f454166ac9118749dcf53a48c" translate="yes" xml:space="preserve">
          <source>Get to know more about the team maintaining React Bootstrap. Learn a little history of how, why and when the project started and how you can be a part of it.</source>
          <target state="translated">React Bootstrap을 유지 관리하는 팀에 대해 자세히 알아보십시오. 프로젝트가 시작된 방법, 이유 및시기에 대한 약간의 역사와 프로젝트에 참여할 수있는 방법에 대해 알아보십시오.</target>
        </trans-unit>
        <trans-unit id="060f712c74598ce01e86d56802d9344d8ed68bb7" translate="yes" xml:space="preserve">
          <source>Getting help</source>
          <target state="translated">도움을 받다</target>
        </trans-unit>
        <trans-unit id="bdef09306d75d8eaeca3cd08ab6caaadcec30843" translate="yes" xml:space="preserve">
          <source>GitHub issues</source>
          <target state="translated">GitHub 문제</target>
        </trans-unit>
        <trans-unit id="a9261bd59ece0d911f42e4fc96c182a51ce5fe2f" translate="yes" xml:space="preserve">
          <source>Glyphicon</source>
          <target state="translated">Glyphicon</target>
        </trans-unit>
        <trans-unit id="701c483f813cf119ec80b185a049bcfdc29f9161" translate="yes" xml:space="preserve">
          <source>Grid</source>
          <target state="translated">Grid</target>
        </trans-unit>
        <trans-unit id="845dff0732427e5dbeee219493f6313124863bc6" translate="yes" xml:space="preserve">
          <source>Grid system</source>
          <target state="translated">그리드 시스템</target>
        </trans-unit>
        <trans-unit id="eac014292960e8ee9cf380259a882b875d6528e0" translate="yes" xml:space="preserve">
          <source>Group a series of buttons together on a single line with the button group.</source>
          <target state="translated">버튼 그룹을 사용하여 일련의 버튼을 한 줄에 함께 그룹화합니다.</target>
        </trans-unit>
        <trans-unit id="2ca3911a37777992499ef292d0aca078fb8e96f6" translate="yes" xml:space="preserve">
          <source>Group checkboxes or radios on the same horizontal row by adding the &lt;code&gt;inline&lt;/code&gt; prop.</source>
          <target state="translated">&lt;code&gt;inline&lt;/code&gt; 소품 을 추가하여 동일한 수평 행에서 확인란 또는 라디오를 그룹화 합니다.</target>
        </trans-unit>
        <trans-unit id="ee246b2467f641147a98d0d5ec72e982bf37539e" translate="yes" xml:space="preserve">
          <source>Groups controls horizontally with other &lt;code&gt;FormCheck&lt;/code&gt;s.</source>
          <target state="translated">다른 &lt;code&gt;FormCheck&lt;/code&gt; 와 수평으로 컨트롤을 그룹화합니다 .</target>
        </trans-unit>
        <trans-unit id="fbf478e93810e9a6740e16fc6a38e56f9b4562b4" translate="yes" xml:space="preserve">
          <source>HTML &lt;code&gt;href&lt;/code&gt; attribute corresponding to &lt;code&gt;a.href&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a.href&lt;/code&gt; 에 해당하는 HTML &lt;code&gt;href&lt;/code&gt; 속성 입니다.</target>
        </trans-unit>
        <trans-unit id="d287b12248ec73429c5423f061fc47c1462e07a4" translate="yes" xml:space="preserve">
          <source>HTML id attribute, required if no &lt;code&gt;generateChildId&lt;/code&gt; prop is specified.</source>
          <target state="translated">HTML id 속성, &lt;code&gt;generateChildId&lt;/code&gt; prop이 지정 되지 않은 경우 필수 입니다.</target>
        </trans-unit>
        <trans-unit id="fd2db7834bf0656872923d914757e9889c51607f" translate="yes" xml:space="preserve">
          <source>HTML size</source>
          <target state="translated">HTML 크기</target>
        </trans-unit>
        <trans-unit id="a81d9dbf9365dff62bc01105634f58961b5f5df9" translate="yes" xml:space="preserve">
          <source>Handles the input's rounded corners when using form validation.</source>
          <target state="translated">양식 유효성 검사를 사용할 때 입력의 둥근 모서리를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="c7aa5de661ef7b09b874149c729ce21e4ae8e40c" translate="yes" xml:space="preserve">
          <source>Have all &lt;code&gt;NavItem&lt;/code&gt;s evenly fill all available width.</source>
          <target state="translated">모든 &lt;code&gt;NavItem&lt;/code&gt; 이 사용 가능한 모든 너비를 균등하게 채우도록합니다.</target>
        </trans-unit>
        <trans-unit id="b619478f898b99749417d01255111d7e7b25583f" translate="yes" xml:space="preserve">
          <source>Have all &lt;code&gt;NavItem&lt;/code&gt;s proportionately fill all available width.</source>
          <target state="translated">모든 &lt;code&gt;NavItem&lt;/code&gt; 이 사용 가능한 모든 너비를 비례 적으로 채우도록합니다.</target>
        </trans-unit>
        <trans-unit id="f10c92319124f007da3cb125f5986c4c388a132f" translate="yes" xml:space="preserve">
          <source>Have the dropdown switch to it's opposite placement when necessary to stay on screen.</source>
          <target state="translated">화면에 머물러야하는 경우 드롭 다운 스위치를 반대 위치로 전환합니다.</target>
        </trans-unit>
        <trans-unit id="1cce63c515481dd7c84da36bec9a0624ec1fef4c" translate="yes" xml:space="preserve">
          <source>Header and Footer</source>
          <target state="translated">머리글과 바닥 글</target>
        </trans-unit>
        <trans-unit id="a98a69f53d4e557a2d2d7805f1932a989d097564" translate="yes" xml:space="preserve">
          <source>Help text</source>
          <target state="translated">도움말 텍스트</target>
        </trans-unit>
        <trans-unit id="b77d58ef2796206871bf3185ccfd033cd4ebd97c" translate="yes" xml:space="preserve">
          <source>Help text below inputs can be styled with &lt;code&gt;&amp;lt;Form.Text&amp;gt;&lt;/code&gt;. This component includes &lt;code&gt;display: block&lt;/code&gt; and adds some top margin for easy spacing from the inputs above.</source>
          <target state="translated">입력 아래의 도움말 텍스트는 &lt;code&gt;&amp;lt;Form.Text&amp;gt;&lt;/code&gt; 로 스타일을 지정할 수 있습니다 . 이 구성 요소는 &lt;code&gt;display: block&lt;/code&gt; 포함 하고 위의 입력에서 쉽게 간격을두기 위해 상단 여백을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="537363cbb7e989b831f7b613378fc8e1755f41b5" translate="yes" xml:space="preserve">
          <source>Help text should be explicitly associated with the form control it relates to using the &lt;code&gt;aria-describedby&lt;/code&gt; attribute. This will ensure that assistive technologies&amp;mdash;such as screen readers&amp;mdash;will announce this help text when the user focuses or enters the control.</source>
          <target state="translated">도움말 텍스트는 &lt;code&gt;aria-describedby&lt;/code&gt; 특성 을 사용하여 관련된 양식 컨트롤과 명시 적으로 연결되어야 합니다. 이렇게하면 화면 판독기와 같은 보조 기술이 사용자가 컨트롤에 초점을 맞추거나 입력 할 때이 도움말 텍스트를 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="406c1590205b396c2d109f0ffb7cf6e14013da04" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s what you need to know before getting started with the Navbar:</source>
          <target state="translated">Navbar를 시작하기 전에 알아야 할 사항은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fdacc5af0464183633c9d75ade3feb86b9bd0cd4" translate="yes" xml:space="preserve">
          <source>Hide's the label visually.</source>
          <target state="translated">Hide는 시각적으로 레이블입니다.</target>
        </trans-unit>
        <trans-unit id="d0d163324a5631150dc086ee83c1bb59be717463" translate="yes" xml:space="preserve">
          <source>Hides the label visually while still allowing it to be read by assistive technologies.</source>
          <target state="translated">보조 기술로 읽을 수 있도록 허용하면서 레이블을 시각적으로 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="9bf9c5310b0e558eab49a98069b159da576f5840" translate="yes" xml:space="preserve">
          <source>Highlight the menu item as active.</source>
          <target state="translated">메뉴 항목을 활성으로 강조 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="4641c830815bde5dbc8a15e503cab15ea9bf2024" translate="yes" xml:space="preserve">
          <source>Historically dropdown menu contents had to be links, but that&amp;rsquo;s no longer the case with v4. Now you can optionally use &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; elements in your dropdowns instead of just &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;s.</source>
          <target state="translated">역사적으로 드롭 다운 메뉴 콘텐츠는 링크 여야했지만 v4에서는 더 이상 그렇지 않습니다. 이제 드롭 다운에서 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 대신 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 요소를 선택적으로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4f57a1ce99e68a7b05c42d0a7ea0070eafabd31c" translate="yes" xml:space="preserve">
          <source>Horizontal</source>
          <target state="translated">Horizontal</target>
        </trans-unit>
        <trans-unit id="2fe558d597b0a7e28c8ec62a0e404f474a9f8477" translate="yes" xml:space="preserve">
          <source>Horizontal form</source>
          <target state="translated">수평 형태</target>
        </trans-unit>
        <trans-unit id="82369fed9023cfec9f1edfa0a04f25bbd8a46e93" translate="yes" xml:space="preserve">
          <source>Horizontal form label sizing</source>
          <target state="translated">수평 양식 라벨 크기</target>
        </trans-unit>
        <trans-unit id="c5f8787e5eb15399babc56d534a055789d535d80" translate="yes" xml:space="preserve">
          <source>Hover over the links below to see tooltips.</source>
          <target state="translated">툴팁을 보려면 아래 링크 위로 마우스를 가져갑니다.</target>
        </trans-unit>
        <trans-unit id="9d6193efd7715994bdbc672e506c8f5b574b03ee" translate="yes" xml:space="preserve">
          <source>How and which Bootstrap styles you include is up to you, but the simplest way is to include the latest styles from the CDN. A little more information about the benefits of using a CDN can be found &lt;a href=&quot;https://www.w3schools.com/bootstrap/bootstrap_get_started.asp&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">포함하는 방법과 부트 스트랩 스타일은 귀하에게 달려 있지만 가장 간단한 방법은 CDN의 최신 스타일을 포함하는 것입니다. CDN 사용의 이점에 대한 자세한 정보는 &lt;a href=&quot;https://www.w3schools.com/bootstrap/bootstrap_get_started.asp&quot;&gt;여기에서&lt;/a&gt; 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="19b25e415aa38a75c112eecba9ac3a4448346780" translate="yes" xml:space="preserve">
          <source>If not using the custom prop &lt;code&gt;FormFile.Label&amp;gt;&lt;/code&gt; should be before &lt;code&gt;&amp;lt;FormFile.Input isInvalid /&amp;gt;&lt;/code&gt;</source>
          <target state="translated">사용자 정의 소품을 사용하지 않는 경우 &lt;code&gt;FormFile.Label&amp;gt;&lt;/code&gt; 은 &lt;code&gt;&amp;lt;FormFile.Input isInvalid /&amp;gt;&lt;/code&gt; 앞에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="6c6e182bbdad6fd01bdf42f40d4e97f02f63e46e" translate="yes" xml:space="preserve">
          <source>If providing a custom, non DOM, component. the &lt;code&gt;show&lt;/code&gt;, &lt;code&gt;close&lt;/code&gt; and &lt;code&gt;alignRight&lt;/code&gt; props are also injected and should be handled appropriately.</source>
          <target state="translated">DOM이 아닌 사용자 지정 구성 요소를 제공하는 경우. &lt;code&gt;show&lt;/code&gt; , &lt;code&gt;close&lt;/code&gt; 및 &lt;code&gt;alignRight&lt;/code&gt; 의 소품도 주입하고 적절하게 처리해야한다.</target>
        </trans-unit>
        <trans-unit id="e19546f0dce8333979c607f9fcf528bf0facc1ab" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;&quot;hover&quot;&lt;/code&gt;, pauses the cycling of the carousel on &lt;code&gt;mouseenter&lt;/code&gt; and resumes the cycling of the carousel on &lt;code&gt;mouseleave&lt;/code&gt;. If set to &lt;code&gt;false&lt;/code&gt;, hovering over the carousel won't pause it.</source>
          <target state="translated">로 설정하면 &lt;code&gt;&quot;hover&quot;&lt;/code&gt; 에 회전 목마의 순환 일시 정지 &lt;code&gt;mouseenter&lt;/code&gt; 을 하고에 회전 목마의 사이클링 다시 시작 &lt;code&gt;mouseleave&lt;/code&gt; . &lt;code&gt;false&lt;/code&gt; 로 설정 하면 캐 러셀 위로 마우스를 가져가도 일시 중지되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c0b62e017c9001695f6e141eb06470bdc04333a3" translate="yes" xml:space="preserve">
          <source>If the default handling of the dropdown menu and toggle components aren't to your liking, you can customize them, by using the more basic &lt;code&gt;&amp;lt;Dropdown&amp;gt;&lt;/code&gt; Component to explicitly specify the Toggle and Menu components</source>
          <target state="translated">드롭 다운 메뉴 및 토글 구성 요소의 기본 처리가 마음에 들지 않으면보다 기본적인 &lt;code&gt;&amp;lt;Dropdown&amp;gt;&lt;/code&gt; 구성 요소를 사용하여 토글 및 메뉴 구성 요소를 명시 적으로 지정 하여 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d68ce9f2b4280ccec1a8114ab07344c1b4e84a4b" translate="yes" xml:space="preserve">
          <source>If using the custom prop &lt;code&gt;&amp;lt;FormFile.Input isInvalid /&amp;gt;&lt;/code&gt; should be before &lt;code&gt;FormFile.Label&amp;gt;&lt;/code&gt;</source>
          <target state="translated">사용자 정의 소품을 사용하는 경우 &lt;code&gt;&amp;lt;FormFile.Input isInvalid /&amp;gt;&lt;/code&gt; 는 &lt;code&gt;FormFile.Label&amp;gt;&lt;/code&gt; 앞에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="7a13b6a63e9ad44a6d7b4f666ab4d3b6dc3c5c50" translate="yes" xml:space="preserve">
          <source>If you are not setting the &lt;code&gt;custom&lt;/code&gt; prop the&lt;code&gt;label&lt;/code&gt; should be before the &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;custom&lt;/code&gt; 소품을 설정하지 않는 경우 &lt;code&gt;label&lt;/code&gt; 은 &lt;code&gt;input&lt;/code&gt; 앞에 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="19a605427d586a308fbf1dfe6c244083edb348b4" translate="yes" xml:space="preserve">
          <source>If you are setting the custom prop the &lt;code&gt;input&lt;/code&gt; element has to be placed before the &lt;code&gt;label&lt;/code&gt; or the &lt;code&gt;buttonText&lt;/code&gt; prop will not work.</source>
          <target state="translated">사용자 정의 소품을 설정하는 경우, &lt;code&gt;input&lt;/code&gt; 요소는 앞에 배치해야 &lt;code&gt;label&lt;/code&gt; 또는 &lt;code&gt;buttonText&lt;/code&gt; 소품 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="11f6e6542c240cf21c5f477f0621c248763d64ac" translate="yes" xml:space="preserve">
          <source>If you plan on customizing the Bootstrap Sass files, or don't want to use a CDN for the stylesheet, it may be helpful to install &lt;a href=&quot;https://getbootstrap.com/docs/4.6/getting-started/download/#npm&quot;&gt;vanilla Bootstrap&lt;/a&gt; as well.</source>
          <target state="translated">Bootstrap Sass 파일을 사용자 정의 할 계획이거나 스타일 시트에 CDN을 사용하지 않으려면 &lt;a href=&quot;https://getbootstrap.com/docs/4.6/getting-started/download/#npm&quot;&gt;바닐라 Bootstrap&lt;/a&gt; 도 설치하는 것이 도움이 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7a8eedf68dc0ba15a9444f26e933ae95049dc126" translate="yes" xml:space="preserve">
          <source>If you want each NavItem to be the same size use &lt;code&gt;justify&lt;/code&gt;.</source>
          <target state="translated">각 NavItem의 크기를 동일하게하려면 &lt;code&gt;justify&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ab04f01b6e7bd7109733f2ac0faa6bce2f6666eb" translate="yes" xml:space="preserve">
          <source>If you want to have readonly elements in your form styled as plain text, use the &lt;code&gt;plaintext&lt;/code&gt; prop on FormControls to remove the default form field styling and preserve the correct margin and padding.</source>
          <target state="translated">양식에서 읽기 전용 요소를 일반 텍스트로 스타일 지정하려면 FormControls 의 &lt;code&gt;plaintext&lt;/code&gt; 소품을 사용 하여 기본 양식 필드 스타일을 제거하고 올바른 여백과 패딩을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="817e8878c746b53caa815e19078d818e44cb5ce9" translate="yes" xml:space="preserve">
          <source>If you want to use responsive menu alignment, pass an object to the &lt;code&gt;align&lt;/code&gt; prop on the &lt;code&gt;&amp;lt;DropdownMenu&amp;gt;&lt;/code&gt; or the &lt;code&gt;menuAlign&lt;/code&gt; prop on the &lt;code&gt;&amp;lt;DropdownButton&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;SplitButton&amp;gt;&lt;/code&gt;. You can specify the directions &lt;code&gt;left&lt;/code&gt; or &lt;code&gt;right&lt;/code&gt; for the various breakpoints.</source>
          <target state="translated">반응 형 메뉴 정렬을 사용 하려면 &lt;code&gt;&amp;lt;DropdownMenu&amp;gt;&lt;/code&gt; 의 &lt;code&gt;align&lt;/code&gt; prop 또는 &lt;code&gt;&amp;lt;DropdownButton&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;SplitButton&amp;gt;&lt;/code&gt; 의 &lt;code&gt;menuAlign&lt;/code&gt; prop에 개체를 전달합니다 . 다양한 중단 점에 대해 &lt;code&gt;left&lt;/code&gt; 또는 &lt;code&gt;right&lt;/code&gt; 방향을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9fc2f1a35d34bf4569de90dda90c14853c5bb655" translate="yes" xml:space="preserve">
          <source>If you want your Accordion to start in a fully-collapsed state, then simply don't pass in a &lt;code&gt;defaultActiveKey&lt;/code&gt; prop to &lt;code&gt;Accordion&lt;/code&gt;.</source>
          <target state="translated">Accordion이 완전히 축소 된 상태에서 시작 &lt;code&gt;defaultActiveKey&lt;/code&gt; 하려면 defaultActiveKey prop을 &lt;code&gt;Accordion&lt;/code&gt; 에 전달하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="c516bff2be30422e72e9c26930a58e4ea50e5ccd" translate="yes" xml:space="preserve">
          <source>If you wish to customize the Bootstrap theme or any Bootstrap variables you can create a custom Sass file:</source>
          <target state="translated">Bootstrap 테마 또는 Bootstrap 변수를 사용자 지정하려면 사용자 지정 Sass 파일을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c76aa340d3ce0ca471b91669b5b843b368cfdb28" translate="yes" xml:space="preserve">
          <source>If you would like to add a custom theme on your app using Create React App, they have additional documentation for Create React App and Bootstrap &lt;a href=&quot;https://facebook.github.io/create-react-app/docs/adding-bootstrap#using-a-custom-theme&quot;&gt;here&lt;/a&gt;</source>
          <target state="translated">Create React App을 사용하여 앱에 사용자 정의 테마를 추가하려면 &lt;a href=&quot;https://facebook.github.io/create-react-app/docs/adding-bootstrap#using-a-custom-theme&quot;&gt;여기&lt;/a&gt; 에 Create React App 및 Bootstrap에 대한 추가 문서가 있습니다.</target>
        </trans-unit>
        <trans-unit id="d63a326d4aff10674096297e3f885a0ae93ad553" translate="yes" xml:space="preserve">
          <source>If you're noticing choppy animations, and the component that's being collapsed has non-zero margin or padding, try wrapping the contents of your &lt;code&gt;&amp;lt;Collapse&amp;gt;&lt;/code&gt; inside a node with no margin or padding, like the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; in the example below. This will allow the height to be computed properly, so the animation can proceed smoothly.</source>
          <target state="translated">애니메이션이 고르지 않고 축소되는 구성 요소에 0이 아닌 여백이나 패딩 이있는 경우 아래 예의 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 와 같이 여백이나 패딩이없는 노드 안에 &lt;code&gt;&amp;lt;Collapse&amp;gt;&lt;/code&gt; 의 내용을 래핑 해보 십시오. 이렇게하면 높이가 올바르게 계산되어 애니메이션이 원활하게 진행될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d57988e0af06f3c301a8a914ef0c6bfa7a93464c" translate="yes" xml:space="preserve">
          <source>If your application contains a large number of form groups, we recommend building a higher-level component encapsulating a complete field group that renders the label, the control, and any other necessary components. We don't provide this out-of-the-box, because the composition of those field groups is too specific to an individual application to admit a good one-size-fits-all solution.</source>
          <target state="translated">응용 프로그램에 많은 수의 양식 그룹이 포함 된 경우 레이블, 컨트롤 및 기타 필요한 구성 요소를 렌더링하는 전체 필드 그룹을 캡슐화하는 상위 수준 구성 요소를 빌드하는 것이 좋습니다. 이러한 필드 그룹의 구성이 개별 응용 프로그램에 너무 구체적이기 때문에 모든 솔루션에 적용 할 수있는 좋은 솔루션을 허용하기 때문에 이러한 기본 제공을 제공하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a5ec0a94e4430c866a95be8e83199c514e0e6818" translate="yes" xml:space="preserve">
          <source>If your form layout allows it, you can use the &lt;code&gt;tooltip&lt;/code&gt; prop to display validation feedback in a styled tooltip. Be sure to have a parent with &lt;code&gt;position: relative&lt;/code&gt; on it for tooltip positioning. In the example below, our column classes have this already, but your project may require an alternative setup.</source>
          <target state="translated">양식 레이아웃에서 허용하는 경우 &lt;code&gt;tooltip&lt;/code&gt; 소품을 사용하여 스타일이 지정된 도구 설명에 유효성 검사 피드백을 표시 할 수 있습니다 . 툴팁 위치 지정을 위해 &lt;code&gt;position: relative&lt;/code&gt; 를 가진 부모가 있어야합니다 . 아래 예에서 열 클래스에는 이미이 항목이 있지만 프로젝트에 다른 설정이 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="50e19fda0d5b4b74a4a1a1d584e56578693a4ea4" translate="yes" xml:space="preserve">
          <source>Image</source>
          <target state="translated">Image</target>
        </trans-unit>
        <trans-unit id="bca2be81ad852047e813ce41711a6d011698634c" translate="yes" xml:space="preserve">
          <source>Image Overlays</source>
          <target state="translated">이미지 오버레이</target>
        </trans-unit>
        <trans-unit id="0cf76a44426739568792ee779aba046822832947" translate="yes" xml:space="preserve">
          <source>Image caps</source>
          <target state="translated">이미지 캡</target>
        </trans-unit>
        <trans-unit id="09e871c98fef3b901a775def173e4126aaf73b42" translate="yes" xml:space="preserve">
          <source>Images</source>
          <target state="translated">Images</target>
        </trans-unit>
        <trans-unit id="3a4dbec04d3ec8972638687ce3087f8eae6bcf0a" translate="yes" xml:space="preserve">
          <source>Importing Components</source>
          <target state="translated">컴포넌트 가져 오기</target>
        </trans-unit>
        <trans-unit id="e84a93b3fd9bd7082a57ddae85b82812c08ad5d5" translate="yes" xml:space="preserve">
          <source>In addition to the standard size, a smaller additional preconfigured size is available by configuring the &lt;code&gt;size&lt;/code&gt; property to &lt;code&gt;sm&lt;/code&gt;.</source>
          <target state="translated">표준 크기 외에도 &lt;code&gt;size&lt;/code&gt; 속성을 &lt;code&gt;sm&lt;/code&gt; 으로 구성하면 더 작은 추가 사전 구성된 크기를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fed6559f1b07968c573d23796418bd05493c1629" translate="yes" xml:space="preserve">
          <source>In case you are using &lt;strong&gt;Sass&lt;/strong&gt; the simplest way is to include the Bootstrap&amp;rsquo;s source Sass files in your main Sass file and then require it on your &lt;code&gt;src/index.js&lt;/code&gt; or &lt;code&gt;App.js&lt;/code&gt; file. This applies to a typical &lt;code&gt;create-react-app&lt;/code&gt; application in other use cases you might have to setup the bundler of your choice to compile Sass/SCSS stylesheets to CSS.</source>
          <target state="translated">&lt;strong&gt;Sass&lt;/strong&gt; 를 사용 하는 경우 가장 간단한 방법은 Bootstrap의 소스 Sass 파일을 기본 Sass 파일에 포함시킨 다음 &lt;code&gt;src/index.js&lt;/code&gt; 또는 &lt;code&gt;App.js&lt;/code&gt; 파일 에 요구하는 것입니다 . 이는 Sass / SCSS 스타일 시트를 CSS로 컴파일하기 위해 선택한 번 들러를 설정해야 할 수있는 다른 사용 사례 의 일반적인 &lt;code&gt;create-react-app&lt;/code&gt; 애플리케이션에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="c925fb72b415f61dfc99a1f31f06f0a6a4ec2f8a" translate="yes" xml:space="preserve">
          <source>In some cases you may need to change the base class &quot;prefix&quot; of one or more Components. You can control how a Component prefixes its classes locally by changing the &lt;code&gt;bsPrefix&lt;/code&gt; prop. Or globally via the &lt;code&gt;ThemeProvider&lt;/code&gt; Component.</source>
          <target state="translated">어떤 경우에는 하나 이상의 구성 요소의 기본 클래스 &quot;접두사&quot;를 변경해야 할 수도 있습니다. &lt;code&gt;bsPrefix&lt;/code&gt; prop 을 변경하여 Component가 로컬로 클래스 접두사를 지정하는 방법을 제어 할 수 있습니다 . 또는 &lt;code&gt;ThemeProvider&lt;/code&gt; 구성 요소 를 통해 전역 적으로 .</target>
        </trans-unit>
        <trans-unit id="81c0f4c1d1ecc2a80069bd3ba8f2316d94dcb98a" translate="yes" xml:space="preserve">
          <source>Include a backdrop component. Specify 'static' for a backdrop that doesn't trigger an &quot;onHide&quot; when clicked.</source>
          <target state="translated">배경 구성 요소를 포함합니다. 클릭 할 때 &quot;onHide&quot;를 트리거하지 않는 배경에 대해 '정적'을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="6ceb00addd0c8a429810f76b4b6ab4e2338ee956" translate="yes" xml:space="preserve">
          <source>Indicate the current page&amp;rsquo;s location within a navigational hierarchy that automatically adds separators via CSS. Add &lt;code&gt;active &lt;/code&gt; prop to active &lt;code&gt;Breadcrumb.Item &lt;/code&gt;. Do not set both &lt;code&gt;active &lt;/code&gt; and &lt;code&gt;href &lt;/code&gt; attributes. &lt;code&gt;active &lt;/code&gt; overrides &lt;code&gt;href &lt;/code&gt; and &lt;code&gt;span &lt;/code&gt; element is rendered instead of &lt;code&gt;a &lt;/code&gt;.</source>
          <target state="translated">CSS를 통해 구분 기호를 자동으로 추가하는 탐색 계층 구조 내에서 현재 페이지의 위치를 ​​나타냅니다. 활성 &lt;code&gt;Breadcrumb.Item &lt;/code&gt; 에 &lt;code&gt;active &lt;/code&gt; 소품을 추가합니다 . &lt;code&gt;active &lt;/code&gt; 및 &lt;code&gt;href &lt;/code&gt; 속성을 모두 설정하지 마십시오 . &lt;code&gt;active &lt;/code&gt; 재정 &lt;code&gt;href &lt;/code&gt; 와 &lt;code&gt;span &lt;/code&gt; 엘리먼트 대신 렌더링 . &lt;code&gt;a &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f42c5dd5d5698c91eddf7fe6c52d65cd73227f3" translate="yes" xml:space="preserve">
          <source>Individual Item Intervals</source>
          <target state="translated">개별 항목 간격</target>
        </trans-unit>
        <trans-unit id="2e347f4ceb23a6d8637cc8028fda9ad8c7b7c47f" translate="yes" xml:space="preserve">
          <source>Inline</source>
          <target state="translated">Inline</target>
        </trans-unit>
        <trans-unit id="39580f5ee4429d7e522adbdacb89b203951a6e1f" translate="yes" xml:space="preserve">
          <source>Inline forms</source>
          <target state="translated">인라인 양식</target>
        </trans-unit>
        <trans-unit id="b3bbd647576e0b8b56fd6f5b58c93ed5f1fa5c90" translate="yes" xml:space="preserve">
          <source>Inline text can use any typical inline HTML element (be it a &lt;code&gt;&amp;lt;small&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;, or something else) with nothing more than a utility class.</source>
          <target state="translated">인라인 텍스트는 유틸리티 클래스에 불과한 일반적인 인라인 HTML 요소 ( &lt;code&gt;&amp;lt;small&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 또는 다른 것)를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6b3d7a0c12435a09249079e7832a68d3c85e84a" translate="yes" xml:space="preserve">
          <source>Input group validation</source>
          <target state="translated">입력 그룹 유효성 검사</target>
        </trans-unit>
        <trans-unit id="cceaba917d1f4d7995c4750fc6db24cae7fb1392" translate="yes" xml:space="preserve">
          <source>Input size variants</source>
          <target state="translated">입력 크기 변형</target>
        </trans-unit>
        <trans-unit id="61d21592ed06cc5065ffc9a377a2a407d2ad0ea2" translate="yes" xml:space="preserve">
          <source>InputGroup</source>
          <target state="translated">InputGroup</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="5b6a54452e074f642b6ec9e32949103e47e44d31" translate="yes" xml:space="preserve">
          <source>Instead of applying button sizing props to every button in a group, just add &lt;code&gt;size &lt;/code&gt; prop to the &lt;code&gt;&amp;lt;ButtonGroup&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">그룹의 모든 버튼에 버튼 크기 조정 소품을 적용하는 대신 &lt;code&gt;&amp;lt;ButtonGroup&amp;gt;&lt;/code&gt; 에 &lt;code&gt;size &lt;/code&gt; 소품을 추가하기 만하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="b702296a0c2a4bf6820f6b770b1bd83f559d51d9" translate="yes" xml:space="preserve">
          <source>Invert the colors of the table &amp;mdash; with light text on dark backgrounds by setting variant as &lt;code&gt;dark&lt;/code&gt;.</source>
          <target state="translated">변형을 &lt;code&gt;dark&lt;/code&gt; 로 설정하여 어두운 배경에 밝은 텍스트로 표의 색상을 반전합니다 .</target>
        </trans-unit>
        <trans-unit id="1f3d337f54062ab5b42298fa25a2d7ee753db6ac" translate="yes" xml:space="preserve">
          <source>It's often beneficial (especially in React) to handle form validation via a library like Formik, or react-formal. In those cases, &lt;code&gt;isValid&lt;/code&gt; and &lt;code&gt;isInvalid&lt;/code&gt; props can be added to form controls to manually apply validation styles. Below is a quick example integrating with &lt;a href=&quot;https://github.com/jaredpalmer/formik&quot;&gt;Formik&lt;/a&gt;.</source>
          <target state="translated">Formik 또는 react-formal과 같은 라이브러리를 통해 양식 유효성 검사를 처리하는 것이 (특히 React에서) 유익한 경우가 많습니다. 이러한 경우 &lt;code&gt;isValid&lt;/code&gt; 및 &lt;code&gt;isInvalid&lt;/code&gt; props를 양식 컨트롤에 추가하여 유효성 검사 스타일을 수동으로 적용 할 수 있습니다. 다음은 &lt;a href=&quot;https://github.com/jaredpalmer/formik&quot;&gt;Formik&lt;/a&gt; 과 통합하는 간단한 예 입니다.</target>
        </trans-unit>
        <trans-unit id="54621857be8482061195a0838a0d85f76438f774" translate="yes" xml:space="preserve">
          <source>Jumbotron</source>
          <target state="translated">Jumbotron</target>
        </trans-unit>
        <trans-unit id="2ed18abe74d94987d06bf037afc2f5a05027e1a4" translate="yes" xml:space="preserve">
          <source>Kitchen Sink</source>
          <target state="translated">부엌 싱크대</target>
        </trans-unit>
        <trans-unit id="04ec48c851503cefc8c80614d72f02cf670dd19c" translate="yes" xml:space="preserve">
          <source>Label for the control.</source>
          <target state="translated">컨트롤의 레이블입니다.</target>
        </trans-unit>
        <trans-unit id="0b819fb3f4ffac9de50f66c7901d3dddd10119ef" translate="yes" xml:space="preserve">
          <source>Label shown to screen readers only, can be used to show the next element in the carousel. Set to null to deactivate.</source>
          <target state="translated">스크린 리더에만 표시되는 라벨이며 캐 러셀의 다음 요소를 표시하는 데 사용할 수 있습니다. 비활성화하려면 null로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="cacf6c0a301dce1fd49e77fd4399a33206095f06" translate="yes" xml:space="preserve">
          <source>Label shown to screen readers only, can be used to show the previous element in the carousel. Set to null to deactivate.</source>
          <target state="translated">스크린 리더에만 표시되는 라벨은 캐 러셀의 이전 요소를 표시하는 데 사용할 수 있습니다. 비활성화하려면 null로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="972ad8d8a50397ba8c02433ed8f048eeb4074b85" translate="yes" xml:space="preserve">
          <source>Layout</source>
          <target state="translated">Layout</target>
        </trans-unit>
        <trans-unit id="c1dcba5436572dab6f3f4351f9203657d9e3aa48" translate="yes" xml:space="preserve">
          <source>Learn how to include React Bootstrap in your project</source>
          <target state="translated">프로젝트에 React Bootstrap을 포함하는 방법 알아보기</target>
        </trans-unit>
        <trans-unit id="ca7cd5fa5cd84fb684a37b6018f869126af4c8e1" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License (MIT).</source>
          <target state="translated">MIT 라이선스 (MIT)에 따라 라이선스가 부여되었습니다.</target>
        </trans-unit>
        <trans-unit id="6ba8c22a5031020d7def07f0775485403152f113" translate="yes" xml:space="preserve">
          <source>Like the original Bootstrap spinners, these can also be used with buttons. To use this component out-of-the-box it is recommended you change the element type to &lt;code&gt;span&lt;/code&gt; by configuring the &lt;code&gt;as&lt;/code&gt; property when using spinners inside buttons.</source>
          <target state="translated">원래의 부트 스트랩 스피너와 마찬가지로 버튼과 함께 사용할 수도 있습니다. 이 구성 요소를 &lt;code&gt;span&lt;/code&gt; 으로 사용하려면 버튼 내부의 스피너를 사용할 때 &lt;code&gt;as&lt;/code&gt; 속성 을 구성하여 요소 유형을 범위 로 변경하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="014bcd654c60d5250fad2123b073b9c0ac3340f6" translate="yes" xml:space="preserve">
          <source>Links</source>
          <target state="translated">Links</target>
        </trans-unit>
        <trans-unit id="61bf48a42bb4fdb6df6f79f313e3d48d6cc1329c" translate="yes" xml:space="preserve">
          <source>List Groups</source>
          <target state="translated">그룹 나열</target>
        </trans-unit>
        <trans-unit id="54315669a7d242375b8c0d239012a0f8154088c3" translate="yes" xml:space="preserve">
          <source>List groups</source>
          <target state="translated">그룹 나열</target>
        </trans-unit>
        <trans-unit id="9a5b74de42f518d608f3aad2c6bedee3d0d427e9" translate="yes" xml:space="preserve">
          <source>List groups are a flexible and powerful component for displaying a series of content. Modify and extend them to support just about any content within.</source>
          <target state="translated">목록 그룹은 일련의 콘텐츠를 표시하기위한 유연하고 강력한 구성 요소입니다. 내부의 거의 모든 콘텐츠를 지원하도록 수정하고 확장합니다.</target>
        </trans-unit>
        <trans-unit id="d4a5f305c83e5ec3d7b0a571b59f6ddd98059a8c" translate="yes" xml:space="preserve">
          <source>List items &lt;code&gt;actions&lt;/code&gt; are distinct from plain items to ensure that click or tap affordances aren't applied to non-interactive items.</source>
          <target state="translated">목록 항목 &lt;code&gt;actions&lt;/code&gt; 은 클릭 또는 탭 어포던스가 비대화 형 항목에 적용되지 않도록 일반 항목과 구별됩니다.</target>
        </trans-unit>
        <trans-unit id="604b0046ef13109c63b715ac436f8de51519d492" translate="yes" xml:space="preserve">
          <source>ListGroup</source>
          <target state="translated">ListGroup</target>
        </trans-unit>
        <trans-unit id="b307cd20bfebc6d644246cc59fc04152e14201ae" translate="yes" xml:space="preserve">
          <source>ListGroup.Item</source>
          <target state="translated">ListGroup.Item</target>
        </trans-unit>
        <trans-unit id="502b7c738134fd4a95cc56ec8e84035cd758deac" translate="yes" xml:space="preserve">
          <source>Live demo</source>
          <target state="translated">라이브 데모</target>
        </trans-unit>
        <trans-unit id="03d5e2339e36c09933b20dec5376aff54583d344" translate="yes" xml:space="preserve">
          <source>Local &lt;code&gt;onSelect&lt;/code&gt; handlers are ignored when in the context of a TabContainer or Navbar (MAYBE ADD BACK?)</source>
          <target state="translated">TabContainer 또는 Navbar 컨텍스트에서 로컬 &lt;code&gt;onSelect&lt;/code&gt; 핸들러가 무시됩니다 (MAYBE ADD BACK?).</target>
        </trans-unit>
        <trans-unit id="c22b89bc75e8fff7a346adb49a9546c9eddf35ee" translate="yes" xml:space="preserve">
          <source>Loose text and links can be wrapped &lt;code&gt;Navbar.Text&lt;/code&gt; in order to correctly align it vertically.</source>
          <target state="translated">느슨한 텍스트와 링크는 수직으로 올바르게 정렬하기 위해 &lt;code&gt;Navbar.Text&lt;/code&gt; 를 래핑 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c8315129b295e1f0a6aaf7820bab3ba79eaaa43c" translate="yes" xml:space="preserve">
          <source>Low-level components and utilities for building beautiful accessible overlay components</source>
          <target state="translated">액세스 가능한 아름다운 오버레이 구성 요소를 만들기위한 저수준 구성 요소 및 유틸리티</target>
        </trans-unit>
        <trans-unit id="37ce1f062a8c70878c496a184f9dce95f9672252" translate="yes" xml:space="preserve">
          <source>Make a set of buttons appear vertically stacked rather than horizontally, by adding &lt;code&gt;vertical&lt;/code&gt; to the &lt;code&gt;&amp;lt;ButtonGroup&amp;gt;&lt;/code&gt;. &lt;strong&gt;Split button dropdowns are not supported here.&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;ButtonGroup&amp;gt;&lt;/code&gt; 에 &lt;code&gt;vertical&lt;/code&gt; 를 추가하여 단추 세트가 가로가 아닌 세로로 쌓여 표시 되도록합니다 . &lt;strong&gt;여기에서는 분할 버튼 드롭 다운이 지원되지 않습니다.&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f22c37f336415de21447d046e2857e76f25b4cbc" translate="yes" xml:space="preserve">
          <source>Make buttons look inactive by adding the &lt;code&gt;disabled&lt;/code&gt; prop to.</source>
          <target state="translated">&lt;code&gt;disabled&lt;/code&gt; 소품을 추가하여 버튼을 비활성 상태로 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="27d1dfd77fa39f540843a28b9861139e81abddbf" translate="yes" xml:space="preserve">
          <source>Make tables more compact by cutting cell padding in half by setting size as &lt;code&gt;sm&lt;/code&gt;.</source>
          <target state="translated">크기를 &lt;code&gt;sm&lt;/code&gt; 으로 설정하여 셀 패딩을 반으로 잘라 테이블을 더 컴팩트하게 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="66dd0ed8c49b5bde1a8bb03e1950300c4b48c94e" translate="yes" xml:space="preserve">
          <source>Make the control disabled</source>
          <target state="translated">컨트롤 비활성화</target>
        </trans-unit>
        <trans-unit id="f7e82e077f59172131c80018433e5f5dc112f3c9" translate="yes" xml:space="preserve">
          <source>Make the control readonly</source>
          <target state="translated">컨트롤을 읽기 전용으로 설정</target>
        </trans-unit>
        <trans-unit id="25a76831de45c9235744457e2cff15cdc4a4fdc3" translate="yes" xml:space="preserve">
          <source>Make the jumbotron full width, and without rounded corners</source>
          <target state="translated">둥근 모서리없이 점보트론을 전체 너비로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="3039792dbeabf9099f2a404478db1095dd092758" translate="yes" xml:space="preserve">
          <source>Make the set of Buttons appear vertically stacked.</source>
          <target state="translated">버튼 세트를 수직으로 쌓아 표시합니다.</target>
        </trans-unit>
        <trans-unit id="22242b53050632638bade59e6aebcefe2cde4fa5" translate="yes" xml:space="preserve">
          <source>Manually controlling &lt;code&gt;expanded&lt;/code&gt; via the onSelect callback is recommended instead, for more complex operations that need to be executed after the &lt;code&gt;select&lt;/code&gt; event of &lt;code&gt;&amp;lt;Nav&amp;gt;&lt;/code&gt; descendants.</source>
          <target state="translated">&lt;code&gt;&amp;lt;Nav&amp;gt;&lt;/code&gt; 하위 항목 의 &lt;code&gt;select&lt;/code&gt; 이벤트 후에 실행해야하는 더 복잡한 작업의 경우 onSelect 콜백을 통해 &lt;code&gt;expanded&lt;/code&gt; 을 수동으로 제어하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="1c666d68d8ca70a45c430603b4bc2f2138a009c5" translate="yes" xml:space="preserve">
          <source>Manually set the visual state of the button to &lt;code&gt;:active&lt;/code&gt;</source>
          <target state="translated">버튼의 시각적 상태를 수동으로 설정합니다 &lt;code&gt;:active&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b15eb81d34e80441f57741108a4ec480b0a77507" translate="yes" xml:space="preserve">
          <source>Manually style the input as invalid</source>
          <target state="translated">입력을 잘못된 것으로 수동으로 스타일 지정</target>
        </trans-unit>
        <trans-unit id="82b9f9654ac62d64ce3b8f02b78d679711a3dc47" translate="yes" xml:space="preserve">
          <source>Manually style the input as valid</source>
          <target state="translated">입력을 유효한 것으로 수동으로 스타일 지정</target>
        </trans-unit>
        <trans-unit id="3120af3df3cf7aca73ddeb8aaf41782d4558f0b3" translate="yes" xml:space="preserve">
          <source>Manually toggling &lt;code&gt;show&lt;/code&gt; does &lt;strong&gt;not&lt;/strong&gt; wait for &lt;code&gt;delay&lt;/code&gt; to change the visibility.</source>
          <target state="translated">수동 전환 &lt;code&gt;show&lt;/code&gt; 는 가시성을 변경하기 위해 &lt;code&gt;delay&lt;/code&gt; 을 기다리지 &lt;strong&gt;않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="5519a3a014617db597226f80cb4eb3033ceca2c3" translate="yes" xml:space="preserve">
          <source>Mark a form as having been validated. Setting it to &lt;code&gt;true&lt;/code&gt; will toggle any validation styles on the forms elements.</source>
          <target state="translated">양식을 검증 된 것으로 표시하십시오. &lt;code&gt;true&lt;/code&gt; 로 설정 하면 양식 요소의 유효성 검사 스타일이 전환됩니다.</target>
        </trans-unit>
        <trans-unit id="aa44070c7038f08d2084458c8d8754edb7bab27f" translate="yes" xml:space="preserve">
          <source>Mark the Tab with a matching &lt;code&gt;eventKey&lt;/code&gt; as active.</source>
          <target state="translated">일치하는 &lt;code&gt;eventKey&lt;/code&gt; 가 있는 탭을 활성으로 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="1f5eb6d8270eabc613835653972bbd2d63a12c12" translate="yes" xml:space="preserve">
          <source>Marks a ListGroupItem as actionable, applying additional hover, active and disabled styles for links and buttons.</source>
          <target state="translated">ListGroupItem을 실행 가능으로 표시하고 링크 및 단추에 대한 추가 호버, 활성 및 비활성화 스타일을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="9a408828698e247b3e89446b6c20ffcce5c7e474" translate="yes" xml:space="preserve">
          <source>Marks the NavItem with a matching &lt;code&gt;eventKey&lt;/code&gt; (or &lt;code&gt;href&lt;/code&gt; if present) as active.</source>
          <target state="translated">일치하는 &lt;code&gt;eventKey&lt;/code&gt; (또는있는 경우 &lt;code&gt;href&lt;/code&gt; ) 가있는 NavItem 을 활성으로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="c269302d018fd16708afb15630b966844d800dc7" translate="yes" xml:space="preserve">
          <source>Maximum value progress can reach</source>
          <target state="translated">최대 가치 진행률에 도달 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c77aeece8c258113148c6fb487946bf97b34672" translate="yes" xml:space="preserve">
          <source>Media</source>
          <target state="translated">Media</target>
        </trans-unit>
        <trans-unit id="510ebfb65b5b46b8d229a77eace84b755dceadad" translate="yes" xml:space="preserve">
          <source>Media Alignment</source>
          <target state="translated">미디어 정렬</target>
        </trans-unit>
        <trans-unit id="62864c22018dce35474379477580b7f2886063c7" translate="yes" xml:space="preserve">
          <source>Media Nesting</source>
          <target state="translated">미디어 중첩</target>
        </trans-unit>
        <trans-unit id="4eee845e07cdb585f2321650f008ab09d555d4a6" translate="yes" xml:space="preserve">
          <source>Media Order</source>
          <target state="translated">미디어 주문</target>
        </trans-unit>
        <trans-unit id="e06066ca8de5feb879f119e5e6938d7a248a5620" translate="yes" xml:space="preserve">
          <source>Media in a media object can be aligned with flexbox utilities to the top (default), middle, or end of your &lt;code&gt;Media.Body&lt;/code&gt; content.</source>
          <target state="translated">미디어 개체의 미디어는 Flexbox 유틸리티를 사용하여 &lt;code&gt;Media.Body&lt;/code&gt; 콘텐츠 의 상단 (기본값), 중간 또는 끝에 정렬 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6b2f54ba0ffd4781acf5c0f92e2e7a77cd6d4b07" translate="yes" xml:space="preserve">
          <source>Media list</source>
          <target state="translated">미디어 목록</target>
        </trans-unit>
        <trans-unit id="ad70fb3f025bba916a3068e3d484704cdd359639" translate="yes" xml:space="preserve">
          <source>Media objects</source>
          <target state="translated">미디어 개체</target>
        </trans-unit>
        <trans-unit id="ea6ed8ede994fab6e5699944cfd81c2aaaf8c532" translate="yes" xml:space="preserve">
          <source>Media objects can be infinitely nested, though we suggest you stop at some point. Place nested &lt;code&gt;Media&lt;/code&gt; within the &lt;code&gt;Media.Body&lt;/code&gt; of a parent media object.</source>
          <target state="translated">미디어 개체는 무한히 중첩 될 수 있지만 어느 시점에서 중지하는 것이 좋습니다. 장소는 중첩 된 &lt;code&gt;Media&lt;/code&gt; 내 &lt;code&gt;Media.Body&lt;/code&gt; 부모 미디어 객체의.</target>
        </trans-unit>
        <trans-unit id="3d792b1c1b2fc5356d29269156f1ae0bc860bb1a" translate="yes" xml:space="preserve">
          <source>Menu alignment</source>
          <target state="translated">메뉴 정렬</target>
        </trans-unit>
        <trans-unit id="8c38848b3b7bd144933cc9c76dd5efd7e9c52a25" translate="yes" xml:space="preserve">
          <source>Menu dividers</source>
          <target state="translated">메뉴 구분선</target>
        </trans-unit>
        <trans-unit id="65e1b6e78132343abb1d4343b093c3f278c9f0e0" translate="yes" xml:space="preserve">
          <source>Menu headers</source>
          <target state="translated">메뉴 헤더</target>
        </trans-unit>
        <trans-unit id="fd0b0b8f9535c21f5c697415e34da8e008d26d26" translate="yes" xml:space="preserve">
          <source>MenuItem</source>
          <target state="translated">MenuItem</target>
        </trans-unit>
        <trans-unit id="55d7a853a1f69b253bec912af555512b829d0abf" translate="yes" xml:space="preserve">
          <source>Methods and events using jQuery is done imperatively by directly manipulating the DOM. In contrast, React uses updates to the state to update the virtual DOM. In this way, React-Bootstrap provides a more reliable solution by incorporating Bootstrap functionality into React's virtual DOM. Below are a few examples of how React-Bootstrap components differ from Bootstrap.</source>
          <target state="translated">jQuery를 사용하는 메서드와 이벤트는 DOM을 직접 조작하여 명령 적으로 수행됩니다. 대조적으로 React는 상태 업데이트를 사용하여 가상 DOM을 업데이트합니다. 이러한 방식으로 React-Bootstrap은 Bootstrap 기능을 React의 가상 DOM에 통합하여보다 안정적인 솔루션을 제공합니다. 다음은 React-Bootstrap 구성 요소가 Bootstrap과 어떻게 다른지에 대한 몇 가지 예입니다.</target>
        </trans-unit>
        <trans-unit id="6505ea1c1acf25336426a3088c32de758f2160ee" translate="yes" xml:space="preserve">
          <source>Migrating to v1</source>
          <target state="translated">v1로 마이그레이션</target>
        </trans-unit>
        <trans-unit id="7972cd12b39c87581f70df985d5b4eb077488696" translate="yes" xml:space="preserve">
          <source>Minimum value progress can begin from</source>
          <target state="translated">최소 가치 진행은</target>
        </trans-unit>
        <trans-unit id="d44c2c5216ec66ccb451d99a0f522a63e33ee785" translate="yes" xml:space="preserve">
          <source>Modal</source>
          <target state="translated">Modal</target>
        </trans-unit>
        <trans-unit id="e8d7fbef1315dc7fbe2d3540b2a5f3aa7db688c6" translate="yes" xml:space="preserve">
          <source>Modal's &quot;trap&quot; focus in them, ensuring the keyboard navigation cycles through the modal, and not the rest of the page.</source>
          <target state="translated">모달의 &quot;트랩&quot;포커스는 키보드 탐색이 페이지의 나머지 부분이 아닌 모달을 순환하도록합니다.</target>
        </trans-unit>
        <trans-unit id="0e4d56b0a8b750cd818b88ce945e4bdf5a2298e5" translate="yes" xml:space="preserve">
          <source>ModalBody</source>
          <target state="translated">ModalBody</target>
        </trans-unit>
        <trans-unit id="c4466eaf633ecd9fe13aa17086edae5d2cebfd0b" translate="yes" xml:space="preserve">
          <source>ModalDialog</source>
          <target state="translated">ModalDialog</target>
        </trans-unit>
        <trans-unit id="5d59f6bcfee6487b0997df7c2eff05992156830d" translate="yes" xml:space="preserve">
          <source>ModalFooter</source>
          <target state="translated">ModalFooter</target>
        </trans-unit>
        <trans-unit id="b73544f7db6b0a0239a7a8560d9375a322556f0e" translate="yes" xml:space="preserve">
          <source>ModalHeader</source>
          <target state="translated">ModalHeader</target>
        </trans-unit>
        <trans-unit id="aabc561bf5c97a35de1a4bbc97c7d426755db761" translate="yes" xml:space="preserve">
          <source>ModalTitle</source>
          <target state="translated">ModalTitle</target>
        </trans-unit>
        <trans-unit id="c640c55e66b359e9228c54d00149a1c59ba1b265" translate="yes" xml:space="preserve">
          <source>Modals</source>
          <target state="translated">Modals</target>
        </trans-unit>
        <trans-unit id="611cfb973de92988e99f12c36c5f26a813121ce3" translate="yes" xml:space="preserve">
          <source>Modals are &lt;em&gt;unmounted&lt;/em&gt; when closed.</source>
          <target state="translated">닫히면 모달이 &lt;em&gt;마운트 해제&lt;/em&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="ec7123536e275e1b5aa80fecaab5f7ac0668d6b0" translate="yes" xml:space="preserve">
          <source>Modals are positioned over everything else in the document and remove scroll from the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; so that modal content scrolls instead.</source>
          <target state="translated">모달은 문서의 다른 모든 항목 위에 배치되고 대신 모달 콘텐츠가 스크롤되도록 &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 에서 스크롤을 제거 합니다.</target>
        </trans-unit>
        <trans-unit id="f14ea13cab8ed2d424205e901110ec43032c392f" translate="yes" xml:space="preserve">
          <source>More complex forms can be built using the grid components. Use these for form layouts that require multiple columns, varied widths, and additional alignment options.</source>
          <target state="translated">그리드 구성 요소를 사용하여 더 복잡한 양식을 작성할 수 있습니다. 여러 열, 다양한 너비 및 추가 정렬 옵션이 필요한 양식 레이아웃에 사용합니다.</target>
        </trans-unit>
        <trans-unit id="7818a059154d49654f34aa222171c4c61d0dce1d" translate="yes" xml:space="preserve">
          <source>More complex layouts can also be created with the grid system.</source>
          <target state="translated">그리드 시스템을 사용하여 더 복잡한 레이아웃을 만들 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="86c0a35ec8834c720d47b19935543c81b4d7c9c0" translate="yes" xml:space="preserve">
          <source>More options</source>
          <target state="translated">더 많은 옵션</target>
        </trans-unit>
        <trans-unit id="fe8da3f20673a373182e867a59d30b1cd67beb5d" translate="yes" xml:space="preserve">
          <source>Multiple add-ons are supported and can be mixed</source>
          <target state="translated">여러 애드온이 지원되며 혼합 가능</target>
        </trans-unit>
        <trans-unit id="0c4c79140b3c4ed7d9d63b27115aa0e323183d0d" translate="yes" xml:space="preserve">
          <source>Multiple addons</source>
          <target state="translated">여러 애드온</target>
        </trans-unit>
        <trans-unit id="f12f163719b58f113d649c0ba4b862d18fac3366" translate="yes" xml:space="preserve">
          <source>Multiple inputs</source>
          <target state="translated">다중 입력</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="d28493469edf01a08134d51ab3fd374215dc48cd" translate="yes" xml:space="preserve">
          <source>Native HTML5 form validation</source>
          <target state="translated">기본 HTML5 양식 유효성 검사</target>
        </trans-unit>
        <trans-unit id="57566258ab032497322177bca0104c50ff2f939f" translate="yes" xml:space="preserve">
          <source>Nav</source>
          <target state="translated">Nav</target>
        </trans-unit>
        <trans-unit id="3923c3adddd634e6e828e47fbb333dba48117cad" translate="yes" xml:space="preserve">
          <source>Nav.Item</source>
          <target state="translated">Nav.Item</target>
        </trans-unit>
        <trans-unit id="569a511671be6448daab44f127f01d751979e61a" translate="yes" xml:space="preserve">
          <source>Nav.Link</source>
          <target state="translated">Nav.Link</target>
        </trans-unit>
        <trans-unit id="4c88e17084eb9012cf713adc0c503e26fae69fc0" translate="yes" xml:space="preserve">
          <source>NavButton</source>
          <target state="translated">NavButton</target>
        </trans-unit>
        <trans-unit id="6ed17d2493f32034c4adefae6026873f68a63126" translate="yes" xml:space="preserve">
          <source>NavDropdown</source>
          <target state="translated">NavDropdown</target>
        </trans-unit>
        <trans-unit id="60fa56f0c3e4bead2d9cf0d893c6df1ac5ace7f0" translate="yes" xml:space="preserve">
          <source>NavLink hrefs will be used as &lt;code&gt;eventKey&lt;/code&gt;s when &lt;code&gt;eventKey&lt;/code&gt; is absent</source>
          <target state="translated">NavLink의하는 HREF는 다음과 같이 사용됩니다 &lt;code&gt;eventKey&lt;/code&gt; 때의 &lt;code&gt;eventKey&lt;/code&gt; 가 결석입니다</target>
        </trans-unit>
        <trans-unit id="690afa83acf2d824b47ef6e809fe02b9ca57d63f" translate="yes" xml:space="preserve">
          <source>Navbar</source>
          <target state="translated">Navbar</target>
        </trans-unit>
        <trans-unit id="58d84a902b3dc72cd98aeb4015dd88d1096ce6ae" translate="yes" xml:space="preserve">
          <source>Navbar.Brand</source>
          <target state="translated">Navbar.Brand</target>
        </trans-unit>
        <trans-unit id="e0513c88cba4787477c580d6e90e3ad88c85d53d" translate="yes" xml:space="preserve">
          <source>Navbar.Collapse</source>
          <target state="translated">Navbar.Collapse</target>
        </trans-unit>
        <trans-unit id="fc431d099b277e043df5768e6a901f9283332db6" translate="yes" xml:space="preserve">
          <source>Navbar.Toggle</source>
          <target state="translated">Navbar.Toggle</target>
        </trans-unit>
        <trans-unit id="d5a4796187229cea2deb634838c6c8e855d39c3c" translate="yes" xml:space="preserve">
          <source>NavbarBrand</source>
          <target state="translated">NavbarBrand</target>
        </trans-unit>
        <trans-unit id="6eb938fcd42153e387d6c081bf71102860506139" translate="yes" xml:space="preserve">
          <source>NavbarHeader</source>
          <target state="translated">NavbarHeader</target>
        </trans-unit>
        <trans-unit id="1eef15caec8acf89a2ea802bc2421b4e237193f5" translate="yes" xml:space="preserve">
          <source>NavbarToggle</source>
          <target state="translated">NavbarToggle</target>
        </trans-unit>
        <trans-unit id="e4b9d6bb6046e1d195875babe41a47448c7d57d3" translate="yes" xml:space="preserve">
          <source>Navbars</source>
          <target state="translated">Navbars</target>
        </trans-unit>
        <trans-unit id="225d27a43ae1701d73237a6592f5dbe9271208ce" translate="yes" xml:space="preserve">
          <source>Navbars and their contents are fluid by default. Use optional &lt;a href=&quot;#navbars-containers&quot;&gt;containers &lt;/a&gt; to limit their horizontal width.</source>
          <target state="translated">Navbar와 그 내용은 기본적으로 유동적입니다. 선택적 &lt;a href=&quot;#navbars-containers&quot;&gt;컨테이너&lt;/a&gt; 를 사용 하여 가로 너비를 제한 하십시오 .</target>
        </trans-unit>
        <trans-unit id="cf03cf2e9cdf95a20af09137dfb9071db0c31bf2" translate="yes" xml:space="preserve">
          <source>Navigation</source>
          <target state="translated">Navigation</target>
        </trans-unit>
        <trans-unit id="4f80ffe1e32003aaec99ca732623a16317294faa" translate="yes" xml:space="preserve">
          <source>Navigation bits in Bootstrap all share a general &lt;code&gt;Nav&lt;/code&gt; component and styles. Swap &lt;code&gt;variant&lt;/code&gt;s to switch between each style. The base &lt;code&gt;Nav&lt;/code&gt; component is built with flexbox and provide a strong foundation for building all types of navigation components.</source>
          <target state="translated">Bootstrap의 탐색 비트는 모두 일반 &lt;code&gt;Nav&lt;/code&gt; 구성 요소 및 스타일을 공유 합니다. 스왑 &lt;code&gt;variant&lt;/code&gt; 각 스타일 사이를 전환이야. 기본 &lt;code&gt;Nav&lt;/code&gt; 구성 요소는 flexbox로 빌드되며 모든 유형의 탐색 구성 요소를 빌드하기위한 강력한 기반을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c7794aafda48b3c67092c419e196a3f214b7cf23" translate="yes" xml:space="preserve">
          <source>Navigation style</source>
          <target state="translated">탐색 스타일</target>
        </trans-unit>
        <trans-unit id="64225a6db61546753939c22ba88d692a86643765" translate="yes" xml:space="preserve">
          <source>Nest &lt;code&gt;&amp;lt;ProgressBar /&amp;gt;&lt;/code&gt;s to stack them.</source>
          <target state="translated">&lt;code&gt;&amp;lt;ProgressBar /&amp;gt;&lt;/code&gt; 를 중첩 하여 스택합니다.</target>
        </trans-unit>
        <trans-unit id="f06563daf6842a8e082fd4615e320fc869bb69d9" translate="yes" xml:space="preserve">
          <source>Nesting</source>
          <target state="translated">Nesting</target>
        </trans-unit>
        <trans-unit id="651e565b1d05e128a190854ed09f8473f98e20d4" translate="yes" xml:space="preserve">
          <source>New variants and sizes</source>
          <target state="translated">새로운 변형 및 크기</target>
        </trans-unit>
        <trans-unit id="c53cbcd751e10d8f254dcb8d855e0ba41589a1e3" translate="yes" xml:space="preserve">
          <source>No animation</source>
          <target state="translated">애니메이션 없음</target>
        </trans-unit>
        <trans-unit id="fd2cf4fb4fcca8476d7dd4b2837d0334036af5fb" translate="yes" xml:space="preserve">
          <source>Normally &lt;code&gt;&amp;lt;Button&amp;gt;&lt;/code&gt; components will render a HTML &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; element. However you can render whatever you'd like, adding a &lt;code&gt;href&lt;/code&gt; prop will automatically render an &lt;code&gt;&amp;lt;a /&amp;gt;&lt;/code&gt; element. You can use the &lt;code&gt;as&lt;/code&gt; prop to render whatever your heart desires. React Bootstrap will take care of the proper ARIA roles for you.</source>
          <target state="translated">일반적으로 &lt;code&gt;&amp;lt;Button&amp;gt;&lt;/code&gt; 구성 요소는 HTML &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 요소를 렌더링합니다 . 그러나 원하는대로 렌더링 할 수 있으며 &lt;code&gt;href&lt;/code&gt; prop을 추가 하면 &lt;code&gt;&amp;lt;a /&amp;gt;&lt;/code&gt; 요소 가 자동으로 렌더링됩니다 . &lt;code&gt;as&lt;/code&gt; prop을 사용 하여 마음이 원하는대로 렌더링 할 수 있습니다 . React Bootstrap은 적절한 ARIA 역할을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="806ca1304939a63b47b581b5d8ece135d9655caf" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Row&lt;/code&gt; column widths will override &lt;code&gt;Col&lt;/code&gt; widths set on lower breakpoints when viewed on larger screens. The &lt;code&gt;&amp;lt;Col xs={6} /&amp;gt;&lt;/code&gt; size will be overriden by &lt;code&gt;&amp;lt;Row md={4} /&amp;gt;&lt;/code&gt; on medium and larger screens.</source>
          <target state="translated">참고 &lt;code&gt;Row&lt;/code&gt; 열의 폭보다 우선 &lt;code&gt;Col&lt;/code&gt; 큰 화면에서 볼 때 하부에 중단 폭 세트. &lt;code&gt;&amp;lt;Col xs={6} /&amp;gt;&lt;/code&gt; 크기에 의해 재정의 될 것이다 &lt;code&gt;&amp;lt;Row md={4} /&amp;gt;&lt;/code&gt; 중간 및 큰 화면에.</target>
        </trans-unit>
        <trans-unit id="154bbfa490735595d85c28d749a8ee7cb3abcd4f" translate="yes" xml:space="preserve">
          <source>Note that depending on how they are used, badges may be confusing for users of screen readers and similar assistive technologies. While the styling of badges provides a visual cue as to their purpose, these users will simply be presented with the content of the badge. Depending on the specific situation, these badges may seem like random additional words or numbers at the end of a sentence, link, or button. Unless the context is clear, consider including additional context with a visually hidden piece of additional text.</source>
          <target state="translated">사용 방법에 따라 화면 판독기 및 유사한 보조 기술을 사용하는 사용자에게 배지가 혼동을 줄 수 있습니다. 배지의 스타일링은 목적에 대한 시각적 단서를 제공하지만 이러한 사용자에게는 배지의 내용이 표시됩니다. 특정 상황에 따라 이러한 배지는 문장, 링크 또는 단추 끝에 임의의 추가 단어 나 숫자처럼 보일 수 있습니다. 컨텍스트가 명확하지 않은 경우 시각적으로 숨겨진 추가 텍스트 조각과 함께 추가 컨텍스트를 포함하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="20c1ef7193a4ed2c3dbf5db9752332e646362350" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;data-browse&lt;/code&gt; attribute does not to anything unless the &lt;code&gt;custom&lt;/code&gt; prop is set.</source>
          <target state="translated">참고는 것을 &lt;code&gt;data-browse&lt;/code&gt; 속성이 아무것도하지 않습니다하지 않는 한 &lt;code&gt;custom&lt;/code&gt; 소품이 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="b0008275fd1b15366b2566594c3b95a78874ec5d" translate="yes" xml:space="preserve">
          <source>Note that triggering components &lt;strong&gt;must be able to accept &lt;a href=&quot;https://reactjs.org/docs/refs-and-the-dom.html&quot;&gt;a ref&lt;/a&gt;&lt;/strong&gt; since &lt;code&gt;&amp;lt;OverlayTrigger&amp;gt;&lt;/code&gt; will attempt to add one. You can use &lt;a href=&quot;https://reactjs.org/docs/react-api.html#reactforwardref&quot;&gt;forwardRef()&lt;/a&gt; for function components.</source>
          <target state="translated">&lt;code&gt;&amp;lt;OverlayTrigger&amp;gt;&lt;/code&gt; 가 &lt;strong&gt;&lt;a href=&quot;https://reactjs.org/docs/refs-and-the-dom.html&quot;&gt;참조&lt;/a&gt;&lt;/strong&gt; 를 추가하려고 하므로 트리거링 구성 요소 &lt;strong&gt;는 참조&lt;/strong&gt;&lt;strong&gt; 를 수락 할 수 있어야합니다&lt;/strong&gt; . 함수 구성 요소에 &lt;a href=&quot;https://reactjs.org/docs/react-api.html#reactforwardref&quot;&gt;forwardRef ()&lt;/a&gt; 를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b78bfce73926a370b0287718b9689d53d1d574eb" translate="yes" xml:space="preserve">
          <source>Note: If you are manually closing the navbar using this &lt;code&gt;OnSelect&lt;/code&gt; prop, ensure that you are setting &lt;code&gt;expanded&lt;/code&gt; to false and not &lt;em&gt;toggling&lt;/em&gt; between true and false.</source>
          <target state="translated">참고 :이 &lt;code&gt;OnSelect&lt;/code&gt; 소품을 사용하여 탐색 모음을 수동으로 닫는 경우 &lt;code&gt;expanded&lt;/code&gt; 을 거짓 으로 설정 하고 참과 거짓 사이를 &lt;em&gt;토글&lt;/em&gt; 하지 않도록하십시오 .</target>
        </trans-unit>
        <trans-unit id="1ed58435966d03322309a631a1378b80190e1b9a" translate="yes" xml:space="preserve">
          <source>Note: creating a vertical nav (&lt;code&gt;.flex-column&lt;/code&gt;) with tabs styling is unsupported by Bootstrap's default stylesheet.</source>
          <target state="translated">참고 : 탭 스타일이 있는 세로 탐색 ( &lt;code&gt;.flex-column&lt;/code&gt; )을 만드는 것은 Bootstrap의 기본 스타일 시트에서 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1320eaf5f71a580ff7bfbd3044eee05609df246b" translate="yes" xml:space="preserve">
          <source>Often times you may need a more generic or low-level version of a Bootstrap component. Many of the &lt;code&gt;react-bootstrap&lt;/code&gt; components are built on top of components from &lt;a href=&quot;https://react-bootstrap.github.io/react-overlays/&quot;&gt;react-overlays&lt;/a&gt;, if you find yourself at the limit of a Bootstrap component, consider using the &lt;code&gt;react-overlays&lt;/code&gt; base component directly.</source>
          <target state="translated">종종 부트 스트랩 구성 요소의보다 일반적인 또는 저수준 버전이 필요할 수 있습니다. 대부분의 &lt;code&gt;react-bootstrap&lt;/code&gt; 구성 요소는 &lt;a href=&quot;https://react-bootstrap.github.io/react-overlays/&quot;&gt;react-overlays&lt;/a&gt; 의 구성 요소 위에 빌드됩니다 . Bootstrap 구성 요소의 한계에 도달 한 경우 &lt;code&gt;react-overlays&lt;/code&gt; 기본 구성 요소를 직접 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="a7374040fda8fa020cfe8d0209c7bb3c4268c26f" translate="yes" xml:space="preserve">
          <source>On the other hand, Bootstrap's dropdowns are designed to more generic and application in a variety of situations. For this reason we don't automatically add the menu roles to the markup. We do implement some basic keyboard navigation, and if you do provide the &quot;menu&quot; role, react-bootstrap will do its best to ensure the focus management is compliant with the</source>
          <target state="translated">반면에 Bootstrap의 드롭 다운은 다양한 상황에서보다 일반적이고 적용되도록 설계되었습니다. 이러한 이유로 마크 업에 메뉴 역할을 자동으로 추가하지 않습니다. 우리는 몇 가지 기본적인 키보드 탐색을 구현합니다. &quot;메뉴&quot;역할을 제공하는 경우 react-bootstrap은 포커스 관리가 다음 사항을 준수하는지 확인하기 위해 최선을 다할 것입니다.</target>
        </trans-unit>
        <trans-unit id="3d0a6c6c4a4cff6a35f0702cacf8887d08490784" translate="yes" xml:space="preserve">
          <source>On touch-enabled devices, when set to &lt;code&gt;&quot;hover&quot;&lt;/code&gt;, cycling will pause on &lt;code&gt;touchend&lt;/code&gt; (once the user finished interacting with the carousel) for two intervals, before automatically resuming. Note that this is in addition to the above mouse behavior.</source>
          <target state="translated">터치 지원 기기에서 &lt;code&gt;&quot;hover&quot;&lt;/code&gt; 설정하면 자동으로 다시 시작되기 전에 두 간격 동안 &lt;code&gt;touchend&lt;/code&gt; 에서 사이클링이 일시 중지됩니다 (사용자가 캐 러셀과 상호 작용을 마친 후). 이것은 위의 마우스 동작에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="94796746955c22fc60179865a96d0eea2519872e" translate="yes" xml:space="preserve">
          <source>One or more button variant combinations</source>
          <target state="translated">하나 이상의 버튼 변형 조합</target>
        </trans-unit>
        <trans-unit id="8e8d4da3edb7a2fbd5437e0d4fbf3548ecffd2c0" translate="yes" xml:space="preserve">
          <source>Open and close the Modal with a slide and fade animation.</source>
          <target state="translated">슬라이드 및 페이드 애니메이션으로 모달을 열고 닫습니다.</target>
        </trans-unit>
        <trans-unit id="4bbc654f9793d0245df0fa8509154a27b7df03d3" translate="yes" xml:space="preserve">
          <source>Optional Sizes</source>
          <target state="translated">옵션 크기</target>
        </trans-unit>
        <trans-unit id="e0a545fa59ecb542b3f53ce5525efe38c512ce75" translate="yes" xml:space="preserve">
          <source>Options passed to focus function when &lt;code&gt;restoreFocus&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;restoreFocus&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 로 설정된 경우 초점 기능에 전달되는 옵션</target>
        </trans-unit>
        <trans-unit id="88ef777746977fc57640e8f5218cff81865ee9af" translate="yes" xml:space="preserve">
          <source>Or pass a Tooltip element to &lt;code&gt;OverlayTrigger&lt;/code&gt; instead.</source>
          <target state="translated">또는 Tooltip 요소를 &lt;code&gt;OverlayTrigger&lt;/code&gt; 에 대신 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="5cdf875aa035b3e0605beed51626fb5fa4d25563" translate="yes" xml:space="preserve">
          <source>Outline buttons</source>
          <target state="translated">개요 버튼</target>
        </trans-unit>
        <trans-unit id="249450cb72252df146b3769ed2d41a843af2058c" translate="yes" xml:space="preserve">
          <source>Overlay</source>
          <target state="translated">Overlay</target>
        </trans-unit>
        <trans-unit id="850a616c6faeebb82802ed34e52f30c16b3da21b" translate="yes" xml:space="preserve">
          <source>OverlayTrigger</source>
          <target state="translated">OverlayTrigger</target>
        </trans-unit>
        <trans-unit id="30f888d222b77006610001ff65a62036e76c8b9f" translate="yes" xml:space="preserve">
          <source>Overlays</source>
          <target state="translated">Overlays</target>
        </trans-unit>
        <trans-unit id="650157fda7ce7e1099c1b692b9f4bfb8b813ee30" translate="yes" xml:space="preserve">
          <source>Overlays consist of at least two elements, the &quot;overlay&quot;, the element to be positioned, as well as a &quot;target&quot;, the element the overlay is positioned in relation to. You can also also have an &quot;arrow&quot; element, like the tooltips and popovers, but that is optional. Be sure to &lt;strong&gt;check out the &lt;a href=&quot;https://popper.js.org/docs/v2/&quot;&gt;Popper&lt;/a&gt; documentation for more details about the injected props.&lt;/strong&gt;</source>
          <target state="translated">오버레이는 배치 할 요소 인 &quot;오버레이&quot;와 오버레이가 배치되는 요소 인 &quot;타겟&quot;의 두 개 이상의 요소로 구성됩니다. 또한 도구 설명 및 팝 오버와 같은 &quot;화살표&quot;요소를 가질 수도 있지만 이는 선택 사항입니다. &lt;strong&gt;삽입 된 소품에 대한 자세한 내용은 &lt;/strong&gt;&lt;strong&gt;&lt;a href=&quot;https://popper.js.org/docs/v2/&quot;&gt;Popper&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt; 문서&lt;/strong&gt; 를 &lt;strong&gt;확인&lt;/strong&gt; 하십시오 &lt;strong&gt;.&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8bdb583cf333eab64918f6d4098239edec5f76db" translate="yes" xml:space="preserve">
          <source>Overlays rely on the third-party library &lt;a href=&quot;https://popper.js.org/&quot;&gt;Popper.js&lt;/a&gt;. It's included automatically with React-Bootstrap, but you should reference the API for more advanced use cases.</source>
          <target state="translated">오버레이는 타사 라이브러리 &lt;a href=&quot;https://popper.js.org/&quot;&gt;Popper.js&lt;/a&gt; 에 의존합니다 . React-Bootstrap에 자동으로 포함되지만 고급 사용 사례에 대해서는 API를 참조해야합니다.</target>
        </trans-unit>
        <trans-unit id="55a421d99568914477ac1ade26f0666a0a097136" translate="yes" xml:space="preserve">
          <source>Override the default button icon for the &quot;next&quot; control</source>
          <target state="translated">&quot;다음&quot;컨트롤에 대한 기본 단추 아이콘을 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="f9f2a1b5fcc71f5643856b90508e0c8cb6c4fa1d" translate="yes" xml:space="preserve">
          <source>Override the default button icon for the &quot;previous&quot; control</source>
          <target state="translated">&quot;이전&quot;컨트롤의 기본 단추 아이콘을 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="e428d609ca633b66bf6521c50a326d631163b234" translate="yes" xml:space="preserve">
          <source>PageItem</source>
          <target state="translated">PageItem</target>
        </trans-unit>
        <trans-unit id="536012190d3d4515a29641daf7aab6f7a81b0895" translate="yes" xml:space="preserve">
          <source>Pager</source>
          <target state="translated">Pager</target>
        </trans-unit>
        <trans-unit id="100325b8d6de92dc6ff09cd2c078133755bf274f" translate="yes" xml:space="preserve">
          <source>Pagination</source>
          <target state="translated">Pagination</target>
        </trans-unit>
        <trans-unit id="e26b3e9b20e77fad39ba75130392468e44bca1e3" translate="yes" xml:space="preserve">
          <source>Pairs nicely with the &lt;code&gt;variant&lt;/code&gt; prop.</source>
          <target state="translated">&lt;code&gt;variant&lt;/code&gt; 소품 과 잘 어울립니다 .</target>
        </trans-unit>
        <trans-unit id="2f4bd749ecf708ff53a15e9e7904176bd92ad347" translate="yes" xml:space="preserve">
          <source>Panel</source>
          <target state="translated">Panel</target>
        </trans-unit>
        <trans-unit id="38ea5ba8c928827a392ae9d524bfa5d99b282a90" translate="yes" xml:space="preserve">
          <source>Pill</source>
          <target state="translated">Pill</target>
        </trans-unit>
        <trans-unit id="e36c127d76bfdf2d40f0a2ef7347628ac514dc3d" translate="yes" xml:space="preserve">
          <source>Pills</source>
          <target state="translated">Pills</target>
        </trans-unit>
        <trans-unit id="9cfee2652176b99107d3e82659732b0e0d24ccfa" translate="yes" xml:space="preserve">
          <source>Place one add-on or button on either side of an input. You may also place one on both sides of an input. Remember to place &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;s outside the input group.</source>
          <target state="translated">입력의 양쪽에 하나의 애드온 또는 버튼을 배치합니다. 입력의 양쪽에 하나를 배치 할 수도 있습니다. 입력 그룹 외부에 &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; 을 배치하는 것을 잊지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="84b422425f27099ad6b2052ca146c55597bd961e" translate="yes" xml:space="preserve">
          <source>Place toasts with custom CSS as you need them. The top right is often used for notifications, as is the top middle.</source>
          <target state="translated">필요에 따라 사용자 정의 CSS로 토스트를 배치하십시오. 오른쪽 상단은 중간 상단과 마찬가지로 알림에 자주 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ab89d05c4b9c34dd1a8df7e4adbcef21efc1456b" translate="yes" xml:space="preserve">
          <source>Placement</source>
          <target state="translated">Placement</target>
        </trans-unit>
        <trans-unit id="da7bdcf75af233cae47390b5b49cf37833389d4d" translate="yes" xml:space="preserve">
          <source>Please refer to the official &lt;a href=&quot;https://getbootstrap.com/docs/4.4/components/forms/#translating-or-customizing-the-strings-with-scss&quot;&gt;Bootstrap documentation for translating via SCSS&lt;/a&gt;. The &lt;code&gt;lang&lt;/code&gt; prop can be used to pass the language.</source>
          <target state="translated">&lt;a href=&quot;https://getbootstrap.com/docs/4.4/components/forms/#translating-or-customizing-the-strings-with-scss&quot;&gt;SCSS를 통한 번역&lt;/a&gt; 에 대해서는 공식 부트 스트랩 문서를 참조하십시오 . &lt;code&gt;lang&lt;/code&gt; 소품은 언어를 전달하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c858e4aec30470ed62f60c3425b45fe4ccddbf0" translate="yes" xml:space="preserve">
          <source>Popover</source>
          <target state="translated">Popover</target>
        </trans-unit>
        <trans-unit id="592ec8428f26de9cbdf1a77597693ae0a7ffccfc" translate="yes" xml:space="preserve">
          <source>PopoverContent</source>
          <target state="translated">PopoverContent</target>
        </trans-unit>
        <trans-unit id="9c80dcb6d04505620d8bf39596a1ce3bff4e8a53" translate="yes" xml:space="preserve">
          <source>PopoverTitle</source>
          <target state="translated">PopoverTitle</target>
        </trans-unit>
        <trans-unit id="1c5a1f9937684702035e823b855365a8a6d68bc2" translate="yes" xml:space="preserve">
          <source>Popovers</source>
          <target state="translated">Popovers</target>
        </trans-unit>
        <trans-unit id="c2bae6dd0aff1fdb97cf8ea0452513c5d67a91e8" translate="yes" xml:space="preserve">
          <source>Position the navbar at the top of the viewport, but only after scrolling past it. A convenience prop for the &lt;code&gt;sticky-top&lt;/code&gt; positioning class.</source>
          <target state="translated">navbar를 뷰포트 상단에 배치합니다. 하는 편리한 소품 &lt;code&gt;sticky-top&lt;/code&gt; 위치 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="9292a6bb947e43eb7ac877886bcbcd53728b1eda" translate="yes" xml:space="preserve">
          <source>Prefixing components</source>
          <target state="translated">구성 요소 접두사</target>
        </trans-unit>
        <trans-unit id="50ce64c86a7372328c68cb021e80fd97991a214a" translate="yes" xml:space="preserve">
          <source>Progress bars</source>
          <target state="translated">진행률 표시 줄</target>
        </trans-unit>
        <trans-unit id="6dfa9eda184377c236e729ec07d1660c0f1a6647" translate="yes" xml:space="preserve">
          <source>Progress bars use some of the same button and alert classes for consistent styles.</source>
          <target state="translated">진행률 표시 줄은 일관된 스타일을 위해 동일한 버튼 및 경고 클래스 중 일부를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="24acde67f8939531de480b6a895c6a21f11860ff" translate="yes" xml:space="preserve">
          <source>ProgressBar</source>
          <target state="translated">ProgressBar</target>
        </trans-unit>
        <trans-unit id="e5561bc237fb41709bb2e8b651d704c1664ae03e" translate="yes" xml:space="preserve">
          <source>Props</source>
          <target state="translated">Props</target>
        </trans-unit>
        <trans-unit id="07eb70990b62e872ac3955e4cfce1a0be1568e44" translate="yes" xml:space="preserve">
          <source>Provide a function child to manually handle the layout of the FormCheck's inner components.</source>
          <target state="translated">FormCheck의 내부 구성 요소의 레이아웃을 수동으로 처리하는 함수 자식을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="cf4b951e9cc9f1e4c1b35cc930b787a3e821dcdb" translate="yes" xml:space="preserve">
          <source>Provide a function child to manually handle the layout of the FormFile's inner components.</source>
          <target state="translated">FormFile의 내부 구성 요소의 레이아웃을 수동으로 처리하는 함수 자식을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e6d446b4e92dd3e13fdf4456803a903a9a617235" translate="yes" xml:space="preserve">
          <source>Provide contextual feedback messages for typical user actions with the handful of available and flexible alert messages.</source>
          <target state="translated">소수의 사용 가능하고 유연한 경고 메시지와 함께 일반적인 사용자 작업에 대한 상황 별 피드백 메시지를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4163e1b9285d221eb72be374ece1f25566989722" translate="yes" xml:space="preserve">
          <source>Provide up-to-date feedback on the progress of a workflow or action with simple yet flexible progress bars.</source>
          <target state="translated">간단하면서도 유연한 진행률 표시 줄을 사용하여 워크 플로 또는 작업의 진행 상황에 대한 최신 피드백을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="77e0c87b9f4184820bbbced6c0b6549229c4bc4f" translate="yes" xml:space="preserve">
          <source>Provide valuable, actionable feedback to your users with form validation feedback.</source>
          <target state="translated">양식 유효성 검사 피드백을 통해 사용자에게 가치 있고 실행 가능한 피드백을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="934734ec61815de68d6811968938c224082d3e00" translate="yes" xml:space="preserve">
          <source>Provides an accessible label for the close button. It is used for Assistive Technology when the label text is not readable.</source>
          <target state="translated">닫기 버튼에 액세스 가능한 레이블을 제공합니다. 레이블 텍스트를 읽을 수없는 경우 보조 기술에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a74d59b9b9aa64705b934f6269fac31e68bb93bb" translate="yes" xml:space="preserve">
          <source>Providing a &lt;code&gt;href&lt;/code&gt; will render an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element, &lt;em&gt;styled&lt;/em&gt; as a button.</source>
          <target state="translated">&lt;code&gt;href&lt;/code&gt; 를 제공하면 버튼으로 &lt;em&gt;스타일이 지정된 &lt;/em&gt; &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 요소 가 렌더링됩니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3efbe7bfd2d54ca3e4088ab176902ad457e6360e" translate="yes" xml:space="preserve">
          <source>Push notifications to your visitors with a toast, a lightweight and easily customizable alert message.</source>
          <target state="translated">가볍고 쉽게 사용자 정의 할 수있는 알림 메시지 인 토스트로 방문자에게 푸시 알림을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="a16c5bbe4bf996740f257aa1e81bd57e4c52c8dd" translate="yes" xml:space="preserve">
          <source>Range</source>
          <target state="translated">Range</target>
        </trans-unit>
        <trans-unit id="ffc8ea7264385591fe6a0045325436d38ee867ce" translate="yes" xml:space="preserve">
          <source>Range Inputs</source>
          <target state="translated">범위 입력</target>
        </trans-unit>
        <trans-unit id="4d1f996aa17807ebebdb5143b01f86f170d5bea6" translate="yes" xml:space="preserve">
          <source>React</source>
          <target state="translated">React</target>
        </trans-unit>
        <trans-unit id="aef12fd73b3b9b0ad8d2c56af5ba6c9d2fc4fc3c" translate="yes" xml:space="preserve">
          <source>React Bootstrap</source>
          <target state="translated">React Bootstrap</target>
        </trans-unit>
        <trans-unit id="0d7ec51af83bef567222ca12442bbbb179f9d30b" translate="yes" xml:space="preserve">
          <source>React Bootstrap CodeSandbox examples</source>
          <target state="translated">React Bootstrap CodeSandbox 예제</target>
        </trans-unit>
        <trans-unit id="eba2e009846c957f432948b766706b3c50f81626" translate="yes" xml:space="preserve">
          <source>React Bootstrap is maintained by a &lt;a href=&quot;https://github.com/orgs/react-bootstrap/people&quot;&gt;team of developers&lt;/a&gt; on Github. We have a growing team and if you are interested in re-building the most popular front-end framework with React we would love to hear from you.</source>
          <target state="translated">React Bootstrap은 Github &lt;a href=&quot;https://github.com/orgs/react-bootstrap/people&quot;&gt;의 개발자 팀&lt;/a&gt; 이 관리합니다 . 우리는 성장하는 팀을 보유하고 있으며 React로 가장 인기있는 프런트 엔드 프레임 워크를 재 구축하는 데 관심이 있다면 여러분의 의견을 듣고 싶습니다.</target>
        </trans-unit>
        <trans-unit id="76a5f9659ebfaf390415548e035adf1415b290bf" translate="yes" xml:space="preserve">
          <source>React Bootstrap v1 adds full compatibility with Bootstrap 4. Because bootstrap 4 is a major rewrite of the project there are significant breaking changes from the pre &lt;code&gt;v1&lt;/code&gt; react-bootstrap.</source>
          <target state="translated">사전에서 뜻 깊은 깨는 변화가 부트 스트랩 (4) 프로젝트의 주요 재 작성하기 때문에 반응 부트 스트랩 (V1)는 부트 스트랩 (4)와 완벽한 호환성을 추가 &lt;code&gt;v1&lt;/code&gt; 반응 - 부트 스트랩.</target>
        </trans-unit>
        <trans-unit id="de7b58a959558c13734a3b2a5cde5656ca74a78f" translate="yes" xml:space="preserve">
          <source>React Bootstrap will prevent any &lt;code&gt;onClick&lt;/code&gt; handlers from firing regardless of the rendered element.</source>
          <target state="translated">React Bootstrap은 렌더링 된 요소에 관계없이 &lt;code&gt;onClick&lt;/code&gt; 핸들러 가 실행되는 것을 방지합니다 .</target>
        </trans-unit>
        <trans-unit id="9622209db093550fa69ea6704a798be81d9f6eff" translate="yes" xml:space="preserve">
          <source>React Overlays</source>
          <target state="translated">반응 오버레이</target>
        </trans-unit>
        <trans-unit id="dd1cf4a9f259c9becfdd3ea9bd8ab0ca8828368f" translate="yes" xml:space="preserve">
          <source>React Router Bootstrap</source>
          <target state="translated">React Router 부트 스트랩</target>
        </trans-unit>
        <trans-unit id="ebcad7b0276753174e694e258934f6e95cfbf3e6" translate="yes" xml:space="preserve">
          <source>React-Bootstrap</source>
          <target state="translated">React-Bootstrap</target>
        </trans-unit>
        <trans-unit id="703ac00d9629f6752353e98504716ebc1286eb3a" translate="yes" xml:space="preserve">
          <source>React-Bootstrap &lt;em&gt;only&lt;/em&gt; contains components that are present in vanilla Bootstrap. If functionality was removed from Bootstrap, then it was also removed from React-Bootstrap. This guide does not repeat information found in the upstream migration guide. Its goal is to document React-Bootstrap-specific API changes and additions.</source>
          <target state="translated">React-Bootstrap 에는 바닐라 Bootstrap에있는 구성 요소 &lt;em&gt;만&lt;/em&gt; 포함됩니다. Bootstrap에서 기능이 제거되면 React-Bootstrap에서도 제거되었습니다. 이 가이드는 업스트림 마이그레이션 가이드에있는 정보를 반복하지 않습니다. 목표는 React-Bootstrap 관련 API 변경 및 추가를 문서화하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="0455c78a5f589202e49d5f739a2e4d0b1e4f2994" translate="yes" xml:space="preserve">
          <source>React-Bootstrap has started a repo with a few basic CodeSandbox examples. &lt;a href=&quot;https://github.com/react-bootstrap/code-sandbox-examples/blob/master/README.md&quot;&gt;Click here&lt;/a&gt; to check them out.</source>
          <target state="translated">React-Bootstrap은 몇 가지 기본 CodeSandbox 예제로 저장소를 시작했습니다. 확인 &lt;a href=&quot;https://github.com/react-bootstrap/code-sandbox-examples/blob/master/README.md&quot;&gt;하려면 여기&lt;/a&gt; 를 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="d1ca518bffea8ca267418f053e9bd700e7e76baf" translate="yes" xml:space="preserve">
          <source>React-Bootstrap is a complete re-implementation of the Bootstrap components using React. It has &lt;strong&gt;no dependency on either &lt;code&gt;bootstrap.js&lt;/code&gt; or jQuery.&lt;/strong&gt; If you have React setup and React-Bootstrap installed, you have everything you need.</source>
          <target state="translated">React-Bootstrap은 React를 사용하여 Bootstrap 구성 요소를 완전히 다시 구현 한 것입니다. &lt;strong&gt; &lt;code&gt;bootstrap.js&lt;/code&gt; &lt;/strong&gt;&lt;strong&gt; 또는 jQuery &lt;/strong&gt;&lt;strong&gt;에 대한 종속성&lt;/strong&gt; 이 &lt;strong&gt;없습니다 &lt;/strong&gt;&lt;strong&gt;. &lt;/strong&gt;React 설정과 React-Bootstrap이 설치되어 있다면 필요한 모든 것이 있습니다.</target>
        </trans-unit>
        <trans-unit id="05513e22368ac80f4ee3edeb00ac45315b79bca5" translate="yes" xml:space="preserve">
          <source>React-Bootstrap is compatible with existing Bootstrap themes. Just follow the installation instructions for your theme of choice.</source>
          <target state="translated">React-Bootstrap은 기존 Bootstrap 테마와 호환됩니다. 선택한 테마에 대한 설치 지침을 따르십시오.</target>
        </trans-unit>
        <trans-unit id="3f4a587e168a743ff678b17f140ec428a194b525" translate="yes" xml:space="preserve">
          <source>React-Bootstrap replaces the Bootstrap JavaScript. Each component has been built from scratch as a true React component, without unneeded dependencies like jQuery.</source>
          <target state="translated">React-Bootstrap은 Bootstrap JavaScript를 대체합니다. 각 구성 요소는 jQuery와 같은 불필요한 종속성없이 처음부터 진정한 React 구성 요소로 빌드되었습니다.</target>
        </trans-unit>
        <trans-unit id="70aaf408678240fe8147379cac7afd7e2ebab4d6" translate="yes" xml:space="preserve">
          <source>React-bootstrap</source>
          <target state="translated">React-bootstrap</target>
        </trans-unit>
        <trans-unit id="d5c50a852787911049737224ad446065d2da947a" translate="yes" xml:space="preserve">
          <source>React.ReactElement</source>
          <target state="translated">React.ReactElement</target>
        </trans-unit>
        <trans-unit id="0fc2fa6704e749bb488d4af2460fa1889e6b9917" translate="yes" xml:space="preserve">
          <source>React.ReactElement&amp;lt;OverlayInjectedProps&amp;gt; | ((injected: OverlayInjectedProps) =&amp;gt; React.ReactNode)</source>
          <target state="translated">React.ReactElement &amp;lt;OverlayInjectedProps&amp;gt; | ((주입 : OverlayInjectedProps) =&amp;gt; React.ReactNode)</target>
        </trans-unit>
        <trans-unit id="fce48b504bf97001120d2a2a61908e46a63de996" translate="yes" xml:space="preserve">
          <source>React.Ref&amp;lt;CarouselRef&amp;gt;</source>
          <target state="translated">React.Ref&amp;lt;CarouselRef&amp;gt;</target>
        </trans-unit>
        <trans-unit id="091c2df1c2dcc9a781c0ce1b38816e76ec9321ba" translate="yes" xml:space="preserve">
          <source>ReactRef</source>
          <target state="translated">ReactRef</target>
        </trans-unit>
        <trans-unit id="1d920fff58ef0d0f937aa8908a1de256cc4799ab" translate="yes" xml:space="preserve">
          <source>Readonly</source>
          <target state="translated">Readonly</target>
        </trans-unit>
        <trans-unit id="c79fdce154df4549ddad9bfc3fa732192468ef4f" translate="yes" xml:space="preserve">
          <source>Readonly plain text</source>
          <target state="translated">읽기 전용 일반 텍스트</target>
        </trans-unit>
        <trans-unit id="006e2fe4f92972fd5293e98d703638ca811957b6" translate="yes" xml:space="preserve">
          <source>Rebuilt with React</source>
          <target state="translated">React로 재 구축</target>
        </trans-unit>
        <trans-unit id="8191921a546a8c6d9a70f872ed4e00b76e1823d7" translate="yes" xml:space="preserve">
          <source>Removed -- icons are not included in Bootstrap 4. Icon support can be provided via react-icons, fontawesome, or a similar external library.</source>
          <target state="translated">제거됨-아이콘은 Bootstrap 4에 포함되지 않습니다. 아이콘 지원은 react-icons, fontawesome 또는 유사한 외부 라이브러리를 통해 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aff6787fcf17742887660f21a91205f370a33f3b" translate="yes" xml:space="preserve">
          <source>Removed SplitButton.toggle (replaced with a &lt;code&gt;split&lt;/code&gt; prop on the basic Toggle)</source>
          <target state="translated">SplitButton.toggle이 제거되었습니다 ( 기본 Toggle 의 &lt;code&gt;split&lt;/code&gt; 소품으로 대체 됨 ).</target>
        </trans-unit>
        <trans-unit id="3c3f014551603f33c35fd4c3058e3ef6c0784acc" translate="yes" xml:space="preserve">
          <source>Removed bsRole, use function children to render custom Toggles or Menus</source>
          <target state="translated">bsRole 제거, 함수 자식을 사용하여 사용자 정의 토글 또는 메뉴 렌더링</target>
        </trans-unit>
        <trans-unit id="b5c55d415a9e62bc60b71ec70b3dd13f5fa7a3a2" translate="yes" xml:space="preserve">
          <source>Removed the &lt;code&gt;disabled&lt;/code&gt; prop on Dropdown, pass it directly to Dropdown.Toggle</source>
          <target state="translated">드롭 다운 에서 &lt;code&gt;disabled&lt;/code&gt; 소품을 제거하고 드롭 다운으로 직접 전달합니다.</target>
        </trans-unit>
        <trans-unit id="e91d5b8bb414f4e08ab12abc8ec8fb92d1b1fb65" translate="yes" xml:space="preserve">
          <source>Removes all borders on the table and cells, including table header.</source>
          <target state="translated">표 머리글을 포함하여 표와 셀의 모든 테두리를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="27d3322ef4af51fa18bf68d53b15812865373d5e" translate="yes" xml:space="preserve">
          <source>Removes the gutter spacing between &lt;code&gt;Col&lt;/code&gt;s as well as any added negative margins.</source>
          <target state="translated">&lt;code&gt;Col&lt;/code&gt; s 사이의 거터 간격 과 추가 된 음수 여백을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="0a8a5169015d5eea0a645f1fd95149b25eebcb3a" translate="yes" xml:space="preserve">
          <source>Render a large, extra large or small modal.</source>
          <target state="translated">대형, 초대형 또는 소형 모달을 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="8e8e775034cf07b3843b3372ef6addf87074fac8" translate="yes" xml:space="preserve">
          <source>Render a large, extra large or small modal. When not provided, the modal is rendered with medium (default) size.</source>
          <target state="translated">대형, 초대형 또는 소형 모달을 렌더링합니다. 제공되지 않은 경우 모달은 중간 (기본) 크기로 렌더링됩니다.</target>
        </trans-unit>
        <trans-unit id="9f37ff73309df9e480728b8ed264bc4ac04bc38a" translate="yes" xml:space="preserve">
          <source>Render the input as plain text. Generally used along side &lt;code&gt;readOnly&lt;/code&gt;.</source>
          <target state="translated">입력을 일반 텍스트로 렌더링합니다. 일반적으로 &lt;code&gt;readOnly&lt;/code&gt; 측면과 함께 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="e18eb2a0425d5a769cc1ef0065230b025d0e4f40" translate="yes" xml:space="preserve">
          <source>Renders &lt;em&gt;only&lt;/em&gt; the outer &quot;item&quot; element, use inconjunction with the new &lt;code&gt;NavLink&lt;/code&gt; component</source>
          <target state="translated">외부 &quot;항목&quot;요소 &lt;em&gt;만&lt;/em&gt; 렌더링 하고 새 &lt;code&gt;NavLink&lt;/code&gt; 구성 요소 와 함께 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a60ed6b32b46c07a7865f5c90e1d8410b0b5915e" translate="yes" xml:space="preserve">
          <source>Renders a &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; when an &lt;code&gt;href&lt;/code&gt; is provided</source>
          <target state="translated">&lt;code&gt;href&lt;/code&gt; 가 제공 되면 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 를 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="7f42379990c708a90c5ae834fc3cf3f2ec251328" translate="yes" xml:space="preserve">
          <source>Renders a properly aligned dismiss button, as well as adding extra horizontal padding to the Alert.</source>
          <target state="translated">올바르게 정렬 된 닫기 버튼을 렌더링하고 Alert에 수평 패딩을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="b8a991b241038386aff422ff0c8d4aef957b5aac" translate="yes" xml:space="preserve">
          <source>Renders the FormLabel as a &lt;code&gt;&amp;lt;Col&amp;gt;&lt;/code&gt; component (accepting all the same props), as well as adding additional styling for horizontal forms.</source>
          <target state="translated">FormLabel을 &lt;code&gt;&amp;lt;Col&amp;gt;&lt;/code&gt; 구성 요소 로 렌더링 (동일한 모든 소품 허용)하고 가로 양식에 대한 추가 스타일을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="3e23c24f6c013676965ec556160ac4c8cd0463d6" translate="yes" xml:space="preserve">
          <source>Responsive</source>
          <target state="translated">Responsive</target>
        </trans-unit>
        <trans-unit id="3a78174a251e7eef8d4d9c279bfbcf1b2c3b870f" translate="yes" xml:space="preserve">
          <source>Responsive alignment</source>
          <target state="translated">반응 형 정렬</target>
        </trans-unit>
        <trans-unit id="e81fd7c98297a837c77b80a61e29ee0d197e0d0b" translate="yes" xml:space="preserve">
          <source>Responsive behaviors</source>
          <target state="translated">반응 형 행동</target>
        </trans-unit>
        <trans-unit id="e3a2fffe6236dd2af3e7ef1431de60fd804f805a" translate="yes" xml:space="preserve">
          <source>Responsive embed</source>
          <target state="translated">반응 형 삽입</target>
        </trans-unit>
        <trans-unit id="e48b2183a3d27c2065d4ac19a7cfcfdbc31e522e" translate="yes" xml:space="preserve">
          <source>Responsive grids</source>
          <target state="translated">반응 형 그리드</target>
        </trans-unit>
        <trans-unit id="2749261a0e99c04011e654c65c0f4965f0e4c387" translate="yes" xml:space="preserve">
          <source>Responsive tables allow tables to be scrolled horizontally with ease.</source>
          <target state="translated">반응 형 테이블을 사용하면 테이블을 쉽게 가로로 스크롤 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cbf712e61a922b27041c39e1562d14c423320b85" translate="yes" xml:space="preserve">
          <source>Responsive tables allow tables to be scrolled horizontally with ease. Across every breakpoint, use &lt;code&gt;responsive&lt;/code&gt; for horizontally scrolling tables. Responsive tables are wrapped automatically in a &lt;code&gt;div&lt;/code&gt;. Use &lt;code&gt;responsive=&quot;sm&quot;&lt;/code&gt;, &lt;code&gt;responsive=&quot;md&quot;&lt;/code&gt;, &lt;code&gt;responsive=&quot;lg&quot;&lt;/code&gt;, or &lt;code&gt;responsive=&quot;xl&quot;&lt;/code&gt; as needed to create responsive tables up to a particular breakpoint. From that breakpoint and up, the table will behave normally and not scroll horizontally.</source>
          <target state="translated">반응 형 테이블을 사용하면 테이블을 쉽게 가로로 스크롤 할 수 있습니다. 모든 중단 점에서 가로로 스크롤되는 표에 &lt;code&gt;responsive&lt;/code&gt; 을 사용 합니다. 반응 형 테이블은 &lt;code&gt;div&lt;/code&gt; 에서 자동으로 래핑됩니다 . 사용하여 &lt;code&gt;responsive=&quot;sm&quot;&lt;/code&gt; , &lt;code&gt;responsive=&quot;md&quot;&lt;/code&gt; , &lt;code&gt;responsive=&quot;lg&quot;&lt;/code&gt; , 또는 &lt;code&gt;responsive=&quot;xl&quot;&lt;/code&gt; 특정 중단 점에 대응 테이블을 만들 필요합니다. 중단 점 이상에서 테이블은 정상적으로 작동하며 가로로 스크롤되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2e6d8adf5badbf6b58b98f1eb095ad8fa079d420" translate="yes" xml:space="preserve">
          <source>ResponsiveEmbed</source>
          <target state="translated">ResponsiveEmbed</target>
        </trans-unit>
        <trans-unit id="9bf7a8e8909bfd491b38561a42bb2559669d5c63" translate="yes" xml:space="preserve">
          <source>Row</source>
          <target state="translated">Row</target>
        </trans-unit>
        <trans-unit id="0c546278802966470d46359496c66d55f5385642" translate="yes" xml:space="preserve">
          <source>Run the expand animation when the component mounts, if it is initially shown</source>
          <target state="translated">처음에 표시되는 경우 구성 요소가 마운트 될 때 확장 애니메이션을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="d270fbbc401f40a92962044ec090daf7e3be5e20" translate="yes" xml:space="preserve">
          <source>Run the fade in animation when the component mounts, if it is initially shown</source>
          <target state="translated">구성 요소가 마운트 될 때 페이드 인 애니메이션을 실행합니다 (처음에 표시되는 경우).</target>
        </trans-unit>
        <trans-unit id="b6eeeb3abd2a7bc179a6b6d5c56488b5f8c903a7" translate="yes" xml:space="preserve">
          <source>Sass</source>
          <target state="translated">Sass</target>
        </trans-unit>
        <trans-unit id="df47d07f51f6ee01df010d60693075246cccb8a4" translate="yes" xml:space="preserve">
          <source>Screenreader only label</source>
          <target state="translated">스크린 리더 전용 라벨</target>
        </trans-unit>
        <trans-unit id="9bbf13751ed0b3562881084a4bec20804909aa33" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://getbootstrap.com/docs/4.4/getting-started/theming/&quot;&gt;the Bootstrap docs&lt;/a&gt; for more advanced use cases and details about customizing stylesheets.</source>
          <target state="translated">고급 사용 사례와 스타일 시트 사용자 지정에 대한 세부 정보 &lt;a href=&quot;https://getbootstrap.com/docs/4.4/getting-started/theming/&quot;&gt;는 Bootstrap 문서&lt;/a&gt; 를 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="8598222918d3c6e513d63060cf55e2971ded729a" translate="yes" xml:space="preserve">
          <source>Select</source>
          <target state="translated">Select</target>
        </trans-unit>
        <trans-unit id="abbd21d242082ad638ca66d2f056f84929d4c13a" translate="yes" xml:space="preserve">
          <source>SelectCallback</source>
          <target state="translated">SelectCallback</target>
        </trans-unit>
        <trans-unit id="7204f041a83e0bcf1427ef85f6eb389a9e1aecd4" translate="yes" xml:space="preserve">
          <source>Separate groups of related menu items with a divider.</source>
          <target state="translated">구분선으로 관련된 메뉴 항목 그룹을 분리합니다.</target>
        </trans-unit>
        <trans-unit id="b46c097eabd094623979bf08e15e695a4d9a846d" translate="yes" xml:space="preserve">
          <source>Set a custom element for this component</source>
          <target state="translated">이 구성 요소에 대한 사용자 지정 요소 설정</target>
        </trans-unit>
        <trans-unit id="6e188289d69428df8fd1ef04822b4822a72bbc95" translate="yes" xml:space="preserve">
          <source>Set a custom element for this component.</source>
          <target state="translated">이 구성 요소에 대한 사용자 지정 요소를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="60be6286c03531fd2ab51c7ac8afe5f7c3309d56" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;active&lt;/code&gt; prop to indicate the list groups current active selection.</source>
          <target state="translated">현재 활성 선택 목록 그룹을 나타내 도록 &lt;code&gt;active&lt;/code&gt; 소품을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="36cfb8bc246bca71a7c82612f813e0780e0d370a" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;defaultExpanded&lt;/code&gt; prop to make the Navbar start expanded. Set &lt;code&gt;collapseOnSelect&lt;/code&gt; to make the Navbar collapse automatically when the user selects an item. You can also finely control the collapsing behavior by using the &lt;code&gt;expanded&lt;/code&gt; and &lt;code&gt;onToggle&lt;/code&gt; props.</source>
          <target state="translated">Navbar 시작이 확장되도록 &lt;code&gt;defaultExpanded&lt;/code&gt; 소품을 설정합니다 . 사용자가 항목을 선택할 때 Navbar가 자동으로 축소되도록하려면 &lt;code&gt;collapseOnSelect&lt;/code&gt; 를 설정 합니다. &lt;code&gt;expanded&lt;/code&gt; 및 &lt;code&gt;onToggle&lt;/code&gt; 소품 을 사용하여 축소 동작을 미세하게 제어 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a5baa5efedb45edd71f118679604380c3c42ead5" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;disabled&lt;/code&gt; prop to prevent actions on a &lt;code&gt;&amp;lt;ListGroup.Item&amp;gt;&lt;/code&gt;. For elements that aren't naturally disable-able (like anchors) &lt;code&gt;onClick&lt;/code&gt; handlers are added that call &lt;code&gt;preventDefault&lt;/code&gt; to mimick disabled behavior.</source>
          <target state="translated">&lt;code&gt;&amp;lt;ListGroup.Item&amp;gt;&lt;/code&gt; 에 대한 작업을 방지 하려면 &lt;code&gt;disabled&lt;/code&gt; 소품을 설정합니다 . 앵커처럼 자연스럽게 비활성화 할 수없는 요소의 경우 비활성화 된 동작을 모방하기 위해 &lt;code&gt;preventDefault&lt;/code&gt; 를 호출하는 &lt;code&gt;onClick&lt;/code&gt; 핸들러가 추가 됩니다.</target>
        </trans-unit>
        <trans-unit id="5f069e93f343e32e002dd3193c476237dbe8751f" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;transition&lt;/code&gt; prop to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">설정 &lt;code&gt;transition&lt;/code&gt; 에 소품 &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2a1c46c4dbad3cd8e5bafdb0d645ba3f195bb0ef" translate="yes" xml:space="preserve">
          <source>Set the aspect ration of the embed</source>
          <target state="translated">임베드의 종횡비 설정</target>
        </trans-unit>
        <trans-unit id="781d49e179bbe36d5a0c132e77341ee431188966" translate="yes" xml:space="preserve">
          <source>Set the column value (for any breakpoint size) to &lt;code&gt;&quot;auto&quot;&lt;/code&gt; to size columns based on the natural width of their content.</source>
          <target state="translated">내용의 자연 너비를 기준으로 열 크기를 조정하려면 열 값 (모든 중단 점 크기)을 &lt;code&gt;&quot;auto&quot;&lt;/code&gt; 로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="2785e1a7065cf585fbb64da1edcf5abf002b63f6" translate="yes" xml:space="preserve">
          <source>Set the visibility of the Overlay</source>
          <target state="translated">오버레이의 가시성 설정</target>
        </trans-unit>
        <trans-unit id="4d64a2e9e2fed6ad28f761d0585a37467223003d" translate="yes" xml:space="preserve">
          <source>Set's the size of all PageItems.</source>
          <target state="translated">모든 PageItems의 크기를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0a25abd33f57dabbf8f20b2f7889f522146395a0" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;id&lt;/code&gt; on &lt;code&gt;&amp;lt;FormControl&amp;gt;&lt;/code&gt; and &lt;code&gt;htmlFor&lt;/code&gt; on &lt;code&gt;&amp;lt;FormGroup.Label&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">를 설정 &lt;code&gt;id&lt;/code&gt; 에 &lt;code&gt;&amp;lt;FormControl&amp;gt;&lt;/code&gt; 와 &lt;code&gt;htmlFor&lt;/code&gt; 에 &lt;code&gt;&amp;lt;FormGroup.Label&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d971df0949a9437acff908ff71788092789fa6e2" translate="yes" xml:space="preserve">
          <source>Sets a default animation strategy for all children &lt;code&gt;&amp;lt;TabPane&amp;gt;&lt;/code&gt;s. Defaults to &lt;code&gt;&amp;lt;Fade&amp;gt;&lt;/code&gt; animation, else use &lt;code&gt;false&lt;/code&gt; to disable or a react-transition-group &lt;code&gt;&amp;lt;Transition/&amp;gt;&lt;/code&gt; component.</source>
          <target state="translated">모든 하위 &lt;code&gt;&amp;lt;TabPane&amp;gt;&lt;/code&gt; 에 대한 기본 애니메이션 전략을 설정합니다 . 기본값은 &lt;code&gt;&amp;lt;Fade&amp;gt;&lt;/code&gt; 애니메이션이고, 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 사용하여 비활성화하거나 react-transition-group &lt;code&gt;&amp;lt;Transition/&amp;gt;&lt;/code&gt; 구성 요소를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ef48648456d867cbe7319944e3cf889dd2d6d33f" translate="yes" xml:space="preserve">
          <source>Sets a default animation strategy for all children &lt;code&gt;&amp;lt;TabPane&amp;gt;&lt;/code&gt;s. Defaults to &lt;code&gt;&amp;lt;Fade&amp;gt;&lt;/code&gt; animation; else, use &lt;code&gt;false&lt;/code&gt; to disable, or a custom react-transition-group &lt;code&gt;&amp;lt;Transition/&amp;gt;&lt;/code&gt; component.</source>
          <target state="translated">모든 하위 &lt;code&gt;&amp;lt;TabPane&amp;gt;&lt;/code&gt; 에 대한 기본 애니메이션 전략을 설정합니다 . 기본값은 &lt;code&gt;&amp;lt;Fade&amp;gt;&lt;/code&gt; 애니메이션입니다. 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 사용하여 비활성화하거나 사용자 정의 react-transition-group &lt;code&gt;&amp;lt;Transition/&amp;gt;&lt;/code&gt; 구성 요소를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a4c8398da4b1f086fb1771ef04b5277962897973" translate="yes" xml:space="preserve">
          <source>Sets card background</source>
          <target state="translated">카드 배경 설정</target>
        </trans-unit>
        <trans-unit id="fcc2439af298b2c38450112809fd696e3bf5eb04" translate="yes" xml:space="preserve">
          <source>Sets card border color</source>
          <target state="translated">카드 테두리 색상 설정</target>
        </trans-unit>
        <trans-unit id="f13a267ef3d342cd0ef4c4f17fe7318c799712a2" translate="yes" xml:space="preserve">
          <source>Sets card text color</source>
          <target state="translated">카드 텍스트 색상 설정</target>
        </trans-unit>
        <trans-unit id="a3e077c71135cb2f0d6d3d142c8e160cab7856fc" translate="yes" xml:space="preserve">
          <source>Sets contextual classes for list item</source>
          <target state="translated">목록 항목에 대한 컨텍스트 클래스 설정</target>
        </trans-unit>
        <trans-unit id="259ea4f364b79ada1b8347b5b1fa2fc12d0eea8a" translate="yes" xml:space="preserve">
          <source>Sets image as fluid image.</source>
          <target state="translated">이미지를 유동 이미지로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="ae33c75993ebd1a9b074920f2f1fe86958f00c77" translate="yes" xml:space="preserve">
          <source>Sets image shape as circle.</source>
          <target state="translated">이미지 모양을 원으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="d39f21194e15f28db4cbe7098baf81e7042bc28e" translate="yes" xml:space="preserve">
          <source>Sets image shape as rounded.</source>
          <target state="translated">이미지 모양을 둥글게 설정합니다.</target>
        </trans-unit>
        <trans-unit id="459fb6678df86ade946608d322196ac46a888508" translate="yes" xml:space="preserve">
          <source>Sets image shape as thumbnail.</source>
          <target state="translated">이미지 모양을 썸네일로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="95fb31dc9b1b7510fdddc4467fdbfa1938cbda1a" translate="yes" xml:space="preserve">
          <source>Sets list item as active</source>
          <target state="translated">목록 항목을 활성으로 설정</target>
        </trans-unit>
        <trans-unit id="d2ae91205e05a22a991f07d724fbef82a5125449" translate="yes" xml:space="preserve">
          <source>Sets list item state as disabled</source>
          <target state="translated">목록 항목 상태를 비활성화 됨으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="ac9e06b2e5557fb70577b0396990ae9940b112ae" translate="yes" xml:space="preserve">
          <source>Sets the background class of the progress bar.</source>
          <target state="translated">진행률 표시 줄의 배경 클래스를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="f9e5b20f8ec3111ab9186999176f5d4360d8e2d3" translate="yes" xml:space="preserve">
          <source>Sets the direction the Popover is positioned towards.</source>
          <target state="translated">Popover가 배치되는 방향을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="8093b5edd141b0cdfe44f1af983bfd0a3d03c101" translate="yes" xml:space="preserve">
          <source>Sets the direction the Tooltip is positioned towards.</source>
          <target state="translated">도구 설명이 배치되는 방향을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="f551db0f8ccff3ed91eeb87f03e1bf2be13ca89c" translate="yes" xml:space="preserve">
          <source>Sets the size for all Buttons in the group.</source>
          <target state="translated">그룹에있는 모든 버튼의 크기를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="5a2ebf834ee800c22bd0961249f7d6e7d9985af4" translate="yes" xml:space="preserve">
          <source>Sets the text for alert close button.</source>
          <target state="translated">경고 닫기 버튼의 텍스트를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="ec02bfe720092b550fe85c16c891e297d4aad9a4" translate="yes" xml:space="preserve">
          <source>Setting column widths in Row</source>
          <target state="translated">행에서 열 너비 설정</target>
        </trans-unit>
        <trans-unit id="392bb3993c4b107448bd8d925247a934ffb91ff4" translate="yes" xml:space="preserve">
          <source>Setting one column width</source>
          <target state="translated">한 열 너비 설정</target>
        </trans-unit>
        <trans-unit id="ea5c1a20b7cfcfec8a35fb4c6a419a1314233755" translate="yes" xml:space="preserve">
          <source>Shape</source>
          <target state="translated">Shape</target>
        </trans-unit>
        <trans-unit id="99507cd7c92c30e4d28f79e62afac23a1df71a36" translate="yes" xml:space="preserve">
          <source>Show a set of slide position indicators</source>
          <target state="translated">슬라이드 위치 표시기 세트 표시</target>
        </trans-unit>
        <trans-unit id="a36fdb1443750dcf4c38f6f54467373a01166951" translate="yes" xml:space="preserve">
          <source>Show label that represents visual percentage. EG. 60%</source>
          <target state="translated">시각적 백분율을 나타내는 레이블을 표시합니다. 예. 60 %</target>
        </trans-unit>
        <trans-unit id="3ae7204f2da3cf2b21bc31cd479a69e48a52dcc6" translate="yes" xml:space="preserve">
          <source>Show the Carousel previous and next arrows for changing the current slide</source>
          <target state="translated">현재 슬라이드를 변경하기 위해 회전식 이전 및 다음 화살표를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="93ddb2918229e9cf5d7d4d1b0f24403510584e93" translate="yes" xml:space="preserve">
          <source>Show the component; triggers the expand or collapse animation</source>
          <target state="translated">구성 요소를 표시합니다. 확장 또는 축소 애니메이션을 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="16f64ab3a22a57d99eb10ed4d34ba3de3b48e516" translate="yes" xml:space="preserve">
          <source>Show the component; triggers the fade in or fade out animation</source>
          <target state="translated">구성 요소를 표시합니다. 페이드 인 또는 페이드 아웃 애니메이션을 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="8765f21e2cebce40791fa3714a3a1fdf62319c62" translate="yes" xml:space="preserve">
          <source>Similar to headers and footers, cards can include top and bottom &amp;ldquo;image caps&amp;rdquo;&amp;mdash;images at the top or bottom of a card.</source>
          <target state="translated">머리글 및 바닥 글과 마찬가지로 카드에는 상단 및 하단 &quot;이미지 캡&quot;(카드 상단 또는 하단에 이미지)이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5258809099ff2b196bc13b581c5e9cc617a0afab" translate="yes" xml:space="preserve">
          <source>Similarly, You create a split dropdown by combining the Dropdown components with another Button and a ButtonGroup.</source>
          <target state="translated">마찬가지로 Dropdown 구성 요소를 다른 Button 및 ButtonGroup과 결합하여 분할 드롭 다운을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="038ef600a2a19a257815c31bae6b2f6f0f7d1dfd" translate="yes" xml:space="preserve">
          <source>Since React-Bootstrap is built with React Javascript, state can be passed within React-Bootstrap components as a prop. It also makes it easier to manage the state as updates are made using React&amp;rsquo;s state instead of directly manipulating the state of the DOM. This also gives a lot of flexibility when creating more complex components.</source>
          <target state="translated">React-Bootstrap은 React Javascript로 빌드되었으므로 React-Bootstrap 구성 요소 내에서 prop으로 상태를 전달할 수 있습니다. 또한 DOM의 상태를 직접 조작하는 대신 React의 상태를 사용하여 업데이트하므로 상태를 관리하기가 더 쉽습니다. 이것은 또한 더 복잡한 구성 요소를 만들 때 많은 유연성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="81eec781ea9e315fd7ab4eb1f36b07ef599abc1f" translate="yes" xml:space="preserve">
          <source>Since the above is such a common configuration react-bootstrap provides the &lt;code&gt;&amp;lt;DropdownButton&amp;gt;&lt;/code&gt; component to help reduce typing. Provide a &lt;code&gt;title&lt;/code&gt; prop and some &lt;code&gt;&amp;lt;DropdownItem&amp;gt;&lt;/code&gt;s and you're ready to go.</source>
          <target state="translated">위와 같은 일반적인 구성이므로 react-bootstrap은 입력을 줄이는 데 도움이 되는 &lt;code&gt;&amp;lt;DropdownButton&amp;gt;&lt;/code&gt; 구성 요소를 제공합니다 . &lt;code&gt;title&lt;/code&gt; 소품과 일부 &lt;code&gt;&amp;lt;DropdownItem&amp;gt;&lt;/code&gt; 을 제공하면 준비가 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="641107d1d8496e27a5c8eb8ca13b94e0c1452180" translate="yes" xml:space="preserve">
          <source>Since the above pattern is pretty common, but verbose, we've included &lt;code&gt;&amp;lt;OverlayTrigger&amp;gt;&lt;/code&gt; component to help with common use-cases. It even has functionality to delayed show or hides, and a few different &quot;trigger&quot; events you can mix and match.</source>
          <target state="translated">위의 패턴은 매우 일반적이지만 장황하기 때문에 일반적인 사용 사례를 지원하기 위해 &lt;code&gt;&amp;lt;OverlayTrigger&amp;gt;&lt;/code&gt; 구성 요소를 포함했습니다 . 지연된 표시 또는 숨기기 기능과 혼합 및 일치시킬 수있는 몇 가지 다른 &quot;트리거&quot;이벤트도 있습니다.</target>
        </trans-unit>
        <trans-unit id="93ab90de509cb3310cb366ad78645dbaa20f2122" translate="yes" xml:space="preserve">
          <source>Since these positioning needs are so common for Navbars, we've added convenience props for them</source>
          <target state="translated">이러한 포지셔닝 요구 사항은 Navbar에서 매우 일반적이므로이를위한 편의 소품을 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="975e4abc5b3a5d1627d3e42f46f69f64d5e67558" translate="yes" xml:space="preserve">
          <source>Since we can't know every time your overlay changes size, to reposition it, you need to take manual action if you want to update the position of an Overlay in response to a change.</source>
          <target state="translated">오버레이 크기가 변경 될 때마다 알 수 없기 때문에 위치를 변경하려면 변경에 대응하여 오버레이의 위치를 ​​업데이트하려면 수동 조치를 취해야합니다.</target>
        </trans-unit>
        <trans-unit id="770010eac81b6c40f58af580671d7c855871c5fd" translate="yes" xml:space="preserve">
          <source>Single button dropdowns</source>
          <target state="translated">단일 버튼 드롭 다운</target>
        </trans-unit>
        <trans-unit id="96de489fe3c2b4dd68982096808dc9222145c984" translate="yes" xml:space="preserve">
          <source>Sizes</source>
          <target state="translated">Sizes</target>
        </trans-unit>
        <trans-unit id="de7805a2f8658223efcb68debf683046f01bc471" translate="yes" xml:space="preserve">
          <source>Sizing</source>
          <target state="translated">Sizing</target>
        </trans-unit>
        <trans-unit id="06123034d3ef99eb7cabd5253c240d99f23dda94" translate="yes" xml:space="preserve">
          <source>Sizing modals using custom CSS</source>
          <target state="translated">사용자 정의 CSS를 사용하여 모달 크기 조정</target>
        </trans-unit>
        <trans-unit id="41086c417e80b77a31e471540f49da95e1825903" translate="yes" xml:space="preserve">
          <source>Small Table</source>
          <target state="translated">작은 테이블</target>
        </trans-unit>
        <trans-unit id="e8dc5c72ffb0f61f162cb5232ddbd2473ebae6b2" translate="yes" xml:space="preserve">
          <source>Spans the full width of the Button parent</source>
          <target state="translated">Button 부모의 전체 너비에 걸쳐 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ba637f89e86b4d0b81bb09a55653d67b770391b" translate="yes" xml:space="preserve">
          <source>Specifies a large or small button.</source>
          <target state="translated">크거나 작은 버튼을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="88f872e15d83f2ef846b139adcb3e6fc3ff7112b" translate="yes" xml:space="preserve">
          <source>Specify event for triggering a &quot;root close&quot; toggle.</source>
          <target state="translated">&quot;루트 닫기&quot;토글을 트리거하는 이벤트를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="017d89bec74125b86786b763dbc087b05b14126a" translate="yes" xml:space="preserve">
          <source>Specify whether the Component should be vertically centered</source>
          <target state="translated">구성 요소가 수직 중앙에 위치해야하는지 여부를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="ee8bdfd999fbaef753e4ef33ac625b4eda2c49f3" translate="yes" xml:space="preserve">
          <source>Specify whether the Component should contain a close button</source>
          <target state="translated">구성 요소에 닫기 버튼이 포함되어야하는지 여부 지정</target>
        </trans-unit>
        <trans-unit id="76271c2213c298cb6aa009e2273438417a1d6a92" translate="yes" xml:space="preserve">
          <source>Specify whether the feedback is for valid or invalid fields</source>
          <target state="translated">피드백이 유효하거나 유효하지 않은 필드에 대한 것인지 지정</target>
        </trans-unit>
        <trans-unit id="d7af6d7b3df2a25a931a9fbdc133539dae7241d2" translate="yes" xml:space="preserve">
          <source>Specify whether the overlay should trigger onHide when the user clicks outside the overlay</source>
          <target state="translated">사용자가 오버레이 외부를 클릭 할 때 오버레이가 onHide를 트리거할지 여부를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="f30d41e0aeedc72791a7dd8a631f3b7606e9e4d1" translate="yes" xml:space="preserve">
          <source>Specify which action or actions trigger Overlay visibility</source>
          <target state="translated">오버레이 가시성을 트리거하는 작업을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="04b125de01eb0a9ee1aba2c694c7e2c185b09439" translate="yes" xml:space="preserve">
          <source>Spinner</source>
          <target state="translated">Spinner</target>
        </trans-unit>
        <trans-unit id="d5dcf1737c68931a6870f6a89b3d072ee33011c3" translate="yes" xml:space="preserve">
          <source>Spinners</source>
          <target state="translated">Spinners</target>
        </trans-unit>
        <trans-unit id="0709610c94e0d2807f5beb2c99b0c9ee31862845" translate="yes" xml:space="preserve">
          <source>Spinners can be used to show the loading state in your projects.</source>
          <target state="translated">스피너를 사용하여 프로젝트의 로딩 상태를 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="241a98a2bcf3aa73dea410e5ed4d23039673475a" translate="yes" xml:space="preserve">
          <source>Split button dropdowns</source>
          <target state="translated">분할 버튼 드롭 다운</target>
        </trans-unit>
        <trans-unit id="e616fdafd34a7f892b75df04697586543670d63d" translate="yes" xml:space="preserve">
          <source>SplitButton</source>
          <target state="translated">SplitButton</target>
        </trans-unit>
        <trans-unit id="47dd9a3d44ce99e3bbd366c9c91a60fc96281e66" translate="yes" xml:space="preserve">
          <source>Stack Overflow</source>
          <target state="translated">스택 오버플로</target>
        </trans-unit>
        <trans-unit id="9eafca4643813baaae2f7a9fede6aaccb01f75bd" translate="yes" xml:space="preserve">
          <source>Stacked</source>
          <target state="translated">Stacked</target>
        </trans-unit>
        <trans-unit id="99cb5994ccb867fa468c0d402efe96dc39410655" translate="yes" xml:space="preserve">
          <source>Stacking</source>
          <target state="translated">Stacking</target>
        </trans-unit>
        <trans-unit id="483bb3b6bec0a6ea7ef9d6caeae40fede2c85d7d" translate="yes" xml:space="preserve">
          <source>Static Markup</source>
          <target state="translated">정적 마크 업</target>
        </trans-unit>
        <trans-unit id="6885bf78a2248e389a821a47eae748179ab14e5f" translate="yes" xml:space="preserve">
          <source>Static backdrop</source>
          <target state="translated">정적 배경</target>
        </trans-unit>
        <trans-unit id="50bad8d21535487b06da5ecfa96ea445ec3de59e" translate="yes" xml:space="preserve">
          <source>Stay up to date on the development of React-Bootstrap and reach out to the community with these helpful resources.</source>
          <target state="translated">React-Bootstrap 개발에 대한 최신 정보를 얻고 유용한 리소스를 통해 커뮤니티에 연락하십시오.</target>
        </trans-unit>
        <trans-unit id="e24173e895827500be9505d0b782046938141f76" translate="yes" xml:space="preserve">
          <source>Sticky top</source>
          <target state="translated">끈적한 상단</target>
        </trans-unit>
        <trans-unit id="5bf1f66993717f93834aeb1ff2fdb4c9a5eb376f" translate="yes" xml:space="preserve">
          <source>Striped</source>
          <target state="translated">Striped</target>
        </trans-unit>
        <trans-unit id="98af488b56ed7ec9328574ffb669f4be19f63f77" translate="yes" xml:space="preserve">
          <source>Style the toggle NavLink as active</source>
          <target state="translated">토글 NavLink를 활성으로 스타일 지정</target>
        </trans-unit>
        <trans-unit id="4fa5b69fa8ee6eeab4bec26224e522e156020e03" translate="yes" xml:space="preserve">
          <source>Styles PageItem as active, and renders a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; instead of an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">PageItem을 활성으로 스타일링 하고 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 대신 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 을 렌더링합니다 .</target>
        </trans-unit>
        <trans-unit id="688931069f0df1b7dcf0babe5808ec7762322394" translate="yes" xml:space="preserve">
          <source>Stylesheets</source>
          <target state="translated">Stylesheets</target>
        </trans-unit>
        <trans-unit id="56bf16009725bc08613b3df4b97c68d8b3ed2ea5" translate="yes" xml:space="preserve">
          <source>Summary of breaking changes from v0.32.0</source>
          <target state="translated">v0.32.0의 주요 변경 사항 요약</target>
        </trans-unit>
        <trans-unit id="521fb7097b70476a3e1f5e4b812e25f28991cb8f" translate="yes" xml:space="preserve">
          <source>Switches</source>
          <target state="translated">Switches</target>
        </trans-unit>
        <trans-unit id="fe06eb6459c87f0e497ce1805f076f104bfecf78" translate="yes" xml:space="preserve">
          <source>Tab</source>
          <target state="translated">Tab</target>
        </trans-unit>
        <trans-unit id="c81bd3953f67de060bd109fdb555ea507b72558f" translate="yes" xml:space="preserve">
          <source>TabContainer</source>
          <target state="translated">TabContainer</target>
        </trans-unit>
        <trans-unit id="2cc3075e50fcab86967cd228dfbbfb557ba154c9" translate="yes" xml:space="preserve">
          <source>TabContent</source>
          <target state="translated">TabContent</target>
        </trans-unit>
        <trans-unit id="02730315f870e1d4f1a7d3d4e3f74b34610fe122" translate="yes" xml:space="preserve">
          <source>TabPane</source>
          <target state="translated">TabPane</target>
        </trans-unit>
        <trans-unit id="7eef9e24c055f338fc00eca7bcebac231aa0fb42" translate="yes" xml:space="preserve">
          <source>Tabbed Interfaces</source>
          <target state="translated">탭 인터페이스</target>
        </trans-unit>
        <trans-unit id="6e1cfeedae6103612911b981faf72928f6b82886" translate="yes" xml:space="preserve">
          <source>Tabbed components</source>
          <target state="translated">탭 구성 요소</target>
        </trans-unit>
        <trans-unit id="0424f6e7026fa4bc2c4a7043083417315113c79b" translate="yes" xml:space="preserve">
          <source>Table</source>
          <target state="translated">Table</target>
        </trans-unit>
        <trans-unit id="193daf137ed8b89de36d47c3df5fd8f66c0e1d14" translate="yes" xml:space="preserve">
          <source>Tables</source>
          <target state="translated">Tables</target>
        </trans-unit>
        <trans-unit id="2a4d562b1d9a9c90bdede6fac8ce4f7402462b86" translate="yes" xml:space="preserve">
          <source>Tabs</source>
          <target state="translated">Tabs</target>
        </trans-unit>
        <trans-unit id="218887269ad5946d9dc53238651c90472884fb0f" translate="yes" xml:space="preserve">
          <source>Team</source>
          <target state="translated">Team</target>
        </trans-unit>
        <trans-unit id="305693072e366f8cfd9dec08de9f521bb29f3e1c" translate="yes" xml:space="preserve">
          <source>Text and Non-nav links</source>
          <target state="translated">텍스트 및 비 탐색 링크</target>
        </trans-unit>
        <trans-unit id="9a647b38147cc15630782e90c3591dca4230ae5e" translate="yes" xml:space="preserve">
          <source>That said, it Dropdowns do work technically (sans focus management), but we don't make any claims about support.</source>
          <target state="translated">즉, 드롭 다운은 기술적으로 작동하지만 (집중 관리가 필요하지 않음) 지원에 대해 어떠한 주장도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4a80dd26d765cb9ba65bfc2c6d1edb673af5e986" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/TR/wai-aria/&quot;&gt;&lt;abbr&gt;WAI&lt;/abbr&gt; &lt;abbr&gt;ARIA&lt;/abbr&gt;&lt;/a&gt; standard defines a &lt;a href=&quot;https://www.w3.org/TR/wai-aria-1.1/#menu&quot;&gt;&lt;code&gt;role=&quot;menu&quot;&lt;/code&gt; widget&lt;/a&gt;, but it's very specific to a certain kind of menu.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/wai-aria/&quot;&gt;&lt;abbr&gt;WAI &lt;/abbr&gt; &lt;abbr&gt;ARIA&lt;/abbr&gt;&lt;/a&gt; 표준을 정의하는 &lt;a href=&quot;https://www.w3.org/TR/wai-aria-1.1/#menu&quot;&gt; &lt;code&gt;role=&quot;menu&quot;&lt;/code&gt; 위젯&lt;/a&gt; ,하지만 메뉴의 특정 종류의 매우 구체적인이다.</target>
        </trans-unit>
        <trans-unit id="3107fc85e5b95c867fcaabfb823a182bf6b083b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;FormControl&amp;gt;&lt;/code&gt; component directly renders the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; or other specified component. If you need to access the value of an uncontrolled &lt;code&gt;&amp;lt;FormControl&amp;gt;&lt;/code&gt;, attach a &lt;code&gt;ref&lt;/code&gt; to it as you would with an uncontrolled input, then call &lt;code&gt;ReactDOM.findDOMNode(ref)&lt;/code&gt; to get the DOM node. You can then interact with that node as you would with any other uncontrolled input.</source>
          <target state="translated">&lt;code&gt;&amp;lt;FormControl&amp;gt;&lt;/code&gt; 요소는 직접 렌더링 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 또는 다른 지정된 컴퍼넌트. 제어되지 않은 &lt;code&gt;&amp;lt;FormControl&amp;gt;&lt;/code&gt; 의 값에 액세스해야하는 경우 제어되지 않은 입력으로 &lt;code&gt;ref&lt;/code&gt; 를 첨부 한 다음 &lt;code&gt;ReactDOM.findDOMNode(ref)&lt;/code&gt; 를 호출 하여 DOM 노드를 가져옵니다. 그런 다음 제어되지 않은 다른 입력과 마찬가지로 해당 노드와 상호 작용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e22438c16235a22090d34f7744d3dbe2f07f103a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;FormControl&amp;gt;&lt;/code&gt; component renders a form control with Bootstrap styling. The &lt;code&gt;&amp;lt;FormGroup&amp;gt;&lt;/code&gt; component wraps a form control with proper spacing, along with support for a label, help text, and validation state. To ensure accessibility, set &lt;code&gt;controlId&lt;/code&gt; on &lt;code&gt;&amp;lt;FormGroup&amp;gt;&lt;/code&gt;, and use &lt;code&gt;&amp;lt;FormLabel&amp;gt;&lt;/code&gt; for the label.</source>
          <target state="translated">&lt;code&gt;&amp;lt;FormControl&amp;gt;&lt;/code&gt; 요소는 부트 스트랩 스타일링 폼 제어를 렌더링한다. 는 &lt;code&gt;&amp;lt;FormGroup&amp;gt;&lt;/code&gt; 구성 요소는 레이블에 대한 지원, 도움말 텍스트 및 검증의 상태에 따라 적절한 간격 폼 컨트롤을 래핑합니다. 접근성을 보장하기 위해 설정 &lt;code&gt;controlId&lt;/code&gt; 에 &lt;code&gt;&amp;lt;FormGroup&amp;gt;&lt;/code&gt; , 사용 &lt;code&gt;&amp;lt;FormLabel&amp;gt;&lt;/code&gt; 레이블을 위해.</target>
        </trans-unit>
        <trans-unit id="8e22c0f99626a054cf706e9b186b91d66e90d5d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;Tooltip&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;Popover&amp;gt;&lt;/code&gt; components do not position themselves. Instead the &lt;code&gt;&amp;lt;Overlay&amp;gt;&lt;/code&gt; (or &lt;code&gt;&amp;lt;OverlayTrigger&amp;gt;&lt;/code&gt;) components, inject &lt;code&gt;ref&lt;/code&gt; and &lt;code&gt;style&lt;/code&gt; props.</source>
          <target state="translated">&lt;code&gt;&amp;lt;Tooltip&amp;gt;&lt;/code&gt; 와 &lt;code&gt;&amp;lt;Popover&amp;gt;&lt;/code&gt; 구성 요소가 자신의 위치를하지 않습니다. 대신 &lt;code&gt;&amp;lt;Overlay&amp;gt;&lt;/code&gt; (또는 &lt;code&gt;&amp;lt;OverlayTrigger&amp;gt;&lt;/code&gt; ) 구성 요소, &lt;code&gt;ref&lt;/code&gt; 및 &lt;code&gt;style&lt;/code&gt; 소품을 삽입하십시오 .</target>
        </trans-unit>
        <trans-unit id="8207226dc57fb87ea2e125a6b6667feaf3af656d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element &lt;code&gt;type&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 요소 &lt;code&gt;type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f4da939cf4b0aa5299177f43a30b2fedfb417453" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Col&lt;/code&gt; breakpoint props also have a more complicated &lt;code&gt;object&lt;/code&gt; prop form: &lt;code&gt;{span: number, order: number, offset: number}&lt;/code&gt; for specifying offsets and ordering effects.</source>
          <target state="translated">&lt;code&gt;Col&lt;/code&gt; 브레이크 포인트 소품은 더 복잡한이 &lt;code&gt;object&lt;/code&gt; : 소품 양식 &lt;code&gt;{span: number, order: number, offset: number}&lt;/code&gt; 오프셋을 지정하고 효과를 주문할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dee0b11d2734de7a801fa3c38904c710b27368a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Col&lt;/code&gt; lets you specify column widths across 5 breakpoint sizes (xs, sm, md, lg, and xl). For every breakpoint, you can specify the amount of columns to span, or set the prop to &lt;code&gt;&amp;lt;Col lg={true} /&amp;gt;&lt;/code&gt; for auto layout widths.</source>
          <target state="translated">&lt;code&gt;Col&lt;/code&gt; 당신이 5 중단 점 크기 (XS, SM, MD, LG 전자, 그리고 XL)에서 열 폭을 지정할 수 있습니다. 모든 중단 점에 대해 확장 할 열의 양을 지정하거나 자동 레이아웃 너비에 대해 prop을 &lt;code&gt;&amp;lt;Col lg={true} /&amp;gt;&lt;/code&gt; 로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dddf532b56ba4c951b94f4f7e8e26845bf6d1617" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FormGroup&lt;/code&gt; component is the easiest way to add some structure to forms. It provides a flexible container for grouping of labels, controls, optional help text, and form validation messaging. By default it only applies margin-bottom, but it picks up additional styles in &lt;code&gt;&amp;lt;Form inline &amp;gt;&lt;/code&gt; as needed. Use it with &lt;code&gt;fieldset&lt;/code&gt;s, &lt;code&gt;div&lt;/code&gt;s, or nearly any other element.</source>
          <target state="translated">&lt;code&gt;FormGroup&lt;/code&gt; 의 구성 요소는 형태로 몇 가지 구조를 추가 할 수있는 가장 쉬운 방법입니다. 레이블, 컨트롤, 선택적 도움말 텍스트 및 양식 유효성 검사 메시징을 그룹화하기위한 유연한 컨테이너를 제공합니다. 기본적으로 margin-bottom 만 적용하지만 필요에 따라 &lt;code&gt;&amp;lt;Form inline &amp;gt;&lt;/code&gt; 에서 추가 스타일을 선택 합니다. &lt;code&gt;fieldset&lt;/code&gt; , &lt;code&gt;div&lt;/code&gt; 또는 거의 모든 다른 요소 와 함께 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="0cb92780f3e55c2aca87f88fec88b34e16c63356" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Row&lt;/code&gt; lets you specify column widths across 5 breakpoint sizes (xs, sm, md, lg, and xl). For every breakpoint, you can specify the amount of columns that will fit next to each other.</source>
          <target state="translated">&lt;code&gt;Row&lt;/code&gt; 은 5 중단 점 크기 (XS, SM, MD, LG 전자, 그리고 XL)에서 열 폭을 지정할 수 있습니다. 모든 중단 점에 대해 서로 나란히 들어갈 열의 양을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="49cfb42776228348112ec4342879dac882f35e70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;eventKey&lt;/code&gt; of the currently active tab.</source>
          <target state="translated">현재 활성 탭 의 &lt;code&gt;eventKey&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3688503db199dfb8a46cd041f7f1c206edfa2f03" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;order&lt;/code&gt; property also supports &lt;code&gt;first&lt;/code&gt; (&lt;code&gt;order: -1&lt;/code&gt;) and &lt;code&gt;last&lt;/code&gt; (&lt;code&gt;order: $columns+1&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;order&lt;/code&gt; 속성은 지원 &lt;code&gt;first&lt;/code&gt; ( &lt;code&gt;order: -1&lt;/code&gt; 등) &lt;code&gt;last&lt;/code&gt; ( &lt;code&gt;order: $columns+1&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="eb862a65ed00a69a5e327ba67a2a7490b228a909" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; argument will either be &lt;code&gt;&quot;tab&quot;&lt;/code&gt; or &lt;code&gt;&quot;pane&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 인수가 될 것 &lt;code&gt;&quot;tab&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;pane&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f0ba50b983957eaf316f598ca783e7b0fc01b67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; attribute of underlying input</source>
          <target state="translated">기본 입력 의 &lt;code&gt;value&lt;/code&gt; 속성</target>
        </trans-unit>
        <trans-unit id="e8890708bb91f550742ffbafb90c7215f9d091b7" translate="yes" xml:space="preserve">
          <source>The ARIA role describing the button toolbar. Generally the default &quot;toolbar&quot; role is correct. An &lt;code&gt;aria-label&lt;/code&gt; or &lt;code&gt;aria-labelledby&lt;/code&gt; prop is also recommended.</source>
          <target state="translated">단추 도구 모음을 설명하는 ARIA 역할입니다. 일반적으로 기본 &quot;도구 모음&quot;역할이 올 바릅니다. &lt;code&gt;aria-label&lt;/code&gt; 또는 &lt;code&gt;aria-labelledby&lt;/code&gt; 소품도 좋습니다.</target>
        </trans-unit>
        <trans-unit id="856fc51591ee841cff2f6f4fc2c6aafc7c4603e6" translate="yes" xml:space="preserve">
          <source>The ARIA role for the &lt;code&gt;NavLink&lt;/code&gt;, In the context of a 'tablist' parent Nav, the role defaults to 'tab'</source>
          <target state="translated">&lt;code&gt;NavLink&lt;/code&gt; 에 대한 ARIA 역할 , 'tablist'상위 Nav 컨텍스트에서 역할은 기본적으로 'tab'으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="b998c1c9ec1959175d08cc70ad385dcaaf2e44a6" translate="yes" xml:space="preserve">
          <source>The ARIA role for the navbar, will default to 'navigation' for Navbars whose &lt;code&gt;as&lt;/code&gt; is something other than &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">네비게이션 바의 ARIA 역할, Navbars에 대한 '탐색'을 기본값 &lt;code&gt;as&lt;/code&gt; 가 아닌 다른 뭔가 &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1521e693d34efdbc9fdd00bc8c885939d71b63e1" translate="yes" xml:space="preserve">
          <source>The ARIA role of the component</source>
          <target state="translated">구성 요소의 ARIA 역할</target>
        </trans-unit>
        <trans-unit id="ed044160b222404a73ec311faab9a12bdc424ca3" translate="yes" xml:space="preserve">
          <source>The Alert visual variant</source>
          <target state="translated">경고 시각적 변형</target>
        </trans-unit>
        <trans-unit id="5de49d1502b1a711b1f45c50d78cd0d42ef473ff" translate="yes" xml:space="preserve">
          <source>The CSS and details of Bootstrap components are rather opinionated and lengthy. React-Bootstrap simplifies this by condensing the original Bootstrap into React-styled components.</source>
          <target state="translated">CSS와 Bootstrap 구성 요소의 세부 사항은 다소 의견이 많고 길다. React-Bootstrap은 원래 Bootstrap을 React 스타일의 구성 요소로 압축하여이를 단순화합니다.</target>
        </trans-unit>
        <trans-unit id="810ec2ddbfc7936e4cf1d2a73637468daa8e8213" translate="yes" xml:space="preserve">
          <source>The Default behavior is &lt;code&gt;false&lt;/code&gt;&lt;strong&gt;unless&lt;/strong&gt; the Menu has a &lt;code&gt;role=&quot;menu&quot;&lt;/code&gt; where it will default to &lt;code&gt;keyboard&lt;/code&gt; to match the recommended &lt;a href=&quot;https://www.w3.org/TR/wai-aria-practices-1.1/#menubutton&quot;&gt;ARIA Authoring practices&lt;/a&gt;.</source>
          <target state="translated">기본 동작은 권장되는 &lt;a href=&quot;https://www.w3.org/TR/wai-aria-practices-1.1/#menubutton&quot;&gt;ARIA 작성 방법&lt;/a&gt; 과 일치하도록 기본적으로 &lt;code&gt;keyboard&lt;/code&gt; 로 설정되는 &lt;code&gt;role=&quot;menu&quot;&lt;/code&gt; 가 메뉴에 &lt;strong&gt;없으면 &lt;/strong&gt; &lt;code&gt;false&lt;/code&gt; 입니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d3d2e1d3f1699e355bd34248099054b2f74a392f" translate="yes" xml:space="preserve">
          <source>The Form &lt;code&gt;ref&lt;/code&gt; will be forwarded to the underlying element, which means, unless it's rendered &lt;code&gt;as&lt;/code&gt; a composite component, it will be a DOM node, when resolved.</source>
          <target state="translated">Form &lt;code&gt;ref&lt;/code&gt; 는 기본 요소로 전달됩니다. 즉, 복합 구성 요소 &lt;code&gt;as&lt;/code&gt; 렌더링되지 않는 한 해결 될 때 DOM 노드가됩니다.</target>
        </trans-unit>
        <trans-unit id="bad3fedf6866150a636327a3e452067792d10426" translate="yes" xml:space="preserve">
          <source>The FormCheck &lt;code&gt;ref&lt;/code&gt; will be forwarded to the underlying input element, which means it will be a DOM node, when resolved.</source>
          <target state="translated">FormCheck &lt;code&gt;ref&lt;/code&gt; 는 기본 입력 요소로 전달됩니다. 즉, 해결되면 DOM 노드가됩니다.</target>
        </trans-unit>
        <trans-unit id="fdd171c2caf5adb982a2b8233452548ec9bd5eb6" translate="yes" xml:space="preserve">
          <source>The FormControl &lt;code&gt;ref&lt;/code&gt; will be forwarded to the underlying input element, which means unless &lt;code&gt;as&lt;/code&gt; is a composite component, it will be a DOM node, when resolved.</source>
          <target state="translated">FormControl의 &lt;code&gt;ref&lt;/code&gt; 수단 않는 기본이되는 입력 요소로 전달한다 &lt;code&gt;as&lt;/code&gt; 해결 될 때 복합 컴포넌트이며, 그것은 DOM 노드 일 것이다.</target>
        </trans-unit>
        <trans-unit id="c2b794f87db30a8729698c6801fdf6331f3d4322" translate="yes" xml:space="preserve">
          <source>The FormGroup &lt;code&gt;ref&lt;/code&gt; will be forwarded to the underlying element. Unless the FormGroup is rendered &lt;code&gt;as&lt;/code&gt; a composite component, it will be a DOM node, when resolved.</source>
          <target state="translated">FormGroup &lt;code&gt;ref&lt;/code&gt; 는 기본 요소로 전달됩니다. FormGroup이 복합 구성 요소 &lt;code&gt;as&lt;/code&gt; 렌더링되지 않는 한 해결 될 때 DOM 노드가됩니다.</target>
        </trans-unit>
        <trans-unit id="e0ff4b03f6af7722acea0d6b0471fbba47939834" translate="yes" xml:space="preserve">
          <source>The FormLabel &lt;code&gt;ref&lt;/code&gt; will be forwarded to the underlying element. Unless the FormLabel is rendered &lt;code&gt;as&lt;/code&gt; a composite component, it will be a DOM node, when resolved.</source>
          <target state="translated">FormLabel &lt;code&gt;ref&lt;/code&gt; 는 기본 요소로 전달됩니다. FormLabel이 복합 구성 요소 &lt;code&gt;as&lt;/code&gt; 렌더링되지 않는 한 해결 될 때 DOM 노드가됩니다.</target>
        </trans-unit>
        <trans-unit id="139b6402ea150b383814cf63252aa14faf90e25f" translate="yes" xml:space="preserve">
          <source>The FormText &lt;code&gt;ref&lt;/code&gt; will be forwarded to the underlying element. Unless the FormText is rendered &lt;code&gt;as&lt;/code&gt; a composite component, it will be a DOM node, when resolved.</source>
          <target state="translated">FormText &lt;code&gt;ref&lt;/code&gt; 는 기본 요소로 전달됩니다. FormText가 복합 구성 요소 &lt;code&gt;as&lt;/code&gt; 렌더링되지 않는 한 해결 될 때 DOM 노드가됩니다.</target>
        </trans-unit>
        <trans-unit id="9f75c95fd60796a24428e1f37610db913f0a9136" translate="yes" xml:space="preserve">
          <source>The HTML for attribute for associating the label with an input</source>
          <target state="translated">레이블을 입력과 연관시키기위한 속성의 HTML</target>
        </trans-unit>
        <trans-unit id="5cc4738290a7297e10b49353c925b74714da9acf" translate="yes" xml:space="preserve">
          <source>The HTML href attribute for the &lt;code&gt;NavLink&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NavLink&lt;/code&gt; 의 HTML href 속성</target>
        </trans-unit>
        <trans-unit id="45cd00f440bf5939f7ac05c200779a5eb382ad58" translate="yes" xml:space="preserve">
          <source>The HTML input &lt;code&gt;type&lt;/code&gt;, which is only relevant if &lt;code&gt;as&lt;/code&gt; is &lt;code&gt;'input'&lt;/code&gt; (the default).</source>
          <target state="translated">html로 입력 &lt;code&gt;type&lt;/code&gt; 경우에만 관련이 있습니다, &lt;code&gt;as&lt;/code&gt; IS &lt;code&gt;'input'&lt;/code&gt; (기본값).</target>
        </trans-unit>
        <trans-unit id="1583a3c1bfca6137d9018d54ee8f8c59752ab45d" translate="yes" xml:space="preserve">
          <source>The HTML input name, used to group like checkboxes or radio buttons together semantically</source>
          <target state="translated">확인란 또는 라디오 버튼과 같은 의미를 함께 그룹화하는 데 사용되는 HTML 입력 이름</target>
        </trans-unit>
        <trans-unit id="eaba51b66e3334f9666c71c6687ad70d02fbd3d8" translate="yes" xml:space="preserve">
          <source>The Modal Header, Title, Body, and Footer components are available as static properties the &lt;code&gt;&amp;lt;Modal/&amp;gt;&lt;/code&gt; component, but you can also, import them directly like: &lt;code&gt;require(&quot;react-bootstrap/ModalHeader&quot;)&lt;/code&gt;.</source>
          <target state="translated">Modal Header, Title, Body 및 Footer 구성 요소는 &lt;code&gt;&amp;lt;Modal/&amp;gt;&lt;/code&gt; 구성 요소 의 정적 속성으로 사용할 수 있지만 &lt;code&gt;require(&quot;react-bootstrap/ModalHeader&quot;)&lt;/code&gt; 와 같이 직접 가져올 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e6024ca5be2285821bb9c23238fcfb504b8a5f73" translate="yes" xml:space="preserve">
          <source>The React component model gives us more control over form and function of each component.</source>
          <target state="translated">React 컴포넌트 모델은 각 컴포넌트의 형태와 기능에 대한 더 많은 제어를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="57f85f4c65cd8c2896b9de683bf6253620b054d9" translate="yes" xml:space="preserve">
          <source>The above demonstrates how flexible the component model can be. But if you didn't want to roll your own versions we've included a straight-forward &lt;code&gt;&amp;lt;NavDropdown&amp;gt;&lt;/code&gt; that works for most cases.</source>
          <target state="translated">위의 내용은 구성 요소 모델의 유연성을 보여줍니다. 그러나 자체 버전을 롤링하고 싶지 않은 경우 대부분의 경우에 작동 하는 간단한 &lt;code&gt;&amp;lt;NavDropdown&amp;gt;&lt;/code&gt; 을 포함했습니다 .</target>
        </trans-unit>
        <trans-unit id="544cbc69f0e579ee12739dee1b64f9956344b16e" translate="yes" xml:space="preserve">
          <source>The above handles styling, But requires manually controlling the &lt;code&gt;checked&lt;/code&gt; state for each radio or checkbox in the group.</source>
          <target state="translated">위의 스타일은 스타일링을 처리하지만 각 라디오 또는 그룹의 확인란에 대해 &lt;code&gt;checked&lt;/code&gt; 상태를 수동으로 제어해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6562ea9afac0da496a53ec857f7db1431811cb2f" translate="yes" xml:space="preserve">
          <source>The active state of the NavItem item.</source>
          <target state="translated">NavItem 항목의 활성 상태입니다.</target>
        </trans-unit>
        <trans-unit id="78f3b115e66268779d65f8e1ca4c380ae6e83c0f" translate="yes" xml:space="preserve">
          <source>The amount of time to delay between automatically cycling an item. If &lt;code&gt;null&lt;/code&gt;, carousel will not automatically cycle.</source>
          <target state="translated">항목 자동 순환 사이의 지연 시간입니다. 경우 &lt;code&gt;null&lt;/code&gt; , 회전 목마가 자동으로 순환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b4be12b0237932c495c2d57881211ad664753a5b" translate="yes" xml:space="preserve">
          <source>The amount of time to delay between automatically cycling this specific item. Will default to the Carousel's &lt;code&gt;interval&lt;/code&gt; prop value if none is specified.</source>
          <target state="translated">이 특정 항목을 자동으로 순환하는 사이의 지연 시간입니다. 아무 것도 지정하지 않으면 기본적으로 Carousel의 &lt;code&gt;interval&lt;/code&gt; prop 값이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ff2f1ff4363b6f3b9280cfa9eb083f31acac8209" translate="yes" xml:space="preserve">
          <source>The aspect ratio is controlled via the &lt;code&gt;aspectRatio&lt;/code&gt; prop.</source>
          <target state="translated">종횡비는 &lt;code&gt;aspectRatio&lt;/code&gt; 소품을 통해 제어됩니다 .</target>
        </trans-unit>
        <trans-unit id="be2ba5f7c9ff3e7fbdf8d0edd118e51c3533435e" translate="yes" xml:space="preserve">
          <source>The basic Dropdown is composed of a wrapping &lt;code&gt;Dropdown&lt;/code&gt; and inner &lt;code&gt;&amp;lt;DropdownMenu&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;DropdownToggle&amp;gt;&lt;/code&gt;. By default the &lt;code&gt;&amp;lt;DropdownToggle&amp;gt;&lt;/code&gt; will render a &lt;code&gt;Button&lt;/code&gt; component and accepts all the same props.</source>
          <target state="translated">기본 드롭 다운은 래핑 된 &lt;code&gt;Dropdown&lt;/code&gt; 과 내부 &lt;code&gt;&amp;lt;DropdownMenu&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;DropdownToggle&amp;gt;&lt;/code&gt; 로 구성 됩니다. 기본적으로 &lt;code&gt;&amp;lt;DropdownToggle&amp;gt;&lt;/code&gt; 은 &lt;code&gt;Button&lt;/code&gt; 구성 요소 를 렌더링 하고 동일한 모든 소품을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="82fabb51c075616233d0d0c13a8cdae8b87cd72c" translate="yes" xml:space="preserve">
          <source>The basic, variant-less, &lt;code&gt;Nav&lt;/code&gt; component does not include any &lt;code&gt;active&lt;/code&gt; prop styling!</source>
          <target state="translated">변형이없는 기본 &lt;code&gt;Nav&lt;/code&gt; 구성 요소에는 &lt;code&gt;active&lt;/code&gt; 소품 스타일이 포함되어 있지 않습니다 !</target>
        </trans-unit>
        <trans-unit id="2581bf05030414eb4d116e21eb97865959dbf403" translate="yes" xml:space="preserve">
          <source>The best way to consume React-Bootstrap is via the npm package which you can install with &lt;code&gt;npm&lt;/code&gt; (or &lt;code&gt;yarn&lt;/code&gt; if you prefer).</source>
          <target state="translated">React-Bootstrap을 사용하는 가장 좋은 방법은 &lt;code&gt;npm&lt;/code&gt; (또는 원하는 경우 &lt;code&gt;yarn&lt;/code&gt; )으로 설치할 수있는 npm 패키지를 사용하는 것 입니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
