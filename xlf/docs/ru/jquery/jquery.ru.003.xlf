<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="jquery">
    <body>
      <group id="jquery">
        <trans-unit id="c35449e545b938250e9137e00fee582914cfdeed" translate="yes" xml:space="preserve">
          <source>Category: Global Ajax Event Handlers</source>
          <target state="translated">Категория:Обработчики событий Global Ajax</target>
        </trans-unit>
        <trans-unit id="69a4d9a3089fc0aa7152777e5daf9622cbcfdacb" translate="yes" xml:space="preserve">
          <source>Category: Helper Functions</source>
          <target state="translated">Категория:Функции помощника</target>
        </trans-unit>
        <trans-unit id="82dfe00fce76921f064f322ed2cd73aaa10abf53" translate="yes" xml:space="preserve">
          <source>Category: Hierarchy</source>
          <target state="translated">Категория:Иерархи</target>
        </trans-unit>
        <trans-unit id="de42cfb551d21f728336efc9126decc50e3776d5" translate="yes" xml:space="preserve">
          <source>Category: Internals</source>
          <target state="translated">Категория:Интерналы</target>
        </trans-unit>
        <trans-unit id="b4e1550eb2fb445b2150f603ca6698909fa5081c" translate="yes" xml:space="preserve">
          <source>Category: Keyboard Events</source>
          <target state="translated">Категория:События на клавиатуре</target>
        </trans-unit>
        <trans-unit id="4f9ad0a132a6cbde04271b5c37ec5e27033062c0" translate="yes" xml:space="preserve">
          <source>Category: Low-Level Interface</source>
          <target state="translated">Категория:Низкоуровневый интерфейс</target>
        </trans-unit>
        <trans-unit id="6315002fcdffae039e3bf194aa7877fb3877b52a" translate="yes" xml:space="preserve">
          <source>Category: Manipulation</source>
          <target state="translated">Категория:Манипуляция</target>
        </trans-unit>
        <trans-unit id="da96e8501d1d782a1e8068b4903f0953366ca5bd" translate="yes" xml:space="preserve">
          <source>Category: Miscellaneous</source>
          <target state="translated">Категория:Разное</target>
        </trans-unit>
        <trans-unit id="82c196f07012fd8c1f2572439f2b7dd544f1dfff" translate="yes" xml:space="preserve">
          <source>Category: Miscellaneous Traversing</source>
          <target state="translated">Категория:Разное путешествие</target>
        </trans-unit>
        <trans-unit id="bdbd7d523e5219d48abfd34d8dd46d5bf79ff561" translate="yes" xml:space="preserve">
          <source>Category: Mouse Events</source>
          <target state="translated">Категория:Мышей События</target>
        </trans-unit>
        <trans-unit id="25e9705503e55d8dbf764d904ceb22b984cbdd0c" translate="yes" xml:space="preserve">
          <source>Category: Offset</source>
          <target state="translated">Категория:Смещение</target>
        </trans-unit>
        <trans-unit id="65051cd2beacbca8e5e63f6651a461af21fb0f2c" translate="yes" xml:space="preserve">
          <source>Category: Properties</source>
          <target state="translated">Категория:Свойства</target>
        </trans-unit>
        <trans-unit id="51940d05b991fcf9b09178f0efaa07281fd1df97" translate="yes" xml:space="preserve">
          <source>Category: Properties of jQuery Object Instances</source>
          <target state="translated">Категория:Свойства объектных обстоятельств jQuery</target>
        </trans-unit>
        <trans-unit id="351c0de821ef4f3ce2d88dbc2e9ae3631cfe99fc" translate="yes" xml:space="preserve">
          <source>Category: Properties of the Global jQuery Object</source>
          <target state="translated">Категория:Свойства глобального объекта jQuery</target>
        </trans-unit>
        <trans-unit id="b9b11187aa4210a4cd7f1d0e023936e280097319" translate="yes" xml:space="preserve">
          <source>Category: Removed</source>
          <target state="translated">Категория:Удалено</target>
        </trans-unit>
        <trans-unit id="2ced56e3f50624c0b6007d5bc3abbbe6fdb03060" translate="yes" xml:space="preserve">
          <source>Category: Selectors</source>
          <target state="translated">Категория:Селекторы</target>
        </trans-unit>
        <trans-unit id="38c496d98a5b5834de639a88bae424a8da6312a9" translate="yes" xml:space="preserve">
          <source>Category: Setup Methods</source>
          <target state="translated">Категория:Методы настройки</target>
        </trans-unit>
        <trans-unit id="d62a40edc446f655505edfb657edd9055842c7eb" translate="yes" xml:space="preserve">
          <source>Category: Shorthand Methods</source>
          <target state="translated">Категория:Кратковременные методы</target>
        </trans-unit>
        <trans-unit id="0bc8d21aa9178e6524410e9b9bef9d901eff3200" translate="yes" xml:space="preserve">
          <source>Category: Sliding</source>
          <target state="translated">Категория:Скользящий</target>
        </trans-unit>
        <trans-unit id="71c53fb7bf5df96f7e0089e5e7d398f9261ee1c1" translate="yes" xml:space="preserve">
          <source>Category: Style Properties</source>
          <target state="translated">Категория:Свойства стиля</target>
        </trans-unit>
        <trans-unit id="b437a8acd6ebefc65d1570e06e3e5fa32c2f0685" translate="yes" xml:space="preserve">
          <source>Category: Traversing</source>
          <target state="translated">Категория:Путешествие по сайту</target>
        </trans-unit>
        <trans-unit id="59aeb71eccbcfac3b1d01d26a7966fc65f9663a3" translate="yes" xml:space="preserve">
          <source>Category: Tree Traversal</source>
          <target state="translated">Категория:Обход деревьев</target>
        </trans-unit>
        <trans-unit id="5ba330296e912a408067e72587ec3b647d757321" translate="yes" xml:space="preserve">
          <source>Category: Utilities</source>
          <target state="translated">Категория:Коммунальные услуги</target>
        </trans-unit>
        <trans-unit id="d2bfb5bd510478ebeb08fa5be89b59256d8573c7" translate="yes" xml:space="preserve">
          <source>Category: Visibility Filter</source>
          <target state="translated">Категория:Фильтр видимости</target>
        </trans-unit>
        <trans-unit id="ac5bd99d0ad15f27163526faccd3e23129e99266" translate="yes" xml:space="preserve">
          <source>Category: jQuery Extensions</source>
          <target state="translated">Категория:jQuery Расширения</target>
        </trans-unit>
        <trans-unit id="fa3c2e36cd586931a02d579d1ed72e31745f2f1b" translate="yes" xml:space="preserve">
          <source>Cause all animations to run with less frames.</source>
          <target state="translated">Потому что все анимации должны работать с меньшим количеством кадров.</target>
        </trans-unit>
        <trans-unit id="8e92fec21e79611564236026731e6832beecfbe9" translate="yes" xml:space="preserve">
          <source>Caution: The all, or universal, selector is extremely slow, except when used by itself.</source>
          <target state="translated">Осторожно:Селектор &quot;Все&quot; или &quot;Универсальный&quot; работает очень медленно,за исключением случаев,когда он используется сам по себе.</target>
        </trans-unit>
        <trans-unit id="c42c5a91a8961d5826b8acd26b5d6377fc89b1f3" translate="yes" xml:space="preserve">
          <source>Chain tasks:</source>
          <target state="translated">Цепные задания:</target>
        </trans-unit>
        <trans-unit id="8fef34914a1fb0675d04cdef32d6fdc18a12d7ba" translate="yes" xml:space="preserve">
          <source>Chaining methods is not supported. For example, &lt;code&gt;$( &quot;a&quot; ).find( &quot;.offsite, .external&quot; ).live( ... ); &lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; valid and does not work as expected.</source>
          <target state="translated">Методы связывания не поддерживаются. Например, &lt;code&gt;$( &quot;a&quot; ).find( &quot;.offsite, .external&quot; ).live( ... ); &lt;/code&gt; это &lt;em&gt;не&lt;/em&gt; действует и не работает , как ожидалось.</target>
        </trans-unit>
        <trans-unit id="55b53f5dcb198602ceed45df363f893200533790" translate="yes" xml:space="preserve">
          <source>Change the background color of links inside of an iframe.</source>
          <target state="translated">Изменение цвета фона ссылок внутри ифрейма.</target>
        </trans-unit>
        <trans-unit id="2a94b43836e09ea7f9fdf1a1fe0bbd49a48ba1c2" translate="yes" xml:space="preserve">
          <source>Change the color of all divs; then add a border to the second one (index == 1) and the div with an id of &quot;fourth.&quot;</source>
          <target state="translated">Измените цвет всех div'ов;затем добавьте границу ко второму div'у (индекс ==1)и div'у с идентификатором &quot;четвертый&quot;.</target>
        </trans-unit>
        <trans-unit id="784782ac272f33b08ecf9551800987f874e1ca1e" translate="yes" xml:space="preserve">
          <source>Change the color of all divs; then add a border to those with a &quot;middle&quot; class.</source>
          <target state="translated">Измените цвет всех div'ов;затем добавьте границу к тем,которые относятся к &quot;среднему&quot; классу.</target>
        </trans-unit>
        <trans-unit id="0752ef285d331014b988e4df91c34e99d952ace0" translate="yes" xml:space="preserve">
          <source>Change the color of any div that is animated.</source>
          <target state="translated">Измените цвет любого дайва,который анимирован.</target>
        </trans-unit>
        <trans-unit id="c3224b938be04497764436428f07567f804fa9b4" translate="yes" xml:space="preserve">
          <source>Change the color of any paragraph to red on mouseover event.</source>
          <target state="translated">Измените цвет любого абзаца на красный при наведении курсора мыши.</target>
        </trans-unit>
        <trans-unit id="8cce5293af544072bbf54aa88d214324432e73db" translate="yes" xml:space="preserve">
          <source>Change the context of a function bound to the click handler,</source>
          <target state="translated">Измените контекст функции,привязанной к обработчику кликов,</target>
        </trans-unit>
        <trans-unit id="a086e4ca8ab88694a7b714754df74b722fe700ae" translate="yes" xml:space="preserve">
          <source>Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.</source>
          <target state="translated">Измените контекст функций,привязанных к обработчику клика с помощью сигнатуры &quot;функция,контекст&quot;.Развязать первый обработчик после первого клика.</target>
        </trans-unit>
        <trans-unit id="1700335d6fcaeb3fb4ff90596631d062593e9632" translate="yes" xml:space="preserve">
          <source>Change the font weight and background color on mouseenter and mouseleave.</source>
          <target state="translated">Изменение веса шрифта и цвета фона на мыши и мыши.</target>
        </trans-unit>
        <trans-unit id="92d12618e1025c26643733e6e525d713ae7ac025" translate="yes" xml:space="preserve">
          <source>Change the inner height of each div the first time it is clicked (and change its color).</source>
          <target state="translated">Изменяйте внутреннюю высоту каждого ныряльщика при первом нажатии (и меняйте его цвет).</target>
        </trans-unit>
        <trans-unit id="3e2ee71befd4e0fa9d694e9ec80febd6e835a50f" translate="yes" xml:space="preserve">
          <source>Change the inner width of each div the first time it is clicked (and change its color).</source>
          <target state="translated">Изменяйте внутреннюю ширину каждого ныряльщика при первом нажатии (и меняйте его цвет).</target>
        </trans-unit>
        <trans-unit id="abb7538bd163bb4646dc9eb0d0325a489c21c01e" translate="yes" xml:space="preserve">
          <source>Change the outer height of each div the first time it is clicked (and change its color).</source>
          <target state="translated">Изменяйте внешнюю высоту каждого ныряльщика при первом нажатии (и меняйте его цвет).</target>
        </trans-unit>
        <trans-unit id="e641d228e2a7b0d98f2d9115f3adcaf7145ead52" translate="yes" xml:space="preserve">
          <source>Change the outer width of each div the first time it is clicked (and change its color).</source>
          <target state="translated">Изменяйте внешнюю ширину каждого ныряльщика при первом нажатии (и меняйте его цвет).</target>
        </trans-unit>
        <trans-unit id="e723f2d2fcb08023e5e13931576df9ac606d6ff8" translate="yes" xml:space="preserve">
          <source>Change the text and add a border for each button that is the only child button of its parent.</source>
          <target state="translated">Измените текст и добавьте для каждой кнопки рамку,которая является единственной дочерней кнопкой родителя.</target>
        </trans-unit>
        <trans-unit id="9daba5a99b9e0cadfd2d9e30cbcd17f690749d3e" translate="yes" xml:space="preserve">
          <source>Change the text and add a border for each button that is the only child of its parent.</source>
          <target state="translated">Измените текст и добавьте для каждой кнопки рамку,которая является единственным дочерним элементом ее родителя.</target>
        </trans-unit>
        <trans-unit id="18a00847ffa7ac461dbec981e0f4bd1f524c0691" translate="yes" xml:space="preserve">
          <source>Change the width of each div the first time it is clicked (and change its color).</source>
          <target state="translated">Изменяйте ширину каждого погружения при первом нажатии (и меняйте его цвет).</target>
        </trans-unit>
        <trans-unit id="fc562a6d0449be96713a55fb2e308534a8f31cf6" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;../../trigger&quot;&gt;trigger&lt;/a&gt;'s documentation to see how to combine it with your own event object.</source>
          <target state="translated">Обратитесь &lt;a href=&quot;../../trigger&quot;&gt;к&lt;/a&gt; документации триггера , чтобы узнать, как объединить его с вашим собственным объектом события.</target>
        </trans-unit>
        <trans-unit id="0169aed47c7dc2bf407e5a80a6cd45968cecb02e" translate="yes" xml:space="preserve">
          <source>Check an object to see if it's a plain object.</source>
          <target state="translated">Проверьте объект,чтобы убедиться,что это обычный объект.</target>
        </trans-unit>
        <trans-unit id="c030bcf1e5585b8a0807160c7b72e6ebd4d4ab92" translate="yes" xml:space="preserve">
          <source>Check an object to see if it's empty.</source>
          <target state="translated">Проверьте объект,чтобы убедиться,что он пуст.</target>
        </trans-unit>
        <trans-unit id="e011f2637d78fa4a01bd0db28d92e3ec0371ad62" translate="yes" xml:space="preserve">
          <source>Check an object to see if it's in an XML document.</source>
          <target state="translated">Проверьте объект,чтобы убедиться,что он находится в XML-документе.</target>
        </trans-unit>
        <trans-unit id="806ee0eef6d5bd13a55d33b6e95bb9545b7a6e77" translate="yes" xml:space="preserve">
          <source>Check if an element is a descendant of another.</source>
          <target state="translated">Проверьте,является ли элемент потомком другого.</target>
        </trans-unit>
        <trans-unit id="d009eb64a2d88ac06b37dfea1f23c69de3739266" translate="yes" xml:space="preserve">
          <source>Check if an element is inside another.</source>
          <target state="translated">Проверьте,не находится ли элемент внутри другого.</target>
        </trans-unit>
        <trans-unit id="407a883c1e8d6a3c415530e389b3778d9c50689a" translate="yes" xml:space="preserve">
          <source>Check the current matched set of elements against a selector, element, or jQuery object and return true if at least one of these elements matches the given arguments.</source>
          <target state="translated">Проверьте текущий совпадающий набор элементов против селектора,элемента или объекта jQuery и верните true,если хотя бы один из этих элементов совпадает с заданными аргументами.</target>
        </trans-unit>
        <trans-unit id="067eb29fdede1bcc90a65ab30077bc29f98836a2" translate="yes" xml:space="preserve">
          <source>Check to see if a DOM element is a descendant of another DOM element.</source>
          <target state="translated">Проверьте,не является ли DOM-элемент потомком другого DOM-элемента.</target>
        </trans-unit>
        <trans-unit id="b7b040a3c69a6cc7ad6a4e1ae71e076a79afd4b5" translate="yes" xml:space="preserve">
          <source>Check to see if a DOM node is within an XML document (or is an XML document).</source>
          <target state="translated">Убедитесь,что DOM-узел находится внутри XML-документа (или является XML-документом).</target>
        </trans-unit>
        <trans-unit id="b402e4274db62f5c5deff3f22b26f8e661a3b2ae" translate="yes" xml:space="preserve">
          <source>Check to see if an object is a plain object (created using &amp;ldquo;{}&amp;rdquo; or &amp;ldquo;new Object&amp;rdquo;).</source>
          <target state="translated">Проверьте, является ли объект простым (созданным с помощью &amp;laquo;{}&amp;raquo; или &amp;laquo;нового объекта&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="cbf2d8060e2ab8e8ce7bdc3ec3f311198bfb1efe" translate="yes" xml:space="preserve">
          <source>Check to see if an object is empty (contains no enumerable properties).</source>
          <target state="translated">Проверьте,не пуст ли объект (не содержит бесчисленных свойств).</target>
        </trans-unit>
        <trans-unit id="ef020d4aee2af7ce07b9595176414555bb093e1d" translate="yes" xml:space="preserve">
          <source>Checks against an existing collection of alternating list elements. Blue, alternating list elements slide up while others turn red.</source>
          <target state="translated">Проверяет по существующей коллекции переменных элементов списка.Синий,чередующиеся элементы списка сдвигаются вверх,в то время как другие становятся красными.</target>
        </trans-unit>
        <trans-unit id="28f76e0cc4604968aaff359b2f96faad840f81cf" translate="yes" xml:space="preserve">
          <source>Checks whether event.preventDefault() was called.</source>
          <target state="translated">Проверяет,был ли вызван event.preventDefault().</target>
        </trans-unit>
        <trans-unit id="a184ea3d6b22454269d9a5c4f34e55e7b8168ce1" translate="yes" xml:space="preserve">
          <source>Checks whether event.stopImmediatePropagation() was called.</source>
          <target state="translated">Проверяет,было ли вызвано event.stopImmediatePropagation().</target>
        </trans-unit>
        <trans-unit id="9563da5cb9e5c53d629c7157a1ac9902d58d9cad" translate="yes" xml:space="preserve">
          <source>Checks whether event.stopPropagation() was called</source>
          <target state="translated">Проверяет,было ли вызвано event.stopPropagation()</target>
        </trans-unit>
        <trans-unit id="742150615d8f62100a8b5953de4ea2c5e6c3a466" translate="yes" xml:space="preserve">
          <source>Child Selector (&amp;ldquo;parent &amp;gt; child&amp;rdquo;)</source>
          <target state="translated">Дочерний селектор (&amp;laquo;родительский&amp;gt; дочерний&amp;raquo;)</target>
        </trans-unit>
        <trans-unit id="581558908ee8b47701cd2609610e3d3228c13e71" translate="yes" xml:space="preserve">
          <source>Child selector (&amp;quot;parent &amp;gt; child&amp;quot;)</source>
          <target state="translated">Дочерний селектор (&amp;laquo;родительский&amp;gt; дочерний&amp;raquo;)</target>
        </trans-unit>
        <trans-unit id="b6d0a052b36831c96cb9527bca464aee550e5208" translate="yes" xml:space="preserve">
          <source>Class Selector (&amp;ldquo;.class&amp;rdquo;)</source>
          <target state="translated">Селектор классов (&amp;laquo;.class&amp;raquo;)</target>
        </trans-unit>
        <trans-unit id="447fccb68b56bf5364920a570d06a1cbd245e3c4" translate="yes" xml:space="preserve">
          <source>Class selector (&amp;quot;.class&amp;quot;)</source>
          <target state="translated">Селектор класса (&quot;.class&quot;)</target>
        </trans-unit>
        <trans-unit id="33397cce25c03297b2c53797e336c502ba8b46a0" translate="yes" xml:space="preserve">
          <source>Click a paragraph to add another. Note that .delegate() attaches a click event handler to all paragraphs - even new ones.</source>
          <target state="translated">Нажмите на параграф,чтобы добавить еще один.Обратите внимание,что .delegate()прикрепляет обработчик события щелчка ко всем параграфам-даже к новым.</target>
        </trans-unit>
        <trans-unit id="e19148ca3fa1601f932d70816c695ade49b305a4" translate="yes" xml:space="preserve">
          <source>Click a paragraph to convert it from html to text.</source>
          <target state="translated">Щелкните по параграфу,чтобы преобразовать его из html в текст.</target>
        </trans-unit>
        <trans-unit id="79e15f896e472a3e9e9f4d0504737edd47735ffe" translate="yes" xml:space="preserve">
          <source>Click any paragraph to add another after it. Note that &lt;code&gt;.on()&lt;/code&gt; allows a click event on any paragraph--even new ones--since the event is handled by the ever-present body element after it bubbles to there.</source>
          <target state="translated">Щелкните любой абзац, чтобы добавить после него еще один. Обратите внимание, что &lt;code&gt;.on()&lt;/code&gt; допускает событие щелчка для любого абзаца - даже для нового - поскольку событие обрабатывается вездесущим элементом body после того, как оно перемещается туда.</target>
        </trans-unit>
        <trans-unit id="fc671cda9bc5e7df33784874b7d110bade8aa57d" translate="yes" xml:space="preserve">
          <source>Click the Go button once to start the animation, and then click the other buttons to see how they affect the current and queued animations.</source>
          <target state="translated">Нажмите кнопку Go один раз,чтобы начать анимацию,а затем нажмите другие кнопки,чтобы увидеть,как они влияют на текущую анимацию и анимацию в очереди.</target>
        </trans-unit>
        <trans-unit id="31f3c7e2aa4f674d4398a009e8fa0fd5f2ac84bb" translate="yes" xml:space="preserve">
          <source>Click the Go button once to start the animation, then click the STOP button to stop it where it's currently positioned. Another option is to click several buttons to queue them up and see that stop just kills the currently playing one.</source>
          <target state="translated">Нажмите кнопку Go один раз,чтобы начать анимацию,затем нажмите кнопку STOP,чтобы остановить ее там,где она находится в настоящее время.Другой вариант заключается в нажатии нескольких кнопок,чтобы поставить их в очередь и увидеть,что остановка просто убивает текущий играющий.</target>
        </trans-unit>
        <trans-unit id="2f3f0e2bf18d6315362300f6d4629503f0a52301" translate="yes" xml:space="preserve">
          <source>Click the button to animate the div with a number of different properties.</source>
          <target state="translated">Нажмите кнопку,чтобы анимировать дайв с рядом различных свойств.</target>
        </trans-unit>
        <trans-unit id="82375a91bb95efd06eb38c36f2d7ae91b5679759" translate="yes" xml:space="preserve">
          <source>Click the slideToggle button to start the animation, then click again before the animation is completed. The animation will toggle the other direction from the saved starting point.</source>
          <target state="translated">Нажмите на кнопку slideToggle,чтобы начать анимацию,затем нажмите еще раз,прежде чем анимация будет завершена.Анимация переключится в другую сторону от сохраненной начальной точки.</target>
        </trans-unit>
        <trans-unit id="12e35f031807495341fd86aab4e25b2e414d0d2f" translate="yes" xml:space="preserve">
          <source>Click to find all unique div parent elements of each span.</source>
          <target state="translated">Нажмите,чтобы найти все уникальные элементы div-родителей каждого пролета.</target>
        </trans-unit>
        <trans-unit id="15d5287a3edd17d916fb99303c485a40711097ff" translate="yes" xml:space="preserve">
          <source>Click to see the offset.</source>
          <target state="translated">Нажмите,чтобы увидеть смещение.</target>
        </trans-unit>
        <trans-unit id="135d857dbe00412e54dac47f95382dd014602880" translate="yes" xml:space="preserve">
          <source>Clicking the button changes the title of the input next to it. Move the mouse pointer over the text input to see the effect of adding and removing the title attribute.</source>
          <target state="translated">Нажатие на кнопку изменяет название входа рядом с ним.Наведите курсор мыши на вводимый текст,чтобы увидеть эффект добавления и удаления атрибута title.</target>
        </trans-unit>
        <trans-unit id="419d6b9dfa8091dced7ef97ffba9bf58b61d1768" translate="yes" xml:space="preserve">
          <source>Clicks to button #2 also trigger a click for button #1.</source>
          <target state="translated">Нажатие на кнопку #2 также вызывает нажатие на кнопку #1.</target>
        </trans-unit>
        <trans-unit id="0f0fc065b1349e87f25f35c2de489a33910ea10e" translate="yes" xml:space="preserve">
          <source>Clones all b elements (and selects the clones) and prepends them to all paragraphs.</source>
          <target state="translated">Клонирует все элементы b (и выбирает клонов)и преобразует их во все параграфы.</target>
        </trans-unit>
        <trans-unit id="1844e28b7d735429e8422f40b0abb329fc071c7e" translate="yes" xml:space="preserve">
          <source>Cloning jQuery Objects</source>
          <target state="translated">Клонирование jQuery Объекты</target>
        </trans-unit>
        <trans-unit id="16b1546bfaf51b2730baa3cec8823ad69c6d520a" translate="yes" xml:space="preserve">
          <source>Closures</source>
          <target state="translated">Closures</target>
        </trans-unit>
        <trans-unit id="9aaf6e7843fe176f42283102c9dea7fc8ad53ed0" translate="yes" xml:space="preserve">
          <source>Closures are created whenever a variable that is defined outside the current scope is accessed from within some inner scope. In the following example, the variable</source>
          <target state="translated">Закрытия создаются всякий раз,когда доступ к переменной,определенной вне текущей области видимости,осуществляется из какой-то внутренней области видимости.В следующем примере переменная</target>
        </trans-unit>
        <trans-unit id="074ee7c92fa7f8824ad5e82ac057d381eaa57139" translate="yes" xml:space="preserve">
          <source>Code in a &lt;code&gt;resize&lt;/code&gt; handler should never rely on the number of times the handler is called. Depending on implementation, &lt;code&gt;resize&lt;/code&gt; events can be sent continuously as the resizing is in progress (the typical behavior in Internet Explorer and WebKit-based browsers such as Safari and Chrome), or only once at the end of the resize operation (the typical behavior in some other browsers such as Opera).</source>
          <target state="translated">Код в обработчике &lt;code&gt;resize&lt;/code&gt; никогда не должен полагаться на количество вызовов обработчика. В зависимости от реализации события &lt;code&gt;resize&lt;/code&gt; могут отправляться непрерывно по мере выполнения изменения размера (типичное поведение в браузерах на базе Internet Explorer и WebKit, таких как Safari и Chrome) или только один раз в конце операции изменения размера (типичное поведение в некоторые другие браузеры, такие как Opera).</target>
        </trans-unit>
        <trans-unit id="774b9ce907bf67455525be060d885971bacb12a1" translate="yes" xml:space="preserve">
          <source>Color div elements according to their language.</source>
          <target state="translated">Цветные div-элементы в соответствии с их языком.</target>
        </trans-unit>
        <trans-unit id="138228d00799461403e74ab3b1f4e0e92cda1672" translate="yes" xml:space="preserve">
          <source>Combining the above knowledge gives you as a JavaScript developer quite a lot of power. One way to combine that is to implement a proxy pattern in JavaScript, enabling the basics of aspect-oriented programming (AOP):</source>
          <target state="translated">Объединение вышеперечисленных знаний дает Вам,как разработчику JavaScript,достаточно много сил.Одним из способов объединения является реализация шаблона прокси в JavaScript,позволяющего реализовать основы перспективного программирования (AOP):</target>
        </trans-unit>
        <trans-unit id="0746723b9ea54df4a9f84f4d0a56d2d09c4af7b0" translate="yes" xml:space="preserve">
          <source>Common Event Properties</source>
          <target state="translated">Свойства,присущие обычным событиям</target>
        </trans-unit>
        <trans-unit id="2a0e5611cb645b76b3299523de8485dca3826246" translate="yes" xml:space="preserve">
          <source>Completely move jQuery to a new namespace in another object.</source>
          <target state="translated">Полностью переместите jQuery в новое пространство имен в другом объекте.</target>
        </trans-unit>
        <trans-unit id="612322d2ba23eb266e5ba252b6274fa1355088f0" translate="yes" xml:space="preserve">
          <source>Computed attribute values</source>
          <target state="translated">Вычисленные значения атрибутов</target>
        </trans-unit>
        <trans-unit id="1711582a69746b097ed6a56cbcf113f4bc17c971" translate="yes" xml:space="preserve">
          <source>Computed property values</source>
          <target state="translated">Расчетная стоимость имущества</target>
        </trans-unit>
        <trans-unit id="17f86e12e62e848e628bb10c6be02a4ec9218168" translate="yes" xml:space="preserve">
          <source>Concerning boolean attributes, consider a DOM element defined by the HTML markup &lt;code&gt;&amp;lt;input type=&quot;checkbox&quot; checked=&quot;checked&quot; /&amp;gt;&lt;/code&gt;, and assume it is in a JavaScript variable named &lt;code&gt;elem&lt;/code&gt;:</source>
          <target state="translated">Что касается логических атрибутов, рассмотрим элемент DOM, определенный разметкой HTML &lt;code&gt;&amp;lt;input type=&quot;checkbox&quot; checked=&quot;checked&quot; /&amp;gt;&lt;/code&gt; , и предположим, что он находится в переменной JavaScript с именем &lt;code&gt;elem&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="949d34ffd67f3e29c5ffbaddfb6473e221799a94" translate="yes" xml:space="preserve">
          <source>Consider a page with a basic nested list on it, with a positioned element:</source>
          <target state="translated">Рассмотрим страницу с базовым вложенным списком,с позиционируемым элементом:</target>
        </trans-unit>
        <trans-unit id="5f4faec041f49c9dcfcd85a780aab946086c5a57" translate="yes" xml:space="preserve">
          <source>Consider a page with a basic nested list on it:</source>
          <target state="translated">Рассмотрим страницу с основным вложенным списком:</target>
        </trans-unit>
        <trans-unit id="ddab0404faa23ca613ef49752b108d4839aacefc" translate="yes" xml:space="preserve">
          <source>Consider a page with a nested list as follows:</source>
          <target state="translated">Рассмотрим страницу со вложенным списком следующим образом:</target>
        </trans-unit>
        <trans-unit id="05b20fd6b8eabafdc6674bcefc3e8c36f15ed25c" translate="yes" xml:space="preserve">
          <source>Consider a page with a simple list and a paragraph following it:</source>
          <target state="translated">Рассмотрим страницу с простым списком и абзацем после него:</target>
        </trans-unit>
        <trans-unit id="9e1ee5e7810121724de18980a101e13c322f6485" translate="yes" xml:space="preserve">
          <source>Consider a page with a simple list on it:</source>
          <target state="translated">Рассмотрим страницу с простым списком:</target>
        </trans-unit>
        <trans-unit id="16aad2587cfea3ca5f74b14685828c3bdafcc030" translate="yes" xml:space="preserve">
          <source>Consider a simple &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with a number of text nodes, each of which is separated by two line break elements (&lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;):</source>
          <target state="translated">Рассмотрим простой &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; с несколькими текстовыми узлами, каждый из которых разделен двумя элементами разрыва строки ( &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="d8fdbcb707d36a94ea3dfbb1a83479b5c4615d33" translate="yes" xml:space="preserve">
          <source>Consider a simple unordered list:</source>
          <target state="translated">Рассмотрим простой неупорядоченный список:</target>
        </trans-unit>
        <trans-unit id="f51baebc5bd1d2e0b40fd7313ce83fec33e18be2" translate="yes" xml:space="preserve">
          <source>Consider the following HTML:</source>
          <target state="translated">Рассмотрим следующий HTML:</target>
        </trans-unit>
        <trans-unit id="5f4303290233dca739ba4ed6e98f22ea739c1824" translate="yes" xml:space="preserve">
          <source>Contains flags for the useragent, read from navigator.userAgent. This property was removed in jQuery 1.9 and is available only through the jQuery.migrate plugin. Please try to use feature detection instead.</source>
          <target state="translated">Содержит флаги для пользовательского агента,которые можно прочитать в navigator.userAgent.Это свойство было удалено в jQuery 1.9 и доступно только через плагин jQuery.migrate.Пожалуйста,попробуйте вместо этого воспользоваться функцией обнаружения.</target>
        </trans-unit>
        <trans-unit id="f2e47e198536b3a40ab2ca34c748b0fba14cde39" translate="yes" xml:space="preserve">
          <source>Content can be created and then inserted after several elements at once:</source>
          <target state="translated">Содержимое может быть создано,а затем вставлено после нескольких элементов одновременно:</target>
        </trans-unit>
        <trans-unit id="f5cbdf6bfb51439be085b5c6b7460a7c91eabc3c" translate="yes" xml:space="preserve">
          <source>Contents</source>
          <target state="translated">Contents</target>
        </trans-unit>
        <trans-unit id="e416e43f493dc03bd7f45d55965a398e7052a174" translate="yes" xml:space="preserve">
          <source>Contents:</source>
          <target state="translated">Contents:</target>
        </trans-unit>
        <trans-unit id="20a2c9986cafe74f73ce5e3e32004dcfa0a20e55" translate="yes" xml:space="preserve">
          <source>Context passed to the doneCallbacks as the &lt;code&gt;this&lt;/code&gt; object.</source>
          <target state="translated">Контекст передается в doneCallbacks как объект &lt;code&gt;this&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da1455c53a0b871687f5cabac1e5eda57fa1559e" translate="yes" xml:space="preserve">
          <source>Context passed to the failCallbacks as the &lt;code&gt;this&lt;/code&gt; object.</source>
          <target state="translated">Контекст передается в failCallbacks как объект &lt;code&gt;this&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d86802706c592a39845ee3718c225980378445e0" translate="yes" xml:space="preserve">
          <source>Context passed to the progressCallbacks as the &lt;code&gt;this&lt;/code&gt; object.</source>
          <target state="translated">Контекст передается в progressCallbacks как объект &lt;code&gt;this&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="019d8a7c753bd5a6669859dade04a1009ee161f3" translate="yes" xml:space="preserve">
          <source>Context, Call and Apply</source>
          <target state="translated">Контекст,Звоните и Применяйте</target>
        </trans-unit>
        <trans-unit id="a0a46948373cd0edc6c48c975a8e813c789f7ab2" translate="yes" xml:space="preserve">
          <source>Convert an array-like object into a true JavaScript array.</source>
          <target state="translated">Преобразование массива подобных объектов в истинный массив JavaScript.</target>
        </trans-unit>
        <trans-unit id="8b27ea1f4d2a990838e3202bb487cec433d06dc8" translate="yes" xml:space="preserve">
          <source>Count the divs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ee71064b6f7d2ebf4ae7b9250d2e8534ba9aa8" translate="yes" xml:space="preserve">
          <source>Count the divs. Click to add more.</source>
          <target state="translated">Считай дайверов.Нажмите,чтобы добавить больше.</target>
        </trans-unit>
        <trans-unit id="7f4b1bf245b8b25d33b6f81dba6519b5569e96b5" translate="yes" xml:space="preserve">
          <source>Create a Deferred and set two timer-based functions to either resolve or reject the Deferred after a random interval. Whichever one fires first &quot;wins&quot; and will call one of the callbacks. The second timeout has no effect since the Deferred is already complete (in a resolved or rejected state) from the first timeout action. Also set a timer-based progress notification function, and call a progress handler that adds &quot;working...&quot; to the document body.</source>
          <target state="translated">Создать Отсрочку и установить две функции,основанные на таймере,чтобы либо разрешить,либо отклонить Отсрочку после случайного интервала.Кто первый &quot;выиграет&quot; и вызовет один из обратных вызовов.Второй таймаут не действует,так как действие &quot;Отложенный&quot; уже завершено (в разрешенном или отклоненном состоянии)с первого таймаута.Также установите функцию уведомления о ходе выполнения,основанную на таймере,и вызовите обработчика,который добавляет &quot;работает...&quot; в тело документа.</target>
        </trans-unit>
        <trans-unit id="18f43356a533156a5cefabeb7ce7d818edc577ba" translate="yes" xml:space="preserve">
          <source>Create a deep copy of the set of matched elements.</source>
          <target state="translated">Создайте глубокую копию набора согласованных элементов.</target>
        </trans-unit>
        <trans-unit id="78262df5a2cf55819015c128c98126c0c6769c47" translate="yes" xml:space="preserve">
          <source>Create a different alias instead of jQuery to use in the rest of the script.</source>
          <target state="translated">Создайте другой псевдоним вместо jQuery для использования в остальной части скрипта.</target>
        </trans-unit>
        <trans-unit id="8cfd1baf6cd27616ba0f3d5535d0859d1033de58" translate="yes" xml:space="preserve">
          <source>Create a div element (and all of its contents) dynamically and append it to the body element. Internally, an element is created and its innerHTML property set to the given markup.</source>
          <target state="translated">Создайте элемент div (и все его содержимое)динамически и присоедините его к элементу тела.Внутри элемента создается элемент и его свойство innerHTML устанавливается в заданную разметку.</target>
        </trans-unit>
        <trans-unit id="ce114fb4c30b3accd71b499f9b17e32254acd426" translate="yes" xml:space="preserve">
          <source>Create a jQuery object using an XML string and obtain the value of the title node.</source>
          <target state="translated">Создайте объект jQuery,используя XML-строку,и получите значение узла заголовка.</target>
        </trans-unit>
        <trans-unit id="c79cf06c10e6ccf9eaefae7740fb79323843b7d5" translate="yes" xml:space="preserve">
          <source>Create a new jQuery object with elements added to the set of matched elements.</source>
          <target state="translated">Создайте новый объект jQuery с элементами,добавленными в набор совпадающих элементов.</target>
        </trans-unit>
        <trans-unit id="efa28447b85f94f6a4ab65641deda121bb2dd723" translate="yes" xml:space="preserve">
          <source>Create a plugin that returns plugin-specific methods.</source>
          <target state="translated">Создайте плагин,который возвращает методы,специфичные для плагина.</target>
        </trans-unit>
        <trans-unit id="ca842ae372037f6df5ac6a128229b9d4300e3ed3" translate="yes" xml:space="preserve">
          <source>Create a serialized representation of an array, a plain object, or a jQuery object suitable for use in a URL query string or Ajax request. In case a jQuery object is passed, it should contain input elements with name/value properties.</source>
          <target state="translated">Создайте сериализованное представление массива,простого объекта или объекта jQuery,подходящего для использования в строке URL-запроса или Ajax-запросе.В случае передачи объекта jQuery,он должен содержать входные элементы со свойствами имени/значения.</target>
        </trans-unit>
        <trans-unit id="a03522d98fe38004f4abe9bbe3b2448b3739918e" translate="yes" xml:space="preserve">
          <source>Create an array of DOM nodes using an HTML string and insert it into a div.</source>
          <target state="translated">Создайте массив DOM-узлов с помощью HTML-строки и вставьте его в div.</target>
        </trans-unit>
        <trans-unit id="b683ce8014830f83b81a700bc7ad33eb0863e70c" translate="yes" xml:space="preserve">
          <source>Create some DOM elements.</source>
          <target state="translated">Создайте некоторые элементы DOM.</target>
        </trans-unit>
        <trans-unit id="a89dfe095377ae76058a179aedfcda485a02b144" translate="yes" xml:space="preserve">
          <source>Creates a new copy of jQuery whose properties and methods can be modified without affecting the original jQuery object.</source>
          <target state="translated">Создает новую копию jQuery,свойства и методы которой могут быть изменены без влияния на исходный объект jQuery.</target>
        </trans-unit>
        <trans-unit id="242c41cf02ec916960efebef4719dc79b811ee17" translate="yes" xml:space="preserve">
          <source>Creates an object containing a set of properties ready to be used in the definition of custom animations.</source>
          <target state="translated">Создает объект,содержащий набор свойств,готовый к использованию в определении пользовательской анимации.</target>
        </trans-unit>
        <trans-unit id="bf2455eb714d72af4b5e9cfbfdcae6f2f107f4ce" translate="yes" xml:space="preserve">
          <source>Creates an object that handles the actual transmission of Ajax data.</source>
          <target state="translated">Создает объект,обрабатывающий фактическую передачу данных Ajax.</target>
        </trans-unit>
        <trans-unit id="c48a88758e3af8353b803fdcf0958d616b01ac70" translate="yes" xml:space="preserve">
          <source>Creating New Elements</source>
          <target state="translated">Создание новых элементов</target>
        </trans-unit>
        <trans-unit id="b1210b542d77e865409c44471fd7ff69d6f6c224" translate="yes" xml:space="preserve">
          <source>DOM element, text node, array of elements and text nodes, HTML string, or jQuery object to insert at the beginning of each element in the set of matched elements.</source>
          <target state="translated">DOM-элемент,текстовый узел,массив элементов и текстовые узлы,HTML-строка или объект jQuery для вставки в начале каждого элемента в набор совпадающих элементов.</target>
        </trans-unit>
        <trans-unit id="c53efa2b9475d1ad88681a1186f29467fc076ab0" translate="yes" xml:space="preserve">
          <source>DOM element, text node, array of elements and text nodes, HTML string, or jQuery object to insert at the end of each element in the set of matched elements.</source>
          <target state="translated">DOM-элемент,текстовый узел,массив элементов и текстовые узлы,HTML-строка или объект jQuery для вставки в конце каждого элемента в набор совпадающих элементов.</target>
        </trans-unit>
        <trans-unit id="e5e429bcc9c2e4a41a3c7a4d96203be6cb273b11" translate="yes" xml:space="preserve">
          <source>Data</source>
          <target state="translated">Data</target>
        </trans-unit>
        <trans-unit id="c18842877f84be9bb3ae10673c4e60242f22c160" translate="yes" xml:space="preserve">
          <source>Data Types</source>
          <target state="translated">Типы данных</target>
        </trans-unit>
        <trans-unit id="a1092396a8cc1f1855ba68c0444266cae73d6bcf" translate="yes" xml:space="preserve">
          <source>Data that is sent to the server is appended to the URL as a query string. If the value of the &lt;code&gt;data&lt;/code&gt; parameter is a plain object, it is converted to a string and url-encoded before it is appended to the URL.</source>
          <target state="translated">Данные, отправляемые на сервер, добавляются к URL-адресу в виде строки запроса. Если значение параметра &lt;code&gt;data&lt;/code&gt; представляет собой простой объект, оно преобразуется в строку и кодируется в URL-адресе перед добавлением к URL-адресу.</target>
        </trans-unit>
        <trans-unit id="ce0f42c3af047598765855258a18262a0d963e82" translate="yes" xml:space="preserve">
          <source>Data to be passed to the handler in &lt;a href=&quot;event.data&quot;&gt;&lt;code&gt;event.data&lt;/code&gt;&lt;/a&gt; when an event is triggered.</source>
          <target state="translated">Данные, передаваемые обработчику в &lt;a href=&quot;event.data&quot;&gt; &lt;code&gt;event.data&lt;/code&gt; &lt;/a&gt; при срабатывании события.</target>
        </trans-unit>
        <trans-unit id="c69908dbae113e4bcc13d12aff11590851402498" translate="yes" xml:space="preserve">
          <source>Data to be passed to the handler in &lt;a href=&quot;event.data&quot;&gt;&lt;code&gt;event.data&lt;/code&gt;&lt;/a&gt; when an event occurs.</source>
          <target state="translated">Данные, которые будут переданы обработчику в &lt;a href=&quot;event.data&quot;&gt; &lt;code&gt;event.data&lt;/code&gt; &lt;/a&gt; при возникновении события.</target>
        </trans-unit>
        <trans-unit id="3ec2ef89b43d005b5462486d724fac8fc882a3ce" translate="yes" xml:space="preserve">
          <source>Data to be sent to the server. If the HTTP method is one that cannot have an entity body, such as GET, the &lt;code&gt;data&lt;/code&gt; is appended to the URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1bc895f248252b8bdb0b807299306e24789be49" translate="yes" xml:space="preserve">
          <source>Data to be sent to the server. It is converted to a query string, if not already a string. It's appended to the url for GET-requests. See &lt;code&gt;processData&lt;/code&gt; option to prevent this automatic processing. Object must be Key/Value pairs. If value is an Array, jQuery serializes multiple values with same key based on the value of the &lt;code&gt;traditional&lt;/code&gt; setting (described below).</source>
          <target state="translated">Данные для отправки на сервер. Он преобразуется в строку запроса, если еще не в строку. Он добавляется к URL-адресу для GET-запросов. См. &lt;code&gt;processData&lt;/code&gt; чтобы предотвратить эту автоматическую обработку. Объект должен состоять из пар ключ / значение. Если value является массивом, jQuery сериализует несколько значений с одним и тем же ключом на основе значения &lt;code&gt;traditional&lt;/code&gt; параметра (описанного ниже).</target>
        </trans-unit>
        <trans-unit id="eb9a4bc1c0c153e4e4b042a79113b815b7e3021d" translate="yes" xml:space="preserve">
          <source>Date</source>
          <target state="translated">Date</target>
        </trans-unit>
        <trans-unit id="0119fff9201c62c8dabfe4c4e2b7011fe6960490" translate="yes" xml:space="preserve">
          <source>Deferred Object</source>
          <target state="translated">Объект с отсрочкой</target>
        </trans-unit>
        <trans-unit id="fa11ca8f9a1a32e2a978982108bb8caec0c06d40" translate="yes" xml:space="preserve">
          <source>Define a $.cachedScript() method that allows fetching a cached script:</source>
          <target state="translated">Определите метод $.cachedScript(),который позволяет получить кэшированный скрипт:</target>
        </trans-unit>
        <trans-unit id="7a56237509f5d263022560a3ce142b4db3225ec8" translate="yes" xml:space="preserve">
          <source>Defines an object with additional attributes to be used in a &quot;script&quot; or &quot;jsonp&quot; request. The key represents the name of the attribute and the value is the attribute's value. If this object is provided it will force the use of a script-tag transport. For example, this can be used to set &lt;code&gt;nonce&lt;/code&gt;, &lt;code&gt;integrity&lt;/code&gt;, or &lt;code&gt;crossorigin&lt;/code&gt; attributes to satisfy Content Security Policy requirements. (version added: &lt;a href=&quot;https://api.jquery.com/category/version/3.4.0/&quot;&gt;3.4.0&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b7a2aec93f7d77bda2756a3c000bd551c136921" translate="yes" xml:space="preserve">
          <source>Defining a complete css hook</source>
          <target state="translated">Определение полного крюка css</target>
        </trans-unit>
        <trans-unit id="4204479fa352ebd62ee5dcf761608ecf949c7277" translate="yes" xml:space="preserve">
          <source>Defining a new css hook is straight-forward. The skeleton template below can serve as a guide to creating your own.</source>
          <target state="translated">Определить новый крюк css просто.Приведенный ниже шаблон скелета может служить руководством по созданию вашего собственного.</target>
        </trans-unit>
        <trans-unit id="f792541f05a843e9076a3f38f7a4727297f6643b" translate="yes" xml:space="preserve">
          <source>Delay the ready event until a custom plugin has loaded.</source>
          <target state="translated">Задержите событие готовности до тех пор,пока не будет загружен пользовательский плагин.</target>
        </trans-unit>
        <trans-unit id="83d36288b5c8873730d74ec2bee7f0a6e4883b2f" translate="yes" xml:space="preserve">
          <source>Demo:</source>
          <target state="translated">Demo:</target>
        </trans-unit>
        <trans-unit id="518457b6231aef2d5c3da50d01d0e280064568c6" translate="yes" xml:space="preserve">
          <source>Demonstrates how to add (or push) elements to an existing collection</source>
          <target state="translated">Демонстрирует,как добавлять (или нажимать)элементы в существующую коллекцию</target>
        </trans-unit>
        <trans-unit id="d654974c9d8133c7ac0206e47d3e386e230465b1" translate="yes" xml:space="preserve">
          <source>Depending on the browser, the Enter key may only cause a form submission if the form has exactly one text field, or only when there is a submit button present. The interface should not rely on a particular behavior for this key unless the issue is forced by observing the keypress event for presses of the Enter key.</source>
          <target state="translated">В зависимости от браузера,клавиша Enter может вызвать отправку формы только в том случае,если форма имеет ровно одно текстовое поле,или только в том случае,если присутствует кнопка отправки.Интерфейс не должен полагаться на определенное поведение этой клавиши,если только проблема не возникает под воздействием нажатия клавиши Enter.</target>
        </trans-unit>
        <trans-unit id="238ddbca469b8bfbf69d4c4f92ed5efc32eea0b5" translate="yes" xml:space="preserve">
          <source>Deprecation Notice</source>
          <target state="translated">Уведомление об истощении</target>
        </trans-unit>
        <trans-unit id="ccb9b06e549c216e39c1718448e1455748b6566b" translate="yes" xml:space="preserve">
          <source>Descendant Selector (&amp;ldquo;ancestor descendant&amp;rdquo;)</source>
          <target state="translated">Селектор потомков (&amp;laquo;потомок-предок&amp;raquo;)</target>
        </trans-unit>
        <trans-unit id="1becc7e12f15401e4745789e794fd996bb1a4332" translate="yes" xml:space="preserve">
          <source>Descendant selector (&amp;quot;ancestor descendant&amp;quot;)</source>
          <target state="translated">Селектор потомков (&amp;laquo;потомок-предок&amp;raquo;)</target>
        </trans-unit>
        <trans-unit id="ed81955c47ba41b8b153e449a8004d377f2197de" translate="yes" xml:space="preserve">
          <source>Describes the nature of the event.</source>
          <target state="translated">Описывает характер события.</target>
        </trans-unit>
        <trans-unit id="16db94d22804c588441d8fe28c60c4961d4e86a0" translate="yes" xml:space="preserve">
          <source>Detach all paragraphs from the DOM</source>
          <target state="translated">Отсоедините все параграфы от МДМ</target>
        </trans-unit>
        <trans-unit id="7c9a7c0610c1bc20abb9c9d07094daa33576a8f8" translate="yes" xml:space="preserve">
          <source>Detail</source>
          <target state="translated">Detail</target>
        </trans-unit>
        <trans-unit id="c9d7797e9cc7364155598a4e04756b36b291108a" translate="yes" xml:space="preserve">
          <source>Determine how many input elements are checked.</source>
          <target state="translated">Определите,сколько входных элементов проверено.</target>
        </trans-unit>
        <trans-unit id="c2a5fe05edddc52a22186859bdf4647eba830e42" translate="yes" xml:space="preserve">
          <source>Determine if an object is a jQuery object</source>
          <target state="translated">Определите,является ли объект объектом jQuery.</target>
        </trans-unit>
        <trans-unit id="1c7f53147c63bde439c8074e1becc169f211e552" translate="yes" xml:space="preserve">
          <source>Determine if the callbacks have already been called at least once.</source>
          <target state="translated">Определите,были ли уже вызваны обратные вызовы хотя бы один раз.</target>
        </trans-unit>
        <trans-unit id="17eebbf7067380871e33a99baf10a28d56740039" translate="yes" xml:space="preserve">
          <source>Determine if the callbacks list has been disabled.</source>
          <target state="translated">Определите,отключен ли список обратных вызовов.</target>
        </trans-unit>
        <trans-unit id="a4511affecfdfab8773e29c8480f1d15ed2b7afe" translate="yes" xml:space="preserve">
          <source>Determine if the callbacks list has been locked.</source>
          <target state="translated">Определите,был ли заблокирован список обратных вызовов.</target>
        </trans-unit>
        <trans-unit id="64058ffc42f7de860fe12aa36bc71383bfc45b68" translate="yes" xml:space="preserve">
          <source>Determine the current state of a Deferred object.</source>
          <target state="translated">Определите текущее состояние объекта &quot;Отсрочка&quot;.</target>
        </trans-unit>
        <trans-unit id="0d13ae6246a36b4c9adf9a6cf0eb9c3017c8c487" translate="yes" xml:space="preserve">
          <source>Determine the event namespace used.</source>
          <target state="translated">Определите используемое пространство имён событий.</target>
        </trans-unit>
        <trans-unit id="18aefed5a9f3014d36185bce173df16b95e91756" translate="yes" xml:space="preserve">
          <source>Determine the exact context used.</source>
          <target state="translated">Определите точный используемый контекст.</target>
        </trans-unit>
        <trans-unit id="3a39909ab4fa3738c3d99794ce1c58609f9cf303" translate="yes" xml:space="preserve">
          <source>Determine the internal JavaScript [[Class]] of an object.</source>
          <target state="translated">Определите внутренний JavaScript [[Класс]]объекта.</target>
        </trans-unit>
        <trans-unit id="9bc00934d104479f61e3921ce23b0cb07dcff669" translate="yes" xml:space="preserve">
          <source>Determine whether a Deferred object has been rejected.</source>
          <target state="translated">Определите,был ли объект &quot;Отсрочка&quot; отклонен.</target>
        </trans-unit>
        <trans-unit id="8414b6b50558b0fbfbada73330b7439bf2eaaca7" translate="yes" xml:space="preserve">
          <source>Determine whether a Deferred object has been resolved.</source>
          <target state="translated">Определите,был ли разрешен объект &quot;Отсрочка&quot;.</target>
        </trans-unit>
        <trans-unit id="701ba83d9edabc1b7b56bf6804861be6766cef17" translate="yes" xml:space="preserve">
          <source>Determine whether an element has any jQuery data associated with it.</source>
          <target state="translated">Определите,есть ли у элемента данные jQuery,связанные с ним.</target>
        </trans-unit>
        <trans-unit id="f9a380197ffd85c57e79c3e649a426b98beb2d26" translate="yes" xml:space="preserve">
          <source>Determine whether any of the matched elements are assigned the given class.</source>
          <target state="translated">Определите,присвоен ли какому-либо из совпадающих элементов данный класс.</target>
        </trans-unit>
        <trans-unit id="24104cef369405db68b0f386d6e7a8f6cb2eef2b" translate="yes" xml:space="preserve">
          <source>Determine whether or not the list has any callbacks attached. If a callback is provided as an argument, determine whether it is in a list.</source>
          <target state="translated">Определите,есть ли в списке какие-либо обратные вызовы.Если в качестве аргумента приводится обратный вызов,определите,есть ли он в списке.</target>
        </trans-unit>
        <trans-unit id="426d80b22ee54a3f059a605131c67f2e91e10208" translate="yes" xml:space="preserve">
          <source>Determine whether the META key was pressed when the event fired.</source>
          <target state="translated">Определите,была ли нажата клавиша META,когда произошло событие.</target>
        </trans-unit>
        <trans-unit id="20de34ed1b14d5c2867bea789d842eda9cdeef16" translate="yes" xml:space="preserve">
          <source>Determine whether the argument is a window.</source>
          <target state="translated">Определите,является ли аргумент окном.</target>
        </trans-unit>
        <trans-unit id="ea44cabb0c6d27737749a51b70c6ad4c645ee888" translate="yes" xml:space="preserve">
          <source>Determine whether the argument is an array.</source>
          <target state="translated">Определите,является ли аргумент массивом.</target>
        </trans-unit>
        <trans-unit id="fbef70d74c06b5dc995dde116391d3b843e91eb8" translate="yes" xml:space="preserve">
          <source>Determines if its argument is callable as a function.</source>
          <target state="translated">Определяет,может ли его аргумент вызываться как функция.</target>
        </trans-unit>
        <trans-unit id="f4764d3d878ad6909ba20d5915f41b163df3662f" translate="yes" xml:space="preserve">
          <source>Determines whether its argument represents a JavaScript number.</source>
          <target state="translated">Определяет,представляет ли его аргумент JavaScript-номер.</target>
        </trans-unit>
        <trans-unit id="1a58adde57e81ae2206fb2ad8565498c72898fe9" translate="yes" xml:space="preserve">
          <source>Different types of response to &lt;code&gt;$.ajax()&lt;/code&gt; call are subjected to different kinds of pre-processing before being passed to the success handler. The type of pre-processing depends by default upon the Content-Type of the response, but can be set explicitly using the &lt;code&gt;dataType&lt;/code&gt; option. If the &lt;code&gt;dataType&lt;/code&gt; option is provided, the Content-Type header of the response will be disregarded.</source>
          <target state="translated">Различные типы ответа на &lt;code&gt;$.ajax()&lt;/code&gt; подвергаются разным видам предварительной обработки перед передачей обработчику успеха. Тип предварительной обработки по умолчанию зависит от Content-Type ответа, но может быть установлен явно с помощью параметра &lt;code&gt;dataType&lt;/code&gt; . Если &lt;code&gt;dataType&lt;/code&gt; параметр dataType , заголовок Content-Type ответа не будет учитываться.</target>
        </trans-unit>
        <trans-unit id="9f4ca9ec08715def4a822d25f75f2d9b79b931c0" translate="yes" xml:space="preserve">
          <source>Dimensions</source>
          <target state="translated">Dimensions</target>
        </trans-unit>
        <trans-unit id="17891b02e577fba95d47eaa8433aeb9aa796bd4c" translate="yes" xml:space="preserve">
          <source>Direct and delegated event handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac92802662c9ff0fd47cd7428202377a983d1ad3" translate="yes" xml:space="preserve">
          <source>Direct and delegated events</source>
          <target state="translated">Прямые и делегированные события</target>
        </trans-unit>
        <trans-unit id="395832e78f5cfc8b5889f675e38b25fbbab95ec9" translate="yes" xml:space="preserve">
          <source>Directional properties (&lt;code&gt;top&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;) have no discernible effect on elements if their &lt;code&gt;position&lt;/code&gt; style property is &lt;code&gt;static&lt;/code&gt;, which it is by default.</source>
          <target state="translated">Направленные свойства ( &lt;code&gt;top&lt;/code&gt; , &lt;code&gt;right&lt;/code&gt; , &lt;code&gt;bottom&lt;/code&gt; , &lt;code&gt;left&lt;/code&gt; ) не оказывают заметного влияния на элементы, если их свойство стиля &lt;code&gt;position&lt;/code&gt; является &lt;code&gt;static&lt;/code&gt; , каковым оно является по умолчанию.</target>
        </trans-unit>
        <trans-unit id="f989a9d276281527d8dfbfd9c9c27bf2fa2cfa6a" translate="yes" xml:space="preserve">
          <source>Disable a callback list from doing anything more.</source>
          <target state="translated">Отключите список обратных звонков,чтобы больше ничего не делать.</target>
        </trans-unit>
        <trans-unit id="70a683df9932ecdccfdaf7652a6e29d5634f4f12" translate="yes" xml:space="preserve">
          <source>Disable all checkboxes on the page.</source>
          <target state="translated">Отключите все флажки на странице.</target>
        </trans-unit>
        <trans-unit id="77ee421adb869ceeb38a9fbb8d726808199c62f8" translate="yes" xml:space="preserve">
          <source>Display a message when the DOM is loaded.</source>
          <target state="translated">Отображение сообщения при загрузке флэш-накопителя.</target>
        </trans-unit>
        <trans-unit id="c1a5ae521fef5a5993e4ff16e0b02cb42b7145c0" translate="yes" xml:space="preserve">
          <source>Display a notice if the Ajax request encounters an error.</source>
          <target state="translated">Отобразить уведомление,если в запросе Ajax обнаруживается ошибка.</target>
        </trans-unit>
        <trans-unit id="9d509086095864e9362886c30bcfcb835929aefe" translate="yes" xml:space="preserve">
          <source>Display a paragraph's text in an alert when it is clicked:</source>
          <target state="translated">Отображение текста абзаца в оповещении при его щелчке:</target>
        </trans-unit>
        <trans-unit id="8b6e7f68a7a9abbdda6869d5911fae9f86b178af" translate="yes" xml:space="preserve">
          <source>Display each paragraph's text in an alert box whenever it is clicked:</source>
          <target state="translated">Отображение текста каждого параграфа в предупреждающем окне при каждом нажатии:</target>
        </trans-unit>
        <trans-unit id="3259e5a21ad932a3aad4b21eef8185d34b713714" translate="yes" xml:space="preserve">
          <source>Display or hide the matched elements by animating their opacity.</source>
          <target state="translated">Отобразить или скрыть соответствующие элементы,анимируя их непрозрачность.</target>
        </trans-unit>
        <trans-unit id="c92837debc05afcddbabe993fb8d83e5ce280544" translate="yes" xml:space="preserve">
          <source>Display or hide the matched elements with a sliding motion.</source>
          <target state="translated">Отобразить или скрыть соответствующие элементы скользящим движением.</target>
        </trans-unit>
        <trans-unit id="1172994cab3b00fc300c4e14baaa355dcbb428dd" translate="yes" xml:space="preserve">
          <source>Display or hide the matched elements.</source>
          <target state="translated">Отобразить или скрыть соответствующие элементы.</target>
        </trans-unit>
        <trans-unit id="e39e1206a301328ffff3e4170af20eedc07ea824" translate="yes" xml:space="preserve">
          <source>Display previous handler's return value</source>
          <target state="translated">Отображение возвращаемого предыдущим обработчиком значения</target>
        </trans-unit>
        <trans-unit id="4c37de284da336b7ee1e8528e29fb64e1edb234a" translate="yes" xml:space="preserve">
          <source>Display the checked attribute and property of a checkbox as it changes.</source>
          <target state="translated">Отображение отмеченного атрибута и свойства флажка по мере его изменения.</target>
        </trans-unit>
        <trans-unit id="1e1c1b89b3f81c5af3ee719da8d6cec69347daa3" translate="yes" xml:space="preserve">
          <source>Display the checked property and attribute of a checkbox as it changes.</source>
          <target state="translated">Отображение отмеченного свойства и атрибута флажка по мере его изменения.</target>
        </trans-unit>
        <trans-unit id="46a63b7b108e6005e6d898aa7360362a2fbec4b6" translate="yes" xml:space="preserve">
          <source>Display the matched elements by fading them to opaque.</source>
          <target state="translated">Отображение соответствующих элементов путем их выцветания до непрозрачности.</target>
        </trans-unit>
        <trans-unit id="e8f590af7589bcb0436f153dbd14e0a202398862" translate="yes" xml:space="preserve">
          <source>Display the matched elements with a sliding motion.</source>
          <target state="translated">Отображение согласованных элементов скользящим движением.</target>
        </trans-unit>
        <trans-unit id="074aecce42f13d464e3b9efcaed0849f0ee6fdb8" translate="yes" xml:space="preserve">
          <source>Display the matched elements.</source>
          <target state="translated">Отобразить соответствующие элементы.</target>
        </trans-unit>
        <trans-unit id="7cac6b913db9f0e2a25c23aeba9f672e1df0807f" translate="yes" xml:space="preserve">
          <source>Display the tag name of the click element.</source>
          <target state="translated">Отображение имени тега элемента клика.</target>
        </trans-unit>
        <trans-unit id="52fd197ff11809d09817c75c2e36544cae64da6d" translate="yes" xml:space="preserve">
          <source>Display the tag name of the root element.</source>
          <target state="translated">Отображение имени тега корневого элемента.</target>
        </trans-unit>
        <trans-unit id="58a4bf40275b0ef072ed3110eab93510cfb15774" translate="yes" xml:space="preserve">
          <source>Display the tag's name on click</source>
          <target state="translated">Отобразить имя тега при щелчке мышью</target>
        </trans-unit>
        <trans-unit id="356fa8d42b9458e6a7695d02efd4db1196ba19f7" translate="yes" xml:space="preserve">
          <source>Display the time since the click handler last executed.</source>
          <target state="translated">Отображение времени с момента последнего выполнения обработчика клика.</target>
        </trans-unit>
        <trans-unit id="529bf8aff8b12ff382e1087f43fe89523b44e22e" translate="yes" xml:space="preserve">
          <source>Division by zero results in Infinity:</source>
          <target state="translated">Деление на ноль приводит к бесконечности:</target>
        </trans-unit>
        <trans-unit id="3bd94f535958d98d63b4fb13547a129c5fc489f0" translate="yes" xml:space="preserve">
          <source>Do not assume that this method appends the elements to the existing collection in the order they are passed to the &lt;code&gt;.add()&lt;/code&gt; method. When all elements are members of the same document, the resulting collection from &lt;code&gt;.add()&lt;/code&gt; will be sorted in document order; that is, in order of each element's appearance in the document. If the collection consists of elements from different documents or ones not in any document, the sort order is undefined. To create a jQuery object with elements in a well-defined order and without sorting overhead, use the &lt;code&gt;$(array_of_DOM_elements)&lt;/code&gt; signature.</source>
          <target state="translated">Не предполагайте, что этот метод добавляет элементы в существующую коллекцию в том порядке, в котором они передаются &lt;code&gt;.add()&lt;/code&gt; . Когда все элементы являются членами одного и того же документа, результирующая коллекция из &lt;code&gt;.add()&lt;/code&gt; будет отсортирована в порядке документа; то есть в порядке появления каждого элемента в документе. Если коллекция состоит из элементов из разных документов или элементов не в каком-либо документе, порядок сортировки не определен. Чтобы создать объект jQuery с элементами в четко определенном порядке и без накладных расходов на сортировку, используйте подпись &lt;code&gt;$(array_of_DOM_elements)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e214b8a29923056887b7edf6635d90dcbb2abe88" translate="yes" xml:space="preserve">
          <source>Document</source>
          <target state="translated">Document</target>
        </trans-unit>
        <trans-unit id="0013a82dbaa69864160083a6044105148c9142cd" translate="yes" xml:space="preserve">
          <source>Document element to serve as the context in which the HTML fragment will be created</source>
          <target state="translated">Элемент документа,служащий контекстом,в котором будет создан HTML-фрагмент</target>
        </trans-unit>
        <trans-unit id="61c9ee0e597598436599068f4dcc7b964819d8b3" translate="yes" xml:space="preserve">
          <source>Dot Notation</source>
          <target state="translated">точечная запись</target>
        </trans-unit>
        <trans-unit id="b4f1c8af05a1a7023c78ad0c95839ee10e40926e" translate="yes" xml:space="preserve">
          <source>Double click to toggle background color.</source>
          <target state="translated">Дважды щелкните,чтобы переключить цвет фона.</target>
        </trans-unit>
        <trans-unit id="cf4e84526e0fd3f8fbf657bce40238a9a0655a7b" translate="yes" xml:space="preserve">
          <source>Due to browser security restrictions, most &quot;Ajax&quot; requests are subject to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Same_origin_policy&quot;&gt;same origin policy&lt;/a&gt;; the request can not successfully retrieve data from a different domain, subdomain, port, or protocol.</source>
          <target state="translated">Из-за ограничений безопасности браузера большинство запросов Ajax подчиняются одной и той &lt;a href=&quot;https://en.wikipedia.org/wiki/Same_origin_policy&quot;&gt;же политике происхождения&lt;/a&gt; ; запрос не может успешно получить данные из другого домена, субдомена, порта или протокола.</target>
        </trans-unit>
        <trans-unit id="b055053777918dfb92dafab7affada539dc43b99" translate="yes" xml:space="preserve">
          <source>Due to the implementation of numbers as double-precision values, the following result is not an error:</source>
          <target state="translated">В связи с реализацией чисел в качестве значений с двойной точностью следующий результат не является ошибкой:</target>
        </trans-unit>
        <trans-unit id="021b0866922f9a3728729c1a2471848543c82513" translate="yes" xml:space="preserve">
          <source>Due to the way browsers interact with plugins and external code, the &lt;code&gt;.data()&lt;/code&gt; method cannot be used on &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt; (unless it's a Flash plugin), &lt;code&gt;&amp;lt;applet&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt; elements.</source>
          <target state="translated">Из-за того, как браузеры взаимодействуют с плагинами и внешним кодом, метод &lt;code&gt;.data()&lt;/code&gt; нельзя использовать с элементами &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt; (если это не плагин Flash), &lt;code&gt;&amp;lt;applet&amp;gt;&lt;/code&gt; или &lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1370004da76fa4f3b7a5180fd5436065ef4c7d5b" translate="yes" xml:space="preserve">
          <source>Duration</source>
          <target state="translated">Duration</target>
        </trans-unit>
        <trans-unit id="64d473176641c12a702ffcdf90c0722e0e8d88c6" translate="yes" xml:space="preserve">
          <source>Durations are given in milliseconds; higher values indicate slower animations, not faster ones. The default duration is &lt;code&gt;400&lt;/code&gt; milliseconds. The strings &lt;code&gt;'fast'&lt;/code&gt; and &lt;code&gt;'slow'&lt;/code&gt; can be supplied to indicate durations of &lt;code&gt;200&lt;/code&gt; and &lt;code&gt;600&lt;/code&gt; milliseconds, respectively.</source>
          <target state="translated">Продолжительность указывается в миллисекундах; более высокие значения указывают на более медленную анимацию, а не на более быструю. По умолчанию продолжительность составляет &lt;code&gt;400&lt;/code&gt; миллисекунд. Строки &lt;code&gt;'fast'&lt;/code&gt; и &lt;code&gt;'slow'&lt;/code&gt; могут указывать продолжительность &lt;code&gt;200&lt;/code&gt; и &lt;code&gt;600&lt;/code&gt; миллисекунд соответственно.</target>
        </trans-unit>
        <trans-unit id="3d74fd1efa8d5d7a4dfe90136bd510365782e3bd" translate="yes" xml:space="preserve">
          <source>Durations are given in milliseconds; higher values indicate slower animations, not faster ones. The strings &lt;code&gt;'fast'&lt;/code&gt; and &lt;code&gt;'slow'&lt;/code&gt; can be supplied to indicate durations of 200 and 600 milliseconds, respectively.</source>
          <target state="translated">Продолжительность указывается в миллисекундах; более высокие значения указывают на более медленную анимацию, а не на более быструю. Строки &lt;code&gt;'fast'&lt;/code&gt; и &lt;code&gt;'slow'&lt;/code&gt; могут указывать продолжительность 200 и 600 миллисекунд соответственно.</target>
        </trans-unit>
        <trans-unit id="008d363a00af1c16f4cec47c449f6603f318ea4e" translate="yes" xml:space="preserve">
          <source>Durations are given in milliseconds; higher values indicate slower animations, not faster ones. The strings &lt;code&gt;'fast'&lt;/code&gt; and &lt;code&gt;'slow'&lt;/code&gt; can be supplied to indicate durations of &lt;code&gt;200&lt;/code&gt; and &lt;code&gt;600&lt;/code&gt; milliseconds, respectively.</source>
          <target state="translated">Продолжительность указывается в миллисекундах; более высокие значения указывают на более медленную анимацию, а не на более быструю. Строки &lt;code&gt;'fast'&lt;/code&gt; и &lt;code&gt;'slow'&lt;/code&gt; могут указывать продолжительность &lt;code&gt;200&lt;/code&gt; и &lt;code&gt;600&lt;/code&gt; миллисекунд соответственно.</target>
        </trans-unit>
        <trans-unit id="81ee7d2af4a48e334465209074c48f938a3b7c19" translate="yes" xml:space="preserve">
          <source>Durations are given in milliseconds; higher values indicate slower animations, not faster ones. The strings &lt;code&gt;'fast'&lt;/code&gt; and &lt;code&gt;'slow'&lt;/code&gt; can be supplied to indicate durations of &lt;code&gt;200&lt;/code&gt; and &lt;code&gt;600&lt;/code&gt; milliseconds, respectively. If any other string is supplied, or if the &lt;code&gt;duration&lt;/code&gt; parameter is omitted, the default duration of &lt;code&gt;400&lt;/code&gt; milliseconds is used.</source>
          <target state="translated">Продолжительность указывается в миллисекундах; более высокие значения указывают на более медленную анимацию, а не на более быструю. Строки &lt;code&gt;'fast'&lt;/code&gt; и &lt;code&gt;'slow'&lt;/code&gt; могут указывать продолжительность &lt;code&gt;200&lt;/code&gt; и &lt;code&gt;600&lt;/code&gt; миллисекунд соответственно. Если предоставляется любая другая строка или если параметр &lt;code&gt;duration&lt;/code&gt; опущен, используется длительность по умолчанию &lt;code&gt;400&lt;/code&gt; миллисекунд.</target>
        </trans-unit>
        <trans-unit id="abba1fc0ac0081d2cf925d503d7fb679ed3b3757" translate="yes" xml:space="preserve">
          <source>Durations are given in milliseconds; higher values indicate slower animations, not faster ones. The strings &lt;code&gt;'fast'&lt;/code&gt; and &lt;code&gt;'slow'&lt;/code&gt; can be supplied to indicate durations of &lt;code&gt;200&lt;/code&gt; and &lt;code&gt;600&lt;/code&gt; milliseconds, respectively. If any other string is supplied, the default duration of &lt;code&gt;400&lt;/code&gt; milliseconds is used. Unlike the other effect methods, &lt;code&gt;.fadeTo()&lt;/code&gt; requires that &lt;code&gt;duration&lt;/code&gt; be explicitly specified.</source>
          <target state="translated">Продолжительность указывается в миллисекундах; более высокие значения указывают на более медленную анимацию, а не на более быструю. Строки &lt;code&gt;'fast'&lt;/code&gt; и &lt;code&gt;'slow'&lt;/code&gt; могут указывать продолжительность &lt;code&gt;200&lt;/code&gt; и &lt;code&gt;600&lt;/code&gt; миллисекунд соответственно. Если предоставляется любая другая строка, используется длительность по умолчанию &lt;code&gt;400&lt;/code&gt; миллисекунд. В отличие от других методов эффекта, &lt;code&gt;.fadeTo()&lt;/code&gt; требует явного указания &lt;code&gt;duration&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="34357aa5e4b4df343d5cf08ca3d750003cd528f7" translate="yes" xml:space="preserve">
          <source>During animations that hide an element, the element is considered visible until the end of the animation. During animations to show an element, the element is considered visible at the start at the animation.</source>
          <target state="translated">Во время анимации,которая скрывает элемент,элемент считается видимым до конца анимации.Во время анимации,показывающей элемент,элемент считается видимым в начале анимации.</target>
        </trans-unit>
        <trans-unit id="dc0830943459f7209f3ca3ec6563c437b7d252bd" translate="yes" xml:space="preserve">
          <source>During animations to show an element, the element is considered to be visible at the start of the animation.</source>
          <target state="translated">Во время анимации,чтобы показать элемент,элемент считается видимым в начале анимации.</target>
        </trans-unit>
        <trans-unit id="c6c13f597a3a996ac7c7547aa32e021db94af0a2" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;&amp;lt;div class=&quot;inner&quot;&amp;gt;&lt;/code&gt; element gets this new content:</source>
          <target state="translated">Каждый элемент &lt;code&gt;&amp;lt;div class=&quot;inner&quot;&amp;gt;&lt;/code&gt; получает новое содержимое:</target>
        </trans-unit>
        <trans-unit id="e5a4ea595088e957d2a4f0b2cc2d4090045459cf" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;id&lt;/code&gt; value must be used only once within a document. If more than one element has been assigned the same ID, queries that use that ID will only select the first matched element in the DOM. This behavior should not be relied on, however; a document with more than one element using the same ID is invalid.</source>
          <target state="translated">Каждое значение &lt;code&gt;id&lt;/code&gt; должно использоваться в документе только один раз. Если более чем одному элементу был назначен один и тот же идентификатор, запросы, использующие этот идентификатор, выберут только первый совпавший элемент в DOM. Однако на такое поведение нельзя полагаться; документ с более чем одним элементом, использующим один и тот же идентификатор, недействителен.</target>
        </trans-unit>
        <trans-unit id="bfc909a8ddc269c4f017f9008ede790f5833edcf" translate="yes" xml:space="preserve">
          <source>Each inner &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element gets this new content:</source>
          <target state="translated">Каждый внутренний элемент &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; получает новое содержимое:</target>
        </trans-unit>
        <trans-unit id="f22d388a6cd592a8d9e23b5ceddf3a6cc2e9909a" translate="yes" xml:space="preserve">
          <source>Each jQuery object also masquerades as an array, so we can use the array dereferencing operator to get at the list item instead:</source>
          <target state="translated">Каждый объект jQuery также маскируется под массив,поэтому мы можем использовать оператор разыменования массива для получения элемента списка:</target>
        </trans-unit>
        <trans-unit id="6ebe40fa1ff9c6f2935fe7eb0bd75be40a3c33a0" translate="yes" xml:space="preserve">
          <source>Each jQuery object created with the jQuery() function contains a number of properties alongside its methods. These properties allow us to inspect various attributes of the object.</source>
          <target state="translated">Каждый объект jQuery,созданный с помощью функции jQuery(),содержит наряду со своими методами ряд свойств.Эти свойства позволяют просматривать различные атрибуты объекта.</target>
        </trans-unit>
        <trans-unit id="0c8709a43f69a8c12f45e58b4bcdf5a46f1ca867" translate="yes" xml:space="preserve">
          <source>Easing</source>
          <target state="translated">Easing</target>
        </trans-unit>
        <trans-unit id="8f25a859269ca51039632dd6bba28fb061cfb8d4" translate="yes" xml:space="preserve">
          <source>Effects</source>
          <target state="translated">Effects</target>
        </trans-unit>
        <trans-unit id="1ded3f185936ef26584dc91cab7683c2844be148" translate="yes" xml:space="preserve">
          <source>Either a true JavaScript Array or a JavaScript Object that contains a nonnegative integer &lt;code&gt;length&lt;/code&gt; property and index properties from &lt;code&gt;0&lt;/code&gt; up to &lt;code&gt;length - 1&lt;/code&gt;. This latter case includes array-like objects commonly encountered in web-based code such as the &lt;code&gt;arguments&lt;/code&gt; object and the &lt;code&gt;NodeList&lt;/code&gt; object returned by many DOM methods.</source>
          <target state="translated">Либо настоящий массив JavaScript, либо объект JavaScript, который содержит неотрицательное целочисленное свойство &lt;code&gt;length&lt;/code&gt; и свойства индекса от &lt;code&gt;0&lt;/code&gt; до &lt;code&gt;length - 1&lt;/code&gt; . Этот последний случай включает объекты типа массивов, которые обычно встречаются в веб-коде, такие как объект &lt;code&gt;arguments&lt;/code&gt; и объект &lt;code&gt;NodeList&lt;/code&gt; , возвращаемый многими методами DOM.</target>
        </trans-unit>
        <trans-unit id="49fa9fd831096c82ab950bc7aa0a0a7ef8a10998" translate="yes" xml:space="preserve">
          <source>Element</source>
          <target state="translated">Element</target>
        </trans-unit>
        <trans-unit id="096c6c2bd743f3326c17f5eedb69150184e4ae4f" translate="yes" xml:space="preserve">
          <source>Element Selector (&amp;ldquo;element&amp;rdquo;)</source>
          <target state="translated">Селектор элемента (&amp;laquo;элемент&amp;raquo;)</target>
        </trans-unit>
        <trans-unit id="809498eb4107969f327af6a9326868df136899c7" translate="yes" xml:space="preserve">
          <source>Element selector (&amp;quot;element&amp;quot;)</source>
          <target state="translated">Селектор элемента (&amp;laquo;элемент&amp;raquo;)</target>
        </trans-unit>
        <trans-unit id="fcbf5f2af2996cc0ebae8a3e9f221123b97b5bd8" translate="yes" xml:space="preserve">
          <source>Elements are considered visible if they consume space in the document. Visible elements have a width or height that is greater than zero.</source>
          <target state="translated">Элементы считаются видимыми,если они занимают место в документе.Видимые элементы имеют ширину или высоту больше нуля.</target>
        </trans-unit>
        <trans-unit id="1630e0ee299d1543426b53c8994a8b18358e0f35" translate="yes" xml:space="preserve">
          <source>Elements can be considered hidden for several reasons:</source>
          <target state="translated">Элементы можно считать скрытыми по нескольким причинам:</target>
        </trans-unit>
        <trans-unit id="80e8444d405f10a4612e43f73896d5d6c3991796" translate="yes" xml:space="preserve">
          <source>Elements may have more than one class assigned to them. In HTML, this is represented by separating the class names with a space:</source>
          <target state="translated">Элементам может быть присвоено более одного класса.В HTML это представлено путем разделения имен классов пробелом:</target>
        </trans-unit>
        <trans-unit id="58a0223bc577a28bb9a708667bd5fa6a7609d9f1" translate="yes" xml:space="preserve">
          <source>Elements that are not in a document are considered hidden; jQuery does not have a way to know if they will be visible when appended to a document since it depends on the applicable styles.</source>
          <target state="translated">Элементы,отсутствующие в документе,считаются скрытыми;jQuery не имеет возможности узнать,будут ли они видны при добавлении к документу,так как это зависит от применяемых стилей.</target>
        </trans-unit>
        <trans-unit id="541c4c3bc1ea3fee4a70094ff61cce347c795384" translate="yes" xml:space="preserve">
          <source>Elements that are not in a document are not considered to be visible; jQuery does not have a way to know if they will be visible when appended to a document since it depends on the applicable styles.</source>
          <target state="translated">Элементы,отсутствующие в документе,не считаются видимыми;jQuery не имеет способа узнать,будут ли они видны при добавлении к документу,поскольку это зависит от применимых стилей.</target>
        </trans-unit>
        <trans-unit id="7509b7469fe800b4d772781c7f3d004ebcf513b5" translate="yes" xml:space="preserve">
          <source>Elements with &lt;code&gt;visibility: hidden&lt;/code&gt; or &lt;code&gt;opacity: 0&lt;/code&gt; are considered to be visible, since they still consume space in the layout. During animations that hide an element, the element is considered to be visible until the end of the animation.</source>
          <target state="translated">Элементы с &lt;code&gt;visibility: hidden&lt;/code&gt; или &lt;code&gt;opacity: 0&lt;/code&gt; считаются видимыми, поскольку они по-прежнему занимают место в макете. Во время анимации, скрывающей элемент, этот элемент считается видимым до конца анимации.</target>
        </trans-unit>
        <trans-unit id="06ae90df93265a3200d0a5a71d8539853b0c008f" translate="yes" xml:space="preserve">
          <source>Elements with &lt;code&gt;visibility: hidden&lt;/code&gt; or &lt;code&gt;opacity: 0&lt;/code&gt; are considered visible, since they still consume space in the layout.</source>
          <target state="translated">Элементы с &lt;code&gt;visibility: hidden&lt;/code&gt; или &lt;code&gt;opacity: 0&lt;/code&gt; считаются видимыми, поскольку они по-прежнему занимают место в макете.</target>
        </trans-unit>
        <trans-unit id="9183367973c4ee7d5b918805da748918a451fadf" translate="yes" xml:space="preserve">
          <source>Elements with focus are usually highlighted in some way by the browser, for example with a dotted line surrounding the element. The focus is used to determine which element is the first to receive keyboard-related events.</source>
          <target state="translated">Элементы с фокусом обычно выделяются каким-то образом браузером,например,пунктирной линией вокруг элемента.Фокус используется для определения того,какой элемент первым получает события,связанные с клавиатурой.</target>
        </trans-unit>
        <trans-unit id="f548aabbe49ed0d61a96c32053b670d671512199" translate="yes" xml:space="preserve">
          <source>Empty the queue.</source>
          <target state="translated">Опустошите очередь.</target>
        </trans-unit>
        <trans-unit id="49c23597ab61bc4032f80d4037cddf79fb14f9de" translate="yes" xml:space="preserve">
          <source>Encode a set of form elements as a string for submission.</source>
          <target state="translated">Кодируйте набор элементов формы в виде строки для отправки.</target>
        </trans-unit>
        <trans-unit id="abc972bfc17bd3bd6d5cd104914a36578e6378e7" translate="yes" xml:space="preserve">
          <source>Encode a set of form elements as an array of names and values.</source>
          <target state="translated">Кодируйте набор элементов формы в виде массива имен и значений.</target>
        </trans-unit>
        <trans-unit id="1daee83bfa9971b8d1e0310c7471576ad5b06a6f" translate="yes" xml:space="preserve">
          <source>End the most recent filtering operation in the current chain and return the set of matched elements to its previous state.</source>
          <target state="translated">Завершить самую последнюю операцию фильтрации в текущей цепочке и вернуть набор совмещенных элементов в их прежнее состояние.</target>
        </trans-unit>
        <trans-unit id="eb68349ad2b6e0eb0dd22ced03040fcc45169789" translate="yes" xml:space="preserve">
          <source>Enforce the context of the function using the &quot;context, function name&quot; signature. Unbind the handler after first click.</source>
          <target state="translated">Использовать контекст функции с помощью подписи &quot;контекст,имя функции&quot;.Развязать обработчик после первого клика.</target>
        </trans-unit>
        <trans-unit id="9b375592faedfb09a03bac41cda2b523d08cfead" translate="yes" xml:space="preserve">
          <source>Enhanced Callbacks with jQuery Deferred</source>
          <target state="translated">Улучшенные обратные вызовы с отложенным jQuery</target>
        </trans-unit>
        <trans-unit id="2b9eceb7a86a9f577ef80586c5c1d7fde9ff493d" translate="yes" xml:space="preserve">
          <source>Enter</source>
          <target state="translated">Enter</target>
        </trans-unit>
        <trans-unit id="878f8c8263a3ffed5732e5e0c69cabe2e66f96c9" translate="yes" xml:space="preserve">
          <source>Equalize the heights of the divs.</source>
          <target state="translated">Уравнять высоту ныряльщиков.</target>
        </trans-unit>
        <trans-unit id="7f2f6a15cf8da2b27e5a4af47b58e7ad71c0b3d9" translate="yes" xml:space="preserve">
          <source>Error</source>
          <target state="translated">Error</target>
        </trans-unit>
        <trans-unit id="1f7a4f9e2f70d0b81cffc15ab30fd344aeb34fb3" translate="yes" xml:space="preserve">
          <source>Esc</source>
          <target state="translated">Esc</target>
        </trans-unit>
        <trans-unit id="01ca167787a3acb7221ffc3742480aedb89a7bc9" translate="yes" xml:space="preserve">
          <source>Escape an ID containing a hash.</source>
          <target state="translated">Сбежать с удостоверением личности,содержащим гашиш.</target>
        </trans-unit>
        <trans-unit id="0f0648e349b36f039a081e0b25e850253d8ef860" translate="yes" xml:space="preserve">
          <source>Escapes any character that has a special meaning in a CSS selector.</source>
          <target state="translated">Избавляет от любого персонажа,имеющего особое значение в селекторе CSS.</target>
        </trans-unit>
        <trans-unit id="0d250a2d3b164ecd02335ce23550e0a93ecb207c" translate="yes" xml:space="preserve">
          <source>Even though the two functions are identical in content, they are created separately and so JavaScript is free to keep them as distinct function objects. To unbind a particular handler, we need a reference to that function and not a different one that happens to do the same thing.</source>
          <target state="translated">Несмотря на то,что эти две функции идентичны по содержанию,они создаются по отдельности,и поэтому JavaScript может хранить их как отдельные функциональные объекты.Чтобы развязать конкретного обработчика,нам нужна ссылка на эту функцию,а не на другую,которая делает одно и то же.</target>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="4c874625e9b4c4789838bc2475c5fa96b872d071" translate="yes" xml:space="preserve">
          <source>Event Handlers</source>
          <target state="translated">Организаторы мероприятий</target>
        </trans-unit>
        <trans-unit id="de0bce9183cad7958b9375f9e0a045c66918463c" translate="yes" xml:space="preserve">
          <source>Event handlers attached with &lt;code&gt;.bind()&lt;/code&gt; can be removed with &lt;code&gt;.unbind()&lt;/code&gt;. In the simplest case, with no arguments, &lt;code&gt;.unbind()&lt;/code&gt; removes all handlers attached to the elements:</source>
          <target state="translated">Обработчики событий, прикрепленные с помощью &lt;code&gt;.bind()&lt;/code&gt; можно удалить с помощью &lt;code&gt;.unbind()&lt;/code&gt; . В простейшем случае без аргументов &lt;code&gt;.unbind()&lt;/code&gt; удаляет все обработчики, прикрепленные к элементам:</target>
        </trans-unit>
        <trans-unit id="a7ed6bc170ed4724f9e1058fd487bc3c98e46f34" translate="yes" xml:space="preserve">
          <source>Event handlers can then be bound to the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">Затем обработчики событий можно привязать к &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5daeceef4e01c7e8cb3a3980ef386900d46193ae" translate="yes" xml:space="preserve">
          <source>Event handlers will trigger once per element per event type</source>
          <target state="translated">Обработчики событий будут срабатывать один раз на элемент на каждый тип события.</target>
        </trans-unit>
        <trans-unit id="945a16bd7e9adb70d03c8737d9d2405169f44fde" translate="yes" xml:space="preserve">
          <source>Event names and namespaces</source>
          <target state="translated">Названия и пространства имен мероприятий</target>
        </trans-unit>
        <trans-unit id="00de94e75e05f6bb61c1d5f2a640e307e4e24561" translate="yes" xml:space="preserve">
          <source>Event performance</source>
          <target state="translated">Проведение мероприятий</target>
        </trans-unit>
        <trans-unit id="c5497bca58468ae64aed6c0fd921109217988db3" translate="yes" xml:space="preserve">
          <source>Events</source>
          <target state="translated">Events</target>
        </trans-unit>
        <trans-unit id="9ec281effc6638a1cc98e81e0e23ffa851bc12b2" translate="yes" xml:space="preserve">
          <source>Events triggered with &lt;code&gt;.triggerHandler()&lt;/code&gt; do not bubble up the DOM hierarchy; if they are not handled by the target element directly, they do nothing.</source>
          <target state="translated">События, запускаемые с помощью &lt;code&gt;.triggerHandler()&lt;/code&gt; , не всплывают в иерархии DOM; если они не обрабатываются целевым элементом напрямую, они ничего не делают.</target>
        </trans-unit>
        <trans-unit id="da6fa8e41ec78850d6269bdceec6ddb95123045e" translate="yes" xml:space="preserve">
          <source>Every attempt is made to convert the attribute's string value to a JavaScript value (this includes booleans, numbers, objects, arrays, and null). A string is only converted to a number if doing so doesn't change its representation (for example, the string &quot;100&quot; is converted to the number 100, but &quot;1E02&quot; and &quot;100.000&quot; are left as strings because their numeric value of 100 serializes to &quot;100&quot;). When a string starts with '{' or '[', then &lt;code&gt;jQuery.parseJSON&lt;/code&gt; is used to parse it; it must follow &lt;a href=&quot;https://en.wikipedia.org/wiki/JSON#Data_types.2C_syntax_and_example&quot;&gt;valid JSON syntax&lt;/a&gt;&lt;em&gt;including quoted property names&lt;/em&gt;. A string not parseable as a JavaScript value is not converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640314bca3063f84b3530a00dd33f7833d439735" translate="yes" xml:space="preserve">
          <source>Every attempt is made to convert the string to a JavaScript value (this includes booleans, numbers, objects, arrays, and null). A value is only converted to a number if doing so doesn't change the value's representation. For example, &quot;1E02&quot; and &quot;100.000&quot; are equivalent as numbers (numeric value 100) but converting them would alter their representation so they are left as strings. The string value &quot;100&quot; is converted to the number 100.</source>
          <target state="translated">Каждая попытка преобразования строки в JavaScript-значение (сюда входят булевы,числа,объекты,массивы и ноль).Значение преобразуется в число только в том случае,если это не изменяет представление значения.Например,&quot;1E02&quot; и &quot;100.000&quot; эквивалентны как числа (числовое значение 100),но их преобразование изменит их представление таким образом,что они останутся в виде строк.Строковое значение &quot;100&quot; преобразуется в число 100.</target>
        </trans-unit>
        <trans-unit id="ac29b160be22a3f3eb357685f7f736ecccc5dd66" translate="yes" xml:space="preserve">
          <source>Every element can have one or more queues of functions attached to it by jQuery. In most applications, only one queue (called &lt;code&gt;fx&lt;/code&gt;) is used. Queues allow a sequence of actions to be called on an element asynchronously, without halting program execution.</source>
          <target state="translated">Каждый элемент может иметь одну или несколько очередей функций, прикрепленных к нему с помощью jQuery. В большинстве приложений используется только одна очередь (называемая &lt;code&gt;fx&lt;/code&gt; ). Очереди позволяют асинхронно вызывать последовательность действий над элементом без остановки выполнения программы.</target>
        </trans-unit>
        <trans-unit id="717c3dfb715b4f64def2db768fd140900f0843f8" translate="yes" xml:space="preserve">
          <source>Every element can have one to many queues of functions attached to it by jQuery. In most applications, only one queue (called &lt;code&gt;fx&lt;/code&gt;) is used. Queues allow a sequence of actions to be called on an element asynchronously, without halting program execution. The typical example of this is calling multiple animation methods on an element. For example:</source>
          <target state="translated">Каждый элемент может иметь от одной до многих очередей функций, прикрепленных к нему с помощью jQuery. В большинстве приложений используется только одна очередь (называемая &lt;code&gt;fx&lt;/code&gt; ). Очереди позволяют асинхронно вызывать последовательность действий над элементом без остановки выполнения программы. Типичный пример этого - вызов нескольких методов анимации для элемента. Например:</target>
        </trans-unit>
        <trans-unit id="8a50f8fe9c6688afe321799ea57d40fa3f778d0b" translate="yes" xml:space="preserve">
          <source>Everything else returns &quot;object&quot; as its type.</source>
          <target state="translated">Все остальное возвращает &quot;объект&quot; в качестве своего типа.</target>
        </trans-unit>
        <trans-unit id="5b72e8af9443677fe87a74765bb33b789f7898bf" translate="yes" xml:space="preserve">
          <source>Everything in JavaScript is an object, though some are more objective (haha). The easiest way to create an object is the object literal:</source>
          <target state="translated">Все в JavaScript является объектом,хотя некоторые из них более объективны (хаха).Самый простой способ создать объект-объект буквальный:</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="2f6c6de6cd89442f2ca00cfa1e3579423318c49f" translate="yes" xml:space="preserve">
          <source>Execute a function after two Ajax requests are successful. (See the jQuery.ajax() documentation for a complete description of success and error cases for an ajax request).</source>
          <target state="translated">Выполните функцию после того,как два Ajax-запроса будут успешно выполнены.(См.документацию jQuery.ajax()для полного описания случаев успеха и ошибок в запросе на Ajax).</target>
        </trans-unit>
        <trans-unit id="e57c19e3f8c803b67c3b88a89e442a30a30da945" translate="yes" xml:space="preserve">
          <source>Execute a script in the global context.</source>
          <target state="translated">Выполните сценарий в глобальном контексте.</target>
        </trans-unit>
        <trans-unit id="d8319394c609adb35e6a9ad6524f3786eddfa311" translate="yes" xml:space="preserve">
          <source>Execute a script with a nonce value on a site with Content Security Policy enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c441fff6106a9c6af9a365d9d5bc8d04e16a8f19" translate="yes" xml:space="preserve">
          <source>Execute all handlers and behaviors attached to the matched elements for the given event type.</source>
          <target state="translated">Выполнять все обработчики и поведение,прикрепленные к соответствующим элементам для данного типа мероприятия.</target>
        </trans-unit>
        <trans-unit id="a4b8861864b324da929b0a255c51560728a3e333" translate="yes" xml:space="preserve">
          <source>Execute all handlers attached to an element for an event.</source>
          <target state="translated">Выполните все обработчики,прикрепленные к элементу для события.</target>
        </trans-unit>
        <trans-unit id="e789f7eb99dff3c5f91d3fb5d876eb2d33bf77de" translate="yes" xml:space="preserve">
          <source>Execute some JavaScript code globally.</source>
          <target state="translated">Выполнить некоторый код JavaScript глобально.</target>
        </trans-unit>
        <trans-unit id="64695d2aa5592835b2154fbeed3ce5e9af494067" translate="yes" xml:space="preserve">
          <source>Execute the function &lt;code&gt;myFunc&lt;/code&gt; when both ajax requests are successful, or &lt;code&gt;myFailure&lt;/code&gt; if either one has an error.</source>
          <target state="translated">Выполните функцию &lt;code&gt;myFunc&lt;/code&gt; , если оба запроса ajax успешны, или &lt;code&gt;myFailure&lt;/code&gt; , если в одном из них есть ошибка.</target>
        </trans-unit>
        <trans-unit id="9d3f1eef8991eadc7d82a339225e174734a7f42e" translate="yes" xml:space="preserve">
          <source>Execute the function when the DOM is ready to be used.</source>
          <target state="translated">Выполните функцию,когда флэш-накопитель будет готов к использованию.</target>
        </trans-unit>
        <trans-unit id="675673cc96383dc70fb28b15c507cc2536091b40" translate="yes" xml:space="preserve">
          <source>Execute the next function on the queue for the matched element.</source>
          <target state="translated">Выполните следующую функцию в очереди для соответствующего элемента.</target>
        </trans-unit>
        <trans-unit id="1bb04e151e50f0aed52de60038f5e8381c973230" translate="yes" xml:space="preserve">
          <source>Execute the next function on the queue for the matched elements.</source>
          <target state="translated">Выполните следующую функцию в очереди на совпадающие элементы.</target>
        </trans-unit>
        <trans-unit id="2511e58f48414691bc9f687c67710e9be811b5c8" translate="yes" xml:space="preserve">
          <source>Extending Ajax</source>
          <target state="translated">Расширяющий Аякс</target>
        </trans-unit>
        <trans-unit id="83d0a7049df830bf35a5faae871b3772df906b23" translate="yes" xml:space="preserve">
          <source>Fade div to a random opacity on each click, completing the animation within 200 milliseconds.</source>
          <target state="translated">Fade div к случайной непрозрачности на каждый клик,завершив анимацию в течение 200 миллисекунд.</target>
        </trans-unit>
        <trans-unit id="91b047699ea90a9efe0c2ff951cc2d463c611806" translate="yes" xml:space="preserve">
          <source>Fades a red block in over the text. Once the animation is done, it quickly fades in more text on top.</source>
          <target state="translated">Затухает красный блок над текстом.После завершения анимации он быстро исчезает в большем количестве текста сверху.</target>
        </trans-unit>
        <trans-unit id="3fd069b222993f3d6413a7bd4d50326e9ce58614" translate="yes" xml:space="preserve">
          <source>Fades first paragraph in or out, completing the animation within 600 milliseconds and using a linear easing. Fades last paragraph in or out for 200 milliseconds, inserting a &quot;finished&quot; message upon completion.</source>
          <target state="translated">Уменьшает первый абзац в или из,завершая анимацию в течение 600 миллисекунд и используя линейное ослабление.Уменьшает последний абзац на 200 миллисекунд,вставляя после завершения &quot;готовое&quot; сообщение.</target>
        </trans-unit>
        <trans-unit id="d37071a7ad214c2515c89f7d0cfdcaa2f0e62d89" translate="yes" xml:space="preserve">
          <source>Fades out spans in one section that you click on.</source>
          <target state="translated">Затухает в одном разделе,на который вы нажимаете.</target>
        </trans-unit>
        <trans-unit id="1516858cf3727c244f734ce0159d4765f20f0c01" translate="yes" xml:space="preserve">
          <source>Fades out two divs, one with a &quot;linear&quot; easing and one with the default, &quot;swing,&quot; easing.</source>
          <target state="translated">Затухает два дива,один с &quot;линейным&quot; ослаблением,а другой со значением по умолчанию &quot;качание&quot;,ослабление.</target>
        </trans-unit>
        <trans-unit id="43c791bb6c7ee02b7ec088f38ec212aa627fd1e4" translate="yes" xml:space="preserve">
          <source>Feature Testing</source>
          <target state="translated">Испытание функции</target>
        </trans-unit>
        <trans-unit id="fadd08dd4eeaa9372e9bebda1ac77cf73507aa82" translate="yes" xml:space="preserve">
          <source>Figure 1 - Illustration of the &lt;code&gt;fadeIn()&lt;/code&gt; effect</source>
          <target state="translated">Рисунок 1 - Иллюстрация эффекта &lt;code&gt;fadeIn()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="87377a8544d89c35a0b6f654b494e0261cbd9b27" translate="yes" xml:space="preserve">
          <source>Figure 1 - Illustration of the &lt;code&gt;fadeOut()&lt;/code&gt; effect</source>
          <target state="translated">Рисунок 1 - Иллюстрация эффекта &lt;code&gt;fadeOut()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="da6e24e5e738e6df11fbb7480e1789d2f82af8da" translate="yes" xml:space="preserve">
          <source>Figure 1 - Illustration of the &lt;code&gt;fadeTo()&lt;/code&gt; effect</source>
          <target state="translated">Рисунок 1 - Иллюстрация эффекта &lt;code&gt;fadeTo()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2051801701c31e155939f3099d125b9287a4c974" translate="yes" xml:space="preserve">
          <source>Figure 1 - Illustration of the &lt;code&gt;hide()&lt;/code&gt; effect</source>
          <target state="translated">Рисунок 1 - Иллюстрация эффекта &lt;code&gt;hide()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d832023781bd49f3b751e31035ade140352e5008" translate="yes" xml:space="preserve">
          <source>Figure 1 - Illustration of the &lt;code&gt;show()&lt;/code&gt; effect</source>
          <target state="translated">Рисунок 1 - Иллюстрация эффекта &lt;code&gt;show()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d1d1583c86f13c1d0ea5500c0eea531f32c9059c" translate="yes" xml:space="preserve">
          <source>Figure 1 - Illustration of the &lt;code&gt;slideDown()&lt;/code&gt; effect</source>
          <target state="translated">Рисунок 1 - Иллюстрация эффекта &lt;code&gt;slideDown()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="38c9dc7e072f4bad5771cc639cde2fefd66bef2c" translate="yes" xml:space="preserve">
          <source>Figure 1 - Illustration of the &lt;code&gt;slideToggle()&lt;/code&gt; effect when hiding the image</source>
          <target state="translated">Рисунок 1 - Иллюстрация &lt;code&gt;slideToggle()&lt;/code&gt; при скрытии изображения</target>
        </trans-unit>
        <trans-unit id="e8f0c37099bd63d263c5b71d61d776bc82e98cde" translate="yes" xml:space="preserve">
          <source>Figure 1 - Illustration of the &lt;code&gt;slideUp()&lt;/code&gt; effect</source>
          <target state="translated">Рисунок 1 - Иллюстрация эффекта &lt;code&gt;slideUp()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c7869d37cf246f526c11e9fadbc5cc3ff9328e14" translate="yes" xml:space="preserve">
          <source>Figure 1 - Illustration of the &lt;code&gt;toggle()&lt;/code&gt; effect when hiding the image</source>
          <target state="translated">Рисунок 1 - Иллюстрация эффекта &lt;code&gt;toggle()&lt;/code&gt; при скрытии изображения</target>
        </trans-unit>
        <trans-unit id="6375faab913c2dac1d4df960484dc2da2504d9ae" translate="yes" xml:space="preserve">
          <source>Figure 1 - Illustration of the measured height</source>
          <target state="translated">Рисунок 1-Иллюстрация измеренной высоты</target>
        </trans-unit>
        <trans-unit id="6b18fc7e18304b4516834bb3ef37a16b3ae72a37" translate="yes" xml:space="preserve">
          <source>Figure 1 - Illustration of the measured width</source>
          <target state="translated">Рисунок 1-Иллюстрация измеренной ширины</target>
        </trans-unit>
        <trans-unit id="a46398427549463f42171d00628161ac9b7f6ef2" translate="yes" xml:space="preserve">
          <source>Figure 1 - Illustration of the rendered HTML</source>
          <target state="translated">Рисунок 1-Иллюстрация визуализированного HTML</target>
        </trans-unit>
        <trans-unit id="f109ae55fa2109bca79e6e5594df80b81fc0c945" translate="yes" xml:space="preserve">
          <source>Figure 1 - Illustration of the specified animation effect</source>
          <target state="translated">Рисунок 1-Иллюстрация указанного анимационного эффекта</target>
        </trans-unit>
        <trans-unit id="3408a9ad1da8b10bb58dd127811f24cd0f57a6a6" translate="yes" xml:space="preserve">
          <source>Figure 2 - Illustration of the &lt;code&gt;slideToggle()&lt;/code&gt; effect when showing the image</source>
          <target state="translated">Рисунок 2 - Иллюстрация &lt;code&gt;slideToggle()&lt;/code&gt; при показе изображения</target>
        </trans-unit>
        <trans-unit id="b55661ae1959c87f6b9cea606d46e4d97e6c5f12" translate="yes" xml:space="preserve">
          <source>Figure 2 - Illustration of the &lt;code&gt;toggle()&lt;/code&gt; effect when showing the image</source>
          <target state="translated">Рисунок 2 - Иллюстрация эффекта &lt;code&gt;toggle()&lt;/code&gt; при отображении изображения</target>
        </trans-unit>
        <trans-unit id="13d010b61c6e608da3c38444d950a6a38ee6cff6" translate="yes" xml:space="preserve">
          <source>Figure 2 - Illustration of the specified animation effect</source>
          <target state="translated">Рисунок 2-Иллюстрация указанного анимационного эффекта</target>
        </trans-unit>
        <trans-unit id="334b76d62ec8fcbd58cd23a5f6f2c23bc50bc5c0" translate="yes" xml:space="preserve">
          <source>Filter an array of numbers to include numbers that are not bigger than zero.</source>
          <target state="translated">Фильтровать массив чисел для включения чисел,которые не больше нуля.</target>
        </trans-unit>
        <trans-unit id="ec890d0ca46a47b48f395c77710abecd68680bd1" translate="yes" xml:space="preserve">
          <source>Filter an array of numbers to include only numbers bigger then zero.</source>
          <target state="translated">Фильтровать массив чисел для включения только чисел больше нуля.</target>
        </trans-unit>
        <trans-unit id="8efe03e2954e18bcb89ea5e687b53af858c97013" translate="yes" xml:space="preserve">
          <source>Filter reject value:</source>
          <target state="translated">Значение отбраковки фильтра:</target>
        </trans-unit>
        <trans-unit id="5b45eaed43c911908ecf8b846c86ec9a744ec63c" translate="yes" xml:space="preserve">
          <source>Filter resolve value:</source>
          <target state="translated">Значение разрешения фильтра:</target>
        </trans-unit>
        <trans-unit id="6a099905dc3d245c1cb20d48e243fa179cb18a62" translate="yes" xml:space="preserve">
          <source>Filter the resolve value:</source>
          <target state="translated">Фильтровать значение разрешения:</target>
        </trans-unit>
        <trans-unit id="653827de35d9ee12d7580e1c0b38e3173c964d0d" translate="yes" xml:space="preserve">
          <source>Filtering isn't, however, limited to these tags. For example, Internet Explorer prior to version 8 will also convert all &lt;code&gt;href&lt;/code&gt; properties on links to absolute URLs, and Internet Explorer prior to version 9 will not correctly handle HTML5 elements without the addition of a separate &lt;a href=&quot;https://code.google.com/p/html5shiv/&quot;&gt;compatibility layer&lt;/a&gt;.</source>
          <target state="translated">Однако фильтрация не ограничивается этими тегами. Например, Internet Explorer до версии 8 также преобразует все свойства &lt;code&gt;href&lt;/code&gt; в ссылках в абсолютные URL-адреса, а Internet Explorer до версии 9 не будет правильно обрабатывать элементы HTML5 без добавления отдельного &lt;a href=&quot;https://code.google.com/p/html5shiv/&quot;&gt;уровня совместимости&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2b1c330450488b4d0fa46e700431bbbfca53a14f" translate="yes" xml:space="preserve">
          <source>Filters the original array of numbers leaving that are not 5 and have an index greater than 4. Then it removes all 9s.</source>
          <target state="translated">Фильтрует исходный массив чисел,оставшихся не 5 и имеющих индекс больше 4,затем удаляет все 9.</target>
        </trans-unit>
        <trans-unit id="c800f85c4dc872c7e4f70a6e43e6c3f78218275d" translate="yes" xml:space="preserve">
          <source>Find all button inputs and mark them.</source>
          <target state="translated">Найдите все кнопочные входы и отметьте их.</target>
        </trans-unit>
        <trans-unit id="a92193c48e7a00a75b8c88250fcb22839921de42" translate="yes" xml:space="preserve">
          <source>Find all children of each div.</source>
          <target state="translated">Найдите всех детей каждого дайвера.</target>
        </trans-unit>
        <trans-unit id="5a2f8a88191515b53e2a0ef33c798e64d4a5353f" translate="yes" xml:space="preserve">
          <source>Find all children of the clicked element.</source>
          <target state="translated">Найдите всех детей щелчкового элемента.</target>
        </trans-unit>
        <trans-unit id="f588c9b48deea314955d1af0f90ce4f59a16cebd" translate="yes" xml:space="preserve">
          <source>Find all children with a class &quot;selected&quot; of each div.</source>
          <target state="translated">Найдите всех детей с классом &quot;выбранным&quot; для каждого погружения.</target>
        </trans-unit>
        <trans-unit id="16371d77b339f012b7c76cec79ef622fa9749d34" translate="yes" xml:space="preserve">
          <source>Find all div elements within an XML document from an Ajax response.</source>
          <target state="translated">Найти все элементы div в XML-документе из ответа Ajax.</target>
        </trans-unit>
        <trans-unit id="1b7a13bca82996e6ae9f4902803dedbc15488a41" translate="yes" xml:space="preserve">
          <source>Find all elements within document.body so elements like head, script, etc. are excluded.</source>
          <target state="translated">Найдите все элементы в теле документа,чтобы исключить такие элементы,как голова,скрипт и т.д..</target>
        </trans-unit>
        <trans-unit id="5c7a481f8b149394eb84a2ecdcc864b0e295c088" translate="yes" xml:space="preserve">
          <source>Find all input elements that are enabled.</source>
          <target state="translated">Найдите все входные элементы,которые включены.</target>
        </trans-unit>
        <trans-unit id="8125bf92848a5f10e1dd2374bcae1bf80e65235f" translate="yes" xml:space="preserve">
          <source>Find all inputs of type radio within the first form in the document.</source>
          <target state="translated">Найдите все входы типа радио в первой форме в документе.</target>
        </trans-unit>
        <trans-unit id="acc6b90ef47aa8eefef911194b42cfac2038674d" translate="yes" xml:space="preserve">
          <source>Find all p elements that are children of a div element and apply a border to them.</source>
          <target state="translated">Найдите все p-элементы,которые являются детьми div-элемента,и наложите на них границу.</target>
        </trans-unit>
        <trans-unit id="4a6811549239dde3563838760c8c68021fb840a7" translate="yes" xml:space="preserve">
          <source>Find all parent elements of each b.</source>
          <target state="translated">Найдите все родительские элементы каждого b.</target>
        </trans-unit>
        <trans-unit id="a2365c88bf5cf12eb108fe6bb37da537dd4351f2" translate="yes" xml:space="preserve">
          <source>Find all siblings with a class &quot;selected&quot; of each div.</source>
          <target state="translated">Найти всех братьев и сестер по классу &quot;выбранный&quot; из каждого ныряльщика.</target>
        </trans-unit>
        <trans-unit id="132b57ea1d70411b54ec6e62b4ea5062c2c0b0a9" translate="yes" xml:space="preserve">
          <source>Find all the text nodes inside a paragraph and wrap them with a bold tag.</source>
          <target state="translated">Найдите все текстовые узлы внутри абзаца и оберните их жирным тегом.</target>
        </trans-unit>
        <trans-unit id="99085b7331529912fa4cd3d2a25de809c336eb4c" translate="yes" xml:space="preserve">
          <source>Find each span that is second in relation to its sibling spans.</source>
          <target state="translated">Найдите каждый пролет,который является вторым по отношению к пролетам своих братьев и сестер.</target>
        </trans-unit>
        <trans-unit id="7f0f49132aaa3d4e3ad4d2ff38bd42a502c5b7a2" translate="yes" xml:space="preserve">
          <source>Find every element (including head, body, etc) in the document. Note that if your browser has an extension/add-on enabled that inserts a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; element into the DOM, that element will be counted as well.</source>
          <target state="translated">Найдите в документе все элементы (включая голову, тело и т. Д.). Обратите внимание, что если в вашем браузере включено расширение / надстройка, которая вставляет элемент &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; или &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; в DOM, этот элемент также будет учитываться.</target>
        </trans-unit>
        <trans-unit id="8b7b3b1569539b848b61f359b82d392ba9a77126" translate="yes" xml:space="preserve">
          <source>Find out if the parameter is a RegExp.</source>
          <target state="translated">Узнайте,является ли параметр RegExp.</target>
        </trans-unit>
        <trans-unit id="b960159ac48bcb44d4a4b2ac888b568a1241e8ee" translate="yes" xml:space="preserve">
          <source>Find the ancestors of &amp;lt;li class=&quot;item-a&quot;&amp;gt; up to &amp;lt;ul class=&quot;level-1&quot;&amp;gt; and give them a red background color. Also, find ancestors of &amp;lt;li class=&quot;item-2&quot;&amp;gt; that have a class of &quot;yes&quot; up to &amp;lt;ul class=&quot;level-1&quot;&amp;gt; and give them a green border.</source>
          <target state="translated">Найдите предков от &amp;lt;li class = &quot;item-a&quot;&amp;gt; до &amp;lt;ul class = &quot;level-1&quot;&amp;gt; и задайте им красный цвет фона. Также найдите предков &amp;lt;li class = &quot;item-2&quot;&amp;gt;, у которых есть класс &quot;yes&quot; до &amp;lt;ul class = &quot;level-1&quot;&amp;gt;, и установите для них зеленую рамку.</target>
        </trans-unit>
        <trans-unit id="fcf8d7f3bd07d9a145de2e5276fee40fbe5f7d5e" translate="yes" xml:space="preserve">
          <source>Find the first span in each matched div and add a class to it.</source>
          <target state="translated">Найдите первый пролет в каждом подходящем дайве и добавьте к нему класс.</target>
        </trans-unit>
        <trans-unit id="f7dd7a7817c7c071a85c28c65b5ddba00a1dac90" translate="yes" xml:space="preserve">
          <source>Find the last span in each matched div and add some css plus a hover state.</source>
          <target state="translated">Найдите последний пролет в каждом подходящем дайве и добавьте немного css плюс состояние парилки.</target>
        </trans-unit>
        <trans-unit id="292bf30049bd8ec189e6e65b9546849b3dfe668c" translate="yes" xml:space="preserve">
          <source>Find the offsetParent of item &quot;A.&quot;</source>
          <target state="translated">Найти смещениеРодитель пункта &quot;A&quot;.</target>
        </trans-unit>
        <trans-unit id="ba5a1d54a56d43e0b5e789c6d14ec7cccbb28397" translate="yes" xml:space="preserve">
          <source>Find the parent element of each paragraph with a class &quot;selected&quot;.</source>
          <target state="translated">Найдите родительский элемент каждого абзаца с классом &quot;выделено&quot;.</target>
        </trans-unit>
        <trans-unit id="52accca5844f55bf2bb05ccbbfc192977706d821" translate="yes" xml:space="preserve">
          <source>Find the right answer! The fade will take 250 milliseconds and change various styles when it completes.</source>
          <target state="translated">Найди правильный ответ! Затухание займет 250 миллисекунд и сменит различные стили по окончании.</target>
        </trans-unit>
        <trans-unit id="7c7a468868fb7818cbce1026d5bf65eb2899e77e" translate="yes" xml:space="preserve">
          <source>Find the second li in each matched ul and note it.</source>
          <target state="translated">Найдите вторую лигу в каждой подходящей локтевой кости и запишите ее.</target>
        </trans-unit>
        <trans-unit id="bcb797289b3b2c0067a7a4d28bbc3683cfa1ef43" translate="yes" xml:space="preserve">
          <source>Find the second to last li in each matched ul and note it.</source>
          <target state="translated">Найдите от второго до последнего ли в каждой подходящей локтевой кости и запишите это.</target>
        </trans-unit>
        <trans-unit id="f06d0322ac5193915791ad9c1957588749fa8f2c" translate="yes" xml:space="preserve">
          <source>Find the siblings that follow &amp;lt;dt id=&quot;term-2&quot;&amp;gt; up to the next &amp;lt;dt&amp;gt; and give them a red background color. Also, find &amp;lt;dd&amp;gt; siblings that follow &amp;lt;dt id=&quot;term-1&quot;&amp;gt; up to &amp;lt;dt id=&quot;term-3&quot;&amp;gt; and give them a green text color.</source>
          <target state="translated">Найдите братьев и сестер, следующих за &amp;lt;dt id = &quot;term-2&quot;&amp;gt; до следующего &amp;lt;dt&amp;gt;, и придайте им красный цвет фона. Кроме того, найдите братьев и сестер &amp;lt;dd&amp;gt;, следующих за &amp;lt;dt id = &quot;term-1&quot;&amp;gt; до &amp;lt;dt id = &quot;term-3&quot;&amp;gt;, и дайте им зеленый цвет текста.</target>
        </trans-unit>
        <trans-unit id="9c1956687a26fdfcda4aa9f64aaf3d1af1c7c24e" translate="yes" xml:space="preserve">
          <source>Find the siblings that precede &amp;lt;dt id=&quot;term-2&quot;&amp;gt; up to the preceding &amp;lt;dt&amp;gt; and give them a red background color. Also, find previous &amp;lt;dd&amp;gt; siblings of &amp;lt;dt id=&quot;term-3&quot;&amp;gt; up to &amp;lt;dt id=&quot;term-1&quot;&amp;gt; and give them a green text color.</source>
          <target state="translated">Найдите братьев и сестер, которые предшествуют &amp;lt;dt id = &quot;term-2&quot;&amp;gt; до предыдущего &amp;lt;dt&amp;gt;, и задайте им красный цвет фона. Кроме того, найдите предыдущих &amp;lt;dd&amp;gt; братьев и сестер от &amp;lt;dt id = &quot;term-3&quot;&amp;gt; до &amp;lt;dt id = &quot;term-1&quot;&amp;gt; и дайте им зеленый цвет текста.</target>
        </trans-unit>
        <trans-unit id="0cb16572f395a4bbc06540c7bf595d5aea0e1d24" translate="yes" xml:space="preserve">
          <source>Find the text in the first paragraph (stripping out the html), then set the html of the last paragraph to show it is just text (the red bold is gone).</source>
          <target state="translated">Найдите текст в первом абзаце (убирая html),затем установите html последнего абзаца,чтобы показать,что это просто текст (красный жирный шрифт исчезает).</target>
        </trans-unit>
        <trans-unit id="ec314ed0c3cf189447a53aca51a350c4ab3d8d11" translate="yes" xml:space="preserve">
          <source>Find the third td.</source>
          <target state="translated">Найди третий ТД.</target>
        </trans-unit>
        <trans-unit id="186d825130d2c50e2b4c271b333cf97d9a0242bc" translate="yes" xml:space="preserve">
          <source>Find the title attribute of the first &amp;lt;em&amp;gt; in the page.</source>
          <target state="translated">Найдите атрибут заголовка первого &amp;lt;em&amp;gt; на странице.</target>
        </trans-unit>
        <trans-unit id="e976d9f59cda7105c64c116494f135cdc00359e7" translate="yes" xml:space="preserve">
          <source>Find the unique siblings of all yellow li elements in the 3 lists (including other yellow li elements if appropriate).</source>
          <target state="translated">Найти уникальных братьев и сестер всех желтых элементов Li в 3-х списках (включая другие желтые элементы Li,если необходимо).</target>
        </trans-unit>
        <trans-unit id="7b2fcb2e41ac08808577e1f639b614a0174ee7c1" translate="yes" xml:space="preserve">
          <source>Find the value of an input box.</source>
          <target state="translated">Найдите значение поля ввода.</target>
        </trans-unit>
        <trans-unit id="6965ef49154e3980fc8928b27383ba3a83e1ca47" translate="yes" xml:space="preserve">
          <source>Find the very next sibling of each disabled button and change its text &quot;this button is disabled&quot;.</source>
          <target state="translated">Найдите ближайшего брата или сестру каждой из отключенных кнопок и измените текст &quot;эта кнопка отключена&quot;.</target>
        </trans-unit>
        <trans-unit id="f26de6df62b004f294165f046830f4cd57b466c0" translate="yes" xml:space="preserve">
          <source>Find the very next sibling of each paragraph. Keep only the ones with a class &quot;selected&quot;.</source>
          <target state="translated">Найди ближайшего брата и сестру по каждому абзацу.Оставлять только те,у которых класс &quot;выбран&quot;.</target>
        </trans-unit>
        <trans-unit id="2e522b48b2153283875e090abd1d4be61692a5fe" translate="yes" xml:space="preserve">
          <source>Find the very previous sibling of each div.</source>
          <target state="translated">Найди самого предыдущего брата каждого ныряльщика.</target>
        </trans-unit>
        <trans-unit id="cd59444e61c96beb5b8754cab0c196cbfed3a0f5" translate="yes" xml:space="preserve">
          <source>Finds all checkbox inputs.</source>
          <target state="translated">Находит все входы,отмеченные флажками.</target>
        </trans-unit>
        <trans-unit id="0fa6d7ddd6a06dae3b3119b0fd8d618c6159e28f" translate="yes" xml:space="preserve">
          <source>Finds all divs and makes a border. Then adds all paragraphs to the jQuery object to set their backgrounds yellow.</source>
          <target state="translated">Находит всех ныряльщиков и делает границу.Затем добавляет все параграфы в объект jQuery,чтобы установить их фон желтым.</target>
        </trans-unit>
        <trans-unit id="1971803dff7a8e0fb6296c5b90c6fd9f78baed9b" translate="yes" xml:space="preserve">
          <source>Finds all divs containing &quot;John&quot; and underlines them.</source>
          <target state="translated">Находит все водолазы,содержащие &quot;Иоанна&quot; и подчеркивает их.</target>
        </trans-unit>
        <trans-unit id="ca1c1b12ed4ab46bdfdc631c175b73f472ea64db" translate="yes" xml:space="preserve">
          <source>Finds all divs that are siblings after the element with #prev as its id. Notice the span isn't selected since it is not a div and the &quot;niece&quot; isn't selected since it is a child of a sibling, not an actual sibling.</source>
          <target state="translated">Находит всех дайверов,которые являются братьями и сестрами после элемента с #prev в качестве его id.Обратите внимание,что диапазон не выбирается,так как он не является дивом,и &quot;племянница&quot; не выбирается,так как она является ребёнком брата или сестры,а не фактическим братом или сестрой.</target>
        </trans-unit>
        <trans-unit id="8c15a6da0dcee9815954b3710750cea4da8b5ff1" translate="yes" xml:space="preserve">
          <source>Finds all elements that are empty - they don't have child elements or text.</source>
          <target state="translated">Находит все пустые элементы-у них нет дочерних элементов или текста.</target>
        </trans-unit>
        <trans-unit id="b3afd4ca2dc29eea672680b57b89eb826083ee63" translate="yes" xml:space="preserve">
          <source>Finds all file inputs.</source>
          <target state="translated">Находит все входные файлы.</target>
        </trans-unit>
        <trans-unit id="0ab9f3b519c7a56b1b5a2b49d309c4ef923224e6" translate="yes" xml:space="preserve">
          <source>Finds all image inputs.</source>
          <target state="translated">Находит все входы изображения.</target>
        </trans-unit>
        <trans-unit id="a7974526f109f42d21154f8f285d3fd4694f0c53" translate="yes" xml:space="preserve">
          <source>Finds all input elements that are disabled.</source>
          <target state="translated">Находит все входные элементы,которые отключены.</target>
        </trans-unit>
        <trans-unit id="22a153dc48e28eb36212e94ad846fe71b9b7645d" translate="yes" xml:space="preserve">
          <source>Finds all input elements.</source>
          <target state="translated">Находит все входные элементы.</target>
        </trans-unit>
        <trans-unit id="f3a24533e6d3ebd6b4993de2dc84f4d1ca98180e" translate="yes" xml:space="preserve">
          <source>Finds all inputs that are next to a label.</source>
          <target state="translated">Находит все входы,расположенные рядом с меткой.</target>
        </trans-unit>
        <trans-unit id="6f406d282cbb0086949318d217f53f2dfabc502e" translate="yes" xml:space="preserve">
          <source>Finds all inputs that are not checked and highlights the next sibling span. Notice there is no change when clicking the checkboxes since no click events have been linked.</source>
          <target state="translated">Находит все входы,которые не отмечены галочкой,и выделяет следующий диапазон для брата и сестры.Обратите внимание,что при нажатии на флажки не происходит никаких изменений,так как ни одно событие клика не было связано.</target>
        </trans-unit>
        <trans-unit id="03d7c9da396dd7431afd014f318e946a21f04633" translate="yes" xml:space="preserve">
          <source>Finds all inputs that don't have the name 'newsletter' and appends text to the span next to it.</source>
          <target state="translated">Находит все входные данные,которые не имеют названия &quot;Информационный бюллетень&quot; и добавляет текст к пролету рядом с ним.</target>
        </trans-unit>
        <trans-unit id="06d5302deda496a0024de6fa468294b71c6dfc0f" translate="yes" xml:space="preserve">
          <source>Finds all inputs that have an id attribute and whose name attribute ends with man and sets the value.</source>
          <target state="translated">Находит все входы,у которых есть атрибут id,и чей атрибут имени заканчивается на man,и устанавливает значение.</target>
        </trans-unit>
        <trans-unit id="6a9e41dcf2adcb56ea291811f551a554b208732f" translate="yes" xml:space="preserve">
          <source>Finds all inputs with a name attribute that contains 'man' and sets the value with some text.</source>
          <target state="translated">Находит все входы с атрибутом имени,который содержит 'man' и устанавливает значение с некоторым текстом.</target>
        </trans-unit>
        <trans-unit id="c3f5514a13c755b6f43a8d899f5eaa63217a92a7" translate="yes" xml:space="preserve">
          <source>Finds all inputs with a name attribute that contains the word 'man' and sets the value with some text.</source>
          <target state="translated">Находит все входные данные с атрибутом имени,содержащим слово 'man' и устанавливает значение некоторым текстом.</target>
        </trans-unit>
        <trans-unit id="2bfbca7e5a82789a4b5befd315041297a747102d" translate="yes" xml:space="preserve">
          <source>Finds all inputs with a value of &quot;Hot Fuzz&quot; and changes the text of the next sibling span.</source>
          <target state="translated">Находит все входы со значением &quot;Горячий фазз&quot; и изменяет текст следующего братского промежутка.</target>
        </trans-unit>
        <trans-unit id="17f34be09250a871e93434e3d02a8d3396ae0307" translate="yes" xml:space="preserve">
          <source>Finds all inputs with an attribute name that ends with 'letter' and puts text in them.</source>
          <target state="translated">Находит все входы с именем атрибута,заканчивающимся на 'букву' и помещает в них текст.</target>
        </trans-unit>
        <trans-unit id="2bac059205bd05e494e5f75b713d81ffa887e403" translate="yes" xml:space="preserve">
          <source>Finds all inputs with an attribute name that starts with 'news' and puts text in them.</source>
          <target state="translated">Находит все входы с именем атрибута,который начинается с 'news' и помещает в них текст.</target>
        </trans-unit>
        <trans-unit id="c5073058cd3c1f66b2bc8b3f3e2bbdd60409a382" translate="yes" xml:space="preserve">
          <source>Finds all links with an hreflang attribute that is english.</source>
          <target state="translated">Находит все ссылки с атрибутом hreflang на английском языке.</target>
        </trans-unit>
        <trans-unit id="0644d2625b75128599a33f5ae2c59ef61dc99f90" translate="yes" xml:space="preserve">
          <source>Finds all password inputs.</source>
          <target state="translated">Находит все вводимые пароли.</target>
        </trans-unit>
        <trans-unit id="65fc54cba1c3693ad4fb4bf04b8171bfc1325bf3" translate="yes" xml:space="preserve">
          <source>Finds all radio inputs.</source>
          <target state="translated">Находит все радио входы.</target>
        </trans-unit>
        <trans-unit id="84bc630bf78adeed71d6ff39b31ed3afd2d51599" translate="yes" xml:space="preserve">
          <source>Finds all reset inputs.</source>
          <target state="translated">Находит все входы сброса.</target>
        </trans-unit>
        <trans-unit id="74d5985c781cb644ee2a43ea2098469c3b78fc7a" translate="yes" xml:space="preserve">
          <source>Finds all submit elements that are descendants of a td element.</source>
          <target state="translated">Находит все представленные элементы,которые являются потомками td-элемента.</target>
        </trans-unit>
        <trans-unit id="6ef05ca2ffcf8e15c46a3c7d243049265806b81d" translate="yes" xml:space="preserve">
          <source>Finds all tds with children, including text.</source>
          <target state="translated">Находит все объявления с детьми,включая текст.</target>
        </trans-unit>
        <trans-unit id="6865bbe96ddbcf22960cb277c52105eefbff362a" translate="yes" xml:space="preserve">
          <source>Finds all text inputs.</source>
          <target state="translated">Находит все текстовые входы.</target>
        </trans-unit>
        <trans-unit id="0ed1ea8d1a66b0f419967a5a31e5d2cf449ebf58" translate="yes" xml:space="preserve">
          <source>Finds even table rows, matching the first, third and so on (index 0, 2, 4 etc.).</source>
          <target state="translated">Находит даже строки таблицы,соответствующие первой,третьей и т.д.(индекс 0,2,4 и т.д.).</target>
        </trans-unit>
        <trans-unit id="9bff8e64f627d99d0234b9dc1e9983dae60e45d2" translate="yes" xml:space="preserve">
          <source>Finds every DIV element.</source>
          <target state="translated">Находит каждый элемент DIV.</target>
        </trans-unit>
        <trans-unit id="72f69cf9a581c8efb455b7a3df1e530c0c519ce6" translate="yes" xml:space="preserve">
          <source>Finds odd table rows, matching the second, fourth and so on (index 1, 3, 5 etc.).</source>
          <target state="translated">Находит нечетные строки таблицы,совпадающие со вторыми,четвертыми и так далее (индекс 1,3,5 и так далее).</target>
        </trans-unit>
        <trans-unit id="493bf3dbc460e7b010901b3c1849ca6ea8d7d285" translate="yes" xml:space="preserve">
          <source>Finds out if the parameter is a function.</source>
          <target state="translated">Выясняет,является ли параметр функцией.</target>
        </trans-unit>
        <trans-unit id="ce2d1b5fb1f46b8b4f408ee8fb82eb8d21bf8bee" translate="yes" xml:space="preserve">
          <source>Finds out if the parameter is a window.</source>
          <target state="translated">Выясняет,является ли параметр окном.</target>
        </trans-unit>
        <trans-unit id="d8394c9a281956dec84810d247e584214dbeb5ae" translate="yes" xml:space="preserve">
          <source>Finds out if the parameter is an array.</source>
          <target state="translated">Выясняет,является ли параметр массивом.</target>
        </trans-unit>
        <trans-unit id="f85fa03660a6a790c810341291e705bf864ad3c1" translate="yes" xml:space="preserve">
          <source>Finds the element with both &quot;myclass&quot; and &quot;otherclass&quot; classes.</source>
          <target state="translated">Находит элемент как с классом &quot;мой класс&quot;,так и с классом &quot;другой класс&quot;.</target>
        </trans-unit>
        <trans-unit id="ac402cb69fd27d2468f8500c916426867fd968e7" translate="yes" xml:space="preserve">
          <source>Finds the element with the class &quot;myClass&quot;.</source>
          <target state="translated">Находит элемент с классом &quot;myClass&quot;.</target>
        </trans-unit>
        <trans-unit id="5f88a5bcc8909983d79e27dfdd9856cbce59b52f" translate="yes" xml:space="preserve">
          <source>Finds the elements of an array which satisfy a filter function. The original array is not affected.</source>
          <target state="translated">Находит элементы массива,удовлетворяющие функции фильтрации.На исходный массив это не влияет.</target>
        </trans-unit>
        <trans-unit id="b58950837bb829c72a14efe2568fa3fd9080f732" translate="yes" xml:space="preserve">
          <source>Finds the elements that match any of these three selectors.</source>
          <target state="translated">Находит элементы,которые соответствуют любому из этих трех селекторов.</target>
        </trans-unit>
        <trans-unit id="e85a855fa3f28883b3e3697fff7348752bea4940" translate="yes" xml:space="preserve">
          <source>Finds the first span in each matched div to underline and add a hover state.</source>
          <target state="translated">Находит первый пролет в каждом подходящем дайве,чтобы подчеркнуть и добавить состояние парилки.</target>
        </trans-unit>
        <trans-unit id="2751b863a7294ca8cac7381ca44ebc9d46239b04" translate="yes" xml:space="preserve">
          <source>Finds the first table row.</source>
          <target state="translated">Находит первую строку таблицы.</target>
        </trans-unit>
        <trans-unit id="4b5224d134fb8e8bf9de277940509ac0a9d09746" translate="yes" xml:space="preserve">
          <source>Finds the last table row.</source>
          <target state="translated">Находит последнюю строку таблицы.</target>
        </trans-unit>
        <trans-unit id="c36f804e0aa162645a1c5171235cbf604d5057b4" translate="yes" xml:space="preserve">
          <source>Fire focus.</source>
          <target state="translated">Огненный фокус.</target>
        </trans-unit>
        <trans-unit id="b8977ffab6c4daa579a9c9533eff9515e4af8f80" translate="yes" xml:space="preserve">
          <source>First handler for .toggle() called.</source>
          <target state="translated">Первый обработчик для вызова .toggle().</target>
        </trans-unit>
        <trans-unit id="d792fc1a7aceb881f80a1116f43f89f2103bd381" translate="yes" xml:space="preserve">
          <source>First, the initial selector locates item 3, initializing the stack with the set containing just this item. The call to &lt;code&gt;.nextAll()&lt;/code&gt; then pushes the set of items 4 and 5 onto the stack. Finally, the &lt;code&gt;.addBack()&lt;/code&gt; invocation merges these two sets together, creating a jQuery object that points to all three items in document order: &lt;code&gt;{[&amp;lt;li.third-item&amp;gt;,&amp;lt;li&amp;gt;,&amp;lt;li&amp;gt; ]}&lt;/code&gt;.</source>
          <target state="translated">Сначала начальный селектор находит элемент 3, инициализируя стек набором, содержащим только этот элемент. Вызов &lt;code&gt;.nextAll()&lt;/code&gt; затем помещает набор элементов 4 и 5 в стек. Наконец, &lt;code&gt;.addBack()&lt;/code&gt; объединяет эти два набора вместе, создавая объект jQuery, который указывает на все три элемента в порядке документа: &lt;code&gt;{[&amp;lt;li.third-item&amp;gt;,&amp;lt;li&amp;gt;,&amp;lt;li&amp;gt; ]}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="294946cfc881a676badcaff501c6b112a6e1b0be" translate="yes" xml:space="preserve">
          <source>First, the initial selector locates item 3, initializing the stack with the set containing just this item. The call to &lt;code&gt;.nextAll()&lt;/code&gt; then pushes the set of items 4 and 5 onto the stack. Finally, the &lt;code&gt;.andSelf()&lt;/code&gt; invocation merges these two sets together, creating a jQuery object that points to all three items in document order: &lt;code&gt;[ &amp;lt;li.third-item&amp;gt;, &amp;lt;li&amp;gt;, &amp;lt;li&amp;gt; ]&lt;/code&gt;.</source>
          <target state="translated">Сначала начальный селектор находит элемент 3, инициализируя стек набором, содержащим только этот элемент. Вызов &lt;code&gt;.nextAll()&lt;/code&gt; затем помещает набор элементов 4 и 5 в стек. Наконец, &lt;code&gt;.andSelf()&lt;/code&gt; объединяет эти два набора вместе, создавая объект jQuery, который указывает на все три элемента в порядке документа: &lt;code&gt;[ &amp;lt;li.third-item&amp;gt;, &amp;lt;li&amp;gt;, &amp;lt;li&amp;gt; ]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65448f0f9728e163ce35ca72e94afdb17691cab2" translate="yes" xml:space="preserve">
          <source>Flag combinations with &lt;code&gt;$.Callbacks()&lt;/code&gt; are internally in jQuery for the &lt;code&gt;.done()&lt;/code&gt; and &lt;code&gt;.fail()&lt;/code&gt; functions on a Deferred &amp;mdash; both of which use &lt;code&gt;$.Callbacks('memory once')&lt;/code&gt;.</source>
          <target state="translated">Комбинации флагов с &lt;code&gt;$.Callbacks()&lt;/code&gt; находятся внутри jQuery для &lt;code&gt;.done()&lt;/code&gt; и &lt;code&gt;.fail()&lt;/code&gt; в Deferred - обе из них используют &lt;code&gt;$.Callbacks('memory once')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="64435fd82de7b1d614dfb9844848a48b14c6cd2c" translate="yes" xml:space="preserve">
          <source>Float</source>
          <target state="translated">Float</target>
        </trans-unit>
        <trans-unit id="419b234c0acd0418f489ddbb12253af97af4124c" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;mouseout&lt;/code&gt;, indicates the element being entered; for &lt;code&gt;mouseover&lt;/code&gt;, indicates the element being exited.</source>
          <target state="translated">Для &lt;code&gt;mouseout&lt;/code&gt; указывает вводимый элемент; для &lt;code&gt;mouseover&lt;/code&gt; указывает на выход из элемента.</target>
        </trans-unit>
        <trans-unit id="b3ec9113cfbf4cfb49201c1b9ba1674253e9a92b" translate="yes" xml:space="preserve">
          <source>For HTML elements, the language value is determined by the &lt;code&gt;lang&lt;/code&gt; attribute and possibly information from &lt;code&gt;meta&lt;/code&gt; elements or HTTP headers.</source>
          <target state="translated">Для элементов HTML значение языка определяется атрибутом &lt;code&gt;lang&lt;/code&gt; и, возможно, информацией из &lt;code&gt;meta&lt;/code&gt; или заголовков HTTP.</target>
        </trans-unit>
        <trans-unit id="d598031fb0ff845d9a9222743d9ec166ea209824" translate="yes" xml:space="preserve">
          <source>For all signatures, the arguments can be &lt;code&gt;null&lt;/code&gt; if no callback of that type is desired. Alternatively, use &lt;code&gt;.done()&lt;/code&gt;, &lt;code&gt;.fail()&lt;/code&gt; or &lt;code&gt;.progress()&lt;/code&gt; to set only one type of callback without filtering status or values.</source>
          <target state="translated">Для всех подписей аргументы могут быть &lt;code&gt;null&lt;/code&gt; если обратный вызов этого типа не требуется. В качестве альтернативы используйте &lt;code&gt;.done()&lt;/code&gt; , &lt;code&gt;.fail()&lt;/code&gt; или &lt;code&gt;.progress()&lt;/code&gt; чтобы установить только один тип обратного вызова без фильтрации статуса или значений.</target>
        </trans-unit>
        <trans-unit id="504c47b928895b798708feb5bd779733a1df4fc6" translate="yes" xml:space="preserve">
          <source>For backward compatibility with &lt;code&gt;XMLHttpRequest&lt;/code&gt;, a &lt;code&gt;jqXHR&lt;/code&gt; object will expose the following properties and methods:</source>
          <target state="translated">Для обеспечения обратной совместимости с &lt;code&gt;XMLHttpRequest&lt;/code&gt; , A &lt;code&gt;jqXHR&lt;/code&gt; объект будет подвергать следующие свойства и методы:</target>
        </trans-unit>
        <trans-unit id="3332248b58007f627e0cc0bf9faa5c49bb8ed085" translate="yes" xml:space="preserve">
          <source>For class selectors, jQuery uses JavaScript's native &lt;code&gt;getElementsByClassName()&lt;/code&gt; function if the browser supports it.</source>
          <target state="translated">Для селекторов классов jQuery использует встроенную &lt;code&gt;getElementsByClassName()&lt;/code&gt; JavaScript getElementsByClassName (), если браузер поддерживает ее.</target>
        </trans-unit>
        <trans-unit id="fc14a50d18ed44706557bc8dbd1c7c596acc0d9e" translate="yes" xml:space="preserve">
          <source>For details on the settings available for &lt;code&gt;$.ajaxSetup()&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Подробнее о настройках, доступных для &lt;code&gt;$.ajaxSetup()&lt;/code&gt; , см. В &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71e3acc4eeb9726ab59c3aa1b16da4f606c19233" translate="yes" xml:space="preserve">
          <source>For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.</source>
          <target state="translated">Для каждого элемента множества,получите первый элемент,который соответствует селектору,протестировав сам элемент и пройдя через его предки в дереве DOM.</target>
        </trans-unit>
        <trans-unit id="08d18d272d50f3007730ac2a3822b17783b09770" translate="yes" xml:space="preserve">
          <source>For each paragraph, find the very previous sibling that has a class &quot;selected&quot;.</source>
          <target state="translated">Для каждого абзаца найдите самого предыдущего брата,имеющего класс &quot;выбранный&quot;.</target>
        </trans-unit>
        <trans-unit id="71a9c4b9bbdd88e86d16ed9815ffcce2196e6ea0" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;selectedIndex&lt;/code&gt;, &lt;code&gt;tagName&lt;/code&gt;, &lt;code&gt;nodeName&lt;/code&gt;, &lt;code&gt;nodeType&lt;/code&gt;, &lt;code&gt;ownerDocument&lt;/code&gt;, &lt;code&gt;defaultChecked&lt;/code&gt;, and &lt;code&gt;defaultSelected&lt;/code&gt; should be retrieved and set with the &lt;code&gt;.prop()&lt;/code&gt; method. Prior to jQuery 1.6, these properties were retrievable with the &lt;code&gt;.attr()&lt;/code&gt; method, but this was not within the scope of &lt;code&gt;attr&lt;/code&gt;. These do not have corresponding attributes and are only properties.</source>
          <target state="translated">Например, &lt;code&gt;selectedIndex&lt;/code&gt; , &lt;code&gt;tagName&lt;/code&gt; , &lt;code&gt;nodeName&lt;/code&gt; , &lt;code&gt;nodeType&lt;/code&gt; , &lt;code&gt;ownerDocument&lt;/code&gt; , &lt;code&gt;defaultChecked&lt;/code&gt; и &lt;code&gt;defaultSelected&lt;/code&gt; должны быть получены и установлены с помощью метода &lt;code&gt;.prop()&lt;/code&gt; . До jQuery 1.6 эти свойства можно было получить с помощью &lt;code&gt;.attr()&lt;/code&gt; , но это не входило в область действия &lt;code&gt;attr&lt;/code&gt; . Они не имеют соответствующих атрибутов и являются только свойствами.</target>
        </trans-unit>
        <trans-unit id="0b7f2ace9608767c28b97797076cba450675c345" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;selectedIndex&lt;/code&gt;, &lt;code&gt;tagName&lt;/code&gt;, &lt;code&gt;nodeName&lt;/code&gt;, &lt;code&gt;nodeType&lt;/code&gt;, &lt;code&gt;ownerDocument&lt;/code&gt;, &lt;code&gt;defaultChecked&lt;/code&gt;, and &lt;code&gt;defaultSelected&lt;/code&gt; should be retrieved and set with the &lt;code&gt;&lt;a href=&quot;prop&quot;&gt;.prop()&lt;/a&gt;&lt;/code&gt; method. Prior to jQuery 1.6, these properties were retrievable with the &lt;code&gt;.attr()&lt;/code&gt; method, but this was not within the scope of &lt;code&gt;attr&lt;/code&gt;. These do not have corresponding attributes and are only properties.</source>
          <target state="translated">Например, &lt;code&gt;selectedIndex&lt;/code&gt; , &lt;code&gt;tagName&lt;/code&gt; , &lt;code&gt;nodeName&lt;/code&gt; , &lt;code&gt;nodeType&lt;/code&gt; , &lt;code&gt;ownerDocument&lt;/code&gt; , &lt;code&gt;defaultChecked&lt;/code&gt; и &lt;code&gt;defaultSelected&lt;/code&gt; должны быть получены и установлены с помощью метода &lt;code&gt;&lt;a href=&quot;prop&quot;&gt;.prop()&lt;/a&gt;&lt;/code&gt; . До jQuery 1.6 эти свойства можно было получить с помощью &lt;code&gt;.attr()&lt;/code&gt; , но это не входило в область действия &lt;code&gt;attr&lt;/code&gt; . Они не имеют соответствующих атрибутов и являются только свойствами.</target>
        </trans-unit>
        <trans-unit id="cc4924d56b62ec1c542022ff31755389372bd7d7" translate="yes" xml:space="preserve">
          <source>For example, clicked anchors will not take the browser to a new URL. We can use &lt;a href=&quot;event.isdefaultprevented&quot;&gt;&lt;code&gt;event.isDefaultPrevented()&lt;/code&gt;&lt;/a&gt; to determine if this method has been called by an event handler that was triggered by this event.</source>
          <target state="translated">Например, нажатые якоря не переведут браузер на новый URL-адрес. Мы можем использовать &lt;a href=&quot;event.isdefaultprevented&quot;&gt; &lt;code&gt;event.isDefaultPrevented()&lt;/code&gt; &lt;/a&gt; чтобы определить, был ли этот метод вызван обработчиком события, который был инициирован этим событием.</target>
        </trans-unit>
        <trans-unit id="70c526ce786633871fa1852d883fa998bb18984e" translate="yes" xml:space="preserve">
          <source>For example, consider a page with a simple image element:</source>
          <target state="translated">Например,рассмотрим страницу с простым элементом изображения:</target>
        </trans-unit>
        <trans-unit id="a52244c25352e32df63a99c79e16d5d5806d81f7" translate="yes" xml:space="preserve">
          <source>For example, consider a page with a simple image:</source>
          <target state="translated">Например,рассмотрим страницу с простым изображением:</target>
        </trans-unit>
        <trans-unit id="f35b0a4102aa2118680f95786efd23be027146ce" translate="yes" xml:space="preserve">
          <source>For example, consider the HTML:</source>
          <target state="translated">Например,рассмотрим HTML:</target>
        </trans-unit>
        <trans-unit id="6ba63985735fc148d46fac8878b7fe1b04328346" translate="yes" xml:space="preserve">
          <source>For example, given the following HTML:</source>
          <target state="translated">Например,учитывая следующий HTML:</target>
        </trans-unit>
        <trans-unit id="3f6839ce62d498d51d360a2fc2fd64f4f1d89419" translate="yes" xml:space="preserve">
          <source>For example, some versions of Webkit-based browsers require &lt;code&gt;-webkit-border-radius&lt;/code&gt; to set the &lt;code&gt;border-radius&lt;/code&gt; on an element, while earlier Firefox versions require &lt;code&gt;-moz-border-radius&lt;/code&gt;. A css hook can normalize these vendor-prefixed properties to let &lt;code&gt;.css()&lt;/code&gt; accept a single, standard property name (&lt;code&gt;border-radius&lt;/code&gt;, or with DOM property syntax, &lt;code&gt;borderRadius&lt;/code&gt;).</source>
          <target state="translated">Например, некоторые версии браузеров на основе Webkit требуют &lt;code&gt;-webkit-border-radius&lt;/code&gt; для установки &lt;code&gt;border-radius&lt;/code&gt; для элемента, тогда как более ранние версии Firefox требуют &lt;code&gt;-moz-border-radius&lt;/code&gt; . Хук css может нормализовать эти свойства с префиксом поставщика, чтобы позволить &lt;code&gt;.css()&lt;/code&gt; принимать одно стандартное имя свойства ( &lt;code&gt;border-radius&lt;/code&gt; или с синтаксисом свойств DOM, &lt;code&gt;borderRadius&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="6eda56df69881f851d2a3c4509a7ad400e6e9947" translate="yes" xml:space="preserve">
          <source>For example, the following &lt;code&gt;.delegate()&lt;/code&gt; code:</source>
          <target state="translated">Например, следующий &lt;code&gt;.delegate()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="74e0355387d68ae2faceb0166aba41a95d3fb353" translate="yes" xml:space="preserve">
          <source>For example, the following sets a default for the &lt;code&gt;url&lt;/code&gt; parameter before pinging the server repeatedly:</source>
          <target state="translated">Например, следующее устанавливает значение по умолчанию для параметра &lt;code&gt;url&lt;/code&gt; перед повторной проверкой связи с сервером:</target>
        </trans-unit>
        <trans-unit id="206a46034dff48208d6b64685dbb9ec9b5de0e3a" translate="yes" xml:space="preserve">
          <source>For example, the following will insert two new &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s and an existing &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; after the first paragraph:</source>
          <target state="translated">Например, следующее будет вставлять два новых &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; и существующий &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; после первого абзаца:</target>
        </trans-unit>
        <trans-unit id="86d1833a70bd94e20ef8fecd149fb887854da98d" translate="yes" xml:space="preserve">
          <source>For example, the following will insert two new &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s and an existing &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; as the first three child nodes of the body:</source>
          <target state="translated">Например, следующее будет вставлять два новых &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; и существующий &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; в качестве первых трех дочерних узлов тела:</target>
        </trans-unit>
        <trans-unit id="08a574576a46931260e7915b73ce5658f04a9bb6" translate="yes" xml:space="preserve">
          <source>For example, the following will insert two new &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s and an existing &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; as the last three child nodes of the body:</source>
          <target state="translated">Например, следующее будет вставлять два новых &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; и существующий &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; в качестве последних трех дочерних узлов тела:</target>
        </trans-unit>
        <trans-unit id="777ae371ad72a0878cf64a8806bef8c44c7ea1ef" translate="yes" xml:space="preserve">
          <source>For example, the following will insert two new &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s and an existing &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; before the first paragraph:</source>
          <target state="translated">Например, следующее будет вставлять два новых &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; и существующий &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; перед первым абзацем:</target>
        </trans-unit>
        <trans-unit id="460c42c4bc6d060412994bb142143655fe9d8fe8" translate="yes" xml:space="preserve">
          <source>For example, the jQuery source uses &lt;code&gt;$.ajaxSetup()&lt;/code&gt; to add a converter for &quot;text script&quot;:</source>
          <target state="translated">Например, источник jQuery использует &lt;code&gt;$.ajaxSetup()&lt;/code&gt; для добавления конвертера для &amp;laquo;текстового скрипта&amp;raquo;:</target>
        </trans-unit>
        <trans-unit id="f98d7dbb61f00102b13d388417b83ff93f05428e" translate="yes" xml:space="preserve">
          <source>For example, to simultaneously animate the width and height with the &lt;code&gt;swing&lt;/code&gt; easing function and the opacity with the &lt;code&gt;linear&lt;/code&gt; easing function:</source>
          <target state="translated">Например, чтобы одновременно анимировать ширину и высоту с помощью функции замедления &lt;code&gt;swing&lt;/code&gt; и непрозрачность с помощью функции &lt;code&gt;linear&lt;/code&gt; замедления:</target>
        </trans-unit>
        <trans-unit id="a256c55290037b6b4e4ef59ecac6cc8a8cc90431" translate="yes" xml:space="preserve">
          <source>For examples of how &lt;code&gt;flags&lt;/code&gt; should ideally be used, see below:</source>
          <target state="translated">Примеры того, как в идеале следует использовать &lt;code&gt;flags&lt;/code&gt; , см. Ниже:</target>
        </trans-unit>
        <trans-unit id="2d877f3814f3e614f7cb9479753e3d3ed1d96595" translate="yes" xml:space="preserve">
          <source>For explicit parsing of a string to HTML, the &lt;code&gt;&lt;a href=&quot;jquery.parsehtml&quot;&gt;$.parseHTML()&lt;/a&gt;&lt;/code&gt; method is available as of jQuery 1.8.</source>
          <target state="translated">Для явного синтаксического анализа строки в HTML метод &lt;code&gt;&lt;a href=&quot;jquery.parsehtml&quot;&gt;$.parseHTML()&lt;/a&gt;&lt;/code&gt; доступен начиная с jQuery 1.8.</target>
        </trans-unit>
        <trans-unit id="1a639b88a08f40071011d2f564f13b074990fba6" translate="yes" xml:space="preserve">
          <source>For explicit parsing of a string to HTML, use the &lt;a href=&quot;jquery.parsehtml&quot;&gt;$.parseHTML()&lt;/a&gt; method.</source>
          <target state="translated">Для явного синтаксического анализа строки в HTML используйте метод &lt;a href=&quot;jquery.parsehtml&quot;&gt;$ .parseHTML ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d204a58aac87e45f1411c60b2d65281f54cd95b9" translate="yes" xml:space="preserve">
          <source>For id selectors, jQuery uses the JavaScript function &lt;code&gt;document.getElementById()&lt;/code&gt;, which is extremely efficient. When another selector is attached to the id selector, such as &lt;code&gt;h2#pageTitle&lt;/code&gt;, jQuery performs an additional check before identifying the element as a match.</source>
          <target state="translated">Для селекторов идентификаторов jQuery использует функцию JavaScript &lt;code&gt;document.getElementById()&lt;/code&gt; , которая чрезвычайно эффективна. Когда к селектору id прикреплен другой селектор, такой как &lt;code&gt;h2#pageTitle&lt;/code&gt; , jQuery выполняет дополнительную проверку перед определением элемента как совпадающего.</target>
        </trans-unit>
        <trans-unit id="0401f62c26033e7003144ef3a79e42b4cb8c3f3c" translate="yes" xml:space="preserve">
          <source>For key or mouse events, this property indicates the specific key or button that was pressed.</source>
          <target state="translated">Для событий с клавишами или мышью данное свойство указывает на конкретную клавишу или кнопку,которая была нажата.</target>
        </trans-unit>
        <trans-unit id="67433ab5e371019c377fa4bfd157633051442b3b" translate="yes" xml:space="preserve">
          <source>For more information on JSONP, see the &lt;a href=&quot;https://bob.pythonmac.org/archives/2005/12/05/remote-json-jsonp/&quot;&gt;original post detailing its use&lt;/a&gt;.</source>
          <target state="translated">Дополнительные сведения о JSONP см. В &lt;a href=&quot;https://bob.pythonmac.org/archives/2005/12/05/remote-json-jsonp/&quot;&gt;исходной публикации с подробным описанием его использования&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5cd901094cc8c15efd37a11c3d5524bf90353f62" translate="yes" xml:space="preserve">
          <source>For more information on this method, see the discussion for &lt;code&gt;&lt;a href=&quot;trigger&quot;&gt;.trigger()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Для получения дополнительной информации об этом методе см. Обсуждение &lt;code&gt;&lt;a href=&quot;trigger&quot;&gt;.trigger()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f26a4dbdf809316d7e44e37c2385f59fd1f78d0" translate="yes" xml:space="preserve">
          <source>For more information, see the documentation for &lt;a href=&quot;category/deferred-object&quot;&gt;Deferred object&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации см. Документацию по &lt;a href=&quot;category/deferred-object&quot;&gt;отложенному объекту&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c868cda9831ab02d603dca42da87c51873ecc8fc" translate="yes" xml:space="preserve">
          <source>For needs that fall outside of this behavior, write a custom extend method instead, or use a library like &lt;a href=&quot;https://lodash.com&quot;&gt;lodash&lt;/a&gt;.</source>
          <target state="translated">Для нужд, выходящих за рамки этого поведения, напишите вместо этого собственный метод расширения или используйте библиотеку, например &lt;a href=&quot;https://lodash.com&quot;&gt;lodash&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="71d4eb7fde690f2488796d6d40458af66bc1bb08" translate="yes" xml:space="preserve">
          <source>For non-delegated event handlers attached directly to an element, &lt;code&gt;event.delegateTarget&lt;/code&gt; will always be equal to &lt;code&gt;event.currentTarget&lt;/code&gt;.</source>
          <target state="translated">Для &lt;code&gt;event.delegateTarget&lt;/code&gt; обработчиков событий, прикрепленных непосредственно к элементу, event.delegateTarget всегда будет равен &lt;code&gt;event.currentTarget&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1569a417e5bc013ed8b3b21ac19a98de3f5f1979" translate="yes" xml:space="preserve">
          <source>For pages still using &lt;code&gt;.live()&lt;/code&gt;, this list of version-specific differences may be helpful:</source>
          <target state="translated">Для страниц, все еще использующих &lt;code&gt;.live()&lt;/code&gt; , может быть полезен этот список различий, связанных с версиями:</target>
        </trans-unit>
        <trans-unit id="a43de00ef2068e64c4b4ec8b88356ff33bf6360a" translate="yes" xml:space="preserve">
          <source>For selects, checkboxes and radio buttons, you can use &lt;a href=&quot;checked-selector&quot;&gt;:checked&lt;/a&gt; to select the right elements. For example:</source>
          <target state="translated">Для выбора, флажков и переключателей вы можете использовать &lt;a href=&quot;checked-selector&quot;&gt;: checked&lt;/a&gt; для выбора правильных элементов. Например:</target>
        </trans-unit>
        <trans-unit id="6f9453682ae9a735dd902cfe772d3ada7f0247a4" translate="yes" xml:space="preserve">
          <source>Forms and their child elements should not use input names or ids that conflict with properties of a form, such as &lt;code&gt;submit&lt;/code&gt;, &lt;code&gt;length&lt;/code&gt;, or &lt;code&gt;method&lt;/code&gt;. Name conflicts can cause confusing failures. For a complete list of rules and to check your markup for these problems, see &lt;a href=&quot;https://kangax.github.com/domlint/&quot;&gt;DOMLint&lt;/a&gt;.</source>
          <target state="translated">Формы и их дочерние элементы не должны использовать входные имена или идентификаторы, которые конфликтуют со свойствами формы, такими как &lt;code&gt;submit&lt;/code&gt; , &lt;code&gt;length&lt;/code&gt; или &lt;code&gt;method&lt;/code&gt; . Конфликты имен могут привести к сбивающим с толку сбоям. Для получения полного списка правил и проверки вашей разметки на наличие этих проблем см. &lt;a href=&quot;https://kangax.github.com/domlint/&quot;&gt;DOMLint&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9aa2d00beb73fcc2216e91a5e1d3a3f40b1bdfc5" translate="yes" xml:space="preserve">
          <source>From this example, we can see that the selected element replaces the target by being moved from its old location, not by being cloned.</source>
          <target state="translated">Из этого примера видно,что выбранный элемент заменяет цель,перемещаясь из старого места,а не клонируясь.</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="1ed0e208935e6b03dcb71bca099a6875a8b2155b" translate="yes" xml:space="preserve">
          <source>Further discussion of this unusual usage can be found in the &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#nth-child-pseudo&quot;&gt;W3C CSS specification&lt;/a&gt;.</source>
          <target state="translated">Дальнейшее обсуждение этого необычного использования можно найти в &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#nth-child-pseudo&quot;&gt;спецификации W3C CSS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="088d508f862a4bef2fd2e215bbde4daefe5221a4" translate="yes" xml:space="preserve">
          <source>Further discussion of this usage can be found in the &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#lang-pseudo&quot;&gt;W3C CSS specification&lt;/a&gt;.</source>
          <target state="translated">Дальнейшее обсуждение этого использования можно найти в &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#lang-pseudo&quot;&gt;спецификации W3C CSS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="08c8a40e35c45545a5b6c98ac5890b94c82b1678" translate="yes" xml:space="preserve">
          <source>Further discussion of this usage can be found in the &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#nth-last-child-pseudo&quot;&gt;W3C CSS specification&lt;/a&gt;.</source>
          <target state="translated">Дальнейшее обсуждение этого использования можно найти в &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#nth-last-child-pseudo&quot;&gt;спецификации W3C CSS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="921705e59313b7a736acda7dca5b051bffceb268" translate="yes" xml:space="preserve">
          <source>Further discussion of this usage can be found in the &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#nth-last-of-type-pseudo&quot;&gt;W3C CSS specification&lt;/a&gt;.</source>
          <target state="translated">Дальнейшее обсуждение этого использования можно найти в &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#nth-last-of-type-pseudo&quot;&gt;спецификации W3C CSS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="86236dcf3827e429f75104c51657752e6c1760c3" translate="yes" xml:space="preserve">
          <source>Further discussion of this usage can be found in the &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#nth-of-type-pseudo&quot;&gt;W3C CSS specification&lt;/a&gt;.</source>
          <target state="translated">Дальнейшее обсуждение этого использования можно найти в &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#nth-of-type-pseudo&quot;&gt;спецификации W3C CSS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b75f0ed0d84c2f0a6f58c2aa0bb3d0c26aa22e89" translate="yes" xml:space="preserve">
          <source>Further discussion of this usage can be found in the &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#target-pseudo&quot;&gt;W3C CSS specification&lt;/a&gt;.</source>
          <target state="translated">Дальнейшее обсуждение этого использования можно найти в &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#target-pseudo&quot;&gt;спецификации W3C CSS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c3ec4f02d993747e068fc0fcf7f9a2b0f5e9764a" translate="yes" xml:space="preserve">
          <source>Get all following siblings of each element in the set of matched elements, optionally filtered by a selector.</source>
          <target state="translated">Получить всех последующих братьев и сестер каждого элемента в наборе подходящих элементов,опционально отфильтрованных селектором.</target>
        </trans-unit>
        <trans-unit id="225dc925195e1a0f41fce0d2d521e6acce8c701e" translate="yes" xml:space="preserve">
          <source>Get all following siblings of each element up to but not including the element matched by the selector, DOM node, or jQuery object passed.</source>
          <target state="translated">Получить всех последующих братьев и сестер каждого элемента до,но не включая элемент,совпадающий с переданным селектором,DOM-узлом или jQuery-объектом.</target>
        </trans-unit>
        <trans-unit id="95a50d7af7f8ca615f109fa1d1455015c47c4991" translate="yes" xml:space="preserve">
          <source>Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.</source>
          <target state="translated">Получить всех предшествующих братьев и сестер каждого элемента в наборе совпадающих элементов,опционально отфильтрованных селектором.</target>
        </trans-unit>
        <trans-unit id="b43fd88bcdc784b29698cfa8e804ff7e27b83367" translate="yes" xml:space="preserve">
          <source>Get all preceding siblings of each element up to but not including the element matched by the selector, DOM node, or jQuery object.</source>
          <target state="translated">Получить всех предшествующих братьев и сестер каждого элемента до,но не включая элемент,совпадающий с селектором,DOM-узлом или jQuery-объектом.</target>
        </trans-unit>
        <trans-unit id="def41336c38d30d9695430a64cd63baf88c111f6" translate="yes" xml:space="preserve">
          <source>Get another page on the same domain. Outputs to console both the data returned and the type of data returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b5b3295285f15c709634c34b26ac40c53caaa50" translate="yes" xml:space="preserve">
          <source>Get the HTML contents of the first element in the set of matched elements or set the HTML contents of every matched element.</source>
          <target state="translated">Получить HTML содержимое первого элемента в наборе совпадающих элементов или установить HTML содержимое каждого совпадающего элемента.</target>
        </trans-unit>
        <trans-unit id="f17aab087bb690a38d423c34d29b2d9239935907" translate="yes" xml:space="preserve">
          <source>Get the ancestors of each element in the current set of matched elements, optionally filtered by a selector.</source>
          <target state="translated">Получить предков каждого элемента в текущем наборе совпадающих элементов,опционально отфильтрованных селектором.</target>
        </trans-unit>
        <trans-unit id="8d432bc5a267366259f120ff12e827235e01a9fd" translate="yes" xml:space="preserve">
          <source>Get the ancestors of each element in the current set of matched elements, up to but not including the element matched by the selector, DOM node, or jQuery object.</source>
          <target state="translated">Получить предки каждого элемента в текущем наборе совпадающих элементов,вплоть до элемента,совпадающего по селектору,DOM-узлу или объекту jQuery,но не включая его.</target>
        </trans-unit>
        <trans-unit id="014871d79f603f8ec9ce8e3f8ea99b12a8d36bbb" translate="yes" xml:space="preserve">
          <source>Get the background color of a clicked div.</source>
          <target state="translated">Получите цвет фона нажатого ныряльщика.</target>
        </trans-unit>
        <trans-unit id="3315cbfac5150265188d20f6695ef441e1b04d8f" translate="yes" xml:space="preserve">
          <source>Get the children of each element in the set of matched elements, including text and comment nodes.</source>
          <target state="translated">Получить дочерние элементы каждого элемента в наборе совпадающих элементов,включая текстовые узлы и узлы комментариев.</target>
        </trans-unit>
        <trans-unit id="18444208fb696aae10d0acc9ab0d3f650d3c8d38" translate="yes" xml:space="preserve">
          <source>Get the children of each element in the set of matched elements, optionally filtered by a selector.</source>
          <target state="translated">Получить дочерние элементы каждого элемента в наборе подходящих элементов,опционально отфильтрованных селектором.</target>
        </trans-unit>
        <trans-unit id="f469d79370aba6cac09c73c00c7965a6c4055d2e" translate="yes" xml:space="preserve">
          <source>Get the closest ancestor element that is positioned.</source>
          <target state="translated">Получить ближайший элемент предка,который расположен.</target>
        </trans-unit>
        <trans-unit id="a19834b9d5904106cb0b0e73fba9bbba80b0074a" translate="yes" xml:space="preserve">
          <source>Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.</source>
          <target state="translated">Получить комбинированное текстовое содержимое каждого элемента в наборе совпадающих элементов,включая их потомков,или установить текстовое содержимое совпадающих элементов.</target>
        </trans-unit>
        <trans-unit id="6de0dc0760fa8fb63279b7e5efa6b1f22f77f371" translate="yes" xml:space="preserve">
          <source>Get the current computed height for the first element in the set of matched elements or set the height of every matched element.</source>
          <target state="translated">Получите текущую расчетную высоту для первого элемента в наборе подходящих элементов или задайте высоту для каждого подходящего элемента.</target>
        </trans-unit>
        <trans-unit id="f6726260a19d26d9f99f1fb235cf9bb018c6b57b" translate="yes" xml:space="preserve">
          <source>Get the current computed inner height (including padding but not border) for the first element in the set of matched elements or set the inner height of every matched element.</source>
          <target state="translated">Получите текущую расчетную внутреннюю высоту (включая набивку,но не бордюр)для первого элемента в наборе подогнанных элементов или задайте внутреннюю высоту каждого подогнанного элемента.</target>
        </trans-unit>
        <trans-unit id="a50d923494b0cc1ad667a93b23b0071c14337499" translate="yes" xml:space="preserve">
          <source>Get the current computed inner width (including padding but not border) for the first element in the set of matched elements or set the inner width of every matched element.</source>
          <target state="translated">Получить текущую вычисленную внутреннюю ширину (включая набивку,но не бордюр)для первого элемента в наборе подогнанных элементов или установить внутреннюю ширину каждого подогнанного элемента.</target>
        </trans-unit>
        <trans-unit id="6f7c7ca9a4b8ccc11ca1bae57f48874324d33236" translate="yes" xml:space="preserve">
          <source>Get the current computed outer height (including padding, border, and optionally margin) for the first element in the set of matched elements or set the outer height of every matched element.</source>
          <target state="translated">Получите текущую расчетную внешнюю высоту (включая подкладку,бордюр и,по желанию,поле)для первого элемента в наборе подогнанных элементов или установите внешнюю высоту каждого подогнанного элемента.</target>
        </trans-unit>
        <trans-unit id="0c5e57888b0fbf6fc0a64682e3969bf8ef6b22a4" translate="yes" xml:space="preserve">
          <source>Get the current computed outer width (including padding, border, and optionally margin) for the first element in the set of matched elements or set the outer width of every matched element.</source>
          <target state="translated">Получите текущую расчетную наружную ширину (включая набивку,бордюр и,по желанию,поле)для первого элемента в наборе подогнанных элементов или установите наружную ширину каждого подогнанного элемента.</target>
        </trans-unit>
        <trans-unit id="d6ecc3ef1de5eef4c8c34e7b7a54f26aa0ce37ab" translate="yes" xml:space="preserve">
          <source>Get the current computed width for the first element in the set of matched elements or set the width of every matched element.</source>
          <target state="translated">Получить текущую расчетную ширину для первого элемента в наборе подогнанных элементов или установить ширину каждого подогнанного элемента.</target>
        </trans-unit>
        <trans-unit id="fb026a4b436bb1384e0a402f1298ae2dde2d2e5d" translate="yes" xml:space="preserve">
          <source>Get the current coordinates of the first element in the set of matched elements, relative to the offset parent.</source>
          <target state="translated">Получить текущие координаты первого элемента в наборе совпадающих элементов относительно родителя со смещением.</target>
        </trans-unit>
        <trans-unit id="d9409a70067dfa70abb108b0724394fd7639b300" translate="yes" xml:space="preserve">
          <source>Get the current coordinates of the first element, or set the coordinates of every element, in the set of matched elements, relative to the document.</source>
          <target state="translated">Получить текущие координаты первого элемента или задать координаты каждого элемента в наборе совпадающих элементов относительно документа.</target>
        </trans-unit>
        <trans-unit id="b8d2a4b3d2efda8e7482763ad66dade68e1ca37b" translate="yes" xml:space="preserve">
          <source>Get the current horizontal position of the scroll bar for the first element in the set of matched elements or set the horizontal position of the scroll bar for every matched element.</source>
          <target state="translated">Получить текущее горизонтальное положение полосы прокрутки для первого элемента в наборе совмещенных элементов или установить горизонтальное положение полосы прокрутки для каждого совмещенного элемента.</target>
        </trans-unit>
        <trans-unit id="77dec0c71a2f90a7de46bf3d6155c0b22ad0c634" translate="yes" xml:space="preserve">
          <source>Get the current value of the first element in the set of matched elements or set the value of every matched element.</source>
          <target state="translated">Получить текущее значение первого элемента в наборе совпадающих элементов или установить значение каждого совпадающего элемента.</target>
        </trans-unit>
        <trans-unit id="41274baaacd1e8e858be16de3fc730699e48bc0f" translate="yes" xml:space="preserve">
          <source>Get the current version of jQuery running on the page</source>
          <target state="translated">Запустите текущую версию jQuery на странице</target>
        </trans-unit>
        <trans-unit id="add2712702ca5731aa1538f775be8a1ff6698c2c" translate="yes" xml:space="preserve">
          <source>Get the current vertical position of the scroll bar for the first element in the set of matched elements or set the vertical position of the scroll bar for every matched element.</source>
          <target state="translated">Получить текущее вертикальное положение полосы прокрутки для первого элемента в наборе подходящих элементов или установить вертикальное положение полосы прокрутки для каждого подходящего элемента.</target>
        </trans-unit>
        <trans-unit id="5c31c8da7143242d674a7c45207241686267e54e" translate="yes" xml:space="preserve">
          <source>Get the data named &quot;blah&quot; stored at for an element.</source>
          <target state="translated">Получить данные с именем &quot;бла&quot;,сохраненные для элемента.</target>
        </trans-unit>
        <trans-unit id="fa5cd6f673783a1c0c7ebd4a1ee81f65ec29e4a3" translate="yes" xml:space="preserve">
          <source>Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.</source>
          <target state="translated">Получить потомков каждого элемента в текущем наборе совпадающих элементов,отфильтрованных селектором,объектом jQuery или элементом.</target>
        </trans-unit>
        <trans-unit id="0c1b876e8eb699c70c2112d80741d08fc80f0b2c" translate="yes" xml:space="preserve">
          <source>Get the immediately following sibling of each element in the set of matched elements. If a selector is provided, it retrieves the next sibling only if it matches that selector.</source>
          <target state="translated">Получите немедленно следующего брата или сестру каждого элемента в наборе подходящих элементов.Если предусмотрен селектор,то он получает следующего брата только в том случае,если он соответствует этому селектору.</target>
        </trans-unit>
        <trans-unit id="335a02f34e13c343eded1303cf0cd98947e2f766" translate="yes" xml:space="preserve">
          <source>Get the immediately preceding sibling of each element in the set of matched elements. If a selector is provided, it retrieves the previous sibling only if it matches that selector.</source>
          <target state="translated">Получить непосредственно предшествующий брат или сестра каждого элемента в наборе подходящих элементов.При наличии селектора он получает предыдущего брата только в том случае,если он совпадает с этим селектором.</target>
        </trans-unit>
        <trans-unit id="8354b71557f579fbe9546f5f8bfbab78772cef5c" translate="yes" xml:space="preserve">
          <source>Get the innerHeight of a paragraph.</source>
          <target state="translated">Получите внутреннюю высоту параграфа.</target>
        </trans-unit>
        <trans-unit id="b7168a49097a374663292915bfe1cdfb6d9f57ee" translate="yes" xml:space="preserve">
          <source>Get the innerWidth of a paragraph.</source>
          <target state="translated">Получить внутреннюю ширину параграфа.</target>
        </trans-unit>
        <trans-unit id="f46458d2947881340d36b16da1c8f1168dc376e9" translate="yes" xml:space="preserve">
          <source>Get the outerHeight of a paragraph.</source>
          <target state="translated">Получить внешнюю высоту параграфа.</target>
        </trans-unit>
        <trans-unit id="ecf2a430fcecb3a68664aa2e8233a6a8fde8e067" translate="yes" xml:space="preserve">
          <source>Get the outerWidth of a paragraph.</source>
          <target state="translated">Получить внешнюю ширину параграфа.</target>
        </trans-unit>
        <trans-unit id="c28eff6f3e91774204a600d9e8f5002a72ca8cf9" translate="yes" xml:space="preserve">
          <source>Get the parent of each element in the current set of matched elements, optionally filtered by a selector.</source>
          <target state="translated">Получить родителя каждого элемента в текущем наборе совпадающих элементов,опционально отфильтрованных селектором.</target>
        </trans-unit>
        <trans-unit id="eaa95540869200bb1c93d086bf5356cd11d62dab" translate="yes" xml:space="preserve">
          <source>Get the scrollLeft of a paragraph.</source>
          <target state="translated">Получите прокруткуСлева от абзаца.</target>
        </trans-unit>
        <trans-unit id="2731ab38c3a3ee381b42427f06303e6cd46ab7b4" translate="yes" xml:space="preserve">
          <source>Get the scrollTop of a paragraph.</source>
          <target state="translated">Получите прокруткуВверху параграфа.</target>
        </trans-unit>
        <trans-unit id="4191e267b598f4846023d1fd1425f56e41cf8145" translate="yes" xml:space="preserve">
          <source>Get the siblings of each element in the set of matched elements, optionally filtered by a selector.</source>
          <target state="translated">Получить братьев и сестер каждого элемента в наборе подходящих элементов,опционально отфильтрованных селектором.</target>
        </trans-unit>
        <trans-unit id="419b311d786b9473904918590185c5b8ab4138d5" translate="yes" xml:space="preserve">
          <source>Get the single value from a single select and an array of values from a multiple select and display their values.</source>
          <target state="translated">Получить единственное значение из одного выделения и массив значений из множественного выделения и отобразить их значения.</target>
        </trans-unit>
        <trans-unit id="89315a47ce2ff1fce03f9c5d2e3b9b74103cb3c8" translate="yes" xml:space="preserve">
          <source>Get the test.php page contents, which has been returned in json format (&amp;lt;?php echo json_encode( array( &quot;name&quot;=&amp;gt;&quot;John&quot;,&quot;time&quot;=&amp;gt;&quot;2pm&quot; ) ); ?&amp;gt;), and add it to the page.</source>
          <target state="translated">Получите содержимое страницы test.php, которое было возвращено в формате json (&amp;lt;? Php echo json_encode (array (&quot;name&quot; =&amp;gt; &quot;John&quot;, &quot;time&quot; =&amp;gt; &quot;2pm&quot;));?&amp;gt;), И добавьте его на страницу.</target>
        </trans-unit>
        <trans-unit id="65152358acbc303fc67a62c0aa11d510c0ed433e" translate="yes" xml:space="preserve">
          <source>Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.</source>
          <target state="translated">Получить значение вычисленного стилевого свойства для первого элемента в наборе совпадающих элементов или задать одно или несколько CSS-свойств для каждого совпадающего элемента.</target>
        </trans-unit>
        <trans-unit id="3aff954dc0ccfd7540d1ab41043f99d53ed05d25" translate="yes" xml:space="preserve">
          <source>Get the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.</source>
          <target state="translated">Получить значение свойства для первого элемента в наборе совпадающих элементов или установить одно или несколько свойств для каждого совпадающего элемента.</target>
        </trans-unit>
        <trans-unit id="b2bb03656d1004710f3d5bfa978f3b57de45feae" translate="yes" xml:space="preserve">
          <source>Get the value of an attribute for the first element in the set of matched elements or set one or more attributes for every matched element.</source>
          <target state="translated">Получить значение атрибута для первого элемента в наборе совпадающих элементов или установить один или несколько атрибутов для каждого совпадающего элемента.</target>
        </trans-unit>
        <trans-unit id="5e9cffad47fb4bcaec44cecc930ced17c7ca41db" translate="yes" xml:space="preserve">
          <source>Get the values from a form, iterate through them, and append them to a results display.</source>
          <target state="translated">Получить значения из формы,выполнить через них итерацию и приложить их к отображению результатов.</target>
        </trans-unit>
        <trans-unit id="7c88b330aac236cb29b103e491fc12e4f4ff9701" translate="yes" xml:space="preserve">
          <source>Get the width, height, text color, and background color of a clicked div.</source>
          <target state="translated">Получите ширину,высоту,цвет текста и цвет фона нажатого div.</target>
        </trans-unit>
        <trans-unit id="76e7a3a3f9c225fe820ba7e9cff10ea2a73b79a1" translate="yes" xml:space="preserve">
          <source>Getting started</source>
          <target state="translated">Начало работы</target>
        </trans-unit>
        <trans-unit id="e3141924dad5a26b501b478748eb80347442c79e" translate="yes" xml:space="preserve">
          <source>Give TD #5 and higher a yellow background and TD #8 a red text color.</source>
          <target state="translated">Дайте TD #5 и выше желтый фон,а TD #8 красный цвет текста.</target>
        </trans-unit>
        <trans-unit id="c1b6c4599ed573ccdb0a89a914aeab8146f6d68b" translate="yes" xml:space="preserve">
          <source>Give TDs less than the one with the 4th index (TD#4) a yellow background and TDs less than the one with -2nd index a red text color.</source>
          <target state="translated">Дайте TD меньше,чем с 4-м индексом (TD#4),желтый фон,а TD меньше,чем с -2-м индексом,красный цвет текста.</target>
        </trans-unit>
        <trans-unit id="92be7dd3d6ff92e242adf73381720d683a112d20" translate="yes" xml:space="preserve">
          <source>Given a document with six paragraphs, this example will set the HTML of &lt;code&gt;&amp;lt;div class=&quot;demo-container&quot;&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;p&amp;gt;All new content for &amp;lt;em&amp;gt;6 paragraphs!&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Для документа с шестью абзацами в этом примере для HTML-кода &lt;code&gt;&amp;lt;div class=&quot;demo-container&quot;&amp;gt;&lt;/code&gt; будет установлено значение &lt;code&gt;&amp;lt;p&amp;gt;All new content for &amp;lt;em&amp;gt;6 paragraphs!&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="519900ee0ce2ab5597fb16096223804c32160877" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.add()&lt;/code&gt; method constructs a new jQuery object from the union of those elements and the ones passed into the method. The argument to &lt;code&gt;.add()&lt;/code&gt; can be pretty much anything that &lt;code&gt;$()&lt;/code&gt; accepts, including a jQuery selector expression, references to DOM elements, or an HTML snippet.</source>
          <target state="translated">Учитывая объект jQuery, представляющий набор элементов DOM, метод &lt;code&gt;.add()&lt;/code&gt; создает новый объект jQuery из объединения этих элементов и элементов, переданных в метод. Аргументом для &lt;code&gt;.add()&lt;/code&gt; может быть практически все, что принимает &lt;code&gt;$()&lt;/code&gt; , включая выражение селектора jQuery, ссылки на элементы DOM или фрагмент HTML.</target>
        </trans-unit>
        <trans-unit id="2ae30bd138a25c92d3a50c66883288024497bfb5" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.children()&lt;/code&gt; method allows us to search through the children of these elements in the DOM tree and construct a new jQuery object from the matching elements. The &lt;code&gt;.children()&lt;/code&gt; method differs from &lt;code&gt;&lt;a href=&quot;find&quot;&gt;.find()&lt;/a&gt;&lt;/code&gt; in that &lt;code&gt;.children()&lt;/code&gt; only travels a single level down the DOM tree while &lt;code&gt;.find()&lt;/code&gt; can traverse down multiple levels to select descendant elements (grandchildren, etc.) as well. Note also that like most jQuery methods, &lt;code&gt;.children()&lt;/code&gt; does not return text nodes; to get &lt;em&gt;all&lt;/em&gt; children including text and comment nodes, use &lt;code&gt;&lt;a href=&quot;contents&quot;&gt;.contents()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Учитывая объект jQuery, представляющий набор элементов DOM, метод &lt;code&gt;.children()&lt;/code&gt; позволяет нам искать дочерние элементы этих элементов в дереве DOM и создавать новый объект jQuery из соответствующих элементов. Метод &lt;code&gt;.children()&lt;/code&gt; отличается от &lt;code&gt;&lt;a href=&quot;find&quot;&gt;.find()&lt;/a&gt;&lt;/code&gt; тем, что &lt;code&gt;.children()&lt;/code&gt; перемещается только на один уровень вниз по дереву DOM, в то время как &lt;code&gt;.find()&lt;/code&gt; может перемещаться вниз по нескольким уровням для выбора дочерних элементов (внуков и т. Д.). Также обратите внимание, что, как и большинство методов jQuery, &lt;code&gt;.children()&lt;/code&gt; не возвращает текстовые узлы; чтобы получить &lt;em&gt;все&lt;/em&gt; дочерние &lt;code&gt;&lt;a href=&quot;contents&quot;&gt;.contents()&lt;/a&gt;&lt;/code&gt; включая узлы текста и комментариев, используйте .contents () .</target>
        </trans-unit>
        <trans-unit id="aa28e77d1f7f5ee68968abbd284d87de28b906a4" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.closest()&lt;/code&gt; method searches through these elements and their ancestors in the DOM tree and constructs a new jQuery object from the matching elements. The &lt;a href=&quot;parents&quot;&gt;&lt;code&gt;.parents()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;.closest()&lt;/code&gt; methods are similar in that they both traverse up the DOM tree. The differences between the two, though subtle, are significant:</source>
          <target state="translated">Учитывая объект jQuery, представляющий набор элементов DOM, метод &lt;code&gt;.closest()&lt;/code&gt; выполняет поиск этих элементов и их предков в дереве DOM и создает новый объект jQuery из соответствующих элементов. В &lt;a href=&quot;parents&quot;&gt; &lt;code&gt;.parents()&lt;/code&gt; &lt;/a&gt; и &lt;code&gt;.closest()&lt;/code&gt; методы сходны в том , что они оба траверс вверх по дереву DOM. Различия между ними, хотя и тонкие, но существенны:</target>
        </trans-unit>
        <trans-unit id="9d57e787f03d92e5bd53cc9be058bc611ecfa380" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.contents()&lt;/code&gt; method allows us to search through the immediate children of these elements in the DOM tree and construct a new jQuery object from the matching elements. The &lt;code&gt;.contents()&lt;/code&gt; and &lt;code&gt;.children()&lt;/code&gt; methods are similar, except that the former includes text nodes and comment nodes as well as HTML elements in the resulting jQuery object. Please note that most jQuery operations don't support text nodes and comment nodes. The few that do will have an explicit note on their API documentation page.</source>
          <target state="translated">Учитывая объект jQuery, представляющий набор элементов DOM, метод &lt;code&gt;.contents()&lt;/code&gt; позволяет нам искать среди непосредственных потомков этих элементов в дереве DOM и создавать новый объект jQuery из соответствующих элементов. В &lt;code&gt;.contents()&lt;/code&gt; и &lt;code&gt;.children()&lt;/code&gt; методы аналогичны, за исключением того, что бывший включает в себя текстовые узлы и узлы комментариев, а также HTML элементы результирующего объекта JQuery. Обратите внимание, что большинство операций jQuery не поддерживают текстовые узлы и узлы комментариев. Те немногие, кто это сделает, будут иметь явное примечание на странице документации по API.</target>
        </trans-unit>
        <trans-unit id="607593d2221bfb6bceac2883e33eb70479bf755b" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.eq()&lt;/code&gt; method constructs a new jQuery object from one element within that set. The supplied index identifies the position of this element in the set.</source>
          <target state="translated">Учитывая объект jQuery, представляющий набор элементов DOM, метод &lt;code&gt;.eq()&lt;/code&gt; создает новый объект jQuery из одного элемента в этом наборе. Поставляемый индекс определяет позицию этого элемента в наборе.</target>
        </trans-unit>
        <trans-unit id="6c7680e6581e246e0e0c65836d2f7f555848a743" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.even()&lt;/code&gt; method constructs a new jQuery object from the even elements in that set. Counting starts from zero!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef67462474d6472ce7f81cf8403e1bb2aafea409" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.filter()&lt;/code&gt; method constructs a new jQuery object from a subset of the matching elements. The supplied selector is tested against each element; all elements matching the selector will be included in the result.</source>
          <target state="translated">Учитывая объект jQuery, представляющий набор элементов DOM, метод &lt;code&gt;.filter()&lt;/code&gt; создает новый объект jQuery из подмножества соответствующих элементов. Поставляемый селектор проверяется на каждом элементе; все элементы, соответствующие селектору, будут включены в результат.</target>
        </trans-unit>
        <trans-unit id="b1a131d79323330fe3d7a0ab5d05ef4560501f52" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.find()&lt;/code&gt; method allows us to search through the descendants of these elements in the DOM tree and construct a new jQuery object from the matching elements. The &lt;code&gt;.find()&lt;/code&gt; and &lt;code&gt;.children()&lt;/code&gt; methods are similar, except that the latter only travels a single level down the DOM tree.</source>
          <target state="translated">Учитывая объект jQuery, представляющий набор элементов DOM, метод &lt;code&gt;.find()&lt;/code&gt; позволяет нам искать потомков этих элементов в дереве DOM и создавать новый объект jQuery из соответствующих элементов. &lt;code&gt;.find()&lt;/code&gt; и &lt;code&gt;.children()&lt;/code&gt; методы аналогичны, за исключением того, что последний только путешествует один уровень вниз по дереву DOM.</target>
        </trans-unit>
        <trans-unit id="c7c91c51e5b4f43f344d3a0b4aa8da0409d9b3d7" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.first()&lt;/code&gt; method constructs a new jQuery object from the first element in that set.</source>
          <target state="translated">Учитывая объект jQuery, представляющий набор элементов DOM, метод &lt;code&gt;.first()&lt;/code&gt; создает новый объект jQuery из первого элемента в этом наборе.</target>
        </trans-unit>
        <trans-unit id="7278c9a4a04389d805ee116e619b665dcfb90754" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.has()&lt;/code&gt; method constructs a new jQuery object from a subset of the matching elements. The supplied selector is tested against the descendants of the matching elements; the element will be included in the result if any of its descendant elements matches the selector.</source>
          <target state="translated">Учитывая объект jQuery, представляющий набор элементов DOM, &lt;code&gt;.has()&lt;/code&gt; создает новый объект jQuery из подмножества совпадающих элементов. Поставляемый селектор проверяется на потомках соответствующих элементов; элемент будет включен в результат, если какой-либо из его дочерних элементов соответствует селектору.</target>
        </trans-unit>
        <trans-unit id="293ce07c121457718c0c003c78434404843d8286" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.last()&lt;/code&gt; method constructs a new jQuery object from the last element in that set.</source>
          <target state="translated">Учитывая объект jQuery, представляющий набор элементов DOM, метод &lt;code&gt;.last()&lt;/code&gt; создает новый объект jQuery из последнего элемента в этом наборе.</target>
        </trans-unit>
        <trans-unit id="7865d670b4ebc09c6358b18de8d6aa45571039d4" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.next()&lt;/code&gt; method allows us to search through the immediately following sibling of these elements in the DOM tree and construct a new jQuery object from the matching elements.</source>
          <target state="translated">Учитывая объект jQuery, представляющий набор элементов DOM, метод &lt;code&gt;.next()&lt;/code&gt; позволяет нам искать ближайшего брата этих элементов в дереве DOM и создавать новый объект jQuery из соответствующих элементов.</target>
        </trans-unit>
        <trans-unit id="d21744608bceb06a63a3bb9aac7ede1a30a390bc" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.nextAll()&lt;/code&gt; method allows us to search through the successors of these elements in the DOM tree and construct a new jQuery object from the matching elements.</source>
          <target state="translated">Учитывая объект jQuery, представляющий набор элементов DOM, метод &lt;code&gt;.nextAll()&lt;/code&gt; позволяет нам искать потомков этих элементов в дереве DOM и создавать новый объект jQuery из соответствующих элементов.</target>
        </trans-unit>
        <trans-unit id="abb6beec45d71e8925c2cae85c98a7a0df9c7bfe" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.not()&lt;/code&gt; method constructs a new jQuery object from a subset of the matching elements. The supplied selector is tested against each element; the elements that don't match the selector will be included in the result.</source>
          <target state="translated">Учитывая объект jQuery, который представляет набор элементов DOM, метод &lt;code&gt;.not()&lt;/code&gt; создает новый объект jQuery из подмножества совпадающих элементов. Поставляемый селектор проверяется на каждом элементе; элементы, которые не соответствуют селектору, будут включены в результат.</target>
        </trans-unit>
        <trans-unit id="e164d882d2e1f308b0137a549a081758f1c267b9" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.odd()&lt;/code&gt; method constructs a new jQuery object from the odd elements in that set. Counting starts from zero!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="341a922f79af20e3c10f929effdbbffcc06f4ec0" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.offsetParent()&lt;/code&gt; method allows us to search through the ancestors of these elements in the DOM tree and construct a new jQuery object wrapped around the closest positioned ancestor. An element is said to be positioned if it has a CSS position attribute of &lt;code&gt;relative&lt;/code&gt;, &lt;code&gt;absolute&lt;/code&gt;, or &lt;code&gt;fixed&lt;/code&gt;. This information is useful for calculating offsets for performing animations and placing objects on the page.</source>
          <target state="translated">Учитывая объект jQuery, представляющий набор элементов DOM, метод &lt;code&gt;.offsetParent()&lt;/code&gt; позволяет нам искать предков этих элементов в дереве DOM и создавать новый объект jQuery, обернутый вокруг ближайшего позиционированного предка. Элемент считается позиционированным, если он имеет атрибут CSS position: &lt;code&gt;relative&lt;/code&gt; , &lt;code&gt;absolute&lt;/code&gt; или &lt;code&gt;fixed&lt;/code&gt; . Эта информация полезна для расчета смещений для выполнения анимации и размещения объектов на странице.</target>
        </trans-unit>
        <trans-unit id="7509c84a2954ea5449c4ffee154cd369427ee48a" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.parents()&lt;/code&gt; method allows us to search through the ancestors of these elements in the DOM tree and construct a new jQuery object from the matching elements ordered from immediate parent on up; the elements are returned in order from the closest parent to the outer ones. When multiple DOM elements are in the original set, the resulting set will be in &lt;em&gt;reverse&lt;/em&gt; order of the original elements as well, with duplicates removed.</source>
          <target state="translated">Учитывая объект jQuery, представляющий набор элементов DOM, метод &lt;code&gt;.parents()&lt;/code&gt; позволяет нам искать предков этих элементов в дереве DOM и создавать новый объект jQuery из соответствующих элементов, упорядоченных от непосредственного родителя и далее; элементы возвращаются в порядке от ближайшего родителя к внешнему. Когда несколько элементов DOM находятся в исходном наборе, результирующий набор также будет иметь порядок, &lt;em&gt;обратный&lt;/em&gt; исходным элементам, с удалением дубликатов.</target>
        </trans-unit>
        <trans-unit id="fc3ad75e089d55bfdf0cd91ccb14823f022963f8" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.prev()&lt;/code&gt; method searches for the predecessor of each of these elements in the DOM tree and constructs a new jQuery object from the matching elements.</source>
          <target state="translated">Учитывая объект jQuery, представляющий набор элементов DOM, метод &lt;code&gt;.prev()&lt;/code&gt; выполняет поиск предшественника каждого из этих элементов в дереве DOM и создает новый объект jQuery из соответствующих элементов.</target>
        </trans-unit>
        <trans-unit id="749930ced2bb0dc724f26b45b24212979f38c247" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.prevAll()&lt;/code&gt; method searches through the predecessors of these elements in the DOM tree and construct a new jQuery object from the matching elements; the elements are returned in order beginning with the closest sibling.</source>
          <target state="translated">Учитывая объект jQuery, представляющий набор элементов DOM, метод &lt;code&gt;.prevAll()&lt;/code&gt; выполняет поиск по предшественникам этих элементов в дереве DOM и создает новый объект jQuery из соответствующих элементов; элементы возвращаются в порядке, начиная с ближайшего брата.</target>
        </trans-unit>
        <trans-unit id="681e0cbe1d7984fe1e049080716dfdef1ba0d585" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.siblings()&lt;/code&gt; method allows us to search through the siblings of these elements in the DOM tree and construct a new jQuery object from the matching elements.</source>
          <target state="translated">Учитывая объект jQuery, представляющий набор элементов DOM, метод &lt;code&gt;.siblings()&lt;/code&gt; позволяет нам искать братьев и сестер этих элементов в дереве DOM и создавать новый объект jQuery из соответствующих элементов.</target>
        </trans-unit>
        <trans-unit id="116fbd9f9e0799d0fe86d37127d8c911b0e8dafa" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.slice()&lt;/code&gt; method constructs a new jQuery object containing a subset of the elements specified by the &lt;code&gt;start&lt;/code&gt; and, optionally, &lt;code&gt;end&lt;/code&gt; argument. The supplied &lt;code&gt;start&lt;/code&gt; index identifies the position of one of the elements in the set; if &lt;code&gt;end&lt;/code&gt; is omitted, all elements after this one will be included in the result.</source>
          <target state="translated">Учитывая объект jQuery, представляющий набор элементов DOM, метод &lt;code&gt;.slice()&lt;/code&gt; создает новый объект jQuery, содержащий подмножество элементов, заданных &lt;code&gt;start&lt;/code&gt; и, необязательно, &lt;code&gt;end&lt;/code&gt; аргументом. Поставляемый &lt;code&gt;start&lt;/code&gt; индекс определяет позицию одного из элементов в наборе; если &lt;code&gt;end&lt;/code&gt; опущен, все элементы после этого будут включены в результат.</target>
        </trans-unit>
        <trans-unit id="5bae5485cfc17027249a27621f91f5c4ef3ffa94" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;parent()&lt;/code&gt; method traverses to the immediate parent of each of these elements in the DOM tree and constructs a new jQuery object from the matching elements.</source>
          <target state="translated">Учитывая объект jQuery, представляющий набор элементов DOM, метод &lt;code&gt;parent()&lt;/code&gt; переходит к непосредственному родительскому элементу каждого из этих элементов в дереве DOM и создает новый объект jQuery из соответствующих элементов.</target>
        </trans-unit>
        <trans-unit id="264980733d77ead826c1556c7084db20f44b083c" translate="yes" xml:space="preserve">
          <source>Given a selector expression that represents a set of DOM elements, the &lt;code&gt;.nextUntil()&lt;/code&gt; method searches through the successors of these elements in the DOM tree, stopping when it reaches an element matched by the method's argument. The new jQuery object that is returned contains all following siblings up to but not including the one matched by the &lt;code&gt;.nextUntil()&lt;/code&gt; argument.</source>
          <target state="translated">Учитывая выражение селектора, которое представляет набор элементов DOM, метод &lt;code&gt;.nextUntil()&lt;/code&gt; выполняет поиск наследников этих элементов в дереве DOM, останавливаясь, когда достигает элемента, соответствующего аргументу метода. Возвращаемый новый объект jQuery содержит всех следующих братьев и сестер до, но не включая тот, который соответствует аргументу &lt;code&gt;.nextUntil()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2dcdc8e7d9445a151868c0aef928a4d0d67dbf34" translate="yes" xml:space="preserve">
          <source>Given a selector expression that represents a set of DOM elements, the &lt;code&gt;.parentsUntil()&lt;/code&gt; method traverses through the ancestors of these elements until it reaches an element matched by the selector passed in the method's argument. The resulting jQuery object contains all of the ancestors up to but not including the one matched by the &lt;code&gt;.parentsUntil()&lt;/code&gt; selector.</source>
          <target state="translated">Учитывая выражение селектора, представляющее набор элементов DOM, метод &lt;code&gt;.parentsUntil()&lt;/code&gt; проходит через предков этих элементов, пока не достигнет элемента, соответствующего селектору, переданному в аргументе метода. Результирующий объект jQuery содержит всех предков до, но не включая того, который соответствует селектору &lt;code&gt;.parentsUntil()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="139f1b86eb7969ee5296fb8a8b7611d8f7e3a8df" translate="yes" xml:space="preserve">
          <source>Given a selector expression that represents a set of DOM elements, the &lt;code&gt;.prevUntil()&lt;/code&gt; method searches through the predecessors of these elements in the DOM tree, stopping when it reaches an element matched by the method's argument. The new jQuery object that is returned contains all previous siblings up to but not including the one matched by the &lt;code&gt;.prevUntil()&lt;/code&gt; selector; the elements are returned in order from the closest sibling to the farthest.</source>
          <target state="translated">Учитывая выражение селектора, представляющее набор элементов DOM, метод &lt;code&gt;.prevUntil()&lt;/code&gt; выполняет поиск по предшественникам этих элементов в дереве DOM, останавливаясь, когда он достигает элемента, соответствующего аргументу метода. Возвращаемый новый объект jQuery содержит всех предыдущих братьев и сестер до, но не включая тот, который соответствует селектору &lt;code&gt;.prevUntil()&lt;/code&gt; ; элементы возвращаются в порядке от ближайшего родственника к самому дальнему.</target>
        </trans-unit>
        <trans-unit id="ab2c09dee6596f41b3a0e801a3e28278aa7b82d5" translate="yes" xml:space="preserve">
          <source>Given a simple unordered list on the page:</source>
          <target state="translated">С учетом простого неупорядоченного списка на странице:</target>
        </trans-unit>
        <trans-unit id="d48669d5a9dba46c041d31e43a6d0b2afeec72a3" translate="yes" xml:space="preserve">
          <source>Given an unordered list with three &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; elements, this example will produce the following DOM output:</source>
          <target state="translated">Учитывая неупорядоченный список с тремя элементами &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; , в этом примере будет получен следующий вывод DOM:</target>
        </trans-unit>
        <trans-unit id="2609f2ff3429fcd5251af43279806a01205f09ac" translate="yes" xml:space="preserve">
          <source>Given an unordered list with two &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; elements, this example adds the class &quot;item-0&quot; to the first &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; and &quot;item-1&quot; to the second.</source>
          <target state="translated">Учитывая неупорядоченный список с двумя элементами &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; , этот пример добавляет класс &amp;laquo;item-0&amp;raquo; к первому &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; и &amp;laquo;item-1&amp;raquo; ко второму.</target>
        </trans-unit>
        <trans-unit id="cc9708044791b6281bfe6b93475ccc4c2f535a01" translate="yes" xml:space="preserve">
          <source>Global Events</source>
          <target state="translated">Глобальные события</target>
        </trans-unit>
        <trans-unit id="b6e0b67689e51be3f68a3cdb03c162c89a744091" translate="yes" xml:space="preserve">
          <source>Global events can be disabled for a particular Ajax request by passing in the global option, like so:</source>
          <target state="translated">Глобальные события могут быть отключены для конкретного запроса Ajax,пройдя в глобальном варианте,например,так:</target>
        </trans-unit>
        <trans-unit id="213da1cf79bd28ca6e290057f7a56c0a179d6cd7" translate="yes" xml:space="preserve">
          <source>Globally disable all animations.</source>
          <target state="translated">Отключить всю анимацию на глобальном уровне.</target>
        </trans-unit>
        <trans-unit id="9410c4873903e5c56ee21f7392ad48311f49fae8" translate="yes" xml:space="preserve">
          <source>HTML string to be parsed</source>
          <target state="translated">HTML-строка для анализа</target>
        </trans-unit>
        <trans-unit id="d54d005b3d20fbbe2ba001c0a9ab24be14f5af50" translate="yes" xml:space="preserve">
          <source>HTML string, DOM element, text node, array of elements and text nodes, or jQuery object to insert after each element in the set of matched elements.</source>
          <target state="translated">HTML-строка,DOM-элемент,текстовый узел,массив элементов и текстовые узлы,или объект jQuery для вставки после каждого элемента в набор совпадающих элементов.</target>
        </trans-unit>
        <trans-unit id="31f0314d73165ee592020e3588309f1306be2937" translate="yes" xml:space="preserve">
          <source>HTML string, DOM element, text node, array of elements and text nodes, or jQuery object to insert before each element in the set of matched elements.</source>
          <target state="translated">HTML-строка,DOM-элемент,текстовый узел,массив элементов и текстовые узлы,или объект jQuery для вставки перед каждым элементом в набор совпадающих элементов.</target>
        </trans-unit>
        <trans-unit id="0d568b590dd1ae02f9a6ec200c3083b5788f6d10" translate="yes" xml:space="preserve">
          <source>HTML5 &lt;code&gt;data-*&lt;/code&gt; Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ecc70e54e1aeacdea35ece54e437ac2dfc28e23" translate="yes" xml:space="preserve">
          <source>HTML5 data-* Attributes</source>
          <target state="translated">HTML5-данные-*атрибуты</target>
        </trans-unit>
        <trans-unit id="7166302624f4c278735fd7ab1d7acda622a2d57c" translate="yes" xml:space="preserve">
          <source>Handle click and double-click for the paragraph. Note: the coordinates are window relative, so in this case relative to the demo iframe.</source>
          <target state="translated">Щелкните мышью и дважды щелкните по параграфу.Примечание:координаты окна относительны,поэтому в данном случае относительно ифрейма демо.</target>
        </trans-unit>
        <trans-unit id="3d18ee4a996ded9beb44163de3ef8465ac29a8c3" translate="yes" xml:space="preserve">
          <source>Handle custom Ajax options or modify existing options before each request is sent and before they are processed by $.ajax().</source>
          <target state="translated">Обрабатывайте пользовательские опции Ajax или модифицируйте существующие опции перед отправкой каждого запроса и перед обработкой их $.ajax().</target>
        </trans-unit>
        <trans-unit id="31a745489f51ed140fc2a3bd19aa3618d5054b48" translate="yes" xml:space="preserve">
          <source>Handler for .blur() called.</source>
          <target state="translated">Вызывается обработчик .blur().</target>
        </trans-unit>
        <trans-unit id="5cf295b55552a1584f0548cb2d8a3f6a9b7c5282" translate="yes" xml:space="preserve">
          <source>Handler for .click() called.</source>
          <target state="translated">Вызывается обработчик .click().</target>
        </trans-unit>
        <trans-unit id="af2cb2d4b94a5f35e78d12bc6da23c6ca87df604" translate="yes" xml:space="preserve">
          <source>Handler for .contextmenu() called.</source>
          <target state="translated">Вызывается обработчик .contextmenu().</target>
        </trans-unit>
        <trans-unit id="f0676a409ac2576211439d5a9e11a9f93aa24c40" translate="yes" xml:space="preserve">
          <source>Handler for .dblclick() called.</source>
          <target state="translated">Вызывается обработчик .dblick().</target>
        </trans-unit>
        <trans-unit id="9c63f77b51b2bcba313b0e8bcc7de09f4e9a7812" translate="yes" xml:space="preserve">
          <source>Handler for .error() called.</source>
          <target state="translated">Вызывается обработчик .error().</target>
        </trans-unit>
        <trans-unit id="4bdac65bc0fa7ee5f6fa2f47560fc4260b35d6cd" translate="yes" xml:space="preserve">
          <source>Handler for .focus() called.</source>
          <target state="translated">Вызывается обработчик .focus().</target>
        </trans-unit>
        <trans-unit id="6d6a963bbae92ff9bd66d5499f12dcbabdd4ac51" translate="yes" xml:space="preserve">
          <source>Handler for .keydown() called.</source>
          <target state="translated">Вызывается обработчик .keydown().</target>
        </trans-unit>
        <trans-unit id="3576997406b3a1baeb87fdf79399970eee0be6dc" translate="yes" xml:space="preserve">
          <source>Handler for .keypress() called.</source>
          <target state="translated">Вызывается обработчик .keyypress().</target>
        </trans-unit>
        <trans-unit id="fd4d78b8cdf018ab2d4611d3f327242d824e000c" translate="yes" xml:space="preserve">
          <source>Handler for .keyup() called.</source>
          <target state="translated">Вызывается обработчик .keyup().</target>
        </trans-unit>
        <trans-unit id="723380b6bbb9796249b31757d330ef14af7bfa1e" translate="yes" xml:space="preserve">
          <source>Handler for .mousedown() called.</source>
          <target state="translated">Вызывается обработчик .mousedown().</target>
        </trans-unit>
        <trans-unit id="43e7d8d6be5492b7eef0436221a3d5ab21898c3d" translate="yes" xml:space="preserve">
          <source>Handler for .mousemove() called at (396, 42)</source>
          <target state="translated">Обработчик .mousemove(),вызываемый по адресу (396,42).</target>
        </trans-unit>
        <trans-unit id="0510bcd31da8ae3c38b2b2c27e884ba832f89e96" translate="yes" xml:space="preserve">
          <source>Handler for .mousemove() called at (397, 44)</source>
          <target state="translated">Обработчик .mousemove(),вызываемый по адресу (397,44).</target>
        </trans-unit>
        <trans-unit id="8af1c307f541da2973743a08411a8b4125e692d1" translate="yes" xml:space="preserve">
          <source>Handler for .mousemove() called at (398, 46)</source>
          <target state="translated">Обработчик .mousemove(),вызываемый по адресу (398,46).</target>
        </trans-unit>
        <trans-unit id="3ef228324b7b1f04501ac245224cf7a1b605907a" translate="yes" xml:space="preserve">
          <source>Handler for .mousemove() called at (399, 48)</source>
          <target state="translated">Обработчик .mousemove(),вызываемый по адресу (399,48).</target>
        </trans-unit>
        <trans-unit id="d7fa58cfb8e9def62f94383ac8d1f195c5fb4cba" translate="yes" xml:space="preserve">
          <source>Handler for .mousemove() called at (undefined, undefined)</source>
          <target state="translated">Обработчик .mousemove(),вызываемый по адресу (неопределенный,неопределенный).</target>
        </trans-unit>
        <trans-unit id="50ef3820f05ecf273dda5cfd2cf7a75e50edfcd0" translate="yes" xml:space="preserve">
          <source>Handler for .mouseup() called.</source>
          <target state="translated">Вызывается обработчик .mouseup().</target>
        </trans-unit>
        <trans-unit id="f8175d7e46c314ec0f8ecba01bc7e8b7190196dd" translate="yes" xml:space="preserve">
          <source>Handler for .scroll() called.</source>
          <target state="translated">Вызван обработчик .scroll().</target>
        </trans-unit>
        <trans-unit id="f408d2a748725720372050d5304ff85ecb7339da" translate="yes" xml:space="preserve">
          <source>Handler for .select() called.</source>
          <target state="translated">Вызван обработчик .select().</target>
        </trans-unit>
        <trans-unit id="4400541e98548116512419de15cfa15f01f37dc1" translate="yes" xml:space="preserve">
          <source>Handles errors thrown synchronously in functions wrapped in jQuery().</source>
          <target state="translated">Обрабатывает ошибки,синхронно брошенные в функциях,обернутых в jQuery().</target>
        </trans-unit>
        <trans-unit id="911ce78c3b144f1720ac8a51ca6c51695e96afbf" translate="yes" xml:space="preserve">
          <source>Handling Custom Data Types</source>
          <target state="translated">Обработка пользовательских типов данных</target>
        </trans-unit>
        <trans-unit id="0d2d67fd740d7ec7df3d8674c33679652ab92712" translate="yes" xml:space="preserve">
          <source>Handling Errors</source>
          <target state="translated">Обработка ошибок</target>
        </trans-unit>
        <trans-unit id="e40eea9b8809f7ebca0ee12de2ac15bad0ceb9f8" translate="yes" xml:space="preserve">
          <source>Has Attribute Selector [name]</source>
          <target state="translated">Имеет селектор атрибутов [имя].</target>
        </trans-unit>
        <trans-unit id="8a1d64e098aaa5d4f69eca750369b9d78f7eea1f" translate="yes" xml:space="preserve">
          <source>Has attribute selector [name]</source>
          <target state="translated">Имеет селектор атрибутов [имя]</target>
        </trans-unit>
        <trans-unit id="c90b0ad8dd6676158efbd2ca638c2d0c85cfb415" translate="yes" xml:space="preserve">
          <source>Here are some typical results:</source>
          <target state="translated">Вот некоторые типичные результаты:</target>
        </trans-unit>
        <trans-unit id="f7a97ef3a3bfaf9dfc8f2c53e51dfdf6b042c162" translate="yes" xml:space="preserve">
          <source>Here, any JavaScript loaded into &lt;code&gt;#a&lt;/code&gt; as a part of the document will successfully execute.</source>
          <target state="translated">Здесь любой &lt;code&gt;#a&lt;/code&gt; JavaScript, загруженный в #a как часть документа, будет успешно выполнен.</target>
        </trans-unit>
        <trans-unit id="15749496c3ca47d16bd58b44d9a3701c4688ee1e" translate="yes" xml:space="preserve">
          <source>Here, none of the list items is turned red, since &lt;code&gt;.eq( 5 )&lt;/code&gt; indicates the sixth of five list items.</source>
          <target state="translated">Здесь ни один из элементов списка не становится красным, поскольку &lt;code&gt;.eq( 5 )&lt;/code&gt; указывает шестой из пяти элементов списка.</target>
        </trans-unit>
        <trans-unit id="c6b6481ce222108e00985eddb65becfe22bb2ce0" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;myClass&lt;/code&gt; and &lt;code&gt;noClass&lt;/code&gt; classes are removed from all paragraphs, while &lt;code&gt;yourClass&lt;/code&gt; is added.</source>
          <target state="translated">Здесь классы &lt;code&gt;myClass&lt;/code&gt; и &lt;code&gt;noClass&lt;/code&gt; удаляются из всех абзацев, а &lt;code&gt;yourClass&lt;/code&gt; добавляется.</target>
        </trans-unit>
        <trans-unit id="24757d1332411973020afc384112f5d9fd17e3f5" translate="yes" xml:space="preserve">
          <source>Hide a loading message after all the Ajax requests have stopped.</source>
          <target state="translated">Скрыть сообщение о загрузке после того,как все запросы Ajax прекратятся.</target>
        </trans-unit>
        <trans-unit id="8db03be9822217f55ef7c7931bc09627ab985d6c" translate="yes" xml:space="preserve">
          <source>Hide all the input elements within a form.</source>
          <target state="translated">Спрячьте все входные элементы в форму.</target>
        </trans-unit>
        <trans-unit id="4fb88857baafd1f982bc0beea2430100b03805fa" translate="yes" xml:space="preserve">
          <source>Hide paragraphs on a page when they are clicked:</source>
          <target state="translated">Скрывать параграфы на странице при нажатии на них:</target>
        </trans-unit>
        <trans-unit id="a5baed74e6ca658f55df8ab1bea448b29f5fc1eb" translate="yes" xml:space="preserve">
          <source>Hide the matched elements by fading them to transparent.</source>
          <target state="translated">Спрячьте соответствующие элементы,выцветая их до прозрачности.</target>
        </trans-unit>
        <trans-unit id="44279a8fac1488d943c75697290307ade05b78ea" translate="yes" xml:space="preserve">
          <source>Hide the matched elements with a sliding motion.</source>
          <target state="translated">Спрячьте соответствующие элементы скользящим движением.</target>
        </trans-unit>
        <trans-unit id="89420b252f4476037958376be52ade7ef262efdb" translate="yes" xml:space="preserve">
          <source>Hide the matched elements.</source>
          <target state="translated">Спрячьте подходящие элементы.</target>
        </trans-unit>
        <trans-unit id="cc95b462e1cfec1b5efac1b025d809f9ede574d9" translate="yes" xml:space="preserve">
          <source>Hides all paragraphs then the link on click.</source>
          <target state="translated">Скрывает все параграфы,а затем нажимает на ссылку.</target>
        </trans-unit>
        <trans-unit id="4d406a47fc8d7a6bc8ae780e3a4c911b6f439802" translate="yes" xml:space="preserve">
          <source>Hides the divs when clicked over 2 seconds, then removes the div element when its hidden. Try clicking on more than one box at a time.</source>
          <target state="translated">Скрывает div при щелчке более 2 секунд,затем удаляет div элемент при его скрытии.Попробуйте нажать более чем на одну коробку за раз.</target>
        </trans-unit>
        <trans-unit id="a38779a590568354e64be136b0bb692c51f509a5" translate="yes" xml:space="preserve">
          <source>Highlight a clicked word in the paragraph.</source>
          <target state="translated">Выделите щелчком мыши слово в абзаце.</target>
        </trans-unit>
        <trans-unit id="118157dbad330d6f5965dd68b7d04cdc58fdc79f" translate="yes" xml:space="preserve">
          <source>Highlight the even items in a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2041b4dcd2a11321f88f1b33ea611a0bc913715d" translate="yes" xml:space="preserve">
          <source>Highlight the first item in a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e931eaf7522d83ac6c7c4139fd0cececf1fe6f88" translate="yes" xml:space="preserve">
          <source>Highlight the first span in a paragraph.</source>
          <target state="translated">Выделите первый отрезок в параграфе.</target>
        </trans-unit>
        <trans-unit id="4dd7d239089270c93b11dc22e5be4ec2e09987e3" translate="yes" xml:space="preserve">
          <source>Highlight the last item in a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545795b9ffa2ab8666efe2ac433ea368348a674d" translate="yes" xml:space="preserve">
          <source>Highlight the last span in a paragraph.</source>
          <target state="translated">Выделите последний отрезок в параграфе.</target>
        </trans-unit>
        <trans-unit id="d5a4d564af8d8d3030f6dc68fdea7142f9b2802c" translate="yes" xml:space="preserve">
          <source>Highlight the odd items in a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d909f7fd42bfb339f04de2094c2dcf286ed8d5a1" translate="yes" xml:space="preserve">
          <source>Holds or releases the execution of jQuery&amp;rsquo;s ready event.</source>
          <target state="translated">Удерживает или отменяет выполнение события готовности jQuery.</target>
        </trans-unit>
        <trans-unit id="aede0d33a19f62b66e53d16606fb7614e113405a" translate="yes" xml:space="preserve">
          <source>Hook directly into jQuery to override how particular CSS properties are retrieved or set, normalize CSS property naming, or create custom properties.</source>
          <target state="translated">Перейдите непосредственно в jQuery,чтобы переопределить,как определенные CSS свойства извлекаются или устанавливаются,нормализовать имена CSS свойств или создать пользовательские свойства.</target>
        </trans-unit>
        <trans-unit id="f81ca4bb14e02909ac2d03ad3f5548ec1647f790" translate="yes" xml:space="preserve">
          <source>How &lt;code&gt;:hidden&lt;/code&gt; is determined was changed in jQuery 1.3.2. An element is assumed to be hidden if it or any of its parents consumes no space in the document. CSS visibility isn't taken into account (therefore &lt;code&gt;$( elem ).css( &quot;visibility&quot;, &quot;hidden&quot; ).is( &quot;:hidden&quot; ) == false&lt;/code&gt;). The &lt;a href=&quot;https://blog.jquery.com/2009/02/20/jquery-1-3-2-released/&quot;&gt;release notes&lt;/a&gt; outline the changes in more detail.</source>
          <target state="translated">Как &lt;code&gt;:hidden&lt;/code&gt; определяется скрытый был изменен в jQuery 1.3.2. Предполагается, что элемент скрыт, если он или любой из его родительских элементов не занимает места в документе. Видимость CSS не учитывается (поэтому &lt;code&gt;$( elem ).css( &quot;visibility&quot;, &quot;hidden&quot; ).is( &quot;:hidden&quot; ) == false&lt;/code&gt; ). В &lt;a href=&quot;https://blog.jquery.com/2009/02/20/jquery-1-3-2-released/&quot;&gt;примечаниях к выпуску&lt;/a&gt; изменения описаны более подробно.</target>
        </trans-unit>
        <trans-unit id="877f768bb04245c254ff604e4596d8a747b8b84e" translate="yes" xml:space="preserve">
          <source>How &lt;code&gt;:visible&lt;/code&gt; is calculated was changed in jQuery 1.3.2. The &lt;a href=&quot;https://blog.jquery.com/2009/02/20/jquery-1-3-2-released/&quot;&gt;release notes&lt;/a&gt; outline the changes in more detail.</source>
          <target state="translated">Как вычисляется &lt;code&gt;:visible&lt;/code&gt; было изменено в jQuery 1.3.2. В &lt;a href=&quot;https://blog.jquery.com/2009/02/20/jquery-1-3-2-released/&quot;&gt;примечаниях к выпуску&lt;/a&gt; изменения описаны более подробно.</target>
        </trans-unit>
        <trans-unit id="b7b6cf20816665fced6af82f1d0c8a0e1a0e9c41" translate="yes" xml:space="preserve">
          <source>However, if we want to avoid affecting other handlers, we can be more specific:</source>
          <target state="translated">Однако,если мы хотим избежать воздействия на других обработчиков,мы можем быть более конкретными:</target>
        </trans-unit>
        <trans-unit id="e56237eecc43d16764ad1023e74a2791d275e0af" translate="yes" xml:space="preserve">
          <source>However, in the following case, script blocks in the document being loaded into &lt;code&gt;#b&lt;/code&gt; are stripped out and not executed:</source>
          <target state="translated">Однако в следующем случае блоки сценария в документе, загружаемом в &lt;code&gt;#b&lt;/code&gt; ,удаляются и не выполняются:</target>
        </trans-unit>
        <trans-unit id="d7313aba4601cddedc96883a6e8b8189ee217403" translate="yes" xml:space="preserve">
          <source>However, objects and arrays within element data are not copied and will continue to be shared between the cloned element and the original element. To deep copy all data, copy each one manually:</source>
          <target state="translated">Тем не менее,объекты и массивы внутри данных элементов не копируются и будут продолжать совместно использоваться клонированным элементом и исходным элементом.Чтобы глубоко скопировать все данные,скопируйте каждую из них вручную:</target>
        </trans-unit>
        <trans-unit id="8d814fccf970c654b58475d17c020c89ec25730b" translate="yes" xml:space="preserve">
          <source>However, this syntax lacks some of the additional capabilities of .get(), such as specifying a negative index:</source>
          <target state="translated">Однако,в этом синтаксисе отсутствуют некоторые дополнительные возможности .get(),такие как указание отрицательного индекса:</target>
        </trans-unit>
        <trans-unit id="1734880d9b8cdbc25a489d5ba6de680d49144ceb" translate="yes" xml:space="preserve">
          <source>However, while the above fix is short and simple, it puts the burden on you to ensure XHTML-compliant tags in any HTML strings. A more thorough fix for this issue would be this:</source>
          <target state="translated">Однако,несмотря на то,что вышеприведенное исправление является коротким и простым,оно возлагает на вас бремя обеспечения XHTML-совместимых тегов в любых HTML-строках.Более тщательное решение этой проблемы было бы следующим:</target>
        </trans-unit>
        <trans-unit id="c1366c0ac6c7c47849d4656216a31083d3c43f9d" translate="yes" xml:space="preserve">
          <source>ID Selector (&amp;ldquo;#id&amp;rdquo;)</source>
          <target state="translated">Селектор идентификатора (&amp;laquo;#id&amp;raquo;)</target>
        </trans-unit>
        <trans-unit id="69f7524d8b4ad7db7184356d826160af474e76d7" translate="yes" xml:space="preserve">
          <source>ID selector (&amp;quot;#id&amp;quot;)</source>
          <target state="translated">Селектор идентификатора (&quot;#id&quot;)</target>
        </trans-unit>
        <trans-unit id="9e19b2ab5587365bdf1a194d251d9e9a6a859a31" translate="yes" xml:space="preserve">
          <source>Identify the checked radio input.</source>
          <target state="translated">Идентифицируйте проверенный радиовход.</target>
        </trans-unit>
        <trans-unit id="01ced688e6559efbfbf1cc3c1878e1d6487957ea" translate="yes" xml:space="preserve">
          <source>If &quot;invert&quot; is false, or not provided, then the function returns an array consisting of all elements for which &quot;callback&quot; returns true. If &quot;invert&quot; is true, then the function returns an array consisting of all elements for which &quot;callback&quot; returns false.</source>
          <target state="translated">Если &quot;invert&quot; ложный или не предусмотрен,то функция возвращает массив,состоящий из всех элементов,для которых &quot;callback&quot; возвращает true.Если &quot;invert&quot; равно true,то функция возвращает массив,состоящий из всех элементов,для которых &quot;callback&quot; возвращает false.</target>
        </trans-unit>
        <trans-unit id="32eac473cb6c9d519d79e940ac64eec13b14ff2a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;.index()&lt;/code&gt; is called on a collection of elements and a DOM element or jQuery object is passed in, &lt;code&gt;.index()&lt;/code&gt; returns an integer indicating the position of the passed element relative to the original collection.</source>
          <target state="translated">Если &lt;code&gt;.index()&lt;/code&gt; вызывается для коллекции элементов и передается элемент DOM или объект jQuery, &lt;code&gt;.index()&lt;/code&gt; возвращает целое число, указывающее положение переданного элемента относительно исходной коллекции.</target>
        </trans-unit>
        <trans-unit id="9353c86ca16f5ac78071346dfd054f5d9641491f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;.slideDown()&lt;/code&gt; is called on an unordered list (&lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;) and its &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; elements have position (relative, absolute, or fixed), the effect may not work properly in IE6 through at least IE9 unless the &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; has &quot;layout.&quot; To remedy the problem, add the &lt;code&gt;position: relative;&lt;/code&gt; and &lt;code&gt;zoom: 1;&lt;/code&gt; CSS declarations to the &lt;code&gt;ul&lt;/code&gt;.</source>
          <target state="translated">Если &lt;code&gt;.slideDown()&lt;/code&gt; вызывается для неупорядоченного списка ( &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; ) и его элементы &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; имеют позицию (относительную, абсолютную или фиксированную), эффект может не работать должным образом в IE6, по крайней мере, в IE9, если только &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; имеет &amp;laquo;макет&amp;raquo;. Чтобы решить эту проблему, добавьте &lt;code&gt;position: relative;&lt;/code&gt; и &lt;code&gt;zoom: 1;&lt;/code&gt; Объявления CSS для &lt;code&gt;ul&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="74bee9b46623deac5efb6743780330c7d6f6e03c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; is called with the &lt;code&gt;global&lt;/code&gt; option set to &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;.ajaxComplete()&lt;/code&gt; method will not fire.</source>
          <target state="translated">Если &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; вызывается с &lt;code&gt;global&lt;/code&gt; параметром, установленным в &lt;code&gt;false&lt;/code&gt; , метод &lt;code&gt;.ajaxComplete()&lt;/code&gt; не сработает.</target>
        </trans-unit>
        <trans-unit id="02c932c56c55aff02f32800dd2200c51b4a9749e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; is called with the &lt;code&gt;global&lt;/code&gt; option set to &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;.ajaxError()&lt;/code&gt; method will not fire.</source>
          <target state="translated">Если &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; вызывается с &lt;code&gt;global&lt;/code&gt; параметром, установленным в &lt;code&gt;false&lt;/code&gt; , метод &lt;code&gt;.ajaxError()&lt;/code&gt; не сработает.</target>
        </trans-unit>
        <trans-unit id="7a8c1c63b0bd4cef2c8a0608da2774134bae1543" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; is called with the &lt;code&gt;global&lt;/code&gt; option set to &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;.ajaxSend()&lt;/code&gt; method will not fire.</source>
          <target state="translated">Если &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; вызывается с &lt;code&gt;global&lt;/code&gt; параметром, установленным в &lt;code&gt;false&lt;/code&gt; , метод &lt;code&gt;.ajaxSend()&lt;/code&gt; не сработает.</target>
        </trans-unit>
        <trans-unit id="1b1deebf1b0f09555260297f644f66637594c2a4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; is called with the &lt;code&gt;global&lt;/code&gt; option set to &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;.ajaxStart()&lt;/code&gt; method will not fire.</source>
          <target state="translated">Если &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; вызывается с &lt;code&gt;global&lt;/code&gt; параметром, установленным в &lt;code&gt;false&lt;/code&gt; , метод &lt;code&gt;.ajaxStart()&lt;/code&gt; не сработает.</target>
        </trans-unit>
        <trans-unit id="b48953ee6f680545d36950c5b208c4b12f41113d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; is called with the &lt;code&gt;global&lt;/code&gt; option set to &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;.ajaxStop()&lt;/code&gt; method will not fire.</source>
          <target state="translated">Если &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; вызывается с &lt;code&gt;global&lt;/code&gt; параметром, установленным в &lt;code&gt;false&lt;/code&gt; , метод &lt;code&gt;.ajaxStop()&lt;/code&gt; не сработает.</target>
        </trans-unit>
        <trans-unit id="444413e130e209bad7b68636ea67c23ad7f2cdf6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; is called with the &lt;code&gt;global&lt;/code&gt; option set to &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;.ajaxSuccess()&lt;/code&gt; method will not fire.</source>
          <target state="translated">Если &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; вызывается с &lt;code&gt;global&lt;/code&gt; параметром, установленным в &lt;code&gt;false&lt;/code&gt; , метод &lt;code&gt;.ajaxSuccess()&lt;/code&gt; не сработает.</target>
        </trans-unit>
        <trans-unit id="d1bdffe74681c9c3a1d3b0f5c835a018138784ea" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;eventData&lt;/code&gt; is present, it is the second argument to the &lt;code&gt;.bind()&lt;/code&gt; method; if no additional data needs to be sent to the handler, then the callback is passed as the second and final argument.</source>
          <target state="translated">Если &lt;code&gt;eventData&lt;/code&gt; присутствует, это второй аргумент метода &lt;code&gt;.bind()&lt;/code&gt; ; если обработчику не требуется отправлять дополнительные данные, то обратный вызов передается в качестве второго и последнего аргумента.</target>
        </trans-unit>
        <trans-unit id="f7de334e92ff588cfc2995a1607326278831e730" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;json&lt;/code&gt; is specified, the response is parsed using &lt;a href=&quot;jquery.parsejson&quot;&gt;&lt;code&gt;jQuery.parseJSON&lt;/code&gt;&lt;/a&gt; before being passed, as an object, to the success handler. The parsed JSON object is made available through the &lt;code&gt;responseJSON&lt;/code&gt; property of the &lt;code&gt;jqXHR&lt;/code&gt; object.</source>
          <target state="translated">Если указан &lt;code&gt;json&lt;/code&gt; , ответ анализируется с помощью &lt;a href=&quot;jquery.parsejson&quot;&gt; &lt;code&gt;jQuery.parseJSON&lt;/code&gt; &lt;/a&gt; перед передачей в качестве объекта обработчику успеха. Анализируется объект JSON становится доступным через &lt;code&gt;responseJSON&lt;/code&gt; свойство &lt;code&gt;jqXHR&lt;/code&gt; объекта.</target>
        </trans-unit>
        <trans-unit id="9a32fd3dee0f0b76f086eb7d528cd31a2ac333d3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;jsonp&lt;/code&gt; is specified, &lt;code&gt;$.ajax()&lt;/code&gt; will automatically append a query string parameter of (by default) &lt;code&gt;callback=?&lt;/code&gt; to the URL. The &lt;code&gt;jsonp&lt;/code&gt; and &lt;code&gt;jsonpCallback&lt;/code&gt; properties of the settings passed to &lt;code&gt;$.ajax()&lt;/code&gt; can be used to specify, respectively, the name of the query string parameter and the name of the JSONP callback function. The server should return valid JavaScript that passes the JSON response into the callback function. &lt;code&gt;$.ajax()&lt;/code&gt; will execute the returned JavaScript, calling the JSONP callback function, before passing the JSON object contained in the response to the &lt;code&gt;$.ajax()&lt;/code&gt; success handler.</source>
          <target state="translated">Если &lt;code&gt;jsonp&lt;/code&gt; , &lt;code&gt;$.ajax()&lt;/code&gt; автоматически добавит параметр строки запроса (по умолчанию) &lt;code&gt;callback=?&lt;/code&gt; к URL-адресу. В &lt;code&gt;jsonp&lt;/code&gt; и &lt;code&gt;jsonpCallback&lt;/code&gt; свойство настройки передается в &lt;code&gt;$.ajax()&lt;/code&gt; может использоваться для указания, соответственно, название параметра строки запроса и имя функции обратного вызова JSONP. Сервер должен вернуть действительный JavaScript, который передает ответ JSON в функцию обратного вызова. &lt;code&gt;$.ajax()&lt;/code&gt; выполнит возвращенный JavaScript, вызывая функцию обратного вызова JSONP, перед передачей объекта JSON, содержащегося в ответе, обработчику успеха &lt;code&gt;$.ajax()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f63b79238f2d58c872c7f219e1691894c09f7cf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;script&lt;/code&gt; is specified, &lt;code&gt;$.ajax()&lt;/code&gt; will execute the JavaScript that is received from the server before passing it on to the success handler as a string.</source>
          <target state="translated">Если указан &lt;code&gt;script&lt;/code&gt; , &lt;code&gt;$.ajax()&lt;/code&gt; выполнит полученный от сервера JavaScript перед передачей его обработчику успеха в виде строки.</target>
        </trans-unit>
        <trans-unit id="693a21ebac2536d6fb41470891ccc7bafc573c14" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;selector&lt;/code&gt; is omitted or is null, the event handler is referred to as &lt;em&gt;direct&lt;/em&gt; or &lt;em&gt;directly-bound&lt;/em&gt;. The handler is called every time an event occurs on the selected elements, whether it occurs directly on the element or bubbles from a descendant (inner) element.</source>
          <target state="translated">Если &lt;code&gt;selector&lt;/code&gt; опущен или имеет значение null, обработчик событий называется &lt;em&gt;прямым&lt;/em&gt; или &lt;em&gt;напрямую связанным&lt;/em&gt; . Обработчик вызывается каждый раз, когда событие происходит в выбранных элементах, независимо от того, происходит ли оно непосредственно в элементе или в пузырьках от дочернего (внутреннего) элемента.</target>
        </trans-unit>
        <trans-unit id="38718c8ac1162b84dd111b66ddbdbe862fa33cbb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;target&lt;/code&gt; is provided, &lt;code&gt;.promise()&lt;/code&gt; will attach the methods onto it and then return this object rather than create a new one. This can be useful to attach the Promise behavior to an object that already exists.</source>
          <target state="translated">Если &lt;code&gt;target&lt;/code&gt; &lt;code&gt;.promise()&lt;/code&gt; , .promise () прикрепит к ней методы и затем вернет этот объект, а не создаст новый. Это может быть полезно для привязки поведения Promise к уже существующему объекту.</target>
        </trans-unit>
        <trans-unit id="dca49adacf73cc84b72173beb40c7b200f91e8dd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;target&lt;/code&gt; is provided, &lt;code&gt;deferred.promise()&lt;/code&gt; will attach the methods onto it and then return this object rather than create a new one. This can be useful to attach the Promise behavior to an object that already exists.</source>
          <target state="translated">Если &lt;code&gt;target&lt;/code&gt; указана, &lt;code&gt;deferred.promise()&lt;/code&gt; прикрепит к ней методы и затем вернет этот объект, а не создаст новый. Это может быть полезно для привязки поведения Promise к уже существующему объекту.</target>
        </trans-unit>
        <trans-unit id="81c2407f6834dd24e1e36d7dc2ab51a73d698593" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;text&lt;/code&gt; or &lt;code&gt;html&lt;/code&gt; is specified, no pre-processing occurs. The data is simply passed on to the success handler, and made available through the &lt;code&gt;responseText&lt;/code&gt; property of the &lt;code&gt;jqXHR&lt;/code&gt; object.</source>
          <target state="translated">Если указан &lt;code&gt;text&lt;/code&gt; или &lt;code&gt;html&lt;/code&gt; , предварительной обработки не происходит. Данные просто передаются в обработчик успеха, и доступны через &lt;code&gt;responseText&lt;/code&gt; свойство &lt;code&gt;jqXHR&lt;/code&gt; объекта.</target>
        </trans-unit>
        <trans-unit id="fed546c86f7fb88219c0a2e84344df053979ad5d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;xml&lt;/code&gt; is specified, the response is parsed using &lt;a href=&quot;jquery.parsexml&quot;&gt;&lt;code&gt;jQuery.parseXML&lt;/code&gt;&lt;/a&gt; before being passed, as an &lt;a href=&quot;types#XMLDocument&quot;&gt;&lt;code&gt;XMLDocument&lt;/code&gt;&lt;/a&gt;, to the success handler. The XML document is made available through the &lt;code&gt;responseXML&lt;/code&gt; property of the &lt;code&gt;jqXHR&lt;/code&gt; object.</source>
          <target state="translated">Если указан &lt;code&gt;xml&lt;/code&gt; , ответ анализируется с помощью &lt;a href=&quot;jquery.parsexml&quot;&gt; &lt;code&gt;jQuery.parseXML&lt;/code&gt; &lt;/a&gt; перед передачей в виде &lt;a href=&quot;types#XMLDocument&quot;&gt; &lt;code&gt;XMLDocument&lt;/code&gt; &lt;/a&gt; обработчику успеха. Документ XML становится доступным через &lt;code&gt;responseXML&lt;/code&gt; свойство &lt;code&gt;jqXHR&lt;/code&gt; объекта.</target>
        </trans-unit>
        <trans-unit id="1e27472b1e0403fbaa99efa496e2a7650642d975" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;a single element&lt;/em&gt; selected this way is inserted into a single location elsewhere in the DOM, it will be moved into the target (&lt;em&gt;not cloned&lt;/em&gt;):</source>
          <target state="translated">Если &lt;em&gt;один&lt;/em&gt; выбранный таким образом &lt;em&gt;элемент&lt;/em&gt; вставлен в одно место в другом месте DOM, он будет перемещен в цель ( &lt;em&gt;не клонирован&lt;/em&gt; ):</target>
        </trans-unit>
        <trans-unit id="779be847a06b4739242be14a0474a6d50d014e89" translate="yes" xml:space="preserve">
          <source>If Selector is specified as the type of an argument, it accepts everything that the jQuery constructor accepts, eg. Strings, Elements, Lists of Elements.</source>
          <target state="translated">Если в качестве типа аргумента указан селектор,то он принимает все,что принимает конструктор jQuery,например,строки,элементы,списки элементов.</target>
        </trans-unit>
        <trans-unit id="ff7dfd1c5a0e66f24462b5c8c8f48779bb76e2fa" translate="yes" xml:space="preserve">
          <source>If a &quot;complete&quot; callback is provided, it is executed after post-processing and HTML insertion has been performed. The callback is fired once for each element in the jQuery collection, and &lt;code&gt;this&lt;/code&gt; is set to each DOM element in turn.</source>
          <target state="translated">Если предоставляется &amp;laquo;полный&amp;raquo; обратный вызов, он выполняется после постобработки и вставки HTML. Обратный вызов вызывается один раз для каждого элемента коллекции JQuery, и &lt;code&gt;this&lt;/code&gt; имеет значение для каждого DOM элемента , в своей очереди.</target>
        </trans-unit>
        <trans-unit id="48f9d87189079de6a1a58a5036337d8f7dca6b8c" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;data&lt;/code&gt; argument is provided to &lt;code&gt;.on()&lt;/code&gt; and is not &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, it is passed to the handler in the &lt;a href=&quot;event.data&quot;&gt;&lt;code&gt;event.data&lt;/code&gt;&lt;/a&gt; property each time an event is triggered. The &lt;code&gt;data&lt;/code&gt; argument can be any type, but if a string is used the &lt;code&gt;selector&lt;/code&gt; must either be provided or explicitly passed as &lt;code&gt;null&lt;/code&gt; so that the data is not mistaken for a selector. Best practice is to use a plain object so that multiple values can be passed as properties.</source>
          <target state="translated">Если аргумент &lt;code&gt;data&lt;/code&gt; предоставляется &lt;code&gt;.on()&lt;/code&gt; и не имеет &lt;code&gt;null&lt;/code&gt; или &lt;code&gt;undefined&lt;/code&gt; , он передается обработчику в свойстве &lt;a href=&quot;event.data&quot;&gt; &lt;code&gt;event.data&lt;/code&gt; &lt;/a&gt; каждый раз, когда запускается событие. &lt;code&gt;data&lt;/code&gt; аргумент может быть любым типом, но если используются Строка &lt;code&gt;selector&lt;/code&gt; должен быть либо при условии , или явно передается как &lt;code&gt;null&lt;/code&gt; , так что данные не ошибочно принимают за селектор. Лучше всего использовать простой объект, чтобы в качестве свойств можно было передавать несколько значений.</target>
        </trans-unit>
        <trans-unit id="4f22de08ca60efaa92f68041d8b7552264392595" translate="yes" xml:space="preserve">
          <source>If a class name is included as a parameter, then only that class will be removed from the set of matched elements. If no class names are specified in the parameter, all classes will be removed.</source>
          <target state="translated">Если имя класса включено в качестве параметра,то из набора совпадающих элементов будет удален только этот класс.Если имя класса не указано в параметре,то все классы будут удалены.</target>
        </trans-unit>
        <trans-unit id="3c9ede6c8a09c2234f461140abbc34bf646c57e3" translate="yes" xml:space="preserve">
          <source>If a class name is included as a parameter, then only that class will be removed from the set of matched elements. If no classes are specified in the parameter, all classes will be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac84a07cc340102830a49c1c5ff1cc90a9934a6d" translate="yes" xml:space="preserve">
          <source>If a number is zero, it defaults to false:</source>
          <target state="translated">Если число равно нулю,по умолчанию оно равно false:</target>
        </trans-unit>
        <trans-unit id="6ddf3197f5804e29818508102ea3b2757d0cb7c0" translate="yes" xml:space="preserve">
          <source>If a request with jQuery.get() returns an error code, it will fail silently unless the script has also called the global &lt;a href=&quot;ajaxerror&quot;&gt;.ajaxError() &lt;/a&gt; method. Alternatively, as of jQuery 1.5, the &lt;code&gt;.error()&lt;/code&gt; method of the &lt;code&gt;jqXHR&lt;/code&gt; object returned by jQuery.get() is also available for error handling.</source>
          <target state="translated">Если запрос с jQuery.get () возвращает код ошибки, он завершится неудачно, если скрипт также не вызвал глобальный &lt;a href=&quot;ajaxerror&quot;&gt;метод .ajaxError ()&lt;/a&gt; . В качестве альтернативы, по состоянию на JQuery 1.5, &lt;code&gt;.error()&lt;/code&gt; метод &lt;code&gt;jqXHR&lt;/code&gt; объекта , возвращаемый jQuery.get () также доступен для обработки ошибок.</target>
        </trans-unit>
        <trans-unit id="e0fef66f213d71f4da21822a2381c01681bd71b3" translate="yes" xml:space="preserve">
          <source>If a request with jQuery.post() returns an error code, it will fail silently unless the script has also called the global &lt;a href=&quot;ajaxerror&quot;&gt;.ajaxError() &lt;/a&gt; method. Alternatively, as of jQuery 1.5, the &lt;code&gt;.error()&lt;/code&gt; method of the &lt;code&gt;jqXHR&lt;/code&gt; object returned by jQuery.post() is also available for error handling.</source>
          <target state="translated">Если запрос с jQuery.post () возвращает код ошибки, он завершится неудачно, если скрипт также не вызвал глобальный &lt;a href=&quot;ajaxerror&quot;&gt;метод .ajaxError ()&lt;/a&gt; . В качестве альтернативы, &lt;code&gt;jqXHR&lt;/code&gt; с jQuery 1.5, для обработки ошибок также доступен метод &lt;code&gt;.error()&lt;/code&gt; объекта jqXHR, возвращаемого jQuery.post ().</target>
        </trans-unit>
        <trans-unit id="3b447799372a8c6434e6043e8e34dfbe4356cad5" translate="yes" xml:space="preserve">
          <source>If a selector string is passed as an argument, &lt;code&gt;.index()&lt;/code&gt; returns an integer indicating the position of the first element within the jQuery object relative to the elements matched by the selector. If the element is not found, &lt;code&gt;.index()&lt;/code&gt; will return -1.</source>
          <target state="translated">Если в качестве аргумента передается строка селектора, &lt;code&gt;.index()&lt;/code&gt; возвращает целое число, указывающее позицию первого элемента в объекте jQuery относительно элементов, соответствующих селектору. Если элемент не найден, &lt;code&gt;.index()&lt;/code&gt; вернет -1.</target>
        </trans-unit>
        <trans-unit id="99a0e3a52aafc24010fec853ea3be580380c213d" translate="yes" xml:space="preserve">
          <source>If a simple event name such as &lt;code&gt;&quot;click&quot;&lt;/code&gt; is provided, &lt;em&gt;all&lt;/em&gt; events of that type (both direct and delegated) are removed from the elements in the jQuery set. When writing code that will be used as a plugin, or simply when working with a large code base, best practice is to attach and remove events using namespaces so that the code will not inadvertently remove event handlers attached by other code. All events of all types in a specific namespace can be removed from an element by providing just a namespace, such as &lt;code&gt;&quot;.myPlugin&quot;&lt;/code&gt;. At minimum, either a namespace or event name must be provided.</source>
          <target state="translated">Если указано простое имя события, такое как &lt;code&gt;&quot;click&quot;&lt;/code&gt; , &lt;em&gt;все&lt;/em&gt; события этого типа (как прямые, так и делегированные) удаляются из элементов в наборе jQuery. При написании кода, который будет использоваться в качестве подключаемого модуля, или просто при работе с большой базой кода, рекомендуется присоединять и удалять события с использованием пространств имен, чтобы код не удалял непреднамеренно обработчики событий, прикрепленные другим кодом. Все события всех типов в определенном пространстве имен можно удалить из элемента, предоставив только пространство имен, например &lt;code&gt;&quot;.myPlugin&quot;&lt;/code&gt; . Как минимум, необходимо указать пространство имен или имя события.</target>
        </trans-unit>
        <trans-unit id="1e5df75637445b79d72a63723c288146594a2335" translate="yes" xml:space="preserve">
          <source>If a single Deferred is passed to &lt;code&gt;jQuery.when()&lt;/code&gt;, its Promise object (a subset of the Deferred methods) is returned by the method. Additional methods of the Promise object can be called to attach callbacks, such as &lt;a href=&quot;deferred.then&quot;&gt;&lt;code&gt;deferred.then&lt;/code&gt;&lt;/a&gt;. When the Deferred is resolved or rejected, usually by the code that created the Deferred originally, the appropriate callbacks will be called. For example, the jqXHR object returned by &lt;code&gt;jQuery.ajax()&lt;/code&gt; is a Promise-compatible object and can be used this way:</source>
          <target state="translated">Если в &lt;code&gt;jQuery.when()&lt;/code&gt; передается один Deferred , его объект Promise (подмножество отложенных методов) возвращается методом. Для присоединения обратных вызовов могут быть вызваны дополнительные методы объекта Promise, например &lt;a href=&quot;deferred.then&quot;&gt; &lt;code&gt;deferred.then&lt;/code&gt; &lt;/a&gt; . Когда Deferred разрешается или отклоняется, обычно кодом, который изначально создал Deferred, будут вызваны соответствующие обратные вызовы. Например, объект jqXHR, возвращаемый &lt;code&gt;jQuery.ajax()&lt;/code&gt; является объектом, совместимым с Promise, и может использоваться следующим образом:</target>
        </trans-unit>
        <trans-unit id="681c9d732bb210a86966051f95bda5c32025b62f" translate="yes" xml:space="preserve">
          <source>If a single argument is passed to &lt;code&gt;jQuery.when()&lt;/code&gt; and it is not a Deferred or a Promise, it will be treated as a resolved Deferred and any doneCallbacks attached will be executed immediately. The doneCallbacks are passed the original argument. In this case any failCallbacks you might set are never called since the Deferred is never rejected. For example:</source>
          <target state="translated">Если в &lt;code&gt;jQuery.when()&lt;/code&gt; передается единственный аргумент, и это не Deferred или Promise, он будет рассматриваться как разрешенный Deferred, и все прикрепленные doneCallbacks будут выполнены немедленно. DoneCallbacks передается исходный аргумент. В этом случае любые установленные вами failCallbacks никогда не вызываются, поскольку Deferred никогда не отклоняется. Например:</target>
        </trans-unit>
        <trans-unit id="d43f7542e6632e784a83802dcc802d7b00098daf" translate="yes" xml:space="preserve">
          <source>If a string is passed as the parameter to &lt;code&gt;$()&lt;/code&gt;, jQuery examines the string to see if it looks like HTML (i.e., it starts with &lt;code&gt;&amp;lt;tag ... &amp;gt;&lt;/code&gt;). If not, the string is interpreted as a selector expression, as explained above. But if the string appears to be an HTML snippet, jQuery attempts to create new DOM elements as described by the HTML. Then a jQuery object is created and returned that refers to these elements. You can perform any of the usual jQuery methods on this object:</source>
          <target state="translated">Если строка передается в качестве параметра &lt;code&gt;$()&lt;/code&gt; , jQuery проверяет строку, чтобы увидеть, похожа ли она на HTML (т. Е. Начинается с &lt;code&gt;&amp;lt;tag ... &amp;gt;&lt;/code&gt; ). Если нет, строка интерпретируется как выражение селектора, как описано выше. Но если строка выглядит как фрагмент HTML, jQuery пытается создать новые элементы DOM, как описано в HTML. Затем создается и возвращается объект jQuery, который ссылается на эти элементы. Вы можете выполнить любой из обычных методов jQuery для этого объекта:</target>
        </trans-unit>
        <trans-unit id="2da2b26696779a8c65be4272e40d47605c0870b4" translate="yes" xml:space="preserve">
          <source>If an element cannot be found at the specified zero-based index, the method constructs a new jQuery object with an empty set and a &lt;code&gt;length&lt;/code&gt; property of 0.</source>
          <target state="translated">Если элемент не может быть найден по указанному индексу с отсчетом от нуля, метод создает новый объект jQuery с пустым набором и свойством &lt;code&gt;length&lt;/code&gt; 0.</target>
        </trans-unit>
        <trans-unit id="e146387a260406e5f6775da304db12d43941afde" translate="yes" xml:space="preserve">
          <source>If an element selected this way is inserted into a single location elsewhere in the DOM, it will be moved after the target (not cloned) and a new set consisting of the inserted element is returned:</source>
          <target state="translated">Если выбранный таким образом элемент вставляется в одно место в другом месте флэш-накопителя,он будет перемещен после того,как цель (не клонируется)и будет возвращен новый набор,состоящий из вставленного элемента:</target>
        </trans-unit>
        <trans-unit id="5a3880c48c22a10e8a436f281f0881ea7994b16d" translate="yes" xml:space="preserve">
          <source>If an element selected this way is inserted into a single location elsewhere in the DOM, it will be moved before the target (not cloned) and a new set consisting of the inserted element is returned:</source>
          <target state="translated">Если выбранный таким образом элемент вставляется в одно место в другом месте флэш-накопителя,он перемещается перед целью (не клонируется)и возвращается новый набор,состоящий из вставленного элемента:</target>
        </trans-unit>
        <trans-unit id="653dca41a440ba92a973641103d439ecca95f06d" translate="yes" xml:space="preserve">
          <source>If an element selected this way is inserted into a single location elsewhere in the DOM, it will be moved before the target (not cloned):</source>
          <target state="translated">Если выбранный таким образом элемент вставляется в одно место в другом месте флэш-накопителя,он будет перемещен перед целью (не клонируется):</target>
        </trans-unit>
        <trans-unit id="eb771fa00a45228e19655795fd9091cd6e35a77c" translate="yes" xml:space="preserve">
          <source>If an element selected this way is inserted into a single location elsewhere in the DOM, it will be moved into the target (not cloned) and a new set consisting of the inserted element is returned:</source>
          <target state="translated">Если выбранный таким образом элемент вставляется в одно место в другом месте флэш-накопителя,он перемещается в цель (не клонируется)и возвращается новый набор,состоящий из вставленного элемента:</target>
        </trans-unit>
        <trans-unit id="389e97f8ae196848086fe8574ac05a29418825f2" translate="yes" xml:space="preserve">
          <source>If an element selected this way is inserted into a single location elsewhere in the DOM, it will be moved into the target (not cloned):</source>
          <target state="translated">Если выбранный таким образом элемент вставляется в одно место в другом месте флэш-накопителя,он будет перемещен в цель (не клонируется):</target>
        </trans-unit>
        <trans-unit id="ca4c6ca81bd585abac046552aa24145ca0c6f870" translate="yes" xml:space="preserve">
          <source>If an element selected this way is inserted into a single location elsewhere in the DOM, it will be moved rather than cloned:</source>
          <target state="translated">Если выбранный таким образом элемент будет вставлен в одно место в другом месте флэш-накопителя,он будет перемещен,а не клонирован:</target>
        </trans-unit>
        <trans-unit id="5fb766610c6dc677759c753c1dc5f933ecedde95" translate="yes" xml:space="preserve">
          <source>If an object is used as the collection, the callback is passed a key-value pair each time:</source>
          <target state="translated">Если в качестве коллекции используется объект,то обратный вызов каждый раз передается по паре ключ-значение:</target>
        </trans-unit>
        <trans-unit id="bff3162065a6986b64c1d45fb2e4d2d2f0e3bfe6" translate="yes" xml:space="preserve">
          <source>If for some reason two versions of jQuery are loaded (which is not recommended), calling &lt;code&gt;$.noConflict( true )&lt;/code&gt; from the second version will return the globally scoped jQuery variables to those of the first version.</source>
          <target state="translated">Если по какой-то причине загружены две версии jQuery (что не рекомендуется), вызов &lt;code&gt;$.noConflict( true )&lt;/code&gt; из второй версии вернет переменные jQuery с глобальной областью видимости в переменные первой версии.</target>
        </trans-unit>
        <trans-unit id="0dd1e401c813d59f8a7c36f9b51b31c3afac8e38" translate="yes" xml:space="preserve">
          <source>If key presses anywhere need to be caught (for example, to implement global shortcut keys on a page), it is useful to attach this behavior to the &lt;code&gt;document&lt;/code&gt; object. Because of event bubbling, all key presses will make their way up the DOM to the &lt;code&gt;document&lt;/code&gt; object unless explicitly stopped.</source>
          <target state="translated">Если необходимо перехватить нажатие клавиш в любом месте (например, для реализации глобальных сочетаний клавиш на странице), полезно привязать это поведение к объекту &lt;code&gt;document&lt;/code&gt; . Из-за восходящей цепочки событий все нажатия клавиш будут перемещаться вверх по DOM к объекту &lt;code&gt;document&lt;/code&gt; если явно не остановлены.</target>
        </trans-unit>
        <trans-unit id="3eba107ee00b8b93dbc335d7dac715a78736d32b" translate="yes" xml:space="preserve">
          <source>If more than one animation method is called on the same element, the later animations are placed in the effects queue for the element. These animations will not begin until the first one completes. When &lt;code&gt;.stop()&lt;/code&gt; is called, the next animation in the queue begins immediately. If the &lt;code&gt;clearQueue&lt;/code&gt; parameter is provided with a value of &lt;code&gt;true&lt;/code&gt;, then the rest of the animations in the queue are removed and never run.</source>
          <target state="translated">Если для одного и того же элемента вызывается более одного метода анимации, более поздние анимации помещаются в очередь эффектов для этого элемента. Эти анимации не начнутся, пока не завершится первая. Когда &lt;code&gt;.stop()&lt;/code&gt; , немедленно начинается следующая анимация в очереди. Если параметру &lt;code&gt;clearQueue&lt;/code&gt; присвоено значение &lt;code&gt;true&lt;/code&gt; , тогда остальные анимации в очереди удаляются и никогда не запускаются.</target>
        </trans-unit>
        <trans-unit id="4c901c50369a853b16c0a46c6245eab7362f2f21" translate="yes" xml:space="preserve">
          <source>If more than two handlers are provided, &lt;code&gt;.toggle()&lt;/code&gt; will cycle among all of them. For example, if there are three handlers, then the first handler will be called on the first click, the fourth click, the seventh click, and so on.</source>
          <target state="translated">Если предоставлено более двух обработчиков, &lt;code&gt;.toggle()&lt;/code&gt; будет циклически переключаться между ними. Например, если есть три обработчика, то первый обработчик будет вызываться при первом щелчке, четвертом щелчке, седьмом щелчке и так далее.</target>
        </trans-unit>
        <trans-unit id="e2f6bc7a9f0aa20cbb06f1030996bcda35869f0e" translate="yes" xml:space="preserve">
          <source>If necessary, you can free up the &lt;code&gt;jQuery&lt;/code&gt; name as well by passing &lt;code&gt;true&lt;/code&gt; as an argument to the method. This is rarely necessary, and if you must do this (for example, if you need to use multiple versions of the jQuery library on the same page), you need to consider that most plug-ins rely on the presence of the &lt;code&gt;jQuery&lt;/code&gt; variable and may not operate correctly in this situation.</source>
          <target state="translated">При необходимости вы также можете освободить имя &lt;code&gt;jQuery&lt;/code&gt; , передав &lt;code&gt;true&lt;/code&gt; в качестве аргумента методу. Это редко бывает необходимо, и если вы должны это сделать (например, если вам нужно использовать несколько версий библиотеки jQuery на одной странице), вам нужно учитывать, что большинство подключаемых модулей полагаются на наличие переменной &lt;code&gt;jQuery&lt;/code&gt; и может работать некорректно в этой ситуации.</target>
        </trans-unit>
        <trans-unit id="8bd00f396099752bd4bd65b449d49215910d0558" translate="yes" xml:space="preserve">
          <source>If no argument is passed to the &lt;code&gt;.index()&lt;/code&gt; method, the return value is an integer indicating the position of the first element within the jQuery object relative to its sibling elements.</source>
          <target state="translated">Если в метод &lt;code&gt;.index()&lt;/code&gt; не передается аргумент , возвращаемое значение представляет собой целое число, указывающее положение первого элемента в объекте jQuery относительно его элементов-братьев.</target>
        </trans-unit>
        <trans-unit id="7c346aaa44dd8d567f21bb5aae83752d4561c000" translate="yes" xml:space="preserve">
          <source>If no arguments are passed to &lt;code&gt;jQuery.when()&lt;/code&gt;, it will return a resolved Promise.</source>
          <target state="translated">Если в &lt;code&gt;jQuery.when()&lt;/code&gt; не переданы аргументы , он вернет обработанное обещание.</target>
        </trans-unit>
        <trans-unit id="1c6c496b9d37048399b77df9425a1f66cd5047ec" translate="yes" xml:space="preserve">
          <source>If no element is matched by the selector &amp;mdash; in this case, if the document does not contain an element with id=&quot;result&quot; &amp;mdash; the Ajax request will &lt;em&gt;not&lt;/em&gt; be sent.</source>
          <target state="translated">Если селектор не соответствует ни одному элементу - в этом случае, если документ не содержит элемента с id = &quot;result&quot; - запрос Ajax &lt;em&gt;не&lt;/em&gt; будет отправлен.</target>
        </trans-unit>
        <trans-unit id="62ca8fca1a618e5a64840ebaf9f9f1aee603e249" translate="yes" xml:space="preserve">
          <source>If no elements match the provided selector, the new jQuery object is &quot;empty&quot;; that is, it contains no elements and has &lt;code&gt;&lt;a href=&quot;length&quot;&gt;.length&lt;/a&gt;&lt;/code&gt; property of 0.</source>
          <target state="translated">Если ни один элемент не соответствует предоставленному селектору, новый объект jQuery &amp;laquo;пустой&amp;raquo;; то есть он не содержит элементов и имеет свойство &lt;code&gt;&lt;a href=&quot;length&quot;&gt;.length&lt;/a&gt;&lt;/code&gt; равное 0.</target>
        </trans-unit>
        <trans-unit id="4bc36a786e39b4a1c6ae35891fd124eedbdde89c" translate="yes" xml:space="preserve">
          <source>If no explicit unit is specified (like &quot;em&quot; or &quot;%&quot;) then &quot;px&quot; is assumed.</source>
          <target state="translated">Если не указана явная единица (например,&quot;em&quot; или &quot;%&quot;),то предполагается &quot;px&quot;.</target>
        </trans-unit>
        <trans-unit id="cff1d0b294614d20c4bf3155f9c43ccc7a2db5ba" translate="yes" xml:space="preserve">
          <source>If no explicit unit was specified (like 'em' or '%') then &quot;px&quot; is concatenated to the value.</source>
          <target state="translated">Если явная единица измерения не указана (например,'em' или '%'),то к значению привязывается &quot;px&quot;.</target>
        </trans-unit>
        <trans-unit id="ca02c0d41ce1128dc4406d4b06b01b42aa4b0e7e" translate="yes" xml:space="preserve">
          <source>If no previous sibling exists, or if the previous sibling element does not match a supplied selector, an empty jQuery object is returned.</source>
          <target state="translated">Если предыдущий селектор отсутствует или если предыдущий селектор не соответствует поставляемому селектору,возвращается пустой объект jQuery.</target>
        </trans-unit>
        <trans-unit id="1b266254b738f1411176a4f0c23844d7112eb175" translate="yes" xml:space="preserve">
          <source>If only one argument is supplied to &lt;code&gt;$.extend()&lt;/code&gt;, this means the target argument was omitted. In this case, the jQuery object itself is assumed to be the target. By doing this, you can add new functions to the jQuery namespace. This can be useful for plugin authors wishing to add new methods to JQuery.</source>
          <target state="translated">Если в &lt;code&gt;$.extend()&lt;/code&gt; только один аргумент , это означает, что целевой аргумент был опущен. В этом случае предполагается, что сам объект jQuery является целью. Делая это, вы можете добавлять новые функции в пространство имен jQuery. Это может быть полезно для авторов плагинов, желающих добавить новые методы в JQuery.</target>
        </trans-unit>
        <trans-unit id="4db9fb787235af25b18b07fd361a2ed823ae9917" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;false&lt;/code&gt;, it will force requested pages not to be cached by the browser. &lt;strong&gt;Note:&lt;/strong&gt; Setting &lt;code&gt;cache&lt;/code&gt; to false will only work correctly with HEAD and GET requests. It works by appending &quot;_={timestamp}&quot; to the GET parameters. The parameter is not needed for other types of requests, except in IE8 when a POST is made to a URL that has already been requested by a GET.</source>
          <target state="translated">Если установлено значение &lt;code&gt;false&lt;/code&gt; , браузер не кэширует запрашиваемые страницы. &lt;strong&gt;Примечание.&lt;/strong&gt; Установка для &lt;code&gt;cache&lt;/code&gt; false будет правильно работать только с запросами HEAD и GET. Он работает путем добавления &quot;_ = {timestamp}&quot; к параметрам GET. Параметр не нужен для других типов запросов, за исключением IE8, когда POST выполняется для URL-адреса, который уже был запрошен GET.</target>
        </trans-unit>
        <trans-unit id="1df39c5d445afdf9bf8b858f0c082e9d064782f0" translate="yes" xml:space="preserve">
          <source>If supplied, the &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;step&lt;/code&gt;, &lt;code&gt;progress&lt;/code&gt;, &lt;code&gt;complete&lt;/code&gt;, &lt;code&gt;done&lt;/code&gt;, &lt;code&gt;fail&lt;/code&gt;, and &lt;code&gt;always&lt;/code&gt; callbacks are called on a &lt;em&gt;per-element&lt;/em&gt; basis; &lt;code&gt;this&lt;/code&gt; is set to the DOM element being animated. If no elements are in the set, no callbacks are called. If multiple elements are animated, the callback is executed once per matched element, not once for the animation as a whole. Use the &lt;code&gt;.promise()&lt;/code&gt; method to obtain a promise to which you can attach callbacks that fire once for an animated set of any size, including zero elements.</source>
          <target state="translated">Если указан, обратные вызовы &lt;code&gt;start&lt;/code&gt; , &lt;code&gt;step&lt;/code&gt; , &lt;code&gt;progress&lt;/code&gt; , &lt;code&gt;complete&lt;/code&gt; , &lt;code&gt;done&lt;/code&gt; , &lt;code&gt;fail&lt;/code&gt; и &lt;code&gt;always&lt;/code&gt; вызываются для &lt;em&gt;каждого элемента&lt;/em&gt; ; &lt;code&gt;this&lt;/code&gt; установлено для анимируемого элемента DOM. Если в наборе нет элементов, обратные вызовы не вызываются. Если анимированы несколько элементов, обратный вызов выполняется один раз для каждого совпадающего элемента, а не один раз для анимации в целом. Используйте метод &lt;code&gt;.promise()&lt;/code&gt; чтобы получить обещание, к которому вы можете прикрепить обратные вызовы, которые запускаются один раз для анимированного набора любого размера, включая нулевые элементы.</target>
        </trans-unit>
        <trans-unit id="fb20fb01c9622da07a36721c07ee3011c80a35ae" translate="yes" xml:space="preserve">
          <source>If supplied, the callback is fired once the animation is complete. This can be useful for stringing different animations together in sequence. The callback is not sent any arguments, but &lt;code&gt;this&lt;/code&gt; is set to the DOM element being animated. If multiple elements are animated, it is important to note that the callback is executed once per matched element, not once for the animation as a whole.</source>
          <target state="translated">Если указан, обратный вызов запускается после завершения анимации. Это может быть полезно для последовательного объединения различных анимаций. Обратный вызов не отправляет никаких аргументов, но &lt;code&gt;this&lt;/code&gt; установлено для анимированного элемента DOM. Если анимированы несколько элементов, важно отметить, что обратный вызов выполняется один раз для каждого совпадающего элемента, а не один раз для анимации в целом.</target>
        </trans-unit>
        <trans-unit id="655324e417d63109d35dcd6d26ff59b1e03d8a38" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;eventType&lt;/code&gt; string contains a period (&lt;code&gt;.&lt;/code&gt;) character, then the event is namespaced. The period character separates the event from its namespace. For example, in the call &lt;code&gt;.bind( &quot;click.name&quot;, handler )&lt;/code&gt;, the string &lt;code&gt;click&lt;/code&gt; is the event type, and the string &lt;code&gt;name&lt;/code&gt; is the namespace. Namespacing allows us to unbind or trigger some events of a type without affecting others. See the discussion of &lt;code&gt;.unbind()&lt;/code&gt; for more information.</source>
          <target state="translated">Если строка &lt;code&gt;eventType&lt;/code&gt; содержит символ точки ( &lt;code&gt;.&lt;/code&gt; ), То событие помещается в пространство имен. Символ точки отделяет событие от его пространства имен. Например, в вызове &lt;code&gt;.bind( &quot;click.name&quot;, handler )&lt;/code&gt; строка &lt;code&gt;click&lt;/code&gt; является типом события, а &lt;code&gt;name&lt;/code&gt; строки - пространством имен. Пространство имен позволяет нам отменять привязку или запускать некоторые события одного типа, не затрагивая другие. См. Обсуждение &lt;code&gt;.unbind()&lt;/code&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="1a53de9b2d75f9e16c82a1ca169ebc7c0fe715da" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;jumpToEnd&lt;/code&gt; argument is provided with a value of &lt;code&gt;true&lt;/code&gt;, the current animation stops, but the element is immediately given its target values for each CSS property. In our above &lt;code&gt;.slideUp()&lt;/code&gt; example, the element would be immediately hidden. The callback function is then immediately called, if provided.</source>
          <target state="translated">Если аргументу &lt;code&gt;jumpToEnd&lt;/code&gt; предоставлено значение &lt;code&gt;true&lt;/code&gt; , текущая анимация останавливается, но элементу сразу же присваиваются целевые значения для каждого свойства CSS. В нашем &lt;code&gt;.slideUp()&lt;/code&gt; выше .slideUp () элемент будет немедленно скрыт. Затем немедленно вызывается функция обратного вызова, если она предусмотрена.</target>
        </trans-unit>
        <trans-unit id="0b084904d70fa6997f9fe7b48cdb6a1f04ea9c73" translate="yes" xml:space="preserve">
          <source>If the Callbacks object is created with the &lt;code&gt;&quot;memory&quot;&lt;/code&gt; flag as its argument, additional functions may be added and fired after the callback list is locked.</source>
          <target state="translated">Если объект Callbacks создается с флагом &lt;code&gt;&quot;memory&quot;&lt;/code&gt; качестве аргумента, дополнительные функции могут быть добавлены и запущены после того, как список обратных вызовов заблокирован.</target>
        </trans-unit>
        <trans-unit id="2082496bc2ea0b0fb9b8dd91f03b0381b529e20b" translate="yes" xml:space="preserve">
          <source>If the HTML is more complex than a single tag without attributes, as it is in the above example, the actual creation of the elements is handled by the browser's &lt;code&gt;.innerHTML&lt;/code&gt; mechanism. In most cases, jQuery creates a new &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element and sets the &lt;code&gt;innerHTML&lt;/code&gt; property of the element to the HTML snippet that was passed in. When the parameter has a single tag (with optional closing tag or quick-closing) &amp;mdash; &lt;code&gt;$( &quot;&amp;lt;img&amp;nbsp;/&amp;gt;&quot; )&lt;/code&gt; or &lt;code&gt;$( &quot;&amp;lt;img&amp;gt;&quot; )&lt;/code&gt;, &lt;code&gt;$( &quot;&amp;lt;a&amp;gt;&amp;lt;/a&amp;gt;&quot; )&lt;/code&gt; or &lt;code&gt;$( &quot;&amp;lt;a&amp;gt;&quot; )&lt;/code&gt; &amp;mdash; jQuery creates the element using the native JavaScript &lt;code&gt;.createElement()&lt;/code&gt; function.</source>
          <target state="translated">Если HTML более сложен, чем один тег без атрибутов, как в приведенном выше примере, фактическое создание элементов обрабатывается механизмом браузера &lt;code&gt;.innerHTML&lt;/code&gt; . В большинстве случаев jQuery создает новый элемент &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; и устанавливает свойство &lt;code&gt;innerHTML&lt;/code&gt; элемента на переданный фрагмент HTML. Если параметр имеет единственный тег (с необязательным закрывающим тегом или быстрым закрытием) - &lt;code&gt;$( &quot;&amp;lt;img&amp;nbsp;/&amp;gt;&quot; )&lt;/code&gt; или &lt;code&gt;$( &quot;&amp;lt;img&amp;gt;&quot; )&lt;/code&gt; , &lt;code&gt;$( &quot;&amp;lt;a&amp;gt;&amp;lt;/a&amp;gt;&quot; )&lt;/code&gt; или &lt;code&gt;$( &quot;&amp;lt;a&amp;gt;&quot; )&lt;/code&gt; - jQuery создает элемент, используя собственный JavaScript &lt;code&gt;.createElement()&lt;/code&gt; функция.</target>
        </trans-unit>
        <trans-unit id="ff739eaa3d2bd09824aa3a1d63034114d170e545" translate="yes" xml:space="preserve">
          <source>If the URL includes the string &quot;callback=?&quot; (or similar, as defined by the server-side API), the request is treated as JSONP instead. See the discussion of the &lt;code&gt;jsonp&lt;/code&gt; data type in &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">Если URL включает строку &amp;laquo;callback =?&amp;raquo; (или аналогичный, как определено серверным API), вместо этого запрос обрабатывается как JSONP. Подробнее см. Обсуждение типа данных &lt;code&gt;jsonp&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9496723e22f6743fe9d57c524d9388c347722920" translate="yes" xml:space="preserve">
          <source>If the argument is either a primitive value or an instance of a standard built-in ECMAScript object, the [[Class]] internal property is used to determine the type. (&lt;a href=&quot;http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/&quot;&gt;More details about this technique.&lt;/a&gt;)</source>
          <target state="translated">Если аргумент является либо примитивным значением, либо экземпляром стандартного встроенного объекта ECMAScript, внутреннее свойство [[Class]] используется для определения типа. ( &lt;a href=&quot;http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/&quot;&gt;Подробнее об этой технике.&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="d02c0f4426e39615b544ed0464339dadf3b5ebc8" translate="yes" xml:space="preserve">
          <source>If the browser lacks support for any form of the CSS property, vendor-prefixed or not, the style is not applied to the element. However, if the browser supports a proprietary alternative, it can be applied to the cssHooks instead.</source>
          <target state="translated">Если браузер не поддерживает какую-либо форму свойства CSS,исправленную производителем или нет,то стиль не применяется к элементу.Однако,если браузер поддерживает проприетарную альтернативу,его можно применить к cssHooks.</target>
        </trans-unit>
        <trans-unit id="95fde5ca725b070bc532f6b644eadb188d1aba9e" translate="yes" xml:space="preserve">
          <source>If the document's URI contains a fragment identifier, or hash, then the &lt;code&gt;:target&lt;/code&gt; selector will match the element with an ID that matches the identifier. For example, given a document with a URI of https://example.com/#foo, &lt;code&gt;$( &quot;p:target&quot; )&lt;/code&gt; will select the &lt;code&gt;&amp;lt;p id=&quot;foo&quot;&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">Если URI документа содержит идентификатор фрагмента или хэш, то селектор &lt;code&gt;:target&lt;/code&gt; будет соответствовать элементу с идентификатором, который соответствует идентификатору. Например, для документа с URI https://example.com/#foo &lt;code&gt;$( &quot;p:target&quot; )&lt;/code&gt; выберет элемент &lt;code&gt;&amp;lt;p id=&quot;foo&quot;&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5f65ab7f48ee855a7f29bf67d82a4a9cef3df64" translate="yes" xml:space="preserve">
          <source>If the first argument contains more than one space-separated event types, the event handler is called &lt;em&gt;once for each event type&lt;/em&gt;.</source>
          <target state="translated">Если первый аргумент содержит более одного типа событий, разделенных пробелами, обработчик событий вызывается &lt;em&gt;один раз для каждого типа события&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="324eb4139b24f464ba1deb14fd76275a27cebaf5" translate="yes" xml:space="preserve">
          <source>If the first argument is provided, only the animations in the queue represented by that string will be stopped.</source>
          <target state="translated">Если предоставлен первый аргумент,то будут остановлены только анимации в очереди,представленные этой строкой.</target>
        </trans-unit>
        <trans-unit id="f76268e802fbe39b2a272890d6c8c28f8cfd6576" translate="yes" xml:space="preserve">
          <source>If the id contains characters like periods or colons you have to &lt;a href=&quot;https://learn.jquery.com/using-jquery-core/faq/how-do-i-select-an-element-by-an-id-that-has-characters-used-in-css-notation/&quot;&gt;escape those characters with backslashes&lt;/a&gt;.</source>
          <target state="translated">Если идентификатор содержит такие символы, как точки или двоеточия, вы должны &lt;a href=&quot;https://learn.jquery.com/using-jquery-core/faq/how-do-i-select-an-element-by-an-id-that-has-characters-used-in-css-notation/&quot;&gt;экранировать эти символы с помощью обратной косой черты&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7fd2595890873077c060a93b00e9916417a06e22" translate="yes" xml:space="preserve">
          <source>If the image cannot be loaded (for example, because it is not present at the supplied URL), the alert is displayed:</source>
          <target state="translated">Если изображение не может быть загружено (например,потому что его нет на прилагаемом URL-адресе),отображается предупреждение:</target>
        </trans-unit>
        <trans-unit id="57e3c42650c6bfdf8bd6ccc9410e18108b8a5a8d" translate="yes" xml:space="preserve">
          <source>If the object is undefined or null, then &quot;undefined&quot; or &quot;null&quot; is returned accordingly.</source>
          <target state="translated">Если объект неопределен или равен нулю,то соответственно возвращается &quot;неопределенный&quot; или &quot;нулевой&quot;.</target>
        </trans-unit>
        <trans-unit id="f722930b4cdd34a274beb0789c10debdca68d84d" translate="yes" xml:space="preserve">
          <source>If the object passed is in an Array, it must be an array of objects in the format returned by &lt;a href=&quot;serializearray&quot;&gt;.serializeArray()&lt;/a&gt;</source>
          <target state="translated">Если переданный объект находится в массиве, это должен быть массив объектов в формате, возвращаемом &lt;a href=&quot;serializearray&quot;&gt;.serializeArray ()&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d9bc6c9de573e8aa452dbb8459913aa26e1a533d" translate="yes" xml:space="preserve">
          <source>If the optional &lt;code&gt;dataTypes&lt;/code&gt; argument is supplied, the prefilter will be only be applied to requests with the indicated dataTypes. For example, the following only applies the given prefilter to JSON and script requests:</source>
          <target state="translated">Если &lt;code&gt;dataTypes&lt;/code&gt; необязательный аргумент dataTypes , предварительный фильтр будет применяться только к запросам с указанными dataTypes. Например, следующее применяет данный предварительный фильтр только к запросам JSON и скриптов:</target>
        </trans-unit>
        <trans-unit id="6053c8560021416217afb1b788498e7f5aa08f73" translate="yes" xml:space="preserve">
          <source>If the parent has other child elements with the same element name, nothing is matched.</source>
          <target state="translated">Если у родителя есть другие дочерние элементы с таким же именем,ни один из них не совпадает.</target>
        </trans-unit>
        <trans-unit id="751798212affbc58e8ecaa7df76e7f788a785455" translate="yes" xml:space="preserve">
          <source>If the parent has other child elements, nothing is matched.</source>
          <target state="translated">Если у родителя есть другие детские элементы,ничто не совпадает.</target>
        </trans-unit>
        <trans-unit id="b53d061765c69adca409964a3650807a86a3b042" translate="yes" xml:space="preserve">
          <source>If the request is successful, the status code functions take the same parameters as the success callback; if it results in an error (including 3xx redirect), they take the same parameters as the &lt;code&gt;error&lt;/code&gt; callback.</source>
          <target state="translated">Если запрос успешен, функции кода состояния принимают те же параметры, что и обратный вызов успеха; если это приводит к ошибке (включая перенаправление 3xx), они принимают те же параметры, что и обратный вызов &lt;code&gt;error&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca85ca7ed6f2b72bc7dbaeebb9d91960f9c75846" translate="yes" xml:space="preserve">
          <source>If the selector is not matched or is not supplied, all ancestors will be selected; in these cases it selects the same elements as the &lt;code&gt;.parents()&lt;/code&gt; method does when no selector is provided.</source>
          <target state="translated">Если селектор не соответствует или не указан, будут выбраны все предки; в этих случаях он выбирает те же элементы, что и метод &lt;code&gt;.parents()&lt;/code&gt; , когда не указан селектор.</target>
        </trans-unit>
        <trans-unit id="004994e39c154e110bf5a03e59888ce98368676b" translate="yes" xml:space="preserve">
          <source>If the selector is not matched or is not supplied, all following siblings will be selected; in these cases it selects the same elements as the &lt;code&gt;.nextAll()&lt;/code&gt; method does when no filter selector is provided.</source>
          <target state="translated">Если селектор не совпадает или не указан, будут выбраны все следующие братья и сестры; в этих случаях он выбирает те же элементы, что и метод &lt;code&gt;.nextAll()&lt;/code&gt; , когда не указан селектор фильтра.</target>
        </trans-unit>
        <trans-unit id="290644d9dfe326e1e3334ea562ab608e67eee596" translate="yes" xml:space="preserve">
          <source>If the selector is not matched or is not supplied, all previous siblings will be selected; in these cases it selects the same elements as the &lt;code&gt;&lt;a href=&quot;prevall&quot;&gt;.prevAll()&lt;/a&gt;&lt;/code&gt; method does when no filter selector is provided.</source>
          <target state="translated">Если селектор не совпадает или не указан, будут выбраны все предыдущие братья и сестры; в этих случаях он выбирает те же элементы, что и метод &lt;code&gt;&lt;a href=&quot;prevall&quot;&gt;.prevAll()&lt;/a&gt;&lt;/code&gt; , когда не указан селектор фильтра.</target>
        </trans-unit>
        <trans-unit id="585bac3cf89b8d72c6188e141362964ef16cabf0" translate="yes" xml:space="preserve">
          <source>If the server performs HTTP authentication before providing a response, the user name and password pair can be sent via the &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; options.</source>
          <target state="translated">Если сервер выполняет HTTP-аутентификацию до предоставления ответа, пару имени пользователя и пароля можно отправить с помощью параметров &lt;code&gt;username&lt;/code&gt; и &lt;code&gt;password&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="215cb75803d8e8023a619c9c18a5d9e2266de9b2" translate="yes" xml:space="preserve">
          <source>If the user clicks on an element, drags away from it, and releases the button, this is still counted as a &lt;code&gt;mousedown&lt;/code&gt; event. This sequence of actions is treated as a &quot;canceling&quot; of the button press in most user interfaces, so it is usually better to use the &lt;code&gt;click&lt;/code&gt; event unless we know that the &lt;code&gt;mousedown&lt;/code&gt; event is preferable for a particular situation.</source>
          <target state="translated">Если пользователь щелкает элемент, перетаскивает его и отпускает кнопку, это все равно считается событием &lt;code&gt;mousedown&lt;/code&gt; . Эта последовательность действий рассматривается как &amp;laquo;отмена&amp;raquo; нажатия кнопки в большинстве пользовательских интерфейсов, поэтому обычно лучше использовать событие &lt;code&gt;click&lt;/code&gt; если мы не знаем, что событие &lt;code&gt;mousedown&lt;/code&gt; предпочтительнее для конкретной ситуации.</target>
        </trans-unit>
        <trans-unit id="0b4eed02f498fd7f0e7bf6cb84cedc4266d09b62" translate="yes" xml:space="preserve">
          <source>If the user clicks outside an element, drags onto it, and releases the button, this is still counted as a &lt;code&gt;mouseup&lt;/code&gt; event. This sequence of actions is not treated as a button press in most user interfaces, so it is usually better to use the &lt;code&gt;click&lt;/code&gt; event unless we know that the &lt;code&gt;mouseup&lt;/code&gt; event is preferable for a particular situation.</source>
          <target state="translated">Если пользователь щелкает за пределами элемента, перетаскивает его и отпускает кнопку, это все равно считается событием &lt;code&gt;mouseup&lt;/code&gt; . Эта последовательность действий не рассматривается как нажатие кнопки в большинстве пользовательских интерфейсов, поэтому обычно лучше использовать событие &lt;code&gt;click&lt;/code&gt; если мы не знаем, что событие &lt;code&gt;mouseup&lt;/code&gt; предпочтительнее для конкретной ситуации.</target>
        </trans-unit>
        <trans-unit id="c2a1f8d8c3b9bb8d8f184b09efedaf1daf673d06" translate="yes" xml:space="preserve">
          <source>If there is more than one target element, however, cloned copies of the inserted element will be created for each target after the first, and that new set (the original element plus clones) is returned.</source>
          <target state="translated">Однако,если есть более одного целевого элемента,то клонированные копии вставляемого элемента будут созданы для каждого целевого элемента после первого,и этот новый набор (исходный элемент плюс клоны)будет возвращен.</target>
        </trans-unit>
        <trans-unit id="5a7e4c1e83aed1b3930722f0d66aa7e5616ab20e" translate="yes" xml:space="preserve">
          <source>If there is more than one target element, however, cloned copies of the inserted element will be created for each target except the last, and that new set (the original element plus clones) is returned.</source>
          <target state="translated">Однако,если имеется более одного целевого элемента,то клонированные копии вставляемого элемента будут созданы для каждого целевого элемента,кроме последнего,и этот новый набор (исходный элемент плюс клоны)будет возвращен.</target>
        </trans-unit>
        <trans-unit id="8787808293fa05af2e8affadcfd95450a3bf2d50" translate="yes" xml:space="preserve">
          <source>If there is more than one target element, however, cloned copies of the inserted element will be created for each target except the last.</source>
          <target state="translated">Однако,если имеется более одного целевого элемента,клонированные копии вставляемого элемента будут созданы для каждой цели,за исключением последней.</target>
        </trans-unit>
        <trans-unit id="5913f13141a1b15f396f9f4e2a36d612f6fca768" translate="yes" xml:space="preserve">
          <source>If this method is called, the default action of the event will not be triggered.</source>
          <target state="translated">Если этот метод будет вызван,то действие по умолчанию события не сработает.</target>
        </trans-unit>
        <trans-unit id="3f3e2ec105ab7a353f3579c720bcfdd5df6193f9" translate="yes" xml:space="preserve">
          <source>If true, the merge becomes recursive (aka. deep copy). Passing &lt;code&gt;false&lt;/code&gt; for this argument is not supported.</source>
          <target state="translated">Если это правда, слияние становится рекурсивным (то есть глубокой копией). Передача &lt;code&gt;false&lt;/code&gt; для этого аргумента не поддерживается.</target>
        </trans-unit>
        <trans-unit id="75b936e39044adc25a9986e48ff6844145e3ac2d" translate="yes" xml:space="preserve">
          <source>If used without an argument, .die() removes &lt;em&gt;all&lt;/em&gt; event handlers previously attached using &lt;code&gt;.live()&lt;/code&gt; from the elements.</source>
          <target state="translated">Если используется без аргумента, .die () удаляет &lt;em&gt;все&lt;/em&gt; обработчики событий, ранее прикрепленные с помощью &lt;code&gt;.live()&lt;/code&gt; из элементов.</target>
        </trans-unit>
        <trans-unit id="cf9eeb52aecad2e101bf1aeb299682a772c652b4" translate="yes" xml:space="preserve">
          <source>If we begin at item A, we can find its ancestors:</source>
          <target state="translated">Если мы начнем с пункта А,то сможем найти его предков:</target>
        </trans-unit>
        <trans-unit id="99c6ee4539e100e93276b49da7e98dec7f1c39f2" translate="yes" xml:space="preserve">
          <source>If we begin at item A, we can find its parents:</source>
          <target state="translated">Если мы начнем с пункта А,то сможем найти его родителей:</target>
        </trans-unit>
        <trans-unit id="0b4d9120ffa9c7e00f9e3bbfce8ac082a2dfc6a4" translate="yes" xml:space="preserve">
          <source>If we begin at item A, we can find its positioned ancestor:</source>
          <target state="translated">Если мы начнем с пункта А,то сможем найти его предка:</target>
        </trans-unit>
        <trans-unit id="4012fb1201b5f23319150d87a8dbeb3c716a7954" translate="yes" xml:space="preserve">
          <source>If we begin at item II, we can find list items within it:</source>
          <target state="translated">Если мы начнем с пункта II,то сможем найти пункты списка внутри него:</target>
        </trans-unit>
        <trans-unit id="9870e89d6eb0a3b2d6e730e189ba1a9227203c31" translate="yes" xml:space="preserve">
          <source>If we begin at the level-2 list, we can find its children:</source>
          <target state="translated">Если мы начнем со списка 2-го уровня,то сможем найти его детей:</target>
        </trans-unit>
        <trans-unit id="2f5577b86f9eb472a7183d19e7ba3e50e04de7a1" translate="yes" xml:space="preserve">
          <source>If we begin at the third item, we can find its siblings:</source>
          <target state="translated">Если мы начнем с третьего пункта,то сможем найти его братьев и сестер:</target>
        </trans-unit>
        <trans-unit id="1ed1bbf6fad4725a8b4a14420edd25b6595ec8b2" translate="yes" xml:space="preserve">
          <source>If we begin at the third item, we can find the element which comes just after it:</source>
          <target state="translated">Если мы начнем с третьего пункта,то сможем найти элемент,который идет сразу после него:</target>
        </trans-unit>
        <trans-unit id="a49f3c082e2a12e4bdeb8809cedd967999e60ecf" translate="yes" xml:space="preserve">
          <source>If we begin at the third item, we can find the elements which come after it:</source>
          <target state="translated">Если мы начнем с третьего пункта,то сможем найти элементы,которые идут за ним:</target>
        </trans-unit>
        <trans-unit id="c80fe02009dd0aad947df32d76ecca7d6b239226" translate="yes" xml:space="preserve">
          <source>If we begin at the third item, we can find the elements which come before it:</source>
          <target state="translated">Если мы начнем с третьего пункта,то сможем найти элементы,которые стоят перед ним:</target>
        </trans-unit>
        <trans-unit id="ef3c887e1545a45ef8f08a8704c0b7e651ffbec5" translate="yes" xml:space="preserve">
          <source>If we had any number of nested elements inside &lt;code&gt;&amp;lt;div class=&quot;hello&quot;&amp;gt;&lt;/code&gt;, they would be removed, too.</source>
          <target state="translated">Если бы внутри &lt;code&gt;&amp;lt;div class=&quot;hello&quot;&amp;gt;&lt;/code&gt; было какое-то количество вложенных элементов , они бы тоже были удалены.</target>
        </trans-unit>
        <trans-unit id="19d828e697416a5c743df6cb30f665e9fcbb68f4" translate="yes" xml:space="preserve">
          <source>If we had any number of nested elements inside &lt;code&gt;&amp;lt;div class=&quot;hello&quot;&amp;gt;&lt;/code&gt;, they would be removed, too. Other jQuery constructs such as data or event handlers are erased as well.</source>
          <target state="translated">Если бы внутри &lt;code&gt;&amp;lt;div class=&quot;hello&quot;&amp;gt;&lt;/code&gt; было какое-то количество вложенных элементов , они бы тоже были удалены. Другие конструкции jQuery, такие как обработчики данных или событий, также удаляются.</target>
        </trans-unit>
        <trans-unit id="911f4bc0b16c3e649ed50fbe1f62d155bfc15c93" translate="yes" xml:space="preserve">
          <source>If we omit the argument, &lt;code&gt;.index()&lt;/code&gt; will return the position of the first element within the set of matched elements in relation to its siblings:</source>
          <target state="translated">Если мы опустим аргумент, &lt;code&gt;.index()&lt;/code&gt; вернет позицию первого элемента в наборе совпавших элементов по отношению к его братьям и сестрам:</target>
        </trans-unit>
        <trans-unit id="5372f1f4ba9d50e01d6b910310318b2510f41a28" translate="yes" xml:space="preserve">
          <source>If we retrieve one of the three list items (for example, through a DOM function or as the context to an event handler), &lt;code&gt;.index()&lt;/code&gt; can search for this list item within the set of matched elements:</source>
          <target state="translated">Если мы извлекаем один из трех элементов списка (например, с помощью функции DOM или в качестве контекста для обработчика событий), &lt;code&gt;.index()&lt;/code&gt; может искать этот элемент списка в наборе согласованных элементов:</target>
        </trans-unit>
        <trans-unit id="3f7bbbfcd7a21f385ba3781f2e3fff437fc12005" translate="yes" xml:space="preserve">
          <source>If we use a string as the &lt;code&gt;.index()&lt;/code&gt; method's argument, it is interpreted as a jQuery selector string. The first element among the object's matched elements which also matches this selector is located.</source>
          <target state="translated">Если мы используем строку в качестве аргумента метода &lt;code&gt;.index()&lt;/code&gt; , она интерпретируется как строка селектора jQuery. Располагается первый элемент среди совпадающих элементов объекта, который также соответствует этому селектору.</target>
        </trans-unit>
        <trans-unit id="00dc2f91332c649c6921d2235466868be577cdcb" translate="yes" xml:space="preserve">
          <source>If you are creating a Deferred, keep a reference to the Deferred so that it can be resolved or rejected at some point. Return &lt;em&gt;only&lt;/em&gt; the Promise object via &lt;code&gt;deferred.promise()&lt;/code&gt; so other code can register callbacks or inspect the current state.</source>
          <target state="translated">Если вы создаете отложенный, сохраните ссылку на отложенный, чтобы его можно было разрешить или отклонить в какой-то момент. Верните &lt;em&gt;только&lt;/em&gt; объект Promise через &lt;code&gt;deferred.promise()&lt;/code&gt; чтобы другой код мог регистрировать обратные вызовы или проверять текущее состояние.</target>
        </trans-unit>
        <trans-unit id="3820d880a925a629e8ccc5bc0f08e2301c0a7685" translate="yes" xml:space="preserve">
          <source>If you called .triggerHandler() on a focus event - the browser's default focus action would not be triggered, only the event handlers bound to the focus event.</source>
          <target state="translated">Если вы вызываете .triggerHandler()при событии фокусировки-действие фокусировки браузера по умолчанию не будет вызвано,только обработчики события будут привязаны к событию фокусировки.</target>
        </trans-unit>
        <trans-unit id="dec277cc94e68c28c6f853281e91d776e9ee7249" translate="yes" xml:space="preserve">
          <source>If you don't pass it any arguments at all, &lt;code&gt;jQuery.when()&lt;/code&gt; will return a resolved promise.</source>
          <target state="translated">Если вы не передадите ему никаких аргументов, &lt;code&gt;jQuery.when()&lt;/code&gt; вернет обработанное обещание.</target>
        </trans-unit>
        <trans-unit id="ed75025b9282a8dd930010aeb0f25413ea564441" translate="yes" xml:space="preserve">
          <source>If you need the original first array, make a copy of it before calling &lt;code&gt;$.merge()&lt;/code&gt;. Fortunately, &lt;code&gt;$.merge()&lt;/code&gt; itself can be used for this duplication:</source>
          <target state="translated">Если вам нужен исходный первый массив, сделайте его копию перед вызовом &lt;code&gt;$.merge()&lt;/code&gt; . К счастью, для этого дублирования можно использовать саму &lt;code&gt;$.merge()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cb8577a17d77c9c21013084798642954a4de2afe" translate="yes" xml:space="preserve">
          <source>If you retrieve the children of the paragraph of the example as follows:</source>
          <target state="translated">Если вы возьмете детей из параграфа примера следующим образом:</target>
        </trans-unit>
        <trans-unit id="06606cb5712e898802a32fef13c80c73b5d28c5f" translate="yes" xml:space="preserve">
          <source>If you want to remove elements without destroying their data or event handlers (so they can be re-added later), use &lt;a href=&quot;detach&quot;&gt;&lt;code&gt;.detach()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Если вы хотите удалить элементы, не разрушая их данные или обработчики событий (чтобы их можно было повторно добавить позже), используйте вместо этого &lt;a href=&quot;detach&quot;&gt; &lt;code&gt;.detach()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2e3964143dab7f172597463bd73872efe1ce4dcd" translate="yes" xml:space="preserve">
          <source>If you wish to force a crossDomain request (such as JSONP) on the same domain, set the value of crossDomain to &lt;code&gt;true&lt;/code&gt;. This allows, for example, server-side redirection to another domain. (version added: &lt;a href=&quot;https://api.jquery.com/category/version/1.5/&quot;&gt;1.5&lt;/a&gt;)</source>
          <target state="translated">Если вы хотите принудительно выполнить запрос crossDomain (например, JSONP) в том же домене, установите значение crossDomain равным &lt;code&gt;true&lt;/code&gt; . Это позволяет, например, перенаправление на стороне сервера в другой домен. (добавлена ​​в версии: &lt;a href=&quot;https://api.jquery.com/category/version/1.5/&quot;&gt;1.5&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="6ee9c1692e7b0bfda9ad74626e47f006f9a1c4c6" translate="yes" xml:space="preserve">
          <source>If you wish to process a jQuery object &amp;mdash; for example, &lt;code&gt;$('div').map( callback );&lt;/code&gt; &amp;mdash; use &lt;a href=&quot;map&quot;&gt;.map()&lt;/a&gt; instead.</source>
          <target state="translated">Если вы хотите обработать объект jQuery - например, &lt;code&gt;$('div').map( callback );&lt;/code&gt; - вместо этого используйте &lt;a href=&quot;map&quot;&gt;.map ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="36c6d226d904e8199ea1bffb26ea26c7df8c5998" translate="yes" xml:space="preserve">
          <source>If you wish to process a plain array or object, use the &lt;a href=&quot;jquery.map&quot;&gt;jQuery.map()&lt;/a&gt; instead.</source>
          <target state="translated">Если вы хотите обработать простой массив или объект, используйте вместо этого &lt;a href=&quot;jquery.map&quot;&gt;jQuery.map ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0c41e2d016dd648cd720cf19a3eee4903d4812ae" translate="yes" xml:space="preserve">
          <source>If you'd like to prevent forms from being submitted unless a flag variable is set, try:</source>
          <target state="translated">Если вы хотите предотвратить отправку форм,если только не установлена флаговая переменная,попробуйте:</target>
        </trans-unit>
        <trans-unit id="eed9b28367e60b70ac4c8f58dc850614f8d73ee6" translate="yes" xml:space="preserve">
          <source>If you're updating to a newer version of jQuery, be sure to read the release notes published on &lt;a href=&quot;http://blog.jquery.com/&quot;&gt;our blog&lt;/a&gt;. If you're coming from a version prior 1.9, you should check out the &lt;a href=&quot;http://jquery.com/upgrade-guide/1.9/&quot;&gt;1.9 Upgrade Guide&lt;/a&gt; as well.</source>
          <target state="translated">Если вы обновляетесь до новой версии jQuery, обязательно прочтите примечания к выпуску, опубликованные в &lt;a href=&quot;http://blog.jquery.com/&quot;&gt;нашем блоге&lt;/a&gt; . Если вы используете более раннюю версию 1.9, вам также следует ознакомиться с &lt;a href=&quot;http://jquery.com/upgrade-guide/1.9/&quot;&gt;Руководством по обновлению 1.9&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f2a27ebe2601072f671bf7240fb523d11cef0980" translate="yes" xml:space="preserve">
          <source>If you're updating to a newer version of jQuery, be sure to read the release notes published on &lt;a href=&quot;https://blog.jquery.com/&quot;&gt;our blog&lt;/a&gt;. If you're coming from a version prior 1.9, you should check out the &lt;a href=&quot;https://jquery.com/upgrade-guide/1.9/&quot;&gt;1.9 Upgrade Guide&lt;/a&gt; as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a801cb61ff0e03eec1129f4aaf18554bec40a6" translate="yes" xml:space="preserve">
          <source>Implements a simple event delegation: The click handler is added to an unordered list, and the children of its li children are hidden. Clicking one of the li children toggles (see toggle()) their children.</source>
          <target state="translated">Входит в простую делегацию по проведению мероприятий:Обработчик кликов добавляется в неупорядоченный список,а дети его li детей скрываются.Нажатие на одного из детей li переключает (см.toggle())их детей.</target>
        </trans-unit>
        <trans-unit id="c55f548616e1bdf2313ac81e3a00859473385f2b" translate="yes" xml:space="preserve">
          <source>In &lt;b&gt;jQuery 1.3.x&lt;/b&gt; only the following JavaScript events could be bound: &lt;code&gt;click&lt;/code&gt;, &lt;code&gt;dblclick&lt;/code&gt;, &lt;code&gt;keydown&lt;/code&gt;, &lt;code&gt;keypress&lt;/code&gt;, &lt;code&gt;keyup&lt;/code&gt;, &lt;code&gt;mousedown&lt;/code&gt;, &lt;code&gt;mousemove&lt;/code&gt;, &lt;code&gt;mouseout&lt;/code&gt;, &lt;code&gt;mouseover&lt;/code&gt;, and &lt;code&gt;mouseup&lt;/code&gt;.</source>
          <target state="translated">В &lt;b&gt;JQuery 1.3.x&lt;/b&gt; только могут быть связаны следующие события JavaScript: &lt;code&gt;click&lt;/code&gt; , &lt;code&gt;dblclick&lt;/code&gt; , &lt;code&gt;keydown&lt;/code&gt; , &lt;code&gt;keypress&lt;/code&gt; , &lt;code&gt;keyup&lt;/code&gt; , &lt;code&gt;mousedown&lt;/code&gt; , &lt;code&gt;mousemove&lt;/code&gt; , &lt;code&gt;mouseout&lt;/code&gt; , &lt;code&gt;mouseover&lt;/code&gt; и &lt;code&gt;mouseup&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc25b4a7a27326e06b5fd2ad1349c059d2bc75b1" translate="yes" xml:space="preserve">
          <source>In API calls that return &lt;code&gt;jQuery&lt;/code&gt;, the value returned will be the original jQuery object unless otherwise documented by that API. API methods such as &lt;code&gt;.filter()&lt;/code&gt; or &lt;code&gt;.not()&lt;/code&gt; modify their incoming set and thus return a new jQuery object.</source>
          <target state="translated">В вызовах API, возвращающих &lt;code&gt;jQuery&lt;/code&gt; , возвращаемое значение будет исходным объектом jQuery, если иное не задокументировано этим API. Методы API, такие как &lt;code&gt;.filter()&lt;/code&gt; или &lt;code&gt;.not()&lt;/code&gt; изменяют свой входящий набор и, таким образом, возвращают новый объект jQuery.</target>
        </trans-unit>
        <trans-unit id="f86a079769131d7a257bdbdd2d3a79573d13b84c" translate="yes" xml:space="preserve">
          <source>In HTML, the root of the document, and thus the element that &lt;code&gt;$(&quot;:root&quot;)&lt;/code&gt; selects, is always the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">В HTML корнем документа и, следовательно, элементом, который выбирает &lt;code&gt;$(&quot;:root&quot;)&lt;/code&gt; , всегда является элемент &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="90b0a7b51c285f152dab2b7964b8c859531963d7" translate="yes" xml:space="preserve">
          <source>In Internet Explorer prior to version 9, using &lt;code&gt;&lt;a href=&quot;prop&quot;&gt;.prop()&lt;/a&gt;&lt;/code&gt; to set a DOM element property to anything other than a simple primitive value (number, string, or boolean) can cause memory leaks if the property is not removed (using &lt;a href=&quot;removeprop&quot;&gt;&lt;code&gt;.removeProp()&lt;/code&gt;&lt;/a&gt;) before the DOM element is removed from the document. To safely set values on DOM objects without memory leaks, use &lt;a href=&quot;data&quot;&gt;&lt;code&gt;.data()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">В Internet Explorer до версии 9 использование &lt;code&gt;&lt;a href=&quot;prop&quot;&gt;.prop()&lt;/a&gt;&lt;/code&gt; для установки свойства элемента DOM на любое другое значение, кроме простого примитивного значения (число, строка или логическое значение), может вызвать утечку памяти, если свойство не удалено (с помощью &lt;a href=&quot;removeprop&quot;&gt; &lt;code&gt;.removeProp()&lt;/code&gt; &lt;/a&gt; ) перед тем, как элемент DOM будет удален из документа. Чтобы безопасно устанавливать значения для объектов DOM без утечек памяти, используйте &lt;a href=&quot;data&quot;&gt; &lt;code&gt;.data()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f939c8b82794880f504f6aa30d38ebf5c4931f87" translate="yes" xml:space="preserve">
          <source>In JavaScript it is common to invoke functions that optionally accept callbacks that are called within that function. For example, in versions prior to jQuery 1.5, asynchronous processes such as &lt;code&gt;jQuery.ajax()&lt;/code&gt; accept callbacks to be invoked some time in the near-future upon success, error, and completion of the ajax request.</source>
          <target state="translated">В JavaScript обычно вызывают функции, которые могут принимать обратные вызовы, которые вызываются внутри этой функции. Например, в версиях до jQuery 1.5 асинхронные процессы, такие как &lt;code&gt;jQuery.ajax()&lt;/code&gt; принимают обратные вызовы, которые будут вызываться через некоторое время в ближайшем будущем после успеха, ошибки и завершения запроса ajax.</target>
        </trans-unit>
        <trans-unit id="686c39bdf330ce95b8dce6e0ee04b4f1f76e6431" translate="yes" xml:space="preserve">
          <source>In JavaScript, all variables defined inside a function are only visible inside that function scope. Consider the following example:</source>
          <target state="translated">В JavaScript все переменные,определенные внутри функции,видны только внутри этой области видимости функции.Рассмотрим следующий пример:</target>
        </trans-unit>
        <trans-unit id="047bd61bb9c90687b66ca8ed469784619a48e5af" translate="yes" xml:space="preserve">
          <source>In JavaScript, the variable &quot;this&quot; always refers to the current context. By default, &quot;this&quot; refers to the window object. Within a function this context can change, depending on how the function is called.</source>
          <target state="translated">В JavaScript переменная &quot;this&quot; всегда относится к текущему контексту.По умолчанию &quot;this&quot; относится к объекту окна.Внутри функции этот контекст может меняться в зависимости от того,как вызывается функция.</target>
        </trans-unit>
        <trans-unit id="256edb59b1c2c6b0952e7eaa1150e0d8aa62123f" translate="yes" xml:space="preserve">
          <source>In addition to keeping any additional handlers on an element from being executed, this method also stops the bubbling by implicitly calling &lt;code&gt;event.stopPropagation()&lt;/code&gt;. To simply prevent the event from bubbling to ancestor elements but allow other event handlers to execute on the same element, we can use &lt;code&gt;&lt;a href=&quot;event.stoppropagation&quot;&gt;event.stopPropagation()&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">В дополнение к предотвращению выполнения каких-либо дополнительных обработчиков элемента, этот метод также останавливает восходящую &lt;code&gt;event.stopPropagation()&lt;/code&gt; путем неявного вызова event.stopPropagation () . Чтобы просто предотвратить &lt;code&gt;&lt;a href=&quot;event.stoppropagation&quot;&gt;event.stopPropagation()&lt;/a&gt;&lt;/code&gt; события к элементам-предкам, но разрешить другим обработчикам событий выполняться с тем же элементом, мы можем вместо этого использовать event.stopPropagation () .</target>
        </trans-unit>
        <trans-unit id="b85e251b79384759a0dadd805240a05ae01fa83f" translate="yes" xml:space="preserve">
          <source>In addition to numeric values, each property can take the strings &lt;code&gt;'show'&lt;/code&gt;, &lt;code&gt;'hide'&lt;/code&gt;, and &lt;code&gt;'toggle'&lt;/code&gt;. These shortcuts allow for custom hiding and showing animations that take into account the display type of the element. In order to use jQuery's built-in toggle state tracking, the &lt;code&gt;'toggle'&lt;/code&gt; keyword must be consistently given as the value of the property being animated.</source>
          <target state="translated">В дополнение к числовым значениям каждое свойство может принимать строки &lt;code&gt;'show'&lt;/code&gt; , &lt;code&gt;'hide'&lt;/code&gt; и &lt;code&gt;'toggle'&lt;/code&gt; . Эти ярлыки позволяют настраивать скрытие и отображение анимации с учетом типа отображения элемента. Чтобы использовать встроенное отслеживание состояния переключения в jQuery, ключевое слово &lt;code&gt;'toggle'&lt;/code&gt; должно последовательно указываться как значение анимируемого свойства.</target>
        </trans-unit>
        <trans-unit id="26f440de122807a7eb84ac76aa1a92b09284db79" translate="yes" xml:space="preserve">
          <source>In addition to providing fine-grained control over how specific style properties are handled, &lt;code&gt;$.cssHooks&lt;/code&gt; also extends the set of properties available to the &lt;code&gt;.animate()&lt;/code&gt; method.</source>
          <target state="translated">Помимо обеспечения детального контроля над обработкой определенных свойств стиля, &lt;code&gt;$.cssHooks&lt;/code&gt; также расширяет набор свойств, доступных для &lt;code&gt;.animate()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="62204ad9c661e7fa91ab538c00b37854a51f0ad3" translate="yes" xml:space="preserve">
          <source>In addition to style properties, some non-style properties such as &lt;code&gt;scrollTop&lt;/code&gt; and &lt;code&gt;scrollLeft&lt;/code&gt;, as well as custom properties, can be animated.</source>
          <target state="translated">Помимо свойств стиля , можно анимировать некоторые свойства, не относящиеся к стилю, такие как &lt;code&gt;scrollTop&lt;/code&gt; и &lt;code&gt;scrollLeft&lt;/code&gt; , а также настраиваемые свойства.</target>
        </trans-unit>
        <trans-unit id="a2aa050be0f2f82522fdba0712355b2ca63f6fb0" translate="yes" xml:space="preserve">
          <source>In addition to their ability to handle events on descendant elements not yet created, another advantage of delegated event handlers is their potential for much lower overhead when many elements must be monitored. On a data table with 1,000 rows in its &lt;code&gt;tbody&lt;/code&gt;, this example attaches a handler to 1,000 elements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c504a12dac5d841b49101cb81d45e400c9ede90" translate="yes" xml:space="preserve">
          <source>In addition to their ability to handle events on descendant elements not yet created, another advantage of delegated events is their potential for much lower overhead when many elements must be monitored. On a data table with 1,000 rows in its &lt;code&gt;tbody&lt;/code&gt;, this example attaches a handler to 1,000 elements:</source>
          <target state="translated">В дополнение к их способности обрабатывать события в дочерних элементах, которые еще не созданы, еще одним преимуществом делегированных событий является их потенциал для гораздо меньших накладных расходов, когда необходимо отслеживать многие элементы. В таблице данных с 1000 строками в &lt;code&gt;tbody&lt;/code&gt; этот пример прикрепляет обработчик к 1000 элементам:</target>
        </trans-unit>
        <trans-unit id="e9c75d2754230691bf946777916346c3689eb636" translate="yes" xml:space="preserve">
          <source>In addition, the default &lt;code&gt;select&lt;/code&gt; action on the field will be fired, so the entire text field will be selected.</source>
          <target state="translated">Кроме того, будет запущено действие &lt;code&gt;select&lt;/code&gt; по умолчанию для поля, поэтому будет выделено все текстовое поле.</target>
        </trans-unit>
        <trans-unit id="d10575558539578c331579dfa3c05aeffedeaae7" translate="yes" xml:space="preserve">
          <source>In all browsers, the &lt;code&gt;load&lt;/code&gt;, &lt;code&gt;scroll&lt;/code&gt;, and &lt;code&gt;error&lt;/code&gt; events (e.g., on an &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element) do not bubble. In Internet Explorer 8 and lower, the &lt;code&gt;paste&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; events do not bubble. Such events are not supported for use with delegation, but they &lt;em&gt;can&lt;/em&gt; be used when the event handler is directly attached to the element generating the event.</source>
          <target state="translated">Во всех браузерах события &lt;code&gt;load&lt;/code&gt; , &lt;code&gt;scroll&lt;/code&gt; и &lt;code&gt;error&lt;/code&gt; (например, в элементе &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; ) не всплывают. В Internet Explorer 8 и ниже события &lt;code&gt;paste&lt;/code&gt; и &lt;code&gt;reset&lt;/code&gt; не всплывают. Такие события не поддерживаются для использования с делегированием, но их &lt;em&gt;можно&lt;/em&gt; использовать, когда обработчик событий напрямую прикреплен к элементу, генерирующему событие.</target>
        </trans-unit>
        <trans-unit id="8cab16519ad45f2303f3431bde5b7704cd8eb4fa" translate="yes" xml:space="preserve">
          <source>In an HTML document, &lt;code&gt;.html()&lt;/code&gt; can be used to get the contents of any element. If the selector expression matches more than one element, only the first match will have its HTML content returned. Consider this code:</source>
          <target state="translated">В HTML-документе &lt;code&gt;.html()&lt;/code&gt; можно использовать для получения содержимого любого элемента. Если выражение селектора соответствует более чем одному элементу, только первое совпадение будет иметь его HTML-содержимое. Рассмотрим этот код:</target>
        </trans-unit>
        <trans-unit id="cd04b58d4ecb7b9363da2e9577e7ef03ec1f1fda" translate="yes" xml:space="preserve">
          <source>In general, it is not necessary to wait for all images to be fully loaded. If code can be executed earlier, it is usually best to place it in a handler sent to the &lt;code&gt;.ready()&lt;/code&gt; method.</source>
          <target state="translated">В общем, нет необходимости ждать полной загрузки всех изображений. Если код можно выполнить раньше, обычно лучше всего поместить его в обработчик, отправленный методу &lt;code&gt;.ready()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d33f0aaf3828bdcb50934cc02da424dd0c4363f5" translate="yes" xml:space="preserve">
          <source>In jQuery 1.4, HTML5 input elements are also serialized.</source>
          <target state="translated">В jQuery 1.4 входные элементы HTML5 также сериализуются.</target>
        </trans-unit>
        <trans-unit id="b9c44ed5033d671be098fb144d5a736988fe1961" translate="yes" xml:space="preserve">
          <source>In jQuery 1.4.3 setting an element's data object with &lt;code&gt;.data(obj)&lt;/code&gt; extends the data previously stored with that element.</source>
          <target state="translated">В jQuery 1.4.3 установка объекта данных элемента с помощью &lt;code&gt;.data(obj)&lt;/code&gt; расширяет данные, ранее сохраненные с этим элементом.</target>
        </trans-unit>
        <trans-unit id="4d960d44554ebb4ea8cd004ed4d3c9582c34ecbb" translate="yes" xml:space="preserve">
          <source>In jQuery 1.4.3 you can now pass in &lt;code&gt;false&lt;/code&gt; in place of an event handler. This will bind an event handler equivalent to: &lt;code&gt;function(){ return false; }&lt;/code&gt;. This function can be removed at a later time by calling: &lt;code&gt;.unbind( eventName, false )&lt;/code&gt;.</source>
          <target state="translated">В jQuery 1.4.3 теперь вы можете передавать &lt;code&gt;false&lt;/code&gt; вместо обработчика событий. Это свяжет обработчик событий, эквивалентный: &lt;code&gt;function(){ return false; }&lt;/code&gt; . Эту функцию можно будет удалить позже, вызвав: &lt;code&gt;.unbind( eventName, false )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19e692aa156c0019a291e99a6a8d2bb7ededd9dc" translate="yes" xml:space="preserve">
          <source>In most cases where a jQuery API call returns a Deferred or Promise-compatible object, such as &lt;a href=&quot;jquery.ajax&quot;&gt;&lt;code&gt;jQuery.ajax()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;jquery.when&quot;&gt;&lt;code&gt;jQuery.when()&lt;/code&gt;&lt;/a&gt;, you will only want to use the &lt;a href=&quot;deferred.then&quot;&gt;&lt;code&gt;deferred.then()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;deferred.done&quot;&gt;&lt;code&gt;deferred.done()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;deferred.fail&quot;&gt;&lt;code&gt;deferred.fail()&lt;/code&gt;&lt;/a&gt; methods to add callbacks to the Deferred's queues. The internals of the API call or code that created the Deferred will invoke &lt;a href=&quot;deferred.resolve&quot;&gt;&lt;code&gt;deferred.resolve()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;deferred.reject&quot;&gt;&lt;code&gt;deferred.reject()&lt;/code&gt;&lt;/a&gt; on the deferred at some point, causing the appropriate callbacks to run.</source>
          <target state="translated">В большинстве случаев, когда вызов jQuery API возвращает объект, совместимый с Deferred или Promise, например &lt;a href=&quot;jquery.ajax&quot;&gt; &lt;code&gt;jQuery.ajax()&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;jquery.when&quot;&gt; &lt;code&gt;jQuery.when()&lt;/code&gt; &lt;/a&gt; , вы захотите использовать только &lt;a href=&quot;deferred.then&quot;&gt; &lt;code&gt;deferred.then()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;deferred.done&quot;&gt; &lt;code&gt;deferred.done()&lt;/code&gt; &lt;/a&gt; , и методы &lt;a href=&quot;deferred.fail&quot;&gt; &lt;code&gt;deferred.fail()&lt;/code&gt; &lt;/a&gt; для добавления обратных вызовов в очереди Deferred. Внутренние компоненты вызова API или кода, создавшего Deferred, в какой-то момент вызовут &lt;a href=&quot;deferred.resolve&quot;&gt; &lt;code&gt;deferred.resolve()&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;deferred.reject&quot;&gt; &lt;code&gt;deferred.reject()&lt;/code&gt; &lt;/a&gt; для deferred, вызывая выполнение соответствующих обратных вызовов.</target>
        </trans-unit>
        <trans-unit id="d0a2331f4adc2b5d5e552bf687f2ce2aefba3477" translate="yes" xml:space="preserve">
          <source>In most cases, an event such as &lt;code&gt;click&lt;/code&gt; occurs infrequently and performance is not a significant concern. However, high frequency events such as &lt;code&gt;mousemove&lt;/code&gt; or &lt;code&gt;scroll&lt;/code&gt; can fire dozens of times per second, and in those cases it becomes more important to use events judiciously. Performance can be increased by reducing the amount of work done in the handler itself, caching information needed by the handler rather than recalculating it, or by rate-limiting the number of actual page updates using &lt;code&gt;setTimeout&lt;/code&gt;.</source>
          <target state="translated">В большинстве случаев такое событие, как &lt;code&gt;click&lt;/code&gt; происходит нечасто, и производительность не имеет большого значения. Однако высокочастотные события, такие как &lt;code&gt;mousemove&lt;/code&gt; или &lt;code&gt;scroll&lt;/code&gt; могут запускаться десятки раз в секунду, и в этих случаях становится более важным разумно использовать события. Производительность может быть увеличена за счет уменьшения объема работы, выполняемой в самом обработчике, кэширования информации, необходимой обработчику, а не ее пересчета, или за счет ограничения количества фактических обновлений страницы с помощью &lt;code&gt;setTimeout&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="022896c09fc44d201ee28c6ff1e2fe7872fff487" translate="yes" xml:space="preserve">
          <source>In order for the following &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;'s content to be retrieved, it would have to be the first one with &lt;code&gt;class=&quot;demo-container&quot;&lt;/code&gt; in the document:</source>
          <target state="translated">Чтобы получить следующий контент &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; , он должен быть первым в документе с &lt;code&gt;class=&quot;demo-container&quot;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b2e64d7d79a08dbc41ad3fd5affb885a441051e2" translate="yes" xml:space="preserve">
          <source>In other words, explicitly calling &lt;code&gt;.off()&lt;/code&gt; from within a regularly-bound handler has exactly the same effect.</source>
          <target state="translated">Другими словами, явный вызов &lt;code&gt;.off()&lt;/code&gt; из обработчика с регулярной привязкой имеет точно такой же эффект.</target>
        </trans-unit>
        <trans-unit id="db094bc071e20c3da110ba9ed5253d3af08c2777" translate="yes" xml:space="preserve">
          <source>In particular, note that the &lt;em&gt;0-based indexing&lt;/em&gt; means that, counter-intuitively, &lt;code&gt;:even&lt;/code&gt; selects the first element, third element, and so on within the matched set.</source>
          <target state="translated">В частности, обратите внимание, что &lt;em&gt;индексирование на основе 0&lt;/em&gt; означает, что, вопреки интуиции,: &lt;code&gt;:even&lt;/code&gt; выбирает первый элемент, третий элемент и т. Д. В согласованном наборе.</target>
        </trans-unit>
        <trans-unit id="cb71fdee8ce1556cf1afb32ab05473f4f6aa0db6" translate="yes" xml:space="preserve">
          <source>In particular, note that the &lt;em&gt;0-based indexing&lt;/em&gt; means that, counter-intuitively, &lt;code&gt;:odd&lt;/code&gt; selects the second element, fourth element, and so on within the matched set.</source>
          <target state="translated">В частности, обратите внимание, что &lt;em&gt;индексирование на основе 0&lt;/em&gt; означает, что, вопреки интуиции,: &lt;code&gt;:odd&lt;/code&gt; выбирает второй элемент, четвертый элемент и так далее в согласованном наборе.</target>
        </trans-unit>
        <trans-unit id="a3c9da35edc3cc5d6ea9065ba771ec075c9db257" translate="yes" xml:space="preserve">
          <source>In requests with &lt;code&gt;dataType: &quot;json&quot;&lt;/code&gt; or &lt;code&gt;dataType: &quot;jsonp&quot;&lt;/code&gt;, if the string contains a double question mark (&lt;code&gt;??&lt;/code&gt;) anywhere in the URL or a single question mark (&lt;code&gt;?&lt;/code&gt;) in the query string, it is replaced with a value generated by jQuery that is unique for each copy of the library on the page (e.g. &lt;code&gt;jQuery21406515378922229067_1479880736745&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd522f754a0a197915f75d29b1bc0fbb8bfef608" translate="yes" xml:space="preserve">
          <source>In response to a successful request, the function's arguments are the same as those of &lt;code&gt;.done()&lt;/code&gt;: data, textStatus, and the jqXHR object. For failed requests the arguments are the same as those of &lt;code&gt;.fail()&lt;/code&gt;: the jqXHR object, textStatus, and errorThrown. Refer to &lt;code&gt;&lt;a href=&quot;deferred.always&quot;&gt;deferred.always()&lt;/a&gt;&lt;/code&gt; for implementation details.</source>
          <target state="translated">В ответ на успешный запрос аргументы функции такие же, как у &lt;code&gt;.done()&lt;/code&gt; : data, textStatus и объекта jqXHR. Для неудавшихся запросов аргументы такие же, как у &lt;code&gt;.fail()&lt;/code&gt; : объект jqXHR, textStatus и errorThrown. Обратитесь к &lt;code&gt;&lt;a href=&quot;deferred.always&quot;&gt;deferred.always()&lt;/a&gt;&lt;/code&gt; за подробностями реализации.</target>
        </trans-unit>
        <trans-unit id="54b28d185b71b0e3cb261df3840cdba7e56abded" translate="yes" xml:space="preserve">
          <source>In the case where multiple Deferred objects are passed to &lt;code&gt;jQuery.when()&lt;/code&gt;, the method returns the Promise from a new &quot;master&quot; Deferred object that tracks the aggregate state of all the Deferreds it has been passed. The method will resolve its master Deferred as soon as all the Deferreds resolve, or reject the master Deferred as soon as one of the Deferreds is rejected. If the master Deferred is resolved, the doneCallbacks for the master Deferred are executed. The arguments passed to the doneCallbacks provide the resolved values for each of the Deferreds, and matches the order the Deferreds were passed to &lt;code&gt;jQuery.when()&lt;/code&gt;. For example:</source>
          <target state="translated">В случае, когда в &lt;code&gt;jQuery.when()&lt;/code&gt; передается несколько объектов Deferred , метод возвращает обещание от нового &amp;laquo;главного&amp;raquo; объекта Deferred, который отслеживает агрегированное состояние всех переданных объектов Deferred. Метод разрешит свой основной Deferred, как только разрешатся все Deferred, или отклонит master Deferred, как только будет отклонено одно из Deferred. Если master Deferred разрешен, то выполняются doneCallbacks для master Deferred. Аргументы, переданные в doneCallbacks, предоставляют разрешенные значения для каждого из Deferred и соответствуют порядку, в котором Deferred были переданы в &lt;code&gt;jQuery.when()&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="34ac399b3ebafe5d2cefbb444a050714ccd84b64" translate="yes" xml:space="preserve">
          <source>In the code above, &lt;code&gt;handler2&lt;/code&gt; will be executed anyway the first time even if it's removed using &lt;a href=&quot;off&quot;&gt;&lt;code&gt;.off()&lt;/code&gt;&lt;/a&gt;. However, the handler will not be executed the following times the &lt;code&gt;click&lt;/code&gt; event is triggered.</source>
          <target state="translated">В приведенном выше коде &lt;code&gt;handler2&lt;/code&gt; все равно будет выполнен в первый раз, даже если он будет удален с помощью &lt;a href=&quot;off&quot;&gt; &lt;code&gt;.off()&lt;/code&gt; &lt;/a&gt; . Однако обработчик не будет выполняться в следующих случаях, когда инициируется событие &lt;code&gt;click&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7608f442c24912b37c2af38a9841627ef4939aef" translate="yes" xml:space="preserve">
          <source>In the event a Deferred was resolved with no value, the corresponding doneCallback argument will be undefined. If a Deferred resolved to a single value, the corresponding argument will hold that value. In the case where a Deferred resolved to multiple values, the corresponding argument will be an array of those values. For example:</source>
          <target state="translated">В случае,если Deferred был разрешен без значения,соответствующий аргумент doneCallback будет неопределен.Если значение Deferred resolved to a single value,то соответствующий аргумент будет содержать это значение.В случае,если значение Deferred resolved to multiple values,соответствующим аргументом будет массив этих значений.Например:</target>
        </trans-unit>
        <trans-unit id="003a335871d55cb3bfbdbcda7292af8c31c862a7" translate="yes" xml:space="preserve">
          <source>In the example above the alert could be displayed twice due to the &lt;em&gt;two&lt;/em&gt; event types (&lt;code&gt;click&lt;/code&gt; and &lt;code&gt;mouseover&lt;/code&gt;).</source>
          <target state="translated">В приведенном выше примере предупреждение может отображаться дважды из-за &lt;em&gt;двух&lt;/em&gt; типов событий ( &lt;code&gt;click&lt;/code&gt; и &lt;code&gt;mouseover&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="158b033fedda8d5eeb74763fdf403e5a800ad317" translate="yes" xml:space="preserve">
          <source>In the first formulation listed above, &lt;code&gt;jQuery()&lt;/code&gt; &amp;mdash; which can also be written as &lt;code&gt;$()&lt;/code&gt; &amp;mdash; searches through the DOM for any elements that match the provided selector and creates a new jQuery object that references these elements:</source>
          <target state="translated">В первой формулировке, перечисленной выше, &lt;code&gt;jQuery()&lt;/code&gt; который также можно записать как &lt;code&gt;$()&lt;/code&gt; ищет в DOM любые элементы, которые соответствуют предоставленному селектору, и создает новый объект jQuery, который ссылается на эти элементы:</target>
        </trans-unit>
        <trans-unit id="b92f2e6fbb0ab5c85244a5eb650169ddb2f9e7c8" translate="yes" xml:space="preserve">
          <source>In the jQuery API you'll often find the notation of Array&amp;lt;Type&amp;gt;:</source>
          <target state="translated">В jQuery API часто встречается обозначение Array &amp;lt;Type&amp;gt;:</target>
        </trans-unit>
        <trans-unit id="74599d3563687c123a40757f250c2d32007c9773" translate="yes" xml:space="preserve">
          <source>In the multiple-Deferreds case where one of the Deferreds is rejected, &lt;code&gt;jQuery.when()&lt;/code&gt; immediately fires the failCallbacks for its master Deferred. Note that some of the Deferreds may still be unresolved at that point. The arguments passed to the failCallbacks match the signature of the failCallback for the Deferred that was rejected. If you need to perform additional processing for this case, such as canceling any unfinished Ajax requests, you can keep references to the underlying jqXHR objects in a closure and inspect/cancel them in the failCallback.</source>
          <target state="translated">В случае с несколькими отложенными &lt;code&gt;jQuery.when()&lt;/code&gt; когда одно из отложенных отклоняется, jQuery.when () немедленно запускает failCallbacks для своего основного отложенного вызова. Обратите внимание, что некоторые из отложенных запросов могут еще быть нерешенными на этом этапе. Аргументы, переданные в failCallbacks, соответствуют сигнатуре failCallback для Deferred, который был отклонен. Если вам нужно выполнить дополнительную обработку для этого случая, например отменить любые незавершенные запросы Ajax, вы можете сохранить ссылки на базовые объекты jqXHR в закрытии и проверить / отменить их в failCallback.</target>
        </trans-unit>
        <trans-unit id="073b34c6994588f2071a904c50032ed28a98de0e" translate="yes" xml:space="preserve">
          <source>In the second form of &lt;code&gt;.on()&lt;/code&gt;, the &lt;code&gt;events&lt;/code&gt; argument is a plain object. The keys are strings in the same form as the &lt;code&gt;events&lt;/code&gt; argument with space-separated event type names and optional namespaces. The value for each key is a function (or &lt;code&gt;false&lt;/code&gt; value) that is used as the &lt;code&gt;handler&lt;/code&gt; instead of the final argument to the method. In other respects, the two forms are identical in their behavior as described below.</source>
          <target state="translated">Во второй форме &lt;code&gt;.on()&lt;/code&gt; , то &lt;code&gt;events&lt;/code&gt; аргумент является простым объектом. Ключи представляют собой строки той же формы, что и аргумент &lt;code&gt;events&lt;/code&gt; с разделенными пробелами именами типов событий и необязательными пространствами имен. Значение для каждого ключа - это функция (или &lt;code&gt;false&lt;/code&gt; значение), которая используется в качестве &lt;code&gt;handler&lt;/code&gt; вместо последнего аргумента метода. В остальном эти две формы идентичны по своему поведению, как описано ниже.</target>
        </trans-unit>
        <trans-unit id="045a105119183e0d63b51b5acb27c67f0294a5cb" translate="yes" xml:space="preserve">
          <source>In the second version of &lt;code&gt;.animate()&lt;/code&gt;, the options object can include the &lt;code&gt;specialEasing&lt;/code&gt; property, which is itself an object of CSS properties and their corresponding easing functions. For example, to simultaneously animate the width using the &lt;code&gt;linear&lt;/code&gt; easing function and the height using the &lt;code&gt;easeOutBounce&lt;/code&gt; easing function:</source>
          <target state="translated">Во второй версии &lt;code&gt;.animate()&lt;/code&gt; объект параметров может включать свойство &lt;code&gt;specialEasing&lt;/code&gt; , которое само является объектом свойств CSS и соответствующих им функций ослабления. Например, чтобы одновременно анимировать ширину с помощью &lt;code&gt;linear&lt;/code&gt; функции &lt;code&gt;easeOutBounce&lt;/code&gt; и высоту с помощью функции плавности easyOutBounce :</target>
        </trans-unit>
        <trans-unit id="6646018b14d1a79747d2a12cfe072a12bbd46392" translate="yes" xml:space="preserve">
          <source>In the two examples above, if the current document does not contain an element with an ID of &quot;result,&quot; the &lt;code&gt;.load()&lt;/code&gt; method is not executed.</source>
          <target state="translated">В двух приведенных выше примерах, если текущий документ не содержит элемента с идентификатором &quot;result&quot;, метод &lt;code&gt;.load()&lt;/code&gt; не выполняется.</target>
        </trans-unit>
        <trans-unit id="83c70ec55e1ce30ad8181ce7bec16a26822c9ce7" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;&quot;x defaulted to false&quot;&lt;/code&gt; is printed.</source>
          <target state="translated">В этом случае печатается &lt;code&gt;&quot;x defaulted to false&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc5b0f95b72b479fd473e456c7e9a2db5365c5df" translate="yes" xml:space="preserve">
          <source>In this case, jQuery serializes the successful controls within the form. Only &lt;code&gt;form&lt;/code&gt; elements are examined for inputs they contain, in all other cases the input elements to be serialized should be part of the set passed to the &lt;code&gt;.serialize()&lt;/code&gt; method. Selecting both the form and its children in a set will cause duplicates in the serialized string.</source>
          <target state="translated">В этом случае jQuery сериализует успешные элементы управления в форме. Только элементы &lt;code&gt;form&lt;/code&gt; проверяются на предмет содержащихся в них входных данных, во всех остальных случаях сериализуемые входные элементы должны быть частью набора, переданного в метод &lt;code&gt;.serialize()&lt;/code&gt; . Выбор формы и ее дочерних элементов в наборе приведет к дублированию сериализованной строки.</target>
        </trans-unit>
        <trans-unit id="8e32605075d07df7746bc5df2c037ecc4cec50d9" translate="yes" xml:space="preserve">
          <source>Incorporates the functionality of the &lt;code&gt;.done()&lt;/code&gt; and &lt;code&gt;.fail()&lt;/code&gt; methods, allowing (as of jQuery 1.8) the underlying Promise to be manipulated. Refer to &lt;a href=&quot;deferred.then&quot;&gt;&lt;code&gt;deferred.then()&lt;/code&gt;&lt;/a&gt; for implementation details.</source>
          <target state="translated">Включает в себя функциональность методов &lt;code&gt;.done()&lt;/code&gt; и &lt;code&gt;.fail()&lt;/code&gt; , позволяя ( начиная с jQuery 1.8) управлять базовым обещанием. Обратитесь к &lt;a href=&quot;deferred.then&quot;&gt; &lt;code&gt;deferred.then()&lt;/code&gt; &lt;/a&gt; за подробностями реализации.</target>
        </trans-unit>
        <trans-unit id="08fe68c2196ab74c49fb9fafa6248aa7d8d54a15" translate="yes" xml:space="preserve">
          <source>Increase the size of a div when you click it.</source>
          <target state="translated">Увеличьте размер дайва при нажатии на него.</target>
        </trans-unit>
        <trans-unit id="8c573d89c56832144e82dc0c65822e76ab9d85d5" translate="yes" xml:space="preserve">
          <source>Increase the width of #box by 200 pixels the first time it is clicked.</source>
          <target state="translated">Увеличьте ширину #box на 200 пикселей при первом нажатии.</target>
        </trans-unit>
        <trans-unit id="549a7b530fa5380410a0ff2cb671afdc9647db3c" translate="yes" xml:space="preserve">
          <source>Index: 1</source>
          <target state="translated">Индекс:1</target>
        </trans-unit>
        <trans-unit id="ed0cff7ba7150622b417350187a4e715481bdeb8" translate="yes" xml:space="preserve">
          <source>Indicates whether the META key was pressed when the event fired.</source>
          <target state="translated">Указывает,была ли нажата клавиша META,когда произошло событие.</target>
        </trans-unit>
        <trans-unit id="9be8e7cd55549531f2184f9b8714999ee341194a" translate="yes" xml:space="preserve">
          <source>Indicates whether the ready hold is being requested or released</source>
          <target state="translated">Показывает,запрашивается или освобождается ли готовый трюм.</target>
        </trans-unit>
        <trans-unit id="df6bbdbc65c3e880772dec699d1dbf3e558b84df" translate="yes" xml:space="preserve">
          <source>Inner</source>
          <target state="translated">Inner</target>
        </trans-unit>
        <trans-unit id="cf0b3350bf25e8116c205102031c9af9b7c62dfb" translate="yes" xml:space="preserve">
          <source>Insert all paragraphs after an element with id of &quot;foo&quot;. Same as $( &quot;#foo&quot; ).after( &quot;p&quot; )</source>
          <target state="translated">Вставить все параграфы после элемента с id &quot;foo&quot;.То же самое,что и в $(&quot;#foo&quot;).after(&quot;p&quot;).</target>
        </trans-unit>
        <trans-unit id="713a1ea610126247c0c956b3f704ca3d7d89377f" translate="yes" xml:space="preserve">
          <source>Insert all paragraphs before an element with id of &quot;foo&quot;. Same as $( &quot;#foo&quot; ).before( &quot;p&quot; )</source>
          <target state="translated">Вставить все параграфы перед элементом с id &quot;foo&quot;.То же самое,что и $(&quot;#foo&quot;).before(&quot;p&quot;).</target>
        </trans-unit>
        <trans-unit id="2a36566b5f7bf551e49303d001450470fb565a18" translate="yes" xml:space="preserve">
          <source>Insert content, specified by the parameter, after each element in the set of matched elements.</source>
          <target state="translated">Вставлять содержимое,заданное параметром,после каждого элемента в набор совпадающих элементов.</target>
        </trans-unit>
        <trans-unit id="4f33896b01cb4d71115311d9e51d0a69028d263a" translate="yes" xml:space="preserve">
          <source>Insert content, specified by the parameter, before each element in the set of matched elements.</source>
          <target state="translated">Вставлять содержимое,заданное параметром,перед каждым элементом в набор совпадающих элементов.</target>
        </trans-unit>
        <trans-unit id="e1317a820c726f2f7abf2b065dbb9d9906663972" translate="yes" xml:space="preserve">
          <source>Insert content, specified by the parameter, to the beginning of each element in the set of matched elements.</source>
          <target state="translated">Вставить содержимое,заданное параметром,в начало каждого элемента в наборе совпадающих элементов.</target>
        </trans-unit>
        <trans-unit id="252fc9640a2721b3d60f55e214d785d9d12737f1" translate="yes" xml:space="preserve">
          <source>Insert content, specified by the parameter, to the end of each element in the set of matched elements.</source>
          <target state="translated">Вставить содержимое,заданное параметром,в конец каждого элемента в наборе совпадающих элементов.</target>
        </trans-unit>
        <trans-unit id="c8ca7bc677de2444cdb05f20c9cb2ef285dfa468" translate="yes" xml:space="preserve">
          <source>Insert every element in the set of matched elements after the target.</source>
          <target state="translated">Вставьте каждый элемент в набор совмещенных элементов после цели.</target>
        </trans-unit>
        <trans-unit id="433e394091af7dd49ec8b0682e217e24fe9bd2c1" translate="yes" xml:space="preserve">
          <source>Insert every element in the set of matched elements before the target.</source>
          <target state="translated">Вставьте каждый элемент в набор совмещенных элементов перед мишенью.</target>
        </trans-unit>
        <trans-unit id="7bff64e9231226c26a9dc7b06b93b6d79e0d3552" translate="yes" xml:space="preserve">
          <source>Insert every element in the set of matched elements to the beginning of the target.</source>
          <target state="translated">Вставьте каждый элемент из набора совмещенных элементов в начало цели.</target>
        </trans-unit>
        <trans-unit id="7b2c22e52ada1a8014980d94bff9b7b4cfeb9d42" translate="yes" xml:space="preserve">
          <source>Insert every element in the set of matched elements to the end of the target.</source>
          <target state="translated">Вставьте каждый элемент в набор совмещенных элементов до конца мишени.</target>
        </trans-unit>
        <trans-unit id="7fafafe0d098454dcbfab19c76c5ce49d27c6179" translate="yes" xml:space="preserve">
          <source>Inserts a DOM element after all paragraphs.</source>
          <target state="translated">Вставляет элемент DOM после всех параграфов.</target>
        </trans-unit>
        <trans-unit id="a3f6aa2d5cf3fc5ab3aa271f200c2d6f1ce14203" translate="yes" xml:space="preserve">
          <source>Inserts a DOM element before all paragraphs.</source>
          <target state="translated">Вставляет элемент DOM перед всеми параграфами.</target>
        </trans-unit>
        <trans-unit id="f24e238ed2d6f7ba18c6ded522867eda685f664b" translate="yes" xml:space="preserve">
          <source>Inserts a jQuery object (similar to an Array of DOM Elements) after all paragraphs.</source>
          <target state="translated">Вставляет объект jQuery (похожий на массив элементов DOM)после всех параграфов.</target>
        </trans-unit>
        <trans-unit id="401338d602b7206134e52efbf29b6ec32f8ec93f" translate="yes" xml:space="preserve">
          <source>Inserts a jQuery object (similar to an Array of DOM Elements) before all paragraphs.</source>
          <target state="translated">Вставляет объект jQuery (похожий на массив элементов DOM)перед всеми параграфами.</target>
        </trans-unit>
        <trans-unit id="471b94475364d34a8f4078445fc6f7f7d9d495b7" translate="yes" xml:space="preserve">
          <source>Inserts some HTML after all paragraphs.</source>
          <target state="translated">Вставляет HTML после всех параграфов.</target>
        </trans-unit>
        <trans-unit id="6acd8000622936c4294d7c600585eb8bebf03830" translate="yes" xml:space="preserve">
          <source>Inserts some HTML before all paragraphs.</source>
          <target state="translated">Вставляет некоторый HTML перед всеми параграфами.</target>
        </trans-unit>
        <trans-unit id="f9488bd2ba1b9c7874018a8a617b9794c4d764b8" translate="yes" xml:space="preserve">
          <source>Inside a function a special variable &quot;arguments&quot; is always available. It's similar to an array in that it has a length property, but it lacks the built-in methods of an array. The elements of the pseudo-array are the argument of the function call.</source>
          <target state="translated">Внутри функции всегда доступна специальная переменная &quot;аргументы&quot;.Она похожа на массив в том,что имеет свойство длины,но в ней отсутствуют встроенные методы массива.Элементы псевдомассива являются аргументом вызова функции.</target>
        </trans-unit>
        <trans-unit id="889f9bf9f9dc1c396c4d0b554f373c83933abc68" translate="yes" xml:space="preserve">
          <source>Instead of always returning false, the callback could check fields of the form for validity, and return false only when the form is invalid.</source>
          <target state="translated">Вместо того,чтобы всегда возвращать false,обратный вызов может проверять поля формы на достоверность,и возвращать false только в том случае,если форма недействительна.</target>
        </trans-unit>
        <trans-unit id="5e61f038557f88bd91e1fce28491cecdae04f573" translate="yes" xml:space="preserve">
          <source>Instead of maintaining references to handlers in order to unbind them, we can namespace the events and use this capability to narrow the scope of our unbinding actions. As shown in the discussion for the &lt;code&gt;.bind()&lt;/code&gt; method, namespaces are defined by using a period (&lt;code&gt;.&lt;/code&gt;) character when binding a handler:</source>
          <target state="translated">Вместо того, чтобы поддерживать ссылки на обработчики, чтобы отвязать их, мы можем создать пространство имен для событий и использовать эту возможность, чтобы сузить объем наших действий по отвязке. Как показано в обсуждении метода &lt;code&gt;.bind()&lt;/code&gt; , пространства имен определяются с помощью символа точки ( &lt;code&gt;.&lt;/code&gt; ) При привязке обработчика:</target>
        </trans-unit>
        <trans-unit id="0c7832090687c37c110b6e39c664d1e278683557" translate="yes" xml:space="preserve">
          <source>Instead of returning the jQuery object (to allow chaining), &lt;code&gt;.triggerHandler()&lt;/code&gt; returns whatever value was returned by the last handler it caused to be executed. If no handlers are triggered, it returns &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">Вместо того, чтобы возвращать объект jQuery (чтобы разрешить цепочку), &lt;code&gt;.triggerHandler()&lt;/code&gt; возвращает любое значение, возвращенное последним обработчиком, который он вызвал для выполнения. Если обработчики не запущены, возвращается &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9edcffff4461c9083fbff857f8dcee0f0769cbd4" translate="yes" xml:space="preserve">
          <source>Integer</source>
          <target state="translated">Integer</target>
        </trans-unit>
        <trans-unit id="ebeb0debcfb63cd27902be71c9f1d935fc8b7b38" translate="yes" xml:space="preserve">
          <source>Internally, selector context is implemented with the &lt;code&gt;.find()&lt;/code&gt; method, so &lt;code&gt;$( &quot;span&quot;, this )&lt;/code&gt; is equivalent to &lt;code&gt;$( this ).find( &quot;span&quot; )&lt;/code&gt;.</source>
          <target state="translated">Внутренне контекст селектора реализуется с помощью &lt;code&gt;.find()&lt;/code&gt; , поэтому &lt;code&gt;$( &quot;span&quot;, this )&lt;/code&gt; эквивалентен &lt;code&gt;$( this ).find( &quot;span&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="917ff81ef2ae0c567a9fa3e955b27891825703d3" translate="yes" xml:space="preserve">
          <source>Internet Explorer: 6.0, 7.0, 8.0</source>
          <target state="translated">Internet Explorer:6.0,7.0,8.0</target>
        </trans-unit>
        <trans-unit id="ef38e4b5eb8bf6f227a0e1ed3e8b1c60fc1f2190" translate="yes" xml:space="preserve">
          <source>It defines a variable</source>
          <target state="translated">Она определяет переменную</target>
        </trans-unit>
        <trans-unit id="df4361ec1cc6c3b029867e137e66254e9f962d61" translate="yes" xml:space="preserve">
          <source>It doesn't correctly bubble up the DOM tree</source>
          <target state="translated">Он неправильно пузырится в ДОМ-дереве.</target>
        </trans-unit>
        <trans-unit id="4f47d47bc32648e947b47ca11b24795692352dd6" translate="yes" xml:space="preserve">
          <source>It doesn't fire correctly in WebKit if the image src is set to the same src as before</source>
          <target state="translated">В WebKit'е происходит некорректный запуск,если изображение src установлено на тот же src,что и раньше.</target>
        </trans-unit>
        <trans-unit id="3391b6ddc4de1a10f29fb7134fb504140d475b20" translate="yes" xml:space="preserve">
          <source>It doesn't work consistently nor reliably cross-browser</source>
          <target state="translated">Он не работает стабильно и надежно кросс-браузером.</target>
        </trans-unit>
        <trans-unit id="c608f388119fe9af74a5c3dff55d228b4b3a8d87" translate="yes" xml:space="preserve">
          <source>It is inadvisable to bind handlers to both the &lt;code&gt;click&lt;/code&gt; and &lt;code&gt;dblclick&lt;/code&gt; events for the same element. The sequence of events triggered varies from browser to browser, with some receiving two &lt;code&gt;click&lt;/code&gt; events before the &lt;code&gt;dblclick&lt;/code&gt; and others only one. Double-click sensitivity (maximum time between clicks that is detected as a double click) can vary by operating system and browser, and is often user-configurable.</source>
          <target state="translated">Не рекомендуется привязывать обработчики одновременно к событиям &lt;code&gt;click&lt;/code&gt; и &lt;code&gt;dblclick&lt;/code&gt; для одного и того же элемента. Последовательность запускаемых событий различается от браузера к браузеру: одни получают два события &lt;code&gt;click&lt;/code&gt; перед &lt;code&gt;dblclick&lt;/code&gt; , а другие - только одно. Чувствительность к двойному щелчку (максимальное время между щелчками, которое определяется как двойной щелчок) может варьироваться в зависимости от операционной системы и браузера и часто настраивается пользователем.</target>
        </trans-unit>
        <trans-unit id="6474e15e475efa7ccece7ce1fa87058feb5d9d01" translate="yes" xml:space="preserve">
          <source>It is particularly useful to attach namespaces to event bindings when we are developing plug-ins or otherwise writing code that may interact with other event-handling code in the future.</source>
          <target state="translated">Особенно полезно прикреплять пространства имен к привязкам событий,когда мы разрабатываем плагины или иным образом пишем код,который в будущем может взаимодействовать с другим кодом обработки событий.</target>
        </trans-unit>
        <trans-unit id="d7eb52688075d1e01ff5b7994d590bd6c763aea8" translate="yes" xml:space="preserve">
          <source>It is typically easier, however, to select the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; itself for serialization:</source>
          <target state="translated">Однако обычно проще выбрать саму &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; для сериализации:</target>
        </trans-unit>
        <trans-unit id="94dfab464453f6cf0a69caa2d2915b921be98d51" translate="yes" xml:space="preserve">
          <source>It will appear on a rendered page as though the tags were exposed, like this:</source>
          <target state="translated">Она будет отображаться на отрисовываемой странице,как будто теги были выставлены,вот так:</target>
        </trans-unit>
        <trans-unit id="4d4945487485ce1d7a1babb6258cde1b60e4e518" translate="yes" xml:space="preserve">
          <source>It's important to note that this method does not replace a class. It simply adds the class, appending it to any which may already be assigned to the elements.</source>
          <target state="translated">Важно отметить,что данный метод не заменяет класс.Он просто добавляет класс,добавляя его к любому,который уже может быть присвоен элементам.</target>
        </trans-unit>
        <trans-unit id="a91fb955ef878ac45d420f89c39f31c4e4cee2a2" translate="yes" xml:space="preserve">
          <source>Iterate over a jQuery object, executing a function for each matched element.</source>
          <target state="translated">Итерация по объекту jQuery,выполняющая функцию для каждого совпадающего элемента.</target>
        </trans-unit>
        <trans-unit id="921f162ac098f7a2c7cb7ebc3eeebbadb264564e" translate="yes" xml:space="preserve">
          <source>Iterate over three divs and sets their color property.</source>
          <target state="translated">Итеррирует более трех дайверов и устанавливает их цветовое свойство.</target>
        </trans-unit>
        <trans-unit id="eca10c8706e40e428e0864f290b2a61078e411a5" translate="yes" xml:space="preserve">
          <source>Iterates over items in an array, accessing both the current item and its index.</source>
          <target state="translated">Итерирует элементы массива,получая доступ как к текущему элементу,так и к его индексу.</target>
        </trans-unit>
        <trans-unit id="7d0530dd66df2d906c050d49a5a7392c77f4570d" translate="yes" xml:space="preserve">
          <source>Iterates over the properties in an object, accessing both the current item and its key.</source>
          <target state="translated">Итерирует свойства объекта,получая доступ как к текущему элементу,так и к его ключу.</target>
        </trans-unit>
        <trans-unit id="e701a349ed2833a87683e1bdcab43beeab26fc8f" translate="yes" xml:space="preserve">
          <source>Iterates through the array displaying each number as both a word and numeral</source>
          <target state="translated">Проходит через массив,отображая каждое число как слово и цифру.</target>
        </trans-unit>
        <trans-unit id="44dada4850cde6f4691206fddd5fe47cd952a7f9" translate="yes" xml:space="preserve">
          <source>Iterating over objects is easy with the for-in-loop:</source>
          <target state="translated">Переключение по объектам легко выполняется с помощью функции &quot;For-in-loop&quot;:</target>
        </trans-unit>
        <trans-unit id="18905aab409cadb5b72681a650ec99001cb221e0" translate="yes" xml:space="preserve">
          <source>Iteration</source>
          <target state="translated">Iteration</target>
        </trans-unit>
        <trans-unit id="42c6036ddd5d662bc456c530699d3704be7c5087" translate="yes" xml:space="preserve">
          <source>JSONP</source>
          <target state="translated">JSONP</target>
        </trans-unit>
        <trans-unit id="a9bdf580360f016517f1eb060f1aa02ab34db701" translate="yes" xml:space="preserve">
          <source>JavaScript provides utilities to work with numbers in the Math object:</source>
          <target state="translated">JavaScript предоставляет утилиты для работы с числами в математическом объекте:</target>
        </trans-unit>
        <trans-unit id="635671fca1d1a98011a1627023ba1e963f4e8524" translate="yes" xml:space="preserve">
          <source>JavaScript's &lt;code&gt;getElementsByTagName()&lt;/code&gt; function is called to return the appropriate elements when this expression is used.</source>
          <target state="translated">Функция JavaScript &lt;code&gt;getElementsByTagName()&lt;/code&gt; вызывается для возврата соответствующих элементов при использовании этого выражения.</target>
        </trans-unit>
        <trans-unit id="2bb3a1836093d127b0c0eff22c30e22ddb7d71ac" translate="yes" xml:space="preserve">
          <source>Just like prefilters, a transport's factory function can be attached to a specific dataType:</source>
          <target state="translated">Так же,как и префильтры,заводская функция транспорта может быть прикреплена к определенному типу данных:</target>
        </trans-unit>
        <trans-unit id="fb913d698f6e3828501868f9bc4c98551344bf53" translate="yes" xml:space="preserve">
          <source>Keep in mind that the &lt;code&gt;mousemove&lt;/code&gt; event is triggered whenever the mouse pointer moves, even for a pixel. This means that hundreds of events can be generated over a very small amount of time. If the handler has to do any significant processing, or if multiple handlers for the event exist, this can be a serious performance drain on the browser. It is important, therefore, to optimize &lt;code&gt;mousemove &lt;/code&gt;handlers as much as possible, and to unbind them as soon as they are no longer needed.</source>
          <target state="translated">Имейте в виду, что событие &lt;code&gt;mousemove&lt;/code&gt; запускается всякий раз, когда указатель мыши перемещается, даже на пиксель. Это означает, что сотни событий могут быть сгенерированы за очень небольшой промежуток времени. Если обработчик должен выполнить какую-либо значительную обработку или существует несколько обработчиков для события, это может серьезно снизить производительность браузера. Поэтому важно &lt;code&gt;mousemove &lt;/code&gt; оптимизировать обработчики перемещения мыши и отвязать их, как только они больше не нужны.</target>
        </trans-unit>
        <trans-unit id="1c47d3fdd85b435bb8ea81079df0fda78371be45" translate="yes" xml:space="preserve">
          <source>Keep in mind that the target object (first argument) will be modified, and will also be returned from &lt;code&gt;$.extend()&lt;/code&gt;. If, however, you want to preserve both of the original objects, you can do so by passing an empty object as the target:</source>
          <target state="translated">Имейте в виду, что целевой объект (первый аргумент) будет изменен и также будет возвращен из &lt;code&gt;$.extend()&lt;/code&gt; . Однако если вы хотите сохранить оба исходных объекта, вы можете сделать это, передав пустой объект в качестве цели:</target>
        </trans-unit>
        <trans-unit id="c745b7aef2c8c4024f36a766c1d63bb48c8333f7" translate="yes" xml:space="preserve">
          <source>Keeps the rest of the handlers from being executed and prevents the event from bubbling up the DOM tree.</source>
          <target state="translated">Сохраняет остальные обработчики от выполнения и предотвращает возникновение пузырьков в DOM-дереве.</target>
        </trans-unit>
        <trans-unit id="1019bb4eb4abfe127bdb4d847f34fad9cc5f5784" translate="yes" xml:space="preserve">
          <source>Kill the bubbling on the click event.</source>
          <target state="translated">Убейте пузырьки при нажатии на событие.</target>
        </trans-unit>
        <trans-unit id="8587828abc001f57a4599b210e0c568205c4f22a" translate="yes" xml:space="preserve">
          <source>Length Property</source>
          <target state="translated">Свойство длины</target>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="translated">Лицензия MIT.</target>
        </trans-unit>
        <trans-unit id="065a912948fec9c97305ff966bbe99fe394d7f04" translate="yes" xml:space="preserve">
          <source>Listen for document ready using &lt;code&gt;&lt;a href=&quot;jquery.when&quot;&gt;jQuery.when&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Прослушайте готовый документ с помощью &lt;code&gt;&lt;a href=&quot;jquery.when&quot;&gt;jQuery.when&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f88de4705d0d628501d4aa45b504406386d0d2d" translate="yes" xml:space="preserve">
          <source>Load JSON-encoded data from the server using a GET HTTP request.</source>
          <target state="translated">Загружайте данные,закодированные в JSON,с сервера,используя GET HTTP запрос.</target>
        </trans-unit>
        <trans-unit id="6e4304bae798ad78f8b8d684e7187d2580b5f923" translate="yes" xml:space="preserve">
          <source>Load a JavaScript file from the server using a GET HTTP request, then execute it.</source>
          <target state="translated">Загрузите файл JavaScript с сервера,используя GET HTTP запрос,затем выполните его.</target>
        </trans-unit>
        <trans-unit id="c209a100ae7239055105a81c81e90dc1523b5020" translate="yes" xml:space="preserve">
          <source>Load and execute a JavaScript file.</source>
          <target state="translated">Загрузите и выполните файл JavaScript.</target>
        </trans-unit>
        <trans-unit id="8e9e8e3f60b5cc729072f4a8f2e71c3d397c321b" translate="yes" xml:space="preserve">
          <source>Load another page's list items into an ordered list.</source>
          <target state="translated">Загрузите пункты списка другой страницы в упорядоченный список.</target>
        </trans-unit>
        <trans-unit id="98c3f4f16b706533651a4bc1be4b0278162648e1" translate="yes" xml:space="preserve">
          <source>Load data from the server and place the returned HTML into the matched element.</source>
          <target state="translated">Загрузите данные с сервера и поместите возвращаемый HTML в соответствующий элемент.</target>
        </trans-unit>
        <trans-unit id="5385a264a84eed3d305a1fa3002318094dab9893" translate="yes" xml:space="preserve">
          <source>Load data from the server and place the returned HTML into the matched elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="887a3a91b4637338141491da16de5c9eef0ff0ae" translate="yes" xml:space="preserve">
          <source>Load data from the server using a HTTP GET request.</source>
          <target state="translated">Загрузка данных с сервера с помощью HTTP GET запроса.</target>
        </trans-unit>
        <trans-unit id="4226e0ebd6af9acf9c6723477b638dff4a415beb" translate="yes" xml:space="preserve">
          <source>Load data from the server using a HTTP POST request.</source>
          <target state="translated">Загрузка данных с сервера с помощью HTTP POST запроса.</target>
        </trans-unit>
        <trans-unit id="9232a7a249f03f118f78ea108071dcabc877b60b" translate="yes" xml:space="preserve">
          <source>Load the &lt;a href=&quot;https://github.com/jquery/jquery-color&quot;&gt;official jQuery Color Animation plugin&lt;/a&gt; dynamically and bind some color animations to occur once the new functionality is loaded.</source>
          <target state="translated">Загрузите &lt;a href=&quot;https://github.com/jquery/jquery-color&quot;&gt;официальный плагин jQuery Color Animation&lt;/a&gt; динамически и привяжите некоторые цветные анимации, которые будут появляться после загрузки новых функций.</target>
        </trans-unit>
        <trans-unit id="614c191789c3dbe22f5fb47736faaa6d90936f1f" translate="yes" xml:space="preserve">
          <source>Load the JSON data from test.js and access a name from the returned JSON data.</source>
          <target state="translated">Загрузите данные JSON из test.js и получите доступ к имени из возвращаемых данных JSON.</target>
        </trans-unit>
        <trans-unit id="98bd0551b7828bb0a31fa946d67a5be5185f2db3" translate="yes" xml:space="preserve">
          <source>Load the JSON data from test.js, passing along additional data, and access a name from the returned JSON data. If an error occurs, log an error message instead.</source>
          <target state="translated">Загрузите данные JSON из test.js,передав дополнительные данные,и получите доступ к имени из возвращаемых данных JSON.При возникновении ошибки зарегистрируйте вместо нее сообщение об ошибке.</target>
        </trans-unit>
        <trans-unit id="948313a4df2223d5c2c9afa1f8d232566d0171e0" translate="yes" xml:space="preserve">
          <source>Load the feeds.html file into the div with the ID of feeds.</source>
          <target state="translated">Загрузите файл feeds.html в div с идентификатором каналов.</target>
        </trans-unit>
        <trans-unit id="20857a3fdf9e0d3d774f1d8757e9671a368e89fb" translate="yes" xml:space="preserve">
          <source>Load two versions of jQuery (not recommended). Then, restore jQuery's globally scoped variables to the first loaded jQuery.</source>
          <target state="translated">Загрузить две версии jQuery (не рекомендуется).Затем восстановите глобальные переменные jQuery до первой загруженной jQuery.</target>
        </trans-unit>
        <trans-unit id="93e9bcc820f0a39dff22d5e0383ca382eb657f72" translate="yes" xml:space="preserve">
          <source>Loading Page Fragments</source>
          <target state="translated">Загрузка фрагментов страницы</target>
        </trans-unit>
        <trans-unit id="e7f70cc7edf5619431eb502baa5e5f1a76973cf9" translate="yes" xml:space="preserve">
          <source>Loads the four most recent pictures of Mount Rainier from the Flickr JSONP API.</source>
          <target state="translated">Загружает четыре последних снимка горы Rainier из JSONP API Flickr.</target>
        </trans-unit>
        <trans-unit id="e6ea6675ec661b201786df7d4aeddafc618ef246" translate="yes" xml:space="preserve">
          <source>Local Events</source>
          <target state="translated">Местные события</target>
        </trans-unit>
        <trans-unit id="5ec59be3774eb930b04091240bba0aa4788d0783" translate="yes" xml:space="preserve">
          <source>Locate all the divs after the first and give them a class.</source>
          <target state="translated">Найдите всех дайверов после первого и дайте им урок.</target>
        </trans-unit>
        <trans-unit id="9164c206aa9f768a072d8795d5e85b5802a0215e" translate="yes" xml:space="preserve">
          <source>Locate all the divs preceding the last div and give them a class.</source>
          <target state="translated">Найдите все дайвы,предшествующие последнему погружению,и дайте им класс.</target>
        </trans-unit>
        <trans-unit id="c823c8f7ebcb5abac0a0f25aec4eae4c7d947a09" translate="yes" xml:space="preserve">
          <source>Locate all the paragraphs after the second child in the body and give them a class.</source>
          <target state="translated">Найдите все абзацы после второго ребенка в теле и дайте им урок.</target>
        </trans-unit>
        <trans-unit id="794206b18edba56f2abc883f735621e1800c735f" translate="yes" xml:space="preserve">
          <source>Lock a callback list in its current state.</source>
          <target state="translated">Заприте список обратных вызовов в его текущем состоянии.</target>
        </trans-unit>
        <trans-unit id="e05951f10b1bdd64c056239375d2071333d6becb" translate="yes" xml:space="preserve">
          <source>Log which key was depressed.</source>
          <target state="translated">Журнал,ключ которого был нажат.</target>
        </trans-unit>
        <trans-unit id="9f32f56dbf1cb1758554800df22561139c939267" translate="yes" xml:space="preserve">
          <source>Log which mouse button was depressed.</source>
          <target state="translated">Журнал,какая кнопка мыши была нажата.</target>
        </trans-unit>
        <trans-unit id="c2062281afbfa779b453ff9d469906ab59340ee4" translate="yes" xml:space="preserve">
          <source>Looks for the paragraph that contains 'selected' as a class.</source>
          <target state="translated">Ищет абзац,содержащий в качестве класса слово &quot;selected&quot;.</target>
        </trans-unit>
        <trans-unit id="40bb78ac4a8f75b73057a2a259dcfa335c88dad4" translate="yes" xml:space="preserve">
          <source>META</source>
          <target state="translated">META</target>
        </trans-unit>
        <trans-unit id="de15cd74e2d1a536fde94c26d3d53faed8ec044d" translate="yes" xml:space="preserve">
          <source>Make all visible divs turn yellow on click.</source>
          <target state="translated">Сделайте так,чтобы все видимые ныряльщики стали желтыми при нажатии на кнопку.</target>
        </trans-unit>
        <trans-unit id="02c62a0130255054719e58a94558825165817b75" translate="yes" xml:space="preserve">
          <source>Manipulation</source>
          <target state="translated">Manipulation</target>
        </trans-unit>
        <trans-unit id="cc2d21bb5da530f2472060bc7edae3adb18c1cb5" translate="yes" xml:space="preserve">
          <source>Many JavaScript libraries use &lt;code&gt;$&lt;/code&gt; as a function or variable name, just as jQuery does. In jQuery's case, &lt;code&gt;$&lt;/code&gt; is just an alias for &lt;code&gt;jQuery&lt;/code&gt;, so all functionality is available without using &lt;code&gt;$&lt;/code&gt;. If you need to use another JavaScript library alongside jQuery, return control of &lt;code&gt;$&lt;/code&gt; back to the other library with a call to &lt;code&gt;$.noConflict()&lt;/code&gt;. Old references of &lt;code&gt;$&lt;/code&gt; are saved during jQuery initialization; &lt;code&gt;noConflict()&lt;/code&gt; simply restores them.</source>
          <target state="translated">Многие библиотеки JavaScript используют &lt;code&gt;$&lt;/code&gt; как имя функции или переменной, как и jQuery. В случае jQuery &lt;code&gt;$&lt;/code&gt; - это просто псевдоним для &lt;code&gt;jQuery&lt;/code&gt; , поэтому все функции доступны без использования &lt;code&gt;$&lt;/code&gt; . Если вам нужно использовать другую библиотеку JavaScript вместе с jQuery, верните управление &lt;code&gt;$&lt;/code&gt; back другой библиотеке с помощью вызова &lt;code&gt;$.noConflict()&lt;/code&gt; . Старые ссылки на &lt;code&gt;$&lt;/code&gt; сохраняются во время инициализации jQuery; &lt;code&gt;noConflict()&lt;/code&gt; просто восстанавливает их.</target>
        </trans-unit>
        <trans-unit id="b7f9d793a2819cd670619175574f6c0262c4984d" translate="yes" xml:space="preserve">
          <source>Many methods, both in jQuery and in JavaScript in general, return objects that are array-like. For example, the jQuery factory function &lt;code&gt;$()&lt;/code&gt; returns a jQuery object that has many of the properties of an array (a length, the &lt;code&gt;[]&lt;/code&gt; array access operator, etc.), but is not exactly the same as an array and lacks some of an array's built-in methods (such as &lt;code&gt;.pop()&lt;/code&gt; and &lt;code&gt;.reverse()&lt;/code&gt;).</source>
          <target state="translated">Многие методы как в jQuery, так и в JavaScript в целом возвращают объекты, похожие на массивы. Например, фабричная функция jQuery &lt;code&gt;$()&lt;/code&gt; возвращает объект jQuery, который имеет многие свойства массива (длина, оператор доступа к массиву &lt;code&gt;[]&lt;/code&gt; и т. Д.), Но не совсем то же самое, что массив, и не имеет некоторых встроенных методов массива (таких как &lt;code&gt;.pop()&lt;/code&gt; и &lt;code&gt;.reverse()&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="64d4b8cbd764ba4169b9d144d4602f0c599a9447" translate="yes" xml:space="preserve">
          <source>Map an object's keys to an array.</source>
          <target state="translated">Свяжите ключи объекта с массивом.</target>
        </trans-unit>
        <trans-unit id="7c9c16dda54a0507462878069d153f43445ec9b4" translate="yes" xml:space="preserve">
          <source>Map the original array to a new one and add 4 to each value.</source>
          <target state="translated">Сопоставьте исходный массив с новым и добавьте 4 к каждому значению.</target>
        </trans-unit>
        <trans-unit id="7c7ef4d24dba396a0b98b3681ba4188e8f671dea" translate="yes" xml:space="preserve">
          <source>Map the original array to a new one, adding 1 to each value if it is bigger then zero and removing it if not.</source>
          <target state="translated">Сопоставьте исходный массив с новым,добавив по 1 к каждому значению,если оно больше нуля,и удалив его,если нет.</target>
        </trans-unit>
        <trans-unit id="983aa42f1ad4b37c28c18140f02403eba8bde2e9" translate="yes" xml:space="preserve">
          <source>Map the original array to a new one, removing numbers less than 50 by returning &lt;code&gt;null&lt;/code&gt; and subtracting 45 from the rest.</source>
          <target state="translated">Сопоставьте исходный массив с новым, удалив числа меньше 50, вернув &lt;code&gt;null&lt;/code&gt; и вычтя 45 из остальных.</target>
        </trans-unit>
        <trans-unit id="0ce5b3b3c8865609956f2304c19f17f204d14b64" translate="yes" xml:space="preserve">
          <source>Map the original array to a new one; each element is added with its original value and the value plus one.</source>
          <target state="translated">Сопоставляет исходный массив с новым;каждый элемент добавляется со своим исходным значением и значением плюс один.</target>
        </trans-unit>
        <trans-unit id="cf80eec3d3943dafd07f7556af073e6dbdda420e" translate="yes" xml:space="preserve">
          <source>Map the original array to a new one; each element is squared.</source>
          <target state="translated">Сопоставляем исходный массив с новым,каждый элемент имеет квадрат.</target>
        </trans-unit>
        <trans-unit id="07d80f9f1cd68153a579561618539ca321f0def9" translate="yes" xml:space="preserve">
          <source>Map the original object that was referenced by $ back to $.</source>
          <target state="translated">Нанесите на карту исходный объект,на который была сделана ссылка в $ обратно к $.</target>
        </trans-unit>
        <trans-unit id="6a1e2cce8755f554e0026014775801a429566acc" translate="yes" xml:space="preserve">
          <source>Map the original object to a new array and double each value.</source>
          <target state="translated">Привязать исходный объект к новому массиву и удвоить каждое значение.</target>
        </trans-unit>
        <trans-unit id="ad27fd538ed9960564bd87e3281bec2594b6bf55" translate="yes" xml:space="preserve">
          <source>Mark all inputs that are descendants of a form with a dotted blue border. Give a yellow background to inputs that are descendants of a fieldset that is a descendant of a form.</source>
          <target state="translated">Отметьте все входы,которые являются потомками формы,пунктирной синей рамкой.Дайте желтый фон входам,которые являются потомками полевого множества,которое является потомком формы.</target>
        </trans-unit>
        <trans-unit id="fa99901f718f4092f329d411976d96dccc8c55e3" translate="yes" xml:space="preserve">
          <source>Matches all elements that are checked or selected.</source>
          <target state="translated">Совпадает со всеми отмеченными или выбранными элементами.</target>
        </trans-unit>
        <trans-unit id="5645a5a0d1e17f22e3e955f9391670847c1d513b" translate="yes" xml:space="preserve">
          <source>Matches elements that match all of the specified attribute filters.</source>
          <target state="translated">Совпадает с элементами,которые соответствуют всем указанным атрибутным фильтрам.</target>
        </trans-unit>
        <trans-unit id="3edf0df49942da6d11a1a217e4d3af4a5a8e64f2" translate="yes" xml:space="preserve">
          <source>Math</source>
          <target state="translated">Math</target>
        </trans-unit>
        <trans-unit id="15b7b6ee67dde72c7dcf25d1398c900548de9a0e" translate="yes" xml:space="preserve">
          <source>Merge defaults and options, without modifying the defaults. This is a common plugin development pattern.</source>
          <target state="translated">Объедините значения по умолчанию и опции,не изменяя значения по умолчанию.Это обычный шаблон разработки плагина.</target>
        </trans-unit>
        <trans-unit id="794f99831fcf6e759a59983d1701aa124b24570b" translate="yes" xml:space="preserve">
          <source>Merge the contents of an object onto the jQuery prototype to provide new jQuery instance methods.</source>
          <target state="translated">Соедините содержимое объекта с прототипом jQuery,чтобы обеспечить новые методы экземпляра jQuery.</target>
        </trans-unit>
        <trans-unit id="696574d08ab2f8951c7f6c1818c695a21ee3b3c4" translate="yes" xml:space="preserve">
          <source>Merge the contents of two arrays together into the first array.</source>
          <target state="translated">Объединить содержимое двух массивов вместе в первый массив.</target>
        </trans-unit>
        <trans-unit id="e2e34ae7653eb5b639210a4826bb8e1149b6f150" translate="yes" xml:space="preserve">
          <source>Merge the contents of two or more objects together into the first object.</source>
          <target state="translated">Соедините содержимое двух или более объектов вместе в первый объект.</target>
        </trans-unit>
        <trans-unit id="6bf1bfd74d29250e202155177c2731cd2da4a70e" translate="yes" xml:space="preserve">
          <source>Merge two objects recursively, modifying the first.</source>
          <target state="translated">Соедините два объекта рекурсивно,изменяя первый.</target>
        </trans-unit>
        <trans-unit id="9ed9af223766293600f1c43c5def3762c26d6dc1" translate="yes" xml:space="preserve">
          <source>Merge two objects, modifying the first.</source>
          <target state="translated">Соедините два объекта,изменяя первый.</target>
        </trans-unit>
        <trans-unit id="c0ced1350d67f465e08ebdb8d1d6e12dbd2c5c7d" translate="yes" xml:space="preserve">
          <source>Merges two arrays, altering the first argument.</source>
          <target state="translated">Объединяет два массива,изменяя первый аргумент.</target>
        </trans-unit>
        <trans-unit id="cc81d687e38855024bcec5948581fca65456b7f3" translate="yes" xml:space="preserve">
          <source>Merges two arrays, but uses a copy, so the original isn't altered.</source>
          <target state="translated">Объединяет два массива,но использует копию,так что оригинал не изменяется.</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="224e9be2b821071df4034017dcd93f7099643b03" translate="yes" xml:space="preserve">
          <source>Modify and filter HTML strings passed through jQuery manipulation methods.</source>
          <target state="translated">Модифицируйте и фильтруйте HTML-строки,передаваемые через методы манипуляции jQuery.</target>
        </trans-unit>
        <trans-unit id="150a33ecfab90349095e18e50c66f357eaa0f12a" translate="yes" xml:space="preserve">
          <source>More than one class may be added at a time, separated by a space, to the set of matched elements, like so:</source>
          <target state="translated">Несколько классов могут быть добавлены одновременно,разделенные пробелом,к набору совпадающих элементов,подобно этому:</target>
        </trans-unit>
        <trans-unit id="5636ada1778a99a686bd55ff016d8fd5ffa7a724" translate="yes" xml:space="preserve">
          <source>More than one class may be removed at a time, separated by a space, from the set of matched elements, like so:</source>
          <target state="translated">Несколько классов могут быть удалены одновременно,разделенные пробелом,из набора совпадающих элементов:</target>
        </trans-unit>
        <trans-unit id="bac9e0ffb6344e9ecad6cb463c7fe355f588504f" translate="yes" xml:space="preserve">
          <source>Most browsers &lt;a href=&quot;https://caniuse.com/#search=DOMContentLoaded&quot;&gt;provide similar functionality&lt;/a&gt; in the form of a &lt;code&gt;DOMContentLoaded&lt;/code&gt; event. However, jQuery's &lt;code&gt;.ready()&lt;/code&gt; method differs in an important and useful way: If the DOM becomes ready and the browser fires &lt;code&gt;DOMContentLoaded&lt;/code&gt; before the code calls &lt;code&gt;.ready( handler )&lt;/code&gt;, the function &lt;code&gt;handler&lt;/code&gt; will still be executed. In contrast, a &lt;code&gt;DOMContentLoaded&lt;/code&gt; event listener added after the event fires is never executed.</source>
          <target state="translated">Большинство браузеров &lt;a href=&quot;https://caniuse.com/#search=DOMContentLoaded&quot;&gt;предоставляют аналогичные функции&lt;/a&gt; в виде события &lt;code&gt;DOMContentLoaded&lt;/code&gt; . Однако метод jQuery &lt;code&gt;.ready()&lt;/code&gt; отличается важным и полезным образом: если DOM становится готовым и браузер запускает &lt;code&gt;DOMContentLoaded&lt;/code&gt; до того, как код вызывает &lt;code&gt;.ready( handler )&lt;/code&gt; , &lt;code&gt;handler&lt;/code&gt; функции все равно будет выполняться. Напротив, &lt;code&gt;DOMContentLoaded&lt;/code&gt; событий DOMContentLoaded, добавленный после возникновения события, никогда не выполняется.</target>
        </trans-unit>
        <trans-unit id="cce073c6d48f20212a41fc8c32cfeaa3f1f4066d" translate="yes" xml:space="preserve">
          <source>Most callbacks provide arguments and a context. In the event-handler example, the callback is called with one argument, an Event. The context is set to the handling element, in the above example, document.body.</source>
          <target state="translated">Большинство обратных вызовов содержат аргументы и контекст.В примере с обработчиком событий,обратный вызов вызывается с одним аргументом,Event.Контекст устанавливается в элемент обработки,в приведенном выше примере document.body.</target>
        </trans-unit>
        <trans-unit id="7bb8f1e100ece700dc634bb35b1ed83b69348b6e" translate="yes" xml:space="preserve">
          <source>Most frequently, you will use the jQuery() function to create a jQuery object. &lt;code&gt;jQuery()&lt;/code&gt; can also be accessed by its familiar single-character alias of &lt;code&gt;$()&lt;/code&gt;, unless you have called &lt;code&gt;jQuery.noConflict()&lt;/code&gt; to disable this option. Many jQuery methods return the jQuery object itself, so that method calls can be chained:</source>
          <target state="translated">Чаще всего вы будете использовать функцию jQuery () для создания объекта jQuery. Доступ к &lt;code&gt;jQuery()&lt;/code&gt; также можно получить с помощью знакомого ему односимвольного псевдонима &lt;code&gt;$()&lt;/code&gt; , если только вы не вызвали &lt;code&gt;jQuery.noConflict()&lt;/code&gt; для отключения этой опции. Многие методы jQuery возвращают сам объект jQuery, поэтому вызовы методов могут быть связаны:</target>
        </trans-unit>
        <trans-unit id="64aaea0cbc6a602a95dfe9d3819d2bf0bc6d5e98" translate="yes" xml:space="preserve">
          <source>Most implementations will specify a success handler:</source>
          <target state="translated">В большинстве реализаций будет указываться обработчик успеха:</target>
        </trans-unit>
        <trans-unit id="d5621f5663a042e64efd252844343e23251aea06" translate="yes" xml:space="preserve">
          <source>Most jQuery APIs that accept HTML strings will run scripts that are included in the HTML. &lt;code&gt;jQuery.parseHTML&lt;/code&gt; does not run scripts in the parsed HTML unless &lt;code&gt;keepScripts&lt;/code&gt; is explicitly &lt;code&gt;true&lt;/code&gt;. However, it is still possible in most environments to execute scripts indirectly, for example via the &lt;code&gt;&amp;lt;img onerror&amp;gt;&lt;/code&gt; attribute. The caller should be aware of this and guard against it by cleaning or escaping any untrusted inputs from sources such as the URL or cookies. For future compatibility, callers should not depend on the ability to run &lt;em&gt;any&lt;/em&gt; script content when &lt;code&gt;keepScripts&lt;/code&gt; is unspecified or &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Большинство API-интерфейсов jQuery, которые принимают строки HTML, будут запускать сценарии, включенные в HTML. &lt;code&gt;jQuery.parseHTML&lt;/code&gt; не запускает скрипты в проанализированном HTML, если &lt;code&gt;keepScripts&lt;/code&gt; явно не &lt;code&gt;true&lt;/code&gt; . Однако в большинстве сред по-прежнему можно выполнять сценарии косвенно, например, через атрибут &lt;code&gt;&amp;lt;img onerror&amp;gt;&lt;/code&gt; . Вызывающий должен знать об этом и защищаться от этого, очищая или избегая любых ненадежных входных данных из таких источников, как URL-адрес или файлы cookie. Для будущей совместимости вызывающие абоненты не должны зависеть от возможности запуска &lt;em&gt;любого&lt;/em&gt; содержимого сценария, если &lt;code&gt;keepScripts&lt;/code&gt; не указан или имеет значение &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67593bdb5148add9434b2a97afa37b386577eae8" translate="yes" xml:space="preserve">
          <source>Most of jQuery's &lt;a href=&quot;category/traversing&quot;&gt;DOM traversal&lt;/a&gt; methods operate on a jQuery object instance and produce a new one, matching a different set of DOM elements. When this happens, it is as if the new set of elements is pushed onto a stack that is maintained inside the object. Each successive filtering method pushes a new element set onto the stack. If we need an older element set, we can use &lt;code&gt;end()&lt;/code&gt; to pop the sets back off of the stack.</source>
          <target state="translated">Большинство методов &lt;a href=&quot;category/traversing&quot;&gt;обхода DOM&lt;/a&gt; в jQuery работают с экземпляром объекта jQuery и создают новый, соответствующий другому набору элементов DOM. Когда это происходит, создается впечатление, что новый набор элементов помещается в стек, который хранится внутри объекта. Каждый последующий метод фильтрации помещает новый набор элементов в стек. Если нам нужен более старый набор элементов, мы можем использовать &lt;code&gt;end()&lt;/code&gt; для удаления наборов из стека.</target>
        </trans-unit>
        <trans-unit id="cd847d892e51c9af96a07d5f1327caaaa74f5961" translate="yes" xml:space="preserve">
          <source>Mozilla Developer Network</source>
          <target state="translated">Mozilla Developer Network</target>
        </trans-unit>
        <trans-unit id="ae9dfc4b34face1f6a49d5f00bddfa3364657649" translate="yes" xml:space="preserve">
          <source>Mozilla/Firefox/Flock/Camino: 1.7.12, 1.8.1.3, 1.9</source>
          <target state="translated">Mozilla/Firefox/Flock/Camino:1.7.12,1.8.1.3,1.9</target>
        </trans-unit>
        <trans-unit id="1c434465da3c26010d5e461e0d6f60c4615a5db6" translate="yes" xml:space="preserve">
          <source>Multiple Attribute Selector [name=&amp;rdquo;value&amp;rdquo;][name2=&amp;rdquo;value2&amp;Prime;]</source>
          <target state="translated">Селектор нескольких атрибутов [имя = &amp;rdquo;значение&amp;rdquo;] [имя2 = &amp;rdquo;значение2 &amp;Prime;]</target>
        </trans-unit>
        <trans-unit id="9da99f299e3acc9dcdbd4d0b069d38991a7922c7" translate="yes" xml:space="preserve">
          <source>Multiple Events</source>
          <target state="translated">Многочисленные события</target>
        </trans-unit>
        <trans-unit id="68b26aa31744cde4bfaa535be002a810bbaa618f" translate="yes" xml:space="preserve">
          <source>Multiple Selector (&amp;ldquo;selector1, selector2, selectorN&amp;rdquo;)</source>
          <target state="translated">Множественный селектор (&amp;laquo;селектор1, селектор2, селекторN&amp;raquo;)</target>
        </trans-unit>
        <trans-unit id="cbddd87a417599ca4f968d3bcb1256c0e4074131" translate="yes" xml:space="preserve">
          <source>Multiple attribute selector [name=&amp;quot;value&amp;quot;][name2=&amp;quot;value2″]</source>
          <target state="translated">Селектор нескольких атрибутов [name = &quot;value&quot;] [name2 = &quot;value2 &amp;Prime;]</target>
        </trans-unit>
        <trans-unit id="22241cce1dcb835a3235317f247ee1693f9542e0" translate="yes" xml:space="preserve">
          <source>Multiple event types can be bound at once by including each one separated by a space:</source>
          <target state="translated">Можно связать несколько типов событий одновременно,включив каждый из них,разделенный пробелом:</target>
        </trans-unit>
        <trans-unit id="4e9c7adb9652196b41e5a89d6cd8836acc345f96" translate="yes" xml:space="preserve">
          <source>Multiple selector (&amp;quot;selector1, selector2, selectorN&amp;quot;)</source>
          <target state="translated">Множественный селектор (&amp;laquo;селектор1, селектор2, селекторN&amp;raquo;)</target>
        </trans-unit>
        <trans-unit id="3e8a3766064a46e113c1cc56095e9a77ecd498fb" translate="yes" xml:space="preserve">
          <source>NaN and Infinity</source>
          <target state="translated">НаНА и Бесконечность</target>
        </trans-unit>
        <trans-unit id="f21a0a1e72a56f83a26a6afce908b42e8c1296be" translate="yes" xml:space="preserve">
          <source>Name of the data stored.</source>
          <target state="translated">Имя хранимых данных.</target>
        </trans-unit>
        <trans-unit id="1e9b40df72f8a301ec4f0b9563479f5a6f494e87" translate="yes" xml:space="preserve">
          <source>Negative Indices</source>
          <target state="translated">Отрицательные показатели</target>
        </trans-unit>
        <trans-unit id="7feb8fb7b7d2d9674292d0a0464e419318768d24" translate="yes" xml:space="preserve">
          <source>Nevertheless, the most important concept to remember about the &lt;code&gt;checked&lt;/code&gt; attribute is that it does not correspond to the &lt;code&gt;checked&lt;/code&gt; property. The attribute actually corresponds to the &lt;code&gt;defaultChecked&lt;/code&gt; property and should be used only to set the &lt;em&gt;initial&lt;/em&gt; value of the checkbox. The &lt;code&gt;checked&lt;/code&gt; attribute value does not change with the state of the checkbox, while the &lt;code&gt;checked&lt;/code&gt; property does. Therefore, the cross-browser-compatible way to determine if a checkbox is checked is to use the property:</source>
          <target state="translated">Тем не менее, самое важное, что нужно помнить об атрибуте &lt;code&gt;checked&lt;/code&gt; , - это то, что он не соответствует свойству &lt;code&gt;checked&lt;/code&gt; . Атрибут фактически соответствует &lt;code&gt;defaultChecked&lt;/code&gt; и должен использоваться только для установки &lt;em&gt;начального&lt;/em&gt; значения флажка. Значение атрибута &lt;code&gt;checked&lt;/code&gt; не изменяется с состоянием флажка, в то время как свойство &lt;code&gt;checked&lt;/code&gt; не изменяется . Следовательно, кроссбраузерным способом определить, установлен ли флажок, является использование свойства:</target>
        </trans-unit>
        <trans-unit id="ff487c8eb1153eb19c50d7e6654a840c0be4cdf1" translate="yes" xml:space="preserve">
          <source>Next Adjacent Selector (&amp;ldquo;prev + next&amp;rdquo;)</source>
          <target state="translated">Следующий соседний селектор (&amp;laquo;предыдущая + следующая&amp;raquo;)</target>
        </trans-unit>
        <trans-unit id="6338b2a00a5fc5ce4bd4de1db92f04a5d24308ce" translate="yes" xml:space="preserve">
          <source>Next Siblings Selector (&amp;ldquo;prev ~ siblings&amp;rdquo;)</source>
          <target state="translated">Селектор следующих братьев и сестер (&amp;laquo;предыдущие братья и сестры&amp;raquo;)</target>
        </trans-unit>
        <trans-unit id="5d1a8aee188d81523f2325ebc8e2262d69804f87" translate="yes" xml:space="preserve">
          <source>Next adjacent selector (&amp;quot;prev + next&amp;quot;)</source>
          <target state="translated">Следующий соседний селектор (&amp;laquo;предыдущая + следующая&amp;raquo;)</target>
        </trans-unit>
        <trans-unit id="95b00774ebdd0b3bf7f870b0f6b703f645d9c875" translate="yes" xml:space="preserve">
          <source>Next siblings selector (&amp;quot;prev ~ siblings&amp;quot;)</source>
          <target state="translated">Селектор следующих братьев и сестер (&quot;предыдущие братья и сестры&quot;)</target>
        </trans-unit>
        <trans-unit id="a1db811f820077af1bdc6365df19469e39a95026" translate="yes" xml:space="preserve">
          <source>No &lt;code&gt;onreadystatechange&lt;/code&gt; mechanism is provided, however, since &lt;code&gt;done&lt;/code&gt;, &lt;code&gt;fail&lt;/code&gt;, &lt;code&gt;always&lt;/code&gt;, and &lt;code&gt;statusCode&lt;/code&gt; cover all conceivable requirements.</source>
          <target state="translated">Нет &lt;code&gt;onreadystatechange&lt;/code&gt; механизм не предусмотрен, однако, так как &lt;code&gt;done&lt;/code&gt; , &lt;code&gt;fail&lt;/code&gt; , &lt;code&gt;always&lt;/code&gt; и &lt;code&gt;statusCode&lt;/code&gt; охватывает все мыслимые требования.</target>
        </trans-unit>
        <trans-unit id="22e004ed1de5e76b460220595256a3c3752ce85d" translate="yes" xml:space="preserve">
          <source>Normally, any event handlers bound to the original element are &lt;em&gt;not&lt;/em&gt; copied to the clone. The optional &lt;code&gt;withDataAndEvents&lt;/code&gt; parameter allows us to change this behavior, and to instead make copies of all of the event handlers as well, bound to the new copy of the element. As of jQuery 1.4, all element data (attached by the &lt;code&gt;.data()&lt;/code&gt; method) is also copied to the new copy.</source>
          <target state="translated">Обычно обработчики событий, связанные с исходным элементом, &lt;em&gt;не&lt;/em&gt; копируются в клон. Необязательный параметр &lt;code&gt;withDataAndEvents&lt;/code&gt; позволяет нам изменить это поведение и вместо этого также делать копии всех обработчиков событий, привязанных к новой копии элемента. Начиная с jQuery 1.4, все данные элемента (прикрепленные методом &lt;code&gt;.data()&lt;/code&gt; ) также копируются в новую копию.</target>
        </trans-unit>
        <trans-unit id="f750da7fadcdc6467670391c98f7b23cd9c8407d" translate="yes" xml:space="preserve">
          <source>Normally, only the creator of a Deferred should call this method; you can prevent other code from changing the Deferred's state by returning a restricted Promise object through &lt;a href=&quot;deferred.promise&quot;&gt;&lt;code&gt;deferred.promise()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Обычно этот метод должен вызывать только создатель Deferred; вы можете предотвратить изменение состояния Deferred другим кодом, вернув ограниченный объект Promise через &lt;a href=&quot;deferred.promise&quot;&gt; &lt;code&gt;deferred.promise()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1327ce96c9257786d8fa92d26b375a272577b67e" translate="yes" xml:space="preserve">
          <source>Normally, only the creator of a Deferred should call this method; you can prevent other code from changing the Deferred's state or reporting status by returning a restricted Promise object through deferred.promise().</source>
          <target state="translated">Обычно только создатель метода Deferred должен вызывать этот метод;вы можете предотвратить изменение состояния Отсрочка другим кодом или сообщить о нем,вернув ограниченный объект Promise через функцию отложенного.promise().</target>
        </trans-unit>
        <trans-unit id="6d12829610558c4919016759396835e76f92154e" translate="yes" xml:space="preserve">
          <source>Not in the face!</source>
          <target state="translated">Только не в лицо!</target>
        </trans-unit>
        <trans-unit id="4a809b78403a7277786e27dfe78002911aef5301" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;.height()&lt;/code&gt; will always return the content height, regardless of the value of the CSS &lt;code&gt;box-sizing&lt;/code&gt; property. As of jQuery 1.8, this may require retrieving the CSS height plus &lt;code&gt;box-sizing&lt;/code&gt; property and then subtracting any potential border and padding on each element when the element has &lt;code&gt;box-sizing: border-box&lt;/code&gt;. To avoid this penalty, use &lt;code&gt;.css( &quot;height&quot; )&lt;/code&gt; rather than &lt;code&gt;.height()&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;.height()&lt;/code&gt; всегда будет возвращать высоту содержимого, независимо от значения свойства CSS &lt;code&gt;box-sizing&lt;/code&gt; . Начиная с jQuery 1.8, для этого может потребоваться получить свойство CSS height plus &lt;code&gt;box-sizing&lt;/code&gt; , а затем вычесть любую потенциальную границу и отступы для каждого элемента, если элемент имеет &lt;code&gt;box-sizing: border-box&lt;/code&gt; . Чтобы избежать этого штрафа, используйте &lt;code&gt;.css( &quot;height&quot; )&lt;/code&gt; вместо &lt;code&gt;.height()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d521cb2eb4d847aafab1f33616606222d8fc88c" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;.height(value)&lt;/code&gt; sets the content height of the box regardless of the value of the CSS &lt;code&gt;box-sizing&lt;/code&gt; property.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;.height(value)&lt;/code&gt; устанавливает высоту содержимого поля независимо от значения свойства CSS &lt;code&gt;box-sizing&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8db3c634b91a6fa6c43ef2cdaf323cb0f3df79e" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;.hide()&lt;/code&gt; is fired immediately and will override the animation queue if no duration or a duration of 0 is specified.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;.hide()&lt;/code&gt; запускается немедленно и переопределит очередь анимации, если не указана длительность или длительность 0.</target>
        </trans-unit>
        <trans-unit id="9711528a8180118ddb0068d72b5ca8ade210f007" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;.removeData()&lt;/code&gt; will only remove data from jQuery's internal &lt;code&gt;.data()&lt;/code&gt; cache, and any corresponding &lt;code&gt;data-&lt;/code&gt; attributes on the element will not be removed. A later call to &lt;code&gt;data()&lt;/code&gt; will therefore re-retrieve the value from the &lt;code&gt;data-&lt;/code&gt; attribute. To prevent this, use &lt;code&gt;.removeAttr()&lt;/code&gt; alongside &lt;code&gt;.removeData()&lt;/code&gt; to remove the &lt;code&gt;data-&lt;/code&gt; attribute as well. Prior to jQuery 1.4.3, as &lt;code&gt;data()&lt;/code&gt; did not use &lt;code&gt;data-&lt;/code&gt; attributes, this was not an issue.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;.removeData()&lt;/code&gt; удалит данные только из внутреннего кеша &lt;code&gt;.data()&lt;/code&gt; jQuery , и любые соответствующие атрибуты &lt;code&gt;data-&lt;/code&gt; элемента не будут удалены. Поэтому более поздний вызов &lt;code&gt;data()&lt;/code&gt; повторно извлечет значение из атрибута &lt;code&gt;data-&lt;/code&gt; . Чтобы избежать этого, используйте &lt;code&gt;.removeAttr()&lt;/code&gt; наряду с &lt;code&gt;.removeData()&lt;/code&gt; , чтобы удалить &lt;code&gt;data-&lt;/code&gt; атрибут , а также. До jQuery 1.4.3, поскольку &lt;code&gt;data()&lt;/code&gt; не использовал атрибуты &lt;code&gt;data-&lt;/code&gt; , это не было проблемой.</target>
        </trans-unit>
        <trans-unit id="1ce4423aa16e7afc372ee81caa66561e4d4026df" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;.width(&quot;value&quot;)&lt;/code&gt; sets the content width of the box regardless of the value of the CSS &lt;code&gt;box-sizing&lt;/code&gt; property.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;.width(&quot;value&quot;)&lt;/code&gt; устанавливает ширину содержимого поля независимо от значения свойства CSS &lt;code&gt;box-sizing&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="acd89c9516269297ec24b5b799dcc1b46b2ce023" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;.width()&lt;/code&gt; will always return the content width, regardless of the value of the CSS &lt;code&gt;box-sizing&lt;/code&gt; property. As of jQuery 1.8, this may require retrieving the CSS width plus &lt;code&gt;box-sizing&lt;/code&gt; property and then subtracting any potential border and padding on each element when the element has &lt;code&gt;box-sizing: border-box&lt;/code&gt;. To avoid this penalty, use &lt;code&gt;.css( &quot;width&quot; )&lt;/code&gt; rather than &lt;code&gt;.width()&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;.width()&lt;/code&gt; всегда будет возвращать ширину содержимого, независимо от значения свойства CSS &lt;code&gt;box-sizing&lt;/code&gt; . Начиная с jQuery 1.8, для этого может потребоваться получить свойство CSS width плюс &lt;code&gt;box-sizing&lt;/code&gt; , а затем вычесть любую потенциальную границу и отступы для каждого элемента, когда у элемента есть &lt;code&gt;box-sizing: border-box&lt;/code&gt; . Чтобы избежать этого штрафа, используйте &lt;code&gt;.css( &quot;width&quot; )&lt;/code&gt; вместо &lt;code&gt;.width()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c354c16ce1b6a860ffeca84649ad14496a8beae0" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:last&lt;/code&gt; selects a single element by filtering the current jQuery collection and matching the last element within it.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;:last&lt;/code&gt; выбирает один элемент, фильтруя текущую коллекцию jQuery и сопоставляя последний элемент в ней.</target>
        </trans-unit>
        <trans-unit id="1d4a8fe70fd6ea9a33f034c902c117c9de9efc19" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;keydown&lt;/code&gt; and &lt;code&gt;keyup&lt;/code&gt; provide a code indicating which key is pressed, while &lt;code&gt;keypress&lt;/code&gt; indicates which character was entered. For example, a lowercase &quot;a&quot; will be reported as 65 by &lt;code&gt;keydown&lt;/code&gt; and &lt;code&gt;keyup&lt;/code&gt;, but as 97 by &lt;code&gt;keypress&lt;/code&gt;. An uppercase &quot;A&quot; is reported as 65 by all events. Because of this distinction, when catching special keystrokes such as arrow keys, &lt;code&gt;.keydown()&lt;/code&gt; or &lt;code&gt;.keyup()&lt;/code&gt; is a better choice.</source>
          <target state="translated">Обратите внимание , что &lt;code&gt;keydown&lt;/code&gt; и &lt;code&gt;keyup&lt;/code&gt; обеспечивают код , указывающий , какая клавиша нажата, в то время как &lt;code&gt;keypress&lt;/code&gt; указывает , какой символ был введен. Например, строчная буква &amp;laquo;a&amp;raquo; будет отображаться как 65 при &lt;code&gt;keydown&lt;/code&gt; и &lt;code&gt;keyup&lt;/code&gt; , но как 97 при &lt;code&gt;keypress&lt;/code&gt; . Заглавная буква &amp;laquo;A&amp;raquo; отображается как 65 во всех событиях. Из-за этого различия при перехвате специальных нажатий клавиш, таких как клавиши со стрелками, &lt;code&gt;.keydown()&lt;/code&gt; или &lt;code&gt;.keyup()&lt;/code&gt; - лучший выбор.</target>
        </trans-unit>
        <trans-unit id="88ce2b97fcd2128e1217e066af88767f51e98167" translate="yes" xml:space="preserve">
          <source>Note that IE8 claims to be 7 in Compatibility View.</source>
          <target state="translated">Обратите внимание,что IE8 претендует на 7 в Compatibility View.</target>
        </trans-unit>
        <trans-unit id="b730bee5fbef2f6b2aa292f37918b6fbe66f6a20" translate="yes" xml:space="preserve">
          <source>Note that NaN compares in a strange way:</source>
          <target state="translated">Обратите внимание,что NaN сравнивает странным образом:</target>
        </trans-unit>
        <trans-unit id="17fd40d7d7191bd15983da940f2916a408ad9818" translate="yes" xml:space="preserve">
          <source>Note that a Deferred object can be in one of three states: pending, resolved, or rejected; use &lt;a href=&quot;deferred.isrejected&quot;&gt;&lt;code&gt;deferred.isRejected()&lt;/code&gt;&lt;/a&gt; to determine whether the Deferred object is in the rejected state. These methods are primarily useful for debugging, for example to determine whether a Deferred has already been resolved even though you are inside code that intended to reject it.</source>
          <target state="translated">Обратите внимание, что отложенный объект может находиться в одном из трех состояний: ожидающий, разрешенный или отклоненный; используйте &lt;a href=&quot;deferred.isrejected&quot;&gt; &lt;code&gt;deferred.isRejected()&lt;/code&gt; &lt;/a&gt; чтобы определить, находится ли объект Deferred в отклоненном состоянии. Эти методы в первую очередь полезны для отладки, например, чтобы определить, был ли уже разрешен отложенный вызов, даже если вы находитесь внутри кода, который намеревался его отклонить.</target>
        </trans-unit>
        <trans-unit id="9630bd329af38494b591e249ba3082f6bd4c0686" translate="yes" xml:space="preserve">
          <source>Note that a Deferred object can be in one of three states: pending, resolved, or rejected; use &lt;a href=&quot;deferred.isresolved&quot;&gt;&lt;code&gt;deferred.isResolved()&lt;/code&gt;&lt;/a&gt; to determine whether the Deferred object is in the resolved state. These methods are primarily useful for debugging, for example to determine whether a Deferred has already been resolved even though you are inside code that intended to reject it.</source>
          <target state="translated">Обратите внимание, что отложенный объект может находиться в одном из трех состояний: ожидающий, разрешенный или отклоненный; используйте &lt;a href=&quot;deferred.isresolved&quot;&gt; &lt;code&gt;deferred.isResolved()&lt;/code&gt; &lt;/a&gt; чтобы определить, находится ли объект Deferred в разрешенном состоянии. Эти методы в первую очередь полезны для отладки, например, чтобы определить, был ли уже разрешен отложенный вызов, даже если вы находитесь внутри кода, который намеревался его отклонить.</target>
        </trans-unit>
        <trans-unit id="26f674beb6e78d8599fa149b6e24e2ae88f6e8c4" translate="yes" xml:space="preserve">
          <source>Note that after the conversion, any special features the object had (such as the jQuery methods in our example) will no longer be present. The object is now a plain array.</source>
          <target state="translated">Обратите внимание,что после преобразования,любые особенности,которыми обладал объект (такие как методы jQuery в нашем примере),больше не будут присутствовать.Объект теперь представляет собой обычный массив.</target>
        </trans-unit>
        <trans-unit id="b62d69bdfab57f000c6edea0c915770659ae3387" translate="yes" xml:space="preserve">
          <source>Note that although the DOM always becomes ready before the page is fully loaded, it is &lt;em&gt;usually not safe&lt;/em&gt; to attach a &lt;code&gt;load&lt;/code&gt; event listener in code executed during a &lt;code&gt;.ready()&lt;/code&gt; handler. For example, scripts can be loaded dynamically long after the page has loaded using methods such as &lt;code&gt;$.getScript()&lt;/code&gt;. Although handlers added by &lt;code&gt;.ready()&lt;/code&gt; will always be executed in a dynamically loaded script, the &lt;code&gt;window&lt;/code&gt;'s &lt;code&gt;load&lt;/code&gt; event has already occurred and those listeners will never run.</source>
          <target state="translated">Обратите внимание, что хотя модель DOM всегда становится готовой до полной загрузки страницы, &lt;em&gt;обычно небезопасно&lt;/em&gt; подключать прослушиватель событий &lt;code&gt;load&lt;/code&gt; в код, выполняемый во время обработчика &lt;code&gt;.ready()&lt;/code&gt; . Например, скрипты могут загружаться динамически спустя долгое время после загрузки страницы с использованием таких методов, как &lt;code&gt;$.getScript()&lt;/code&gt; . Хотя обработчики , добавленные &lt;code&gt;.ready()&lt;/code&gt; всегда будет выполняться в динамически загруженного скрипта, то &lt;code&gt;window&lt;/code&gt; &amp;laquo;s &lt;code&gt;load&lt;/code&gt; событие уже произошло , и те слушатели никогда не будут работать.</target>
        </trans-unit>
        <trans-unit id="01a3e5dfb28217a94daa28214d6c0477c641548f" translate="yes" xml:space="preserve">
          <source>Note that for-in-loop can be spoiled by extending Object.prototype (see &lt;a href=&quot;http://erik.eae.net/archives/2005/06/06/22.13.54/&quot;&gt;Object.prototype is verboten&lt;/a&gt;) so take care when using other libraries.</source>
          <target state="translated">Обратите внимание, что цикл for-in-loop может быть испорчен расширением Object.prototype (см. &lt;a href=&quot;http://erik.eae.net/archives/2005/06/06/22.13.54/&quot;&gt;Object.prototype запрещен&lt;/a&gt; ), поэтому будьте осторожны при использовании других библиотек.</target>
        </trans-unit>
        <trans-unit id="8bd3ff09d5715f9fe52dabddc8542430bc33d309" translate="yes" xml:space="preserve">
          <source>Note that if the jQuery collection used as the &lt;code&gt;.index()&lt;/code&gt; method's argument contains more than one element, the first element within the matched set of elements will be used.</source>
          <target state="translated">Обратите внимание, что если коллекция jQuery, используемая в качестве аргумента метода &lt;code&gt;.index()&lt;/code&gt; , содержит более одного элемента, будет использоваться первый элемент в согласованном наборе элементов.</target>
        </trans-unit>
        <trans-unit id="64d4063be050ac5b068ab028685a6297935553e0" translate="yes" xml:space="preserve">
          <source>Note that if you're looking to use this for plugin development you should first</source>
          <target state="translated">Обратите внимание,что если вы хотите использовать это для разработки плагина,вы должны сначала</target>
        </trans-unit>
        <trans-unit id="603e2d0c6f8c58fff721f8a185bc7d4842b32343" translate="yes" xml:space="preserve">
          <source>Note that jQuery's event system uses the jQuery data API to store event handlers. Therefore, binding an event to an element using &lt;code&gt;.on()&lt;/code&gt;, &lt;code&gt;.bind()&lt;/code&gt;, &lt;code&gt;.live()&lt;/code&gt;, &lt;code&gt;.delegate()&lt;/code&gt;, or one of the shorthand event methods also associates a data object with that element.</source>
          <target state="translated">Обратите внимание, что система событий jQuery использует API данных jQuery для хранения обработчиков событий. Следовательно, привязка события к элементу с помощью &lt;code&gt;.on()&lt;/code&gt; , &lt;code&gt;.bind()&lt;/code&gt; , &lt;code&gt;.live()&lt;/code&gt; , &lt;code&gt;.delegate()&lt;/code&gt; или одного из сокращенных методов событий также связывает объект данных с этим элементом.</target>
        </trans-unit>
        <trans-unit id="634f69663bc0abc99416e2453da309a3f7ccb99b" translate="yes" xml:space="preserve">
          <source>Note that jQuery.sub() doesn't attempt to do any sort of isolation - that's not its intention. All the methods on the sub'd version of jQuery will still point to the original jQuery (events bound and triggered will still be through the main jQuery, data will be bound to elements through the main jQuery, Ajax queries and events will run through the main jQuery, etc.).</source>
          <target state="translated">Обратите внимание,что jQuery.sub()не пытается сделать какую-либо изоляцию-это не его намерение.Все методы в Sub'd версии jQuery будут по-прежнему указывать на исходную jQuery (события,привязанные и сработавшие,будут по-прежнему проходить через главную jQuery,данные будут привязаны к элементам через главную jQuery,Ajax запросы и события будут проходить через главную jQuery и т.д.).</target>
        </trans-unit>
        <trans-unit id="18879f7ea7679c34db58221ad1b80ff7971dd1de" translate="yes" xml:space="preserve">
          <source>Note that objects are passed to functions &lt;em&gt;by reference&lt;/em&gt;, which further complicates this scenario.</source>
          <target state="translated">Обратите внимание, что объекты передаются функциям &lt;em&gt;по ссылке&lt;/em&gt; , что еще больше усложняет этот сценарий.</target>
        </trans-unit>
        <trans-unit id="b16ae4b22cd1eb12b6549a616d3b81fc77206238" translate="yes" xml:space="preserve">
          <source>Note that since JavaScript arrays use &lt;em&gt;0-based indexing&lt;/em&gt;, these selectors reflect that fact. This is why &lt;code&gt;$( &quot;.myclass:eq(1)&quot; )&lt;/code&gt; selects the second element in the document with the class myclass, rather than the first. In contrast, &lt;code&gt;:nth-child(n)&lt;/code&gt; uses &lt;em&gt;1-based indexing&lt;/em&gt; to conform to the CSS specification.</source>
          <target state="translated">Обратите внимание: поскольку массивы JavaScript используют &lt;em&gt;индексирование на основе 0&lt;/em&gt; , эти селекторы отражают этот факт. Вот почему &lt;code&gt;$( &quot;.myclass:eq(1)&quot; )&lt;/code&gt; выбирает второй элемент в документе с классом myclass, а не первый. Напротив &lt;code&gt;:nth-child(n)&lt;/code&gt; использует &lt;em&gt;индексирование&lt;/em&gt; на &lt;em&gt;основе 1,&lt;/em&gt; чтобы соответствовать спецификации CSS.</target>
        </trans-unit>
        <trans-unit id="06ca820266cda6fdb04709e1a10129b0a00c73b3" translate="yes" xml:space="preserve">
          <source>Note that since JavaScript arrays use &lt;em&gt;0-based indexing&lt;/em&gt;, these selectors reflect that fact. This is why &lt;code&gt;$( &quot;.myclass:gt(1)&quot; )&lt;/code&gt; selects elements after the second element in the document with the class &lt;code&gt;myclass&lt;/code&gt;, rather than after the first. In contrast, &lt;code&gt;:nth-child(n)&lt;/code&gt; uses &lt;em&gt;1-based indexing&lt;/em&gt; to conform to the CSS specification.</source>
          <target state="translated">Обратите внимание: поскольку массивы JavaScript используют &lt;em&gt;индексирование на основе 0&lt;/em&gt; , эти селекторы отражают этот факт. Вот почему &lt;code&gt;$( &quot;.myclass:gt(1)&quot; )&lt;/code&gt; выбирает элементы после второго элемента в документе с классом &lt;code&gt;myclass&lt;/code&gt; , а не после первого. Напротив &lt;code&gt;:nth-child(n)&lt;/code&gt; использует &lt;em&gt;индексирование&lt;/em&gt; на &lt;em&gt;основе 1,&lt;/em&gt; чтобы соответствовать спецификации CSS.</target>
        </trans-unit>
        <trans-unit id="4d4a901ef4bf647f88ca26cecb20b6eb14db931d" translate="yes" xml:space="preserve">
          <source>Note that since JavaScript arrays use &lt;em&gt;0-based indexing&lt;/em&gt;, these selectors reflect that fact. This is why &lt;code&gt;$( &quot;.myclass:lt(1)&quot; )&lt;/code&gt; selects the first element in the document with the class &lt;code&gt;myclass&lt;/code&gt;, rather than selecting no elements. In contrast, &lt;code&gt;:nth-child(n)&lt;/code&gt; uses &lt;em&gt;1-based indexing&lt;/em&gt; to conform to the CSS specification.</source>
          <target state="translated">Обратите внимание: поскольку массивы JavaScript используют &lt;em&gt;индексирование на основе 0&lt;/em&gt; , эти селекторы отражают этот факт. Вот почему &lt;code&gt;$( &quot;.myclass:lt(1)&quot; )&lt;/code&gt; выбирает первый элемент в документе с классом &lt;code&gt;myclass&lt;/code&gt; , а не не выбирает никаких элементов. Напротив &lt;code&gt;:nth-child(n)&lt;/code&gt; использует &lt;em&gt;индексирование&lt;/em&gt; на &lt;em&gt;основе 1,&lt;/em&gt; чтобы соответствовать спецификации CSS.</target>
        </trans-unit>
        <trans-unit id="837cf0dda8587904e1c8b4dc7372d54cd8666fea" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;step&lt;/code&gt; function is called for each animated property on each animated element. For example, given two list items, the &lt;code&gt;step&lt;/code&gt; function fires four times at each step of the animation:</source>
          <target state="translated">Обратите внимание, что функция &lt;code&gt;step&lt;/code&gt; вызывается для каждого анимированного свойства каждого анимированного элемента. Например, для двух элементов списка &lt;code&gt;step&lt;/code&gt; функция запускается четыре раза на каждом шаге анимации:</target>
        </trans-unit>
        <trans-unit id="89bd7bf0525aa8fb6ec233eb8b29af57c43ca4e0" translate="yes" xml:space="preserve">
          <source>Note that the &lt;em&gt;computed style&lt;/em&gt; of an element may not be the same as the value specified for that element in a style sheet. For example, computed styles of dimensions are almost always pixels, but they can be specified as em, ex, px or % in a style sheet. Different browsers may return CSS color values that are logically but not textually equal, e.g., #FFF, #ffffff, and rgb(255,255,255).</source>
          <target state="translated">Обратите внимание, что &lt;em&gt;вычисленный стиль&lt;/em&gt; элемента может не совпадать со значением, указанным для этого элемента в таблице стилей. Например, вычисленные стили размеров почти всегда являются пикселями, но они могут быть указаны как em, ex, px или% в таблице стилей. Различные браузеры могут возвращать значения цвета CSS, которые логически, но не текстуально равны, например, #FFF, #ffffff и rgb (255,255,255).</target>
        </trans-unit>
        <trans-unit id="c4e91c74b1d6ce0d63fc1fca5fe358776b395642" translate="yes" xml:space="preserve">
          <source>Note that the context property may only apply to the elements originally selected by &lt;code&gt;jQuery()&lt;/code&gt;, as it is possible for the user to add elements to the collection via methods such as &lt;code&gt;.add()&lt;/code&gt; and these may have a different context.</source>
          <target state="translated">Обратите внимание, что свойство контекста может применяться только к элементам, первоначально выбранным &lt;code&gt;jQuery()&lt;/code&gt; , поскольку пользователь может добавлять элементы в коллекцию с помощью таких методов, как &lt;code&gt;.add()&lt;/code&gt; и они могут иметь другой контекст.</target>
        </trans-unit>
        <trans-unit id="dc4578e5938b3ccd16a00678c9fb299762e48ca3" translate="yes" xml:space="preserve">
          <source>Note that the target value of the &lt;code&gt;height&lt;/code&gt; property is &lt;code&gt;'toggle'&lt;/code&gt;. Since the image was visible before, the animation shrinks the height to 0 to hide it. A second click then reverses this transition:</source>
          <target state="translated">Обратите внимание, что целевым значением свойства &lt;code&gt;height&lt;/code&gt; является &lt;code&gt;'toggle'&lt;/code&gt; . Поскольку изображение было видимым раньше, анимация уменьшает высоту до 0, чтобы скрыть его. Второй щелчок затем отменяет этот переход:</target>
        </trans-unit>
        <trans-unit id="4304dd37d492275ef66c42396af7751c4db2cbd2" translate="yes" xml:space="preserve">
          <source>Note that this is the API documentation for jQuery core. Other projects have API docs in other locations:</source>
          <target state="translated">Обратите внимание,что это API документация для ядра jQuery.В других проектах есть API документация в других местах:</target>
        </trans-unit>
        <trans-unit id="3007f4996fe58fef68b794b50262436db2ee8208" translate="yes" xml:space="preserve">
          <source>Note that this method currently does not provide cross-platform support for setting data on XML documents, as Internet Explorer does not allow data to be attached via expando properties.</source>
          <target state="translated">Обратите внимание,что в настоящее время этот метод не предоставляет кросс-платформенную поддержку для установки данных в XML документах,так как Internet Explorer не позволяет прикреплять данные через свойства expando.</target>
        </trans-unit>
        <trans-unit id="09023bbb7aa11b2e08f9cd1a97c15fb6606c42a3" translate="yes" xml:space="preserve">
          <source>Note that this will not prevent other handlers &lt;em&gt;on the same element&lt;/em&gt; from running.</source>
          <target state="translated">Обратите внимание, что это не помешает запуску других обработчиков &lt;em&gt;того же элемента&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="8c12a70d1c50da308e089b41b1f4de392a75cd32" translate="yes" xml:space="preserve">
          <source>Note that this works best for simple numeric-value animations. More custom code may be required depending on the CSS property, the type of value it returns, and the animation's complexity.</source>
          <target state="translated">Обратите внимание,что это лучше всего подходит для простых анимаций с числовыми значениями.Дополнительный пользовательский код может потребоваться в зависимости от свойства CSS,типа возвращаемого значения и сложности анимации.</target>
        </trans-unit>
        <trans-unit id="becce3c8206120d3cd651c78ed72e1ed735a1a17" translate="yes" xml:space="preserve">
          <source>Note that when adding a function with &lt;code&gt;.queue()&lt;/code&gt;, we should ensure that &lt;code&gt;.dequeue()&lt;/code&gt; is eventually called so that the next function in line executes.</source>
          <target state="translated">Обратите внимание, что при добавлении функции с помощью &lt;code&gt;.queue()&lt;/code&gt; мы должны убедиться, что &lt;code&gt;.dequeue()&lt;/code&gt; в конечном итоге вызывается, чтобы выполнялась следующая функция в строке.</target>
        </trans-unit>
        <trans-unit id="8b385a606da8a9fd15636c3d6922ac03a0564c95" translate="yes" xml:space="preserve">
          <source>Note that when adding a function with &lt;code&gt;jQuery.queue()&lt;/code&gt;, we should ensure that &lt;code&gt;jQuery.dequeue()&lt;/code&gt; is eventually called so that the next function in line executes.</source>
          <target state="translated">Обратите внимание, что при добавлении функции с помощью &lt;code&gt;jQuery.queue()&lt;/code&gt; мы должны убедиться, что в конечном итоге вызывается jQuery.dequeue () , чтобы &lt;code&gt;jQuery.dequeue()&lt;/code&gt; следующая функция в строке.</target>
        </trans-unit>
        <trans-unit id="eb6dc18e87cfc3f7fe67b078666d905e3eac0f91" translate="yes" xml:space="preserve">
          <source>Note the difference between the extra parameters passed here and the &lt;code&gt;eventData&lt;/code&gt; parameter to the &lt;a href=&quot;on&quot;&gt;.on()&lt;/a&gt; method. Both are mechanisms for passing information to an event handler, but the &lt;code&gt;extraParameters&lt;/code&gt; argument to &lt;code&gt;.trigger()&lt;/code&gt; allows information to be determined at the time the event is triggered, while the &lt;code&gt;eventData&lt;/code&gt; argument to &lt;code&gt;.on()&lt;/code&gt; requires the information to be already computed at the time the handler is bound.</source>
          <target state="translated">Обратите внимание на разницу между дополнительными параметрами , передаваемыми здесь и &lt;code&gt;eventData&lt;/code&gt; параметром в &lt;a href=&quot;on&quot;&gt;.оне ()&lt;/a&gt; метод. Оба являются механизмами для передачи информации обработчику событий, но аргумент &lt;code&gt;extraParameters&lt;/code&gt; для &lt;code&gt;.trigger()&lt;/code&gt; позволяет определять информацию во время &lt;code&gt;eventData&lt;/code&gt; события, а аргумент &lt;code&gt;.on()&lt;/code&gt; для .on () требует, чтобы информация уже была вычислена в время привязки обработчика.</target>
        </trans-unit>
        <trans-unit id="e04b2c1fe338445e39f76c0b8b6d8301cb5a519a" translate="yes" xml:space="preserve">
          <source>Note the parameter added to the anonymous function. This code will cause a click on the element with ID &lt;code&gt;foo&lt;/code&gt; to report the page coordinates of the mouse cursor at the time of the click.</source>
          <target state="translated">Обратите внимание на параметр, добавленный к анонимной функции. Этот код заставит щелкнуть элемент с идентификатором &lt;code&gt;foo&lt;/code&gt; , чтобы сообщить координаты страницы курсора мыши во время щелчка.</target>
        </trans-unit>
        <trans-unit id="f701904f79f165978ae29e638680c1028a521276" translate="yes" xml:space="preserve">
          <source>Note: .unshift() method does not return a length property in Internet Explorer.</source>
          <target state="translated">Замечание:метод .unshift()не возвращает свойство length в Internet Explorer.</target>
        </trans-unit>
        <trans-unit id="32016c6b7d5a6fddec99d790076c9a63fa50000b" translate="yes" xml:space="preserve">
          <source>Note: A jQuery &lt;code&gt;error&lt;/code&gt; event handler should not be attached to the &lt;code&gt;window&lt;/code&gt; object. The browser fires the &lt;code&gt;window&lt;/code&gt;'s &lt;code&gt;error&lt;/code&gt; event when a script error occurs. However, the window &lt;code&gt;error&lt;/code&gt; event receives different arguments and has different return value requirements than conventional event handlers. Use &lt;code&gt;window.onerror&lt;/code&gt; instead.</source>
          <target state="translated">Примечание. Обработчик события &lt;code&gt;error&lt;/code&gt; jQuery не должен быть прикреплен к объекту &lt;code&gt;window&lt;/code&gt; . Браузер увольняет &lt;code&gt;window&lt;/code&gt; &amp;laquo;сек &lt;code&gt;error&lt;/code&gt; события , когда происходит ошибка сценария. Однако событие &lt;code&gt;error&lt;/code&gt; окна получает разные аргументы и имеет другие требования к возвращаемому значению, чем обычные обработчики событий. Вместо этого используйте &lt;code&gt;window.onerror&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3ca1b3c9a6a8e404fdbe867d0b6c585beff5aa0" translate="yes" xml:space="preserve">
          <source>Note: Due to a &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=238041&quot;&gt;bug open since 2004&lt;/a&gt;, this value is not populated correctly in Firefox and it is not possible to know the time the event was created in that browser.</source>
          <target state="translated">Примечание: из-за &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=238041&quot;&gt;ошибки, открытой с 2004 года&lt;/a&gt; , это значение неправильно указывается в Firefox, и невозможно узнать время создания события в этом браузере.</target>
        </trans-unit>
        <trans-unit id="42a7714f1f8d157530238b15827fa20fa154221c" translate="yes" xml:space="preserve">
          <source>Note: Global callback functions should be set with their respective global Ajax event handler methods&amp;mdash;&lt;code&gt;&lt;a href=&quot;ajaxstart&quot;&gt;.ajaxStart()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ajaxstop&quot;&gt;.ajaxStop()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ajaxcomplete&quot;&gt;.ajaxComplete()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ajaxerror&quot;&gt;.ajaxError()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ajaxsuccess&quot;&gt;.ajaxSuccess()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ajaxsend&quot;&gt;.ajaxSend()&lt;/a&gt;&lt;/code&gt;&amp;mdash;rather than within the &lt;code&gt;options&lt;/code&gt; object for &lt;code&gt;$.ajaxSetup()&lt;/code&gt;.</source>
          <target state="translated">Примечание. Глобальные функции обратного вызова должны быть установлены с помощью соответствующих глобальных методов &lt;code&gt;&lt;a href=&quot;ajaxstart&quot;&gt;.ajaxStart()&lt;/a&gt;&lt;/code&gt; событий Ajax - .ajaxStart () , &lt;code&gt;&lt;a href=&quot;ajaxstop&quot;&gt;.ajaxStop()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;ajaxcomplete&quot;&gt;.ajaxComplete()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;ajaxerror&quot;&gt;.ajaxError()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;ajaxsuccess&quot;&gt;.ajaxSuccess()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;ajaxsend&quot;&gt;.ajaxSend()&lt;/a&gt;&lt;/code&gt; а не внутри то &lt;code&gt;options&lt;/code&gt; объекта для &lt;code&gt;$.ajaxSetup()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ab92c4359e4cac3efabf7665a01ec840085e668" translate="yes" xml:space="preserve">
          <source>Note: Only &lt;a href=&quot;https://www.w3.org/TR/html401/interact/forms.html#h-17.13.2&quot;&gt;&quot;successful controls&quot;&lt;/a&gt; are serialized to the string. No submit button value is serialized since the form was not submitted using a button. For a form element's value to be included in the serialized string, the element must have a &lt;code&gt;name&lt;/code&gt; attribute. Values from checkboxes and radio buttons (&lt;code&gt;input&lt;/code&gt;s of type &quot;radio&quot; or &quot;checkbox&quot;) are included only if they are checked. Data from file select elements is not serialized.</source>
          <target state="translated">Примечание. В строку сериализуются только &lt;a href=&quot;https://www.w3.org/TR/html401/interact/forms.html#h-17.13.2&quot;&gt;&amp;laquo;успешные элементы управления&amp;raquo;&lt;/a&gt; . Значение кнопки отправки не сериализуется, поскольку форма не была отправлена ​​с помощью кнопки. Чтобы значение элемента формы было включено в сериализованную строку, этот элемент должен иметь атрибут &lt;code&gt;name&lt;/code&gt; . Значения флажков и переключателей ( &lt;code&gt;input&lt;/code&gt; типа &amp;laquo;радио&amp;raquo; или &amp;laquo;флажок&amp;raquo;) включаются, только если они отмечены. Данные из элементов выбора файла не сериализуются.</target>
        </trans-unit>
        <trans-unit id="375d0d6a84343703c450f78f5de4ea229fa15811" translate="yes" xml:space="preserve">
          <source>Note: Prior to jQuery 3.0, the event handling suite also had a method named &lt;code&gt;&lt;a href=&quot;load-event&quot;&gt;.load()&lt;/a&gt;&lt;/code&gt;. Older versions of jQuery determined which method to fire based on the set of arguments passed to it.</source>
          <target state="translated">Примечание. До jQuery 3.0 в пакете обработки событий также был метод с именем &lt;code&gt;&lt;a href=&quot;load-event&quot;&gt;.load()&lt;/a&gt;&lt;/code&gt; . Старые версии jQuery определяли, какой метод запускать, на основе переданного ему набора аргументов.</target>
        </trans-unit>
        <trans-unit id="6b02e208e242588e6c10f7865c6a005487d08580" translate="yes" xml:space="preserve">
          <source>Note: The event handling suite also has a method named &lt;a href=&quot;toggle-event&quot;&gt;.toggle()&lt;/a&gt;. Which one is fired depends on the set of arguments passed.</source>
          <target state="translated">Примечание. В пакете обработки событий также есть метод с именем &lt;a href=&quot;toggle-event&quot;&gt;.toggle ()&lt;/a&gt; . Какой из них будет запущен, зависит от набора переданных аргументов.</target>
        </trans-unit>
        <trans-unit id="8700ec995cd6a062d91bd3a04552f61268ce0e11" translate="yes" xml:space="preserve">
          <source>Note: This API has been deprecated in jQuery 3.2. Instead of relying on this global switch, it's better to put explicitly wait for required code. If you need to wait both for the ready state &amp;amp; for a custom promise, use the following pattern:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5956b7156a30564e24eb8359016fb6e54bde0ef" translate="yes" xml:space="preserve">
          <source>Note: This API has been deprecated in jQuery 3.2; please use the native &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray&quot;&gt;&lt;code&gt;Array.isArray&lt;/code&gt;&lt;/a&gt; method instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c9b81f769767fd0b2e8f71b6894d0bfd9044367" translate="yes" xml:space="preserve">
          <source>Note: This API has been deprecated in jQuery 3.3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c67b55cc6050ef69efcab7b6d64681443fb15db" translate="yes" xml:space="preserve">
          <source>Note: This API has been deprecated in jQuery 3.3; if you need this function, reimplement it by yourself:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9154845b3905d4b1dc76a1eb6f8618ba026d9ccc" translate="yes" xml:space="preserve">
          <source>Note: This API has been deprecated in jQuery 3.3; please use the native &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now&quot;&gt;&lt;code&gt;Date.now()&lt;/code&gt;&lt;/a&gt; method instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a2d60a6cf9732adefde7aa8904f1564d03727b" translate="yes" xml:space="preserve">
          <source>Note: This API has been deprecated in jQuery 3.3; please use the native &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind&quot;&gt;&lt;code&gt;Function.prototype.bind&lt;/code&gt;&lt;/a&gt; method instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f538762441baf9b8fbe9ab58d28e338eee730e62" translate="yes" xml:space="preserve">
          <source>Note: This API has been deprecated in jQuery 3.5; please use the native &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim&quot;&gt;&lt;code&gt;String.prototype.trim&lt;/code&gt;&lt;/a&gt; method instead. Unlike &lt;code&gt;jQuery.trim&lt;/code&gt;, &lt;code&gt;String.prototype.trim&lt;/code&gt; does not work with types other than strings (&lt;code&gt;null&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;). Make sure that your code is compatible when migrating.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc4524f3322e89c25a21849a32a338d640f1eadf" translate="yes" xml:space="preserve">
          <source>Note: This API has been removed in jQuery 1.8; please use &lt;a href=&quot;deferred.state&quot;&gt;&lt;code&gt;deferred.state()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef026eb8ac74a988ba2861c5afcf0c1d71df11a1" translate="yes" xml:space="preserve">
          <source>Note: This API has been removed in jQuery 1.9.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4544af9b7ab89bc52ce4d6cc66e290a3ea051923" translate="yes" xml:space="preserve">
          <source>Note: This API has been removed in jQuery 1.9; please rely on feature detection instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea44b6ce4fdcd08883fe627ac4ef87a50388d739" translate="yes" xml:space="preserve">
          <source>Note: This API has been removed in jQuery 1.9; please use &lt;a href=&quot;on&quot;&gt;&lt;code&gt;on()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a5700b6a79e5c6615fe2767c8b89ffb1724166" translate="yes" xml:space="preserve">
          <source>Note: This API has been removed in jQuery 3.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2324d58dde522dd19a4f6aa112e43cf2b1293d" translate="yes" xml:space="preserve">
          <source>Note: This API has been removed in jQuery 3.0. The property was never a reliable indicator of the selector that could be used to obtain the set of elements currently contained in the jQuery set where it was a property, since subsequent traversal methods may have changed the set. Plugins that need to use a selector string within their plugin can require it as a parameter of the method. For example, a &quot;foo&quot; plugin could be written as &lt;code&gt;$.fn.foo = function( selector, options ) { /* plugin code goes here */ };&lt;/code&gt;, and the person using the plugin would write &lt;code&gt;$( &quot;div.bar&quot; ).foo( &quot;div.bar&quot;, {dog: &quot;bark&quot;} );&lt;/code&gt; with the &lt;code&gt;&quot;div.bar&quot;&lt;/code&gt; selector repeated as the first argument of &lt;code&gt;.foo()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b25ae52bf91e0779260df88cdcf8d529db86254" translate="yes" xml:space="preserve">
          <source>Note: This API has been removed in jQuery 3.0; check if &lt;code&gt;.document.compatMode&lt;/code&gt; is equal to &lt;code&gt;&quot;CSS1Compat&quot;&lt;/code&gt; instead. Or, even better - always specify a DOCTYPE and avoid using quirks mode which jQuery doesn't support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="049568fe855138af7a4b4e69058d751555f8ca1d" translate="yes" xml:space="preserve">
          <source>Note: This API has been removed in jQuery 3.0; please use &lt;code&gt;.on( &quot;error&quot;, handler )&lt;/code&gt; instead of &lt;code&gt;.error( handler )&lt;/code&gt; and &lt;code&gt;.trigger( &quot;error&quot; )&lt;/code&gt; instead of &lt;code&gt;.error()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ecb8326ae9d7f966d12c47ea5e9450fe701857a" translate="yes" xml:space="preserve">
          <source>Note: This API has been removed in jQuery 3.0; please use &lt;code&gt;.on( &quot;load&quot;, handler )&lt;/code&gt; instead of &lt;code&gt;.load( handler )&lt;/code&gt; and &lt;code&gt;.trigger( &quot;load&quot; )&lt;/code&gt; instead of &lt;code&gt;.load()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf9faa6cf8d827f52da5ee9f981a93f589fc4be" translate="yes" xml:space="preserve">
          <source>Note: This API has been removed in jQuery 3.0; please use &lt;code&gt;.on( &quot;unload&quot;, handler )&lt;/code&gt; instead of &lt;code&gt;.unload( handler )&lt;/code&gt; and &lt;code&gt;.trigger( &quot;unload&quot; )&lt;/code&gt; instead of &lt;code&gt;.unload()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c873e23f1b8328a9dc6f6e63720e441da715d45" translate="yes" xml:space="preserve">
          <source>Note: This API has been removed in jQuery 3.0; use &lt;a href=&quot;addback&quot;&gt;&lt;code&gt;.addBack()&lt;/code&gt;&lt;/a&gt; instead, which should work identically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191597062faba122b7ba54499df3dafb0a188f54" translate="yes" xml:space="preserve">
          <source>Note: This method has been removed in jQuery 3.0. Use the &lt;code&gt;&lt;a href=&quot;length&quot;&gt;.length&lt;/a&gt;&lt;/code&gt; property instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c73a524b8268b424ef6007de91150b5635828515" translate="yes" xml:space="preserve">
          <source>Note: This method signature was deprecated in jQuery 1.8 and removed in jQuery 1.9. jQuery also provides an animation method named &lt;a href=&quot;toggle&quot;&gt;.toggle()&lt;/a&gt; that toggles the visibility of elements. Whether the animation or the event method is fired depends on the set of arguments passed.</source>
          <target state="translated">Примечание. Эта сигнатура метода устарела в jQuery 1.8 и удалена в jQuery 1.9. jQuery также предоставляет метод анимации с именем &lt;a href=&quot;toggle&quot;&gt;.toggle (),&lt;/a&gt; который переключает видимость элементов. Запускается ли анимация или метод события, зависит от переданного набора аргументов.</target>
        </trans-unit>
        <trans-unit id="a8218e2700a4958410ccaa8b3d117e2195b2f7b9" translate="yes" xml:space="preserve">
          <source>Note: most jQuery methods that return a jQuery object also loop through the set of elements in the jQuery collection &amp;mdash; a process known as</source>
          <target state="translated">Примечание: большинство методов jQuery, возвращающих объект jQuery, также проходят цикл по набору элементов в коллекции jQuery - процесс, известный как</target>
        </trans-unit>
        <trans-unit id="449182458d80e2e3a6776498fb9494e672efc40c" translate="yes" xml:space="preserve">
          <source>Now clicking on the first field, or tabbing to it from another field, displays the alert:</source>
          <target state="translated">Теперь,щелкнув по первому полю или наложив на него вкладку из другого поля,вы увидите предупреждение:</target>
        </trans-unit>
        <trans-unit id="117a6584ee35d7f3434599135580b2640ed2d0c8" translate="yes" xml:space="preserve">
          <source>Now double-clicking on this element displays the alert:</source>
          <target state="translated">Теперь двойной щелчок на этом элементе отображает предупреждение:</target>
        </trans-unit>
        <trans-unit id="0d801ef372ff23fa09a60c2d3ecd056a7370ac63" translate="yes" xml:space="preserve">
          <source>Now each time an Ajax request is made, the &quot;ping.php&quot; URL will be used automatically:</source>
          <target state="translated">Теперь при каждом запросе Ajax URL &quot;ping.php&quot; будет использоваться автоматически:</target>
        </trans-unit>
        <trans-unit id="c1dcf26eac2c773438ce3fceede02a7f078bdd04" translate="yes" xml:space="preserve">
          <source>Now if the first field has the focus, clicking elsewhere or tabbing away from it displays the alert:</source>
          <target state="translated">Теперь,если первое поле имеет фокус,щелчок в другом месте или отступление от него отображает предупреждение:</target>
        </trans-unit>
        <trans-unit id="3f0aefcd62e016bbe1fbac67718dc966c0c054d6" translate="yes" xml:space="preserve">
          <source>Now if we click on this element, the alert is displayed:</source>
          <target state="translated">Теперь,если мы нажмем на этот элемент,появится предупреждение:</target>
        </trans-unit>
        <trans-unit id="7e6bef5d9ba5c6c5dd29087874d5b97464fe825b" translate="yes" xml:space="preserve">
          <source>Now only items 3 and 4 are selected. The index is once again zero-based; the range extends up to but not including the specified index.</source>
          <target state="translated">Теперь выбраны только пункты 3 и 4.Индекс опять нулевой;диапазон расширяется до указанного индекса,но не включает его.</target>
        </trans-unit>
        <trans-unit id="baa345b19e98c7b7e1bf8a0c918bba74520a8284" translate="yes" xml:space="preserve">
          <source>Now right-clicking on this element displays the alert:</source>
          <target state="translated">Теперь при нажатии правой кнопки мыши на этом элементе отображается предупреждение:</target>
        </trans-unit>
        <trans-unit id="76cc6d5115e691351218d8b2980f724a73c77bb2" translate="yes" xml:space="preserve">
          <source>Now when any portion of the text is selected, the alert is displayed. Merely setting the location of the insertion point will not trigger the event. To trigger the event manually, apply &lt;code&gt;.select()&lt;/code&gt; without an argument:</source>
          <target state="translated">Теперь, когда выделена какая-либо часть текста, отображается предупреждение. Простая установка местоположения точки вставки не вызовет событие. Чтобы вызвать событие вручную, примените &lt;code&gt;.select()&lt;/code&gt; без аргумента:</target>
        </trans-unit>
        <trans-unit id="9b47155e7e1990f0b1c67ae920bbddaba7ce0dba" translate="yes" xml:space="preserve">
          <source>Now when the form is submitted, the message is alerted. This happens prior to the actual submission, so we can cancel the submit action by calling &lt;code&gt;.preventDefault()&lt;/code&gt; on the event object or by returning &lt;code&gt;false&lt;/code&gt; from our handler. We can trigger the event manually when another element is clicked:</source>
          <target state="translated">Теперь, когда форма отправлена, появляется предупреждение. Это происходит до фактической отправки, поэтому мы можем отменить действие отправки, вызвав &lt;code&gt;.preventDefault()&lt;/code&gt; для объекта события или вернув &lt;code&gt;false&lt;/code&gt; из нашего обработчика. Мы можем вызвать событие вручную при нажатии на другой элемент:</target>
        </trans-unit>
        <trans-unit id="ab1a35ce1c4b70524dcf577edaca05d543c38559" translate="yes" xml:space="preserve">
          <source>Now when the insertion point is inside the field and a key is pressed and released, the alert is displayed:</source>
          <target state="translated">Теперь,когда точка вставки находится внутри поля и нажата и отпущена клавиша,отображается предупреждение:</target>
        </trans-unit>
        <trans-unit id="325c7b06cba96a484007477ed6e17576ccca8f9a" translate="yes" xml:space="preserve">
          <source>Now when the insertion point is inside the field, pressing a key displays the alert:</source>
          <target state="translated">Теперь,когда точка вставки находится внутри поля,при нажатии клавиши отображается предупреждение:</target>
        </trans-unit>
        <trans-unit id="eb2e64e8f0d47e9725305550a9a935f4c7f81e4c" translate="yes" xml:space="preserve">
          <source>Now when the insertion point is inside the field, pressing a key displays the log:</source>
          <target state="translated">Теперь,когда точка вставки находится внутри поля,при нажатии клавиши отображается журнал:</target>
        </trans-unit>
        <trans-unit id="9c906bb96b6814248fbc0695ad276f0f6d1bd1c0" translate="yes" xml:space="preserve">
          <source>Now when the mouse pointer moves out of the</source>
          <target state="translated">Теперь,когда указатель мыши выдвигается из</target>
        </trans-unit>
        <trans-unit id="bdd18963d0049c1fcc1746ce0a0e3c0ca050c019" translate="yes" xml:space="preserve">
          <source>Now when the mouse pointer moves over the</source>
          <target state="translated">Теперь,когда указатель мыши перемещается над</target>
        </trans-unit>
        <trans-unit id="2f673561a88619b138d01eb3486c29ef120c5a5a" translate="yes" xml:space="preserve">
          <source>Now when the mouse pointer moves within the target button, the messages are appended to &amp;lt;div id=&quot;log&quot;&amp;gt;:</source>
          <target state="translated">Теперь, когда указатель мыши перемещается в пределах целевой кнопки, сообщения добавляются в &amp;lt;div id = &quot;log&quot;&amp;gt;:</target>
        </trans-unit>
        <trans-unit id="b2aca8855e03ecb873fa34d6a8257d18e67107c9" translate="yes" xml:space="preserve">
          <source>Now when the second option is selected from the dropdown, the alert is displayed. It is also displayed if you change the text in the field and then click away. If the field loses focus without the contents having changed, though, the event is not triggered. To trigger the event manually, apply &lt;code&gt;.change()&lt;/code&gt; without arguments:</source>
          <target state="translated">Теперь, когда в раскрывающемся списке выбран второй вариант, отображается предупреждение. Он также отображается, если вы измените текст в поле, а затем щелкните мышью. Однако, если поле теряет фокус без изменения содержимого, событие не запускается. Чтобы вызвать событие вручную, примените &lt;code&gt;.change()&lt;/code&gt; без аргументов:</target>
        </trans-unit>
        <trans-unit id="9b70885b325ec48060fd73005c879ebe57030fbd" translate="yes" xml:space="preserve">
          <source>Now when the user scrolls the text up or down, one or more messages are appended to &lt;code&gt;&amp;lt;div id=&quot;log&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">Теперь, когда пользователь прокручивает текст вверх или вниз, одно или несколько сообщений добавляются в &lt;code&gt;&amp;lt;div id=&quot;log&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="06b3b87f42192aa9e17a24608537e439cf689949" translate="yes" xml:space="preserve">
          <source>Now whenever the browser window's size is changed, the message is appended to &amp;lt;div id=&quot;log&quot;&amp;gt; one or more times, depending on the browser.</source>
          <target state="translated">Теперь всякий раз, когда размер окна браузера изменяется, сообщение добавляется в &amp;lt;div id = &quot;log&quot;&amp;gt; один или несколько раз, в зависимости от браузера.</target>
        </trans-unit>
        <trans-unit id="d17dfc5a9d90229a04be06b524fc118f2a59d607" translate="yes" xml:space="preserve">
          <source>Now, make an Ajax request using any jQuery method:</source>
          <target state="translated">Теперь сделайте запрос на Ajax любым методом jQuery:</target>
        </trans-unit>
        <trans-unit id="82009c2de494642c914793e23238b15fb854ad92" translate="yes" xml:space="preserve">
          <source>Now, when the user clicks on the word &quot;list&quot; in the first item or anywhere in the third item, the clicked list item will be given a red background. However, when the user clicks on item 1 in the first item or anywhere in the second item, nothing will occur, because in those cases the target of the event would be &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;, respectively.</source>
          <target state="translated">Теперь, когда пользователь нажимает на слово &amp;laquo;список&amp;raquo; в первом элементе или в любом месте третьего элемента, выбранный элемент списка будет иметь красный фон. Однако, когда пользователь щелкает элемент 1 в первом элементе или где-нибудь во втором элементе, ничего не произойдет, потому что в этих случаях целью события будет &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; или &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="109085beaaa80ac89858b283a64f7c75d7e5bb12" translate="yes" xml:space="preserve">
          <source>Null</source>
          <target state="translated">Null</target>
        </trans-unit>
        <trans-unit id="b7baa1d40c4ea29afc9098732bffee2a861a6c44" translate="yes" xml:space="preserve">
          <source>Number</source>
          <target state="translated">Number</target>
        </trans-unit>
        <trans-unit id="d3fcd2342e2f633c17c918241809f0e005ac8252" translate="yes" xml:space="preserve">
          <source>Numbers in JavaScript are double-precision 64-bit format IEEE 754 values. They are immutable primitive values, just like &lt;a href=&quot;#String&quot;&gt;strings&lt;/a&gt;. All operators common in c-based languages are available to work with numbers (+, -, *, /, %, =, +=, -=, *=, /=, ++, --).</source>
          <target state="translated">Числа в JavaScript представляют собой значения IEEE 754 в 64-битном формате двойной точности. Это неизменяемые примитивные значения, как и &lt;a href=&quot;#String&quot;&gt;строки&lt;/a&gt; . Все операторы, распространенные в языках программирования c, доступны для работы с числами (+, -, *, /,%, =, + =, - =, * =, / =, ++, -).</target>
        </trans-unit>
        <trans-unit id="e07870b2a667b92e8d80745716c108a47613a233" translate="yes" xml:space="preserve">
          <source>Numbers to Strings</source>
          <target state="translated">Цифры к строкам</target>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Object</target>
        </trans-unit>
        <trans-unit id="995936b77a0ad0a9116452df12aba4bdf42c246a" translate="yes" xml:space="preserve">
          <source>Object onto which the promise methods have to be attached</source>
          <target state="translated">Объект,к которому должны быть прикреплены методы обещания</target>
        </trans-unit>
        <trans-unit id="a18ef01cc2d69922cade1fb3304639d282d9084a" translate="yes" xml:space="preserve">
          <source>Object to get the internal JavaScript [[Class]] of.</source>
          <target state="translated">Объект для получения внутреннего JavaScript [[Класс]].</target>
        </trans-unit>
        <trans-unit id="ab96ef9ef35bc183fc882af70c8638ad1d95e29e" translate="yes" xml:space="preserve">
          <source>Object to test whether or not it is a window.</source>
          <target state="translated">Объект для проверки,является ли это окно или нет.</target>
        </trans-unit>
        <trans-unit id="793c227df540854970796f2f8089fdf0ddbbb152" translate="yes" xml:space="preserve">
          <source>Object to test whether or not it is an array.</source>
          <target state="translated">Объект для проверки,является ли он массивом или нет.</target>
        </trans-unit>
        <trans-unit id="ce667716547fa82bc8795ad7ef205e9410193ed0" translate="yes" xml:space="preserve">
          <source>Offset</source>
          <target state="translated">Offset</target>
        </trans-unit>
        <trans-unit id="dcdb1f7fc9d98fea7356232fe865ee5396bbe348" translate="yes" xml:space="preserve">
          <source>On Macintosh keyboards, the</source>
          <target state="translated">На клавиатурах Macintosh</target>
        </trans-unit>
        <trans-unit id="44c76b345bb5857866c9a22d08b733b6f2883275" translate="yes" xml:space="preserve">
          <source>On Windows keyboards, the</source>
          <target state="translated">На клавиатурах Windows</target>
        </trans-unit>
        <trans-unit id="55457c030ffbe79753eec8a6e457666a955faa10" translate="yes" xml:space="preserve">
          <source>On a &lt;code&gt;deep&lt;/code&gt; extend, Object and Array are extended, but object wrappers on primitive types such as String, Boolean, and Number are not. Deep-extending a cyclical data structure will result in an error.</source>
          <target state="translated">В более &lt;code&gt;deep&lt;/code&gt; смысле Object и Array расширяются, но объектные оболочки для примитивных типов, таких как String, Boolean и Number, - нет. Глубокое расширение циклической структуры данных приведет к ошибке.</target>
        </trans-unit>
        <trans-unit id="d95bdbedfd62bcf38ddbbb67bbaea50c4b8ba3a4" translate="yes" xml:space="preserve">
          <source>On all anchor clicks, alert the event type.</source>
          <target state="translated">При всех нажатиях на якорь предупреждайте о типе события.</target>
        </trans-unit>
        <trans-unit id="7bbe80d69fbc1cdd3afaf946fc19c39ec60007a4" translate="yes" xml:space="preserve">
          <source>On browsers that do not support &lt;code&gt;requestAnimationFrame&lt;/code&gt;, this property can be changed to adjust the interval at which animations will run. The default is 13 milliseconds.</source>
          <target state="translated">В браузерах, которые не поддерживают &lt;code&gt;requestAnimationFrame&lt;/code&gt; , это свойство можно изменить, чтобы настроить интервал, с которым будут запускаться анимации. По умолчанию 13 миллисекунд.</target>
        </trans-unit>
        <trans-unit id="62a2fd35c6091b551a5d1887f32324257bd2cfab" translate="yes" xml:space="preserve">
          <source>On button click, replace the containing div with its child divs and append the class name of the selected element to the paragraph.</source>
          <target state="translated">Нажав кнопку мыши,замените содержащий div на его дочерний divs и добавьте имя класса выбранного элемента к параграфу.</target>
        </trans-unit>
        <trans-unit id="eaf11b43abd4a21ae872faee64e557346842fe33" translate="yes" xml:space="preserve">
          <source>On click, replace each paragraph with a div that is already in the DOM and selected with the &lt;code&gt;$()&lt;/code&gt; function. Notice it doesn't clone the object but rather moves it to replace the paragraph.</source>
          <target state="translated">При щелчке замените каждый абзац блоком div, который уже находится в DOM и выбран с помощью функции &lt;code&gt;$()&lt;/code&gt; . Обратите внимание, что он не клонирует объект, а перемещает его, чтобы заменить абзац.</target>
        </trans-unit>
        <trans-unit id="a30d3cc2d1662cb7ae2542b586ebeb2b0e0aeab6" translate="yes" xml:space="preserve">
          <source>On click, replace the button with a div containing the same word.</source>
          <target state="translated">Нажав на кнопку,замените ее на div,содержащий то же самое слово.</target>
        </trans-unit>
        <trans-unit id="102d2547e0a84e1566f7873416b123cceafb663f" translate="yes" xml:space="preserve">
          <source>On click, returns the index (zero-based) of that div in the page.</source>
          <target state="translated">Нажав на кнопку,возвращает индекс (нулевой)этого div на странице.</target>
        </trans-unit>
        <trans-unit id="5f58d5afa28fded173fd4597dcef55724138f22f" translate="yes" xml:space="preserve">
          <source>On mobile iOS (iPhone, iPad and iPod Touch) the &lt;code&gt;click&lt;/code&gt; event does not bubble to the document body for most elements and cannot be used with &lt;code&gt;.live()&lt;/code&gt; without applying one of the following workarounds:</source>
          <target state="translated">На мобильных устройствах iOS (iPhone, iPad и iPod Touch) событие &lt;code&gt;click&lt;/code&gt; не перемещается в тело документа для большинства элементов и не может использоваться с &lt;code&gt;.live()&lt;/code&gt; без применения одного из следующих обходных путей:</target>
        </trans-unit>
        <trans-unit id="b35162cf62b4979a83c22e5333710f9e55a94498" translate="yes" xml:space="preserve">
          <source>On mouseout of anchors, alert the element type being entered.</source>
          <target state="translated">При наведении курсора мыши на якоря предупреждают о вводимом типе элемента.</target>
        </trans-unit>
        <trans-unit id="c6f8cf9ddbd619ef84cd1dddc06f9faddd45d9a8" translate="yes" xml:space="preserve">
          <source>On to the actual types.</source>
          <target state="translated">На фактические типы.</target>
        </trans-unit>
        <trans-unit id="7345c1c8cc955e2545be7a27992f7ecf80fcee28" translate="yes" xml:space="preserve">
          <source>Once again, this produces two messages:</source>
          <target state="translated">Опять же,это приводит к двум сообщениям:</target>
        </trans-unit>
        <trans-unit id="802da2d621d13b29f8654cae0f542d77ae265067" translate="yes" xml:space="preserve">
          <source>One important point to consider with both the next adjacent sibling selector (&lt;code&gt;prev + next&lt;/code&gt;) and the general sibling selector (&lt;code&gt;prev ~ siblings&lt;/code&gt;) is that the elements on either side of the combinator must share the same parent.</source>
          <target state="translated">Один важный момент, который следует учитывать как при выборе соседнего соседнего селектора ( &lt;code&gt;prev + next&lt;/code&gt; ), так и общего одноуровневого селектора ( &lt;code&gt;prev ~ siblings&lt;/code&gt; ), заключается в том, что элементы по обе стороны от комбинатора должны иметь одного и того же родителя.</target>
        </trans-unit>
        <trans-unit id="211adef72ab5d2b099c2c13814a4914402f80160" translate="yes" xml:space="preserve">
          <source>One important thing to note regarding the use of &lt;code&gt;:parent&lt;/code&gt; (and &lt;code&gt;:empty&lt;/code&gt;) is that child nodes include text nodes.</source>
          <target state="translated">При использовании &lt;code&gt;:parent&lt;/code&gt; (и &lt;code&gt;:empty&lt;/code&gt; ) важно отметить, что дочерние узлы включают текстовые узлы.</target>
        </trans-unit>
        <trans-unit id="ea11b2cecce68c598f2113e7593a4b62bb1ad762" translate="yes" xml:space="preserve">
          <source>One important thing to note with :empty (and :parent) is that child elements include text nodes.</source>
          <target state="translated">Одна важная вещь,которую следует отметить с помощью :empty (и :parent)-это то,что дочерние элементы включают в себя текстовые узлы.</target>
        </trans-unit>
        <trans-unit id="27b8630731ab90a7ea52724333bdd66b2eca5cb4" translate="yes" xml:space="preserve">
          <source>One model for understanding Deferred is to think of it as a chain-aware function wrapper. The &lt;a href=&quot;deferred.then&quot;&gt;&lt;code&gt;deferred.then()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;deferred.always&quot;&gt;&lt;code&gt;deferred.always()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;deferred.done&quot;&gt;&lt;code&gt;deferred.done()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;deferred.fail&quot;&gt;&lt;code&gt;deferred.fail()&lt;/code&gt;&lt;/a&gt; methods specify the functions to be called and the &lt;a href=&quot;deferred.resolve&quot;&gt;&lt;code&gt;deferred.resolve(args)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;deferred.reject&quot;&gt;&lt;code&gt;deferred.reject(args)&lt;/code&gt;&lt;/a&gt; methods &quot;call&quot; the functions with the arguments you supply. Once the Deferred has been resolved or rejected it stays in that state; a second call to &lt;code&gt;deferred.resolve()&lt;/code&gt;, for example, is ignored. If more functions are added by &lt;code&gt;deferred.then()&lt;/code&gt;, for example, after the Deferred is resolved, they are called immediately with the arguments previously provided.</source>
          <target state="translated">Одна из моделей для понимания Deferred - это думать о нем как о оболочке функций с поддержкой цепочки. &lt;a href=&quot;deferred.then&quot;&gt; &lt;code&gt;deferred.then()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;deferred.always&quot;&gt; &lt;code&gt;deferred.always()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;deferred.done&quot;&gt; &lt;code&gt;deferred.done()&lt;/code&gt; &lt;/a&gt; , и &lt;a href=&quot;deferred.fail&quot;&gt; &lt;code&gt;deferred.fail()&lt;/code&gt; &lt;/a&gt; методы определить функции , которые будут вызваны , и &lt;a href=&quot;deferred.resolve&quot;&gt; &lt;code&gt;deferred.resolve(args)&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;deferred.reject&quot;&gt; &lt;code&gt;deferred.reject(args)&lt;/code&gt; &lt;/a&gt; методы &amp;laquo;вызов &quot;функции с предоставленными вами аргументами. После того, как отложенный был разрешен или отклонен, он остается в этом состоянии; второй вызов &lt;code&gt;deferred.resolve()&lt;/code&gt; , например, игнорируется. Если &lt;code&gt;deferred.then()&lt;/code&gt; добавляет больше функций , например, после разрешения Deferred, они вызываются немедленно с указанными ранее аргументами.</target>
        </trans-unit>
        <trans-unit id="f22e058821eac98518a1872b6a37ec5e17b4588c" translate="yes" xml:space="preserve">
          <source>One or more DOM elements to match the current set of elements against.</source>
          <target state="translated">Один или несколько элементов DOM для сравнения с текущим набором элементов.</target>
        </trans-unit>
        <trans-unit id="0bf79260770ede5a50190efd993c745cf4f0e071" translate="yes" xml:space="preserve">
          <source>One or more additional DOM elements, text nodes, arrays of elements and text nodes, HTML strings, or jQuery objects to insert after each element in the set of matched elements.</source>
          <target state="translated">Один или несколько дополнительных DOM-элементов,текстовых узлов,массивов элементов и текстовых узлов,HTML-строк или jQuery-объектов для вставки после каждого элемента в набор совпадающих элементов.</target>
        </trans-unit>
        <trans-unit id="590405b9505a9e38875e4ab69eba4c3545a237bf" translate="yes" xml:space="preserve">
          <source>One or more additional DOM elements, text nodes, arrays of elements and text nodes, HTML strings, or jQuery objects to insert at the beginning of each element in the set of matched elements.</source>
          <target state="translated">Один или несколько дополнительных DOM-элементов,текстовых узлов,массивов элементов и текстовых узлов,HTML-строк или jQuery-объектов для вставки в начале каждого элемента в набор совпадающих элементов.</target>
        </trans-unit>
        <trans-unit id="abe45385acd2d1a790c72d2749ae527bf7594598" translate="yes" xml:space="preserve">
          <source>One or more additional DOM elements, text nodes, arrays of elements and text nodes, HTML strings, or jQuery objects to insert at the end of each element in the set of matched elements.</source>
          <target state="translated">Один или несколько дополнительных DOM-элементов,текстовых узлов,массивов элементов и текстовых узлов,HTML-строк или jQuery-объектов для вставки в конце каждого элемента в набор совпадающих элементов.</target>
        </trans-unit>
        <trans-unit id="48bdb65d6633ecec1877b1f07ac1fad5443041b1" translate="yes" xml:space="preserve">
          <source>One or more additional DOM elements, text nodes, arrays of elements and text nodes, HTML strings, or jQuery objects to insert before each element in the set of matched elements.</source>
          <target state="translated">Один или несколько дополнительных DOM-элементов,текстовых узлов,массивов элементов и текстовых узлов,HTML-строк или jQuery-объектов для вставки перед каждым элементом в набор совпадающих элементов.</target>
        </trans-unit>
        <trans-unit id="bd6f2982e11e7ed7bda62434ea640a01f39a200e" translate="yes" xml:space="preserve">
          <source>One or more class names (separated by spaces) to be toggled for each element in the matched set.</source>
          <target state="translated">Одно или несколько имен классов (разделенных пробелами),которые необходимо переключить для каждого элемента в соответствующем наборе.</target>
        </trans-unit>
        <trans-unit id="e3f178acac51c3df9e364272dd2ec84123a1240b" translate="yes" xml:space="preserve">
          <source>One or more classes (separated by spaces) to be toggled for each element in the matched set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03b313303603c250bb78a52e5bffbef9643c6fda" translate="yes" xml:space="preserve">
          <source>One or more elements to add to the set of matched elements.</source>
          <target state="translated">Один или несколько элементов для добавления в набор согласованных элементов.</target>
        </trans-unit>
        <trans-unit id="356190d117684a7b10afca5525e9592531e9863b" translate="yes" xml:space="preserve">
          <source>One or more elements to match the current set of elements against.</source>
          <target state="translated">Один или несколько элементов для сравнения с текущим набором элементов.</target>
        </trans-unit>
        <trans-unit id="10ccc592c7475392ce01c9eab6fd05ef672dbf27" translate="yes" xml:space="preserve">
          <source>One or more space-separated classes to be added to the class attribute of each matched element.</source>
          <target state="translated">Один или несколько классов,разделенных пробелами,для добавления в атрибут класса каждого совпадающего элемента.</target>
        </trans-unit>
        <trans-unit id="3c837cc3d0bdaf48386823e0243e81666a7a7597" translate="yes" xml:space="preserve">
          <source>One or more space-separated classes to be removed from the class attribute of each matched element.</source>
          <target state="translated">Один или несколько классов,разделенных пробелами,которые должны быть удалены из атрибута класса каждого совпадающего элемента.</target>
        </trans-unit>
        <trans-unit id="21920e3c8d27960a028b73dfdf1267cec061bfb7" translate="yes" xml:space="preserve">
          <source>One or more space-separated event types and optional namespaces, or just namespaces, such as &quot;click&quot;, &quot;keydown.myPlugin&quot;, or &quot;.myPlugin&quot;.</source>
          <target state="translated">Один или несколько разделенных пробелами типов событий и необязательных пространств имен,или просто пространств имен,таких как &quot;click&quot;,&quot;keyydown.myPlugin&quot; или &quot;.myPlugin&quot;.</target>
        </trans-unit>
        <trans-unit id="7a8946129ad9cdb22b549accf2c1b5393365ca5d" translate="yes" xml:space="preserve">
          <source>One or more space-separated event types and optional namespaces, such as &quot;click&quot; or &quot;keydown.myPlugin&quot;.</source>
          <target state="translated">Один или несколько разделенных пробелами типов событий и дополнительных пространств имён,таких как &quot;click&quot; или &quot;keyydown.myPlugin&quot;.</target>
        </trans-unit>
        <trans-unit id="49e74f1147de9675f1f1adc7373ef00b124ecb7c" translate="yes" xml:space="preserve">
          <source>Only applies when the &quot;script&quot; transport is used (e.g., cross-domain requests with &quot;jsonp&quot; or &quot;script&quot; dataType and &quot;GET&quot; type). Sets the &lt;code&gt;charset&lt;/code&gt; attribute on the script tag used in the request. Used when the character set on the local page is not the same as the one on the remote script.</source>
          <target state="translated">Применяется только при использовании транспорта &amp;laquo;скрипт&amp;raquo; (например, междоменные запросы с типом данных &amp;laquo;jsonp&amp;raquo; или &amp;laquo;скрипт&amp;raquo; и типом &amp;laquo;GET&amp;raquo;). Устанавливает атрибут &lt;code&gt;charset&lt;/code&gt; для тега скрипта, используемого в запросе. Используется, когда набор символов на локальной странице отличается от набора символов на удаленном скрипте.</target>
        </trans-unit>
        <trans-unit id="8755ce38f6ec06731d96bc01f0518d71be0b5140" translate="yes" xml:space="preserve">
          <source>Only applies when the &quot;script&quot; transport is used. Sets the &lt;code&gt;charset&lt;/code&gt; attribute on the script tag used in the request. Used when the character set on the local page is not the same as the one on the remote script. Alternatively, the &lt;code&gt;charset&lt;/code&gt; attribute can be specified in &lt;code&gt;scriptAttrs&lt;/code&gt; instead, which will also ensure the use of the &quot;script&quot; transport.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7651d83a3e89e2bf4ea3e8af4b0c0b8aa1a7c45" translate="yes" xml:space="preserve">
          <source>Opera: 10.06, 11.01</source>
          <target state="translated">Опера:10.06,11.01</target>
        </trans-unit>
        <trans-unit id="2353331784a63eeb08a22b78bf1cb383b2d3c81a" translate="yes" xml:space="preserve">
          <source>Optional additional functions, or arrays of functions, that are called when the Deferred is rejected.</source>
          <target state="translated">Дополнительные дополнительные функции или массивы функций,которые вызываются при отклонении &quot;Отсрочка&quot;.</target>
        </trans-unit>
        <trans-unit id="a150ad05233ef54482f5c8d8071ca7e9232efb68" translate="yes" xml:space="preserve">
          <source>Optional additional functions, or arrays of functions, that are called when the Deferred is resolved or rejected.</source>
          <target state="translated">Дополнительные дополнительные функции или массивы функций,которые вызываются при разрешении или отклонении отложенного запроса.</target>
        </trans-unit>
        <trans-unit id="c0c1cff77c109f72cef834e3fdf87f039420fa48" translate="yes" xml:space="preserve">
          <source>Optional additional functions, or arrays of functions, that are called when the Deferred is resolved.</source>
          <target state="translated">Дополнительные дополнительные функции,или массивы функций,которые вызываются при разрешении проблемы &quot;Отсрочка&quot;.</target>
        </trans-unit>
        <trans-unit id="0813b2bf248956038768453c5b7b3db2ac9aaeec" translate="yes" xml:space="preserve">
          <source>Optional additional functions, or arrays of functions, to be called when the Deferred generates progress notifications.</source>
          <target state="translated">Дополнительные дополнительные функции или массивы функций,которые будут вызываться,когда отложенный генерирует уведомления о прогрессе.</target>
        </trans-unit>
        <trans-unit id="7f369099034aae5bedf66670ec63705aab243dbf" translate="yes" xml:space="preserve">
          <source>Optional arguments that are passed to the doneCallbacks.</source>
          <target state="translated">Необязательные аргументы,которые передаются в doneCallbacks.</target>
        </trans-unit>
        <trans-unit id="744141bff3f72d6719090186f1fcba53aaf4ddc6" translate="yes" xml:space="preserve">
          <source>Optional arguments that are passed to the failCallbacks.</source>
          <target state="translated">Необязательные аргументы,которые передаются в failCallbacks.</target>
        </trans-unit>
        <trans-unit id="2527ec539a4716b560c20f6dbd43b8a9aab0df8f" translate="yes" xml:space="preserve">
          <source>Optional arguments that are passed to the progressCallbacks.</source>
          <target state="translated">Необязательные аргументы,которые передаются в ProgressCallbacks.</target>
        </trans-unit>
        <trans-unit id="621cd454a75bdd31392b97082f27e19b856c07ca" translate="yes" xml:space="preserve">
          <source>Or you use the String class provided by javascript, which try to parse a value as string:</source>
          <target state="translated">Или вы используете класс String,предоставляемый javascript,который пытается разобрать значение как строку:</target>
        </trans-unit>
        <trans-unit id="9dd39d797efd7dccaa1618b4e628ca61cbd30967" translate="yes" xml:space="preserve">
          <source>Or you write and read properties using the array notation, which allows you to dynamically choose the property:</source>
          <target state="translated">Или вы записываете и читаете свойства,используя нотацию массива,которая позволяет динамически выбирать свойства:</target>
        </trans-unit>
        <trans-unit id="d493b777eab6dc156a668fdbd4d790d46ece2523" translate="yes" xml:space="preserve">
          <source>Or, we could select an element to use as the replacement:</source>
          <target state="translated">Или мы можем выбрать элемент для замены:</target>
        </trans-unit>
        <trans-unit id="00fcdda14949d42c1610edfba9ca80d41d59564f" translate="yes" xml:space="preserve">
          <source>Or:</source>
          <target state="translated">Or:</target>
        </trans-unit>
        <trans-unit id="2e4443e4e50ba760b8445cff513b37784cdd2e52" translate="yes" xml:space="preserve">
          <source>Other Properties</source>
          <target state="translated">Прочие свойства</target>
        </trans-unit>
        <trans-unit id="be58a6b8362f6415457d3a081b2399ecb4853efe" translate="yes" xml:space="preserve">
          <source>Other built-in methods are reverse, join, shift, unshift, pop, slice, splice and sort:</source>
          <target state="translated">Другие встроенные методы:обратный ход,соединение,сдвиг,снятие с места,всплытие,нарезка,сращивание и сортировка:</target>
        </trans-unit>
        <trans-unit id="c119b7bd04b345a4aba1284bc7d3bffab5a836d3" translate="yes" xml:space="preserve">
          <source>Outer</source>
          <target state="translated">Outer</target>
        </trans-unit>
        <trans-unit id="6f694a4190c8f21333d2753e0aa40865a1174d20" translate="yes" xml:space="preserve">
          <source>Override jQuery.error for display in Firebug.</source>
          <target state="translated">Переопределить jQuery.error для отображения в Firebug.</target>
        </trans-unit>
        <trans-unit id="410462044b9074fa8d06ea191e542debc1f0cec2" translate="yes" xml:space="preserve">
          <source>Override some jQuery methods to provide new functionality.</source>
          <target state="translated">Отмените некоторые методы jQuery для обеспечения новой функциональности.</target>
        </trans-unit>
        <trans-unit id="d5005ff9604476fd5e7977f9b4c327e8989c9682" translate="yes" xml:space="preserve">
          <source>Override the callback function name in a JSONP request. This value will be used instead of 'callback' in the 'callback=?' part of the query string in the url. So &lt;code&gt;{jsonp:'onJSONPLoad'}&lt;/code&gt; would result in &lt;code&gt;'onJSONPLoad=?'&lt;/code&gt; passed to the server. &lt;strong&gt;As of jQuery 1.5&lt;/strong&gt;, setting the &lt;code&gt;jsonp&lt;/code&gt; option to &lt;code&gt;false&lt;/code&gt; prevents jQuery from adding the &quot;?callback&quot; string to the URL or attempting to use &quot;=?&quot; for transformation. In this case, you should also explicitly set the &lt;code&gt;jsonpCallback&lt;/code&gt; setting. For example, &lt;code&gt;{ jsonp: false, jsonpCallback: &quot;callbackName&quot; }&lt;/code&gt;. If you don't trust the target of your Ajax requests, consider setting the &lt;code&gt;jsonp&lt;/code&gt; property to &lt;code&gt;false&lt;/code&gt; for security reasons.</source>
          <target state="translated">Переопределите имя функции обратного вызова в запросе JSONP. Это значение будет использоваться вместо callback в callback =? часть строки запроса в URL-адресе. Итак, &lt;code&gt;{jsonp:'onJSONPLoad'}&lt;/code&gt; приведет к &lt;code&gt;'onJSONPLoad=?'&lt;/code&gt; перешли на сервер. &lt;strong&gt;По JQuery 1.5&lt;/strong&gt; , установив &lt;code&gt;jsonp&lt;/code&gt; опцию &lt;code&gt;false&lt;/code&gt; предотвращает JQuery от добавления &amp;laquo;?&amp;raquo; Обратного вызова строки к URL - адресу или попытки использования &amp;laquo;=?&amp;raquo; для трансформации. В этом случае вы также должны явно установить параметр &lt;code&gt;jsonpCallback&lt;/code&gt; . Например, &lt;code&gt;{ jsonp: false, jsonpCallback: &quot;callbackName&quot; }&lt;/code&gt; . Если вы не доверяете цели своих запросов Ajax,рассмотрите возможность установки свойства &lt;code&gt;jsonp&lt;/code&gt; на &lt;code&gt;false&lt;/code&gt; по соображениям безопасности.</target>
        </trans-unit>
        <trans-unit id="934d248876b810b0c7ad5d0a5a6a579fab8d43dc" translate="yes" xml:space="preserve">
          <source>Pages fetched with &lt;code&gt;POST&lt;/code&gt; are never cached, so the &lt;code&gt;cache&lt;/code&gt; and &lt;code&gt;ifModified&lt;/code&gt; options in &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;jQuery.ajaxSetup()&lt;/a&gt;&lt;/code&gt; have no effect on these requests.</source>
          <target state="translated">Страницы, полученные с помощью &lt;code&gt;POST&lt;/code&gt; , никогда не кэшируются, поэтому параметры &lt;code&gt;cache&lt;/code&gt; и &lt;code&gt;ifModified&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;jQuery.ajaxSetup()&lt;/a&gt;&lt;/code&gt; не влияют на эти запросы.</target>
        </trans-unit>
        <trans-unit id="f157f22d1e7cadabaf9b14d950e4fb77941992fe" translate="yes" xml:space="preserve">
          <source>Parse a JSON string.</source>
          <target state="translated">Разобрать JSON-строку.</target>
        </trans-unit>
        <trans-unit id="e2c94cc61e84c8a1a04f4d5e976bee6a311a7592" translate="yes" xml:space="preserve">
          <source>Parses a string into an XML document.</source>
          <target state="translated">Разбирает строку в XML-документе.</target>
        </trans-unit>
        <trans-unit id="4fa1cca297a65b8600cd23f5cceede29408c237b" translate="yes" xml:space="preserve">
          <source>Parses a string into an array of DOM nodes.</source>
          <target state="translated">Обрабатывает строку в массиве DOM-узлов.</target>
        </trans-unit>
        <trans-unit id="17f9460d6a421df96fbfb8d68d99ce89b4c54cf1" translate="yes" xml:space="preserve">
          <source>Parsing Numbers</source>
          <target state="translated">Парсинговые номера</target>
        </trans-unit>
        <trans-unit id="a0be064309844211f23e104c7c321f409cc5550a" translate="yes" xml:space="preserve">
          <source>Parsing something that isn't a number results in NaN. isNaN helps to detect those cases:</source>
          <target state="translated">Разбор чего-то,что не является числом,приводит к NaN.isNaN помогает обнаружить эти случаи:</target>
        </trans-unit>
        <trans-unit id="25454cd3dbc5c1cc2d742428f4b68f93dd161877" translate="yes" xml:space="preserve">
          <source>Pass a jQuery object to closest. The closest list element toggles a yellow background when it or its descendent is clicked.</source>
          <target state="translated">Передайте объект jQuery на ближайший.Элемент ближайшего списка переключает желтый фон при щелчке по нему или его потомку.</target>
        </trans-unit>
        <trans-unit id="8f461239c0ba4eda09fe6ae7ea6d4dc4aab1f400" translate="yes" xml:space="preserve">
          <source>Pass arrays of data to the server (while still ignoring the return results).</source>
          <target state="translated">Передача массивов данных на сервер (при этом игнорируя возвращаемые результаты).</target>
        </trans-unit>
        <trans-unit id="5459b34514fbb48a2884b8af85f8007063d364a0" translate="yes" xml:space="preserve">
          <source>Pass data to the event handler using the second argument to &lt;code&gt;.trigger()&lt;/code&gt;</source>
          <target state="translated">Передайте данные обработчику событий, используя второй аргумент функции &lt;code&gt;.trigger()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="152c072aad3718d0eb0fbfd3d7556bfd272df9f1" translate="yes" xml:space="preserve">
          <source>Pass data to the event handler, which is specified here by name:</source>
          <target state="translated">Передайте данные обработчику события,который указан здесь по имени:</target>
        </trans-unit>
        <trans-unit id="7ad84e71aff61e69f038999c72297df126f47453" translate="yes" xml:space="preserve">
          <source>Pass each element in the current matched set through a function, producing a new jQuery object containing the return values.</source>
          <target state="translated">Передайте каждый элемент текущего совпадающего набора через функцию,создав новый объект jQuery,содержащий возвращаемые значения.</target>
        </trans-unit>
        <trans-unit id="c02606da718909946602b2f4afe4d19e6804a26b" translate="yes" xml:space="preserve">
          <source>Pass in a function to &lt;code&gt;.addClass()&lt;/code&gt; to add the &quot;green&quot; class to a div that already has a &quot;red&quot; class.</source>
          <target state="translated">Передайте функцию в &lt;code&gt;.addClass()&lt;/code&gt; чтобы добавить &amp;laquo;зеленый&amp;raquo; класс к div, у которого уже есть &amp;laquo;красный&amp;raquo; класс.</target>
        </trans-unit>
        <trans-unit id="adfe3a571e9161297540ed9ece18ac0ef5695140" translate="yes" xml:space="preserve">
          <source>Pass the received error to &lt;code&gt;console.error&lt;/code&gt;.</source>
          <target state="translated">Передайте полученную ошибку в &lt;code&gt;console.error&lt;/code&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
