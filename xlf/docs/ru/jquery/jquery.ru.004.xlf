<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="jquery">
    <body>
      <group id="jquery">
        <trans-unit id="e17b8a0e34bfa65fea451f6c53d2fcb021fcde57" translate="yes" xml:space="preserve">
          <source>Places a border around all list items that are children of &amp;lt;ul class=&quot;topnav&quot;&amp;gt; .</source>
          <target state="translated">Помещает границу вокруг всех элементов списка, которые являются дочерними для &amp;lt;ul class = &quot;topnav&quot;&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="88e22ddf6d8a412676c8f0c76b426f4bc5fc842b" translate="yes" xml:space="preserve">
          <source>PlainObject</source>
          <target state="translated">PlainObject</target>
        </trans-unit>
        <trans-unit id="3180f052c4c83832239076f7eacc4313566a9114" translate="yes" xml:space="preserve">
          <source>Please note that although you can pass text nodes and comment nodes into a jQuery collection this way, most operations don't support them. The few that do will have an explicit note on their API documentation page.</source>
          <target state="translated">Обратите внимание,что хотя таким образом вы можете передавать текстовые узлы и узлы комментариев в коллекцию jQuery,большинство операций их не поддерживают.Те немногие,которые это делают,будут иметь явное примечание на своей странице документации по API.</target>
        </trans-unit>
        <trans-unit id="2bd1c35913397741b31109eaf3cbb050bdd82de0" translate="yes" xml:space="preserve">
          <source>Possible flags:</source>
          <target state="translated">Возможные флаги:</target>
        </trans-unit>
        <trans-unit id="f8156ee9b4d1cf9712c808ab6f59d8c0e0265624" translate="yes" xml:space="preserve">
          <source>Post a form using Ajax and put results in a div</source>
          <target state="translated">Отправьте форму с помощью Ajax и положите результаты в div</target>
        </trans-unit>
        <trans-unit id="8eda3141aabc4b52dc3c81a854edd4140396a7f3" translate="yes" xml:space="preserve">
          <source>Post to the test.php page and get content which has been returned in json format (&amp;lt;?php echo json_encode(array(&quot;name&quot;=&amp;gt;&quot;John&quot;,&quot;time&quot;=&amp;gt;&quot;2pm&quot;)); ?&amp;gt;).</source>
          <target state="translated">Отправьте сообщение на страницу test.php и получите контент, который был возвращен в формате json (&amp;lt;? Php echo json_encode (array (&quot;name&quot; =&amp;gt; &quot;John&quot;, &quot;time&quot; =&amp;gt; &quot;2pm&quot;));?&amp;gt;).</target>
        </trans-unit>
        <trans-unit id="f322b9f3495aba7144e876707bc47a2a7d952d9d" translate="yes" xml:space="preserve">
          <source>Prefilters are a perfect fit when custom options need to be handled. Given the following code, for example, a call to &lt;code&gt;$.ajax()&lt;/code&gt; would automatically abort a request to the same URL if the custom &lt;code&gt;abortOnRetry&lt;/code&gt; option is set to &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">Предварительные фильтры идеально подходят, когда необходимо обрабатывать индивидуальные параметры. Например, учитывая следующий код, вызов &lt;code&gt;$.ajax()&lt;/code&gt; автоматически прервет запрос к тому же URL-адресу, если для настраиваемой опции &lt;code&gt;abortOnRetry&lt;/code&gt; установлено значение &lt;code&gt;true&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5bcb18ee1f9a94de27b30e82157a747c5b3e613a" translate="yes" xml:space="preserve">
          <source>Prefilters can also be used to modify existing options. For example, the following proxies cross-domain requests through https://mydomain.net/proxy/:</source>
          <target state="translated">Префильтры также могут быть использованы для изменения существующих опций.Например,следующие прокси-запросы через кросс-домены через https://mydomain.net/proxy/:</target>
        </trans-unit>
        <trans-unit id="232e132d8704ff6d6a305ebb6baea10771f24387" translate="yes" xml:space="preserve">
          <source>Prepend all spans to the element with the ID &quot;foo&quot; (Check .prepend() documentation for more examples)</source>
          <target state="translated">Подготовьте все пролёты к элементу с идентификатором &quot;foo&quot; (Проверьте документацию .prepend()на дополнительные примеры).</target>
        </trans-unit>
        <trans-unit id="3a1b005580f79d2b9feb9ee84fc3ad816f8ee6c6" translate="yes" xml:space="preserve">
          <source>Prepends a DOM Element to all paragraphs.</source>
          <target state="translated">Готовит элемент DOM ко всем параграфам.</target>
        </trans-unit>
        <trans-unit id="7cad6f704aab1d92b6effccc3995a5b6e6f987b2" translate="yes" xml:space="preserve">
          <source>Prepends a jQuery object (similar to an Array of DOM Elements) to all paragraphs.</source>
          <target state="translated">Подготавливает объект jQuery (похожий на массив элементов DOM)ко всем параграфам.</target>
        </trans-unit>
        <trans-unit id="76f13c2409c82584ac6e5093150789bb63510be8" translate="yes" xml:space="preserve">
          <source>Prepends some HTML to all paragraphs.</source>
          <target state="translated">Подготавливает HTML ко всем параграфам.</target>
        </trans-unit>
        <trans-unit id="82f8527f6240b044a741cb8b663a0e5e11d03bde" translate="yes" xml:space="preserve">
          <source>Prevents other event handlers from being called.</source>
          <target state="translated">Предотвращает звонки другим организаторам мероприятий.</target>
        </trans-unit>
        <trans-unit id="0fd2d09f7e570399a076e57e7b952b3c96b2fef8" translate="yes" xml:space="preserve">
          <source>Prevents the event from bubbling up the DOM tree, preventing any parent handlers from being notified of the event.</source>
          <target state="translated">Предотвращает образование пузырьков в дереве DOM,не позволяя родительским обработчикам быть уведомленными о событии.</target>
        </trans-unit>
        <trans-unit id="bf21227c4464de1be5b8be0cedaef5b1eb6baf31" translate="yes" xml:space="preserve">
          <source>Prior to jQuery 1.4, the arguments should be true Javascript Array objects; use &lt;code&gt;$.makeArray&lt;/code&gt; if they are not.</source>
          <target state="translated">До jQuery 1.4 аргументы должны быть истинными объектами массива Javascript; используйте &lt;code&gt;$.makeArray&lt;/code&gt; если это не так.</target>
        </trans-unit>
        <trans-unit id="b123d694309d3954b58e4e45e2e6f52607ff20e0" translate="yes" xml:space="preserve">
          <source>Prior to jQuery 1.4.3 (starting in jQuery 1.4) the &lt;code&gt;.data()&lt;/code&gt; method completely replaced all data, instead of just extending the data object. If you are using third-party plugins it may not be advisable to completely replace the element's data object, since plugins may have also set data.</source>
          <target state="translated">До jQuery 1.4.3 (начиная с jQuery 1.4) метод &lt;code&gt;.data()&lt;/code&gt; полностью заменял все данные, а не просто расширял объект данных. Если вы используете сторонние плагины, возможно, нецелесообразно полностью заменять объект данных элемента, поскольку плагины также могут устанавливать данные.</target>
        </trans-unit>
        <trans-unit id="1530433b2facdd30bee4aad9ae661ef1b3234fda" translate="yes" xml:space="preserve">
          <source>Prior to jQuery 1.4.3, &lt;code&gt;.data( obj )&lt;/code&gt; completely replaced all data. Since jQuery 1.4.3, data is instead extended by shallow merge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb40c73abf82d2ae0bf8b9f2097143bcdd0c6521" translate="yes" xml:space="preserve">
          <source>Prior to jQuery 1.5, the global &lt;code&gt;.ajaxError()&lt;/code&gt; callback event had to be used in order to handle &lt;code&gt;$.getScript()&lt;/code&gt; errors:</source>
          <target state="translated">До jQuery 1.5 необходимо было использовать глобальное &lt;code&gt;.ajaxError()&lt;/code&gt; обратного вызова .ajaxError () для обработки ошибок &lt;code&gt;$.getScript()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="42d18165ce6b4de6e02584eb2f59175fe1d13460" translate="yes" xml:space="preserve">
          <source>Prior to jQuery 1.7, in selector strings with positional selectors such as &lt;code&gt;:first&lt;/code&gt;, &lt;code&gt;:gt()&lt;/code&gt;, or &lt;code&gt;:even&lt;/code&gt;, the positional filtering is done against the jQuery object passed to &lt;code&gt;.is()&lt;/code&gt;, &lt;em&gt;not&lt;/em&gt; against the containing document. So for the HTML shown above, an expression such as &lt;code&gt;$( &quot;li:first&quot; ).is( &quot;li:last&quot; )&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;, but &lt;code&gt;$( &quot;li:first-child&quot; ).is( &quot;li:last-child&quot; )&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;. In addition, a bug in Sizzle prevented many positional selectors from working properly. These two factors made positional selectors almost unusable in filters.</source>
          <target state="translated">Перед JQuery 1.7, в строках селекторных с позиционными селекторов , таких как &lt;code&gt;:first&lt;/code&gt; , &lt;code&gt;:gt()&lt;/code&gt; , или &lt;code&gt;:even&lt;/code&gt; , позиционная фильтрация выполняется по отношению к объекту JQuery , переданного &lt;code&gt;.is()&lt;/code&gt; , &lt;em&gt;не&lt;/em&gt; против содержащего документа. Итак, для HTML, показанного выше, выражение, такое как &lt;code&gt;$( &quot;li:first&quot; ).is( &quot;li:last&quot; )&lt;/code&gt; возвращает &lt;code&gt;true&lt;/code&gt; , но &lt;code&gt;$( &quot;li:first-child&quot; ).is( &quot;li:last-child&quot; )&lt;/code&gt; возвращает &lt;code&gt;false&lt;/code&gt; . Кроме того, из-за ошибки в Sizzle многие позиционные селекторы не работали должным образом. Эти два фактора сделали позиционные селекторы практически непригодными для использования в фильтрах.</target>
        </trans-unit>
        <trans-unit id="d6ee2d082684a3d606d94b34e878d67b987a0362" translate="yes" xml:space="preserve">
          <source>Prior to jQuery 1.8, the &lt;code&gt;:eq(index)&lt;/code&gt; selector did &lt;em&gt;not&lt;/em&gt; accept a negative value for &lt;code&gt;index&lt;/code&gt; (though the &lt;a href=&quot;eq&quot;&gt;&lt;code&gt;.eq(index)&lt;/code&gt;&lt;/a&gt; method did).</source>
          <target state="translated">До jQuery 1.8 селектор &lt;code&gt;:eq(index)&lt;/code&gt; &lt;em&gt;не&lt;/em&gt; принимал отрицательное значение для &lt;code&gt;index&lt;/code&gt; (хотя метод &lt;a href=&quot;eq&quot;&gt; &lt;code&gt;.eq(index)&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="3a212e9e0e5070c7c9452ef703226665bf7ea108" translate="yes" xml:space="preserve">
          <source>Prior to jQuery 1.8, the &lt;code&gt;:gt(index)&lt;/code&gt; selector did &lt;em&gt;not&lt;/em&gt; accept a negative value for &lt;code&gt;index&lt;/code&gt;</source>
          <target state="translated">До jQuery 1.8 селектор &lt;code&gt;:gt(index)&lt;/code&gt; &lt;em&gt;не&lt;/em&gt; принимал отрицательное значение для &lt;code&gt;index&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af3da3106e959302465ecda0b177352ad8bffd36" translate="yes" xml:space="preserve">
          <source>Prior to jQuery 1.8, the &lt;code&gt;:lt(index)&lt;/code&gt; selector did &lt;em&gt;not&lt;/em&gt; accept a negative value for &lt;code&gt;index&lt;/code&gt;</source>
          <target state="translated">До jQuery 1.8 селектор &lt;code&gt;:lt(index)&lt;/code&gt; &lt;em&gt;не&lt;/em&gt; принимал отрицательное значение для &lt;code&gt;index&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8738bf3874c5692fd941d4379f8a846ab800608b" translate="yes" xml:space="preserve">
          <source>Prior to jQuery 1.9, &lt;code&gt;$.parseJSON&lt;/code&gt; returned &lt;code&gt;null&lt;/code&gt; instead of throwing an error if it was passed an empty string, &lt;code&gt;null&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt;, even though those are not valid JSON.</source>
          <target state="translated">До jQuery 1.9 &lt;code&gt;$.parseJSON&lt;/code&gt; возвращал &lt;code&gt;null&lt;/code&gt; вместо выдачи ошибки, если ему была передана пустая строка, &lt;code&gt;null&lt;/code&gt; или &lt;code&gt;undefined&lt;/code&gt; , даже если они не являются допустимым JSON.</target>
        </trans-unit>
        <trans-unit id="d08f9318122f146f6802cf4161100074eebb1bc1" translate="yes" xml:space="preserve">
          <source>Prior to jQuery 1.9, &lt;code&gt;.after()&lt;/code&gt; would attempt to add or change nodes in the current jQuery set if the first node in the set was not connected to a document, and in those cases return a new jQuery set rather than the original set. The method might or might not have returned a new result depending on the number or connectedness of its arguments! As of jQuery 1.9, &lt;code&gt;.after()&lt;/code&gt;, &lt;code&gt;.before()&lt;/code&gt;, and &lt;code&gt;.replaceWith()&lt;/code&gt; always return the original unmodified set. Attempting to use these methods on a node without a parent has no effect&amp;mdash;that is, neither the set nor the nodes it contains are changed.</source>
          <target state="translated">До jQuery 1.9 &lt;code&gt;.after()&lt;/code&gt; пыталась добавить или изменить узлы в текущем наборе jQuery, если первый узел в наборе не был подключен к документу, и в этих случаях возвращал новый набор jQuery, а не исходный набор. Метод мог вернуть или не вернуть новый результат в зависимости от количества или связности его аргументов! Начиная с jQuery 1.9, &lt;code&gt;.after()&lt;/code&gt; , &lt;code&gt;.before()&lt;/code&gt; и &lt;code&gt;.replaceWith()&lt;/code&gt; всегда возвращают исходный немодифицированный набор. Попытка использовать эти методы на узле без родителя не имеет никакого эффекта, то есть ни набор, ни содержащиеся в нем узлы не меняются.</target>
        </trans-unit>
        <trans-unit id="2cdd46443ef8cc4f83d8ffa807e15ca6f9d3e830" translate="yes" xml:space="preserve">
          <source>Prior to jQuery 1.9, &lt;code&gt;.before()&lt;/code&gt; would attempt to add or change nodes in the current jQuery set if the first node in the set was not connected to a document, and in those cases return a new jQuery set rather than the original set. The method might or might not have returned a new result depending on the number or connectedness of its arguments! As of jQuery 1.9, &lt;code&gt;.after()&lt;/code&gt;, &lt;code&gt;.before()&lt;/code&gt;, and &lt;code&gt;.replaceWith()&lt;/code&gt; always return the original unmodified set. Attempting to use these methods on a node without a parent has no effect&amp;mdash;that is, neither the set nor the nodes it contains are changed.</source>
          <target state="translated">До jQuery 1.9 &lt;code&gt;.before()&lt;/code&gt; пытался добавить или изменить узлы в текущем наборе jQuery, если первый узел в наборе не был подключен к документу, и в этих случаях возвращал новый набор jQuery, а не исходный набор. Метод мог вернуть или не вернуть новый результат в зависимости от количества или связности его аргументов! Начиная с jQuery 1.9, &lt;code&gt;.after()&lt;/code&gt; , &lt;code&gt;.before()&lt;/code&gt; и &lt;code&gt;.replaceWith()&lt;/code&gt; всегда возвращают исходный немодифицированный набор. Попытка использовать эти методы на узле без родителя не имеет никакого эффекта, то есть ни набор, ни содержащиеся в нем узлы не меняются.</target>
        </trans-unit>
        <trans-unit id="4b6d5d6b69a94dddcc6ea715db291c8faa64fec9" translate="yes" xml:space="preserve">
          <source>Prior to jQuery 1.9, &lt;code&gt;.replaceWith()&lt;/code&gt; would attempt to add or change nodes in the current jQuery set if the first node in the set was not connected to a document, and in those cases return a new jQuery set rather than the original set. The method might or might not have returned a new result depending on the number or connectedness of its arguments! As of jQuery 1.9, &lt;code&gt;.after()&lt;/code&gt;, &lt;code&gt;.before()&lt;/code&gt;, and &lt;code&gt;.replaceWith()&lt;/code&gt; always return the original unmodified set. Attempting to use these methods on a node without a parent has no effect&amp;mdash;that is, neither the set nor the nodes it contains are changed.</source>
          <target state="translated">До jQuery 1.9 &lt;code&gt;.replaceWith()&lt;/code&gt; пыталась добавить или изменить узлы в текущем наборе jQuery, если первый узел в наборе не был подключен к документу, и в этих случаях возвращал новый набор jQuery, а не исходный набор. Метод мог вернуть или не вернуть новый результат в зависимости от количества или связности его аргументов! Начиная с jQuery 1.9, &lt;code&gt;.after()&lt;/code&gt; , &lt;code&gt;.before()&lt;/code&gt; и &lt;code&gt;.replaceWith()&lt;/code&gt; всегда возвращают исходный немодифицированный набор. Попытка использовать эти методы на узле без родителя не имеет никакого эффекта, то есть ни набор, ни содержащиеся в нем узлы не меняются.</target>
        </trans-unit>
        <trans-unit id="779026168e3049f2cac03a3a10cfd6a8fff5e6cf" translate="yes" xml:space="preserve">
          <source>Prior to jQuery 3.0, this method was called &lt;code&gt;&lt;a href=&quot;jquery.unique&quot;&gt;jQuery.unique()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">До jQuery 3.0 этот метод назывался &lt;code&gt;&lt;a href=&quot;jquery.unique&quot;&gt;jQuery.unique()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3fa495912556317b590f7533e62b99917f547f60" translate="yes" xml:space="preserve">
          <source>Prior to jQuery 3.5.0, unsuccessful HTTP responses with a script &lt;code&gt;Content-Type&lt;/code&gt; were still executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351a92ceed41b2e610186c68ece5e88842211bfa" translate="yes" xml:space="preserve">
          <source>Promise Object</source>
          <target state="translated">Объект обещания</target>
        </trans-unit>
        <trans-unit id="e606f4866747c2f92752089eea46ab0c93882ee6" translate="yes" xml:space="preserve">
          <source>Properties generally affect the dynamic state of a DOM element without changing the serialized HTML attribute. Examples include the &lt;code&gt;value&lt;/code&gt; property of input elements, the &lt;code&gt;disabled&lt;/code&gt; property of inputs and buttons, or the &lt;code&gt;checked&lt;/code&gt; property of a checkbox. The &lt;code&gt;.prop()&lt;/code&gt; method should be used to set disabled and checked instead of the &lt;code&gt;&lt;a href=&quot;attr&quot;&gt;.attr()&lt;/a&gt;&lt;/code&gt; method. The &lt;code&gt;&lt;a href=&quot;val&quot;&gt;.val()&lt;/a&gt;&lt;/code&gt; method should be used for getting and setting value.</source>
          <target state="translated">Свойства обычно влияют на динамическое состояние элемента DOM без изменения сериализованного атрибута HTML. Примеры включают свойство &lt;code&gt;value&lt;/code&gt; элементов ввода, свойство &lt;code&gt;disabled&lt;/code&gt; для входов и кнопок или свойство &lt;code&gt;checked&lt;/code&gt; для флажка. Метод &lt;code&gt;.prop()&lt;/code&gt; следует использовать для отключения и проверки вместо метода &lt;code&gt;&lt;a href=&quot;attr&quot;&gt;.attr()&lt;/a&gt;&lt;/code&gt; . Для получения и установки значения следует использовать метод &lt;code&gt;&lt;a href=&quot;val&quot;&gt;.val()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c0c8d78301081a9fe22695fffe4f726d4ea87b3" translate="yes" xml:space="preserve">
          <source>Prototype</source>
          <target state="translated">Prototype</target>
        </trans-unit>
        <trans-unit id="4dddbaec9dd46c9aeafdb1a4344538e3a3f99344" translate="yes" xml:space="preserve">
          <source>Provides a way to execute callback functions based on zero or more Thenable objects, usually Deferred objects that represent asynchronous events.</source>
          <target state="translated">Обеспечивает способ выполнения функций обратного вызова,основанных на объектах с нулевым значением или более,как правило,на объектах с отложенным значением,которые представляют собой асинхронные события.</target>
        </trans-unit>
        <trans-unit id="ec60235a3878a6dcf393d4a6bf9220cf073f8d11" translate="yes" xml:space="preserve">
          <source>Providing a negative number indicates a position starting from the end of the set, rather than the beginning. For example:</source>
          <target state="translated">Предоставление отрицательного числа указывает на позицию,начинающуюся с конца набора,а не с начала.Например:</target>
        </trans-unit>
        <trans-unit id="86f54466e0004ea3152a3be478a81bd98fb0f962" translate="yes" xml:space="preserve">
          <source>Proxy Pattern</source>
          <target state="translated">Прокси-маскарад</target>
        </trans-unit>
        <trans-unit id="7e558b6e85beca559a259cad628894195c6fe7e4" translate="yes" xml:space="preserve">
          <source>QUnit API docs</source>
          <target state="translated">документы по API QUnit</target>
        </trans-unit>
        <trans-unit id="d0997ef78b0a4c39908ad9bff14d30fbb5aee18f" translate="yes" xml:space="preserve">
          <source>Queue a custom function.</source>
          <target state="translated">Очередить пользовательскую функцию.</target>
        </trans-unit>
        <trans-unit id="80e638f5c4369734d6653dc96c04c7acd78b38e7" translate="yes" xml:space="preserve">
          <source>Qunit's Assert Object</source>
          <target state="translated">Объект Assert Object Qunit's</target>
        </trans-unit>
        <trans-unit id="60fefb29eda0237f92306cb85899330ca8b230ee" translate="yes" xml:space="preserve">
          <source>Quoting</source>
          <target state="translated">Quoting</target>
        </trans-unit>
        <trans-unit id="73eacf64e5e81f1fcb39bf6fc6d87cea5690a84c" translate="yes" xml:space="preserve">
          <source>Reading and writing elements to an array uses the array-notation:</source>
          <target state="translated">Для чтения и записи элементов в массив используется нотация массива:</target>
        </trans-unit>
        <trans-unit id="3bd455d4841aed3c37f7ec4c5a4fc4a2af81c69d" translate="yes" xml:space="preserve">
          <source>Reduce the set of matched elements to a subset specified by a range of indices.</source>
          <target state="translated">Уменьшить набор совпадающих элементов до подмножества,заданного диапазоном индексов.</target>
        </trans-unit>
        <trans-unit id="1e8dd6900b011196e2f4a56c0cf89faca36f3e7e" translate="yes" xml:space="preserve">
          <source>Reduce the set of matched elements to the even ones in the set, numbered from zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8739271f849c700a6c0f32e066d7a1a077a8c2dd" translate="yes" xml:space="preserve">
          <source>Reduce the set of matched elements to the final one in the set.</source>
          <target state="translated">Сократите набор совпадающих элементов до финального в наборе.</target>
        </trans-unit>
        <trans-unit id="f5f117806b16689d587a077b5e8a3008e7f14b4f" translate="yes" xml:space="preserve">
          <source>Reduce the set of matched elements to the first in the set.</source>
          <target state="translated">Сократите набор совпадающих элементов до первого в наборе.</target>
        </trans-unit>
        <trans-unit id="dcb9f3bba427cedab9a22608ff1f552fd5105153" translate="yes" xml:space="preserve">
          <source>Reduce the set of matched elements to the odd ones in the set, numbered from zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef2b5baaab943ca133dd166d2b25a9c8d6847db" translate="yes" xml:space="preserve">
          <source>Reduce the set of matched elements to the one at the specified index.</source>
          <target state="translated">Уменьшить набор совпадающих элементов до того,который находится в указанном индексе.</target>
        </trans-unit>
        <trans-unit id="cbef618e1d6febf6e667f916fb1a247bbf604c36" translate="yes" xml:space="preserve">
          <source>Reduce the set of matched elements to those that have a descendant that matches the selector or DOM element.</source>
          <target state="translated">Уменьшить набор совпадающих элементов до тех,которые имеют потомка,совпадающего с селектором или DOM-элементом.</target>
        </trans-unit>
        <trans-unit id="e092144853f325cc23c57056fac3b9e47adaecea" translate="yes" xml:space="preserve">
          <source>Reduce the set of matched elements to those that match the selector or pass the function&amp;rsquo;s test.</source>
          <target state="translated">Сократите набор совпадающих элементов до тех, которые соответствуют селектору или прошли проверку функции.</target>
        </trans-unit>
        <trans-unit id="0ea00b1a0bd8455bb9506bc4716b955661b6d7fc" translate="yes" xml:space="preserve">
          <source>Register a handler to be called when Ajax requests complete with an error. This is an Ajax Event.</source>
          <target state="translated">Зарегистрируйте обработчик,который будет вызван,когда Ajax запросы завершатся с ошибкой.Это событие Аякса.</target>
        </trans-unit>
        <trans-unit id="cb1cd3334c0c68c88c6c354897b9a3c37ffc4f28" translate="yes" xml:space="preserve">
          <source>Register a handler to be called when Ajax requests complete. This is an AjaxEvent.</source>
          <target state="translated">Зарегистрируйте обработчика,который будет вызван,когда Ajax запросы будут завершены.Это AjaxEvent.</target>
        </trans-unit>
        <trans-unit id="046a7a8cf91a262375dabe45d5530f029d0902a1" translate="yes" xml:space="preserve">
          <source>Register a handler to be called when all Ajax requests have completed. This is an Ajax Event.</source>
          <target state="translated">Зарегистрируйте обработчика,который будет вызван,когда все запросы Ajax будут завершены.Это событие Аякса.</target>
        </trans-unit>
        <trans-unit id="f8b1ee0cf3bb013a4901ba48c82a092f864c1981" translate="yes" xml:space="preserve">
          <source>Register a handler to be called when the first Ajax request begins. This is an Ajax Event.</source>
          <target state="translated">Зарегистрируйте обработчика,который будет вызван,когда начнется первый запрос на Ajax.Это событие Аякса.</target>
        </trans-unit>
        <trans-unit id="50e2f5291c06e2ab1e5d166ed5784a7b771585c2" translate="yes" xml:space="preserve">
          <source>Reject a Deferred object and call any failCallbacks with the given args.</source>
          <target state="translated">Отклонить объект Deferred и вызвать любой failCallbacks с заданными аргументами.</target>
        </trans-unit>
        <trans-unit id="5a4cbb7cd001bf81755640657aa8c8f3788845ef" translate="yes" xml:space="preserve">
          <source>Reject a Deferred object and call any failCallbacks with the given context and args.</source>
          <target state="translated">Отклонить объект Deferred и вызвать любой failCallbacks с заданным контекстом и аргументами.</target>
        </trans-unit>
        <trans-unit id="296c0790c40cf3ee5ef277bdc24194e6a59621ee" translate="yes" xml:space="preserve">
          <source>Relinquish jQuery&amp;rsquo;s control of the $ variable.</source>
          <target state="translated">Отказаться от контроля jQuery над переменной $.</target>
        </trans-unit>
        <trans-unit id="d254480091a9afb5893e4d137b177e3c48f3d58d" translate="yes" xml:space="preserve">
          <source>Remove a callback or a collection of callbacks from a callback list.</source>
          <target state="translated">Удалить обратный вызов или набор вызовов из списка вызовов.</target>
        </trans-unit>
        <trans-unit id="152bebda6c7fab2eb30b4e2f0905212360afd527" translate="yes" xml:space="preserve">
          <source>Remove a handler from the event for all elements which match the current selector, based upon a specific set of root elements.</source>
          <target state="translated">Удалить обработчик из события для всех элементов,которые соответствуют текущему селектору,основываясь на определенном наборе корневых элементов.</target>
        </trans-unit>
        <trans-unit id="51844c3db03fe078e728ade46a3b9a19c4248f5a" translate="yes" xml:space="preserve">
          <source>Remove a previously-attached event handler from the elements.</source>
          <target state="translated">Удалить из элементов ранее добавленный обработчик событий.</target>
        </trans-unit>
        <trans-unit id="442c1f1945b0f5e3699145b6117ca4bc982901b0" translate="yes" xml:space="preserve">
          <source>Remove a previously-stored piece of data.</source>
          <target state="translated">Удалить ранее сохраненную часть данных.</target>
        </trans-unit>
        <trans-unit id="fbeece5249b803d87fb8175d2bb5f652e7808a88" translate="yes" xml:space="preserve">
          <source>Remove a property for the set of matched elements.</source>
          <target state="translated">Удалить свойство для набора подходящих элементов.</target>
        </trans-unit>
        <trans-unit id="6b64a5a444f5c29728046911f570f989d1af99d1" translate="yes" xml:space="preserve">
          <source>Remove a single class, multiple classes, or all classes from each element in the set of matched elements.</source>
          <target state="translated">Удалить один,несколько классов или все классы из каждого элемента в наборе совпадающих элементов.</target>
        </trans-unit>
        <trans-unit id="9c0453209c295e68a0c3d52f5c7e937797bbd791" translate="yes" xml:space="preserve">
          <source>Remove all child nodes of the set of matched elements from the DOM.</source>
          <target state="translated">Удалите из флэш-накопителя все дочерние узлы набора совпадающих элементов.</target>
        </trans-unit>
        <trans-unit id="0783a64069f3907b9e9bb07e5cad6b02d24bbf52" translate="yes" xml:space="preserve">
          <source>Remove all delegated click handlers from all paragraphs:</source>
          <target state="translated">Удалить все делегированные обработчики кликов из всех параграфов:</target>
        </trans-unit>
        <trans-unit id="603e780ec0aea140b4761abbaa99d5c6c0951ed5" translate="yes" xml:space="preserve">
          <source>Remove all event handlers from all paragraphs:</source>
          <target state="translated">Удалить всех обработчиков событий из всех абзацев:</target>
        </trans-unit>
        <trans-unit id="fede081dd4918b39d6dff14b203036f0e5a1deab" translate="yes" xml:space="preserve">
          <source>Remove all of the callbacks from a list.</source>
          <target state="translated">Удалите все обратные вызовы из списка.</target>
        </trans-unit>
        <trans-unit id="89eb35e8f65afbe7124f07bef85708a3ab9dc117" translate="yes" xml:space="preserve">
          <source>Remove all the classes from the matched elements.</source>
          <target state="translated">Удалить все классы из совпадающих элементов.</target>
        </trans-unit>
        <trans-unit id="fe4f07de07a09dea08897e85ea59b3c2f916b939" translate="yes" xml:space="preserve">
          <source>Remove an attribute from each element in the set of matched elements.</source>
          <target state="translated">Удалить атрибут из каждого элемента в наборе совпадающих элементов.</target>
        </trans-unit>
        <trans-unit id="944034e77286ef1b27bf82a282cddc5d330b328a" translate="yes" xml:space="preserve">
          <source>Remove an event handler.</source>
          <target state="translated">Удалить обработчика событий.</target>
        </trans-unit>
        <trans-unit id="d31f228affab5884a76a09d1b7f8a2dd08681afa" translate="yes" xml:space="preserve">
          <source>Remove elements from the set of matched elements.</source>
          <target state="translated">Удалить элементы из набора согласованных элементов.</target>
        </trans-unit>
        <trans-unit id="8cf593ca14051b1ad9096d31bd8f05ed1500f02a" translate="yes" xml:space="preserve">
          <source>Remove event handlers previously attached using .live() from the elements.</source>
          <target state="translated">Удалить обработчики событий,ранее прикрепленные с помощью .live(),из элементов.</target>
        </trans-unit>
        <trans-unit id="0fa050548901dd546b504c572fe6013210602a03" translate="yes" xml:space="preserve">
          <source>Remove from the queue all items that have not yet been run.</source>
          <target state="translated">Удалите из очереди все элементы,которые еще не были запущены.</target>
        </trans-unit>
        <trans-unit id="c7c079e57c1ef7a6b712d33758c39e1793c8fbd0" translate="yes" xml:space="preserve">
          <source>Remove just one previously bound handler by passing it as the third argument:</source>
          <target state="translated">Удалить только один ранее связанный обработчик,передав его в качестве третьего аргумента:</target>
        </trans-unit>
        <trans-unit id="e52e36c56060191804131d5a2b083997fcc59144" translate="yes" xml:space="preserve">
          <source>Remove the class 'blue' and 'under' from the matched elements (3.3+ syntax).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4219b3dbe4ae825caa17c061864413768325651d" translate="yes" xml:space="preserve">
          <source>Remove the class 'blue' and 'under' from the matched elements.</source>
          <target state="translated">Удалить класс &quot;синий&quot; и &quot;ниже&quot; из совпадающих элементов.</target>
        </trans-unit>
        <trans-unit id="87b0641be0ccaa7415884b279c3e7b7040b29896" translate="yes" xml:space="preserve">
          <source>Remove the class 'blue' from the matched elements.</source>
          <target state="translated">Удалить класс &quot;синий&quot; из совпадающих элементов.</target>
        </trans-unit>
        <trans-unit id="6a0a7ad121887d5025890028bd2da9cd450a9576" translate="yes" xml:space="preserve">
          <source>Remove the parents of the set of matched elements from the DOM, leaving the matched elements in their place.</source>
          <target state="translated">Извлеките родителей из МДМ набора совмещенных элементов,оставив совмещенные элементы на своем месте.</target>
        </trans-unit>
        <trans-unit id="d953b02f2e1c98e517a3ac7edba80df822b4640d" translate="yes" xml:space="preserve">
          <source>Remove the set of matched elements from the DOM.</source>
          <target state="translated">Извлеките из флэш-накопителя набор подходящих элементов.</target>
        </trans-unit>
        <trans-unit id="90873df9b35abbbc19ef0b528f7a8ab9dd986502" translate="yes" xml:space="preserve">
          <source>Remove the white spaces at the start and at the end of the string.</source>
          <target state="translated">Удалите пробелы в начале и в конце строки.</target>
        </trans-unit>
        <trans-unit id="d9ed199cbdfe853b660c8cc18fd4e7751a3b78a3" translate="yes" xml:space="preserve">
          <source>Remove the whitespace from the beginning and end of a string.</source>
          <target state="translated">Удалите пробелы из начала и конца строки.</target>
        </trans-unit>
        <trans-unit id="7f5026e26420d9b7f5049b09584701738205a71d" translate="yes" xml:space="preserve">
          <source>Removes all child nodes (including text nodes) from all paragraphs</source>
          <target state="translated">Удаляет все дочерние узлы (включая текстовые)из всех абзацев</target>
        </trans-unit>
        <trans-unit id="c7f59cdf9d384b47749940783c2d6b4773f8723c" translate="yes" xml:space="preserve">
          <source>Removes all elements that match &quot;div p.selected&quot; from the total set of all paragraphs.</source>
          <target state="translated">Удаляет все элементы,которые соответствуют &quot;div p.selected&quot; из общего набора всех абзацев.</target>
        </trans-unit>
        <trans-unit id="37dd8d8d2fcc8a4db7dbb9f9bf01ad407803263e" translate="yes" xml:space="preserve">
          <source>Removes all paragraphs from the DOM</source>
          <target state="translated">Удаляет все параграфы из МДМ</target>
        </trans-unit>
        <trans-unit id="ae96008bae2dd4ce2502a89bb1b9295630c1fd4b" translate="yes" xml:space="preserve">
          <source>Removes all paragraphs that contain &quot;Hello&quot; from the DOM. Analogous to doing &lt;code&gt;$(&quot;p&quot;).filter(&quot;:contains('Hello')&quot;).remove()&lt;/code&gt;.</source>
          <target state="translated">Удаляет из DOM все абзацы, содержащие &amp;laquo;Hello&amp;raquo;. Аналогично выполнению &lt;code&gt;$(&quot;p&quot;).filter(&quot;:contains('Hello')&quot;).remove()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b85b3186be49bd7f79de4ea6d43e176de0433c5" translate="yes" xml:space="preserve">
          <source>Removes any duplicate elements from the array of divs.</source>
          <target state="translated">Удаляет все дублирующие элементы из массива div.</target>
        </trans-unit>
        <trans-unit id="4654814c9db6ea1bc61d08a6712f03a793c22363" translate="yes" xml:space="preserve">
          <source>Removes the element with the ID &quot;selected&quot; from the set of all paragraphs.</source>
          <target state="translated">Удаляет элемент с идентификатором &quot;selected&quot; из набора всех абзацев.</target>
        </trans-unit>
        <trans-unit id="81901ac43b3bb08696d37b0859394ec85057f9ca" translate="yes" xml:space="preserve">
          <source>Removing Specific Elements</source>
          <target state="translated">Удаление специфических элементов</target>
        </trans-unit>
        <trans-unit id="15c986757de465b6a45aa264a5bc85edcb733e56" translate="yes" xml:space="preserve">
          <source>Replace all paragraphs with bold words.</source>
          <target state="translated">Заменить все абзацы жирным шрифтом.</target>
        </trans-unit>
        <trans-unit id="78f70c0345c0da10bce4af147178b880384fb813" translate="yes" xml:space="preserve">
          <source>Replace all the paragraphs with bold words.</source>
          <target state="translated">Заменить все абзацы жирным шрифтом.</target>
        </trans-unit>
        <trans-unit id="c5ddda6c87c667d6334fcaaa7ba826763d2dc9d4" translate="yes" xml:space="preserve">
          <source>Replace each element in the set of matched elements with the provided new content and return the set of elements that was removed.</source>
          <target state="translated">Замените каждый элемент в наборе совмещенных элементов на предоставленный новый контент и верните набор элементов,который был удален.</target>
        </trans-unit>
        <trans-unit id="f7e1cf90a2e1c81d39b57137303df978f22de979" translate="yes" xml:space="preserve">
          <source>Replace each target element with the set of matched elements.</source>
          <target state="translated">Замените каждый целевой элемент набором подходящих элементов.</target>
        </trans-unit>
        <trans-unit id="53087331adad76acaddcc600bbcf93a9c82fcd8b" translate="yes" xml:space="preserve">
          <source>Report the index of some elements in the array.</source>
          <target state="translated">Сообщите индекс некоторых элементов массива.</target>
        </trans-unit>
        <trans-unit id="5e9a3bf6a560aa64c830e9db0985d0dfcd0ba1e0" translate="yes" xml:space="preserve">
          <source>Request Method</source>
          <target state="translated">Метод запроса</target>
        </trans-unit>
        <trans-unit id="4c76b1be4e3aa28fa4d06646fbe476d10b22e4e6" translate="yes" xml:space="preserve">
          <source>Request the test.php page and send some additional data along (while still ignoring the return results).</source>
          <target state="translated">Запросите страницу test.php и отправьте дополнительные данные (при этом игнорируя результаты возврата).</target>
        </trans-unit>
        <trans-unit id="24fc417d76f2849e2c64fcd03769a749fc4c02d4" translate="yes" xml:space="preserve">
          <source>Request the test.php page, but ignore the return results.</source>
          <target state="translated">Запросите страницу test.php,но проигнорируйте возвращаемые результаты.</target>
        </trans-unit>
        <trans-unit id="74a6c861840d7edd4e3d07a6e162d87643f6ac6d" translate="yes" xml:space="preserve">
          <source>Resolve a Deferred object and call any doneCallbacks with the given args.</source>
          <target state="translated">Решить объект Deferred и вызвать любой doneCallbacks с заданными аргументами.</target>
        </trans-unit>
        <trans-unit id="f310072e690bb2169c5202db5e456cb7ce4b4c1d" translate="yes" xml:space="preserve">
          <source>Resolve a Deferred object and call any doneCallbacks with the given context and args.</source>
          <target state="translated">Решить объект Deferred и вызвать любой doneCallbacks с заданным контекстом и аргументами.</target>
        </trans-unit>
        <trans-unit id="73056f4840fff864dd823e5950a43e004a50bc9a" translate="yes" xml:space="preserve">
          <source>Resolve a Deferred object when the user clicks a button, triggering a number of callback functions:</source>
          <target state="translated">Решить объект &quot;Отсрочка&quot;,когда пользователь нажимает кнопку,вызывая ряд функций обратного вызова:</target>
        </trans-unit>
        <trans-unit id="e738f391ed69af4fa52480f2a02b00f184f1e4e1" translate="yes" xml:space="preserve">
          <source>Resolve context and sole argument is the collection onto which &lt;code&gt;.promise()&lt;/code&gt; has been called.</source>
          <target state="translated">Контекст разрешения и единственный аргумент - это коллекция, для которой был &lt;code&gt;.promise()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5f000a270f03c338bfc34fcaa0468e090d85559" translate="yes" xml:space="preserve">
          <source>Resolve the returned Promise using a &lt;code&gt;$.when()&lt;/code&gt; statement (the &lt;code&gt;.promise()&lt;/code&gt; method makes it possible to do this with jQuery collections):</source>
          <target state="translated">Устраните возвращаемый обещание , используя &lt;code&gt;$.when()&lt;/code&gt; заявление ( &lt;code&gt;.promise()&lt;/code&gt; метод позволяет сделать это с помощью коллекции Jquery):</target>
        </trans-unit>
        <trans-unit id="d289e011b469f4a41e089433b54f9d3dc9dbfe03" translate="yes" xml:space="preserve">
          <source>Resolve the returned Promise when all animations have ended (including those initiated in the animation callback or added later on):</source>
          <target state="translated">Решить возвращенное Обещание,когда все анимации закончились (включая анимации,инициированные при обратном вызове анимации или добавленные позже):</target>
        </trans-unit>
        <trans-unit id="bd4afc0073cac79bf136f8e1d922b83f76e969ad" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="translated">Result:</target>
        </trans-unit>
        <trans-unit id="280702414af6806995b7134cb0d265cfea74a71c" translate="yes" xml:space="preserve">
          <source>Retrieval of shorthand CSS properties (e.g., &lt;code&gt;margin&lt;/code&gt;, &lt;code&gt;background&lt;/code&gt;, &lt;code&gt;border&lt;/code&gt;), although functional with some browsers, is not guaranteed. For example, if you want to retrieve the rendered &lt;code&gt;border-width&lt;/code&gt;, use: &lt;code&gt;$( elem ).css( &quot;borderTopWidth&quot; )&lt;/code&gt;, &lt;code&gt;$( elem ).css( &quot;borderBottomWidth&quot; )&lt;/code&gt;, and so on.</source>
          <target state="translated">Получение сокращенных свойств CSS (например, &lt;code&gt;margin&lt;/code&gt; , &lt;code&gt;background&lt;/code&gt; , &lt;code&gt;border&lt;/code&gt; ), хотя и работает с некоторыми браузерами, не гарантируется. Например, если вы хотите получить визуализированную &lt;code&gt;border-width&lt;/code&gt; , используйте: &lt;code&gt;$( elem ).css( &quot;borderTopWidth&quot; )&lt;/code&gt; , &lt;code&gt;$( elem ).css( &quot;borderBottomWidth&quot; )&lt;/code&gt; и так далее.</target>
        </trans-unit>
        <trans-unit id="1ae0f93946ed2805d7338f39fdd2b9f13fc9388d" translate="yes" xml:space="preserve">
          <source>Retrieve all the elements contained in the jQuery set, as an array.</source>
          <target state="translated">Извлекайте все элементы,содержащиеся в наборе jQuery,в виде массива.</target>
        </trans-unit>
        <trans-unit id="c47ebe06b994778f04553202da80384f93ec7ae5" translate="yes" xml:space="preserve">
          <source>Retrieve the DOM elements matched by the jQuery object.</source>
          <target state="translated">Извлеките DOM-элементы,соответствующие объекту jQuery.</target>
        </trans-unit>
        <trans-unit id="9e479bed7e5542e5175525608c0a44b2c1fcf5d7" translate="yes" xml:space="preserve">
          <source>Retrieve the latest version of an HTML page.</source>
          <target state="translated">Получить последнюю версию HTML-страницы.</target>
        </trans-unit>
        <trans-unit id="4c85d59c181a8bdfec393789d72d1942cf54846f" translate="yes" xml:space="preserve">
          <source>Return Values</source>
          <target state="translated">Возвращаемые значения</target>
        </trans-unit>
        <trans-unit id="0155f7262e902273c19d5e538a1316f003b2cec2" translate="yes" xml:space="preserve">
          <source>Return a Deferred&amp;rsquo;s Promise object.</source>
          <target state="translated">Вернуть объект Deferred's Promise.</target>
        </trans-unit>
        <trans-unit id="3a487186e39ba43192e25c2d07c2ba9113b48b3a" translate="yes" xml:space="preserve">
          <source>Return a Promise object to observe when all actions of a certain type bound to the collection, queued or not, have finished.</source>
          <target state="translated">Возвратить объект &quot;Обещание&quot; для наблюдения,когда все действия определенного типа,привязанные к коллекции,поставленные в очередь или нет,завершены.</target>
        </trans-unit>
        <trans-unit id="7824bc1b97268a438f40660068804ec96b80b110" translate="yes" xml:space="preserve">
          <source>Return a collection of matched elements either found in the DOM based on passed argument(s) or created by passing an HTML string.</source>
          <target state="translated">Возвращает коллекцию совпадающих элементов,найденных либо в DOM на основе переданных аргументов,либо созданных передачей HTML-строки.</target>
        </trans-unit>
        <trans-unit id="d9398e7ff5752487f63c609b69a5765a1fe72a74" translate="yes" xml:space="preserve">
          <source>Return a number representing the current time.</source>
          <target state="translated">Вернуть число,представляющее текущее время.</target>
        </trans-unit>
        <trans-unit id="3464e4fd44ebfd6076f392976403b0abe1c38fff" translate="yes" xml:space="preserve">
          <source>Return the number of elements in the jQuery object.</source>
          <target state="translated">Возвращает количество элементов в объекте jQuery.</target>
        </trans-unit>
        <trans-unit id="48f6da53395f5dc902c90077711039058fa4bf40" translate="yes" xml:space="preserve">
          <source>Return the version number of the rendering engine used by the user's current browser. For example, FireFox 4 returns 2.0 (the version of the Gecko rendering engine it utilizes). &lt;strong&gt;Will not work in jQuery 1.9 or later&lt;/strong&gt; unless the &lt;a href=&quot;https://github.com/jquery/jquery-migrate/#readme&quot;&gt;jQuery Migrate&lt;/a&gt; plugin is included.</source>
          <target state="translated">Вернуть номер версии механизма визуализации, используемого текущим браузером пользователя. Например, FireFox 4 возвращает 2.0 (версия используемого механизма рендеринга Gecko). &lt;strong&gt;Не будет работать в jQuery 1.9 или новее,&lt;/strong&gt; если не включен плагин &lt;a href=&quot;https://github.com/jquery/jquery-migrate/#readme&quot;&gt;jQuery Migrate&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f3356d67954770e949ba2366aec0fa96e10d6e04" translate="yes" xml:space="preserve">
          <source>Return true if the current useragent is some version of Microsoft's Internet Explorer. &lt;strong&gt;Will not work in jQuery 1.9 or later&lt;/strong&gt; unless the &lt;a href=&quot;https://github.com/jquery/jquery-migrate/#readme&quot;&gt;jQuery Migrate&lt;/a&gt; plugin is included.</source>
          <target state="translated">Верните true, если текущий пользовательский агент является некоторой версией Microsoft Internet Explorer. &lt;strong&gt;Не будет работать в jQuery 1.9 или новее,&lt;/strong&gt; если не включен плагин &lt;a href=&quot;https://github.com/jquery/jquery-migrate/#readme&quot;&gt;jQuery Migrate&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9f50100a0f1fca09b3a792dbaaaa792f960f542e" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;false&lt;/code&gt; from a handler is equivalent to calling both &lt;code&gt;.preventDefault()&lt;/code&gt; and &lt;code&gt;.stopPropagation()&lt;/code&gt; on the event object.</source>
          <target state="translated">Возврат &lt;code&gt;false&lt;/code&gt; от обработчика эквивалентен вызову &lt;code&gt;.preventDefault()&lt;/code&gt; и &lt;code&gt;.stopPropagation()&lt;/code&gt; для объекта события.</target>
        </trans-unit>
        <trans-unit id="cacb5cbc3c9a29defe5998a16b32ad3376994a2c" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;false&lt;/code&gt; from an event handler will automatically call &lt;code&gt;event.stopPropagation()&lt;/code&gt; and &lt;code&gt;event.preventDefault()&lt;/code&gt;. A &lt;code&gt;false&lt;/code&gt; value can also be passed for the &lt;code&gt;handler&lt;/code&gt; as a shorthand for &lt;code&gt;function(){ return false; }&lt;/code&gt;. So, &lt;code&gt;$( &quot;a.disabled&quot; ).on( &quot;click&quot;, false );&lt;/code&gt; attaches an event handler to all links with class &quot;disabled&quot; that prevents them from being followed when they are clicked and also stops the event from bubbling.</source>
          <target state="translated">Возвращение &lt;code&gt;false&lt;/code&gt; из обработчика событий автоматически вызовет &lt;code&gt;event.stopPropagation()&lt;/code&gt; и &lt;code&gt;event.preventDefault()&lt;/code&gt; . &lt;code&gt;false&lt;/code&gt; значение также может быть передан для &lt;code&gt;handler&lt;/code&gt; как сокращение для &lt;code&gt;function(){ return false; }&lt;/code&gt; . Итак, &lt;code&gt;$( &quot;a.disabled&quot; ).on( &quot;click&quot;, false );&lt;/code&gt; прикрепляет обработчик событий ко всем ссылкам с классом &amp;laquo;disabled&amp;raquo;, который предотвращает переход по ним при щелчке по ним, а также предотвращает всплытие события.</target>
        </trans-unit>
        <trans-unit id="5459c5e9a6bfcaa998770b0962a3243e0f3e2492" translate="yes" xml:space="preserve">
          <source>Returning an Empty Set</source>
          <target state="translated">Возвращение пустого набора</target>
        </trans-unit>
        <trans-unit id="359ee285db1ab3497383b24058b385819a29afb7" translate="yes" xml:space="preserve">
          <source>Returns -1, as there is no element with ID foobar.</source>
          <target state="translated">Возвращает -1,так как нет элемента с идентификационной фобарой.</target>
        </trans-unit>
        <trans-unit id="24601238c8e49ca9e38cd6023c2beef68041e041" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the Deferred object is in the rejected state, meaning that either &lt;a href=&quot;https://api.jquery.com/h/deferred.reject/&quot;&gt;&lt;code&gt;deferred.reject()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;deferred.rejectwith&quot;&gt;&lt;code&gt;deferred.rejectWith()&lt;/code&gt;&lt;/a&gt; has been called for the object and the failCallbacks have been called (or are in the process of being called).</source>
          <target state="translated">Возвращает &lt;code&gt;true&lt;/code&gt; , если объект Deferred находится в отклоненном состоянии, что означает, что для объекта был вызван &lt;a href=&quot;https://api.jquery.com/h/deferred.reject/&quot;&gt; &lt;code&gt;deferred.reject()&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;deferred.rejectwith&quot;&gt; &lt;code&gt;deferred.rejectWith()&lt;/code&gt; &lt;/a&gt; а функции failCallback были вызваны (или находятся в процессе вызова).</target>
        </trans-unit>
        <trans-unit id="9dedf983f3b1620c2ac4eee00b8ab8ef38a14955" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the Deferred object is in the resolved state, meaning that either &lt;a href=&quot;deferred.resolve&quot;&gt;&lt;code&gt;deferred.resolve()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;deferred.resolvewith&quot;&gt;&lt;code&gt;deferred.resolveWith()&lt;/code&gt;&lt;/a&gt; has been called for the object and the doneCallbacks have been called (or are in the process of being called).</source>
          <target state="translated">Возвращает &lt;code&gt;true&lt;/code&gt; , если объект Deferred находится в разрешенном состоянии, что означает, что для объекта был вызван &lt;a href=&quot;deferred.resolve&quot;&gt; &lt;code&gt;deferred.resolve()&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;deferred.resolvewith&quot;&gt; &lt;code&gt;deferred.resolveWith()&lt;/code&gt; &lt;/a&gt; и doneCallbacks были вызваны (или находятся в процессе вызова).</target>
        </trans-unit>
        <trans-unit id="7e66d7a2f48c78a417819b8c659a7fcf4b7bec23" translate="yes" xml:space="preserve">
          <source>Returns a boolean value (&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;) that indicates whether or not the</source>
          <target state="translated">Возвращает логическое значение ( &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt; ), которое указывает,</target>
        </trans-unit>
        <trans-unit id="d1ad30f7b515023713d6bc9f31009a6f3048d871" translate="yes" xml:space="preserve">
          <source>Returns an object containing the properties &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;left&lt;/code&gt;.</source>
          <target state="translated">Возвращает объект, содержащий свойства &lt;code&gt;top&lt;/code&gt; и &lt;code&gt;left&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a21a8e38cb37e60f58b7163fc87dcac1a82a39dd" translate="yes" xml:space="preserve">
          <source>Returns false, because the parent of the input is a p element.</source>
          <target state="translated">Возвращает false,потому что родителем входа является p-элемент.</target>
        </trans-unit>
        <trans-unit id="6d2be479c7c43a070dda61fc193794309f667f58" translate="yes" xml:space="preserve">
          <source>Returns the height of the element, including top and bottom padding, border, and optionally margin, in pixels. If called on an empty set of elements, returns &lt;code&gt;undefined&lt;/code&gt; (&lt;code&gt;null&lt;/code&gt; before jQuery 3.0).</source>
          <target state="translated">Возвращает высоту элемента, включая верхнее и нижнее отступы, границу и, при необходимости, поля в пикселях. При вызове для пустого набора элементов возвращает значение &lt;code&gt;undefined&lt;/code&gt; (значение &lt;code&gt;null&lt;/code&gt; до jQuery 3.0).</target>
        </trans-unit>
        <trans-unit id="bcb06190361244e70900f5938f0e2cd4070df363" translate="yes" xml:space="preserve">
          <source>Returns the index for the element with ID bar in relation to all &amp;lt;li&amp;gt; elements.</source>
          <target state="translated">Возвращает индекс для элемента с полосой идентификатора по отношению ко всем элементам &amp;lt;li&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="b29dc2ed2dd9462cb6949e7b4789acfe0862cff6" translate="yes" xml:space="preserve">
          <source>Returns the index for the element with ID bar in relation to its siblings.</source>
          <target state="translated">Возвращает индекс для элемента со строкой ID относительно его братьев и сестер.</target>
        </trans-unit>
        <trans-unit id="14ebfc0e4de6cfe7d96bc5e85c508d46356efb50" translate="yes" xml:space="preserve">
          <source>Returns the index for the element with ID bar.</source>
          <target state="translated">Возвращает индекс для элемента со строкой ID.</target>
        </trans-unit>
        <trans-unit id="5bb8639b984c5a451bd2d2390409acfd9250e304" translate="yes" xml:space="preserve">
          <source>Returns the index for the first item in the jQuery collection.</source>
          <target state="translated">Возвращает индекс для первого предмета из коллекции jQuery.</target>
        </trans-unit>
        <trans-unit id="b393ec4b75484f575ba14d5e0739f81c6524f060" translate="yes" xml:space="preserve">
          <source>Returns the width of the element, including left and right padding, border, and optionally margin, in pixels. If called on an empty set of elements, returns &lt;code&gt;undefined&lt;/code&gt; (&lt;code&gt;null&lt;/code&gt; before jQuery 3.0).</source>
          <target state="translated">Возвращает ширину элемента, включая левое и правое заполнение, границу и, при необходимости, поля в пикселях. При вызове для пустого набора элементов возвращает значение &lt;code&gt;undefined&lt;/code&gt; (значение &lt;code&gt;null&lt;/code&gt; до jQuery 3.0).</target>
        </trans-unit>
        <trans-unit id="a7ad448c0457fa47085de3d60015cdbdafb46dd4" translate="yes" xml:space="preserve">
          <source>Returns true, because the parent of the input is a form element.</source>
          <target state="translated">Возвращает true,потому что родитель входа является элементом формы.</target>
        </trans-unit>
        <trans-unit id="4c048a48626665bb693a24abc82365df59c00522" translate="yes" xml:space="preserve">
          <source>Returns whether event.preventDefault() was ever called on this event object.</source>
          <target state="translated">Возвращает,был ли когда-либо вызван event.preventDefault()на этом объекте событий.</target>
        </trans-unit>
        <trans-unit id="0095bf521db1230ef8902af7b50cd23331098004" translate="yes" xml:space="preserve">
          <source>Returns whether event.stopImmediatePropagation() was ever called on this event object.</source>
          <target state="translated">Возвращает,был ли когда-либо вызван event.stopImmediatePropagation()на этом объекте события.</target>
        </trans-unit>
        <trans-unit id="46408a9586a191033969c174efbd68f66d5fd561" translate="yes" xml:space="preserve">
          <source>Returns whether event.stopPropagation() was ever called on this event object.</source>
          <target state="translated">Возвращает,был ли когда-либо вызван event.stopPropagation()на этом объекте событий.</target>
        </trans-unit>
        <trans-unit id="0074c61ba5de3729c365c438f4ab6d87823e2ac4" translate="yes" xml:space="preserve">
          <source>Revert the $ alias and then create and execute a function to provide the $ as a jQuery alias inside the function's scope. Inside the function the original $ object is not available. This works well for most plugins that don't rely on any other library.</source>
          <target state="translated">Переверните псевдоним $,а затем создайте и выполните функцию для предоставления $ в качестве псевдонима jQuery внутри области видимости функции.Внутри функции исходный объект $ недоступен.Это хорошо работает для большинства плагинов,которые не полагаются ни на одну другую библиотеку.</target>
        </trans-unit>
        <trans-unit id="1559488e7282166b90ea314062f1988b483f6a31" translate="yes" xml:space="preserve">
          <source>Rewriting the &lt;code&gt;.live()&lt;/code&gt; method in terms of its successors is straightforward; these are templates for equivalent calls for all three event attachment methods:</source>
          <target state="translated">Переписать метод &lt;code&gt;.live()&lt;/code&gt; в терминах его преемников несложно; это шаблоны для эквивалентных вызовов для всех трех методов присоединения событий:</target>
        </trans-unit>
        <trans-unit id="6aa2379f312caadc948aa7a9d8a823935a9b92fe" translate="yes" xml:space="preserve">
          <source>Right click to toggle background color.</source>
          <target state="translated">Щелкните правой кнопкой мыши,чтобы переключить цвет фона.</target>
        </trans-unit>
        <trans-unit id="cf8d2fa5b636bb50d3b782f2addcd9107ff85896" translate="yes" xml:space="preserve">
          <source>Run a function when the page is fully loaded including graphics.</source>
          <target state="translated">Запустите функцию,когда страница полностью загружена,включая графику.</target>
        </trans-unit>
        <trans-unit id="660eab7cf7994345058c6792c429efba21c440ff" translate="yes" xml:space="preserve">
          <source>Safari/Webkit: 312.8, 418.9</source>
          <target state="translated">Сафари/Вебкит:312.8,418.9</target>
        </trans-unit>
        <trans-unit id="b481f8b8e77e092a5a1b352b75b3cfd0447e1ee8" translate="yes" xml:space="preserve">
          <source>Same as above, but will POST the additional parameters to the server and a callback that is executed when the server is finished responding.</source>
          <target state="translated">То же самое,что и выше,но будет POST дополнительные параметры для сервера и обратный вызов,который выполняется,когда сервер завершает отвечать.</target>
        </trans-unit>
        <trans-unit id="a3b49cbd8336bc28d30035edac48de5804dc67f0" translate="yes" xml:space="preserve">
          <source>Sample return values of $.isNumeric with various inputs.</source>
          <target state="translated">Пример возвращаемых значений $.isNumeric с различными входными данными.</target>
        </trans-unit>
        <trans-unit id="0abcd8e11817cf7c75bccd6c0aefcb91a6a3cf65" translate="yes" xml:space="preserve">
          <source>Save some data to the server and notify the user once it's complete.</source>
          <target state="translated">Сохраните некоторые данные на сервере и сообщите об этом пользователю,как только они будут завершены.</target>
        </trans-unit>
        <trans-unit id="4651a34e4df9619783ad372f905d6d3b84e9d76d" translate="yes" xml:space="preserve">
          <source>Scope</source>
          <target state="translated">Scope</target>
        </trans-unit>
        <trans-unit id="00b39d4a46acdaf195c97b325431ddaef25894ae" translate="yes" xml:space="preserve">
          <source>Script Execution</source>
          <target state="translated">Исполнение сценария</target>
        </trans-unit>
        <trans-unit id="202dac1e22c03c214a8f5fffd9f44b1b2cb618ae" translate="yes" xml:space="preserve">
          <source>Script and JSONP requests are not subject to the same origin policy restrictions.</source>
          <target state="translated">На запросы Script и JSONP не распространяются одни и те же ограничения политики происхождения.</target>
        </trans-unit>
        <trans-unit id="cf964fefbb3826fdff4af7269ed955c203ad06cc" translate="yes" xml:space="preserve">
          <source>Scripts are included and run by referencing the file name:</source>
          <target state="translated">Сценарии включаются и выполняются со ссылкой на имя файла:</target>
        </trans-unit>
        <trans-unit id="e04c0f959a533f174ee286d4e56b7848c0439cfb" translate="yes" xml:space="preserve">
          <source>Search for a given element from among the matched elements.</source>
          <target state="translated">Поиск данного элемента из числа совпадающих элементов.</target>
        </trans-unit>
        <trans-unit id="1a8f35ce561245fefe97e75ccbff02e4aa1d777d" translate="yes" xml:space="preserve">
          <source>Search for a specified value within an array and return its index (or -1 if not found).</source>
          <target state="translated">Поиск заданного значения в массиве и возврат его индекса (или -1,если не найдено).</target>
        </trans-unit>
        <trans-unit id="3874eae2f04a120390034d50dccc5a447635329f" translate="yes" xml:space="preserve">
          <source>Second handler for .toggle() called.</source>
          <target state="translated">Вызван второй обработчик .toggle().</target>
        </trans-unit>
        <trans-unit id="402cc3b6686cd294cb10dd3f5bccbebd0edd8a9b" translate="yes" xml:space="preserve">
          <source>Security Considerations</source>
          <target state="translated">Соображения безопасности</target>
        </trans-unit>
        <trans-unit id="ba92a10db1bf37a49ca690a32bfa35980a52d5b7" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;ready&quot;&gt;ready()&lt;/a&gt;&lt;/code&gt;, which makes use of this.</source>
          <target state="translated">См. Также &lt;code&gt;&lt;a href=&quot;ready&quot;&gt;ready()&lt;/a&gt;&lt;/code&gt; , в котором это используется.</target>
        </trans-unit>
        <trans-unit id="ee12851f210aec736c2971ffe71428d322573012" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;.trigger()&lt;/code&gt; method reference for a way to pass data to a handler at the time the event happens rather than when the handler is bound.</source>
          <target state="translated">См. &lt;code&gt;.trigger()&lt;/code&gt; метод .trigger () для получения информации о способе передачи данных обработчику в момент возникновения события, а не при привязке обработчика.</target>
        </trans-unit>
        <trans-unit id="515509590fc48d1dfc5e4f8b29143dbb8193f498" translate="yes" xml:space="preserve">
          <source>See the discussions for &lt;code&gt;&lt;a href=&quot;mouseenter&quot;&gt;.mouseenter()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mouseleave&quot;&gt;.mouseleave()&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">Подробнее см. Обсуждения для &lt;code&gt;&lt;a href=&quot;mouseenter&quot;&gt;.mouseenter()&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;mouseleave&quot;&gt;.mouseleave()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="782b628d4d91647edbbce286bebc3f11f6b99ff5" translate="yes" xml:space="preserve">
          <source>Select all divs and filter the selection with a DOM element, keeping only the one with an id of &quot;unique&quot;.</source>
          <target state="translated">Выберите все div-дивы и отфильтруйте выделение с помощью DOM-элемента,сохранив только тот,который имеет идентификатор &quot;уникальный&quot;.</target>
        </trans-unit>
        <trans-unit id="9e24ae5dde661b4bad6278b284056442f482322b" translate="yes" xml:space="preserve">
          <source>Select all divs and filter the selection with a jQuery object, keeping only the one with an id of &quot;unique&quot;.</source>
          <target state="translated">Выделите все дайвы и отфильтруйте выделение с помощью объекта jQuery,сохранив только тот,который имеет идентификатор &quot;уникальный&quot;.</target>
        </trans-unit>
        <trans-unit id="cbe0d297ed30bdc4c075085c5b9677952e2bd8b1" translate="yes" xml:space="preserve">
          <source>Select all divs in the document and return the DOM Elements as an Array; then use the built-in reverse() method to reverse that array.</source>
          <target state="translated">Выберите все divs в документе и верните элементы DOM как массив;затем используйте встроенный метод reverse()для реверсирования этого массива.</target>
        </trans-unit>
        <trans-unit id="7855e410bbda7d87687eb82cfb4112e06544d1a0" translate="yes" xml:space="preserve">
          <source>Select all elements at an index greater than index within the matched set.</source>
          <target state="translated">Выберите все элементы в индексе,превышающем индекс в соответствующем наборе.</target>
        </trans-unit>
        <trans-unit id="cebb6b46e90078f144ce6f483dfb711b165e3784" translate="yes" xml:space="preserve">
          <source>Select all elements at an index less than index within the matched set.</source>
          <target state="translated">Выберите все элементы в индексе меньше,чем индекс в соответствующем наборе.</target>
        </trans-unit>
        <trans-unit id="6a16c88e4d2edf25e57b22ad8845aa0937c94c4e" translate="yes" xml:space="preserve">
          <source>Select all elements that are in the progress of an animation at the time the selector is run.</source>
          <target state="translated">Выберите все элементы,которые находятся в процессе анимации во время выполнения селектора.</target>
        </trans-unit>
        <trans-unit id="2a0cff81da7ea1b148eaa387d47ad1b088d95c5d" translate="yes" xml:space="preserve">
          <source>Select all elements that contain the specified text.</source>
          <target state="translated">Выделите все элементы,содержащие указанный текст.</target>
        </trans-unit>
        <trans-unit id="4e332684bab3aa1a45286a9f9d226898372975c7" translate="yes" xml:space="preserve">
          <source>Select all elements that have at least one child node (either an element or text).</source>
          <target state="translated">Выберите все элементы,которые имеют хотя бы один дочерний узел (либо элемент,либо текст).</target>
        </trans-unit>
        <trans-unit id="078d5d9e1ff6edf0eba91a609de0c95367226ef3" translate="yes" xml:space="preserve">
          <source>Select all elements that have no children (including text nodes).</source>
          <target state="translated">Выберите все элементы,не имеющие дочерних элементов (включая текстовые узлы).</target>
        </trans-unit>
        <trans-unit id="ed11e68f046d8dabef9e45adfed2a810b3f9160b" translate="yes" xml:space="preserve">
          <source>Select all the elements having a class name of &lt;code&gt;.box&lt;/code&gt; inside a &lt;code&gt;div&lt;/code&gt;.</source>
          <target state="translated">Выберите все элементы, имеющие имя класса &lt;code&gt;.box&lt;/code&gt; внутри &lt;code&gt;div&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ed3b7be96f2dbb88cd55ce061c434ce96bdeed1" translate="yes" xml:space="preserve">
          <source>Select elements that either don&amp;rsquo;t have the specified attribute, or do have the specified attribute but not with a certain value.</source>
          <target state="translated">Выберите элементы, которые либо не имеют указанного атрибута, либо имеют указанный атрибут, но не с определенным значением.</target>
        </trans-unit>
        <trans-unit id="5f6f1aa373c70e29d01f0f02d129effcd00f3046" translate="yes" xml:space="preserve">
          <source>Select the element at index n within the matched set.</source>
          <target state="translated">Выберите элемент в индексе n в соответствующем наборе.</target>
        </trans-unit>
        <trans-unit id="a0aec192d97708ea18466b753f9630549839da5e" translate="yes" xml:space="preserve">
          <source>Select the element with the id &quot;myDiv&quot; and give it a red border.</source>
          <target state="translated">Выберите элемент с id &quot;myDiv&quot; и дайте ему красную границу.</target>
        </trans-unit>
        <trans-unit id="184e3b053c117cadb8f38a32ba7ea866723de909" translate="yes" xml:space="preserve">
          <source>Select the element with the id &quot;myID.entry[1]&quot; and give it a red border. Note how certain characters must be escaped with backslashes.</source>
          <target state="translated">Выберите элемент с id &quot;myID.entry[1]&quot; и дайте ему красную границу.Обратите внимание,что некоторые символы должны быть экранированы обратным слешем.</target>
        </trans-unit>
        <trans-unit id="fbc01c4deea127c5fcc07581ab0c87fd938aefa0" translate="yes" xml:space="preserve">
          <source>Selected elements are in the order of their appearance in the document.</source>
          <target state="translated">Выбранные элементы находятся в порядке их появления в документе.</target>
        </trans-unit>
        <trans-unit id="b240d04328a96aac53d166b5299cca81675589d4" translate="yes" xml:space="preserve">
          <source>Selector</source>
          <target state="translated">Selector</target>
        </trans-unit>
        <trans-unit id="a011a21a85c92351b0a96fb4148afac97921c94e" translate="yes" xml:space="preserve">
          <source>Selector Context</source>
          <target state="translated">Контекст селектора</target>
        </trans-unit>
        <trans-unit id="4df28d2cb8a74e0553a8b501f660f7fd482671ed" translate="yes" xml:space="preserve">
          <source>Selectors</source>
          <target state="translated">Selectors</target>
        </trans-unit>
        <trans-unit id="63116277109d7d97ce78872faa8c5b4a7e78c9ad" translate="yes" xml:space="preserve">
          <source>Selects a single element with the given id attribute.</source>
          <target state="translated">Выбирает один элемент с заданным атрибутом id.</target>
        </trans-unit>
        <trans-unit id="482db93da8e164b9b15b7851fb58f4b7485ddf00" translate="yes" xml:space="preserve">
          <source>Selects all button elements and elements of type button.</source>
          <target state="translated">Выбирает все элементы кнопки и элементы кнопки типа.</target>
        </trans-unit>
        <trans-unit id="3b9f66e97b3951a19308af594b4428e8f3fd8c91" translate="yes" xml:space="preserve">
          <source>Selects all direct child elements specified by &amp;ldquo;child&amp;rdquo; of elements specified by &amp;ldquo;parent&amp;rdquo;.</source>
          <target state="translated">Выбирает все прямые дочерние элементы, указанные &amp;laquo;дочерним&amp;raquo; из элементов, указанных &amp;laquo;родительским&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="ef672f0c3a28f7f033a7dcbc0a7617c7eb5fd4d2" translate="yes" xml:space="preserve">
          <source>Selects all elements of the specified language.</source>
          <target state="translated">Выбирает все элементы указанного языка.</target>
        </trans-unit>
        <trans-unit id="685a95b7c8b8e8075d10bae8c93c1e49b86d0916" translate="yes" xml:space="preserve">
          <source>Selects all elements of type checkbox.</source>
          <target state="translated">Выбирает все элементы типа.</target>
        </trans-unit>
        <trans-unit id="729ba3926411637f6f92f2c5a8b1914bc62c7ed5" translate="yes" xml:space="preserve">
          <source>Selects all elements of type file.</source>
          <target state="translated">Выбирает все элементы типового файла.</target>
        </trans-unit>
        <trans-unit id="55f79e80dac38c8c301c8991025d4d361d7a906e" translate="yes" xml:space="preserve">
          <source>Selects all elements of type image.</source>
          <target state="translated">Выбирает все элементы типа изображения.</target>
        </trans-unit>
        <trans-unit id="d34fd4cfbc0399e6b2df0f37aace806c64a4aff7" translate="yes" xml:space="preserve">
          <source>Selects all elements of type password.</source>
          <target state="translated">Выбирает все элементы пароля типа.</target>
        </trans-unit>
        <trans-unit id="192e0aacd3796ba9c13cfe7c6bcd3f583a2319e5" translate="yes" xml:space="preserve">
          <source>Selects all elements of type radio.</source>
          <target state="translated">Выбирает все элементы типа радио.</target>
        </trans-unit>
        <trans-unit id="dea966d1699da730e5da44991d47a4dad2469c8a" translate="yes" xml:space="preserve">
          <source>Selects all elements of type reset.</source>
          <target state="translated">Выбирает все элементы сброса типа.</target>
        </trans-unit>
        <trans-unit id="987673eb93dba4606dfa7dcb9aa307074d61d7f7" translate="yes" xml:space="preserve">
          <source>Selects all elements of type submit.</source>
          <target state="translated">Выбирает все элементы типа &quot;Отправить&quot;.</target>
        </trans-unit>
        <trans-unit id="b46fc94979eabceeefefadcb7eb1c9fefdf76622" translate="yes" xml:space="preserve">
          <source>Selects all elements that are descendants of a given ancestor.</source>
          <target state="translated">Выбирает все элементы,которые являются потомками данного предка.</target>
        </trans-unit>
        <trans-unit id="1a2f603851e201c12f75a1069d11f1cb3d8cfc13" translate="yes" xml:space="preserve">
          <source>Selects all elements that are disabled.</source>
          <target state="translated">Выбирает все элементы,которые отключены.</target>
        </trans-unit>
        <trans-unit id="081277be0ebc8652f793ffddd406046bc39328e7" translate="yes" xml:space="preserve">
          <source>Selects all elements that are enabled.</source>
          <target state="translated">Выбирает все элементы,которые включены.</target>
        </trans-unit>
        <trans-unit id="38e5ee2ab29fb97bf2d880192e4ba13d80f49fe2" translate="yes" xml:space="preserve">
          <source>Selects all elements that are headers, like h1, h2, h3 and so on.</source>
          <target state="translated">Выбирает все элементы,которые являются заголовками,такие как h1,h2,h3 и так далее.</target>
        </trans-unit>
        <trans-unit id="26e6c5d52d7420f51b1c55caf7b42dc914aed0ba" translate="yes" xml:space="preserve">
          <source>Selects all elements that are hidden.</source>
          <target state="translated">Выбирает все скрытые элементы.</target>
        </trans-unit>
        <trans-unit id="c40bee64ad5f728527b96e701535aebabf850663" translate="yes" xml:space="preserve">
          <source>Selects all elements that are selected.</source>
          <target state="translated">Выбирает все выбранные элементы.</target>
        </trans-unit>
        <trans-unit id="1b12630f2059e80cfc555f557f369d2665cf95e8" translate="yes" xml:space="preserve">
          <source>Selects all elements that are the first among siblings of the same element name.</source>
          <target state="translated">Выбирает все элементы,которые являются первыми среди братьев и сестер с одним и тем же именем элемента.</target>
        </trans-unit>
        <trans-unit id="fb8f6ff10437a0d5ca2c23bc1b677e18d4ca7759" translate="yes" xml:space="preserve">
          <source>Selects all elements that are the first child of their parent.</source>
          <target state="translated">Выбирает все элементы,которые являются первым ребенком родителя.</target>
        </trans-unit>
        <trans-unit id="a4ba5db42bd0a7552cba89a906e47a3099d8e085" translate="yes" xml:space="preserve">
          <source>Selects all elements that are the last among siblings of the same element name.</source>
          <target state="translated">Выбирает все элементы,которые являются последними среди братьев и сестер с одним и тем же именем элемента.</target>
        </trans-unit>
        <trans-unit id="45549a1c55d46c0024d955d6df5a947b2244e626" translate="yes" xml:space="preserve">
          <source>Selects all elements that are the last child of their parent.</source>
          <target state="translated">Выбирает все элементы,которые являются последними детьми их родителей.</target>
        </trans-unit>
        <trans-unit id="5613b91eb8e4a91b0b62860da066a6409a5da41f" translate="yes" xml:space="preserve">
          <source>Selects all elements that are the nth child of their parent in relation to siblings with the same element name.</source>
          <target state="translated">Выбирает все элементы,которые являются n-ым дочерним по отношению к родным братьям и сестрам с одинаковым именем элемента.</target>
        </trans-unit>
        <trans-unit id="b8d0cf76044daf07017ffbe5139c0b5be66be6e3" translate="yes" xml:space="preserve">
          <source>Selects all elements that are the nth-child of their parent, counting from the last element to the first.</source>
          <target state="translated">Выбирает все элементы,которые являются n-м ребенком их родителя,отсчитывая от последнего элемента до первого.</target>
        </trans-unit>
        <trans-unit id="f6a62951da436f74e1779c00a0d2636092fcd06f" translate="yes" xml:space="preserve">
          <source>Selects all elements that are the nth-child of their parent.</source>
          <target state="translated">Выбирает все элементы,которые являются n-м ребенком их родителя.</target>
        </trans-unit>
        <trans-unit id="0b756624b2efc7b2d985cec25dbd9d959cbf5542" translate="yes" xml:space="preserve">
          <source>Selects all elements that are the only child of their parent.</source>
          <target state="translated">Выбирает все элементы,которые являются единственными детьми их родителей.</target>
        </trans-unit>
        <trans-unit id="c33f0d3cfa91120c35c1a70d896db8fa10fa5cfa" translate="yes" xml:space="preserve">
          <source>Selects all elements that are visible.</source>
          <target state="translated">Выбирает все видимые элементы.</target>
        </trans-unit>
        <trans-unit id="42d4c24b60721feb1dd9d648286569d67c6decf2" translate="yes" xml:space="preserve">
          <source>Selects all elements that do not match the given selector.</source>
          <target state="translated">Выбирает все элементы,которые не соответствуют заданному селектору.</target>
        </trans-unit>
        <trans-unit id="6cffcf142b731498a68da13d990cb3881c08f3a7" translate="yes" xml:space="preserve">
          <source>Selects all elements that have no siblings with the same element name.</source>
          <target state="translated">Выбирает все элементы,у которых нет братьев и сестер с одинаковыми именами элементов.</target>
        </trans-unit>
        <trans-unit id="db68910a7f845b35cad42db773fd76e022bbe51e" translate="yes" xml:space="preserve">
          <source>Selects all elements with the given class.</source>
          <target state="translated">Выбирает все элементы с данным классом.</target>
        </trans-unit>
        <trans-unit id="735daee6abc2bc6517bec931773efa945ec5f209" translate="yes" xml:space="preserve">
          <source>Selects all elements with the given tag name.</source>
          <target state="translated">Выбирает все элементы с заданным именем тега.</target>
        </trans-unit>
        <trans-unit id="2f12468efd2facd408d097c678258691580c27ac" translate="yes" xml:space="preserve">
          <source>Selects all elements.</source>
          <target state="translated">Выбирает все элементы.</target>
        </trans-unit>
        <trans-unit id="c1dd09ad2abd8bb82a9497a60d0c74bead91f016" translate="yes" xml:space="preserve">
          <source>Selects all input elements of type text.</source>
          <target state="translated">Выбирает все элементы ввода типового текста.</target>
        </trans-unit>
        <trans-unit id="67a140314a46ae08098b1cf57a72cd5e5b79dbf8" translate="yes" xml:space="preserve">
          <source>Selects all input, textarea, select and button elements.</source>
          <target state="translated">Выбирает все элементы ввода,текстовые области,элементы выделения и кнопки.</target>
        </trans-unit>
        <trans-unit id="e98be8e688a58a0d9de44bd93af5f4d660a54186" translate="yes" xml:space="preserve">
          <source>Selects all next elements matching &amp;ldquo;next&amp;rdquo; that are immediately preceded by a sibling &amp;ldquo;prev&amp;rdquo;.</source>
          <target state="translated">Выбирает все следующие элементы, соответствующие &amp;laquo;next&amp;raquo;, которым непосредственно предшествует &amp;laquo;prev&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="babcc76f8a2eaf292d41e9909b833b8237f646ae" translate="yes" xml:space="preserve">
          <source>Selects all paragraphs and wraps a bold tag around each of its contents.</source>
          <target state="translated">Выбирает все параграфы и наматывает жирный тег вокруг каждого из их содержимого.</target>
        </trans-unit>
        <trans-unit id="a36835c1acf647c040ba63700c2b735fd5c7fc17" translate="yes" xml:space="preserve">
          <source>Selects all paragraphs and wraps a jQuery object around each of its contents.</source>
          <target state="translated">Выбирает все параграфы и обертывает объект jQuery вокруг каждого его содержимого.</target>
        </trans-unit>
        <trans-unit id="5a4bed91efb6f9a5909cee1551b5f05d2ea34bcc" translate="yes" xml:space="preserve">
          <source>Selects all paragraphs, finds span elements inside these, and reverts the selection back to the paragraphs.</source>
          <target state="translated">Выбирает все параграфы,находит элементы диапазона внутри них и возвращает выделение обратно к параграфам.</target>
        </trans-unit>
        <trans-unit id="3e93b210ae8a95c62b43b6793d537e7f57acf9b4" translate="yes" xml:space="preserve">
          <source>Selects all paragraphs, then slices the selection to include only the first and second element.</source>
          <target state="translated">Выделяет все абзацы,затем разрезает выделение,чтобы включить только первый и второй элемент.</target>
        </trans-unit>
        <trans-unit id="40adcf5a3954c3a02b0e9920716d96f0495862a7" translate="yes" xml:space="preserve">
          <source>Selects all paragraphs, then slices the selection to include only the first element.</source>
          <target state="translated">Выделяет все абзацы,затем разрезает выделение,чтобы включить только первый элемент.</target>
        </trans-unit>
        <trans-unit id="ec45fca921a8472039aed007f1489458e13f5e14" translate="yes" xml:space="preserve">
          <source>Selects all paragraphs, then slices the selection to include only the second and third element.</source>
          <target state="translated">Выделяет все абзацы,затем разрезает выделение,чтобы включить только второй и третий элемент.</target>
        </trans-unit>
        <trans-unit id="f73e8e58454342c473503c63ec8b67e25eff53a9" translate="yes" xml:space="preserve">
          <source>Selects all paragraphs, then slices the selection to include only the second element.</source>
          <target state="translated">Выделяет все абзацы,затем разрезает выделение,чтобы включить только второй элемент.</target>
        </trans-unit>
        <trans-unit id="4a7f2a84a50d64036622e9ea7f84c18196201fcb" translate="yes" xml:space="preserve">
          <source>Selects all paragraphs, then slices the selection to include only the third element.</source>
          <target state="translated">Выделяет все абзацы,затем разрезает выделение,чтобы включить только третий элемент.</target>
        </trans-unit>
        <trans-unit id="6dfd21f77934c962c426762b941607d856ccd3d9" translate="yes" xml:space="preserve">
          <source>Selects all sibling elements that follow after the &amp;ldquo;prev&amp;rdquo; element, have the same parent, and match the filtering &amp;ldquo;siblings&amp;rdquo; selector.</source>
          <target state="translated">Выбирает все одноуровневые элементы, следующие после элемента &amp;laquo;prev&amp;raquo;, имеющие одного и того же родителя и соответствующие фильтрующему селектору &amp;laquo;одноуровневые&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="a1df6d8eebdb436cfb94e26403dd9dd4e367a2a1" translate="yes" xml:space="preserve">
          <source>Selects all the elements that are the nth-child of their parent in relation to siblings with the same element name, counting from the last element to the first.</source>
          <target state="translated">Выбирает все элементы,которые являются n-м ребенком их родителя по отношению к братьям и сестрам с одинаковым именем элемента,отсчитывая от последнего элемента до первого.</target>
        </trans-unit>
        <trans-unit id="312ea0332b53f2d1c1ca581f055d2ebc1e2ffad0" translate="yes" xml:space="preserve">
          <source>Selects element if it is currently focused.</source>
          <target state="translated">Выбирает элемент,если он в данный момент сфокусирован.</target>
        </trans-unit>
        <trans-unit id="1e7db4b62b14c64c2e4cda50f4bf4783bb8620fd" translate="yes" xml:space="preserve">
          <source>Selects elements that have the specified attribute with a value beginning exactly with a given string.</source>
          <target state="translated">Выбирает элементы,имеющие указанный атрибут со значением,начинающимся точно с заданной строки.</target>
        </trans-unit>
        <trans-unit id="d63e53805e9ae87e087a6c4a2e272a6ba8b049f4" translate="yes" xml:space="preserve">
          <source>Selects elements that have the specified attribute with a value containing a given substring.</source>
          <target state="translated">Выбирает элементы,имеющие указанный атрибут со значением,содержащим заданную подстроку.</target>
        </trans-unit>
        <trans-unit id="0fec2cdb00e09613c374738870cc066ab8656d06" translate="yes" xml:space="preserve">
          <source>Selects elements that have the specified attribute with a value containing a given word, delimited by spaces.</source>
          <target state="translated">Выбирает элементы,имеющие указанный атрибут со значением,содержащим заданное слово,разделенное пробелами.</target>
        </trans-unit>
        <trans-unit id="79509ca2d65ee7fcb7c2f017f07b922c6fba591c" translate="yes" xml:space="preserve">
          <source>Selects elements that have the specified attribute with a value either equal to a given string or starting with that string followed by a hyphen (-).</source>
          <target state="translated">Выбирает элементы,у которых указанный атрибут имеет значение либо равное заданной строке,либо начинающееся с этой строки с последующим дефисом (-).</target>
        </trans-unit>
        <trans-unit id="7d140cea9061a89351adf37936c907030724897b" translate="yes" xml:space="preserve">
          <source>Selects elements that have the specified attribute with a value ending exactly with a given string. The comparison is case sensitive.</source>
          <target state="translated">Выбирает элементы,которые имеют указанный атрибут со значением,заканчивающимся точно на заданную строку.Сравнение чувствительно к регистру.</target>
        </trans-unit>
        <trans-unit id="6bf83f200cc3513db41d467baef2dc38b33ece19" translate="yes" xml:space="preserve">
          <source>Selects elements that have the specified attribute with a value exactly equal to a certain value.</source>
          <target state="translated">Выбирает элементы,которые имеют указанный атрибут со значением,точно равным определенному значению.</target>
        </trans-unit>
        <trans-unit id="e85f9af968eff1005189e62ff883be9f5f43b779" translate="yes" xml:space="preserve">
          <source>Selects elements that have the specified attribute, with any value.</source>
          <target state="translated">Выбирает элементы,имеющие указанный атрибут,с любым значением.</target>
        </trans-unit>
        <trans-unit id="0bd58b1254b6b26c9b64245aa8dc2848547a1b12" translate="yes" xml:space="preserve">
          <source>Selects elements which contain at least one element that matches the specified selector.</source>
          <target state="translated">Выбирает элементы,которые содержат по крайней мере один элемент,соответствующий указанному селектору.</target>
        </trans-unit>
        <trans-unit id="bb8098251a2d5dddf2c727e3d9305899015fbdc5" translate="yes" xml:space="preserve">
          <source>Selects even elements, zero-indexed. See also :odd.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1685294709e1c314ca9794952e46def1ccffc8" translate="yes" xml:space="preserve">
          <source>Selects even elements, zero-indexed. See also odd.</source>
          <target state="translated">Выбирает чётные элементы,с нулевым индексом.См.также нечетные.</target>
        </trans-unit>
        <trans-unit id="ddf9894cd11d15fcd2657689963b9ac71094adbe" translate="yes" xml:space="preserve">
          <source>Selects odd elements, zero-indexed. See also :even.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46aa50381d2d25466bef54d53815431b627d34bc" translate="yes" xml:space="preserve">
          <source>Selects odd elements, zero-indexed. See also even.</source>
          <target state="translated">Выбирает нечетные элементы,с нулевым индексом.См.также ровно.</target>
        </trans-unit>
        <trans-unit id="5622e64ee47169c9d0b5c6a2d78bb2292d00e373" translate="yes" xml:space="preserve">
          <source>Selects the combined results of all the specified selectors.</source>
          <target state="translated">Выбирает комбинированные результаты всех указанных селекторов.</target>
        </trans-unit>
        <trans-unit id="4230b70ef603ecf99fe4ec7887bd23aebeedc064" translate="yes" xml:space="preserve">
          <source>Selects the element that is the root of the document.</source>
          <target state="translated">Выбирает элемент,который является корнем документа.</target>
        </trans-unit>
        <trans-unit id="49fed8752aaf1e141ae7f7d82020c77946dd72e7" translate="yes" xml:space="preserve">
          <source>Selects the first matched DOM element.</source>
          <target state="translated">Выбирает первый подходящий элемент DOM.</target>
        </trans-unit>
        <trans-unit id="2c838dc34a573624d02bead0b7f78130d08b37fb" translate="yes" xml:space="preserve">
          <source>Selects the last matched element.</source>
          <target state="translated">Выбирает последний подходящий элемент.</target>
        </trans-unit>
        <trans-unit id="1a2d74b9291de2f58c0821fcefd52a614afff7c7" translate="yes" xml:space="preserve">
          <source>Selects the target element indicated by the fragment identifier of the document&amp;rsquo;s URI.</source>
          <target state="translated">Выбирает целевой элемент, указанный идентификатором фрагмента URI документа.</target>
        </trans-unit>
        <trans-unit id="2122d88e2a64d624031df153ff3972e8b9ccc281" translate="yes" xml:space="preserve">
          <source>Send an id as data to the server, save some data to the server, and notify the user once it's complete. If the request fails, alert the user.</source>
          <target state="translated">Отправьте идентификатор в виде данных на сервер,сохраните некоторые данные на сервере и уведомите пользователя,как только они будут завершены.Если запрос не удастся выполнить,сообщите об этом пользователю.</target>
        </trans-unit>
        <trans-unit id="8658ae1466bf527e3dd6d98e514ecee8b2407051" translate="yes" xml:space="preserve">
          <source>Send an xml document as data to the server. By setting the processData option to &lt;code&gt;false&lt;/code&gt;, the automatic conversion of data to strings is prevented.</source>
          <target state="translated">Отправьте xml-документ как данные на сервер. Если для параметра processData установлено значение &lt;code&gt;false&lt;/code&gt; , автоматическое преобразование данных в строки предотвращается.</target>
        </trans-unit>
        <trans-unit id="cfeaf157e7c56723921c0be996a0d8049614529b" translate="yes" xml:space="preserve">
          <source>Send data to the server using a HTTP POST request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0fef2b9897872624f0e3c46dd2f2183fdfe4a41" translate="yes" xml:space="preserve">
          <source>Send form data using Ajax requests</source>
          <target state="translated">Отправка данных формы с помощью запросов Ajax</target>
        </trans-unit>
        <trans-unit id="be8b3341b920b4556b27849ea3923b035e535304" translate="yes" xml:space="preserve">
          <source>Sending Data to the Server</source>
          <target state="translated">Отправка данных на сервер</target>
        </trans-unit>
        <trans-unit id="a144807841a866abac7a53c6a9b994f2e222cbcd" translate="yes" xml:space="preserve">
          <source>Serialize a few complex objects</source>
          <target state="translated">Сериализовать несколько сложных объектов</target>
        </trans-unit>
        <trans-unit id="63ed5c2f8e78737fd1b3ff7eb6e1b49ee3fd6932" translate="yes" xml:space="preserve">
          <source>Serialize a form to a query string that could be sent to a server in an Ajax request.</source>
          <target state="translated">Сериализация формы к строке запроса,которая может быть отправлена на сервер в запросе Ajax.</target>
        </trans-unit>
        <trans-unit id="4043fe2f1e4cc1ee5d8c65c313d48f13fbe5266c" translate="yes" xml:space="preserve">
          <source>Serialize a key/value object.</source>
          <target state="translated">Сериализуйте ключ/объект значения.</target>
        </trans-unit>
        <trans-unit id="2850b89694c0db105340f97fab4f4f0df4f4daae" translate="yes" xml:space="preserve">
          <source>Set a data store for 2 names then remove one of them.</source>
          <target state="translated">Установите хранилище данных для 2-х имен и удалите одно из них.</target>
        </trans-unit>
        <trans-unit id="d3d5f0b576f04613a8af8da1221bad86abac9bb8" translate="yes" xml:space="preserve">
          <source>Set a numeric property on a paragraph and then remove it.</source>
          <target state="translated">Установите числовое свойство на абзац,а затем удалите его.</target>
        </trans-unit>
        <trans-unit id="415e9fa442913c0ff5bb0b2da457a3e5aa4630ea" translate="yes" xml:space="preserve">
          <source>Set a queue array to delete the queue.</source>
          <target state="translated">Установка массива очереди для удаления очереди.</target>
        </trans-unit>
        <trans-unit id="01fda2b6f88cc560db78cdb5721b1d4bf9e5ab95" translate="yes" xml:space="preserve">
          <source>Set a single select, a multiple select, checkboxes and a radio button .</source>
          <target state="translated">Установите один,несколько вариантов выбора,флажки и радиокнопку .</target>
        </trans-unit>
        <trans-unit id="dcd7e7e02ddf83e40cbae07a5022ad13b4ff3295" translate="yes" xml:space="preserve">
          <source>Set a timeout (in milliseconds) for the request. A value of 0 means there will be no timeout. This will override any global timeout set with &lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;. The timeout period starts at the point the &lt;code&gt;$.ajax&lt;/code&gt; call is made; if several other requests are in progress and the browser has no connections available, it is possible for a request to time out before it can be sent. &lt;strong&gt;In jQuery 1.4.x and below,&lt;/strong&gt; the XMLHttpRequest object will be in an invalid state if the request times out; accessing any object members may throw an exception. &lt;strong&gt;In Firefox 3.0+ only,&lt;/strong&gt; script and JSONP requests cannot be cancelled by a timeout; the script will run even if it arrives after the timeout period.</source>
          <target state="translated">Установите тайм-аут (в миллисекундах) для запроса. Значение 0 означает, что тайм-аута не будет. Это переопределит любой глобальный тайм-аут, установленный с помощью &lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$ .ajaxSetup ()&lt;/a&gt; . Период тайм-аута начинается с момента &lt;code&gt;$.ajax&lt;/code&gt; вызова $ .ajax ; если выполняется несколько других запросов и в браузере нет доступных соединений, для запроса может истечь время ожидания, прежде чем его можно будет отправить. &lt;strong&gt;В jQuery 1.4.x и ниже&lt;/strong&gt; объект XMLHttpRequest будет в недопустимом состоянии, если истечет время ожидания запроса; доступ к любым членам объекта может вызвать исключение. &lt;strong&gt;Только в Firefox 3.0+&lt;/strong&gt; запросы сценариев и JSONP не могут быть отменены по таймауту; сценарий будет запущен, даже если он будет доставлен по истечении периода ожидания.</target>
        </trans-unit>
        <trans-unit id="a75045c3e7e4e41869961e4536a201841a37d8d4" translate="yes" xml:space="preserve">
          <source>Set a timer to delay execution of subsequent items in the queue.</source>
          <target state="translated">Установите таймер для задержки выполнения последующих элементов в очереди.</target>
        </trans-unit>
        <trans-unit id="29bc597e05b5611f7a75e1d0062b8b589d81d71d" translate="yes" xml:space="preserve">
          <source>Set data on an element and see the results of hasData.</source>
          <target state="translated">Задайте данные по элементу и посмотрите результаты hasData.</target>
        </trans-unit>
        <trans-unit id="4df763c8781cee89c94fb1655e6b6f2638cf5b8b" translate="yes" xml:space="preserve">
          <source>Set default values for future Ajax requests. Its use is not recommended.</source>
          <target state="translated">Установите значения по умолчанию для будущих запросов Ajax.Его использование не рекомендуется.</target>
        </trans-unit>
        <trans-unit id="b8efd5c0d5323f84aaea2833f9663ce507ef5110" translate="yes" xml:space="preserve">
          <source>Set some attributes for all &amp;lt;img&amp;gt;s in the page.</source>
          <target state="translated">Установите некоторые атрибуты для всех &amp;lt;img&amp;gt; на странице.</target>
        </trans-unit>
        <trans-unit id="097a25d652bf055f7a137ff2a570d4f0be2804f8" translate="yes" xml:space="preserve">
          <source>Set the background color of the page to black.</source>
          <target state="translated">Установите черный цвет фона страницы.</target>
        </trans-unit>
        <trans-unit id="ee26402c1121939de683a5e3c569d8b6b4059083" translate="yes" xml:space="preserve">
          <source>Set the id for divs based on the position in the page.</source>
          <target state="translated">Установите идентификатор погружения в зависимости от положения на странице.</target>
        </trans-unit>
        <trans-unit id="1b434d70d1b6398f4a48de9838e66013be0964e4" translate="yes" xml:space="preserve">
          <source>Set the offset of the second paragraph:</source>
          <target state="translated">Установите смещение второго абзаца:</target>
        </trans-unit>
        <trans-unit id="4fab112a16558193a664503706e6bdc9b834ddb3" translate="yes" xml:space="preserve">
          <source>Set the scrollLeft of a div.</source>
          <target state="translated">Установите прокруткуСлева от дайва.</target>
        </trans-unit>
        <trans-unit id="80de7325e36ebaf59890fde0787ee0978812d6fd" translate="yes" xml:space="preserve">
          <source>Set the scrollTop of a div.</source>
          <target state="translated">Установите прокруткуВверх дайвинга.</target>
        </trans-unit>
        <trans-unit id="501160f93f7aac197ef0a4afa5136de4c99128c1" translate="yes" xml:space="preserve">
          <source>Set the src attribute from title attribute on the image.</source>
          <target state="translated">Установите атрибут src из атрибута title на изображении.</target>
        </trans-unit>
        <trans-unit id="0eb0fd641752abcc5ef3043a7964e10a309c836b" translate="yes" xml:space="preserve">
          <source>Set the value of an input box.</source>
          <target state="translated">Установите значение поля ввода.</target>
        </trans-unit>
        <trans-unit id="4c430c240166834ea88c0ed7281d7fd5e5999f98" translate="yes" xml:space="preserve">
          <source>Set this to &lt;code&gt;true&lt;/code&gt; if you wish to use the traditional style of &lt;a href=&quot;jquery.param&quot;&gt;param serialization&lt;/a&gt;.</source>
          <target state="translated">Установите значение &lt;code&gt;true&lt;/code&gt; , если вы хотите использовать традиционный стиль &lt;a href=&quot;jquery.param&quot;&gt;сериализации параметров&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4fc8d2b9d04536e217f8d6ee7a88a0bafbd2135d" translate="yes" xml:space="preserve">
          <source>Sets the defaults for Ajax requests to the url &quot;/xmlhttp/&quot;, disables global handlers and uses POST instead of GET. The following Ajax requests then sends some data without having to set anything else.</source>
          <target state="translated">Устанавливает значения по умолчанию для Ajax-запросов в url &quot;/xmlhttp/&quot;,отключает глобальные обработчики и использует POST вместо GET.Следующие запросы Ajax отправляют некоторые данные без необходимости устанавливать что-либо другое.</target>
        </trans-unit>
        <trans-unit id="1bc9506ed518c2ffaaeed5c77bcc37e4fff485f4" translate="yes" xml:space="preserve">
          <source>Setting a simple attribute</source>
          <target state="translated">Установка простого атрибута</target>
        </trans-unit>
        <trans-unit id="48d2152c54739da04de91aee4b49440f02938b01" translate="yes" xml:space="preserve">
          <source>Setting several attributes at once</source>
          <target state="translated">Установка сразу нескольких атрибутов</target>
        </trans-unit>
        <trans-unit id="47415531e62ab24a4bb2deca300877b6fef2b92e" translate="yes" xml:space="preserve">
          <source>Setting the third argument to false will attach a function that prevents the default action from occurring and stops the event from bubbling. The default is true.</source>
          <target state="translated">Установка третьего аргумента в значение false прикрепляет функцию,которая предотвращает действие по умолчанию и останавливает пузыривание события.Значение по умолчанию равно true.</target>
        </trans-unit>
        <trans-unit id="91f123ee7203e5bbd228a25c42679e0e53bd4cc4" translate="yes" xml:space="preserve">
          <source>Setting values using this method (or using the native &lt;code&gt;value&lt;/code&gt; property) does not cause the dispatch of the &lt;code&gt;change&lt;/code&gt; event. For this reason, the relevant event handlers will not be executed. If you want to execute them, you should call &lt;code&gt;.trigger( &quot;change&quot; )&lt;/code&gt; after setting the value.</source>
          <target state="translated">Установка значений с помощью этого метода (или использования собственного свойства &lt;code&gt;value&lt;/code&gt; ) не вызывает отправку события &lt;code&gt;change&lt;/code&gt; . По этой причине соответствующие обработчики событий не будут выполняться. Если вы хотите выполнить их, вы должны вызвать &lt;code&gt;.trigger( &quot;change&quot; )&lt;/code&gt; после установки значения.</target>
        </trans-unit>
        <trans-unit id="469d5b183fdc0d59e41a51e61529cdd95274ba7c" translate="yes" xml:space="preserve">
          <source>Shift</source>
          <target state="translated">Shift</target>
        </trans-unit>
        <trans-unit id="db6af5aa39d7397cfe1ad95f101c0b53b8393168" translate="yes" xml:space="preserve">
          <source>Shorthand CSS properties (e.g. font, background, border) are not fully supported. For example, if you want to animate the rendered border width, at least a border style and border width other than &quot;auto&quot; must be set in advance. Or, if you want to animate font size, you would use &lt;code&gt;fontSize&lt;/code&gt; or the CSS equivalent &lt;code&gt;'font-size'&lt;/code&gt; rather than simply &lt;code&gt;'font'&lt;/code&gt;.</source>
          <target state="translated">Сокращенные свойства CSS (например, шрифт, фон, граница) не полностью поддерживаются. Например, если вы хотите анимировать ширину визуализированной границы, необходимо заранее установить по крайней мере стиль и ширину границы, отличные от &amp;laquo;авто&amp;raquo;. Или, если вы хотите анимировать размер шрифта, вы должны использовать &lt;code&gt;fontSize&lt;/code&gt; или эквивалентный ему CSS &lt;code&gt;'font-size'&lt;/code&gt; а не просто &lt;code&gt;'font'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13ce66dde31804d78c943c988b0dbf4d57737048" translate="yes" xml:space="preserve">
          <source>Should &lt;code&gt;.trigger( &quot;eventName&quot; )&lt;/code&gt; be used, it will search for an &quot;eventName&quot; property on the object and attempt to execute it after any attached jQuery handlers are executed. It does not check whether the property is a function or not. To avoid this behavior, &lt;code&gt;.triggerHandler( &quot;eventName&quot; )&lt;/code&gt; should be used instead.</source>
          <target state="translated">Если используется &lt;code&gt;.trigger( &quot;eventName&quot; )&lt;/code&gt; , он будет искать свойство &quot;eventName&quot; в объекте и пытаться выполнить его после того, как будут выполнены все прикрепленные обработчики jQuery. Он не проверяет, является ли свойство функцией или нет. Чтобы избежать такого поведения, вместо этого следует использовать &lt;code&gt;.triggerHandler( &quot;eventName&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e22b139c05e4b38773ef90bc8904de0d27d90c20" translate="yes" xml:space="preserve">
          <source>Show a loading message whenever an Ajax request starts (and none is already active).</source>
          <target state="translated">Показывать сообщение о загрузке всякий раз,когда начинается запрос Ajax (и ни один из них уже не активен).</target>
        </trans-unit>
        <trans-unit id="9f252669f882d844dde09972cc0a4a1f2df2cda9" translate="yes" xml:space="preserve">
          <source>Show a message before an Ajax request is sent.</source>
          <target state="translated">Покажите сообщение перед отправкой запроса Ajax.</target>
        </trans-unit>
        <trans-unit id="b476ab773e940c40b6948b21c71c228f1f11a21b" translate="yes" xml:space="preserve">
          <source>Show a message when an Ajax request completes successfully.</source>
          <target state="translated">Показывать сообщение при успешном завершении запроса Ajax.</target>
        </trans-unit>
        <trans-unit id="7b41f7448fb41b38cd17cdcae79d3950abdd5520" translate="yes" xml:space="preserve">
          <source>Show a message when an Ajax request completes.</source>
          <target state="translated">Показывать сообщение при завершении запроса Ajax.</target>
        </trans-unit>
        <trans-unit id="05933287608489a9d52cfaf3e1830e781ba4aa9b" translate="yes" xml:space="preserve">
          <source>Show a message when an Ajax request fails.</source>
          <target state="translated">Показывать сообщение при неудачном запросе Ajax.</target>
        </trans-unit>
        <trans-unit id="519514a8001648e93ee443893ab4b92b963bc312" translate="yes" xml:space="preserve">
          <source>Show all span and input elements with an animation. Change the text once the animation is done.</source>
          <target state="translated">Показать все элементы пролета и ввода с помощью анимации.Измените текст после завершения анимации.</target>
        </trans-unit>
        <trans-unit id="984335580fdfb879f6e3f885677f9f166cd1427f" translate="yes" xml:space="preserve">
          <source>Show how event delegation can be done with closest. The closest list element toggles a yellow background when it or its descendent is clicked.</source>
          <target state="translated">Покажите,как делегирование мероприятий может быть осуществлено наиболее близко.Элемент ближайшего списка переключает желтый фон при щелчке по нему или его потомку.</target>
        </trans-unit>
        <trans-unit id="0ae17c6ac132af952cc810c0dcc914e28fa26861" translate="yes" xml:space="preserve">
          <source>Show number of times mouseout and mouseleave events are triggered. &lt;code&gt;mouseout&lt;/code&gt; fires when the pointer moves out of child element as well, while &lt;code&gt;mouseleave&lt;/code&gt; fires only when the pointer moves out of the bound element.</source>
          <target state="translated">Показать количество запусков событий mouseout и mouseleave. &lt;code&gt;mouseout&lt;/code&gt; также срабатывает, когда указатель перемещается из дочернего элемента, а &lt;code&gt;mouseleave&lt;/code&gt; срабатывает только тогда, когда указатель перемещается за пределы привязанного элемента.</target>
        </trans-unit>
        <trans-unit id="3625594e77ad218412dfedbe46982302913ad5ac" translate="yes" xml:space="preserve">
          <source>Show or manipulate the queue of functions to be executed on the matched element.</source>
          <target state="translated">Показывать или манипулировать очередью функций,которые будут выполняться на соответствующем элементе.</target>
        </trans-unit>
        <trans-unit id="39761be7b983dab5e329662e5feed6f9934622b4" translate="yes" xml:space="preserve">
          <source>Show or manipulate the queue of functions to be executed on the matched elements.</source>
          <target state="translated">Показывать или манипулировать очередью функций,которые будут выполняться на совпадающих элементах.</target>
        </trans-unit>
        <trans-unit id="16df6b0062351304bd84b3a27580952641a99624" translate="yes" xml:space="preserve">
          <source>Show texts when mouseenter and mouseout event triggering. &lt;code&gt;mouseover&lt;/code&gt; fires when the pointer moves into the child element as well, while &lt;code&gt;mouseenter&lt;/code&gt; fires only when the pointer moves into the bound element.</source>
          <target state="translated">Показывать текст при срабатывании событий mouseenter и mouseout. &lt;code&gt;mouseover&lt;/code&gt; также срабатывает, когда указатель перемещается на дочерний элемент, а &lt;code&gt;mouseenter&lt;/code&gt; срабатывает только тогда, когда указатель перемещается в связанный элемент.</target>
        </trans-unit>
        <trans-unit id="f22e04704b0222408ca3a60fd105ab1256854512" translate="yes" xml:space="preserve">
          <source>Show texts when mouseup and mousedown event triggering.</source>
          <target state="translated">Показывать тексты при срабатывании мыши и мыши.</target>
        </trans-unit>
        <trans-unit id="9b08505c4f67fcfe1818b9165cd3486bbdbc8c6c" translate="yes" xml:space="preserve">
          <source>Show the browser info.</source>
          <target state="translated">Показывать информацию о браузере.</target>
        </trans-unit>
        <trans-unit id="ad19f5bdd2ca5c41c2e37f9cba8cb903d27e3050" translate="yes" xml:space="preserve">
          <source>Show the event object for the keydown handler when a key is pressed in the input.</source>
          <target state="translated">Показывать объект события для обработчика клавиатуры при нажатии клавиши на входе.</target>
        </trans-unit>
        <trans-unit id="d93161b14d70830e3bea85c83d58f3562adbd85e" translate="yes" xml:space="preserve">
          <source>Show the event object for the keyup handler (using a simple $.print plugin) when a key is released in the input.</source>
          <target state="translated">Показывать объект события для обработчика ключей (с помощью простого плагина $.print),когда ключ освобождается на входе.</target>
        </trans-unit>
        <trans-unit id="fa869efebfddd7c6615aaf04bfabcb5e6772b61b" translate="yes" xml:space="preserve">
          <source>Show the event object when a key is pressed in the input. Note: This demo relies on a simple $.print() plugin (https://api.jquery.com/resources/events.js) for the event object's output.</source>
          <target state="translated">Показывать объект события при нажатии клавиши на входе.Примечание:Демонстрация основана на простом плагине $.print()(https://api.jquery.com/resources/events.js)для вывода объекта события.</target>
        </trans-unit>
        <trans-unit id="a9896f8a3339a0df5ff5e1ecb5209d4930eb8f02" translate="yes" xml:space="preserve">
          <source>Show the first div, followed by each next adjacent sibling div in order, with a 200ms animation. Each animation starts when the previous sibling div's animation ends.</source>
          <target state="translated">Покажите первый дайв,а затем каждый следующий соседний дайв-брат по порядку,с анимацией 200 мс.Каждая анимация начинается,когда заканчивается анимация предыдущего дайва.</target>
        </trans-unit>
        <trans-unit id="9b6557600916e731608ebca494d2d50dcc744408" translate="yes" xml:space="preserve">
          <source>Show the length of the queue.</source>
          <target state="translated">Покажите длину очереди.</target>
        </trans-unit>
        <trans-unit id="b544befbd2f388b14fd260171b1cca0a42ebef79" translate="yes" xml:space="preserve">
          <source>Show the mouse coordinates when the mouse is moved over the yellow div. Coordinates are relative to the window, which in this case is the iframe.</source>
          <target state="translated">Показывать координаты мыши при перемещении мыши над желтым div.Координаты относятся к окну,которое в данном случае является iframe.</target>
        </trans-unit>
        <trans-unit id="69f44bacb640a60b4ce5f71dd59e0939296ec35a" translate="yes" xml:space="preserve">
          <source>Show the mouse position relative to the left and top edges of the document (within this iframe).</source>
          <target state="translated">Покажите положение мыши относительно левого и верхнего краев документа (в этом ифрейме).</target>
        </trans-unit>
        <trans-unit id="47f8b628a56746aed654aec7b07b6ed34563e493" translate="yes" xml:space="preserve">
          <source>Show the number of times mouseout and mouseleave events are triggered. &lt;code&gt;mouseout&lt;/code&gt; fires when the pointer moves out of the child element as well, while &lt;code&gt;mouseleave&lt;/code&gt; fires only when the pointer moves out of the bound element.</source>
          <target state="translated">Показать количество запусков событий mouseout и mouseleave. &lt;code&gt;mouseout&lt;/code&gt; также срабатывает, когда указатель выходит из дочернего элемента, а &lt;code&gt;mouseleave&lt;/code&gt; срабатывает только тогда, когда указатель перемещается за пределы привязанного элемента.</target>
        </trans-unit>
        <trans-unit id="404a7c06b436d2f84162fadbf19e223dca32ae52" translate="yes" xml:space="preserve">
          <source>Show the number of times mouseover and mouseenter events are triggered. &lt;code&gt;mouseover&lt;/code&gt; fires when the pointer moves into the child element as well, while &lt;code&gt;mouseenter&lt;/code&gt; fires only when the pointer moves into the bound element.</source>
          <target state="translated">Показывает, сколько раз запускались события mouseover и mouseenter. &lt;code&gt;mouseover&lt;/code&gt; также срабатывает, когда указатель перемещается на дочерний элемент, а &lt;code&gt;mouseenter&lt;/code&gt; срабатывает только тогда, когда указатель перемещается в связанный элемент.</target>
        </trans-unit>
        <trans-unit id="090aa960971137d74c0e2c71583ff9a73df44c91" translate="yes" xml:space="preserve">
          <source>Show the order in the jQuery object.</source>
          <target state="translated">Покажите порядок в объекте jQuery.</target>
        </trans-unit>
        <trans-unit id="71a35cb28a1beadceaa3c6e2209e0fec267e3777" translate="yes" xml:space="preserve">
          <source>Show various heights. Note the values are from the iframe so might be smaller than you expected. The yellow highlight shows the iframe body.</source>
          <target state="translated">Покажи разные высоты.Обратите внимание,что значения из iframe могут быть меньше,чем вы ожидали.Желтая подсветка показывает тело ифрейма.</target>
        </trans-unit>
        <trans-unit id="9473936f01cbca6d69f1dece6d43856b6724edb6" translate="yes" xml:space="preserve">
          <source>Show various widths. Note the values are from the iframe so might be smaller than you expected. The yellow highlight shows the iframe body.</source>
          <target state="translated">Показывать разную ширину.Обратите внимание,что значения из iframe могут быть меньше,чем вы ожидали.Желтая подсветка показывает тело iframe.</target>
        </trans-unit>
        <trans-unit id="c33e45b32872d9e6db475a6df01ad1c0aa074865" translate="yes" xml:space="preserve">
          <source>Shows a few ways is() can be used inside an event handler.</source>
          <target state="translated">Показывать несколько способов is()можно внутри обработчика события.</target>
        </trans-unit>
        <trans-unit id="9f80a91d7a7e65cd7176b7698d0ff5aa4efc6c25" translate="yes" xml:space="preserve">
          <source>Shows all hidden divs and counts hidden inputs.</source>
          <target state="translated">Показывает все скрытые погружения и подсчитывает скрытые входы.</target>
        </trans-unit>
        <trans-unit id="23f883856a4edafeed47bb6a4844925a9fdd3ac1" translate="yes" xml:space="preserve">
          <source>Shows all paragraphs, then hides them all, back and forth.</source>
          <target state="translated">Показывает все параграфы,затем скрывает их все,туда-сюда.</target>
        </trans-unit>
        <trans-unit id="3a32e745a60f4a870e675d1abfd69e6874c3fdb2" translate="yes" xml:space="preserve">
          <source>Shows the parent of each element as (parent &amp;gt; child). Check the View Source to see the raw html.</source>
          <target state="translated">Показывает родительский элемент каждого элемента как (родительский&amp;gt; дочерний). Проверьте источник просмотра, чтобы увидеть необработанный HTML.</target>
        </trans-unit>
        <trans-unit id="bc96ba5e16ff60d54045222bd716907b909f13a1" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;empty&quot;&gt;.empty()&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;.remove()&lt;/code&gt; method takes elements out of the DOM. Use &lt;code&gt;.remove()&lt;/code&gt; when you want to remove the element itself, as well as everything inside it. In addition to the elements themselves, all bound events and jQuery data associated with the elements are removed. To remove the elements without removing data and events, use &lt;code&gt;&lt;a href=&quot;detach&quot;&gt;.detach()&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Подобно &lt;code&gt;&lt;a href=&quot;empty&quot;&gt;.empty()&lt;/a&gt;&lt;/code&gt; , метод &lt;code&gt;.remove()&lt;/code&gt; извлекает элементы из DOM. Используйте &lt;code&gt;.remove()&lt;/code&gt; когда хотите удалить сам элемент, а также все, что внутри него. Помимо самих элементов, удаляются все связанные события и данные jQuery, связанные с элементами. Чтобы удалить элементы без удаления данных и событий, используйте вместо этого &lt;code&gt;&lt;a href=&quot;detach&quot;&gt;.detach()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc3d4b313a79ee01993258bfb62f9d7410a27b2f" translate="yes" xml:space="preserve">
          <source>Similar to other content-adding methods such as &lt;code&gt;&lt;a href=&quot;append&quot;&gt;.append()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;before&quot;&gt;.before()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;.prepend()&lt;/code&gt; also supports passing in multiple arguments as input. Supported input includes DOM elements, jQuery objects, HTML strings, and arrays of DOM elements.</source>
          <target state="translated">Подобно другим методам добавления содержимого, таким как &lt;code&gt;&lt;a href=&quot;append&quot;&gt;.append()&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;before&quot;&gt;.before()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;.prepend()&lt;/code&gt; также поддерживает передачу нескольких аргументов в качестве входных. Поддерживаемые входные данные включают элементы DOM, объекты jQuery, строки HTML и массивы элементов DOM.</target>
        </trans-unit>
        <trans-unit id="a1b7b3cb192f9f19b267d26bdb4a4b8da9505760" translate="yes" xml:space="preserve">
          <source>Similar to other content-adding methods such as &lt;code&gt;&lt;a href=&quot;prepend&quot;&gt;.prepend()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;after&quot;&gt;.after()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;.before()&lt;/code&gt; also supports passing in multiple arguments as input. Supported input includes DOM elements, jQuery objects, HTML strings, and arrays of DOM elements.</source>
          <target state="translated">Подобно другим методам добавления содержимого, таким как &lt;code&gt;&lt;a href=&quot;prepend&quot;&gt;.prepend()&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;after&quot;&gt;.after()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;.before()&lt;/code&gt; также поддерживает передачу нескольких аргументов в качестве входных. Поддерживаемые входные данные включают элементы DOM, объекты jQuery, строки HTML и массивы элементов DOM.</target>
        </trans-unit>
        <trans-unit id="006392ad7e2187f99a07cd2030ba9a75d427ec4d" translate="yes" xml:space="preserve">
          <source>Similar to other content-adding methods such as &lt;code&gt;&lt;a href=&quot;prepend&quot;&gt;.prepend()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;before&quot;&gt;.before()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;.after()&lt;/code&gt; also supports passing in multiple arguments as input. Supported input includes DOM elements, jQuery objects, HTML strings, and arrays of DOM elements.</source>
          <target state="translated">Подобно другим методам добавления содержимого, таким как &lt;code&gt;&lt;a href=&quot;prepend&quot;&gt;.prepend()&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;before&quot;&gt;.before()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;.after()&lt;/code&gt; также поддерживает передачу нескольких аргументов в качестве входных. Поддерживаемые входные данные включают элементы DOM, объекты jQuery, строки HTML и массивы элементов DOM.</target>
        </trans-unit>
        <trans-unit id="df29cb0d48d7733d0bca93bbd664bfcac55e3e87" translate="yes" xml:space="preserve">
          <source>Similar to other content-adding methods such as &lt;code&gt;&lt;a href=&quot;prepend&quot;&gt;.prepend()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;before&quot;&gt;.before()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;.append()&lt;/code&gt; also supports passing in multiple arguments as input. Supported input includes DOM elements, jQuery objects, HTML strings, and arrays of DOM elements.</source>
          <target state="translated">Подобно другим методам добавления содержимого, таким как &lt;code&gt;&lt;a href=&quot;prepend&quot;&gt;.prepend()&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;before&quot;&gt;.before()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;.append()&lt;/code&gt; также поддерживает передачу нескольких аргументов в качестве входных. Поддерживаемые входные данные включают элементы DOM, объекты jQuery, строки HTML и массивы элементов DOM.</target>
        </trans-unit>
        <trans-unit id="43e7ddc0a9479bf30d1a0ff5889e2b9da87c3b03" translate="yes" xml:space="preserve">
          <source>Similarly, a handler can call &lt;code&gt;event.preventDefault()&lt;/code&gt; to cancel any default action that the browser may have for this event; for example, the default action on a &lt;code&gt;click&lt;/code&gt; event is to follow the link. Not all browser events have default actions, and not all default actions can be canceled. See the &lt;a href=&quot;https://www.w3.org/TR/DOM-Level-3-Events/#event-types-list&quot;&gt;W3C Events Specification&lt;/a&gt; for details.</source>
          <target state="translated">Точно так же обработчик может вызвать &lt;code&gt;event.preventDefault()&lt;/code&gt; чтобы отменить любое действие по умолчанию, которое браузер может выполнить для этого события; например, действие по умолчанию для события &lt;code&gt;click&lt;/code&gt; - переход по ссылке. Не все события браузера имеют действия по умолчанию, и не все действия по умолчанию можно отменить. Подробнее см. &lt;a href=&quot;https://www.w3.org/TR/DOM-Level-3-Events/#event-types-list&quot;&gt;Спецификацию событий W3C&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ccc5cf9bc9bce46f452c1b0c6151b92830a99ee3" translate="yes" xml:space="preserve">
          <source>Similarly, an element may also be passed to find:</source>
          <target state="translated">Точно так же элемент может быть передан для поиска:</target>
        </trans-unit>
        <trans-unit id="f9284b14e12238f3e08110b72509fd3a3bf2c689" translate="yes" xml:space="preserve">
          <source>Similarly, if we retrieve a jQuery object consisting of one of the three list items, &lt;code&gt;.index()&lt;/code&gt; will search for that list item:</source>
          <target state="translated">Точно так же, если мы получим объект jQuery, состоящий из одного из трех элементов списка, &lt;code&gt;.index()&lt;/code&gt; будет искать этот элемент списка:</target>
        </trans-unit>
        <trans-unit id="af3ab504fe94703d8bc8d32f7b6369c311849311" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;.after()&lt;/code&gt; can accept any number of additional arguments, the same result can be achieved by passing in the three &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s as three separate arguments, like so: &lt;code&gt;$( &quot;p&quot; ).first().after( $newdiv1, newdiv2, existingdiv1 )&lt;/code&gt;. The type and number of arguments will largely depend on the elements that are collected in the code.</source>
          <target state="translated">Поскольку &lt;code&gt;.after()&lt;/code&gt; может принимать любое количество дополнительных аргументов, того же результата можно достичь, передав три &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; как три отдельных аргумента, например: &lt;code&gt;$( &quot;p&quot; ).first().after( $newdiv1, newdiv2, existingdiv1 )&lt;/code&gt; . Тип и количество аргументов во многом будут зависеть от элементов, которые собраны в коде.</target>
        </trans-unit>
        <trans-unit id="2e9baad5e5717759e600d8fa39a59f53a3545d1b" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;.append()&lt;/code&gt; can accept any number of additional arguments, the same result can be achieved by passing in the three &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s as three separate arguments, like so: &lt;code&gt;$('body').append( $newdiv1, newdiv2, existingdiv1 )&lt;/code&gt;. The type and number of arguments will largely depend on how you collect the elements in your code.</source>
          <target state="translated">Поскольку &lt;code&gt;.append()&lt;/code&gt; может принимать любое количество дополнительных аргументов, того же результата можно достичь, передав три &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; в виде трех отдельных аргументов, например: &lt;code&gt;$('body').append( $newdiv1, newdiv2, existingdiv1 )&lt;/code&gt; . Тип и количество аргументов во многом зависят от того, как вы собираете элементы в своем коде.</target>
        </trans-unit>
        <trans-unit id="3866949d83d1435a9a87376fd01b8109f97bbae5" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;.before()&lt;/code&gt; can accept any number of additional arguments, the same result can be achieved by passing in the three &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s as three separate arguments, like so: &lt;code&gt;$( &quot;p&quot; ).first().before( $newdiv1, newdiv2, existingdiv1 )&lt;/code&gt;. The type and number of arguments will largely depend on how you collect the elements in your code.</source>
          <target state="translated">Поскольку &lt;code&gt;.before()&lt;/code&gt; может принимать любое количество дополнительных аргументов, того же результата можно достичь, передав три &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; как три отдельных аргумента, например: &lt;code&gt;$( &quot;p&quot; ).first().before( $newdiv1, newdiv2, existingdiv1 )&lt;/code&gt; . Тип и количество аргументов во многом зависят от того, как вы собираете элементы в своем коде.</target>
        </trans-unit>
        <trans-unit id="9ff88230d8cf6f6e9a4f26e921ba3235226053a6" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;.prepend()&lt;/code&gt; can accept any number of additional arguments, the same result can be achieved by passing in the three &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s as three separate arguments, like so: &lt;code&gt;$( &quot;body&quot; ).prepend( $newdiv1, newdiv2, existingdiv1 )&lt;/code&gt;. The type and number of arguments will largely depend on how you collect the elements in your code.</source>
          <target state="translated">Поскольку &lt;code&gt;.prepend()&lt;/code&gt; может принимать любое количество дополнительных аргументов, того же результата можно достичь, передав три &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; как три отдельных аргумента, например: &lt;code&gt;$( &quot;body&quot; ).prepend( $newdiv1, newdiv2, existingdiv1 )&lt;/code&gt; . Тип и количество аргументов во многом зависят от того, как вы собираете элементы в своем коде.</target>
        </trans-unit>
        <trans-unit id="22770ea7aaf9fb3b5d0d4217e44d0619775c6eeb" translate="yes" xml:space="preserve">
          <source>Since &lt;strong&gt;jQuery 3&lt;/strong&gt;, every two-character sequence of &quot;-&quot; (U+002D) followed by a lowercase ASCII letter in a key is replaced by the uppercase version of the letter, in alignment with the &lt;a href=&quot;https://html.spec.whatwg.org/multipage/dom.html#dom-dataset&quot;&gt;HTML dataset API&lt;/a&gt;. A statement like &lt;code&gt;$( &quot;body&quot; ).data( { &quot;my-name&quot;: &quot;aValue&quot; } ).data();&lt;/code&gt; will return &lt;code&gt;{ myName: &quot;aValue&quot; }&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b1ff6e137cf5a7674c0a4b1dd9506e55d3f239" translate="yes" xml:space="preserve">
          <source>Since all &lt;code&gt;.live()&lt;/code&gt; events are attached at the &lt;code&gt;document&lt;/code&gt; element, events take the longest and slowest possible path before they are handled.</source>
          <target state="translated">Поскольку все &lt;code&gt;.live()&lt;/code&gt; прикрепляются к элементу &lt;code&gt;document&lt;/code&gt; , события проходят самый длинный и самый медленный путь, прежде чем они будут обработаны.</target>
        </trans-unit>
        <trans-unit id="235d61f94fedb8dacf1f14cb572f293f702d3042" translate="yes" xml:space="preserve">
          <source>Since each request requires its own transport object instance, transports cannot be registered directly. Therefore, you should provide a function that returns a transport instead.</source>
          <target state="translated">Так как для каждого запроса требуется собственный экземпляр транспортного объекта,перевозки не могут быть зарегистрированы напрямую.Поэтому вы должны предоставить функцию,которая возвращает транспорт.</target>
        </trans-unit>
        <trans-unit id="ce2a7c642237538647f2d47dcc1dde9059a17c23" translate="yes" xml:space="preserve">
          <source>Since jQuery 1.4.3, &lt;a href=&quot;https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes&quot;&gt;&lt;code&gt;data-*&lt;/code&gt; attributes&lt;/a&gt; are used to initialize jQuery data. An element's &lt;code&gt;data-*&lt;/code&gt; attributes are retrieved the first time the &lt;code&gt;data()&lt;/code&gt; method is invoked upon it, and then are no longer accessed or mutated (all values are stored internally by jQuery).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5969353c95e8154458c9a2e8efa05a46c0fd3e01" translate="yes" xml:space="preserve">
          <source>Since jQuery 1.6, dashes in &lt;code&gt;data-*&lt;/code&gt; attribute names have been processed in alignment with the &lt;a href=&quot;https://html.spec.whatwg.org/multipage/dom.html#dom-dataset&quot;&gt;HTML dataset API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b94a3fdcc7bc381130af142791076c03992641c6" translate="yes" xml:space="preserve">
          <source>Since jQuery uses one global interval, no animation should be running or all animations should stop for the change of this property to take effect.</source>
          <target state="translated">Так как jQuery использует один глобальный интервал,ни одна анимация не должна быть запущена или все анимации должны быть остановлены,чтобы изменение этого свойства вступило в силу.</target>
        </trans-unit>
        <trans-unit id="bb1ebd8b88fa1cbf6d066706d6ca6582244e64cf" translate="yes" xml:space="preserve">
          <source>Since the &lt;a href=&quot;jquery.get&quot;&gt;&lt;code&gt;jQuery.get()&lt;/code&gt;&lt;/a&gt; method returns a &lt;code&gt;jqXHR&lt;/code&gt; object, which is derived from a Deferred object, we can attach a callback for both success and error using the &lt;code&gt;deferred.always()&lt;/code&gt; method.</source>
          <target state="translated">Поскольку метод &lt;a href=&quot;jquery.get&quot;&gt; &lt;code&gt;jQuery.get()&lt;/code&gt; &lt;/a&gt; возвращает объект &lt;code&gt;jqXHR&lt;/code&gt; , который является производным от объекта Deferred, мы можем прикрепить обратный вызов как для успеха, так и для ошибки, используя метод &lt;code&gt;deferred.always()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dcb73e61c93c837cbc057fc46e56718b7e1f1393" translate="yes" xml:space="preserve">
          <source>Since the &lt;a href=&quot;jquery.get&quot;&gt;&lt;code&gt;jQuery.get&lt;/code&gt;&lt;/a&gt; method returns a jqXHR object, which is derived from a Deferred object, we can add rejection handlers using the &lt;code&gt;.catch&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6342a4abce39c6640aa7cef5fb2c053d726fdd04" translate="yes" xml:space="preserve">
          <source>Since the &lt;a href=&quot;jquery.get&quot;&gt;&lt;code&gt;jQuery.get&lt;/code&gt;&lt;/a&gt; method returns a jqXHR object, which is derived from a Deferred object, we can attach a success callback using the &lt;code&gt;.done()&lt;/code&gt; method.</source>
          <target state="translated">Поскольку метод &lt;a href=&quot;jquery.get&quot;&gt; &lt;code&gt;jQuery.get&lt;/code&gt; &lt;/a&gt; возвращает объект jqXHR, который является производным от объекта Deferred, мы можем прикрепить успешный обратный вызов с помощью &lt;code&gt;.done()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5872a8250fa5893d3546adab12605b8ec365deb7" translate="yes" xml:space="preserve">
          <source>Since the &lt;a href=&quot;jquery.get&quot;&gt;&lt;code&gt;jQuery.get&lt;/code&gt;&lt;/a&gt; method returns a jqXHR object, which is derived from a Deferred object, we can attach handlers using the &lt;code&gt;.then&lt;/code&gt; method.</source>
          <target state="translated">Поскольку метод &lt;a href=&quot;jquery.get&quot;&gt; &lt;code&gt;jQuery.get&lt;/code&gt; &lt;/a&gt; возвращает объект jqXHR, который является производным от объекта Deferred, мы можем присоединять обработчики с помощью метода &lt;code&gt;.then&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f3c5742ce47f98262f8e52369b1aa15badf1bea" translate="yes" xml:space="preserve">
          <source>Since the &lt;a href=&quot;jquery.get&quot;&gt;&lt;code&gt;jQuery.get&lt;/code&gt;&lt;/a&gt; method returns a jqXHR object, which is derived from a Deferred object, we can rejection handlers using the &lt;code&gt;.catch&lt;/code&gt; method.</source>
          <target state="translated">Поскольку метод &lt;a href=&quot;jquery.get&quot;&gt; &lt;code&gt;jQuery.get&lt;/code&gt; &lt;/a&gt; возвращает объект jqXHR, который является производным от объекта Deferred, мы можем &lt;code&gt;.catch&lt;/code&gt; обработчики, используя метод .catch .</target>
        </trans-unit>
        <trans-unit id="bfa98b5bcb4e82764aa5222d51deca0844c19898" translate="yes" xml:space="preserve">
          <source>Since the &lt;a href=&quot;jquery.get&quot;&gt;&lt;code&gt;jQuery.get&lt;/code&gt;&lt;/a&gt; method returns a jqXHR object, which is derived from a Deferred, you can attach a success and failure callback using the &lt;code&gt;deferred.done()&lt;/code&gt; and &lt;code&gt;deferred.fail()&lt;/code&gt; methods.</source>
          <target state="translated">Поскольку метод &lt;a href=&quot;jquery.get&quot;&gt; &lt;code&gt;jQuery.get&lt;/code&gt; &lt;/a&gt; возвращает объект jqXHR, который является производным от Deferred, вы можете присоединить обратный вызов успешного или неудачного выполнения, используя методы &lt;code&gt;deferred.done()&lt;/code&gt; и &lt;code&gt;deferred.fail()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f92de5e75bfc3177db7ca895588568fbf9cbffb1" translate="yes" xml:space="preserve">
          <source>Since the &lt;a href=&quot;live&quot;&gt;&lt;code&gt;.live()&lt;/code&gt;&lt;/a&gt; method handles events once they have propagated to the top of the document, it is not possible to stop propagation of live events. Similarly, events handled by &lt;code&gt;&lt;a href=&quot;delegate&quot;&gt;.delegate()&lt;/a&gt;&lt;/code&gt; will propagate to the elements to which they are delegated; event handlers bound on any elements below it in the DOM tree will already have been executed by the time the delegated event handler is called. These handlers, therefore, may prevent the delegated handler from triggering by calling &lt;code&gt;&lt;a href=&quot;event.stoppropagation&quot;&gt;event.stopPropagation()&lt;/a&gt;&lt;/code&gt; or returning &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Поскольку метод &lt;a href=&quot;live&quot;&gt; &lt;code&gt;.live()&lt;/code&gt; &lt;/a&gt; обрабатывает события после их распространения в верхнюю часть документа, невозможно остановить распространение живых событий. Точно так же события, обрабатываемые &lt;code&gt;&lt;a href=&quot;delegate&quot;&gt;.delegate()&lt;/a&gt;&lt;/code&gt; будут распространяться на элементы, которым они делегированы; обработчики событий, привязанные к любым элементам под ним в дереве DOM, уже будут выполнены к моменту вызова делегированного обработчика событий. Таким образом, эти обработчики могут предотвратить запуск делегированного обработчика, вызвав &lt;code&gt;&lt;a href=&quot;event.stoppropagation&quot;&gt;event.stopPropagation()&lt;/a&gt;&lt;/code&gt; или вернув &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1edc5381b6091a7fd6e1829f259f5037f6e15dd" translate="yes" xml:space="preserve">
          <source>Since the index is zero-based, the first list item is returned:</source>
          <target state="translated">Так как индекс является нулевым,возвращается первый элемент списка:</target>
        </trans-unit>
        <trans-unit id="7a6e24162c86dfba7b0b421fd47f8c5bb8ef4d79" translate="yes" xml:space="preserve">
          <source>Size: 2</source>
          <target state="translated">Размер:2</target>
        </trans-unit>
        <trans-unit id="982e22c2ba6646fbc5724d9dc05eadc3a19d3774" translate="yes" xml:space="preserve">
          <source>Slide the next sibling LI up or down on hover, and toggle a class.</source>
          <target state="translated">Сдвиньте следующего брата ЛИ вверх или вниз по парижке и переключите класс.</target>
        </trans-unit>
        <trans-unit id="fb05309b161291336bae053029c5099275a0941b" translate="yes" xml:space="preserve">
          <source>Some callbacks are required to return something, others make that return value optional. To prevent a form submission, a submit event handler can return false:</source>
          <target state="translated">Некоторые обратные вызовы необходимы для возврата чего-либо,другие делают это возвращаемое значение необязательным.Чтобы предотвратить отправку формы,обработчик события отправки может вернуть false:</target>
        </trans-unit>
        <trans-unit id="6c1f13e9615a3bbabc778ec7b0f33c9cc3e91448" translate="yes" xml:space="preserve">
          <source>Some of jQuery's Ajax functions return the native XMLHttpRequest (XHR) object, or pass it as an argument to success/error/complete handlers, so that you can do additional processing or monitoring on the request. Note that Ajax functions only return or pass an XHR object when an XHR object is actually used in the request. For example, JSONP requests and cross-domain GET requests use a script element rather than an XHR object.</source>
          <target state="translated">Некоторые из Ajax-функций jQuery возвращают нативный XMLHttpRequest (XHR)объект или передают его в качестве аргумента в обработчики успеха/ошибки/завершенности,так что вы можете сделать дополнительную обработку или мониторинг по запросу.Обратите внимание,что функции Ajax возвращают или передают XHR-объект только в том случае,если XHR-объект фактически используется в запросе.Например,JSONP запросы и междоменные GET запросы используют элемент сценария,а не XHR объект.</target>
        </trans-unit>
        <trans-unit id="8753ea1e13ebfbe5d422e4686ba9011ca9055869" translate="yes" xml:space="preserve">
          <source>Some properties of DOM elements are quite consistent among browsers. Consider this example of a simple onblur validation:</source>
          <target state="translated">Некоторые свойства элементов DOM вполне согласуются между браузерами.Рассмотрим этот пример простой проверки onblur:</target>
        </trans-unit>
        <trans-unit id="a933f97d99788e859754f51523140619cddcd601" translate="yes" xml:space="preserve">
          <source>Sorts an array of DOM elements, in place, with the duplicates removed. Note that this only works on arrays of DOM elements, not strings or numbers.</source>
          <target state="translated">Сортирует массив элементов DOM на месте,при этом дубликаты удаляются.Обратите внимание,что это работает только на массивах элементов DOM,а не на строках или числах.</target>
        </trans-unit>
        <trans-unit id="94d60b8f0ed0d594ef1727e3a6784cb278df97bd" translate="yes" xml:space="preserve">
          <source>Special units</source>
          <target state="translated">Специальные подразделения</target>
        </trans-unit>
        <trans-unit id="596f7c7958bae7b06d20d1b95c9768562dff1f23" translate="yes" xml:space="preserve">
          <source>Specify a function to execute when the DOM is fully loaded.</source>
          <target state="translated">Укажите функцию,которая будет выполняться при полной загрузке флэш-накопителя.</target>
        </trans-unit>
        <trans-unit id="ff20a26a0c1ef838133366e7344c5ab557dc3c37" translate="yes" xml:space="preserve">
          <source>Specify the callback function name for a JSONP request. This value will be used instead of the random name automatically generated by jQuery. It is preferable to let jQuery generate a unique name as it'll make it easier to manage the requests and provide callbacks and error handling. You may want to specify the callback when you want to enable better browser caching of GET requests. &lt;strong&gt;As of jQuery 1.5&lt;/strong&gt;, you can also use a function for this setting, in which case the value of &lt;code&gt;jsonpCallback&lt;/code&gt; is set to the return value of that function.</source>
          <target state="translated">Укажите имя функции обратного вызова для запроса JSONP. Это значение будет использоваться вместо случайного имени, автоматически сгенерированного jQuery. Предпочтительно, чтобы jQuery генерировал уникальное имя, так как это упростит управление запросами и обеспечит обратные вызовы и обработку ошибок. Вы можете указать обратный вызов, если хотите улучшить кеширование браузером запросов GET. &lt;strong&gt;Начиная с jQuery 1.5&lt;/strong&gt; , вы также можете использовать функцию для этого параметра, и в этом случае значение &lt;code&gt;jsonpCallback&lt;/code&gt; устанавливается равным возвращаемому значению этой функции.</target>
        </trans-unit>
        <trans-unit id="a4b0e61bc82307628e84bf51482e5ca8c38a3aac" translate="yes" xml:space="preserve">
          <source>Spoon!</source>
          <target state="translated">Spoon!</target>
        </trans-unit>
        <trans-unit id="0d8484e4b12cca197bb4c6288ecc229761a2d3c7" translate="yes" xml:space="preserve">
          <source>Starting with jQuery 1.7, selector strings with positional selectors apply the selector against the document, and then determine whether the first element of the current jQuery set matches any of the resulting elements. So for the HTML shown above, an expression such as &lt;code&gt;$( &quot;li:first&quot; ).is( &quot;li:last&quot; )&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;. Note that since positional selectors are jQuery additions and not W3C standard, we recommend using the W3C selectors whenever feasible.</source>
          <target state="translated">Начиная с jQuery 1.7, строки селектора с позиционными селекторами применяют селектор к документу, а затем определяют, соответствует ли первый элемент текущего набора jQuery любому из результирующих элементов. Итак, для показанного выше HTML выражение, такое как &lt;code&gt;$( &quot;li:first&quot; ).is( &quot;li:last&quot; )&lt;/code&gt; возвращает &lt;code&gt;false&lt;/code&gt; . Обратите внимание, что, поскольку позиционные селекторы являются дополнением jQuery, а не стандартом W3C, мы рекомендуем использовать селекторы W3C, когда это возможно.</target>
        </trans-unit>
        <trans-unit id="9a166f7dad49a1f78c7503ac2a3ec46b214bd857" translate="yes" xml:space="preserve">
          <source>Starts with all paragraphs and searches for descendant span elements, same as &lt;code&gt;$( &quot;p span&quot; )&lt;/code&gt;</source>
          <target state="translated">Начинается со всех абзацев и ищет дочерние элементы span, как и &lt;code&gt;$( &quot;p span&quot; )&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f2fa9a19aedee83f07905d92ab8023e418f9f17" translate="yes" xml:space="preserve">
          <source>States if the current page, in the user&amp;rsquo;s browser, is being rendered using the W3C CSS Box Model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f596ed584d759c21adfacff6072003d6d499e20" translate="yes" xml:space="preserve">
          <source>States if the current page, in the user&amp;rsquo;s browser, is being rendered using the W3C CSS Box Model. This property was removed in jQuery 1.8. Please try to use feature detection instead.</source>
          <target state="translated">Указывает, отображается ли текущая страница в браузере пользователя с использованием блочной модели W3C CSS. Это свойство было удалено в jQuery 1.8. Попробуйте вместо этого использовать функцию обнаружения.</target>
        </trans-unit>
        <trans-unit id="49a2be80024194ba9e55c77f622b84ab99f358e4" translate="yes" xml:space="preserve">
          <source>Step Function</source>
          <target state="translated">Функция шага</target>
        </trans-unit>
        <trans-unit id="ad40990b1f5eb15fcc653c23d700e8b744907126" translate="yes" xml:space="preserve">
          <source>Stop an event from bubbling without preventing the default action by using the .stopPropagation() method.</source>
          <target state="translated">Остановить возникновение пузырькового события,не предотвращая действия по умолчанию,можно с помощью метода .stopPropagation().</target>
        </trans-unit>
        <trans-unit id="a76e371f4f22da824fc0475cfa42848c80bb7458" translate="yes" xml:space="preserve">
          <source>Stop submit events from bubbling without preventing form submit, using &lt;code&gt;.stopPropagation()&lt;/code&gt;.</source>
          <target state="translated">Остановить &lt;code&gt;.stopPropagation()&lt;/code&gt; событий отправки без предотвращения отправки формы, используя .stopPropagation () .</target>
        </trans-unit>
        <trans-unit id="75c9f5be9829724db34567272dd0a87d7c6ea276" translate="yes" xml:space="preserve">
          <source>Stop the currently-running animation on the matched elements.</source>
          <target state="translated">Остановите текущую анимацию на соответствующих элементах.</target>
        </trans-unit>
        <trans-unit id="360d71d11120f40efdbddef5715b200bb25b3684" translate="yes" xml:space="preserve">
          <source>Stop the currently-running animation, remove all queued animations, and complete all animations for the matched elements.</source>
          <target state="translated">Остановить текущую анимацию,удалить все анимации из очереди и завершить все анимации для соответствующих элементов.</target>
        </trans-unit>
        <trans-unit id="730b19e05abb84da614a729159208dbad5760180" translate="yes" xml:space="preserve">
          <source>Store arbitrary data associated with the matched elements or return the value at the named data store for the first element in the set of matched elements.</source>
          <target state="translated">Хранить произвольные данные,связанные с совпадающими элементами,или возвращать значение в именованном хранилище данных для первого элемента в наборе совпадающих элементов.</target>
        </trans-unit>
        <trans-unit id="e3dc887795a3e079473d37947acd076182b16d12" translate="yes" xml:space="preserve">
          <source>Store arbitrary data associated with the specified element and/or return the value that was set.</source>
          <target state="translated">Хранить произвольные данные,связанные с указанным элементом,и/или возвращать установленное значение.</target>
        </trans-unit>
        <trans-unit id="664d4a46b20ef3413abe6dbdc69b1b8e5fa252f8" translate="yes" xml:space="preserve">
          <source>Store then retrieve a value from the div element.</source>
          <target state="translated">Храните,затем извлеките значение из элемента div.</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="817372deb37d508cf48353c2e5bf45228819ce79" translate="yes" xml:space="preserve">
          <source>Success Callback</source>
          <target state="translated">Обратный вызов на успех</target>
        </trans-unit>
        <trans-unit id="c0a6e449ed284b809fa46d3ad6117b4a8d99830e" translate="yes" xml:space="preserve">
          <source>Supported Flags</source>
          <target state="translated">Поддерживаемые флаги</target>
        </trans-unit>
        <trans-unit id="10f2d5c8838556785eaa3ee02d811f2678905e69" translate="yes" xml:space="preserve">
          <source>Suppose we have a couple short lists on a page:</source>
          <target state="translated">Предположим,у нас есть пара коротких списков на странице:</target>
        </trans-unit>
        <trans-unit id="e3dda79ad5c100cb272fb6d078c82f63541c7299" translate="yes" xml:space="preserve">
          <source>Suppose we perform a search for &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; elements starting at item A:</source>
          <target state="translated">Предположим, мы выполняем поиск элементов &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; , начиная с элемента A:</target>
        </trans-unit>
        <trans-unit id="a94ae9bded1ae99e5c7bcd4f4a8811d18c8089e8" translate="yes" xml:space="preserve">
          <source>Suppose we search for an &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element instead:</source>
          <target state="translated">Предположим, вместо этого мы ищем элемент &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b3f888854fd1f1dae92293cac076227ad8552aa0" translate="yes" xml:space="preserve">
          <source>Suppose you have a list, with two of its items containing a child element:</source>
          <target state="translated">Предположим,у вас есть список,два элемента которого содержат дочерний элемент:</target>
        </trans-unit>
        <trans-unit id="de394c66954399a5ac3332ca39eb0a52c9cc3a47" translate="yes" xml:space="preserve">
          <source>Suppose you have a simple unordered list on the page:</source>
          <target state="translated">Предположим,у вас есть простой неупорядоченный список на странице:</target>
        </trans-unit>
        <trans-unit id="5023b4b6d640dff78ca47b85acb6ff85da25aa61" translate="yes" xml:space="preserve">
          <source>Tags that cannot contain elements may be quick-closed or not:</source>
          <target state="translated">Метки,которые не могут содержать элементы,могут быть быстро закрыты или нет:</target>
        </trans-unit>
        <trans-unit id="ff582d4a993e914f70aa1f884c48404bf23cf695" translate="yes" xml:space="preserve">
          <source>Takes a function and returns a new one that will always have a particular context.</source>
          <target state="translated">Принимает функцию и возвращает новую,которая всегда будет иметь определенный контекст.</target>
        </trans-unit>
        <trans-unit id="b315f328325b2a0bd0f452ff3b9e918b0b280b19" translate="yes" xml:space="preserve">
          <source>Takes a string and throws an exception containing it.</source>
          <target state="translated">Берет строку и бросает исключение,содержащее ее.</target>
        </trans-unit>
        <trans-unit id="e4e25174b34707da0ca85747ead62e6979587ad7" translate="yes" xml:space="preserve">
          <source>Takes a well-formed JSON string and returns the resulting JavaScript value.</source>
          <target state="translated">Берет хорошо сформированную JSON-строку и возвращает полученное значение JavaScript.</target>
        </trans-unit>
        <trans-unit id="1321935cf4ff7f35cc8aa281970434f1a46233a9" translate="yes" xml:space="preserve">
          <source>Test a few parameter examples.</source>
          <target state="translated">Проверьте несколько примеров параметров.</target>
        </trans-unit>
        <trans-unit id="c3328c39b0e29f78e9ff45db674248b1d245887d" translate="yes" xml:space="preserve">
          <source>Text</source>
          <target state="translated">Text</target>
        </trans-unit>
        <trans-unit id="2959942028f362a86c6adc899a4d28fb0893b838" translate="yes" xml:space="preserve">
          <source>Text is a node of the Document Object Model (DOM) that represents the textual content of an &lt;a href=&quot;#Element&quot;&gt;element&lt;/a&gt; or an attribute. Consider the following code:</source>
          <target state="translated">Текст - это узел объектной модели документа (DOM), который представляет текстовое содержимое &lt;a href=&quot;#Element&quot;&gt;элемента&lt;/a&gt; или атрибута. Рассмотрим следующий код:</target>
        </trans-unit>
        <trans-unit id="b88fca4b677e265570d1591da41082afd6bd654a" translate="yes" xml:space="preserve">
          <source>That line of code will replace everything inside &lt;code&gt;&amp;lt;div class=&quot;demo-container&quot;&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">Эта строка кода заменит все внутри &lt;code&gt;&amp;lt;div class=&quot;demo-container&quot;&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4ecaa7688dde754c54b4ca5ee2f1ea5f31249d7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$.Callbacks()&lt;/code&gt; function is internally used to provide the base functionality behind the jQuery &lt;code&gt;$.ajax()&lt;/code&gt; and &lt;code&gt;$.Deferred()&lt;/code&gt; components. It can be used as a similar base to define functionality for new components.</source>
          <target state="translated">Функция &lt;code&gt;$.Callbacks()&lt;/code&gt; используется внутри для обеспечения базовой функциональности компонентов jQuery &lt;code&gt;$.ajax()&lt;/code&gt; и &lt;code&gt;$.Deferred()&lt;/code&gt; . Его можно использовать как аналогичную основу для определения функциональности новых компонентов.</target>
        </trans-unit>
        <trans-unit id="baa0d6b0d0bf85d2143bf56d29a81b4ad34efa9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$.ajax()&lt;/code&gt; function returns the &lt;code&gt;XMLHttpRequest&lt;/code&gt; object that it creates. Normally jQuery handles the creation of this object internally, but a custom function for manufacturing one can be specified using the &lt;code&gt;xhr&lt;/code&gt; option. The returned object can generally be discarded, but does provide a lower-level interface for observing and manipulating the request. In particular, calling &lt;code&gt;.abort()&lt;/code&gt; on the object will halt the request before it completes.</source>
          <target state="translated">Функция &lt;code&gt;$.ajax()&lt;/code&gt; возвращает созданный ею объект &lt;code&gt;XMLHttpRequest&lt;/code&gt; . Обычно jQuery обрабатывает создание этого объекта внутри себя, но пользовательскую функцию для его изготовления можно указать с помощью опции &lt;code&gt;xhr&lt;/code&gt; . Возвращенный объект обычно можно отбросить, но он предоставляет интерфейс более низкого уровня для наблюдения и управления запросом. В частности, вызов &lt;code&gt;.abort()&lt;/code&gt; для объекта остановит запрос до его завершения.</target>
        </trans-unit>
        <trans-unit id="85e806a32c04f5dde13a7018da32db82f1e28ca1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$.ajax()&lt;/code&gt; function underlies all Ajax requests sent by jQuery. It is often unnecessary to directly call this function, as several higher-level alternatives like &lt;code&gt;&lt;a href=&quot;jquery.get&quot;&gt;$.get()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;load&quot;&gt;.load()&lt;/a&gt;&lt;/code&gt; are available and are easier to use. If less common options are required, though, &lt;code&gt;$.ajax()&lt;/code&gt; can be used more flexibly.</source>
          <target state="translated">Функция &lt;code&gt;$.ajax()&lt;/code&gt; лежит в основе всех запросов Ajax, отправляемых jQuery. Часто нет необходимости напрямую вызывать эту функцию, поскольку доступны несколько альтернатив более высокого уровня, такие как &lt;code&gt;&lt;a href=&quot;jquery.get&quot;&gt;$.get()&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;load&quot;&gt;.load()&lt;/a&gt;&lt;/code&gt; , и их проще использовать. Однако, если требуются менее распространенные параметры, можно более гибко использовать &lt;code&gt;$.ajax()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="78f47b93498ccbc5b58c88ddb2f471b1580524b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$.ajaxPrefilter()&lt;/code&gt; method can also redirect a request to another dataType by returning that dataType. For example, the following sets a request as &quot;script&quot; if the URL has some specific properties defined in a custom &lt;code&gt;isActuallyScript()&lt;/code&gt; function:</source>
          <target state="translated">Метод &lt;code&gt;$.ajaxPrefilter()&lt;/code&gt; также может перенаправить запрос на другой тип данных, возвращая этот тип данных. Например, следующее устанавливает запрос как &amp;laquo;скрипт&amp;raquo;, если URL-адрес имеет определенные свойства, определенные в пользовательской функции &lt;code&gt;isActuallyScript()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="280a781cf37dc5a0c87a93c392263fe532ae9059" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$.browser&lt;/code&gt; property provides information about the web browser that is accessing the page, as reported by the browser itself. It contains flags for each of the four most prevalent browser classes (Internet Explorer, Mozilla, Webkit, and Opera) as well as version information.</source>
          <target state="translated">Свойство &lt;code&gt;$.browser&lt;/code&gt; предоставляет информацию о веб-браузере, который обращается к странице, как сообщает сам браузер. Он содержит флаги для каждого из четырех наиболее распространенных классов браузеров (Internet Explorer, Mozilla, Webkit и Opera), а также информацию о версии.</target>
        </trans-unit>
        <trans-unit id="76431104c95bae4a44864ebbfd713ef401ebe1b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$.contains()&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; if the DOM element provided by the second argument is a descendant of the DOM element provided by the first argument, whether it is a direct child or nested more deeply. Otherwise, it returns &lt;code&gt;false&lt;/code&gt;. Only &lt;em&gt;element&lt;/em&gt; nodes are supported; if the second argument is a text or comment node, &lt;code&gt;$.contains()&lt;/code&gt; will return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Метод &lt;code&gt;$.contains()&lt;/code&gt; возвращает &lt;code&gt;true&lt;/code&gt; , если элемент DOM, предоставленный вторым аргументом, является потомком элемента DOM, предоставленного первым аргументом, независимо от того, является ли он прямым потомком или более глубоко вложенным. В противном случае возвращается &lt;code&gt;false&lt;/code&gt; . Поддерживаются только узлы &lt;em&gt;элементов&lt;/em&gt; ; если второй аргумент является узлом текста или комментария, &lt;code&gt;$.contains()&lt;/code&gt; вернет &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09588521748ac438e7c26cbe3f00a85e140fd816" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$.cssHooks&lt;/code&gt; object provides a way to define functions for getting and setting particular CSS values. It can also be used to create new cssHooks for normalizing CSS3 features such as box shadows and gradients.</source>
          <target state="translated">Объект &lt;code&gt;$.cssHooks&lt;/code&gt; предоставляет способ определения функций для получения и установки определенных значений CSS. Его также можно использовать для создания новых cssHooks для нормализации функций CSS3, таких как тени и градиенты.</target>
        </trans-unit>
        <trans-unit id="3e4337150a1d2bb6fc88e8b469d5a24912766d08" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$.each()&lt;/code&gt; function is not the same as &lt;a href=&quot;each&quot;&gt;$(selector).each()&lt;/a&gt;, which is used to iterate, exclusively, over a jQuery object. The &lt;code&gt;$.each()&lt;/code&gt; function can be used to iterate over any collection, whether it is an object or an array. In the case of an array, the callback is passed an array index and a corresponding array value each time. (The value can also be accessed through the &lt;code&gt;this&lt;/code&gt; keyword, but Javascript will always wrap the &lt;code&gt;this&lt;/code&gt; value as an &lt;code&gt;Object&lt;/code&gt; even if it is a simple string or number value.) The method returns its first argument, the object that was iterated.</source>
          <target state="translated">Функция &lt;code&gt;$.each()&lt;/code&gt; отличается от функции &lt;a href=&quot;each&quot;&gt;$ (selector) .each ()&lt;/a&gt; , которая используется исключительно для итерации по объекту jQuery. &lt;code&gt;$.each()&lt;/code&gt; функция может быть использована для перебора любой коллекции, будь то объект или массив. В случае массива обратному вызову каждый раз передается индекс массива и соответствующее значение массива. (Доступ к значению также можно получить с помощью ключевого слова &lt;code&gt;this&lt;/code&gt; , но Javascript всегда будет заключать в оболочку значение &lt;code&gt;this&lt;/code&gt; как &lt;code&gt;Object&lt;/code&gt; даже если это простая строка или числовое значение.) Метод возвращает свой первый аргумент, объект, который был повторен.</target>
        </trans-unit>
        <trans-unit id="976cdb1065014cb534e388a99a8c84685e8767eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$.grep()&lt;/code&gt; method removes items from an array as necessary so that all remaining items pass a provided test. The test is a function that is passed an array item and the index of the item within the array. Only if the test returns true will the item be in the result array.</source>
          <target state="translated">Метод &lt;code&gt;$.grep()&lt;/code&gt; при необходимости удаляет элементы из массива, чтобы все оставшиеся элементы прошли предусмотренный тест. Тест - это функция, которой передается элемент массива и индекс элемента в массиве. Только если тест вернет истину, элемент будет в массиве результатов.</target>
        </trans-unit>
        <trans-unit id="18acd609107b58ff2cf0d3332965bdfb5cabf43b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$.holdReady()&lt;/code&gt; method allows the caller to delay jQuery's ready event. This &lt;em&gt;advanced feature&lt;/em&gt; would typically be used by dynamic script loaders that want to load additional JavaScript such as jQuery plugins before allowing the ready event to occur, even though the DOM may be ready. This method must be called early in the document, such as in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; immediately after the jQuery script tag. Calling this method after the ready event has already fired will have no effect.</source>
          <target state="translated">Метод &lt;code&gt;$.holdReady()&lt;/code&gt; позволяет вызывающему абоненту отложить событие готовности jQuery. Эта &lt;em&gt;расширенная функция&lt;/em&gt; обычно используется динамическими загрузчиками сценариев, которые хотят загрузить дополнительный JavaScript, такой как плагины jQuery, прежде чем разрешить событие готовности, даже если DOM может быть готов. Этот метод должен вызываться в начале документа, например, в &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; сразу после тега сценария jQuery. Вызов этого метода после того, как событие готовности уже сработало, не даст никакого эффекта.</target>
        </trans-unit>
        <trans-unit id="335a19e8e8e4eb5696bfd5f99305e44eff1fcc42" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$.inArray()&lt;/code&gt; method is similar to JavaScript's native &lt;code&gt;.indexOf()&lt;/code&gt; method in that it returns -1 when it doesn't find a match. If the first element within the array matches &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;$.inArray()&lt;/code&gt; returns 0.</source>
          <target state="translated">Метод &lt;code&gt;$.inArray()&lt;/code&gt; похож на собственный метод JavaScript &lt;code&gt;.indexOf()&lt;/code&gt; в том, что он возвращает -1, если не находит совпадения. Если первый элемент в массиве соответствует &lt;code&gt;value&lt;/code&gt; , &lt;code&gt;$.inArray()&lt;/code&gt; возвращает 0.</target>
        </trans-unit>
        <trans-unit id="47c6ed7fef66d2169b4d3861ee6d20f7f3defb90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$.isNumeric()&lt;/code&gt; method checks whether its argument represents a numeric value. If so, it returns &lt;code&gt;true&lt;/code&gt;. Otherwise it returns &lt;code&gt;false&lt;/code&gt;. The argument can be of any type.</source>
          <target state="translated">Метод &lt;code&gt;$.isNumeric()&lt;/code&gt; проверяет, представляет ли его аргумент числовое значение. Если да, возвращается &lt;code&gt;true&lt;/code&gt; . В противном случае возвращается &lt;code&gt;false&lt;/code&gt; . Аргумент может быть любого типа.</target>
        </trans-unit>
        <trans-unit id="d054908ceec703f2328081f3828c696c4e4831cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$.map()&lt;/code&gt; method applies a function to each item in an array or object and maps the results into a new array. &lt;strong&gt;Prior to jQuery 1.6&lt;/strong&gt;, &lt;code&gt;$.map()&lt;/code&gt; supports traversing &lt;em&gt;arrays only&lt;/em&gt;. &lt;strong&gt;As of jQuery 1.6&lt;/strong&gt; it also traverses objects.</source>
          <target state="translated">Метод &lt;code&gt;$.map()&lt;/code&gt; применяет функцию к каждому элементу в массиве или объекте и отображает результаты в новый массив. &lt;strong&gt;До JQuery 1.6&lt;/strong&gt; , &lt;code&gt;$.map()&lt;/code&gt; поддерживает обход &lt;em&gt;только массивы&lt;/em&gt; . &lt;strong&gt;Начиная с jQuery 1.6,&lt;/strong&gt; он также просматривает объекты.</target>
        </trans-unit>
        <trans-unit id="79d04e01527feacc55c26314c81ca0af5fa41181" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$.merge()&lt;/code&gt; operation forms an array that contains all elements from the two arrays. The orders of items in the arrays are preserved, with items from the second array appended. The &lt;code&gt;$.merge()&lt;/code&gt; function is destructive. It alters the &lt;code&gt;length&lt;/code&gt; and numeric index properties of the first object to include items from the second.</source>
          <target state="translated">Операция &lt;code&gt;$.merge()&lt;/code&gt; формирует массив, содержащий все элементы из двух массивов. Порядок элементов в массивах сохраняется с добавлением элементов из второго массива. Функция &lt;code&gt;$.merge()&lt;/code&gt; деструктивна. Он изменяет свойства &lt;code&gt;length&lt;/code&gt; и числового индекса первого объекта, чтобы включить элементы из второго.</target>
        </trans-unit>
        <trans-unit id="2c9302d36417008fe5659ed352ae46a989c038b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$.now()&lt;/code&gt; method is a shorthand for the number returned by the expression &lt;code&gt;(new Date).getTime()&lt;/code&gt;.</source>
          <target state="translated">Метод &lt;code&gt;$.now()&lt;/code&gt; является сокращением числа, возвращаемого выражением &lt;code&gt;(new Date).getTime()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb8e0aa345948427cd7df6c456a7940fd1ca6ecb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$.now()&lt;/code&gt; method is an alias for &lt;code&gt;Date.now()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7808931143ef016b797914190e650d2a76779e1e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$.speed()&lt;/code&gt; method provides a way to define properties, such as &lt;code&gt;duration&lt;/code&gt;, &lt;code&gt;easing&lt;/code&gt;, and &lt;code&gt;queue&lt;/code&gt;, to use in a custom animation. By using it, you don't have to implement the logic that deals with default values and optional parameters.</source>
          <target state="translated">Метод &lt;code&gt;$.speed()&lt;/code&gt; предоставляет способ определения свойств, таких как &lt;code&gt;duration&lt;/code&gt; , &lt;code&gt;easing&lt;/code&gt; и &lt;code&gt;queue&lt;/code&gt; , для использования в настраиваемой анимации. Используя его, вам не нужно реализовывать логику, которая имеет дело со значениями по умолчанию и необязательными параметрами.</target>
        </trans-unit>
        <trans-unit id="95ec78e912c92bddbb313103bfc5523271e0edff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$.trim()&lt;/code&gt; function removes all newlines, spaces (including non-breaking spaces), and tabs from the beginning and end of the supplied string. If these whitespace characters occur in the middle of the string, they are preserved.</source>
          <target state="translated">Функция &lt;code&gt;$.trim()&lt;/code&gt; удаляет все символы новой строки, пробелы (включая неразрывные пробелы) и табуляции в начале и конце предоставленной строки. Если эти пробельные символы встречаются в середине строки, они сохраняются.</target>
        </trans-unit>
        <trans-unit id="c8d204e0e76dbbb80f76478ab9fdc37eb8914624" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$.unique()&lt;/code&gt; function searches through an array of objects, sorting the array, and removing any duplicate nodes. A node is considered a duplicate if it is the &lt;em&gt;exact same&lt;/em&gt; node as one already in the array; two different nodes with identical attributes are not considered to be duplicates. This function only works on plain JavaScript arrays of DOM elements, and is chiefly used internally by jQuery. You probably will never need to use it.</source>
          <target state="translated">Функция &lt;code&gt;$.unique()&lt;/code&gt; выполняет поиск в массиве объектов, сортирует массив и удаляет все повторяющиеся узлы. Узел считается дубликатом, если он &lt;em&gt;совпадает с&lt;/em&gt; узлом уже в массиве; два разных узла с одинаковыми атрибутами не считаются дубликатами. Эта функция работает только с простыми массивами JavaScript элементов DOM и в основном используется внутри jQuery. Вероятно, вам никогда не понадобится его использовать.</target>
        </trans-unit>
        <trans-unit id="fbbf462da578ffa3e663692abb85559bd63a2923" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$.uniqueSort()&lt;/code&gt; function searches through an array of objects, sorting the array, and removing any duplicate nodes. A node is considered a duplicate if it is the &lt;em&gt;exact same&lt;/em&gt; node as one already in the array; two different nodes with identical attributes are not considered to be duplicates. This function only works on plain JavaScript arrays of DOM elements, and is chiefly used internally by jQuery. You probably will never need to use it.</source>
          <target state="translated">Функция &lt;code&gt;$.uniqueSort()&lt;/code&gt; просматривает массив объектов, сортирует массив и удаляет все повторяющиеся узлы. Узел считается дубликатом, если он &lt;em&gt;совпадает с&lt;/em&gt; узлом уже в массиве; два разных узла с одинаковыми атрибутами не считаются дубликатами. Эта функция работает только с простыми массивами JavaScript элементов DOM и в основном используется внутри jQuery. Вероятно, вам никогда не понадобится его использовать.</target>
        </trans-unit>
        <trans-unit id="3a26b22ac15e6d3725fb5a622feda2d98b93c1b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.addBack()&lt;/code&gt; method causes the previous set of DOM elements in the traversal stack to be added to the current set. In the first example, the top stack contains the set resulting from &lt;code&gt;.find(&quot;p&quot;)&lt;/code&gt;. In the second example, &lt;code&gt;.addBack()&lt;/code&gt; adds the previous set of elements on the stack &amp;mdash; in this case &lt;code&gt;$(&quot;div.after-addback&quot;)&lt;/code&gt; &amp;mdash; to the current set, selecting both the div and its enclosed paragraphs.</source>
          <target state="translated">Метод &lt;code&gt;.addBack()&lt;/code&gt; вызывает добавление предыдущего набора элементов DOM в стеке обхода к текущему набору. В первом примере верхний стек содержит набор, полученный из &lt;code&gt;.find(&quot;p&quot;)&lt;/code&gt; . Во втором примере &lt;code&gt;.addBack()&lt;/code&gt; добавляет предыдущий набор элементов в стеке - в данном случае &lt;code&gt;$(&quot;div.after-addback&quot;)&lt;/code&gt; - к текущему набору, выбирая как div, так и заключенные в него абзацы.</target>
        </trans-unit>
        <trans-unit id="ff5d402fb11b41c1beb7b79978b5307c1e688a67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.after()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;insertafter&quot;&gt;.insertAfter()&lt;/a&gt;&lt;/code&gt; methods perform the same task. The major difference is in the syntax&amp;mdash;specifically, in the placement of the content and target. With &lt;code&gt;.after()&lt;/code&gt;, the content to be inserted comes from the method's argument: &lt;code&gt;$(target).after(contentToBeInserted)&lt;/code&gt;. With &lt;code&gt;.insertAfter()&lt;/code&gt;, on the other hand, the content precedes the method and is inserted after the target, which in turn is passed as the &lt;code&gt;.insertAfter()&lt;/code&gt; method's argument: &lt;code&gt;$(contentToBeInserted).insertAfter(target)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.after()&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;insertafter&quot;&gt;.insertAfter()&lt;/a&gt;&lt;/code&gt; методы выполняют ту же задачу. Основное различие заключается в синтаксисе, а именно в размещении контента и цели. С &lt;code&gt;.after()&lt;/code&gt; вставляемый контент берется из аргумента метода: &lt;code&gt;$(target).after(contentToBeInserted)&lt;/code&gt; . С другой стороны, с &lt;code&gt;.insertAfter()&lt;/code&gt; содержимое предшествует методу и вставляется после цели, которая, в свою очередь, передается как &lt;code&gt;.insertAfter()&lt;/code&gt; метода .insertAfter () : &lt;code&gt;$(contentToBeInserted).insertAfter(target)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6002f37ecb223258bee7d949314a826effed37b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.andSelf()&lt;/code&gt; method causes the previous set of DOM elements in the traversal stack to be added to the current set. In the first example, the top stack contains the set resulting from &lt;code&gt;.find(&quot;p&quot;)&lt;/code&gt;. In the second example, &lt;code&gt;.andSelf()&lt;/code&gt; adds the previous set of elements on the stack &amp;mdash; in this case &lt;code&gt;$( &quot;div.after-andself&quot; )&lt;/code&gt; &amp;mdash; to the current set, selecting both the div and its enclosed paragraphs.</source>
          <target state="translated">Метод &lt;code&gt;.andSelf()&lt;/code&gt; вызывает добавление предыдущего набора элементов DOM в стеке обхода к текущему набору. В первом примере верхний стек содержит набор, полученный из &lt;code&gt;.find(&quot;p&quot;)&lt;/code&gt; . Во втором примере &lt;code&gt;.andSelf()&lt;/code&gt; добавляет предыдущий набор элементов в стеке - в данном случае &lt;code&gt;$( &quot;div.after-andself&quot; )&lt;/code&gt; - к текущему набору, выбирая как div, так и заключенные в него абзацы.</target>
        </trans-unit>
        <trans-unit id="919f011c3d3d39bb6a99b068c83bfc2e73be152d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.animate()&lt;/code&gt; method allows us to create animation effects on any numeric CSS property. The only required parameter is a plain object of CSS properties. This object is similar to the one that can be sent to the &lt;code&gt;.css()&lt;/code&gt; method, except that the range of properties is more restrictive.</source>
          <target state="translated">Метод &lt;code&gt;.animate()&lt;/code&gt; позволяет нам создавать эффекты анимации для любого числового свойства CSS. Единственный обязательный параметр - это простой объект свойств CSS. Этот объект похож на тот, который может быть отправлен в метод &lt;code&gt;.css()&lt;/code&gt; , за исключением того, что диапазон свойств более ограничен.</target>
        </trans-unit>
        <trans-unit id="8a0edc3a5b47cab439d4809dfee1aeae2a37c618" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.append()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;appendto&quot;&gt;.appendTo()&lt;/a&gt;&lt;/code&gt; methods perform the same task. The major difference is in the syntax-specifically, in the placement of the content and target. With &lt;code&gt;.append()&lt;/code&gt;, the selector expression preceding the method is the container into which the content is inserted. With &lt;code&gt;.appendTo()&lt;/code&gt;, on the other hand, the content precedes the method, either as a selector expression or as markup created on the fly, and it is inserted into the target container.</source>
          <target state="translated">&lt;code&gt;.append()&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;appendto&quot;&gt;.appendTo()&lt;/a&gt;&lt;/code&gt; методы выполняют ту же задачу. Основное различие заключается в синтаксисе, а именно в размещении контента и цели. В &lt;code&gt;.append()&lt;/code&gt; выражение селектора, предшествующее методу, является контейнером, в который вставляется контент. С другой стороны, с &lt;code&gt;.appendTo()&lt;/code&gt; содержимое предшествует методу либо как выражение селектора, либо как разметка, созданная на лету, и вставляется в целевой контейнер.</target>
        </trans-unit>
        <trans-unit id="a2a671ee3f926faffbc1079125031f1101d1a675" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.append()&lt;/code&gt; method inserts the specified content as the last child of each element in the jQuery collection (To insert it as the &lt;em&gt;first&lt;/em&gt; child, use &lt;a href=&quot;prepend&quot;&gt;&lt;code&gt;.prepend()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Метод &lt;code&gt;.append()&lt;/code&gt; вставляет указанный контент в качестве последнего дочернего элемента каждого элемента в коллекции jQuery (чтобы вставить его в качестве &lt;em&gt;первого&lt;/em&gt; дочернего &lt;a href=&quot;prepend&quot;&gt; &lt;code&gt;.prepend()&lt;/code&gt; &lt;/a&gt; , используйте .prepend () ).</target>
        </trans-unit>
        <trans-unit id="9e7ad01b2fc895e8f2f372219f519cf23a25f27a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.attr()&lt;/code&gt; method gets the attribute value for only the &lt;em&gt;first&lt;/em&gt; element in the matched set. To get the value for each element individually, use a looping construct such as jQuery's &lt;code&gt;.each()&lt;/code&gt; or &lt;code&gt;.map()&lt;/code&gt; method.</source>
          <target state="translated">Метод &lt;code&gt;.attr()&lt;/code&gt; получает значение атрибута только для &lt;em&gt;первого&lt;/em&gt; элемента в согласованном наборе. Чтобы получить значение для каждого элемента отдельно, используйте конструкцию цикла, такую ​​как &lt;code&gt;.each()&lt;/code&gt; jQuery .each () или &lt;code&gt;.map()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e56a8d18e9615760f255a389b1a9ee37f18e2f05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.attr()&lt;/code&gt; method is a convenient way to set the value of attributes&amp;mdash;especially when setting multiple attributes or using values returned by a function. Consider the following image:</source>
          <target state="translated">Метод &lt;code&gt;.attr()&lt;/code&gt; - удобный способ установить значения атрибутов, особенно при установке нескольких атрибутов или использовании значений, возвращаемых функцией. Рассмотрим следующее изображение:</target>
        </trans-unit>
        <trans-unit id="bcf579ddc9930a5a97c07867bb06cdff64125acf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.before()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;insertbefore&quot;&gt;.insertBefore()&lt;/a&gt;&lt;/code&gt; methods perform the same task. The major difference is in the syntax&amp;mdash;specifically, in the placement of the content and target. With &lt;code&gt;.before()&lt;/code&gt;, the content to be inserted comes from the method's argument: &lt;code&gt;$(target).before(contentToBeInserted)&lt;/code&gt;. With &lt;code&gt;.insertBefore()&lt;/code&gt;, on the other hand, the content precedes the method and is inserted before the target, which in turn is passed as the &lt;code&gt;.insertBefore()&lt;/code&gt; method's argument: &lt;code&gt;$(contentToBeInserted).insertBefore(target)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.before()&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;insertbefore&quot;&gt;.insertBefore()&lt;/a&gt;&lt;/code&gt; методы выполняют ту же задачу. Основное различие заключается в синтаксисе, а именно в размещении контента и цели. С &lt;code&gt;.before()&lt;/code&gt; вставляемый контент берется из аргумента метода: &lt;code&gt;$(target).before(contentToBeInserted)&lt;/code&gt; . С другой стороны, с &lt;code&gt;.insertBefore()&lt;/code&gt; содержимое предшествует методу и вставляется перед целью, которая, в свою очередь, передается как &lt;code&gt;.insertBefore()&lt;/code&gt; метода .insertBefore () : &lt;code&gt;$(contentToBeInserted).insertBefore(target)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b8b87f3a7319468a08ed6667b0d2ac2a11055e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.children()&lt;/code&gt; method optionally accepts a selector expression of the same type that we can pass to the &lt;code&gt;$()&lt;/code&gt; function. If the selector is supplied, the elements will be filtered by testing whether they match it.</source>
          <target state="translated">Метод &lt;code&gt;.children()&lt;/code&gt; дополнительно принимает выражение селектора того же типа, которое мы можем передать функции &lt;code&gt;$()&lt;/code&gt; . Если селектор указан, элементы будут отфильтрованы, проверяя, соответствуют ли они ему.</target>
        </trans-unit>
        <trans-unit id="376670c6b2301c9502291bf8dd969cf1f3352e2e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.clone()&lt;/code&gt; method performs a &lt;em&gt;deep&lt;/em&gt; copy of the set of matched elements, meaning that it copies the matched elements as well as all of their descendant elements and text nodes.</source>
          <target state="translated">Метод &lt;code&gt;.clone()&lt;/code&gt; выполняет &lt;em&gt;глубокую&lt;/em&gt; копию набора совпадающих элементов, то есть копирует совпадающие элементы, а также все их дочерние элементы и текстовые узлы.</target>
        </trans-unit>
        <trans-unit id="8b9a721c048b18a223ef22271dcee5ef1ddb0b4f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.contents()&lt;/code&gt; method can also be used to get the content document of an iframe, if the iframe is on the same domain as the main page.</source>
          <target state="translated">Метод &lt;code&gt;.contents()&lt;/code&gt; также можно использовать для получения документа содержимого iframe, если iframe находится в том же домене, что и главная страница.</target>
        </trans-unit>
        <trans-unit id="4478d31ecdf490a0aad5d0fa3bac7b611658e869" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.context&lt;/code&gt; property was deprecated in jQuery 1.10 and is only maintained to the extent needed for supporting &lt;code&gt;.live()&lt;/code&gt; in the jQuery Migrate plugin. It may be removed without notice in a future version.</source>
          <target state="translated">Свойство &lt;code&gt;.context&lt;/code&gt; устарело в jQuery 1.10 и поддерживается только в той степени, которая необходима для поддержки &lt;code&gt;.live()&lt;/code&gt; в подключаемом модуле jQuery Migrate. Он может быть удален без предварительного уведомления в будущей версии.</target>
        </trans-unit>
        <trans-unit id="a781319ab4b7c2a3038a7d5f82a3aaa7431f7df3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.css()&lt;/code&gt; method is a convenient way to get a computed style property from the first matched element, especially in light of the different ways browsers access most of those properties (the &lt;code&gt;getComputedStyle()&lt;/code&gt; method in standards-based browsers versus the &lt;code&gt;currentStyle&lt;/code&gt; and &lt;code&gt;runtimeStyle&lt;/code&gt; properties in Internet Explorer prior to version 9) and the different terms browsers use for certain properties. For example, Internet Explorer's DOM implementation refers to the &lt;code&gt;float&lt;/code&gt; property as &lt;code&gt;styleFloat&lt;/code&gt;, while W3C standards-compliant browsers refer to it as &lt;code&gt;cssFloat&lt;/code&gt;. For consistency, you can simply use &lt;code&gt;&quot;float&quot;&lt;/code&gt;, and jQuery will translate it to the correct value for each browser.</source>
          <target state="translated">Метод &lt;code&gt;.css()&lt;/code&gt; - удобный способ получить вычисляемое свойство стиля из первого совпавшего элемента, особенно в свете различных способов доступа браузеров к большинству этих свойств (метод &lt;code&gt;getComputedStyle()&lt;/code&gt; в браузерах на основе стандартов по сравнению с &lt;code&gt;currentStyle&lt;/code&gt; и &lt;code&gt;runtimeStyle&lt;/code&gt; в Internet Explorer до версии 9) и различные термины, которые браузеры используют для определенных свойств. Например, реализация DOM в Internet Explorer ссылается на свойство &lt;code&gt;float&lt;/code&gt; как на &lt;code&gt;styleFloat&lt;/code&gt; , тогда как браузеры , соответствующие стандартам W3C, называют его как &lt;code&gt;cssFloat&lt;/code&gt; . Для единообразия можно просто использовать &lt;code&gt;&quot;float&quot;&lt;/code&gt; , а jQuery переведет его в правильное значение для каждого браузера.</target>
        </trans-unit>
        <trans-unit id="4e63aa8b4e036e090afb474846ea3fe671048a78" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.data()&lt;/code&gt; method allows us to attach data of any type to DOM elements in a way that is safe from circular references and therefore from memory leaks.</source>
          <target state="translated">Метод &lt;code&gt;.data()&lt;/code&gt; позволяет нам прикреплять данные любого типа к элементам DOM способом, который защищен от циклических ссылок и, следовательно, от утечек памяти.</target>
        </trans-unit>
        <trans-unit id="520ce59174f569a4f598506fbd2fd9742a88c3a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.data()&lt;/code&gt; method allows us to attach data of any type to DOM elements in a way that is safe from circular references and therefore from memory leaks. We can retrieve several distinct values for a single element one at a time, or as a set:</source>
          <target state="translated">Метод &lt;code&gt;.data()&lt;/code&gt; позволяет нам прикреплять данные любого типа к элементам DOM способом, который защищен от циклических ссылок и, следовательно, от утечек памяти. Мы можем получить несколько различных значений для одного элемента по одному или в виде набора:</target>
        </trans-unit>
        <trans-unit id="0eb426ccd7969912cbc62e5e7a40c10005fc497c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.data()&lt;/code&gt; method allows us to read data previously associated with DOM elements. We can retrieve several distinct values for a single element one at a time, or as a set:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="158ffc844ccad87b3e96192f16f798b3f3d7c3fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.detach()&lt;/code&gt; method is the same as &lt;code&gt;&lt;a href=&quot;remove&quot;&gt;.remove()&lt;/a&gt;&lt;/code&gt;, except that &lt;code&gt;.detach()&lt;/code&gt; keeps all jQuery data associated with the removed elements. This method is useful when removed elements are to be reinserted into the DOM at a later time.</source>
          <target state="translated">Метод &lt;code&gt;.detach()&lt;/code&gt; такой же, как &lt;code&gt;&lt;a href=&quot;remove&quot;&gt;.remove()&lt;/a&gt;&lt;/code&gt; , за исключением того, что &lt;code&gt;.detach()&lt;/code&gt; сохраняет все данные jQuery, связанные с удаленными элементами. Этот метод полезен, когда удаленные элементы необходимо повторно вставить в DOM позже.</target>
        </trans-unit>
        <trans-unit id="67fa97b3a1074cefe09d0e33804e73171753c7ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.each()&lt;/code&gt; method is designed to make DOM looping constructs concise and less error-prone. When called it iterates over the DOM elements that are part of the jQuery object. Each time the callback runs, it is passed the current loop iteration, beginning from 0. More importantly, the callback is fired in the context of the current DOM element, so the keyword &lt;code&gt;this&lt;/code&gt; refers to the element.</source>
          <target state="translated">Метод &lt;code&gt;.each()&lt;/code&gt; разработан для того, чтобы сделать конструкции цикла DOM краткими и менее подверженными ошибкам. При вызове он выполняет итерацию по элементам DOM, которые являются частью объекта jQuery. Каждый раз, когда выполняется обратный вызов, ему передается текущая итерация цикла, начиная с 0. Что еще более важно, обратный вызов запускается в контексте текущего элемента DOM, поэтому ключевое слово &lt;code&gt;this&lt;/code&gt; относится к элементу.</target>
        </trans-unit>
        <trans-unit id="06ecbb426b5bd923098b84c44b225e3011c46509" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.fadeIn()&lt;/code&gt; method animates the opacity of the matched elements. It is similar to the &lt;code&gt;&lt;a href=&quot;fadeto&quot;&gt;.fadeTo()&lt;/a&gt;&lt;/code&gt; method but that method does not unhide the element and can specify the final opacity level.</source>
          <target state="translated">Метод &lt;code&gt;.fadeIn()&lt;/code&gt; анимирует непрозрачность совпадающих элементов. Он похож на метод &lt;code&gt;&lt;a href=&quot;fadeto&quot;&gt;.fadeTo()&lt;/a&gt;&lt;/code&gt; но этот метод не показывает элемент и может указывать конечный уровень непрозрачности.</target>
        </trans-unit>
        <trans-unit id="062775b18ef73fe8687369620f45e3672d9a3cc4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.fadeOut()&lt;/code&gt; method animates the opacity of the matched elements. Once the opacity reaches 0, the &lt;code&gt;display&lt;/code&gt; style property is set to &lt;code&gt;none&lt;/code&gt;, so the element no longer affects the layout of the page.</source>
          <target state="translated">Метод &lt;code&gt;.fadeOut()&lt;/code&gt; анимирует непрозрачность совпадающих элементов. Как только непрозрачность достигает 0, свойство стиля &lt;code&gt;display&lt;/code&gt; устанавливается в значение &lt;code&gt;none&lt;/code&gt; , поэтому элемент больше не влияет на макет страницы.</target>
        </trans-unit>
        <trans-unit id="3b666255a099fb53345e3339662753b6bc22c363" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.fadeTo()&lt;/code&gt; method animates the opacity of the matched elements. It is similar to the &lt;code&gt;&lt;a href=&quot;fadein&quot;&gt;.fadeIn()&lt;/a&gt;&lt;/code&gt; method but that method unhides the element and always fades to 100% opacity.</source>
          <target state="translated">Метод &lt;code&gt;.fadeTo()&lt;/code&gt; анимирует непрозрачность совпадающих элементов. Он похож на метод &lt;code&gt;&lt;a href=&quot;fadein&quot;&gt;.fadeIn()&lt;/a&gt;&lt;/code&gt; но этот метод показывает элемент и всегда плавно достигает 100% непрозрачности.</target>
        </trans-unit>
        <trans-unit id="87aefadc97e63343a3f198143ffa44473891ceed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.fadeToggle()&lt;/code&gt; method animates the opacity of the matched elements. When called on a visible element, the element's &lt;code&gt;display&lt;/code&gt; style property is set to &lt;code&gt;none&lt;/code&gt; once the opacity reaches 0, so the element no longer affects the layout of the page.</source>
          <target state="translated">Метод &lt;code&gt;.fadeToggle()&lt;/code&gt; анимирует непрозрачность совпадающих элементов. При вызове видимого элемента для свойства стиля &lt;code&gt;display&lt;/code&gt; элемента устанавливается значение &lt;code&gt;none&lt;/code&gt; , когда непрозрачность достигает 0, поэтому элемент больше не влияет на макет страницы.</target>
        </trans-unit>
        <trans-unit id="49e81e00b99900cc2b7acf2d3e6518a653013144" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.finish()&lt;/code&gt; method is similar to &lt;code&gt;.stop(true, true)&lt;/code&gt; in that it clears the queue and the current animation jumps to its end value. It differs, however, in that &lt;code&gt;.finish()&lt;/code&gt; also causes the CSS property of all &lt;em&gt;queued&lt;/em&gt; animations to jump to their end values, as well.</source>
          <target state="translated">Метод &lt;code&gt;.finish()&lt;/code&gt; похож на &lt;code&gt;.stop(true, true)&lt;/code&gt; в том, что он очищает очередь, и текущая анимация переходит к ее конечному значению. Однако он отличается тем, что &lt;code&gt;.finish()&lt;/code&gt; также заставляет свойство CSS всех анимаций в &lt;em&gt;очереди&lt;/em&gt; переходить к их конечным значениям.</target>
        </trans-unit>
        <trans-unit id="7004a34e94299568cb1b51c71e5fac930bc66ef5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.get()&lt;/code&gt; method grants access to the DOM nodes underlying each jQuery object. If the value of &lt;code&gt;index&lt;/code&gt; is out of bounds &amp;mdash; less than the negative number of elements or equal to or greater than the number of elements &amp;mdash; it returns &lt;code&gt;undefined&lt;/code&gt;. Consider a simple unordered list:</source>
          <target state="translated">Метод &lt;code&gt;.get()&lt;/code&gt; предоставляет доступ к узлам DOM, лежащим в основе каждого объекта jQuery. Если значение &lt;code&gt;index&lt;/code&gt; выходит за границы - меньше отрицательного числа элементов или равно или больше количества элементов - возвращается &lt;code&gt;undefined&lt;/code&gt; . Рассмотрим простой неупорядоченный список:</target>
        </trans-unit>
        <trans-unit id="c12b1ce92b56f787255c4845c73032ecb78d6a8c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.hasClass()&lt;/code&gt; method will return &lt;code&gt;true&lt;/code&gt; if the class is assigned to an element, even if other classes also are. For example, given the HTML above, the following will return &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">Метод &lt;code&gt;.hasClass()&lt;/code&gt; вернет &lt;code&gt;true&lt;/code&gt; если класс назначен элементу, даже если другие классы тоже. Например, с учетом приведенного выше HTML, следующее вернет &lt;code&gt;true&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ad9dc0cc34c77e937afc19320e0d5f30f2869953" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.hover()&lt;/code&gt; method binds handlers for both &lt;code&gt;mouseenter&lt;/code&gt; and &lt;code&gt;mouseleave&lt;/code&gt; events. You can use it to simply apply behavior to an element during the time the mouse is within the element.</source>
          <target state="translated">Метод &lt;code&gt;.hover()&lt;/code&gt; связывает обработчики событий &lt;code&gt;mouseenter&lt;/code&gt; и &lt;code&gt;mouseleave&lt;/code&gt; . Вы можете использовать его, чтобы просто применить поведение к элементу, пока мышь находится внутри элемента.</target>
        </trans-unit>
        <trans-unit id="7352679d5961ada2dc857d5b790b2d2e8264e63d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.hover()&lt;/code&gt; method, when passed a single function, will execute that handler for both &lt;code&gt;mouseenter&lt;/code&gt; and &lt;code&gt;mouseleave&lt;/code&gt; events. This allows the user to use jQuery's various toggle methods within the handler or to respond differently within the handler depending on the &lt;code&gt;event.type&lt;/code&gt;.</source>
          <target state="translated">Метод &lt;code&gt;.hover()&lt;/code&gt; при передаче одной функции выполнит этот обработчик для событий &lt;code&gt;mouseenter&lt;/code&gt; и &lt;code&gt;mouseleave&lt;/code&gt; . Это позволяет пользователю использовать различные методы переключения jQuery в обработчике или по-разному реагировать внутри обработчика в зависимости от типа &lt;code&gt;event.type&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="34735eda31f0d0c8a8865a97a386f992d2171c2d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.html()&lt;/code&gt; method is not available in XML documents.</source>
          <target state="translated">Метод &lt;code&gt;.html()&lt;/code&gt; недоступен в XML-документах.</target>
        </trans-unit>
        <trans-unit id="f5c9b7c19cf9c9bec38c117b9596dfa64b3f5ec8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.jquery&lt;/code&gt; property is assigned to the jQuery prototype, commonly referred to by its alias &lt;code&gt;$.fn&lt;/code&gt;. It is a string containing the version number of &lt;code&gt;jQuery&lt;/code&gt;, such as &quot;1.5.0&quot; or &quot;1.4.4&quot;.</source>
          <target state="translated">Свойство &lt;code&gt;.jquery&lt;/code&gt; присваивается прототипу jQuery, обычно называемому его псевдонимом &lt;code&gt;$.fn&lt;/code&gt; . Это строка, содержащая номер версии &lt;code&gt;jQuery&lt;/code&gt; , например &amp;laquo;1.5.0&amp;raquo; или &amp;laquo;1.4.4&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="a617625fc09fff48a482b47a3b9afcbd0fd42a1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.live()&lt;/code&gt; method for binding event handlers uses this property to determine the root element to use for its event delegation needs.</source>
          <target state="translated">Метод &lt;code&gt;.live()&lt;/code&gt; для привязки обработчиков событий использует это свойство для определения корневого элемента, который будет использоваться для его делегирования событий.</target>
        </trans-unit>
        <trans-unit id="96ea412065b77012ef071db4ab1032df2d1e8056" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.live()&lt;/code&gt; method interacts with other event methods in ways that can be surprising, e.g., &lt;code&gt;$( document ).off( &quot;click&quot; )&lt;/code&gt; removes all click handlers attached by any call to &lt;code&gt;.live()&lt;/code&gt;!</source>
          <target state="translated">Метод &lt;code&gt;.live()&lt;/code&gt; взаимодействует с другими методами событий неожиданным образом, например, &lt;code&gt;$( document ).off( &quot;click&quot; )&lt;/code&gt; удаляет все обработчики кликов, прикрепленные к любому вызову &lt;code&gt;.live()&lt;/code&gt; !</target>
        </trans-unit>
        <trans-unit id="01c7cdb110bb60a90c982c7bb988effecba4e9a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.load()&lt;/code&gt; method, unlike &lt;code&gt;&lt;a href=&quot;jquery.get&quot;&gt;$.get()&lt;/a&gt;&lt;/code&gt;, allows us to specify a portion of the remote document to be inserted. This is achieved with a special syntax for the &lt;code&gt;url&lt;/code&gt; parameter. If one or more space characters are included in the string, the portion of the string following the first space is assumed to be a jQuery selector that determines the content to be loaded.</source>
          <target state="translated">Метод &lt;code&gt;.load()&lt;/code&gt; , в отличие от &lt;code&gt;&lt;a href=&quot;jquery.get&quot;&gt;$.get()&lt;/a&gt;&lt;/code&gt; , позволяет нам указать часть удаленного документа для вставки. Это достигается с помощью специального синтаксиса для параметра &lt;code&gt;url&lt;/code&gt; . Если в строку включены один или несколько пробелов, предполагается, что часть строки, следующая за первым пробелом, является селектором jQuery, который определяет загружаемое содержимое.</target>
        </trans-unit>
        <trans-unit id="3944fabbd1d606011ac39735a016c7231097a28b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.map()&lt;/code&gt; method is particularly useful for getting or setting the value of a collection of elements. Consider a form with a set of checkboxes in it:</source>
          <target state="translated">Метод &lt;code&gt;.map()&lt;/code&gt; особенно полезен для получения или установки значения коллекции элементов. Рассмотрим форму с набором флажков в ней:</target>
        </trans-unit>
        <trans-unit id="bcc25be925e63e21a2f6b44a5ddf92f0365ce360" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.off()&lt;/code&gt; method removes event handlers that were attached with &lt;a href=&quot;on&quot;&gt;&lt;code&gt;.on()&lt;/code&gt;&lt;/a&gt;. See the discussion of delegated and directly bound events on that page for more information. Calling &lt;code&gt;.off()&lt;/code&gt; with no arguments removes all handlers attached to the elements. Specific event handlers can be removed on elements by providing combinations of event names, namespaces, selectors, or handler function names. &lt;strong&gt;When multiple filtering arguments are given, all of the arguments provided must match for the event handler to be removed.&lt;/strong&gt;</source>
          <target state="translated">Метод &lt;code&gt;.off()&lt;/code&gt; удаляет обработчики событий, которые были прикреплены с помощью &lt;a href=&quot;on&quot;&gt; &lt;code&gt;.on()&lt;/code&gt; &lt;/a&gt; . См. Обсуждение делегированных и напрямую связанных событий на этой странице для получения дополнительной информации. Вызов &lt;code&gt;.off()&lt;/code&gt; без аргументов удаляет все обработчики, прикрепленные к элементам. Определенные обработчики событий могут быть удалены для элементов, указав комбинации имен событий, пространств имен, селекторов или имен функций обработчиков. &lt;strong&gt;Если указано несколько аргументов фильтрации, все предоставленные аргументы должны совпадать, чтобы обработчик событий был удален.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="db7e0e81a50ab84b4a804b6e7954e6386c082532" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.offset()&lt;/code&gt; method allows us to retrieve the current position of an element (specifically its border box, which excludes margins) &lt;em&gt;relative to the document&lt;/em&gt;. Contrast this with &lt;code&gt;&lt;a href=&quot;position&quot;&gt;.position()&lt;/a&gt;&lt;/code&gt;, which retrieves the current position &lt;em&gt;relative to the offset parent&lt;/em&gt;. When positioning a new element on top of an existing one for global manipulation (in particular, for implementing drag-and-drop), &lt;code&gt;.offset()&lt;/code&gt; is more useful.</source>
          <target state="translated">Метод &lt;code&gt;.offset()&lt;/code&gt; позволяет нам получить текущую позицию элемента (в частности, его рамку, которая исключает поля) &lt;em&gt;относительно документа&lt;/em&gt; . Сравните это с &lt;code&gt;&lt;a href=&quot;position&quot;&gt;.position()&lt;/a&gt;&lt;/code&gt; , который извлекает текущую позицию &lt;em&gt;относительно родительского смещения&lt;/em&gt; . При размещении нового элемента поверх существующего для глобальных манипуляций (в частности, для реализации перетаскивания) &lt;code&gt;.offset()&lt;/code&gt; более полезен.</target>
        </trans-unit>
        <trans-unit id="7fa7f613fb65aa1a55422d29979d55d20abbd326" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.offset()&lt;/code&gt; setter method allows us to reposition an element. The element's border-box position is specified &lt;em&gt;relative to the document&lt;/em&gt;. If the element's &lt;code&gt;position&lt;/code&gt; style property is currently &lt;code&gt;static&lt;/code&gt;, it will be set to &lt;code&gt;relative&lt;/code&gt; to allow for this repositioning.</source>
          <target state="translated">Метод установки &lt;code&gt;.offset()&lt;/code&gt; позволяет нам перемещать элемент. Положение рамки элемента указывается &lt;em&gt;относительно документа&lt;/em&gt; . Если свойство стиля &lt;code&gt;position&lt;/code&gt; элемента в настоящее время является &lt;code&gt;static&lt;/code&gt; , оно будет установлено на &lt;code&gt;relative&lt;/code&gt; чтобы разрешить это изменение положения.</target>
        </trans-unit>
        <trans-unit id="a272de06ce611fd779824d215b629102bca4911d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.on()&lt;/code&gt; method attaches event handlers to the currently selected set of elements in the jQuery object. As of jQuery 1.7, the &lt;code&gt;.on()&lt;/code&gt; method provides all functionality required for attaching event handlers. For help in converting from older jQuery event methods, see &lt;a href=&quot;bind&quot;&gt;&lt;code&gt;.bind()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;delegate&quot;&gt;&lt;code&gt;.delegate()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;live&quot;&gt;&lt;code&gt;.live()&lt;/code&gt;&lt;/a&gt;. To remove events bound with &lt;code&gt;.on()&lt;/code&gt;, see &lt;a href=&quot;off&quot;&gt;&lt;code&gt;.off()&lt;/code&gt;&lt;/a&gt;. To attach an event that runs only once and then removes itself, see &lt;a href=&quot;one&quot;&gt;&lt;code&gt;.one()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Метод &lt;code&gt;.on()&lt;/code&gt; присоединяет обработчики событий к текущему выбранному набору элементов в объекте jQuery. Начиная с jQuery 1.7, метод &lt;code&gt;.on()&lt;/code&gt; предоставляет все функции, необходимые для подключения обработчиков событий. Для получения помощи в преобразовании из старых методов событий jQuery см. &lt;a href=&quot;bind&quot;&gt; &lt;code&gt;.bind()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;delegate&quot;&gt; &lt;code&gt;.delegate()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;live&quot;&gt; &lt;code&gt;.live()&lt;/code&gt; &lt;/a&gt; . Чтобы удалить события, связанные с &lt;code&gt;.on()&lt;/code&gt; , см. &lt;a href=&quot;off&quot;&gt; &lt;code&gt;.off()&lt;/code&gt; &lt;/a&gt; . Чтобы прикрепить событие, которое запускается только один раз, а затем удаляется, см. &lt;a href=&quot;one&quot;&gt; &lt;code&gt;.one()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="645c8dceaecbd4770000aadcc5a20e7cb42f53d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.one()&lt;/code&gt; method is identical to &lt;code&gt;.on()&lt;/code&gt;, except that the handler for a given element and event type is unbound after its first invocation. For example:</source>
          <target state="translated">Метод &lt;code&gt;.one()&lt;/code&gt; идентичен &lt;code&gt;.on()&lt;/code&gt; , за исключением того, что обработчик для данного элемента и типа события не связан после его первого вызова. Например:</target>
        </trans-unit>
        <trans-unit id="af016528e5751912d56884465cbb7aa740006e8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.parents()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;parent&quot;&gt;.parent()&lt;/a&gt;&lt;/code&gt; methods are similar, except that the latter only travels a single level up the DOM tree. Also, &lt;code&gt;$( &quot;html&quot; ).parent()&lt;/code&gt; method returns a set containing &lt;code&gt;document&lt;/code&gt; whereas &lt;code&gt;$( &quot;html&quot; ).parents()&lt;/code&gt; returns an empty set.</source>
          <target state="translated">В &lt;code&gt;.parents()&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;parent&quot;&gt;.parent()&lt;/a&gt;&lt;/code&gt; методы аналогичны, за исключением того, что последний только путешествует один уровень вверх по дереву DOM. Кроме того, метод &lt;code&gt;$( &quot;html&quot; ).parent()&lt;/code&gt; возвращает набор, содержащий &lt;code&gt;document&lt;/code&gt; тогда как &lt;code&gt;$( &quot;html&quot; ).parents()&lt;/code&gt; возвращает пустой набор.</target>
        </trans-unit>
        <trans-unit id="7b7c33fd18c0e46b128a7901820184b28d907678" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.position()&lt;/code&gt; method allows us to retrieve the current position of an element (specifically its margin box) &lt;em&gt;relative to the offset parent&lt;/em&gt; (specifically its padding box, which excludes margins and borders). Contrast this with &lt;code&gt;&lt;a href=&quot;offset&quot;&gt;.offset()&lt;/a&gt;&lt;/code&gt;, which retrieves the current position &lt;em&gt;relative to the document&lt;/em&gt;. When positioning a new element near another one and within the same containing DOM element, &lt;code&gt;.position()&lt;/code&gt; is the more useful.</source>
          <target state="translated">Метод &lt;code&gt;.position()&lt;/code&gt; позволяет нам получить текущую позицию элемента (в частности, его поля полей) &lt;em&gt;относительно родительского&lt;/em&gt; элемента &lt;em&gt;смещения&lt;/em&gt; (в частности, его поля заполнения, которое исключает поля и границы). Сравните это с &lt;code&gt;&lt;a href=&quot;offset&quot;&gt;.offset()&lt;/a&gt;&lt;/code&gt; , которая извлекает текущую позицию &lt;em&gt;относительно документа&lt;/em&gt; . При размещении нового элемента рядом с другим и внутри того же содержащего DOM элемента &lt;code&gt;.position()&lt;/code&gt; является более полезным.</target>
        </trans-unit>
        <trans-unit id="8581f6ba7ae84ecb35718c5084ae03b7a5fc4b47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.prepend()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;prependto&quot;&gt;.prependTo()&lt;/a&gt;&lt;/code&gt; methods perform the same task. The major difference is in the syntax&amp;mdash;specifically, in the placement of the content and target. With &lt;code&gt;.prepend()&lt;/code&gt;, the selector expression preceding the method is the container into which the content is inserted. With &lt;code&gt;.prependTo()&lt;/code&gt;, on the other hand, the content precedes the method, either as a selector expression or as markup created on the fly, and it is inserted into the target container.</source>
          <target state="translated">&lt;code&gt;.prepend()&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;prependto&quot;&gt;.prependTo()&lt;/a&gt;&lt;/code&gt; методы выполняют ту же задачу. Основное различие заключается в синтаксисе, а именно в размещении контента и цели. С &lt;code&gt;.prepend()&lt;/code&gt; выражение селектора, предшествующее методу, является контейнером, в который вставляется контент. С другой стороны, с &lt;code&gt;.prependTo()&lt;/code&gt; контент предшествует методу либо как выражение селектора, либо как разметка, созданная на лету, и вставляется в целевой контейнер.</target>
        </trans-unit>
        <trans-unit id="74db4525f13cab0cc77a631b7d354c0f8fd76bbe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.prepend()&lt;/code&gt; method inserts the specified content as the first child of each element in the jQuery collection (To insert it as the &lt;em&gt;last&lt;/em&gt; child, use &lt;a href=&quot;append&quot;&gt;&lt;code&gt;.append()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Метод &lt;code&gt;.prepend()&lt;/code&gt; вставляет указанный контент в качестве первого дочернего элемента каждого элемента в коллекции jQuery (чтобы вставить его в качестве &lt;em&gt;последнего&lt;/em&gt; дочернего &lt;a href=&quot;append&quot;&gt; &lt;code&gt;.append()&lt;/code&gt; &lt;/a&gt; , используйте .append () ).</target>
        </trans-unit>
        <trans-unit id="e70ed94081943cfae731624da44c4d5273576eb3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.promise()&lt;/code&gt; method returns a dynamically generated Promise that is resolved once all actions of a certain type bound to the collection, queued or not, have ended.</source>
          <target state="translated">Метод &lt;code&gt;.promise()&lt;/code&gt; возвращает динамически сгенерированное обещание, которое разрешается после завершения всех действий определенного типа, привязанных к коллекции, поставленных в очередь или нет.</target>
        </trans-unit>
        <trans-unit id="03b29321ce1c92f36cde79cbab565855893c1edd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.prop()&lt;/code&gt; method gets the property value for only the &lt;em&gt;first&lt;/em&gt; element in the matched set. It returns &lt;code&gt;undefined&lt;/code&gt; for the value of a property that has not been set, or if the matched set has no elements. To get the value for each element individually, use a looping construct such as jQuery's &lt;code&gt;.each()&lt;/code&gt; or &lt;code&gt;.map()&lt;/code&gt; method.</source>
          <target state="translated">Метод &lt;code&gt;.prop()&lt;/code&gt; получает значение свойства только для &lt;em&gt;первого&lt;/em&gt; элемента в согласованном наборе. Он возвращает &lt;code&gt;undefined&lt;/code&gt; для значения свойства, которое не было установлено, или если в согласованном наборе нет элементов. Чтобы получить значение для каждого элемента отдельно, используйте конструкцию цикла, такую ​​как &lt;code&gt;.each()&lt;/code&gt; jQuery .each () или &lt;code&gt;.map()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5ce095d5bd4f19cf6db1858763e51b5719d8d05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.prop()&lt;/code&gt; method is a convenient way to set the value of properties&amp;mdash;especially when setting multiple properties, using values returned by a function, or setting values on multiple elements at once. It should be used when setting &lt;code&gt;selectedIndex&lt;/code&gt;, &lt;code&gt;tagName&lt;/code&gt;, &lt;code&gt;nodeName&lt;/code&gt;, &lt;code&gt;nodeType&lt;/code&gt;, &lt;code&gt;ownerDocument&lt;/code&gt;, &lt;code&gt;defaultChecked&lt;/code&gt;, or &lt;code&gt;defaultSelected&lt;/code&gt;. Since jQuery 1.6, these properties can no longer be set with the &lt;code&gt;.attr()&lt;/code&gt; method. They do not have corresponding attributes and are only properties.</source>
          <target state="translated">Метод &lt;code&gt;.prop()&lt;/code&gt; - удобный способ задать значения свойств, особенно при установке нескольких свойств, использовании значений, возвращаемых функцией, или одновременной установке значений для нескольких элементов. Его следует использовать при установке &lt;code&gt;selectedIndex&lt;/code&gt; , &lt;code&gt;tagName&lt;/code&gt; , &lt;code&gt;nodeName&lt;/code&gt; , &lt;code&gt;nodeType&lt;/code&gt; , &lt;code&gt;ownerDocument&lt;/code&gt; , &lt;code&gt;defaultChecked&lt;/code&gt; или &lt;code&gt;defaultSelected&lt;/code&gt; . Начиная с jQuery 1.6, эти свойства больше нельзя установить с помощью &lt;code&gt;.attr()&lt;/code&gt; . Они не имеют соответствующих атрибутов и являются только свойствами.</target>
        </trans-unit>
        <trans-unit id="658e85773a055f5e1058e298fe6314a906006e63" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.queue()&lt;/code&gt; method allows us to directly manipulate this queue of functions. Calling &lt;code&gt;.queue()&lt;/code&gt; with a callback is particularly useful; it allows us to place a new function at the end of the queue. The callback function is executed once for each element in the jQuery set.</source>
          <target state="translated">Метод &lt;code&gt;.queue()&lt;/code&gt; позволяет нам напрямую управлять этой очередью функций. Вызов &lt;code&gt;.queue()&lt;/code&gt; с обратным вызовом особенно полезен; это позволяет нам поместить новую функцию в конец очереди. Функция обратного вызова выполняется один раз для каждого элемента в наборе jQuery.</target>
        </trans-unit>
        <trans-unit id="dab809c02c354d248b0ee32610b33f65bc9c6ae1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.ready()&lt;/code&gt; method is typically used with an anonymous function:</source>
          <target state="translated">Метод &lt;code&gt;.ready()&lt;/code&gt; обычно используется с анонимной функцией:</target>
        </trans-unit>
        <trans-unit id="077d4bdc956042f2c88566c31db4cbfcc7363fe4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.ready()&lt;/code&gt; method offers a way to run JavaScript code as soon as the page's Document Object Model (DOM) becomes safe to manipulate. This will often be a good time to perform tasks that are needed before the user views or interacts with the page, for example to add event handlers and initialize plugins. When multiple functions are added via successive calls to this method, they run when the DOM is ready in the order in which they are added. As of jQuery 3.0, jQuery ensures that an exception occuring in one handler does not prevent subsequently added handlers from executing.</source>
          <target state="translated">Метод &lt;code&gt;.ready()&lt;/code&gt; предлагает способ запуска кода JavaScript, как только объектная модель документа (DOM) страницы становится безопасной для манипулирования. Часто это хорошее время для выполнения задач, которые необходимы до того, как пользователь просматривает страницу или взаимодействует с ней, например, чтобы добавить обработчики событий и инициализировать плагины. Когда несколько функций добавляются через последовательные вызовы этого метода, они запускаются, когда DOM готова, в том порядке, в котором они были добавлены. Начиная с jQuery 3.0, jQuery гарантирует, что исключение, возникающее в одном обработчике, не препятствует выполнению добавленных впоследствии обработчиков.</target>
        </trans-unit>
        <trans-unit id="83bc8e03b021237c11339ba2a1efc2f21d15a5a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.removeAttr()&lt;/code&gt; method uses the JavaScript &lt;code&gt;removeAttribute()&lt;/code&gt; function, but it has the advantage of being able to be called directly on a jQuery object and it accounts for different attribute naming across browsers.</source>
          <target state="translated">Метод &lt;code&gt;.removeAttr()&lt;/code&gt; использует функцию JavaScript &lt;code&gt;removeAttribute()&lt;/code&gt; , но имеет то преимущество, что его можно вызывать непосредственно в объекте jQuery, и он учитывает различные наименования атрибутов в браузерах.</target>
        </trans-unit>
        <trans-unit id="3731546a94484849d0ac8ab85a3029dde61c5913" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.removeData()&lt;/code&gt; method allows us to remove values that were previously set using &lt;code&gt;.data()&lt;/code&gt;. When called with the name of a key, &lt;code&gt;.removeData()&lt;/code&gt; deletes that particular value. When called with no arguments, &lt;code&gt;.removeData()&lt;/code&gt; removes all values.</source>
          <target state="translated">Метод &lt;code&gt;.removeData()&lt;/code&gt; позволяет нам удалять значения, которые были ранее установлены с помощью &lt;code&gt;.data()&lt;/code&gt; . При вызове с именем ключа &lt;code&gt;.removeData()&lt;/code&gt; удаляет это конкретное значение. При вызове без аргументов &lt;code&gt;.removeData()&lt;/code&gt; удаляет все значения.</target>
        </trans-unit>
        <trans-unit id="2034be3fd4582b7028a473df6aabe0dd58c049f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.removeProp()&lt;/code&gt; method removes properties set by the &lt;code&gt;&lt;a href=&quot;prop&quot;&gt;.prop()&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">Метод &lt;code&gt;.removeProp()&lt;/code&gt; удаляет свойства, установленные методом &lt;code&gt;&lt;a href=&quot;prop&quot;&gt;.prop()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8addddb62dca0b107eb80169f537d932677c13c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.replaceAll()&lt;/code&gt; method is similar to &lt;code&gt;&lt;a href=&quot;replacewith&quot;&gt;.replaceWith()&lt;/a&gt;&lt;/code&gt;, but with the source and target reversed. Consider this DOM structure:</source>
          <target state="translated">Метод &lt;code&gt;.replaceAll()&lt;/code&gt; похож на &lt;code&gt;&lt;a href=&quot;replacewith&quot;&gt;.replaceWith()&lt;/a&gt;&lt;/code&gt; , но с противоположными исходными и целевыми объектами. Рассмотрим эту структуру DOM:</target>
        </trans-unit>
        <trans-unit id="a4f749be45eb195fd4c23e0fd4ed8e7e1d2c9d7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.replaceAll()&lt;/code&gt; method removes all data and event handlers associated with the removed nodes.</source>
          <target state="translated">Метод &lt;code&gt;.replaceAll()&lt;/code&gt; удаляет все данные и обработчики событий, связанные с удаленными узлами.</target>
        </trans-unit>
        <trans-unit id="5d74a5b31c932d95002c9ef2ae934fdb08a8e01d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.replaceWith()&lt;/code&gt; method removes all data and event handlers associated with the removed nodes.</source>
          <target state="translated">Метод &lt;code&gt;.replaceWith()&lt;/code&gt; удаляет все данные и обработчики событий, связанные с удаленными узлами.</target>
        </trans-unit>
        <trans-unit id="35d7d4021234873cff115fe91b4361994144140c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.replaceWith()&lt;/code&gt; method removes content from the DOM and inserts new content in its place with a single call. Consider this DOM structure:</source>
          <target state="translated">Метод &lt;code&gt;.replaceWith()&lt;/code&gt; удаляет содержимое из DOM и вставляет на его место новое содержимое одним вызовом. Рассмотрим эту структуру DOM:</target>
        </trans-unit>
        <trans-unit id="a9e203e0994b587501030c97a751910f0eeeecbe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.replaceWith()&lt;/code&gt; method, like most jQuery methods, returns the jQuery object so that other methods can be chained onto it. However, it must be noted that the &lt;em&gt;original&lt;/em&gt; jQuery object is returned. This object refers to the element that has been removed from the DOM, not the new element that has replaced it.</source>
          <target state="translated">Метод &lt;code&gt;.replaceWith()&lt;/code&gt; , как и большинство методов jQuery, возвращает объект jQuery, чтобы к нему можно было привязать другие методы. Однако следует отметить, что возвращается &lt;em&gt;исходный&lt;/em&gt; объект jQuery. Этот объект относится к элементу, который был удален из модели DOM, а не к новому элементу, который его заменил.</target>
        </trans-unit>
        <trans-unit id="10e5651b768633d3d3742f6a64de99c1edc2dd27" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.selector&lt;/code&gt; property was deprecated in jQuery 1.7 and is only maintained to the extent needed for supporting &lt;code&gt;.live()&lt;/code&gt; in the jQuery Migrate plugin. It may be removed without notice in a future version. The property was never a reliable indicator of the selector that could be used to obtain the set of elements currently contained in the jQuery set where it was a property, since subsequent traversal methods may have changed the set. Plugins that need to use a selector string within their plugin can require it as a parameter of the method. For example, a &quot;foo&quot; plugin could be written as &lt;code&gt;$.fn.foo = function( selector, options ) { /* plugin code goes here */ };&lt;/code&gt;, and the person using the plugin would write &lt;code&gt;$( &quot;div.bar&quot; ).foo( &quot;div.bar&quot;, {dog: &quot;bark&quot;} );&lt;/code&gt; with the &lt;code&gt;&quot;div.bar&quot;&lt;/code&gt; selector repeated as the first argument of &lt;code&gt;.foo()&lt;/code&gt;.</source>
          <target state="translated">Свойство &lt;code&gt;.selector&lt;/code&gt; устарело в jQuery 1.7 и поддерживается только в той степени, которая необходима для поддержки &lt;code&gt;.live()&lt;/code&gt; в подключаемом модуле jQuery Migrate. Он может быть удален без предварительного уведомления в будущей версии. Свойство никогда не было надежным индикатором селектора, который можно было бы использовать для получения набора элементов, которые в настоящее время содержатся в наборе jQuery, где оно было свойством, поскольку последующие методы обхода могли изменить набор. Плагины, которым необходимо использовать строку селектора в своем плагине, могут потребовать ее в качестве параметра метода. Например, плагин &quot;foo&quot; можно записать как &lt;code&gt;$.fn.foo = function( selector, options ) { /* plugin code goes here */ };&lt;/code&gt; , и человек, использующий плагин, напишет &lt;code&gt;$( &quot;div.bar&quot; ).foo( &quot;div.bar&quot;, {dog: &quot;bark&quot;} );&lt;/code&gt; с селектором &lt;code&gt;&quot;div.bar&quot;&lt;/code&gt; , повторяющимся в качестве первого аргумента &lt;code&gt;.foo()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5aca0ee1f61701b4ea28fd1ea3827f8989fb0741" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.serialize()&lt;/code&gt; method creates a text string in standard URL-encoded notation. It can act on a jQuery object that has selected individual form controls, such as &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;: &lt;code&gt;$( &quot;input, textarea, select&quot; ).serialize();&lt;/code&gt;</source>
          <target state="translated">Метод &lt;code&gt;.serialize()&lt;/code&gt; создает текстовую строку в стандартной записи с кодировкой URL. Он может воздействовать на объект jQuery, который выбрал отдельные элементы управления формой, такие как &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; : &lt;code&gt;$( &quot;input, textarea, select&quot; ).serialize();&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e9c89836855332a6cd11a6570684abc77c3f88f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.serializeArray()&lt;/code&gt; method creates a JavaScript array of objects, ready to be encoded as a JSON string. It operates on a jQuery collection of &lt;code&gt;form&lt;/code&gt;s and/or form controls. The controls can be of several types:</source>
          <target state="translated">Метод &lt;code&gt;.serializeArray()&lt;/code&gt; создает массив объектов JavaScript, готовый к кодированию в виде строки JSON. Он работает с коллекцией jQuery &lt;code&gt;form&lt;/code&gt; и / или элементов управления формами. Элементы управления могут быть нескольких типов:</target>
        </trans-unit>
        <trans-unit id="d6d35856dae819af217e994ad9f9e6d66e144968" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.serializeArray()&lt;/code&gt; method uses the standard W3C rules for &lt;a href=&quot;https://www.w3.org/TR/html401/interact/forms.html#h-17.13.2&quot;&gt;successful controls&lt;/a&gt; to determine which elements it should include; in particular the element cannot be disabled and must contain a &lt;code&gt;name&lt;/code&gt; attribute. No submit button value is serialized since the form was not submitted using a button. Data from file select elements is not serialized. Elements that do not contain a &lt;code&gt;value&lt;/code&gt; attribute are represented with the empty string value.</source>
          <target state="translated">Метод &lt;code&gt;.serializeArray()&lt;/code&gt; использует стандартные правила W3C для &lt;a href=&quot;https://www.w3.org/TR/html401/interact/forms.html#h-17.13.2&quot;&gt;успешных элементов управления,&lt;/a&gt; чтобы определить, какие элементы он должен включать; в частности, элемент не может быть отключен и должен содержать атрибут &lt;code&gt;name&lt;/code&gt; . Значение кнопки отправки не сериализуется, поскольку форма не была отправлена ​​с помощью кнопки. Данные из элементов выбора файла не сериализуются. Элементы, не содержащие атрибут &lt;code&gt;value&lt;/code&gt; , представлены пустым строковым значением.</target>
        </trans-unit>
        <trans-unit id="ac90bebcd3635f8d3d17695f20532374d17e9175" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.size()&lt;/code&gt; method is deprecated as of jQuery 1.8. Use the &lt;code&gt;&lt;a href=&quot;length&quot;&gt;.length&lt;/a&gt;&lt;/code&gt; property instead.</source>
          <target state="translated">Метод &lt;code&gt;.size()&lt;/code&gt; устарел с jQuery 1.8. Используйте &lt;code&gt;&lt;a href=&quot;length&quot;&gt;.length&lt;/a&gt;&lt;/code&gt; вместо свойства.</target>
        </trans-unit>
        <trans-unit id="7d316944601f50f903569a2ae656e583d6d4f184" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.size()&lt;/code&gt; method is functionally equivalent to the &lt;code&gt;&lt;a href=&quot;length&quot;&gt;.length&lt;/a&gt;&lt;/code&gt; property; however, &lt;strong&gt;the &lt;code&gt;.length&lt;/code&gt; property is preferred&lt;/strong&gt; because it does not have the overhead of a function call.</source>
          <target state="translated">Метод &lt;code&gt;.size()&lt;/code&gt; функционально эквивалентен &lt;code&gt;&lt;a href=&quot;length&quot;&gt;.length&lt;/a&gt;&lt;/code&gt; ; Однако &lt;strong&gt; &lt;code&gt;.length&lt;/code&gt; &lt;/strong&gt;&lt;strong&gt; свойство является предпочтительным&lt;/strong&gt; , поскольку он не имеет накладных расходов на вызов функции.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="08740b8268cec8430f152df38cca53f9dd3c62e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.slideDown()&lt;/code&gt; method animates the height of the matched elements. This causes lower parts of the page to slide down, making way for the revealed items.</source>
          <target state="translated">Метод &lt;code&gt;.slideDown()&lt;/code&gt; анимирует высоту совпадающих элементов. Это заставляет нижние части страницы скользить вниз, освобождая место для обнаруженных элементов.</target>
        </trans-unit>
        <trans-unit id="e0f562dad9679f841eef5960aed9a626d4d79d28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.slideToggle()&lt;/code&gt; method animates the height of the matched elements. This causes lower parts of the page to slide up or down, appearing to reveal or conceal the items. If the element is initially displayed, it will be hidden; if hidden, it will be shown. The &lt;code&gt;display&lt;/code&gt; property is saved and restored as needed. If an element has a &lt;code&gt;display&lt;/code&gt; value of &lt;code&gt;inline&lt;/code&gt;, then is hidden and shown, it will once again be displayed &lt;code&gt;inline&lt;/code&gt;. When the height reaches 0 after a hiding animation, the &lt;code&gt;display&lt;/code&gt; style property is set to &lt;code&gt;none&lt;/code&gt; to ensure that the element no longer affects the layout of the page.</source>
          <target state="translated">Метод &lt;code&gt;.slideToggle()&lt;/code&gt; анимирует высоту совпадающих элементов. Это приводит к тому, что нижние части страницы скользят вверх или вниз, открывая или скрывая элементы. Если элемент изначально отображается, он будет скрыт; если он скрыт, он будет показан. Свойство &lt;code&gt;display&lt;/code&gt; сохраняется и восстанавливается по мере необходимости. Если элемент имеет &lt;code&gt;display&lt;/code&gt; значение &lt;code&gt;inline&lt;/code&gt; , затем скрывается и отображается, он снова будет отображаться &lt;code&gt;inline&lt;/code&gt; . Когда высота достигает 0 после скрывающей анимации, свойство стиля &lt;code&gt;display&lt;/code&gt; устанавливается в значение &lt;code&gt;none&lt;/code&gt; , чтобы гарантировать, что элемент больше не влияет на макет страницы.</target>
        </trans-unit>
        <trans-unit id="8dc8f9d9ce642c6b3a7c575f52b12ea99866b757" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.slideUp()&lt;/code&gt; method animates the height of the matched elements. This causes lower parts of the page to slide up, appearing to conceal the items. Once the height reaches 0 (or, if set, to whatever the CSS min-height property is), the &lt;code&gt;display&lt;/code&gt; style property is set to &lt;code&gt;none&lt;/code&gt; to ensure that the element no longer affects the layout of the page.</source>
          <target state="translated">Метод &lt;code&gt;.slideUp()&lt;/code&gt; анимирует высоту совпадающих элементов. Это заставляет нижние части страницы скользить вверх, скрывая элементы. Как только высота достигает 0 (или, если установлено, независимо от свойства CSS min-height), для свойства стиля &lt;code&gt;display&lt;/code&gt; устанавливается значение &lt;code&gt;none&lt;/code&gt; , чтобы гарантировать, что элемент больше не влияет на макет страницы.</target>
        </trans-unit>
        <trans-unit id="e2302549a8460d5f9c3f7051fcf5cb7a1fa33464" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.text()&lt;/code&gt; method cannot be used on form inputs or scripts. To set or get the text value of &lt;code&gt;input&lt;/code&gt; or &lt;code&gt;textarea&lt;/code&gt; elements, use the &lt;a href=&quot;val&quot;&gt;&lt;code&gt;.val()&lt;/code&gt;&lt;/a&gt; method. To get the value of a script element, use the &lt;a href=&quot;html&quot;&gt;&lt;code&gt;.html()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Метод &lt;code&gt;.text()&lt;/code&gt; нельзя использовать во входных данных формы или скриптах. Чтобы установить или получить текстовое значение элементов &lt;code&gt;input&lt;/code&gt; или &lt;code&gt;textarea&lt;/code&gt; , используйте метод &lt;a href=&quot;val&quot;&gt; &lt;code&gt;.val()&lt;/code&gt; &lt;/a&gt; . Чтобы получить значение элемента скрипта, используйте метод &lt;a href=&quot;html&quot;&gt; &lt;code&gt;.html()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="373c283f538765ec436d67f9a9ff14adda880de8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.text()&lt;/code&gt; method cannot be used on input elements. For input field text, use the &lt;a href=&quot;val&quot;&gt;.val()&lt;/a&gt; method.</source>
          <target state="translated">Метод &lt;code&gt;.text()&lt;/code&gt; нельзя использовать для элементов ввода. Для текста поля ввода используйте метод &lt;a href=&quot;val&quot;&gt;.val ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fccc2c954d25672295c216fd9075878da0e75407" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.toggle()&lt;/code&gt; method binds a handler for the &lt;code&gt;click&lt;/code&gt; event, so the rules outlined for the triggering of &lt;code&gt;click&lt;/code&gt; apply here as well.</source>
          <target state="translated">Метод &lt;code&gt;.toggle()&lt;/code&gt; связывает обработчик для события &lt;code&gt;click&lt;/code&gt; , поэтому здесь также применяются правила, описанные для запуска &lt;code&gt;click&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b0b52985915a620941211a673b54e69d2ce481d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.toggle()&lt;/code&gt; method is provided for convenience. It is relatively straightforward to implement the same behavior by hand, and this can be necessary if the assumptions built into &lt;code&gt;.toggle()&lt;/code&gt; prove limiting. For example, &lt;code&gt;.toggle()&lt;/code&gt; is not guaranteed to work correctly if applied twice to the same element. Since &lt;code&gt;.toggle()&lt;/code&gt; internally uses a &lt;code&gt;click&lt;/code&gt; handler to do its work, we must unbind &lt;code&gt;click&lt;/code&gt; to remove a behavior attached with &lt;code&gt;.toggle()&lt;/code&gt;, so other &lt;code&gt;click&lt;/code&gt; handlers can be caught in the crossfire. The implementation also calls &lt;code&gt;.preventDefault()&lt;/code&gt; on the event, so links will not be followed and buttons will not be clicked if &lt;code&gt;.toggle()&lt;/code&gt; has been called on the element.</source>
          <target state="translated">Для &lt;code&gt;.toggle()&lt;/code&gt; предоставляется метод .toggle () . Относительно просто реализовать то же поведение вручную, и это может быть необходимо, если предположения, встроенные в &lt;code&gt;.toggle()&lt;/code&gt; оказываются ограничивающими. Например, не гарантируется правильная работа &lt;code&gt;.toggle()&lt;/code&gt; применении к одному и тому же элементу. Поскольку &lt;code&gt;.toggle()&lt;/code&gt; внутренне использует &lt;code&gt;click&lt;/code&gt; обработчик для выполнения своей работы, мы должны отвязать &lt;code&gt;click&lt;/code&gt; , чтобы удалить поведение прикрепленного с &lt;code&gt;.toggle()&lt;/code&gt; , так что другие &lt;code&gt;click&lt;/code&gt; обработчики могут быть пойманы в перекрестном огне. Реализация также вызывает &lt;code&gt;.preventDefault()&lt;/code&gt; в событии, поэтому ссылки не будут &lt;code&gt;.toggle()&lt;/code&gt; и кнопки не будут нажиматься, если для элемента была вызвана функция .toggle () .</target>
        </trans-unit>
        <trans-unit id="90ee2012c0d37e1e2b88250be3147655498ac6c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.trigger()&lt;/code&gt; method can be used on jQuery collections that wrap plain JavaScript objects similar to a pub/sub mechanism; any event handlers bound to the object will be called when the event is triggered.</source>
          <target state="translated">Метод &lt;code&gt;.trigger()&lt;/code&gt; можно использовать в коллекциях jQuery, которые обертывают простые объекты JavaScript, аналогично механизму pub / sub; любые обработчики событий, привязанные к объекту, будут вызываться при запуске события.</target>
        </trans-unit>
        <trans-unit id="6727df07ba1a485ab1da0e62516370226a50a0bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.triggerHandler( &quot;event&quot; )&lt;/code&gt; method will not call &lt;code&gt;.event()&lt;/code&gt; on the element it is triggered on. This means &lt;code&gt;.triggerHandler( &quot;submit&quot; )&lt;/code&gt; on a form will not call &lt;code&gt;.submit()&lt;/code&gt; on the form.</source>
          <target state="translated">Метод &lt;code&gt;.triggerHandler( &quot;event&quot; )&lt;/code&gt; не будет вызывать &lt;code&gt;.event()&lt;/code&gt; для элемента, для которого он запускается. Это означает, что &lt;code&gt;.triggerHandler( &quot;submit&quot; )&lt;/code&gt; в форме не будет вызывать &lt;code&gt;.submit()&lt;/code&gt; в форме.</target>
        </trans-unit>
        <trans-unit id="513e4d6bf3e0be052f40008f5f347b3a0c913660" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.undelegate()&lt;/code&gt; method is a way of removing event handlers that have been bound using &lt;a href=&quot;delegate&quot;&gt;&lt;code&gt;.delegate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Метод &lt;code&gt;.undelegate()&lt;/code&gt; - это способ удаления обработчиков событий, которые были связаны с помощью &lt;a href=&quot;delegate&quot;&gt; &lt;code&gt;.delegate()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="51fd5f8e1da6cc53759c1a5d55129187c9c1669f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.unwrap()&lt;/code&gt; method removes the element's parent and returns the unwrapped content. This is effectively the inverse of the &lt;code&gt;&lt;a href=&quot;wrap&quot;&gt;.wrap()&lt;/a&gt;&lt;/code&gt; method. The matched elements (and their siblings, if any) replace their parents within the DOM structure.</source>
          <target state="translated">Метод &lt;code&gt;.unwrap()&lt;/code&gt; удаляет родительский элемент и возвращает развернутый контент. Это фактически обратный метод &lt;code&gt;&lt;a href=&quot;wrap&quot;&gt;.wrap()&lt;/a&gt;&lt;/code&gt; . Соответствующие элементы (и их братья и сестры, если они есть) заменяют своих родителей в структуре DOM.</target>
        </trans-unit>
        <trans-unit id="be7b1e44db9c19e73004f470a5e8f0469e24649d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.val()&lt;/code&gt; method allows setting the value by passing in a function. As of jQuery 1.4, the function is passed two arguments, the current element's index and its current value:</source>
          <target state="translated">Метод &lt;code&gt;.val()&lt;/code&gt; позволяет устанавливать значение, передавая функцию. Начиная с jQuery 1.4, функции передаются два аргумента: индекс текущего элемента и его текущее значение:</target>
        </trans-unit>
        <trans-unit id="aa3df7ef8e6c5a1177e85f411ef7f33f49a0b611" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.val()&lt;/code&gt; method is primarily used to get the values of form elements such as &lt;code&gt;input&lt;/code&gt;, &lt;code&gt;select&lt;/code&gt; and &lt;code&gt;textarea&lt;/code&gt;. When called on an empty collection, it returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">Метод &lt;code&gt;.val()&lt;/code&gt; в основном используется для получения значений элементов формы, таких как &lt;code&gt;input&lt;/code&gt; , &lt;code&gt;select&lt;/code&gt; и &lt;code&gt;textarea&lt;/code&gt; . При вызове пустой коллекции возвращается &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="322722376da12ca684717a51b25a7d113bdaa84e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.wrap()&lt;/code&gt; function can take any string or object that could be passed to the &lt;code&gt;$()&lt;/code&gt; factory function to specify a DOM structure. This structure may be nested several levels deep, but should contain only one inmost element. A copy of this structure will be wrapped around each of the elements in the set of matched elements. This method returns the original set of elements for chaining purposes.</source>
          <target state="translated">Функция &lt;code&gt;.wrap()&lt;/code&gt; может принимать любую строку или объект, которые можно передать фабричной функции &lt;code&gt;$()&lt;/code&gt; для определения структуры DOM. Эта структура может быть вложенной на несколько уровней, но должна содержать только один самый внутренний элемент. Копия этой структуры будет обернута вокруг каждого из элементов в наборе согласованных элементов. Этот метод возвращает исходный набор элементов для создания цепочки.</target>
        </trans-unit>
        <trans-unit id="c812721d970da9b645aa759ae959ba0db5b2e0e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.wrapAll()&lt;/code&gt; function can take any string or object that could be passed to the &lt;code&gt;$()&lt;/code&gt; function to specify a DOM structure. This structure may be nested several levels deep, but should contain only one inmost element. The structure will be wrapped around all of the elements in the set of matched elements, as a single group.</source>
          <target state="translated">Функция &lt;code&gt;.wrapAll()&lt;/code&gt; может принимать любую строку или объект, которые могут быть переданы в функцию &lt;code&gt;$()&lt;/code&gt; чтобы указать структуру DOM. Эта структура может быть вложенной на несколько уровней, но должна содержать только один самый внутренний элемент. Структура будет обернута вокруг всех элементов в наборе совпадающих элементов как единой группы.</target>
        </trans-unit>
        <trans-unit id="3db4368770ad651d5dbec7c44cd8ba2db7319e60" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.wrapInner()&lt;/code&gt; function can take any string or object that could be passed to the &lt;code&gt;$()&lt;/code&gt; factory function to specify a DOM structure. This structure may be nested several levels deep, but should contain only one inmost element. The structure will be wrapped around the content of each of the elements in the set of matched elements.</source>
          <target state="translated">Функция &lt;code&gt;.wrapInner()&lt;/code&gt; может принимать любую строку или объект, которые можно передать фабричной функции &lt;code&gt;$()&lt;/code&gt; для определения структуры DOM. Эта структура может быть вложенной на несколько уровней, но должна содержать только один самый внутренний элемент. Структура будет обернута вокруг содержимого каждого из элементов в наборе согласованных элементов.</target>
        </trans-unit>
        <trans-unit id="139d56bcf1b91aaa8dba4392f3eb16d4d9147cb7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:checked&lt;/code&gt; selector works for checkboxes, radio buttons, and options of &lt;code&gt;select&lt;/code&gt; elements.</source>
          <target state="translated">&lt;code&gt;:checked&lt;/code&gt; Селектор работает для флажков, переключателей и вариантов &lt;code&gt;select&lt;/code&gt; элементов.</target>
        </trans-unit>
        <trans-unit id="01193d1507c1b5d6b5823171619bb4c82354b9a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:disabled&lt;/code&gt; selector should only be used for selecting HTML elements that support the &lt;code&gt;disabled&lt;/code&gt; attribute (&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;menuitem&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;fieldset&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;:disabled&lt;/code&gt; селектор должен использоваться только для выбора HTML - элементов , которые поддерживают &lt;code&gt;disabled&lt;/code&gt; атрибут ( &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;menuitem&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;fieldset&amp;gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2395e6feb0bbee4323652fc74ae8a9cbd24453a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:enabled&lt;/code&gt; selector should only be used for selecting HTML elements that support the &lt;code&gt;disabled&lt;/code&gt; attribute (&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;:enabled&lt;/code&gt; селектор должен использоваться только для выбора HTML - элементов , которые поддерживают &lt;code&gt;disabled&lt;/code&gt; атрибут ( &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2b08c2cbeff939b37697982eb1a485029c814d6d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:first-of-type&lt;/code&gt; selector matches elements that have no other element with both the same parent and the same element name coming before it in the document tree.</source>
          <target state="translated">&lt;code&gt;:first-of-type&lt;/code&gt; селектор соответствует элементам , которые не имеют никакого другого элемента как с одной родителем и тем же именем элемента наступающем перед ним в дереве документа.</target>
        </trans-unit>
        <trans-unit id="49d835832f63623fec68d9fdda05e2be7c6beae9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:first&lt;/code&gt; pseudo-class is equivalent to &lt;code&gt;:eq( 0 )&lt;/code&gt;. It could also be written as &lt;code&gt;:lt( 1 )&lt;/code&gt;. While this matches only a single element, &lt;a href=&quot;first-child-selector&quot;&gt;:first-child&lt;/a&gt; can match more than one: One for each parent.</source>
          <target state="translated">&lt;code&gt;:first&lt;/code&gt; псевдо-класс эквивалентно &lt;code&gt;:eq( 0 )&lt;/code&gt; . Его также можно было бы записать как &lt;code&gt;:lt( 1 )&lt;/code&gt; . Хотя это соответствует только одному элементу,: &lt;a href=&quot;first-child-selector&quot;&gt;first-child&lt;/a&gt; может соответствовать более чем одному: По одному для каждого родителя.</target>
        </trans-unit>
        <trans-unit id="fcd319e0ed30f65f1bf56aa4209ee68a5c743e4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:input&lt;/code&gt; selector basically selects all form controls.</source>
          <target state="translated">&lt;code&gt;:input&lt;/code&gt; селектор в основном выбирает все элементы формы.</target>
        </trans-unit>
        <trans-unit id="e719eb72a2f787d59782d8fc9ac950f9c0950994" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:lang()&lt;/code&gt; selector matches elements that have a language value equal to the supplied language code or that start with the supplied language code immediately followed by &quot;-&quot;. For example, the selector &lt;code&gt;$(&quot;div:lang(en)&quot;)&lt;/code&gt;will match &lt;code&gt;&amp;lt;div lang=&quot;en&quot;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;div lang=&quot;en-us&quot;&amp;gt;&lt;/code&gt; (and any of their descendant &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s), but not &lt;code&gt;&amp;lt;div lang=&quot;fr&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">В &lt;code&gt;:lang()&lt;/code&gt; селектор соответствует элементам , которые имеют значение языка равны кода языка или прилагаемую , которые начинаются с кодом языка прилагаемым немедленно следует &amp;laquo;-&amp;raquo;. Например, селектор &lt;code&gt;$(&quot;div:lang(en)&quot;)&lt;/code&gt; будет соответствовать &lt;code&gt;&amp;lt;div lang=&quot;en&quot;&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;div lang=&quot;en-us&quot;&amp;gt;&lt;/code&gt; (и любому из их потомков &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; s), но не &lt;code&gt;&amp;lt;div lang=&quot;fr&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b3ebbf72ab8f006b6be875c86864d5808bf70755" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:last-of-type&lt;/code&gt; selector matches elements that have no other element with the same parent and the same element name coming after it in the document tree.</source>
          <target state="translated">&lt;code&gt;:last-of-type&lt;/code&gt; селектора соответствует элементам , которые не имеют никакого другого элемента с тем же родителем и тем же именем элемента наступающего после него в дереве документа.</target>
        </trans-unit>
        <trans-unit id="f222c15bce05c9c3271710690a4e94281f26e1e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:nth-child(n)&lt;/code&gt; pseudo-class is easily confused with &lt;code&gt;:eq(n)&lt;/code&gt;, even though the two can result in dramatically different matched elements. With &lt;code&gt;:nth-child(n)&lt;/code&gt;, all children are counted, regardless of what they are, and the specified element is selected only if it matches the selector attached to the pseudo-class. With &lt;code&gt;:eq(n)&lt;/code&gt; only the selector attached to the pseudo-class is counted, not limited to children of any other element, and the (n+1)th one (n is 0-based) is selected.</source>
          <target state="translated">&lt;code&gt;:nth-child(n)&lt;/code&gt; псевдо-класс легко спутать с &lt;code&gt;:eq(n)&lt;/code&gt; , даже при том , что два может привести к совершенно разным соответствующим элементам. С &lt;code&gt;:nth-child(n)&lt;/code&gt; подсчитываются все дочерние элементы, независимо от того, что они собой представляют, и указанный элемент выбирается только в том случае, если он соответствует селектору, прикрепленному к псевдоклассу. С &lt;code&gt;:eq(n)&lt;/code&gt; подсчитывается только селектор, прикрепленный к псевдоклассу, не ограничиваясь дочерними элементами любого другого элемента, и выбирается (n + 1) -й (n на основе 0).</target>
        </trans-unit>
        <trans-unit id="689dff1a2d43ff2ac2346a95c07aae9a34eb5509" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:nth-child(n)&lt;/code&gt; pseudo-class is easily confused with the &lt;code&gt;.eq( n )&lt;/code&gt; call, even though the two can result in dramatically different matched elements. With &lt;code&gt;:nth-child(n)&lt;/code&gt;, all children are counted, regardless of what they are, and the specified element is selected only if it matches the selector attached to the pseudo-class. With the &lt;code&gt;.eq( n )&lt;/code&gt; call only the selector attached to the pseudo-class is counted, not limited to children of any other element, and the (n+1)th one (n is 0-based) is selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="480990aae62b645f5c757db08b5d22e7fc118d3f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:selected&lt;/code&gt; selector works for &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; elements. It does not work for checkboxes or radio inputs; use &lt;code&gt;:checked&lt;/code&gt; for them.</source>
          <target state="translated">&lt;code&gt;:selected&lt;/code&gt; селектор работает &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; элементов. Это не работает для флажков или радиовходов; использование &lt;code&gt;:checked&lt;/code&gt; на них.</target>
        </trans-unit>
        <trans-unit id="977650852f199848327084d347571ad1e5aaab2e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:submit&lt;/code&gt; selector typically applies to button or input elements. Note that some browsers treat &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; element as &lt;code&gt;type=&quot;submit&quot;&lt;/code&gt; implicitly while others (such as Internet Explorer) do not. To ensure that markup works consistently across all browsers and guarantee that it is possible to consistently select buttons that will submit a form, always specify a &lt;code&gt;type&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;:submit&lt;/code&gt; селектор , как правило , относится к кнопке или входных элементов. Обратите внимание, что некоторые браузеры неявно обрабатывают элемент &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; как &lt;code&gt;type=&quot;submit&quot;&lt;/code&gt; , а другие (например, Internet Explorer) - нет. Чтобы гарантировать единообразную работу разметки во всех браузерах и гарантировать возможность последовательного выбора кнопок, которые будут отправлять форму, всегда указывайте свойство &lt;code&gt;type&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e75c719b09262c87105625d3981cdd5716ee6d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;after&quot;&gt;.after()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;.insertAfter()&lt;/code&gt; methods perform the same task. The major difference is in the syntax&amp;mdash;specifically, in the placement of the content and target. With &lt;code&gt;.after()&lt;/code&gt;, the selector expression preceding the method is the container after which the content is inserted. With &lt;code&gt;.insertAfter()&lt;/code&gt;, on the other hand, the content precedes the method, either as a selector expression or as markup created on the fly, and it is inserted after the target container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62ffe6286350b3c8dba0fe6ec0674cc784f5054" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;after&quot;&gt;.after()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;.insertAfter()&lt;/code&gt; methods perform the same task. The major difference is in the syntax-specifically, in the placement of the content and target. With &lt;code&gt;.after()&lt;/code&gt;, the selector expression preceding the method is the container after which the content is inserted. With &lt;code&gt;.insertAfter()&lt;/code&gt;, on the other hand, the content precedes the method, either as a selector expression or as markup created on the fly, and it is inserted after the target container.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;after&quot;&gt;.after()&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;.insertAfter()&lt;/code&gt; методы выполняют ту же задачу. Основное различие заключается в синтаксисе, а именно в размещении контента и цели. При использовании &lt;code&gt;.after()&lt;/code&gt; выражение селектора, предшествующее методу, является контейнером, после которого вставляется контент. С другой стороны, с &lt;code&gt;.insertAfter()&lt;/code&gt; контент предшествует методу либо как выражение селектора, либо как разметка, созданная на лету, и вставляется после целевого контейнера.</target>
        </trans-unit>
        <trans-unit id="cd94168e712338f385a4b6a33602f5a25787172f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;append&quot;&gt;.append()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;.appendTo()&lt;/code&gt; methods perform the same task. The major difference is in the syntax-specifically, in the placement of the content and target. With &lt;code&gt;.append()&lt;/code&gt;, the selector expression preceding the method is the container into which the content is inserted. With &lt;code&gt;.appendTo()&lt;/code&gt;, on the other hand, the content precedes the method, either as a selector expression or as markup created on the fly, and it is inserted into the target container.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;append&quot;&gt;.append()&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;.appendTo()&lt;/code&gt; методы выполняют ту же задачу. Основное различие заключается в синтаксисе, а именно в размещении контента и цели. В &lt;code&gt;.append()&lt;/code&gt; выражение селектора, предшествующее методу, является контейнером, в который вставляется контент. С другой стороны, при использовании &lt;code&gt;.appendTo()&lt;/code&gt; содержимое предшествует методу либо как выражение селектора, либо как разметка, созданная на лету, и вставляется в целевой контейнер.</target>
        </trans-unit>
        <trans-unit id="fe43ace986ca75204f321e277ad9e4407e4e3b4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;before&quot;&gt;.before()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;.insertBefore()&lt;/code&gt; methods perform the same task. The major difference is in the syntax-specifically, in the placement of the content and target. With &lt;code&gt;.before()&lt;/code&gt;, the selector expression preceding the method is the container before which the content is inserted. With &lt;code&gt;.insertBefore()&lt;/code&gt;, on the other hand, the content precedes the method, either as a selector expression or as markup created on the fly, and it is inserted before the target container.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;before&quot;&gt;.before()&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;.insertBefore()&lt;/code&gt; методы выполняют ту же задачу. Основное различие заключается в синтаксисе, а именно в размещении контента и цели. При использовании &lt;code&gt;.before()&lt;/code&gt; выражение селектора, предшествующее методу, является контейнером, в который вставляется контент. С другой стороны, при использовании &lt;code&gt;.insertBefore()&lt;/code&gt; содержимое предшествует методу, либо как выражение селектора, либо как разметка, созданная на лету, и вставляется перед целевым контейнером.</target>
        </trans-unit>
        <trans-unit id="bb0b532a701ca8991b6d6cf5aa6767e6a60d3c3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;not&quot;&gt;.not()&lt;/a&gt;&lt;/code&gt; method will end up providing you with more readable selections than pushing complex selectors or variables into a &lt;code&gt;:not()&lt;/code&gt; selector filter. In most cases, it is a better choice.</source>
          <target state="translated">Метод &lt;code&gt;&lt;a href=&quot;not&quot;&gt;.not()&lt;/a&gt;&lt;/code&gt; конечном итоге предоставит вам более читаемый выбор, чем добавление сложных селекторов или переменных в фильтр селектора &lt;code&gt;:not()&lt;/code&gt; . В большинстве случаев это лучший выбор.</target>
        </trans-unit>
        <trans-unit id="6e8de57099bebd411d7e3efca254b07f646e05d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;prepend&quot;&gt;.prepend()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;.prependTo()&lt;/code&gt; methods perform the same task. The major difference is in the syntax-specifically, in the placement of the content and target. With &lt;code&gt;.prepend()&lt;/code&gt;, the selector expression preceding the method is the container into which the content is inserted. With &lt;code&gt;.prependTo()&lt;/code&gt;, on the other hand, the content precedes the method, either as a selector expression or as markup created on the fly, and it is inserted into the target container.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prepend&quot;&gt;.prepend()&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;.prependTo()&lt;/code&gt; методы выполняют ту же задачу. Основное различие заключается в синтаксисе, а именно в размещении контента и цели. В &lt;code&gt;.prepend()&lt;/code&gt; выражение селектора, предшествующее методу, является контейнером, в который вставляется контент. С другой стороны, с &lt;code&gt;.prependTo()&lt;/code&gt; контент предшествует методу либо как выражение селектора, либо как разметка, созданная на лету, и вставляется в целевой контейнер.</target>
        </trans-unit>
        <trans-unit id="5b9d80e6d688dcee931bd76e1d9f5e5cca4795e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;beforeSend&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;dataFilter&lt;/code&gt;, &lt;code&gt;success&lt;/code&gt; and &lt;code&gt;complete&lt;/code&gt; options all accept callback functions that are invoked at the appropriate times.</source>
          <target state="translated">&lt;code&gt;beforeSend&lt;/code&gt; , &lt;code&gt;error&lt;/code&gt; , &lt;code&gt;dataFilter&lt;/code&gt; , &lt;code&gt;success&lt;/code&gt; и &lt;code&gt;complete&lt;/code&gt; варианты все принимают функции обратного вызова, которые вызываются в соответствующие моменты времени.</target>
        </trans-unit>
        <trans-unit id="dc09994630bedb3f56bf21fb50b2ce7b0ebf957c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;blur&lt;/code&gt; event does not bubble in Internet Explorer. Therefore, scripts that rely on event delegation with the &lt;code&gt;blur&lt;/code&gt; event will not work consistently across browsers. As of version 1.4.2, however, jQuery works around this limitation by mapping &lt;code&gt;blur&lt;/code&gt; to the &lt;code&gt;focusout&lt;/code&gt; event in its event delegation methods, &lt;a href=&quot;live&quot;&gt;&lt;code&gt;.live()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;delegate&quot;&gt;&lt;code&gt;.delegate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;blur&lt;/code&gt; события не пузырь в Internet Explorer. Следовательно, сценарии, которые полагаются на делегирование событий с событием &lt;code&gt;blur&lt;/code&gt; , не будут работать согласованно в разных браузерах. Однако &lt;code&gt;focusout&lt;/code&gt; с версии 1.4.2 jQuery обходит это ограничение, сопоставляя &lt;code&gt;blur&lt;/code&gt; с событием focusout в своих методах делегирования событий, &lt;a href=&quot;live&quot;&gt; &lt;code&gt;.live()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;delegate&quot;&gt; &lt;code&gt;.delegate()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="190cbfc6dbdd3abf5df2269ad19e423de3c772bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;blur&lt;/code&gt; event is sent to an element when it loses focus. Originally, this event was only applicable to form elements, such as &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;. In recent browsers, the domain of the event has been extended to include all element types. An element can lose focus via keyboard commands, such as the Tab key, or by mouse clicks elsewhere on the page.</source>
          <target state="translated">&lt;code&gt;blur&lt;/code&gt; событие посылается к элементу , когда оно теряет фокус. Первоначально это событие было применимо только к элементам формы, таким как &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; . В последних версиях браузеров домен события был расширен и теперь включает все типы элементов. Элемент может потерять фокус с помощью команд клавиатуры, таких как клавиша Tab, или щелчком мыши в другом месте страницы.</target>
        </trans-unit>
        <trans-unit id="96e3d342f9e34d87560a2e848d913dcdb9acca7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;change&lt;/code&gt; event is sent to an element when its value changes. This event is limited to &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements, &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; boxes and &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; elements. For select boxes, checkboxes, and radio buttons, the event is fired immediately when the user makes a selection with the mouse, but for the other element types the event is deferred until the element loses focus.</source>
          <target state="translated">&lt;code&gt;change&lt;/code&gt; событие посылается к элементу , когда изменяется его значение. Это событие ограничено элементами &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; , блоками &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; и элементами &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; . Для полей выбора, флажков и переключателей событие запускается немедленно, когда пользователь делает выбор с помощью мыши, но для других типов элементов событие откладывается до тех пор, пока элемент не потеряет фокус.</target>
        </trans-unit>
        <trans-unit id="f256e3f7b3303084dd382deff803de56cd554cfc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;click&lt;/code&gt; event is only triggered after this exact series of events:</source>
          <target state="translated">&lt;code&gt;click&lt;/code&gt; событие запускается только после точной серии событий:</target>
        </trans-unit>
        <trans-unit id="86f9be7a8b000b85c91775d5ddce88ef554fea7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data&lt;/code&gt; option can contain either a query string of the form &lt;code&gt;key1=value1&amp;amp;key2=value2&lt;/code&gt;, or an object of the form &lt;code&gt;{key1: 'value1', key2: 'value2'}&lt;/code&gt;. If the latter form is used, the data is converted into a query string using &lt;code&gt;&lt;a href=&quot;jquery.param&quot;&gt;jQuery.param()&lt;/a&gt;&lt;/code&gt; before it is sent. This processing can be circumvented by setting &lt;code&gt;processData&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;. The processing might be undesirable if you wish to send an XML object to the server; in this case, change the &lt;code&gt;contentType&lt;/code&gt; option from &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; to a more appropriate MIME type.</source>
          <target state="translated">Параметр &lt;code&gt;data&lt;/code&gt; может содержать либо строку запроса формы &lt;code&gt;key1=value1&amp;amp;key2=value2&lt;/code&gt; , либо объект формы &lt;code&gt;{key1: 'value1', key2: 'value2'}&lt;/code&gt; . Если используется последняя форма, данные перед отправкой преобразуются в строку запроса с помощью &lt;code&gt;&lt;a href=&quot;jquery.param&quot;&gt;jQuery.param()&lt;/a&gt;&lt;/code&gt; . Эту обработку можно обойти, установив для &lt;code&gt;processData&lt;/code&gt; значение &lt;code&gt;false&lt;/code&gt; . Обработка может быть нежелательной, если вы хотите отправить объект XML на сервер; в этом случае измените параметр &lt;code&gt;contentType&lt;/code&gt; с &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; на более подходящий тип MIME.</target>
        </trans-unit>
        <trans-unit id="a45ea61e4be6c2fa09624cd140b6a4afcfcdff80" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dblclick&lt;/code&gt; event is only triggered after this exact series of events:</source>
          <target state="translated">&lt;code&gt;dblclick&lt;/code&gt; событие запускается только после точной серии событий:</target>
        </trans-unit>
        <trans-unit id="11ae013fda7979634bb7b5a9d1a1604d6bed835c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;deferred.done()&lt;/code&gt; method accepts one or more arguments, all of which can be either a single function or an array of functions. When the Deferred is resolved, the doneCallbacks are called. Callbacks are executed in the order they were added. Since &lt;code&gt;deferred.done()&lt;/code&gt; returns the deferred object, other methods of the deferred object can be chained to this one, including additional &lt;code&gt;.done()&lt;/code&gt; methods. When the Deferred is resolved, doneCallbacks are executed using the arguments provided to the &lt;a href=&quot;deferred.resolve&quot;&gt;&lt;code&gt;resolve&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;deferred.resolvewith&quot;&gt;&lt;code&gt;resolveWith&lt;/code&gt;&lt;/a&gt; method call in the order they were added. For more information, see the documentation for &lt;a href=&quot;category/deferred-object&quot;&gt;Deferred object&lt;/a&gt;.</source>
          <target state="translated">Метод &lt;code&gt;deferred.done()&lt;/code&gt; принимает один или несколько аргументов, каждый из которых может быть либо одной функцией, либо массивом функций. Когда Deferred разрешен, вызываются doneCallbacks. Обратные вызовы выполняются в том порядке, в котором они были добавлены. Поскольку &lt;code&gt;deferred.done()&lt;/code&gt; возвращает отложенный объект, другие методы отложенного объекта могут быть связаны с этим, включая дополнительные &lt;code&gt;.done()&lt;/code&gt; . Когда Deferred разрешен, doneCallbacks выполняются с использованием аргументов, предоставленных &lt;a href=&quot;deferred.resolvewith&quot;&gt; &lt;code&gt;resolveWith&lt;/code&gt; &lt;/a&gt; метода &lt;a href=&quot;deferred.resolve&quot;&gt; &lt;code&gt;resolve&lt;/code&gt; &lt;/a&gt; или resolveWith в том порядке, в котором они были добавлены. Для получения дополнительной информации см. Документацию по &lt;a href=&quot;category/deferred-object&quot;&gt;отложенному объекту&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bda5172606f19b9b736efbd893772823314bb31d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;deferred.fail()&lt;/code&gt; method accepts one or more arguments, all of which can be either a single function or an array of functions. When the Deferred is rejected, the failCallbacks are called. Callbacks are executed in the order they were added. Since &lt;code&gt;deferred.fail()&lt;/code&gt; returns the deferred object, other methods of the deferred object can be chained to this one, including additional &lt;code&gt;deferred.fail()&lt;/code&gt; methods. The failCallbacks are executed using the arguments provided to the &lt;a href=&quot;deferred.reject&quot;&gt;&lt;code&gt;deferred.reject()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;deferred.rejectwith&quot;&gt;&lt;code&gt;deferred.rejectWith()&lt;/code&gt;&lt;/a&gt; method call in the order they were added. For more information, see the documentation for &lt;a href=&quot;category/deferred-object&quot;&gt;Deferred object&lt;/a&gt;.</source>
          <target state="translated">Метод &lt;code&gt;deferred.fail()&lt;/code&gt; принимает один или несколько аргументов, каждый из которых может быть либо одной функцией, либо массивом функций. Когда Deferred отклоняется, вызываются failCallbacks. Обратные вызовы выполняются в том порядке, в котором они были добавлены. Поскольку &lt;code&gt;deferred.fail()&lt;/code&gt; возвращает отложенный объект, другие методы отложенного объекта могут быть связаны с этим, включая дополнительные методы &lt;code&gt;deferred.fail()&lt;/code&gt; . FailCallbacks выполняются с использованием аргументов, предоставленных вызову метода &lt;a href=&quot;deferred.reject&quot;&gt; &lt;code&gt;deferred.reject()&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;deferred.rejectwith&quot;&gt; &lt;code&gt;deferred.rejectWith()&lt;/code&gt; &lt;/a&gt; в том порядке, в котором они были добавлены. Для получения дополнительной информации см. Документацию по &lt;a href=&quot;category/deferred-object&quot;&gt;отложенному объекту&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="00213c3f3db0a9c85f8d3be62e0af641fa058062" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;deferred.pipe()&lt;/code&gt; method returns a new promise that filters the status and values of a deferred through a function. The &lt;code&gt;doneFilter&lt;/code&gt; and &lt;code&gt;failFilter&lt;/code&gt; functions filter the original deferred's resolved / rejected status and values. &lt;strong&gt;As of jQuery 1.7&lt;/strong&gt;, the method also accepts a &lt;code&gt;progressFilter&lt;/code&gt; function to filter any calls to the original deferred's &lt;code&gt;notify&lt;/code&gt; or &lt;code&gt;notifyWith&lt;/code&gt; methods. These filter functions can return a new value to be passed along to the piped promise's &lt;code&gt;done()&lt;/code&gt; or &lt;code&gt;fail()&lt;/code&gt; callbacks, or they can return another observable object (Deferred, Promise, etc) which will pass its resolved / rejected status and values to the piped promise's callbacks. If the filter function used is &lt;code&gt;null&lt;/code&gt;, or not specified, the piped promise will be resolved or rejected with the same values as the original.</source>
          <target state="translated">Метод &lt;code&gt;deferred.pipe()&lt;/code&gt; возвращает новое обещание, которое фильтрует статус и значения отложенного через функцию. Функции &lt;code&gt;doneFilter&lt;/code&gt; и &lt;code&gt;failFilter&lt;/code&gt; фильтруют исходный статус и значения разрешенного / отклоненного отложенного объекта . &lt;strong&gt;По JQuery 1.7&lt;/strong&gt; , метод также принимает &lt;code&gt;progressFilter&lt;/code&gt; функцию фильтрации вызовов к исходному отсроченные - х &lt;code&gt;notify&lt;/code&gt; или &lt;code&gt;notifyWith&lt;/code&gt; методов. Эти функции фильтрации могут возвращать новое значение, которое будет передано в конвейерное обещание &lt;code&gt;done()&lt;/code&gt; или &lt;code&gt;fail()&lt;/code&gt; обратные вызовы, или они могут вернуть другой наблюдаемый объект (отложенный, обещанный и т.д.), который будет передавать свой разрешенный / отклоненный статус и значения обратным вызовам конвейерного обещания. Если используемая функция фильтра имеет значение &lt;code&gt;null&lt;/code&gt; или не указано, конвейерное обещание будет разрешено или отклонено с теми же значениями, что и исходное.</target>
        </trans-unit>
        <trans-unit id="5f826199bcf49ca10b7a337c0b395fa9f9f67956" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;deferred.progress()&lt;/code&gt; method accepts one or more arguments, all of which can be either a single function or an array of functions. When the Deferred generates progress notifications by calling &lt;code&gt;notify&lt;/code&gt; or &lt;code&gt;notifyWith&lt;/code&gt;, the &lt;code&gt;progressCallbacks&lt;/code&gt; are called. Since &lt;code&gt;deferred.progress()&lt;/code&gt; returns the Deferred object, other methods of the Deferred object can be chained to this one. When the Deferred is resolved or rejected, progress callbacks will no longer be called, with the exception that any &lt;code&gt;progressCallbacks&lt;/code&gt; added after the Deferred enters the resolved or rejected state are executed immediately when they are added, using the arguments that were passed to the &lt;code&gt;.notify()&lt;/code&gt; or &lt;code&gt;notifyWith()&lt;/code&gt; call. For more information, see the documentation for &lt;a href=&quot;jquery.deferred&quot;&gt;jQuery.Deferred()&lt;/a&gt;.</source>
          <target state="translated">Метод &lt;code&gt;deferred.progress()&lt;/code&gt; принимает один или несколько аргументов, каждый из которых может быть либо одной функцией, либо массивом функций. Когда Отложенный генерирует уведомления о ходе по телефону &lt;code&gt;notify&lt;/code&gt; или &lt;code&gt;notifyWith&lt;/code&gt; , то &lt;code&gt;progressCallbacks&lt;/code&gt; называются. Поскольку &lt;code&gt;deferred.progress()&lt;/code&gt; возвращает объект Deferred, другие методы объекта Deferred могут быть связаны с этим. Когда Deferred разрешен или отклонен, обратные вызовы progress больше не будут вызываться, за исключением того, что любые &lt;code&gt;progressCallbacks&lt;/code&gt; , добавленные после того, как Deferred переходит в разрешенное или отклоненное состояние, выполняются сразу после их добавления с использованием аргументов, которые были переданы в &lt;code&gt;.notify()&lt;/code&gt; или &lt;code&gt;notifyWith()&lt;/code&gt; вызов. Для получения дополнительной информации см. Документацию по &lt;a href=&quot;jquery.deferred&quot;&gt;jQuery.Deferred ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="797e3639f7aa73f48cd934bfb5beac1e7f53211a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;deferred.promise()&lt;/code&gt; method allows an asynchronous function to prevent other code from interfering with the progress or status of its internal request. The Promise exposes only the Deferred methods needed to attach additional handlers or determine the state (&lt;code&gt;then&lt;/code&gt;, &lt;code&gt;done&lt;/code&gt;, &lt;code&gt;fail&lt;/code&gt;, &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;pipe&lt;/code&gt;, &lt;code&gt;progress&lt;/code&gt;, &lt;code&gt;state&lt;/code&gt; and &lt;code&gt;promise&lt;/code&gt;), but not ones that change the state (&lt;code&gt;resolve&lt;/code&gt;, &lt;code&gt;reject&lt;/code&gt;, &lt;code&gt;notify&lt;/code&gt;, &lt;code&gt;resolveWith&lt;/code&gt;, &lt;code&gt;rejectWith&lt;/code&gt;, and &lt;code&gt;notifyWith&lt;/code&gt;).</source>
          <target state="translated">Метод &lt;code&gt;deferred.promise()&lt;/code&gt; позволяет асинхронной функции предотвращать вмешательство другого кода в ход выполнения или состояние ее внутреннего запроса. Promise предоставляет только отложенные методы, необходимые для присоединения дополнительных обработчиков или определения состояния ( &lt;code&gt;then&lt;/code&gt; , &lt;code&gt;done&lt;/code&gt; , &lt;code&gt;fail&lt;/code&gt; , &lt;code&gt;always&lt;/code&gt; , &lt;code&gt;pipe&lt;/code&gt; , &lt;code&gt;progress&lt;/code&gt; , &lt;code&gt;state&lt;/code&gt; и &lt;code&gt;promise&lt;/code&gt; ), но не &lt;code&gt;resolveWith&lt;/code&gt; , которые изменяют состояние ( &lt;code&gt;resolve&lt;/code&gt; , &lt;code&gt;reject&lt;/code&gt; , &lt;code&gt;notify&lt;/code&gt; , разрешить , &lt;code&gt;rejectWith&lt;/code&gt; и &lt;code&gt;notifyWith&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7aada72a5a29999d21c048cef40f1e43a1a9a189" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;end()&lt;/code&gt; method is useful primarily when exploiting jQuery's chaining properties. When not using chaining, we can usually just call up a previous object by variable name, so we don't need to manipulate the stack. With &lt;code&gt;end()&lt;/code&gt;, though, we can string all the method calls together:</source>
          <target state="translated">Метод &lt;code&gt;end()&lt;/code&gt; полезен в первую очередь при использовании свойств связывания jQuery. Когда цепочка не используется, мы обычно можем просто вызвать предыдущий объект по имени переменной, поэтому нам не нужно манипулировать стеком. Однако с помощью &lt;code&gt;end()&lt;/code&gt; мы можем связать все вызовы методов вместе:</target>
        </trans-unit>
        <trans-unit id="c74954130e96878d0570d2001ccdea54fe745acf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;error&lt;/code&gt; event is sent to elements, such as images, that are referenced by a document and loaded by the browser. It is called if the element was not loaded correctly.</source>
          <target state="translated">&lt;code&gt;error&lt;/code&gt; посылается событие элементов, таких как изображения, на которые ссылается документ и загружалась в браузере. Вызывается, если элемент был загружен неправильно.</target>
        </trans-unit>
        <trans-unit id="4de04198e0282785992a572f3b0294e98a6eb007" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;error&lt;/code&gt; event on the &lt;code&gt;window&lt;/code&gt; object uses nonstandard arguments and return value conventions, so it is not supported by jQuery. Instead, assign a handler function directly to the &lt;code&gt;window.onerror&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;error&lt;/code&gt; событие на &lt;code&gt;window&lt;/code&gt; объекта использует нестандартные аргументы и условности возвращаемого значения, так что не поддерживается JQuery. Вместо этого назначьте функцию-обработчик непосредственно свойству &lt;code&gt;window.onerror&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41a15e6d0c25cd827f5df958e1162a9271cec778" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;event.which&lt;/code&gt; property normalizes &lt;code&gt;event.keyCode&lt;/code&gt; and &lt;code&gt;event.charCode&lt;/code&gt;. It is recommended to watch &lt;code&gt;event.which&lt;/code&gt; for keyboard key input. For more detail, read about &lt;a href=&quot;https://developer.mozilla.org/en/DOM/event.charCode#Notes&quot;&gt;event.charCode on the MDN&lt;/a&gt;.</source>
          <target state="translated">Свойство &lt;code&gt;event.which&lt;/code&gt; нормализует &lt;code&gt;event.keyCode&lt;/code&gt; и &lt;code&gt;event.charCode&lt;/code&gt; . Рекомендуется смотреть &lt;code&gt;event.which&lt;/code&gt; для ввода с клавиатуры. Подробнее читайте о &lt;a href=&quot;https://developer.mozilla.org/en/DOM/event.charCode#Notes&quot;&gt;event.charCode в MDN&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f120b8a959a3219847450a8ee53b66f4187d6db0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;events&lt;/code&gt; argument can either be a space-separated list of event type names and optional namespaces, or an object of event name strings and handlers. The &lt;code&gt;data&lt;/code&gt; argument is optional and can be omitted. For example, the following three method calls are functionally equivalent (but see below for more effective and performant ways to attach delegated event handlers):</source>
          <target state="translated">&lt;code&gt;events&lt;/code&gt; аргумент может быть либо разделенный пробелами список имен типов событий и дополнительных пространств имен или объект имен событий строк и обработчиков. &lt;code&gt;data&lt;/code&gt; аргумент является необязательным и может быть опущен. Например, следующие три вызова методов функционально эквивалентны (но более эффективные и производительные способы присоединения делегированных обработчиков событий см. Ниже):</target>
        </trans-unit>
        <trans-unit id="975ef46efd18ee6d2e52c114a4f50c14f32efd22" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flags&lt;/code&gt; argument is an optional argument to &lt;code&gt;$.Callbacks()&lt;/code&gt;, structured as a list of space-separated strings that change how the callback list behaves (eg. &lt;code&gt;$.Callbacks( &quot;unique stopOnFalse&quot; )&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; аргумент является необязательным аргументом &lt;code&gt;$.Callbacks()&lt;/code&gt; , структурированный в виде списка разделенных пробелов строк, изменения как список обратного вызова ведет себя (например, &lt;code&gt;$.Callbacks( &quot;unique stopOnFalse&quot; )&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3b181f01d34d240ec62554a3ea8b0f44ba029e93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;focus&lt;/code&gt; and &lt;code&gt;blur&lt;/code&gt; events are specified by the W3C to not bubble, but jQuery defines cross-browser &lt;code&gt;focusin&lt;/code&gt; and &lt;code&gt;focusout&lt;/code&gt; events that do bubble. When &lt;code&gt;focus&lt;/code&gt; and &lt;code&gt;blur&lt;/code&gt; are used to attach delegated event handlers, jQuery maps the names and delivers them as &lt;code&gt;focusin&lt;/code&gt; and &lt;code&gt;focusout&lt;/code&gt; respectively. For consistency and clarity, use the bubbling event type names.</source>
          <target state="translated">В &lt;code&gt;focus&lt;/code&gt; и &lt;code&gt;blur&lt;/code&gt; события определяются с помощью W3C не пузырь, но JQuery определяет кросс-браузер &lt;code&gt;focusin&lt;/code&gt; и &lt;code&gt;focusout&lt;/code&gt; событий , которые делают пузырь. Когда &lt;code&gt;focus&lt;/code&gt; и &lt;code&gt;blur&lt;/code&gt; используются для присоединения делегированных обработчиков событий, jQuery сопоставляет имена и доставляет их как &lt;code&gt;focusin&lt;/code&gt; и &lt;code&gt;focusout&lt;/code&gt; соответственно. Для согласованности и ясности используйте имена типов событий восходящей цепочки.</target>
        </trans-unit>
        <trans-unit id="d12d3d94af57d7b957f2a43b6a6ef3e7b3826720" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;focus&lt;/code&gt; event does not bubble in Internet Explorer. Therefore, scripts that rely on event delegation with the &lt;code&gt;focus&lt;/code&gt; event will not work consistently across browsers. As of version 1.4.2, however, jQuery works around this limitation by mapping &lt;code&gt;focus&lt;/code&gt; to the &lt;code&gt;focusin&lt;/code&gt; event in its event delegation methods, &lt;a href=&quot;live&quot;&gt;&lt;code&gt;.live()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;delegate&quot;&gt;&lt;code&gt;.delegate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;focus&lt;/code&gt; событие не пузырь в Internet Explorer. Следовательно, сценарии, которые полагаются на делегирование событий с событием &lt;code&gt;focus&lt;/code&gt; , не будут работать согласованно в разных браузерах. Однако &lt;code&gt;focusin&lt;/code&gt; с версии 1.4.2 jQuery обходит это ограничение, отображая &lt;code&gt;focus&lt;/code&gt; на событие focusin в своих методах делегирования событий, &lt;a href=&quot;live&quot;&gt; &lt;code&gt;.live()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;delegate&quot;&gt; &lt;code&gt;.delegate()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dc328d40a9d1978cbe1cf3f383e8ff007361446e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;focus&lt;/code&gt; event is sent to an element when it gains focus. This event is implicitly applicable to a limited set of elements, such as form elements (&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;, etc.) and links (&lt;code&gt;&amp;lt;a href&amp;gt;&lt;/code&gt;). In recent browser versions, the event can be extended to include all element types by explicitly setting the element's &lt;code&gt;tabindex&lt;/code&gt; property. An element can gain focus via keyboard commands, such as the Tab key, or by mouse clicks on the element.</source>
          <target state="translated">&lt;code&gt;focus&lt;/code&gt; событие посылается к элементу , когда он получает фокус. Это событие неявно применимо к ограниченному набору элементов, таких как элементы формы ( &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; и т. Д.) И ссылки ( &lt;code&gt;&amp;lt;a href&amp;gt;&lt;/code&gt; ). В последних версиях браузера событие может быть расширено для включения всех типов элементов, явно задав свойство &lt;code&gt;tabindex&lt;/code&gt; элемента . Элемент может получить фокус с помощью команд клавиатуры, таких как клавиша Tab, или щелчком мыши по элементу.</target>
        </trans-unit>
        <trans-unit id="ce407117100e5ba30e2542a045398a2d4fbe17b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;focusin&lt;/code&gt; event is sent to an element when it, or any element inside of it, gains focus. This is distinct from the &lt;a href=&quot;focus&quot;&gt;focus&lt;/a&gt; event in that it supports detecting the focus event on parent elements (in other words, it supports event bubbling).</source>
          <target state="translated">&lt;code&gt;focusin&lt;/code&gt; событие посылается к элементу , когда он, или любой элемент внутри него, получает фокус. Это отличается от события &lt;a href=&quot;focus&quot;&gt;фокуса&lt;/a&gt; тем, что поддерживает обнаружение события фокуса на родительских элементах (другими словами, поддерживает восходящую цепочку событий).</target>
        </trans-unit>
        <trans-unit id="5ce041c1230d97a8531ab94f0775a4789a0e64f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;focusout&lt;/code&gt; event is sent to an element when it, or any element inside of it, loses focus. This is distinct from the &lt;a href=&quot;blur&quot;&gt;blur&lt;/a&gt; event in that it supports detecting the loss of focus on descendant elements (in other words, it supports event bubbling).</source>
          <target state="translated">&lt;code&gt;focusout&lt;/code&gt; событие посылается к элементу , когда он, или любой элемент внутри него, теряет фокус. Это отличается от события &lt;a href=&quot;blur&quot;&gt;размытия&lt;/a&gt; тем, что поддерживает обнаружение потери фокуса на дочерних элементах (другими словами, поддерживает восходящую цепочку событий).</target>
        </trans-unit>
        <trans-unit id="ce50aa35bcab51ace26d4577f16d8f766ee983d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;global&lt;/code&gt; option prevents handlers registered using &lt;code&gt;&lt;a href=&quot;ajaxsend&quot;&gt;.ajaxSend()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ajaxerror&quot;&gt;.ajaxError()&lt;/a&gt;&lt;/code&gt;, and similar methods from firing when this request would trigger them. This can be useful to, for example, suppress a loading indicator that was implemented with &lt;code&gt;&lt;a href=&quot;ajaxsend&quot;&gt;.ajaxSend()&lt;/a&gt;&lt;/code&gt; if the requests are frequent and brief. With cross-domain script and JSONP requests, the global option is automatically set to &lt;code&gt;false&lt;/code&gt;. See the descriptions of these methods below for more details.</source>
          <target state="translated">В &lt;code&gt;global&lt;/code&gt; опция предотвращает обработчики регистрируются с помощью &lt;code&gt;&lt;a href=&quot;ajaxsend&quot;&gt;.ajaxSend()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;ajaxerror&quot;&gt;.ajaxError()&lt;/a&gt;&lt;/code&gt; , и аналогичные методы от стрельбы , когда этот запрос будет вызывать их. Это может быть полезно, например, для подавления индикатора загрузки, который был реализован с помощью &lt;code&gt;&lt;a href=&quot;ajaxsend&quot;&gt;.ajaxSend()&lt;/a&gt;&lt;/code&gt; если запросы частые и короткие. С междоменным скриптом и запросами JSONP глобальный параметр автоматически устанавливается в значение &lt;code&gt;false&lt;/code&gt; . Подробнее см. Описание этих методов ниже.</target>
        </trans-unit>
        <trans-unit id="abcc994cdebafa6dd62c6557f6c92b4296d2b215" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handler&lt;/code&gt; argument is a function (or the value &lt;code&gt;false&lt;/code&gt;, see below), and is required unless you pass an object for the &lt;code&gt;events&lt;/code&gt; argument. You can provide an anonymous handler function at the point of the &lt;code&gt;.on()&lt;/code&gt; call, as the examples have done above, or declare a named function and pass its name:</source>
          <target state="translated">&lt;code&gt;handler&lt;/code&gt; аргумент функции (или значение &lt;code&gt;false&lt;/code&gt; , смотри ниже), и требуется , если вы не передать объект для &lt;code&gt;events&lt;/code&gt; аргумента. Вы можете предоставить анонимную функцию-обработчик в точке &lt;code&gt;.on()&lt;/code&gt; , как в примерах выше, или объявить именованную функцию и передать ее имя:</target>
        </trans-unit>
        <trans-unit id="b2e0e1d782c5ee3726542833629d15debaa0990f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handler&lt;/code&gt; callback function can also take parameters. When the function is called, the event object will be passed to the first parameter.</source>
          <target state="translated">Функция обратного вызова &lt;code&gt;handler&lt;/code&gt; также может принимать параметры. Когда функция вызывается, объект события будет передан первому параметру.</target>
        </trans-unit>
        <trans-unit id="aebaa4915cec07238cc3400080215cbb6913448d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handler&lt;/code&gt; parameter takes a callback function, as shown above. Within the handler, the keyword &lt;code&gt;this&lt;/code&gt; refers to the DOM element to which the handler is bound. To make use of the element in jQuery, it can be passed to the normal &lt;code&gt;$()&lt;/code&gt; function. For example:</source>
          <target state="translated">Параметр &lt;code&gt;handler&lt;/code&gt; принимает функцию обратного вызова, как показано выше. В обработчике ключевое слово &lt;code&gt;this&lt;/code&gt; относится к элементу DOM, к которому привязан обработчик. Чтобы использовать элемент в jQuery, его можно передать обычной функции &lt;code&gt;$()&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="665f1a800666ebe5c19cf6aa8ac859d59065c260" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jQuery.Callbacks()&lt;/code&gt; function, introduced in version 1.7, returns a multi-purpose object that provides a powerful way to manage callback lists. It supports adding, removing, firing, and disabling callbacks.</source>
          <target state="translated">Функция &lt;code&gt;jQuery.Callbacks()&lt;/code&gt; , представленная в версии 1.7, возвращает многоцелевой объект, который обеспечивает мощный способ управления списками обратных вызовов. Он поддерживает добавление, удаление, запуск и отключение обратных вызовов.</target>
        </trans-unit>
        <trans-unit id="8185fa0ab452f17f753c1df65484ea8db044e929" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jQuery.Deferred()&lt;/code&gt; factory creates a new &lt;code&gt;deferred&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;jQuery.Deferred()&lt;/code&gt; завод создает новый &lt;code&gt;deferred&lt;/code&gt; объект.</target>
        </trans-unit>
        <trans-unit id="604bbb8f562ce63abc8a4a830e579583ea19fc8c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jQuery.Deferred&lt;/code&gt; method can be passed an optional function, which is called just before the method returns and is passed the new &lt;code&gt;deferred&lt;/code&gt; object as both the &lt;code&gt;this&lt;/code&gt; object and as the first argument to the function. The called function can attach callbacks using &lt;a href=&quot;deferred.then&quot;&gt;&lt;code&gt;deferred.then()&lt;/code&gt;&lt;/a&gt;, for example.</source>
          <target state="translated">В метод &lt;code&gt;jQuery.Deferred&lt;/code&gt; можно передать необязательную функцию, которая вызывается непосредственно перед возвратом метода и передается новому &lt;code&gt;deferred&lt;/code&gt; объекту как в качестве объекта &lt;code&gt;this&lt;/code&gt; ,так и в качестве первого аргумента функции. Вызываемая функция может присоединять обратные вызовы, например, с помощью &lt;a href=&quot;deferred.then&quot;&gt; &lt;code&gt;deferred.then()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="24b6745cb85fcef2edb81c76d1dd1ad2e0bd4c9d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jQuery.Event&lt;/code&gt; constructor is exposed and can be used when calling &lt;a href=&quot;../../trigger&quot;&gt;trigger&lt;/a&gt;. The &lt;code&gt;new&lt;/code&gt; operator is optional.</source>
          <target state="translated">Конструктор &lt;code&gt;jQuery.Event&lt;/code&gt; открыт и может использоваться при вызове &lt;a href=&quot;../../trigger&quot;&gt;триггера&lt;/a&gt; . &lt;code&gt;new&lt;/code&gt; оператор не является обязательным.</target>
        </trans-unit>
        <trans-unit id="13d3ca3d9389710007ac5e28b23209bd2827c184" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jQuery.data()&lt;/code&gt; method allows us to attach data of any type to DOM elements in a way that is safe from circular references and therefore free from memory leaks. jQuery ensures that the data is removed when DOM elements are removed via jQuery methods, and when the user leaves the page. We can set several distinct values for a single element and retrieve them later:</source>
          <target state="translated">Метод &lt;code&gt;jQuery.data()&lt;/code&gt; позволяет нам прикреплять данные любого типа к элементам DOM таким образом, чтобы избежать циклических ссылок и, следовательно, избежать утечек памяти. jQuery гарантирует, что данные удаляются, когда элементы DOM удаляются с помощью методов jQuery и когда пользователь покидает страницу. Мы можем установить несколько различных значений для одного элемента и получить их позже:</target>
        </trans-unit>
        <trans-unit id="e3168126bd9faa615301fd22885baff874f9cdaf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jQuery.data()&lt;/code&gt; method allows us to attach data of any type to DOM elements in a way that is safe from circular references and therefore from memory leaks. We can retrieve several distinct values for a single element one at a time, or as a set:</source>
          <target state="translated">Метод &lt;code&gt;jQuery.data()&lt;/code&gt; позволяет нам прикреплять данные любого типа к элементам DOM способом, безопасным от циклических ссылок и, следовательно, от утечек памяти. Мы можем получить несколько различных значений для одного элемента по одному или в виде набора:</target>
        </trans-unit>
        <trans-unit id="b58ce5b2421f175cccfc55bc89b8f9326b398cd9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jQuery.fn.extend()&lt;/code&gt; method extends the jQuery prototype (&lt;code&gt;$.fn&lt;/code&gt;) object to provide new methods that can be chained to the &lt;code&gt;jQuery()&lt;/code&gt; function.</source>
          <target state="translated">Метод &lt;code&gt;jQuery.fn.extend()&lt;/code&gt; расширяет объект прототипа jQuery ( &lt;code&gt;$.fn&lt;/code&gt; ), чтобы предоставить новые методы, которые можно связать с функцией &lt;code&gt;jQuery()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60e2c149d29e3c58427eec1ddf67ea5a978e0da6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jQuery.hasData()&lt;/code&gt; method provides a way to determine if an element currently has any values that were set using &lt;code&gt;&lt;a href=&quot;jquery.data&quot;&gt;jQuery.data()&lt;/a&gt;&lt;/code&gt;. If there is no data object associated with an element, the method returns &lt;code&gt;false&lt;/code&gt;; otherwise it returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Метод &lt;code&gt;jQuery.hasData()&lt;/code&gt; предоставляет способ определить, имеет ли элемент в настоящее время какие-либо значения, которые были установлены с помощью &lt;code&gt;&lt;a href=&quot;jquery.data&quot;&gt;jQuery.data()&lt;/a&gt;&lt;/code&gt; . Если с элементом не связан объект данных, метод возвращает &lt;code&gt;false&lt;/code&gt; ; в противном случае возвращается &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0da77c2aa73568361092bac2691ed27915c57df8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jQuery.queue()&lt;/code&gt; method allows us to directly manipulate this queue of functions. Calling &lt;code&gt;jQuery.queue()&lt;/code&gt; with a callback is particularly useful; it allows us to place a new function at the end of the queue.</source>
          <target state="translated">Метод &lt;code&gt;jQuery.queue()&lt;/code&gt; позволяет нам напрямую управлять этой очередью функций. Вызов &lt;code&gt;jQuery.queue()&lt;/code&gt; с помощью обратного вызова особенно полезен; это позволяет нам поместить новую функцию в конец очереди.</target>
        </trans-unit>
        <trans-unit id="565a34b4e9f84c0d318e6c4a9c06da64b809bbb9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jQuery.removeData()&lt;/code&gt; method allows us to remove values that were previously set using &lt;code&gt;&lt;a href=&quot;jquery.data&quot;&gt;jQuery.data()&lt;/a&gt;&lt;/code&gt;. When called with the name of a key, &lt;code&gt;jQuery.removeData()&lt;/code&gt; deletes that particular value; when called with no arguments, all values are removed.</source>
          <target state="translated">Метод &lt;code&gt;jQuery.removeData()&lt;/code&gt; позволяет нам удалять значения, которые были ранее установлены с помощью &lt;code&gt;&lt;a href=&quot;jquery.data&quot;&gt;jQuery.data()&lt;/a&gt;&lt;/code&gt; . При вызове с именем ключа &lt;code&gt;jQuery.removeData()&lt;/code&gt; удаляет это конкретное значение; при вызове без аргументов все значения удаляются.</target>
        </trans-unit>
        <trans-unit id="1e7bc28f086c399e4c9e321c7a440e482efc3b82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jqXHR.success()&lt;/code&gt;, &lt;code&gt;jqXHR.error()&lt;/code&gt;, and &lt;code&gt;jqXHR.complete()&lt;/code&gt; callback methods are &lt;strong&gt;removed as of jQuery 3.0&lt;/strong&gt;. You can use &lt;code&gt;jqXHR.done()&lt;/code&gt;, &lt;code&gt;jqXHR.fail()&lt;/code&gt;, and &lt;code&gt;jqXHR.always()&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;jqXHR.success()&lt;/code&gt; , &lt;code&gt;jqXHR.error()&lt;/code&gt; , и &lt;code&gt;jqXHR.complete()&lt;/code&gt; методы обратного &lt;strong&gt;удалены от JQuery 3.0&lt;/strong&gt; . &lt;code&gt;jqXHR.done()&lt;/code&gt; вы можете использовать jqXHR.done () , &lt;code&gt;jqXHR.fail()&lt;/code&gt; и &lt;code&gt;jqXHR.always()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f92be4fe000ad94fa5b76d5ae4cbd149a16e9eb2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;keydown&lt;/code&gt; event is sent to an element when the user presses a key on the keyboard. If the key is kept pressed, the event is sent every time the operating system repeats the key. It can be attached to any element, but the event is only sent to the element that has the focus. Focusable elements can vary between browsers, but form elements can always get focus so are reasonable candidates for this event type.</source>
          <target state="translated">&lt;code&gt;keydown&lt;/code&gt; событие посылается к элементу , когда пользователь нажимает клавишу на клавиатуре. Если клавиша удерживается нажатой, событие отправляется каждый раз, когда операционная система повторяет клавишу. Его можно прикрепить к любому элементу, но событие отправляется только тому элементу, который имеет фокус. Фокусируемые элементы могут различаться в разных браузерах, но элементы формы всегда могут быть в фокусе, поэтому являются разумными кандидатами для этого типа события.</target>
        </trans-unit>
        <trans-unit id="32ff7dffe7efbc0b47c01cc769130f1179525ab3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;keypress&lt;/code&gt; event is sent to an element when the browser registers keyboard input. This is similar to the &lt;code&gt;keydown&lt;/code&gt; event, except that modifier and non-printing keys such as</source>
          <target state="translated">&lt;code&gt;keypress&lt;/code&gt; событие посылается к элементу , когда браузер регистрирует ввод с клавиатуры. Это похоже на &lt;code&gt;keydown&lt;/code&gt; события, за исключением того , модификаторы и непечатаемых ключей , такие как</target>
        </trans-unit>
        <trans-unit id="ff2403eb27d497bc275c8f7c7d1d0a83914e9d14" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;keyup&lt;/code&gt; event is sent to an element when the user releases a key on the keyboard. It can be attached to any element, but the event is only sent to the element that has the focus. Focusable elements can vary between browsers, but form elements can always get focus so are reasonable candidates for this event type.</source>
          <target state="translated">&lt;code&gt;keyup&lt;/code&gt; событие посылается к элементу , когда пользователь отпускает клавишу на клавиатуре. Его можно прикрепить к любому элементу, но событие отправляется только тому элементу, который имеет фокус. Фокусируемые элементы могут различаться в разных браузерах, но элементы формы всегда могут быть в фокусе, поэтому являются разумными кандидатами для этого типа события.</target>
        </trans-unit>
        <trans-unit id="1ce285026d9f78e3b806cc2e447eb91d6f20c3e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;load&lt;/code&gt; event is sent to an element when it and all sub-elements have been completely loaded. This event can be sent to any element associated with a URL: images, scripts, frames, iframes, and the &lt;code&gt;window&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;load&lt;/code&gt; событие посылается к элементу , когда он и все суб-элементы были полностью загружены. Это событие может быть отправлено любому элементу, связанному с URL-адресом: изображениям, скриптам, фреймам, окнам iframe и объекту &lt;code&gt;window&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="298347bd7f87fce8c617d4517cfd4c5ce65d731f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mousedown&lt;/code&gt; event is sent to an element when the mouse pointer is over the element, and the mouse button is pressed. Any HTML element can receive this event.</source>
          <target state="translated">&lt;code&gt;mousedown&lt;/code&gt; событие посылается к элементу , когда указатель мыши находится над элементом, и кнопка мыши нажата. Любой элемент HTML может получить это событие.</target>
        </trans-unit>
        <trans-unit id="1b9c501cecef8d644812a3b72346bce59b94d9fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mousedown&lt;/code&gt; event is sent when any mouse button is clicked. To act only on specific buttons, we can use the event object's &lt;code&gt;which&lt;/code&gt; property. Not all browsers support this property (Internet Explorer uses button instead), but jQuery normalizes the property so that it is safe to use in any browser. The value of &lt;code&gt;which&lt;/code&gt; will be 1 for the left button, 2 for the middle button, or 3 for the right button.</source>
          <target state="translated">&lt;code&gt;mousedown&lt;/code&gt; событие посылается , когда кнопка мыши нажата. Чтобы воздействовать только на определенные кнопки, мы можем использовать свойство объекта события &lt;code&gt;which&lt;/code&gt; . Не все браузеры поддерживают это свойство (вместо этого в Internet Explorer используется кнопка), но jQuery нормализует свойство, чтобы его можно было безопасно использовать в любом браузере. Значение , &lt;code&gt;which&lt;/code&gt; будет 1 для левой кнопки, 2 для средней кнопки, или 3 для правой кнопки.</target>
        </trans-unit>
        <trans-unit id="b37761ced6fd4810808c7ebb873311465526bbbf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mouseenter&lt;/code&gt; JavaScript event is proprietary to Internet Explorer. Because of the event's general utility, jQuery simulates this event so that it can be used regardless of browser. This event is sent to an element when the mouse pointer enters the element. Any HTML element can receive this event.</source>
          <target state="translated">&lt;code&gt;mouseenter&lt;/code&gt; JavaScript событие является собственностью Internet Explorer. Из-за общей полезности события jQuery имитирует это событие, так что его можно использовать независимо от браузера. Это событие отправляется элементу, когда указатель мыши входит в элемент. Любой элемент HTML может получить это событие.</target>
        </trans-unit>
        <trans-unit id="b1c57d8a811fc1f9c33a1dffeaf841a6e2c80c74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mouseenter&lt;/code&gt; event differs from &lt;code&gt;mouseover&lt;/code&gt; in the way it handles event bubbling. If &lt;code&gt;mouseover&lt;/code&gt; were used in this example, then when the mouse pointer moved over the</source>
          <target state="translated">В &lt;code&gt;mouseenter&lt;/code&gt; отличается от событий при &lt;code&gt;mouseover&lt;/code&gt; в том , как она обрабатывает события бульканье. Если &lt;code&gt;mouseover&lt;/code&gt; были использованы в этом примере, а затем , когда указатель мыши перемещается над</target>
        </trans-unit>
        <trans-unit id="0e998fa63a6373ae919ad037b49d4f728dd6bf05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mouseleave&lt;/code&gt; JavaScript event is proprietary to Internet Explorer. Because of the event's general utility, jQuery simulates this event so that it can be used regardless of browser. This event is sent to an element when the mouse pointer leaves the element. Any HTML element can receive this event.</source>
          <target state="translated">&lt;code&gt;mouseleave&lt;/code&gt; JavaScript событие является собственностью Internet Explorer. Из-за общей полезности события jQuery имитирует это событие, так что его можно использовать независимо от браузера. Это событие отправляется элементу, когда указатель мыши покидает элемент. Любой элемент HTML может получить это событие.</target>
        </trans-unit>
        <trans-unit id="b8164273b96e3740f431d9d5f3df765b4ec5c68f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mouseleave&lt;/code&gt; event differs from &lt;code&gt;mouseout&lt;/code&gt; in the way it handles event bubbling. If &lt;code&gt;mouseout&lt;/code&gt; were used in this example, then when the mouse pointer moved out of the</source>
          <target state="translated">В &lt;code&gt;mouseleave&lt;/code&gt; отличается от событий &lt;code&gt;mouseout&lt;/code&gt; в том , как он обрабатывает события бульканье. Если в этом примере использовался &lt;code&gt;mouseout&lt;/code&gt; , то, когда указатель мыши переместился из</target>
        </trans-unit>
        <trans-unit id="c983abec8d4a818cd465daf3f2d4afd6e71c9966" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mousemove&lt;/code&gt; event is sent to an element when the mouse pointer moves inside the element. Any HTML element can receive this event.</source>
          <target state="translated">&lt;code&gt;mousemove&lt;/code&gt; событие посылается к элементу , когда указатель мыши перемещается внутри элемента. Любой элемент HTML может получить это событие.</target>
        </trans-unit>
        <trans-unit id="e082ba9c1250e9f802e30f0ec6097895f8b88e93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mouseout&lt;/code&gt; event is sent to an element when the mouse pointer leaves the element. Any HTML element can receive this event.</source>
          <target state="translated">&lt;code&gt;mouseout&lt;/code&gt; событие посылается к элементу , когда указатель мыши покидает элемент. Любой элемент HTML может получить это событие.</target>
        </trans-unit>
        <trans-unit id="9106e2ddd472a53e0cf775e02b396b8ff0b95fa8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mouseover&lt;/code&gt; event is sent to an element when the mouse pointer enters the element. Any HTML element can receive this event.</source>
          <target state="translated">&lt;code&gt;mouseover&lt;/code&gt; событие посылается к элементу , когда указатель мыши входит в элемент. Любой элемент HTML может получить это событие.</target>
        </trans-unit>
        <trans-unit id="3e153372308071c715ee065406cb301d099f4f6d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mouseup&lt;/code&gt; event is sent to an element when the mouse pointer is over the element, and the mouse button is released. Any HTML element can receive this event.</source>
          <target state="translated">&lt;code&gt;mouseup&lt;/code&gt; событие посылается к элементу , когда указатель мыши находится над элементом, и кнопка мыши отпущена. Любой элемент HTML может получить это событие.</target>
        </trans-unit>
        <trans-unit id="26532a19220a35f1ea5c85fbd74d757625d7aed7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;null&lt;/code&gt; keyword is a JavaScript literal that is commonly used to express the absence of an intentional value.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; ключевое слово является буквальным JavaScript , который обычно используется , чтобы выразить отсутствие преднамеренного значения.</target>
        </trans-unit>
        <trans-unit id="392d2c36d94605ced68188b8ac59e9e5f6c1f8ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opacity&lt;/code&gt; of the image is already at its target value, so this property is not animated by the second click. Since the target value for &lt;code&gt;left&lt;/code&gt; is a relative value, the image moves even farther to the right during this second animation.</source>
          <target state="translated">&lt;code&gt;opacity&lt;/code&gt; изображений уже на его целевом значении, поэтому это свойство не оживлена вторым щелчком. Так как целевое значение для &lt;code&gt;left&lt;/code&gt; является относительным значением, изображение перемещается еще дальше вправо во время этой второй анимации.</target>
        </trans-unit>
        <trans-unit id="7bb964c5f56361acfa5ea28adb7c907dbc7f1504" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;resize&lt;/code&gt; event is sent to the &lt;code&gt;window&lt;/code&gt; element when the size of the browser window changes:</source>
          <target state="translated">&lt;code&gt;resize&lt;/code&gt; событие посылается в &lt;code&gt;window&lt;/code&gt; элемента , когда размер окна браузера изменяется:</target>
        </trans-unit>
        <trans-unit id="bffc347e3cd115a86996e548a12634ae46a7dcc4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scriptCharset&lt;/code&gt; allows the character set to be explicitly specified for requests that use a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag (that is, a type of &lt;code&gt;script&lt;/code&gt; or &lt;code&gt;jsonp&lt;/code&gt;). This is useful if the script and host page have differing character sets.</source>
          <target state="translated">&lt;code&gt;scriptCharset&lt;/code&gt; позволяет набор символов должно быть явно указано для запросов , которые используют &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; тег (то есть, тип &lt;code&gt;script&lt;/code&gt; или &lt;code&gt;jsonp&lt;/code&gt; ). Это полезно, если сценарий и главная страница имеют разные наборы символов.</target>
        </trans-unit>
        <trans-unit id="d9ccb6b9fab4201ed4391a6f6c072bb61ffc6663" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scroll&lt;/code&gt; event handler can be bound to this element:</source>
          <target state="translated">К этому элементу можно привязать обработчик события &lt;code&gt;scroll&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="929f11cae458a443ec78fc803403671cdd96dc1f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scroll&lt;/code&gt; event is sent to an element when the user scrolls to a different place in the element. It applies to &lt;code&gt;window&lt;/code&gt; objects, but also to scrollable frames and elements with the &lt;code&gt;overflow &lt;/code&gt;CSS property set to &lt;code&gt;scroll&lt;/code&gt; (or &lt;code&gt;auto&lt;/code&gt; when the element's explicit height or width is less than the height or width of its contents).</source>
          <target state="translated">&lt;code&gt;scroll&lt;/code&gt; событие посылается к элементу , когда пользователь прокручивает в другое место в элементе. Это применимо к объектам &lt;code&gt;window&lt;/code&gt; , но также к прокручиваемым фреймам и элементам со свойством &lt;code&gt;overflow &lt;/code&gt; CSS, установленным для &lt;code&gt;scroll&lt;/code&gt; (или &lt;code&gt;auto&lt;/code&gt; если явная высота или ширина элемента меньше высоты или ширины его содержимого).</target>
        </trans-unit>
        <trans-unit id="8d5205a7fdd64edbe6625ef6cf64ce3deb0f9870" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;select&lt;/code&gt; event is sent to an element when the user makes a text selection inside it. This event is limited to &lt;code&gt;&amp;lt;input type=&quot;text&quot;&amp;gt;&lt;/code&gt; fields and &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; boxes.</source>
          <target state="translated">&lt;code&gt;select&lt;/code&gt; событие посылается к элементу , когда пользователь делает выбор текста внутри него. Это событие ограничено полями &lt;code&gt;&amp;lt;input type=&quot;text&quot;&amp;gt;&lt;/code&gt; и полями &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9113961f76be0bff850b1a78ab9fcf515e957ef2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;submit&lt;/code&gt; event is sent to an element when the user is attempting to submit a form. It can only be attached to &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; elements. Forms can be submitted either by clicking an explicit &lt;code&gt;&amp;lt;input type=&quot;submit&quot;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;input type=&quot;image&quot;&amp;gt;&lt;/code&gt;, or &lt;code&gt;&amp;lt;button type=&quot;submit&quot;&amp;gt;&lt;/code&gt;, or by pressing</source>
          <target state="translated">&lt;code&gt;submit&lt;/code&gt; событие посылается к элементу , когда пользователь пытается отправить форму. Его можно прикрепить только к элементам &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; . Формы можно отправить, щелкнув явный &lt;code&gt;&amp;lt;input type=&quot;submit&quot;&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;input type=&quot;image&quot;&amp;gt;&lt;/code&gt; или &lt;code&gt;&amp;lt;button type=&quot;submit&quot;&amp;gt;&lt;/code&gt; , либо нажав</target>
        </trans-unit>
        <trans-unit id="0dfac108ca3a7f225da06d364c594943ffbf4277" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;success&lt;/code&gt; callback function is passed the returned data, which will be an XML root element or a text string depending on the MIME type of the response. It is also passed the text status of the response.</source>
          <target state="translated">Функция обратного вызова &lt;code&gt;success&lt;/code&gt; передает возвращенные данные, которые будут корневым элементом XML или текстовой строкой в ​​зависимости от типа ответа MIME. Также передается текстовый статус ответа.</target>
        </trans-unit>
        <trans-unit id="e14c3da3cd5f7d01c1aa5b508e80ef7ea3f16bd6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;success&lt;/code&gt; callback function is passed the returned data, which will be an XML root element, text string, JavaScript file, or JSON object, depending on the MIME type of the response. It is also passed the text status of the response.</source>
          <target state="translated">Функция обратного вызова &lt;code&gt;success&lt;/code&gt; передает возвращенные данные, которые будут корневым элементом XML, текстовой строкой, файлом JavaScript или объектом JSON, в зависимости от типа ответа MIME. Также передается текстовый статус ответа.</target>
        </trans-unit>
        <trans-unit id="5ccddae9e6ea73cc88cf2256dce7c4e9e74fac18" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;success&lt;/code&gt; callback is passed the returned data, which is typically a JavaScript object or array as defined by the JSON structure and parsed using the &lt;code&gt;&lt;a href=&quot;jquery.parsejson&quot;&gt;$.parseJSON()&lt;/a&gt;&lt;/code&gt; method. It is also passed the text status of the response.</source>
          <target state="translated">&lt;code&gt;success&lt;/code&gt; обратного вызова передается возвращенные данные, который обычно представляет собой объект JavaScript или массив , как это определено структурой JSON и анализируется с помощью &lt;code&gt;&lt;a href=&quot;jquery.parsejson&quot;&gt;$.parseJSON()&lt;/a&gt;&lt;/code&gt; метод. Также передается текстовый статус ответа.</target>
        </trans-unit>
        <trans-unit id="f83c22f4983d0e50a0571d7102879050f1da052c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;target&lt;/code&gt; property can be the element that registered for the event or a descendant of it. It is often useful to compare &lt;code&gt;event.target&lt;/code&gt; to &lt;code&gt;this&lt;/code&gt; in order to determine if the event is being handled due to event bubbling. This property is very useful in event delegation, when events bubble.</source>
          <target state="translated">&lt;code&gt;target&lt;/code&gt; свойство может быть элементом , который зарегистрирован для события или потомка его. Часто бывает полезно сравнить &lt;code&gt;event.target&lt;/code&gt; с &lt;code&gt;this&lt;/code&gt; , чтобы определить, обрабатывается ли событие из-за всплытия событий. Это свойство очень полезно при делегировании событий, когда события всплывают.</target>
        </trans-unit>
        <trans-unit id="1b8d3506026b92f86a8e616813798c3b44dc5159" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;this&lt;/code&gt; reference within all callbacks is the object in the &lt;code&gt;context&lt;/code&gt; option passed to &lt;code&gt;$.ajax&lt;/code&gt; in the settings; if &lt;code&gt;context&lt;/code&gt; is not specified, &lt;code&gt;this&lt;/code&gt; is a reference to the Ajax settings themselves.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; ссылка во всех обратных вызовов является объектом в &lt;code&gt;context&lt;/code&gt; опции передается &lt;code&gt;$.ajax&lt;/code&gt; в настройках; если &lt;code&gt;context&lt;/code&gt; не указан, &lt;code&gt;this&lt;/code&gt; ссылка на сами настройки Ajax.</target>
        </trans-unit>
        <trans-unit id="7bcc51686054e999eac9f0a4254231a3d071aafe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unload&lt;/code&gt; event is sent to the &lt;code&gt;window&lt;/code&gt; element when the user navigates away from the page. This could mean one of many things. The user could have clicked on a link to leave the page, or typed in a new URL in the address bar. The forward and back buttons will trigger the event. Closing the browser window will cause the event to be triggered. Even a page reload will first create an &lt;code&gt;unload&lt;/code&gt; event.</source>
          <target state="translated">&lt;code&gt;unload&lt;/code&gt; событие посылается в &lt;code&gt;window&lt;/code&gt; элемента , когда пользователь перемещается от страницы. Это могло означать одно из многих. Пользователь мог щелкнуть ссылку, чтобы покинуть страницу, или ввести новый URL-адрес в адресной строке. Кнопки вперед и назад вызовут событие. Закрытие окна браузера приведет к срабатыванию события. Даже перезагрузка страницы сначала создаст событие &lt;code&gt;unload&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d09b0e7e80a1ed1f473f9537c4e4ed4c3ee2fdd4" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Anything&lt;/strong&gt; virtual type is used in jQuery documentation to indicate that any type can be used or should be expected.</source>
          <target state="translated">&lt;strong&gt;Все&lt;/strong&gt; виртуальный тип используется в Jquery документации , чтобы указать , что любой тип может быть использован или следует ожидать.</target>
        </trans-unit>
        <trans-unit id="17ba7d519f5da361502187fb64363f84401d28a3" translate="yes" xml:space="preserve">
          <source>The Ajax module also has a method named &lt;code&gt;&lt;a href=&quot;load&quot;&gt;.load()&lt;/a&gt;&lt;/code&gt;. Which one is fired depends on the set of arguments passed.</source>
          <target state="translated">В модуле Ajax также есть метод с именем &lt;code&gt;&lt;a href=&quot;load&quot;&gt;.load()&lt;/a&gt;&lt;/code&gt; . Какой из них будет запущен, зависит от набора переданных аргументов.</target>
        </trans-unit>
        <trans-unit id="b7648d06183b24c5934f6b9dd7232c3b3d4b750f" translate="yes" xml:space="preserve">
          <source>The Array of DOM elements.</source>
          <target state="translated">Массив элементов DOM.</target>
        </trans-unit>
        <trans-unit id="1ed686e6db6ada7c500787b23e3925a96af3fbc7" translate="yes" xml:space="preserve">
          <source>The Array to translate.</source>
          <target state="translated">Массив для перевода.</target>
        </trans-unit>
        <trans-unit id="2a94de58ebbebbaecd9d5009b890ff094e401547" translate="yes" xml:space="preserve">
          <source>The CSS specification allows elements to be identified by their attributes. While not supported by some older browsers for the purpose of styling documents, jQuery allows you to employ them regardless of the browser being used.</source>
          <target state="translated">Спецификация CSS позволяет идентифицировать элементы по их атрибутам.Несмотря на то,что некоторые старые браузеры не поддерживают стилизацию документов,jQuery позволяет использовать их независимо от используемого браузера.</target>
        </trans-unit>
        <trans-unit id="344c01e9b699ec2972a3002d539ac1f765367d65" translate="yes" xml:space="preserve">
          <source>The DOM element or first element within the jQuery object to look for.</source>
          <target state="translated">DOM-элемент или первый элемент внутри объекта jQuery для поиска.</target>
        </trans-unit>
        <trans-unit id="ed5ebae3f36ac0af15138db92d7110d8347bb9aa" translate="yes" xml:space="preserve">
          <source>The DOM element that initiated the event.</source>
          <target state="translated">Элемент DOM,который инициировал это событие.</target>
        </trans-unit>
        <trans-unit id="eab99c0095d7aec3d1b00060ff7c1b6aec862144" translate="yes" xml:space="preserve">
          <source>The DOM element that may be contained by (a descendant of) the other element.</source>
          <target state="translated">Элемент DOM,который может содержаться (потомком)другого элемента.</target>
        </trans-unit>
        <trans-unit id="2cec87eb51b7b37174f1c29a76ae13e9889ebe48" translate="yes" xml:space="preserve">
          <source>The DOM element that may contain the other element.</source>
          <target state="translated">Элемент DOM,который может содержать другой элемент.</target>
        </trans-unit>
        <trans-unit id="fe6bef9476a7d79e0d7dff8416213cf39b5ca1e3" translate="yes" xml:space="preserve">
          <source>The DOM element to associate with the data.</source>
          <target state="translated">Элемент DOM для связи с данными.</target>
        </trans-unit>
        <trans-unit id="dc030c4a2d267f040181927d43fe4935e74d89fc" translate="yes" xml:space="preserve">
          <source>The DOM element to query for the data.</source>
          <target state="translated">Элемент DOM для запроса данных.</target>
        </trans-unit>
        <trans-unit id="5d6133b7dddf9fc4e773853a4b4b07d451a10ef9" translate="yes" xml:space="preserve">
          <source>The DOM node context originally passed to jQuery(); if none was passed then context will likely be the document.</source>
          <target state="translated">Контекст DOM-узла изначально передавался в jQuery();если ни один из них не был передан,то,скорее всего,это будет документ.</target>
        </trans-unit>
        <trans-unit id="32ab8cdf2d8dfb86443e633f5408b3f7803e0bfe" translate="yes" xml:space="preserve">
          <source>The DOM node that will be checked to see if it's in an XML document.</source>
          <target state="translated">DOM-узел,который будет проверен на наличие в XML-документе.</target>
        </trans-unit>
        <trans-unit id="d4ceb340e65dd24c78ae93f5cd9af71b1fafda62" translate="yes" xml:space="preserve">
          <source>The Date type is a JavaScript object that represents a single moment in time. Date objects are instantiated using their constructor function, which by default creates an object that represents the current date and time.</source>
          <target state="translated">Тип Date (Дата)-это объект JavaScript,представляющий собой один момент времени.Объекты типа Date инстанцируются с помощью функции конструктора,которая по умолчанию создает объект,представляющий текущую дату и время.</target>
        </trans-unit>
        <trans-unit id="3000f310db76967f2f07fdbcf374ac00504b3972" translate="yes" xml:space="preserve">
          <source>The Deferred object is chainable, similar to the way a jQuery object is chainable, but it has its own methods. After creating a Deferred object, you can use any of the methods below by either chaining directly from the object creation or saving the object in a variable and invoking one or more methods on that variable.</source>
          <target state="translated">Объект Deferred является цепным,подобно тому,как объект jQuery является цепным,но у него есть свои методы.После создания объекта Отсрочка вы можете использовать любой из нижеперечисленных методов,либо цепочечно связывая объект непосредственно с созданием объекта,либо сохраняя объект в переменной и вызывая один или несколько методов на эту переменную.</target>
        </trans-unit>
        <trans-unit id="0a1f8379a7498e59eef9c2b47244cc00919a3dbb" translate="yes" xml:space="preserve">
          <source>The Deferred object, introduced in jQuery 1.5, is a chainable utility object created by calling the &lt;a href=&quot;../jquery.deferred&quot;&gt;&lt;code&gt;jQuery.Deferred()&lt;/code&gt;&lt;/a&gt; method. It can register multiple callbacks into callback queues, invoke callback queues, and relay the success or failure state of any synchronous or asynchronous function.</source>
          <target state="translated">Объект Deferred, представленный в jQuery 1.5, представляет собой объединяемый в цепочку служебный объект, созданный путем вызова &lt;a href=&quot;../jquery.deferred&quot;&gt; &lt;code&gt;jQuery.Deferred()&lt;/code&gt; &lt;/a&gt; . Он может регистрировать несколько обратных вызовов в очередях обратных вызовов, вызывать очереди обратных вызовов и передавать состояние успеха или отказа любой синхронной или асинхронной функции.</target>
        </trans-unit>
        <trans-unit id="ff66dca29c062490170f940b0d40f27697ff8621" translate="yes" xml:space="preserve">
          <source>The Event object</source>
          <target state="translated">Объект мероприятия</target>
        </trans-unit>
        <trans-unit id="092a65cd15982d517c7cf3d19af043054e48e494" translate="yes" xml:space="preserve">
          <source>The HTML string on which to operate.</source>
          <target state="translated">Строка HTML,над которой необходимо работать.</target>
        </trans-unit>
        <trans-unit id="f6e4c07493ef60e5d01175f31e8dbda3949ad8bc" translate="yes" xml:space="preserve">
          <source>The HTTP method to use for the request (e.g. &lt;code&gt;&quot;POST&quot;&lt;/code&gt;, &lt;code&gt;&quot;GET&quot;&lt;/code&gt;, &lt;code&gt;&quot;PUT&quot;&lt;/code&gt;). (version added: &lt;a href=&quot;https://api.jquery.com/category/version/1.9.0/&quot;&gt;1.9.0&lt;/a&gt;)</source>
          <target state="translated">Метод HTTP, используемый для запроса (например, &lt;code&gt;&quot;POST&quot;&lt;/code&gt; , &lt;code&gt;&quot;GET&quot;&lt;/code&gt; , &lt;code&gt;&quot;PUT&quot;&lt;/code&gt; ). (добавлена ​​в версии: &lt;a href=&quot;https://api.jquery.com/category/version/1.9.0/&quot;&gt;1.9.0&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="f3dc39f05895e187594bdff8c739099cd3ef44f2" translate="yes" xml:space="preserve">
          <source>The JSON standard does not permit &quot;control characters&quot; such as a tab or newline. An example like &lt;code&gt;$.parseJSON( '{ &quot;testing&quot;:&quot;1\t2\n3&quot; }' )&lt;/code&gt; will throw an error in most implementations because the JavaScript parser converts the string's tab and newline escapes into literal tab and newline; doubling the backslashes like &lt;code&gt;&quot;1\\t2\\n3&quot;&lt;/code&gt; yields expected results. This problem is often seen when injecting JSON into a JavaScript file from a server-side language such as PHP.</source>
          <target state="translated">Стандарт JSON не допускает &amp;laquo;управляющих символов&amp;raquo;, таких как табуляция или новая строка. Пример вроде &lt;code&gt;$.parseJSON( '{ &quot;testing&quot;:&quot;1\t2\n3&quot; }' )&lt;/code&gt; вызовет ошибку в большинстве реализаций, потому что синтаксический анализатор JavaScript преобразует табуляцию строки и экранирование новой строки в буквальную табуляцию и новую строку; удвоение обратной косой черты, например &lt;code&gt;&quot;1\\t2\\n3&quot;&lt;/code&gt; дает ожидаемые результаты. Эта проблема часто возникает при внедрении JSON в файл JavaScript с серверного языка, например PHP.</target>
        </trans-unit>
        <trans-unit id="0309d3fb6068e328dd40b93aceba5a1d021334b9" translate="yes" xml:space="preserve">
          <source>The JSON string to parse.</source>
          <target state="translated">Строка JSON для разбора.</target>
        </trans-unit>
        <trans-unit id="efd29258fca513f46146772577c2b30f5e2a0f96" translate="yes" xml:space="preserve">
          <source>The JavaScript &lt;code&gt;submit&lt;/code&gt; event does not bubble in Internet Explorer. However, scripts that rely on event delegation with the &lt;code&gt;submit&lt;/code&gt; event will work consistently across browsers as of jQuery 1.4, which has normalized the event's behavior.</source>
          <target state="translated">Событие &lt;code&gt;submit&lt;/code&gt; JavaScript не всплывает в Internet Explorer. Однако сценарии, которые полагаются на делегирование события с событием &lt;code&gt;submit&lt;/code&gt; будут работать согласованно во всех браузерах, начиная с jQuery 1.4, который нормализовал поведение события.</target>
        </trans-unit>
        <trans-unit id="724d8c6764e0316ac4c41ba0c0b56449243a6c38" translate="yes" xml:space="preserve">
          <source>The JavaScript code to execute.</source>
          <target state="translated">Код JavaScript для выполнения.</target>
        </trans-unit>
        <trans-unit id="3b2129b20519ddffea0fe7ceea74d5ff0a115896" translate="yes" xml:space="preserve">
          <source>The Object to translate.</source>
          <target state="translated">Объект для перевода.</target>
        </trans-unit>
        <trans-unit id="c8d98bc8f048d9c824aebc49e11225ff08a91d77" translate="yes" xml:space="preserve">
          <source>The POST method is used if data is provided as an object; otherwise, GET is assumed.</source>
          <target state="translated">Метод POST используется,если данные предоставляются как объект,в противном случае предполагается GET.</target>
        </trans-unit>
        <trans-unit id="2640e06e6701b966e29a283e9bd75f2d73784d4b" translate="yes" xml:space="preserve">
          <source>The PlainObject type is a JavaScript object containing zero or more key-value pairs. The plain object is, in other words, an &lt;code&gt;Object&lt;/code&gt; object. It is designated &quot;plain&quot; in jQuery documentation to distinguish it from other kinds of JavaScript objects: for example, &lt;code&gt;null&lt;/code&gt;, user-defined arrays, and host objects such as &lt;code&gt;document&lt;/code&gt;, all of which have a &lt;code&gt;typeof&lt;/code&gt; value of &quot;object.&quot; The &lt;code&gt;&lt;a href=&quot;jquery.isplainobject&quot;&gt;jQuery.isPlainObject()&lt;/a&gt;&lt;/code&gt; method identifies whether the passed argument is a plain object or not, as demonstrated below:</source>
          <target state="translated">Тип PlainObject - это объект JavaScript, содержащий ноль или более пар ключ-значение. Другими словами, простой объект является объектом &lt;code&gt;Object&lt;/code&gt; . В документации jQuery он обозначен как &amp;laquo;простой&amp;raquo;, чтобы отличать его от других типов объектов JavaScript: например, &lt;code&gt;null&lt;/code&gt; , определяемых пользователем массивов и основных объектов, таких как &lt;code&gt;document&lt;/code&gt; , все из которых имеют значение &lt;code&gt;typeof&lt;/code&gt; &amp;laquo;объект&amp;raquo;. Метод &lt;code&gt;&lt;a href=&quot;jquery.isplainobject&quot;&gt;jQuery.isPlainObject()&lt;/a&gt;&lt;/code&gt; определяет, является ли переданный аргумент простым объектом, как показано ниже:</target>
        </trans-unit>
        <trans-unit id="587e7d693373dd183bdd6d7b252b02ad4cbc6584" translate="yes" xml:space="preserve">
          <source>The Promise interface also allows jQuery's Ajax methods, including &lt;code&gt;$.get()&lt;/code&gt;, to chain multiple &lt;code&gt;.done()&lt;/code&gt;, &lt;code&gt;.fail()&lt;/code&gt;, and &lt;code&gt;.always()&lt;/code&gt; callbacks on a single request, and even to assign these callbacks after the request may have completed. If the request is already complete, the callback is fired immediately.</source>
          <target state="translated">Интерфейс Promise также позволяет Ajax-методам jQuery, включая &lt;code&gt;$.get()&lt;/code&gt; , &lt;code&gt;.done()&lt;/code&gt; несколько обратных вызовов .done () , &lt;code&gt;.fail()&lt;/code&gt; и &lt;code&gt;.always()&lt;/code&gt; в одном запросе, и даже назначать эти обратные вызовы после того, как запрос может завершили. Если запрос уже завершен, обратный вызов запускается немедленно.</target>
        </trans-unit>
        <trans-unit id="43e52de5068bb1e070f3ee42e34c03fc0ec345d8" translate="yes" xml:space="preserve">
          <source>The Promise interface in jQuery 1.5 also allows jQuery's Ajax methods, including &lt;code&gt;$.getJSON()&lt;/code&gt;, to chain multiple &lt;code&gt;.done()&lt;/code&gt;, &lt;code&gt;.always()&lt;/code&gt;, and &lt;code&gt;.fail()&lt;/code&gt; callbacks on a single request, and even to assign these callbacks after the request may have completed. If the request is already complete, the callback is fired immediately.</source>
          <target state="translated">Интерфейс Promise в jQuery 1.5 также позволяет Ajax-методам jQuery, включая &lt;code&gt;$.getJSON()&lt;/code&gt; , &lt;code&gt;.done()&lt;/code&gt; несколько обратных вызовов .done () , &lt;code&gt;.always()&lt;/code&gt; и &lt;code&gt;.fail()&lt;/code&gt; по одному запросу и даже назначать эти обратные вызовы после запрос может быть выполнен. Если запрос уже завершен, обратный вызов запускается немедленно.</target>
        </trans-unit>
        <trans-unit id="d6eb2e2c386b7b7095dc892d50af68ceac7a6ab8" translate="yes" xml:space="preserve">
          <source>The W3C recommends that the &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element have at least one child node, even if that child is merely text (see &lt;a href=&quot;https://www.w3.org/TR/html401/struct/text.html#edef-P&quot;&gt;http://www.w3.org/TR/html401/struct/text.html#edef-P&lt;/a&gt;). Some other elements, on the other hand, are empty (i.e. have no children) by definition:&lt;code&gt; &amp;lt;input&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;hr&amp;gt;&lt;/code&gt;, for example.</source>
          <target state="translated">W3C рекомендует, чтобы элемент &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; имел хотя бы один дочерний узел, даже если этот дочерний узел является просто текстом (см. &lt;a href=&quot;https://www.w3.org/TR/html401/struct/text.html#edef-P&quot;&gt;Http://www.w3.org/TR/html401/struct/text.html#edef-P&lt;/a&gt; ). Некоторые другие элементы, с другой стороны, пусты (т. Е. Не имеют дочерних элементов) по определению: например, &lt;code&gt; &amp;lt;input&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;hr&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b6519a6ba7c2d20aff481697ae138b671dc2b3a" translate="yes" xml:space="preserve">
          <source>The W3C recommends that the &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element have at least one child node, even if that child is merely text (see &lt;a href=&quot;https://www.w3.org/TR/html401/struct/text.html#edef-P&quot;&gt;https://www.w3.org/TR/html401/struct/text.html#edef-P&lt;/a&gt;). Some other elements, on the other hand, are empty (i.e. have no children) by definition:&lt;code&gt; &amp;lt;input&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;hr&amp;gt;&lt;/code&gt;, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e19a093a3b453869f5a9e45b3b4c2922a34b749" translate="yes" xml:space="preserve">
          <source>The W3C recommends that the &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element have at least one child node, even if that child is merely text (see https://www.w3.org/TR/html401/struct/text.html#edef-P). Some other elements, on the other hand, are empty (i.e. have no children) by definition: &amp;lt;input&amp;gt;, &amp;lt;img&amp;gt;, &amp;lt;br&amp;gt;, and &amp;lt;hr&amp;gt;, for example.</source>
          <target state="translated">W3C рекомендует, чтобы элемент &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; имел хотя бы один дочерний узел, даже если этот дочерний узел является просто текстом (см. Https://www.w3.org/TR/html401/struct/text.html#edef-P). Некоторые другие элементы, с другой стороны, пусты (т. Е. Не имеют дочерних элементов) по определению: например, &amp;lt;input&amp;gt;, &amp;lt;img&amp;gt;, &amp;lt;br&amp;gt; и &amp;lt;hr&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="070d3bba3be689c7dcc9db2cb7e1c2b999bc4b84" translate="yes" xml:space="preserve">
          <source>The above code will generate two different alerts when the button is clicked.</source>
          <target state="translated">Вышеуказанный код будет генерировать два различных предупреждения при нажатии кнопки.</target>
        </trans-unit>
        <trans-unit id="9f62fe5d402e31a15da9defb30b12c9f45a3306a" translate="yes" xml:space="preserve">
          <source>The above lines alert the data values that were set on the &lt;code&gt;body&lt;/code&gt; element. If no data at all was set on that element, &lt;code&gt;undefined&lt;/code&gt; is returned.</source>
          <target state="translated">Вышеупомянутые строки предупреждают о значениях данных, которые были установлены в элементе &lt;code&gt;body&lt;/code&gt; . Если для этого элемента &lt;code&gt;undefined&lt;/code&gt; было задано никаких данных, возвращается undefined .</target>
        </trans-unit>
        <trans-unit id="19dbc42eb0079a96f335996e2465e83a8699102f" translate="yes" xml:space="preserve">
          <source>The above lines alert the data values that were set on the &lt;code&gt;body&lt;/code&gt; element. If nothing was set on that element, an empty string is returned.</source>
          <target state="translated">Вышеупомянутые строки предупреждают о значениях данных, которые были установлены в элементе &lt;code&gt;body&lt;/code&gt; . Если для этого элемента ничего не было установлено, возвращается пустая строка.</target>
        </trans-unit>
        <trans-unit id="eae634c1a9899fb5e22d8b13e7563287e4cef7e7" translate="yes" xml:space="preserve">
          <source>The above now allows passing from &lt;code&gt;text&lt;/code&gt; to &lt;code&gt;mycustomtype&lt;/code&gt; and then &lt;code&gt;mycustomtype&lt;/code&gt; to &lt;code&gt;json&lt;/code&gt;.</source>
          <target state="translated">Вышеупомянутое теперь позволяет переходить от &lt;code&gt;text&lt;/code&gt; к &lt;code&gt;mycustomtype&lt;/code&gt; , а затем от &lt;code&gt;mycustomtype&lt;/code&gt; к &lt;code&gt;json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b32e570dfd596419701353365115bdabacf94c4" translate="yes" xml:space="preserve">
          <source>The above wraps its code in a function to hide the &quot;proxied&quot;-variable. It saves jQuery's setArray-method in a closure and overwrites it. The proxy then logs all calls to the method and delegates the call to the original. Using apply(this, arguments) guarantees that the caller won't be able to notice the difference between the original and the proxied method.</source>
          <target state="translated">Вышеуказанное завершает свой код в функцию,чтобы скрыть &quot;проксированную&quot; переменную.Она сохраняет в закрытом виде setArray-метод jQuery и перезаписывает его.Затем прокси регистрирует все обращения к методу и делегирует обращение к оригиналу.Использование apply(this,arguments)гарантирует,что звонящий не сможет заметить разницу между оригинальным и проксированным методом.</target>
        </trans-unit>
        <trans-unit id="6610ea50c945318d3ab7693d709bd53977c14242" translate="yes" xml:space="preserve">
          <source>The argument can be either a single function or an array of functions. When the Deferred is resolved or rejected, the &lt;code&gt;alwaysCallbacks&lt;/code&gt; are called. Since &lt;code&gt;deferred.always()&lt;/code&gt; returns the Deferred object, other methods of the Deferred object can be chained to this one, including additional &lt;code&gt;.always()&lt;/code&gt; methods. When the Deferred is resolved or rejected, callbacks are executed in the order they were added, using the arguments provided to the &lt;a href=&quot;deferred.resolve&quot;&gt;&lt;code&gt;resolve&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;deferred.reject&quot;&gt;&lt;code&gt;reject&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;deferred.resolvewith&quot;&gt;&lt;code&gt;resolveWith&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;deferred.rejectwith&quot;&gt;&lt;code&gt;rejectWith&lt;/code&gt;&lt;/a&gt; method calls. For more information, see the documentation for &lt;a href=&quot;category/deferred-object&quot;&gt;Deferred object&lt;/a&gt;.</source>
          <target state="translated">Аргументом может быть одна функция или массив функций. Когда Deferred разрешается или отклоняется, &lt;code&gt;alwaysCallbacks&lt;/code&gt; . Поскольку &lt;code&gt;deferred.always()&lt;/code&gt; возвращает объект Deferred, другие методы объекта Deferred могут быть связаны с этим, включая дополнительные методы &lt;code&gt;.always()&lt;/code&gt; . Когда Deferred разрешается или отклоняется, обратные вызовы выполняются в том порядке, в котором они были добавлены, с использованием аргументов, предоставленных для &lt;a href=&quot;deferred.rejectwith&quot;&gt; &lt;code&gt;rejectWith&lt;/code&gt; &lt;/a&gt; методов &lt;a href=&quot;deferred.resolve&quot;&gt; &lt;code&gt;resolve&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;deferred.reject&quot;&gt; &lt;code&gt;reject&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;deferred.resolvewith&quot;&gt; &lt;code&gt;resolveWith&lt;/code&gt; &lt;/a&gt; или rejectWith . Для получения дополнительной информации см. Документацию по &lt;a href=&quot;category/deferred-object&quot;&gt;отложенному объекту&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8b4b7d3a4511e33399069ffc13d4bc8def0f503b" translate="yes" xml:space="preserve">
          <source>The argument or list of arguments to pass back to the callback list.</source>
          <target state="translated">Аргумент или список аргументов для передачи обратно в список обратного вызова.</target>
        </trans-unit>
        <trans-unit id="953b3138188e0f4497437947cd8a29321abeb58c" translate="yes" xml:space="preserve">
          <source>The arguments object also has a callee property, which refers to the function you're inside of. For instance:</source>
          <target state="translated">Объект arguments также имеет свойство callee,которое относится к функции,внутри которой вы находитесь.Например:</target>
        </trans-unit>
        <trans-unit id="bc1aa336f96c29c99dc1ba1bdef4fa0b9f4fb846" translate="yes" xml:space="preserve">
          <source>The arguments that were passed in to the jQuery method (for serialization).</source>
          <target state="translated">Аргументы,которые были переданы в метод jQuery (для сериализации).</target>
        </trans-unit>
        <trans-unit id="01fe9863cb30f7b0bcc0e1d8d4a68a046910e081" translate="yes" xml:space="preserve">
          <source>The array or array-like object to iterate over.</source>
          <target state="translated">Массив или массивный объект для итерации.</target>
        </trans-unit>
        <trans-unit id="bfc6aedd808a2761d036a171b890dbe3969ca47d" translate="yes" xml:space="preserve">
          <source>The array-like object to search through.</source>
          <target state="translated">Массивный объект для поиска.</target>
        </trans-unit>
        <trans-unit id="a92d8a0b1c47a77890394dcce7884f2dd51b73ca" translate="yes" xml:space="preserve">
          <source>The available data types are &lt;code&gt;text&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;xml&lt;/code&gt;, &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;jsonp&lt;/code&gt;, and &lt;code&gt;script&lt;/code&gt;.</source>
          <target state="translated">Доступные типы данных: &lt;code&gt;text&lt;/code&gt; , &lt;code&gt;html&lt;/code&gt; , &lt;code&gt;xml&lt;/code&gt; , &lt;code&gt;json&lt;/code&gt; , &lt;code&gt;jsonp&lt;/code&gt; и &lt;code&gt;script&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f474111176dbe4b72c85bfbcfa1c612929642144" translate="yes" xml:space="preserve">
          <source>The callback hooks provided by &lt;code&gt;$.ajax()&lt;/code&gt; are as follows:</source>
          <target state="translated">Перехватчики обратного вызова, предоставляемые &lt;code&gt;$.ajax()&lt;/code&gt; , следующие:</target>
        </trans-unit>
        <trans-unit id="48456f9d8ed08fb80093cafa81da3b3750f4a2ec" translate="yes" xml:space="preserve">
          <source>The callback is fired once the script has been loaded but not necessarily executed.</source>
          <target state="translated">Обратный вызов запускается после загрузки скрипта,но не обязательно выполняется.</target>
        </trans-unit>
        <trans-unit id="0a150dbeefa27a6fdaddf5d4cbf61e79e3e341a3" translate="yes" xml:space="preserve">
          <source>The callback to search for.</source>
          <target state="translated">Обратный вызов на поиск.</target>
        </trans-unit>
        <trans-unit id="6b9e0b41d52d14d06d6f59d74c2f23e7bb7aacd6" translate="yes" xml:space="preserve">
          <source>The child combinator (E &lt;strong&gt;&amp;gt;&lt;/strong&gt; F) can be thought of as a more specific form of the descendant combinator (E F) in that it selects only first-level descendants.</source>
          <target state="translated">Дочерний комбинатор (E &lt;strong&gt;&amp;gt;&lt;/strong&gt; F) можно рассматривать как более конкретную форму комбинатора потомков (EF), поскольку он выбирает только потомков первого уровня.</target>
        </trans-unit>
        <trans-unit id="b0131d897f9ebfd2e8528f7451f2bd70eaf19197" translate="yes" xml:space="preserve">
          <source>The class name to search for.</source>
          <target state="translated">Имя класса для поиска.</target>
        </trans-unit>
        <trans-unit id="1c76c95474ded1c83df62e9659deaf1e78a2557e" translate="yes" xml:space="preserve">
          <source>The code &lt;code&gt;$( &quot;div.demo-container&quot; ).text( &quot;&amp;lt;p&amp;gt;This is a test.&amp;lt;/p&amp;gt;&quot; );&lt;/code&gt; will produce the following DOM output:</source>
          <target state="translated">Код &lt;code&gt;$( &quot;div.demo-container&quot; ).text( &quot;&amp;lt;p&amp;gt;This is a test.&amp;lt;/p&amp;gt;&quot; );&lt;/code&gt; произведет следующий вывод DOM:</target>
        </trans-unit>
        <trans-unit id="ee09ededc986c4fde55112bb27792c5ab11f4d64" translate="yes" xml:space="preserve">
          <source>The code &lt;code&gt;$( &quot;div.demo-container&quot; ).text()&lt;/code&gt; would produce the following result:</source>
          <target state="translated">Код &lt;code&gt;$( &quot;div.demo-container&quot; ).text()&lt;/code&gt; даст следующий результат:</target>
        </trans-unit>
        <trans-unit id="0ff3e41c1bb8be78905878d3080804c616d66cc8" translate="yes" xml:space="preserve">
          <source>The comparison between values is strict. The following will return &lt;code&gt;-1&lt;/code&gt; (not found) because a number is being searched in an array of strings:</source>
          <target state="translated">Сравнение ценностей строгое. Следующее вернет &lt;code&gt;-1&lt;/code&gt; (не найдено), потому что число ищется в массиве строк:</target>
        </trans-unit>
        <trans-unit id="63934f4de86321cfe3280de8cd4a6928e795771b" translate="yes" xml:space="preserve">
          <source>The complementary operation to &lt;code&gt;.get()&lt;/code&gt;, which accepts an index and returns a DOM node, &lt;code&gt;.index()&lt;/code&gt; can take a DOM node and returns an index. Suppose we have a simple unordered list on the page:</source>
          <target state="translated">Дополнительная операция к &lt;code&gt;.get()&lt;/code&gt; , которая принимает индекс и возвращает узел DOM, &lt;code&gt;.index()&lt;/code&gt; может принимать узел DOM и возвращать индекс. Предположим, у нас есть простой неупорядоченный список на странице:</target>
        </trans-unit>
        <trans-unit id="04f4668e4368f2a79f73dba514f8e60e41c8e365" translate="yes" xml:space="preserve">
          <source>The content of &lt;code&gt;&amp;lt;div class=&quot;demo-container&quot;&amp;gt;&lt;/code&gt; can be set like this:</source>
          <target state="translated">Содержимое &lt;code&gt;&amp;lt;div class=&quot;demo-container&quot;&amp;gt;&lt;/code&gt; можно настроить следующим образом:</target>
        </trans-unit>
        <trans-unit id="8d9bb9d21c71526c772e1cdf35a9a991a7064a75" translate="yes" xml:space="preserve">
          <source>The content to insert. May be an HTML string, DOM element, array of DOM elements, or jQuery object.</source>
          <target state="translated">Содержание для вставки.Это может быть HTML-строка,DOM-элемент,массив DOM-элементов или jQuery-объект.</target>
        </trans-unit>
        <trans-unit id="5e1584a1b9999c4d1def5c45e27ab44e4599a0d8" translate="yes" xml:space="preserve">
          <source>The current DOM element within the event bubbling phase.</source>
          <target state="translated">Текущий элемент DOM в фазе пузырькового события.</target>
        </trans-unit>
        <trans-unit id="46824c34fb82db130a2df5609dafd2545fdc3db2" translate="yes" xml:space="preserve">
          <source>The data- attributes are pulled in the first time the data property is accessed and then are no longer accessed or mutated (all data values are then stored internally in jQuery).</source>
          <target state="translated">При первом доступе к свойству данных атрибуты данных вытягиваются,а затем перестают быть доступными или мутированными (все значения данных затем сохраняются внутри jQuery).</target>
        </trans-unit>
        <trans-unit id="8b8b1c908f3b2c347bd0eeb6d735aa8ab48d1652" translate="yes" xml:space="preserve">
          <source>The deferred.state() method returns a string representing the current state of the Deferred object. The Deferred object can be in one of three states:</source>
          <target state="translated">Метод отложенного.state()возвращает строку,представляющую текущее состояние объекта Deferred.Объект Deferred может находиться в одном из трех состояний:</target>
        </trans-unit>
        <trans-unit id="77b4a3dc9d992a9171395774e152136eb0aa3384" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;.css( &quot;height&quot; )&lt;/code&gt; and &lt;code&gt;.height()&lt;/code&gt; is that the latter returns a unit-less pixel value (for example, &lt;code&gt;400&lt;/code&gt;) while the former returns a value with units intact (for example, &lt;code&gt;400px&lt;/code&gt;). The &lt;code&gt;.height()&lt;/code&gt; method is recommended when an element's height needs to be used in a mathematical calculation.</source>
          <target state="translated">Разница между &lt;code&gt;.css( &quot;height&quot; )&lt;/code&gt; и &lt;code&gt;.height()&lt;/code&gt; заключается в том, что последний возвращает значение пикселя без единиц измерения (например, &lt;code&gt;400&lt;/code&gt; ), тогда как первый возвращает значение с неизменными единицами измерения (например, &lt;code&gt;400px&lt;/code&gt; ). Метод &lt;code&gt;.height()&lt;/code&gt; рекомендуется, когда высоту элемента необходимо использовать в математических вычислениях.</target>
        </trans-unit>
        <trans-unit id="b8391b1a8d5a18b73e9581f59ba3273ec27cce80" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;.css( &quot;width&quot; )&lt;/code&gt; and &lt;code&gt;.width()&lt;/code&gt; is that the latter returns a unit-less pixel value (for example, &lt;code&gt;400&lt;/code&gt;) while the former returns a value with units intact (for example, &lt;code&gt;400px&lt;/code&gt;). The &lt;code&gt;.width()&lt;/code&gt; method is recommended when an element's width needs to be used in a mathematical calculation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50a600af0ee02848ff5326868c4753647ab9366" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;.css(width)&lt;/code&gt; and &lt;code&gt;.width()&lt;/code&gt; is that the latter returns a unit-less pixel value (for example, &lt;code&gt;400&lt;/code&gt;) while the former returns a value with units intact (for example, &lt;code&gt;400px&lt;/code&gt;). The &lt;code&gt;.width()&lt;/code&gt; method is recommended when an element's width needs to be used in a mathematical calculation.</source>
          <target state="translated">Разница между &lt;code&gt;.css(width)&lt;/code&gt; и &lt;code&gt;.width()&lt;/code&gt; заключается в том, что последний возвращает значение пикселя без единиц измерения (например, &lt;code&gt;400&lt;/code&gt; ), тогда как первый возвращает значение с неизмененными единицами измерения (например, &lt;code&gt;400px&lt;/code&gt; ). Метод &lt;code&gt;.width()&lt;/code&gt; рекомендуется, когда необходимо использовать ширину элемента в математических вычислениях.</target>
        </trans-unit>
        <trans-unit id="37202ea5ad20c3706e31a8627329e1cc35a19b29" translate="yes" xml:space="preserve">
          <source>The difference between &lt;em&gt;attributes&lt;/em&gt; and &lt;em&gt;properties&lt;/em&gt; can be important in specific situations. &lt;strong&gt;Before jQuery 1.6&lt;/strong&gt;, the &lt;code&gt;.attr()&lt;/code&gt; method sometimes took property values into account when retrieving some attributes, which could cause inconsistent behavior. &lt;strong&gt;As of jQuery 1.6&lt;/strong&gt;, the &lt;code&gt;.prop()&lt;/code&gt; method provides a way to explicitly retrieve property values, while &lt;code&gt;.attr()&lt;/code&gt; retrieves attributes.</source>
          <target state="translated">Разница между &lt;em&gt;атрибутами&lt;/em&gt; и &lt;em&gt;свойствами&lt;/em&gt; может быть важна в определенных ситуациях. &lt;strong&gt;До jQuery 1.6&lt;/strong&gt; метод &lt;code&gt;.attr()&lt;/code&gt; иногда учитывал значения свойств при извлечении некоторых атрибутов, что могло вызвать несогласованное поведение. &lt;strong&gt;Начиная с jQuery 1.6&lt;/strong&gt; , метод &lt;code&gt;.prop()&lt;/code&gt; предоставляет способ явного извлечения значений свойств, а &lt;code&gt;.attr()&lt;/code&gt; извлекает атрибуты.</target>
        </trans-unit>
        <trans-unit id="c8b8341db17aad3ed60ff6d25f09507ac30ab22b" translate="yes" xml:space="preserve">
          <source>The difference between &lt;em&gt;attributes&lt;/em&gt; and &lt;em&gt;properties&lt;/em&gt; can be important in specific situations. &lt;strong&gt;Before jQuery 1.6&lt;/strong&gt;, the &lt;code&gt;&lt;a href=&quot;attr&quot;&gt;.attr()&lt;/a&gt;&lt;/code&gt; method sometimes took property values into account when retrieving some attributes, which could cause inconsistent behavior. &lt;strong&gt;As of jQuery 1.6&lt;/strong&gt;, the &lt;code&gt;.prop()&lt;/code&gt; method provides a way to explicitly retrieve property values, while &lt;code&gt;.attr()&lt;/code&gt; retrieves attributes.</source>
          <target state="translated">Разница между &lt;em&gt;атрибутами&lt;/em&gt; и &lt;em&gt;свойствами&lt;/em&gt; может быть важна в определенных ситуациях. &lt;strong&gt;До jQuery 1.6&lt;/strong&gt; метод &lt;code&gt;&lt;a href=&quot;attr&quot;&gt;.attr()&lt;/a&gt;&lt;/code&gt; иногда учитывал значения свойств при извлечении некоторых атрибутов, что могло вызвать несогласованное поведение. &lt;strong&gt;Начиная с jQuery 1.6&lt;/strong&gt; , метод &lt;code&gt;.prop()&lt;/code&gt; предоставляет способ явного извлечения значений свойств, а &lt;code&gt;.attr()&lt;/code&gt; извлекает атрибуты.</target>
        </trans-unit>
        <trans-unit id="d7d00606c5e46f31f2f98e11c01c5572475bedf2" translate="yes" xml:space="preserve">
          <source>The difference in milliseconds between the time the browser created the event and January 1, 1970.</source>
          <target state="translated">Разница в миллисекундах между временем создания события браузером и 1 января 1970 года.</target>
        </trans-unit>
        <trans-unit id="2ad811ab657cc27a74651a8411a156528a0df130" translate="yes" xml:space="preserve">
          <source>The drawback is that the callback is called in the context of each value and you therefore lose the context of your own object if applicable. More on this below at Functions.</source>
          <target state="translated">Недостатком является то,что обратный вызов вызывается в контексте каждого значения,и,следовательно,вы теряете контекст своего объекта,если это применимо.Подробнее об этом ниже в разделе Функции.</target>
        </trans-unit>
        <trans-unit id="9037c831467c9eaa41d28fe7bf4126374f23fbbf" translate="yes" xml:space="preserve">
          <source>The effect of this on &lt;code&gt;&amp;lt;div id=&quot;foo&quot;&amp;gt;&lt;/code&gt; (when it does not initially have the &quot;entered&quot; class) is to add the &quot;entered&quot; class when the mouse enters the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; and remove the class when the mouse leaves.</source>
          <target state="translated">Эффект от этого на &lt;code&gt;&amp;lt;div id=&quot;foo&quot;&amp;gt;&lt;/code&gt; (когда он изначально не имеет класса &quot;ввод&quot;) заключается в добавлении класса &quot;введенный&quot;, когда мышь входит в &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; , и удалении класса, когда указатель мыши покидает его. ,</target>
        </trans-unit>
        <trans-unit id="abaa5fa0e138e2677c0408917eeeb5af975fe5df" translate="yes" xml:space="preserve">
          <source>The element where the currently-called jQuery event handler was attached.</source>
          <target state="translated">Элемент,к которому был прикреплен так называемый обработчик события jQuery.</target>
        </trans-unit>
        <trans-unit id="f33d88a15dc715eabf21b992b42c443d395d3276" translate="yes" xml:space="preserve">
          <source>The end parameter allows us to limit the selected range even further. For example:</source>
          <target state="translated">Конечный параметр позволяет еще больше ограничить выбранный диапазон.Например:</target>
        </trans-unit>
        <trans-unit id="1c816a005a96322be853cb13839915a982aa35e3" translate="yes" xml:space="preserve">
          <source>The event handler &lt;em&gt;must&lt;/em&gt; be attached before the browser fires the &lt;code&gt;error&lt;/code&gt; event, which is why the example sets the &lt;code&gt;src&lt;/code&gt; attribute after attaching the handler. Also, the &lt;code&gt;error&lt;/code&gt; event may not be correctly fired when the page is served locally; &lt;code&gt;error&lt;/code&gt; relies on HTTP status codes and will generally not be triggered if the URL uses the &lt;code&gt;file:&lt;/code&gt; protocol.</source>
          <target state="translated">Обработчик событий &lt;em&gt;должен&lt;/em&gt; быть присоединен до того, как браузер запустит событие &lt;code&gt;error&lt;/code&gt; , поэтому в примере устанавливается атрибут &lt;code&gt;src&lt;/code&gt; после присоединения обработчика. Кроме того, событие &lt;code&gt;error&lt;/code&gt; может не запускаться правильно, когда страница обслуживается локально; &lt;code&gt;error&lt;/code&gt; зависит от кодов состояния HTTP и обычно не запускается, если URL-адрес использует протокол &lt;code&gt;file:&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6592b71414facc03b08e92d3c61ae4a7c6e48089" translate="yes" xml:space="preserve">
          <source>The event handler and its environment</source>
          <target state="translated">Организатор мероприятия и его окружение</target>
        </trans-unit>
        <trans-unit id="c3eaa89182d66deb143ff4b5e21401f0e6abded1" translate="yes" xml:space="preserve">
          <source>The event handler can be bound to any &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">Обработчик событий можно привязать к любому &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c3c8521075173da7ee615c1ec3531d4b5d09418a" translate="yes" xml:space="preserve">
          <source>The event handler can be bound to any element:</source>
          <target state="translated">Обработчик событий может быть привязан к любому элементу:</target>
        </trans-unit>
        <trans-unit id="5c77560ec7292139b9e6f566baee76ddf960569a" translate="yes" xml:space="preserve">
          <source>The event handler can be bound to the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; as follows:</source>
          <target state="translated">Обработчик событий можно привязать к &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="7b2e5765f810648c6904605842ced0e04a09f0e3" translate="yes" xml:space="preserve">
          <source>The event handler can be bound to the first input field:</source>
          <target state="translated">Обработчик события может быть привязан к первому полю ввода:</target>
        </trans-unit>
        <trans-unit id="541d65895736107ef3f16d5231f478c377077d12" translate="yes" xml:space="preserve">
          <source>The event handler can be bound to the form:</source>
          <target state="translated">Обработчик события может быть привязан к форме:</target>
        </trans-unit>
        <trans-unit id="b1b2f9b415c772375ce1094bf5af80a249e679b0" translate="yes" xml:space="preserve">
          <source>The event handler can be bound to the image:</source>
          <target state="translated">Обработчик события может быть привязан к изображению:</target>
        </trans-unit>
        <trans-unit id="59db2f3ed37d22060fab94786bd9bfe98aa672b8" translate="yes" xml:space="preserve">
          <source>The event handler can be bound to the input field:</source>
          <target state="translated">Обработчик событий может быть привязан к полю ввода:</target>
        </trans-unit>
        <trans-unit id="7c302c60ef5ad634affc166ae8ba6a179c97813a" translate="yes" xml:space="preserve">
          <source>The event handler can be bound to the target:</source>
          <target state="translated">Обработчик событий может быть привязан к цели:</target>
        </trans-unit>
        <trans-unit id="7089e39a05558f599138c92d69408f4e931882a9" translate="yes" xml:space="preserve">
          <source>The event handler can be bound to the text input and the select box:</source>
          <target state="translated">Обработчик событий может быть привязан к вводу текста и к окну выбора:</target>
        </trans-unit>
        <trans-unit id="53ceb3bdf027007c75defc080e05b2850e2e15f7" translate="yes" xml:space="preserve">
          <source>The event handler can be bound to the text input:</source>
          <target state="translated">Обработчик событий может быть привязан к вводу текста:</target>
        </trans-unit>
        <trans-unit id="a968461088fc48b890360da98e8a2917f0c0ec22" translate="yes" xml:space="preserve">
          <source>The event object is always passed as the first parameter to an event handler. An array of arguments can also be passed to the .trigger() call, and these parameters will be passed along to the handler as well following the event object. As of jQuery 1.6.2, single string or numeric argument can be passed without being wrapped in an array.</source>
          <target state="translated">Объект события всегда передается в качестве первого параметра обработчику события.Массив аргументов также может быть передан при вызове .trigger(),и эти параметры будут переданы обработчику так же,как и объект события.Начиная с версии jQuery 1.6.2,единственный строковый или числовой аргумент может передаваться без обертывания в массив.</target>
        </trans-unit>
        <trans-unit id="d04cbf7c5545cd035665c33569633ce74b31c81a" translate="yes" xml:space="preserve">
          <source>The event object is often unnecessary and the parameter omitted, as sufficient context is usually available when the handler is bound to know exactly what needs to be done when the handler is triggered. However, at times it becomes necessary to gather more information about the user's environment at the time the event was initiated. &lt;a href=&quot;category/events/event-object&quot;&gt;View the full Event Object&lt;/a&gt;.</source>
          <target state="translated">Объект события часто не нужен, а параметр опускается, поскольку обычно доступен достаточный контекст, когда обработчик обязан точно знать, что нужно сделать, когда обработчик запускается. Однако иногда возникает необходимость собрать больше информации о среде пользователя на момент инициирования события. &lt;a href=&quot;category/events/event-object&quot;&gt;Просмотреть объект события полностью&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7a5610a350c3ccf39411d452e988cd760b00e727" translate="yes" xml:space="preserve">
          <source>The exact handling of the &lt;code&gt;unload&lt;/code&gt; event has varied from version to version of browsers. For example, some versions of Firefox trigger the event when a link is followed, but not when the window is closed. In practical usage, behavior should be tested on all supported browsers and contrasted with the similar &lt;code&gt;beforeunload&lt;/code&gt; event.</source>
          <target state="translated">Точная обработка события &lt;code&gt;unload&lt;/code&gt; варьировалась от версии к версии браузеров. Например, некоторые версии Firefox запускают событие при переходе по ссылке, но не при закрытии окна. На практике поведение следует тестировать во всех поддерживаемых браузерах и сравнивать с аналогичным событием &lt;code&gt;beforeunload&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a47720c0de238c3c29d705238cb0f84e408d6262" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;$( &quot;div:has(p)&quot; )&lt;/code&gt; matches a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; if a &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; exists anywhere among its descendants, not just as a direct child.</source>
          <target state="translated">Выражение &lt;code&gt;$( &quot;div:has(p)&quot; )&lt;/code&gt; соответствует &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; , если &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; существует где-то среди его потомков, а не только как прямой потомок.</target>
        </trans-unit>
        <trans-unit id="fdec95bd57664e6187875684bcae2f43b3499034" translate="yes" xml:space="preserve">
          <source>The filter function will be passed two arguments: the current array item and its index. The filter function must return 'true' to include the item in the result array.</source>
          <target state="translated">Фильтрующей функции будут переданы два аргумента:текущий элемент массива и его индекс.Фильтрующая функция должна вернуть true для включения элемента в результирующий массив.</target>
        </trans-unit>
        <trans-unit id="1a8c78269da9a7a144139698b6264cc95a56365a" translate="yes" xml:space="preserve">
          <source>The first array-like object to merge, the elements of second added.</source>
          <target state="translated">Добавлены первый массивный объект для слияния,элементы второго.</target>
        </trans-unit>
        <trans-unit id="bca6f939db67fb58379c0c2238b53604a16dbd93" translate="yes" xml:space="preserve">
          <source>The first button shows how an unqueued animation works. It expands the div out to 90% width &lt;strong&gt;while&lt;/strong&gt; the font-size is increasing. Once the font-size change is complete, the border animation will begin. The second button starts a traditional chained animation, where each animation will start once the previous animation on the element has completed.</source>
          <target state="translated">Первая кнопка показывает, как работает анимация без очереди. Он расширяет div до 90% ширины, в &lt;strong&gt;то время&lt;/strong&gt; как размер шрифта увеличивается. Как только изменение размера шрифта будет завершено, начнется анимация границы. Вторая кнопка запускает традиционную цепную анимацию, при которой каждая анимация запускается после завершения предыдущей анимации элемента.</target>
        </trans-unit>
        <trans-unit id="cfe3394cf354aa01c5c119c6f9df4de1d6557809" translate="yes" xml:space="preserve">
          <source>The first letter in Ajax stands for &quot;asynchronous,&quot; meaning that the operation occurs in parallel and the order of completion is not guaranteed. The &lt;code&gt;async&lt;/code&gt; option to &lt;code&gt;$.ajax()&lt;/code&gt; defaults to &lt;code&gt;true&lt;/code&gt;, indicating that code execution can continue after the request is made. Setting this option to &lt;code&gt;false&lt;/code&gt; (and thus making the call no longer asynchronous) is strongly discouraged, as it can cause the browser to become unresponsive.</source>
          <target state="translated">Первая буква в Ajax означает &amp;laquo;асинхронный&amp;raquo;, что означает, что операция выполняется параллельно, и порядок завершения не гарантируется. Параметр &lt;code&gt;async&lt;/code&gt; для &lt;code&gt;$.ajax()&lt;/code&gt; умолчанию имеет значение &lt;code&gt;true&lt;/code&gt; , что указывает на то, что выполнение кода может продолжаться после выполнения запроса. Настоятельно не рекомендуется устанавливать для этого параметра значение &lt;code&gt;false&lt;/code&gt; (и, таким образом, сделать вызов больше не асинхронным), поскольку это может привести к тому, что браузер перестанет отвечать.</target>
        </trans-unit>
        <trans-unit id="3dd4ad641c60ce993a319482b87b6fff7be020a1" translate="yes" xml:space="preserve">
          <source>The first signature for the &lt;code&gt;.find()&lt;/code&gt;method accepts a selector expression of the same type that we can pass to the &lt;code&gt;$()&lt;/code&gt; function. The elements will be filtered by testing whether they match this selector. The expressions allowed include selectors like &lt;code&gt;&amp;gt; p&lt;/code&gt; which will find all the paragraphs that are children of the elements in the jQuery object.</source>
          <target state="translated">Первая сигнатура для &lt;code&gt;.find()&lt;/code&gt; принимает выражение селектора того же типа, которое мы можем передать функции &lt;code&gt;$()&lt;/code&gt; . Элементы будут отфильтрованы путем проверки, соответствуют ли они этому селектору. Разрешенные выражения включают в себя селекторы, такие как &lt;code&gt;&amp;gt; p&lt;/code&gt; которые найдут все абзацы, которые являются дочерними элементами в объекте jQuery.</target>
        </trans-unit>
        <trans-unit id="dab134d4e8bf507a0b852b877e39959ba46fce14" translate="yes" xml:space="preserve">
          <source>The first signature for the &lt;code&gt;.find()&lt;/code&gt;method accepts a selector expression of the same type that we can pass to the &lt;code&gt;$()&lt;/code&gt; function. The elements will be filtered by testing whether they match this selector; all parts of the selector must lie inside of an element on which .find() is called. The expressions allowed include selectors like &lt;code&gt;&amp;gt; p&lt;/code&gt; which will find all the paragraphs that are children of the elements in the jQuery object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd5cdf1aaec5d99e649d109e9218e1768db80d9" translate="yes" xml:space="preserve">
          <source>The first time we apply &lt;code&gt;$( &quot;div.tumble&quot; ).toggleClass( &quot;bounce&quot; )&lt;/code&gt;, we get the following:</source>
          <target state="translated">При первом применении &lt;code&gt;$( &quot;div.tumble&quot; ).toggleClass( &quot;bounce&quot; )&lt;/code&gt; мы получаем следующее:</target>
        </trans-unit>
        <trans-unit id="021404d539fa30f7bd9a809d18e784457069d717" translate="yes" xml:space="preserve">
          <source>The following are two sample methods named &lt;code&gt;fn1&lt;/code&gt; and &lt;code&gt;fn2&lt;/code&gt;:</source>
          <target state="translated">Ниже приведены два примера методов с именами &lt;code&gt;fn1&lt;/code&gt; и &lt;code&gt;fn2&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f64f18608a238a1192c88dfa8a8f137c9d294636" translate="yes" xml:space="preserve">
          <source>The following comparisons are all true:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc071c8397609381bbd9504310c1ba41353890a3" translate="yes" xml:space="preserve">
          <source>The following example shows how a minimal image transport could be implemented:</source>
          <target state="translated">Следующий пример показывает,как можно реализовать минимальный транспорт изображения:</target>
        </trans-unit>
        <trans-unit id="abb3689a802e901601920b2b12ca783b0318c8c6" translate="yes" xml:space="preserve">
          <source>The following properties are also copied to the event object, though some of their values may be undefined depending on the event:</source>
          <target state="translated">Следующие свойства также копируются в объект события,хотя некоторые из их значений могут быть неопределенными в зависимости от события:</target>
        </trans-unit>
        <trans-unit id="dec858fec45670eb0dcd1906c0e4f2fc17caf072" translate="yes" xml:space="preserve">
          <source>The following selectors are based on the Cascading Style Sheet 1 specification, as outlined by the W3C. For more information about the specifications, visit &lt;a href=&quot;https://www.w3.org/Style/CSS/#specs&quot;&gt;https://www.w3.org/Style/CSS/#specs&lt;/a&gt;.</source>
          <target state="translated">Следующие селекторы основаны на спецификации Cascading Style Sheet 1, как указано W3C. Для получения дополнительной информации о спецификациях посетите &lt;a href=&quot;https://www.w3.org/Style/CSS/#specs&quot;&gt;https://www.w3.org/Style/CSS/#specs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="efc8ca2023c763ab424e309905ae785bfc9fcdc1" translate="yes" xml:space="preserve">
          <source>The following will &lt;em&gt;not&lt;/em&gt; save the added elements, because the &lt;code&gt;.add()&lt;/code&gt; method creates a new set and leaves the original set in pdiv unchanged:</source>
          <target state="translated">Следующее &lt;em&gt;не&lt;/em&gt; сохранит добавленные элементы, потому что метод &lt;code&gt;.add()&lt;/code&gt; создает новый набор и оставляет исходный набор в pdiv без изменений:</target>
        </trans-unit>
        <trans-unit id="6f51f371b8da8dc1313314e38b6c779c426e42e6" translate="yes" xml:space="preserve">
          <source>The function can return:</source>
          <target state="translated">Функция может вернуться:</target>
        </trans-unit>
        <trans-unit id="2e37153bc1a8e1ad3a9f12be343e9728f9a20217" translate="yes" xml:space="preserve">
          <source>The function that is no longer to be executed.</source>
          <target state="translated">Функция,которая больше не будет выполняться.</target>
        </trans-unit>
        <trans-unit id="c0e0e646f0de4166549307945db05657dc0f40f2" translate="yes" xml:space="preserve">
          <source>The function that is to be no longer executed.</source>
          <target state="translated">Функция,которая больше не будет выполняться.</target>
        </trans-unit>
        <trans-unit id="7180b46bfb05a111cd04bc1cb12e5540f1eb2375" translate="yes" xml:space="preserve">
          <source>The function that will be executed on every value.</source>
          <target state="translated">Функция,которая будет выполняться на каждом значении.</target>
        </trans-unit>
        <trans-unit id="d3de917bcd36c99d1259f320a3f7d5ffbc730acf" translate="yes" xml:space="preserve">
          <source>The function to be invoked.</source>
          <target state="translated">Функция,которая будет вызвана.</target>
        </trans-unit>
        <trans-unit id="7f804edca989e0ac4a94b9c06aefacd24370d29f" translate="yes" xml:space="preserve">
          <source>The function to execute when the DOM is ready.</source>
          <target state="translated">Функция,которую необходимо выполнить,когда флэш-накопитель будет готов.</target>
        </trans-unit>
        <trans-unit id="528266b758f50455c24b724fbb39bccc1e8838e7" translate="yes" xml:space="preserve">
          <source>The function to process each item against. The first argument to the function is the array item, the second argument is the index in array The function can return any value. A returned array will be flattened into the resulting array. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the global (window) object.</source>
          <target state="translated">Функция для обработки каждого элемента. Первый аргумент функции - это элемент массива, второй аргумент - индекс в массиве. Функция может возвращать любое значение. Возвращенный массив будет сведен в результирующий массив. Внутри функции &lt;code&gt;this&lt;/code&gt; относится к глобальному (оконному) объекту.</target>
        </trans-unit>
        <trans-unit id="2497be69d4d28d0015898947249c2dfe61e4276d" translate="yes" xml:space="preserve">
          <source>The function to process each item against. The first argument to the function is the item, and the second argument is the index. The function should return a Boolean value. &lt;code&gt;this&lt;/code&gt; will be the global window object.</source>
          <target state="translated">Функция для обработки каждого элемента. Первый аргумент функции - это элемент, а второй аргумент - это индекс. Функция должна возвращать логическое значение. &lt;code&gt;this&lt;/code&gt; будет глобальный объект окна.</target>
        </trans-unit>
        <trans-unit id="ed78ed460dba43418960b9867533924d5b82946f" translate="yes" xml:space="preserve">
          <source>The function to process each item against. The first argument to the function is the value; the second argument is the key of the object property. The function can return any value to add to the array. A returned array will be flattened into the resulting array. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the global (window) object.</source>
          <target state="translated">Функция для обработки каждого элемента. Первый аргумент функции - это значение; второй аргумент - ключ свойства объекта. Функция может возвращать любое значение для добавления в массив. Возвращенный массив будет сведен в результирующий массив. Внутри функции &lt;code&gt;this&lt;/code&gt; относится к глобальному (оконному) объекту.</target>
        </trans-unit>
        <trans-unit id="0c7f01ed75b8f184641d80cb2808bde2c28779d5" translate="yes" xml:space="preserve">
          <source>The function whose context will be changed.</source>
          <target state="translated">Функция,контекст которой будет изменен.</target>
        </trans-unit>
        <trans-unit id="44671f971a36a5853ba3aa8c82cb9c2627ced934" translate="yes" xml:space="preserve">
          <source>The general idea behind pub/sub (Publish/Subscribe, or, the Observer pattern) is the promotion of loose coupling in applications. Rather than single objects calling on the methods of other objects, an object instead subscribes to a specific task or activity of another object and is notified when it occurs. Observers are also called Subscribers, and we refer to the object being observed as the Publisher (or the subject). Publishers notify subscribers when events occur.</source>
          <target state="translated">Общая идея паба/подписки (Публикация/Подписка,или образец Наблюдателя)заключается в содействии свободному соединению в приложениях.Вместо отдельных объектов,вызывающих методы других объектов,объект подписывается на конкретную задачу или деятельность другого объекта и уведомляется о ее возникновении.Наблюдателей также называют Подписчиками,и мы называем наблюдаемый объект Издателем (или субъектом).Издатели уведомляют подписчиков о происходящих событиях.</target>
        </trans-unit>
        <trans-unit id="96908f5f2e8c272b018f7fc547920ba259a9f935" translate="yes" xml:space="preserve">
          <source>The handler in this case must take a parameter, so that we can capture the event object and use it to unbind the handler after the third click. The event object contains the context necessary for &lt;code&gt;.unbind()&lt;/code&gt; to know which handler to remove. This example is also an illustration of a closure. Since the handler refers to the &lt;code&gt;timesClicked&lt;/code&gt; variable, which is defined outside the function, incrementing the variable has an effect even between invocations of the handler.</source>
          <target state="translated">Обработчик в этом случае должен принимать параметр, чтобы мы могли захватить объект события и использовать его для отмены привязки обработчика после третьего щелчка. Объект события содержит контекст, необходимый для того, чтобы &lt;code&gt;.unbind()&lt;/code&gt; знал, какой обработчик удалить. Этот пример также является иллюстрацией закрытия. Поскольку обработчик ссылается на переменную &lt;code&gt;timesClicked&lt;/code&gt; , которая определена вне функции, увеличение переменной имеет эффект даже между вызовами обработчика.</target>
        </trans-unit>
        <trans-unit id="9a017672927edcddb38cf218fbb12b8313df4cc6" translate="yes" xml:space="preserve">
          <source>The handler list for an element is set when the event is first delivered. Adding or removing event handlers on the current element won't take effect until the next time the event is handled. To prevent any further event handlers from executing on an element within an event handler, call &lt;code&gt;event.stopImmediatePropagation()&lt;/code&gt;. This behavior goes against the &lt;a href=&quot;https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget-removeEventListener&quot;&gt;W3C events specification&lt;/a&gt;. To better understand this case, consider the following code:</source>
          <target state="translated">Список обработчиков для элемента устанавливается при первой доставке события. Добавление или удаление обработчиков событий для текущего элемента не вступит в силу до тех пор, пока событие не будет обработано в следующий раз. Чтобы предотвратить выполнение каких-либо дальнейших обработчиков событий для элемента в обработчике событий, вызовите &lt;code&gt;event.stopImmediatePropagation()&lt;/code&gt; . Такое поведение противоречит &lt;a href=&quot;https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget-removeEventListener&quot;&gt;спецификации событий W3C&lt;/a&gt; . Чтобы лучше понять этот случай, рассмотрим следующий код:</target>
        </trans-unit>
        <trans-unit id="068354fa5d5791c1d48dccb2e852071a0eec58aa" translate="yes" xml:space="preserve">
          <source>The horizontal scroll position is the same as the number of pixels that are hidden from view above the scrollable area. Setting the &lt;code&gt;scrollLeft&lt;/code&gt; positions the horizontal scroll of each matched element.</source>
          <target state="translated">Положение горизонтальной прокрутки совпадает с количеством пикселей, которые скрыты от просмотра над прокручиваемой областью. Установка &lt;code&gt;scrollLeft&lt;/code&gt; позиционирует горизонтальную прокрутку каждого совпадающего элемента.</target>
        </trans-unit>
        <trans-unit id="5ef722341357678071415deb8d758a8d628e8e77" translate="yes" xml:space="preserve">
          <source>The horizontal scroll position is the same as the number of pixels that are hidden from view to the left of the scrollable area. If the scroll bar is at the very left, or if the element is not scrollable, this number will be &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Положение горизонтальной прокрутки совпадает с количеством пикселей, которые скрыты от просмотра слева от прокручиваемой области. Если полоса прокрутки находится в самом левом углу или если элемент не прокручивается, это число будет &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f18c308cc9003dd517b04c883ca4c11f2901568f" translate="yes" xml:space="preserve">
          <source>The index of the array at which to begin the search. The default is 0, which will search the whole array.</source>
          <target state="translated">Индекс массива,в котором следует начать поиск.По умолчанию 0,который будет искать по всему массиву.</target>
        </trans-unit>
        <trans-unit id="84fbf232995bee433ace36fdc322edb615edc6af" translate="yes" xml:space="preserve">
          <source>The index-related selector expressions (including this &quot;greater than&quot; selector) filter the set of elements that have matched the expressions that precede them. They narrow the set down based on the order of the elements within this matched set. For example, if elements are first selected with a class selector (&lt;code&gt;.myclass&lt;/code&gt;) and four elements are returned, these elements are given indices 0 through 3 for the purposes of these selectors.</source>
          <target state="translated">Связанные с индексом выражения селектора (включая этот селектор &amp;laquo;больше&amp;raquo;) фильтруют набор элементов, которые соответствуют выражениям, которые им предшествуют. Они сужают набор в зависимости от порядка элементов в этом согласованном наборе. Например, если элементы сначала выбираются с помощью селектора класса ( &lt;code&gt;.myclass&lt;/code&gt; ) и возвращаются четыре элемента, этим элементам присваиваются индексы от 0 до 3 для целей этих селекторов.</target>
        </trans-unit>
        <trans-unit id="9ce2345a99b016ade0050c9c9e058771ff484eb6" translate="yes" xml:space="preserve">
          <source>The index-related selectors (&lt;code&gt;:eq()&lt;/code&gt;, &lt;code&gt;:lt()&lt;/code&gt;, &lt;code&gt;:gt()&lt;/code&gt;, &lt;code&gt;:even&lt;/code&gt;, &lt;code&gt;:odd&lt;/code&gt;) filter the set of elements that have matched the expressions that precede them. They narrow the set down based on the order of the elements within this matched set. For example, if elements are first selected with a class selector (&lt;code&gt;.myclass&lt;/code&gt;) and four elements are returned, these elements are given indices &lt;code&gt;0&lt;/code&gt; through &lt;code&gt;3&lt;/code&gt; for the purposes of these selectors.</source>
          <target state="translated">Индекс связанных селекторы ( &lt;code&gt;:eq()&lt;/code&gt; , &lt;code&gt;:lt()&lt;/code&gt; , &lt;code&gt;:gt()&lt;/code&gt; , &lt;code&gt;:even&lt;/code&gt; , &lt;code&gt;:odd&lt;/code&gt; ) фильтр множество элементов , которые соответствовали выражению , которые предшествуют им. Они сужают набор в зависимости от порядка элементов в этом согласованном наборе. Например, если элементы сначала выбираются с помощью селектора класса ( &lt;code&gt;.myclass&lt;/code&gt; ) и возвращаются четыре элемента, этим элементам присваиваются индексы от &lt;code&gt;0&lt;/code&gt; до &lt;code&gt;3&lt;/code&gt; для целей этих селекторов.</target>
        </trans-unit>
        <trans-unit id="ba134bef640122a89e8d25ae63500999badb7aed" translate="yes" xml:space="preserve">
          <source>The index-related selectors (including this &quot;less than&quot; selector) filter the set of elements that have matched the expressions that precede them. They narrow the set down based on the order of the elements within this matched set. For example, if elements are first selected with a class selector (&lt;code&gt;.myclass&lt;/code&gt;) and four elements are returned, these elements are given indices 0 through 3 for the purposes of these selectors.</source>
          <target state="translated">Селекторы, связанные с индексом (включая этот селектор &amp;laquo;меньше&amp;raquo;), фильтруют набор элементов, которые соответствуют выражениям, которые им предшествуют. Они сужают набор в зависимости от порядка элементов в этом согласованном наборе. Например, если элементы сначала выбираются с помощью селектора класса ( &lt;code&gt;.myclass&lt;/code&gt; ) и возвращаются четыре элемента, этим элементам присваиваются индексы от 0 до 3 для целей этих селекторов.</target>
        </trans-unit>
        <trans-unit id="4e288c80fa39dc156186e654513b5fc57fb3fddd" translate="yes" xml:space="preserve">
          <source>The jQuery &lt;code&gt;.slice()&lt;/code&gt; method is patterned after the JavaScript .slice() method for arrays. One of the features that it mimics is the ability for negative numbers to be passed as either the &lt;code&gt;start&lt;/code&gt; or &lt;code&gt;end&lt;/code&gt; parameter. If a negative number is provided, this indicates a position starting from the end of the set, rather than the beginning. For example:</source>
          <target state="translated">Метод jQuery &lt;code&gt;.slice()&lt;/code&gt; создан по образцу метода JavaScript .slice () для массивов. Одна из функций, которую он имитирует, - это возможность передачи отрицательных чисел в качестве &lt;code&gt;start&lt;/code&gt; или &lt;code&gt;end&lt;/code&gt; параметра. Если указано отрицательное число, это указывает на позицию, начинающуюся с конца набора, а не с начала. Например:</target>
        </trans-unit>
        <trans-unit id="514aa5055f00f797e80751f12544ed3ca726fe25" translate="yes" xml:space="preserve">
          <source>The jQuery Ajax implementation comes with a set of standard dataTypes, such as text, json, xml, and html.</source>
          <target state="translated">Реализация jQuery Ajax поставляется с набором стандартных типов данных,таких как текст,json,xml и html.</target>
        </trans-unit>
        <trans-unit id="6808edbc627612119a19ef098b25e718fe0d28c4" translate="yes" xml:space="preserve">
          <source>The jQuery XMLHttpRequest (jqXHR) object returned by &lt;code&gt;$.ajax()&lt;/code&gt;&lt;strong&gt;as of jQuery 1.5&lt;/strong&gt; is a superset of the browser's native XMLHttpRequest object. For example, it contains &lt;code&gt;responseText&lt;/code&gt; and &lt;code&gt;responseXML&lt;/code&gt; properties, as well as a &lt;code&gt;getResponseHeader()&lt;/code&gt; method. When the transport mechanism is something other than XMLHttpRequest (for example, a script tag for a JSONP request) the &lt;code&gt;jqXHR&lt;/code&gt; object simulates native XHR functionality where possible.</source>
          <target state="translated">Объект jQuery XMLHttpRequest (jqXHR), возвращаемый &lt;code&gt;$.ajax()&lt;/code&gt; &lt;strong&gt;с jQuery 1.5,&lt;/strong&gt; является расширенным набором собственного объекта XMLHttpRequest браузера. Например, он содержит свойства &lt;code&gt;responseText&lt;/code&gt; и &lt;code&gt;responseXML&lt;/code&gt; , а также метод &lt;code&gt;getResponseHeader()&lt;/code&gt; . Когда транспортный механизм представляет собой нечто иное, чем XMLHttpRequest (например, тег сценария для запроса JSONP), объект &lt;code&gt;jqXHR&lt;/code&gt; по возможности имитирует собственные функции XHR .</target>
        </trans-unit>
        <trans-unit id="6329bb11d7dcdb2e64db5216d41be8f97344e159" translate="yes" xml:space="preserve">
          <source>The jQuery library has a full suite of Ajax capabilities. The functions and methods therein allow us to load data from the server without a browser page refresh.</source>
          <target state="translated">Библиотека jQuery имеет полный набор возможностей Ajax.Содержащиеся в ней функции и методы позволяют загружать данные с сервера без обновления страницы браузера.</target>
        </trans-unit>
        <trans-unit id="e2bf20b00460b915cf997aa1998852c28ee31339" translate="yes" xml:space="preserve">
          <source>The jQuery library provides several techniques for adding animation to a web page. These include simple, standard animations that are frequently used, and the ability to craft sophisticated custom effects.</source>
          <target state="translated">Библиотека jQuery предоставляет несколько техник добавления анимации на веб-страницу.Они включают в себя простую стандартную анимацию,которая часто используется,и возможность создания сложных пользовательских эффектов.</target>
        </trans-unit>
        <trans-unit id="b10ed5864ed562309d6eb5544f97085abf741a3c" translate="yes" xml:space="preserve">
          <source>The jQuery object itself behaves much like an array; it has a &lt;code&gt;length&lt;/code&gt; property and the elements in the object can be accessed by their numeric indices &lt;code&gt;[0]&lt;/code&gt; to &lt;code&gt;[length-1]&lt;/code&gt;. Note that a jQuery object is not actually a Javascript Array object, so it does not have all the methods of a true Array object such as &lt;code&gt;join()&lt;/code&gt;.</source>
          <target state="translated">Сам объект jQuery ведет себя как массив; он имеет свойство &lt;code&gt;length&lt;/code&gt; и к элементам в объекте можно обращаться по их числовым индексам от &lt;code&gt;[0]&lt;/code&gt; до &lt;code&gt;[length-1]&lt;/code&gt; . Обратите внимание, что объект jQuery на самом деле не является объектом массива Javascript, поэтому он не имеет всех методов настоящего объекта массива, таких как &lt;code&gt;join()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9adc43edd25fe471ec1647fe8c39dc7a5af1b244" translate="yes" xml:space="preserve">
          <source>The jqXHR Object</source>
          <target state="translated">Объект jqXHR</target>
        </trans-unit>
        <trans-unit id="31de3d3efc0743154a00d75c22c5127d0f3e1c79" translate="yes" xml:space="preserve">
          <source>The jqXHR objects returned by &lt;code&gt;$.ajax()&lt;/code&gt; as of jQuery 1.5 implement the Promise interface, giving them all the properties, methods, and behavior of a Promise (see &lt;a href=&quot;category/deferred-object&quot;&gt;Deferred object&lt;/a&gt; for more information). These methods take one or more function arguments that are called when the &lt;code&gt;$.ajax()&lt;/code&gt; request terminates. This allows you to assign multiple callbacks on a single request, and even to assign callbacks after the request may have completed. (If the request is already complete, the callback is fired immediately.) Available Promise methods of the jqXHR object include:</source>
          <target state="translated">Объекты jqXHR, возвращаемые &lt;code&gt;$.ajax()&lt;/code&gt; с jQuery 1.5, реализуют интерфейс Promise, предоставляя им все свойства, методы и поведение Promise (см. &lt;a href=&quot;category/deferred-object&quot;&gt;Отложенный объект&lt;/a&gt; для получения дополнительной информации). Эти методы принимают один или несколько аргументов функции, которые вызываются при завершении &lt;code&gt;$.ajax()&lt;/code&gt; . Это позволяет вам назначать несколько обратных вызовов для одного запроса и даже назначать обратные вызовы после того, как запрос может быть выполнен. (Если запрос уже выполнен, обратный вызов запускается немедленно.) Доступные методы Promise объекта jqXHR включают:</target>
        </trans-unit>
        <trans-unit id="e9a9d8acdf4a10af6785836e5bd16312f63736d6" translate="yes" xml:space="preserve">
          <source>The keys of the &lt;code&gt;jQuery.cssNumber&lt;/code&gt; object are camel-cased and the values are all set to &lt;code&gt;true&lt;/code&gt;. If you want to prevent the &lt;a href=&quot;css&quot;&gt;&lt;code&gt;.css()&lt;/code&gt;&lt;/a&gt; method from automatically adding the &lt;code&gt;px&lt;/code&gt; unit for a specific CSS property, you can add an extra property to the &lt;code&gt;jQuery.cssNumber&lt;/code&gt; object.</source>
          <target state="translated">Ключи объекта &lt;code&gt;jQuery.cssNumber&lt;/code&gt; имеют верблюжий корпус, и все значения имеют значение &lt;code&gt;true&lt;/code&gt; . Если вы хотите, чтобы метод &lt;a href=&quot;css&quot;&gt; &lt;code&gt;.css()&lt;/code&gt; &lt;/a&gt; добавлял автоматически блок &lt;code&gt;px&lt;/code&gt; для определенного свойства CSS, вы можете добавить дополнительное свойство к объекту &lt;code&gt;jQuery.cssNumber&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c8a74ca684f546365d11151b876bb5ef5d248e1" translate="yes" xml:space="preserve">
          <source>The last &lt;code&gt;end()&lt;/code&gt; is unnecessary, as we are discarding the jQuery object immediately thereafter. However, when the code is written in this form, the &lt;code&gt;end()&lt;/code&gt; provides visual symmetry and a sense of completion &amp;mdash;making the program, at least to the eyes of some developers, more readable, at the cost of a slight hit to performance as it is an additional function call.</source>
          <target state="translated">Последний &lt;code&gt;end()&lt;/code&gt; не нужен, так как сразу после этого мы отбрасываем объект jQuery. Однако, когда код написан в такой форме, &lt;code&gt;end()&lt;/code&gt; обеспечивает визуальную симметрию и ощущение завершенности, делая программу, по крайней мере, в глазах некоторых разработчиков, более читаемой за счет небольшого снижения производительности, поскольку это дополнительный вызов функции.</target>
        </trans-unit>
        <trans-unit id="7efe7e2c92ffe13a861e60a5a71908950a6e6f96" translate="yes" xml:space="preserve">
          <source>The last value returned by an event handler that was triggered by this event, unless the value was undefined.</source>
          <target state="translated">Последнее значение,возвращенное обработчиком события,которое было вызвано этим событием,если только значение не было неопределенным.</target>
        </trans-unit>
        <trans-unit id="57b0302cdc98e914c921d10ae80c2282a00fe827" translate="yes" xml:space="preserve">
          <source>The length property can also be used to add elements to the end of an array. That is equivalent to using the push-method:</source>
          <target state="translated">Свойство длины также может использоваться для добавления элементов в конец массива.Это эквивалентно использованию метода push:</target>
        </trans-unit>
        <trans-unit id="076292172fb49811fbaacb886eb7c1bb1c8ecc8a" translate="yes" xml:space="preserve">
          <source>The majority of browser events &lt;em&gt;bubble&lt;/em&gt;, or &lt;em&gt;propagate&lt;/em&gt;, from the deepest, innermost element (the &lt;strong&gt;event target&lt;/strong&gt;) in the document where they occur all the way up to the body and the &lt;code&gt;document&lt;/code&gt; element. In Internet Explorer 8 and lower, a few events such as &lt;code&gt;change&lt;/code&gt; and &lt;code&gt;submit&lt;/code&gt; do not natively bubble but jQuery patches these to bubble and create consistent cross-browser behavior.</source>
          <target state="translated">Большинство событий браузера &lt;em&gt;всплывают&lt;/em&gt; или &lt;em&gt;распространяются&lt;/em&gt; от самого глубокого, самого внутреннего элемента ( &lt;strong&gt;цели события&lt;/strong&gt; ) в документе, где они происходят, вплоть до тела и элемента &lt;code&gt;document&lt;/code&gt; . В Internet Explorer 8 и ниже некоторые события, такие как &lt;code&gt;change&lt;/code&gt; и &lt;code&gt;submit&lt;/code&gt; , изначально не всплывают, но jQuery исправляет их, чтобы пузыриться и создавать согласованное кросс-браузерное поведение.</target>
        </trans-unit>
        <trans-unit id="0824e824d0098d6239873a84448d410eecdf43c6" translate="yes" xml:space="preserve">
          <source>The matched elements will be hidden immediately, with no animation. This is roughly equivalent to calling &lt;code&gt;.css( &quot;display&quot;, &quot;none&quot; )&lt;/code&gt;, except that the value of the &lt;code&gt;display&lt;/code&gt; property is saved in jQuery's data cache so that &lt;code&gt;display&lt;/code&gt; can later be restored to its initial value. If an element has a &lt;code&gt;display&lt;/code&gt; value of &lt;code&gt;inline&lt;/code&gt; and is hidden then shown, it will once again be displayed &lt;code&gt;inline&lt;/code&gt;.</source>
          <target state="translated">Соответствующие элементы будут немедленно скрыты без анимации. Это примерно эквивалентно вызову &lt;code&gt;.css( &quot;display&quot;, &quot;none&quot; )&lt;/code&gt; , за исключением того, что значение свойства &lt;code&gt;display&lt;/code&gt; сохраняется в кэше данных jQuery, чтобы впоследствии можно было восстановить исходное значение &lt;code&gt;display&lt;/code&gt; . Если элемент имеет &lt;code&gt;display&lt;/code&gt; значение &lt;code&gt;inline&lt;/code&gt; и скрыт, а затем отображается, он снова будет отображаться &lt;code&gt;inline&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46f4fb72769ec86f58468699c9160d1615df38e7" translate="yes" xml:space="preserve">
          <source>The matched elements will be revealed immediately, with no animation. This is roughly equivalent to calling &lt;code&gt;.css( &quot;display&quot;, &quot;block&quot; )&lt;/code&gt;, except that the &lt;code&gt;display&lt;/code&gt; property is restored to whatever it was initially. If an element has a &lt;code&gt;display&lt;/code&gt; value of &lt;code&gt;inline&lt;/code&gt;, then is hidden and shown, it will once again be displayed &lt;code&gt;inline&lt;/code&gt;.</source>
          <target state="translated">Соответствующие элементы будут показаны немедленно, без анимации. Это примерно эквивалентно вызову &lt;code&gt;.css( &quot;display&quot;, &quot;block&quot; )&lt;/code&gt; , за исключением того, что свойство &lt;code&gt;display&lt;/code&gt; восстанавливается до того, каким оно было изначально. Если элемент имеет &lt;code&gt;display&lt;/code&gt; значение &lt;code&gt;inline&lt;/code&gt; , затем скрывается и отображается, он снова будет отображаться &lt;code&gt;inline&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3db2c262258f59451cfcd14f30a965494fdb7a8c" translate="yes" xml:space="preserve">
          <source>The matched elements will be revealed or hidden immediately, with no animation, by changing the CSS &lt;code&gt;display&lt;/code&gt; property. If the element is initially displayed, it will be hidden; if hidden, it will be shown. The &lt;code&gt;display&lt;/code&gt; property is saved and restored as needed. If an element has a &lt;code&gt;display&lt;/code&gt; value of &lt;code&gt;inline&lt;/code&gt;, then is hidden and shown, it will once again be displayed &lt;code&gt;inline&lt;/code&gt;.</source>
          <target state="translated">Соответствующие элементы будут немедленно отображаться или скрываться, без анимации, путем изменения свойства &lt;code&gt;display&lt;/code&gt; CSS . Если элемент изначально отображается, он будет скрыт; если он скрыт, он будет показан. Свойство &lt;code&gt;display&lt;/code&gt; сохраняется и восстанавливается по мере необходимости. Если элемент имеет &lt;code&gt;display&lt;/code&gt; значение &lt;code&gt;inline&lt;/code&gt; , затем скрывается и отображается, он снова будет отображаться &lt;code&gt;inline&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c7ec0c7e986ccedf73b9e0eb11f7ca9d71e877a" translate="yes" xml:space="preserve">
          <source>The matching text can appear directly within the selected element, in any of that element's descendants, or a combination thereof. As with attribute value selectors, text inside the parentheses of &lt;code&gt;:contains()&lt;/code&gt; can be written as a bare word or surrounded by quotation marks. The text must have matching case to be selected.</source>
          <target state="translated">Соответствующий текст может появляться непосредственно в выбранном элементе, в любом из потомков этого элемента или в их комбинации. Как и в случае с селекторами значений атрибутов, текст в круглых скобках &lt;code&gt;:contains()&lt;/code&gt; может быть записан как простое слово или заключен в кавычки. Чтобы текст был выбран, он должен иметь соответствующий регистр.</target>
        </trans-unit>
        <trans-unit id="da8dada95be7fb335e0f7f1320405d5fbedd5c7c" translate="yes" xml:space="preserve">
          <source>The merge performed by &lt;code&gt;$.extend()&lt;/code&gt; is not recursive by default; if a property of the first object is itself an object or array, it will be completely overwritten by a property with the same key in the second or subsequent object. The values are not merged. This can be seen in the example below by examining the value of banana. However, by passing &lt;code&gt;true&lt;/code&gt; for the first function argument, objects will be recursively merged.</source>
          <target state="translated">Слияние, выполняемое &lt;code&gt;$.extend()&lt;/code&gt; , по умолчанию не рекурсивно; если свойство первого объекта само является объектом или массивом, оно будет полностью перезаписано свойством с тем же ключом во втором или последующем объекте. Значения не объединяются. Это можно увидеть в приведенном ниже примере, изучив ценность банана. Однако при передаче &lt;code&gt;true&lt;/code&gt; для первого аргумента функции объекты будут рекурсивно объединены.</target>
        </trans-unit>
        <trans-unit id="1c80fedd44d738243eba338965b1bbbb2d7430fc" translate="yes" xml:space="preserve">
          <source>The message to send out.</source>
          <target state="translated">Сообщение для отправки.</target>
        </trans-unit>
        <trans-unit id="c43a2a342b89cf38eab310c6b2bdcbbe99661c6e" translate="yes" xml:space="preserve">
          <source>The method for retrieving the current selected text differs from one browser to another. A number of jQuery plug-ins offer cross-platform solutions.</source>
          <target state="translated">Метод извлечения текущего выделенного текста отличается в разных браузерах.Ряд плагинов jQuery предлагают кроссплатформенные решения.</target>
        </trans-unit>
        <trans-unit id="85b34d3ff4f09696376c290b5d4b739841fed2fd" translate="yes" xml:space="preserve">
          <source>The method is essentially a shim for the &lt;a href=&quot;https://drafts.csswg.org/cssom/#the-css.escape()-method&quot;&gt;CSS Working Group's CSS.escape() method&lt;/a&gt;. The main difference is that &lt;code&gt;$.escapeSelector()&lt;/code&gt; can be reliably used in all of jQuery's supported browsers.</source>
          <target state="translated">По сути, этот метод является прокладкой для &lt;a href=&quot;https://drafts.csswg.org/cssom/#the-css.escape()-method&quot;&gt;метода CSS.escape () рабочей группы CSS&lt;/a&gt; . Основное отличие состоит в том, что &lt;code&gt;$.escapeSelector()&lt;/code&gt; может надежно использоваться во всех браузерах, поддерживаемых jQuery.</target>
        </trans-unit>
        <trans-unit id="bb0ac576955e6ed525104494cccefc79c0ffaa02" translate="yes" xml:space="preserve">
          <source>The method optionally accepts a selector expression for its second argument. If this argument is supplied, the elements will be filtered by testing whether they match it.</source>
          <target state="translated">Метод опционально принимает селекторное выражение для своего второго аргумента.Если этот аргумент предоставлен,то элементы будут отфильтровываться путем проверки их соответствия.</target>
        </trans-unit>
        <trans-unit id="db4b38eca31ac6773d02424670d957ba8068df2a" translate="yes" xml:space="preserve">
          <source>The method optionally accepts a selector expression of the same type that can be passed to the &lt;code&gt;$()&lt;/code&gt; function. If the selector is supplied, the preceding element will be filtered by testing whether it match the selector.</source>
          <target state="translated">Метод необязательно принимает выражение селектора того же типа, которое может быть передано в функцию &lt;code&gt;$()&lt;/code&gt; . Если селектор указан, предыдущий элемент будет отфильтрован путем проверки, соответствует ли он селектору.</target>
        </trans-unit>
        <trans-unit id="6e347b38d077dd75b669a2a45800a2e68ea6ad65" translate="yes" xml:space="preserve">
          <source>The method optionally accepts a selector expression of the same type that we can pass to the &lt;code&gt;$()&lt;/code&gt; function. If the immediately following sibling matches the selector, it remains in the newly constructed jQuery object; otherwise, it is excluded.</source>
          <target state="translated">Метод необязательно принимает выражение селектора того же типа, которое мы можем передать функции &lt;code&gt;$()&lt;/code&gt; . Если следующий за ним брат соответствует селектору, он остается во вновь созданном объекте jQuery; в противном случае он исключается.</target>
        </trans-unit>
        <trans-unit id="8c55f0e439cd154cac85e4979f9c4e7e9575eb8a" translate="yes" xml:space="preserve">
          <source>The method optionally accepts a selector expression of the same type that we can pass to the &lt;code&gt;$()&lt;/code&gt; function. If the selector is supplied, the elements will be filtered by testing whether they match it.</source>
          <target state="translated">Метод необязательно принимает выражение селектора того же типа, которое мы можем передать функции &lt;code&gt;$()&lt;/code&gt; . Если селектор указан, элементы будут отфильтрованы, проверяя, соответствуют ли они ему.</target>
        </trans-unit>
        <trans-unit id="6305564df7b2b4e272ed467fba354bfdae8565ff" translate="yes" xml:space="preserve">
          <source>The methods of &lt;code&gt;$.Callbacks&lt;/code&gt; can also be detached, should there be a need to define short-hand versions for convenience:</source>
          <target state="translated">Методы &lt;code&gt;$.Callbacks&lt;/code&gt; также могут быть отсоединены, если для удобства необходимо определить сокращенные версии:</target>
        </trans-unit>
        <trans-unit id="dafefab1095fabbdb39dfb2063d2b3e5df760f86" translate="yes" xml:space="preserve">
          <source>The mouse button is depressed again while the pointer is inside the element, within a time window that is system-dependent.</source>
          <target state="translated">Кнопка мыши снова нажимается,пока указатель находится внутри элемента,во временном окне,зависящем от системы.</target>
        </trans-unit>
        <trans-unit id="576cd8b97d955c1f863447a2e77d26323ba6546c" translate="yes" xml:space="preserve">
          <source>The mouse button is depressed while the pointer is inside the element.</source>
          <target state="translated">Кнопка мыши нажимается,пока указатель находится внутри элемента.</target>
        </trans-unit>
        <trans-unit id="b1db620e4cdeba5d3d324554abd72a643b595ecf" translate="yes" xml:space="preserve">
          <source>The mouse button is released while the pointer is inside the element.</source>
          <target state="translated">Кнопка мыши отпускается,пока указатель находится внутри элемента.</target>
        </trans-unit>
        <trans-unit id="2263bd52a19e370eee7fef7d2360445c3d9c5f06" translate="yes" xml:space="preserve">
          <source>The mouse position relative to the left edge of the document.</source>
          <target state="translated">Положение мыши относительно левого края документа.</target>
        </trans-unit>
        <trans-unit id="12339186c582f7ed442e4c1b7e3883792f2709f5" translate="yes" xml:space="preserve">
          <source>The mouse position relative to the top edge of the document.</source>
          <target state="translated">Положение мыши относительно верхнего края документа.</target>
        </trans-unit>
        <trans-unit id="2033823b3dadb8c11098d4f039ae3c154ce90a6c" translate="yes" xml:space="preserve">
          <source>The name &lt;code&gt;&quot;class&quot;&lt;/code&gt; must be quoted in the object since it is a JavaScript reserved word, and &lt;code&gt;&quot;className&quot;&lt;/code&gt; cannot be used since it refers to the DOM property, not the attribute.</source>
          <target state="translated">Имя &lt;code&gt;&quot;class&quot;&lt;/code&gt; должно быть заключено в кавычки в объекте, поскольку это зарезервированное слово JavaScript, а &lt;code&gt;&quot;className&quot;&lt;/code&gt; не может использоваться, поскольку оно относится к свойству DOM, а не к атрибуту.</target>
        </trans-unit>
        <trans-unit id="2be23a63086ebda18e8b5ba2e3920d1ac2b75c2d" translate="yes" xml:space="preserve">
          <source>The name of a jQuery method that generated the array of elements.</source>
          <target state="translated">Имя метода jQuery,который генерировал массив элементов.</target>
        </trans-unit>
        <trans-unit id="4296958589618bb6ad56c790eff779ad5d423877" translate="yes" xml:space="preserve">
          <source>The name of the attribute to get.</source>
          <target state="translated">Имя атрибута,который нужно получить.</target>
        </trans-unit>
        <trans-unit id="fbd0cc3752c40397ded39a708c242e4c4268ad6a" translate="yes" xml:space="preserve">
          <source>The name of the attribute to set.</source>
          <target state="translated">Имя атрибута,который нужно установить.</target>
        </trans-unit>
        <trans-unit id="e46c06096b68a311eebedcb4711d03a49036de4a" translate="yes" xml:space="preserve">
          <source>The name of the function whose context will be changed (should be a property of the &lt;code&gt;context&lt;/code&gt; object).</source>
          <target state="translated">Имя функции, контекст которой будет изменен (должно быть свойством объекта &lt;code&gt;context&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2e22159b8af57c29d0edb7193b221eb98a0ca996" translate="yes" xml:space="preserve">
          <source>The name of the property to get.</source>
          <target state="translated">Название собственности,которую нужно получить.</target>
        </trans-unit>
        <trans-unit id="22a258d2d705073bc54bce7ce496f383cbeade4f" translate="yes" xml:space="preserve">
          <source>The name of the property to remove.</source>
          <target state="translated">Название свойства,которое нужно удалить.</target>
        </trans-unit>
        <trans-unit id="f1c14f88a65230d7c15efb3a3d43e7bba43ad5af" translate="yes" xml:space="preserve">
          <source>The name of the property to set.</source>
          <target state="translated">Название объекта,который нужно установить.</target>
        </trans-unit>
        <trans-unit id="0cd4253c3db5e6f71db9e3f316f1013ed1b182b2" translate="yes" xml:space="preserve">
          <source>The name of the queue in which to stop animations.</source>
          <target state="translated">Имя очереди,в которой остановить анимацию.</target>
        </trans-unit>
        <trans-unit id="ec510aca48291402a1eb466d7b9bbe2a80c30c14" translate="yes" xml:space="preserve">
          <source>The namespace specified when the event was triggered.</source>
          <target state="translated">Пространство имен,указанное при срабатывании события.</target>
        </trans-unit>
        <trans-unit id="0e042ae48213e41f3c7dccddac1887f13741ea2e" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element is created on the fly and added to the DOM. The result is a new &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; wrapped around all matched elements:</source>
          <target state="translated">Новый элемент &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; создается &quot;на лету&quot; и добавляется в DOM. Результатом является новый &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; , обернутый вокруг всех согласованных элементов:</target>
        </trans-unit>
        <trans-unit id="2d83db634f8310cdc17fa4dcfc3eccbf02665e0f" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element is created on the fly and added to the DOM. The result is a new &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; wrapped around each matched element:</source>
          <target state="translated">Новый элемент &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; создается &quot;на лету&quot; и добавляется в DOM. Результатом является новый &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; , обернутый вокруг каждого совпадающего элемента:</target>
        </trans-unit>
        <trans-unit id="7b58a65b4c9866f2d71d3277e6db6f3e6f3a7760" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element is created on the fly and added to the DOM. The result is a new &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; wrapped around the content of each matched element:</source>
          <target state="translated">Новый элемент &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; создается &quot;на лету&quot; и добавляется в DOM. Результатом является новый &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; , обернутый вокруг содержимого каждого совпадающего элемента:</target>
        </trans-unit>
        <trans-unit id="79c84130d9d5f31038adef11e326eb07e0a7ceaf" translate="yes" xml:space="preserve">
          <source>The new data value; this can be any Javascript type except &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">Новое значение данных; это может быть любой тип Javascript, кроме &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86f9d09d2b9aa882752be29e4d95646605648024" translate="yes" xml:space="preserve">
          <source>The new function to add to the queue, with a function to call that will dequeue the next item.</source>
          <target state="translated">Новая функция для добавления в очередь,с функцией для вызова,которая удалит следующий элемент.</target>
        </trans-unit>
        <trans-unit id="9c162ae394e32228352d0721ceb63d31e08368c1" translate="yes" xml:space="preserve">
          <source>The new function to add to the queue.</source>
          <target state="translated">Новая функция для добавления в очередь.</target>
        </trans-unit>
        <trans-unit id="a5f0b107fe0d49f6c9decfb59cc2f2c72f057786" translate="yes" xml:space="preserve">
          <source>The nonce attribute passed to the executed script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0eafdfc57124a623a8018c422334d4b9398c2dc" translate="yes" xml:space="preserve">
          <source>The notable difference between (&lt;code&gt;prev + next&lt;/code&gt;) and (&lt;code&gt;prev ~ siblings&lt;/code&gt;) is their respective reach. While the former reaches only to the immediately following sibling element, the latter extends that reach to all following sibling elements.</source>
          <target state="translated">Заметная разница между ( &lt;code&gt;prev + next&lt;/code&gt; ) и ( &lt;code&gt;prev ~ siblings&lt;/code&gt; ) заключается в их охвате. В то время как первый распространяется только на следующий одноуровневый элемент, последний расширяет этот охват на все последующие одноуровневые элементы.</target>
        </trans-unit>
        <trans-unit id="73c92283828b72633f848b9fc54352c975e1c308" translate="yes" xml:space="preserve">
          <source>The number of elements currently matched. The .&lt;a href=&quot;size&quot;&gt;size()&lt;/a&gt; method will return the same value.</source>
          <target state="translated">Количество элементов, совпадающих на данный момент. Файл. &lt;a href=&quot;size&quot;&gt;size ()&lt;/a&gt; вернет то же значение.</target>
        </trans-unit>
        <trans-unit id="12d7ae7bde39033c3e928ca063c9efe18c0ee88b" translate="yes" xml:space="preserve">
          <source>The number of elements in the jQuery object.</source>
          <target state="translated">Количество элементов в объекте jQuery.</target>
        </trans-unit>
        <trans-unit id="a6016b690bdcda756024030e31e339dec9953dc6" translate="yes" xml:space="preserve">
          <source>The number returned by dimensions-related APIs, including &lt;code&gt;.height()&lt;/code&gt;, may be fractional in some cases. Code should not assume it is an integer. Also, dimensions may be incorrect when the page is zoomed by the user; browsers do not expose an API to detect this condition.</source>
          <target state="translated">Число, возвращаемое API, связанными с размерами, включая &lt;code&gt;.height()&lt;/code&gt; , в некоторых случаях может быть дробным. Код не должен предполагать, что это целое число. Кроме того, размеры могут быть неверными, когда страница масштабируется пользователем; браузеры не предоставляют API для обнаружения этого условия.</target>
        </trans-unit>
        <trans-unit id="e5e1719c954b51432abdfa681d9c3f47f176fad6" translate="yes" xml:space="preserve">
          <source>The number returned by dimensions-related APIs, including &lt;code&gt;.innerHeight()&lt;/code&gt;, may be fractional in some cases. Code should not assume it is an integer. Also, dimensions may be incorrect when the page is zoomed by the user; browsers do not expose an API to detect this condition.</source>
          <target state="translated">Число, возвращаемое API, связанными с измерениями, включая &lt;code&gt;.innerHeight()&lt;/code&gt; , в некоторых случаях может быть дробным. Код не должен предполагать, что это целое число. Кроме того, размеры могут быть неверными, когда страница масштабируется пользователем; браузеры не предоставляют API для обнаружения этого условия.</target>
        </trans-unit>
        <trans-unit id="7aa21e56b5c6a4a1242bcbb02b0eb0a6d7535a8d" translate="yes" xml:space="preserve">
          <source>The number returned by dimensions-related APIs, including &lt;code&gt;.innerWidth()&lt;/code&gt;, may be fractional in some cases. Code should not assume it is an integer. Also, dimensions may be incorrect when the page is zoomed by the user; browsers do not expose an API to detect this condition.</source>
          <target state="translated">Число, возвращаемое API, связанными с измерениями, включая &lt;code&gt;.innerWidth()&lt;/code&gt; , в некоторых случаях может быть дробным. Код не должен предполагать, что это целое число. Кроме того, размеры могут быть неверными, когда страница масштабируется пользователем; браузеры не предоставляют API для обнаружения этого условия.</target>
        </trans-unit>
        <trans-unit id="8a8d1ed18f88fb30e931c4dd179fa50e5f3d80b0" translate="yes" xml:space="preserve">
          <source>The number returned by dimensions-related APIs, including &lt;code&gt;.offset()&lt;/code&gt;, may be fractional in some cases. Code should not assume it is an integer. Also, dimensions may be incorrect when the page is zoomed by the user; browsers do not expose an API to detect this condition.</source>
          <target state="translated">Число, возвращаемое API, связанными с измерениями, включая &lt;code&gt;.offset()&lt;/code&gt; , в некоторых случаях может быть дробным. Код не должен предполагать, что это целое число. Кроме того, размеры могут быть неверными, когда страница масштабируется пользователем; браузеры не предоставляют API для обнаружения этого условия.</target>
        </trans-unit>
        <trans-unit id="4cc7307ad7e4bd4a5e469f56fb8abf4483d5d27c" translate="yes" xml:space="preserve">
          <source>The number returned by dimensions-related APIs, including &lt;code&gt;.outerHeight()&lt;/code&gt;, may be fractional in some cases. Code should not assume it is an integer. Also, dimensions may be incorrect when the page is zoomed by the user; browsers do not expose an API to detect this condition.</source>
          <target state="translated">Число, возвращаемое API, связанными с измерениями, включая &lt;code&gt;.outerHeight()&lt;/code&gt; , в некоторых случаях может быть дробным. Код не должен предполагать, что это целое число. Кроме того, размеры могут быть неверными, когда страница масштабируется пользователем; браузеры не предоставляют API для обнаружения этого условия.</target>
        </trans-unit>
        <trans-unit id="53bf3025deac19407f8af0203fdb55e479bb25a2" translate="yes" xml:space="preserve">
          <source>The number returned by dimensions-related APIs, including &lt;code&gt;.outerWidth()&lt;/code&gt;, may be fractional in some cases. Code should not assume it is an integer. Also, dimensions may be incorrect when the page is zoomed by the user; browsers do not expose an API to detect this condition.</source>
          <target state="translated">Число, возвращаемое API, связанными с измерениями, включая &lt;code&gt;.outerWidth()&lt;/code&gt; , в некоторых случаях может быть дробным. Код не должен предполагать, что это целое число. Кроме того, размеры могут быть неверными, когда страница масштабируется пользователем; браузеры не предоставляют API для обнаружения этого условия.</target>
        </trans-unit>
        <trans-unit id="5493f0ce296d72e79d89a3d60ed5606b5223e979" translate="yes" xml:space="preserve">
          <source>The number returned by dimensions-related APIs, including &lt;code&gt;.position()&lt;/code&gt;, may be fractional in some cases. Code should not assume it is an integer. Also, dimensions may be incorrect when the page is zoomed by the user; browsers do not expose an API to detect this condition.</source>
          <target state="translated">Число, возвращаемое API, связанными с измерениями, включая &lt;code&gt;.position()&lt;/code&gt; , в некоторых случаях может быть дробным. Код не должен предполагать, что это целое число. Кроме того, размеры могут быть неверными, когда страница масштабируется пользователем; браузеры не предоставляют API для обнаружения этого условия.</target>
        </trans-unit>
        <trans-unit id="57c15f4d2fb291886be6e0579952d0630802ecbb" translate="yes" xml:space="preserve">
          <source>The number returned by dimensions-related APIs, including &lt;code&gt;.width()&lt;/code&gt;, may be fractional in some cases. Code should not assume it is an integer. Also, dimensions may be incorrect when the page is zoomed by the user; browsers do not expose an API to detect this condition.</source>
          <target state="translated">Число, возвращаемое API, связанными с измерениями, включая &lt;code&gt;.width()&lt;/code&gt; , в некоторых случаях может быть дробным. Код не должен предполагать, что это целое число. Кроме того, размеры могут быть неверными, когда страница масштабируется пользователем; браузеры не предоставляют API для обнаружения этого условия.</target>
        </trans-unit>
        <trans-unit id="7159b370dec0b4c77b9794448f968d021591451c" translate="yes" xml:space="preserve">
          <source>The object that will be checked to see if it's a plain object.</source>
          <target state="translated">Объект,который будет проверен,чтобы убедиться,что это обычный объект.</target>
        </trans-unit>
        <trans-unit id="ff0ff630dca657003b8459aa56ecf0e2c77c82ea" translate="yes" xml:space="preserve">
          <source>The object that will be checked to see if it's empty.</source>
          <target state="translated">Объект,который будет проверен на пустоту.</target>
        </trans-unit>
        <trans-unit id="3ec3b49d6eb40059902496e5b347b2f0250d6d64" translate="yes" xml:space="preserve">
          <source>The object to extend. It will receive the new properties.</source>
          <target state="translated">Объект для расширения.Он получит новые свойства.</target>
        </trans-unit>
        <trans-unit id="0f3ea496874fb4613c3a9be9c6a176f4f24c9e54" translate="yes" xml:space="preserve">
          <source>The object to iterate over.</source>
          <target state="translated">Объект для итераций.</target>
        </trans-unit>
        <trans-unit id="bb0f686882a210293bfb4c1039dba53491f90039" translate="yes" xml:space="preserve">
          <source>The object to which the context (&lt;code&gt;this&lt;/code&gt;) of the function should be set.</source>
          <target state="translated">Объект, для которого должен быть установлен контекст ( &lt;code&gt;this&lt;/code&gt; ) функции.</target>
        </trans-unit>
        <trans-unit id="3f9e825e08e2e24867189da3596374f800696e05" translate="yes" xml:space="preserve">
          <source>The object to which the context of the function should be set.</source>
          <target state="translated">Объект,для которого должен быть установлен контекст функции.</target>
        </trans-unit>
        <trans-unit id="a3a8b16b79d7f4fee1588777ab5b8dddb1929eab" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;eventData&lt;/code&gt; parameter is not commonly used. When provided, this argument allows us to pass additional information to the handler. One handy use of this parameter is to work around issues caused by closures. For example, suppose we have two event handlers that both refer to the same external variable:</source>
          <target state="translated">Необязательный параметр &lt;code&gt;eventData&lt;/code&gt; обычно не используется. Если этот аргумент предоставлен, он позволяет нам передавать дополнительную информацию обработчику. Одним из удобных способов использования этого параметра является решение проблем, вызванных закрытием. Например, предположим, что у нас есть два обработчика событий, которые оба ссылаются на одну и ту же внешнюю переменную:</target>
        </trans-unit>
        <trans-unit id="7d1dddeb4e713a5f321f1b20a92fef9ccfbfa2bf" translate="yes" xml:space="preserve">
          <source>The original element is not included among the siblings, which is important to remember when we wish to find all elements at a particular level of the DOM tree. However, if the original collection contains more than one element, they might be mutual siblings and will both be found. If you need an exclusive list of siblings, use &lt;code&gt;$collection.siblings().not($collection)&lt;/code&gt;.</source>
          <target state="translated">Исходный элемент не входит в число братьев и сестер, что важно помнить, когда мы хотим найти все элементы на определенном уровне дерева DOM. Однако, если исходная коллекция содержит более одного элемента, они могут быть взаимными родственниками и оба будут найдены. Если вам нужен эксклюзивный список братьев и сестер, используйте &lt;code&gt;$collection.siblings().not($collection)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19df398a82ac5760aa053d006893448666db417e" translate="yes" xml:space="preserve">
          <source>The other DOM element involved in the event, if any.</source>
          <target state="translated">Другой элемент DOM,участвующий в событии,если таковой имеется.</target>
        </trans-unit>
        <trans-unit id="c42d3730919bd78afe5cc24beda85a4371f8e442" translate="yes" xml:space="preserve">
          <source>The particular use cases of this method can be best described through some examples.</source>
          <target state="translated">Конкретные случаи использования этого метода лучше всего описать на некоторых примерах.</target>
        </trans-unit>
        <trans-unit id="12be8f32109db553edeba7bd125861dccf618584" translate="yes" xml:space="preserve">
          <source>The pattern allows you to create objects with methods that operate on data that isn't visible to the outside&amp;mdash;the very basis of object-oriented programming.</source>
          <target state="translated">Шаблон позволяет создавать объекты с методами, которые работают с данными, которые не видны извне, - это сама основа объектно-ориентированного программирования.</target>
        </trans-unit>
        <trans-unit id="0c46afeb0966601574b297f1353d3cc0f47df196" translate="yes" xml:space="preserve">
          <source>The point in the document at which the selector should begin matching; similar to the context argument of the &lt;code&gt;$(selector, context)&lt;/code&gt; method.</source>
          <target state="translated">Точка в документе, с которой селектор должен начать сопоставление; аналогично контекстному аргументу метода &lt;code&gt;$(selector, context)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a0db3d81595eb495dfe775005f5118fba49529a" translate="yes" xml:space="preserve">
          <source>The primary advantage of &lt;code&gt;jQuery.hasData(element)&lt;/code&gt; is that it does not create and associate a data object with the element if none currently exists. In contrast, &lt;code&gt;jQuery.data(element)&lt;/code&gt; always returns a data object to the caller, creating one if no data object previously existed.</source>
          <target state="translated">Основное преимущество &lt;code&gt;jQuery.hasData(element)&lt;/code&gt; заключается в том, что он не создает и не связывает объект данных с элементом, если его в настоящее время не существует. Напротив, &lt;code&gt;jQuery.data(element)&lt;/code&gt; всегда возвращает объект данных вызывающей стороне, создавая его, если ранее объект данных не существовал.</target>
        </trans-unit>
        <trans-unit id="acdb90577bf3f6aada029f8710eb364c8c78a2a9" translate="yes" xml:space="preserve">
          <source>The rate (in milliseconds) at which animations fire.</source>
          <target state="translated">Скорость (в миллисекундах),с которой стреляют анимации.</target>
        </trans-unit>
        <trans-unit id="cb10dad645475696bea64c8a19075d461c6a4dfa" translate="yes" xml:space="preserve">
          <source>The remaining parameter of &lt;code&gt;.animate()&lt;/code&gt; is a string naming an easing function to use. An easing function specifies the speed at which the animation progresses at different points within the animation. The only easing implementations in the jQuery library are the default, called &lt;code&gt;swing&lt;/code&gt;, and one that progresses at a constant pace, called &lt;code&gt;linear&lt;/code&gt;. More easing functions are available with the use of plug-ins, most notably the &lt;a href=&quot;https://jqueryui.com/&quot;&gt;jQuery UI suite&lt;/a&gt;.</source>
          <target state="translated">Остающийся параметр &lt;code&gt;.animate()&lt;/code&gt; - это строка, в которой указывается функция ослабления, которую следует использовать. Функция замедления определяет скорость, с которой анимация прогрессирует в различных точках анимации. Единственные реализации упрощения в библиотеке jQuery - это реализация по умолчанию, называемая &lt;code&gt;swing&lt;/code&gt; , и реализация, которая развивается с постоянным темпом, называемая &lt;code&gt;linear&lt;/code&gt; . Дополнительные функции упрощения доступны с использованием подключаемых модулей, в первую очередь &lt;a href=&quot;https://jqueryui.com/&quot;&gt;пакета пользовательского интерфейса jQuery&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="98e06470e3fa05cf5cc0dafb0b2ea20bf565f4ed" translate="yes" xml:space="preserve">
          <source>The result of the following code is a red background behind items 3, 4 and 5:</source>
          <target state="translated">Результатом следующего кода является красный фон позади пунктов 3,4 и 5:</target>
        </trans-unit>
        <trans-unit id="5f17d80c2fe57707960ab0ce62ea8411233be366" translate="yes" xml:space="preserve">
          <source>The result of this call is a red background behind all four elements. Using an HTML snippet as the &lt;code&gt;.add()&lt;/code&gt; method's argument (as in the third version), we can create additional elements on the fly and add those elements to the matched set of elements. Let's say, for example, that we want to alter the background of the list items along with a newly created paragraph:</source>
          <target state="translated">Результатом этого вызова является красный фон за всеми четырьмя элементами. Используя фрагмент HTML в качестве &lt;code&gt;.add()&lt;/code&gt; метода .add () (как в третьей версии), мы можем создавать дополнительные элементы на лету и добавлять эти элементы к согласованному набору элементов. Скажем, например, что мы хотим изменить фон элементов списка вместе с вновь созданным абзацем:</target>
        </trans-unit>
        <trans-unit id="f5306f5e1616f9fad7b62559297b520b0e13420d" translate="yes" xml:space="preserve">
          <source>The result of this call is a red background behind item 2. Since no selector expression is supplied, this preceding element is unequivocally included as part of the object. If one had been supplied, the element would be tested for a match before it was included.</source>
          <target state="translated">Результатом этого вызова является красный фон позади пункта 2.Так как селекторное выражение не поставляется,этот предыдущий элемент однозначно включается в состав объекта.Если бы он был поставлен,то перед включением элемент был бы проверен на совпадение.</target>
        </trans-unit>
        <trans-unit id="b4fe25b8e98dc2a880ab00b6091306129b22d2b1" translate="yes" xml:space="preserve">
          <source>The result of this call is a red background behind item 4. Since we do not supply a selector expression, this following element is unequivocally included as part of the object. If we had supplied one, the element would be tested for a match before it was included.</source>
          <target state="translated">Результатом этого вызова является красный фон за пунктом 4.Так как мы не предоставляем селекторное выражение,то этот следующий элемент однозначно включается в состав объекта.Если бы мы поставили его,то перед включением элемент был бы проверен на совпадение.</target>
        </trans-unit>
        <trans-unit id="2bdd09e46848eac38bfa76febcbadcd077bcfffd" translate="yes" xml:space="preserve">
          <source>The result of this call is a red background behind items 1 and 2. Since we do not supply a selector expression, these preceding elements are unequivocally included as part of the object. If we had supplied one, the elements would be tested for a match before they were included.</source>
          <target state="translated">Результатом этого вызова является красный фон за пунктами 1 и 2.Так как мы не предоставляем селекторное выражение,эти предыдущие элементы однозначно включаются в состав объекта.Если бы мы поставили один из них,то перед включением эти элементы были бы протестированы на соответствие.</target>
        </trans-unit>
        <trans-unit id="803dcb57e7c93f3e463b7c42ff56d2c06449aae1" translate="yes" xml:space="preserve">
          <source>The result of this call is a red background behind items 1, 2, 4, and 5. Since we do not supply a selector expression, all of the siblings are part of the object. If we had supplied one, only the matching items among these four would be included.</source>
          <target state="translated">Результатом этого вызова является красный фон за пунктами 1,2,4 и 5.Так как мы не предоставляем селекторное выражение,все братья и сестры являются частью объекта.Если бы мы поставили один из них,то из этих четырех были бы включены только совпадающие элементы.</target>
        </trans-unit>
        <trans-unit id="b43225fe6ce7a5b0e7693b20ab46719a0f4b3f89" translate="yes" xml:space="preserve">
          <source>The result of this call is a red background behind items 4 and 5. Since we do not supply a selector expression, these following elements are unequivocally included as part of the object. If we had supplied one, the elements would be tested for a match before they were included.</source>
          <target state="translated">Результатом этого вызова является красный фон за пунктами 4 и 5.Так как мы не предоставляем селекторное выражение,эти следующие элементы однозначно включаются в состав объекта.Если бы мы поставили один из них,то перед включением эти элементы были бы протестированы на совпадение.</target>
        </trans-unit>
        <trans-unit id="0ed9f4feb04438548de3b013137694e77d57632b" translate="yes" xml:space="preserve">
          <source>The result of this call is a red background behind items A, B, and C. Since we do not supply a selector expression, all of the children are part of the returned jQuery object. If we had supplied one, only the matching items among these three would be included.</source>
          <target state="translated">Результатом этого вызова является красный фон за элементами A,B и C.Поскольку мы не предоставляем выражение селектора,все дети являются частью возвращаемого объекта jQuery.Если бы мы поставили один из них,то из этих трех объектов были бы включены только совпадающие.</target>
        </trans-unit>
        <trans-unit id="5a5d9de3fcbdb18a4bc188bea62cba2e34e884d1" translate="yes" xml:space="preserve">
          <source>The result of this call is a red background for item 2, as it is the only &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; that has a &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; among its descendants.</source>
          <target state="translated">Результатом этого вызова является красный фон для элемента 2, поскольку это единственный &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; , у которого есть &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; среди его потомков.</target>
        </trans-unit>
        <trans-unit id="c89615ef14d3fbd60d050d9155e47ebd4ba8656f" translate="yes" xml:space="preserve">
          <source>The result of this call is a red background for item 3. Note that the supplied index is zero-based, and refers to the position of the element within the jQuery object, not within the DOM tree.</source>
          <target state="translated">Результатом этого вызова является красный фон для пункта 3.Обратите внимание,что поставляемый индекс является нулевым и относится к позиции элемента внутри объекта jQuery,а не в дереве DOM.</target>
        </trans-unit>
        <trans-unit id="14fb455b8bbff10842086b58eac8f01cab3c1afe" translate="yes" xml:space="preserve">
          <source>The result of this call is a red background for items 1, 3 and 5, as they do not match the selector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a1805e37c0ac93512567135d69322d80bf04492" translate="yes" xml:space="preserve">
          <source>The result of this call is a red background for items 1, 3, and 5, as they match the selector (recall that &lt;code&gt;:even&lt;/code&gt; and &lt;code&gt;:odd&lt;/code&gt; use 0-based indexing).</source>
          <target state="translated">Результатом этого вызова является красный фон для элементов 1, 3 и 5, поскольку они соответствуют селектору (напомним, что &lt;code&gt;:even&lt;/code&gt; и &lt;code&gt;:odd&lt;/code&gt; используют индексирование на основе 0).</target>
        </trans-unit>
        <trans-unit id="008bfcb10c48746c779c107b0cd2e4012a84d492" translate="yes" xml:space="preserve">
          <source>The result of this call is a red background for items 2 and 4, as they do not match the selector (recall that :even and :odd use 0-based indexing).</source>
          <target state="translated">Результатом этого вызова является красный фон для элементов 2 и 4,так как они не соответствуют селектору (напомним,что :even и :odd используют индексацию на основе 0).</target>
        </trans-unit>
        <trans-unit id="339946000b39d9fa707e17614083ed036b66079a" translate="yes" xml:space="preserve">
          <source>The result of this call is a red background for items 2, 4, and 6, as they match the selector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa883f229b6f69a81b08da92e713eb4a1caff5f9" translate="yes" xml:space="preserve">
          <source>The result of this call is a red background for items 3, 4, and 5. Note that the supplied index is zero-based, and refers to the position of elements within the jQuery object, not within the DOM tree.</source>
          <target state="translated">Результатом этого вызова является красный фон для пунктов 3,4 и 5.Обратите внимание,что поставляемый индекс является нулевым и относится к положению элементов внутри объекта jQuery,а не в дереве DOM.</target>
        </trans-unit>
        <trans-unit id="db1517b2e444023a7127a38d5c51bcdff691e73b" translate="yes" xml:space="preserve">
          <source>The result of this call is a red background for the final item.</source>
          <target state="translated">Результатом этого вызова является красный фон для последнего элемента.</target>
        </trans-unit>
        <trans-unit id="facf65b81d3f8a612a59fa241dcd3b82f9307f27" translate="yes" xml:space="preserve">
          <source>The result of this call is a red background for the first item.</source>
          <target state="translated">Результатом этого вызова является красный фон для первого элемента.</target>
        </trans-unit>
        <trans-unit id="385666a4367c3ceaa277ae989ffa6d62efba1ee5" translate="yes" xml:space="preserve">
          <source>The result of this call is a red background for the level-2 list, item II, and the level-1 list (and on up the DOM tree all the way to the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element). Since we do not supply a selector expression, all of the ancestors are part of the returned jQuery object. If we had supplied one, only the matching items among these would be included.</source>
          <target state="translated">Результатом этого вызова является красный фон для списка уровня 2, элемента II и списка уровня 1 (а затем вверх по дереву DOM до элемента &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; ). Поскольку мы не предоставляем выражение селектора, все предки являются частью возвращаемого объекта jQuery. Если бы мы поставили один, в него были бы включены только соответствующие элементы.</target>
        </trans-unit>
        <trans-unit id="22aacd8c82ea9af8e8daf6e3c4d83d62f3a11bb2" translate="yes" xml:space="preserve">
          <source>The result of this call is a red background for the level-2 list. Since we do not supply a selector expression, the parent element is unequivocally included as part of the object. If we had supplied one, the element would be tested for a match before it was included.</source>
          <target state="translated">Результатом этого вызова является красный фон для списка уровня 2.Так как мы не предоставляем селекторное выражение,то родительский элемент однозначно включается в состав объекта.Если бы мы поставили одно из них,то перед включением элемент был бы проверен на соответствие.</target>
        </trans-unit>
        <trans-unit id="759e58f5af381c9ae58e15d8327b13ec00b52925" translate="yes" xml:space="preserve">
          <source>The result of this call is a red background on items A, B, 1, 2, 3, and C. Even though item II matches the selector expression, it is not included in the results; only descendants are considered candidates for the match.</source>
          <target state="translated">Результатом этого вызова является красный фон на пунктах A,B,1,2,3 и C.Несмотря на то,что пункт II соответствует выражению селектора,он не включается в результаты;кандидатами на матч считаются только потомки.</target>
        </trans-unit>
        <trans-unit id="8542609c7db1f3303873f6a2002911ee15c9ea8e" translate="yes" xml:space="preserve">
          <source>The result of this call is the string, &lt;code&gt;&quot;two,four,six,eight&quot;&lt;/code&gt;.</source>
          <target state="translated">Результатом этого вызова является строка &lt;code&gt;&quot;two,four,six,eight&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="485440b7c20f82cfee29dc2091cb4a9c40a2f99a" translate="yes" xml:space="preserve">
          <source>The result of this call would be a red background on item 1.</source>
          <target state="translated">Результатом этого вызова будет красный фон на пункте 1.</target>
        </trans-unit>
        <trans-unit id="271ba0250ab50aa59f8fc29f25ec5ee041c7dddd" translate="yes" xml:space="preserve">
          <source>The result of this is that it becomes simple to construct complex lists of callbacks where input values can be passed through to as many functions as needed with ease.</source>
          <target state="translated">В результате получается простое построение сложных списков обратных вызовов,в которых входные значения могут с легкостью передаваться как можно большему количеству функций.</target>
        </trans-unit>
        <trans-unit id="2e630df4612cdefc2e2262290e72aa29c13c7a13" translate="yes" xml:space="preserve">
          <source>The result would look like this:</source>
          <target state="translated">Результат будет выглядеть так:</target>
        </trans-unit>
        <trans-unit id="57cf4e5bb5314a409449a88f58bf0d0b43b88262" translate="yes" xml:space="preserve">
          <source>The resulting DOM structure would be:</source>
          <target state="translated">В результате получилась бы структура DOM:</target>
        </trans-unit>
        <trans-unit id="141af9b6cff1007634750533839c59d6c52a9d14" translate="yes" xml:space="preserve">
          <source>The returned jQuery object contains zero or more elements for each element in the original set, in reverse document order</source>
          <target state="translated">Возвращаемый объект jQuery содержит ноль или больше элементов для каждого элемента в исходном наборе,в обратном порядке документа</target>
        </trans-unit>
        <trans-unit id="07ad1547f50f7c20a1cd7579032c984beb61889d" translate="yes" xml:space="preserve">
          <source>The returned jQuery object contains zero or one element for each element in the original set, in document order</source>
          <target state="translated">Возвращаемый объект jQuery содержит ноль или один элемент для каждого элемента в исходном наборе,в порядке документа</target>
        </trans-unit>
        <trans-unit id="f6fe1e1f1407019a7bb0e31dc8b4968b82567270" translate="yes" xml:space="preserve">
          <source>The same is true for other dynamic attributes, such as &lt;code&gt;selected&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">То же самое верно и для других динамических атрибутов, таких как &lt;code&gt;selected&lt;/code&gt; и &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59c475723db5a18006828a3888cc67bbf8c09867" translate="yes" xml:space="preserve">
          <source>The script is executed in the global context, so it can refer to other variables and use jQuery functions. Included scripts can have some impact on the current page.</source>
          <target state="translated">Сценарий выполняется в глобальном контексте,поэтому он может ссылаться на другие переменные и использовать функции jQuery.Включенные скрипты могут оказать некоторое влияние на текущую страницу.</target>
        </trans-unit>
        <trans-unit id="d9cfc35df62d2b3a52dae65a48561a4349497359" translate="yes" xml:space="preserve">
          <source>The second and third formulations of this function create a jQuery object using one or more DOM elements that were already selected in some other way. A jQuery object is created from the array elements in the order they appeared in the array; unlike most other multi-element jQuery operations, the elements are not sorted in DOM order. Elements will be copied from the array as-is and won't be unwrapped if they're already jQuery collections.</source>
          <target state="translated">Вторая и третья формулировки этой функции создают объект jQuery,используя один или несколько DOM-элементов,которые уже были выделены каким-то другим образом.Объект jQuery создается из элементов массива в том порядке,в котором они появились в массиве;в отличие от большинства других многоэлементных операций jQuery,элементы не сортируются в порядке DOM.Элементы будут скопированы из массива как есть и не будут распакованы,если они уже являются коллекциями jQuery.</target>
        </trans-unit>
        <trans-unit id="09640a2d2f7e5680918d2964d2624ebb2a3d2a31" translate="yes" xml:space="preserve">
          <source>The second array-like object to merge into the first, unaltered.</source>
          <target state="translated">Второй массивноподобный объект,сливаемый в первый,без изменений.</target>
        </trans-unit>
        <trans-unit id="4bc6e7d14914bf71bafefa2bfaf2aaad9add698b" translate="yes" xml:space="preserve">
          <source>The second form of this method allows us to filter elements against a function rather than a selector. For each element, if the function returns &lt;code&gt;true&lt;/code&gt; (or a &quot;truthy&quot; value), the element will be included in the filtered set; otherwise, it will be excluded. Suppose we have a somewhat more involved HTML snippet:</source>
          <target state="translated">Вторая форма этого метода позволяет нам фильтровать элементы по функции, а не по селектору. Для каждого элемента, если функция возвращает &lt;code&gt;true&lt;/code&gt; (или &amp;laquo;истинное&amp;raquo; значение), элемент будет включен в отфильтрованный набор; в противном случае он будет исключен. Предположим, у нас есть более сложный фрагмент HTML:</target>
        </trans-unit>
        <trans-unit id="fcb5168b1f0fd8e8dcac15e31943b6a43f6f6d0d" translate="yes" xml:space="preserve">
          <source>The second form of this method evaluates expressions related to elements based on a function rather than a selector. For each element, if the function returns &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;.is()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; as well. For example, given a somewhat more involved HTML snippet:</source>
          <target state="translated">Вторая форма этого метода оценивает выражения, относящиеся к элементам, на основе функции, а не селектора. Для каждого элемента, если функция возвращает &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;.is()&lt;/code&gt; возвращает &lt;code&gt;true&lt;/code&gt; . Например, учитывая более сложный фрагмент HTML:</target>
        </trans-unit>
        <trans-unit id="2a154816850f6de6770577387c99f209db6b6ece" translate="yes" xml:space="preserve">
          <source>The second inner &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; could be replaced with the specified HTML:</source>
          <target state="translated">Второй внутренний &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; можно заменить указанным HTML:</target>
        </trans-unit>
        <trans-unit id="d8e3344300bcc1acfb7bb30ab9c54d31a312c9e1" translate="yes" xml:space="preserve">
          <source>The second statement of the code above correctly refers to the &lt;code&gt;data-last-value&lt;/code&gt; attribute of the element. In case no data is stored with the passed key, jQuery searches among the attributes of the element, converting a camel-cased string into a dashed string and then prepending &lt;code&gt;data-&lt;/code&gt; to the result. So, the string &lt;code&gt;lastValue&lt;/code&gt; is converted to &lt;code&gt;data-last-value&lt;/code&gt;.</source>
          <target state="translated">Второй оператор приведенного выше кода правильно относится к атрибуту &lt;code&gt;data-last-value&lt;/code&gt; элемента. В случае , если никакие данные не сохраняются с ключом, прошел JQuery поиска среди атрибутов элемента, преобразование строки верблюда-обсаженных в штриховой строку , а затем предваряя &lt;code&gt;data-&lt;/code&gt; к результату. Итак, строка &lt;code&gt;lastValue&lt;/code&gt; преобразуется в &lt;code&gt;data-last-value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c42dd9df1106a653c3e574c2ee9fc8431d825de" translate="yes" xml:space="preserve">
          <source>The second time we apply &lt;code&gt;$( &quot;div.tumble&quot; ).toggleClass( &quot;bounce&quot; )&lt;/code&gt;, the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; class is returned to the single &lt;code&gt;tumble&lt;/code&gt; value:</source>
          <target state="translated">Во второй раз, когда мы применяем &lt;code&gt;$( &quot;div.tumble&quot; ).toggleClass( &quot;bounce&quot; )&lt;/code&gt; , класс &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; возвращается к единственному значению &lt;code&gt;tumble&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="665befe924907801a3530bb57b4cbf891ba537dd" translate="yes" xml:space="preserve">
          <source>The second version of &lt;code&gt;.animate()&lt;/code&gt; provides a &lt;code&gt;step&lt;/code&gt; option &amp;mdash; a callback function that is fired at each step of the animation. This function is useful for enabling custom animation types or altering the animation as it is occurring. It accepts two arguments (&lt;code&gt;now&lt;/code&gt; and &lt;code&gt;fx&lt;/code&gt;), and &lt;code&gt;this&lt;/code&gt; is set to the DOM element being animated.</source>
          <target state="translated">Вторая версия &lt;code&gt;.animate()&lt;/code&gt; предоставляет опцию &lt;code&gt;step&lt;/code&gt; - функцию обратного вызова, которая запускается на каждом шаге анимации. Эта функция полезна для включения пользовательских типов анимации или изменения анимации по мере ее появления. Он принимает два аргумента ( &lt;code&gt;now&lt;/code&gt; и &lt;code&gt;fx&lt;/code&gt; ), и &lt;code&gt;this&lt;/code&gt; установлено для анимируемого элемента DOM.</target>
        </trans-unit>
        <trans-unit id="9ae52fd7621257d963ead7e4f0853cac0c5348a5" translate="yes" xml:space="preserve">
          <source>The second version of &lt;code&gt;.toggleClass()&lt;/code&gt; uses the second parameter for determining whether the class should be added or removed. If this parameter's value is &lt;code&gt;true&lt;/code&gt;, then the class is added; if &lt;code&gt;false&lt;/code&gt;, the class is removed. In essence, the statement:</source>
          <target state="translated">Вторая версия &lt;code&gt;.toggleClass()&lt;/code&gt; использует второй параметр для определения того, следует ли добавить или удалить класс. Если значение этого параметра &lt;code&gt;true&lt;/code&gt; , то класс добавляется; если &lt;code&gt;false&lt;/code&gt; , класс удаляется. По сути, утверждение:</target>
        </trans-unit>
        <trans-unit id="efaf7d0124b927367a9b0ae3fed5a220228eea05" translate="yes" xml:space="preserve">
          <source>The second version of the &lt;code&gt;.not()&lt;/code&gt; method allows us to remove elements from the matched set, assuming we have found those elements previously by some other means. For example, suppose our list had an id applied to one of its items:</source>
          <target state="translated">Вторая версия метода &lt;code&gt;.not()&lt;/code&gt; позволяет нам удалять элементы из согласованного набора, предполагая, что мы нашли эти элементы ранее каким-либо другим способом. Например, предположим, что у нашего списка есть идентификатор, примененный к одному из его элементов:</target>
        </trans-unit>
        <trans-unit id="db488502c779e5855624bcb94b0d9eac6e51fef3" translate="yes" xml:space="preserve">
          <source>The second version of the method accepts a Boolean parameter. If this parameter is &lt;code&gt;true&lt;/code&gt;, then the matched elements are shown; if &lt;code&gt;false&lt;/code&gt;, the elements are hidden. In essence, the statement:</source>
          <target state="translated">Вторая версия метода принимает логический параметр. Если этот параметр &lt;code&gt;true&lt;/code&gt; , то отображаются совпадающие элементы; если &lt;code&gt;false&lt;/code&gt; , элементы скрыты. По сути, утверждение:</target>
        </trans-unit>
        <trans-unit id="14129c4f8fda0ecb933fddabaa46bdf397f7bc5b" translate="yes" xml:space="preserve">
          <source>The second version of this method allows us to instead specify a callback function. This callback function will be called once for every matched element; it should return a DOM element, jQuery object, or HTML snippet in which to wrap the content of the corresponding element. For example:</source>
          <target state="translated">Вторая версия этого метода позволяет вместо этого указать функцию обратного вызова.Эта функция будет вызываться один раз для каждого совпадающего элемента;она должна возвращать DOM-элемент,объект jQuery или HTML-фрагмент,в который будет обертываться содержимое соответствующего элемента.Например:</target>
        </trans-unit>
        <trans-unit id="50749b1d27f953b40a33c2be2b260d7a6793cd44" translate="yes" xml:space="preserve">
          <source>The second version of this method allows us to instead specify a callback function. This callback function will be called once for every matched element; it should return a DOM element, jQuery object, or HTML snippet in which to wrap the corresponding element. For example:</source>
          <target state="translated">Вторая версия этого метода позволяет вместо этого указать функцию обратного вызова.Эта функция будет вызываться один раз для каждого совпадающего элемента;она должна возвращать DOM-элемент,объект jQuery или HTML-фрагмент,в который будет обернут соответствующий элемент.Например:</target>
        </trans-unit>
        <trans-unit id="f395dc88a156a3c3c8af5ffcd5884c85b81cc391" translate="yes" xml:space="preserve">
          <source>The selectors are a composition of CSS and custom additions. All selectors available in jQuery are documented on the &lt;a href=&quot;category/selectors&quot;&gt;Selectors API page&lt;/a&gt;.</source>
          <target state="translated">Селекторы представляют собой комбинацию CSS и пользовательских дополнений. Все селекторы, доступные в jQuery, задокументированы на &lt;a href=&quot;category/selectors&quot;&gt;странице Selectors API&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="113d83a724dd060af5c92489a395d6836663109a" translate="yes" xml:space="preserve">
          <source>The standard events in the Document Object Model are: &lt;code&gt;blur&lt;/code&gt;, &lt;code&gt;focus&lt;/code&gt;, &lt;code&gt;load&lt;/code&gt;, &lt;code&gt;resize&lt;/code&gt;, &lt;code&gt;scroll&lt;/code&gt;, &lt;code&gt;unload&lt;/code&gt;, &lt;code&gt;beforeunload&lt;/code&gt;, &lt;code&gt;click&lt;/code&gt;, &lt;code&gt;dblclick&lt;/code&gt;, &lt;code&gt;mousedown&lt;/code&gt;, &lt;code&gt;mouseup&lt;/code&gt;, &lt;code&gt;mousemove&lt;/code&gt;, &lt;code&gt;mouseover&lt;/code&gt;, &lt;code&gt;mouseout&lt;/code&gt;, &lt;code&gt;mouseenter&lt;/code&gt;, &lt;code&gt;mouseleave&lt;/code&gt;, &lt;code&gt;change&lt;/code&gt;, &lt;code&gt;select&lt;/code&gt;, &lt;code&gt;submit&lt;/code&gt;, &lt;code&gt;keydown&lt;/code&gt;, &lt;code&gt;keypress,&lt;/code&gt; and &lt;code&gt;keyup&lt;/code&gt;. Since the DOM event names have predefined meanings for some elements, using them for other purposes is not recommended. jQuery's event model can trigger an event by any name on an element, and it is propagated up the DOM tree to which that element belongs, if any.</source>
          <target state="translated">Стандартные события в объектной модели документа являются: &lt;code&gt;blur&lt;/code&gt; , &lt;code&gt;focus&lt;/code&gt; , &lt;code&gt;load&lt;/code&gt; , &lt;code&gt;resize&lt;/code&gt; , &lt;code&gt;scroll&lt;/code&gt; , &lt;code&gt;unload&lt;/code&gt; , &lt;code&gt;beforeunload&lt;/code&gt; , &lt;code&gt;click&lt;/code&gt; , &lt;code&gt;dblclick&lt;/code&gt; , &lt;code&gt;mousedown&lt;/code&gt; , &lt;code&gt;mouseup&lt;/code&gt; , &lt;code&gt;mousemove&lt;/code&gt; , &lt;code&gt;mouseover&lt;/code&gt; , &lt;code&gt;mouseout&lt;/code&gt; , &lt;code&gt;mouseenter&lt;/code&gt; , &lt;code&gt;mouseleave&lt;/code&gt; , &lt;code&gt;change&lt;/code&gt; , &lt;code&gt;select&lt;/code&gt; , &lt;code&gt;submit&lt;/code&gt; , &lt;code&gt;keydown&lt;/code&gt; , &lt;code&gt;keypress,&lt;/code&gt; и &lt;code&gt;keyup&lt;/code&gt; , Поскольку имена событий DOM имеют предопределенные значения для некоторых элементов, использовать их для других целей не рекомендуется. Модель событий jQuery может инициировать событие по любому имени в элементе, и оно распространяется вверх по дереву DOM, которому принадлежит этот элемент, если таковое имеется.</target>
        </trans-unit>
        <trans-unit id="d7dc41bbfc0d4e44cab83fd01605e79bb3468eef" translate="yes" xml:space="preserve">
          <source>The string representing an easing function specifies the speed at which the animation progresses at different points within the animation. The only easing implementations in the jQuery library are the default, called &lt;code&gt;swing&lt;/code&gt;, and one that progresses at a constant pace, called &lt;code&gt;linear&lt;/code&gt;. More easing functions are available with the use of plug-ins, most notably the &lt;a href=&quot;https://jqueryui.com&quot;&gt;jQuery UI suite&lt;/a&gt;.</source>
          <target state="translated">Строка, представляющая функцию замедления, определяет скорость, с которой анимация прогрессирует в различных точках анимации. Единственные реализации упрощения в библиотеке jQuery - это реализация по умолчанию, называемая &lt;code&gt;swing&lt;/code&gt; , и реализация, которая прогрессирует с постоянным темпом, называемая &lt;code&gt;linear&lt;/code&gt; . Дополнительные функции упрощения доступны с использованием плагинов, в первую очередь &lt;a href=&quot;https://jqueryui.com&quot;&gt;пакета пользовательского интерфейса jQuery&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b9a2664d68de74010dd9b594714895a2e4e5ee52" translate="yes" xml:space="preserve">
          <source>The string to trim.</source>
          <target state="translated">Струна для подрезания.</target>
        </trans-unit>
        <trans-unit id="b5a92059af11477af58d65e98372ed264b36cef5" translate="yes" xml:space="preserve">
          <source>The style definition is present to make the target element small enough to be scrollable:</source>
          <target state="translated">Определение стиля присутствует для того,чтобы сделать целевой элемент достаточно маленьким для прокрутки:</target>
        </trans-unit>
        <trans-unit id="5deae09e7c61eea99ec8ef3ea6e54e9cb20eaf6c" translate="yes" xml:space="preserve">
          <source>The text to set as the content of each matched element. When Number or Boolean is supplied, it will be converted to a String representation.</source>
          <target state="translated">Текст,который необходимо установить в качестве содержимого каждого совпадающего элемента.Когда поставляются Number или Boolean,он будет преобразован в Строковое представление.</target>
        </trans-unit>
        <trans-unit id="5f5b15e66531244890cf5d811d8f2c84ea4027f2" translate="yes" xml:space="preserve">
          <source>The third form of the &lt;code&gt;.unbind()&lt;/code&gt; method is used when we wish to unbind a handler from within itself. For example, suppose we wish to trigger an event handler only three times:</source>
          <target state="translated">Третья форма метода &lt;code&gt;.unbind()&lt;/code&gt; используется, когда мы хотим отвязать обработчик изнутри. Например, предположим, что мы хотим запустить обработчик событий только три раза:</target>
        </trans-unit>
        <trans-unit id="6c28ffbb3cc7d012a98f2607f053d7e64eaa8d79" translate="yes" xml:space="preserve">
          <source>The translation function that is provided to this method is called for each top-level element in the array or object and is passed two arguments: The element's value and its index or key within the array or object.</source>
          <target state="translated">Функция трансляции,которая предоставляется этому методу,вызывается для каждого элемента верхнего уровня в массиве или объекте и передает два аргумента:Значение элемента и его индекс или ключ внутри массива или объекта.</target>
        </trans-unit>
        <trans-unit id="258e9a1f5851882139fe20ce70223b4486206779" translate="yes" xml:space="preserve">
          <source>The type of a function is &quot;function&quot;.</source>
          <target state="translated">Тип функции-&quot;функция&quot;.</target>
        </trans-unit>
        <trans-unit id="250061ae6c3eaba58f68c8b0705fa5283b17f50a" translate="yes" xml:space="preserve">
          <source>The type of a number is &quot;number&quot;.</source>
          <target state="translated">Тип номера-&quot;номер&quot;.</target>
        </trans-unit>
        <trans-unit id="7d86a1b42215eee2fd5f10b41fcbfe8d78a85728" translate="yes" xml:space="preserve">
          <source>The type of a string is &quot;string&quot;.</source>
          <target state="translated">Тип строки-&quot;строка&quot;.</target>
        </trans-unit>
        <trans-unit id="de7be4ab84b82bbdfbeec8971b1864a663638bfd" translate="yes" xml:space="preserve">
          <source>The type of an array is &quot;object&quot;:</source>
          <target state="translated">Тип массива-&quot;объект&quot;:</target>
        </trans-unit>
        <trans-unit id="a18897493ed6d8b67961ab81a7e1840ec5872f8e" translate="yes" xml:space="preserve">
          <source>The type of an object is &quot;object&quot;:</source>
          <target state="translated">Тип объекта-&quot;объект&quot;:</target>
        </trans-unit>
        <trans-unit id="8bb813a8f15ca076b4aeffe26fb2a446d33302d2" translate="yes" xml:space="preserve">
          <source>The type of data expected from the server. Default: Intelligent Guess (xml, json, script, text, html).</source>
          <target state="translated">Тип данных,ожидаемых от сервера.По умолчанию:Интеллектуальное угадывание (xml,json,скрипт,текст,html).</target>
        </trans-unit>
        <trans-unit id="65b1a1be3665cab47e929452b9514cab452f93f3" translate="yes" xml:space="preserve">
          <source>The type of data that you're expecting back from the server. If none is specified, jQuery will try to infer it based on the MIME type of the response (an XML MIME type will yield XML, in 1.4 JSON will yield a JavaScript object, in 1.4 script will execute the script, and anything else will be returned as a string). The available types (and the result passed as the first argument to your success callback) are:</source>
          <target state="translated">Тип данных,которые вы ожидаете обратно от сервера.Если ни один из них не указан,jQuery попытается сделать вывод,основываясь на MIME-типе ответа (MIME-тип XML даст XML,в 1.4 JSON даст объект JavaScript,в 1.4 скрипт выполнит скрипт,и все остальное вернется в виде строки).Доступные типы (и результат,переданный в качестве первого аргумента в вашем успешном обратном вызове):</target>
        </trans-unit>
        <trans-unit id="5e4f1e6bc7e33b940ea0ca5958d289d963ae06e7" translate="yes" xml:space="preserve">
          <source>The type of queue that needs to be observed.</source>
          <target state="translated">Тип очереди,которую необходимо соблюдать.</target>
        </trans-unit>
        <trans-unit id="ac03d521d35e958a333e1be1023588d7bb5c2990" translate="yes" xml:space="preserve">
          <source>The unminified jQuery source itself includes a list of default converters, which effectively illustrates how they can be used:</source>
          <target state="translated">Сам несокращенный источник jQuery содержит список преобразователей по умолчанию,который эффективно иллюстрирует,как их можно использовать:</target>
        </trans-unit>
        <trans-unit id="eb4b9ca98fca80215d567f08acc1e010086fbd76" translate="yes" xml:space="preserve">
          <source>The updated set of elements can be used in a following (chained) method, or assigned to a variable for later use. For example:</source>
          <target state="translated">Обновленный набор элементов может быть использован в следующем (цепочечном)методе,или присвоен переменной для последующего использования.Например:</target>
        </trans-unit>
        <trans-unit id="7dc333f2557363d5ea2debb3f8b7027ef58060e4" translate="yes" xml:space="preserve">
          <source>The usefulness of the &lt;code&gt;.stop()&lt;/code&gt; method is evident when we need to animate an element on &lt;code&gt;mouseenter&lt;/code&gt; and &lt;code&gt;mouseleave&lt;/code&gt;:</source>
          <target state="translated">Полезность метода &lt;code&gt;.stop()&lt;/code&gt; очевидна, когда нам нужно анимировать элемент в &lt;code&gt;mouseenter&lt;/code&gt; и &lt;code&gt;mouseleave&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7ddb3ecf6925c2baa005d5f8268928b76546a56a" translate="yes" xml:space="preserve">
          <source>The value of this property is typically equal to &lt;code&gt;document&lt;/code&gt;, as this is the default context for jQuery objects if none is supplied. The context may differ if, for example, the object was created by searching within an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; or XML document.</source>
          <target state="translated">Значение этого свойства обычно равно &lt;code&gt;document&lt;/code&gt; , так как это контекст по умолчанию для объектов jQuery, если они не указаны. Контекст может отличаться, если, например, объект был создан путем поиска в &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; или XML-документе.</target>
        </trans-unit>
        <trans-unit id="d165304e00442e2fdb141efe014b25a469d208d2" translate="yes" xml:space="preserve">
          <source>The value reported by &lt;code&gt;.height()&lt;/code&gt; is not guaranteed to be accurate when the element or its parent is hidden. To get an accurate value, ensure the element is visible before using &lt;code&gt;.height()&lt;/code&gt;. jQuery will attempt to temporarily show and then re-hide an element in order to measure its dimensions, but this is unreliable and (even when accurate) can significantly impact page performance. This show-and-rehide measurement feature may be removed in a future version of jQuery.</source>
          <target state="translated">Значение, сообщаемое &lt;code&gt;.height()&lt;/code&gt; , не гарантирует точность, если элемент или его родительский элемент скрыты. Чтобы получить точное значение, перед использованием &lt;code&gt;.height()&lt;/code&gt; убедитесь, что элемент виден . jQuery попытается временно показать, а затем снова скрыть элемент, чтобы измерить его размеры, но это ненадежно и (даже если оно точно) может значительно повлиять на производительность страницы. Эта функция измерения показа и скрытия может быть удалена в будущей версии jQuery.</target>
        </trans-unit>
        <trans-unit id="8c0af6f379e115697c7e674c117df786f0e63a85" translate="yes" xml:space="preserve">
          <source>The value reported by &lt;code&gt;.innerHeight()&lt;/code&gt; is not guaranteed to be accurate when the element or its parent is hidden. To get an accurate value, ensure the element is visible before using &lt;code&gt;.innerHeight()&lt;/code&gt;. jQuery will attempt to temporarily show and then re-hide an element in order to measure its dimensions, but this is unreliable and (even when accurate) can significantly impact page performance. This show-and-rehide measurement feature may be removed in a future version of jQuery.</source>
          <target state="translated">Не гарантируется точность значения, сообщаемого &lt;code&gt;.innerHeight()&lt;/code&gt; если элемент или его родительский элемент скрыты. Чтобы получить точное значение, перед использованием &lt;code&gt;.innerHeight()&lt;/code&gt; убедитесь, что элемент виден . jQuery попытается временно показать, а затем снова скрыть элемент, чтобы измерить его размеры, но это ненадежно и (даже если оно точно) может значительно повлиять на производительность страницы. Эта функция измерения показа и скрытия может быть удалена в будущей версии jQuery.</target>
        </trans-unit>
        <trans-unit id="8991a4ea8bbeb4de8eb903eec32a3d76ab3261d6" translate="yes" xml:space="preserve">
          <source>The value reported by &lt;code&gt;.innerWidth()&lt;/code&gt; is not guaranteed to be accurate when the element or its parent is hidden. To get an accurate value, ensure the element is visible before using &lt;code&gt;.innerWidth()&lt;/code&gt;. jQuery will attempt to temporarily show and then re-hide an element in order to measure its dimensions, but this is unreliable and (even when accurate) can significantly impact page performance. This show-and-rehide measurement feature may be removed in a future version of jQuery.</source>
          <target state="translated">Не гарантируется, что значение, сообщаемое &lt;code&gt;.innerWidth()&lt;/code&gt; будет точным, если элемент или его родительский элемент скрыт. Чтобы получить точное значение, перед использованием &lt;code&gt;.innerWidth()&lt;/code&gt; убедитесь, что элемент виден . jQuery попытается временно показать, а затем снова скрыть элемент, чтобы измерить его размеры, но это ненадежно и (даже если оно точно) может значительно повлиять на производительность страницы. Эта функция измерения показа и скрытия может быть удалена в будущей версии jQuery.</target>
        </trans-unit>
        <trans-unit id="d91533a4f81b4096f3edfca19014a9026436ec64" translate="yes" xml:space="preserve">
          <source>The value reported by &lt;code&gt;.outerHeight()&lt;/code&gt; is not guaranteed to be accurate when the element or its parent is hidden. To get an accurate value, ensure the element is visible before using &lt;code&gt;.outerHeight()&lt;/code&gt;. jQuery will attempt to temporarily show and then re-hide an element in order to measure its dimensions, but this is unreliable and (even when accurate) can significantly impact page performance. This show-and-rehide measurement feature may be removed in a future version of jQuery.</source>
          <target state="translated">Значение, сообщаемое &lt;code&gt;.outerHeight()&lt;/code&gt; , не может быть гарантированно точным, если элемент или его родительский элемент скрыты. Чтобы получить точное значение, перед использованием &lt;code&gt;.outerHeight()&lt;/code&gt; убедитесь, что элемент виден . jQuery попытается временно показать, а затем снова скрыть элемент, чтобы измерить его размеры, но это ненадежно и (даже если оно точно) может значительно повлиять на производительность страницы. Эта функция измерения показа и скрытия может быть удалена в будущей версии jQuery.</target>
        </trans-unit>
        <trans-unit id="dcd3d5a9284c46e459ea9e01e158794d00a13f65" translate="yes" xml:space="preserve">
          <source>The value reported by &lt;code&gt;.outerWidth()&lt;/code&gt; is not guaranteed to be accurate when the element or its parent is hidden. To get an accurate value, ensure the element is visible before using &lt;code&gt;.outerWidth()&lt;/code&gt;. jQuery will attempt to temporarily show and then re-hide an element in order to measure its dimensions, but this is unreliable and (even when accurate) can significantly impact page performance. This show-and-rehide measurement feature may be removed in a future version of jQuery.</source>
          <target state="translated">Значение, сообщаемое &lt;code&gt;.outerWidth()&lt;/code&gt; , не гарантирует точность, если элемент или его родительский элемент скрыт. Чтобы получить точное значение, перед использованием &lt;code&gt;.outerWidth()&lt;/code&gt; убедитесь, что элемент виден . jQuery попытается временно показать, а затем снова скрыть элемент, чтобы измерить его размеры, но это ненадежно и (даже если оно точно) может значительно повлиять на производительность страницы. Эта функция измерения показа и скрытия может быть удалена в будущей версии jQuery.</target>
        </trans-unit>
        <trans-unit id="2ae90c5e2d8c736238c1834e07b1b20df9da99b3" translate="yes" xml:space="preserve">
          <source>The value reported by &lt;code&gt;.width()&lt;/code&gt; is not guaranteed to be accurate when the element or its parent is hidden. To get an accurate value, ensure the element is visible before using &lt;code&gt;.width()&lt;/code&gt;. jQuery will attempt to temporarily show and then re-hide an element in order to measure its dimensions, but this is unreliable and (even when accurate) can significantly impact page performance. This show-and-rehide measurement feature may be removed in a future version of jQuery.</source>
          <target state="translated">Значение, сообщаемое &lt;code&gt;.width()&lt;/code&gt; , не гарантирует точность, когда элемент или его родительский элемент скрыт. Чтобы получить точное значение, перед использованием &lt;code&gt;.width()&lt;/code&gt; убедитесь, что элемент виден . jQuery попытается временно показать, а затем снова скрыть элемент, чтобы измерить его размеры, но это ненадежно и (даже если оно точно) может значительно повлиять на производительность страницы. Эта функция измерения показа-и-повторного скрытия может быть удалена в будущей версии jQuery.</target>
        </trans-unit>
        <trans-unit id="4b826fb647f77daf90366e276f5a2041c3eea0d6" translate="yes" xml:space="preserve">
          <source>The value to be tested.</source>
          <target state="translated">Значение,подлежащее проверке.</target>
        </trans-unit>
        <trans-unit id="5f9706fe37a21ebb4f5356314e9dbb0f193612de" translate="yes" xml:space="preserve">
          <source>The value to search for.</source>
          <target state="translated">Значение для поиска.</target>
        </trans-unit>
        <trans-unit id="df08275a2c09a868605d7342becb61e11202ec4a" translate="yes" xml:space="preserve">
          <source>The values of &lt;code&gt;recursiveEncoded&lt;/code&gt; and &lt;code&gt;recursiveDecoded&lt;/code&gt; are alerted as follows:</source>
          <target state="translated">Значения &lt;code&gt;recursiveEncoded&lt;/code&gt; и &lt;code&gt;recursiveDecoded&lt;/code&gt; предупреждаются следующим образом:</target>
        </trans-unit>
        <trans-unit id="19e0e1cb47a895c4adce508484a0fbdad4d1c662" translate="yes" xml:space="preserve">
          <source>The values of &lt;code&gt;shallowEncoded&lt;/code&gt; and &lt;code&gt;shallowDecoded&lt;/code&gt; are alerted as follows:</source>
          <target state="translated">Значения &lt;code&gt;shallowEncoded&lt;/code&gt; и &lt;code&gt;shallowDecoded&lt;/code&gt; предупреждаются следующим образом:</target>
        </trans-unit>
        <trans-unit id="56a99608838cb4e83a0ff0bacdd7885d4ca584ef" translate="yes" xml:space="preserve">
          <source>The variation you choose is generally a matter of style or convenience.</source>
          <target state="translated">Выбранный вами вариант,как правило,зависит от стиля или удобства.</target>
        </trans-unit>
        <trans-unit id="98b4a5d36b3f75dae7b5b98ef86f8721c4b2115f" translate="yes" xml:space="preserve">
          <source>The vertical scroll position is the same as the number of pixels that are hidden from view above the scrollable area. If the scroll bar is at the very top, or if the element is not scrollable, this number will be &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Положение вертикальной прокрутки совпадает с количеством пикселей, которые скрыты от просмотра над прокручиваемой областью. Если полоса прокрутки находится на самом верху, или если элемент не прокручивается, это число будет &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="502041741bb29d2d0ce2d7cb3f9f058410872bd0" translate="yes" xml:space="preserve">
          <source>The vertical scroll position is the same as the number of pixels that are hidden from view above the scrollable area. Setting the &lt;code&gt;scrollTop&lt;/code&gt; positions the vertical scroll of each matched element.</source>
          <target state="translated">Положение вертикальной прокрутки совпадает с количеством пикселей, которые скрыты от просмотра над прокручиваемой областью. Установка &lt;code&gt;scrollTop&lt;/code&gt; позиционирует вертикальную прокрутку каждого совпадающего элемента.</target>
        </trans-unit>
        <trans-unit id="68009f554546520daab11a31781a53314e2258bf" translate="yes" xml:space="preserve">
          <source>Their width and height are explicitly set to 0.</source>
          <target state="translated">Их ширина и высота явно установлены на 0.</target>
        </trans-unit>
        <trans-unit id="51a6b9ab62274f73e087c9eaa4c7881cd846e98d" translate="yes" xml:space="preserve">
          <source>Thenable</source>
          <target state="translated">Thenable</target>
        </trans-unit>
        <trans-unit id="bba170ab9f1988f7e0b5177b2872e6c65a73fd8b" translate="yes" xml:space="preserve">
          <source>There are lot of plugins that leverage jQuery's selectors in other ways. The validation plugin accepts a selector to specify a dependency, whether an input is required or not:</source>
          <target state="translated">Есть много плагинов,которые используют селекторы jQuery другими способами.Плагин проверки принимает селектор для указания зависимости,требуется ли ввод данных или нет:</target>
        </trans-unit>
        <trans-unit id="2ce0d5f676018adf414ee9fb049b9a0ccdf3b569" translate="yes" xml:space="preserve">
          <source>There are shorthand methods for some events such as &lt;a href=&quot;click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; that can be used to attach or trigger event handlers. For a complete list of shorthand methods, see the &lt;a href=&quot;category/events&quot;&gt;events category&lt;/a&gt;.</source>
          <target state="translated">Существуют сокращенные методы для некоторых событий, таких как &lt;a href=&quot;click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; которые можно использовать для присоединения или запуска обработчиков событий. Полный список сокращенных методов см. В &lt;a href=&quot;category/events&quot;&gt;категории событий&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0b6fda1d75631a26b3fa9aabdbc4d04428691220" translate="yes" xml:space="preserve">
          <source>There are shorthand methods for some standard browser events such as &lt;a href=&quot;click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; that can be used to attach or trigger event handlers. For a complete list of shorthand methods, see the &lt;a href=&quot;category/events&quot;&gt;events category&lt;/a&gt;.</source>
          <target state="translated">Существуют сокращенные методы для некоторых стандартных событий браузера, таких как &lt;a href=&quot;click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; которые можно использовать для присоединения или запуска обработчиков событий. Полный список сокращенных методов см. В &lt;a href=&quot;category/events&quot;&gt;категории событий&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d63711a0adcaf5fcd03bba3c3b147f0181be2820" translate="yes" xml:space="preserve">
          <source>There are two specific use cases for which jQuery.sub() was created. The first was for providing a painless way of overriding jQuery methods without completely destroying the original methods and another was for helping to do encapsulation and basic namespacing for jQuery plugins.</source>
          <target state="translated">Существует два конкретных случая использования,для которых была создана функция jQuery.sub().Первый-для обеспечения безболезненного переопределения методов jQuery без полного уничтожения исходных методов,а второй-для помощи в инкапсуляции и базовом интервале имён для плагинов jQuery.</target>
        </trans-unit>
        <trans-unit id="f92882ffa32ba59639260af20d453135f132e2a1" translate="yes" xml:space="preserve">
          <source>There are two types of events:</source>
          <target state="translated">Есть два типа событий:</target>
        </trans-unit>
        <trans-unit id="d166c8f570311888ce1e4d2c5d8012b91e58818d" translate="yes" xml:space="preserve">
          <source>There is also &lt;code&gt;$(document).on( &quot;ready&quot;, handler )&lt;/code&gt;, &lt;em&gt;deprecated as of jQuery 1.8 and removed in jQuery 3.0&lt;/em&gt;. Note that if the DOM becomes ready before this event is attached, the handler &lt;em&gt;will not be executed&lt;/em&gt;.</source>
          <target state="translated">Также существует &lt;code&gt;$(document).on( &quot;ready&quot;, handler )&lt;/code&gt; , который &lt;em&gt;устарел в jQuery 1.8 и удален в jQuery 3.0&lt;/em&gt; . Обратите внимание, что если DOM будет готов до того, как это событие будет прикреплено, обработчик &lt;em&gt;не будет выполнен&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="b2adf959188684f5fb25abf351d01408eb8540a8" translate="yes" xml:space="preserve">
          <source>These are callbacks that you can subscribe to within the Ajax request object, like so:</source>
          <target state="translated">Это обратные вызовы,на которые вы можете подписаться внутри объекта запроса Ajax:</target>
        </trans-unit>
        <trans-unit id="3bb9908eefdc7f5d52352839085856ff586bef42" translate="yes" xml:space="preserve">
          <source>These can be added as callbacks to a &lt;code&gt;$.Callbacks&lt;/code&gt; list and invoked as follows:</source>
          <target state="translated">Их можно добавить как обратные вызовы в список &lt;code&gt;$.Callbacks&lt;/code&gt; и вызвать следующим образом:</target>
        </trans-unit>
        <trans-unit id="f3045922e3813d89836a97e9e2f7086202e8607c" translate="yes" xml:space="preserve">
          <source>These events are triggered on the &lt;code&gt;document&lt;/code&gt;, calling any handlers which may be listening. You can listen for these events like so:</source>
          <target state="translated">Эти события инициируются в &lt;code&gt;document&lt;/code&gt; , вызывая любые обработчики, которые могут его прослушивать. Вы можете прослушивать эти события так:</target>
        </trans-unit>
        <trans-unit id="7e88bd0cd93766cee13f54b1e8fa0d73ba477db4" translate="yes" xml:space="preserve">
          <source>These functions assist with common idioms encountered when performing Ajax tasks.</source>
          <target state="translated">Эти функции помогают справиться с общими идиомами,встречающимися при выполнении задач Ajax.</target>
        </trans-unit>
        <trans-unit id="bbe40564276f220415e365fe124b886a4b1abcfa" translate="yes" xml:space="preserve">
          <source>These methods adjust the opacity of elements.</source>
          <target state="translated">Эти методы регулируют непрозрачность элементов.</target>
        </trans-unit>
        <trans-unit id="a5dceab1cd6454e730b2a57d9f7b0169f076d3c5" translate="yes" xml:space="preserve">
          <source>These methods allow us to associate arbitrary data with specific DOM elements.</source>
          <target state="translated">Эти методы позволяют ассоциировать произвольные данные с конкретными элементами DOM.</target>
        </trans-unit>
        <trans-unit id="4066f49a0950cecd91b201b26d1de51efbe9229a" translate="yes" xml:space="preserve">
          <source>These methods allow us to delete elements from the DOM.</source>
          <target state="translated">Эти методы позволяют удалять элементы из DOM.</target>
        </trans-unit>
        <trans-unit id="83101d88ab9c3dabba90bc0af8ad464da3b6ec6d" translate="yes" xml:space="preserve">
          <source>These methods allow us to insert new content inside an existing element.</source>
          <target state="translated">Эти методы позволяют вставлять новое содержимое в существующий элемент.</target>
        </trans-unit>
        <trans-unit id="f267e40060626a06189c0c1eee775807f476e368" translate="yes" xml:space="preserve">
          <source>These methods allow us to insert new content outside an existing element.</source>
          <target state="translated">Эти методы позволяют вставлять новое содержание вне существующего элемента.</target>
        </trans-unit>
        <trans-unit id="f29086c3aa4bd1a27da2e9e184fe031e4bfd5a02" translate="yes" xml:space="preserve">
          <source>These methods allow us to insert new content surrounding existing content.</source>
          <target state="translated">Эти методы позволяют вставлять новое содержимое вокруг существующего.</target>
        </trans-unit>
        <trans-unit id="fc604750ce03230768923f16f804981342c1e94d" translate="yes" xml:space="preserve">
          <source>These methods allow you to create effects that are not provided &quot;out of the box&quot; by jQuery.</source>
          <target state="translated">Эти методы позволяют создавать эффекты,которые не предоставляются &quot;из коробки&quot; с помощью jQuery.</target>
        </trans-unit>
        <trans-unit id="f0625f6d74b36be39a6d19f27d45b0219d041a46" translate="yes" xml:space="preserve">
          <source>These methods and event handlers handle forms and their various elements.</source>
          <target state="translated">Эти методы и обработчики мероприятий обрабатывают формы и их различные элементы.</target>
        </trans-unit>
        <trans-unit id="18b8674db3e233679cba9aa8c56ce17e71105fda" translate="yes" xml:space="preserve">
          <source>These methods are used to get and set the CSS dimensions for the various properties.</source>
          <target state="translated">Эти методы используются для получения и установки размеров CSS для различных свойств.</target>
        </trans-unit>
        <trans-unit id="21d116605cbd8c6c5ab76a3a490e960c52c3b187" translate="yes" xml:space="preserve">
          <source>These methods are used to register behaviors to take effect when the user interacts with the browser, and to further manipulate those registered behaviors.</source>
          <target state="translated">Эти методы используются для регистрации поведения,которое вступает в силу,когда пользователь взаимодействует с браузером,и для дальнейшего манипулирования зарегистрированным поведением.</target>
        </trans-unit>
        <trans-unit id="6e156b975a013e00c555b91859d1720dc0cebe05" translate="yes" xml:space="preserve">
          <source>These methods are used to remove content from the DOM and replace it with new content.</source>
          <target state="translated">Эти методы используются для удаления содержимого с флэш-накопителя и замены его новым содержимым.</target>
        </trans-unit>
        <trans-unit id="76059f80300cb0ffdcfcb66416bfc17f849566e5" translate="yes" xml:space="preserve">
          <source>These methods can be used to make arbitrary Ajax requests.</source>
          <target state="translated">Эти методы могут быть использованы для выполнения произвольных Ajax запросов.</target>
        </trans-unit>
        <trans-unit id="eb1001d40d2d517229663551d85a88e9dba991d4" translate="yes" xml:space="preserve">
          <source>These methods get and set CSS-related properties of elements.</source>
          <target state="translated">Эти методы получают и задают CSS-свойства элементов.</target>
        </trans-unit>
        <trans-unit id="1f1b0bb6f70a2eb3ccb85e1859247cdd66807aa2" translate="yes" xml:space="preserve">
          <source>These methods get and set DOM attributes of elements</source>
          <target state="translated">Эти методы получают и устанавливают атрибуты DOM элементов</target>
        </trans-unit>
        <trans-unit id="4b24afb95d5db312e3e6e541dcda0c7a8cbc8e06" translate="yes" xml:space="preserve">
          <source>These methods get and set DOM attributes of elements.</source>
          <target state="translated">Эти методы получают и устанавливают DOM атрибуты элементов.</target>
        </trans-unit>
        <trans-unit id="8c704e4ccc42f4db139bb3dcca8c837ee5ce4c92" translate="yes" xml:space="preserve">
          <source>These methods inspect and manipulate the CSS classes assigned to elements.</source>
          <target state="translated">Эти методы проверяют и манипулируют классами CSS,присвоенными элементам.</target>
        </trans-unit>
        <trans-unit id="1af509504d5f4d97c437b425452c5adcf074987f" translate="yes" xml:space="preserve">
          <source>These methods perform the more common types of Ajax requests in less code.</source>
          <target state="translated">Эти методы выполняют более распространенные типы Ajax-запросов в меньшем коде.</target>
        </trans-unit>
        <trans-unit id="152784201cd6ea8db24c609aade9c011ad0e3811" translate="yes" xml:space="preserve">
          <source>These methods register handlers to be called when certain events, such as initialization or completion, take place for any Ajax request on the page. The global events are fired on each Ajax request if the &lt;code&gt;global&lt;/code&gt; property in &lt;a href=&quot;../../jquery.ajaxsetup&quot;&gt;&lt;code&gt;jQuery.ajaxSetup()&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;, which it is by default. &lt;em&gt;Note: Global events are never fired for cross-domain script or JSONP requests, regardless of the value of &lt;code&gt;global&lt;/code&gt;.&lt;/em&gt;</source>
          <target state="translated">Эти методы регистрируют обработчики, которые должны вызываться при определенных событиях, таких как инициализация или завершение, для любого запроса Ajax на странице. Глобальные события &lt;a href=&quot;../../jquery.ajaxsetup&quot;&gt; &lt;code&gt;jQuery.ajaxSetup()&lt;/code&gt; &lt;/a&gt; при каждом запросе Ajax, если &lt;code&gt;global&lt;/code&gt; свойство в jQuery.ajaxSetup () имеет значение &lt;code&gt;true&lt;/code&gt; , что и есть по умолчанию. &lt;em&gt;Примечание. Глобальные события никогда не запускаются для междоменного скрипта или запросов JSONP, независимо от значения &lt;code&gt;global&lt;/code&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3e286a3fadf3605299e908d967349e6755901ddd" translate="yes" xml:space="preserve">
          <source>These properties are associated with the global jQuery object.</source>
          <target state="translated">Эти свойства связаны с глобальным объектом jQuery.</target>
        </trans-unit>
        <trans-unit id="646e8206dbfc5befa834843d4e6c16f08a90de6b" translate="yes" xml:space="preserve">
          <source>They are form elements with &lt;code&gt;type=&quot;hidden&quot;&lt;/code&gt;.</source>
          <target state="translated">Это элементы формы с &lt;code&gt;type=&quot;hidden&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6d3a2f20c508cd89d045ae0802bb6d4d4855106f" translate="yes" xml:space="preserve">
          <source>They have a CSS &lt;code&gt;display&lt;/code&gt; value of &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">У них есть CSS значение &lt;code&gt;display&lt;/code&gt; &lt;code&gt;none&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76e00a420ece6eeb2a7c52a9b7fe06713897dd16" translate="yes" xml:space="preserve">
          <source>This API is &lt;code&gt;deprecated&lt;/code&gt; as of jQuery 1.7 and &lt;code&gt;removed&lt;/code&gt; as of jQuery 1.8; please use &lt;a href=&quot;deferred.state&quot;&gt;&lt;code&gt;deferred.state()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Этот API &lt;code&gt;deprecated&lt;/code&gt; с jQuery 1.7 и &lt;code&gt;removed&lt;/code&gt; с jQuery 1.8; используйте вместо него &lt;a href=&quot;deferred.state&quot;&gt; &lt;code&gt;deferred.state()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="98f1d9eeba8b49c650019ed75b666fd267d8086c" translate="yes" xml:space="preserve">
          <source>This alteration to the code will cause the third and sixth list items to be highlighted, as it uses the modulus operator (&lt;code&gt;%&lt;/code&gt;) to select every item with an &lt;code&gt;index&lt;/code&gt; value that, when divided by 3, has a remainder of &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">Это изменение кода приведет к выделению третьего и шестого элементов списка, так как он использует оператор модуля ( &lt;code&gt;%&lt;/code&gt; ) для выбора каждого элемента со значением &lt;code&gt;index&lt;/code&gt; которое при делении на 3 имеет остаток &lt;code&gt;2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d51b3db33fc47e6a544f2294c10f27126554ddf1" translate="yes" xml:space="preserve">
          <source>This behavior is expected. &lt;strong&gt;As of jQuery 1.9.0&lt;/strong&gt; (and unless using the &lt;a href=&quot;https://github.com/jquery/jquery-migrate/#readme&quot;&gt;jQuery Migrate plugin&lt;/a&gt;), &lt;code&gt;jQuery()&lt;/code&gt; requires the HTML string to start with a &lt;code&gt;&amp;lt;&lt;/code&gt; (i.e text nodes cannot appear at the front of the HTML string).</source>
          <target state="translated">Это ожидаемое поведение. &lt;strong&gt;Начиная с jQuery 1.9.0&lt;/strong&gt; (и если не используется &lt;a href=&quot;https://github.com/jquery/jquery-migrate/#readme&quot;&gt;плагин jQuery Migrate&lt;/a&gt; ), &lt;code&gt;jQuery()&lt;/code&gt; требует, чтобы строка HTML начиналась с &lt;code&gt;&amp;lt;&lt;/code&gt; (т.е. текстовые узлы не могут появляться в начале строки HTML).</target>
        </trans-unit>
        <trans-unit id="4724d0febf83f4df758178179a0cf1d84270ce5e" translate="yes" xml:space="preserve">
          <source>This can then be used by parts of your application to publish and subscribe to events of interest quite easily:</source>
          <target state="translated">Это может быть использовано частями вашей заявки для публикации и подписки на события,представляющие интерес,довольно легко:</target>
        </trans-unit>
        <trans-unit id="759df6494bc16039dfa401cc721d60dc40be0bc2" translate="yes" xml:space="preserve">
          <source>This causes all of them to be replaced:</source>
          <target state="translated">Это приводит к тому,что все они должны быть заменены:</target>
        </trans-unit>
        <trans-unit id="1d9b72538af379ba557b38c88c4d6e1965c43267" translate="yes" xml:space="preserve">
          <source>This chain searches for items with the class &lt;code&gt;foo&lt;/code&gt; within the first list only and turns their backgrounds red. Then &lt;code&gt;end()&lt;/code&gt; returns the object to its state before the call to &lt;code&gt;find()&lt;/code&gt;, so the second &lt;code&gt;find()&lt;/code&gt; looks for '.bar' inside &lt;code&gt;&amp;lt;ul class=&quot;first&quot;&amp;gt;&lt;/code&gt;, not just inside that list's &lt;code&gt;&amp;lt;li class=&quot;foo&quot;&amp;gt;&lt;/code&gt;, and turns the matching elements' backgrounds green. The net result is that items 1 and 3 of the first list have a colored background, and none of the items from the second list do.</source>
          <target state="translated">Эта цепочка ищет элементы с классом &lt;code&gt;foo&lt;/code&gt; только в первом списке и окрашивает их фон в красный цвет. Затем &lt;code&gt;end()&lt;/code&gt; возвращает объект в его состояние до вызова &lt;code&gt;find()&lt;/code&gt; , поэтому второй &lt;code&gt;find()&lt;/code&gt; ищет '.bar' внутри &lt;code&gt;&amp;lt;ul class=&quot;first&quot;&amp;gt;&lt;/code&gt; , а не только внутри этого списка &lt;code&gt;&amp;lt;li class=&quot;foo&quot;&amp;gt;&lt;/code&gt; и делает фон соответствующих элементов зеленым. В результате элементы 1 и 3 первого списка имеют цветной фон, а элементы второго списка - нет.</target>
        </trans-unit>
        <trans-unit id="e5434cf43bec6b10cb2d62ec811119dfe5ec76fc" translate="yes" xml:space="preserve">
          <source>This code first retrieves the contents of &lt;code&gt;&amp;lt;div class=&quot;container&quot;&amp;gt;&lt;/code&gt; and then filters it for text nodes, which are wrapped in paragraph tags. This is accomplished by testing the &lt;a href=&quot;https://developer.mozilla.org/docs/en/DOM/Node.nodeType&quot;&gt;&lt;code&gt;.nodeType&lt;/code&gt; property&lt;/a&gt; of the element. This DOM property holds a numeric code indicating the node's type; text nodes use the code 3. The contents are again filtered, this time for &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; elements, and these elements are removed.</source>
          <target state="translated">Этот код сначала извлекает содержимое &lt;code&gt;&amp;lt;div class=&quot;container&quot;&amp;gt;&lt;/code&gt; , а затем фильтрует его на предмет текстовых узлов, заключенных в теги абзаца. Это достигается путем тестирования &lt;a href=&quot;https://developer.mozilla.org/docs/en/DOM/Node.nodeType&quot;&gt;свойства &lt;/a&gt; &lt;code&gt;.nodeType&lt;/code&gt; элемента. Это свойство DOM содержит числовой код, указывающий тип узла; текстовые узлы используют код 3. Содержимое снова фильтруется, на этот раз для элементов &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; , и эти элементы удаляются.</target>
        </trans-unit>
        <trans-unit id="63d36dce5d277ad627544d533e1ccbe9b3be2c55" translate="yes" xml:space="preserve">
          <source>This code will alter the first list item only, as it contains exactly one &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; tag. Within the filter function, &lt;code&gt;this&lt;/code&gt; refers to each DOM element in turn. The parameter passed to the function tells us the index of that DOM element within the set matched by the jQuery object.</source>
          <target state="translated">Этот код изменит только первый элемент списка, поскольку он содержит ровно один &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; . В функции фильтра &lt;code&gt;this&lt;/code&gt; относится к каждому элементу DOM по очереди. Параметр, переданный функции, сообщает нам индекс этого элемента DOM в наборе, соответствующем объекту jQuery.</target>
        </trans-unit>
        <trans-unit id="21f659be994ef4d8b978b3f4fb6ebf487ff90758" translate="yes" xml:space="preserve">
          <source>This code will cause the element with an ID of &lt;code&gt;foo&lt;/code&gt; to respond to the &lt;code&gt;click&lt;/code&gt; event. When a user clicks inside this element thereafter, the alert will be shown.</source>
          <target state="translated">Этот код заставит элемент с идентификатором &lt;code&gt;foo&lt;/code&gt; реагировать на событие &lt;code&gt;click&lt;/code&gt; . Когда пользователь после этого щелкает внутри этого элемента, будет показано предупреждение.</target>
        </trans-unit>
        <trans-unit id="9779a0bbf174d5713472f1da50aba3ef40e7aa3a" translate="yes" xml:space="preserve">
          <source>This difference in behavior between &lt;code&gt;$( &quot;:text&quot; )&lt;/code&gt; and &lt;code&gt;$( &quot;[type=text]&quot; )&lt;/code&gt;, can be seen below:</source>
          <target state="translated">Эту разницу в поведении между &lt;code&gt;$( &quot;:text&quot; )&lt;/code&gt; и &lt;code&gt;$( &quot;[type=text]&quot; )&lt;/code&gt; можно увидеть ниже:</target>
        </trans-unit>
        <trans-unit id="6ad2fb9697b7b6107b3b4e5ec78fe97d5dd681be" translate="yes" xml:space="preserve">
          <source>This event behaves the same as the complete event and will be triggered every time an Ajax request finishes.</source>
          <target state="translated">Это событие ведет себя так же,как и полное событие,и будет вызываться каждый раз при завершении запроса Ajax.</target>
        </trans-unit>
        <trans-unit id="86b7a0fb40d5a08c286f9ff0d205c5d4c063ac8a" translate="yes" xml:space="preserve">
          <source>This event is also only called if the request was successful.</source>
          <target state="translated">Это событие также вызывается только в том случае,если запрос был успешным.</target>
        </trans-unit>
        <trans-unit id="6e4ad8a56d7bcd30bea7ca58205cb27a97657804" translate="yes" xml:space="preserve">
          <source>This event is available so that scripts can perform cleanup when the user leaves the page. Most browsers will ignore calls to &lt;code&gt;alert()&lt;/code&gt;, &lt;code&gt;confirm()&lt;/code&gt; and &lt;code&gt;prompt()&lt;/code&gt; inside the event handler. The string you return may be used in a confirmation dialog, but not all browsers support this. It is not possible to cancel the &lt;code&gt;unload&lt;/code&gt; event with &lt;code&gt;.preventDefault()&lt;/code&gt;.</source>
          <target state="translated">Это событие доступно, чтобы сценарии могли выполнять очистку, когда пользователь покидает страницу. Большинство браузеров игнорируют вызовы &lt;code&gt;alert()&lt;/code&gt; , &lt;code&gt;confirm()&lt;/code&gt; и &lt;code&gt;prompt()&lt;/code&gt; внутри обработчика событий. Возвращаемая вами строка может использоваться в диалоговом окне подтверждения, но не все браузеры поддерживают это. Отменить событие &lt;code&gt;unload&lt;/code&gt; с помощью &lt;code&gt;.preventDefault()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2bef78d980d6837983d17a683822d89d8fd86d9" translate="yes" xml:space="preserve">
          <source>This event is called regardless of if the request was successful, or not. You will always receive a complete callback, even for synchronous requests.</source>
          <target state="translated">Это событие вызывается независимо от того,был ли запрос успешным или нет.Вы всегда получите полный обратный вызов,даже для синхронных запросов.</target>
        </trans-unit>
        <trans-unit id="bc5a1a9dcb7987f22cab7aa53e522431522d89c3" translate="yes" xml:space="preserve">
          <source>This event is only called if an error occurred with the request (you can never have both an error and a success callback with a request).</source>
          <target state="translated">Это событие вызывается только в том случае,если с запросом произошла ошибка (вы никогда не можете иметь как ошибку,так и успешный обратный вызов с запросом).</target>
        </trans-unit>
        <trans-unit id="afae7d93c59f37ce631ca4f57c312d014cc82583" translate="yes" xml:space="preserve">
          <source>This event is only called if the request was successful (no errors from the server, no errors with the data).</source>
          <target state="translated">Это событие вызывается только в том случае,если запрос был успешным (нет ошибок с сервера,нет ошибок с данными).</target>
        </trans-unit>
        <trans-unit id="48bbba3ab6f8d076f052cc031a6e20283275fed7" translate="yes" xml:space="preserve">
          <source>This event is primarily useful for ensuring that the primary button was used to begin a drag operation; if ignored, strange results can occur when the user attempts to use a context menu. While the middle and right buttons can be detected with these properties, this is not reliable. In Opera and Safari, for example, right mouse button clicks are not detectable by default.</source>
          <target state="translated">Это событие в первую очередь полезно для того,чтобы убедиться,что первичная кнопка была использована для начала операции перетаскивания;если ее проигнорировать,могут появиться странные результаты,когда пользователь пытается использовать контекстное меню.Хотя средние и правые кнопки могут быть обнаружены с помощью этих свойств,это не является надежным.В Opera и Safari,например,щелчки правой кнопки мыши не обнаруживаются по умолчанию.</target>
        </trans-unit>
        <trans-unit id="683d1abf76fd5c3a88d0f22a26284cfa337c9fee" translate="yes" xml:space="preserve">
          <source>This event is triggered if an Ajax request is started and no other Ajax requests are currently running.</source>
          <target state="translated">Это событие срабатывает,если запрос Ajax запущен,а другие запросы Ajax в настоящее время не выполняются.</target>
        </trans-unit>
        <trans-unit id="ac253698b4acfcb5905a2aa79e449ffacacdffda" translate="yes" xml:space="preserve">
          <source>This event method is described in the &lt;a href=&quot;https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/events.html#Events-Event-isPropagationStopped&quot;&gt;W3C DOM Level 3 specification&lt;/a&gt;.</source>
          <target state="translated">Этот метод события описан в &lt;a href=&quot;https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/events.html#Events-Event-isPropagationStopped&quot;&gt;спецификации W3C DOM Level 3&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="69465beb0b30a5a3694e6ad878fdce06864dca13" translate="yes" xml:space="preserve">
          <source>This event type can cause many headaches due to event bubbling. For instance, when the mouse pointer moves out of the</source>
          <target state="translated">Этот тип события может вызвать много головной боли из-за пузыря события.Например,когда указатель мыши движется из</target>
        </trans-unit>
        <trans-unit id="db381105282fc06aa6e1dc99496275fd5171657d" translate="yes" xml:space="preserve">
          <source>This event type can cause many headaches due to event bubbling. For instance, when the mouse pointer moves over the</source>
          <target state="translated">Этот тип события может вызвать много головной боли из-за пузыря события.Например,когда указатель мыши движется над</target>
        </trans-unit>
        <trans-unit id="dc4d6bfc67551f643882201c85a8addaea0b978f" translate="yes" xml:space="preserve">
          <source>This event will likely be used together with the &lt;a href=&quot;focusin&quot;&gt;focusin&lt;/a&gt; event.</source>
          <target state="translated">Это событие, скорее всего, будет использоваться вместе с событием &lt;a href=&quot;focusin&quot;&gt;focusin&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f361a07dcfc38de754ec576d34637ea20d8dd245" translate="yes" xml:space="preserve">
          <source>This event will likely be used together with the &lt;a href=&quot;focusout&quot;&gt;focusout&lt;/a&gt; event.</source>
          <target state="translated">Это событие, вероятно, будет использоваться вместе с событием &lt;a href=&quot;focusout&quot;&gt;фокусировки&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b981a320ef7be0421529dedac14943e840100a6a" translate="yes" xml:space="preserve">
          <source>This event, which is triggered before an Ajax request is started, allows you to modify the XMLHttpRequest object (setting additional headers, if need be.)</source>
          <target state="translated">Это событие,которое срабатывает перед запуском Ajax-запроса,позволяет модифицировать объект XMLHttpRequest (при необходимости установив дополнительные заголовки).</target>
        </trans-unit>
        <trans-unit id="649a216d21a666f54f90151e9ba0e11a69914df4" translate="yes" xml:space="preserve">
          <source>This example causes elements to be hidden with a sliding animation when clicked. Because the handler receives the clicked item in the &lt;code&gt;this&lt;/code&gt; keyword as a bare DOM element, the element must be passed to the &lt;code&gt;$()&lt;/code&gt; function before applying jQuery methods to it.</source>
          <target state="translated">В этом примере при нажатии элементы скрываются со скользящей анимацией. Поскольку обработчик получает выбранный элемент в ключевом слове &lt;code&gt;this&lt;/code&gt; как простой элемент DOM, этот элемент должен быть передан в функцию &lt;code&gt;$()&lt;/code&gt; перед применением к нему методов jQuery.</target>
        </trans-unit>
        <trans-unit id="a7fd0c4dc67ac419ff430abce7fa9695943e63d3" translate="yes" xml:space="preserve">
          <source>This example demonstrates that the selected element replaces the target by being moved from its old location, not by being cloned.</source>
          <target state="translated">Этот пример демонстрирует,что выбранный элемент заменяет цель,перемещая ее из старого местоположения,а не клонируя.</target>
        </trans-unit>
        <trans-unit id="63bb26e5bf5293094a86ba3a3d38220ddafd7b42" translate="yes" xml:space="preserve">
          <source>This example fetches the requested HTML snippet and inserts it on the page.</source>
          <target state="translated">Этот пример извлекает запрашиваемый HTML-фрагмент и вставляет его на страницу.</target>
        </trans-unit>
        <trans-unit id="e966acc2b9894ee5016653b5a8190f3e9cb6a381" translate="yes" xml:space="preserve">
          <source>This example inserts a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; after each paragraph, with each new &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; containing the class name(s) of its preceding paragraph.</source>
          <target state="translated">В этом примере &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; вставляется после каждого абзаца, причем каждый новый &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; содержит имя (я) класса предыдущего абзаца.</target>
        </trans-unit>
        <trans-unit id="1031242a2fd44b0cc801511ac728f2d8b61935d3" translate="yes" xml:space="preserve">
          <source>This example removes leading and trailing whitespace from the values of text inputs with a &quot;tags&quot; class.</source>
          <target state="translated">Этот пример удаляет лидирующие и скользящие пробелы из значений текстовых входов с классом &quot;tags&quot;.</target>
        </trans-unit>
        <trans-unit id="5ebd20fb5abf5bd7afa36f2ff3c0dfa8a59e2351" translate="yes" xml:space="preserve">
          <source>This example removes the class name of the penultimate &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; from the last &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">В этом примере удаляется имя класса предпоследнего &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; из последнего &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3c27e778fa0bccd68397de1040064cb8b4a36924" translate="yes" xml:space="preserve">
          <source>This example sets the widths of the matched elements to incrementally larger values.</source>
          <target state="translated">В этом примере ширина совпадающих элементов устанавливается на инкрементально большее значение.</target>
        </trans-unit>
        <trans-unit id="da29dc6937adf3fba6bebcf394120d5ad06ad979" translate="yes" xml:space="preserve">
          <source>This example will toggle the &lt;code&gt;happy&lt;/code&gt; class for &lt;code&gt;&amp;lt;div class=&quot;foo&quot;&amp;gt;&lt;/code&gt; elements if their parent element has a class of &lt;code&gt;bar&lt;/code&gt;; otherwise, it will toggle the &lt;code&gt;sad&lt;/code&gt; class.</source>
          <target state="translated">В этом примере будет переключаться &lt;code&gt;happy&lt;/code&gt; класс для элементов &lt;code&gt;&amp;lt;div class=&quot;foo&quot;&amp;gt;&lt;/code&gt; , если их родительский элемент имеет класс &lt;code&gt;bar&lt;/code&gt; ; в противном случае он переключит класс &lt;code&gt;sad&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9c3c9f7cf4f3c5da5a6ac47e18ae304f904858d" translate="yes" xml:space="preserve">
          <source>This example, of course, relies on the structure of the JSON file:</source>
          <target state="translated">Этот пример,конечно,опирается на структуру JSON-файла:</target>
        </trans-unit>
        <trans-unit id="a6c772a7fd8f0bccb3ffa2b41a260d712d32edc5" translate="yes" xml:space="preserve">
          <source>This example, using no options, loads the contents of the current page, but does nothing with the result. To use the result, you can implement one of the callback functions.</source>
          <target state="translated">В этом примере,не используя опций,загружается содержимое текущей страницы,но ничего не происходит с результатом.Для использования результата можно реализовать одну из функций обратного вызова.</target>
        </trans-unit>
        <trans-unit id="fad7424a11380e496109bffc09072049878d17ef" translate="yes" xml:space="preserve">
          <source>This extra object is necessary because the response Content-Types and data types never have a strict one-to-one correspondence (hence the regular expression).</source>
          <target state="translated">Этот дополнительный объект необходим,так как ответ Content-Types и типы данных никогда не имеют строгого соответствия один к одному (отсюда и регулярное выражение).</target>
        </trans-unit>
        <trans-unit id="36c0eb7eb7be94f02195c75311b38633e1e5f915" translate="yes" xml:space="preserve">
          <source>This feature is similar to providing a callback function with an animation method, but does not require the callback to be given at the time the animation is performed.</source>
          <target state="translated">Эта функция аналогична обеспечению функции обратного вызова методом анимации,но не требует,чтобы обратный вызов был дан во время выполнения анимации.</target>
        </trans-unit>
        <trans-unit id="1a7aff5a0e4a3efea14d5040037b7f596cdecddc" translate="yes" xml:space="preserve">
          <source>This function behaves just like &lt;code&gt;$( document ).ready()&lt;/code&gt;, in that it should be used to wrap other &lt;code&gt;$()&lt;/code&gt; operations on your page that depend on the DOM being ready. While this function is, technically, chainable, there really isn't much use for chaining against it.</source>
          <target state="translated">Эта функция ведет себя так же, как &lt;code&gt;$( document ).ready()&lt;/code&gt; , в том смысле , что ее следует использовать для обертывания других операций &lt;code&gt;$()&lt;/code&gt; на вашей странице, которые зависят от готовности DOM. Хотя эта функция технически является цепочкой, на самом деле нет особого смысла объединять ее в цепочку.</target>
        </trans-unit>
        <trans-unit id="ab860837486fd3491fc07a9d2477348f5eeffea1" translate="yes" xml:space="preserve">
          <source>This function can also be overwritten in order to bypass certain edge case issues. The default &lt;code&gt;htmlPrefilter&lt;/code&gt; function in jQuery leaves input unmodified since 3.5.0. Older versions would greedily ensure that all tags were XHTML-compliant. This included anything that looked like an HTML tag, but was actually within a string (e.g. &lt;code&gt;&amp;lt;a title=&quot;&amp;lt;div /&amp;gt;&quot;&amp;gt;&amp;lt;&amp;gt;&lt;/code&gt;), leading to potential security issues. For more information, see the &lt;a href=&quot;https://jquery.com/upgrade-guide/3.5/&quot;&gt;jQuery Core 3.5 Upgrade guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46b4646df466700b53a938d86b6af892cceff75" translate="yes" xml:space="preserve">
          <source>This function can also be overwritten in order to bypass certain edge case issues. The default &lt;code&gt;htmlPrefilter&lt;/code&gt; function in jQuery will greedily ensure that all tags are XHTML-compliant. This includes anything that looks like an HTML tag, but is actually within a string (e.g.</source>
          <target state="translated">Эту функцию также можно перезаписать, чтобы обойти некоторые проблемы крайнего случая. Функция &lt;code&gt;htmlPrefilter&lt;/code&gt; по умолчанию в jQuery будет жадно следить за тем, чтобы все теги были совместимы с XHTML. Это включает все, что выглядит как HTML-тег, но на самом деле находится внутри строки (например,</target>
        </trans-unit>
        <trans-unit id="8c4ef947f6f8032dee19f1cbd99e7e0445c77b07" translate="yes" xml:space="preserve">
          <source>This function is used internally to convert form element values into a serialized string representation (See &lt;a href=&quot;serialize&quot;&gt;.serialize()&lt;/a&gt; for more information).</source>
          <target state="translated">Эта функция используется внутри для преобразования значений элементов формы в сериализованное строковое представление ( дополнительную информацию см. В &lt;a href=&quot;serialize&quot;&gt;.serialize ()&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f453c13c3e0328f2dfba47020639f6aaa2044325" translate="yes" xml:space="preserve">
          <source>This global event behaves the same as the local error event.</source>
          <target state="translated">Это глобальное событие ведет себя так же,как и локальная ошибка.</target>
        </trans-unit>
        <trans-unit id="97d93efb8c0c02bc751d2f0c9c622fbf4ecc7ac0" translate="yes" xml:space="preserve">
          <source>This global event is also triggered before the request is run.</source>
          <target state="translated">Это глобальное событие также срабатывает до того,как запрос запущен.</target>
        </trans-unit>
        <trans-unit id="655d42a2d71779ddaf2a047b8bc2718ffee0c8b2" translate="yes" xml:space="preserve">
          <source>This global event is triggered if there are no more Ajax requests being processed.</source>
          <target state="translated">Это глобальное событие срабатывает,если больше не обрабатываются Ajax-запросы.</target>
        </trans-unit>
        <trans-unit id="2f4d3cd0607d268ab25fdd9533e70fde597ea7b3" translate="yes" xml:space="preserve">
          <source>This indicates that the method doesn't only expect an array as the argument, but also specifies the expected type. The notation is borrowed from Java 5's generics notation (or C++ templates).</source>
          <target state="translated">Это указывает на то,что метод не только ожидает в качестве аргумента массив,но и задает ожидаемый тип.Нотация заимствована из нотации генератора Java 5 (или C++шаблонов).</target>
        </trans-unit>
        <trans-unit id="690aa83531b52434d818b32c2f03950ce6592a66" translate="yes" xml:space="preserve">
          <source>This is a playground to see how the selector works with different strings.</source>
          <target state="translated">Это игровая площадка,чтобы посмотреть,как селектор работает с разными строками.</target>
        </trans-unit>
        <trans-unit id="82bfa1ac349f897daa07f3e0c0d021d6694748b9" translate="yes" xml:space="preserve">
          <source>This is a playground to see how the selector works with different strings. Notice that this is different from the :even and :odd which have no regard for parent and just filter the list of elements to every other one. The :nth-child, however, counts the index of the child to its particular parent. In any case, it's easier to see than explain so...</source>
          <target state="translated">Это игровая площадка,чтобы посмотреть,как селектор работает с разными строками.Обратите внимание,что это отличается от :even и :odd,которые не учитывают родителя и просто фильтруют список элементов по всем остальным.Тем не менее,:nth-child считает индекс дочернего элемента своим конкретным родителем.В любом случае,это легче увидеть,чем объяснить...</target>
        </trans-unit>
        <trans-unit id="43d06d5d256cc91fbf210ed9e483af8fa7cb9e74" translate="yes" xml:space="preserve">
          <source>This is a playground to see how the selector works with different strings. Notice that this is different from the &lt;a href=&quot;even&quot;&gt;&lt;code&gt;even&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;odd&quot;&gt;&lt;code&gt;odd&lt;/code&gt;&lt;/a&gt; which have no regard for parent and just filter the list of elements to every other one. The :nth-child, however, counts the index of the child to its particular parent. In any case, it's easier to see than explain so...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be73f0898db1025d1eedc1b55421499324460238" translate="yes" xml:space="preserve">
          <source>This is a shorthand Ajax function, which is equivalent to:</source>
          <target state="translated">Это сокращенная функция &quot;Аякс&quot;,которая эквивалентна:</target>
        </trans-unit>
        <trans-unit id="0c4a19f41f357e975c7ecf272280bda06a0a7837" translate="yes" xml:space="preserve">
          <source>This is equivalent to:</source>
          <target state="translated">Это эквивалентно:</target>
        </trans-unit>
        <trans-unit id="e864657858a9303070a1658a53bf25dbea41192a" translate="yes" xml:space="preserve">
          <source>This is the full list of Ajax events, and in the order in which they are triggered. The indented events are triggered for each and every Ajax request (unless a global option has been set). The ajaxStart and ajaxStop events are events that relate to all Ajax requests together.</source>
          <target state="translated">Это полный список событий Аякса,и в том порядке,в котором они сработали.События с отступами инициируются для каждого запроса Ajax (если только не установлен глобальный вариант).События ajaxStart и ajaxStop-это события,которые относятся ко всем запросам Ajax вместе.</target>
        </trans-unit>
        <trans-unit id="75a40fffbd7637ae6cad737c5a222f44e502a6d4" translate="yes" xml:space="preserve">
          <source>This is the inverse of &lt;code&gt;:empty&lt;/code&gt;.</source>
          <target state="translated">Это обратное &lt;code&gt;:empty&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1afd13e46be54f353d75a53266cc19dfc2f2a79e" translate="yes" xml:space="preserve">
          <source>This is the inverse of &lt;code&gt;:parent&lt;/code&gt;.</source>
          <target state="translated">Это обратное &lt;code&gt;:parent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f6a24b37da84f50293523975f12e3e02b00fdf99" translate="yes" xml:space="preserve">
          <source>This is the most generous of the jQuery attribute selectors that match against a value. It will select an element if the selector's string appears anywhere within the element's attribute value. Compare this selector with the Attribute Contains Word selector (e.g. [attr~=&quot;word&quot;]), which is more appropriate in many cases.</source>
          <target state="translated">Это самый щедрый из селекторов атрибутов jQuery,которые совпадают со значением.Он будет выбирать элемент,если строка селектора появится где-либо в значении атрибута элемента.Сравните этот селектор с селектором атрибутов,содержащим слово (например,[attr~=&quot;word&quot;]),что более уместно во многих случаях.</target>
        </trans-unit>
        <trans-unit id="d9da68639be63e4e887067e82cda70e44e59b905" translate="yes" xml:space="preserve">
          <source>This is used in a number of places in jQuery to determine if we're operating against a browser window (such as the current window or an iframe).</source>
          <target state="translated">Это используется в ряде мест в jQuery для определения того,работаем ли мы с окном браузера (например,с текущим окном или iframe).</target>
        </trans-unit>
        <trans-unit id="f08b6ce82deda11c3f60b7deafa153420ae2161b" translate="yes" xml:space="preserve">
          <source>This is useful for plugin authors who offer optional callbacks; in the case that no callback is given, something like &lt;code&gt;jQuery.noop&lt;/code&gt; could execute.</source>
          <target state="translated">Это полезно для авторов плагинов, которые предлагают дополнительные обратные вызовы; в случае, если обратный вызов не задан, может выполняться что-то вроде &lt;code&gt;jQuery.noop&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="44d812d14581ba0c1674dc38a60217df13c4f84f" translate="yes" xml:space="preserve">
          <source>This is usually the desired sequence before taking an action. If this is not required, the &lt;code&gt;mousedown&lt;/code&gt; or &lt;code&gt;mouseup&lt;/code&gt; event may be more suitable.</source>
          <target state="translated">Обычно это желаемая последовательность действий перед выполнением действия. Если это не требуется, может быть более подходящим событие &lt;code&gt;mousedown&lt;/code&gt; или &lt;code&gt;mouseup&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c3d57f2d941e7b5d42230477fec9cf8433d9503" translate="yes" xml:space="preserve">
          <source>This method behaves differently from using a normal JavaScript &lt;code&gt;eval()&lt;/code&gt; in that it's executed within the global context (which is important for loading external scripts dynamically).</source>
          <target state="translated">Этот метод ведет себя не так, как обычный &lt;code&gt;eval()&lt;/code&gt; JavaScript, в том смысле, что он выполняется в глобальном контексте (что важно для динамической загрузки внешних скриптов).</target>
        </trans-unit>
        <trans-unit id="7055b8d61d1b481dd833dfd2669a99e44ee927e0" translate="yes" xml:space="preserve">
          <source>This method can act on a jQuery object that has selected individual form controls, such as &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;. However, it is typically easier to select the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; element itself for serialization:</source>
          <target state="translated">Этот метод может воздействовать на объект jQuery, который выбрал отдельные элементы управления формой, такие как &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; . Однако обычно проще выбрать сам элемент &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; для сериализации:</target>
        </trans-unit>
        <trans-unit id="5b38d3c48bdcbca3659c53e58607a9cf7dccaf8c" translate="yes" xml:space="preserve">
          <source>This method does not accept any arguments.</source>
          <target state="translated">Этот метод не принимает никаких аргументов.</target>
        </trans-unit>
        <trans-unit id="bfb451eae6e159d41053c63c7ab0de01084ab951" translate="yes" xml:space="preserve">
          <source>This method exists primarily for plugin developers who wish to override it and provide a better display (or more information) for the error messages.</source>
          <target state="translated">Этот метод существует в первую очередь для разработчиков плагинов,которые хотят переопределить его и обеспечить лучшее отображение (или больше информации)для сообщений об ошибках.</target>
        </trans-unit>
        <trans-unit id="062bd2d7d515033788955331f2b4e1a92f7c2a23" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for &lt;code&gt;.on( &quot;blur&quot;, handler )&lt;/code&gt; in the first two variations, and &lt;code&gt;.trigger( &quot;blur&quot; )&lt;/code&gt; in the third.</source>
          <target state="translated">Этот метод является сокращением для &lt;code&gt;.on( &quot;blur&quot;, handler )&lt;/code&gt; в первых двух вариантах и &lt;code&gt;.trigger( &quot;blur&quot; )&lt;/code&gt; в третьем.</target>
        </trans-unit>
        <trans-unit id="346692c9809684c46a877bfaa5170a427dd16e78" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for &lt;code&gt;.on( &quot;change&quot;, handler )&lt;/code&gt; in the first two variations, and &lt;code&gt;.trigger( &quot;change&quot; )&lt;/code&gt; in the third.</source>
          <target state="translated">Этот метод является сокращением для &lt;code&gt;.on( &quot;change&quot;, handler )&lt;/code&gt; в первых двух вариантах и &lt;code&gt;.trigger( &quot;change&quot; )&lt;/code&gt; в третьем.</target>
        </trans-unit>
        <trans-unit id="a0650bd2ed2e304aeb035f14a80cc4104b12697c" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for &lt;code&gt;.on( &quot;click&quot;, handler )&lt;/code&gt; in the first two variations, and &lt;code&gt;.trigger( &quot;click&quot; )&lt;/code&gt; in the third. The &lt;code&gt;click&lt;/code&gt; event is sent to an element when the mouse pointer is over the element, and the mouse button is pressed and released. Any HTML element can receive this event. For example, consider the HTML:</source>
          <target state="translated">Этот метод является сокращением для &lt;code&gt;.on( &quot;click&quot;, handler )&lt;/code&gt; в первых двух вариантах и &lt;code&gt;.trigger( &quot;click&quot; )&lt;/code&gt; в третьем. &lt;code&gt;click&lt;/code&gt; событие посылается к элементу , когда указатель мыши находится над элементом, а кнопка мыши нажата и отпущена. Любой HTML-элемент может получить это событие. Например, рассмотрим HTML:</target>
        </trans-unit>
        <trans-unit id="0db2428740ed667f182f8512b88eb604bda1c58a" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for &lt;code&gt;.on( &quot;contextmenu&quot;, handler )&lt;/code&gt; in the first two variations, and &lt;code&gt;.trigger( &quot;contextmenu&quot; )&lt;/code&gt; in the third. The &lt;code&gt;contextmenu&lt;/code&gt; event is sent to an element when the right button of the mouse is clicked on it, but before the context menu is displayed. In case the context menu key is pressed, the event is triggered on the &lt;code&gt;html&lt;/code&gt; element or the currently focused element. Any HTML element can receive this event. For example, consider the HTML:</source>
          <target state="translated">Этот метод является сокращением для &lt;code&gt;.on( &quot;contextmenu&quot;, handler )&lt;/code&gt; в первых двух вариантах и &lt;code&gt;.trigger( &quot;contextmenu&quot; )&lt;/code&gt; в третьем. &lt;code&gt;contextmenu&lt;/code&gt; событие посылается к элементу , когда правая кнопка мыши нажата на нем, но до того, как появится контекстное меню. В случае нажатия клавиши контекстного меню событие запускается для элемента &lt;code&gt;html&lt;/code&gt; или текущего элемента с фокусом. Любой HTML-элемент может получить это событие. Например, рассмотрим HTML:</target>
        </trans-unit>
        <trans-unit id="e874b85d8b87e616d9b2b3e78468b8b1469b0d74" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for &lt;code&gt;.on( &quot;dblclick&quot;, handler )&lt;/code&gt; in the first two variations, and &lt;code&gt;.trigger( &quot;dblclick&quot; )&lt;/code&gt; in the third. The &lt;code&gt;dblclick&lt;/code&gt; event is sent to an element when the element is double-clicked. Any HTML element can receive this event. For example, consider the HTML:</source>
          <target state="translated">Этот метод является сокращением для &lt;code&gt;.on( &quot;dblclick&quot;, handler )&lt;/code&gt; в первых двух вариантах и &lt;code&gt;.trigger( &quot;dblclick&quot; )&lt;/code&gt; в третьем. &lt;code&gt;dblclick&lt;/code&gt; событие посылается элемент , когда элемент двойного щелчка. Любой HTML-элемент может получить это событие. Например, рассмотрим HTML:</target>
        </trans-unit>
        <trans-unit id="d13a26a73fa8a32f0b6c96afe45e01dbb8b531da" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for &lt;code&gt;.on( &quot;error&quot;, handler )&lt;/code&gt;.</source>
          <target state="translated">Этот метод является сокращением для &lt;code&gt;.on( &quot;error&quot;, handler )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55194cb606a3bf92352bb24a102c067fe1a4f76f" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for &lt;code&gt;.on( &quot;focus&quot;, handler )&lt;/code&gt; in the first and second variations, and &lt;code&gt;.trigger( &quot;focus&quot; )&lt;/code&gt; in the third.</source>
          <target state="translated">Этот метод является сокращением для &lt;code&gt;.on( &quot;focus&quot;, handler )&lt;/code&gt; в первом и втором вариантах и &lt;code&gt;.trigger( &quot;focus&quot; )&lt;/code&gt; в третьем.</target>
        </trans-unit>
        <trans-unit id="a78fa95a3c99515fe9ba77f8210bf088d3ad80ab" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for &lt;code&gt;.on( &quot;focusin&quot;, handler )&lt;/code&gt; in the first two variations, and &lt;code&gt;.trigger( &quot;focusin&quot; )&lt;/code&gt; in the third.</source>
          <target state="translated">Этот метод является сокращением для &lt;code&gt;.on( &quot;focusin&quot;, handler )&lt;/code&gt; в первых двух вариантах и &lt;code&gt;.trigger( &quot;focusin&quot; )&lt;/code&gt; в третьем.</target>
        </trans-unit>
        <trans-unit id="2f404e361904d188974da0d867762f2b8f5bbf1a" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for &lt;code&gt;.on( &quot;focusout&quot;, handler )&lt;/code&gt; when passed arguments, and &lt;code&gt;.trigger( &quot;focusout&quot; )&lt;/code&gt; when no arguments are passed.</source>
          <target state="translated">Этот метод является сокращением для &lt;code&gt;.on( &quot;focusout&quot;, handler )&lt;/code&gt; при передаче аргументов и &lt;code&gt;.trigger( &quot;focusout&quot; )&lt;/code&gt; когда аргументы не передаются.</target>
        </trans-unit>
        <trans-unit id="41f8feb54d90484574c64e3baf7695ac56d76f6a" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for &lt;code&gt;.on( &quot;keydown&quot;, handler )&lt;/code&gt; in the first and second variations, and &lt;code&gt;.trigger( &quot;keydown&quot; )&lt;/code&gt; in the third.</source>
          <target state="translated">Этот метод является сокращением для &lt;code&gt;.on( &quot;keydown&quot;, handler )&lt;/code&gt; в первом и втором вариантах и &lt;code&gt;.trigger( &quot;keydown&quot; )&lt;/code&gt; в третьем.</target>
        </trans-unit>
        <trans-unit id="5ea90d8a612eae07733cb9a953095aece3559d80" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for &lt;code&gt;.on( &quot;keypress&quot;, handler )&lt;/code&gt; in the first two variations, and &lt;code&gt;.trigger( &quot;keypress&quot; )&lt;/code&gt; in the third.</source>
          <target state="translated">Этот метод является сокращением для &lt;code&gt;.on( &quot;keypress&quot;, handler )&lt;/code&gt; в первых двух вариантах и &lt;code&gt;.trigger( &quot;keypress&quot; )&lt;/code&gt; в третьем.</target>
        </trans-unit>
        <trans-unit id="4829b0add7a93cf88eb293c411bb411f3ef1e117" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for &lt;code&gt;.on( &quot;keyup&quot;, handler )&lt;/code&gt; in the first two variations, and &lt;code&gt;.trigger( &quot;keyup&quot; )&lt;/code&gt; in the third.</source>
          <target state="translated">Этот метод является сокращением для &lt;code&gt;.on( &quot;keyup&quot;, handler )&lt;/code&gt; в первых двух вариантах и &lt;code&gt;.trigger( &quot;keyup&quot; )&lt;/code&gt; в третьем.</target>
        </trans-unit>
        <trans-unit id="4f33dc4654f9529dd8f001a910b09881e9c49b82" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for &lt;code&gt;.on( &quot;load&quot;, handler )&lt;/code&gt;.</source>
          <target state="translated">Этот метод является сокращением для &lt;code&gt;.on( &quot;load&quot;, handler )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd6a5b08c80b8fd5752389522a110b3d911a2b5b" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for &lt;code&gt;.on( &quot;mousedown&quot;, handler)&lt;/code&gt; in the first variation, and &lt;code&gt;.trigger( &quot;mousedown&quot; )&lt;/code&gt; in the second.</source>
          <target state="translated">Этот метод является сокращением для &lt;code&gt;.on( &quot;mousedown&quot;, handler)&lt;/code&gt; в первом варианте и &lt;code&gt;.trigger( &quot;mousedown&quot; )&lt;/code&gt; во втором.</target>
        </trans-unit>
        <trans-unit id="69b00c787b7cc1a27054d6f09f61eb7db1b27df3" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for &lt;code&gt;.on( &quot;mouseenter&quot;, handler )&lt;/code&gt; in the first two variations, and &lt;code&gt;.trigger( &quot;mouseenter&quot; )&lt;/code&gt; in the third.</source>
          <target state="translated">Этот метод является сокращением для &lt;code&gt;.on( &quot;mouseenter&quot;, handler )&lt;/code&gt; в первых двух вариантах и &lt;code&gt;.trigger( &quot;mouseenter&quot; )&lt;/code&gt; в третьем.</target>
        </trans-unit>
        <trans-unit id="f69e7b7e84c1d679e65f225b8bbcf922a7b63987" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for &lt;code&gt;.on( &quot;mousemove&quot;, handler )&lt;/code&gt; in the first two variations, and &lt;code&gt;.trigger( &quot;mousemove&quot; )&lt;/code&gt; in the third.</source>
          <target state="translated">Этот метод является сокращением для &lt;code&gt;.on( &quot;mousemove&quot;, handler )&lt;/code&gt; в первых двух вариантах и &lt;code&gt;.trigger( &quot;mousemove&quot; )&lt;/code&gt; в третьем.</target>
        </trans-unit>
        <trans-unit id="06b06641034cabafc7c3a89771b3bfb178535b20" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for &lt;code&gt;.on( &quot;mouseout&quot;, handler )&lt;/code&gt; in the first two variation, and &lt;code&gt;.trigger( &quot;mouseout&quot; )&lt;/code&gt; in the third.</source>
          <target state="translated">Этот метод является сокращением для &lt;code&gt;.on( &quot;mouseout&quot;, handler )&lt;/code&gt; в первых двух вариантах и &lt;code&gt;.trigger( &quot;mouseout&quot; )&lt;/code&gt; в третьем.</target>
        </trans-unit>
        <trans-unit id="c031239c05a4d2d7c8f7763e0c4dce22389771b5" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for &lt;code&gt;.on( &quot;mouseover&quot;, handler )&lt;/code&gt; in the first two variations, and &lt;code&gt;.trigger( &quot;mouseover&quot; )&lt;/code&gt; in the third.</source>
          <target state="translated">Этот метод является сокращением для &lt;code&gt;.on( &quot;mouseover&quot;, handler )&lt;/code&gt; в первых двух вариантах и &lt;code&gt;.trigger( &quot;mouseover&quot; )&lt;/code&gt; в третьем.</target>
        </trans-unit>
        <trans-unit id="b6154672016dd082ac86d67cedc849e56ba90b30" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for &lt;code&gt;.on( &quot;scroll&quot;, handler )&lt;/code&gt; in the first and second variations, and &lt;code&gt;.trigger( &quot;scroll&quot; )&lt;/code&gt; in the third.</source>
          <target state="translated">Этот метод является сокращением для &lt;code&gt;.on( &quot;scroll&quot;, handler )&lt;/code&gt; в первом и втором вариантах и &lt;code&gt;.trigger( &quot;scroll&quot; )&lt;/code&gt; в третьем.</target>
        </trans-unit>
        <trans-unit id="5e74519010db55b24d2b383da7d044d1a8289229" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for &lt;code&gt;.on( &quot;select&quot;, handler )&lt;/code&gt; in the first two variations, and &lt;code&gt;.trigger( &quot;select&quot; )&lt;/code&gt; in the third.</source>
          <target state="translated">Этот метод является сокращением для &lt;code&gt;.on( &quot;select&quot;, handler )&lt;/code&gt; в первых двух вариантах и &lt;code&gt;.trigger( &quot;select&quot; )&lt;/code&gt; в третьем.</target>
        </trans-unit>
        <trans-unit id="0d345de59a7eaf1933e66da1db69440e5868a3db" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for &lt;code&gt;.on( &quot;submit&quot;, handler )&lt;/code&gt; in the first variation, and &lt;code&gt;.trigger( &quot;submit&quot; )&lt;/code&gt; in the third.</source>
          <target state="translated">Этот метод является сокращением для &lt;code&gt;.on( &quot;submit&quot;, handler )&lt;/code&gt; в первом варианте и &lt;code&gt;.trigger( &quot;submit&quot; )&lt;/code&gt; в третьем.</target>
        </trans-unit>
        <trans-unit id="1eb9dc7288639e70f49bacd03cacbfa56ac32283" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for &lt;code&gt;.on( &quot;unload&quot;, handler )&lt;/code&gt;.</source>
          <target state="translated">Этот метод является сокращением для &lt;code&gt;.on( &quot;unload&quot;, handler )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52ff3678157c22780a9cfc21b02b92dddc40ff36" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for &lt;code&gt;.on('mouseleave', handler)&lt;/code&gt; in the first two variations, and &lt;code&gt;.trigger('mouseleave')&lt;/code&gt; in the third.</source>
          <target state="translated">Этот метод является сокращением для &lt;code&gt;.on('mouseleave', handler)&lt;/code&gt; в первых двух вариантах и &lt;code&gt;.trigger('mouseleave')&lt;/code&gt; в третьем.</target>
        </trans-unit>
        <trans-unit id="c26ac53ee675f9addb362831a5d3f4fa59caa27a" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for &lt;code&gt;.on('mouseup', handler)&lt;/code&gt; in the first variation, and &lt;code&gt;.trigger('mouseup')&lt;/code&gt; in the second.</source>
          <target state="translated">Этот метод является сокращением для &lt;code&gt;.on('mouseup', handler)&lt;/code&gt; в первом варианте и &lt;code&gt;.trigger('mouseup')&lt;/code&gt; во втором.</target>
        </trans-unit>
        <trans-unit id="c808514b87bd343496959e8c779b341d866fc82f" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for &lt;code&gt;.on('resize', handler)&lt;/code&gt; in the first and second variations, and &lt;code&gt;.trigger( &quot;resize&quot; )&lt;/code&gt; in the third.</source>
          <target state="translated">Этот метод является сокращением для &lt;code&gt;.on('resize', handler)&lt;/code&gt; в первом и втором вариантах и &lt;code&gt;.trigger( &quot;resize&quot; )&lt;/code&gt; в третьем.</target>
        </trans-unit>
        <trans-unit id="85bb24f782fa2a4858de19ce93437e137aa3340c" translate="yes" xml:space="preserve">
          <source>This method is also able to find the height of the window and document.</source>
          <target state="translated">Этот метод также позволяет найти высоту окна и документа.</target>
        </trans-unit>
        <trans-unit id="f2607253a7033781c403606df4eebe156180a466" translate="yes" xml:space="preserve">
          <source>This method is also able to find the width of the window and document.</source>
          <target state="translated">Этот метод также позволяет найти ширину окна и документа.</target>
        </trans-unit>
        <trans-unit id="cec9291828724747376d950545c6d540d08e366c" translate="yes" xml:space="preserve">
          <source>This method is fired when an error is thrown synchronously in a function wrapped in &lt;code&gt;jQuery()&lt;/code&gt; or &lt;code&gt;jQuery( document ).ready()&lt;/code&gt;, or equivalent. By default it re-throws the error in a timeout so that it's logged in the console and passed to &lt;code&gt;window.onerror&lt;/code&gt; instead of being swallowed. Overwrite this method if you want to handle such errors differently.</source>
          <target state="translated">Этот метод запускается, когда ошибка возникает синхронно в функции, заключенной в &lt;code&gt;jQuery()&lt;/code&gt; или &lt;code&gt;jQuery( document ).ready()&lt;/code&gt; или эквивалент. По умолчанию он повторно выдает ошибку по истечении времени ожидания, так что она регистрируется в консоли и передается в &lt;code&gt;window.onerror&lt;/code&gt; вместо того, чтобы быть проглоченной. Перепишите этот метод, если вы хотите обрабатывать такие ошибки по-другому.</target>
        </trans-unit>
        <trans-unit id="0161551cba801aedb18b05604b3021306dc4d081" translate="yes" xml:space="preserve">
          <source>This method is meant for plugin developers who are creating new animation methods. Letting &lt;code&gt;$.speed()&lt;/code&gt; do all the parameter hockey and normalization for you, rather than duplicating the logic yourself, makes your work simpler. An example of use can be found in the animated form of &lt;code&gt;.addClass()&lt;/code&gt; of jQuery UI.</source>
          <target state="translated">Этот метод предназначен для разработчиков плагинов, которые создают новые методы анимации. Позволить &lt;code&gt;$.speed()&lt;/code&gt; делать все хоккеи параметров и нормализацию для вас, а не дублировать логику самостоятельно, что делает вашу работу проще. Пример использования можно найти в анимированной форме &lt;code&gt;.addClass()&lt;/code&gt; пользовательского интерфейса jQuery.</target>
        </trans-unit>
        <trans-unit id="be28d98cd2c7a67e6865551fa4b367a0630987b0" translate="yes" xml:space="preserve">
          <source>This method is most useful for attaching event handlers to an element where the context is pointing back to a different object. Additionally, jQuery makes sure that even if you bind the function returned from &lt;code&gt;jQuery.proxy()&lt;/code&gt; it will still unbind the correct function if passed the original.</source>
          <target state="translated">Этот метод наиболее полезен для присоединения обработчиков событий к элементу, в котором контекст указывает на другой объект. Кроме того, jQuery гарантирует, что даже если вы привяжете функцию, возвращаемую из &lt;code&gt;jQuery.proxy()&lt;/code&gt; она все равно отключит правильную функцию, если передана исходная.</target>
        </trans-unit>
        <trans-unit id="792159b794709664077d97cb3536c3cd14904a0d" translate="yes" xml:space="preserve">
          <source>This method is not applicable to &lt;code&gt;window&lt;/code&gt; and &lt;code&gt;document&lt;/code&gt; objects; for these, use &lt;code&gt;&lt;a href=&quot;height&quot;&gt;.height()&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Этот метод не применим к объектам &lt;code&gt;window&lt;/code&gt; и &lt;code&gt;document&lt;/code&gt; ; для них используйте &lt;code&gt;&lt;a href=&quot;height&quot;&gt;.height()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef15703808f5f2d053665850bfca24d04d1a2e24" translate="yes" xml:space="preserve">
          <source>This method is not applicable to &lt;code&gt;window&lt;/code&gt; and &lt;code&gt;document&lt;/code&gt; objects; for these, use &lt;code&gt;&lt;a href=&quot;height&quot;&gt;.height()&lt;/a&gt;&lt;/code&gt; instead. Although &lt;code&gt;.outerHeight()&lt;/code&gt; can be used on table elements, it may give unexpected results on tables using the &lt;code&gt;border-collapse: collapse&lt;/code&gt; CSS property.</source>
          <target state="translated">Этот метод не применим к объектам &lt;code&gt;window&lt;/code&gt; и &lt;code&gt;document&lt;/code&gt; ; для них используйте &lt;code&gt;&lt;a href=&quot;height&quot;&gt;.height()&lt;/a&gt;&lt;/code&gt; . Хотя &lt;code&gt;.outerHeight()&lt;/code&gt; может использоваться для элементов таблицы, он может давать неожиданные результаты для таблиц, использующих свойство CSS &lt;code&gt;border-collapse: collapse&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="829556cbe373a45b949053668c7a8cfa83ebe1b2" translate="yes" xml:space="preserve">
          <source>This method is not applicable to &lt;code&gt;window&lt;/code&gt; and &lt;code&gt;document&lt;/code&gt; objects; for these, use &lt;code&gt;&lt;a href=&quot;width&quot;&gt;.width()&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Этот метод не применим к объектам &lt;code&gt;window&lt;/code&gt; и &lt;code&gt;document&lt;/code&gt; ; для них вместо этого используйте &lt;code&gt;&lt;a href=&quot;width&quot;&gt;.width()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba117f4e1229732c120748b2aca40b446fd60fb4" translate="yes" xml:space="preserve">
          <source>This method is not applicable to &lt;code&gt;window&lt;/code&gt; and &lt;code&gt;document&lt;/code&gt; objects; for these, use &lt;code&gt;&lt;a href=&quot;width&quot;&gt;.width()&lt;/a&gt;&lt;/code&gt; instead. Although &lt;code&gt;.outerWidth()&lt;/code&gt; can be used on table elements, it may give unexpected results on tables using the &lt;code&gt;border-collapse: collapse&lt;/code&gt; CSS property.</source>
          <target state="translated">Этот метод не применим к объектам &lt;code&gt;window&lt;/code&gt; и &lt;code&gt;document&lt;/code&gt; ; для них вместо этого используйте &lt;code&gt;&lt;a href=&quot;width&quot;&gt;.width()&lt;/a&gt;&lt;/code&gt; . Хотя &lt;code&gt;.outerWidth()&lt;/code&gt; можно использовать для элементов таблицы, это может дать неожиданные результаты для таблиц, использующих свойство CSS &lt;code&gt;border-collapse: collapse&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b303eebf0f43b27153ed68f23c0854debc8a5aa7" translate="yes" xml:space="preserve">
          <source>This method is not available on XML documents.</source>
          <target state="translated">Этот метод недоступен в XML-документах.</target>
        </trans-unit>
        <trans-unit id="02843289c06dc2a11b69cb325ed07cd3b9ece06f" translate="yes" xml:space="preserve">
          <source>This method is often used with &lt;code&gt;.addClass()&lt;/code&gt; to switch elements' classes from one to another, like so:</source>
          <target state="translated">Этот метод часто используется с &lt;code&gt;.addClass()&lt;/code&gt; для переключения классов элементов с одного на другой, например:</target>
        </trans-unit>
        <trans-unit id="a3a5be0658971b62f855cbbcb5c4bc8dcf2d8b61" translate="yes" xml:space="preserve">
          <source>This method is often used with &lt;code&gt;.removeClass()&lt;/code&gt; to switch elements' classes from one to another, like so:</source>
          <target state="translated">Этот метод часто используется с &lt;code&gt;.removeClass()&lt;/code&gt; для переключения классов элементов с одного на другой, например:</target>
        </trans-unit>
        <trans-unit id="a33c880bf752394d0bef47af6df6b9420072d808" translate="yes" xml:space="preserve">
          <source>This method is primarily useful for debugging to determine, for example, whether a Deferred has already been resolved even though you are inside code that intended to reject it.</source>
          <target state="translated">Этот метод в первую очередь полезен при отладке,чтобы определить,например,был ли уже устранен дефолт,даже если вы находитесь внутри кода,который намеревался его отклонить.</target>
        </trans-unit>
        <trans-unit id="6158f3be944f5323b063daabea46f186e081a8f5" translate="yes" xml:space="preserve">
          <source>This method is similar to &lt;a href=&quot;parents&quot;&gt;&lt;code&gt;.parents()&lt;/code&gt;&lt;/a&gt;, except &lt;code&gt;.parent()&lt;/code&gt; only travels a single level up the DOM tree. Also, &lt;code&gt;$( &quot;html&quot; ).parent()&lt;/code&gt; method returns a set containing &lt;code&gt;document&lt;/code&gt; whereas &lt;code&gt;$( &quot;html&quot; ).parents()&lt;/code&gt; returns an empty set.</source>
          <target state="translated">Этот метод похож на &lt;a href=&quot;parents&quot;&gt; &lt;code&gt;.parents()&lt;/code&gt; &lt;/a&gt; , за исключением того, что &lt;code&gt;.parent()&lt;/code&gt; перемещается только на один уровень вверх по дереву DOM. Кроме того, метод &lt;code&gt;$( &quot;html&quot; ).parent()&lt;/code&gt; возвращает набор, содержащий &lt;code&gt;document&lt;/code&gt; тогда как &lt;code&gt;$( &quot;html&quot; ).parents()&lt;/code&gt; возвращает пустой набор.</target>
        </trans-unit>
        <trans-unit id="f212f682efcc36782acb359a7b6a9498a049d716" translate="yes" xml:space="preserve">
          <source>This method is the simplest way to fetch data from the server. It is roughly equivalent to &lt;code&gt;$.get(url, data, success)&lt;/code&gt; except that it is a method rather than global function and it has an implicit callback function. When a successful response is detected (i.e. when &lt;code&gt;textStatus&lt;/code&gt; is &quot;success&quot; or &quot;notmodified&quot;), &lt;code&gt;.load()&lt;/code&gt; sets the HTML contents of the matched element to the returned data. This means that most uses of the method can be quite simple:</source>
          <target state="translated">Этот метод - самый простой способ получить данные с сервера. Это примерно эквивалентно &lt;code&gt;$.get(url, data, success)&lt;/code&gt; за исключением того, что это метод, а не глобальная функция, и он имеет неявную функцию обратного вызова. Когда обнаружен успешный ответ (то есть когда &lt;code&gt;textStatus&lt;/code&gt; имеет значение &amp;laquo;success&amp;raquo; или &amp;laquo;notmodified&amp;raquo;), &lt;code&gt;.load()&lt;/code&gt; устанавливает HTML-содержимое сопоставленного элемента в возвращенные данные. Это означает, что большинство применений метода могут быть довольно простыми:</target>
        </trans-unit>
        <trans-unit id="97bad19c70b5728f621288ec148f22105f3c99f4" translate="yes" xml:space="preserve">
          <source>This method is the simplest way to fetch data from the server. It is roughly equivalent to &lt;code&gt;$.get(url, data, success)&lt;/code&gt; except that it is a method rather than global function and it has an implicit callback function. When a successful response is detected (i.e. when &lt;code&gt;textStatus&lt;/code&gt; is &quot;success&quot; or &quot;notmodified&quot;), &lt;code&gt;.load()&lt;/code&gt; sets the HTML contents of the matched elements to the returned data. This means that most uses of the method can be quite simple:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33a293e72757673a33b710d1c8020b662670351f" translate="yes" xml:space="preserve">
          <source>This method is typically used to set the values of form fields.</source>
          <target state="translated">Этот метод обычно используется для установки значений полей формы.</target>
        </trans-unit>
        <trans-unit id="b041aaa9a6860bdfc4ee2d9736df50aacf1367d7" translate="yes" xml:space="preserve">
          <source>This method is useful for situations where a class name or an ID contains characters that have a special meaning in CSS, such as the dot or the semicolon.</source>
          <target state="translated">Этот метод полезен в ситуациях,когда имя класса или ID содержит символы,которые имеют особое значение в CSS,такие как точка или точка с запятой.</target>
        </trans-unit>
        <trans-unit id="244806d817f0a7d369a67cd7d7c93c5a39756ca3" translate="yes" xml:space="preserve">
          <source>This method provides a means to attach delegated event handlers to the &lt;code&gt;document&lt;/code&gt; element of a page, which simplifies the use of event handlers when content is dynamically added to a page. See the discussion of direct versus delegated events in the &lt;a href=&quot;on&quot;&gt;&lt;code&gt;.on()&lt;/code&gt;&lt;/a&gt; method for more information.</source>
          <target state="translated">Этот метод предоставляет средства для прикрепления делегированных обработчиков событий к элементу &lt;code&gt;document&lt;/code&gt; страницы, что упрощает использование обработчиков событий, когда содержимое динамически добавляется на страницу. См. Обсуждение прямых и делегированных событий в &lt;a href=&quot;on&quot;&gt; &lt;code&gt;.on()&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="7fd2a5591a30ca6ff308b7643859a6536be39441" translate="yes" xml:space="preserve">
          <source>This method rarely needs to be called directly. Instead, use it as an entry point to modify existing &lt;a href=&quot;category/manipulation&quot;&gt;jQuery manipulation methods&lt;/a&gt;. For instance, to remove all &lt;code&gt;&amp;lt;del&amp;gt;&lt;/code&gt; tags from incoming HTML strings, do this:</source>
          <target state="translated">Этот метод редко нужно вызывать напрямую. Вместо этого используйте его как точку входа для изменения существующих &lt;a href=&quot;category/manipulation&quot;&gt;методов манипулирования jQuery&lt;/a&gt; . Например, чтобы удалить все теги &lt;code&gt;&amp;lt;del&amp;gt;&lt;/code&gt; из входящих строк HTML, сделайте следующее:</target>
        </trans-unit>
        <trans-unit id="dd80397630c84b50e8d361e72a33e91191dbf528" translate="yes" xml:space="preserve">
          <source>This method rarely needs to be called directly. Instead, use it as an entry point to modify existing &lt;a href=&quot;category/manipulation&quot;&gt;jQuery manipulation methods&lt;/a&gt;. jQuery calls this method on input HTML before processing it further: it accepts an HTML string &amp;amp; should return a HTML string as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81bd8de971947848a1bbc3dd30bdfc905828a2cc" translate="yes" xml:space="preserve">
          <source>This method removes not only child (and other descendant) elements, but also any text within the set of matched elements. This is because, according to the DOM specification, any string of text within an element is considered a child node of that element. Consider the following HTML:</source>
          <target state="translated">Этот метод удаляет не только дочерние (и другие потомственные)элементы,но и любой текст в наборе совпадающих элементов.Это происходит потому,что,согласно спецификации DOM,любая строка текста внутри элемента считается дочерним узлом этого элемента.Рассмотрим следующий HTML:</target>
        </trans-unit>
        <trans-unit id="2c6511822632c27fce0c859034fc93723aeb40d5" translate="yes" xml:space="preserve">
          <source>This method returns the Callbacks object onto which it is attached (&lt;code&gt;this&lt;/code&gt;).</source>
          <target state="translated">Этот метод возвращает объект Callbacks, к которому он прикреплен ( &lt;code&gt;this&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="db22403d5e9f887b88f057e719d07941784e3daa" translate="yes" xml:space="preserve">
          <source>This method returns the height of the element, including top and bottom padding, in pixels. If called on an empty set of elements, returns &lt;code&gt;undefined&lt;/code&gt; (&lt;code&gt;null&lt;/code&gt; before jQuery 3.0).</source>
          <target state="translated">Этот метод возвращает высоту элемента, включая верхний и нижний отступы, в пикселях. Если вызывается для пустого набора элементов, возвращает &lt;code&gt;undefined&lt;/code&gt; ( &lt;code&gt;null&lt;/code&gt; до jQuery 3.0).</target>
        </trans-unit>
        <trans-unit id="46751de65f82b868a8d805a118d0472c10ab2eb4" translate="yes" xml:space="preserve">
          <source>This method returns the width of the element, including left and right padding, in pixels. If called on an empty set of elements, returns &lt;code&gt;undefined&lt;/code&gt; (&lt;code&gt;null&lt;/code&gt; before jQuery 3.0).</source>
          <target state="translated">Этот метод возвращает ширину элемента, включая левый и правый отступ, в пикселях. Если вызывается для пустого набора элементов, возвращает &lt;code&gt;undefined&lt;/code&gt; ( &lt;code&gt;null&lt;/code&gt; до jQuery 3.0).</target>
        </trans-unit>
        <trans-unit id="346db25be5af8ef6c0901a77a68e78712521680d" translate="yes" xml:space="preserve">
          <source>This method takes one or more class names as its parameter. In the first version, if an element in the matched set of elements already has the class, then it is removed; if an element does not have the class, then it is added. For example, we can apply &lt;code&gt;.toggleClass()&lt;/code&gt; to a simple &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">Этот метод принимает в качестве параметра одно или несколько имен классов. В первой версии, если элемент в согласованном наборе элементов уже имеет класс, он удаляется; если элемент не имеет класса, он добавляется. Например, мы можем применить &lt;code&gt;.toggleClass()&lt;/code&gt; к простому &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ffca30b1eb6fa5e71da9068c59603b1d9459f862" translate="yes" xml:space="preserve">
          <source>This method takes one or more classes as its parameter. In the first version, if an element in the matched set of elements already has the class, then it is removed; if an element does not have the class, then it is added. For example, we can apply &lt;code&gt;.toggleClass()&lt;/code&gt; to a simple &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="715fb2b06c008009d1fe416597cf8a202325a3d1" translate="yes" xml:space="preserve">
          <source>This method uses the browser's &lt;code&gt;innerHTML&lt;/code&gt; property. Some browsers may not generate a DOM that exactly replicates the HTML source provided. For example, Internet Explorer prior to version 8 will convert all &lt;code&gt;href&lt;/code&gt; properties on links to absolute URLs, and Internet Explorer prior to version 9 will not correctly handle HTML5 elements without the addition of a separate &lt;a href=&quot;https://code.google.com/p/html5shiv/&quot;&gt;compatibility layer&lt;/a&gt;.</source>
          <target state="translated">Этот метод использует свойство браузера &lt;code&gt;innerHTML&lt;/code&gt; . Некоторые браузеры могут не создавать модель DOM, которая точно копирует предоставленный источник HTML. Например, Internet Explorer до версии 8 преобразует все свойства &lt;code&gt;href&lt;/code&gt; в ссылках в абсолютные URL-адреса, а Internet Explorer до версии 9 не будет правильно обрабатывать элементы HTML5 без добавления отдельного &lt;a href=&quot;https://code.google.com/p/html5shiv/&quot;&gt;уровня совместимости&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="150d540b15cca9563d10ff4107f8ef56ab70336e" translate="yes" xml:space="preserve">
          <source>This method uses the browser's &lt;code&gt;innerHTML&lt;/code&gt; property. Some browsers may not return HTML that exactly replicates the HTML source in an original document. For example, Internet Explorer sometimes leaves off the quotes around attribute values if they contain only alphanumeric characters.</source>
          <target state="translated">Этот метод использует свойство браузера &lt;code&gt;innerHTML&lt;/code&gt; . Некоторые браузеры могут не возвращать HTML, который точно копирует исходный HTML в исходном документе. Например, Internet Explorer иногда опускает кавычки вокруг значений атрибутов, если они содержат только буквенно-цифровые символы.</target>
        </trans-unit>
        <trans-unit id="65e0fd7b6508a3fd582b43249cfe77d08ec202a6" translate="yes" xml:space="preserve">
          <source>This method works for custom events triggered with &lt;a href=&quot;trigger&quot;&gt;trigger()&lt;/a&gt; as well.</source>
          <target state="translated">Этот метод также работает для пользовательских событий, запускаемых с помощью &lt;a href=&quot;trigger&quot;&gt;trigger ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="51d7b57e32048f9435bc9def6a654077e7bbd4e6" translate="yes" xml:space="preserve">
          <source>This object provides a subset of the methods of the &lt;a href=&quot;category/deferred-object&quot;&gt;Deferred&lt;/a&gt; object (&lt;a href=&quot;deferred.then&quot;&gt;&lt;code&gt;then&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;deferred.done&quot;&gt;&lt;code&gt;done&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;deferred.fail&quot;&gt;&lt;code&gt;fail&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;deferred.always&quot;&gt;&lt;code&gt;always&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;deferred.pipe&quot;&gt;&lt;code&gt;pipe&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;deferred.progress&quot;&gt;&lt;code&gt;progress&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;deferred.state&quot;&gt;&lt;code&gt;state&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;deferred.promise&quot;&gt;&lt;code&gt;promise&lt;/code&gt;&lt;/a&gt;) to prevent users from changing the state of the Deferred.</source>
          <target state="translated">Этот объект предоставляет подмножество методов объекта &lt;a href=&quot;category/deferred-object&quot;&gt;Deferred&lt;/a&gt; ( &lt;a href=&quot;deferred.then&quot;&gt; &lt;code&gt;then&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;deferred.done&quot;&gt; &lt;code&gt;done&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;deferred.fail&quot;&gt; &lt;code&gt;fail&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;deferred.always&quot;&gt; &lt;code&gt;always&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;deferred.pipe&quot;&gt; &lt;code&gt;pipe&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;deferred.progress&quot;&gt; &lt;code&gt;progress&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;deferred.state&quot;&gt; &lt;code&gt;state&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;deferred.promise&quot;&gt; &lt;code&gt;promise&lt;/code&gt; &lt;/a&gt; ), чтобы пользователи не могли изменять состояние Deferred.</target>
        </trans-unit>
        <trans-unit id="9b34e7f3b9e24382935439639824b6cd3a1daafd" translate="yes" xml:space="preserve">
          <source>This object will be the context of all Ajax-related callbacks. By default, the context is an object that represents the Ajax settings used in the call (&lt;code&gt;$.ajaxSettings&lt;/code&gt; merged with the settings passed to &lt;code&gt;$.ajax&lt;/code&gt;). For example, specifying a DOM element as the context will make that the context for the &lt;code&gt;complete&lt;/code&gt; callback of a request, like so:</source>
          <target state="translated">Этот объект будет контекстом всех обратных вызовов, связанных с Ajax. По умолчанию контекст - это объект, который представляет параметры Ajax, используемые в вызове ( &lt;code&gt;$.ajaxSettings&lt;/code&gt; объединены с параметрами, переданными в &lt;code&gt;$.ajax&lt;/code&gt; ). Например, указание элемента DOM в качестве контекста сделает его контекстом для &lt;code&gt;complete&lt;/code&gt; обратного вызова запроса, например:</target>
        </trans-unit>
        <trans-unit id="94cbfc92f8ea1f8d27355869ff32de50ce680892" translate="yes" xml:space="preserve">
          <source>This page documents data types appearing in jQuery function signatures, whether defined by JavaScript itself or further restricted by jQuery. Unless explicitly stated otherwise, jQuery functions require primitive values where applicable, and do not accept their Object-wrapped forms. If you want to study these concepts in depth, take a look at &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt;MDN&lt;/a&gt;.</source>
          <target state="translated">Эта страница документирует типы данных, появляющиеся в сигнатурах функций jQuery, независимо от того, определены ли они самим JavaScript или дополнительно ограничены jQuery. Если явно не указано иное, функциям jQuery требуются примитивные значения там, где это применимо, и они не принимают свои формы с оберткой объекта. Если вы хотите глубоко изучить эти концепции, взгляните на &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt;MDN&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="56203e63040b71fce3654bce970b8a4d69bf07fb" translate="yes" xml:space="preserve">
          <source>This produces the following data structure (provided that the browser supports &lt;code&gt;console.log&lt;/code&gt;):</source>
          <target state="translated">Это создает следующую структуру данных (при условии, что браузер поддерживает &lt;code&gt;console.log&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="ea2441e4626bbaa933d91f94581ef965a8c98747" translate="yes" xml:space="preserve">
          <source>This produces two messages:</source>
          <target state="translated">Это приводит к двум сообщениям:</target>
        </trans-unit>
        <trans-unit id="fc3c947e063813842196c7d7043a6f71bdfe405d" translate="yes" xml:space="preserve">
          <source>This property can be useful for getting previous return values of custom events.</source>
          <target state="translated">Это свойство может быть полезно для получения предыдущих возвращаемых значений пользовательских событий.</target>
        </trans-unit>
        <trans-unit id="1e6af58b84f3fd5422adf8be75663d1cdcaec458" translate="yes" xml:space="preserve">
          <source>This property can be useful for profiling event performance by getting the &lt;code&gt;event.timeStamp&lt;/code&gt; value at two points in the code and noting the difference. To simply determine the current time inside an event handler, use &lt;code&gt;(new Date).getTime()&lt;/code&gt; instead.</source>
          <target state="translated">Это свойство может быть полезно для профилирования производительности событий, получая значение &lt;code&gt;event.timeStamp&lt;/code&gt; в двух точках кода и отмечая разницу. Чтобы просто определить текущее время внутри обработчика событий, используйте вместо этого &lt;code&gt;(new Date).getTime()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32854e587e24ee920ce451c5ed1f67d727e051d7" translate="yes" xml:space="preserve">
          <source>This property is available immediately. It is therefore safe to use it to determine whether or not to call &lt;code&gt;$(document).ready()&lt;/code&gt;. The &lt;code&gt;$.browser&lt;/code&gt; property is deprecated in jQuery 1.3, and its functionality may be moved to a team-supported plugin in a future release of jQuery.</source>
          <target state="translated">Это свойство доступно сразу. Поэтому безопасно использовать его, чтобы определить, вызывать ли &lt;code&gt;$(document).ready()&lt;/code&gt; . Свойство &lt;code&gt;$.browser&lt;/code&gt; устарело в jQuery 1.3, и его функциональность может быть перенесена в подключаемый модуль, поддерживаемый командой, в будущей версии jQuery.</target>
        </trans-unit>
        <trans-unit id="0cb47618e4f09b9437b6d3e0140b679d5c2ebfe6" translate="yes" xml:space="preserve">
          <source>This property is deprecated as of version 3.0, and has no effect in browsers that support the &lt;a href=&quot;https://caniuse.com/#feat=requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Это свойство устарело с версии 3.0 и не действует в браузерах, поддерживающих метод &lt;a href=&quot;https://caniuse.com/#feat=requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="02b9c04a0a37a88e51468f13a1b96e7dc499d1cf" translate="yes" xml:space="preserve">
          <source>This property is most often useful in delegated events attached by &lt;a href=&quot;delegate&quot;&gt;&lt;code&gt;.delegate()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;on&quot;&gt;&lt;code&gt;.on()&lt;/code&gt;&lt;/a&gt;, where the event handler is attached at an ancestor of the element being processed. It can be used, for example, to identify and remove event handlers at the delegation point.</source>
          <target state="translated">Это свойство чаще всего полезно в делегированных событиях, прикрепленных с помощью &lt;a href=&quot;delegate&quot;&gt; &lt;code&gt;.delegate()&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;on&quot;&gt; &lt;code&gt;.on()&lt;/code&gt; &lt;/a&gt; , где обработчик событий прикрепляется к предку обрабатываемого элемента. Его можно использовать, например, для идентификации и удаления обработчиков событий в точке делегирования.</target>
        </trans-unit>
        <trans-unit id="5242b856f2e8af25d2fe18fd4c6247bb987e210a" translate="yes" xml:space="preserve">
          <source>This property was introduced in &lt;a href=&quot;https://www.w3.org/TR/2003/NOTE-DOM-Level-3-Events-20031107/events.html#Events-Event-isImmediatePropagationStopped&quot;&gt;DOM level 3&lt;/a&gt;.</source>
          <target state="translated">Это свойство было введено в &lt;a href=&quot;https://www.w3.org/TR/2003/NOTE-DOM-Level-3-Events-20031107/events.html#Events-Event-isImmediatePropagationStopped&quot;&gt;DOM уровня 3&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5624080d6e56e0b5af625d523f2fcfcdbbad692f" translate="yes" xml:space="preserve">
          <source>This property will typically be equal to the &lt;code&gt;this&lt;/code&gt; of the function.</source>
          <target state="translated">Это свойство обычно равно &lt;code&gt;this&lt;/code&gt; функции.</target>
        </trans-unit>
        <trans-unit id="6de398b115e8ac4d3b07baf9ed497787bdfbc62f" translate="yes" xml:space="preserve">
          <source>This results in the DOM structure:</source>
          <target state="translated">В результате получается структура DOM:</target>
        </trans-unit>
        <trans-unit id="3f3c511251892c96fdc482ea356fa92b79ae9eba" translate="yes" xml:space="preserve">
          <source>This results in the structure:</source>
          <target state="translated">В результате получается структура:</target>
        </trans-unit>
        <trans-unit id="31f4d3fdf074258f85fde4229aa90949580dc628" translate="yes" xml:space="preserve">
          <source>This results in two alerts:</source>
          <target state="translated">Это приводит к двум предупреждениям:</target>
        </trans-unit>
        <trans-unit id="fb2238853884687136f37826653802e89b4ec755" translate="yes" xml:space="preserve">
          <source>This selector can be useful for identifying elements in pages produced by server-side frameworks that produce HTML with systematic element IDs. However it will be slower than using a class selector so leverage classes, if you can, to group like elements.</source>
          <target state="translated">Этот селектор может быть полезен для идентификации элементов в страницах,производимых серверными фреймворками,которые производят HTML с систематическими идентификаторами элементов.Однако,это будет медленнее,чем использование селектора классов,так что,если можно,используйте рычаги,чтобы сгруппировать подобные элементы.</target>
        </trans-unit>
        <trans-unit id="542c4fe2ce4fad40e426004d25711efcc3fa66b4" translate="yes" xml:space="preserve">
          <source>This selector is equivalent to &lt;code&gt;:not([attr='value'])&lt;/code&gt;.</source>
          <target state="translated">Этот селектор эквивалентен &lt;code&gt;:not([attr='value'])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4db2a826908ba8d7cc8b0f271e54dfa57adba710" translate="yes" xml:space="preserve">
          <source>This selector is the opposite of the &lt;a href=&quot;hidden-selector&quot;&gt;&lt;code&gt;:hidden&lt;/code&gt;&lt;/a&gt; selector. So, every element selected by &lt;code&gt;:visible&lt;/code&gt; isn't selected by &lt;code&gt;:hidden&lt;/code&gt; and vice versa.</source>
          <target state="translated">Этот селектор противоположен селектору &lt;a href=&quot;hidden-selector&quot;&gt; &lt;code&gt;:hidden&lt;/code&gt; &lt;/a&gt; . Таким образом, каждый элемент, выбранный &lt;code&gt;:visible&lt;/code&gt; , не выбирается &lt;code&gt;:hidden&lt;/code&gt; , и наоборот.</target>
        </trans-unit>
        <trans-unit id="1e74fa4479166ae1158a0c6329853a1894417dc8" translate="yes" xml:space="preserve">
          <source>This selector is the opposite of the &lt;a href=&quot;visible-selector&quot;&gt;&lt;code&gt;:visible&lt;/code&gt;&lt;/a&gt; selector. So, every element selected by &lt;code&gt;:hidden&lt;/code&gt; isn't selected by &lt;code&gt;:visible&lt;/code&gt; and vice versa.</source>
          <target state="translated">Этот селектор противоположен селектору &lt;a href=&quot;visible-selector&quot;&gt; &lt;code&gt;:visible&lt;/code&gt; &lt;/a&gt; . Таким образом, каждый элемент, выбранный &lt;code&gt;:hidden&lt;/code&gt; , не выбран &lt;code&gt;:visible&lt;/code&gt; и наоборот.</target>
        </trans-unit>
        <trans-unit id="b3a2d5e9b02d76f676ebf7a40f5475bdf5d72525" translate="yes" xml:space="preserve">
          <source>This selector matches the test string against each word in the attribute value, where a &quot;word&quot; is defined as a string delimited by whitespace. The selector matches if the test string is exactly equal to any of the words.</source>
          <target state="translated">Этот селектор сопоставляет тестовую строку с каждым словом в значении атрибута,где &quot;слово&quot; определяется как строка,ограниченная пробелами.Селектор совпадает,если тестовая строка точно совпадает с любым из слов.</target>
        </trans-unit>
        <trans-unit id="2aacd81dd9108d85703a0183ce334c9f00b22a92" translate="yes" xml:space="preserve">
          <source>This selector was introduced into the CSS specification to handle language attributes.</source>
          <target state="translated">Этот селектор был введен в спецификацию CSS для работы с языковыми атрибутами.</target>
        </trans-unit>
        <trans-unit id="157e09ed59bcd27e64a54f0808685dfbd88c2ba5" translate="yes" xml:space="preserve">
          <source>This shortcut creates a new, empty array and merges the contents of oldArray into it, effectively cloning the array.</source>
          <target state="translated">Этот ярлык создает новый,пустой массив и объединяет в него содержимое oldArray,эффективно клонируя массив.</target>
        </trans-unit>
        <trans-unit id="fe3f15321a53dc582b1d5e1967292d0bc3fdf9eb" translate="yes" xml:space="preserve">
          <source>This signature does not accept any arguments.</source>
          <target state="translated">Эта подпись не принимает никаких аргументов.</target>
        </trans-unit>
        <trans-unit id="62e54623d8fe421971d23883eb405d33fe0f0049" translate="yes" xml:space="preserve">
          <source>This statement changes the color of items 1, 2, 4, and 5. We could have accomplished the same thing with a simpler jQuery expression, but this technique can be useful when, for example, other libraries provide references to plain DOM nodes.</source>
          <target state="translated">Это утверждение изменяет цвет пунктов 1,2,4 и 5.Мы могли бы сделать то же самое с более простым выражением jQuery,но эта техника может быть полезна,когда,например,другие библиотеки предоставляют ссылки на простые DOM-узлы.</target>
        </trans-unit>
        <trans-unit id="641e0b0e743e0f9db8cc5b5032d87f59f062fa73" translate="yes" xml:space="preserve">
          <source>This technique is especially effective in conjunction with the &lt;code&gt;.ready()&lt;/code&gt; method's ability to alias the jQuery object, as within callback passed to &lt;code&gt;.ready()&lt;/code&gt; you can use &lt;code&gt;$&lt;/code&gt; if you wish without fear of conflicts later:</source>
          <target state="translated">Этот метод особенно эффективен в сочетании с возможностью метода &lt;code&gt;.ready()&lt;/code&gt; использовать псевдоним для объекта jQuery, поскольку в обратном вызове, переданном в &lt;code&gt;.ready()&lt;/code&gt; вы можете использовать &lt;code&gt;$&lt;/code&gt; , если хотите, не опасаясь конфликтов позже:</target>
        </trans-unit>
        <trans-unit id="ef9920d4ff0249fafafc91db9d9e4e8c4396132d" translate="yes" xml:space="preserve">
          <source>This time list item 4 is turned red, since it is two from the end of the set.</source>
          <target state="translated">Этот пункт 4 списка времени стал красным,так как его два из конца набора.</target>
        </trans-unit>
        <trans-unit id="fb54eb060df63805863b2cc09662a50e679af5ab" translate="yes" xml:space="preserve">
          <source>This time only list item 4 is turned red, since it is the only item in the range between two from the end (&lt;code&gt;-2&lt;/code&gt;) and one from the end (&lt;code&gt;-1&lt;/code&gt;).</source>
          <target state="translated">На этот раз только элемент списка 4 станет красным, поскольку это единственный элемент в диапазоне между двумя с конца ( &lt;code&gt;-2&lt;/code&gt; ) и одним с конца ( &lt;code&gt;-1&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8e1b0702c2347c741838ffed942588981600a704" translate="yes" xml:space="preserve">
          <source>This time the variable is not referred to directly within the handlers; instead, the variable is passed in &lt;em&gt;by value&lt;/em&gt; through &lt;code&gt;eventData&lt;/code&gt;, which fixes the value at the time the event is bound. The first handler will now display</source>
          <target state="translated">На этот раз переменная не упоминается непосредственно в обработчиках; вместо этого переменная передается &lt;em&gt;по значению&lt;/em&gt; через &lt;code&gt;eventData&lt;/code&gt; , который фиксирует значение на момент привязки события. Теперь первый обработчик отобразит</target>
        </trans-unit>
        <trans-unit id="33e92c4d32c144b41a463b2a72bc99e0d9ed77bf" translate="yes" xml:space="preserve">
          <source>This use of a function to compute attribute values can be particularly useful when modifying the attributes of multiple elements at once.</source>
          <target state="translated">Такое использование функции для вычисления значений атрибутов может быть особенно полезно при изменении атрибутов нескольких элементов одновременно.</target>
        </trans-unit>
        <trans-unit id="90e99a4c6ae445c81aefa522c507c0b74a3289ec" translate="yes" xml:space="preserve">
          <source>This version removes the handlers regardless of type. To be more precise, we can pass an event type:</source>
          <target state="translated">Эта версия удаляет обработчики независимо от их типа.Точнее,мы можем передать тип события:</target>
        </trans-unit>
        <trans-unit id="4b8f494293589fde5d66a9f0fd3de5d8ce4c6042" translate="yes" xml:space="preserve">
          <source>This will cause each &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; to have a class corresponding to the text it wraps:</source>
          <target state="translated">Это приведет к тому, что каждый &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; будет иметь класс, соответствующий тексту, который он переносит:</target>
        </trans-unit>
        <trans-unit id="4d9118b4fa1f3e8e18281acd7053ecc4ebd98b4f" translate="yes" xml:space="preserve">
          <source>This will change the color of list item A. The &lt;code&gt;.closest()&lt;/code&gt; method begins its search &lt;em&gt;with the element itself&lt;/em&gt; before progressing up the DOM tree, and stops when item A matches the selector.</source>
          <target state="translated">Это изменит цвет элемента списка A. Метод &lt;code&gt;.closest()&lt;/code&gt; начинает свой поиск &lt;em&gt;с самого элемента&lt;/em&gt; перед продвижением вверх по дереву DOM и останавливается, когда элемент A соответствует селектору.</target>
        </trans-unit>
        <trans-unit id="14e650ca3a960ce5e1c69a20a7735fd10a84f51f" translate="yes" xml:space="preserve">
          <source>This will change the color of list item II, which is positioned.</source>
          <target state="translated">Это изменит цвет пункта II списка,который расположен.</target>
        </trans-unit>
        <trans-unit id="6445328f9b2e260ef2fd3767cecdd73168ad2247" translate="yes" xml:space="preserve">
          <source>This will change the color of the level-2 &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;, because it is both the first &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; ancestor of list item A and a descendant of list item II. It will not change the color of the level-1 &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;, however, because it is not a descendant of list item II.</source>
          <target state="translated">Это изменит цвет уровня 2 &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; , потому что он является одновременно первым &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; предком элемента списка A и потомком элемента списка II. Однако он не изменит цвет уровня 1 &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; , потому что он не является потомком элемента списка II.</target>
        </trans-unit>
        <trans-unit id="30761f176591a578865ba51b9704b1d8e4292dab" translate="yes" xml:space="preserve">
          <source>This will change the color of the level-2 &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;, since it is the first encountered when traveling up the DOM tree.</source>
          <target state="translated">Это изменит цвет уровня 2 &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; , поскольку он встречается первым при перемещении вверх по дереву DOM.</target>
        </trans-unit>
        <trans-unit id="da12335e31823528963ade8757b1f95116d49939" translate="yes" xml:space="preserve">
          <source>This will likely be used primarily by plugin authors who wish to handle tasks differently depending on the event namespace used.</source>
          <target state="translated">Скорее всего,это будет использоваться в первую очередь авторами плагинов,которые хотят обрабатывать задачи по-разному в зависимости от используемого пространства имён событий.</target>
        </trans-unit>
        <trans-unit id="23a466e8090dcdd96843ee2332573bed8a724b31" translate="yes" xml:space="preserve">
          <source>This will result in a DOM structure with the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element deleted:</source>
          <target state="translated">Это приведет к созданию структуры DOM с удаленным элементом &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ac3089e0a92b12a862e14834e3811b822b252ec9" translate="yes" xml:space="preserve">
          <source>This will result in a DOM structure with the &lt;code&gt;Hello&lt;/code&gt; text deleted:</source>
          <target state="translated">Это приведет к созданию структуры DOM с удаленным текстом &lt;code&gt;Hello&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8f51918357cfd5fb539009a6a575f4d17e914b38" translate="yes" xml:space="preserve">
          <source>This will return a jQuery collection which contains only the list elements that are descendants of item II.</source>
          <target state="translated">В результате будет возвращена коллекция jQuery,которая содержит только те элементы списка,которые являются потомками предмета II.</target>
        </trans-unit>
        <trans-unit id="7a785e36f45f4fa401ad8eec7085865affc99528" translate="yes" xml:space="preserve">
          <source>This would ensure not only that the request is considered &quot;script&quot; but also that all the prefilters specifically attached to the script dataType would be applied to it.</source>
          <target state="translated">Это обеспечило бы не только то,что запрос считается &quot;сценарием&quot;,но и то,что все префильтры,специально прикрепленные к типу dataType сценария,будут применены к нему.</target>
        </trans-unit>
        <trans-unit id="165aa8fc44c4ce9053215d0b3f1cce72febf22cb" translate="yes" xml:space="preserve">
          <source>This would make a checkbox with name &quot;emailrules&quot; required only if the user entered an email address in the email field, selected via its id, filtered via a custom selector &quot;:filled&quot; that the validation plugin provides.</source>
          <target state="translated">При этом флажок с именем &quot;emailrules&quot; требуется только в том случае,если пользователь вводит адрес электронной почты в поле электронной почты,выбранное через его идентификатор,отфильтрованный с помощью пользовательского селектора &quot;:fill&quot;,который предоставляет плагин проверки.</target>
        </trans-unit>
        <trans-unit id="81eeeb75b1478adca8e3dd409784eaad5e7ebb68" translate="yes" xml:space="preserve">
          <source>This would produce:</source>
          <target state="translated">Это бы произвело:</target>
        </trans-unit>
        <trans-unit id="46f27f8de98384e7a24ee350812b97f396f6bee4" translate="yes" xml:space="preserve">
          <source>This would result in the same DOM structure:</source>
          <target state="translated">В результате получится такая же структура МДУ:</target>
        </trans-unit>
        <trans-unit id="58baabe21ab01d691d64e9475e33f36ed9e069d3" translate="yes" xml:space="preserve">
          <source>Those properties are all documented, and accompanied by examples, on the &lt;a href=&quot;category/events/event-object&quot;&gt;Event object&lt;/a&gt; page.</source>
          <target state="translated">Все эти свойства задокументированы и сопровождаются примерами на странице &lt;a href=&quot;category/events/event-object&quot;&gt;объекта Event&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5378beb7bead698442b7125ac4a3040e6356baa7" translate="yes" xml:space="preserve">
          <source>Tie a one-time click to each div.</source>
          <target state="translated">Привяжите к каждому дайву по одному клику.</target>
        </trans-unit>
        <trans-unit id="0f7d7a6fa56a41cd21f370adf9a86dbeb8e90fc5" translate="yes" xml:space="preserve">
          <source>To access a jQuery object instead of the regular DOM element, use &lt;code&gt;$( this )&lt;/code&gt;. For example:</source>
          <target state="translated">Чтобы получить доступ к объекту jQuery вместо обычного элемента DOM, используйте &lt;code&gt;$( this )&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="ff62a5e64e88e9315771fff26382b54aad3738a6" translate="yes" xml:space="preserve">
          <source>To access event properties not listed above, use the &lt;code&gt;event.originalEvent&lt;/code&gt; object:</source>
          <target state="translated">Для доступа к свойствам события, не перечисленным выше, используйте объект &lt;code&gt;event.originalEvent&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a9baa8489b9460d55a6b81a71e1e5043c1c31b0c" translate="yes" xml:space="preserve">
          <source>To add a special style to list items that are being hovered over, try:</source>
          <target state="translated">Чтобы добавить специальный стиль для списка элементов,которые навешиваются,попробуйте:</target>
        </trans-unit>
        <trans-unit id="5586cbfe258488d82d06183228e5bfa3a4aef3ca" translate="yes" xml:space="preserve">
          <source>To add a special style to table cells that are being hovered over, try:</source>
          <target state="translated">Чтобы добавить особый стиль к ячейкам таблицы,которые навешиваются,попробуйте:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
