<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="django">
    <body>
      <group id="django">
        <trans-unit id="d9363c35de0c24ed2e535f99e48aad5e18fa6e74" translate="yes" xml:space="preserve">
          <source>If you want to restrict the search to a particular template engine, pass the engine&amp;rsquo;s &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;using&lt;/code&gt; argument.</source>
          <target state="translated">Если вы хотите ограничить поиск определенным механизмом шаблонов, передайте &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-NAME&quot;&gt; &lt;code&gt;NAME&lt;/code&gt; &lt;/a&gt; механизма в аргументе &lt;code&gt;using&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a073b38a0044d193c0986f27e9a3dc2f7954430" translate="yes" xml:space="preserve">
          <source>If you want to return a formset that doesn&amp;rsquo;t include &lt;em&gt;any&lt;/em&gt; pre-existing instances of the model, you can specify an empty QuerySet:</source>
          <target state="translated">Если вы хотите вернуть formset , который не содержит &lt;em&gt;каких - либо&lt;/em&gt; уже существующие экземпляры модели, вы можете указать пустое QuerySet:</target>
        </trans-unit>
        <trans-unit id="453b29d39fc22b0b231d1dc0e97ae3ca82e29dc7" translate="yes" xml:space="preserve">
          <source>If you want to reverse all migrations applied for an app, use the name &lt;code&gt;zero&lt;/code&gt;:</source>
          <target state="translated">Если вы хотите отменить все миграции, примененные к приложению, используйте &lt;code&gt;zero&lt;/code&gt; имя :</target>
        </trans-unit>
        <trans-unit id="ae90359159ce2a046afee5fe8740de7f9eb423ea" translate="yes" xml:space="preserve">
          <source>If you want to revert all migrations applied for an app, use the name &lt;code&gt;zero&lt;/code&gt;:</source>
          <target state="translated">Если вы хотите отменить все миграции, примененные к приложению, используйте имя &lt;code&gt;zero&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="458328755ac20bf1935dfcb1e46e0973d7fa75b0" translate="yes" xml:space="preserve">
          <source>If you want to select a language within a template, you can use the &lt;code&gt;language&lt;/code&gt; template tag:</source>
          <target state="translated">Если вы хотите выбрать язык в шаблоне, вы можете использовать тег шаблона &lt;code&gt;language&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ea255638cee3103be21ce078c6c8eb0e0a82aafb" translate="yes" xml:space="preserve">
          <source>If you want to serve your project in a subdirectory (&lt;code&gt;https://example.com/mysite&lt;/code&gt; in this example), you can add &lt;code&gt;WSGIScriptAlias&lt;/code&gt; to the configuration above:</source>
          <target state="translated">Если вы хотите обслуживать свой проект в подкаталоге ( &lt;code&gt;https://example.com/mysite&lt;/code&gt; в этом примере), вы можете добавить &lt;code&gt;WSGIScriptAlias&lt;/code&gt; в приведенную выше конфигурацию:</target>
        </trans-unit>
        <trans-unit id="470d59534ec7120ebb7f43a0559ad898e0a6a691" translate="yes" xml:space="preserve">
          <source>If you want to serve your static files from the same server that&amp;rsquo;s already serving your site, the process may look something like:</source>
          <target state="translated">Если вы хотите обслуживать ваши статические файлы с того же сервера, который уже обслуживает ваш сайт, процесс может выглядеть примерно так:</target>
        </trans-unit>
        <trans-unit id="d1f072200b67438fce5826bd23e1652372b64f96" translate="yes" xml:space="preserve">
          <source>If you want to specify a field&amp;rsquo;s validators, you can do so by defining the field declaratively and setting its &lt;code&gt;validators&lt;/code&gt; parameter:</source>
          <target state="translated">Если вы хотите указать валидаторы поля, вы можете сделать это путем декларативного определения поля и установки его параметра &lt;code&gt;validators&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2045cb8a545994f5940fdb8bb609edfefe504ffd" translate="yes" xml:space="preserve">
          <source>If you want to submit a form or access a session cookie within a frame or iframe, you may need to modify the &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_SAMESITE&quot;&gt;&lt;code&gt;CSRF_COOKIE_SAMESITE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;settings#std:setting-SESSION_COOKIE_SAMESITE&quot;&gt;&lt;code&gt;SESSION_COOKIE_SAMESITE&lt;/code&gt;&lt;/a&gt; settings.</source>
          <target state="translated">Если вы хотите отправить форму или получить доступ к сессионному cookie в рамках фрейма или фрейма, вам может потребоваться изменить настройки &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_SAMESITE&quot;&gt; &lt;code&gt;CSRF_COOKIE_SAMESITE&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;settings#std:setting-SESSION_COOKIE_SAMESITE&quot;&gt; &lt;code&gt;SESSION_COOKIE_SAMESITE&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f156652923d4a2867402c1c5d313ea25450f71ae" translate="yes" xml:space="preserve">
          <source>If you want to upload multiple files using one form field, set the &lt;code&gt;multiple&lt;/code&gt; HTML attribute of field&amp;rsquo;s widget:</source>
          <target state="translated">Если вы хотите загрузить несколько файлов с помощью одного поля формы, установите &lt;code&gt;multiple&lt;/code&gt; атрибутов HTML виджета месторождения:</target>
        </trans-unit>
        <trans-unit id="45963581a6022c16346e1c2ec6732c8d86176fe6" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;a href=&quot;https://docs.python.org/3/library/pdb.html#module-pdb&quot;&gt;&lt;code&gt;pdb&lt;/code&gt;&lt;/a&gt; while debugging tests, you must disable parallel execution (&lt;code&gt;--parallel=1&lt;/code&gt;). You&amp;rsquo;ll see something like &lt;code&gt;bdb.BdbQuit&lt;/code&gt; if you don&amp;rsquo;t.</source>
          <target state="translated">Если вы хотите использовать &lt;a href=&quot;https://docs.python.org/3/library/pdb.html#module-pdb&quot;&gt; &lt;code&gt;pdb&lt;/code&gt; &lt;/a&gt; при отладке тестов, вы должны отключить параллельное выполнение ( &lt;code&gt;--parallel=1&lt;/code&gt; ). Вы увидите что-то вроде &lt;code&gt;bdb.BdbQuit&lt;/code&gt; , если вы этого не сделаете.</target>
        </trans-unit>
        <trans-unit id="09bf01b3a96c96f5b899be6fd6691dca94d0251d" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;code&gt;raise_exception&lt;/code&gt; but also give your users a chance to login first, you can add the &lt;a href=&quot;#django.contrib.auth.decorators.login_required&quot;&gt;&lt;code&gt;login_required()&lt;/code&gt;&lt;/a&gt; decorator:</source>
          <target state="translated">Если вы хотите использовать &lt;code&gt;raise_exception&lt;/code&gt; но также дать своим пользователям возможность сначала войти в систему, вы можете добавить декоратор &lt;a href=&quot;#django.contrib.auth.decorators.login_required&quot;&gt; &lt;code&gt;login_required()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="5dc0b597e5d02af669c0e6dc95f1cbd74aafb742" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;code&gt;{{ MEDIA_URL }}&lt;/code&gt; in your templates, add &lt;code&gt;'django.template.context_processors.media'&lt;/code&gt; in the &lt;code&gt;'context_processors'&lt;/code&gt; option of &lt;a href=&quot;#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Если вы хотите использовать &lt;code&gt;{{ MEDIA_URL }}&lt;/code&gt; в шаблонах, добавьте &lt;code&gt;'django.template.context_processors.media'&lt;/code&gt; в &lt;code&gt;'context_processors'&lt;/code&gt; опции &lt;a href=&quot;#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0c3dd032579f4df0a564516ab9f6887bed67602d" translate="yes" xml:space="preserve">
          <source>If you want to use Django on a production site, use &lt;a href=&quot;https://httpd.apache.org/&quot;&gt;Apache&lt;/a&gt; with &lt;a href=&quot;https://modwsgi.readthedocs.io/en/develop/&quot;&gt;mod_wsgi&lt;/a&gt;. mod_wsgi operates in one of two modes: embedded mode or daemon mode. In embedded mode, mod_wsgi is similar to mod_perl &amp;ndash; it embeds Python within Apache and loads Python code into memory when the server starts. Code stays in memory throughout the life of an Apache process, which leads to significant performance gains over other server arrangements. In daemon mode, mod_wsgi spawns an independent daemon process that handles requests. The daemon process can run as a different user than the Web server, possibly leading to improved security. The daemon process can be restarted without restarting the entire Apache Web server, possibly making refreshing your codebase more seamless. Consult the mod_wsgi documentation to determine which mode is right for your setup. Make sure you have Apache installed with the mod_wsgi module activated. Django will work with any version of Apache that supports mod_wsgi.</source>
          <target state="translated">Если вы хотите использовать Django на производственном сайте, используйте &lt;a href=&quot;https://httpd.apache.org/&quot;&gt;Apache&lt;/a&gt; с &lt;a href=&quot;https://modwsgi.readthedocs.io/en/develop/&quot;&gt;mod_wsgi&lt;/a&gt;, mod_wsgi работает в одном из двух режимов: встроенный режим или режим демона. Во встроенном режиме mod_wsgi похож на mod_perl - он встраивает Python в Apache и загружает код Python в память при запуске сервера. Код остается в памяти на протяжении всего жизненного цикла процесса Apache, что приводит к значительному увеличению производительности по сравнению с другими серверными устройствами. В режиме демона mod_wsgi порождает независимый процесс демона, который обрабатывает запросы. Процесс-демон может работать от имени другого пользователя, нежели веб-сервер, что может привести к повышению безопасности Процесс демона может быть перезапущен без перезапуска всего веб-сервера Apache, что может сделать обновление базы кода более плавным. Обратитесь к документации mod_wsgi, чтобы определить, какой режим подходит для вашей настройки. Убедитесь, что у вас установлен Apache с активированным модулем mod_wsgi.Django будет работать с любой версией Apache, которая поддерживает mod_wsgi.</target>
        </trans-unit>
        <trans-unit id="7c92963f8c898d1ccffd90cfaac208f60b5e5b47" translate="yes" xml:space="preserve">
          <source>If you want to use a custom &lt;a href=&quot;../forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt; (for instance to add extra validation), set &lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.FormMixin.form_class&quot;&gt;&lt;code&gt;form_class&lt;/code&gt;&lt;/a&gt; on your view.</source>
          <target state="translated">Если вы хотите использовать пользовательскую &lt;a href=&quot;../forms/modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt; (например, для добавления дополнительной проверки), установите &lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.FormMixin.form_class&quot;&gt; &lt;code&gt;form_class&lt;/code&gt; &lt;/a&gt; в своем представлении.</target>
        </trans-unit>
        <trans-unit id="316d41ea216f94382282cfe3b25a5c07e352a193" translate="yes" xml:space="preserve">
          <source>If you want to use a custom widget with a relation field (i.e. &lt;a href=&quot;../../models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt;), make sure you haven&amp;rsquo;t included that field&amp;rsquo;s name in &lt;code&gt;raw_id_fields&lt;/code&gt;, &lt;code&gt;radio_fields&lt;/code&gt;, or &lt;code&gt;autocomplete_fields&lt;/code&gt;.</source>
          <target state="translated">Если вы хотите использовать собственный виджет с полем соотношения (т.е. &lt;a href=&quot;../../models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../../models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt; ), убедитесь , что вы не включили , что имя поля в &lt;code&gt;raw_id_fields&lt;/code&gt; , &lt;code&gt;radio_fields&lt;/code&gt; или &lt;code&gt;autocomplete_fields&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72ff3767011b9eb84f053fc485cd959d42700e5b" translate="yes" xml:space="preserve">
          <source>If you want to use a database-backed session, you need to add &lt;code&gt;'django.contrib.sessions'&lt;/code&gt; to your &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">Если вы хотите использовать сеанс, поддерживаемый базой данных, вам нужно добавить &lt;code&gt;'django.contrib.sessions'&lt;/code&gt; в настройку &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c485b12671856cb3f97a146712ef453cc167eaf1" translate="yes" xml:space="preserve">
          <source>If you want to use a different &lt;code&gt;Client&lt;/code&gt; class (for example, a subclass with customized behavior), use the &lt;a href=&quot;#django.test.SimpleTestCase.client_class&quot;&gt;&lt;code&gt;client_class&lt;/code&gt;&lt;/a&gt; class attribute:</source>
          <target state="translated">Если вы хотите использовать другой класс &lt;code&gt;Client&lt;/code&gt; (например, подкласс с настраиваемым поведением), используйте &lt;a href=&quot;#django.test.SimpleTestCase.client_class&quot;&gt; &lt;code&gt;client_class&lt;/code&gt; &lt;/a&gt; класса client_class :</target>
        </trans-unit>
        <trans-unit id="5db65e04d45386782928afe748f9d80b1e108065" translate="yes" xml:space="preserve">
          <source>If you want to use headers to disable caching altogether, &lt;a href=&quot;http/decorators#django.views.decorators.cache.never_cache&quot;&gt;&lt;code&gt;never_cache()&lt;/code&gt;&lt;/a&gt; is a view decorator that adds headers to ensure the response won&amp;rsquo;t be cached by browsers or other caches. Example:</source>
          <target state="translated">Если вы хотите использовать заголовки для &lt;a href=&quot;http/decorators#django.views.decorators.cache.never_cache&quot;&gt; &lt;code&gt;never_cache()&lt;/code&gt; &lt;/a&gt; отключения кэширования, never_cache () - это декоратор представления, который добавляет заголовки, чтобы гарантировать, что ответ не будет кэширован браузерами или другими кешами. Пример:</target>
        </trans-unit>
        <trans-unit id="8361c5fa5bdf1c6b873a3e941b8993711b228a02" translate="yes" xml:space="preserve">
          <source>If you want to use the admin layout, extend from &lt;code&gt;admin/base_site.html&lt;/code&gt;:</source>
          <target state="translated">Если вы хотите использовать макет &lt;code&gt;admin/base_site.html&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="186071bb932b421ca839f6a4ddf35ff070f60d16" translate="yes" xml:space="preserve">
          <source>If you want to use these, you will need to deploy Django using &lt;a href=&quot;../howto/deployment/asgi/index&quot;&gt;ASGI&lt;/a&gt; instead.</source>
          <target state="translated">Если вы хотите использовать их, вам нужно будет развернуть Django с помощью &lt;a href=&quot;../howto/deployment/asgi/index&quot;&gt;ASGI&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7a82fb0e4828be0c9686fdb58d8239454489f85b" translate="yes" xml:space="preserve">
          <source>If you want to work with model classes or model instances from the &lt;code&gt;from_state&lt;/code&gt; argument in &lt;code&gt;database_forwards()&lt;/code&gt; or &lt;code&gt;database_backwards()&lt;/code&gt;, you must render model states using the &lt;code&gt;clear_delayed_apps_cache()&lt;/code&gt; method to make related models available:</source>
          <target state="translated">Если вы хотите работать с классами моделей или экземплярами моделей из аргумента &lt;code&gt;from_state&lt;/code&gt; в &lt;code&gt;database_forwards()&lt;/code&gt; или &lt;code&gt;database_backwards()&lt;/code&gt; , вы должны отобразить состояния модели с помощью &lt;code&gt;clear_delayed_apps_cache()&lt;/code&gt; чтобы сделать связанные модели доступными:</target>
        </trans-unit>
        <trans-unit id="ddefbc21db307ddde4dcfed071042c3b03fd65a6" translate="yes" xml:space="preserve">
          <source>If you want your custom user model to also work with the admin, your user model must define some additional attributes and methods. These methods allow the admin to control access of the user to admin content:</source>
          <target state="translated">Если вы хотите,чтобы ваша пользовательская модель также работала с администратором,ваша пользовательская модель должна определить некоторые дополнительные атрибуты и методы.Эти методы позволяют администратору контролировать доступ пользователя к контенту администратора:</target>
        </trans-unit>
        <trans-unit id="281b29199ee15df8030aeddb22d5e3ee5ba23b2d" translate="yes" xml:space="preserve">
          <source>If you wanted to add a new manager to the Proxy, without replacing the existing default, you can use the techniques described in the &lt;a href=&quot;managers#custom-managers-and-inheritance&quot;&gt;custom manager&lt;/a&gt; documentation: create a base class containing the new managers and inherit that after the primary base class:</source>
          <target state="translated">Если вы хотите добавить нового менеджера в Proxy без замены существующего по умолчанию, вы можете использовать методы, описанные в документации по &lt;a href=&quot;managers#custom-managers-and-inheritance&quot;&gt;пользовательскому менеджеру&lt;/a&gt; : создайте базовый класс, содержащий новые менеджеры, и наследуйте его после основного базового класса:</target>
        </trans-unit>
        <trans-unit id="ce151f538ddf72bffbb0e10083ffad1aba038cda" translate="yes" xml:space="preserve">
          <source>If you wanted to add checks to a model manager, you would take the same approach on your subclass of &lt;a href=&quot;db/managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Если вы хотите добавить проверки в менеджер моделей, вы бы применили тот же подход к своему подклассу &lt;a href=&quot;db/managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c6cd0e76c2fef52fb36e48a577f2af1ba781eba5" translate="yes" xml:space="preserve">
          <source>If you wanted to display an inline on the &lt;code&gt;Person&lt;/code&gt; admin add/change pages you need to explicitly define the foreign key since it is unable to do so automatically:</source>
          <target state="translated">Если вы хотите , чтобы отобразить инлайн на &lt;code&gt;Person&lt;/code&gt; администратора добавлять страницы / изменения , которые необходимо явно определить внешний ключ , так как он не в состоянии сделать это автоматически:</target>
        </trans-unit>
        <trans-unit id="07539613b20b80f84b619ddd76722bd149b459aa" translate="yes" xml:space="preserve">
          <source>If you wanted to retrieve the uploaded file&amp;rsquo;s on-disk filename, or the file&amp;rsquo;s size, you could use the &lt;a href=&quot;../files/file#django.core.files.File.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../files/file#django.core.files.File.size&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt; attributes respectively; for more information on the available attributes and methods, see the &lt;a href=&quot;../files/file#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; class reference and the &lt;a href=&quot;../../topics/files&quot;&gt;Managing files&lt;/a&gt; topic guide.</source>
          <target state="translated">Если вы хотите получить имя файла загруженного файла на диске или размер файла, вы можете использовать атрибуты &lt;a href=&quot;../files/file#django.core.files.File.name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../files/file#django.core.files.File.size&quot;&gt; &lt;code&gt;size&lt;/code&gt; &lt;/a&gt; соответственно; Для получения дополнительной информации о доступных атрибутах и методах, см &lt;a href=&quot;../files/file#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; ссылка на класс и &lt;a href=&quot;../../topics/files&quot;&gt;управление файлами&lt;/a&gt; , тему руководства.</target>
        </trans-unit>
        <trans-unit id="b0b81a58992bc81d6e10a12990d5032b8172bb7a" translate="yes" xml:space="preserve">
          <source>If you wish to call a function with a &lt;code&gt;using&lt;/code&gt; parameter you can do it by wrapping the call with a &lt;code&gt;lambda&lt;/code&gt; to add an extra parameter:</source>
          <target state="translated">Если вы хотите вызвать функцию с параметром &lt;code&gt;using&lt;/code&gt; , вы можете сделать это, добавив &lt;code&gt;lambda&lt;/code&gt; к вызову, чтобы добавить дополнительный параметр:</target>
        </trans-unit>
        <trans-unit id="f26de0b1fb03d0b7c3a7b0c5f5e0aa437ee3f542" translate="yes" xml:space="preserve">
          <source>If you wish to change the index, login or logout templates, you are better off creating your own &lt;code&gt;AdminSite&lt;/code&gt; instance (see below), and changing the &lt;a href=&quot;#django.contrib.admin.AdminSite.index_template&quot;&gt;&lt;code&gt;AdminSite.index_template&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;#django.contrib.admin.AdminSite.login_template&quot;&gt;&lt;code&gt;AdminSite.login_template&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#django.contrib.admin.AdminSite.logout_template&quot;&gt;&lt;code&gt;AdminSite.logout_template&lt;/code&gt;&lt;/a&gt; properties.</source>
          <target state="translated">Если вы хотите изменить шаблоны индекса, входа в систему или выхода из системы, лучше создать собственный экземпляр &lt;code&gt;AdminSite&lt;/code&gt; (см. Ниже) и изменить свойства &lt;a href=&quot;#django.contrib.admin.AdminSite.index_template&quot;&gt; &lt;code&gt;AdminSite.index_template&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#django.contrib.admin.AdminSite.login_template&quot;&gt; &lt;code&gt;AdminSite.login_template&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;#django.contrib.admin.AdminSite.logout_template&quot;&gt; &lt;code&gt;AdminSite.logout_template&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fd89bde5afb1b4ac48d534864f59e0b25319f574" translate="yes" xml:space="preserve">
          <source>If you wish to have separate templates for &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#CreateView&quot;&gt;&lt;code&gt;CreateView&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#UpdateView&quot;&gt;&lt;code&gt;UpdateView&lt;/code&gt;&lt;/a&gt;, you can set either &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.template_name&quot;&gt;&lt;code&gt;template_name&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectTemplateResponseMixin.template_name_suffix&quot;&gt;&lt;code&gt;template_name_suffix&lt;/code&gt;&lt;/a&gt; on your view class.</source>
          <target state="translated">Если вы хотите иметь отдельные шаблоны для &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#CreateView&quot;&gt; &lt;code&gt;CreateView&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#UpdateView&quot;&gt; &lt;code&gt;UpdateView&lt;/code&gt; &lt;/a&gt; , вы можете установить либо &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.template_name&quot;&gt; &lt;code&gt;template_name&lt;/code&gt; ,&lt;/a&gt; либо &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectTemplateResponseMixin.template_name_suffix&quot;&gt; &lt;code&gt;template_name_suffix&lt;/code&gt; &lt;/a&gt; в вашем классе представления.</target>
        </trans-unit>
        <trans-unit id="bae671e1d4f3ce5d8ed5acdcbf7abf7fadef645d" translate="yes" xml:space="preserve">
          <source>If you wish to have separate templates for &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#CreateView&quot;&gt;&lt;code&gt;CreateView&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#UpdateView&quot;&gt;&lt;code&gt;UpdateView&lt;/code&gt;&lt;/a&gt;, you can set either &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.template_name&quot;&gt;&lt;code&gt;template_name&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectTemplateResponseMixin.template_name_suffix&quot;&gt;&lt;code&gt;template_name_suffix&lt;/code&gt;&lt;/a&gt; on your view class.</source>
          <target state="translated">Если вы хотите иметь отдельные шаблоны для &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#CreateView&quot;&gt; &lt;code&gt;CreateView&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#UpdateView&quot;&gt; &lt;code&gt;UpdateView&lt;/code&gt; &lt;/a&gt; , вы можете установить либо &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.TemplateResponseMixin.template_name&quot;&gt; &lt;code&gt;template_name&lt;/code&gt; ,&lt;/a&gt; либо &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectTemplateResponseMixin.template_name_suffix&quot;&gt; &lt;code&gt;template_name_suffix&lt;/code&gt; &lt;/a&gt; для своего класса представления.</target>
        </trans-unit>
        <trans-unit id="c63c598798c3a61a008e5d7569767325195fe300" translate="yes" xml:space="preserve">
          <source>If you wish to override this behavior, you can override &lt;a href=&quot;index#django.contrib.admin.ModelAdmin.delete_queryset&quot;&gt;&lt;code&gt;ModelAdmin.delete_queryset()&lt;/code&gt;&lt;/a&gt; or write a custom action which does deletion in your preferred manner &amp;ndash; for example, by calling &lt;code&gt;Model.delete()&lt;/code&gt; for each of the selected items.</source>
          <target state="translated">Если вы хотите переопределить это поведение, вы можете переопределить &lt;a href=&quot;index#django.contrib.admin.ModelAdmin.delete_queryset&quot;&gt; &lt;code&gt;ModelAdmin.delete_queryset()&lt;/code&gt; &lt;/a&gt; или написать настраиваемое действие, которое выполняет удаление по вашему &lt;code&gt;Model.delete()&lt;/code&gt; например, вызвав Model.delete () для каждого из выбранных элементов.</target>
        </trans-unit>
        <trans-unit id="c81732d3ee4b9133691a67e4efeae93d3348110c" translate="yes" xml:space="preserve">
          <source>If you wish to perform arbitrary distance queries using non-point geometries in WGS84 in PostGIS and you want decent performance, enable the &lt;a href=&quot;#django.contrib.gis.db.models.GeometryField.geography&quot;&gt;&lt;code&gt;GeometryField.geography&lt;/code&gt;&lt;/a&gt; keyword so that &lt;a href=&quot;#geography-type&quot;&gt;geography database type&lt;/a&gt; is used instead.</source>
          <target state="translated">Если вы хотите выполнять произвольные дистанционные запросы с использованием неточечных геометрий в WGS84 в PostGIS и хотите достойную производительность, включите ключевое слово &lt;a href=&quot;#django.contrib.gis.db.models.GeometryField.geography&quot;&gt; &lt;code&gt;GeometryField.geography&lt;/code&gt; ,&lt;/a&gt; чтобы вместо этого использовался &lt;a href=&quot;#geography-type&quot;&gt;тип базы данных географии&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d149fe0ba9386b629de5325bd32fff38e705d495" translate="yes" xml:space="preserve">
          <source>If you wish to protect a list, tuple or dictionary you can do so using the signing module&amp;rsquo;s &lt;code&gt;dumps&lt;/code&gt; and &lt;code&gt;loads&lt;/code&gt; functions. These imitate Python&amp;rsquo;s pickle module, but use JSON serialization under the hood. JSON ensures that even if your &lt;a href=&quot;../ref/settings#std:setting-SECRET_KEY&quot;&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/a&gt; is stolen an attacker will not be able to execute arbitrary commands by exploiting the pickle format:</source>
          <target state="translated">Если вы хотите защитить список, кортеж или словарь, вы можете сделать это, используя функции создания &lt;code&gt;dumps&lt;/code&gt; и &lt;code&gt;loads&lt;/code&gt; модуля подписи . Они имитируют модуль pickle в Python, но используют скрытую сериализацию JSON. JSON гарантирует, что даже если ваш &lt;a href=&quot;../ref/settings#std:setting-SECRET_KEY&quot;&gt; &lt;code&gt;SECRET_KEY&lt;/code&gt; &lt;/a&gt; украден, злоумышленник не сможет выполнять произвольные команды, используя формат pickle:</target>
        </trans-unit>
        <trans-unit id="1a7ff6c29d67b18f351c6ef695f42316c70e46f0" translate="yes" xml:space="preserve">
          <source>If you wish to store information related to &lt;code&gt;User&lt;/code&gt;, you can use a &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; to a model containing the fields for additional information. This one-to-one model is often called a profile model, as it might store non-auth related information about a site user. For example you might create an Employee model:</source>
          <target state="translated">Если вы хотите сохранить информацию, связанную с &lt;code&gt;User&lt;/code&gt; , вы можете использовать &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; &lt;/a&gt; для модели, содержащей поля для дополнительной информации. Эту модель &amp;laquo;один к одному&amp;raquo; часто называют моделью профиля, поскольку она может хранить информацию, не связанную с аутентификацией, о пользователе сайта. Например, вы можете создать модель Employee:</target>
        </trans-unit>
        <trans-unit id="e3163de4f64d0e6226c0693d4c28e0ff7be844ba" translate="yes" xml:space="preserve">
          <source>If you wish to store the CSRF token in the user&amp;rsquo;s session, use the &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt;&lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">Если вы хотите сохранить токен CSRF в сеансе пользователя, используйте параметр &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt; &lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="95ab3f31deb5e5844d6cefd4f6792b2923cdc1d0" translate="yes" xml:space="preserve">
          <source>If you wish to submit your site to the &lt;a href=&quot;https://hstspreload.org/&quot;&gt;browser preload list&lt;/a&gt;, set the &lt;a href=&quot;settings#std:setting-SECURE_HSTS_PRELOAD&quot;&gt;&lt;code&gt;SECURE_HSTS_PRELOAD&lt;/code&gt;&lt;/a&gt; setting to &lt;code&gt;True&lt;/code&gt;. That appends the &lt;code&gt;preload&lt;/code&gt; directive to the &lt;code&gt;Strict-Transport-Security&lt;/code&gt; header.</source>
          <target state="translated">Если вы хотите отправить свой сайт в &lt;a href=&quot;https://hstspreload.org/&quot;&gt;список предварительной загрузки браузера&lt;/a&gt; , установите для параметра &lt;a href=&quot;settings#std:setting-SECURE_HSTS_PRELOAD&quot;&gt; &lt;code&gt;SECURE_HSTS_PRELOAD&lt;/code&gt; &lt;/a&gt; значение &lt;code&gt;True&lt;/code&gt; . Это добавляет директиву &lt;code&gt;preload&lt;/code&gt; к заголовку &lt;code&gt;Strict-Transport-Security&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="530ae0cc38e2e42a905344acaf5f960f73fc3715" translate="yes" xml:space="preserve">
          <source>If you wish to use a different template for each sitemap or sitemap index available on your site, you may specify it by passing a &lt;code&gt;template_name&lt;/code&gt; parameter to the &lt;code&gt;sitemap&lt;/code&gt; and &lt;code&gt;index&lt;/code&gt; views via the URLconf:</source>
          <target state="translated">Если вы хотите использовать отдельный шаблон для каждой карты сайта или индекса карты сайта, доступных на вашем сайте, вы можете указать его, передав параметр &lt;code&gt;template_name&lt;/code&gt; в карту &lt;code&gt;sitemap&lt;/code&gt; и просмотри &lt;code&gt;index&lt;/code&gt; через URLconf:</target>
        </trans-unit>
        <trans-unit id="6909e16e21302fa3cec3921ce60357ae9b5838a2" translate="yes" xml:space="preserve">
          <source>If you wish to use another database, install the appropriate &lt;a href=&quot;../topics/install#database-installation&quot;&gt;database bindings&lt;/a&gt; and change the following keys in the &lt;a href=&quot;../ref/settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt;&lt;code&gt;'default'&lt;/code&gt; item to match your database connection settings:</source>
          <target state="translated">Если вы хотите использовать другую базу данных, установите соответствующие &lt;a href=&quot;../topics/install#database-installation&quot;&gt;привязки базы данных&lt;/a&gt; и измените следующие ключи в элементе &lt;a href=&quot;../ref/settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt; &lt;code&gt;'default'&lt;/code&gt; в соответствии с настройками подключения к вашей базе данных:</target>
        </trans-unit>
        <trans-unit id="b6e2765329d13f9a756817f8148fc06ebd15e20d" translate="yes" xml:space="preserve">
          <source>If you would like to give translators hints about a translatable string, you can add a comment prefixed with the &lt;code&gt;Translators&lt;/code&gt; keyword on the line preceding the string, e.g.:</source>
          <target state="translated">Если вы хотите дать переводчикам подсказки о переводимой строке, вы можете добавить комментарий с префиксом ключевого слова &lt;code&gt;Translators&lt;/code&gt; в строке, предшествующей строке, например:</target>
        </trans-unit>
        <trans-unit id="ec10a212c4274c393a2dd780fbf91de455cc5cb9" translate="yes" xml:space="preserve">
          <source>If you would like to override the &lt;code&gt;clean()&lt;/code&gt; method and maintain this validation, you must call the parent class&amp;rsquo;s &lt;code&gt;clean()&lt;/code&gt; method.</source>
          <target state="translated">Если вы хотите переопределить метод &lt;code&gt;clean()&lt;/code&gt; и сохранить эту проверку, вы должны вызвать метод &lt;code&gt;clean()&lt;/code&gt; родительского класса .</target>
        </trans-unit>
        <trans-unit id="3f28065cea9d31fe5a0cfcc2e982ee60d5116348" translate="yes" xml:space="preserve">
          <source>If you would rather start from an empty database and re-run all migrations, you should drop and recreate the database and then run &lt;a href=&quot;#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Если вы предпочитаете начинать с пустой базы данных и перезапускать все миграции, вам следует удалить и заново создать базу данных, а затем запустить &lt;a href=&quot;#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="787d4b4a6adbad5e56e698fbb47e2f7227b1967b" translate="yes" xml:space="preserve">
          <source>If you write a custom filter that operates on &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; objects, you&amp;rsquo;ll usually register it with the &lt;code&gt;expects_localtime&lt;/code&gt; flag set to &lt;code&gt;True&lt;/code&gt;:</source>
          <target state="translated">Если вы пишете пользовательский фильтр, который работает с объектами &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt; , вы обычно регистрируете его с флагом &lt;code&gt;expects_localtime&lt;/code&gt; установленным в &lt;code&gt;True&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="41a73fd1c496ecfedcbd96f35862caf467d2aa9d" translate="yes" xml:space="preserve">
          <source>If you write your own password hasher that contains a work factor such as a number of iterations, you should implement a &lt;code&gt;harden_runtime(self, password, encoded)&lt;/code&gt; method to bridge the runtime gap between the work factor supplied in the &lt;code&gt;encoded&lt;/code&gt; password and the default work factor of the hasher. This prevents a user enumeration timing attack due to difference between a login request for a user with a password encoded in an older number of iterations and a nonexistent user (which runs the default hasher&amp;rsquo;s default number of iterations).</source>
          <target state="translated">Если вы пишете свой собственный хэш пароля, который содержит рабочий фактор, такой как количество итераций, вы должны реализовать &lt;code&gt;harden_runtime(self, password, encoded)&lt;/code&gt; чтобы преодолеть разрыв времени выполнения между рабочим фактором, указанным в &lt;code&gt;encoded&lt;/code&gt; пароле, и работой по умолчанию фактор хэша. Это предотвращает атаку синхронизации перечисления пользователей из-за разницы между запросом на вход в систему для пользователя с паролем, закодированным в старом числе итераций, и несуществующего пользователя (который выполняет число итераций по умолчанию для хеш-функции по умолчанию).</target>
        </trans-unit>
        <trans-unit id="0874fbd3ce49447e25c47a3eeb9385b0739ec7b9" translate="yes" xml:space="preserve">
          <source>If you write your own similar functions and deal with translations, you&amp;rsquo;ll face the problem of what to do when the first argument is a lazy translation object. You don&amp;rsquo;t want to convert it to a string immediately, because you might be using this function outside of a view (and hence the current thread&amp;rsquo;s locale setting will not be correct).</source>
          <target state="translated">Если вы напишите свои аналогичные функции и будете иметь дело с переводами, вы столкнетесь с проблемой того, что делать, когда первый аргумент является ленивым объектом перевода. Вы не хотите немедленно преобразовывать его в строку, потому что вы можете использовать эту функцию вне представления (и, следовательно, настройка локали текущего потока не будет правильной).</target>
        </trans-unit>
        <trans-unit id="7404aaf8b678e2be0f5abe5634bc5b715f5e8c11" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like default values to come from somewhere other than &lt;code&gt;django.conf.global_settings&lt;/code&gt;, you can pass in a module or class that provides the default settings as the &lt;code&gt;default_settings&lt;/code&gt; argument (or as the first positional argument) in the call to &lt;code&gt;configure()&lt;/code&gt;.</source>
          <target state="translated">Если вы хотите, чтобы значения по умолчанию приходили не из &lt;code&gt;django.conf.global_settings&lt;/code&gt; , вы можете передать модуль или класс, который предоставляет настройки по умолчанию, в качестве аргумента &lt;code&gt;default_settings&lt;/code&gt; (или в качестве первого позиционного аргумента) в вызове &lt;code&gt;configure()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="87fbb560a0a7d5bfb6385760a929b01781e9247b" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to be able to update your Django code occasionally with the latest bug fixes and improvements, follow these instructions:</source>
          <target state="translated">Если вы хотите периодически обновлять свой код Django с помощью последних исправлений и улучшений, следуйте этим инструкциям:</target>
        </trans-unit>
        <trans-unit id="2e426d25005a653ab3104419888711627e40acb9" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to customize the behavior of &lt;a href=&quot;../ref/middleware#django.middleware.common.BrokenLinkEmailsMiddleware&quot;&gt;&lt;code&gt;django.middleware.common.BrokenLinkEmailsMiddleware&lt;/code&gt;&lt;/a&gt; further (for example to ignore requests coming from web crawlers), you should subclass it and override its methods.</source>
          <target state="translated">Если вы хотите дополнительно настроить поведение &lt;a href=&quot;../ref/middleware#django.middleware.common.BrokenLinkEmailsMiddleware&quot;&gt; &lt;code&gt;django.middleware.common.BrokenLinkEmailsMiddleware&lt;/code&gt; &lt;/a&gt; (например, игнорировать запросы, поступающие от веб-сканеров), вам следует создать его подкласс и переопределить его методы.</target>
        </trans-unit>
        <trans-unit id="40a45578a28fb495c1954bbd188030f39d58e346" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to manually authenticate a user by comparing a plain-text password to the hashed password in the database, use the convenience function &lt;a href=&quot;#django.contrib.auth.hashers.check_password&quot;&gt;&lt;code&gt;check_password()&lt;/code&gt;&lt;/a&gt;. It takes two arguments: the plain-text password to check, and the full value of a user&amp;rsquo;s &lt;code&gt;password&lt;/code&gt; field in the database to check against, and returns &lt;code&gt;True&lt;/code&gt; if they match, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">Если вы хотите вручную аутентифицировать пользователя, сравнивая простой текстовый пароль с хешированным паролем в базе данных, используйте &lt;a href=&quot;#django.contrib.auth.hashers.check_password&quot;&gt; &lt;code&gt;check_password()&lt;/code&gt; &lt;/a&gt; функцию check_password () . Он принимает два аргумента: текстовый пароль для проверки и полное значение поля &lt;code&gt;password&lt;/code&gt; пользователя в базе данных для проверки и возвращает &lt;code&gt;True&lt;/code&gt; , если они совпадают, &lt;code&gt;False&lt;/code&gt; в противном случае.</target>
        </trans-unit>
        <trans-unit id="7032cf12cbd255835e52ce652c41252d70b15172" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to retrieve a URL without displaying it, you can use a slightly different call:</source>
          <target state="translated">Если вы хотите получить URL-адрес без его отображения, вы можете использовать немного другой вызов:</target>
        </trans-unit>
        <trans-unit id="3e6e1935ff1f8bbe3d9a10a3392b2aed18e77332" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to retrieve a namespaced URL, specify the fully qualified name:</source>
          <target state="translated">Если вы хотите получить URL-адрес в пространстве имен, укажите полное имя:</target>
        </trans-unit>
        <trans-unit id="42574c0524ed457c65a64125a0ee03cde3ec0664" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to retrieve a static URL without displaying it, you can use a slightly different call:</source>
          <target state="translated">Если вы хотите получить статический URL-адрес без его отображения, вы можете использовать немного другой вызов:</target>
        </trans-unit>
        <trans-unit id="782329d0998e5379bd00452f104bcc26d52e8259" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to retrieve a translated string without displaying it, you can use the following syntax:</source>
          <target state="translated">Если вы хотите получить переведенную строку без ее отображения, вы можете использовать следующий синтаксис:</target>
        </trans-unit>
        <trans-unit id="a678c4aabe8ea3a89184137c4d4eb0cd0f145382" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to set up your own admin site with custom behavior, you&amp;rsquo;re free to subclass &lt;code&gt;AdminSite&lt;/code&gt; and override or add anything you like. Then, create an instance of your &lt;code&gt;AdminSite&lt;/code&gt; subclass (the same way you&amp;rsquo;d instantiate any other Python class) and register your models and &lt;code&gt;ModelAdmin&lt;/code&gt; subclasses with it instead of with the default site. Finally, update &lt;code&gt;myproject/urls.py&lt;/code&gt; to reference your &lt;a href=&quot;#django.contrib.admin.AdminSite&quot;&gt;&lt;code&gt;AdminSite&lt;/code&gt;&lt;/a&gt; subclass.</source>
          <target state="translated">Если вы хотите настроить свой собственный сайт администратора с пользовательским поведением, вы можете создать подкласс &lt;code&gt;AdminSite&lt;/code&gt; и переопределить или добавить все, что захотите. Затем создайте экземпляр вашего подкласса &lt;code&gt;AdminSite&lt;/code&gt; (так же, как вы создаете экземпляр любого другого класса Python) и зарегистрируйте в нем свои модели и подклассы &lt;code&gt;ModelAdmin&lt;/code&gt; вместо сайта по умолчанию. Наконец, обновление &lt;code&gt;myproject/urls.py&lt;/code&gt; ссылаться на ваш &lt;a href=&quot;#django.contrib.admin.AdminSite&quot;&gt; &lt;code&gt;AdminSite&lt;/code&gt; &lt;/a&gt; подкласс.</target>
        </trans-unit>
        <trans-unit id="817d51330fc9dd66b1c2b0e80b8eed9e206bc902" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to specify a custom primary key, specify &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.primary_key&quot;&gt;&lt;code&gt;primary_key=True&lt;/code&gt;&lt;/a&gt; on one of your fields. If Django sees you&amp;rsquo;ve explicitly set &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.primary_key&quot;&gt;&lt;code&gt;Field.primary_key&lt;/code&gt;&lt;/a&gt;, it won&amp;rsquo;t add the automatic &lt;code&gt;id&lt;/code&gt; column.</source>
          <target state="translated">Если вы хотите указать пользовательский первичный ключ, укажите &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.primary_key&quot;&gt; &lt;code&gt;primary_key=True&lt;/code&gt; &lt;/a&gt; в одном из ваших полей. Если Django увидит, что вы явно &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.primary_key&quot;&gt; &lt;code&gt;Field.primary_key&lt;/code&gt; &lt;/a&gt; , он не добавит столбец автоматического &lt;code&gt;id&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59523cacb99089a63ab1f97cf8f948701988f18d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d prefer Django not to create a backwards relation, set &lt;code&gt;related_name&lt;/code&gt; to &lt;code&gt;'+'&lt;/code&gt; or end it with &lt;code&gt;'+'&lt;/code&gt;. For example, this will ensure that the &lt;code&gt;User&lt;/code&gt; model won&amp;rsquo;t have a backwards relation to this model:</source>
          <target state="translated">Если вы предпочитаете, чтобы Django не создавал обратную связь, установите для &lt;code&gt;related_name&lt;/code&gt; значение &lt;code&gt;'+'&lt;/code&gt; или завершите его с помощью &lt;code&gt;'+'&lt;/code&gt; . Например, это гарантирует, что модель &lt;code&gt;User&lt;/code&gt; не будет иметь обратную связь с этой моделью:</target>
        </trans-unit>
        <trans-unit id="1b20aacdd666251729295967fecf137a2c2099d5" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d prefer not to call the template &lt;code&gt;registration/login.html&lt;/code&gt;, you can pass the &lt;code&gt;template_name&lt;/code&gt; parameter via the extra arguments to the &lt;code&gt;as_view&lt;/code&gt; method in your URLconf. For example, this URLconf line would use &lt;code&gt;myapp/login.html&lt;/code&gt; instead:</source>
          <target state="translated">Если вы не хотите вызывать шаблон &lt;code&gt;registration/login.html&lt;/code&gt; , вы можете передать параметр &lt;code&gt;template_name&lt;/code&gt; через дополнительные аргументы методу &lt;code&gt;as_view&lt;/code&gt; в вашем URLconf. Например, эта строка URLconf будет использовать вместо &lt;code&gt;myapp/login.html&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="48c682ae2cbd0afba4b4eae5274158bf92b45a13" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re after even more control, you can also cache template fragments using the &lt;code&gt;cache&lt;/code&gt; template tag. To give your template access to this tag, put &lt;code&gt;{% load cache %}&lt;/code&gt; near the top of your template.</source>
          <target state="translated">Если вам нужен еще больший контроль, вы также можете кэшировать фрагменты шаблона, используя тег шаблона &lt;code&gt;cache&lt;/code&gt; . Чтобы предоставить вашему шаблону доступ к этому тегу, поместите &lt;code&gt;{% load cache %}&lt;/code&gt; в верхней части вашего шаблона.</target>
        </trans-unit>
        <trans-unit id="767eed5b450bd819bca83e5738282f4f7be2808f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re building a database-driven app, chances are you&amp;rsquo;ll have forms that map closely to Django models. For instance, you might have a &lt;code&gt;BlogComment&lt;/code&gt; model, and you want to create a form that lets people submit comments. In this case, it would be redundant to define the field types in your form, because you&amp;rsquo;ve already defined the fields in your model.</source>
          <target state="translated">Если вы создаете приложение на основе базы данных, скорее всего, у вас будут формы, которые тесно связаны с моделями Django. Например, у вас может быть модель &lt;code&gt;BlogComment&lt;/code&gt; , и вы хотите создать форму, которая позволяет людям отправлять комментарии. В этом случае было бы излишним определять типы полей в вашей форме, потому что вы уже определили поля в своей модели.</target>
        </trans-unit>
        <trans-unit id="abfc88abce0b83f7179182a6de094082846b855c" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re building your own backend, you can use the standard cache backends as reference implementations. You&amp;rsquo;ll find the code in the &lt;code&gt;django/core/cache/backends/&lt;/code&gt; directory of the Django source.</source>
          <target state="translated">Если вы создаете свой собственный бэкэнд, вы можете использовать стандартные бэкэнды кеша в качестве эталонных реализаций. Вы найдете код в каталоге &lt;code&gt;django/core/cache/backends/&lt;/code&gt; исходного кода Django.</target>
        </trans-unit>
        <trans-unit id="b88de13d833c918273b8729f7bad182ac6ca7c85" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re connecting to a third-party database that stores datetimes in a local time rather than UTC, then you must set this option to the appropriate time zone. Likewise, if Django manages the database but third-party systems connect to the same database and expect to find datetimes in local time, then you must set this option.</source>
          <target state="translated">Если вы подключаетесь к сторонней базе данных, которая хранит дату и время в местном времени, а не в формате UTC, вы должны установить для этого параметра соответствующий часовой пояс. Точно так же, если Django управляет базой данных, но сторонние системы подключаются к той же базе данных и ожидают найти дату по местному времени, вы должны установить эту опцию.</target>
        </trans-unit>
        <trans-unit id="cdde1ef1672874bcb82d804c53395d8d7aa1ed21" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re constructing SQL like &lt;code&gt;strftime('%W', 'date')&lt;/code&gt; and need a literal &lt;code&gt;%&lt;/code&gt; character in the query, quadruple it (&lt;code&gt;%%%%&lt;/code&gt;) in the &lt;code&gt;template&lt;/code&gt; attribute because the string is interpolated twice: once during the template interpolation in &lt;code&gt;as_sql()&lt;/code&gt; and once in the SQL interpolation with the query parameters in the database cursor.</source>
          <target state="translated">Если вы создаете SQL как &lt;code&gt;strftime('%W', 'date')&lt;/code&gt; и вам нужен буквальный символ &lt;code&gt;%&lt;/code&gt; в запросе, увеличьте его в четыре раза ( &lt;code&gt;%%%%&lt;/code&gt; ) в атрибуте &lt;code&gt;template&lt;/code&gt; поскольку строка интерполируется дважды: один раз во время шаблонная интерполяция в &lt;code&gt;as_sql()&lt;/code&gt; и один раз в SQL-интерполяции с параметрами запроса в курсоре базы данных.</target>
        </trans-unit>
        <trans-unit id="ab456d418794c4d43bbff01956e9a7a76d213a8a" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re constructing a URL manually (i.e., &lt;em&gt;not&lt;/em&gt; using the &lt;code&gt;reverse()&lt;/code&gt; function), you&amp;rsquo;ll need to take care of the encoding yourself. In this case, use the &lt;code&gt;iri_to_uri()&lt;/code&gt; and &lt;code&gt;quote()&lt;/code&gt; functions that were documented &lt;a href=&quot;#id1&quot;&gt;above&lt;/a&gt;. For example:</source>
          <target state="translated">Если вы создаете URL-адрес вручную (т.е. &lt;em&gt;не&lt;/em&gt; используете функцию &lt;code&gt;reverse()&lt;/code&gt; ), вам нужно позаботиться о кодировке самостоятельно. В этом случае используйте функции &lt;code&gt;iri_to_uri()&lt;/code&gt; и &lt;code&gt;quote()&lt;/code&gt; которые были описаны &lt;a href=&quot;#id1&quot;&gt;выше&lt;/a&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="6d1f283bcbf28eac94ae688e9ec728c932159a38" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re creating a pluggable app called &amp;ldquo;Rock &amp;rsquo;n&amp;rsquo; roll&amp;rdquo;, here&amp;rsquo;s how you would provide a proper name for the admin:</source>
          <target state="translated">Если вы создаете подключаемое приложение под названием &amp;laquo;Рок-н-ролл&amp;raquo;, вот как вы должны указать правильное имя для администратора:</target>
        </trans-unit>
        <trans-unit id="48483c8c5c77a7b69d1a11700c288faaa0c7a213" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re creating a template that might be used in situations where you&amp;rsquo;re not sure whether auto-escaping is enabled, then add an &lt;a href=&quot;builtins#std:templatefilter-escape&quot;&gt;&lt;code&gt;escape&lt;/code&gt;&lt;/a&gt; filter to any variable that needs escaping. When auto-escaping is on, there&amp;rsquo;s no danger of the &lt;a href=&quot;builtins#std:templatefilter-escape&quot;&gt;&lt;code&gt;escape&lt;/code&gt;&lt;/a&gt; filter &lt;em&gt;double-escaping&lt;/em&gt; data &amp;ndash; the &lt;a href=&quot;builtins#std:templatefilter-escape&quot;&gt;&lt;code&gt;escape&lt;/code&gt;&lt;/a&gt; filter does not affect auto-escaped variables.</source>
          <target state="translated">Если вы создаете шаблон, который может использоваться в ситуациях, когда вы не уверены, включено ли автоматическое экранирование, добавьте &lt;a href=&quot;builtins#std:templatefilter-escape&quot;&gt; &lt;code&gt;escape&lt;/code&gt; -&lt;/a&gt; фильтр к любой переменной, которую необходимо экранировать. При автоматическом спасаясь включен, нет опасности &lt;a href=&quot;builtins#std:templatefilter-escape&quot;&gt; &lt;code&gt;escape&lt;/code&gt; &lt;/a&gt; фильтра &lt;em&gt;двойного побега&lt;/em&gt; данных : - &lt;a href=&quot;builtins#std:templatefilter-escape&quot;&gt; &lt;code&gt;escape&lt;/code&gt; &lt;/a&gt; фильтр не влияет на авто маскирования переменных.</target>
        </trans-unit>
        <trans-unit id="bb584f8f7f077e584c39783ffdb002ff86b811fe" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re creating an Atom feed, rather than an RSS feed, set the &lt;code&gt;subtitle&lt;/code&gt; attribute instead of the &lt;code&gt;description&lt;/code&gt; attribute. See &lt;a href=&quot;#publishing-atom-and-rss-feeds-in-tandem&quot;&gt;Publishing Atom and RSS feeds in tandem&lt;/a&gt;, later, for an example.</source>
          <target state="translated">Если вы создаете канал Atom, а не канал RSS, установите атрибут &lt;code&gt;subtitle&lt;/code&gt; вместо атрибута &lt;code&gt;description&lt;/code&gt; . См., Например, &lt;a href=&quot;#publishing-atom-and-rss-feeds-in-tandem&quot;&gt;публикацию Atom и RSS-каналов в тандеме&lt;/a&gt; , позже.</target>
        </trans-unit>
        <trans-unit id="4cb96d8c5caf914260b393b1dfd4c0e8a90b35c9" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re entirely happy with Django&amp;rsquo;s &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; model, but you want to add some additional profile information, you could subclass &lt;a href=&quot;#django.contrib.auth.models.AbstractUser&quot;&gt;&lt;code&gt;django.contrib.auth.models.AbstractUser&lt;/code&gt;&lt;/a&gt; and add your custom profile fields, although we&amp;rsquo;d recommend a separate model as described in the &amp;ldquo;Model design considerations&amp;rdquo; note of &lt;a href=&quot;#specifying-custom-user-model&quot;&gt;Specifying a custom user model&lt;/a&gt;. &lt;code&gt;AbstractUser&lt;/code&gt; provides the full implementation of the default &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; as an &lt;a href=&quot;../db/models#abstract-base-classes&quot;&gt;abstract model&lt;/a&gt;.</source>
          <target state="translated">Если вы полностью удовлетворены моделью &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt; Django , но хотите добавить дополнительную информацию о профиле, вы можете &lt;a href=&quot;#django.contrib.auth.models.AbstractUser&quot;&gt; &lt;code&gt;django.contrib.auth.models.AbstractUser&lt;/code&gt; &lt;/a&gt; подкласс django.contrib.auth.models.AbstractUser и добавить поля настраиваемого профиля, хотя мы рекомендуем использовать отдельную модель, как описано в примечании &amp;laquo; &lt;a href=&quot;#specifying-custom-user-model&quot;&gt;Рекомендации по&lt;/a&gt; проектированию модели&amp;raquo; Указания пользовательской модели . &lt;code&gt;AbstractUser&lt;/code&gt; обеспечивает полную реализацию по умолчанию &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt; в качестве &lt;a href=&quot;../db/models#abstract-base-classes&quot;&gt;абстрактной модели&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cf98ea5e8ac10c40300863d754cd455a34023fde" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re getting this error, you can solve it by:</source>
          <target state="translated">Если вы получаете эту ошибку, вы можете решить ее:</target>
        </trans-unit>
        <trans-unit id="4ff638989d7f1c32d1bc77a814ea175afb1ded83" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re having trouble going through this tutorial, please head over to the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/faq/help/&quot;&gt;Getting Help&lt;/a&gt; section of the FAQ.</source>
          <target state="translated">Если у вас возникли проблемы при просмотре этого учебника, перейдите в раздел &amp;laquo; &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/faq/help/&quot;&gt;Получение справки&lt;/a&gt; &amp;raquo; часто задаваемых вопросов.</target>
        </trans-unit>
        <trans-unit id="ceb0491d3bf47c78b35f0501020327f9bb81577e" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re having trouble going through this tutorial, please head over to the &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/faq/help/&quot;&gt;Getting Help&lt;/a&gt; section of the FAQ.</source>
          <target state="translated">Если у вас возникли проблемы с прохождением этого руководства, перейдите в раздел &amp;laquo; &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/faq/help/&quot;&gt;Получение помощи&lt;/a&gt; &amp;raquo; в FAQ.</target>
        </trans-unit>
        <trans-unit id="6d2ac7f0ad5bbe9c9e5d4d66af481149008f986f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re having trouble going through this tutorial, please post a message to &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/mailing-lists/#django-developers-mailing-list&quot;&gt;django-developers&lt;/a&gt; or drop by &lt;a href=&quot;irc://irc.freenode.net/django-dev&quot;&gt;#django-dev on irc.freenode.net&lt;/a&gt; to chat with other Django users who might be able to help.</source>
          <target state="translated">Если у вас возникли проблемы с прохождением этого руководства, отправьте сообщение &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/mailing-lists/#django-developers-mailing-list&quot;&gt;django-developers&lt;/a&gt; или &lt;a href=&quot;irc://irc.freenode.net/django-dev&quot;&gt;зайдите&lt;/a&gt; на # django-dev на irc.freenode.net, чтобы пообщаться с другими пользователями Django, которые могут помочь.</target>
        </trans-unit>
        <trans-unit id="2fbd5232b3c9f7f1aeca7f1f9b129639569a986d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re having trouble going through this tutorial, please post a message to &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/mailing-lists/#django-developers-mailing-list&quot;&gt;django-developers&lt;/a&gt; or drop by &lt;a href=&quot;https://webchat.freenode.net/#django-dev&quot;&gt;#django-dev on irc.freenode.net&lt;/a&gt; to chat with other Django users who might be able to help.</source>
          <target state="translated">Если у вас возникли проблемы с прохождением этого руководства, отправьте сообщение &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/mailing-lists/#django-developers-mailing-list&quot;&gt;django-developers&lt;/a&gt; или &lt;a href=&quot;https://webchat.freenode.net/#django-dev&quot;&gt;зайдите по адресу # django-dev на irc.freenode.net,&lt;/a&gt; чтобы поговорить с другими пользователями Django, которые могут помочь.</target>
        </trans-unit>
        <trans-unit id="7d98d87b390e8d3b15eb2355fe5039a0d87c9028" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re in a multi-database setup, you might have fixture data that you want to load onto one database, but not onto another. In this situation, you can add a database identifier into the names of your fixtures.</source>
          <target state="translated">Если вы работаете с несколькими базами данных, у вас могут быть данные о приборах, которые вы хотите загрузить в одну базу данных, но не в другую. В этой ситуации вы можете добавить идентификатор базы данных в имена ваших приборов.</target>
        </trans-unit>
        <trans-unit id="36c3a9be516105bc13cecddbe3c1b10fd6b1043c" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re interested in changing the Python-level behavior of a model class, you &lt;em&gt;could&lt;/em&gt; use &lt;code&gt;managed=False&lt;/code&gt; and create a copy of an existing model. However, there&amp;rsquo;s a better approach for that situation: &lt;a href=&quot;../../topics/db/models#proxy-models&quot;&gt;Proxy models&lt;/a&gt;.</source>
          <target state="translated">Если вы заинтересованы в изменении поведения класса модели на уровне Python, вы &lt;em&gt;можете&lt;/em&gt; использовать &lt;code&gt;managed=False&lt;/code&gt; и создать копию существующей модели. Однако для этой ситуации есть лучший подход: &lt;a href=&quot;../../topics/db/models#proxy-models&quot;&gt;модели прокси&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="99f458dbd1df038441eb2681e7428cb82105b3e7" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re interested in the more advanced migration operations, or want to be able to write your own, see the &lt;a href=&quot;../ref/migration-operations&quot;&gt;migration operations reference&lt;/a&gt; and the &amp;ldquo;how-to&amp;rdquo; on &lt;a href=&quot;../howto/writing-migrations&quot;&gt;writing migrations&lt;/a&gt;.</source>
          <target state="translated">Если вы заинтересованы в более сложных операциях миграции или хотите написать свои собственные, обратитесь к &lt;a href=&quot;../ref/migration-operations&quot;&gt;справочнику по операциям миграции&lt;/a&gt; и инструкциям по &lt;a href=&quot;../howto/writing-migrations&quot;&gt;написанию миграций&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="90b9a4c5a91dd19aabaed1109072ba30aa990297" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re interested, you can also run &lt;a href=&quot;../ref/django-admin#django-admin-check&quot;&gt;&lt;code&gt;python manage.py check&lt;/code&gt;&lt;/a&gt;; this checks for any problems in your project without making migrations or touching the database.</source>
          <target state="translated">Если вам интересно, вы также можете запустить &lt;a href=&quot;../ref/django-admin#django-admin-check&quot;&gt; &lt;code&gt;python manage.py check&lt;/code&gt; &lt;/a&gt; ; это проверяет любые проблемы в вашем проекте, не делая миграции или касаясь базы данных.</target>
        </trans-unit>
        <trans-unit id="254c1791d376774d686299aebfc8b6db7e292b89" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re just updating a record and don&amp;rsquo;t need to do anything with the model object, the most efficient approach is to call &lt;code&gt;update()&lt;/code&gt;, rather than loading the model object into memory. For example, instead of doing this:</source>
          <target state="translated">Если вы просто обновляете запись и вам не нужно ничего делать с объектом модели, наиболее эффективным подходом является вызов &lt;code&gt;update()&lt;/code&gt; , а не загрузка объекта модели в память. Например, вместо этого:</target>
        </trans-unit>
        <trans-unit id="6535bf89936e50d74084e2cbe76650a8f1162a35" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re manually laying out a form in a template, as opposed to relying on Django&amp;rsquo;s default form layout, you might want to treat &lt;code&gt;&amp;lt;input type=&quot;hidden&quot;&amp;gt;&lt;/code&gt; fields differently from non-hidden fields. For example, because hidden fields don&amp;rsquo;t display anything, putting error messages &amp;ldquo;next to&amp;rdquo; the field could cause confusion for your users &amp;ndash; so errors for those fields should be handled differently.</source>
          <target state="translated">Если вы вручную размещаете форму в шаблоне, а не полагаетесь на макет формы по умолчанию в Django, вы можете использовать поля &lt;code&gt;&amp;lt;input type=&quot;hidden&quot;&amp;gt;&lt;/code&gt; иначе, чем не скрытые поля. Например, поскольку скрытые поля ничего не отображают, размещение сообщений об ошибках рядом с полем может привести к путанице для ваших пользователей, поэтому ошибки для этих полей следует обрабатывать по-разному.</target>
        </trans-unit>
        <trans-unit id="255a115dbc0b712cc68471c5b0157f7a05af4797" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re new to &lt;a href=&quot;https://python.org/&quot;&gt;Python&lt;/a&gt;, you might want to start by getting an idea of what the language is like. Django is 100% Python, so if you&amp;rsquo;ve got minimal comfort with Python you&amp;rsquo;ll probably get a lot more out of Django.</source>
          <target state="translated">Если вы новичок в &lt;a href=&quot;https://python.org/&quot;&gt;Python&lt;/a&gt; , вы можете начать с понимания того, на что похож язык. Django на 100% Python, поэтому, если вы чувствуете минимальный комфорт с Python, вы, вероятно, получите гораздо больше от Django.</target>
        </trans-unit>
        <trans-unit id="57db89d44ba94f90db102a29f1cf186e18b0cf37" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re new to programming entirely, you might want to start with this &lt;a href=&quot;https://wiki.python.org/moin/BeginnersGuide/NonProgrammers&quot;&gt;list of Python resources for non-programmers&lt;/a&gt;</source>
          <target state="translated">Если вы новичок в программировании, вы можете начать с этого &lt;a href=&quot;https://wiki.python.org/moin/BeginnersGuide/NonProgrammers&quot;&gt;списка ресурсов Python для непрограммистов&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bba0861efae0244d879fc8e8ed733fd3d426220f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not familiar with file modes, please note that the &lt;code&gt;0o&lt;/code&gt; prefix is very important: it indicates an octal number, which is the way that modes must be specified. If you try to use &lt;code&gt;644&lt;/code&gt;, you&amp;rsquo;ll get totally incorrect behavior.</source>
          <target state="translated">Если вы не знакомы с режимами файлов, обратите внимание, что префикс &lt;code&gt;0o&lt;/code&gt; очень важен: он указывает восьмеричное число, которым необходимо указывать режимы. Если вы попытаетесь использовать &lt;code&gt;644&lt;/code&gt; , вы получите совершенно неправильное поведение.</target>
        </trans-unit>
        <trans-unit id="a1b95c0b433ee48fc48a97069bddf9e2b101dfc4" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not familiar with file modes, please note that the leading &lt;code&gt;0&lt;/code&gt; is very important: it indicates an octal number, which is the way that modes must be specified. If you try to use &lt;code&gt;644&lt;/code&gt;, you&amp;rsquo;ll get totally incorrect behavior.</source>
          <target state="translated">Если вы не знакомы с режимами файлов, обратите внимание, что начальный &lt;code&gt;0&lt;/code&gt; очень важен: он указывает восьмеричное число, то есть способ, которым нужно указывать режимы. Если вы попытаетесь использовать &lt;code&gt;644&lt;/code&gt; , вы получите совершенно неправильное поведение.</target>
        </trans-unit>
        <trans-unit id="fca79f66a708a64746ced9500efdfaadfc0da5f9" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not familiar with the Python DB-API, note that the SQL statement in &lt;code&gt;cursor.execute()&lt;/code&gt; uses placeholders, &lt;code&gt;&quot;%s&quot;&lt;/code&gt;, rather than adding parameters directly within the SQL. If you use this technique, the underlying database library will automatically escape your parameters as necessary.</source>
          <target state="translated">Если вы не знакомы с Python DB-API, обратите внимание, что оператор SQL в &lt;code&gt;cursor.execute()&lt;/code&gt; использует заполнители, &lt;code&gt;&quot;%s&quot;&lt;/code&gt; , вместо добавления параметров непосредственно в SQL. Если вы используете эту технику, базовая библиотека базы данных будет автоматически экранировать ваши параметры при необходимости.</target>
        </trans-unit>
        <trans-unit id="5ac7649dee96e11a0e7f2a105899bc5b139a0a35" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not setting the &lt;a href=&quot;#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-5&quot;&gt;&lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;&lt;/a&gt; environment variable, you &lt;em&gt;must&lt;/em&gt; call &lt;code&gt;configure()&lt;/code&gt; at some point before using any code that reads settings.</source>
          <target state="translated">Если вы не устанавливаете &lt;a href=&quot;#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-5&quot;&gt; &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; &lt;/a&gt; среды DJANGO_SETTINGS_MODULE , вы &lt;em&gt;должны&lt;/em&gt; в какой-то момент вызвать &lt;code&gt;configure()&lt;/code&gt; прежде чем использовать любой код, считывающий настройки.</target>
        </trans-unit>
        <trans-unit id="69337c6de60600bc5976cb6685657eebda60402c" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not setting the &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; environment variable, you &lt;em&gt;must&lt;/em&gt; call &lt;code&gt;configure()&lt;/code&gt; at some point before using any code that reads settings.</source>
          <target state="translated">Если вы не устанавливаете &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; окружения DJANGO_SETTINGS_MODULE , вы &lt;em&gt;должны&lt;/em&gt; вызвать &lt;code&gt;configure()&lt;/code&gt; в какой-то момент перед использованием любого кода, который читает настройки.</target>
        </trans-unit>
        <trans-unit id="4fdba98bf4c4fe90941820a9cac473eb87b6acfa" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not that familiar with Git, you can always find out more about its commands (once it&amp;rsquo;s installed) by typing &lt;code&gt;git help&lt;/code&gt; into the command line.</source>
          <target state="translated">Если вы не очень хорошо знакомы с Git, вы всегда можете узнать больше о его командах (после его установки), набрав &lt;code&gt;git help&lt;/code&gt; в командной строке.</target>
        </trans-unit>
        <trans-unit id="8f2ea50eab7b004cc616e97a7e545f78a1430a05" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not using the Django test runner, you may need to also ensure that any console output is not captured which would hide deprecation warnings. For example, if you use &lt;a href=&quot;https://pytest.org/&quot;&gt;pytest&lt;/a&gt;:</source>
          <target state="translated">Если вы не используете тестер Django, вам может потребоваться также убедиться, что любой вывод консоли не захвачен, что скрыло бы предупреждения об устаревании. Например, если вы используете &lt;a href=&quot;https://pytest.org/&quot;&gt;pytest&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="336e08309a7a860fad0714de0146cb1df14fc063" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not using the default project template, here are the requirements:</source>
          <target state="translated">Если вы не используете шаблон проекта по умолчанию, вот требования:</target>
        </trans-unit>
        <trans-unit id="65ea4d648599b2fb37f6f7e76db2905fce405c7f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not using the vanilla sitemap view &amp;ndash; for example, if it&amp;rsquo;s wrapped with a caching decorator &amp;ndash; you must name your sitemap view and pass &lt;code&gt;sitemap_url_name&lt;/code&gt; to the index view:</source>
          <target state="translated">Если вы не используете ванильное представление карты сайта - например, если оно обернуто декоратором кэширования - вы должны &lt;code&gt;sitemap_url_name&lt;/code&gt; имя своему представлению карты сайта и передать sitemap_url_name в представление индекса:</target>
        </trans-unit>
        <trans-unit id="a8c1d92ca93227fb6dd5eeedd2d2fb7fc729ef48" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re on Windows, put the drive letter at the beginning of the path, like this:</source>
          <target state="translated">Если вы работаете в Windows, поместите букву диска в начало пути, например так:</target>
        </trans-unit>
        <trans-unit id="4fae52cace337e4f280328a49b626c77ab0c7b45" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re overriding &lt;code&gt;get_queryset()&lt;/code&gt; on your manager, be sure to either call the method on the parent (using &lt;code&gt;super()&lt;/code&gt;) or do the appropriate handling of the &lt;code&gt;_db&lt;/code&gt; attribute on the manager (a string containing the name of the database to use).</source>
          <target state="translated">Если вы переопределяете &lt;code&gt;get_queryset()&lt;/code&gt; на вашем менеджере, обязательно вызовите метод на родителе (используя &lt;code&gt;super()&lt;/code&gt; ) или выполните соответствующую обработку атрибута &lt;code&gt;_db&lt;/code&gt; на менеджере (строка, содержащая имя базы данных для использование).</target>
        </trans-unit>
        <trans-unit id="f1a843504a97e80d5cb600f4100e8e00a5e36193" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re registering &lt;a href=&quot;signals#module-django.db.models.signals&quot;&gt;&lt;code&gt;model signals&lt;/code&gt;&lt;/a&gt;, you can refer to the sender by its string label instead of using the model class itself.</source>
          <target state="translated">Если вы регистрируете &lt;a href=&quot;signals#module-django.db.models.signals&quot;&gt; &lt;code&gt;model signals&lt;/code&gt; &lt;/a&gt; , вы можете ссылаться на отправителя по его строковой метке вместо использования самого класса модели.</target>
        </trans-unit>
        <trans-unit id="7ad1460f336e480b534127419cefa394fd978f41" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re saving a file on a &lt;a href=&quot;../../ref/models/instances#django.db.models.Model&quot;&gt;&lt;code&gt;Model&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;../../ref/models/fields#django.db.models.FileField&quot;&gt;&lt;code&gt;FileField&lt;/code&gt;&lt;/a&gt;, using a &lt;a href=&quot;../forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt; makes this process much easier. The file object will be saved to the location specified by the &lt;a href=&quot;../../ref/models/fields#django.db.models.FileField.upload_to&quot;&gt;&lt;code&gt;upload_to&lt;/code&gt;&lt;/a&gt; argument of the corresponding &lt;a href=&quot;../../ref/models/fields#django.db.models.FileField&quot;&gt;&lt;code&gt;FileField&lt;/code&gt;&lt;/a&gt; when calling &lt;code&gt;form.save()&lt;/code&gt;:</source>
          <target state="translated">Если вы сохраняете файл в &lt;a href=&quot;../../ref/models/instances#django.db.models.Model&quot;&gt; &lt;code&gt;Model&lt;/code&gt; &lt;/a&gt; с помощью &lt;a href=&quot;../../ref/models/fields#django.db.models.FileField&quot;&gt; &lt;code&gt;FileField&lt;/code&gt; &lt;/a&gt; , использование &lt;a href=&quot;../forms/modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt; значительно упрощает этот процесс. Объект будет сохранен файл в месте , указанном &lt;a href=&quot;../../ref/models/fields#django.db.models.FileField.upload_to&quot;&gt; &lt;code&gt;upload_to&lt;/code&gt; &lt;/a&gt; аргументом соответствующего &lt;a href=&quot;../../ref/models/fields#django.db.models.FileField&quot;&gt; &lt;code&gt;FileField&lt;/code&gt; &lt;/a&gt; при вызове &lt;code&gt;form.save()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="bedad35c511cec1744a3555151947dfea12f66f1" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re serializing data (for example, when generating &lt;a href=&quot;../../topics/testing/tools#django.test.TransactionTestCase.fixtures&quot;&gt;&lt;code&gt;fixtures&lt;/code&gt;&lt;/a&gt;) from a model that implements generic relations, you should probably be using a natural key to uniquely identify related &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; objects. See &lt;a href=&quot;../../topics/serialization#topics-serialization-natural-keys&quot;&gt;natural keys&lt;/a&gt; and &lt;a href=&quot;../django-admin#cmdoption-dumpdata-natural-foreign&quot;&gt;&lt;code&gt;dumpdata --natural-foreign&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Если вы сериализуете данные (например, при генерации &lt;a href=&quot;../../topics/testing/tools#django.test.TransactionTestCase.fixtures&quot;&gt; &lt;code&gt;fixtures&lt;/code&gt; &lt;/a&gt; ) из модели, которая реализует общие отношения, вам, вероятно, следует использовать естественный ключ для уникальной идентификации связанных объектов &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt; . Смотрите &lt;a href=&quot;../../topics/serialization#topics-serialization-natural-keys&quot;&gt;естественные ключи&lt;/a&gt; и &lt;a href=&quot;../django-admin#cmdoption-dumpdata-natural-foreign&quot;&gt; &lt;code&gt;dumpdata --natural-foreign&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="11eb2a40cd729d4d12c805c9535dc58c68ec956d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re starting a new project, it&amp;rsquo;s highly recommended to set up a custom user model, even if the default &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; model is sufficient for you. This model behaves identically to the default user model, but you&amp;rsquo;ll be able to customize it in the future if the need arises:</source>
          <target state="translated">Если вы начинаете новый проект, настоятельно рекомендуется настроить пользовательскую модель пользователя, даже если вам достаточно модели &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt; по умолчанию . Эта модель ведет себя идентично модели пользователя по умолчанию, но вы сможете настроить ее в будущем, если возникнет такая необходимость:</target>
        </trans-unit>
        <trans-unit id="48a25be3e80caa082a172422daae21775a104668" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re subclassing an existing model (perhaps something from another application entirely) and want each model to have its own database table, &lt;a href=&quot;#multi-table-inheritance&quot;&gt;Multi-table inheritance&lt;/a&gt; is the way to go.</source>
          <target state="translated">Если вы создаете подкласс существующей модели (возможно, целиком из другого приложения) и хотите, чтобы каждая модель имела свою собственную таблицу базы данных, &lt;a href=&quot;#multi-table-inheritance&quot;&gt;многотабличное наследование&lt;/a&gt; - это то, что вам нужно.</target>
        </trans-unit>
        <trans-unit id="749f5754bf6064aeadce7af0aa572b7f5cd04a43" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re synchronizing content types to more than one database, be aware that their primary keys may not match across databases. This may result in data corruption or data loss.</source>
          <target state="translated">Если вы синхронизируете типы контента с несколькими базами данных, имейте в виду, что их первичные ключи могут не совпадать в разных базах данных. Это может привести к повреждению или потере данных.</target>
        </trans-unit>
        <trans-unit id="f6fc2fe716bde4fb5cf0628226301f83349d64f4" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re testing a multiple database configuration with primary/replica (referred to as master/slave by some databases) replication, this strategy of creating test databases poses a problem. When the test databases are created, there won&amp;rsquo;t be any replication, and as a result, data created on the primary won&amp;rsquo;t be seen on the replica.</source>
          <target state="translated">Если вы тестируете конфигурацию с несколькими базами данных с репликацией основной / реплики (в некоторых базах данных называемой главной / подчиненной), эта стратегия создания тестовых баз данных создает проблему. Когда создаются тестовые базы данных, репликации не будет, и в результате данные, созданные на первичном сервере, не будут видны на реплике.</target>
        </trans-unit>
        <trans-unit id="7a5e6b4700226ab4c476a2e5c6dee860df741084" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re upgrading from South, this is basically the South pattern as an operation - one or two methods for forwards and backwards, with an ORM and schema operations available. Most of the time, you should be able to translate the &lt;code&gt;orm.Model&lt;/code&gt; or &lt;code&gt;orm[&quot;appname&quot;, &quot;Model&quot;]&lt;/code&gt; references from South directly into &lt;code&gt;apps.get_model(&quot;appname&quot;, &quot;Model&quot;)&lt;/code&gt; references here and leave most of the rest of the code unchanged for data migrations. However, &lt;code&gt;apps&lt;/code&gt; will only have references to models in the current app unless migrations in other apps are added to the migration&amp;rsquo;s dependencies.</source>
          <target state="translated">Если вы обновляете с юга, это в основном южный шаблон как операция - один или два метода для перемотки вперед и назад с доступными операциями ORM и схемы. В большинстве случаев вы должны иметь возможность переводить &lt;code&gt;orm.Model&lt;/code&gt; или orm &lt;code&gt;orm[&quot;appname&quot;, &quot;Model&quot;]&lt;/code&gt; с юга прямо в &lt;code&gt;apps.get_model(&quot;appname&quot;, &quot;Model&quot;)&lt;/code&gt; и оставлять большую часть остальная часть кода остается неизменной для миграции данных. Однако &lt;code&gt;apps&lt;/code&gt; будут иметь ссылки только на модели в текущем приложении, если миграции в другие приложения не будут добавлены к зависимостям миграции.</target>
        </trans-unit>
        <trans-unit id="dd100d30c9413b8bcf0a641346e7fe8e8d78916b" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re upgrading through more than one feature version (e.g. 2.0 to 2.2), it&amp;rsquo;s usually easier to upgrade through each feature release incrementally (2.0 to 2.1 to 2.2) rather than to make all the changes for each feature release at once. For each feature release, use the latest patch release (e.g. for 2.1, use 2.1.15).</source>
          <target state="translated">Если вы обновляете более одной версии функции (например, от 2.0 до 2.2), обычно проще обновлять каждую версию функции постепенно (от 2.0 до 2.1 до 2.2), а не вносить все изменения для каждой версии функции сразу. Для каждого выпуска функции используйте последний выпуск патча (например, для 2.1 используйте 2.1.15).</target>
        </trans-unit>
        <trans-unit id="c0a30d48cf1c939c8e9ed571529055414a3d67b6" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using &amp;ldquo;Rock &amp;rsquo;n&amp;rsquo; roll&amp;rdquo; in a project called &lt;code&gt;anthology&lt;/code&gt;, but you want it to show up as &amp;ldquo;Jazz Manouche&amp;rdquo; instead, you can provide your own configuration:</source>
          <target state="translated">Если вы используете &amp;laquo;рок-н-ролл&amp;raquo; в проекте, называемом &lt;code&gt;anthology&lt;/code&gt; , но хотите, чтобы он отображался как &amp;laquo;Jazz Manouche&amp;raquo;, вы можете предоставить свою собственную конфигурацию:</target>
        </trans-unit>
        <trans-unit id="481f4f1b70a903de3297e01b947b9f2c4871b7fa" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using &lt;a href=&quot;../topics/http/sessions#cached-sessions-backend&quot;&gt;cache-based session storage&lt;/a&gt;, this selects the cache to use.</source>
          <target state="translated">Если вы используете &lt;a href=&quot;../topics/http/sessions#cached-sessions-backend&quot;&gt;хранилище сеансов на основе кэша&lt;/a&gt; , это выбирает кэш для использования.</target>
        </trans-unit>
        <trans-unit id="aeeb2f9285f5f42da4ca38d644da7b9668702942" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using AngularJS 1.1.3 and newer, it&amp;rsquo;s sufficient to configure the &lt;code&gt;$http&lt;/code&gt; provider with the cookie and header names:</source>
          <target state="translated">Если вы используете AngularJS 1.1.3 и новее, достаточно настроить &lt;code&gt;$http&lt;/code&gt; провайдера с именами файлов cookie и заголовков:</target>
        </trans-unit>
        <trans-unit id="b71dafc0a9ca6cc7e9afc06dfb5f48ffeac44f3e" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using Django&amp;rsquo;s &lt;a href=&quot;testing/index&quot;&gt;testing framework&lt;/a&gt; to test database queries, Django will need permission to create a test database.</source>
          <target state="translated">Если вы используете &lt;a href=&quot;testing/index&quot;&gt;среду тестирования&lt;/a&gt; Django для тестирования запросов к базе данных, Django потребуется разрешение на создание тестовой базы данных.</target>
        </trans-unit>
        <trans-unit id="9944ee7dd34baf50152dd56fcdc484819ead5962" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using Linux or MacOS and install both &lt;a href=&quot;https://pypi.org/project/pywatchman/&quot;&gt;pywatchman&lt;/a&gt; and the &lt;a href=&quot;https://facebook.github.io/watchman/&quot;&gt;Watchman&lt;/a&gt; service, kernel signals will be used to autoreload the server (rather than polling file modification timestamps each second). This offers better performance on large projects, reduced response time after code changes, more robust change detection, and a reduction in power usage. Django supports &lt;code&gt;pywatchman&lt;/code&gt; 1.2.0 and higher.</source>
          <target state="translated">Если вы используете Linux или MacOS и устанавливаете как &lt;a href=&quot;https://pypi.org/project/pywatchman/&quot;&gt;pywatchman, так&lt;/a&gt; и службу &lt;a href=&quot;https://facebook.github.io/watchman/&quot;&gt;Watchman&lt;/a&gt; , сигналы ядра будут использоваться для автоматической перезагрузки сервера (вместо того, чтобы опрашивать метки времени изменения файла каждую секунду). Это обеспечивает более высокую производительность в крупных проектах, сокращает время отклика после изменений кода, обеспечивает более надежное обнаружение изменений и снижает энергопотребление. Django поддерживает &lt;code&gt;pywatchman&lt;/code&gt; 1.2.0 и выше.</target>
        </trans-unit>
        <trans-unit id="4e53baf0d0f56b77511625581c99cc7d9191b439" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using Memcached, consider using &lt;a href=&quot;../../topics/http/sessions#cached-sessions-backend&quot;&gt;cached sessions&lt;/a&gt; to improve performance.</source>
          <target state="translated">Если вы используете Memcached, рассмотрите возможность использования &lt;a href=&quot;../../topics/http/sessions#cached-sessions-backend&quot;&gt;кэшированных сеансов&lt;/a&gt; для повышения производительности.</target>
        </trans-unit>
        <trans-unit id="5123ae3f1eac47dcb57f53aa5e34a747a949d8e9" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using MySQL and this value &lt;em&gt;doesn&amp;rsquo;t&lt;/em&gt; start with a forward slash, then this value is assumed to be the host.</source>
          <target state="translated">Если вы используете MySQL и это значение &lt;em&gt;не&lt;/em&gt; начинается с косой черты, то предполагается, что это значение является хостом.</target>
        </trans-unit>
        <trans-unit id="eaed7a6a6ad7f54113143af5fee4474f0a7b717f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using MySQL or MariaDB, the following checks will be performed:</source>
          <target state="translated">Если вы используете MySQL или MariaDB, будут выполнены следующие проверки:</target>
        </trans-unit>
        <trans-unit id="5c1359456437f291b8b48eb0bceaeca46fd2af3d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using MySQL or MariaDB, you&amp;rsquo;ll need a &lt;a href=&quot;../ref/databases#mysql-db-api-drivers&quot;&gt;DB API driver&lt;/a&gt; like &lt;code&gt;mysqlclient&lt;/code&gt;. See &lt;a href=&quot;../ref/databases#mysql-notes&quot;&gt;notes for the MySQL backend&lt;/a&gt; for details.</source>
          <target state="translated">Если вы используете MySQL или MariaDB, вам потребуется &lt;a href=&quot;../ref/databases#mysql-db-api-drivers&quot;&gt;драйвер DB API,&lt;/a&gt; такой как &lt;code&gt;mysqlclient&lt;/code&gt; . См. &lt;a href=&quot;../ref/databases#mysql-notes&quot;&gt;Примечания для бэкэнда MySQL&lt;/a&gt; для деталей.</target>
        </trans-unit>
        <trans-unit id="bf9bdf3f5fa10aff2cab1f17aaffdcca0b623596" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using MySQL, the following checks will be performed:</source>
          <target state="translated">Если вы используете MySQL, будут выполнены следующие проверки:</target>
        </trans-unit>
        <trans-unit id="228adccc2a150114c8cffe4456bca9a36f683fa7" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using MySQL, your tables may or may not support transactions; it depends on your MySQL version and the table types you&amp;rsquo;re using. (By &amp;ldquo;table types,&amp;rdquo; we mean something like &amp;ldquo;InnoDB&amp;rdquo; or &amp;ldquo;MyISAM&amp;rdquo;.) MySQL transaction peculiarities are outside the scope of this article, but the MySQL site has &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/sql-syntax-transactions.html&quot;&gt;information on MySQL transactions&lt;/a&gt;.</source>
          <target state="translated">Если вы используете MySQL, ваши таблицы могут поддерживать или не поддерживать транзакции; это зависит от вашей версии MySQL и типов таблиц, которые вы используете. (Под &amp;laquo;типами таблиц&amp;raquo; мы подразумеваем что-то вроде &amp;laquo;InnoDB&amp;raquo; или &amp;laquo;MyISAM&amp;raquo;.) Особенности транзакций MySQL выходят за рамки данной статьи, но на сайте MySQL есть &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/sql-syntax-transactions.html&quot;&gt;информация о транзакциях MySQL&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a9a0fd540cf9eba9010f1a43a66ed09c582deee1" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using Oracle, you&amp;rsquo;ll need a copy of &lt;a href=&quot;https://oracle.github.io/python-cx_Oracle/&quot;&gt;cx_Oracle&lt;/a&gt;, but please read the &lt;a href=&quot;../ref/databases#oracle-notes&quot;&gt;notes for the Oracle backend&lt;/a&gt; for details regarding supported versions of both Oracle and &lt;code&gt;cx_Oracle&lt;/code&gt;.</source>
          <target state="translated">Если вы используете Oracle, вам понадобится копия &lt;a href=&quot;https://oracle.github.io/python-cx_Oracle/&quot;&gt;cx_Oracle&lt;/a&gt; , но, пожалуйста, прочтите &lt;a href=&quot;../ref/databases#oracle-notes&quot;&gt;примечания к серверной&lt;/a&gt; части Oracle для получения подробной информации о поддерживаемых версиях Oracle и &lt;code&gt;cx_Oracle&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="92d54d481c5d03a9b0ca88a5f50b8ed2498b6ef7" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using PostgreSQL, Django provides &lt;a href=&quot;../../ref/contrib/postgres/search&quot;&gt;a selection of database specific tools&lt;/a&gt; to allow you to leverage more complex querying options. Other databases have different selections of tools, possibly via plugins or user-defined functions. Django doesn&amp;rsquo;t include any support for them at this time. We&amp;rsquo;ll use some examples from PostgreSQL to demonstrate the kind of functionality databases may have.</source>
          <target state="translated">Если вы используете PostgreSQL, Django предоставляет &lt;a href=&quot;../../ref/contrib/postgres/search&quot;&gt;набор инструментов&lt;/a&gt; для работы с базами данных, которые позволяют вам использовать более сложные опции запросов. Другие базы данных имеют различный выбор инструментов, возможно, с помощью плагинов или пользовательских функций. В настоящее время Django не поддерживает их. Мы будем использовать некоторые примеры из PostgreSQL, чтобы продемонстрировать функциональность баз данных.</target>
        </trans-unit>
        <trans-unit id="2740b6405cd59234c5607e21afdcdaccce94c79c" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using PostgreSQL, by default (empty &lt;a href=&quot;#std:setting-HOST&quot;&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/a&gt;), the connection to the database is done through UNIX domain sockets (&amp;lsquo;local&amp;rsquo; lines in &lt;code&gt;pg_hba.conf&lt;/code&gt;). If your UNIX domain socket is not in the standard location, use the same value of &lt;code&gt;unix_socket_directory&lt;/code&gt; from &lt;code&gt;postgresql.conf&lt;/code&gt;. If you want to connect through TCP sockets, set &lt;a href=&quot;#std:setting-HOST&quot;&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/a&gt; to &amp;lsquo;localhost&amp;rsquo; or &amp;lsquo;127.0.0.1&amp;rsquo; (&amp;lsquo;host&amp;rsquo; lines in &lt;code&gt;pg_hba.conf&lt;/code&gt;). On Windows, you should always define &lt;a href=&quot;#std:setting-HOST&quot;&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/a&gt;, as UNIX domain sockets are not available.</source>
          <target state="translated">Если вы используете PostgreSQL, по умолчанию (пустой &lt;a href=&quot;#std:setting-HOST&quot;&gt; &lt;code&gt;HOST&lt;/code&gt; &lt;/a&gt; ) соединение с базой данных осуществляется через доменные сокеты UNIX (&amp;laquo;локальные&amp;raquo; строки в &lt;code&gt;pg_hba.conf&lt;/code&gt; ). Если ваш сокет домена UNIX не находится в стандартном расположении, используйте то же значение &lt;code&gt;unix_socket_directory&lt;/code&gt; из &lt;code&gt;postgresql.conf&lt;/code&gt; . Если вы хотите подключиться через TCP-сокеты, установите &lt;a href=&quot;#std:setting-HOST&quot;&gt; &lt;code&gt;HOST&lt;/code&gt; &lt;/a&gt; в значение &amp;laquo;localhost&amp;raquo; или &amp;laquo;127.0.0.1&amp;raquo; (строки &amp;laquo;host&amp;raquo; в &lt;code&gt;pg_hba.conf&lt;/code&gt; ). В Windows вы всегда должны определять &lt;a href=&quot;#std:setting-HOST&quot;&gt; &lt;code&gt;HOST&lt;/code&gt; &lt;/a&gt; , поскольку доменные сокеты UNIX недоступны.</target>
        </trans-unit>
        <trans-unit id="dd5ae27cbc04f18050df1d431f5fb25a9fbe2c53" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using PostgreSQL, the sequence associated with the primary key might need to be updated; see &lt;a href=&quot;../databases#manually-specified-autoincrement-pk&quot;&gt;Manually-specifying values of auto-incrementing primary keys&lt;/a&gt;.</source>
          <target state="translated">Если вы используете PostgreSQL, возможно, потребуется обновить последовательность, связанную с первичным ключом; см. &lt;a href=&quot;../databases#manually-specified-autoincrement-pk&quot;&gt;Задаваемые вручную значения автоинкрементных первичных ключей&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="17609ee45cfd691775da7000d116f264e7657fcb" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using PostgreSQL, you&amp;rsquo;ll need the &lt;a href=&quot;https://www.psycopg.org/&quot;&gt;psycopg2&lt;/a&gt; package. Refer to the &lt;a href=&quot;../ref/databases#postgresql-notes&quot;&gt;PostgreSQL notes&lt;/a&gt; for further details.</source>
          <target state="translated">Если вы используете PostgreSQL, вам понадобится пакет &lt;a href=&quot;https://www.psycopg.org/&quot;&gt;psycopg2&lt;/a&gt; . Обратитесь к &lt;a href=&quot;../ref/databases#postgresql-notes&quot;&gt;примечаниям PostgreSQL&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="81dfb5f0dc2391f3e82b1355d3ca6abc305f8d47" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using Postgres, Oracle, or MySQL with InnoDB, this is enforced at the database integrity level &amp;ndash; database level key constraints prevent the creation of relations that can&amp;rsquo;t be validated.</source>
          <target state="translated">Если вы используете Postgres, Oracle или MySQL с InnoDB, это применяется на уровне целостности базы данных - ограничения ключа уровня базы данных предотвращают создание отношений, которые невозможно проверить.</target>
        </trans-unit>
        <trans-unit id="65a65316c0bd24040960220c94a678789b0f6a2a" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using SQLite you might want to read the &lt;a href=&quot;../ref/databases#sqlite-notes&quot;&gt;SQLite backend notes&lt;/a&gt;.</source>
          <target state="translated">Если вы используете SQLite, вы можете прочитать &lt;a href=&quot;../ref/databases#sqlite-notes&quot;&gt;примечания&lt;/a&gt; к SQLite .</target>
        </trans-unit>
        <trans-unit id="334c33a340c62565a0dda48701d8cc481ae24464" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using SQLite, you don&amp;rsquo;t need to create anything beforehand - the database file will be created automatically when it is needed.</source>
          <target state="translated">Если вы используете SQLite, вам не нужно ничего создавать заранее - файл базы данных будет создан автоматически, когда это необходимо.</target>
        </trans-unit>
        <trans-unit id="dd02ebc4205a2c5d09b790615c39301f2afffdb4" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using Windows and need to install the GNU gettext utilities so &lt;a href=&quot;../../ref/django-admin#django-admin-compilemessages&quot;&gt;&lt;code&gt;django-admin compilemessages&lt;/code&gt;&lt;/a&gt; works see &lt;a href=&quot;#gettext-on-windows&quot;&gt;gettext on Windows&lt;/a&gt; for more information.</source>
          <target state="translated">Если вы используете Windows и вам нужно установить утилиты GNU gettext, чтобы &lt;a href=&quot;../../ref/django-admin#django-admin-compilemessages&quot;&gt; &lt;code&gt;django-admin compilemessages&lt;/code&gt; &lt;/a&gt; см. Gettext&lt;a href=&quot;#gettext-on-windows&quot;&gt; в Windows&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="7c2566945d2ca024ddf78f5b4ec709f5e3b7bae3" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using Windows and need to install the GNU gettext utilities so &lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt;&lt;code&gt;makemessages&lt;/code&gt;&lt;/a&gt; works, see &lt;a href=&quot;#gettext-on-windows&quot;&gt;gettext on Windows&lt;/a&gt; for more information.</source>
          <target state="translated">Если вы используете Windows и вам нужно установить утилиты GNU gettext, чтобы &lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt; &lt;code&gt;makemessages&lt;/code&gt; &lt;/a&gt; работал, см. &lt;a href=&quot;#gettext-on-windows&quot;&gt;Gettext в Windows&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="46eb70b42871e7bacf59440c3bae92eb1b4ae4ef" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using a &lt;code&gt;QuerySet&lt;/code&gt; with a very large number of items, requesting high page numbers might be slow on some databases, because the resulting &lt;code&gt;LIMIT&lt;/code&gt;/&lt;code&gt;OFFSET&lt;/code&gt; query needs to count the number of &lt;code&gt;OFFSET&lt;/code&gt; records which takes longer as the page number gets higher.</source>
          <target state="translated">Если вы используете &lt;code&gt;QuerySet&lt;/code&gt; с очень большим количеством элементов, запрос некоторых номеров страниц может быть медленным в некоторых базах данных, поскольку в результате запроса &lt;code&gt;LIMIT&lt;/code&gt; / &lt;code&gt;OFFSET&lt;/code&gt; необходимо подсчитать количество записей &lt;code&gt;OFFSET&lt;/code&gt; , которое занимает больше времени по мере увеличения номера страницы. ,</target>
        </trans-unit>
        <trans-unit id="70b3d5d4568f4fd39cfd395329f1734d8e532b16" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using a cache, connection parameters may be different in development and in production. Django defaults to per-process &lt;a href=&quot;../../topics/cache#local-memory-caching&quot;&gt;local-memory caching&lt;/a&gt; which may not be desirable.</source>
          <target state="translated">Если вы используете кеш, параметры подключения могут отличаться в разработке и в производстве. По умолчанию Django кэширует &lt;a href=&quot;../../topics/cache#local-memory-caching&quot;&gt;локальную память&lt;/a&gt; для каждого процесса, что может быть нежелательно.</target>
        </trans-unit>
        <trans-unit id="fc3ed93f28f451dc5be072e0a09e76c785745981" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using a database backend that uses a different SQL syntax for a certain function, you can add support for it by monkey patching a new method onto the function&amp;rsquo;s class.</source>
          <target state="translated">Если вы используете серверную часть базы данных, которая использует другой синтаксис SQL для определенной функции, вы можете добавить поддержку для нее, установив новый метод в класс функции.</target>
        </trans-unit>
        <trans-unit id="42525c03b5426673012c5e443de921b7d2a48312" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using a database besides SQLite, make sure you&amp;rsquo;ve created a database by this point. Do that with &amp;ldquo;&lt;code&gt;CREATE DATABASE database_name;&lt;/code&gt;&amp;rdquo; within your database&amp;rsquo;s interactive prompt.</source>
          <target state="translated">Если вы используете базу данных помимо SQLite, убедитесь, что вы создали базу данных к этому моменту. Сделайте это с помощью &amp;laquo; &lt;code&gt;CREATE DATABASE database_name;&lt;/code&gt; &amp;raquo;В интерактивной подсказке вашей базы данных.</target>
        </trans-unit>
        <trans-unit id="3bfd941888efa436ecc6ede3006e996113f463ad" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using a different authentication backend, this method may require different credentials. It requires whichever credentials are required by your backend&amp;rsquo;s &lt;code&gt;authenticate()&lt;/code&gt; method.</source>
          <target state="translated">Если вы используете другой сервер аутентификации, для этого метода могут потребоваться другие учетные данные. Это требует, какие учетные данные требуются для метода &lt;code&gt;authenticate()&lt;/code&gt; вашего бэкэнда .</target>
        </trans-unit>
        <trans-unit id="05764d13eeb945fede1a5e8927e7f8a5ab301058" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using a hosting service and can&amp;rsquo;t change your server&amp;rsquo;s default storage engine, you have a couple of options.</source>
          <target state="translated">Если вы используете хостинг и не можете изменить механизм хранения по умолчанию на вашем сервере, у вас есть несколько вариантов.</target>
        </trans-unit>
        <trans-unit id="5a353593d2d8e5b736818eb171577ee093269dde" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using an &lt;a href=&quot;#django.contrib.postgres.fields.ArrayField&quot;&gt;&lt;code&gt;ArrayField&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;CIText&lt;/code&gt; fields, you must add &lt;code&gt;'django.contrib.postgres'&lt;/code&gt; in your &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;, otherwise field values will appear as strings like &lt;code&gt;'{thoughts,django}'&lt;/code&gt;.</source>
          <target state="translated">Если вы используете &lt;a href=&quot;#django.contrib.postgres.fields.ArrayField&quot;&gt; &lt;code&gt;ArrayField&lt;/code&gt; &lt;/a&gt; из полей &lt;code&gt;CIText&lt;/code&gt; , вы должны добавить &lt;code&gt;'django.contrib.postgres'&lt;/code&gt; в &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; , в противном случае значения полей будут отображаться в виде строк, таких как &lt;code&gt;'{thoughts,django}'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="61e7c53b9fd063f957398fb1f4320dfd4e2a9584" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using an unofficial 3rd party backend, please consult the documentation provided for any additional requirements.</source>
          <target state="translated">Если вы используете неофициальный бэкэнд третьей стороны, пожалуйста, обратитесь к документации для каких-либо дополнительных требований.</target>
        </trans-unit>
        <trans-unit id="fb1e7f7e52bbcd15afd7dc412eee86df9c3f70b8" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using components of Django &amp;ldquo;standalone&amp;rdquo; &amp;ndash; for example, writing a Python script which loads some Django templates and renders them, or uses the ORM to fetch some data &amp;ndash; there&amp;rsquo;s one more step you&amp;rsquo;ll need in addition to configuring settings.</source>
          <target state="translated">Если вы используете компоненты Django &amp;laquo;автономно&amp;raquo; - например, пишете скрипт Python, который загружает некоторые шаблоны Django и отображает их, или используете ORM для извлечения некоторых данных - вам понадобится еще один шаг в дополнение к настройке параметров ,</target>
        </trans-unit>
        <trans-unit id="6c2160405a6776b9843f65c896f4c6a76b70b42b" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using file-based session storage, this sets the directory in which Django will store session data. When the default value (&lt;code&gt;None&lt;/code&gt;) is used, Django will use the standard temporary directory for the system.</source>
          <target state="translated">Если вы используете файловое хранилище сеансов, это устанавливает каталог, в котором Django будет хранить данные сеансов. Когда используется значение по умолчанию ( &lt;code&gt;None&lt;/code&gt; ), Django будет использовать стандартный временный каталог для системы.</target>
        </trans-unit>
        <trans-unit id="bdf2864962c6854deb565415dc128e418e85409e" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using middleware, you can do that. Middleware provides multiple opportunities to process a response on exit from a view. If you put behavior in the response middleware, it&amp;rsquo;s guaranteed to execute after template rendering has taken place.</source>
          <target state="translated">Если вы используете промежуточное ПО, вы можете это сделать. Промежуточное программное обеспечение предоставляет множество возможностей для обработки ответа при выходе из представления. Если вы поместите поведение в промежуточное ПО ответа, оно гарантированно выполнится после рендеринга шаблона.</target>
        </trans-unit>
        <trans-unit id="176b3e53bd5619ca954a6de51573ff4145217e13" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using pagination, you can adapt the &lt;a href=&quot;../../topics/pagination#using-paginator-in-view&quot;&gt;example template from the pagination docs&lt;/a&gt;. Change instances of &lt;code&gt;contacts&lt;/code&gt; in that example template to &lt;code&gt;page_obj&lt;/code&gt;.</source>
          <target state="translated">Если вы используете нумерацию страниц, вы можете адаптировать &lt;a href=&quot;../../topics/pagination#using-paginator-in-view&quot;&gt;шаблон примера из документации по нумерации страниц&lt;/a&gt; . Измените экземпляры &lt;code&gt;contacts&lt;/code&gt; в этом примере шаблона на &lt;code&gt;page_obj&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="38126e95e0083d43b4efeedfd50bff85a4f91dfd" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using the &lt;code&gt;django.contrib.sessions.backends.db&lt;/code&gt; backend, each session is a normal Django model. The &lt;code&gt;Session&lt;/code&gt; model is defined in &lt;code&gt;django/contrib/sessions/models.py&lt;/code&gt;. Because it&amp;rsquo;s a normal model, you can access sessions using the normal Django database API:</source>
          <target state="translated">Если вы используете бэкэнд &lt;code&gt;django.contrib.sessions.backends.db&lt;/code&gt; , то каждый сеанс представляет собой обычную модель Django. Модель &lt;code&gt;Session&lt;/code&gt; определена в &lt;code&gt;django/contrib/sessions/models.py&lt;/code&gt; . Поскольку это нормальная модель, вы можете получить доступ к сеансам, используя обычный API базы данных Django:</target>
        </trans-unit>
        <trans-unit id="50d514d3dd0b830cdb2e92c3b229482ff305cf07" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using the context processor, your template should be rendered with a &lt;code&gt;RequestContext&lt;/code&gt;. Otherwise, ensure &lt;code&gt;messages&lt;/code&gt; is available to the template context.</source>
          <target state="translated">Если вы используете контекстный процессор, ваш шаблон должен отображаться с &lt;code&gt;RequestContext&lt;/code&gt; . В противном случае убедитесь, что &lt;code&gt;messages&lt;/code&gt; доступны для контекста шаблона.</target>
        </trans-unit>
        <trans-unit id="526e48b58228f65bfc33a8bdc8a0463e6592108c" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using the same HTML for each of your form fields, you can reduce duplicate code by looping through each field in turn using a &lt;code&gt;{% for %}&lt;/code&gt; loop:</source>
          <target state="translated">Если вы используете один и тот же HTML-код для каждого из полей формы, вы можете уменьшить дублирующийся код, циклически просматривая каждое поле, используя цикл &lt;code&gt;{% for %}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="71b2f6560e3b81f86c2f6fbf8c0b3fd58fd8164f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re wrestling with a particular problem, start with the &lt;a href=&quot;#time-zones-faq&quot;&gt;time zone FAQ&lt;/a&gt;.</source>
          <target state="translated">Если вы боретесь с определенной проблемой, начните с &lt;a href=&quot;#time-zones-faq&quot;&gt;часто задаваемых вопросов&lt;/a&gt; о часовом поясе .</target>
        </trans-unit>
        <trans-unit id="033bd6d75929d6d7705838d0e26ce74b89b3cf6f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re writing a pluggable application that&amp;rsquo;s expected to work independently of the value of &lt;a href=&quot;../../ref/settings#std:setting-USE_TZ&quot;&gt;&lt;code&gt;USE_TZ&lt;/code&gt;&lt;/a&gt;, you may find &lt;a href=&quot;../../ref/utils#django.utils.timezone.now&quot;&gt;&lt;code&gt;django.utils.timezone.now()&lt;/code&gt;&lt;/a&gt; useful. This function returns the current date and time as a naive datetime when &lt;code&gt;USE_TZ = False&lt;/code&gt; and as an aware datetime when &lt;code&gt;USE_TZ = True&lt;/code&gt;. You can add or subtract &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt;&lt;code&gt;datetime.timedelta&lt;/code&gt;&lt;/a&gt; as needed.</source>
          <target state="translated">Если вы пишете подключаемое приложение, которое, как ожидается, будет работать независимо от значения &lt;a href=&quot;../../ref/settings#std:setting-USE_TZ&quot;&gt; &lt;code&gt;USE_TZ&lt;/code&gt; &lt;/a&gt; , вам может &lt;a href=&quot;../../ref/utils#django.utils.timezone.now&quot;&gt; &lt;code&gt;django.utils.timezone.now()&lt;/code&gt; &lt;/a&gt; . Эта функция возвращает текущую дату и время в виде наивного даты и времени, когда &lt;code&gt;USE_TZ = False&lt;/code&gt; и в качестве осведомленной даты и времени, когда &lt;code&gt;USE_TZ = True&lt;/code&gt; . Вы можете добавить или вычесть &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt; &lt;code&gt;datetime.timedelta&lt;/code&gt; по&lt;/a&gt; мере необходимости.</target>
        </trans-unit>
        <trans-unit id="1b9ad3f8840feee3141c8778e1865bfb234bef75" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re writing a reusable app (or other piece of code) and want to include messaging functionality, but don&amp;rsquo;t want to require your users to enable it if they don&amp;rsquo;t want to, you may pass an additional keyword argument &lt;code&gt;fail_silently=True&lt;/code&gt; to any of the &lt;code&gt;add_message&lt;/code&gt; family of methods. For example:</source>
          <target state="translated">Если вы пишете повторно используемое приложение (или другой фрагмент кода) и хотите включить функцию обмена сообщениями, но не хотите, чтобы ваши пользователи включали ее, если они этого не хотят, вы можете передать дополнительный аргумент ключевого слова &lt;code&gt;fail_silently=True&lt;/code&gt; для любого из &lt;code&gt;add_message&lt;/code&gt; семейства add_message . Например:</target>
        </trans-unit>
        <trans-unit id="84e127f1322ee32bfece7dc5d4283b6cce1c3d07" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re writing a template filter that only expects a string as the first argument, you should use the decorator &lt;code&gt;stringfilter&lt;/code&gt;. This will convert an object to its string value before being passed to your function:</source>
          <target state="translated">Если вы пишете шаблонный фильтр, который ожидает только строку в качестве первого аргумента, вы должны использовать декоратор &lt;code&gt;stringfilter&lt;/code&gt; . Это преобразует объект в его строковое значение перед передачей в вашу функцию:</target>
        </trans-unit>
        <trans-unit id="62e93f9276c7d2bf03dab03afbe7a0d01da88a4a" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re writing reusable views or templates, you may not know ahead of time whether your form is a multipart form or not. The &lt;code&gt;is_multipart()&lt;/code&gt; method tells you whether the form requires multipart encoding for submission:</source>
          <target state="translated">Если вы пишете многоразовые представления или шаблоны, вы можете заранее не знать, является ли ваша форма многочастной или нет. Метод &lt;code&gt;is_multipart()&lt;/code&gt; сообщает вам, требует ли форма многочастного кодирования для отправки:</target>
        </trans-unit>
        <trans-unit id="0b3ccbce78a9deb2e8380cbbbf0c3e8d425150d4" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re writing some code that must handle an unknown model, for example, in a third-party app that implements a generic view, use this manager (or &lt;a href=&quot;#django.db.models.Model._base_manager&quot;&gt;&lt;code&gt;_base_manager&lt;/code&gt;&lt;/a&gt;) rather than assuming the model has an &lt;code&gt;objects&lt;/code&gt; manager.</source>
          <target state="translated">Если вы пишете код, который должен обрабатывать неизвестную модель, например, в стороннем приложении, которое реализует универсальное представление, используйте этот менеджер (или &lt;a href=&quot;#django.db.models.Model._base_manager&quot;&gt; &lt;code&gt;_base_manager&lt;/code&gt; &lt;/a&gt; ) вместо того, чтобы предполагать, что модель имеет менеджер &lt;code&gt;objects&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ffa49a02c217a153d3911b777d92a70dad025527" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve activated the automatic Django admin interface, you should see a &amp;ldquo;Flatpages&amp;rdquo; section on the admin index page. Edit flatpages as you edit any other object in the system.</source>
          <target state="translated">Если вы активировали автоматический интерфейс администратора Django, вы должны увидеть раздел &amp;laquo;Плоские страницы&amp;raquo; на странице индекса администратора. Редактируйте плоские страницы, как вы редактируете любой другой объект в системе.</target>
        </trans-unit>
        <trans-unit id="8c91814cc038e9087397b1c9d79e06cb53c2998e" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve activated the automatic Django admin interface, you should see a &amp;ldquo;Redirects&amp;rdquo; section on the admin index page. Edit redirects as you edit any other object in the system.</source>
          <target state="translated">Если вы активировали автоматический интерфейс администратора Django, вы должны увидеть раздел &amp;laquo;Перенаправления&amp;raquo; на странице индекса администратора. Редактировать перенаправляет, как вы редактируете любой другой объект в системе.</target>
        </trans-unit>
        <trans-unit id="746003a32ff1823f7c12c2c3009e4bcdbdada474" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve always used naive datetimes, you probably believe that you can convert a datetime to a date by calling its &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime.date&quot;&gt;&lt;code&gt;date()&lt;/code&gt;&lt;/a&gt; method. You also consider that a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; is a lot like a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;, except that it&amp;rsquo;s less accurate.</source>
          <target state="translated">Если вы всегда использовали наивные даты и время, вы, вероятно, полагаете, что можете преобразовать дату и время в дату, вызвав ее метод &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime.date&quot;&gt; &lt;code&gt;date()&lt;/code&gt; &lt;/a&gt; . Кроме того, считают , что &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt; много как &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt; , за исключением того, что он менее точен.</target>
        </trans-unit>
        <trans-unit id="510f1ae50ede1300d4b2693ad8c71631f7d7fb86" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve customized the &lt;a href=&quot;../../settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; setting, &lt;a href=&quot;../../middleware#django.contrib.auth.middleware.AuthenticationMiddleware&quot;&gt;&lt;code&gt;django.contrib.auth.middleware.AuthenticationMiddleware&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../middleware#django.contrib.messages.middleware.MessageMiddleware&quot;&gt;&lt;code&gt;django.contrib.messages.middleware.MessageMiddleware&lt;/code&gt;&lt;/a&gt; must be included.</source>
          <target state="translated">Если вы настроили &lt;a href=&quot;../../settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt; настройки, &lt;a href=&quot;../../middleware#django.contrib.auth.middleware.AuthenticationMiddleware&quot;&gt; &lt;code&gt;django.contrib.auth.middleware.AuthenticationMiddleware&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../../middleware#django.contrib.messages.middleware.MessageMiddleware&quot;&gt; &lt;code&gt;django.contrib.messages.middleware.MessageMiddleware&lt;/code&gt; &lt;/a&gt; должны быть включены.</target>
        </trans-unit>
        <trans-unit id="46537cc51b7d74f1917135d14f86f7f048e20457" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve never had to deal with tests before, they can look a little hard to write at first glance. Fortunately, testing is a &lt;em&gt;very&lt;/em&gt; big subject in computer programming, so there&amp;rsquo;s lots of information out there:</source>
          <target state="translated">Если вам никогда раньше не приходилось сталкиваться с тестами, на первый взгляд они могут показаться сложными для написания. К счастью, тестирование является &lt;em&gt;очень&lt;/em&gt; большой темой в компьютерном программировании, поэтому есть много информации:</target>
        </trans-unit>
        <trans-unit id="b1fcac0f08f188a490cc866525da1cb739eb8667" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve saved an instance to one database, it might be tempting to use &lt;code&gt;save(using=...)&lt;/code&gt; as a way to migrate the instance to a new database. However, if you don&amp;rsquo;t take appropriate steps, this could have some unexpected consequences.</source>
          <target state="translated">Если вы сохранили экземпляр в одной базе данных, может возникнуть соблазн использовать &lt;code&gt;save(using=...)&lt;/code&gt; как способ переноса экземпляра в новую базу данных. Однако, если вы не предпримите соответствующие шаги, это может привести к неожиданным последствиям.</target>
        </trans-unit>
        <trans-unit id="e02d2ccf5c1a7f35c124bfd1c3140db6fcf906af" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve used the &lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt; command you&amp;rsquo;ve probably already seen &lt;code&gt;dependencies&lt;/code&gt; in action because auto-created migrations have this defined as part of their creation process.</source>
          <target state="translated">Если вы использовали команду &lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt; &lt;code&gt;makemigrations&lt;/code&gt; ,&lt;/a&gt; вы, вероятно, уже видели &lt;code&gt;dependencies&lt;/code&gt; в действии, потому что автоматически созданные миграции определяют это как часть процесса их создания.</target>
        </trans-unit>
        <trans-unit id="57c4c61903f21939d1b79448096a5c411639cc93" translate="yes" xml:space="preserve">
          <source>If your &lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt;&lt;code&gt;AUTH_USER_MODEL&lt;/code&gt;&lt;/a&gt; inherits from &lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser&quot;&gt;&lt;code&gt;AbstractBaseUser&lt;/code&gt;&lt;/a&gt; or implements its own &lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash&quot;&gt;&lt;code&gt;get_session_auth_hash()&lt;/code&gt;&lt;/a&gt; method, authenticated sessions will include the hash returned by this function. In the &lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser&quot;&gt;&lt;code&gt;AbstractBaseUser&lt;/code&gt;&lt;/a&gt; case, this is an HMAC of the password field. Django verifies that the hash in the session for each request matches the one that&amp;rsquo;s computed during the request. This allows a user to log out all of their sessions by changing their password.</source>
          <target state="translated">Если ваш &lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt; &lt;code&gt;AUTH_USER_MODEL&lt;/code&gt; &lt;/a&gt; наследует от &lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser&quot;&gt; &lt;code&gt;AbstractBaseUser&lt;/code&gt; &lt;/a&gt; или реализует свой собственный &lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash&quot;&gt; &lt;code&gt;get_session_auth_hash()&lt;/code&gt; &lt;/a&gt; , аутентифицированные сеансы будут включать хэш, возвращаемый этой функцией. В случае &lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser&quot;&gt; &lt;code&gt;AbstractBaseUser&lt;/code&gt; &lt;/a&gt; это HMAC поля пароля. Django проверяет, что хэш в сеансе для каждого запроса совпадает с хэшем, который вычисляется во время запроса. Это позволяет пользователю выйти из всех своих сеансов, изменив свой пароль.</target>
        </trans-unit>
        <trans-unit id="ff6fb60a475d1cd1de37b15f96dc6b92a8c3143c" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;ModelForm&lt;/code&gt; and &lt;code&gt;ModelAdmin&lt;/code&gt; both define an &lt;code&gt;exclude&lt;/code&gt; option then &lt;code&gt;ModelAdmin&lt;/code&gt; takes precedence:</source>
          <target state="translated">Если ваш &lt;code&gt;ModelForm&lt;/code&gt; и &lt;code&gt;ModelAdmin&lt;/code&gt; определяют опцию &lt;code&gt;exclude&lt;/code&gt; тогда &lt;code&gt;ModelAdmin&lt;/code&gt; имеет приоритет:</target>
        </trans-unit>
        <trans-unit id="eaae8d7419df5dae5e0d1df980784410834abbbb" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;RunPython&lt;/code&gt; or &lt;code&gt;RunSQL&lt;/code&gt; operation only affects one model, it&amp;rsquo;s good practice to pass &lt;code&gt;model_name&lt;/code&gt; as a hint to make it as transparent as possible to the router. This is especially important for reusable and third-party apps.</source>
          <target state="translated">Если ваша &lt;code&gt;RunPython&lt;/code&gt; или &lt;code&gt;RunSQL&lt;/code&gt; влияет только на одну модель, рекомендуется передавать &lt;code&gt;model_name&lt;/code&gt; как подсказку, чтобы сделать его максимально прозрачным для маршрутизатора. Это особенно важно для многоразовых и сторонних приложений.</target>
        </trans-unit>
        <trans-unit id="17d97886edb51352b4b876638aac3d9f4f3ca528" translate="yes" xml:space="preserve">
          <source>If your Django app is behind a proxy, though, the proxy may be &amp;ldquo;swallowing&amp;rdquo; whether the original request uses HTTPS or not. If there is a non-HTTPS connection between the proxy and Django then &lt;code&gt;is_secure()&lt;/code&gt; would always return &lt;code&gt;False&lt;/code&gt; &amp;ndash; even for requests that were made via HTTPS by the end user. In contrast, if there is an HTTPS connection between the proxy and Django then &lt;code&gt;is_secure()&lt;/code&gt; would always return &lt;code&gt;True&lt;/code&gt; &amp;ndash; even for requests that were made originally via HTTP.</source>
          <target state="translated">Если ваше приложение Django находится за прокси-сервером, прокси-сервер может &amp;laquo;проглатывать&amp;raquo;, использует ли исходный запрос HTTPS или нет. Если между прокси-сервером и Django есть не-HTTPS-соединение, то &lt;code&gt;is_secure()&lt;/code&gt; всегда будет возвращать &lt;code&gt;False&lt;/code&gt; - даже для запросов, которые были сделаны конечным пользователем через HTTPS. Напротив, если между прокси-сервером и Django существует HTTPS-соединение, то &lt;code&gt;is_secure()&lt;/code&gt; всегда будет возвращать &lt;code&gt;True&lt;/code&gt; - даже для запросов, которые были первоначально сделаны через HTTP.</target>
        </trans-unit>
        <trans-unit id="5497b62e97032ff943fb4f10c5f320b8f45dac4e" translate="yes" xml:space="preserve">
          <source>If your GDAL library is in a non-standard location, or you don&amp;rsquo;t want to modify the system&amp;rsquo;s library path then the &lt;a href=&quot;../gdal#std:setting-GDAL_LIBRARY_PATH&quot;&gt;&lt;code&gt;GDAL_LIBRARY_PATH&lt;/code&gt;&lt;/a&gt; setting may be added to your Django settings file with the full path to the GDAL library. For example:</source>
          <target state="translated">Если ваша библиотека GDAL находится в нестандартном месте или вы не хотите изменять путь к системной библиотеке, тогда параметр &lt;a href=&quot;../gdal#std:setting-GDAL_LIBRARY_PATH&quot;&gt; &lt;code&gt;GDAL_LIBRARY_PATH&lt;/code&gt; &lt;/a&gt; может быть добавлен в ваш файл настроек Django с полным путем к библиотеке GDAL. Например:</target>
        </trans-unit>
        <trans-unit id="6656b0bbfc9f0cf5bcaba4af9e2783f344122be3" translate="yes" xml:space="preserve">
          <source>If your GEOS library is in a non-standard location, or you don&amp;rsquo;t want to modify the system&amp;rsquo;s library path then the &lt;a href=&quot;../geos#std:setting-GEOS_LIBRARY_PATH&quot;&gt;&lt;code&gt;GEOS_LIBRARY_PATH&lt;/code&gt;&lt;/a&gt; setting may be added to your Django settings file with the full path to the GEOS C library. For example:</source>
          <target state="translated">Если ваша библиотека GEOS находится в нестандартном месте или вы не хотите изменять путь к системной библиотеке, тогда параметр &lt;a href=&quot;../geos#std:setting-GEOS_LIBRARY_PATH&quot;&gt; &lt;code&gt;GEOS_LIBRARY_PATH&lt;/code&gt; &lt;/a&gt; может быть добавлен в ваш файл настроек Django с полным путем к библиотеке GEOS C. Например:</target>
        </trans-unit>
        <trans-unit id="9503b6ac9885ede72752befeddae5b57e6923b42" translate="yes" xml:space="preserve">
          <source>If your MySQL setup does &lt;em&gt;not&lt;/em&gt; support transactions, then Django will always function in autocommit mode: statements will be executed and committed as soon as they&amp;rsquo;re called. If your MySQL setup &lt;em&gt;does&lt;/em&gt; support transactions, Django will handle transactions as explained in this document.</source>
          <target state="translated">Если ваша установка MySQL &lt;em&gt;не&lt;/em&gt; поддерживает транзакции, то Django всегда будет работать в режиме автоматической фиксации: операторы будут выполняться и фиксироваться, как только они будут вызваны. Если ваша установка MySQL &lt;em&gt;делает&lt;/em&gt; поддержку транзакций, Django будет обрабатывать транзакции , как описано в данном документе.</target>
        </trans-unit>
        <trans-unit id="7357f3c6b27ecc3b358d99481fc74b66e7e2445c" translate="yes" xml:space="preserve">
          <source>If your app already has models and database tables, and doesn&amp;rsquo;t have migrations yet (for example, you created it against a previous Django version), you&amp;rsquo;ll need to convert it to use migrations by running:</source>
          <target state="translated">Если ваше приложение уже имеет модели и таблицы базы данных и еще не имеет миграций (например, вы создали его с использованием предыдущей версии Django), вам необходимо преобразовать его для использования миграций, выполнив:</target>
        </trans-unit>
        <trans-unit id="a6f0ecf7e5650fbc70efecf351f9f0234f1b8a8a" translate="yes" xml:space="preserve">
          <source>If your app is tested with multiple user models, using &lt;code&gt;@override_settings(AUTH_USER_MODEL=...)&lt;/code&gt; for example, and you cache the result of &lt;code&gt;get_user_model()&lt;/code&gt; in a module-level variable, you may need to listen to the &lt;a href=&quot;../../ref/signals#django.test.signals.setting_changed&quot;&gt;&lt;code&gt;setting_changed&lt;/code&gt;&lt;/a&gt; signal to clear the cache. For example:</source>
          <target state="translated">Если ваше приложение протестировано на нескольких пользовательских моделях, например, с помощью &lt;code&gt;@override_settings(AUTH_USER_MODEL=...)&lt;/code&gt; , и вы &lt;code&gt;get_user_model()&lt;/code&gt; результат get_user_model () в переменной уровня модуля, вам может потребоваться прослушать сигнал &lt;a href=&quot;../../ref/signals#django.test.signals.setting_changed&quot;&gt; &lt;code&gt;setting_changed&lt;/code&gt; &lt;/a&gt; для очистки кеш. Например:</target>
        </trans-unit>
        <trans-unit id="19dcfebcbdd415cf375a630be2b6e427341d0dea" translate="yes" xml:space="preserve">
          <source>If your application connects to other systems &amp;ndash; for instance, if it queries a Web service &amp;ndash; make sure datetimes are properly specified. To transmit datetimes safely, their representation should include the UTC offset, or their values should be in UTC (or both!).</source>
          <target state="translated">Если ваше приложение подключается к другим системам - например, если оно запрашивает веб-службу - убедитесь, что дата и время указаны правильно. Чтобы безопасно передавать даты и время, их представление должно включать смещение UTC, или их значения должны быть в UTC (или оба!).</target>
        </trans-unit>
        <trans-unit id="68eb798bc7d826d0f87acddbc39d34694074284b" translate="yes" xml:space="preserve">
          <source>If your application provides views, you may want to include tests that use the test client to exercise those views. However, an end user is free to deploy the views in your application at any URL of their choosing. This means that your tests can&amp;rsquo;t rely upon the fact that your views will be available at a particular URL. Decorate your test class or test method with &lt;code&gt;@override_settings(ROOT_URLCONF=...)&lt;/code&gt; for URLconf configuration.</source>
          <target state="translated">Если ваше приложение предоставляет представления, вы можете включить тесты, использующие тестовый клиент для реализации этих представлений. Однако конечный пользователь может свободно развертывать представления в своем приложении по любому URL-адресу по своему выбору. Это означает, что ваши тесты не могут полагаться на тот факт, что ваши представления будут доступны по определенному URL. Украсьте свой тестовый класс или метод теста с помощью &lt;code&gt;@override_settings(ROOT_URLCONF=...)&lt;/code&gt; для конфигурации URLconf.</target>
        </trans-unit>
        <trans-unit id="35485f3524af2f43a59e170657765450ecc8c6f8" translate="yes" xml:space="preserve">
          <source>If your authentication mechanism uses a custom HTTP header and not &lt;code&gt;REMOTE_USER&lt;/code&gt;, you can subclass &lt;code&gt;RemoteUserMiddleware&lt;/code&gt; and set the &lt;code&gt;header&lt;/code&gt; attribute to the desired &lt;code&gt;request.META&lt;/code&gt; key. For example:</source>
          <target state="translated">Если ваш механизм аутентификации использует настраиваемый заголовок HTTP, а не &lt;code&gt;REMOTE_USER&lt;/code&gt; , вы можете &lt;code&gt;RemoteUserMiddleware&lt;/code&gt; подкласс RemoteUserMiddleware и установить для атрибута &lt;code&gt;header&lt;/code&gt; требуемый ключ &lt;code&gt;request.META&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="9779f7ac3b7339bf4ea6d174741695fcb45580da" translate="yes" xml:space="preserve">
          <source>If your background is in plain old PHP (with no use of modern frameworks), you&amp;rsquo;re probably used to putting code under the Web server&amp;rsquo;s document root (in a place such as &lt;code&gt;/var/www&lt;/code&gt;). With Django, you don&amp;rsquo;t do that. It&amp;rsquo;s not a good idea to put any of this Python code within your Web server&amp;rsquo;s document root, because it risks the possibility that people may be able to view your code over the Web. That&amp;rsquo;s not good for security.</source>
          <target state="translated">Если ваш фон написан на простом старом PHP (без использования современных фреймворков), вы, вероятно, привыкли помещать код в корень документа веб-сервера (в такое место, как &lt;code&gt;/var/www&lt;/code&gt; ). С Джанго ты этого не делаешь. Не стоит помещать какой-либо этот код Python в корень документа вашего веб-сервера, потому что это рискует тем, что люди смогут просматривать ваш код через Интернет. Это не хорошо для безопасности.</target>
        </trans-unit>
        <trans-unit id="ca388b1fedcaa5043ea95b9f8107592768d9f5dc" translate="yes" xml:space="preserve">
          <source>If your code attempts to access the database when its modules are compiled, this will occur &lt;em&gt;before&lt;/em&gt; the test database is set up, with potentially unexpected results. For example, if you have a database query in module-level code and a real database exists, production data could pollute your tests. &lt;em&gt;It is a bad idea to have such import-time database queries in your code&lt;/em&gt; anyway - rewrite your code so that it doesn&amp;rsquo;t do this.</source>
          <target state="translated">Если ваш код пытается получить доступ к базе данных при компиляции его модулей, это произойдет &lt;em&gt;до&lt;/em&gt; того , как будет установлена ​​тестовая база данных, что может привести к неожиданным результатам. Например, если у вас есть запрос к базе данных в коде уровня модуля и существует реальная база данных, производственные данные могут загрязнить ваши тесты. &lt;em&gt;В&lt;/em&gt; любом случае, &lt;em&gt;плохая идея иметь такие запросы базы данных времени импорта в вашем коде&lt;/em&gt; - переписать свой код, чтобы он этого не делал.</target>
        </trans-unit>
        <trans-unit id="8b9eb50ad139972e07c5927be25959ddc8c43a98" translate="yes" xml:space="preserve">
          <source>If your code imports the application registry in an application&amp;rsquo;s &lt;code&gt;__init__.py&lt;/code&gt;, the name &lt;code&gt;apps&lt;/code&gt; will clash with the &lt;code&gt;apps&lt;/code&gt; submodule. The best practice is to move that code to a submodule and import it. A workaround is to import the registry under a different name:</source>
          <target state="translated">Если ваш код импортирует реестр приложения в &lt;code&gt;__init__.py&lt;/code&gt; приложения , имя &lt;code&gt;apps&lt;/code&gt; будет конфликтовать с подмодулем &lt;code&gt;apps&lt;/code&gt; . Лучше всего перенести этот код в подмодуль и импортировать его. Обходной путь - импортировать реестр под другим именем:</target>
        </trans-unit>
        <trans-unit id="037c62c31dab165af710e06e5131c4b392f063c1" translate="yes" xml:space="preserve">
          <source>If your code only uses ASCII data, it&amp;rsquo;s safe to use your normal strings, passing them around at will, because ASCII is a subset of UTF-8.</source>
          <target state="translated">Если в вашем коде используются только данные ASCII, можно безопасно использовать обычные строки, передавая их по желанию, поскольку ASCII является подмножеством UTF-8.</target>
        </trans-unit>
        <trans-unit id="e54e295adfb62bcb63529d5938619c752337731c" translate="yes" xml:space="preserve">
          <source>If your command defines mandatory positional arguments, you can customize the message error returned in the case of missing arguments. The default is output by &lt;a href=&quot;https://docs.python.org/3/library/argparse.html#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; (&amp;ldquo;too few arguments&amp;rdquo;).</source>
          <target state="translated">Если ваша команда определяет обязательные позиционные аргументы, вы можете настроить сообщение об ошибке, возвращаемое в случае отсутствия аргументов. По умолчанию выводится &lt;a href=&quot;https://docs.python.org/3/library/argparse.html#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt; (&amp;laquo;слишком мало аргументов&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="8b66d0e6b2d3c34277e5351352f9e2d49c89f40f" translate="yes" xml:space="preserve">
          <source>If your custom &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; class deals with data structures that are more complex than strings, dates, integers, or floats, then you may need to override &lt;a href=&quot;../ref/models/fields#django.db.models.Field.from_db_value&quot;&gt;&lt;code&gt;from_db_value()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/models/fields#django.db.models.Field.to_python&quot;&gt;&lt;code&gt;to_python()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Если ваш пользовательский класс &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt; имеет дело со структурами данных, которые являются более сложными, чем строки, даты, целые числа или числа с плавающей запятой, вам может потребоваться переопределить &lt;a href=&quot;../ref/models/fields#django.db.models.Field.from_db_value&quot;&gt; &lt;code&gt;from_db_value()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../ref/models/fields#django.db.models.Field.to_python&quot;&gt; &lt;code&gt;to_python()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="42459a545a83bcbb2b1a6c5d0c989d612ebefbcf" translate="yes" xml:space="preserve">
          <source>If your custom field uses the &lt;code&gt;CHAR&lt;/code&gt;, &lt;code&gt;VARCHAR&lt;/code&gt; or &lt;code&gt;TEXT&lt;/code&gt; types for MySQL, you must make sure that &lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_prep_value&quot;&gt;&lt;code&gt;get_prep_value()&lt;/code&gt;&lt;/a&gt; always returns a string type. MySQL performs flexible and unexpected matching when a query is performed on these types and the provided value is an integer, which can cause queries to include unexpected objects in their results. This problem cannot occur if you always return a string type from &lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_prep_value&quot;&gt;&lt;code&gt;get_prep_value()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Если ваше настраиваемое поле использует типы &lt;code&gt;CHAR&lt;/code&gt; , &lt;code&gt;VARCHAR&lt;/code&gt; или &lt;code&gt;TEXT&lt;/code&gt; для MySQL, вы должны убедиться, что &lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_prep_value&quot;&gt; &lt;code&gt;get_prep_value()&lt;/code&gt; &lt;/a&gt; всегда возвращает строковый тип. MySQL выполняет гибкое и неожиданное сопоставление, когда запрос выполняется для этих типов, и предоставленное значение является целым числом, которое может заставить запросы включать неожиданные объекты в свои результаты. Эта проблема не может возникнуть, если вы всегда возвращаете строковый тип из &lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_prep_value&quot;&gt; &lt;code&gt;get_prep_value()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5f134f8d6891d13bafe02ccedf40254834ce3b1c" translate="yes" xml:space="preserve">
          <source>If your custom user model is a subclass of &lt;code&gt;AbstractUser&lt;/code&gt;, then you can extend these forms in this manner:</source>
          <target state="translated">Если ваша пользовательская модель пользователя является подклассом &lt;code&gt;AbstractUser&lt;/code&gt; , то вы можете расширить эти формы следующим образом:</target>
        </trans-unit>
        <trans-unit id="7489ac299b65b30e1fabb441ed4d0427d3e20fa3" translate="yes" xml:space="preserve">
          <source>If your data does &lt;em&gt;not&lt;/em&gt; validate, the &lt;code&gt;cleaned_data&lt;/code&gt; dictionary contains only the valid fields:</source>
          <target state="translated">Если ваши данные &lt;em&gt;не&lt;/em&gt; проверяются, словарь &lt;code&gt;cleaned_data&lt;/code&gt; содержит только допустимые поля:</target>
        </trans-unit>
        <trans-unit id="66fee195a0e25a7f977bf0cd9ad9e712b37631fd" translate="yes" xml:space="preserve">
          <source>If your database column name is an SQL reserved word, or contains characters that aren&amp;rsquo;t allowed in Python variable names &amp;ndash; notably, the hyphen &amp;ndash; that&amp;rsquo;s OK. Django quotes column and table names behind the scenes.</source>
          <target state="translated">Если имя столбца вашей базы данных является зарезервированным словом SQL или содержит символы, которые не допускаются в именах переменных Python, в частности, дефис, то это нормально. За кулисами Джанго цитирует имена столбцов и таблиц.</target>
        </trans-unit>
        <trans-unit id="83b77d8f63e76cf58cc37344473b9afbbd464eed" translate="yes" xml:space="preserve">
          <source>If your database configuration requires a specific creation order, you can specify the dependencies that exist using the &lt;a href=&quot;../../ref/settings#std:setting-TEST_DEPENDENCIES&quot;&gt;&lt;code&gt;DEPENDENCIES&lt;/code&gt;&lt;/a&gt; test setting. Consider the following (simplified) example database configuration:</source>
          <target state="translated">Если для вашей конфигурации базы данных требуется определенный порядок создания, вы можете указать существующие зависимости с помощью параметра теста &lt;a href=&quot;../../ref/settings#std:setting-TEST_DEPENDENCIES&quot;&gt; &lt;code&gt;DEPENDENCIES&lt;/code&gt; &lt;/a&gt; . Рассмотрим следующий (упрощенный) пример конфигурации базы данных:</target>
        </trans-unit>
        <trans-unit id="7805750627528231fb20224a0ae84ae501c12e42" translate="yes" xml:space="preserve">
          <source>If your database table name is an SQL reserved word, or contains characters that aren&amp;rsquo;t allowed in Python variable names &amp;ndash; notably, the hyphen &amp;ndash; that&amp;rsquo;s OK. Django quotes column and table names behind the scenes.</source>
          <target state="translated">Если имя таблицы вашей базы данных является зарезервированным словом SQL или содержит символы, которые не допускаются в именах переменных Python, в частности, дефис, то это нормально. За кулисами Джанго цитирует имена столбцов и таблиц.</target>
        </trans-unit>
        <trans-unit id="b9f5f90e03e19a8bb4a87f8c1e61359a54e098f8" translate="yes" xml:space="preserve">
          <source>If your deployment situation allows, it&amp;rsquo;s usually a good idea to have your front-end Web server perform the functionality provided by the &lt;code&gt;SecurityMiddleware&lt;/code&gt;. That way, if there are requests that aren&amp;rsquo;t served by Django (such as static media or user-uploaded files), they will have the same protections as requests to your Django application.</source>
          <target state="translated">Если позволяет ситуация развертывания, обычно рекомендуется, чтобы интерфейсный веб-сервер выполнял функции, предоставляемые &lt;code&gt;SecurityMiddleware&lt;/code&gt; . Таким образом, если есть запросы, которые не обслуживаются Django (например, статический носитель или загруженные пользователем файлы), они будут иметь такую ​​же защиту, как и запросы к вашему приложению Django.</target>
        </trans-unit>
        <trans-unit id="b1ce081d315c1a0717aefc66e3fbb209ac78a158" translate="yes" xml:space="preserve">
          <source>If your form includes a &lt;a href=&quot;../../ref/forms/fields#django.forms.URLField&quot;&gt;&lt;code&gt;URLField&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;../../ref/forms/fields#django.forms.EmailField&quot;&gt;&lt;code&gt;EmailField&lt;/code&gt;&lt;/a&gt; or any integer field type, Django will use the &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt; and &lt;code&gt;number&lt;/code&gt; HTML5 input types. By default, browsers may apply their own validation on these fields, which may be stricter than Django&amp;rsquo;s validation. If you would like to disable this behavior, set the &lt;code&gt;novalidate&lt;/code&gt; attribute on the &lt;code&gt;form&lt;/code&gt; tag, or specify a different widget on the field, like &lt;a href=&quot;../../ref/forms/widgets#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Если ваша форма включает в себя &lt;a href=&quot;../../ref/forms/fields#django.forms.URLField&quot;&gt; &lt;code&gt;URLField&lt;/code&gt; &lt;/a&gt; , в &lt;a href=&quot;../../ref/forms/fields#django.forms.EmailField&quot;&gt; &lt;code&gt;EmailField&lt;/code&gt; &lt;/a&gt; или любой целый тип поля, Django будет использовать &lt;code&gt;url&lt;/code&gt; , по &lt;code&gt;email&lt;/code&gt; и &lt;code&gt;number&lt;/code&gt; типов ввода HTML5. По умолчанию браузеры могут применять свою собственную проверку к этим полям, которая может быть более строгой, чем проверка Django. Если вы хотите отключить это поведение, установите атрибут &lt;code&gt;novalidate&lt;/code&gt; в теге &lt;code&gt;form&lt;/code&gt; или укажите другой виджет в поле, например &lt;a href=&quot;../../ref/forms/widgets#django.forms.TextInput&quot;&gt; &lt;code&gt;TextInput&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9e4e143f7d7dfb7b18d9cf7a1c3427090cb8e9a5" translate="yes" xml:space="preserve">
          <source>If your hasher doesn&amp;rsquo;t have a work factor, implement the method as a no-op (&lt;code&gt;pass&lt;/code&gt;).</source>
          <target state="translated">Если у вашего хэша нет рабочего фактора, реализуйте метод как no-op ( &lt;code&gt;pass&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b9f54aed909184fec0b6faab802c1ba2803adca8" translate="yes" xml:space="preserve">
          <source>If your middleware has both &lt;code&gt;sync_capable = True&lt;/code&gt; and &lt;code&gt;async_capable = True&lt;/code&gt;, then Django will pass it the request without converting it. In this case, you can work out if your middleware will receive async requests by checking if the &lt;code&gt;get_response&lt;/code&gt; object you are passed is a coroutine function, using &lt;a href=&quot;https://docs.python.org/3/library/asyncio-task.html#asyncio.iscoroutinefunction&quot;&gt;&lt;code&gt;asyncio.iscoroutinefunction()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Если в вашем промежуточном ПО есть как &lt;code&gt;sync_capable = True&lt;/code&gt; и &lt;code&gt;async_capable = True&lt;/code&gt; , то Django передаст ему запрос без его преобразования. В этом случае вы можете определить, будет ли ваше промежуточное ПО получать асинхронные запросы, проверив, является ли &lt;code&gt;get_response&lt;/code&gt; вам объект get_response функцией сопрограммы, используя &lt;a href=&quot;https://docs.python.org/3/library/asyncio-task.html#asyncio.iscoroutinefunction&quot;&gt; &lt;code&gt;asyncio.iscoroutinefunction()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b352e31157863463daa5a9b2b4a00f05e691f6ce" translate="yes" xml:space="preserve">
          <source>If your model contains more than one foreign key to the same model, you&amp;rsquo;ll need to resolve the ambiguity manually using &lt;code&gt;fk_name&lt;/code&gt;. For example, consider the following model:</source>
          <target state="translated">Если ваша модель содержит более одного внешнего ключа для одной и той же модели, вам необходимо устранить неоднозначность вручную, используя &lt;code&gt;fk_name&lt;/code&gt; . Например, рассмотрим следующую модель:</target>
        </trans-unit>
        <trans-unit id="6ca7a43d3ceacd8c83aa87a7c6008e8f5f3287d7" translate="yes" xml:space="preserve">
          <source>If your model has a &lt;a href=&quot;../../models/instances#django.db.models.Model.get_absolute_url&quot;&gt;&lt;code&gt;get_absolute_url()&lt;/code&gt;&lt;/a&gt; method but you don&amp;rsquo;t want the &amp;ldquo;View on site&amp;rdquo; button to appear, you only need to set &lt;code&gt;view_on_site&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt;:</source>
          <target state="translated">Если в вашей модели есть метод &lt;a href=&quot;../../models/instances#django.db.models.Model.get_absolute_url&quot;&gt; &lt;code&gt;get_absolute_url()&lt;/code&gt; &lt;/a&gt; но вы не хотите, чтобы кнопка &amp;laquo;Просмотр на сайте&amp;raquo; появлялась, вам нужно только установить &lt;code&gt;view_on_site&lt;/code&gt; в &lt;code&gt;False&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="55784988b7d647b9df1a836203e5bf6b7c5dabc3" translate="yes" xml:space="preserve">
          <source>If your model has more than one &lt;a href=&quot;../models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; to the &lt;code&gt;parent_model&lt;/code&gt;, you must specify a &lt;code&gt;fk_name&lt;/code&gt;.</source>
          <target state="translated">Если ваша модель имеет более одного &lt;a href=&quot;../models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; для &lt;code&gt;parent_model&lt;/code&gt; , вы должны указать &lt;code&gt;fk_name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6dc5086c9587c9e487ae0b9fdc36e7f3231fe93" translate="yes" xml:space="preserve">
          <source>If your model&amp;rsquo;s &lt;a href=&quot;../../topics/db/models#meta-options&quot;&gt;Meta&lt;/a&gt; specifies &lt;a href=&quot;options#django.db.models.Options.get_latest_by&quot;&gt;&lt;code&gt;get_latest_by&lt;/code&gt;&lt;/a&gt;, you can omit any arguments to &lt;code&gt;earliest()&lt;/code&gt; or &lt;code&gt;latest()&lt;/code&gt;. The fields specified in &lt;a href=&quot;options#django.db.models.Options.get_latest_by&quot;&gt;&lt;code&gt;get_latest_by&lt;/code&gt;&lt;/a&gt; will be used by default.</source>
          <target state="translated">Если в &lt;a href=&quot;../../topics/db/models#meta-options&quot;&gt;Meta&lt;/a&gt; вашей модели указан &lt;a href=&quot;options#django.db.models.Options.get_latest_by&quot;&gt; &lt;code&gt;get_latest_by&lt;/code&gt; &lt;/a&gt; , вы можете опустить любые аргументы в &lt;code&gt;earliest()&lt;/code&gt; или в &lt;code&gt;latest()&lt;/code&gt; . Поля, указанные в &lt;a href=&quot;options#django.db.models.Options.get_latest_by&quot;&gt; &lt;code&gt;get_latest_by&lt;/code&gt; ,&lt;/a&gt; будут использоваться по умолчанию.</target>
        </trans-unit>
        <trans-unit id="151f04ef6d26ef02a6f8f49d9494948ff5996818" translate="yes" xml:space="preserve">
          <source>If your project uses proxy models, you must either modify the proxy to extend the user model that&amp;rsquo;s in use in your project, or merge your proxy&amp;rsquo;s behavior into your &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; subclass.</source>
          <target state="translated">Если в вашем проекте используются модели прокси, вы должны либо изменить прокси, чтобы расширить пользовательскую модель, которая используется в вашем проекте, либо объединить поведение вашего прокси с вашим подклассом &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="44824388e510837cfa981ebd84a663ae9c830298" translate="yes" xml:space="preserve">
          <source>If your request used the &lt;code&gt;follow&lt;/code&gt; argument, the &lt;code&gt;expected_url&lt;/code&gt; and &lt;code&gt;target_status_code&lt;/code&gt; will be the url and status code for the final point of the redirect chain.</source>
          <target state="translated">Если в вашем запросе использовался &lt;code&gt;follow&lt;/code&gt; аргумент, &lt;code&gt;expected_url&lt;/code&gt; и &lt;code&gt;target_status_code&lt;/code&gt; будут URL-адресом и кодом состояния для конечной точки цепочки перенаправления.</target>
        </trans-unit>
        <trans-unit id="90e0da33d8c8d3ffe3995050565ede94840b1dd8" translate="yes" xml:space="preserve">
          <source>If your root URLconf uses &lt;a href=&quot;#django.conf.urls.i18n.i18n_patterns&quot;&gt;&lt;code&gt;i18n_patterns()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;JavaScriptCatalog&lt;/code&gt; must also be wrapped by &lt;code&gt;i18n_patterns()&lt;/code&gt; for the catalog to be correctly generated.</source>
          <target state="translated">Если ваш корневой URLconf использует &lt;a href=&quot;#django.conf.urls.i18n.i18n_patterns&quot;&gt; &lt;code&gt;i18n_patterns()&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;JavaScriptCatalog&lt;/code&gt; также должен быть заключен в &lt;code&gt;i18n_patterns()&lt;/code&gt; для правильной генерации каталога.</target>
        </trans-unit>
        <trans-unit id="6df4fb6245e051b9d36fab3f466fa1d09ca7a5f9" translate="yes" xml:space="preserve">
          <source>If your site accepts file uploads, it is strongly advised that you limit these uploads in your Web server configuration to a reasonable size in order to prevent denial of service (DOS) attacks. In Apache, this can be easily set using the &lt;a href=&quot;https://httpd.apache.org/docs/2.4/mod/core.html#limitrequestbody&quot;&gt;LimitRequestBody&lt;/a&gt; directive.</source>
          <target state="translated">Если ваш сайт допускает загрузку файлов, настоятельно рекомендуется ограничить эти загрузки в конфигурации веб-сервера разумным размером, чтобы предотвратить атаки типа &amp;laquo;отказ в обслуживании&amp;raquo; (DOS). В Apache это можно легко установить с &lt;a href=&quot;https://httpd.apache.org/docs/2.4/mod/core.html#limitrequestbody&quot;&gt;помощью&lt;/a&gt; директивы LimitRequestBody .</target>
        </trans-unit>
        <trans-unit id="6f8d605a5c50ad541297eddd5069d8164b968b86" translate="yes" xml:space="preserve">
          <source>If your site offers both HTTP and HTTPS connections, most users will end up with an unsecured connection by default. For best security, you should redirect all HTTP connections to HTTPS.</source>
          <target state="translated">Если на вашем сайте предлагаются как HTTP,так и HTTPS соединения,большинство пользователей по умолчанию получат незащищенное соединение.Для лучшей безопасности,вы должны перенаправить все HTTP-соединения на HTTPS.</target>
        </trans-unit>
        <trans-unit id="d3c6bc1158a1e98cf03b8d846800ac77b1fa4b8a" translate="yes" xml:space="preserve">
          <source>If your site sends emails, these values need to be set correctly.</source>
          <target state="translated">Если ваш сайт посылает электронные письма,эти значения должны быть установлены правильно.</target>
        </trans-unit>
        <trans-unit id="9aa8302c804c3a783e15d8c95fda308c718b94b7" translate="yes" xml:space="preserve">
          <source>If your site serves user-uploaded files, a malicious user could upload a specially-crafted file that would be interpreted as HTML or JavaScript by the browser when you expected it to be something harmless.</source>
          <target state="translated">Если ваш сайт обслуживает загруженные пользователем файлы,злоумышленник может загрузить специально созданный файл,который будет интерпретироваться браузером как HTML или JavaScript,когда вы ожидаете,что это будет что-то безобидное.</target>
        </trans-unit>
        <trans-unit id="0ad66de9dea62ec082b44fd754a56be3eb2434f8" translate="yes" xml:space="preserve">
          <source>If your site uses Django&amp;rsquo;s &lt;a href=&quot;../auth/index&quot;&gt;authentication system&lt;/a&gt; and you deal with logging in users, you can use the test client&amp;rsquo;s &lt;code&gt;login()&lt;/code&gt; method to simulate the effect of a user logging into the site.</source>
          <target state="translated">Если на вашем сайте используется &lt;a href=&quot;../auth/index&quot;&gt;система аутентификации&lt;/a&gt; Django, и вы работаете с пользователями, входящими в систему, вы можете использовать метод &lt;code&gt;login()&lt;/code&gt; тестового клиента, чтобы имитировать эффект входа пользователя на сайт.</target>
        </trans-unit>
        <trans-unit id="d440a3cae88c7b38cb98393225850ee488a3a51c" translate="yes" xml:space="preserve">
          <source>If your site uses Django&amp;rsquo;s &lt;a href=&quot;../auth/index&quot;&gt;authentication system&lt;/a&gt;, the &lt;code&gt;logout()&lt;/code&gt; method can be used to simulate the effect of a user logging out of your site.</source>
          <target state="translated">Если ваш сайт использует систему &lt;a href=&quot;../auth/index&quot;&gt;аутентификации&lt;/a&gt; Django , метод &lt;code&gt;logout()&lt;/code&gt; можно использовать для имитации эффекта выхода пользователя из вашего сайта.</target>
        </trans-unit>
        <trans-unit id="0ae4efc81923d0d641f95a6dbd07af8563d1a6b5" translate="yes" xml:space="preserve">
          <source>If your site uses Django&amp;rsquo;s &lt;a href=&quot;../auth/index&quot;&gt;authentication system&lt;/a&gt;, you can use the &lt;code&gt;force_login()&lt;/code&gt; method to simulate the effect of a user logging into the site. Use this method instead of &lt;a href=&quot;#django.test.Client.login&quot;&gt;&lt;code&gt;login()&lt;/code&gt;&lt;/a&gt; when a test requires a user be logged in and the details of how a user logged in aren&amp;rsquo;t important.</source>
          <target state="translated">Если ваш сайт использует систему &lt;a href=&quot;../auth/index&quot;&gt;аутентификации&lt;/a&gt; Django , вы можете использовать метод &lt;code&gt;force_login()&lt;/code&gt; для имитации эффекта входа пользователя на сайт. Используйте этот метод вместо &lt;a href=&quot;#django.test.Client.login&quot;&gt; &lt;code&gt;login()&lt;/code&gt; &lt;/a&gt; когда для теста требуется, чтобы пользователь вошел в систему, и детали того, как пользователь вошел в систему, не важны.</target>
        </trans-unit>
        <trans-unit id="56c55021691d4a1273096fb3bde5d2de5ed1abf6" translate="yes" xml:space="preserve">
          <source>If your site uses the same rendering logic for forms in multiple places, you can reduce duplication by saving the form&amp;rsquo;s loop in a standalone template and using the &lt;a href=&quot;../../ref/templates/builtins#std:templatetag-include&quot;&gt;&lt;code&gt;include&lt;/code&gt;&lt;/a&gt; tag to reuse it in other templates:</source>
          <target state="translated">Если ваш сайт использует одну и ту же логику рендеринга для форм в нескольких местах, вы можете уменьшить дублирование, сохранив цикл формы в автономном шаблоне и используя тег &lt;a href=&quot;../../ref/templates/builtins#std:templatetag-include&quot;&gt; &lt;code&gt;include&lt;/code&gt; &lt;/a&gt; для повторного использования в других шаблонах:</target>
        </trans-unit>
        <trans-unit id="0462de7d96fe5e5014114972e806e852776e60fd" translate="yes" xml:space="preserve">
          <source>If your template tag needs to access the current context, you can use the &lt;code&gt;takes_context&lt;/code&gt; argument when registering your tag:</source>
          <target state="translated">Если вашему шаблонному тегу требуется доступ к текущему контексту, вы можете использовать аргумент &lt;code&gt;takes_context&lt;/code&gt; при регистрации вашего тега:</target>
        </trans-unit>
        <trans-unit id="131d5a32009bb9c3437d883a85b81cbab612c507" translate="yes" xml:space="preserve">
          <source>If your tests make any database queries, use subclasses &lt;a href=&quot;#django.test.TransactionTestCase&quot;&gt;&lt;code&gt;TransactionTestCase&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#django.test.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Если ваши тесты делают какие-либо запросы к базе данных, используйте подклассы &lt;a href=&quot;#django.test.TransactionTestCase&quot;&gt; &lt;code&gt;TransactionTestCase&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;#django.test.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="93b76f5f9b3d3f25cd25b34d9927950756431ed5" translate="yes" xml:space="preserve">
          <source>If your tests rely on database access such as creating or querying models, be sure to create your test classes as subclasses of &lt;a href=&quot;tools#django.test.TestCase&quot;&gt;&lt;code&gt;django.test.TestCase&lt;/code&gt;&lt;/a&gt; rather than &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Если ваши тесты основаны на доступе к базе данных, например, при создании или запросе моделей, обязательно создайте свои тестовые классы как подклассы &lt;a href=&quot;tools#django.test.TestCase&quot;&gt; &lt;code&gt;django.test.TestCase&lt;/code&gt; ,&lt;/a&gt; а не &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7ea04c1e37c45f0d4b469802f36772d32e7b6af6" translate="yes" xml:space="preserve">
          <source>If your view is not rendering a template containing the &lt;a href=&quot;templates/builtins#std:templatetag-csrf_token&quot;&gt;&lt;code&gt;csrf_token&lt;/code&gt;&lt;/a&gt; template tag, Django might not set the CSRF token cookie. This is common in cases where forms are dynamically added to the page. To address this case, Django provides a view decorator which forces setting of the cookie: &lt;a href=&quot;#django.views.decorators.csrf.ensure_csrf_cookie&quot;&gt;&lt;code&gt;ensure_csrf_cookie()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Если ваше представление не отображает шаблон, содержащий &lt;a href=&quot;templates/builtins#std:templatetag-csrf_token&quot;&gt; &lt;code&gt;csrf_token&lt;/code&gt; &lt;/a&gt; шаблона csrf_token , Django может не установить cookie-токен CSRF. Это распространено в тех случаях, когда формы динамически добавляются на страницу. Для решения этой проблемы Django предоставляет декоратор представления, который &lt;a href=&quot;#django.views.decorators.csrf.ensure_csrf_cookie&quot;&gt; &lt;code&gt;ensure_csrf_cookie()&lt;/code&gt; &lt;/a&gt; устанавливает настройку cookie: sure_csrf_cookie () .</target>
        </trans-unit>
        <trans-unit id="100164bf62bbd4acd7334a3ab2e0db0ddfb29848" translate="yes" xml:space="preserve">
          <source>If, as in the second example above, you&amp;rsquo;ve left the &lt;code&gt;default&lt;/code&gt; database empty, you must provide a database name each time you run &lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt;. Omitting the database name would raise an error. For the second example:</source>
          <target state="translated">Если, как и во втором примере выше, вы оставили базу данных по &lt;code&gt;default&lt;/code&gt; пустой, вы должны указывать имя базы данных при каждом запуске &lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt; . Пропуск имени базы данных вызовет ошибку. Для второго примера:</target>
        </trans-unit>
        <trans-unit id="05a2ca6c2742910df2490054ce0b70ad2788db45" translate="yes" xml:space="preserve">
          <source>If, for some reason, it was decided that the URLs where content for yearly article archives are published at should be changed then you would only need to change the entry in the URLconf.</source>
          <target state="translated">Если по каким-то причинам было решено изменить URL-адреса,по которым публикуются материалы для годовых архивов статей,то вам останется только изменить запись в URLconf.</target>
        </trans-unit>
        <trans-unit id="2bdda409711d05757642b136dd218873e3a28bc8" translate="yes" xml:space="preserve">
          <source>If, for some reason, you &lt;em&gt;want&lt;/em&gt; the test client to perform CSRF checks, you can create an instance of the test client that enforces CSRF checks. To do this, pass in the &lt;code&gt;enforce_csrf_checks&lt;/code&gt; argument when you construct your client:</source>
          <target state="translated">Если по какой-либо причине вы &lt;em&gt;хотите,&lt;/em&gt; чтобы тестовый клиент выполнял проверки CSRF, вы можете создать экземпляр тестового клиента, который будет выполнять проверки CSRF. Чтобы сделать это, &lt;code&gt;enforce_csrf_checks&lt;/code&gt; аргумент forcece_csrf_checks, когда вы создаете свой клиент:</target>
        </trans-unit>
        <trans-unit id="cd25f650a89f987a8ae9410f69052145579c8043" translate="yes" xml:space="preserve">
          <source>If, for some reason, you &lt;em&gt;want&lt;/em&gt; the test client to perform CSRF checks, you can create an instance of the test client that enforces CSRF checks:</source>
          <target state="translated">Если по какой-то причине вы &lt;em&gt;хотите,&lt;/em&gt; чтобы тестовый клиент выполнял проверки CSRF, вы можете создать экземпляр тестового клиента, который выполняет проверки CSRF:</target>
        </trans-unit>
        <trans-unit id="919bf73ea026018730b49f5cba48431bbbf54fd7" translate="yes" xml:space="preserve">
          <source>If, for some reason, your custom management command must run without an active locale (for example, to prevent translated content from being inserted into the database), deactivate translations using the &lt;code&gt;@no_translations&lt;/code&gt; decorator on your &lt;a href=&quot;#django.core.management.BaseCommand.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">Если по какой-то причине ваша пользовательская команда управления должна выполняться без активной локали (например, чтобы предотвратить &lt;code&gt;@no_translations&lt;/code&gt; переведенного контента в базу данных), деактивируйте переводы с помощью декоратора @no_translations в вашем методе &lt;a href=&quot;#django.core.management.BaseCommand.handle&quot;&gt; &lt;code&gt;handle()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="b07cc84bbd178c74aa2d9ca20dfcde5708a26518" translate="yes" xml:space="preserve">
          <source>If, however, you have no option but to serve media files on the same Apache &lt;code&gt;VirtualHost&lt;/code&gt; as Django, you can set up Apache to serve some URLs as static media, and others using the mod_wsgi interface to Django.</source>
          <target state="translated">Если, однако, у вас нет выбора, кроме как обслуживать мультимедийные файлы в том же Apache &lt;code&gt;VirtualHost&lt;/code&gt; , что и Django, вы можете настроить Apache для обслуживания некоторых URL-адресов в качестве статических носителей, а других - с помощью интерфейса mod_wsgi для Django.</target>
        </trans-unit>
        <trans-unit id="9ce69c54fa4098f27900ed28ca0545fa9c86efee" translate="yes" xml:space="preserve">
          <source>If, however, you need to re-enable a globally-disabled action for one particular model, list it explicitly in your &lt;code&gt;ModelAdmin.actions&lt;/code&gt; list:</source>
          <target state="translated">Однако, если вам необходимо повторно включить глобально отключенное действие для одной конкретной модели, явным образом перечислите его в списке &lt;code&gt;ModelAdmin.actions&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4e214bf4c073cee123e8fb348d379cb842d22670" translate="yes" xml:space="preserve">
          <source>Ignore files, directories, or paths matching this glob-style pattern. Use multiple times to ignore more. When specifying a path, always use forward slashes, even on Windows.</source>
          <target state="translated">Игнорируйте файлы,каталоги или пути,соответствующие этому шаблону в стиле глобуса.Используйте несколько раз,чтобы игнорировать больше.При указании пути всегда используйте прямые косые черты,даже в Windows.</target>
        </trans-unit>
        <trans-unit id="b46ee8e1837971774646e299482d167d080ed7ef" translate="yes" xml:space="preserve">
          <source>Ignore the warning about unapplied database migrations for now; we&amp;rsquo;ll deal with the database shortly.</source>
          <target state="translated">На данный момент не обращайте внимания на предупреждение о непримененных миграциях баз данных; мы будем иметь дело с базой данных в ближайшее время.</target>
        </trans-unit>
        <trans-unit id="37586d575c14722fe8807bc994aadfaef7495bc6" translate="yes" xml:space="preserve">
          <source>Ignores directories matching the given &lt;a href=&quot;https://docs.python.org/3/library/glob.html#module-glob&quot;&gt;&lt;code&gt;glob&lt;/code&gt;&lt;/a&gt;-style pattern. Use multiple times to ignore more.</source>
          <target state="translated">Игнорирует каталоги, соответствующие заданному шаблону стиля &lt;a href=&quot;https://docs.python.org/3/library/glob.html#module-glob&quot;&gt; &lt;code&gt;glob&lt;/code&gt; &lt;/a&gt; . Используйте несколько раз, чтобы игнорировать больше.</target>
        </trans-unit>
        <trans-unit id="26f58245e8a0d7451fc5c47ad810a8c64487bb47" translate="yes" xml:space="preserve">
          <source>Ignores everything between &lt;code&gt;{% comment %}&lt;/code&gt; and &lt;code&gt;{% endcomment %}&lt;/code&gt;. An optional note may be inserted in the first tag. For example, this is useful when commenting out code for documenting why the code was disabled.</source>
          <target state="translated">Игнорирует все между &lt;code&gt;{% comment %}&lt;/code&gt; и &lt;code&gt;{% endcomment %}&lt;/code&gt; . Необязательное примечание может быть вставлено в первый тег. Например, это полезно при комментировании кода для документирования, почему код был отключен.</target>
        </trans-unit>
        <trans-unit id="9ee48f68c602ee8c804d6234ef660c199f1fbe4a" translate="yes" xml:space="preserve">
          <source>Ignores fields and models that may have been removed since the fixture was originally generated.</source>
          <target state="translated">Игнорирует поля и модели,которые могли быть удалены с момента создания прибора.</target>
        </trans-unit>
        <trans-unit id="e6f657b51973a7ffa6d6443941085cb8d8492fd4" translate="yes" xml:space="preserve">
          <source>Ignores files or directories matching the given &lt;a href=&quot;https://docs.python.org/3/library/glob.html#module-glob&quot;&gt;&lt;code&gt;glob&lt;/code&gt;&lt;/a&gt;-style pattern. Use multiple times to ignore more.</source>
          <target state="translated">Игнорирует файлы или каталоги, соответствующие заданному шаблону &lt;a href=&quot;https://docs.python.org/3/library/glob.html#module-glob&quot;&gt; &lt;code&gt;glob&lt;/code&gt; -&lt;/a&gt; стиля. Используйте несколько раз, чтобы игнорировать больше.</target>
        </trans-unit>
        <trans-unit id="323377a570864e3a1b26bdc4a63a300a0a6b5471" translate="yes" xml:space="preserve">
          <source>Ignoring &amp;ldquo;stop words&amp;rdquo; such as &amp;ldquo;a&amp;rdquo;, &amp;ldquo;the&amp;rdquo;, &amp;ldquo;and&amp;rdquo;.</source>
          <target state="translated">Игнорирование &amp;laquo;стоп-слов&amp;raquo;, таких как &amp;laquo;a&amp;raquo;, &amp;laquo;the&amp;raquo;, &amp;laquo;and&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="99b7a0e4a10dba5856b9ea510fa67c9bb35255e5" translate="yes" xml:space="preserve">
          <source>Imagine we had a &lt;code&gt;last_accessed&lt;/code&gt; field on our &lt;code&gt;Author&lt;/code&gt; model that we were using to keep track of the last time anybody looked at that author:</source>
          <target state="translated">Представьте, что у нас есть поле &lt;code&gt;last_accessed&lt;/code&gt; в нашей модели &lt;code&gt;Author&lt;/code&gt; , которое мы использовали, чтобы отслеживать последний раз, когда кто-нибудь смотрел на этого автора:</target>
        </trans-unit>
        <trans-unit id="7fc15e1eb128d4daccbe8c7ab2a5c5e128767d8e" translate="yes" xml:space="preserve">
          <source>Implement a &lt;code&gt;clean()&lt;/code&gt; method on your &lt;code&gt;Form&lt;/code&gt; when you must add custom validation for fields that are interdependent. See &lt;a href=&quot;validation#validating-fields-with-clean&quot;&gt;Cleaning and validating fields that depend on each other&lt;/a&gt; for example usage.</source>
          <target state="translated">Реализуйте метод &lt;code&gt;clean()&lt;/code&gt; в вашей &lt;code&gt;Form&lt;/code&gt; когда вы должны добавить пользовательскую проверку для полей, которые являются взаимозависимыми. См. &lt;a href=&quot;validation#validating-fields-with-clean&quot;&gt;Очистка и проверка полей, которые зависят друг от друга,&lt;/a&gt; например, использование.</target>
        </trans-unit>
        <trans-unit id="c6cfa7967295c6a6446e645b10a6097c50a71d8d" translate="yes" xml:space="preserve">
          <source>Implementation concerns</source>
          <target state="translated">Проблемы внедрения</target>
        </trans-unit>
        <trans-unit id="e0bf2dc952ab6d2617aa9b9ee013534f9eeb5b62" translate="yes" xml:space="preserve">
          <source>Implementation notes</source>
          <target state="translated">Инструкции по внедрению</target>
        </trans-unit>
        <trans-unit id="3e3330bd2a361feb0240b1fddb979752ae17ea93" translate="yes" xml:space="preserve">
          <source>Implementing a constructor in a subclass</source>
          <target state="translated">Внедрение конструктора в подкласс.</target>
        </trans-unit>
        <trans-unit id="632f01fece5418e29e250528914dbf408f470600" translate="yes" xml:space="preserve">
          <source>Implementing caching should not be regarded as an alternative to improving code that&amp;rsquo;s performing poorly because it has been written badly. It&amp;rsquo;s one of the final steps towards producing well-performing code, not a shortcut.</source>
          <target state="translated">Реализация кэширования не должна рассматриваться как альтернатива улучшению кода, который работает плохо, потому что он написан плохо. Это один из последних шагов к созданию хорошо работающего кода, а не ярлык.</target>
        </trans-unit>
        <trans-unit id="6c877258699b88d7b5575fdb8ca9aae3d8820bae" translate="yes" xml:space="preserve">
          <source>Implementing this yourself often results in a lot of repeated boilerplate code (see &lt;a href=&quot;../forms/index#using-a-form-in-a-view&quot;&gt;Using a form in a view&lt;/a&gt;). To help avoid this, Django provides a collection of generic class-based views for form processing.</source>
          <target state="translated">Реализация этого самостоятельно часто приводит к многократному шаблонному коду (см. &lt;a href=&quot;../forms/index#using-a-form-in-a-view&quot;&gt;Использование формы в представлении&lt;/a&gt; ). Чтобы избежать этого, Django предоставляет коллекцию общих представлений на основе классов для обработки форм.</target>
        </trans-unit>
        <trans-unit id="e5d8feee9c32a98e60e7043052deae37efa5b7c8" translate="yes" xml:space="preserve">
          <source>Implements cached database-backed session store.</source>
          <target state="translated">Имплементирует кэшированное хранилище сеансов,поддерживаемое базой данных.</target>
        </trans-unit>
        <trans-unit id="57a7f9ee519c5b8d6227a97eb918c9e03394062f" translate="yes" xml:space="preserve">
          <source>Implements database-backed session store.</source>
          <target state="translated">Имплементирует магазин сеансов с поддержкой базы данных.</target>
        </trans-unit>
        <trans-unit id="22e27035ac8e154d8d3e3995c4f857cc344cbb23" translate="yes" xml:space="preserve">
          <source>Implies setting &lt;a href=&quot;#django.db.models.Field.db_index&quot;&gt;&lt;code&gt;Field.db_index&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">Подразумевает настройка &lt;a href=&quot;#django.db.models.Field.db_index&quot;&gt; &lt;code&gt;Field.db_index&lt;/code&gt; &lt;/a&gt; в значение &lt;code&gt;True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="759987d88bd09dd553f257b758daf18ca5f14887" translate="yes" xml:space="preserve">
          <source>Import spatial reference from EPSG code.</source>
          <target state="translated">Импорт пространственной ссылки из кода EPSG.</target>
        </trans-unit>
        <trans-unit id="f7080a194b706adfdf562e2d80373f6ad81a34c0" translate="yes" xml:space="preserve">
          <source>Import spatial reference from PROJ.4 string.</source>
          <target state="translated">Импорт пространственной ссылки из строки PROJ.4.</target>
        </trans-unit>
        <trans-unit id="6fef6e94164d6d870390223dd3af1c7cb28c31ac" translate="yes" xml:space="preserve">
          <source>Import spatial reference from WKT.</source>
          <target state="translated">Импорт пространственных ссылок из WKT.</target>
        </trans-unit>
        <trans-unit id="8a4c58086cb4f68917fb1260e33f6c51036c8456" translate="yes" xml:space="preserve">
          <source>Import spatial reference from XML.</source>
          <target state="translated">Импорт пространственной ссылки из XML.</target>
        </trans-unit>
        <trans-unit id="4b6d6a30150a506f9b79caf45da5aecb76b0018e" translate="yes" xml:space="preserve">
          <source>Important</source>
          <target state="translated">Important</target>
        </trans-unit>
        <trans-unit id="6c4b688b2ef86c7056f52a57bea61a8792c3849d" translate="yes" xml:space="preserve">
          <source>Importing &lt;code&gt;AbstractBaseUser&lt;/code&gt;</source>
          <target state="translated">Импорт &lt;code&gt;AbstractBaseUser&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e7a5f39849f3fe8c1533fc46296d83c2841e8caa" translate="yes" xml:space="preserve">
          <source>Importing Spatial Data</source>
          <target state="translated">Импорт пространственных данных</target>
        </trans-unit>
        <trans-unit id="31deeb21a29c47ae89f038bc8341eaaeff7a09c5" translate="yes" xml:space="preserve">
          <source>Imports a dotted module path and returns the attribute/class designated by the last name in the path. Raises &lt;code&gt;ImportError&lt;/code&gt; if the import failed. For example:</source>
          <target state="translated">Импортирует пунктирный путь к модулю и возвращает атрибут / класс, обозначенный фамилией в пути. Поднимает &lt;code&gt;ImportError&lt;/code&gt; если импорт не удалось. Например:</target>
        </trans-unit>
        <trans-unit id="43d1c07c1e566ca2939141457a3c42159b8e891a" translate="yes" xml:space="preserve">
          <source>Improved speed might be the most obvious aim for a program, but sometimes other performance improvements might be sought, such as lower memory consumption or fewer demands on the database or network.</source>
          <target state="translated">Улучшение скорости может быть наиболее очевидной целью для программы,но иногда могут быть и другие улучшения производительности,такие как меньшее потребление памяти или меньше требований к базе данных или сети.</target>
        </trans-unit>
        <trans-unit id="d8cb9b65545d67676e31319a8591f1bc9ef9938d" translate="yes" xml:space="preserve">
          <source>Improvements in one area will often bring about improved performance in another, but not always; sometimes one can even be at the expense of another. For example, an improvement in a program&amp;rsquo;s speed might cause it to use more memory. Even worse, it can be self-defeating - if the speed improvement is so memory-hungry that the system starts to run out of memory, you&amp;rsquo;ll have done more harm than good.</source>
          <target state="translated">Улучшения в одной области часто приводят к улучшению производительности в другой, но не всегда; иногда один может быть даже за счет другого. Например, улучшение скорости программы может привести к тому, что она будет использовать больше памяти. Хуже того, это может привести к саморазрушению - если повышение скорости настолько жадно до памяти, что системе не хватает памяти, вы принесете больше вреда, чем пользы.</target>
        </trans-unit>
        <trans-unit id="b5e972a8024aea2ff5834415377894b0b1408dc1" translate="yes" xml:space="preserve">
          <source>Improving our view</source>
          <target state="translated">Улучшение нашего мнения</target>
        </trans-unit>
        <trans-unit id="423ee3d502d51a230964dcb05a5037a9723ba101" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt;, each middleware component is represented by a string: the full Python path to the middleware factory&amp;rsquo;s class or function name. For example, here&amp;rsquo;s the default value created by &lt;a href=&quot;../../ref/django-admin#django-admin-startproject&quot;&gt;&lt;code&gt;django-admin
startproject&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">В &lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt; каждый компонент промежуточного программного обеспечения представлен строкой: полный путь Python к классу фабрики промежуточного программного обеспечения или имени функции. Например, вот значение по умолчанию, созданное &lt;a href=&quot;../../ref/django-admin#django-admin-startproject&quot;&gt; &lt;code&gt;django-admin startproject&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="0f98c9c44256324347c54d4de74bec56956bdb2a" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;tutorial04&quot;&gt;Tutorial 4&lt;/a&gt; we introduced a class-based view, based on &lt;a href=&quot;../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">В &lt;a href=&quot;tutorial04&quot;&gt;уроке 4&lt;/a&gt; мы представили представление на основе классов, основанное на &lt;a href=&quot;../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt; &lt;code&gt;ListView&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="061872dabbd882e65fed4448dcd75d033d42e91a" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;&quot;nodelist = parser.parse(('endcomment',))&quot;&lt;/code&gt; in the above example, &lt;code&gt;nodelist&lt;/code&gt; is a list of all nodes between the &lt;code&gt;{% comment %}&lt;/code&gt; and &lt;code&gt;{% endcomment %}&lt;/code&gt;, not counting &lt;code&gt;{% comment %}&lt;/code&gt; and &lt;code&gt;{% endcomment %}&lt;/code&gt; themselves.</source>
          <target state="translated">В &lt;code&gt;&quot;nodelist = parser.parse(('endcomment',))&quot;&lt;/code&gt; в приведенном выше примере, &lt;code&gt;nodelist&lt;/code&gt; представляет собой список всех узлов между &lt;code&gt;{% comment %}&lt;/code&gt; и &lt;code&gt;{% endcomment %}&lt;/code&gt; , не считая &lt;code&gt;{% comment %}&lt;/code&gt; и &lt;code&gt;{% endcomment %}&lt;/code&gt; сами.</target>
        </trans-unit>
        <trans-unit id="980baa344e263cc001383a2be32c4e65f245ce93" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;template.html&lt;/code&gt;, the following paths would be valid:</source>
          <target state="translated">В &lt;code&gt;template.html&lt;/code&gt; допустимы следующие пути:</target>
        </trans-unit>
        <trans-unit id="6ef78276f8e607837babb1b9074bcf132d9b67ef" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;test_future_question&lt;/code&gt;, we create a question with a &lt;code&gt;pub_date&lt;/code&gt; in the future. The database is reset for each test method, so the first question is no longer there, and so again the index shouldn&amp;rsquo;t have any questions in it.</source>
          <target state="translated">В &lt;code&gt;test_future_question&lt;/code&gt; мы создаем вопрос с &lt;code&gt;pub_date&lt;/code&gt; в будущем. База данных сбрасывается для каждого метода тестирования, поэтому первого вопроса больше не существует, и поэтому в индексе не должно быть никаких вопросов.</target>
        </trans-unit>
        <trans-unit id="5f9cbf79cc52467baff9c100eb8928946f93b121" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;test_past_question&lt;/code&gt;, we create a question and verify that it appears in the list.</source>
          <target state="translated">В &lt;code&gt;test_past_question&lt;/code&gt; мы создаем вопрос и проверяем, что он появляется в списке.</target>
        </trans-unit>
        <trans-unit id="1ca0c441f71f0c9c390db046d94cf2f81905b41d" translate="yes" xml:space="preserve">
          <source>In Django 1.5 and earlier, Django did a &lt;code&gt;SELECT&lt;/code&gt; when the primary key attribute was set. If the &lt;code&gt;SELECT&lt;/code&gt; found a row, then Django did an &lt;code&gt;UPDATE&lt;/code&gt;, otherwise it did an &lt;code&gt;INSERT&lt;/code&gt;. The old algorithm results in one more query in the &lt;code&gt;UPDATE&lt;/code&gt; case. There are some rare cases where the database doesn&amp;rsquo;t report that a row was updated even if the database contains a row for the object&amp;rsquo;s primary key value. An example is the PostgreSQL &lt;code&gt;ON UPDATE&lt;/code&gt; trigger which returns &lt;code&gt;NULL&lt;/code&gt;. In such cases it is possible to revert to the old algorithm by setting the &lt;a href=&quot;options#django.db.models.Options.select_on_save&quot;&gt;&lt;code&gt;select_on_save&lt;/code&gt;&lt;/a&gt; option to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">В Django 1.5 и более ранних версиях Django делал &lt;code&gt;SELECT&lt;/code&gt; , когда был установлен атрибут первичного ключа. Если &lt;code&gt;SELECT&lt;/code&gt; нашел строку, то Django сделал &lt;code&gt;UPDATE&lt;/code&gt; , иначе он сделал &lt;code&gt;INSERT&lt;/code&gt; . Старый алгоритм приводит к еще одному запросу в случае &lt;code&gt;UPDATE&lt;/code&gt; . В некоторых редких случаях база данных не сообщает, что строка была обновлена, даже если база данных содержит строку для значения первичного ключа объекта. Примером является триггер PostgreSQL &lt;code&gt;ON UPDATE&lt;/code&gt; , который возвращает &lt;code&gt;NULL&lt;/code&gt; . В таких случаях можно вернуться к старому алгоритму, установив для параметра &lt;a href=&quot;options#django.db.models.Options.select_on_save&quot;&gt; &lt;code&gt;select_on_save&lt;/code&gt; &lt;/a&gt; значение &lt;code&gt;True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e54c507b0c09f4f3df149d0a652096ad567f2ff" translate="yes" xml:space="preserve">
          <source>In Django, web pages and other content are delivered by views. Each view is represented by a Python function (or method, in the case of class-based views). Django will choose a view by examining the URL that&amp;rsquo;s requested (to be precise, the part of the URL after the domain name).</source>
          <target state="translated">В Django веб-страницы и другой контент доставляются по представлениям. Каждое представление представлено функцией Python (или методом в случае представлений на основе классов). Django выберет представление, изучив запрашиваемый URL (точнее, часть URL после имени домена).</target>
        </trans-unit>
        <trans-unit id="71d28781461f30c2ecb2b20559c2484c3f2780b6" translate="yes" xml:space="preserve">
          <source>In English, that means start with any non-&lt;code&gt;'defaults'&lt;/code&gt; keyword argument that doesn&amp;rsquo;t contain a double underscore (which would indicate a non-exact lookup). Then add the contents of &lt;code&gt;defaults&lt;/code&gt;, overriding any keys if necessary, and use the result as the keyword arguments to the model class. If there are any callables in &lt;code&gt;defaults&lt;/code&gt;, evaluate them. As hinted at above, this is a simplification of the algorithm that is used, but it contains all the pertinent details. The internal implementation has some more error-checking than this and handles some extra edge-conditions; if you&amp;rsquo;re interested, read the code.</source>
          <target state="translated">В английском это означает, что начинать нужно с любого ключевого аргумента, не являющегося &lt;code&gt;'defaults'&lt;/code&gt; , который не содержит двойного подчеркивания (что указывает на неточный поиск). Затем добавьте содержимое значений по &lt;code&gt;defaults&lt;/code&gt; , переопределив любые ключи, если необходимо, и используйте результат в качестве аргументов ключевого слова для класса модели. Если в &lt;code&gt;defaults&lt;/code&gt; по умолчанию есть какие-либо вызываемые элементы , оцените их. Как уже упоминалось выше, это упрощение алгоритма, который используется, но он содержит все соответствующие детали. Внутренняя реализация имеет больше проверки ошибок, чем эта, и обрабатывает некоторые дополнительные граничные условия; если вам интересно, прочитайте код.</target>
        </trans-unit>
        <trans-unit id="2325b2ee62df43500f1c00235b487a802857009c" translate="yes" xml:space="preserve">
          <source>In HTML, a form is a collection of elements inside &lt;code&gt;&amp;lt;form&amp;gt;...&amp;lt;/form&amp;gt;&lt;/code&gt; that allow a visitor to do things like enter text, select options, manipulate objects or controls, and so on, and then send that information back to the server.</source>
          <target state="translated">В HTML форма - это набор элементов внутри &lt;code&gt;&amp;lt;form&amp;gt;...&amp;lt;/form&amp;gt;&lt;/code&gt; , которые позволяют посетителю выполнять такие действия, как ввод текста, выбор параметров, управление объектами или элементами управления и т. Д., А затем отправлять эту информацию обратно. на сервер.</target>
        </trans-unit>
        <trans-unit id="530abed4adee655c3e3355fa9c58c011c506ea41" translate="yes" xml:space="preserve">
          <source>In MySQL, a database table&amp;rsquo;s &amp;ldquo;collation&amp;rdquo; setting determines whether &lt;code&gt;exact&lt;/code&gt; comparisons are case-sensitive. This is a database setting, &lt;em&gt;not&lt;/em&gt; a Django setting. It&amp;rsquo;s possible to configure your MySQL tables to use case-sensitive comparisons, but some trade-offs are involved. For more information about this, see the &lt;a href=&quot;../databases#mysql-collation&quot;&gt;collation section&lt;/a&gt; in the &lt;a href=&quot;../databases&quot;&gt;databases&lt;/a&gt; documentation.</source>
          <target state="translated">В MySQL параметр &amp;laquo;сортировки&amp;raquo; таблицы базы данных определяет, будут ли &lt;code&gt;exact&lt;/code&gt; сравнения чувствительными к регистру. Это настройка базы данных, а &lt;em&gt;не&lt;/em&gt; настройка Django. Возможно настроить ваши таблицы MySQL для использования чувствительных к регистру сравнений, но здесь есть некоторые компромиссы. Для получения дополнительной информации об этом см. &lt;a href=&quot;../databases#mysql-collation&quot;&gt;Раздел сравнения&lt;/a&gt; в документации &lt;a href=&quot;../databases&quot;&gt;баз данных&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="15bb2b94418927da4ddbebe62ad941621709c6f9" translate="yes" xml:space="preserve">
          <source>In MySQL, a database table&amp;rsquo;s &lt;a href=&quot;../databases#mysql-collation&quot;&gt;collation&lt;/a&gt; determines whether string comparisons (such as the &lt;code&gt;expression&lt;/code&gt; and &lt;code&gt;substring&lt;/code&gt; of this function) are case-sensitive. Comparisons are case-insensitive by default.</source>
          <target state="translated">В MySQL &lt;a href=&quot;../databases#mysql-collation&quot;&gt;сортировка&lt;/a&gt; таблицы базы данных определяет, чувствительны ли к регистру сравнения строк (например, &lt;code&gt;expression&lt;/code&gt; и &lt;code&gt;substring&lt;/code&gt; этой функции). Сравнения нечувствительны к регистру по умолчанию.</target>
        </trans-unit>
        <trans-unit id="8421ba54de371dd641a53fee1d33a332c1c91eef" translate="yes" xml:space="preserve">
          <source>In PostGIS, &lt;code&gt;ST_Distance_Sphere&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; limit the geometry types geographic distance queries are performed with. &lt;a href=&quot;#fndistsphere15&quot; id=&quot;id7&quot;&gt;[3]&lt;/a&gt; However, these queries may take a long time, as great-circle distances must be calculated on the fly for &lt;em&gt;every&lt;/em&gt; row in the query. This is because the spatial index on traditional geometry fields cannot be used.</source>
          <target state="translated">В PostGIS, &lt;code&gt;ST_Distance_Sphere&lt;/code&gt; никак &lt;em&gt;не&lt;/em&gt; ограничивает типы геометрии географические запросы расстояния выполняются с. &lt;a href=&quot;#fndistsphere15&quot; id=&quot;id7&quot;&gt;[3]&lt;/a&gt; Однако эти запросы могут занимать много времени, так как расстояния большого круга должны вычисляться на лету для &lt;em&gt;каждой&lt;/em&gt; строки в запросе. Это связано с тем, что пространственный индекс в традиционных геометрических полях не может быть использован.</target>
        </trans-unit>
        <trans-unit id="715bef95523b40746c6e2c01e2e5141dd1cef9e3" translate="yes" xml:space="preserve">
          <source>In Python code: Using the &lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">В коде Python: использование функции &lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt; &lt;code&gt;reverse()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bd51507af923505247bc61c0fb892385469fd543" translate="yes" xml:space="preserve">
          <source>In Python regular expressions, the syntax for named regular expression groups is &lt;code&gt;(?P&amp;lt;name&amp;gt;pattern)&lt;/code&gt;, where &lt;code&gt;name&lt;/code&gt; is the name of the group and &lt;code&gt;pattern&lt;/code&gt; is some pattern to match.</source>
          <target state="translated">В регулярных выражениях Python для именованных групп регулярных выражений используется синтаксис &lt;code&gt;(?P&amp;lt;name&amp;gt;pattern)&lt;/code&gt; , где &lt;code&gt;name&lt;/code&gt; - это имя группы, а &lt;code&gt;pattern&lt;/code&gt; - какой-то шаблон для сопоставления.</target>
        </trans-unit>
        <trans-unit id="ea7465a7cc3dd82a2d9fd7afc703bdeb0a931d30" translate="yes" xml:space="preserve">
          <source>In Python, deprecation warnings are silenced by default. You must turn them on using the &lt;code&gt;-Wa&lt;/code&gt; Python command line option or the &lt;a href=&quot;https://docs.python.org/3/using/cmdline.html#envvar-PYTHONWARNINGS&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;PYTHONWARNINGS&lt;/code&gt;&lt;/a&gt; environment variable. For example, to show warnings while running tests:</source>
          <target state="translated">В Python предупреждения об устаревании по умолчанию отключены. Вы должны включить их, используя &lt;code&gt;-Wa&lt;/code&gt; командной строки Python -Wa или переменную среды &lt;a href=&quot;https://docs.python.org/3/using/cmdline.html#envvar-PYTHONWARNINGS&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;PYTHONWARNINGS&lt;/code&gt; &lt;/a&gt; . Например, чтобы показать предупреждения при выполнении тестов:</target>
        </trans-unit>
        <trans-unit id="1b9dd68d5fb0091a5354cd74f43e44ab9d2220be" translate="yes" xml:space="preserve">
          <source>In SQL terms, that evaluates to:</source>
          <target state="translated">В терминах SQL,который оценивает до:</target>
        </trans-unit>
        <trans-unit id="b5219e196842cd49964f7f565faa02caa768e6fc" translate="yes" xml:space="preserve">
          <source>In a Django project where the &lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting defines a &lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt;&lt;code&gt;DjangoTemplates&lt;/code&gt;&lt;/a&gt; engine, it&amp;rsquo;s possible to instantiate a &lt;a href=&quot;#django.template.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; directly. If more than one &lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt;&lt;code&gt;DjangoTemplates&lt;/code&gt;&lt;/a&gt; engine is defined, the first one will be used.</source>
          <target state="translated">В проекте Django, где параметр &lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt; определяет движок &lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt; &lt;code&gt;DjangoTemplates&lt;/code&gt; &lt;/a&gt; , возможно создание экземпляра &lt;a href=&quot;#django.template.Template&quot;&gt; &lt;code&gt;Template&lt;/code&gt; &lt;/a&gt; напрямую. Если определено более одного движка &lt;a href=&quot;../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt; &lt;code&gt;DjangoTemplates&lt;/code&gt; &lt;/a&gt; , будет использован первый.</target>
        </trans-unit>
        <trans-unit id="78dd68fff46c7f31d6d76f4f0ceba6a02a64543d" translate="yes" xml:space="preserve">
          <source>In a class-based view, this would become:</source>
          <target state="translated">В классовом представлении это стало бы:</target>
        </trans-unit>
        <trans-unit id="5a9a78ce7cfa61e948398641be09cee26a9431e5" translate="yes" xml:space="preserve">
          <source>In a given iterable; often a list, tuple, or queryset. It&amp;rsquo;s not a common use case, but strings (being iterables) are accepted.</source>
          <target state="translated">В данной итерации; часто список, кортеж или набор запросов. Это не обычный случай использования, но строки (будучи итеративными) принимаются.</target>
        </trans-unit>
        <trans-unit id="936002e8c54e8cd2138c3c4e13a6b879a99a297c" translate="yes" xml:space="preserve">
          <source>In a hurry? Here&amp;rsquo;s how to do common aggregate queries, assuming the models above:</source>
          <target state="translated">В спешке, спешу? Вот как можно выполнять общие статистические запросы, исходя из моделей, приведенных выше:</target>
        </trans-unit>
        <trans-unit id="95d5174861e60b5fbde4b2d21a30e9578bd91660" translate="yes" xml:space="preserve">
          <source>In a newly created &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt;, the cache is empty. The first time a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; is evaluated &amp;ndash; and, hence, a database query happens &amp;ndash; Django saves the query results in the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s cache and returns the results that have been explicitly requested (e.g., the next element, if the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; is being iterated over). Subsequent evaluations of the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; reuse the cached results.</source>
          <target state="translated">Во вновь созданном &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; кеш пуст. При первой оценке &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; - и, следовательно, при выполнении запроса к базе данных - Django сохраняет результаты запроса в кеше &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; и возвращает результаты, которые были явно запрошены (например, следующий элемент, если &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; итерируется над). Последующие оценки &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; повторно используют кэшированные результаты.</target>
        </trans-unit>
        <trans-unit id="66bad3b414c450ecef328dcf5b4fecbf454e6176" translate="yes" xml:space="preserve">
          <source>In a nutshell, you will need to subclass the widget and either &lt;a href=&quot;../../topics/forms/media#assets-as-a-static-definition&quot;&gt;define a &amp;ldquo;Media&amp;rdquo; inner class&lt;/a&gt; or &lt;a href=&quot;../../topics/forms/media#dynamic-property&quot;&gt;create a &amp;ldquo;media&amp;rdquo; property&lt;/a&gt;.</source>
          <target state="translated">Короче говоря, вам нужно будет &lt;a href=&quot;../../topics/forms/media#dynamic-property&quot;&gt;создать&lt;/a&gt; подкласс виджета и либо &lt;a href=&quot;../../topics/forms/media#assets-as-a-static-definition&quot;&gt;определить внутренний класс &amp;laquo;Media&amp;raquo;,&lt;/a&gt; либо создать свойство &amp;laquo;media&amp;raquo; .</target>
        </trans-unit>
        <trans-unit id="1142528d124b30027cb2863e674b995be99f903d" translate="yes" xml:space="preserve">
          <source>In a request to &lt;code&gt;https://www.example.com/myapp/?page=3&lt;/code&gt;, the URLconf will look for &lt;code&gt;myapp/&lt;/code&gt;.</source>
          <target state="translated">В запросе к &lt;code&gt;https://www.example.com/myapp/?page=3&lt;/code&gt; , URLconf будет искать &lt;code&gt;myapp/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c6e077cc1b0e75309e606ecc2180a3df1935d34" translate="yes" xml:space="preserve">
          <source>In a similar way that a model class&amp;rsquo;s fields map to database fields, a form class&amp;rsquo;s fields map to HTML form &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements. (A &lt;a href=&quot;modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt; maps a model class&amp;rsquo;s fields to HTML form &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements via a &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt;; this is what the Django admin is based upon.)</source>
          <target state="translated">Аналогично тому, как поля класса модели отображаются на поля базы данных, поля класса формы отображаются на элементы &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; HTML-формы . ( &lt;a href=&quot;modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt; отображает поля класса модели в элементы HTML &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; через &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt; ; именно на этом основан администратор Django.)</target>
        </trans-unit>
        <trans-unit id="9e280d0af372eabe0c94458ef4c152f0bbcae80b" translate="yes" xml:space="preserve">
          <source>In a way similar to &lt;a href=&quot;queries#lookups-that-span-relationships&quot;&gt;Lookups that span relationships&lt;/a&gt;, aggregations and annotations on fields of models or models that are related to the one you are querying can include traversing &amp;ldquo;reverse&amp;rdquo; relationships. The lowercase name of related models and double-underscores are used here too.</source>
          <target state="translated">Подобно &lt;a href=&quot;queries#lookups-that-span-relationships&quot;&gt;поискам, которые охватывают отношения&lt;/a&gt; , агрегации и аннотации в полях моделей или моделей, которые связаны с запрашиваемой вами, можно включить обход &amp;laquo;обратных&amp;raquo; отношений. Здесь также используются строчные названия связанных моделей и двойные подчеркивания.</target>
        </trans-unit>
        <trans-unit id="ab27628513f607e825e71ce210049162b75905a1" translate="yes" xml:space="preserve">
          <source>In addition to &lt;a href=&quot;#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#django.db.models.Model.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt;, a model object might have some of the following methods:</source>
          <target state="translated">В дополнение к &lt;a href=&quot;#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#django.db.models.Model.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt; , объект модели может иметь несколько следующих методов:</target>
        </trans-unit>
        <trans-unit id="751f7712ef19a124de333a44cc737e7ace3bfe24" translate="yes" xml:space="preserve">
          <source>In addition to &lt;a href=&quot;../../ref/settings#std:setting-LANGUAGES&quot;&gt;&lt;code&gt;LANGUAGES&lt;/code&gt;&lt;/a&gt; style list of tuples, &lt;code&gt;{% get_language_info_list %}&lt;/code&gt; supports lists of language codes. If you do this in your view:</source>
          <target state="translated">В дополнение к списку кортежей в стиле &lt;a href=&quot;../../ref/settings#std:setting-LANGUAGES&quot;&gt; &lt;code&gt;LANGUAGES&lt;/code&gt; &lt;/a&gt; &lt;code&gt;{% get_language_info_list %}&lt;/code&gt; поддерживает списки кодов языков. Если вы делаете это по вашему мнению:</target>
        </trans-unit>
        <trans-unit id="acfdeca1bfa2723747c23831e1f6c72abb0244fc" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;push()&lt;/code&gt; and &lt;code&gt;pop()&lt;/code&gt;, the &lt;code&gt;Context&lt;/code&gt; object also defines an &lt;code&gt;update()&lt;/code&gt; method. This works like &lt;code&gt;push()&lt;/code&gt; but takes a dictionary as an argument and pushes that dictionary onto the stack instead of an empty one.</source>
          <target state="translated">В дополнение к &lt;code&gt;push()&lt;/code&gt; и &lt;code&gt;pop()&lt;/code&gt; , объект &lt;code&gt;Context&lt;/code&gt; также определяет метод &lt;code&gt;update()&lt;/code&gt; . Это работает как &lt;code&gt;push()&lt;/code&gt; но принимает словарь в качестве аргумента и помещает этот словарь в стек вместо пустого.</target>
        </trans-unit>
        <trans-unit id="d08bf980f90aa9d354ce9fe22f93944096aa983d" translate="yes" xml:space="preserve">
          <source>In addition to a DB API driver, Django needs an adapter to access the database drivers from its ORM. Django provides an adapter for mysqlclient while MySQL Connector/Python includes &lt;a href=&quot;https://dev.mysql.com/doc/connector-python/en/connector-python-django-backend.html&quot;&gt;its own&lt;/a&gt;.</source>
          <target state="translated">В дополнение к драйверу API БД, Django нужен адаптер для доступа к драйверам базы данных из ORM. Django предоставляет адаптер для mysqlclient, в то время как MySQL Connector / Python включает &lt;a href=&quot;https://dev.mysql.com/doc/connector-python/en/connector-python-django-backend.html&quot;&gt;свой собственный&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4446e8a7eb646fabe3c820b8fc45118f5b558932" translate="yes" xml:space="preserve">
          <source>In addition to a database backend, you&amp;rsquo;ll need to make sure your Python database bindings are installed.</source>
          <target state="translated">В дополнение к базе данных, вам необходимо убедиться, что ваши привязки базы данных Python установлены.</target>
        </trans-unit>
        <trans-unit id="c94ce8da528fb522992156b232a5ab6d1b86573f" translate="yes" xml:space="preserve">
          <source>In addition to being able to add custom command line options, all &lt;a href=&quot;../ref/django-admin&quot;&gt;management commands&lt;/a&gt; can accept some default options such as &lt;a href=&quot;../ref/django-admin#cmdoption-verbosity&quot;&gt;&lt;code&gt;--verbosity&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/django-admin#cmdoption-traceback&quot;&gt;&lt;code&gt;--traceback&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Помимо возможности добавления пользовательских параметров командной строки, все &lt;a href=&quot;../ref/django-admin&quot;&gt;команды управления&lt;/a&gt; могут принимать некоторые параметры по умолчанию, такие как &lt;a href=&quot;../ref/django-admin#cmdoption-verbosity&quot;&gt; &lt;code&gt;--verbosity&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../ref/django-admin#cmdoption-traceback&quot;&gt; &lt;code&gt;--traceback&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="576f5fcbdcf1b7fd7c6b93e9bbe9c209051c087d" translate="yes" xml:space="preserve">
          <source>In addition to creating the new model, the &lt;code&gt;from_db()&lt;/code&gt; method must set the &lt;code&gt;adding&lt;/code&gt; and &lt;code&gt;db&lt;/code&gt; flags in the new instance&amp;rsquo;s &lt;a href=&quot;#django.db.models.Model._state&quot;&gt;&lt;code&gt;_state&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">В дополнение к созданию новой модели, то &lt;code&gt;from_db()&lt;/code&gt; метод должен установить &lt;code&gt;adding&lt;/code&gt; и &lt;code&gt;db&lt;/code&gt; флаги нового экземпляра &lt;a href=&quot;#django.db.models.Model._state&quot;&gt; &lt;code&gt;_state&lt;/code&gt; &lt;/a&gt; атрибута.</target>
        </trans-unit>
        <trans-unit id="f180ecdd9c92f470286413ff38ed940f9bbd38e7" translate="yes" xml:space="preserve">
          <source>In addition to creating the new model, the &lt;code&gt;from_db()&lt;/code&gt; method must set the &lt;code&gt;adding&lt;/code&gt; and &lt;code&gt;db&lt;/code&gt; flags in the new instance&amp;rsquo;s &lt;code&gt;_state&lt;/code&gt; attribute.</source>
          <target state="translated">Помимо создания новой модели, метод &lt;code&gt;from_db()&lt;/code&gt; должен установить флаги &lt;code&gt;adding&lt;/code&gt; и &lt;code&gt;db&lt;/code&gt; в &lt;code&gt;_state&lt;/code&gt; нового экземпляра .</target>
        </trans-unit>
        <trans-unit id="aa82b6442e717c223b5e675d2e5b3acbf200def3" translate="yes" xml:space="preserve">
          <source>In addition to methods provided by the &lt;a href=&quot;../syndication#django.contrib.syndication.views.Feed&quot;&gt;&lt;code&gt;django.contrib.syndication.views.Feed&lt;/code&gt;&lt;/a&gt; base class, GeoDjango&amp;rsquo;s &lt;code&gt;Feed&lt;/code&gt; class provides the following overrides. Note that these overrides may be done in multiple ways:</source>
          <target state="translated">В дополнение к методам , предусмотренных &lt;a href=&quot;../syndication#django.contrib.syndication.views.Feed&quot;&gt; &lt;code&gt;django.contrib.syndication.views.Feed&lt;/code&gt; &lt;/a&gt; базового класса, GeoDjango в &lt;code&gt;Feed&lt;/code&gt; класс предоставляет следующие переопределения. Обратите внимание, что эти переопределения могут быть выполнены несколькими способами:</target>
        </trans-unit>
        <trans-unit id="e71cd07f4ac2e62e0ecd7170c96df0e8a130dfc7" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; methods defined in &amp;ldquo;Retrieving objects&amp;rdquo; above, the &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt; has additional methods used to handle the set of related objects. A synopsis of each is below, and complete details can be found in the &lt;a href=&quot;../../ref/models/relations&quot;&gt;related objects reference&lt;/a&gt;.</source>
          <target state="translated">В дополнение к методам &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; ,&lt;/a&gt; определенным в разделе &amp;laquo;Извлечение объектов&amp;raquo; выше, в &lt;a href=&quot;managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; есть дополнительные методы, используемые для обработки набора связанных объектов. Ниже приведен краткий обзор каждого из них, а подробности можно найти в &lt;a href=&quot;../../ref/models/relations&quot;&gt;справке&lt;/a&gt; по связанным объектам .</target>
        </trans-unit>
        <trans-unit id="a87715969be2e401bffbf721c0b6e38e1c930533" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;'widget'&lt;/code&gt; key described in &lt;a href=&quot;#django.forms.Widget.get_context&quot;&gt;&lt;code&gt;Widget.get_context()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;MultiValueWidget&lt;/code&gt; adds a &lt;code&gt;widget['subwidgets']&lt;/code&gt; key.</source>
          <target state="translated">В дополнение к ключу &lt;code&gt;'widget'&lt;/code&gt; , описанному в &lt;a href=&quot;#django.forms.Widget.get_context&quot;&gt; &lt;code&gt;Widget.get_context()&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;MultiValueWidget&lt;/code&gt; добавляет ключ &lt;code&gt;widget['subwidgets']&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff5784549c9c0063d76c5ca8754372f0f0124d65" translate="yes" xml:space="preserve">
          <source>In addition to the API inherited from &lt;a href=&quot;../files/file#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; such as &lt;code&gt;read()&lt;/code&gt; and &lt;code&gt;write()&lt;/code&gt;, &lt;a href=&quot;#django.db.models.fields.files.FieldFile&quot;&gt;&lt;code&gt;FieldFile&lt;/code&gt;&lt;/a&gt; includes several methods that can be used to interact with the underlying file:</source>
          <target state="translated">Помимо API, унаследованного от &lt;a href=&quot;../files/file#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; ,&lt;/a&gt; такого как &lt;code&gt;read()&lt;/code&gt; и &lt;code&gt;write()&lt;/code&gt; , &lt;a href=&quot;#django.db.models.fields.files.FieldFile&quot;&gt; &lt;code&gt;FieldFile&lt;/code&gt; &lt;/a&gt; включает в себя несколько методов, которые можно использовать для взаимодействия с базовым файлом:</target>
        </trans-unit>
        <trans-unit id="a10925da11c09a74be0bd8f4c1b6704fc5cb3520" translate="yes" xml:space="preserve">
          <source>In addition to the ability to query by key, there are a number of custom lookups available for &lt;code&gt;HStoreField&lt;/code&gt;.</source>
          <target state="translated">В дополнение к возможности запроса по ключу для &lt;code&gt;HStoreField&lt;/code&gt; доступно несколько пользовательских поисков .</target>
        </trans-unit>
        <trans-unit id="d69ed98b07f3efe4289e6ef8ac1e34397081717a" translate="yes" xml:space="preserve">
          <source>In addition to the above details, there are a few guidelines which can greatly improve the efficiency and readability of the field&amp;rsquo;s code.</source>
          <target state="translated">В дополнение к вышеупомянутым деталям, есть несколько рекомендаций, которые могут значительно улучшить эффективность и удобочитаемость кода поля.</target>
        </trans-unit>
        <trans-unit id="8c64e028bd2cea8a3b5c6e844c13dd01044496cd" translate="yes" xml:space="preserve">
          <source>In addition to the above methods, fields that deal with files have a few other special requirements which must be taken into account. The majority of the mechanics provided by &lt;code&gt;FileField&lt;/code&gt;, such as controlling database storage and retrieval, can remain unchanged, leaving subclasses to deal with the challenge of supporting a particular type of file.</source>
          <target state="translated">В дополнение к вышеупомянутым методам, поля, которые имеют дело с файлами, имеют несколько других специальных требований, которые необходимо учитывать. Большинство механизмов, предоставляемых &lt;code&gt;FileField&lt;/code&gt; , таких как управление хранением и извлечением базы данных, могут оставаться неизменными, оставляя подклассы для решения проблемы поддержки файла определенного типа.</target>
        </trans-unit>
        <trans-unit id="2e1bc480fcebe4ce8116912b2190e867237ad26c" translate="yes" xml:space="preserve">
          <source>In addition to the context provided by &lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectMixin&quot;&gt;&lt;code&gt;MultipleObjectMixin&lt;/code&gt;&lt;/a&gt; (via &lt;a href=&quot;mixins-date-based#django.views.generic.dates.BaseDateListView&quot;&gt;&lt;code&gt;BaseDateListView&lt;/code&gt;&lt;/a&gt;), the template&amp;rsquo;s context will be:</source>
          <target state="translated">В дополнение к контексту, предоставленному &lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectMixin&quot;&gt; &lt;code&gt;MultipleObjectMixin&lt;/code&gt; &lt;/a&gt; (через &lt;a href=&quot;mixins-date-based#django.views.generic.dates.BaseDateListView&quot;&gt; &lt;code&gt;BaseDateListView&lt;/code&gt; &lt;/a&gt; ), контекст шаблона будет:</target>
        </trans-unit>
        <trans-unit id="78146a6623f617f370bdbb7922a1a46c904a4d3e" translate="yes" xml:space="preserve">
          <source>In addition to the context provided by &lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectMixin&quot;&gt;&lt;code&gt;django.views.generic.list.MultipleObjectMixin&lt;/code&gt;&lt;/a&gt; (via &lt;a href=&quot;mixins-date-based#django.views.generic.dates.BaseDateListView&quot;&gt;&lt;code&gt;django.views.generic.dates.BaseDateListView&lt;/code&gt;&lt;/a&gt;), the template&amp;rsquo;s context will be:</source>
          <target state="translated">В дополнение к контексту, предоставленному &lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectMixin&quot;&gt; &lt;code&gt;django.views.generic.list.MultipleObjectMixin&lt;/code&gt; &lt;/a&gt; (через &lt;a href=&quot;mixins-date-based#django.views.generic.dates.BaseDateListView&quot;&gt; &lt;code&gt;django.views.generic.dates.BaseDateListView&lt;/code&gt; &lt;/a&gt; ), контекст шаблона будет:</target>
        </trans-unit>
        <trans-unit id="9f847ce1f109048a1fb1aa3ac7bebe988e89f275" translate="yes" xml:space="preserve">
          <source>In addition to the following, all extracts for &lt;code&gt;DateField&lt;/code&gt; listed above may also be used on &lt;code&gt;DateTimeField&lt;/code&gt;s .</source>
          <target state="translated">В дополнение к следующему, все извлечения для &lt;code&gt;DateField&lt;/code&gt; , перечисленные выше, также могут использоваться на &lt;code&gt;DateTimeField&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="cc163a8af460b22769a0a66d0e1689102a23ab92" translate="yes" xml:space="preserve">
          <source>In addition to the listed methods, &lt;a href=&quot;#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; exposes the following attributes and methods of its &lt;code&gt;file&lt;/code&gt; object: &lt;code&gt;encoding&lt;/code&gt;, &lt;code&gt;fileno&lt;/code&gt;, &lt;code&gt;flush&lt;/code&gt;, &lt;code&gt;isatty&lt;/code&gt;, &lt;code&gt;newlines&lt;/code&gt;, &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;readinto&lt;/code&gt;, &lt;code&gt;readline&lt;/code&gt;, &lt;code&gt;readlines&lt;/code&gt;, &lt;code&gt;seek&lt;/code&gt;, &lt;code&gt;tell&lt;/code&gt;, &lt;code&gt;truncate&lt;/code&gt;, &lt;code&gt;write&lt;/code&gt;, &lt;code&gt;writelines&lt;/code&gt;, &lt;code&gt;readable()&lt;/code&gt;, &lt;code&gt;writable()&lt;/code&gt;, and &lt;code&gt;seekable()&lt;/code&gt;.</source>
          <target state="translated">В дополнении к перечисленным методам, &lt;a href=&quot;#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; предоставляет следующие атрибуты и методы его &lt;code&gt;file&lt;/code&gt; объект: &lt;code&gt;encoding&lt;/code&gt; , &lt;code&gt;fileno&lt;/code&gt; , &lt;code&gt;flush&lt;/code&gt; , &lt;code&gt;isatty&lt;/code&gt; , &lt;code&gt;newlines&lt;/code&gt; , &lt;code&gt;read&lt;/code&gt; , &lt;code&gt;readinto&lt;/code&gt; , &lt;code&gt;readline&lt;/code&gt; , &lt;code&gt;readlines&lt;/code&gt; , &lt;code&gt;seek&lt;/code&gt; , &lt;code&gt;tell&lt;/code&gt; , &lt;code&gt;truncate&lt;/code&gt; , &lt;code&gt;write&lt;/code&gt; , &lt;code&gt;writelines&lt;/code&gt; , &lt;code&gt;readable()&lt;/code&gt; , &lt;code&gt;writable()&lt;/code&gt; и доступный для &lt;code&gt;seekable()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d138f7de7bbc3af07a0fb71bb0320df5a1bd9111" translate="yes" xml:space="preserve">
          <source>In addition to the officially supported databases, there are &lt;a href=&quot;../ref/databases#third-party-notes&quot;&gt;backends provided by 3rd parties&lt;/a&gt; that allow you to use other databases with Django.</source>
          <target state="translated">В дополнение к официально поддерживаемым базам данных есть сторонние &lt;a href=&quot;../ref/databases#third-party-notes&quot;&gt;бэкэнды,&lt;/a&gt; которые позволяют вам использовать другие базы данных с Django.</target>
        </trans-unit>
        <trans-unit id="38ffcb3817bbbd2551f77d39d51caba8b51562b9" translate="yes" xml:space="preserve">
          <source>In addition to the officially supported databases, there are backends provided by 3rd parties that allow you to use other databases with Django:</source>
          <target state="translated">Помимо официально поддерживаемых баз данных,существуют бэкенды,предоставляемые сторонними организациями,которые позволяют использовать с Django другие базы данных:</target>
        </trans-unit>
        <trans-unit id="1db79a28d08359b046f49991e77de295d5e703c7" translate="yes" xml:space="preserve">
          <source>In addition to the optional arguments of its parent &lt;a href=&quot;#django.core.validators.RegexValidator&quot;&gt;&lt;code&gt;RegexValidator&lt;/code&gt;&lt;/a&gt; class, &lt;code&gt;URLValidator&lt;/code&gt; accepts an extra optional attribute:</source>
          <target state="translated">Помимо дополнительных аргументов родительского &lt;a href=&quot;#django.core.validators.RegexValidator&quot;&gt; &lt;code&gt;RegexValidator&lt;/code&gt; &lt;/a&gt; класса, &lt;code&gt;URLValidator&lt;/code&gt; принимает дополнительный необязательный атрибут:</target>
        </trans-unit>
        <trans-unit id="0a4a0c3d6f62b599c6443f955946a232e25c4126" translate="yes" xml:space="preserve">
          <source>In addition to the options of the &lt;code&gt;json&lt;/code&gt; serializer, the &lt;code&gt;geojson&lt;/code&gt; serializer accepts the following additional option when it is called by &lt;code&gt;serializers.serialize()&lt;/code&gt;:</source>
          <target state="translated">В дополнение к опциям сериализатора &lt;code&gt;json&lt;/code&gt; , сериализатор &lt;code&gt;geojson&lt;/code&gt; принимает следующую дополнительную опцию, когда она вызывается &lt;code&gt;serializers.serialize()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="75907cde4d6071df1af2b10556dffed4d3fefdf2" translate="yes" xml:space="preserve">
          <source>In addition to the regular &lt;a href=&quot;../../forms/fields#core-field-arguments&quot;&gt;form field arguments&lt;/a&gt;, GeoDjango form fields take the following optional arguments.</source>
          <target state="translated">В дополнение к обычным &lt;a href=&quot;../../forms/fields#core-field-arguments&quot;&gt;аргументам&lt;/a&gt; поля формы, поля формы GeoDjango принимают следующие необязательные аргументы.</target>
        </trans-unit>
        <trans-unit id="fab30d8fa172502cea3f7aebdb228bfeb4d6d2f0" translate="yes" xml:space="preserve">
          <source>In addition to the regular &lt;a href=&quot;../../models/fields#common-model-field-options&quot;&gt;Field options&lt;/a&gt; available for Django model fields, spatial fields have the following additional options. All are optional.</source>
          <target state="translated">В дополнение к обычным &lt;a href=&quot;../../models/fields#common-model-field-options&quot;&gt;опциям поля,&lt;/a&gt; доступным для полей модели Django, у пространственных полей есть следующие дополнительные опции. Все необязательно.</target>
        </trans-unit>
        <trans-unit id="bcac2853c813ab81bdb91abe9b8fe01ccb15cb5c" translate="yes" xml:space="preserve">
          <source>In addition to the special attributes that are available for &lt;a href=&quot;#django.db.models.FileField&quot;&gt;&lt;code&gt;FileField&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;#django.db.models.ImageField&quot;&gt;&lt;code&gt;ImageField&lt;/code&gt;&lt;/a&gt; also has &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; attributes.</source>
          <target state="translated">В дополнение к специальным атрибутам, которые доступны для &lt;a href=&quot;#django.db.models.FileField&quot;&gt; &lt;code&gt;FileField&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#django.db.models.ImageField&quot;&gt; &lt;code&gt;ImageField&lt;/code&gt; &lt;/a&gt; также имеет атрибуты &lt;code&gt;height&lt;/code&gt; и &lt;code&gt;width&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="14e5e76a34a70eeb072f8cbe5905434d81e71e1b" translate="yes" xml:space="preserve">
          <source>In addition to these configuration steps, you&amp;rsquo;ll also need to actually serve the static files.</source>
          <target state="translated">В дополнение к этим шагам настройки вам также нужно будет обслуживать статические файлы.</target>
        </trans-unit>
        <trans-unit id="c2c243a6eca738bdaa3a92ec6f2b8a90ad5218f3" translate="yes" xml:space="preserve">
          <source>In addition to these, &lt;a href=&quot;#django.template.RequestContext&quot;&gt;&lt;code&gt;RequestContext&lt;/code&gt;&lt;/a&gt; always enables &lt;code&gt;'django.template.context_processors.csrf'&lt;/code&gt;. This is a security related context processor required by the admin and other contrib apps, and, in case of accidental misconfiguration, it is deliberately hardcoded in and cannot be turned off in the &lt;code&gt;context_processors&lt;/code&gt; option.</source>
          <target state="translated">В дополнение к этому &lt;a href=&quot;#django.template.RequestContext&quot;&gt; &lt;code&gt;RequestContext&lt;/code&gt; &lt;/a&gt; всегда включает &lt;code&gt;'django.template.context_processors.csrf'&lt;/code&gt; . Это контекстный процессор, связанный с безопасностью, который требуется администратору и другим приложениям contrib, и, в случае случайной неверной конфигурации, он намеренно жестко закодирован и не может быть отключен в параметре &lt;code&gt;context_processors&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09d1558db313d92c5461aa77b23628bc5f54ef5a" translate="yes" xml:space="preserve">
          <source>In addition to web links, &lt;code&gt;urlize&lt;/code&gt; also converts email addresses into &lt;code&gt;mailto:&lt;/code&gt; links. If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;Send questions to foo@example.com&quot;&lt;/code&gt;, the output will be &lt;code&gt;&quot;Send questions to &amp;lt;a href=&quot;mailto:foo@example.com&quot;&amp;gt;foo@example.com&amp;lt;/a&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">В дополнение к веб-ссылкам, &lt;code&gt;urlize&lt;/code&gt; также преобразует адреса электронной почты в ссылки &lt;code&gt;mailto:&lt;/code&gt; . Если &lt;code&gt;value&lt;/code&gt; является &lt;code&gt;&quot;Send questions to foo@example.com&quot;&lt;/code&gt; , выход будет &lt;code&gt;&quot;Send questions to &amp;lt;a href=&quot;mailto:foo@example.com&quot;&amp;gt;foo@example.com&amp;lt;/a&amp;gt;&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb3cc5db265feffd76588b55bfe91ebe04db4bd8" translate="yes" xml:space="preserve">
          <source>In addition, &lt;code&gt;LineString&lt;/code&gt; objects may also be created by passing in a single sequence of coordinate or &lt;a href=&quot;#django.contrib.gis.geos.Point&quot;&gt;&lt;code&gt;Point&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="translated">Кроме того, объекты &lt;code&gt;LineString&lt;/code&gt; также можно создавать, передавая одну последовательность объектов координат или &lt;a href=&quot;#django.contrib.gis.geos.Point&quot;&gt; &lt;code&gt;Point&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="092a2edd2b26995b6c73e6e9e9e504760cdc3b10" translate="yes" xml:space="preserve">
          <source>In addition, &lt;code&gt;QueryDict&lt;/code&gt; has the following methods:</source>
          <target state="translated">Кроме того, &lt;code&gt;QueryDict&lt;/code&gt; имеет следующие методы:</target>
        </trans-unit>
        <trans-unit id="003bc4accc874f1fef4668d4b87997f905b9b76e" translate="yes" xml:space="preserve">
          <source>In addition, &lt;code&gt;manage.py&lt;/code&gt; is automatically created in each Django project. It does the same thing as &lt;code&gt;django-admin&lt;/code&gt; but also sets the &lt;a href=&quot;../topics/settings#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;&lt;/a&gt; environment variable so that it points to your project&amp;rsquo;s &lt;code&gt;settings.py&lt;/code&gt; file.</source>
          <target state="translated">Кроме того, &lt;code&gt;manage.py&lt;/code&gt; автоматически создается в каждом проекте Django. Он делает то же самое, что и &lt;code&gt;django-admin&lt;/code&gt; , но также устанавливает &lt;a href=&quot;../topics/settings#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; &lt;/a&gt; окружения DJANGO_SETTINGS_MODULE, чтобы он указывал на файл &lt;code&gt;settings.py&lt;/code&gt; вашего проекта .</target>
        </trans-unit>
        <trans-unit id="42da778e8ed7bdaf3955ad5f72d2ff5536335b45" translate="yes" xml:space="preserve">
          <source>In addition, &lt;code&gt;message/rfc822&lt;/code&gt; attachments will no longer be base64-encoded in violation of &lt;a href=&quot;https://tools.ietf.org/html/rfc2046.html#section-5.2.1&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2046#section-5.2.1&lt;/strong&gt;&lt;/a&gt;, which can cause issues with displaying the attachments in &lt;a href=&quot;https://bugzilla.gnome.org/show_bug.cgi?id=651197&quot;&gt;Evolution&lt;/a&gt; and &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=333880&quot;&gt;Thunderbird&lt;/a&gt;.</source>
          <target state="translated">Кроме того, вложения &lt;code&gt;message/rfc822&lt;/code&gt; больше не будут кодироваться в base64 в нарушение &lt;a href=&quot;https://tools.ietf.org/html/rfc2046.html#section-5.2.1&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2046 # section-5.2.1&lt;/strong&gt;&lt;/a&gt; , что может вызвать проблемы с отображением вложений в &lt;a href=&quot;https://bugzilla.gnome.org/show_bug.cgi?id=651197&quot;&gt;Evolution&lt;/a&gt; и &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=333880&quot;&gt;Thunderbird&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6af43c6d389d8d50b42845ec056449c2468a39d7" translate="yes" xml:space="preserve">
          <source>In addition, &lt;em&gt;message/rfc822&lt;/em&gt; attachments will no longer be base64-encoded in violation of &lt;a href=&quot;https://tools.ietf.org/html/rfc2046.html#section-5.2.1&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2046#section-5.2.1&lt;/strong&gt;&lt;/a&gt;, which can cause issues with displaying the attachments in &lt;a href=&quot;https://bugzilla.gnome.org/show_bug.cgi?id=651197&quot;&gt;Evolution&lt;/a&gt; and &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=333880&quot;&gt;Thunderbird&lt;/a&gt;.</source>
          <target state="translated">Кроме того, вложения &lt;em&gt;message / rfc822&lt;/em&gt; больше не будут кодироваться в формате base64 в нарушение &lt;a href=&quot;https://tools.ietf.org/html/rfc2046.html#section-5.2.1&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2046 # section-5.2.1&lt;/strong&gt;&lt;/a&gt; , что может вызвать проблемы с отображением вложений в &lt;a href=&quot;https://bugzilla.gnome.org/show_bug.cgi?id=651197&quot;&gt;Evolution&lt;/a&gt; и &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=333880&quot;&gt;Thunderbird&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8e4cb7c7a0731de3ea837edf11710dd02a514d0f" translate="yes" xml:space="preserve">
          <source>In addition, Django applies the following rule: if you set &lt;code&gt;editable=False&lt;/code&gt; on the model field, &lt;em&gt;any&lt;/em&gt; form created from the model via &lt;code&gt;ModelForm&lt;/code&gt; will not include that field.</source>
          <target state="translated">Кроме того, Django применяет следующее правило: если вы установили &lt;code&gt;editable=False&lt;/code&gt; в поле модели, &lt;em&gt;любая&lt;/em&gt; форма, созданная из модели через &lt;code&gt;ModelForm&lt;/code&gt; , не будет включать это поле.</target>
        </trans-unit>
        <trans-unit id="30a99ac2f20a9d7ce513beb52192fea90a5cd0c6" translate="yes" xml:space="preserve">
          <source>In addition, Django provides enumeration types that you can subclass to define choices in a concise way:</source>
          <target state="translated">Кроме того,Django предоставляет типы перечислений,которые можно подразделить на подклассы,чтобы определить варианты в краткой форме:</target>
        </trans-unit>
        <trans-unit id="c8a09597939bdcb71e0faa18c3b3a20ccef0e692" translate="yes" xml:space="preserve">
          <source>In addition, MySQL will fully rewrite tables for almost every schema operation and generally takes a time proportional to the number of rows in the table to add or remove columns. On slower hardware this can be worse than a minute per million rows - adding a few columns to a table with just a few million rows could lock your site up for over ten minutes.</source>
          <target state="translated">Кроме того,MySQL будет полностью переписывать таблицы почти для каждой операции по схеме и обычно занимает время,пропорциональное количеству строк в таблице для добавления или удаления столбцов.На медленных аппаратных средствах это может быть хуже минуты на миллион строк-добавление нескольких столбцов в таблицу всего с несколькими миллионами строк может заблокировать ваш сайт более чем на десять минут.</target>
        </trans-unit>
        <trans-unit id="80f1a60fae36c3742c0b6b4ed6f4684b7d6979d1" translate="yes" xml:space="preserve">
          <source>In addition, add the &lt;code&gt;DYLD_FALLBACK_LIBRARY_PATH&lt;/code&gt; setting so that the libraries can be found by Python:</source>
          <target state="translated">Кроме того, добавьте параметр &lt;code&gt;DYLD_FALLBACK_LIBRARY_PATH&lt;/code&gt; , чтобы Python мог найти библиотеки:</target>
        </trans-unit>
        <trans-unit id="0d00c3d27b51ce30fb9025d5d42429ee3fad5033" translate="yes" xml:space="preserve">
          <source>In addition, as JSON supports only string keys, note that using non-string keys in &lt;code&gt;request.session&lt;/code&gt; won&amp;rsquo;t work as expected:</source>
          <target state="translated">Кроме того, поскольку JSON поддерживает только строковые ключи, обратите внимание, что использование нестроковых ключей в &lt;code&gt;request.session&lt;/code&gt; не будет работать должным образом:</target>
        </trans-unit>
        <trans-unit id="193e94f351cba3a0360a6e545faac2e59e822fc0" translate="yes" xml:space="preserve">
          <source>In addition, coordinates/components of the geometry may added or modified, just like a Python list:</source>
          <target state="translated">Кроме того,координаты/компоненты геометрии могут быть добавлены или изменены,так же как и список Python:</target>
        </trans-unit>
        <trans-unit id="3ddf753e80872dd11269d2a3533531f2d9a256cc" translate="yes" xml:space="preserve">
          <source>In addition, each generated form field has attributes set as follows:</source>
          <target state="translated">Кроме того,каждое сгенерированное поле формы имеет следующие атрибуты:</target>
        </trans-unit>
        <trans-unit id="e0d877515ca9c31768db2b55639e4f4d3d64d88a" translate="yes" xml:space="preserve">
          <source>In addition, for HTTPS requests, strict referer checking is done by &lt;code&gt;CsrfViewMiddleware&lt;/code&gt;. This means that even if a subdomain can set or modify cookies on your domain, it can&amp;rsquo;t force a user to post to your application since that request won&amp;rsquo;t come from your own exact domain.</source>
          <target state="translated">Кроме того, для запросов HTTPS &lt;code&gt;CsrfViewMiddleware&lt;/code&gt; выполняет строгую проверку ссылок . Это означает, что даже если поддомен может устанавливать или изменять файлы cookie в вашем домене, он не может заставить пользователя публиковать в вашем приложении, поскольку этот запрос не будет поступать из вашего собственного точного домена.</target>
        </trans-unit>
        <trans-unit id="609772e6e1f8a2aa06a07103e8048bef77e6acf0" translate="yes" xml:space="preserve">
          <source>In addition, if you are using the template system to output something other than HTML, there may be entirely separate characters and words which require escaping.</source>
          <target state="translated">Кроме того,если вы используете систему шаблонов для вывода чего-то кроме HTML,могут быть совершенно отдельные символы и слова,которые требуют экранирования.</target>
        </trans-unit>
        <trans-unit id="271507652d7f3c6c044a78d1ab9d1f40af16ab01" translate="yes" xml:space="preserve">
          <source>In addition, if your class provides local file storage, it must override the &lt;code&gt;path()&lt;/code&gt; method.</source>
          <target state="translated">Кроме того, если ваш класс предоставляет локальное хранилище файлов, он должен переопределить метод &lt;code&gt;path()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f41a663166406e5affa41f624b0f5ba10f8271ea" translate="yes" xml:space="preserve">
          <source>In addition, modify the &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting to include &lt;a href=&quot;../admin/index#module-django.contrib.admin&quot;&gt;&lt;code&gt;django.contrib.admin&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;index#module-django.contrib.gis&quot;&gt;&lt;code&gt;django.contrib.gis&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;world&lt;/code&gt; (your newly created application):</source>
          <target state="translated">Кроме того, измените параметр &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; ,&lt;/a&gt; включив в него &lt;a href=&quot;../admin/index#module-django.contrib.admin&quot;&gt; &lt;code&gt;django.contrib.admin&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;index#module-django.contrib.gis&quot;&gt; &lt;code&gt;django.contrib.gis&lt;/code&gt; &lt;/a&gt; и &lt;code&gt;world&lt;/code&gt; (ваше недавно созданное приложение):</target>
        </trans-unit>
        <trans-unit id="e0cf7f24ea8838462019e7f2d8be131526d91e9c" translate="yes" xml:space="preserve">
          <source>In addition, only &lt;code&gt;LIMIT&lt;/code&gt;, &lt;code&gt;OFFSET&lt;/code&gt;, &lt;code&gt;COUNT(*)&lt;/code&gt;, &lt;code&gt;ORDER BY&lt;/code&gt;, and specifying columns (i.e. slicing, &lt;a href=&quot;#django.db.models.query.QuerySet.count&quot;&gt;&lt;code&gt;count()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt;&lt;code&gt;order_by()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#django.db.models.query.QuerySet.values&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;#django.db.models.query.QuerySet.values_list&quot;&gt;&lt;code&gt;values_list()&lt;/code&gt;&lt;/a&gt;) are allowed on the resulting &lt;code&gt;QuerySet&lt;/code&gt;. Further, databases place restrictions on what operations are allowed in the combined queries. For example, most databases don&amp;rsquo;t allow &lt;code&gt;LIMIT&lt;/code&gt; or &lt;code&gt;OFFSET&lt;/code&gt; in the combined queries.</source>
          <target state="translated">Кроме того, в результирующем &lt;code&gt;QuerySet&lt;/code&gt; допускаются только &lt;code&gt;LIMIT&lt;/code&gt; , &lt;code&gt;OFFSET&lt;/code&gt; , &lt;code&gt;COUNT(*)&lt;/code&gt; , &lt;code&gt;ORDER BY&lt;/code&gt; и заданные столбцы (то есть срезы, &lt;a href=&quot;#django.db.models.query.QuerySet.count&quot;&gt; &lt;code&gt;count()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt; &lt;code&gt;order_by()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#django.db.models.query.QuerySet.values&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;#django.db.models.query.QuerySet.values_list&quot;&gt; &lt;code&gt;values_list()&lt;/code&gt; &lt;/a&gt; ) . Кроме того, базы данных накладывают ограничения на то, какие операции разрешены в комбинированных запросах. Например, большинство баз данных не допускают &lt;code&gt;LIMIT&lt;/code&gt; или &lt;code&gt;OFFSET&lt;/code&gt; в комбинированных запросах.</target>
        </trans-unit>
        <trans-unit id="073651aeeb0daff1ea4b8f8b97a8fcd077d19c9e" translate="yes" xml:space="preserve">
          <source>In addition, shapefiles also support attribute fields that may contain additional data. Here are the fields on the World Borders layer:</source>
          <target state="translated">Кроме того,шаблоны также поддерживают поля атрибутов,которые могут содержать дополнительные данные.Вот поля на слое &quot;Мировые границы&quot;:</target>
        </trans-unit>
        <trans-unit id="6182146b091f830549eb231420eb3ef3684d03ab" translate="yes" xml:space="preserve">
          <source>In addition, some objects are automatically created just after &lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; creates a table to hold them in a database:</source>
          <target state="translated">Кроме того, некоторые объекты создаются автоматически сразу после того, как &lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt; создает таблицу для хранения их в базе данных:</target>
        </trans-unit>
        <trans-unit id="602a62df0ea4d621c4bb672ddce2276a2ba75e0f" translate="yes" xml:space="preserve">
          <source>In addition, the concrete base classes of the model are stored as pointers, so you must always keep base classes around for as long as there is a migration that contains a reference to them. On the plus side, methods and managers from these base classes inherit normally, so if you absolutely need access to these you can opt to move them into a superclass.</source>
          <target state="translated">Кроме того,конкретные базовые классы модели хранятся в виде указателей,поэтому необходимо всегда хранить базовые классы вокруг до тех пор,пока существует миграция,содержащая ссылку на них.С другой стороны,методы и менеджеры от этих базовых классов наследуют обычно,поэтому если вам абсолютно необходим доступ к ним,вы можете переместить их в суперкласс.</target>
        </trans-unit>
        <trans-unit id="ecc2eb2c3ab555cfa8732961afb123db30b159c9" translate="yes" xml:space="preserve">
          <source>In addition, there&amp;rsquo;s a utility function:</source>
          <target state="translated">Кроме того, есть функция полезности:</target>
        </trans-unit>
        <trans-unit id="5cb0790e9c7133e4cc81702a5b48be8ffd4efd86" translate="yes" xml:space="preserve">
          <source>In addition, to allow Python template files that contain Django template language syntax while also preventing packaging systems from trying to byte-compile invalid &lt;code&gt;*.py&lt;/code&gt; files, template files ending with &lt;code&gt;.py-tpl&lt;/code&gt; will be renamed to &lt;code&gt;.py&lt;/code&gt;.</source>
          <target state="translated">Кроме того, чтобы разрешить файлы шаблонов Python, которые содержат синтаксис языка шаблонов Django, и при этом не позволяет системам упаковки пытаться скомпилировать недопустимые файлы &lt;code&gt;*.py&lt;/code&gt; , файлы шаблонов, заканчивающиеся на &lt;code&gt;.py-tpl&lt;/code&gt; , будут переименованы в &lt;code&gt;.py&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f39294b8048c718f8bb8084ffe106424b63a64a2" translate="yes" xml:space="preserve">
          <source>In addition, to cut down on the repetitive nature of loading and rendering templates, Django provides a shortcut function which automates the process.</source>
          <target state="translated">Кроме того,чтобы уменьшить повторяемость загрузки и отрисовки шаблонов,в Django предусмотрена функция быстрого вызова,которая автоматизирует процесс.</target>
        </trans-unit>
        <trans-unit id="cb738cfe7b94bcd3750e995720f727d510812fe0" translate="yes" xml:space="preserve">
          <source>In addition, try to avoid returning values as positional arguments; where possible, return values as keyword arguments for maximum future compatibility. If you change the names of things more often than their position in the constructor&amp;rsquo;s argument list, you might prefer positional, but bear in mind that people will be reconstructing your field from the serialized version for quite a while (possibly years), depending how long your migrations live for.</source>
          <target state="translated">Кроме того, старайтесь избегать возврата значений в качестве позиционных аргументов; где возможно, возвращайте значения как аргументы ключевого слова для максимальной совместимости в будущем. Если вы меняете имена вещей чаще, чем их положение в списке аргументов конструктора, вы можете предпочесть позиционное, но имейте в виду, что люди будут реконструировать ваше поле из сериализованной версии довольно долго (возможно, годы), в зависимости от того, как долго ваши миграции живут ради.</target>
        </trans-unit>
        <trans-unit id="be8f95e23db63b8ed19a44c8deba6d75e37d2dc0" translate="yes" xml:space="preserve">
          <source>In addition, try to avoid returning values as positional arguments; where possible, return values as keyword arguments for maximum future compatibility. Of course, if you change the names of things more often than their position in the constructor&amp;rsquo;s argument list, you might prefer positional, but bear in mind that people will be reconstructing your field from the serialized version for quite a while (possibly years), depending how long your migrations live for.</source>
          <target state="translated">Кроме того, старайтесь не возвращать значения в качестве позиционных аргументов; где возможно, возвращайте значения в качестве аргументов ключевых слов для максимальной совместимости в будущем. Конечно, если вы меняете имена вещей чаще, чем их положение в списке аргументов конструктора, вы можете предпочесть позиционное, но имейте в виду, что люди будут восстанавливать ваше поле из сериализованной версии довольно долго (возможно, годы), в зависимости от того, как долго живут ваши миграции.</target>
        </trans-unit>
        <trans-unit id="d3643c4f39cc7b043d095a8d10a730426bd124d2" translate="yes" xml:space="preserve">
          <source>In addition, you may run into a &lt;code&gt;CircularDependencyError&lt;/code&gt; when running your migrations as Django won&amp;rsquo;t be able to automatically break the dependency loop due to the dynamic dependency. If you see this error, you should break the loop by moving the models depended on by your user model into a second migration. (You can try making two normal models that have a &lt;code&gt;ForeignKey&lt;/code&gt; to each other and seeing how &lt;code&gt;makemigrations&lt;/code&gt; resolves that circular dependency if you want to see how it&amp;rsquo;s usually done.)</source>
          <target state="translated">Кроме того, вы можете столкнуться с &lt;code&gt;CircularDependencyError&lt;/code&gt; при запуске ваших миграций, поскольку Django не сможет автоматически разорвать цикл зависимости из-за динамической зависимости. Если вы видите эту ошибку, вы должны разорвать цикл, переместив модели, зависящие от вашей пользовательской модели, во вторую миграцию. (Вы можете попробовать создать две нормальные модели, которые имеют &lt;code&gt;ForeignKey&lt;/code&gt; друг к другу, и посмотреть, как &lt;code&gt;makemigrations&lt;/code&gt; разрешает эту циклическую зависимость, если вы хотите увидеть, как это обычно делается.)</target>
        </trans-unit>
        <trans-unit id="6c07cdf9206331466980546d8b1cf47350f9dec8" translate="yes" xml:space="preserve">
          <source>In all cases the name of the directory containing the translation is expected to be named using &lt;a href=&quot;index#term-locale-name&quot;&gt;locale name&lt;/a&gt; notation. E.g. &lt;code&gt;de&lt;/code&gt;, &lt;code&gt;pt_BR&lt;/code&gt;, &lt;code&gt;es_AR&lt;/code&gt;, etc. Untranslated strings for territorial language variants use the translations of the generic language. For example, untranslated &lt;code&gt;pt_BR&lt;/code&gt; strings use &lt;code&gt;pt&lt;/code&gt; translations.</source>
          <target state="translated">Во всех случаях ожидается, что имя каталога, содержащего перевод, будет названо с использованием обозначения имени &lt;a href=&quot;index#term-locale-name&quot;&gt;локали&lt;/a&gt; . Например, &lt;code&gt;de&lt;/code&gt; , &lt;code&gt;pt_BR&lt;/code&gt; , &lt;code&gt;es_AR&lt;/code&gt; и т. Д. Непереведенные строки для вариантов территориального языка используют переводы родового языка. Например, непереведенные строки &lt;code&gt;pt_BR&lt;/code&gt; используют переводы &lt;code&gt;pt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72cd5697475afea58d2e7c1ba3fcfc8ea3cf3530" translate="yes" xml:space="preserve">
          <source>In all other respects, the &lt;code&gt;InlineModelAdmin&lt;/code&gt; is exactly the same as any other. You can customize the appearance using any of the normal &lt;code&gt;ModelAdmin&lt;/code&gt; properties.</source>
          <target state="translated">Во всех других отношениях &lt;code&gt;InlineModelAdmin&lt;/code&gt; точно такой же, как и любой другой. Вы можете настроить внешний вид, используя любое из обычных свойств &lt;code&gt;ModelAdmin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9d5e238bac9efc00000ed6f69e2747cbb0fb9ac" translate="yes" xml:space="preserve">
          <source>In an &lt;a href=&quot;#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; object, the &lt;a href=&quot;#django.http.HttpRequest.GET&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.http.HttpRequest.POST&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt; attributes are instances of &lt;code&gt;django.http.QueryDict&lt;/code&gt;, a dictionary-like class customized to deal with multiple values for the same key. This is necessary because some HTML form elements, notably &lt;code&gt;&amp;lt;select multiple&amp;gt;&lt;/code&gt;, pass multiple values for the same key.</source>
          <target state="translated">В объекте &lt;a href=&quot;#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt; атрибуты &lt;a href=&quot;#django.http.HttpRequest.GET&quot;&gt; &lt;code&gt;GET&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#django.http.HttpRequest.POST&quot;&gt; &lt;code&gt;POST&lt;/code&gt; &lt;/a&gt; являются экземплярами &lt;code&gt;django.http.QueryDict&lt;/code&gt; , словарного класса, настроенного для работы с несколькими значениями для одного и того же ключа. Это необходимо, потому что некоторые элементы формы HTML, в частности, &lt;code&gt;&amp;lt;select multiple&amp;gt;&lt;/code&gt; , передают несколько значений для одного и того же ключа.</target>
        </trans-unit>
        <trans-unit id="125593a33b52de9b2649a843eba4f9a9f643a393" translate="yes" xml:space="preserve">
          <source>In any case, you should always be able to &lt;a href=&quot;#spatialite-source&quot;&gt;install from source&lt;/a&gt;.</source>
          <target state="translated">В любом случае, вы всегда должны быть в состоянии &lt;a href=&quot;#spatialite-source&quot;&gt;установить из исходного кода&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="26372be3d62eb8474ab024118b757738445b8b1e" translate="yes" xml:space="preserve">
          <source>In any directory named in the &lt;a href=&quot;settings#std:setting-FIXTURE_DIRS&quot;&gt;&lt;code&gt;FIXTURE_DIRS&lt;/code&gt;&lt;/a&gt; setting</source>
          <target state="translated">В любом каталоге, указанном в настройке &lt;a href=&quot;settings#std:setting-FIXTURE_DIRS&quot;&gt; &lt;code&gt;FIXTURE_DIRS&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c617f38771b04f4bc99f2332d1dc8deca3569a57" translate="yes" xml:space="preserve">
          <source>In any template that uses a POST form, use the &lt;a href=&quot;templates/builtins#std:templatetag-csrf_token&quot;&gt;&lt;code&gt;csrf_token&lt;/code&gt;&lt;/a&gt; tag inside the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; element if the form is for an internal URL, e.g.:</source>
          <target state="translated">В любом шаблоне, который использует форму POST, используйте тег &lt;a href=&quot;templates/builtins#std:templatetag-csrf_token&quot;&gt; &lt;code&gt;csrf_token&lt;/code&gt; &lt;/a&gt; внутри элемента &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; , если форма предназначена для внутреннего URL, например:</target>
        </trans-unit>
        <trans-unit id="3268f78806231ff9d52336b4daa2ccb81e4bcf58" translate="yes" xml:space="preserve">
          <source>In both ASGI and WSGI mode, you can still safely use asynchronous support to run code concurrently rather than serially. This is especially handy when dealing with external APIs or data stores.</source>
          <target state="translated">В режиме ASGI и WSGI вы можете безопасно использовать асинхронную поддержку для выполнения кода одновременно,а не последовательно.Это особенно удобно при работе с внешними API или хранилищами данных.</target>
        </trans-unit>
        <trans-unit id="9584b79fc48ff0575ab4a3e73aa30d63351d2fd1" translate="yes" xml:space="preserve">
          <source>In both cases, &amp;ldquo;absolute path&amp;rdquo; means a URL that doesn&amp;rsquo;t include the protocol or domain. Examples:</source>
          <target state="translated">В обоих случаях &amp;laquo;абсолютный путь&amp;raquo; означает URL, который не включает протокол или домен. Примеры:</target>
        </trans-unit>
        <trans-unit id="ad26be7567d5ea62f6cbf975fb69c51dd3b9c5ff" translate="yes" xml:space="preserve">
          <source>In case a template var (&lt;code&gt;myvar&lt;/code&gt; above) is passed to the tag, the tag will first resolve such variable to a string at run-time and then look up that string in the message catalogs.</source>
          <target state="translated">В случае, если шаблон var ( &lt;code&gt;myvar&lt;/code&gt; выше) передается тегу, тег сначала разрешает такую ​​переменную в строку во время выполнения, а затем ищет эту строку в каталогах сообщений.</target>
        </trans-unit>
        <trans-unit id="2ac2ff181891a9196cfcb6c36702ae8d31f48781" translate="yes" xml:space="preserve">
          <source>In case it is a callable, it accepts the model instance as a parameter. For example:</source>
          <target state="translated">В случае,если он является вызываемым,он принимает экземпляр модели в качестве параметра.Например:</target>
        </trans-unit>
        <trans-unit id="c754ae6f658d028d73d2c46131b5071580be6e76" translate="yes" xml:space="preserve">
          <source>In case you want to override a setting for a test method, Django provides the &lt;a href=&quot;#django.test.override_settings&quot;&gt;&lt;code&gt;override_settings()&lt;/code&gt;&lt;/a&gt; decorator (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0318&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 318&lt;/strong&gt;&lt;/a&gt;). It&amp;rsquo;s used like this:</source>
          <target state="translated">Если вы хотите переопределить настройку для тестового метода, Django предоставляет декоратор &lt;a href=&quot;#django.test.override_settings&quot;&gt; &lt;code&gt;override_settings()&lt;/code&gt; &lt;/a&gt; (см. &lt;a href=&quot;https://www.python.org/dev/peps/pep-0318&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 318&lt;/strong&gt;&lt;/a&gt; ). Используется так:</target>
        </trans-unit>
        <trans-unit id="14bf4df5347afc16b3429fb63cb4de3162b6824c" translate="yes" xml:space="preserve">
          <source>In case you want to refer to files in one of the locations with an additional namespace, you can &lt;strong&gt;optionally&lt;/strong&gt; provide a prefix as &lt;code&gt;(prefix, path)&lt;/code&gt; tuples, e.g.:</source>
          <target state="translated">Если вы хотите сослаться на файлы в одном из расположений с дополнительным пространством имен, вы можете &lt;strong&gt;дополнительно&lt;/strong&gt; указать префикс в виде кортежей &lt;code&gt;(prefix, path)&lt;/code&gt; , например:</target>
        </trans-unit>
        <trans-unit id="d992ed68ceac74ca140820c822217fa435f7818c" translate="yes" xml:space="preserve">
          <source>In case your custom field needs a special conversion when being saved that is not the same as the conversion used for normal query parameters, you can override &lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_db_prep_save&quot;&gt;&lt;code&gt;get_db_prep_save()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Если ваше пользовательское поле требует специального преобразования при сохранении, которое отличается от преобразования, используемого для обычных параметров запроса, вы можете переопределить &lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_db_prep_save&quot;&gt; &lt;code&gt;get_db_prep_save()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e7465849737f4a0d865ae26d03454c4d9bb925c5" translate="yes" xml:space="preserve">
          <source>In case your model defines a range using two fields, instead of the native PostgreSQL range types, you should write an expression that uses the equivalent function (e.g. &lt;code&gt;TsTzRange()&lt;/code&gt;), and use the delimiters for the field. Most often, the delimiters will be &lt;code&gt;'[)'&lt;/code&gt;, meaning that the lower bound is inclusive and the upper bound is exclusive. You may use the &lt;a href=&quot;fields#django.contrib.postgres.fields.RangeBoundary&quot;&gt;&lt;code&gt;RangeBoundary&lt;/code&gt;&lt;/a&gt; that provides an expression mapping for the &lt;a href=&quot;https://www.postgresql.org/docs/current/rangetypes.html#RANGETYPES-INCLUSIVITY&quot;&gt;range boundaries&lt;/a&gt;. For example:</source>
          <target state="translated">Если ваша модель определяет диапазон, используя два поля, вместо собственных типов диапазонов PostgreSQL, вы должны написать выражение, которое использует эквивалентную функцию (например, &lt;code&gt;TsTzRange()&lt;/code&gt; ), и использовать разделители для поля. Чаще всего разделителями будут &lt;code&gt;'[)'&lt;/code&gt; , что означает, что нижняя граница является включающей, а верхняя - исключительной. Вы можете использовать &lt;a href=&quot;fields#django.contrib.postgres.fields.RangeBoundary&quot;&gt; &lt;code&gt;RangeBoundary&lt;/code&gt; ,&lt;/a&gt; который обеспечивает отображение выражения для &lt;a href=&quot;https://www.postgresql.org/docs/current/rangetypes.html#RANGETYPES-INCLUSIVITY&quot;&gt;границ диапазона&lt;/a&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="051cd6e750abe4a0440743fc7195e3b28df1345b" translate="yes" xml:space="preserve">
          <source>In cases 1 and 2, the value of the &lt;code&gt;backend&lt;/code&gt; argument or the &lt;code&gt;user.backend&lt;/code&gt; attribute should be a dotted import path string (like that found in &lt;a href=&quot;../../ref/settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt;&lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt;&lt;/a&gt;), not the actual backend class.</source>
          <target state="translated">В случаях 1 и 2 значение аргумента &lt;code&gt;backend&lt;/code&gt; или атрибута &lt;code&gt;user.backend&lt;/code&gt; должно быть пунктирной строкой пути импорта (как это найдено в &lt;a href=&quot;../../ref/settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt; &lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt; &lt;/a&gt; ), а не фактическим классом бэкэнда.</target>
        </trans-unit>
        <trans-unit id="d8468a1c5eceb7ad498210c570f09ce1a370656f" translate="yes" xml:space="preserve">
          <source>In contrast to &lt;a href=&quot;#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; objects, which are created automatically by Django, &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; objects are your responsibility. Each view you write is responsible for instantiating, populating, and returning an &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">В отличие &lt;a href=&quot;#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt; объектов HttpRequest , которые автоматически создаются Django, объекты &lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; являются вашей ответственностью. Каждое написанное вами представление отвечает за создание, заполнение и возврат &lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f060f555e740ac3beb8b7312bc9eac7c1f9e16bd" translate="yes" xml:space="preserve">
          <source>In detail, Django automatically opens a connection to the database whenever it needs one and doesn&amp;rsquo;t have one already &amp;mdash; either because this is the first connection, or because the previous connection was closed.</source>
          <target state="translated">Подробно, Django автоматически открывает соединение с базой данных, когда оно ему нужно, и не имеет его уже - либо потому, что это первое соединение, либо потому что предыдущее соединение было закрыто.</target>
        </trans-unit>
        <trans-unit id="34d24d63eafec4abb1397d46acb8a0d53758ad7a" translate="yes" xml:space="preserve">
          <source>In each of these places, the language preference is expected to be in the standard &lt;a href=&quot;index#term-language-code&quot;&gt;language format&lt;/a&gt;, as a string. For example, Brazilian Portuguese is &lt;code&gt;pt-br&lt;/code&gt;.</source>
          <target state="translated">В каждом из этих мест предпочтение отдается языку в стандартном &lt;a href=&quot;index#term-language-code&quot;&gt;языковом формате&lt;/a&gt; в виде строки. Например, бразильский португальский - &lt;code&gt;pt-br&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8cd7c1e1e4252d27a4de97d1e3a8a42f6ba5b40c" translate="yes" xml:space="preserve">
          <source>In either case, using only one style within a given regex is recommended. When both styles are mixed, any unnamed groups are ignored and only named groups are passed to the view function.</source>
          <target state="translated">В любом случае,рекомендуется использовать только один стиль в данном регексе.При смешивании обоих стилей любые неназванные группы игнорируются и в функцию просмотра передаются только именованные группы.</target>
        </trans-unit>
        <trans-unit id="eca740cfe82332cf351f75edde40f7eee9f36561" translate="yes" xml:space="preserve">
          <source>In fact if your form is going to be used to directly add or edit a Django model, a &lt;a href=&quot;modelforms&quot;&gt;ModelForm&lt;/a&gt; can save you a great deal of time, effort, and code, because it will build a form, along with the appropriate fields and their attributes, from a &lt;code&gt;Model&lt;/code&gt; class.</source>
          <target state="translated">Фактически, если ваша форма будет использоваться для непосредственного добавления или редактирования модели Django, &lt;a href=&quot;modelforms&quot;&gt;ModelForm&lt;/a&gt; может сэкономить вам много времени, усилий и кода, поскольку она создаст форму вместе с соответствующими полями и их атрибутами. из &lt;code&gt;Model&lt;/code&gt; класса.</target>
        </trans-unit>
        <trans-unit id="7d9a9c622b4c3cad5652ef1faa625de607bb2ed0" translate="yes" xml:space="preserve">
          <source>In fact, most lookups with &lt;code&gt;__abs&lt;/code&gt; could be implemented as range queries like this, and on most database backends it is likely to be more sensible to do so as you can make use of the indexes. However with PostgreSQL you may want to add an index on &lt;code&gt;abs(change)&lt;/code&gt; which would allow these queries to be very efficient.</source>
          <target state="translated">Фактически, большинство поисков с помощью &lt;code&gt;__abs&lt;/code&gt; могут быть реализованы в виде запросов диапазона, как это, и в большинстве серверных баз данных, вероятно, будет более разумным сделать это, так как вы можете использовать индексы. Однако в PostgreSQL вы можете добавить индекс &lt;code&gt;abs(change)&lt;/code&gt; который позволит этим запросам быть очень эффективными.</target>
        </trans-unit>
        <trans-unit id="adba40a949f571c0432f75912f911cb4408c8a50" translate="yes" xml:space="preserve">
          <source>In general constraints are &lt;strong&gt;not&lt;/strong&gt; checked during &lt;code&gt;full_clean()&lt;/code&gt;, and do not raise &lt;code&gt;ValidationError&lt;/code&gt;s. Rather you&amp;rsquo;ll get a database integrity error on &lt;code&gt;save()&lt;/code&gt;. &lt;code&gt;UniqueConstraint&lt;/code&gt;s without a &lt;a href=&quot;#django.db.models.UniqueConstraint.condition&quot;&gt;&lt;code&gt;condition&lt;/code&gt;&lt;/a&gt; (i.e. non-partial unique constraints) are different in this regard, in that they leverage the existing &lt;code&gt;validate_unique()&lt;/code&gt; logic, and thus enable two-stage validation. In addition to &lt;code&gt;IntegrityError&lt;/code&gt; on &lt;code&gt;save()&lt;/code&gt;, &lt;code&gt;ValidationError&lt;/code&gt; is also raised during model validation when the &lt;code&gt;UniqueConstraint&lt;/code&gt; is violated.</source>
          <target state="translated">В общем случае ограничения &lt;strong&gt;не&lt;/strong&gt; проверяются во время &lt;code&gt;full_clean()&lt;/code&gt; и не вызывают ошибки &lt;code&gt;ValidationError&lt;/code&gt; . Скорее вы получите ошибку целостности базы данных при &lt;code&gt;save()&lt;/code&gt; . &lt;code&gt;UniqueConstraint&lt;/code&gt; без &lt;a href=&quot;#django.db.models.UniqueConstraint.condition&quot;&gt; &lt;code&gt;condition&lt;/code&gt; &lt;/a&gt; (то есть не частичные уникальные ограничения) отличаются в этом отношении тем, что они используют существующую логику &lt;code&gt;validate_unique()&lt;/code&gt; и, таким образом, обеспечивают двухэтапную проверку. В дополнение к &lt;code&gt;IntegrityError&lt;/code&gt; для &lt;code&gt;save()&lt;/code&gt; , &lt;code&gt;ValidationError&lt;/code&gt; также возникает во время проверки модели при &lt;code&gt;UniqueConstraint&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="209edf2940165c6cc1a875e5298008997ec85e40" translate="yes" xml:space="preserve">
          <source>In general, &lt;code&gt;Q() objects&lt;/code&gt; make it possible to define and reuse conditions. This permits the &lt;a href=&quot;../../topics/db/queries#complex-lookups-with-q&quot;&gt;construction of complex database queries&lt;/a&gt; using &lt;code&gt;|&lt;/code&gt; (&lt;code&gt;OR&lt;/code&gt;) and &lt;code&gt;&amp;amp;&lt;/code&gt; (&lt;code&gt;AND&lt;/code&gt;) operators; in particular, it is not otherwise possible to use &lt;code&gt;OR&lt;/code&gt; in &lt;code&gt;QuerySets&lt;/code&gt;.</source>
          <target state="translated">В общем, &lt;code&gt;Q() objects&lt;/code&gt; позволяют определять и повторно использовать условия. Это позволяет &lt;a href=&quot;../../topics/db/queries#complex-lookups-with-q&quot;&gt;строить сложные запросы к базе данных,&lt;/a&gt; используя &lt;code&gt;|&lt;/code&gt; ( &lt;code&gt;OR&lt;/code&gt; ) и &lt;code&gt;&amp;amp;&lt;/code&gt; ( &lt;code&gt;AND&lt;/code&gt; ) операторы; в частности, иначе нельзя использовать &lt;code&gt;OR&lt;/code&gt; в &lt;code&gt;QuerySets&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a6c3985cf74933843dd741b4b15c88efa849cde0" translate="yes" xml:space="preserve">
          <source>In general, GeoDjango installation requires:</source>
          <target state="translated">В целом,установка GeoDjango необходима:</target>
        </trans-unit>
        <trans-unit id="509d11594c50dfe8712d4434d7a4afdf6b8e5098" translate="yes" xml:space="preserve">
          <source>In general, any cleaning method can raise &lt;code&gt;ValidationError&lt;/code&gt; if there is a problem with the data it is processing, passing the relevant information to the &lt;code&gt;ValidationError&lt;/code&gt; constructor. &lt;a href=&quot;#raising-validation-error&quot;&gt;See below&lt;/a&gt; for the best practice in raising &lt;code&gt;ValidationError&lt;/code&gt;. If no &lt;code&gt;ValidationError&lt;/code&gt; is raised, the method should return the cleaned (normalized) data as a Python object.</source>
          <target state="translated">В общем, любой метод очистки может вызвать &lt;code&gt;ValidationError&lt;/code&gt; , если есть проблема с данными, которые он обрабатывает, передав соответствующую информацию конструктору &lt;code&gt;ValidationError&lt;/code&gt; . &lt;a href=&quot;#raising-validation-error&quot;&gt;Ниже&lt;/a&gt; приведены рекомендации по повышению &lt;code&gt;ValidationError&lt;/code&gt; . Если &lt;code&gt;ValidationError&lt;/code&gt; не вызывается, метод должен вернуть очищенные (нормализованные) данные в виде объекта Python.</target>
        </trans-unit>
        <trans-unit id="aff7eda262832443cdc4cfd621b6e572d84270a0" translate="yes" xml:space="preserve">
          <source>In general, it is enough to define &lt;a href=&quot;#django.template.loaders.base.Loader.get_template_sources&quot;&gt;&lt;code&gt;get_template_sources()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.template.loaders.base.Loader.get_contents&quot;&gt;&lt;code&gt;get_contents()&lt;/code&gt;&lt;/a&gt; for custom template loaders. &lt;code&gt;get_template()&lt;/code&gt; will usually not need to be overridden.</source>
          <target state="translated">В общем, для пользовательских загрузчиков шаблонов достаточно определить &lt;a href=&quot;#django.template.loaders.base.Loader.get_template_sources&quot;&gt; &lt;code&gt;get_template_sources()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#django.template.loaders.base.Loader.get_contents&quot;&gt; &lt;code&gt;get_contents()&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;get_template()&lt;/code&gt; обычно не нужно переопределять.</target>
        </trans-unit>
        <trans-unit id="b162efee794bcad06a96b812cb84dc6a654ea12a" translate="yes" xml:space="preserve">
          <source>In general, the library path may be set on a per-user basis by setting an environment variable, or by configuring the library path for the entire system.</source>
          <target state="translated">В общем случае,путь к библиотеке может быть задан для каждого пользователя путем установки переменной окружения,или путем настройки пути к библиотеке для всей системы.</target>
        </trans-unit>
        <trans-unit id="f02826e5404756fbfee9b9f4d13058259e858ef3" translate="yes" xml:space="preserve">
          <source>In higher level code related to handling of URLs of Django model instances: The &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.get_absolute_url&quot;&gt;&lt;code&gt;get_absolute_url()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">В коде более высокого уровня, связанном с обработкой URL-адресов экземпляров модели Django: метод &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.get_absolute_url&quot;&gt; &lt;code&gt;get_absolute_url()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0325acb3dd5bb25e96712e073ccf8beac6d4f214" translate="yes" xml:space="preserve">
          <source>In its simplest form &lt;code&gt;Prefetch&lt;/code&gt; is equivalent to the traditional string based lookups:</source>
          <target state="translated">В своей простейшей форме &lt;code&gt;Prefetch&lt;/code&gt; эквивалентен традиционным поискам на основе строк:</target>
        </trans-unit>
        <trans-unit id="74628a3f6d1c7feffe7469a9ab6311bf142ff0b9" translate="yes" xml:space="preserve">
          <source>In larger templates, this technique helps you see which &lt;code&gt;{% block %}&lt;/code&gt; tags are being closed.</source>
          <target state="translated">В больших шаблонах этот метод помогает увидеть, какие теги &lt;code&gt;{% block %}&lt;/code&gt; закрыты.</target>
        </trans-unit>
        <trans-unit id="e5e38ef2b3710d00983de8113dd8ab5592914bbb" translate="yes" xml:space="preserve">
          <source>In lieu of the above approach which requires duplicating methods on both the &lt;code&gt;QuerySet&lt;/code&gt; and the &lt;code&gt;Manager&lt;/code&gt;, &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.as_manager&quot;&gt;&lt;code&gt;QuerySet.as_manager()&lt;/code&gt;&lt;/a&gt; can be used to create an instance of &lt;code&gt;Manager&lt;/code&gt; with a copy of a custom &lt;code&gt;QuerySet&lt;/code&gt;&amp;rsquo;s methods:</source>
          <target state="translated">Вместо вышеупомянутого подхода, который требует дублирования методов как в &lt;code&gt;QuerySet&lt;/code&gt; ,так и в &lt;code&gt;Manager&lt;/code&gt; , &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.as_manager&quot;&gt; &lt;code&gt;QuerySet.as_manager()&lt;/code&gt; &lt;/a&gt; можно использовать для создания экземпляра &lt;code&gt;Manager&lt;/code&gt; с копией пользовательских методов &lt;code&gt;QuerySet&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="892885cde16dca9d450a49f5544282693afce6a6" translate="yes" xml:space="preserve">
          <source>In models, a field is instantiated as a class attribute and represents a particular table column, see &lt;a href=&quot;../../topics/db/models&quot;&gt;Models&lt;/a&gt;. It has attributes such as &lt;a href=&quot;#django.db.models.Field.null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.db.models.Field.unique&quot;&gt;&lt;code&gt;unique&lt;/code&gt;&lt;/a&gt;, and methods that Django uses to map the field value to database-specific values.</source>
          <target state="translated">В моделях поле создается как атрибут класса и представляет определенный столбец таблицы, см. &lt;a href=&quot;../../topics/db/models&quot;&gt;Модели&lt;/a&gt; . У него есть такие атрибуты, как &lt;a href=&quot;#django.db.models.Field.null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#django.db.models.Field.unique&quot;&gt; &lt;code&gt;unique&lt;/code&gt; &lt;/a&gt; , и методы, которые Django использует для сопоставления значения поля с конкретными значениями базы данных.</target>
        </trans-unit>
        <trans-unit id="c049c4f3a733196872767a3d6e8373dbf1a9e8d8" translate="yes" xml:space="preserve">
          <source>In most cases it will be necessary to upgrade to the latest version of your Django-related dependencies as well. If the Django version was recently released or if some of your dependencies are not well-maintained, some of your dependencies may not yet support the new Django version. In these cases you may have to wait until new versions of your dependencies are released.</source>
          <target state="translated">В большинстве случаев необходимо будет также обновиться до последней версии зависимостей,связанных с Django.Если версия Django была выпущена недавно или некоторые из Ваших зависимостей не поддерживаются должным образом,некоторые из них могут еще не поддерживать новую версию Django.В этих случаях Вам,возможно,придется подождать,пока не выйдут новые версии Ваших зависимостей.</target>
        </trans-unit>
        <trans-unit id="2553c57b09242581a803e6aacbe2b851d277b3d0" translate="yes" xml:space="preserve">
          <source>In most cases overriding or inheriting &lt;code&gt;get_FOO_display()&lt;/code&gt;, &lt;code&gt;get_next_by_FOO()&lt;/code&gt;, and &lt;code&gt;get_previous_by_FOO()&lt;/code&gt; should work as expected. Since they are added by the metaclass however, it is not practical to account for all possible inheritance structures. In more complex cases you should override &lt;code&gt;Field.contribute_to_class()&lt;/code&gt; to set the methods you need.</source>
          <target state="translated">В большинстве случаев переопределение или наследование &lt;code&gt;get_FOO_display()&lt;/code&gt; , &lt;code&gt;get_next_by_FOO()&lt;/code&gt; и &lt;code&gt;get_previous_by_FOO()&lt;/code&gt; должно работать как положено. Однако поскольку они добавляются метаклассом, нецелесообразно учитывать все возможные структуры наследования. В более сложных случаях вы должны переопределить &lt;code&gt;Field.contribute_to_class()&lt;/code&gt; чтобы установить нужные вам методы.</target>
        </trans-unit>
        <trans-unit id="46ee957bac7e253d4620f33ab4a0b3981905456a" translate="yes" xml:space="preserve">
          <source>In most cases when Django is dealing with strings, it will convert them to strings before doing anything else. So, as a general rule, if you pass in a bytestring, be prepared to receive a string back in the result.</source>
          <target state="translated">В большинстве случаев,когда Django имеет дело со строками,он преобразует их в строки,прежде чем делать что-либо еще.Поэтому,как правило,если вы передаете в байтстринге,будьте готовы получить в результате обратно строку.</target>
        </trans-unit>
        <trans-unit id="acee6b59fd13a3ca3fe85dc3b662ea33a0c91494" translate="yes" xml:space="preserve">
          <source>In most cases, Django can automatically detect and set this, but you can also provide an explicit override as a class attribute on your &lt;a href=&quot;#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; subclass. In a few situations this is required; for instance if the app package is a &lt;a href=&quot;#namespace-package&quot;&gt;namespace package&lt;/a&gt; with multiple paths.</source>
          <target state="translated">В большинстве случаев Django может автоматически обнаружить и установить это, но вы также можете предоставить явное переопределение в качестве атрибута класса в своем подклассе &lt;a href=&quot;#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt; . В некоторых ситуациях это требуется; например, если пакет приложения представляет собой &lt;a href=&quot;#namespace-package&quot;&gt;пакет пространства имен&lt;/a&gt; с несколькими путями.</target>
        </trans-unit>
        <trans-unit id="4e12dbf6f96ad8979888b66a156e04c3569721e6" translate="yes" xml:space="preserve">
          <source>In most cases, for a patch to be accepted into Django it has to include tests. For bug fix patches, this means writing a regression test to ensure that the bug is never reintroduced into Django later on. A regression test should be written in such a way that it will fail while the bug still exists and pass once the bug has been fixed. For patches containing new features, you&amp;rsquo;ll need to include tests which ensure that the new features are working correctly. They too should fail when the new feature is not present, and then pass once it has been implemented.</source>
          <target state="translated">В большинстве случаев для принятия патча в Django он должен включать тесты. Для исправлений ошибок это означает написание регрессионного теста, чтобы гарантировать, что ошибка никогда не будет повторно введена в Django позже. Регрессионный тест должен быть написан таким образом, чтобы он не прошел, пока ошибка все еще существует, и прошел, как только ошибка была исправлена. Для исправлений, содержащих новые функции, вам необходимо включить тесты, которые гарантируют, что новые функции работают правильно. Они также должны потерпеть неудачу, когда новая функция отсутствует, и затем пройти, как только она будет реализована.</target>
        </trans-unit>
        <trans-unit id="d63a9dd51c8abf1805656df5834de22fb54d2d48" translate="yes" xml:space="preserve">
          <source>In most cases, inheriting from this mixin will be sufficient to make an old-style middleware compatible with the new system with sufficient backwards-compatibility. The new short-circuiting semantics will be harmless or even beneficial to the existing middleware. In a few cases, a middleware class may need some changes to adjust to the new semantics.</source>
          <target state="translated">В большинстве случаев,унаследования от этого микса будет достаточно для того,чтобы сделать старое промежуточное ПО совместимым с новой системой с достаточной обратной совместимостью.Новая семантика короткого замыкания будет безвредна или даже полезна для существующего промежуточного программного обеспечения.В некоторых случаях классу промежуточного программного обеспечения могут потребоваться некоторые изменения,чтобы приспособиться к новой семантике.</target>
        </trans-unit>
        <trans-unit id="d9d0c45a9a5c2988974b76f45606b7b5230c0954" translate="yes" xml:space="preserve">
          <source>In most cases, it&amp;rsquo;s best to use translated URLs only within a language code prefixed block of patterns (using &lt;a href=&quot;#django.conf.urls.i18n.i18n_patterns&quot;&gt;&lt;code&gt;i18n_patterns()&lt;/code&gt;&lt;/a&gt;), to avoid the possibility that a carelessly translated URL causes a collision with a non-translated URL pattern.</source>
          <target state="translated">В большинстве случаев лучше использовать переведенные URL-адреса только в пределах блока шаблонов с префиксом языкового кода (используя &lt;a href=&quot;#django.conf.urls.i18n.i18n_patterns&quot;&gt; &lt;code&gt;i18n_patterns()&lt;/code&gt; &lt;/a&gt; ), чтобы избежать вероятности того, что небрежно переведенный URL-адрес вызовет конфликт с непереведенным шаблоном URL-адреса.</target>
        </trans-unit>
        <trans-unit id="53ae97a84b8d45f7667a00362e01147ed1582f6c" translate="yes" xml:space="preserve">
          <source>In most cases, the field will have a sensible default widget. For example, by default, a &lt;a href=&quot;../../ref/forms/fields#django.forms.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; will have a &lt;a href=&quot;../../ref/forms/widgets#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt; widget, that produces an &lt;code&gt;&amp;lt;input type=&quot;text&quot;&amp;gt;&lt;/code&gt; in the HTML. If you needed &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; instead, you&amp;rsquo;d specify the appropriate widget when defining your form field, as we have done for the &lt;code&gt;message&lt;/code&gt; field.</source>
          <target state="translated">В большинстве случаев поле будет иметь разумный виджет по умолчанию. Например, по умолчанию &lt;a href=&quot;../../ref/forms/fields#django.forms.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt; будет иметь виджет &lt;a href=&quot;../../ref/forms/widgets#django.forms.TextInput&quot;&gt; &lt;code&gt;TextInput&lt;/code&gt; &lt;/a&gt; , который создает &lt;code&gt;&amp;lt;input type=&quot;text&quot;&amp;gt;&lt;/code&gt; в HTML. Если вам нужно &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; вместо этого, вы зададите соответствующий виджет при определении поля формы, как мы сделали для поля &lt;code&gt;message&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6eb548d924e6f442368c56b8245c2ffe7a95f69e" translate="yes" xml:space="preserve">
          <source>In most cases, this object will not have been saved to the database yet, so if it uses the default &lt;code&gt;AutoField&lt;/code&gt;, &lt;em&gt;it might not yet have a value for its primary key field&lt;/em&gt;.</source>
          <target state="translated">В большинстве случаев этот объект еще не был сохранен в базе данных, поэтому, если он использует &lt;code&gt;AutoField&lt;/code&gt; по умолчанию , &lt;em&gt;он может еще не иметь значения для своего поля первичного ключа&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="553a3a820227d2b61d89c93a4f51644a0ad682a2" translate="yes" xml:space="preserve">
          <source>In most cases, you can send email using &lt;code&gt;django.core.mail.send_mail()&lt;/code&gt;.</source>
          <target state="translated">В большинстве случаев вы можете отправлять электронную почту, используя &lt;code&gt;django.core.mail.send_mail()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb9e461a8cfdfc6e585763268faa61b1594df5ef" translate="yes" xml:space="preserve">
          <source>In non-interactive mode, the &lt;a href=&quot;../topics/auth/customizing#django.contrib.auth.models.CustomUser.USERNAME_FIELD&quot;&gt;&lt;code&gt;USERNAME_FIELD&lt;/code&gt;&lt;/a&gt; and required fields (listed in &lt;a href=&quot;../topics/auth/customizing#django.contrib.auth.models.CustomUser.REQUIRED_FIELDS&quot;&gt;&lt;code&gt;REQUIRED_FIELDS&lt;/code&gt;&lt;/a&gt;) fall back to &lt;code&gt;DJANGO_SUPERUSER_&amp;lt;uppercase_field_name&amp;gt;&lt;/code&gt; environment variables, unless they are overridden by a command line argument. For example, to provide an &lt;code&gt;email&lt;/code&gt; field, you can use &lt;code&gt;DJANGO_SUPERUSER_EMAIL&lt;/code&gt; environment variable.</source>
          <target state="translated">В неинтерактивном режиме &lt;a href=&quot;../topics/auth/customizing#django.contrib.auth.models.CustomUser.USERNAME_FIELD&quot;&gt; &lt;code&gt;USERNAME_FIELD&lt;/code&gt; &lt;/a&gt; и обязательные поля (перечисленные в &lt;a href=&quot;../topics/auth/customizing#django.contrib.auth.models.CustomUser.REQUIRED_FIELDS&quot;&gt; &lt;code&gt;REQUIRED_FIELDS&lt;/code&gt; &lt;/a&gt; ) возвращаются к переменным среды &lt;code&gt;DJANGO_SUPERUSER_&amp;lt;uppercase_field_name&amp;gt;&lt;/code&gt; , если они не переопределяются аргументом командной строки. Например, чтобы &lt;code&gt;DJANGO_SUPERUSER_EMAIL&lt;/code&gt; поле &lt;code&gt;email&lt;/code&gt; , вы можете использовать переменную окружения DJANGO_SUPERUSER_EMAIL .</target>
        </trans-unit>
        <trans-unit id="e811dedb04c04b0db2eb92ba335a09921c544b79" translate="yes" xml:space="preserve">
          <source>In normal Python class inheritance, it is permissible for a child class to override any attribute from the parent class. In Django, this isn&amp;rsquo;t usually permitted for model fields. If a non-abstract model base class has a field called &lt;code&gt;author&lt;/code&gt;, you can&amp;rsquo;t create another model field or define an attribute called &lt;code&gt;author&lt;/code&gt; in any class that inherits from that base class.</source>
          <target state="translated">В обычном наследовании классов Python дочернему классу разрешено переопределять любой атрибут родительского класса. В Django это обычно не разрешается для полей модели. Если у неабстрактного базового класса модели есть поле с именем &lt;code&gt;author&lt;/code&gt; , вы не можете создать другое поле модели или определить атрибут с именем &lt;code&gt;author&lt;/code&gt; в любом классе, который наследуется от этого базового класса.</target>
        </trans-unit>
        <trans-unit id="9ba287b42f73a012193a36b795923c8fa6f96a7d" translate="yes" xml:space="preserve">
          <source>In older versions of Django, be careful when reusing Django&amp;rsquo;s built-in filters as &lt;code&gt;autoescape&lt;/code&gt; defaults to &lt;code&gt;None&lt;/code&gt;. You&amp;rsquo;ll need to pass &lt;code&gt;autoescape=True&lt;/code&gt; to get autoescaping.</source>
          <target state="translated">В старых версиях Django будьте осторожны при повторном использовании встроенных фильтров Django, так как &lt;code&gt;autoescape&lt;/code&gt; умолчанию для autoescape установлено значение &lt;code&gt;None&lt;/code&gt; . Вам нужно будет передать &lt;code&gt;autoescape=True&lt;/code&gt; , чтобы получить автоэкранирование.</target>
        </trans-unit>
        <trans-unit id="48487eecdf3392dca8cdac3e20e02c45e851f71c" translate="yes" xml:space="preserve">
          <source>In older versions, &lt;code&gt;'&lt;/code&gt; is converted to its decimal code &lt;code&gt;&amp;amp;#39;&lt;/code&gt; instead of the equivalent hex code &lt;code&gt;&amp;amp;#x27;&lt;/code&gt;.</source>
          <target state="translated">В старых версиях &lt;code&gt;'&lt;/code&gt; преобразуется в десятичный код &lt;code&gt;&amp;amp;#39;&lt;/code&gt; вместо эквивалентного шестнадцатеричного кода &lt;code&gt;&amp;amp;#x27;&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="ad59f8bbf153ed815b532a2f6dd98471ff133b44" translate="yes" xml:space="preserve">
          <source>In older versions, &lt;code&gt;True&lt;/code&gt; was returned for &lt;a href=&quot;#django.forms.FileInput&quot;&gt;&lt;code&gt;FileInput&lt;/code&gt;&lt;/a&gt; when &lt;code&gt;initial&lt;/code&gt; was set.</source>
          <target state="translated">В более старых версиях &lt;code&gt;True&lt;/code&gt; возвращалось для &lt;a href=&quot;#django.forms.FileInput&quot;&gt; &lt;code&gt;FileInput&lt;/code&gt; &lt;/a&gt; при установке &lt;code&gt;initial&lt;/code&gt; значения.</target>
        </trans-unit>
        <trans-unit id="a594579463454aa6c5f1d126c4933adb9501ac81" translate="yes" xml:space="preserve">
          <source>In older versions, &lt;code&gt;s&lt;/code&gt; may be a bytestring.</source>
          <target state="translated">В более старых версиях &lt;code&gt;s&lt;/code&gt; может быть строкой байтов.</target>
        </trans-unit>
        <trans-unit id="06abe09565f7ebaaa5a5a3e66eecce8b6a0e1ba2" translate="yes" xml:space="preserve">
          <source>In older versions, MySQL uses &lt;code&gt;MBRContains&lt;/code&gt; and operates only on bounding boxes.</source>
          <target state="translated">В более старых версиях MySQL использует &lt;code&gt;MBRContains&lt;/code&gt; и работает только с ограничивающими рамками.</target>
        </trans-unit>
        <trans-unit id="86fdacbc12f0c3ada37ced324655c76230d31333" translate="yes" xml:space="preserve">
          <source>In older versions, MySQL uses &lt;code&gt;MBRDisjoint&lt;/code&gt; and operates only on bounding boxes.</source>
          <target state="translated">В более старых версиях MySQL использует &lt;code&gt;MBRDisjoint&lt;/code&gt; и работает только с ограничивающими рамками.</target>
        </trans-unit>
        <trans-unit id="a250c6c4d5ddf0ab4e264cb2589304887da56d37" translate="yes" xml:space="preserve">
          <source>In older versions, MySQL uses &lt;code&gt;MBREquals&lt;/code&gt; and operates only on bounding boxes.</source>
          <target state="translated">В более старых версиях MySQL использует &lt;code&gt;MBREquals&lt;/code&gt; и работает только с ограничивающими рамками.</target>
        </trans-unit>
        <trans-unit id="3d30b1f38b6febfe720406653832214a3cd66396" translate="yes" xml:space="preserve">
          <source>In older versions, MySQL uses &lt;code&gt;MBRIntersects&lt;/code&gt; and operates only on bounding boxes.</source>
          <target state="translated">В более старых версиях MySQL использует &lt;code&gt;MBRIntersects&lt;/code&gt; и работает только с ограничивающими рамками.</target>
        </trans-unit>
        <trans-unit id="a108605efc0a5748e8093c6df53458e3fc931cff" translate="yes" xml:space="preserve">
          <source>In older versions, MySQL uses &lt;code&gt;MBROverlaps&lt;/code&gt; and operates only on bounding boxes.</source>
          <target state="translated">В более старых версиях MySQL использует &lt;code&gt;MBROverlaps&lt;/code&gt; и работает только с ограничивающими рамками.</target>
        </trans-unit>
        <trans-unit id="6a423185ebb0542b517af591a286bdfe336b4ccb" translate="yes" xml:space="preserve">
          <source>In older versions, MySQL uses &lt;code&gt;MBRTouches&lt;/code&gt; and operates only on bounding boxes.</source>
          <target state="translated">В более старых версиях MySQL использует &lt;code&gt;MBRTouches&lt;/code&gt; и работает только с ограничивающими рамками.</target>
        </trans-unit>
        <trans-unit id="e454d7f81ea9b0f64b3dcee0ba1d27440f516a6e" translate="yes" xml:space="preserve">
          <source>In older versions, MySQL uses &lt;code&gt;MBRWithin&lt;/code&gt; and operates only on bounding boxes.</source>
          <target state="translated">В более старых версиях MySQL использует &lt;code&gt;MBRWithin&lt;/code&gt; и работает только с ограничивающими рамками.</target>
        </trans-unit>
        <trans-unit id="8fd7673044991a0b322632f8e9ea866e0901e9d1" translate="yes" xml:space="preserve">
          <source>In older versions, a negative zero &lt;code&gt;-0&lt;/code&gt; was returned for negative numbers which round to zero.</source>
          <target state="translated">В более старых версиях для отрицательных чисел, округляемых до нуля, возвращался отрицательный ноль &lt;code&gt;-0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="04c471d6170a640a7f0b0a6b5d86ad526b15aeb8" translate="yes" xml:space="preserve">
          <source>In older versions, it returns a bytestring instead of a string.</source>
          <target state="translated">В старых версиях он возвращает байтстринг вместо строки.</target>
        </trans-unit>
        <trans-unit id="e77f0794cc34eae167668fa46edcdb855f41b6ef" translate="yes" xml:space="preserve">
          <source>In older versions, permissions for proxy models use the content type of the concrete model rather than content type of the proxy model.</source>
          <target state="translated">В более старых версиях разрешения для прокси-моделей используют тип контента конкретной модели,а не тип контента прокси-модели.</target>
        </trans-unit>
        <trans-unit id="c3ee96d228df4d2c97001f389d45ba85fe666ff6" translate="yes" xml:space="preserve">
          <source>In older versions, proxy models use the content type of the concrete model.</source>
          <target state="translated">В более старых версиях прокси-модели используют тип содержимого конкретной модели.</target>
        </trans-unit>
        <trans-unit id="83f79b94fd4d38f0c3bbad3802efe29f7e0d5b34" translate="yes" xml:space="preserve">
          <source>In older versions, the &lt;code&gt;max-age&lt;/code&gt; directive from the &lt;code&gt;Cache-Control&lt;/code&gt; header had precedence over the cache timeout set by &lt;code&gt;cache_page&lt;/code&gt;.</source>
          <target state="translated">В более старых версиях директива &lt;code&gt;max-age&lt;/code&gt; из заголовка &lt;code&gt;Cache-Control&lt;/code&gt; имела приоритет над тайм-аутом кеша, установленным &lt;code&gt;cache_page&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb39b75e03f33a4e72cf13d13c8cf8133f783eb6" translate="yes" xml:space="preserve">
          <source>In older versions, the &lt;code&gt;tzinfo&lt;/code&gt; attribute is a &lt;a href=&quot;#django.utils.timezone.FixedOffset&quot;&gt;&lt;code&gt;FixedOffset&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">В более старых версиях атрибут &lt;code&gt;tzinfo&lt;/code&gt; является экземпляром &lt;a href=&quot;#django.utils.timezone.FixedOffset&quot;&gt; &lt;code&gt;FixedOffset&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7fd83cf3fc3c18973ca72e95305a6b3f72906774" translate="yes" xml:space="preserve">
          <source>In older versions, the default is a list containing also date-only formats.</source>
          <target state="translated">В более старых версиях по умолчанию используется список,содержащий также форматы только для данных.</target>
        </trans-unit>
        <trans-unit id="688ca5f2699bc44de7ce8a06a72f66e4061b7b2e" translate="yes" xml:space="preserve">
          <source>In older versions, the default value is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">В более старых версиях значение по умолчанию - &lt;code&gt;False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4239bf88dcd319d30aa682cbe4d3cde5d9664bc" translate="yes" xml:space="preserve">
          <source>In older versions, the default value is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">В более старых версиях значением по умолчанию является &lt;code&gt;None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce7d5574bd6957ee81720c428d128a45952d2924" translate="yes" xml:space="preserve">
          <source>In older versions, the default value is &lt;code&gt;SAMEORIGIN&lt;/code&gt;.</source>
          <target state="translated">В старых версиях по умолчанию используется значение &lt;code&gt;SAMEORIGIN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6cc69bdce16d1e99c5ef8c352ab414ffc039ac15" translate="yes" xml:space="preserve">
          <source>In older versions, the distinction for the fallback is based on whether the &lt;code&gt;X-Requested-With&lt;/code&gt; header is set to the value &lt;code&gt;XMLHttpRequest&lt;/code&gt;. This is set by the jQuery &lt;code&gt;ajax()&lt;/code&gt; method.</source>
          <target state="translated">В более старых версиях различие для отката зависит от того, установлен ли заголовок &lt;code&gt;X-Requested-With&lt;/code&gt; на значение &lt;code&gt;XMLHttpRequest&lt;/code&gt; . Это устанавливается методом jQuery &lt;code&gt;ajax()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d0bfa731b6114bdaa19c99d0b74ff78b5af90d4f" translate="yes" xml:space="preserve">
          <source>In older versions, the first &lt;code&gt;value&lt;/code&gt; element in the choice tuple is the &lt;code&gt;field&lt;/code&gt; value itself, rather than a &lt;code&gt;ModelChoiceIteratorValue&lt;/code&gt; instance. In most cases this proxies transparently but, if you need the &lt;code&gt;field&lt;/code&gt; value itself, use the &lt;a href=&quot;#django.forms.ModelChoiceIteratorValue.value&quot;&gt;&lt;code&gt;ModelChoiceIteratorValue.value&lt;/code&gt;&lt;/a&gt; attribute instead.</source>
          <target state="translated">В более старых версиях первым элементом &lt;code&gt;value&lt;/code&gt; в кортеже выбора является само значение &lt;code&gt;field&lt;/code&gt; , а не экземпляр &lt;code&gt;ModelChoiceIteratorValue&lt;/code&gt; . В большинстве случаев это прокси прозрачно, но если вам нужно само значение &lt;code&gt;field&lt;/code&gt; , используйте вместо &lt;a href=&quot;#django.forms.ModelChoiceIteratorValue.value&quot;&gt; &lt;code&gt;ModelChoiceIteratorValue.value&lt;/code&gt; &lt;/a&gt; атрибут ModelChoiceIteratorValue.value .</target>
        </trans-unit>
        <trans-unit id="66326a5c500f2e9b8f06b11645d2eb1a463f096a" translate="yes" xml:space="preserve">
          <source>In older versions, the keyword arguments with &lt;code&gt;None&lt;/code&gt; values are made up also for not provided named parts.</source>
          <target state="translated">В более старых версиях аргументы ключевого слова со значениями &lt;code&gt;None&lt;/code&gt; создаются также для не предоставленных именованных частей.</target>
        </trans-unit>
        <trans-unit id="be44bea554526db510067415e8c9fcb3f595c8bd" translate="yes" xml:space="preserve">
          <source>In older versions, you could set the language in the current session.</source>
          <target state="translated">В старых версиях вы можете установить язык в текущей сессии.</target>
        </trans-unit>
        <trans-unit id="ecde436d8369233ca2f3dcb9ab1ca79254f03cdf" translate="yes" xml:space="preserve">
          <source>In order for the &lt;code&gt;python manage.py migrate&lt;/code&gt; command to work, your Oracle database user must have privileges to run the following commands:</source>
          <target state="translated">Чтобы команда &lt;code&gt;python manage.py migrate&lt;/code&gt; работала, у пользователя базы данных Oracle должны быть права на запуск следующих команд:</target>
        </trans-unit>
        <trans-unit id="90fe772dd41ff482e0ce23d0eaa3b30a1fdefbce" translate="yes" xml:space="preserve">
          <source>In order for your filter to know the current auto-escaping state, set the &lt;code&gt;needs_autoescape&lt;/code&gt; flag to &lt;code&gt;True&lt;/code&gt; when you register your filter function. (If you don&amp;rsquo;t specify this flag, it defaults to &lt;code&gt;False&lt;/code&gt;). This flag tells Django that your filter function wants to be passed an extra keyword argument, called &lt;code&gt;autoescape&lt;/code&gt;, that is &lt;code&gt;True&lt;/code&gt; if auto-escaping is in effect and &lt;code&gt;False&lt;/code&gt; otherwise. It is recommended to set the default of the &lt;code&gt;autoescape&lt;/code&gt; parameter to &lt;code&gt;True&lt;/code&gt;, so that if you call the function from Python code it will have escaping enabled by default.</source>
          <target state="translated">Чтобы ваш фильтр знал текущее состояние автоматического экранирования, установите флаг &lt;code&gt;needs_autoescape&lt;/code&gt; на &lt;code&gt;True&lt;/code&gt; , когда вы регистрируете свою функцию фильтра. (Если вы не укажете этот флаг, по умолчанию используется значение &lt;code&gt;False&lt;/code&gt; ). Этот флаг сообщает Django, что вашей функции фильтра нужно передать дополнительный &lt;code&gt;autoescape&lt;/code&gt; аргумент, называемый autoescape , который имеет значение &lt;code&gt;True&lt;/code&gt; , если действует авто-экранирование, и &lt;code&gt;False&lt;/code&gt; в противном случае. Рекомендуется установить значение по умолчанию для параметра &lt;code&gt;autoescape&lt;/code&gt; равным &lt;code&gt;True&lt;/code&gt; , чтобы при вызове функции из кода Python экранирование было включено по умолчанию.</target>
        </trans-unit>
        <trans-unit id="11a387c8a9914108b9a7aabd974b6e6881a3bea5" translate="yes" xml:space="preserve">
          <source>In order to build a custom session engine or to customize an existing one, you may create a new class inheriting from &lt;a href=&quot;#django.contrib.sessions.backends.base.SessionBase&quot;&gt;&lt;code&gt;SessionBase&lt;/code&gt;&lt;/a&gt; or any other existing &lt;code&gt;SessionStore&lt;/code&gt; class.</source>
          <target state="translated">Для построения пользовательского сеанса двигателя или настроить существующую, вы можете создать новый класс , унаследованный от &lt;a href=&quot;#django.contrib.sessions.backends.base.SessionBase&quot;&gt; &lt;code&gt;SessionBase&lt;/code&gt; &lt;/a&gt; или любого другого существующего &lt;code&gt;SessionStore&lt;/code&gt; класса.</target>
        </trans-unit>
        <trans-unit id="f48a9537ae495f429e0a574bc2641d48124286ad" translate="yes" xml:space="preserve">
          <source>In order to configure logging, you use &lt;a href=&quot;../ref/settings#std:setting-LOGGING&quot;&gt;&lt;code&gt;LOGGING&lt;/code&gt;&lt;/a&gt; to define a dictionary of logging settings. These settings describes the loggers, handlers, filters and formatters that you want in your logging setup, and the log levels and other properties that you want those components to have.</source>
          <target state="translated">Чтобы настроить ведение журнала, вы используете &lt;a href=&quot;../ref/settings#std:setting-LOGGING&quot;&gt; &lt;code&gt;LOGGING&lt;/code&gt; &lt;/a&gt; для определения словаря настроек ведения журнала. Эти параметры описывают средства ведения журнала, обработчики, фильтры и средства форматирования, которые вы хотите использовать в настройках ведения журнала, а также уровни журналов и другие свойства, которые должны иметь эти компоненты.</target>
        </trans-unit>
        <trans-unit id="42b3fc106c92756d794366455faac3a83dc515a5" translate="yes" xml:space="preserve">
          <source>In order to do that you can check the database connection&amp;rsquo;s alias inside a &lt;code&gt;RunPython&lt;/code&gt; operation by looking at the &lt;code&gt;schema_editor.connection.alias&lt;/code&gt; attribute:</source>
          <target state="translated">Для этого вы можете проверить псевдоним соединения с базой данных внутри операции &lt;code&gt;RunPython&lt;/code&gt; , посмотрев атрибут &lt;code&gt;schema_editor.connection.alias&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="61d52591f027c8771ad5ddae66ce22631a8a19bc" translate="yes" xml:space="preserve">
          <source>In order to fully serialize your &lt;code&gt;Restaurant&lt;/code&gt; instances, you will need to serialize the &lt;code&gt;Place&lt;/code&gt; models as well:</source>
          <target state="translated">Для того, чтобы полностью сериализовать ваши экземпляры &lt;code&gt;Restaurant&lt;/code&gt; , вам нужно будет также сериализовать модели &lt;code&gt;Place&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="814bf473789694253cf32579769ab02b74a9eb85" translate="yes" xml:space="preserve">
          <source>In order to guarantee atomicity, &lt;code&gt;atomic&lt;/code&gt; disables some APIs. Attempting to commit, roll back, or change the autocommit state of the database connection within an &lt;code&gt;atomic&lt;/code&gt; block will raise an exception.</source>
          <target state="translated">Чтобы гарантировать атомарность, &lt;code&gt;atomic&lt;/code&gt; отключает некоторые API. Попытка зафиксировать, откатить или изменить состояние автоматической фиксации соединения с базой данных внутри &lt;code&gt;atomic&lt;/code&gt; блока вызовет исключение.</target>
        </trans-unit>
        <trans-unit id="2d184cd5980dd60fc335a14a8588be38002eadd0" translate="yes" xml:space="preserve">
          <source>In order to guarantee that all &lt;code&gt;TestCase&lt;/code&gt; code starts with a clean database, the Django test runner reorders tests in the following way:</source>
          <target state="translated">Чтобы гарантировать, что весь код &lt;code&gt;TestCase&lt;/code&gt; начинается с чистой базы данных, организатор тестов Django переупорядочивает тесты следующим образом:</target>
        </trans-unit>
        <trans-unit id="ebd5f1b685513a442ce3a791e86443cc357e3454" translate="yes" xml:space="preserve">
          <source>In order to handle this situation, you need to pass &lt;code&gt;handle_forward_references=True&lt;/code&gt; to &lt;code&gt;serializers.deserialize()&lt;/code&gt;. This will set the &lt;code&gt;deferred_fields&lt;/code&gt; attribute on the &lt;code&gt;DeserializedObject&lt;/code&gt; instances. You&amp;rsquo;ll need to keep track of &lt;code&gt;DeserializedObject&lt;/code&gt; instances where this attribute isn&amp;rsquo;t &lt;code&gt;None&lt;/code&gt; and later call &lt;code&gt;save_deferred_fields()&lt;/code&gt; on them.</source>
          <target state="translated">Чтобы справиться с этой ситуацией, вам нужно передать &lt;code&gt;handle_forward_references=True&lt;/code&gt; в &lt;code&gt;serializers.deserialize()&lt;/code&gt; . Это позволит установить &lt;code&gt;deferred_fields&lt;/code&gt; атрибут на &lt;code&gt;DeserializedObject&lt;/code&gt; экземпляров. Вам нужно будет отслеживать экземпляры &lt;code&gt;DeserializedObject&lt;/code&gt; , где этот атрибут не равен &lt;code&gt;None&lt;/code&gt; , и позже вызовите для них &lt;code&gt;save_deferred_fields()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b2e79b4b6aa18a676e91499097aad9f8d4ed2dc" translate="yes" xml:space="preserve">
          <source>In order to make a Django project translatable, you have to add a minimal number of hooks to your Python code and templates. These hooks are called &lt;a href=&quot;index#term-translation-string&quot;&gt;translation strings&lt;/a&gt;. They tell Django: &amp;ldquo;This text should be translated into the end user&amp;rsquo;s language, if a translation for this text is available in that language.&amp;rdquo; It&amp;rsquo;s your responsibility to mark translatable strings; the system can only translate strings it knows about.</source>
          <target state="translated">Чтобы сделать проект Django переводимым, вы должны добавить минимальное количество хуков к вашему коду и шаблонам Python. Эти хуки называются &lt;a href=&quot;index#term-translation-string&quot;&gt;строками перевода&lt;/a&gt; . Они говорят Джанго: &amp;laquo;Этот текст должен быть переведен на язык конечного пользователя, если перевод для этого текста доступен на этом языке&amp;raquo;. Вы несете ответственность за маркировку переводимых строк; система может переводить только те строки, о которых она знает.</target>
        </trans-unit>
        <trans-unit id="fd427f482c454b8a176992fb9016a46f9519bd6a" translate="yes" xml:space="preserve">
          <source>In order to make error messages flexible and easy to override, consider the following guidelines:</source>
          <target state="translated">Для того,чтобы сделать сообщения об ошибках гибкими и легко преодолеваемыми,обратите внимание на следующие рекомендации:</target>
        </trans-unit>
        <trans-unit id="4fbde88be4d3a61eb0fa9d81f26e60f25b7c967a" translate="yes" xml:space="preserve">
          <source>In order to meet the 30-char limitation Oracle has on table names, and match the usual conventions for Oracle databases, Django may shorten table names and turn them all-uppercase. To prevent such transformations, use a quoted name as the value for &lt;code&gt;db_table&lt;/code&gt;:</source>
          <target state="translated">Чтобы соответствовать ограничению в 30 символов, которое Oracle имеет для имен таблиц, и соответствовать обычным соглашениям для баз данных Oracle, Django может сокращать имена таблиц и превращать их в верхний регистр. Чтобы предотвратить такие преобразования, используйте имя в кавычках в качестве значения для &lt;code&gt;db_table&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="09f9a7ab0865d01d87a2c3387c4322fa09399408" translate="yes" xml:space="preserve">
          <source>In order to obtain a prepared geometry, access the &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.prepared&quot;&gt;&lt;code&gt;GEOSGeometry.prepared&lt;/code&gt;&lt;/a&gt; property. Once you have a &lt;code&gt;PreparedGeometry&lt;/code&gt; instance its spatial predicate methods, listed below, may be used with other &lt;code&gt;GEOSGeometry&lt;/code&gt; objects. An operation with a prepared geometry can be orders of magnitude faster &amp;ndash; the more complex the geometry that is prepared, the larger the speedup in the operation. For more information, please consult the &lt;a href=&quot;https://trac.osgeo.org/geos/wiki/PreparedGeometry&quot;&gt;GEOS wiki page on prepared geometries&lt;/a&gt;.</source>
          <target state="translated">Чтобы получить подготовленную геометрию, &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.prepared&quot;&gt; &lt;code&gt;GEOSGeometry.prepared&lt;/code&gt; &lt;/a&gt; свойство GEOSGeometry.prepared . Если у вас есть экземпляр &lt;code&gt;PreparedGeometry&lt;/code&gt; , его методы пространственного предиката, перечисленные ниже, можно использовать с другими объектами &lt;code&gt;GEOSGeometry&lt;/code&gt; . Операция с подготовленной геометрией может быть на несколько порядков быстрее - чем сложнее подготовленная геометрия, тем больше ускорение операции. Для получения дополнительной информации, пожалуйста, обратитесь к &lt;a href=&quot;https://trac.osgeo.org/geos/wiki/PreparedGeometry&quot;&gt;вики-странице GEOS о готовых геометриях&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="197304082f996b82afb0836da69efaacaa7a04c7" translate="yes" xml:space="preserve">
          <source>In order to override one or more of them, first create an &lt;code&gt;admin&lt;/code&gt; directory in your project&amp;rsquo;s &lt;code&gt;templates&lt;/code&gt; directory. This can be any of the directories you specified in the &lt;a href=&quot;../../settings#std:setting-TEMPLATES-DIRS&quot;&gt;&lt;code&gt;DIRS&lt;/code&gt;&lt;/a&gt; option of the &lt;code&gt;DjangoTemplates&lt;/code&gt; backend in the &lt;a href=&quot;../../settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting. If you have customized the &lt;code&gt;'loaders'&lt;/code&gt; option, be sure &lt;code&gt;'django.template.loaders.filesystem.Loader'&lt;/code&gt; appears before &lt;code&gt;'django.template.loaders.app_directories.Loader'&lt;/code&gt; so that your custom templates will be found by the template loading system before those that are included with &lt;a href=&quot;#module-django.contrib.admin&quot;&gt;&lt;code&gt;django.contrib.admin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Чтобы переопределить один или несколько из них, сначала создайте каталог &lt;code&gt;admin&lt;/code&gt; в каталоге &lt;code&gt;templates&lt;/code&gt; вашего проекта . Это может быть любой из каталогов, указанных в &lt;a href=&quot;../../settings#std:setting-TEMPLATES-DIRS&quot;&gt; &lt;code&gt;DIRS&lt;/code&gt; &lt;/a&gt; опции из &lt;code&gt;DjangoTemplates&lt;/code&gt; бакэнд в &lt;a href=&quot;../../settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt; обстановке. Если вы настроили опцию &lt;code&gt;'loaders'&lt;/code&gt; , убедитесь, что &lt;code&gt;'django.template.loaders.filesystem.Loader'&lt;/code&gt; отображается перед &lt;code&gt;'django.template.loaders.app_directories.Loader'&lt;/code&gt; чтобы ваши пользовательские шаблоны были найдены системой загрузки шаблонов до те, которые включены в &lt;a href=&quot;#module-django.contrib.admin&quot;&gt; &lt;code&gt;django.contrib.admin&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6a3a6dec2c344fd808b8bba54d23e18d9e3ffaeb" translate="yes" xml:space="preserve">
          <source>In order to perform IP-based geolocation, the &lt;a href=&quot;#django.contrib.gis.geoip2.GeoIP2&quot;&gt;&lt;code&gt;GeoIP2&lt;/code&gt;&lt;/a&gt; object requires the &lt;a href=&quot;https://pypi.org/project/geoip2/&quot;&gt;geoip2 Python library&lt;/a&gt; and the GeoIP &lt;code&gt;Country&lt;/code&gt; and/or &lt;code&gt;City&lt;/code&gt;&lt;a href=&quot;https://dev.maxmind.com/geoip/geoip2/geolite2/&quot;&gt;datasets in binary format&lt;/a&gt; (the CSV files will not work!). Grab the &lt;code&gt;GeoLite2-Country.mmdb.gz&lt;/code&gt; and &lt;code&gt;GeoLite2-City.mmdb.gz&lt;/code&gt; files and unzip them in a directory corresponding to the &lt;a href=&quot;#std:setting-GEOIP_PATH&quot;&gt;&lt;code&gt;GEOIP_PATH&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">Для выполнения геолокации на основе &lt;a href=&quot;#django.contrib.gis.geoip2.GeoIP2&quot;&gt; &lt;code&gt;GeoIP2&lt;/code&gt; &lt;/a&gt; объекта GeoIP2 требуется &lt;a href=&quot;https://pypi.org/project/geoip2/&quot;&gt;библиотека Python&lt;/a&gt; geoip2 и &lt;a href=&quot;https://dev.maxmind.com/geoip/geoip2/geolite2/&quot;&gt;наборы данных&lt;/a&gt; GeoIP &lt;code&gt;Country&lt;/code&gt; и / или &lt;code&gt;City&lt;/code&gt; в двоичном формате (файлы CSV не будут работать!). Возьмите &lt;code&gt;GeoLite2-Country.mmdb.gz&lt;/code&gt; &lt;code&gt;GeoLite2-City.mmdb.gz&lt;/code&gt; и GeoLite2-City.mmdb.gz и разархивируйте их в каталог, соответствующий настройке &lt;a href=&quot;#std:setting-GEOIP_PATH&quot;&gt; &lt;code&gt;GEOIP_PATH&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="95a595d960799ba8b0ca87e797be6ea493f08f8d" translate="yes" xml:space="preserve">
          <source>In order to perform URL reversing, you&amp;rsquo;ll need to use &lt;strong&gt;named URL patterns&lt;/strong&gt; as done in the examples above. The string used for the URL name can contain any characters you like. You are not restricted to valid Python names.</source>
          <target state="translated">Чтобы выполнить реверсирование URL-адресов, вам необходимо использовать &lt;strong&gt;именованные шаблоны URL-адресов,&lt;/strong&gt; как это сделано в приведенных выше примерах. Строка, используемая для имени URL, может содержать любые символы, которые вам нравятся. Вы не ограничены действительными именами Python.</target>
        </trans-unit>
        <trans-unit id="f9fa15e76160b1b71f6b34374f375a88fa1840a3" translate="yes" xml:space="preserve">
          <source>In order to protect against &lt;a href=&quot;http://breachattack.com/&quot;&gt;BREACH&lt;/a&gt; attacks, the token is not simply the secret; a random mask is prepended to the secret and used to scramble it.</source>
          <target state="translated">Для защиты от атак &lt;a href=&quot;http://breachattack.com/&quot;&gt;BREACH&lt;/a&gt; токен - это не просто секрет; к секрету добавляется случайная маска, которая используется для его шифрования.</target>
        </trans-unit>
        <trans-unit id="6a68fede8724820357864706cab00502d65622e6" translate="yes" xml:space="preserve">
          <source>In order to protect against &lt;a href=&quot;http://breachattack.com/&quot;&gt;BREACH&lt;/a&gt; attacks, the token is not simply the secret; a random salt is prepended to the secret and used to scramble it.</source>
          <target state="translated">Для защиты от атак &lt;a href=&quot;http://breachattack.com/&quot;&gt;BREACH&lt;/a&gt; токен не просто секрет; случайная соль добавляется к секрету и используется для его шифрования.</target>
        </trans-unit>
        <trans-unit id="655aa485065fe0aea8855d7ccc45fba32956ce48" translate="yes" xml:space="preserve">
          <source>In order to resolve this ticket, we&amp;rsquo;ll add a &lt;code&gt;make_toast()&lt;/code&gt; function to the top-level &lt;code&gt;django&lt;/code&gt; module. First we are going to write a test that tries to use the function and check that its output looks correct.</source>
          <target state="translated">Чтобы разрешить этот тикет, мы добавим функцию &lt;code&gt;make_toast()&lt;/code&gt; в модуль &lt;code&gt;django&lt;/code&gt; верхнего уровня . Сначала мы напишем тест, который попытается использовать функцию и проверит правильность ее вывода.</target>
        </trans-unit>
        <trans-unit id="f0a5f481c3502942e7d16bcd7a3cc304c2eefa6a" translate="yes" xml:space="preserve">
          <source>In order to restore the database state between tests for &lt;code&gt;TransactionTestCase&lt;/code&gt;s and database backends without transactions, Django will &lt;a href=&quot;../topics/testing/overview#test-case-serialized-rollback&quot;&gt;serialize the contents of all apps&lt;/a&gt; when it starts the test run so it can then reload from that copy before running tests that need it.</source>
          <target state="translated">Чтобы восстановить состояние базы данных между тестами для &lt;code&gt;TransactionTestCase&lt;/code&gt; и бэкэндами базы данных без транзакций, Django будет &lt;a href=&quot;../topics/testing/overview#test-case-serialized-rollback&quot;&gt;сериализовать содержимое всех приложений&lt;/a&gt; при запуске тестового запуска, чтобы затем можно было перезагрузить эту копию перед запуском тестов, которые в ней нуждаются.</target>
        </trans-unit>
        <trans-unit id="f0343766ff0b17d92d018f4427983d376ae25e60" translate="yes" xml:space="preserve">
          <source>In order to send email, Django requires a few settings telling it how to connect to your mail server. At the very least, you&amp;rsquo;ll need to specify &lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST&quot;&gt;&lt;code&gt;EMAIL_HOST&lt;/code&gt;&lt;/a&gt; and possibly &lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST_USER&quot;&gt;&lt;code&gt;EMAIL_HOST_USER&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST_PASSWORD&quot;&gt;&lt;code&gt;EMAIL_HOST_PASSWORD&lt;/code&gt;&lt;/a&gt;, though other settings may be also required depending on your mail server&amp;rsquo;s configuration. Consult &lt;a href=&quot;../ref/settings&quot;&gt;the Django settings documentation&lt;/a&gt; for a full list of email-related settings.</source>
          <target state="translated">Для отправки электронной почты Django требуется несколько настроек, сообщающих ему, как подключиться к вашему почтовому серверу. По крайней мере, вам нужно указать &lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST&quot;&gt; &lt;code&gt;EMAIL_HOST&lt;/code&gt; &lt;/a&gt; и, возможно, &lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST_USER&quot;&gt; &lt;code&gt;EMAIL_HOST_USER&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../ref/settings#std:setting-EMAIL_HOST_PASSWORD&quot;&gt; &lt;code&gt;EMAIL_HOST_PASSWORD&lt;/code&gt; &lt;/a&gt; , хотя в зависимости от конфигурации вашего почтового сервера могут потребоваться и другие настройки. Обратитесь &lt;a href=&quot;../ref/settings&quot;&gt;к документации&lt;/a&gt; по настройкам Django для получения полного списка настроек, связанных с электронной почтой.</target>
        </trans-unit>
        <trans-unit id="26a276856b644a8829e847fabc786f7f950cbafe" translate="yes" xml:space="preserve">
          <source>In order to serialize objects other than &lt;code&gt;dict&lt;/code&gt; you must set the &lt;code&gt;safe&lt;/code&gt; parameter to &lt;code&gt;False&lt;/code&gt;:</source>
          <target state="translated">Для сериализации объектов, отличных от &lt;code&gt;dict&lt;/code&gt; , необходимо установить &lt;code&gt;safe&lt;/code&gt; параметра safe значение &lt;code&gt;False&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="bef01765dc926124667e6f25f418d12592815fda" translate="yes" xml:space="preserve">
          <source>In order to serve different sites in production, you&amp;rsquo;d create a separate settings file with each &lt;code&gt;SITE_ID&lt;/code&gt; (perhaps importing from a common settings file to avoid duplicating shared settings) and then specify the appropriate &lt;a href=&quot;../../topics/settings#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;&lt;/a&gt; for each site.</source>
          <target state="translated">Чтобы обслуживать разные сайты в &lt;code&gt;SITE_ID&lt;/code&gt; , вы должны создать отдельный файл настроек с каждым SITE_ID (возможно, импорт из общего файла настроек, чтобы избежать дублирования общих настроек), а затем указать соответствующий &lt;a href=&quot;../../topics/settings#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; &lt;/a&gt; для каждого сайта.</target>
        </trans-unit>
        <trans-unit id="f1fc64af07066814f008513d76447706a68a9ba2" translate="yes" xml:space="preserve">
          <source>In order to show customized HTML when Django returns a 404, you can create an HTML template named &lt;code&gt;404.html&lt;/code&gt; and place it in the top level of your template tree. This template will then be served when &lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">Чтобы показать настроенный HTML- &lt;code&gt;404.html&lt;/code&gt; когда Django возвращает 404, вы можете создать HTML-шаблон с именем 404.html и поместить его на верхний уровень дерева шаблонов. Этот шаблон будет обслуживаться, когда для &lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt; установлено значение &lt;code&gt;False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3409046afa59c093b23889795e8442232cd66efe" translate="yes" xml:space="preserve">
          <source>In order to test class-based views outside of the request/response cycle you must ensure that they are configured correctly, by calling &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.setup&quot;&gt;&lt;code&gt;setup()&lt;/code&gt;&lt;/a&gt; after instantiation.</source>
          <target state="translated">Чтобы протестировать представления на основе классов вне цикла запрос / ответ, вы должны убедиться, что они настроены правильно, вызвав &lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.View.setup&quot;&gt; &lt;code&gt;setup()&lt;/code&gt; &lt;/a&gt; после создания экземпляра.</target>
        </trans-unit>
        <trans-unit id="8c0c7c490993a4b8206ebaa2bae3d78e513a3e92" translate="yes" xml:space="preserve">
          <source>In order to understand what happens in your query, consider inspecting the &lt;code&gt;query&lt;/code&gt; property of your &lt;code&gt;QuerySet&lt;/code&gt;.</source>
          <target state="translated">Чтобы понять, что происходит в вашем запросе, рассмотрите возможность проверки свойства &lt;code&gt;query&lt;/code&gt; вашего &lt;code&gt;QuerySet&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9facaa9d27d78e8f0b3bd821362b17138f116cfc" translate="yes" xml:space="preserve">
          <source>In order to use GeoDjango, you will need to add your OSGeo4W directories to your Windows system &lt;code&gt;Path&lt;/code&gt;, as well as create &lt;code&gt;GDAL_DATA&lt;/code&gt; and &lt;code&gt;PROJ_LIB&lt;/code&gt; environment variables. The following set of commands, executable with &lt;code&gt;cmd.exe&lt;/code&gt;, will set this up. Restart your device once this is complete for new environment variables to be recognized:</source>
          <target state="translated">Чтобы использовать GeoDjango, вам необходимо добавить каталоги OSGeo4W в системный &lt;code&gt;Path&lt;/code&gt; Windows , а также создать переменные среды &lt;code&gt;GDAL_DATA&lt;/code&gt; и &lt;code&gt;PROJ_LIB&lt;/code&gt; . Следующий набор команд, выполняемых с помощью &lt;code&gt;cmd.exe&lt;/code&gt; , настроит это. После завершения перезагрузите устройство, чтобы новые переменные среды распознавались:</target>
        </trans-unit>
        <trans-unit id="c570b617951053ed3053b9d4c9a52cb627915e3e" translate="yes" xml:space="preserve">
          <source>In order to use GeoDjango, you will need to add your Python and OSGeo4W directories to your Windows system &lt;code&gt;Path&lt;/code&gt;, as well as create &lt;code&gt;GDAL_DATA&lt;/code&gt; and &lt;code&gt;PROJ_LIB&lt;/code&gt; environment variables. The following set of commands, executable with &lt;code&gt;cmd.exe&lt;/code&gt;, will set this up:</source>
          <target state="translated">Чтобы использовать GeoDjango, вам необходимо добавить каталоги Python и OSGeo4W в системный &lt;code&gt;Path&lt;/code&gt; Windows , а также создать переменные среды &lt;code&gt;GDAL_DATA&lt;/code&gt; и &lt;code&gt;PROJ_LIB&lt;/code&gt; . Следующий набор команд, выполняемый с &lt;code&gt;cmd.exe&lt;/code&gt; , установит это:</target>
        </trans-unit>
        <trans-unit id="ded6a8537ff07979ac6a5c88d86c82670bed0de7" translate="yes" xml:space="preserve">
          <source>In order to use another client-side library to handle translations, you may want to take advantage of the &lt;code&gt;JSONCatalog&lt;/code&gt; view. It&amp;rsquo;s similar to &lt;a href=&quot;#django.views.i18n.JavaScriptCatalog&quot;&gt;&lt;code&gt;JavaScriptCatalog&lt;/code&gt;&lt;/a&gt; but returns a JSON response.</source>
          <target state="translated">Чтобы использовать другую клиентскую библиотеку для обработки переводов, вы можете воспользоваться представлением &lt;code&gt;JSONCatalog&lt;/code&gt; . Это похоже на &lt;a href=&quot;#django.views.i18n.JavaScriptCatalog&quot;&gt; &lt;code&gt;JavaScriptCatalog&lt;/code&gt; ,&lt;/a&gt; но возвращает ответ JSON.</target>
        </trans-unit>
        <trans-unit id="68a8c6184d43fa10d946434ba4ead136463b3827" translate="yes" xml:space="preserve">
          <source>In order to use the &lt;code&gt;Hand&lt;/code&gt; class in our models, we &lt;strong&gt;do not&lt;/strong&gt; have to change this class at all. This is ideal, because it means you can easily write model support for existing classes where you cannot change the source code.</source>
          <target state="translated">Чтобы использовать класс &lt;code&gt;Hand&lt;/code&gt; в наших моделях, нам &lt;strong&gt;не&lt;/strong&gt; нужно менять этот класс вообще. Это идеально, потому что это означает, что вы можете легко написать поддержку модели для существующих классов, где вы не можете изменить исходный код.</target>
        </trans-unit>
        <trans-unit id="482b7e02eb0c4ca18c3f11eba075a9c3cbab0ed5" translate="yes" xml:space="preserve">
          <source>In other words, if you set the name of the database in &lt;a href=&quot;settings#std:setting-OPTIONS&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt;, this will take precedence over &lt;a href=&quot;settings#std:setting-NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt;, which would override anything in a &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/option-files.html&quot;&gt;MySQL option file&lt;/a&gt;.</source>
          <target state="translated">Другими словами, если вы задаете имя базы данных в &lt;a href=&quot;settings#std:setting-OPTIONS&quot;&gt; &lt;code&gt;OPTIONS&lt;/code&gt; &lt;/a&gt; , это будет иметь приоритет над &lt;a href=&quot;settings#std:setting-NAME&quot;&gt; &lt;code&gt;NAME&lt;/code&gt; &lt;/a&gt; , что переопределит что-либо в &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/option-files.html&quot;&gt;файле параметров MySQL&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c32fe5f982b37fbd0b904bf96aa32ce7df76d8e2" translate="yes" xml:space="preserve">
          <source>In other words, the usual use is to examine the deserialized objects to make sure that they are &amp;ldquo;appropriate&amp;rdquo; for saving before doing so. If you trust your data source you can instead save the object directly and move on.</source>
          <target state="translated">Другими словами, обычное использование - проверить десериализованные объекты, чтобы убедиться, что они &amp;laquo;подходят&amp;raquo; для сохранения, прежде чем делать это. Если вы доверяете своему источнику данных, вы можете вместо этого сохранить объект напрямую и двигаться дальше.</target>
        </trans-unit>
        <trans-unit id="348e74db786d501ec367bbeb95b86df85b7e5a62" translate="yes" xml:space="preserve">
          <source>In other words, the usual use is to examine the deserialized objects to make sure that they are &amp;ldquo;appropriate&amp;rdquo; for saving before doing so. Of course, if you trust your data source you can instead save the object directly and move on.</source>
          <target state="translated">Другими словами, обычное использование состоит в том, чтобы исследовать десериализованные объекты, чтобы убедиться, что они &amp;laquo;подходят&amp;raquo; для сохранения, прежде чем делать это. Конечно, если вы доверяете своему источнику данных, вы можете вместо этого сохранить объект напрямую и двигаться дальше.</target>
        </trans-unit>
        <trans-unit id="87a0055fdb9b686309bb27e57a048438c7379179" translate="yes" xml:space="preserve">
          <source>In other words, to override a command, the new command must have the same name and its app must be before the overridden command&amp;rsquo;s app in &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Другими словами, чтобы переопределить команду, новая команда должна иметь то же имя, и ее приложение должно быть перед приложением переопределенной команды в &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b80ed963edad5d68b67324a7f70c9b908485886a" translate="yes" xml:space="preserve">
          <source>In other words, what&amp;rsquo;s needed is a DRY mechanism. Among other advantages it would allow evolution of the URL design without having to go over all the project source code to search and replace outdated URLs.</source>
          <target state="translated">Другими словами, нужен СУХОЙ механизм. Среди других преимуществ это позволило бы развивать дизайн URL-адреса без необходимости просматривать весь исходный код проекта для поиска и замены устаревших URL-адресов.</target>
        </trans-unit>
        <trans-unit id="321459efe8129cd478ea12c0e5f6183e07ff2a01" translate="yes" xml:space="preserve">
          <source>In other words, your applications&amp;rsquo; root packages and the modules that define your application configuration classes shouldn&amp;rsquo;t import any models, even indirectly.</source>
          <target state="translated">Другими словами, корневые пакеты ваших приложений и модули, которые определяют классы конфигурации вашего приложения, не должны импортировать какие-либо модели, даже косвенно.</target>
        </trans-unit>
        <trans-unit id="87949143eea93ab9a8d8bacabc4b969b2cd76026" translate="yes" xml:space="preserve">
          <source>In our &lt;code&gt;HandField&lt;/code&gt; class, we&amp;rsquo;re storing the data as a VARCHAR field in the database, so we need to be able to process strings and &lt;code&gt;None&lt;/code&gt; in the &lt;code&gt;from_db_value()&lt;/code&gt;. In &lt;code&gt;to_python()&lt;/code&gt;, we need to also handle &lt;code&gt;Hand&lt;/code&gt; instances:</source>
          <target state="translated">В нашем классе &lt;code&gt;HandField&lt;/code&gt; мы храним данные в виде поля VARCHAR в базе данных, поэтому мы должны иметь возможность обрабатывать строки и &lt;code&gt;None&lt;/code&gt; в &lt;code&gt;from_db_value()&lt;/code&gt; . В &lt;code&gt;to_python()&lt;/code&gt; нам также нужно обрабатывать экземпляры &lt;code&gt;Hand&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8ec59e4ab401ce0ece29fca3cb173154f5ebfc03" translate="yes" xml:space="preserve">
          <source>In our example, we&amp;rsquo;ll call our field &lt;code&gt;HandField&lt;/code&gt;. (It&amp;rsquo;s a good idea to call your &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; subclass &lt;code&gt;&amp;lt;Something&amp;gt;Field&lt;/code&gt;, so it&amp;rsquo;s easily identifiable as a &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; subclass.) It doesn&amp;rsquo;t behave like any existing field, so we&amp;rsquo;ll subclass directly from &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">В нашем примере мы будем называть наше поле &lt;code&gt;HandField&lt;/code&gt; . (Рекомендуется называть свой подкласс &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;Something&amp;gt;Field&lt;/code&gt; , поэтому его легко идентифицировать как подкласс &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt; .) Он не ведет себя как любое существующее поле, поэтому мы создадим подкласс непосредственно из &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="200d03f759a98a5f63a0cca6040dab99cbf456aa" translate="yes" xml:space="preserve">
          <source>In our first test, we focused closely on the internal behavior of the code. For this test, we want to check its behavior as it would be experienced by a user through a web browser.</source>
          <target state="translated">В нашем первом тесте мы подробно остановились на внутреннем поведении кода.Для этого теста мы хотим проверить его поведение так,как это бы испытал пользователь через веб-браузер.</target>
        </trans-unit>
        <trans-unit id="be3f232c87c2467fa6a724407cf4bb950c14ef61" translate="yes" xml:space="preserve">
          <source>In our poll app, we&amp;rsquo;ll create two models: &lt;code&gt;Question&lt;/code&gt; and &lt;code&gt;Choice&lt;/code&gt;. A &lt;code&gt;Question&lt;/code&gt; has a question and a publication date. A &lt;code&gt;Choice&lt;/code&gt; has two fields: the text of the choice and a vote tally. Each &lt;code&gt;Choice&lt;/code&gt; is associated with a &lt;code&gt;Question&lt;/code&gt;.</source>
          <target state="translated">В нашем приложении для опроса мы создадим две модели: &lt;code&gt;Question&lt;/code&gt; и &lt;code&gt;Choice&lt;/code&gt; . &lt;code&gt;Question&lt;/code&gt; есть вопрос и дата публикации. &lt;code&gt;Choice&lt;/code&gt; состоит из двух полей: текст выбора и подсчет голосов. Каждый &lt;code&gt;Choice&lt;/code&gt; связан с &lt;code&gt;Question&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c9571e16932b147d1f1c8511a5d04504310d27a" translate="yes" xml:space="preserve">
          <source>In our poll application, we&amp;rsquo;ll have the following four views:</source>
          <target state="translated">В нашем приложении для опроса мы будем иметь следующие четыре представления:</target>
        </trans-unit>
        <trans-unit id="bf972e12a966ca6c6eecb8fe6283423f8ce689ac" translate="yes" xml:space="preserve">
          <source>In practice you&amp;rsquo;d probably want to record the interest in a key-value store rather than in a relational database, so we&amp;rsquo;ve left that bit out. The only bit of the view that needs to worry about using &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt;&lt;code&gt;SingleObjectMixin&lt;/code&gt;&lt;/a&gt; is where we want to look up the author we&amp;rsquo;re interested in, which it does with a call to &lt;code&gt;self.get_object()&lt;/code&gt;. Everything else is taken care of for us by the mixin.</source>
          <target state="translated">На практике вы, вероятно, захотите записать интерес в хранилище значений ключей, а не в реляционной базе данных, так что мы это упустили. Единственное, что нужно беспокоиться об использовании &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt; &lt;code&gt;SingleObjectMixin&lt;/code&gt; ,&lt;/a&gt; это то, где мы хотим найти интересующего нас автора, что он делает с вызовом &lt;code&gt;self.get_object()&lt;/code&gt; . Все остальное заботится о нас миксином.</target>
        </trans-unit>
        <trans-unit id="f5a8cc8880a64d6f073c4d7908bd6dba8d796910" translate="yes" xml:space="preserve">
          <source>In practice you&amp;rsquo;ll use this to get a string you can use in multiple places in a template or so you can use the output as an argument for other template tags or filters.</source>
          <target state="translated">На практике вы будете использовать это, чтобы получить строку, которую вы можете использовать в нескольких местах шаблона, или чтобы вы могли использовать выходные данные в качестве аргумента для других тегов или фильтров шаблона.</target>
        </trans-unit>
        <trans-unit id="b07696c8063df15fbf4c588d34e006df6dbe3901" translate="yes" xml:space="preserve">
          <source>In practice you&amp;rsquo;ll use this to get a string you can use in multiple places in a template or so you can use the output as an argument for other template tags or filters:</source>
          <target state="translated">На практике вы будете использовать это, чтобы получить строку, которую вы можете использовать в нескольких местах шаблона, или чтобы вы могли использовать выходные данные в качестве аргумента для других тегов или фильтров шаблона:</target>
        </trans-unit>
        <trans-unit id="d297ccfa88b8ebaa61778e3119442058ee0cb9c0" translate="yes" xml:space="preserve">
          <source>In practice, it&amp;rsquo;s often easiest to use &lt;code&gt;chunks()&lt;/code&gt; all the time. Looping over &lt;code&gt;chunks()&lt;/code&gt; instead of using &lt;code&gt;read()&lt;/code&gt; ensures that large files don&amp;rsquo;t overwhelm your system&amp;rsquo;s memory.</source>
          <target state="translated">На практике часто проще всего использовать &lt;code&gt;chunks()&lt;/code&gt; все время. Зацикливание на &lt;code&gt;chunks()&lt;/code&gt; вместо использования &lt;code&gt;read()&lt;/code&gt; гарантирует, что большие файлы не переполняют память вашей системы.</target>
        </trans-unit>
        <trans-unit id="1b8e788eb6f744c88e1daabbf412406627452a09" translate="yes" xml:space="preserve">
          <source>In practice, signal handlers are usually defined in a &lt;code&gt;signals&lt;/code&gt; submodule of the application they relate to. Signal receivers are connected in the &lt;a href=&quot;../ref/applications#django.apps.AppConfig.ready&quot;&gt;&lt;code&gt;ready()&lt;/code&gt;&lt;/a&gt; method of your application configuration class. If you&amp;rsquo;re using the &lt;a href=&quot;#django.dispatch.receiver&quot;&gt;&lt;code&gt;receiver()&lt;/code&gt;&lt;/a&gt; decorator, import the &lt;code&gt;signals&lt;/code&gt; submodule inside &lt;a href=&quot;../ref/applications#django.apps.AppConfig.ready&quot;&gt;&lt;code&gt;ready()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">На практике обработчики сигналов обычно определяются в подмодуле &lt;code&gt;signals&lt;/code&gt; приложения, к которому они относятся. Приемники сигналов подключаются в метод &lt;a href=&quot;../ref/applications#django.apps.AppConfig.ready&quot;&gt; &lt;code&gt;ready()&lt;/code&gt; &lt;/a&gt; класса конфигурации вашего приложения. Если вы используете декоратор &lt;a href=&quot;#django.dispatch.receiver&quot;&gt; &lt;code&gt;receiver()&lt;/code&gt; &lt;/a&gt; , импортируйте субмодуль &lt;code&gt;signals&lt;/code&gt; внутри &lt;a href=&quot;../ref/applications#django.apps.AppConfig.ready&quot;&gt; &lt;code&gt;ready()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5e303b3791ba00ba2f2730c84ffcba41b1b0fece" translate="yes" xml:space="preserve">
          <source>In practice, this feature wraps every view function in the &lt;a href=&quot;#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; decorator described below.</source>
          <target state="translated">На практике эта функция оборачивает каждую функцию представления в описателе ниже &lt;a href=&quot;#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="807d6a79df3e61ec95aafb0098dd4efac1e3da72" translate="yes" xml:space="preserve">
          <source>In practice, this is rarely an issue. Django gives you aware datetime objects in the models and forms, and most often, new datetime objects are created from existing ones through &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; arithmetic. The only datetime that&amp;rsquo;s often created in application code is the current time, and &lt;a href=&quot;../../ref/utils#django.utils.timezone.now&quot;&gt;&lt;code&gt;timezone.now()&lt;/code&gt;&lt;/a&gt; automatically does the right thing.</source>
          <target state="translated">На практике это редко является проблемой. Django предоставляет вам осведомленные объекты даты и времени в моделях и формах, и чаще всего новые объекты даты и времени создаются из существующих с помощью арифметики &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt; . Единственная дата и время, которые часто создаются в коде приложения, это текущее время, и &lt;a href=&quot;../../ref/utils#django.utils.timezone.now&quot;&gt; &lt;code&gt;timezone.now()&lt;/code&gt; &lt;/a&gt; автоматически делает правильные вещи.</target>
        </trans-unit>
        <trans-unit id="b637ff00ea296f5217d7753924c94e2a84bd6acf" translate="yes" xml:space="preserve">
          <source>In practice, you probably won&amp;rsquo;t need to use &lt;a href=&quot;#django.contrib.auth.models.AnonymousUser&quot;&gt;&lt;code&gt;AnonymousUser&lt;/code&gt;&lt;/a&gt; objects on your own, but they&amp;rsquo;re used by Web requests, as explained in the next section.</source>
          <target state="translated">На практике вам, вероятно, не нужно будет использовать объекты &lt;a href=&quot;#django.contrib.auth.models.AnonymousUser&quot;&gt; &lt;code&gt;AnonymousUser&lt;/code&gt; &lt;/a&gt; самостоятельно, но они используются веб-запросами, как описано в следующем разделе.</target>
        </trans-unit>
        <trans-unit id="05f63b699e28cf435f1bb4b69860a1d658a1a201" translate="yes" xml:space="preserve">
          <source>In practice, you will usually specify &lt;code&gt;request.FILES&lt;/code&gt; as the source of file data (just like you use &lt;code&gt;request.POST&lt;/code&gt; as the source of form data):</source>
          <target state="translated">На практике вы обычно указываете &lt;code&gt;request.FILES&lt;/code&gt; в качестве источника данных файла (так же, как вы используете &lt;code&gt;request.POST&lt;/code&gt; в качестве источника данных формы):</target>
        </trans-unit>
        <trans-unit id="b18791ebd38e85110f995871c6815d3b19ab08ca" translate="yes" xml:space="preserve">
          <source>In previous parts of the tutorial, the templates have been provided with a context that contains the &lt;code&gt;question&lt;/code&gt; and &lt;code&gt;latest_question_list&lt;/code&gt; context variables. For &lt;code&gt;DetailView&lt;/code&gt; the &lt;code&gt;question&lt;/code&gt; variable is provided automatically &amp;ndash; since we&amp;rsquo;re using a Django model (&lt;code&gt;Question&lt;/code&gt;), Django is able to determine an appropriate name for the context variable. However, for ListView, the automatically generated context variable is &lt;code&gt;question_list&lt;/code&gt;. To override this we provide the &lt;code&gt;context_object_name&lt;/code&gt; attribute, specifying that we want to use &lt;code&gt;latest_question_list&lt;/code&gt; instead. As an alternative approach, you could change your templates to match the new default context variables &amp;ndash; but it&amp;rsquo;s a lot easier to tell Django to use the variable you want.</source>
          <target state="translated">В предыдущих частях руководства шаблоны были снабжены контекстом, который содержит переменные &lt;code&gt;question&lt;/code&gt; и контекста &lt;code&gt;latest_question_list&lt;/code&gt; . Для &lt;code&gt;DetailView&lt;/code&gt; &lt;code&gt;question&lt;/code&gt; переменный обеспечиваются автоматически - поскольку мы используем модель Django ( &lt;code&gt;Question&lt;/code&gt; ), Django способен определить соответствующее имя для переменного контекста. Однако для ListView автоматически генерируемой переменной контекста является &lt;code&gt;question_list&lt;/code&gt; . Для того, чтобы изменить это мы предлагаем &lt;code&gt;context_object_name&lt;/code&gt; атрибут, указав , что мы хотим использовать &lt;code&gt;latest_question_list&lt;/code&gt; вместо. В качестве альтернативного подхода вы можете изменить свои шаблоны, чтобы они соответствовали новым переменным контекста по умолчанию, но гораздо проще заставить Django использовать нужную переменную.</target>
        </trans-unit>
        <trans-unit id="1f6f3aa09d467d54d4f032943cbd599296ba5ef5" translate="yes" xml:space="preserve">
          <source>In previous versions of Django, it was necessary to first annotate and then filter against the annotation. This resulted in the annotated value always being present in the query result, and often resulted in a query that took more time to execute.</source>
          <target state="translated">В предыдущих версиях Django приходилось сначала аннотировать,а затем фильтровать по аннотации.Это приводило к тому,что аннотированное значение всегда присутствовало в результате запроса,и часто приводило к тому,что на выполнение запроса требовалось больше времени.</target>
        </trans-unit>
        <trans-unit id="857c7ad4641da7dfb7c6325f24baaa53cf1e388e" translate="yes" xml:space="preserve">
          <source>In short, when multiple simultaneous requests from the same client are involved, messages are not guaranteed to be delivered to the same window that created them nor, in some cases, at all. Note that this is typically not a problem in most applications and will become a non-issue in HTML5, where each window/tab will have its own browsing context.</source>
          <target state="translated">Короче говоря,когда речь идет о нескольких одновременных запросах от одного и того же клиента,сообщения не гарантированно доставляются в одно и то же окно,которое их создало,а в некоторых случаях и вовсе.Обратите внимание,что это,как правило,не является проблемой в большинстве приложений и станет не проблематичным в HTML5,где каждое окно/табличка будет иметь свой собственный контекст просмотра.</target>
        </trans-unit>
        <trans-unit id="c1af56e92f61b1b8ed524de14c455aa50b0aab85" translate="yes" xml:space="preserve">
          <source>In some cases you may wish to dynamically change which &lt;code&gt;Transform&lt;/code&gt; or &lt;code&gt;Lookup&lt;/code&gt; is returned based on the name passed in, rather than fixing it. As an example, you could have a field which stores coordinates or an arbitrary dimension, and wish to allow a syntax like &lt;code&gt;.filter(coords__x7=4)&lt;/code&gt; to return the objects where the 7th coordinate has value 4. In order to do this, you would override &lt;code&gt;get_lookup&lt;/code&gt; with something like:</source>
          <target state="translated">В некоторых случаях вы можете захотеть динамически изменить, какой &lt;code&gt;Transform&lt;/code&gt; или &lt;code&gt;Lookup&lt;/code&gt; возвращается, основываясь на переданном имени, а не исправляя его. Например, у вас может быть поле, в котором хранятся координаты или произвольное измерение, и вы хотите, чтобы синтаксис, такой как &lt;code&gt;.filter(coords__x7=4)&lt;/code&gt; возвращал объекты, для которых 7-я координата имеет значение 4. Для этого вы переопределил бы &lt;code&gt;get_lookup&lt;/code&gt; чем-то вроде:</target>
        </trans-unit>
        <trans-unit id="5fdef86b13548e606f863fbd8e30806d3a23d8c0" translate="yes" xml:space="preserve">
          <source>In some cases you might want to capture the result of &lt;code&gt;widthratio&lt;/code&gt; in a variable. It can be useful, for instance, in a &lt;a href=&quot;../../topics/i18n/translation#std:templatetag-blocktrans&quot;&gt;&lt;code&gt;blocktrans&lt;/code&gt;&lt;/a&gt; like this:</source>
          <target state="translated">В некоторых случаях вы можете захотеть зафиксировать результат &lt;code&gt;widthratio&lt;/code&gt; в переменной. Это может быть полезно, например, в &lt;a href=&quot;../../topics/i18n/translation#std:templatetag-blocktrans&quot;&gt; &lt;code&gt;blocktrans&lt;/code&gt; ,&lt;/a&gt; как это:</target>
        </trans-unit>
        <trans-unit id="a257d0b779896788b6d556ab5da17e01cbe8ff48" translate="yes" xml:space="preserve">
          <source>In some cases you might want to capture the result of &lt;code&gt;widthratio&lt;/code&gt; in a variable. It can be useful, for instance, in a &lt;a href=&quot;../../topics/i18n/translation#std:templatetag-blocktranslate&quot;&gt;&lt;code&gt;blocktranslate&lt;/code&gt;&lt;/a&gt; like this:</source>
          <target state="translated">В некоторых случаях вы можете захотеть зафиксировать результат &lt;code&gt;widthratio&lt;/code&gt; в переменной. Это может быть полезно, например, в таком &lt;a href=&quot;../../topics/i18n/translation#std:templatetag-blocktranslate&quot;&gt; &lt;code&gt;blocktranslate&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="1b575c3528640df48c24349d84fecc89450e51b0" translate="yes" xml:space="preserve">
          <source>In some cases you might want to refer to the current value of a cycle without advancing to the next value. To do this, give the &lt;code&gt;{% cycle %}&lt;/code&gt; tag a name, using &amp;ldquo;as&amp;rdquo;, like this:</source>
          <target state="translated">В некоторых случаях вы можете обратиться к текущему значению цикла, не переходя к следующему значению. Для этого &lt;code&gt;{% cycle %}&lt;/code&gt; тегу {% cycle%} имя, используя &amp;laquo;as&amp;raquo;, например:</target>
        </trans-unit>
        <trans-unit id="29c5cbea71be2c58cfaf5424459023b0c9686745" translate="yes" xml:space="preserve">
          <source>In some cases, such as strings with a percent sign followed by a space and a &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#old-string-formatting&quot;&gt;string conversion type&lt;/a&gt; (e.g. &lt;code&gt;_(&quot;10% interest&quot;)&lt;/code&gt;), &lt;a href=&quot;../../ref/utils#django.utils.translation.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt; incorrectly flags strings with &lt;code&gt;python-format&lt;/code&gt;.</source>
          <target state="translated">В некоторых случаях, таких как строки со знаком процента, за которым следуют пробел и &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#old-string-formatting&quot;&gt;тип преобразования строки&lt;/a&gt; (например, &lt;code&gt;_(&quot;10% interest&quot;)&lt;/code&gt; ), &lt;a href=&quot;../../ref/utils#django.utils.translation.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt; неправильно помечает строки в &lt;code&gt;python-format&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99af10ea50e91cf8913d1a5d12cadaa7cb6b9da2" translate="yes" xml:space="preserve">
          <source>In some cases, you might want to bypass the &lt;a href=&quot;#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-3&quot;&gt;&lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;&lt;/a&gt; environment variable. For example, if you&amp;rsquo;re using the template system by itself, you likely don&amp;rsquo;t want to have to set up an environment variable pointing to a settings module.</source>
          <target state="translated">В некоторых случаях может &lt;a href=&quot;#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-3&quot;&gt; &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; &lt;/a&gt; обойти переменную среды DJANGO_SETTINGS_MODULE . Например, если вы используете систему шаблонов отдельно, вам, вероятно, не нужно настраивать переменную среды, указывающую на модуль настроек.</target>
        </trans-unit>
        <trans-unit id="0daf50f8b596a24cd4a4b70959499e29894a58dc" translate="yes" xml:space="preserve">
          <source>In some cases, you might want to bypass the &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; environment variable. For example, if you&amp;rsquo;re using the template system by itself, you likely don&amp;rsquo;t want to have to set up an environment variable pointing to a settings module.</source>
          <target state="translated">В некоторых случаях вы можете обойти переменную окружения &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; . Например, если вы используете систему шаблонов самостоятельно, вам, скорее всего, не нужно настраивать переменную среды, указывающую на модуль настроек.</target>
        </trans-unit>
        <trans-unit id="8dbcdb94c1eff87b6c56ef91c1c4506628f40cf0" translate="yes" xml:space="preserve">
          <source>In some cases, you won&amp;rsquo;t need to register your check function &amp;ndash; you can piggyback on an existing registration.</source>
          <target state="translated">В некоторых случаях вам не нужно регистрировать свою функцию проверки - вы можете использовать существующие регистрации.</target>
        </trans-unit>
        <trans-unit id="9070909be04c420a9eba7d62728aece4ca6ac3a2" translate="yes" xml:space="preserve">
          <source>In some circumstances, the code connecting receivers to signals may run multiple times. This can cause your receiver function to be registered more than once, and thus called as many times for a signal event. For example, the &lt;a href=&quot;../ref/applications#django.apps.AppConfig.ready&quot;&gt;&lt;code&gt;ready()&lt;/code&gt;&lt;/a&gt; method may be executed more than once during testing. More generally, this occurs everywhere your project imports the module where you define the signals, because signal registration runs as many times as it is imported.</source>
          <target state="translated">В некоторых случаях код подключения приемников к сигналам может выполняться несколько раз. Это может привести к тому, что ваша функция приемника будет зарегистрирована более одного раза и, следовательно, будет вызываться столько раз для события сигнала. Например, метод &lt;a href=&quot;../ref/applications#django.apps.AppConfig.ready&quot;&gt; &lt;code&gt;ready()&lt;/code&gt; &lt;/a&gt; может выполняться более одного раза во время тестирования. В общем, это происходит везде, где ваш проект импортирует модуль, в котором вы определяете сигналы, потому что регистрация сигналов выполняется столько раз, сколько импортировано.</target>
        </trans-unit>
        <trans-unit id="8a2f86e668a97029be624ec47a33ad2137608e0e" translate="yes" xml:space="preserve">
          <source>In some circumstances, the code connecting receivers to signals may run multiple times. This can cause your receiver function to be registered more than once, and thus called multiple times for a single signal event.</source>
          <target state="translated">В некоторых случаях код,соединяющий приемники с сигналами,может повторяться несколько раз.Это может привести к тому,что Ваша функция приемника будет зарегистрирована несколько раз,и,таким образом,будет вызываться несколько раз для одного события сигнала.</target>
        </trans-unit>
        <trans-unit id="79d711a83ce7a924bc3594bf29585bfc7129050d" translate="yes" xml:space="preserve">
          <source>In some complex data-modeling situations, your models might contain a lot of fields, some of which could contain a lot of data (for example, text fields), or require expensive processing to convert them to Python objects. If you are using the results of a queryset in some situation where you don&amp;rsquo;t know if you need those particular fields when you initially fetch the data, you can tell Django not to retrieve them from the database.</source>
          <target state="translated">В некоторых сложных ситуациях моделирования данных ваши модели могут содержать много полей, некоторые из которых могут содержать много данных (например, текстовые поля), или требовать дорогостоящей обработки для преобразования их в объекты Python. Если вы используете результаты набора запросов в какой-то ситуации, когда вы не знаете, нужны ли вам эти конкретные поля при первоначальном извлечении данных, вы можете указать Django не извлекать их из базы данных.</target>
        </trans-unit>
        <trans-unit id="2774cd9614848bc838324a9f3925846c843cbd6c" translate="yes" xml:space="preserve">
          <source>In some rare cases, you might wish to pass parameters to the SQL fragments in &lt;code&gt;extra(select=...)&lt;/code&gt;. For this purpose, use the &lt;code&gt;select_params&lt;/code&gt; parameter.</source>
          <target state="translated">В некоторых редких случаях вам может потребоваться передать параметры фрагментам SQL &lt;code&gt;extra(select=...)&lt;/code&gt; . Для этого используйте параметр &lt;code&gt;select_params&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b48e88bf410f2cba633c2cb412176cbfa3a3eb6" translate="yes" xml:space="preserve">
          <source>In some rare circumstances, it&amp;rsquo;s necessary to be able to force the &lt;a href=&quot;#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; method to perform an SQL &lt;code&gt;INSERT&lt;/code&gt; and not fall back to doing an &lt;code&gt;UPDATE&lt;/code&gt;. Or vice-versa: update, if possible, but not insert a new row. In these cases you can pass the &lt;code&gt;force_insert=True&lt;/code&gt; or &lt;code&gt;force_update=True&lt;/code&gt; parameters to the &lt;a href=&quot;#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; method. Passing both parameters is an error: you cannot both insert &lt;em&gt;and&lt;/em&gt; update at the same time!</source>
          <target state="translated">В некоторых редких случаях необходимо иметь возможность принудительно заставить метод &lt;a href=&quot;#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt; выполнить SQL &lt;code&gt;INSERT&lt;/code&gt; и не отступать от выполнения &lt;code&gt;UPDATE&lt;/code&gt; . Или наоборот: обновите, если это возможно, но не вставляйте новую строку. В этих случаях можно передать &lt;code&gt;force_insert=True&lt;/code&gt; или &lt;code&gt;force_update=True&lt;/code&gt; параметры для &lt;a href=&quot;#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt; метод. Передача обоих параметров является ошибкой: вы не можете одновременно вставлять &lt;em&gt;и&lt;/em&gt; обновлять!</target>
        </trans-unit>
        <trans-unit id="ce736764b432a2fae47c89320e8e9fd2392f9dd8" translate="yes" xml:space="preserve">
          <source>In some scenarios where views are of a generic nature, a many-to-one relationship might exist between URLs and views. For these cases the view name isn&amp;rsquo;t a good enough identifier for it when comes the time of reversing URLs. Read the next section to know about the solution Django provides for this.</source>
          <target state="translated">В некоторых сценариях, где представления имеют общий характер, между URL-адресами и представлениями может существовать отношение &amp;laquo;многие к одному&amp;raquo;. В этих случаях имя представления не является достаточно хорошим идентификатором для него, когда наступает момент обращения URL-адресов. Прочитайте следующий раздел, чтобы узнать о решении, которое Django предлагает для этого.</target>
        </trans-unit>
        <trans-unit id="b1e5d19e9d9d33f10b0a69c92fa82b62a739e1d4" translate="yes" xml:space="preserve">
          <source>In statement 1, a new &lt;code&gt;Person&lt;/code&gt; object is saved to the &lt;code&gt;first&lt;/code&gt; database. At this time, &lt;code&gt;p&lt;/code&gt; doesn&amp;rsquo;t have a primary key, so Django issues an SQL &lt;code&gt;INSERT&lt;/code&gt; statement. This creates a primary key, and Django assigns that primary key to &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">В операторе 1 новый объект &lt;code&gt;Person&lt;/code&gt; сохраняется в &lt;code&gt;first&lt;/code&gt; базе данных. В настоящее время у &lt;code&gt;p&lt;/code&gt; нет первичного ключа, поэтому Django выдает &lt;code&gt;INSERT&lt;/code&gt; SQL INSERT . Это создает первичный ключ, и Django назначает этот первичный ключ для &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e064abd9ffdc8b00766db1b2b02b9688bf7b519c" translate="yes" xml:space="preserve">
          <source>In templates: Using the &lt;a href=&quot;../../ref/templates/builtins#std:templatetag-url&quot;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; template tag.</source>
          <target state="translated">В шаблонах: Использование тега шаблона &lt;a href=&quot;../../ref/templates/builtins#std:templatetag-url&quot;&gt; &lt;code&gt;url&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cfdab87bc82efd3797239c4ba21d1d79e927c429" translate="yes" xml:space="preserve">
          <source>In that &lt;code&gt;register.inclusion_tag()&lt;/code&gt; line, we specified &lt;code&gt;takes_context=True&lt;/code&gt; and the name of the template. Here&amp;rsquo;s what the template &lt;code&gt;link.html&lt;/code&gt; might look like:</source>
          <target state="translated">В этой строке &lt;code&gt;register.inclusion_tag()&lt;/code&gt; мы указали &lt;code&gt;takes_context=True&lt;/code&gt; и имя шаблона. Вот как может выглядеть шаблон &lt;code&gt;link.html&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="67c01f0adefa1043d3003b730cd2f663f4b756b7" translate="yes" xml:space="preserve">
          <source>In that form, the &amp;ldquo;Question&amp;rdquo; field is a select box containing every question in the database. Django knows that a &lt;a href=&quot;../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; should be represented in the admin as a &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; box. In our case, only one question exists at this point.</source>
          <target state="translated">В этой форме поле &amp;laquo;Вопрос&amp;raquo; представляет собой поле выбора, содержащее каждый вопрос в базе данных. Джанго знает, что &lt;a href=&quot;../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; должен быть представлен в админке как поле &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; . В нашем случае на данный момент существует только один вопрос.</target>
        </trans-unit>
        <trans-unit id="e16803d7e5444774cf1847606a924ea98fc0f9ff" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;#built-in-field-classes&quot;&gt;built-in Field classes&lt;/a&gt; section below, each &lt;code&gt;Field&lt;/code&gt; defines the error message keys it uses.</source>
          <target state="translated">В разделе &lt;a href=&quot;#built-in-field-classes&quot;&gt;встроенных классов полей&lt;/a&gt; ниже каждое &lt;code&gt;Field&lt;/code&gt; определяет ключи сообщений об ошибках, которые оно использует.</target>
        </trans-unit>
        <trans-unit id="4b8de39169c018ef000a9984f73650a25eb94d98" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;../../topics/auth/index#module-django.contrib.auth&quot;&gt;&lt;code&gt;authentication framework&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../topics/auth/default#django.contrib.auth.views.LoginView&quot;&gt;&lt;code&gt;django.contrib.auth.views.LoginView&lt;/code&gt;&lt;/a&gt; passes the current &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; name to the template as &lt;code&gt;{{ site_name }}&lt;/code&gt;.</source>
          <target state="translated">В &lt;a href=&quot;../../topics/auth/index#module-django.contrib.auth&quot;&gt; &lt;code&gt;authentication framework&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../topics/auth/default#django.contrib.auth.views.LoginView&quot;&gt; &lt;code&gt;django.contrib.auth.views.LoginView&lt;/code&gt; &lt;/a&gt; передает текущую &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt; имя шаблона , как &lt;code&gt;{{ site_name }}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f38cdaf92023e3d5b6ad536a62d5ac0850443cb2" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;../ref/contrib/admin/admindocs#module-django.contrib.admindocs&quot;&gt;&lt;code&gt;django.contrib.admindocs&lt;/code&gt;&lt;/a&gt; display, the field description is interpolated with &lt;code&gt;field.__dict__&lt;/code&gt; which allows the description to incorporate arguments of the field. For example, the description for &lt;a href=&quot;../ref/models/fields#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; is:</source>
          <target state="translated">На экране &lt;a href=&quot;../ref/contrib/admin/admindocs#module-django.contrib.admindocs&quot;&gt; &lt;code&gt;django.contrib.admindocs&lt;/code&gt; &lt;/a&gt; описание поля интерполируется с &lt;code&gt;field.__dict__&lt;/code&gt; которое позволяет описанию включать аргументы поля. Например, описание для &lt;a href=&quot;../ref/models/fields#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="61a99f888da03252e37a49dc94b253027356d243" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;flatpages#module-django.contrib.flatpages&quot;&gt;&lt;code&gt;flatpages framework&lt;/code&gt;&lt;/a&gt;, each flatpage is associated with a particular site. When a flatpage is created, you specify its &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt;, and the &lt;a href=&quot;flatpages#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt;&lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt;&lt;/a&gt; checks the current site in retrieving flatpages to display.</source>
          <target state="translated">В структуре &lt;a href=&quot;flatpages#module-django.contrib.flatpages&quot;&gt; &lt;code&gt;flatpages framework&lt;/code&gt; &lt;/a&gt; каждая плоская страница связана с определенным сайтом. Когда создается плоская страница, вы указываете ее &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt; , и &lt;a href=&quot;flatpages#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt; &lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt; &lt;/a&gt; проверяет текущий сайт при получении отображаемых плоских страниц.</target>
        </trans-unit>
        <trans-unit id="ab0e7037c1bb990ccc8f0010f58edfb9050005ab" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;redirects#module-django.contrib.redirects&quot;&gt;&lt;code&gt;redirects framework&lt;/code&gt;&lt;/a&gt;, each redirect object is associated with a particular site. When Django searches for a redirect, it takes into account the current site.</source>
          <target state="translated">В структуре &lt;a href=&quot;redirects#module-django.contrib.redirects&quot;&gt; &lt;code&gt;redirects framework&lt;/code&gt; &lt;/a&gt; каждый объект перенаправления связан с определенным сайтом. Когда Django ищет редирект, он учитывает текущий сайт.</target>
        </trans-unit>
        <trans-unit id="e00c865684c73ed393c739c654ec70b0bd8e2997" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;syndication#module-django.contrib.syndication&quot;&gt;&lt;code&gt;syndication framework&lt;/code&gt;&lt;/a&gt;, the templates for &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;description&lt;/code&gt; automatically have access to a variable &lt;code&gt;{{ site }}&lt;/code&gt;, which is the &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; object representing the current site. Also, the hook for providing item URLs will use the &lt;code&gt;domain&lt;/code&gt; from the current &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; object if you don&amp;rsquo;t specify a fully-qualified domain.</source>
          <target state="translated">В &lt;a href=&quot;syndication#module-django.contrib.syndication&quot;&gt; &lt;code&gt;syndication framework&lt;/code&gt; &lt;/a&gt; распространения шаблоны для &lt;code&gt;title&lt;/code&gt; и &lt;code&gt;description&lt;/code&gt; автоматически получают доступ к переменной &lt;code&gt;{{ site }}&lt;/code&gt; , которая является объектом &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; ,&lt;/a&gt; представляющим текущий сайт. Кроме того, ловушка для предоставления URL-адресов элементов будет использовать &lt;code&gt;domain&lt;/code&gt; из текущего объекта &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; ,&lt;/a&gt; если вы не укажете полностью определенный домен.</target>
        </trans-unit>
        <trans-unit id="3cae9da1a42439d27f7e2fc7772d9140895ca585" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;as_p()&lt;/code&gt;, &lt;code&gt;as_ul()&lt;/code&gt; and &lt;code&gt;as_table()&lt;/code&gt; shortcuts, the fields are displayed in the order in which you define them in your form class. For example, in the &lt;code&gt;ContactForm&lt;/code&gt; example, the fields are defined in the order &lt;code&gt;subject&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt;, &lt;code&gt;sender&lt;/code&gt;, &lt;code&gt;cc_myself&lt;/code&gt;. To reorder the HTML output, change the order in which those fields are listed in the class.</source>
          <target state="translated">В &lt;code&gt;as_p()&lt;/code&gt; , &lt;code&gt;as_ul()&lt;/code&gt; и &lt;code&gt;as_table()&lt;/code&gt; поля отображаются в том порядке, в котором вы их определяете в классе формы. Например, в примере &lt;code&gt;ContactForm&lt;/code&gt; поля определены в &lt;code&gt;subject&lt;/code&gt; заказа , &lt;code&gt;message&lt;/code&gt; , &lt;code&gt;sender&lt;/code&gt; , &lt;code&gt;cc_myself&lt;/code&gt; . Чтобы изменить порядок вывода HTML, измените порядок, в котором эти поля перечислены в классе.</target>
        </trans-unit>
        <trans-unit id="6ca61b57511e0384cfa193f4c62191a0072117aa" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;fixtures&lt;/code&gt; directory of every installed application</source>
          <target state="translated">В каталоге &lt;code&gt;fixtures&lt;/code&gt; каждого установленного приложения</target>
        </trans-unit>
        <trans-unit id="c2e20542720527ab7cf07a8cbe445b23385b59fc" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;polls/urls.py&lt;/code&gt; file include the following code:</source>
          <target state="translated">В файл &lt;code&gt;polls/urls.py&lt;/code&gt; включите следующий код:</target>
        </trans-unit>
        <trans-unit id="7e79d1c3816db22dfa49e704e2e1e701d76541a2" translate="yes" xml:space="preserve">
          <source>In the GitHub scenario, the session cookie would be allowed when following a regular link from an external website and be blocked in CSRF-prone request methods (e.g. &lt;code&gt;POST&lt;/code&gt;).</source>
          <target state="translated">В сценарии GitHub файл cookie сеанса будет разрешен при переходе по обычной ссылке с внешнего веб-сайта и будет заблокирован методами, склонными к CSRF (например, &lt;code&gt;POST&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a35e39704ca75e16ec151ec02bb8d09c5245b059" translate="yes" xml:space="preserve">
          <source>In the SQL standards, each SQL query starts a transaction, unless one is already active. Such transactions must then be explicitly committed or rolled back.</source>
          <target state="translated">В стандартах SQL каждый SQL-запрос начинает транзакцию,если только он уже не активен.Затем такие транзакции должны быть явно зафиксированы или откачены.</target>
        </trans-unit>
        <trans-unit id="d85d9726aad9b5761b698a91a3fa752dcf0b2bef" translate="yes" xml:space="preserve">
          <source>In the above example, &lt;code&gt;{{ section.title }}&lt;/code&gt; will be replaced with the &lt;code&gt;title&lt;/code&gt; attribute of the &lt;code&gt;section&lt;/code&gt; object.</source>
          <target state="translated">В приведенном выше примере &lt;code&gt;{{ section.title }}&lt;/code&gt; будет заменен атрибутом &lt;code&gt;title&lt;/code&gt; объекта &lt;code&gt;section&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8e400b0450098c588ff1bf9ef3ced42847e2189" translate="yes" xml:space="preserve">
          <source>In the above example, both URL patterns point to the same view &amp;ndash; &lt;code&gt;views.page&lt;/code&gt; &amp;ndash; but the first pattern doesn&amp;rsquo;t capture anything from the URL. If the first pattern matches, the &lt;code&gt;page()&lt;/code&gt; function will use its default argument for &lt;code&gt;num&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;. If the second pattern matches, &lt;code&gt;page()&lt;/code&gt; will use whatever &lt;code&gt;num&lt;/code&gt; value was captured.</source>
          <target state="translated">В приведенном выше примере оба шаблона URL указывают на одно и то же представление - &lt;code&gt;views.page&lt;/code&gt; - но первый шаблон ничего не захватывает из URL. Если первый шаблон соответствует, функция &lt;code&gt;page()&lt;/code&gt; будет использовать аргумент по умолчанию для &lt;code&gt;num&lt;/code&gt; , &lt;code&gt;1&lt;/code&gt; . Если второй шаблон соответствует, &lt;code&gt;page()&lt;/code&gt; будет использовать любое значение &lt;code&gt;num&lt;/code&gt; ,которое было получено.</target>
        </trans-unit>
        <trans-unit id="fc33d28f955e8ad2642da30af478dafd323d4ae4" translate="yes" xml:space="preserve">
          <source>In the above example, only the fields &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;content&lt;/code&gt; will be displayed, sequentially, in the form. &lt;code&gt;fields&lt;/code&gt; can contain values defined in &lt;a href=&quot;#django.contrib.admin.ModelAdmin.readonly_fields&quot;&gt;&lt;code&gt;ModelAdmin.readonly_fields&lt;/code&gt;&lt;/a&gt; to be displayed as read-only.</source>
          <target state="translated">В приведенном выше примере только поля &lt;code&gt;url&lt;/code&gt; , &lt;code&gt;title&lt;/code&gt; и &lt;code&gt;content&lt;/code&gt; будут отображаться последовательно в форме. &lt;code&gt;fields&lt;/code&gt; могут содержать значения, определенные в &lt;a href=&quot;#django.contrib.admin.ModelAdmin.readonly_fields&quot;&gt; &lt;code&gt;ModelAdmin.readonly_fields&lt;/code&gt; &lt;/a&gt; для отображения только для чтения.</target>
        </trans-unit>
        <trans-unit id="36256fe1165ee329fa178a898c6d788a746b521c" translate="yes" xml:space="preserve">
          <source>In the above example, the &amp;ldquo;age&amp;rdquo; field will be excluded but the &amp;ldquo;name&amp;rdquo; field will be included in the generated form.</source>
          <target state="translated">В приведенном выше примере поле &amp;laquo;возраст&amp;raquo; будет исключено, но поле &amp;laquo;имя&amp;raquo; будет включено в сгенерированную форму.</target>
        </trans-unit>
        <trans-unit id="9b8e730b189037d720518429d06c01e1f5b80497" translate="yes" xml:space="preserve">
          <source>In the above example, the &lt;a href=&quot;../exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; exception raised by &lt;code&gt;Model.clean()&lt;/code&gt; was instantiated with a string, so it will be stored in a special error dictionary key, &lt;a href=&quot;../exceptions#django.core.exceptions.NON_FIELD_ERRORS&quot;&gt;&lt;code&gt;NON_FIELD_ERRORS&lt;/code&gt;&lt;/a&gt;. This key is used for errors that are tied to the entire model instead of to a specific field:</source>
          <target state="translated">В приведенном выше примере исключение &lt;a href=&quot;../exceptions#django.core.exceptions.ValidationError&quot;&gt; &lt;code&gt;ValidationError&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;Model.clean()&lt;/code&gt; было создано в виде строки, поэтому оно будет сохранено в специальном ключе словаря ошибок, &lt;a href=&quot;../exceptions#django.core.exceptions.NON_FIELD_ERRORS&quot;&gt; &lt;code&gt;NON_FIELD_ERRORS&lt;/code&gt; &lt;/a&gt; . Этот ключ используется для ошибок, которые связаны со всей моделью, а не с конкретным полем:</target>
        </trans-unit>
        <trans-unit id="054e7fb40fa8d67083dfe23cb23e8a33bd7f4a9d" translate="yes" xml:space="preserve">
          <source>In the above example, the captured &lt;code&gt;&quot;username&quot;&lt;/code&gt; variable is passed to the included URLconf, as expected.</source>
          <target state="translated">В приведенном выше примере захваченная переменная &lt;code&gt;&quot;username&quot;&lt;/code&gt; передается во включенный URLconf, как и ожидалось.</target>
        </trans-unit>
        <trans-unit id="2e4675b3bb9d4b4002a375360f90bfba0c6f91a3" translate="yes" xml:space="preserve">
          <source>In the above example, the methods below will be available on the manager &lt;code&gt;reporter.article_set&lt;/code&gt;.</source>
          <target state="translated">В приведенном выше примере приведенные ниже методы будут доступны на менеджере &lt;code&gt;reporter.article_set&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65ad72df37c0389d2230e3f4d563d496af4f3eea" translate="yes" xml:space="preserve">
          <source>In the above example, the values for the &lt;code&gt;pass_word&lt;/code&gt; and &lt;code&gt;credit_card_number&lt;/code&gt; POST parameters will be hidden and replaced with stars (&lt;code&gt;**********&lt;/code&gt;) in the request&amp;rsquo;s representation inside the error reports, whereas the value of the &lt;code&gt;name&lt;/code&gt; parameter will be disclosed.</source>
          <target state="translated">В приведенном выше примере значения параметров POST &lt;code&gt;pass_word&lt;/code&gt; и &lt;code&gt;credit_card_number&lt;/code&gt; будут скрыты и заменены звездочками ( &lt;code&gt;**********&lt;/code&gt; ) в представлении запроса в отчетах об ошибках, тогда как значение параметра &lt;code&gt;name&lt;/code&gt; будет быть раскрытым</target>
        </trans-unit>
        <trans-unit id="bac0f6907fb81a767b7ad0760c5544c765493d0b" translate="yes" xml:space="preserve">
          <source>In the above example, the values for the &lt;code&gt;user&lt;/code&gt;, &lt;code&gt;pw&lt;/code&gt; and &lt;code&gt;cc&lt;/code&gt; variables will be hidden and replaced with stars (&lt;code&gt;**********&lt;/code&gt;) in the error reports, whereas the value of the &lt;code&gt;name&lt;/code&gt; variable will be disclosed.</source>
          <target state="translated">В приведенном выше примере значения переменных &lt;code&gt;user&lt;/code&gt; , &lt;code&gt;pw&lt;/code&gt; и &lt;code&gt;cc&lt;/code&gt; будут скрыты и заменены звездочками ( &lt;code&gt;**********&lt;/code&gt; ) в отчетах об ошибках, тогда как значение переменной &lt;code&gt;name&lt;/code&gt; будет раскрыто.</target>
        </trans-unit>
        <trans-unit id="5c13e8f2b17b315a25d1911d4b412a00dfeed073" translate="yes" xml:space="preserve">
          <source>In the above example, we determined that a case insensitive lookup would be more useful. When dealing with non-English names, a further improvement is to use &lt;a href=&quot;../../ref/contrib/postgres/lookups#std:fieldlookup-unaccent&quot;&gt;&lt;code&gt;unaccented comparison&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">В приведенном выше примере мы определили, что поиск без учета регистра будет более полезным. При работе с неанглийскими именами дальнейшее улучшение заключается в использовании &lt;a href=&quot;../../ref/contrib/postgres/lookups#std:fieldlookup-unaccent&quot;&gt; &lt;code&gt;unaccented comparison&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="b96e1eae465a596d094ef282c8dc2860d32edcd6" translate="yes" xml:space="preserve">
          <source>In the above example, we set the Atom feed&amp;rsquo;s &lt;code&gt;subtitle&lt;/code&gt; to the RSS feed&amp;rsquo;s &lt;code&gt;description&lt;/code&gt;, because it&amp;rsquo;s quite short already.</source>
          <target state="translated">В приведенном выше примере мы установили &lt;code&gt;subtitle&lt;/code&gt; канала Atom в &lt;code&gt;description&lt;/code&gt; канала RSS , поскольку он уже достаточно короткий.</target>
        </trans-unit>
        <trans-unit id="b2be673a5dead01b36c94268ca913e0de459fc31" translate="yes" xml:space="preserve">
          <source>In the above, if &lt;code&gt;athlete_list&lt;/code&gt; is not empty, the number of athletes will be displayed by the &lt;code&gt;{{ athlete_list|length }}&lt;/code&gt; variable.</source>
          <target state="translated">Выше, если &lt;code&gt;athlete_list&lt;/code&gt; не пуст, число спортсменов будет отображаться переменной &lt;code&gt;{{ athlete_list|length }}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="036bce9d539c951de0462de6ee0b26a612693636" translate="yes" xml:space="preserve">
          <source>In the above, if &lt;code&gt;athlete_list&lt;/code&gt; is not empty, the number of athletes will be displayed by the &lt;code&gt;{{ athlete_list|length }}&lt;/code&gt; variable. Otherwise, if &lt;code&gt;athlete_in_locker_room_list&lt;/code&gt; is not empty, the message &amp;ldquo;Athletes should be out&amp;hellip;&amp;rdquo; will be displayed. If both lists are empty, &amp;ldquo;No athletes.&amp;rdquo; will be displayed.</source>
          <target state="translated">Выше, если &lt;code&gt;athlete_list&lt;/code&gt; не пуст, число спортсменов будет отображаться переменной &lt;code&gt;{{ athlete_list|length }}&lt;/code&gt; . В противном случае, если &lt;code&gt;athlete_in_locker_room_list&lt;/code&gt; не пуст, появится сообщение &amp;laquo;Спортсмены должны отсутствовать&amp;hellip;&amp;raquo;. Если оба списка пусты, &amp;laquo;Нет спортсменов&amp;raquo;. будет отображаться.</target>
        </trans-unit>
        <trans-unit id="06c8c3e595ff8b1404a63e6217e0454048fc6f6a" translate="yes" xml:space="preserve">
          <source>In the above, the &lt;a href=&quot;builtins#std:templatetag-load&quot;&gt;&lt;code&gt;load&lt;/code&gt;&lt;/a&gt; tag loads the &lt;code&gt;humanize&lt;/code&gt; tag library, which then makes the &lt;code&gt;intcomma&lt;/code&gt; filter available for use. If you&amp;rsquo;ve enabled &lt;a href=&quot;../contrib/admin/admindocs#module-django.contrib.admindocs&quot;&gt;&lt;code&gt;django.contrib.admindocs&lt;/code&gt;&lt;/a&gt;, you can consult the documentation area in your admin to find the list of custom libraries in your installation.</source>
          <target state="translated">Выше тег &lt;a href=&quot;builtins#std:templatetag-load&quot;&gt; &lt;code&gt;load&lt;/code&gt; &lt;/a&gt; загружает библиотеку &lt;code&gt;humanize&lt;/code&gt; тегов, которая затем делает доступным для использования фильтр &lt;code&gt;intcomma&lt;/code&gt; . Если вы включили &lt;a href=&quot;../contrib/admin/admindocs#module-django.contrib.admindocs&quot;&gt; &lt;code&gt;django.contrib.admindocs&lt;/code&gt; &lt;/a&gt; , вы можете обратиться к области документации в вашем администраторе, чтобы найти список пользовательских библиотек в вашей установке.</target>
        </trans-unit>
        <trans-unit id="67157a0988cf8fa0ce4d5b9aaad093f942a5bcec" translate="yes" xml:space="preserve">
          <source>In the admin framework, the &amp;ldquo;view on site&amp;rdquo; link uses the current &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; to work out the domain for the site that it will redirect to.</source>
          <target state="translated">В структуре администратора ссылка &amp;laquo;просмотр на сайте&amp;raquo; использует текущий &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt; для определения домена для сайта, на который он будет перенаправлен.</target>
        </trans-unit>
        <trans-unit id="08000b52dbe25a161a365d8c2d097c086b24d380" translate="yes" xml:space="preserve">
          <source>In the beginning there was only the view function contract, Django passed your function an &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; and expected back an &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt;. This was the extent of what Django provided.</source>
          <target state="translated">В начале был только контракт функции представления, Django передал вашей функции &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt; и ожидал возврата &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; . Это была степень того, что предоставил Джанго.</target>
        </trans-unit>
        <trans-unit id="89eb2f3613635899652ec376acd113c2fd5cfaa7" translate="yes" xml:space="preserve">
          <source>In the case of a model instance that contained no data, it would rarely if ever be useful to do anything with it in a template. On the other hand, it makes perfect sense to render an unpopulated form - that&amp;rsquo;s what we do when we want the user to populate it.</source>
          <target state="translated">В случае экземпляра модели, который не содержит данных, редко, если вообще будет полезно что-либо делать с ним в шаблоне. С другой стороны, имеет смысл представить незаполненную форму - это то, что мы делаем, когда хотим, чтобы пользователь заполнил ее.</target>
        </trans-unit>
        <trans-unit id="c4ab596a52e2082b97972eb72c42ac13c8c2757e" translate="yes" xml:space="preserve">
          <source>In the command prompt, ensure your virtual environment is active, and execute the following command:</source>
          <target state="translated">В интерпретаторе команд убедитесь,что ваша виртуальная среда активна,и выполните следующую команду:</target>
        </trans-unit>
        <trans-unit id="1609a3c27d2c2842f190fe8992b4a57338c73380" translate="yes" xml:space="preserve">
          <source>In the contact form example above, &lt;code&gt;cc_myself&lt;/code&gt; will be a boolean value. Likewise, fields such as &lt;a href=&quot;../../ref/forms/fields#django.forms.IntegerField&quot;&gt;&lt;code&gt;IntegerField&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/forms/fields#django.forms.FloatField&quot;&gt;&lt;code&gt;FloatField&lt;/code&gt;&lt;/a&gt; convert values to a Python &lt;code&gt;int&lt;/code&gt; and &lt;code&gt;float&lt;/code&gt; respectively.</source>
          <target state="translated">В приведенном выше примере контактной формы &lt;code&gt;cc_myself&lt;/code&gt; будет логическим значением. Аналогично, такие поля, как &lt;a href=&quot;../../ref/forms/fields#django.forms.IntegerField&quot;&gt; &lt;code&gt;IntegerField&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../../ref/forms/fields#django.forms.FloatField&quot;&gt; &lt;code&gt;FloatField&lt;/code&gt; ,&lt;/a&gt; преобразуют значения в Python &lt;code&gt;int&lt;/code&gt; и &lt;code&gt;float&lt;/code&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="03eed8e02cbc009e5225da6ccd80e31e4e1d6836" translate="yes" xml:space="preserve">
          <source>In the context of a Web application, &amp;lsquo;form&amp;rsquo; might refer to that HTML &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;, or to the Django &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; that produces it, or to the structured data returned when it is submitted, or to the end-to-end working collection of these parts.</source>
          <target state="translated">В контексте веб-приложения &amp;laquo;форма&amp;raquo; может ссылаться на этот HTML &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; или на &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt; Django, которая ее создает, или на структурированные данные, возвращаемые при его отправке, или на сквозную рабочую коллекцию. из этих частей.</target>
        </trans-unit>
        <trans-unit id="5a34903ee3fddd98e21618e22c82cf3333e5c987" translate="yes" xml:space="preserve">
          <source>In the corresponding view functions, ensure that &lt;a href=&quot;templates/api#django.template.RequestContext&quot;&gt;&lt;code&gt;RequestContext&lt;/code&gt;&lt;/a&gt; is used to render the response so that &lt;code&gt;{% csrf_token %}&lt;/code&gt; will work properly. If you&amp;rsquo;re using the &lt;a href=&quot;../topics/http/shortcuts#django.shortcuts.render&quot;&gt;&lt;code&gt;render()&lt;/code&gt;&lt;/a&gt; function, generic views, or contrib apps, you are covered already since these all use &lt;code&gt;RequestContext&lt;/code&gt;.</source>
          <target state="translated">В соответствующих функциях просмотра убедитесь, что &lt;a href=&quot;templates/api#django.template.RequestContext&quot;&gt; &lt;code&gt;RequestContext&lt;/code&gt; &lt;/a&gt; используется для визуализации ответа, чтобы &lt;code&gt;{% csrf_token %}&lt;/code&gt; работал правильно. Если вы используете функцию &lt;a href=&quot;../topics/http/shortcuts#django.shortcuts.render&quot;&gt; &lt;code&gt;render()&lt;/code&gt; &lt;/a&gt; , общие представления или приложения contrib, вы уже охвачены, поскольку все они используют &lt;code&gt;RequestContext&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb1af41ff9f27e5d9ab58cfab85994a63806adce" translate="yes" xml:space="preserve">
          <source>In the event that all the fields you&amp;rsquo;re querying on are contained within one particular model, you can create a functional index which matches the search vector you wish to use. The PostgreSQL documentation has details on &lt;a href=&quot;https://www.postgresql.org/docs/current/textsearch-tables.html#TEXTSEARCH-TABLES-INDEX&quot;&gt;creating indexes for full text search&lt;/a&gt;.</source>
          <target state="translated">В случае, если все поля, по которым вы запрашиваете, содержатся в одной конкретной модели, вы можете создать функциональный индекс, соответствующий поисковому вектору, который вы хотите использовать. Документация PostgreSQL содержит подробную информацию о &lt;a href=&quot;https://www.postgresql.org/docs/current/textsearch-tables.html#TEXTSEARCH-TABLES-INDEX&quot;&gt;создании индексов для полнотекстового поиска&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d6f92ce395efb837fbb0560e8eb518c73b6ff24f" translate="yes" xml:space="preserve">
          <source>In the example &lt;code&gt;Blog&lt;/code&gt; model, the primary key is the &lt;code&gt;id&lt;/code&gt; field, so these three statements are equivalent:</source>
          <target state="translated">В примере модели &lt;code&gt;Blog&lt;/code&gt; первичным ключом является поле &lt;code&gt;id&lt;/code&gt; , поэтому эти три утверждения эквивалентны:</target>
        </trans-unit>
        <trans-unit id="04e4b5bcdcb35cbb0379b289fe1b7eece5458cac" translate="yes" xml:space="preserve">
          <source>In the example above, in the case of a &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; relationship, &lt;a href=&quot;querysets#django.db.models.query.QuerySet.update&quot;&gt;&lt;code&gt;QuerySet.update()&lt;/code&gt;&lt;/a&gt; is used to perform the update. This requires the objects to already be saved.</source>
          <target state="translated">В примере выше, в случае отношения &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;querysets#django.db.models.query.QuerySet.update&quot;&gt; &lt;code&gt;QuerySet.update()&lt;/code&gt; &lt;/a&gt; используется для выполнения обновления. Это требует, чтобы объекты уже были сохранены.</target>
        </trans-unit>
        <trans-unit id="47ec93e0054e37a606f1e92a3f1d7cada5286c57" translate="yes" xml:space="preserve">
          <source>In the examples given so far, we have constructed filters that compare the value of a model field with a constant. But what if you want to compare the value of a model field with another field on the same model?</source>
          <target state="translated">В приведенных примерах мы построили фильтры,сравнивающие значение поля модели с константой.Но что,если вы хотите сравнить значение поля модели с другим полем той же модели?</target>
        </trans-unit>
        <trans-unit id="982c8f23176116f5070c7936c454b1f26af16ddc" translate="yes" xml:space="preserve">
          <source>In the first empty migration file, add a &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt;&lt;code&gt;RunPython&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunSQL&quot;&gt;&lt;code&gt;RunSQL&lt;/code&gt;&lt;/a&gt; operation to generate a unique value (UUID in the example) for each existing row. Also add an import of &lt;code&gt;uuid&lt;/code&gt;. For example:</source>
          <target state="translated">В первом пустом файле миграции добавьте &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt; &lt;code&gt;RunPython&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunSQL&quot;&gt; &lt;code&gt;RunSQL&lt;/code&gt; ,&lt;/a&gt; чтобы сгенерировать уникальное значение (в примере UUID) для каждой существующей строки. Также добавьте импорт &lt;code&gt;uuid&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="e35fd9a39f1807a0c7d83b5f82b050cbd08213f6" translate="yes" xml:space="preserve">
          <source>In the first example, the UTF-8 characters are unquoted. In the second, the percent-encodings remain unchanged because they lie outside the valid UTF-8 range or represent a reserved character.</source>
          <target state="translated">В первом примере символы UTF-8 не цитируются.Во втором случае процентные кодировки остаются неизменными,так как они лежат за пределами допустимого диапазона UTF-8 или представляют собой зарезервированный символ.</target>
        </trans-unit>
        <trans-unit id="8efe90c94b3cf572dcc6da616bffdbfcdf129e44" translate="yes" xml:space="preserve">
          <source>In the first query, the annotation precedes the filter, so the filter has no effect on the annotation. &lt;code&gt;distinct=True&lt;/code&gt; is required to avoid a &lt;a href=&quot;#combining-multiple-aggregations&quot;&gt;query bug&lt;/a&gt;.</source>
          <target state="translated">В первом запросе аннотация предшествует фильтру, поэтому фильтр не влияет на аннотацию. &lt;code&gt;distinct=True&lt;/code&gt; требуется, чтобы избежать &lt;a href=&quot;#combining-multiple-aggregations&quot;&gt;ошибки запроса&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0d275b5cb7fc4b1432c362be17f59a41994939ed" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;ChoiceAdmin&lt;/code&gt; has an autocomplete field for the &lt;code&gt;ForeignKey&lt;/code&gt; to the &lt;code&gt;Question&lt;/code&gt;. The results are filtered by the &lt;code&gt;question_text&lt;/code&gt; field and ordered by the &lt;code&gt;date_created&lt;/code&gt; field:</source>
          <target state="translated">В следующем примере &lt;code&gt;ChoiceAdmin&lt;/code&gt; имеет поле автозаполнения для &lt;code&gt;ForeignKey&lt;/code&gt; к &lt;code&gt;Question&lt;/code&gt; . Результаты фильтруются полем &lt;code&gt;question_text&lt;/code&gt; и упорядочиваются по полю &lt;code&gt;date_created&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d2b60a09350bb67bd6b7fee1bd06d1d2f6e595dc" translate="yes" xml:space="preserve">
          <source>In the following example, the cache is shared over Memcached instances running on the IP addresses 172.19.26.240 (port 11211), 172.19.26.242 (port 11212), and 172.19.26.244 (port 11213):</source>
          <target state="translated">В следующем примере кэш используется совместно с экземплярами кэша,работающими с IP-адресами 172.19.26.240 (порт 11211),172.19.26.242 (порт 11212)и 172.19.26.244 (порт 11213):</target>
        </trans-unit>
        <trans-unit id="774a14ff6afa3b15c21e0e0586425ba89b6281a2" translate="yes" xml:space="preserve">
          <source>In the following example, the distance from the city of Hobart to every other &lt;a href=&quot;model-api#django.contrib.gis.db.models.PointField&quot;&gt;&lt;code&gt;PointField&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;AustraliaCity&lt;/code&gt; queryset is calculated:</source>
          <target state="translated">В следующем примере вычисляется расстояние от города Хобарта до любого другого &lt;a href=&quot;model-api#django.contrib.gis.db.models.PointField&quot;&gt; &lt;code&gt;PointField&lt;/code&gt; &lt;/a&gt; в наборе запросов &lt;code&gt;AustraliaCity&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c32f5b020a99c145d62d9c288e0593a7f2c0d978" translate="yes" xml:space="preserve">
          <source>In the following example, the field &lt;code&gt;identifier&lt;/code&gt; is used as the identifying field:</source>
          <target state="translated">В следующем примере &lt;code&gt;identifier&lt;/code&gt; поля используется в качестве идентифицирующего поля:</target>
        </trans-unit>
        <trans-unit id="0552e596b3c4142a0555d2a338ce81644b342ad7" translate="yes" xml:space="preserve">
          <source>In the following example, we have a migration in &lt;code&gt;app1&lt;/code&gt; which needs to use models in &lt;code&gt;app2&lt;/code&gt;. We aren&amp;rsquo;t concerned with the details of &lt;code&gt;move_m1&lt;/code&gt; other than the fact it will need to access models from both apps. Therefore we&amp;rsquo;ve added a dependency that specifies the last migration of &lt;code&gt;app2&lt;/code&gt;:</source>
          <target state="translated">В следующем примере у нас есть миграция в &lt;code&gt;app1&lt;/code&gt; , которая должна использовать модели в &lt;code&gt;app2&lt;/code&gt; . Мы не заботимся о деталях &lt;code&gt;move_m1&lt;/code&gt; , за исключением того факта, что ему потребуется доступ к моделям из обоих приложений. Поэтому мы добавили зависимость, которая определяет последнюю миграцию &lt;code&gt;app2&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="66feb7cf13c927fdd790d1e911432061cb79c0af" translate="yes" xml:space="preserve">
          <source>In the last case of the above example, we can tell the session object explicitly that it has been modified by setting the &lt;code&gt;modified&lt;/code&gt; attribute on the session object:</source>
          <target state="translated">В последнем случае вышеприведенного примера мы можем явно указать объекту сеанса, что он был изменен, установив &lt;code&gt;modified&lt;/code&gt; атрибут для объекта сеанса:</target>
        </trans-unit>
        <trans-unit id="e66e10c8d1fea4f262f45d7c5ee1356b55e39416" translate="yes" xml:space="preserve">
          <source>In the literal path named by the fixture</source>
          <target state="translated">На буквальном пути,названном прибором.</target>
        </trans-unit>
        <trans-unit id="9418ed20fe28804d3d729bcecdb7de900f9ed0b8" translate="yes" xml:space="preserve">
          <source>In the meantime, for backwards compatibility, the datetime is considered to be in the default time zone, which is generally what you expect.</source>
          <target state="translated">В то же время,для обратной совместимости,дата считается в часовом поясе по умолчанию,что,как правило,является тем,что вы ожидаете.</target>
        </trans-unit>
        <trans-unit id="d4fb536c73b22ca7075047278fc28ffbc607d147" translate="yes" xml:space="preserve">
          <source>In the method of a class-based view:</source>
          <target state="translated">В методе представления на основе классов:</target>
        </trans-unit>
        <trans-unit id="551cd425acfd8cfac753b72db2384c8e4518bc4e" translate="yes" xml:space="preserve">
          <source>In the multi-table inheritance situation, it doesn&amp;rsquo;t make sense for a child class to inherit from its parent&amp;rsquo;s &lt;a href=&quot;#meta-options&quot;&gt;Meta&lt;/a&gt; class. All the &lt;a href=&quot;#meta-options&quot;&gt;Meta&lt;/a&gt; options have already been applied to the parent class and applying them again would normally only lead to contradictory behavior (this is in contrast with the abstract base class case, where the base class doesn&amp;rsquo;t exist in its own right).</source>
          <target state="translated">В ситуации наследования нескольких таблиц дочерний класс не имеет смысла наследовать от &lt;a href=&quot;#meta-options&quot;&gt;мета-&lt;/a&gt; класса своего родителя . Все опции &lt;a href=&quot;#meta-options&quot;&gt;Meta&lt;/a&gt; уже применены к родительскому классу, и их повторное применение обычно приводит только к противоречивому поведению (это отличается от случая абстрактного базового класса, где базовый класс не существует сам по себе).</target>
        </trans-unit>
        <trans-unit id="bb58183bc0706efe78380abe5cb2057a726424ab" translate="yes" xml:space="preserve">
          <source>In the preceding example, the &lt;code&gt;ModelAdmin&lt;/code&gt; class doesn&amp;rsquo;t define any custom values (yet). As a result, the default admin interface will be provided. If you are happy with the default admin interface, you don&amp;rsquo;t need to define a &lt;code&gt;ModelAdmin&lt;/code&gt; object at all &amp;ndash; you can register the model class without providing a &lt;code&gt;ModelAdmin&lt;/code&gt; description. The preceding example could be simplified to:</source>
          <target state="translated">В предыдущем примере класс &lt;code&gt;ModelAdmin&lt;/code&gt; не определяет никаких пользовательских значений (пока). В результате будет предоставлен интерфейс администратора по умолчанию. Если вы довольны интерфейсом администратора по умолчанию, вам вообще не нужно определять объект &lt;code&gt;ModelAdmin&lt;/code&gt; - вы можете зарегистрировать класс модели без предоставления описания &lt;code&gt;ModelAdmin&lt;/code&gt; . Предыдущий пример может быть упрощен до:</target>
        </trans-unit>
        <trans-unit id="d4e2b35778a30a864406e14b018f76e39bbabff2" translate="yes" xml:space="preserve">
          <source>In the previous example, &lt;code&gt;do_comment()&lt;/code&gt; discarded everything between &lt;code&gt;{% comment %}&lt;/code&gt; and &lt;code&gt;{% endcomment %}&lt;/code&gt;. Instead of doing that, it&amp;rsquo;s possible to do something with the code between block tags.</source>
          <target state="translated">В предыдущем примере &lt;code&gt;do_comment()&lt;/code&gt; отбросил все между &lt;code&gt;{% comment %}&lt;/code&gt; и &lt;code&gt;{% endcomment %}&lt;/code&gt; . Вместо этого можно сделать что-то с кодом между тегами блока.</target>
        </trans-unit>
        <trans-unit id="16349fd6d21ff8a2e6a4c0856997b30ec2b6e166" translate="yes" xml:space="preserve">
          <source>In the rendered HTML, formsets include a prefix on each field&amp;rsquo;s name. By default, the prefix is &lt;code&gt;'form'&lt;/code&gt;, but it can be customized using the formset&amp;rsquo;s &lt;code&gt;prefix&lt;/code&gt; argument.</source>
          <target state="translated">В отображаемом HTML формы набора включают префикс для имени каждого поля. По умолчанию префикс &lt;code&gt;'form'&lt;/code&gt; , но его можно настроить с помощью аргумента &lt;code&gt;prefix&lt;/code&gt; formset .</target>
        </trans-unit>
        <trans-unit id="200e10196ad98eae959477f8c80a67aaf04f93e7" translate="yes" xml:space="preserve">
          <source>In the resulting &lt;code&gt;.po&lt;/code&gt; file, the string will then appear as often as there are different contextual markers for the same string (the context will appear on the &lt;code&gt;msgctxt&lt;/code&gt; line), allowing the translator to give a different translation for each of them.</source>
          <target state="translated">В результирующем файле &lt;code&gt;.po&lt;/code&gt; строка будет отображаться так часто, как для одной и той же строки появляются разные контекстные маркеры (контекст появится в строке &lt;code&gt;msgctxt&lt;/code&gt; ), что позволяет переводчику давать разные переводы для каждого из них.</target>
        </trans-unit>
        <trans-unit id="6f86e54811f7e97ae54dd57549dcb8faa44a8dcb" translate="yes" xml:space="preserve">
          <source>In the same vein as the 404 and 500 views, Django has a view to handle 403 Forbidden errors. If a view results in a 403 exception then Django will, by default, call the view &lt;code&gt;django.views.defaults.permission_denied&lt;/code&gt;.</source>
          <target state="translated">В том же духе, что и 404 и 500 представлений, Django имеет представление для обработки 403 запрещенных ошибок. Если представление приводит к исключению 403, то Django по умолчанию вызовет представление &lt;code&gt;django.views.defaults.permission_denied&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f6f25c44dc9756ac574ee333e0116c1d550b05f1" translate="yes" xml:space="preserve">
          <source>In the second example, the first filter restricts the queryset to all those blogs linked to entries with &lt;em&gt;&amp;ldquo;Lennon&amp;rdquo;&lt;/em&gt; in the headline. The second filter restricts the set of blogs &lt;em&gt;further&lt;/em&gt; to those that are also linked to entries that were published in 2008. The entries selected by the second filter may or may not be the same as the entries in the first filter. We are filtering the &lt;code&gt;Blog&lt;/code&gt; items with each filter statement, not the &lt;code&gt;Entry&lt;/code&gt; items.</source>
          <target state="translated">Во втором примере первый фильтр ограничивает набор запросов всеми блогами, связанными с записями с заголовком &lt;em&gt;&amp;laquo;Леннон&amp;raquo;&lt;/em&gt; . Второй фильтр ограничивает множество блогов &lt;em&gt;дополнительных&lt;/em&gt; к тем , которые также связаны с записями , которые были опубликованы в 2008 году записи , выбранные с помощью второго фильтра , может или не может быть таким же , как записи в первом фильтре. Мы фильтруем элементы &lt;code&gt;Blog&lt;/code&gt; с каждым оператором фильтра, а не с &lt;code&gt;Entry&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b14fb50e61cd86af2c3d8c9d512bc73616482c1e" translate="yes" xml:space="preserve">
          <source>In the simplest case, all these sections get lumped together into one &lt;code&gt;sitemap.xml&lt;/code&gt;, but it&amp;rsquo;s also possible to use the framework to generate a sitemap index that references individual sitemap files, one per section. (See &lt;a href=&quot;#creating-a-sitemap-index&quot;&gt;Creating a sitemap index&lt;/a&gt; below.)</source>
          <target state="translated">В простейшем случае все эти разделы объединяются в один &lt;code&gt;sitemap.xml&lt;/code&gt; , но также можно использовать инфраструктуру для создания индекса карты сайта, который ссылается на отдельные файлы карты сайта, по одному на раздел. (См. &lt;a href=&quot;#creating-a-sitemap-index&quot;&gt;Создание индекса карты сайта&lt;/a&gt; ниже.)</target>
        </trans-unit>
        <trans-unit id="e1ac5a12917c8c24fac2334237392eba54ee1052" translate="yes" xml:space="preserve">
          <source>In the simplest case, if no custom pluralization is needed, this returns &lt;code&gt;false&lt;/code&gt; for the integer &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;true&lt;/code&gt; for all other numbers.</source>
          <target state="translated">В простейшем случае, если не требуется пользовательское множественное число, возвращается &lt;code&gt;false&lt;/code&gt; для целого числа &lt;code&gt;1&lt;/code&gt; и &lt;code&gt;true&lt;/code&gt; для всех остальных чисел.</target>
        </trans-unit>
        <trans-unit id="8a3de0040189995be2cf2593da6e670d68408010" translate="yes" xml:space="preserve">
          <source>In the template &lt;code&gt;list.html&lt;/code&gt;, you can include navigation between pages in the same way as in the template for the &lt;code&gt;ListView&lt;/code&gt; above.</source>
          <target state="translated">В шаблоне &lt;code&gt;list.html&lt;/code&gt; вы можете включить навигацию между страницами так же, как в шаблоне для &lt;code&gt;ListView&lt;/code&gt; выше.</target>
        </trans-unit>
        <trans-unit id="112593952263d8950c97e9372f1328eef1054b9d" translate="yes" xml:space="preserve">
          <source>In the terminal, we can run our test:</source>
          <target state="translated">В терминале мы можем провести тест:</target>
        </trans-unit>
        <trans-unit id="1349bc91f2f8bcface3eb94b3617ded0896f7cda" translate="yes" xml:space="preserve">
          <source>In the usual initialization process, the &lt;code&gt;ready&lt;/code&gt; method is only called once by Django. But in some corner cases, particularly in tests which are fiddling with installed applications, &lt;code&gt;ready&lt;/code&gt; might be called more than once. In that case, either write idempotent methods, or put a flag on your &lt;code&gt;AppConfig&lt;/code&gt; classes to prevent re-running code which should be executed exactly one time.</source>
          <target state="translated">В обычном процессе инициализации, &lt;code&gt;ready&lt;/code&gt; метод вызывается только один раз Django. Но в некоторых критических случаях, особенно в тестах, которые работают с установленными приложениями, &lt;code&gt;ready&lt;/code&gt; может вызываться более одного раза. В этом случае либо напишите идемпотентные методы, либо установите флажок в классы &lt;code&gt;AppConfig&lt;/code&gt; , чтобы предотвратить повторный запуск кода, который должен выполняться ровно один раз.</target>
        </trans-unit>
        <trans-unit id="a6b1551e57f5bae10f916d69e9178bd6c7f54504" translate="yes" xml:space="preserve">
          <source>In the view, ensure that you don&amp;rsquo;t include &lt;code&gt;created_by&lt;/code&gt; in the list of fields to edit, and override &lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.ModelFormMixin.form_valid&quot;&gt;&lt;code&gt;form_valid()&lt;/code&gt;&lt;/a&gt; to add the user:</source>
          <target state="translated">В представлении убедитесь, что вы не включили &lt;code&gt;created_by&lt;/code&gt; в список полей для редактирования, и переопределите &lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.ModelFormMixin.form_valid&quot;&gt; &lt;code&gt;form_valid()&lt;/code&gt; &lt;/a&gt; чтобы добавить пользователя:</target>
        </trans-unit>
        <trans-unit id="369aea273c56bb856861501dbf97173cbd5b7309" translate="yes" xml:space="preserve">
          <source>In these cases, Django&amp;rsquo;s admin lets you write and register &amp;ldquo;actions&amp;rdquo; &amp;ndash; functions that get called with a list of objects selected on the change list page.</source>
          <target state="translated">В этих случаях администратор Django позволяет вам писать и регистрировать &amp;laquo;действия&amp;raquo; - функции, которые вызываются со списком объектов, выбранных на странице списка изменений.</target>
        </trans-unit>
        <trans-unit id="ff28e3a2e690b47e59ebb25d9ed8baa34f438420" translate="yes" xml:space="preserve">
          <source>In these cases, you can always access the database directly, routing around the model layer entirely.</source>
          <target state="translated">В этих случаях вы всегда можете получить прямой доступ к базе данных,маршрутизируя ее по всему слою модели.</target>
        </trans-unit>
        <trans-unit id="fbbd19f07f9cef20e603e35db722408992fae9b4" translate="yes" xml:space="preserve">
          <source>In these cases, you can configure Django&amp;rsquo;s settings manually. Do this by calling:</source>
          <target state="translated">В этих случаях вы можете настроить параметры Django вручную. Сделайте это по телефону:</target>
        </trans-unit>
        <trans-unit id="704de23b31a120b2bba2d3638dd6200c1609b04d" translate="yes" xml:space="preserve">
          <source>In these cases, you can register to receive signals sent only by particular senders. In the case of &lt;a href=&quot;../ref/signals#django.db.models.signals.pre_save&quot;&gt;&lt;code&gt;django.db.models.signals.pre_save&lt;/code&gt;&lt;/a&gt;, the sender will be the model class being saved, so you can indicate that you only want signals sent by some model:</source>
          <target state="translated">В этих случаях вы можете зарегистрироваться для получения сигналов, отправляемых только определенными отправителями. В случае &lt;a href=&quot;../ref/signals#django.db.models.signals.pre_save&quot;&gt; &lt;code&gt;django.db.models.signals.pre_save&lt;/code&gt; &lt;/a&gt; отправителем будет сохраняемый класс модели, поэтому вы можете указать, что вам нужны только сигналы, отправленные некоторой моделью:</target>
        </trans-unit>
        <trans-unit id="b7960a550f468b9dc5e94875f3e62a9969b92b99" translate="yes" xml:space="preserve">
          <source>In this above example, the &lt;code&gt;cleaned_data&lt;/code&gt; value for &lt;code&gt;nick_name&lt;/code&gt; is set to an empty string, because &lt;code&gt;nick_name&lt;/code&gt; is &lt;code&gt;CharField&lt;/code&gt;, and &lt;code&gt;CharField&lt;/code&gt;s treat empty values as an empty string. Each field type knows what its &amp;ldquo;blank&amp;rdquo; value is &amp;ndash; e.g., for &lt;code&gt;DateField&lt;/code&gt;, it&amp;rsquo;s &lt;code&gt;None&lt;/code&gt; instead of the empty string. For full details on each field&amp;rsquo;s behavior in this case, see the &amp;ldquo;Empty value&amp;rdquo; note for each field in the &amp;ldquo;Built-in &lt;code&gt;Field&lt;/code&gt; classes&amp;rdquo; section below.</source>
          <target state="translated">В этом примере &lt;code&gt;cleaned_data&lt;/code&gt; значение cleaned_data для &lt;code&gt;nick_name&lt;/code&gt; устанавливается в пустую строку, потому что &lt;code&gt;nick_name&lt;/code&gt; - это &lt;code&gt;CharField&lt;/code&gt; , а &lt;code&gt;CharField&lt;/code&gt; обрабатывает пустые значения как пустую строку. Каждый тип поля знает, каково его &amp;laquo;пустое&amp;raquo; значение - например, для &lt;code&gt;DateField&lt;/code&gt; это &lt;code&gt;None&lt;/code&gt; вместо пустой строки. Для получения полной информации о поведении каждого поля в этом случае см. Примечание &amp;laquo;Пустое значение&amp;raquo; для каждого поля в разделе &amp;laquo; Классы встроенного &lt;code&gt;Field&lt;/code&gt; &amp;raquo; ниже.</target>
        </trans-unit>
        <trans-unit id="d643c703ff7b79f6479ff9521d4628ae8af455d8" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;poly&lt;/code&gt; is the geographic field, &lt;a href=&quot;geoquerysets#std:fieldlookup-gis-contains&quot;&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt; is the spatial lookup type, &lt;code&gt;pnt&lt;/code&gt; is the parameter (which may be a &lt;a href=&quot;geos#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; object or a string of GeoJSON , WKT, or HEXEWKB), and &lt;code&gt;rst&lt;/code&gt; is a &lt;a href=&quot;gdal#django.contrib.gis.gdal.GDALRaster&quot;&gt;&lt;code&gt;GDALRaster&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">В этом случае &lt;code&gt;poly&lt;/code&gt; является географическим полем, &lt;a href=&quot;geoquerysets#std:fieldlookup-gis-contains&quot;&gt; &lt;code&gt;contains&lt;/code&gt; &lt;/a&gt; тип пространственного поиска, &lt;code&gt;pnt&lt;/code&gt; является параметром (который может быть объектом &lt;a href=&quot;geos#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt; или строкой GeoJSON, WKT или HEXEWKB), а &lt;code&gt;rst&lt;/code&gt; является объектом &lt;a href=&quot;gdal#django.contrib.gis.gdal.GDALRaster&quot;&gt; &lt;code&gt;GDALRaster&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7445c15f895769d09cc852511696e2bbac4a2530" translate="yes" xml:space="preserve">
          <source>In this case, a caching mechanism (such as Django&amp;rsquo;s own cache middleware) will cache a separate version of the page for each unique user-agent.</source>
          <target state="translated">В этом случае механизм кэширования (например, собственное промежуточное ПО для кэширования Django) будет кэшировать отдельную версию страницы для каждого уникального пользовательского агента.</target>
        </trans-unit>
        <trans-unit id="dce53faed5d5616c30db50952cf57b2835a3fdb3" translate="yes" xml:space="preserve">
          <source>In this case, both the tag and the filter will see the translated string, so they don&amp;rsquo;t need to be aware of translations.</source>
          <target state="translated">В этом случае и тег, и фильтр увидят переведенную строку, поэтому им не нужно знать о переводах.</target>
        </trans-unit>
        <trans-unit id="e088f70ea4095e39b7329f3fd37bb777703e1375" translate="yes" xml:space="preserve">
          <source>In this case, migrations pertaining to the &lt;code&gt;blog&lt;/code&gt; app will be contained in the &lt;code&gt;blog.db_migrations&lt;/code&gt; package.</source>
          <target state="translated">В этом случае миграции, относящиеся к приложению &lt;code&gt;blog&lt;/code&gt; , будут содержаться в пакете &lt;code&gt;blog.db_migrations&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e0019695fe483255859741edb13cf942f6859d9f" translate="yes" xml:space="preserve">
          <source>In this case, the Apache configuration should look like this:</source>
          <target state="translated">В этом случае конфигурация Apache должна выглядеть следующим образом:</target>
        </trans-unit>
        <trans-unit id="08e37f4fa83a842b83cf7349cedf3295bb5c2ac3" translate="yes" xml:space="preserve">
          <source>In this case, the Oracle backend will use a separate &lt;code&gt;SELECT&lt;/code&gt; query to retrieve &lt;code&gt;AutoField&lt;/code&gt; values.</source>
          <target state="translated">В этом случае сервер Oracle будет использовать отдельный запрос &lt;code&gt;SELECT&lt;/code&gt; для получения значений &lt;code&gt;AutoField&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ec5cb6330ac92777b17bc2333657f1300336af6" translate="yes" xml:space="preserve">
          <source>In this case, the lazy translations in &lt;code&gt;result&lt;/code&gt; will only be converted to strings when &lt;code&gt;result&lt;/code&gt; itself is used in a string (usually at template rendering time).</source>
          <target state="translated">В этом случае ленивый перевод в &lt;code&gt;result&lt;/code&gt; будет преобразован в строки, только если сам &lt;code&gt;result&lt;/code&gt; используется в строке (обычно во время рендеринга шаблона).</target>
        </trans-unit>
        <trans-unit id="f80ae9b1fb32feea2c4dd344be42cee331d89abf" translate="yes" xml:space="preserve">
          <source>In this case, the subquery must only return a single column &lt;em&gt;and&lt;/em&gt; a single row: the email address of the most recently created comment.</source>
          <target state="translated">В этом случае подзапрос должен возвращать только один столбец &lt;em&gt;и&lt;/em&gt; одну строку: адрес электронной почты последнего созданного комментария.</target>
        </trans-unit>
        <trans-unit id="bbeb898add7eb688c2d43a04bafad361bbad9894" translate="yes" xml:space="preserve">
          <source>In this case, the subquery must use &lt;a href=&quot;querysets#django.db.models.query.QuerySet.values&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt; to return only a single column: the primary key of the post.</source>
          <target state="translated">В этом случае подзапрос должен использовать &lt;a href=&quot;querysets#django.db.models.query.QuerySet.values&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt; чтобы вернуть только один столбец: первичный ключ сообщения.</target>
        </trans-unit>
        <trans-unit id="fd746e7696a4d17c8dc094df4d9ebfa894053b5d" translate="yes" xml:space="preserve">
          <source>In this case, what&amp;rsquo;s needed is something - and in practice, often a collection of things - to improve the code&amp;rsquo;s performance without, or only minimally, affecting its behavior.</source>
          <target state="translated">В этом случае необходимо что-то - и на практике, часто набор вещей - чтобы улучшить производительность кода, не влияя или не оказывая минимального влияния на его поведение.</target>
        </trans-unit>
        <trans-unit id="881194f58bb0fde296017190a9bf68cd84e48df2" translate="yes" xml:space="preserve">
          <source>In this case, you could write the &lt;code&gt;post()&lt;/code&gt; method yourself, keeping &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#DetailView&quot;&gt;&lt;code&gt;DetailView&lt;/code&gt;&lt;/a&gt; as the only generic functionality, although writing &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; handling code involves a lot of duplication.</source>
          <target state="translated">В этом случае вы могли бы написать метод &lt;code&gt;post()&lt;/code&gt; самостоятельно, сохранив &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#DetailView&quot;&gt; &lt;code&gt;DetailView&lt;/code&gt; &lt;/a&gt; как единственную универсальную функциональность, хотя написание кода для обработки &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt; требует большого дублирования.</target>
        </trans-unit>
        <trans-unit id="2fa3b713cccf7ea4ad5e0fd4a5c02eaa0d614140" translate="yes" xml:space="preserve">
          <source>In this case, you could write the &lt;code&gt;post()&lt;/code&gt; method yourself, keeping &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#DetailView&quot;&gt;&lt;code&gt;DetailView&lt;/code&gt;&lt;/a&gt; as the only generic functionality, although writing &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; handling code involves a lot of duplication.</source>
          <target state="translated">В этом случае вы можете написать метод &lt;code&gt;post()&lt;/code&gt; самостоятельно, сохранив &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#DetailView&quot;&gt; &lt;code&gt;DetailView&lt;/code&gt; &lt;/a&gt; в качестве единственной универсальной функции, хотя написание кода обработки &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt; связано с большим количеством дублирования.</target>
        </trans-unit>
        <trans-unit id="b6756abb4e1060efdbcbb43826dc10b83e3f6800" translate="yes" xml:space="preserve">
          <source>In this case, you should leave both &lt;a href=&quot;settings#std:setting-HOST&quot;&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;settings#std:setting-PORT&quot;&gt;&lt;code&gt;PORT&lt;/code&gt;&lt;/a&gt; empty. However, if you don&amp;rsquo;t use a &lt;code&gt;tnsnames.ora&lt;/code&gt; file or a similar naming method and want to connect using the SID (&amp;ldquo;xe&amp;rdquo; in this example), then fill in both &lt;a href=&quot;settings#std:setting-HOST&quot;&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;settings#std:setting-PORT&quot;&gt;&lt;code&gt;PORT&lt;/code&gt;&lt;/a&gt; like so:</source>
          <target state="translated">В этом случае вы должны оставить как &lt;a href=&quot;settings#std:setting-HOST&quot;&gt; &lt;code&gt;HOST&lt;/code&gt; ,так&lt;/a&gt; и &lt;a href=&quot;settings#std:setting-PORT&quot;&gt; &lt;code&gt;PORT&lt;/code&gt; &lt;/a&gt; пустыми. Однако, если вы не используете файл &lt;code&gt;tnsnames.ora&lt;/code&gt; или аналогичный метод именования и хотите подключиться с использованием SID (в данном примере &amp;laquo;xe&amp;raquo;), заполните оба &lt;a href=&quot;settings#std:setting-HOST&quot;&gt; &lt;code&gt;HOST&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;settings#std:setting-PORT&quot;&gt; &lt;code&gt;PORT&lt;/code&gt; &lt;/a&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="f7de94b0d76d606f984d3f9448c8656b1164ffb9" translate="yes" xml:space="preserve">
          <source>In this case, you&amp;rsquo;d have to create &lt;code&gt;subject.txt&lt;/code&gt; and &lt;code&gt;message.txt&lt;/code&gt; template files for both the LJWorld.com and Lawrence.com template directories. That gives you more flexibility, but it&amp;rsquo;s also more complex.</source>
          <target state="translated">В этом случае вам &lt;code&gt;subject.txt&lt;/code&gt; создать файлы шаблонов subject.txt и &lt;code&gt;message.txt&lt;/code&gt; для шаблонных каталогов LJWorld.com и Lawrence.com. Это дает вам больше гибкости, но и сложнее.</target>
        </trans-unit>
        <trans-unit id="5fde808145c2d08c0cba263811b659a0d1ffcce9" translate="yes" xml:space="preserve">
          <source>In this code, if the validation error is raised, the form will display an error message at the top of the form (normally) describing the problem.</source>
          <target state="translated">В этом коде,если ошибка валидации поднята,то в верхней части формы (как правило)будет выведено сообщение об ошибке,описывающее проблему.</target>
        </trans-unit>
        <trans-unit id="526cbb8057d25716d73655e57b33c0157d33b6a0" translate="yes" xml:space="preserve">
          <source>In this code, if the validation error is raised, the form will display an error message at the top of the form (normally) describing the problem. Such errors are non-field errors, which are displayed in the template with &lt;code&gt;{{ form.non_field_errors }}&lt;/code&gt;.</source>
          <target state="translated">В этом коде, если возникает ошибка проверки, форма будет отображать сообщение об ошибке вверху формы (обычно) с описанием проблемы. Такие ошибки не относятся к полевым ошибкам, которые отображаются в шаблоне с помощью &lt;code&gt;{{ form.non_field_errors }}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ffce769628ac27f44d87f42df5862f24acc276dd" translate="yes" xml:space="preserve">
          <source>In this dictionary, the keys are the field names, and the values are lists of strings representing the error messages. The error messages are stored in lists because a field can have multiple error messages.</source>
          <target state="translated">В этом словаре ключами являются имена полей,а значениями-списки строк,представляющих сообщения об ошибках.Сообщения об ошибках хранятся в списках,так как в одном поле может быть несколько сообщений об ошибках.</target>
        </trans-unit>
        <trans-unit id="a623564b4f28f417a216cea862c50164191f61c6" translate="yes" xml:space="preserve">
          <source>In this dictionary, the keys are the field names, which correspond to the attributes in your &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; class. The values are the data you&amp;rsquo;re trying to validate. These will usually be strings, but there&amp;rsquo;s no requirement that they be strings; the type of data you pass depends on the &lt;a href=&quot;fields#django.forms.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt;, as we&amp;rsquo;ll see in a moment.</source>
          <target state="translated">В этом словаре ключи - это имена полей, которые соответствуют атрибутам в вашем классе &lt;a href=&quot;#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt; . Значения - это данные, которые вы пытаетесь проверить. Обычно это строки, но не обязательно, чтобы они были строками; тип данных, которые вы передаете, зависит от &lt;a href=&quot;fields#django.forms.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt; , как мы скоро увидим.</target>
        </trans-unit>
        <trans-unit id="b1587bc0110b474aeaac0785a98f42c3c6c762ba" translate="yes" xml:space="preserve">
          <source>In this document we discuss how to activate, use, and customize Django&amp;rsquo;s admin interface.</source>
          <target state="translated">В этом документе мы обсуждаем, как активировать, использовать и настраивать интерфейс администратора Django.</target>
        </trans-unit>
        <trans-unit id="b0926719287aa421a1d56b0909a1fc7f781d1d2c" translate="yes" xml:space="preserve">
          <source>In this example the number of objects is passed to the translation languages as the &lt;code&gt;count&lt;/code&gt; variable.</source>
          <target state="translated">В этом примере количество объектов передается языкам перевода в качестве переменной &lt;code&gt;count&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="656eac437a8a706f5a50f4706d81cd4556322bcc" translate="yes" xml:space="preserve">
          <source>In this example we specify that the &lt;code&gt;auth.Permission&lt;/code&gt; object with the PK 27 has a foreign key to the &lt;code&gt;contenttypes.ContentType&lt;/code&gt; instance with the PK 9.</source>
          <target state="translated">В этом примере мы указываем, что объект &lt;code&gt;auth.Permission&lt;/code&gt; с PK 27 имеет внешний ключ к экземпляру &lt;code&gt;contenttypes.ContentType&lt;/code&gt; с PK 9.</target>
        </trans-unit>
        <trans-unit id="bf1663e1b601ad090c33e868ff2147fe08cffda3" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;ContactFormWithPriority&lt;/code&gt; contains all the fields from &lt;code&gt;ContactForm&lt;/code&gt;, plus an additional field, &lt;code&gt;priority&lt;/code&gt;. The &lt;code&gt;ContactForm&lt;/code&gt; fields are ordered first:</source>
          <target state="translated">В этом примере &lt;code&gt;ContactFormWithPriority&lt;/code&gt; содержит все поля &lt;code&gt;ContactForm&lt;/code&gt; , а также дополнительное поле &lt;code&gt;priority&lt;/code&gt; . В &lt;code&gt;ContactForm&lt;/code&gt; поля упорядочены первым:</target>
        </trans-unit>
        <trans-unit id="2209b80ce38841507206cfe8aa0b119a7ec9da3b" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;a.save()&lt;/code&gt; will not be undone in the case where &lt;code&gt;b.save()&lt;/code&gt; raises an exception.</source>
          <target state="translated">В этом примере &lt;code&gt;a.save()&lt;/code&gt; не будет отменен в случае, когда &lt;code&gt;b.save()&lt;/code&gt; вызывает исключение.</target>
        </trans-unit>
        <trans-unit id="c1edf53e67d2069bdbedbd1cbf50a2d693ff2e07" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;my_view&lt;/code&gt; will be accessed at &lt;code&gt;/admin/myapp/mymodel/my_view/&lt;/code&gt; (assuming the admin URLs are included at &lt;code&gt;/admin/&lt;/code&gt;.)</source>
          <target state="translated">В этом примере &lt;code&gt;my_view&lt;/code&gt; будет доступно по адресу &lt;code&gt;/admin/myapp/mymodel/my_view/&lt;/code&gt; (при условии, что URL-адреса администратора включены в &lt;code&gt;/admin/&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="051a23c85ac542ba06c65f27cebe7e4b3a60e68a" translate="yes" xml:space="preserve">
          <source>In this example, Django looks up the URL of the page to which the user will be redirected in the &lt;code&gt;redirect_to&lt;/code&gt; context variable.</source>
          <target state="translated">В этом примере Django ищет URL-адрес страницы, на которую будет перенаправлен пользователь, в контекстной переменной &lt;code&gt;redirect_to&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1d03cde60eb57ef15a12664d31c7a72da6e28c3" translate="yes" xml:space="preserve">
          <source>In this example, Memcached is available through a local Unix socket file &lt;code&gt;/tmp/memcached.sock&lt;/code&gt; using the &lt;code&gt;python-memcached&lt;/code&gt; binding:</source>
          <target state="translated">В этом примере Memcached доступен через локальный файл сокета Unix &lt;code&gt;/tmp/memcached.sock&lt;/code&gt; с использованием привязки &lt;code&gt;python-memcached&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="433fbee087dcc328bf7db214b22efaf3bd50d02f" translate="yes" xml:space="preserve">
          <source>In this example, Memcached is running on localhost (127.0.0.1) port 11211, using the &lt;code&gt;python-memcached&lt;/code&gt; binding:</source>
          <target state="translated">В этом примере Memcached работает на локальном хосте (127.0.0.1) порт 11211, используя привязку &lt;code&gt;python-memcached&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="84f133ecf9ca09837434e3890d3cef12ca4fed57" translate="yes" xml:space="preserve">
          <source>In this example, a 404 to any URL ending with &lt;code&gt;.php&lt;/code&gt; or &lt;code&gt;.cgi&lt;/code&gt; will &lt;em&gt;not&lt;/em&gt; be reported. Neither will any URL starting with &lt;code&gt;/phpmyadmin/&lt;/code&gt;.</source>
          <target state="translated">В этом примере 404 для любого URL, заканчивающегося &lt;code&gt;.php&lt;/code&gt; или &lt;code&gt;.cgi&lt;/code&gt; , &lt;em&gt;не&lt;/em&gt; будет сообщаться. Ни один URL не будет начинаться с &lt;code&gt;/phpmyadmin/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="195054f639f8e715f1022ab811617e165c16a511" translate="yes" xml:space="preserve">
          <source>In this example, a &lt;code&gt;Place&lt;/code&gt; optionally can be a &lt;code&gt;Restaurant&lt;/code&gt;:</source>
          <target state="translated">В этом примере &lt;code&gt;Place&lt;/code&gt; необязательно может быть &lt;code&gt;Restaurant&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6756ca7fc7c0d76c6fb4aabb06e2a4158f57b981" translate="yes" xml:space="preserve">
          <source>In this example, a filesystem backend is being configured with a timeout of 60 seconds, and a maximum capacity of 1000 items:</source>
          <target state="translated">В этом примере,бэкэнд файловой системы настраивается с тайм-аутом 60 секунд,и максимальной емкостью 1000 элементов:</target>
        </trans-unit>
        <trans-unit id="03c005782eb9d896545ab46f7dff017dd668f6aa" translate="yes" xml:space="preserve">
          <source>In this example, an &lt;code&gt;Article&lt;/code&gt; can be published in multiple &lt;code&gt;Publication&lt;/code&gt; objects, and a &lt;code&gt;Publication&lt;/code&gt; has multiple &lt;code&gt;Article&lt;/code&gt; objects:</source>
          <target state="translated">В этом примере &lt;code&gt;Article&lt;/code&gt; может быть опубликована в нескольких объектах &lt;code&gt;Publication&lt;/code&gt; , а &lt;code&gt;Publication&lt;/code&gt; имеет несколько объектов &lt;code&gt;Article&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b684f5c5a6b44db149a6fc644abf91fa5ab5f261" translate="yes" xml:space="preserve">
          <source>In this example, default settings are taken from &lt;code&gt;myapp_defaults&lt;/code&gt;, and the &lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; setting is set to &lt;code&gt;True&lt;/code&gt;, regardless of its value in &lt;code&gt;myapp_defaults&lt;/code&gt;:</source>
          <target state="translated">В этом примере настройки по умолчанию берутся из &lt;code&gt;myapp_defaults&lt;/code&gt; , а для параметра &lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt; установлено значение &lt;code&gt;True&lt;/code&gt; , независимо от его значения в &lt;code&gt;myapp_defaults&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b161f5e802b80cd394d6cf5bffa10986e5345e41" translate="yes" xml:space="preserve">
          <source>In this example, even if &lt;code&gt;generate_relationships()&lt;/code&gt; causes a database error by breaking an integrity constraint, you can execute queries in &lt;code&gt;add_children()&lt;/code&gt;, and the changes from &lt;code&gt;create_parent()&lt;/code&gt; are still there and bound to the same transaction. Note that any operations attempted in &lt;code&gt;generate_relationships()&lt;/code&gt; will already have been rolled back safely when &lt;code&gt;handle_exception()&lt;/code&gt; is called, so the exception handler can also operate on the database if necessary.</source>
          <target state="translated">В этом примере, даже если &lt;code&gt;generate_relationships()&lt;/code&gt; вызывает ошибку базы данных, нарушая ограничение целостности, вы можете выполнять запросы в &lt;code&gt;add_children()&lt;/code&gt; , а изменения из &lt;code&gt;create_parent()&lt;/code&gt; все еще присутствуют и связаны с той же транзакцией. Обратите внимание, что любые операции, предпринятые в &lt;code&gt;generate_relationships()&lt;/code&gt; , уже будут безопасно &lt;code&gt;handle_exception()&lt;/code&gt; при вызове handle_exception () , поэтому обработчик исключений также может работать с базой данных при необходимости.</target>
        </trans-unit>
        <trans-unit id="f4befaaa872f56a0fce53c6c75f7fb67a6d8c1ea" translate="yes" xml:space="preserve">
          <source>In this example, even if &lt;code&gt;generate_relationships()&lt;/code&gt; causes a database error by breaking an integrity constraint, you can execute queries in &lt;code&gt;add_children()&lt;/code&gt;, and the changes from &lt;code&gt;create_parent()&lt;/code&gt; are still there. Note that any operations attempted in &lt;code&gt;generate_relationships()&lt;/code&gt; will already have been rolled back safely when &lt;code&gt;handle_exception()&lt;/code&gt; is called, so the exception handler can also operate on the database if necessary.</source>
          <target state="translated">В этом примере, даже если &lt;code&gt;generate_relationships()&lt;/code&gt; вызывает ошибку базы данных, нарушая ограничение целостности, вы можете выполнять запросы в &lt;code&gt;add_children()&lt;/code&gt; , и изменения из &lt;code&gt;create_parent()&lt;/code&gt; все еще там. Обратите внимание, что любые операции, предпринятые в &lt;code&gt;generate_relationships()&lt;/code&gt; , уже будут безопасно откатываться при &lt;code&gt;handle_exception()&lt;/code&gt; , поэтому обработчик исключений также может работать с базой данных, если это необходимо.</target>
        </trans-unit>
        <trans-unit id="df6ab84b235e4d9ea5612f6a9d9413066aa77f02" translate="yes" xml:space="preserve">
          <source>In this example, every instance of &lt;code&gt;ProtectedView&lt;/code&gt; will have login protection. These examples use &lt;code&gt;login_required&lt;/code&gt;, however, the same behavior can be obtained by using &lt;a href=&quot;../auth/default#django.contrib.auth.mixins.LoginRequiredMixin&quot;&gt;&lt;code&gt;LoginRequiredMixin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">В этом примере каждый экземпляр &lt;code&gt;ProtectedView&lt;/code&gt; будет иметь защиту входа в систему. В этих примерах используется &lt;code&gt;login_required&lt;/code&gt; , однако такое же поведение можно получить с помощью &lt;a href=&quot;../auth/default#django.contrib.auth.mixins.LoginRequiredMixin&quot;&gt; &lt;code&gt;LoginRequiredMixin&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2a8d54516eb2ddf93c0730193ef9e5ff2275ee15" translate="yes" xml:space="preserve">
          <source>In this example, for a request to &lt;code&gt;/blog/2005/&lt;/code&gt;, Django will call &lt;code&gt;views.year_archive(request, year=2005, foo='bar')&lt;/code&gt;.</source>
          <target state="translated">В этом примере для запроса к &lt;code&gt;/blog/2005/&lt;/code&gt; Django вызовет &lt;code&gt;views.year_archive(request, year=2005, foo='bar')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b3417d8eb44afe1e1d939759264bc4ffae54889e" translate="yes" xml:space="preserve">
          <source>In this example, only the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; attributes of each model will be serialized. The primary key is always serialized as the &lt;code&gt;pk&lt;/code&gt; element in the resulting output; it never appears in the &lt;code&gt;fields&lt;/code&gt; part.</source>
          <target state="translated">В этом примере будут сериализованы только атрибуты &lt;code&gt;name&lt;/code&gt; и &lt;code&gt;size&lt;/code&gt; каждой модели. Первичный ключ всегда сериализуется как элемент &lt;code&gt;pk&lt;/code&gt; в результирующем выводе; это никогда не появляется в части &lt;code&gt;fields&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8067d8a8c40ae0f8c2ce14da99d61f4b9966a75a" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;a href=&quot;builtins#std:templatetag-block&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; tag defines three blocks that child templates can fill in. All the &lt;a href=&quot;builtins#std:templatetag-block&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; tag does is to tell the template engine that a child template may override those portions of the template.</source>
          <target state="translated">В этом примере тег &lt;a href=&quot;builtins#std:templatetag-block&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt; определяет три блока, которые могут заполнять дочерние шаблоны. Все, что делает тег &lt;a href=&quot;builtins#std:templatetag-block&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt; , это сообщает механизму шаблонов, что дочерний шаблон может переопределить эти части шаблона.</target>
        </trans-unit>
        <trans-unit id="42619477c811cd44cc02c9355df92668fd6ed4c7" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;/credit/reports/&lt;/code&gt; URL will be handled by the &lt;code&gt;credit_views.report()&lt;/code&gt; Django view.</source>
          <target state="translated">В этом примере URL-адрес &lt;code&gt;/credit/reports/&lt;/code&gt; будет обрабатываться &lt;code&gt;credit_views.report()&lt;/code&gt; Django credit_views.report () .</target>
        </trans-unit>
        <trans-unit id="ae3edfae11bb8f4437ccac4fa556cfddea017145" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;closepoll&lt;/code&gt; command will be made available to any project that includes the &lt;code&gt;polls&lt;/code&gt; application in &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">В этом примере команда &lt;code&gt;closepoll&lt;/code&gt; будет доступна для любого проекта, который включает приложение &lt;code&gt;polls&lt;/code&gt; в &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6be3072a6fd735a0703698b0b6ac3a9cb0c9f9cc" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;first_name&lt;/code&gt; and &lt;code&gt;last_name&lt;/code&gt; fields will be linked on the change list page:</source>
          <target state="translated">В этом примере поля &lt;code&gt;first_name&lt;/code&gt; и &lt;code&gt;last_name&lt;/code&gt; будут связаны на странице списка изменений:</target>
        </trans-unit>
        <trans-unit id="1b687cca57779b68234d9c0e07d13e5c941f7615" translate="yes" xml:space="preserve">
          <source>In this example, the RSS feed uses a &lt;code&gt;description&lt;/code&gt; while the Atom feed uses a &lt;code&gt;subtitle&lt;/code&gt;. That&amp;rsquo;s because Atom feeds don&amp;rsquo;t provide for a feed-level &amp;ldquo;description,&amp;rdquo; but they &lt;em&gt;do&lt;/em&gt; provide for a &amp;ldquo;subtitle.&amp;rdquo;</source>
          <target state="translated">В этом примере лента RSS использует &lt;code&gt;description&lt;/code&gt; а лента Atom использует &lt;code&gt;subtitle&lt;/code&gt; . Это потому , что Atom каналов не обеспечивает для подачи уровня &amp;laquo;описания&amp;raquo; , но они &lt;em&gt;действительно&lt;/em&gt; обеспечивают для &amp;laquo;субтитров.&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="8b326223d286d7752529ad59f11428b49a503034" translate="yes" xml:space="preserve">
          <source>In this example, the URLs &lt;code&gt;/basic-admin/&lt;/code&gt; and &lt;code&gt;/advanced-admin/&lt;/code&gt; feature separate versions of the admin site &amp;ndash; using the &lt;code&gt;AdminSite&lt;/code&gt; instances &lt;code&gt;myproject.admin.basic_site&lt;/code&gt; and &lt;code&gt;myproject.admin.advanced_site&lt;/code&gt;, respectively:</source>
          <target state="translated">В этом примере URL - адрес &lt;code&gt;/basic-admin/&lt;/code&gt; и &lt;code&gt;/advanced-admin/&lt;/code&gt; есть отдельные версии сайта админ - используя &lt;code&gt;AdminSite&lt;/code&gt; экземпляров &lt;code&gt;myproject.admin.basic_site&lt;/code&gt; и &lt;code&gt;myproject.admin.advanced_site&lt;/code&gt; , соответственно:</target>
        </trans-unit>
        <trans-unit id="a1064554cbb5e926b7642f639cedf3b4e19ccfaf" translate="yes" xml:space="preserve">
          <source>In this example, the authors will be grouped by name, so you will only get an annotated result for each &lt;em&gt;unique&lt;/em&gt; author name. This means if you have two authors with the same name, their results will be merged into a single result in the output of the query; the average will be computed as the average over the books written by both authors.</source>
          <target state="translated">В этом примере авторы будут сгруппированы по имени, поэтому вы получите только аннотированный результат для каждого &lt;em&gt;уникального&lt;/em&gt; имени автора. Это означает, что если у вас есть два автора с одинаковыми именами, их результаты будут объединены в один результат при выводе запроса; среднее будет вычислено как среднее по книгам, написанным обоими авторами.</target>
        </trans-unit>
        <trans-unit id="c26653b4dd28f60f5887d535fdd2c41a9be77e80" translate="yes" xml:space="preserve">
          <source>In this example, the cache is shared over Memcached instances running on IP address 172.19.26.240 and 172.19.26.242, both on port 11211:</source>
          <target state="translated">В этом примере кэш совместно используется с Memcached экземплярами,запущенными на IP-адресах 172.19.26.240 и 172.19.26.242,оба из которых находятся на порту 11211:</target>
        </trans-unit>
        <trans-unit id="24eb635a0f8bca996272df8a1c655a9b31f6b71b" translate="yes" xml:space="preserve">
          <source>In this example, the cache table&amp;rsquo;s name is &lt;code&gt;my_cache_table&lt;/code&gt;:</source>
          <target state="translated">В этом примере имя таблицы кеша - &lt;code&gt;my_cache_table&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c17ed15c449f1b9508d8419ce8642c1281f27a87" translate="yes" xml:space="preserve">
          <source>In this example, the call to &lt;code&gt;send_messages()&lt;/code&gt; opens a connection on the backend, sends the list of messages, and then closes the connection again.</source>
          <target state="translated">В этом примере вызов &lt;code&gt;send_messages()&lt;/code&gt; открывает соединение на сервере, отправляет список сообщений, а затем снова закрывает соединение.</target>
        </trans-unit>
        <trans-unit id="2745c5bdedd912f241c4ebd64a703e901229f077" translate="yes" xml:space="preserve">
          <source>In this example, the change list page grid will have no links:</source>
          <target state="translated">В этом примере сетка страниц списка изменений не будет содержать ссылок:</target>
        </trans-unit>
        <trans-unit id="c0da41921a43787015fac5f5e1c5d1dfecbbf48b" translate="yes" xml:space="preserve">
          <source>In this example, the current time zone is &lt;code&gt;&quot;Europe/Paris&quot;&lt;/code&gt;.</source>
          <target state="translated">В этом примере текущий часовой пояс - &lt;code&gt;&quot;Europe/Paris&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="441f22ede30f09b22a95399dcf5b6f52537098a8" translate="yes" xml:space="preserve">
          <source>In this example, the methods below will be available both on &lt;code&gt;topping.pizza_set&lt;/code&gt; and on &lt;code&gt;pizza.toppings&lt;/code&gt;.</source>
          <target state="translated">В этом примере приведенные ниже методы будут доступны как для &lt;code&gt;topping.pizza_set&lt;/code&gt; ,так и для &lt;code&gt;pizza.toppings&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f5a332a5b08e40bbb5f2b850dee9e2b68a4e2cc" translate="yes" xml:space="preserve">
          <source>In this example, the tables generated by the &lt;code&gt;TablespaceExample&lt;/code&gt; model (i.e. the model table and the many-to-many table) would be stored in the &lt;code&gt;tables&lt;/code&gt; tablespace. The index for the name field and the indexes on the many-to-many table would be stored in the &lt;code&gt;indexes&lt;/code&gt; tablespace. The &lt;code&gt;data&lt;/code&gt; field would also generate an index, but no tablespace for it is specified, so it would be stored in the model tablespace &lt;code&gt;tables&lt;/code&gt; by default. The index for the &lt;code&gt;shortcut&lt;/code&gt; field would be stored in the &lt;code&gt;other_indexes&lt;/code&gt; tablespace.</source>
          <target state="translated">В этом примере таблицы, сгенерированные моделью &lt;code&gt;TablespaceExample&lt;/code&gt; (т. Е. Таблица модели и таблица &amp;laquo;многие ко многим&amp;raquo;), будут храниться в табличном пространстве &lt;code&gt;tables&lt;/code&gt; . Индекс для поля имени и индексы для таблицы &amp;laquo;многие ко многим&amp;raquo; будут храниться в табличном пространстве &lt;code&gt;indexes&lt;/code&gt; . Поле &lt;code&gt;data&lt;/code&gt; также генерирует индекс, но для него не указывается табличное пространство, поэтому по умолчанию оно будет храниться в &lt;code&gt;tables&lt;/code&gt; табличного пространства модели . Индекс для поля &lt;code&gt;shortcut&lt;/code&gt; будет храниться в табличном пространстве &lt;code&gt;other_indexes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ca22a91ed71c67573ea882082b60373bebf9e7a" translate="yes" xml:space="preserve">
          <source>In this example, the text &lt;code&gt;&quot;Welcome to my site.&quot;&lt;/code&gt; is marked as a translation string:</source>
          <target state="translated">В этом примере текст &lt;code&gt;&quot;Welcome to my site.&quot;&lt;/code&gt; помечается как строка перевода:</target>
        </trans-unit>
        <trans-unit id="6696a467b231cec398b49a1411c769bd9d20d750" translate="yes" xml:space="preserve">
          <source>In this example, the translation infrastructure will be passed the string &lt;code&gt;&quot;yes,no&quot;&lt;/code&gt;, not the individual strings &lt;code&gt;&quot;yes&quot;&lt;/code&gt; and &lt;code&gt;&quot;no&quot;&lt;/code&gt;. The translated string will need to contain the comma so that the filter parsing code knows how to split up the arguments. For example, a German translator might translate the string &lt;code&gt;&quot;yes,no&quot;&lt;/code&gt; as &lt;code&gt;&quot;ja,nein&quot;&lt;/code&gt; (keeping the comma intact).</source>
          <target state="translated">В этом примере инфраструктуре перевода будет передана строка &lt;code&gt;&quot;yes,no&quot;&lt;/code&gt; , а не отдельные строки &lt;code&gt;&quot;yes&quot;&lt;/code&gt; и &lt;code&gt;&quot;no&quot;&lt;/code&gt; . Переведенная строка должна содержать запятую, чтобы код разбора фильтра знал, как разделить аргументы. Например, немецкий переводчик может перевести строку &lt;code&gt;&quot;yes,no&quot;&lt;/code&gt; как &lt;code&gt;&quot;ja,nein&quot;&lt;/code&gt; (оставив запятую без изменений).</target>
        </trans-unit>
        <trans-unit id="5fd9148aa6186298c2ad7e6285404bb429dd6b93" translate="yes" xml:space="preserve">
          <source>In this example, the verbose name is &lt;code&gt;&quot;first name&quot;&lt;/code&gt;:</source>
          <target state="translated">В этом примере подробное имя - &lt;code&gt;&quot;first name&quot;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7e5ca5faa411e0bbd9bffe6ad8e33eefb0319f3a" translate="yes" xml:space="preserve">
          <source>In this example, the verbose name is &lt;code&gt;&quot;person's first name&quot;&lt;/code&gt;:</source>
          <target state="translated">В этом примере подробное имя - &lt;code&gt;&quot;person's first name&quot;&lt;/code&gt; имя человека&amp;raquo; :</target>
        </trans-unit>
        <trans-unit id="55078180e09b52184446a0c7fd9194404890895d" translate="yes" xml:space="preserve">
          <source>In this example, we have both the alternating odd/even rows and a &amp;ldquo;major&amp;rdquo; row every fifth row. Only the five-row cycle is reset when a category changes.</source>
          <target state="translated">В этом примере у нас есть чередующиеся нечетные / четные строки и &amp;laquo;основная&amp;raquo; строка в каждой пятой строке. При изменении категории сбрасывается только цикл из пяти строк.</target>
        </trans-unit>
        <trans-unit id="9bd8c087e8aa79ac85b5531899e92178206616f9" translate="yes" xml:space="preserve">
          <source>In this example, we make full use of Python generators to efficiently handle the assembly and transmission of a large CSV file:</source>
          <target state="translated">В данном примере мы в полной мере используем генераторы Python для эффективной сборки и передачи большого CSV-файла:</target>
        </trans-unit>
        <trans-unit id="5e94a874a9da7d1610ef213a9b49fa74682f884e" translate="yes" xml:space="preserve">
          <source>In this example, we register the default &lt;code&gt;AdminSite&lt;/code&gt; instance &lt;code&gt;django.contrib.admin.site&lt;/code&gt; at the URL &lt;code&gt;/admin/&lt;/code&gt;</source>
          <target state="translated">В этом примере, мы регистрируем по умолчанию в &lt;code&gt;AdminSite&lt;/code&gt; экземпляр &lt;code&gt;django.contrib.admin.site&lt;/code&gt; в URL - адрес &lt;code&gt;/admin/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ba30e2bfdb84c3b1443dd255eac4c58fdcd1e451" translate="yes" xml:space="preserve">
          <source>In this example, you are outputting the week number. Keep in mind that week numbers computed by the &lt;a href=&quot;../templates/builtins#std:templatefilter-date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; template filter with the &lt;code&gt;'W'&lt;/code&gt; format character are not always the same as those computed by &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strptime&quot;&gt;&lt;code&gt;strptime()&lt;/code&gt;&lt;/a&gt; with the &lt;code&gt;'%W'&lt;/code&gt; format string. For year 2015, for example, week numbers output by &lt;a href=&quot;../templates/builtins#std:templatefilter-date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; are higher by one compared to those output by &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt;. There isn&amp;rsquo;t an equivalent for the &lt;code&gt;'%U'&lt;/code&gt;&lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt; format string in &lt;a href=&quot;../templates/builtins#std:templatefilter-date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt;. Therefore, you should avoid using &lt;a href=&quot;../templates/builtins#std:templatefilter-date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; to generate URLs for &lt;code&gt;WeekArchiveView&lt;/code&gt;.</source>
          <target state="translated">В этом примере вы выводите номер недели. Помните, что числа недель, вычисленные фильтром шаблона &lt;a href=&quot;../templates/builtins#std:templatefilter-date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt; с символом формата &lt;code&gt;'W'&lt;/code&gt; , не всегда совпадают с числами, вычисленными с помощью &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt; &lt;code&gt;strftime()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strptime&quot;&gt; &lt;code&gt;strptime()&lt;/code&gt; &lt;/a&gt; со строкой формата &lt;code&gt;'%W'&lt;/code&gt; . Например, для 2015 года номера недель, выводимые по &lt;a href=&quot;../templates/builtins#std:templatefilter-date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt; , на единицу выше, чем номера, выводимые &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt; &lt;code&gt;strftime()&lt;/code&gt; &lt;/a&gt; . В &lt;a href=&quot;../templates/builtins#std:templatefilter-date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt; не существует эквивалента для строки формата &lt;code&gt;'%U'&lt;/code&gt; &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt; &lt;code&gt;strftime()&lt;/code&gt; &lt;/a&gt; . Поэтому следует избегать использования &lt;a href=&quot;../templates/builtins#std:templatefilter-date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt; для создания URL-адресов для &lt;code&gt;WeekArchiveView&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="301b4eda5dbc41617be06964e971e23018f19d78" translate="yes" xml:space="preserve">
          <source>In this example:</source>
          <target state="translated">В этом примере:</target>
        </trans-unit>
        <trans-unit id="2f888816d53389958e26323fa35763774e290599" translate="yes" xml:space="preserve">
          <source>In this particular case, we&amp;rsquo;re exploiting the fact that the query will already contain the &lt;code&gt;blog_blog&lt;/code&gt; table in its &lt;code&gt;FROM&lt;/code&gt; clause.</source>
          <target state="translated">В данном конкретном случае мы используем тот факт, что запрос уже содержит таблицу &lt;code&gt;blog_blog&lt;/code&gt; в своем предложении &lt;code&gt;FROM&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c635e25207802e9b8c1131ab72188412bc70493" translate="yes" xml:space="preserve">
          <source>In this respect Python is an excellent language to work with, because solutions that look elegant and feel right usually are the best performing ones. As with most skills, learning what &amp;ldquo;looks right&amp;rdquo; takes practice, but one of the most useful guidelines is:</source>
          <target state="translated">В этом отношении Python является отличным языком для работы, потому что решения, которые выглядят элегантно и выглядят правильно, обычно являются наиболее эффективными. Как и в случае с большинством навыков, изучение того, что &amp;laquo;выглядит правильно&amp;raquo;, требует практики, но одно из самых полезных указаний:</target>
        </trans-unit>
        <trans-unit id="53881c3a8d3e6f6e56631aee12040a01b668caef" translate="yes" xml:space="preserve">
          <source>In this setup, we have two database servers: &lt;code&gt;dbprimary&lt;/code&gt;, described by the database alias &lt;code&gt;default&lt;/code&gt;, and &lt;code&gt;dbreplica&lt;/code&gt; described by the alias &lt;code&gt;replica&lt;/code&gt;. As you might expect, &lt;code&gt;dbreplica&lt;/code&gt; has been configured by the database administrator as a read replica of &lt;code&gt;dbprimary&lt;/code&gt;, so in normal activity, any write to &lt;code&gt;default&lt;/code&gt; will appear on &lt;code&gt;replica&lt;/code&gt;.</source>
          <target state="translated">В этой настройке у нас есть два сервера базы данных: &lt;code&gt;dbprimary&lt;/code&gt; , описанный псевдонимом базы данных по &lt;code&gt;default&lt;/code&gt; , и &lt;code&gt;dbreplica&lt;/code&gt; , описанный &lt;code&gt;replica&lt;/code&gt; псевдонима . Как и следовало ожидать, &lt;code&gt;dbreplica&lt;/code&gt; настроен администратором базы данных как для чтения копии &lt;code&gt;dbprimary&lt;/code&gt; , поэтому при нормальной деятельности любой записи по &lt;code&gt;default&lt;/code&gt; будет отображаться на &lt;code&gt;replica&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="293973f48ca1c4c53c9792048ba09fe823f806d0" translate="yes" xml:space="preserve">
          <source>In this situation, configure your proxy to set a custom HTTP header that tells Django whether the request came in via HTTPS, and set &lt;code&gt;SECURE_PROXY_SSL_HEADER&lt;/code&gt; so that Django knows what header to look for.</source>
          <target state="translated">В этой ситуации сконфигурируйте свой прокси-сервер, чтобы установить собственный HTTP-заголовок, который сообщает Django, поступил ли запрос через HTTPS, и установите &lt;code&gt;SECURE_PROXY_SSL_HEADER&lt;/code&gt; , чтобы Django знал, какой заголовок искать.</target>
        </trans-unit>
        <trans-unit id="f6f6d2dd48f330dbd09730efe37d7c3c65c3287e" translate="yes" xml:space="preserve">
          <source>In this situation, if you have implemented per-user time zone selection, the same URL may show a different set of objects, depending on the end user&amp;rsquo;s time zone. To avoid this, you should use a &lt;code&gt;DateField&lt;/code&gt; as the &lt;code&gt;date_field&lt;/code&gt; attribute.</source>
          <target state="translated">В этой ситуации, если вы реализовали выбор часового пояса для каждого пользователя, на одном и том же URL-адресе может отображаться различный набор объектов в зависимости от часового пояса конечного пользователя. Чтобы избежать этого, вы должны использовать &lt;code&gt;DateField&lt;/code&gt; в качестве атрибута &lt;code&gt;date_field&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef44d4c601df1f07d7990e5f9437d27dcc4746ed" translate="yes" xml:space="preserve">
          <source>In total, this code does either one or zero database queries. The only deliberate optimization performed is the use of the &lt;a href=&quot;../../ref/templates/builtins#std:templatetag-with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; tag. Using &lt;code&gt;QuerySet.exists()&lt;/code&gt; or &lt;code&gt;QuerySet.count()&lt;/code&gt; at any point would cause additional queries.</source>
          <target state="translated">Всего этот код выполняет один или ноль запросов к базе данных. Единственная преднамеренная оптимизация выполняется с использованием тега &lt;a href=&quot;../../ref/templates/builtins#std:templatetag-with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; . Использование &lt;code&gt;QuerySet.exists()&lt;/code&gt; или &lt;code&gt;QuerySet.count()&lt;/code&gt; в любой точке может вызвать дополнительные запросы.</target>
        </trans-unit>
        <trans-unit id="b2ea06b2718f0bb4f849e86d964c52e70ab6b065" translate="yes" xml:space="preserve">
          <source>In two lines:</source>
          <target state="translated">В двух строчках:</target>
        </trans-unit>
        <trans-unit id="0f07a5a9fed735706d534272971e4af57a8f3b8c" translate="yes" xml:space="preserve">
          <source>In your Django apps, use settings by importing the object &lt;code&gt;django.conf.settings&lt;/code&gt;. Example:</source>
          <target state="translated">В ваших приложениях Django используйте настройки, импортировав объект &lt;code&gt;django.conf.settings&lt;/code&gt; . Пример:</target>
        </trans-unit>
        <trans-unit id="df4de0d6688c36d088f680cbb25430ee62bb48e4" translate="yes" xml:space="preserve">
          <source>In your custom &lt;code&gt;change_form.html&lt;/code&gt; template, extend the &lt;code&gt;admin_change_form_document_ready&lt;/code&gt; block and add the event listener code:</source>
          <target state="translated">В пользовательской &lt;code&gt;change_form.html&lt;/code&gt; шаблон, расширить &lt;code&gt;admin_change_form_document_ready&lt;/code&gt; блок и добавить код слушателя событий:</target>
        </trans-unit>
        <trans-unit id="b734d5cfc118650b81e270f434765a1beb09fa63" translate="yes" xml:space="preserve">
          <source>In your development environment, you might need to add a setting to your &lt;code&gt;~.bashrc&lt;/code&gt; analogous to::</source>
          <target state="translated">В вашей среде разработки вам может понадобиться добавить параметр в &lt;code&gt;~.bashrc&lt;/code&gt; аналогичный ::</target>
        </trans-unit>
        <trans-unit id="8c473b50e514d1dd908d309dc36f50c2ed8dddf5" translate="yes" xml:space="preserve">
          <source>In your live server environment, you&amp;rsquo;ll need to tell your WSGI application what settings file to use. Do that with &lt;code&gt;os.environ&lt;/code&gt;:</source>
          <target state="translated">В вашей среде живого сервера вам нужно сообщить приложению WSGI, какой файл настроек использовать. Сделайте это с &lt;code&gt;os.environ&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0ed392362647aff54ee6ac0528ce6f7de8014467" translate="yes" xml:space="preserve">
          <source>In your project, you might want to override a template in another Django application, whether it be a third-party application or a contrib application such as &lt;code&gt;django.contrib.admin&lt;/code&gt;. You can either put template overrides in your project&amp;rsquo;s templates directory or in an application&amp;rsquo;s templates directory.</source>
          <target state="translated">В вашем проекте вам может потребоваться переопределить шаблон в другом приложении Django, будь то стороннее приложение или приложение contrib, такое как &lt;code&gt;django.contrib.admin&lt;/code&gt; . Вы можете поместить переопределения шаблонов в каталог шаблонов вашего проекта или в каталог шаблонов приложения.</target>
        </trans-unit>
        <trans-unit id="1a12842b892881bad40426a045c5fad617b1bbe3" translate="yes" xml:space="preserve">
          <source>In your settings file, define &lt;a href=&quot;../../ref/settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt;, for example:</source>
          <target state="translated">В вашем файле настроек определите &lt;a href=&quot;../../ref/settings#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; &lt;/a&gt; , например:</target>
        </trans-unit>
        <trans-unit id="c75941c62fda2d7b35a20353a643b95a05c2b9c2" translate="yes" xml:space="preserve">
          <source>In your settings file, you&amp;rsquo;ll need to define &lt;a href=&quot;../settings#std:setting-MEDIA_ROOT&quot;&gt;&lt;code&gt;MEDIA_ROOT&lt;/code&gt;&lt;/a&gt; as the full path to a directory where you&amp;rsquo;d like Django to store uploaded files. (For performance, these files are not stored in the database.) Define &lt;a href=&quot;../settings#std:setting-MEDIA_URL&quot;&gt;&lt;code&gt;MEDIA_URL&lt;/code&gt;&lt;/a&gt; as the base public URL of that directory. Make sure that this directory is writable by the Web server&amp;rsquo;s user account.</source>
          <target state="translated">В вашем файле настроек вам нужно определить &lt;a href=&quot;../settings#std:setting-MEDIA_ROOT&quot;&gt; &lt;code&gt;MEDIA_ROOT&lt;/code&gt; &lt;/a&gt; как полный путь к каталогу, в котором вы хотите, чтобы Django сохранял загруженные файлы. (Для производительности эти файлы не хранятся в базе данных.) Определите &lt;a href=&quot;../settings#std:setting-MEDIA_URL&quot;&gt; &lt;code&gt;MEDIA_URL&lt;/code&gt; &lt;/a&gt; в качестве базового общедоступного URL-адреса этого каталога. Убедитесь, что этот каталог доступен для записи учетной записи пользователя веб-сервера.</target>
        </trans-unit>
        <trans-unit id="6cdcd1cc4d55dae56b1d2cfee7ef0cf20408b5e1" translate="yes" xml:space="preserve">
          <source>In your templates, use the &lt;a href=&quot;../../ref/templates/builtins#std:templatetag-static&quot;&gt;&lt;code&gt;static&lt;/code&gt;&lt;/a&gt; template tag to build the URL for the given relative path using the configured &lt;a href=&quot;../../ref/settings#std:setting-STATICFILES_STORAGE&quot;&gt;&lt;code&gt;STATICFILES_STORAGE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">В ваших шаблонах используйте &lt;a href=&quot;../../ref/templates/builtins#std:templatetag-static&quot;&gt; &lt;code&gt;static&lt;/code&gt; &lt;/a&gt; тег шаблона для создания URL-адреса для заданного относительного пути с использованием настроенного &lt;a href=&quot;../../ref/settings#std:setting-STATICFILES_STORAGE&quot;&gt; &lt;code&gt;STATICFILES_STORAGE&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="baa1f28d971ef9c1acfb8d6a41ab17e4a43cce39" translate="yes" xml:space="preserve">
          <source>In-memory backend</source>
          <target state="translated">бэкэнд памяти</target>
        </trans-unit>
        <trans-unit id="79a0469d56bc9db66aaeb7ea407a1f6066a46182" translate="yes" xml:space="preserve">
          <source>Inches</source>
          <target state="translated">Inches</target>
        </trans-unit>
        <trans-unit id="92ae1c082857bc2359cef4eee3e9adb6e79930a9" translate="yes" xml:space="preserve">
          <source>Include a form in &lt;code&gt;template.html&lt;/code&gt; that will &lt;code&gt;POST&lt;/code&gt; to this view:</source>
          <target state="translated">Включите в &lt;code&gt;template.html&lt;/code&gt; форму, которая отправит &lt;code&gt;POST&lt;/code&gt; в это представление:</target>
        </trans-unit>
        <trans-unit id="b5bcd4f5af4af7b3e7b03ee3a5c43fdeabd48653" translate="yes" xml:space="preserve">
          <source>Include any other hashers that your site uses in this list.</source>
          <target state="translated">Включите в этот список любые другие хэши,которые использует ваш сайт.</target>
        </trans-unit>
        <trans-unit id="13a6402e7816c5436da28e068f9dc91e58173dc8" translate="yes" xml:space="preserve">
          <source>Included Bookmarklets</source>
          <target state="translated">Входящие в комплект поставки букмарклеты</target>
        </trans-unit>
        <trans-unit id="fce3d5524b93bea9ab2266460800f72716d9f859" translate="yes" xml:space="preserve">
          <source>Included hashers</source>
          <target state="translated">включённые хеши</target>
        </trans-unit>
        <trans-unit id="393381a25f66cacae86f8855d0301ff3d118a3d0" translate="yes" xml:space="preserve">
          <source>Included in this documentation are some additional notes and settings for &lt;a href=&quot;#testing-postgis&quot;&gt;PostGIS&lt;/a&gt; users.</source>
          <target state="translated">В эту документацию включены некоторые дополнительные примечания и настройки для пользователей &lt;a href=&quot;#testing-postgis&quot;&gt;PostGIS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="416f36f3b39cfe3286b14fc7265572590f159142" translate="yes" xml:space="preserve">
          <source>Included validators</source>
          <target state="translated">Входящие в комплект валидаторы</target>
        </trans-unit>
        <trans-unit id="05743cb3d3a2467dca3f8f904dc8d04225fa9b6a" translate="yes" xml:space="preserve">
          <source>Includes &lt;a href=&quot;https://www.gnu.org/software/gettext/manual/html_node/Fuzzy-Entries.html&quot;&gt;fuzzy translations&lt;/a&gt; into compiled files.</source>
          <target state="translated">Включает &lt;a href=&quot;https://www.gnu.org/software/gettext/manual/html_node/Fuzzy-Entries.html&quot;&gt;нечеткие переводы&lt;/a&gt; в скомпилированные файлы.</target>
        </trans-unit>
        <trans-unit id="5f73b9d45841efe90325f2d512a7445ae790a051" translate="yes" xml:space="preserve">
          <source>Includes fuzzy translations into compiled files.</source>
          <target state="translated">Включает нечеткие переводы в скомпилированные файлы.</target>
        </trans-unit>
        <trans-unit id="7aa965cef09d97d1ef5c87655479174fe49cd105" translate="yes" xml:space="preserve">
          <source>Includes the following variables and values by default:</source>
          <target state="translated">По умолчанию включает следующие переменные и значения:</target>
        </trans-unit>
        <trans-unit id="db77cfa106b7fade03dd841cb10c3f59fd348141" translate="yes" xml:space="preserve">
          <source>Includes the single object associated with the &lt;code&gt;model&lt;/code&gt; specified in the &lt;code&gt;DateDetailView&lt;/code&gt;.</source>
          <target state="translated">Включает один объект, связанный с &lt;code&gt;model&lt;/code&gt; указанной в &lt;code&gt;DateDetailView&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f672b003fa062b2ae7f24fd7e6d5b2f1fc8b02a7" translate="yes" xml:space="preserve">
          <source>Including other URLconfs</source>
          <target state="translated">Включая другие URLconfs</target>
        </trans-unit>
        <trans-unit id="cef652f3a03486091b244f2e5aba6969067fa768" translate="yes" xml:space="preserve">
          <source>Inclusion tags</source>
          <target state="translated">Теги включения</target>
        </trans-unit>
        <trans-unit id="ab18d470d5980c4f161e3f1dcdc1323336093e7e" translate="yes" xml:space="preserve">
          <source>Increase the default timeout value by setting the &lt;code&gt;timeout&lt;/code&gt; database option:</source>
          <target state="translated">Увеличьте значение времени ожидания по умолчанию, установив параметр базы данных времени &lt;code&gt;timeout&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4da83a55765005fd8539cc415fb563b5f9f3b112" translate="yes" xml:space="preserve">
          <source>Increasing the work factor</source>
          <target state="translated">Повышение коэффициента работы</target>
        </trans-unit>
        <trans-unit id="07ac801d123e5116aad23e6fa38a3f0dd730faee" translate="yes" xml:space="preserve">
          <source>Independent of the value of &lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Независимо от значения &lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="c2df9b932637fe9d32a0f16da1c11873398f873d" translate="yes" xml:space="preserve">
          <source>Index</source>
          <target state="translated">Index</target>
        </trans-unit>
        <trans-unit id="a1a7b444d54f66bf3ef208aca5c08ddbf9243ac3" translate="yes" xml:space="preserve">
          <source>Index classes ease creating database indexes. They can be added using the &lt;a href=&quot;options#django.db.models.Options.indexes&quot;&gt;&lt;code&gt;Meta.indexes&lt;/code&gt;&lt;/a&gt; option. This document explains the API references of &lt;a href=&quot;#django.db.models.Index&quot;&gt;&lt;code&gt;Index&lt;/code&gt;&lt;/a&gt; which includes the &lt;a href=&quot;#index-options&quot;&gt;index options&lt;/a&gt;.</source>
          <target state="translated">Индексные классы облегчают создание индексов базы данных. Их можно добавить с &lt;a href=&quot;options#django.db.models.Options.indexes&quot;&gt; &lt;code&gt;Meta.indexes&lt;/code&gt; &lt;/a&gt; опции Meta.indexes . Этот документ объясняет ссылки API на &lt;a href=&quot;#django.db.models.Index&quot;&gt; &lt;code&gt;Index&lt;/code&gt; ,&lt;/a&gt; который включает параметры &lt;a href=&quot;#index-options&quot;&gt;индекса&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="630cb288963201f389b4599b06017a143bbdff7d" translate="yes" xml:space="preserve">
          <source>Index concurrent operations</source>
          <target state="translated">Индексные параллельные операции</target>
        </trans-unit>
        <trans-unit id="eacf39e95bea2bf4d4bb9c3175a59647c4e609a3" translate="yes" xml:space="preserve">
          <source>Index lookups</source>
          <target state="translated">Индексные поиски</target>
        </trans-unit>
        <trans-unit id="36fe21e39f393b7292e040bfa5eeb5abc353fa3a" translate="yes" xml:space="preserve">
          <source>Index transforms</source>
          <target state="translated">Преобразование индекса</target>
        </trans-unit>
        <trans-unit id="c66d20d479f4194c5828779ae5fb5b4e7ca288f0" translate="yes" xml:space="preserve">
          <source>Index transforms index into the array. Any non-negative integer can be used. There are no errors if it exceeds the &lt;a href=&quot;#django.contrib.postgres.fields.ArrayField.size&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt; of the array. The lookups available after the transform are those from the &lt;a href=&quot;#django.contrib.postgres.fields.ArrayField.base_field&quot;&gt;&lt;code&gt;base_field&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">Индекс преобразует индекс в массив. Любое неотрицательное целое число может быть использовано. Нет ошибок, если он превышает &lt;a href=&quot;#django.contrib.postgres.fields.ArrayField.size&quot;&gt; &lt;code&gt;size&lt;/code&gt; &lt;/a&gt; массива. Поиски, доступные после преобразования, &lt;a href=&quot;#django.contrib.postgres.fields.ArrayField.base_field&quot;&gt; &lt;code&gt;base_field&lt;/code&gt; &lt;/a&gt; из base_field . Например:</target>
        </trans-unit>
        <trans-unit id="1c791c51c23a4a229b636e01c1e218aea31fa64e" translate="yes" xml:space="preserve">
          <source>Indexes are defined in &lt;code&gt;django.db.models.indexes&lt;/code&gt;, but for convenience they&amp;rsquo;re imported into &lt;a href=&quot;../../topics/db/models#module-django.db.models&quot;&gt;&lt;code&gt;django.db.models&lt;/code&gt;&lt;/a&gt;. The standard convention is to use &lt;code&gt;from django.db import models&lt;/code&gt; and refer to the indexes as &lt;code&gt;models.&amp;lt;IndexClass&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Индексы определены в &lt;code&gt;django.db.models.indexes&lt;/code&gt; , но для удобства они импортированы в &lt;a href=&quot;../../topics/db/models#module-django.db.models&quot;&gt; &lt;code&gt;django.db.models&lt;/code&gt; &lt;/a&gt; . Стандартное соглашение заключается в использовании &lt;code&gt;from django.db import models&lt;/code&gt; и обращении к индексам как к &lt;code&gt;models.&amp;lt;IndexClass&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5492137803e97d2ec59c8b75ce29be484b74e635" translate="yes" xml:space="preserve">
          <source>Indexes for &lt;code&gt;varchar&lt;/code&gt; and &lt;code&gt;text&lt;/code&gt; columns</source>
          <target state="translated">Индексы для &lt;code&gt;varchar&lt;/code&gt; и &lt;code&gt;text&lt;/code&gt; столбцов</target>
        </trans-unit>
        <trans-unit id="9951861c21df18489a5872209655d6f9039b5e2a" translate="yes" xml:space="preserve">
          <source>Indexing</source>
          <target state="translated">Indexing</target>
        </trans-unit>
        <trans-unit id="ef8499031097e84decc8e22d2abe9aa002f4dcf0" translate="yes" xml:space="preserve">
          <source>Indexing these fields</source>
          <target state="translated">Индексирование этих полей</target>
        </trans-unit>
        <trans-unit id="967ce367d89dccc133d71049f1197d29561b3726" translate="yes" xml:space="preserve">
          <source>India</source>
          <target state="translated">India</target>
        </trans-unit>
        <trans-unit id="ba45edb20cfadb09579c8b985c1073d4c123849c" translate="yes" xml:space="preserve">
          <source>Indian yard, Yard (Indian)</source>
          <target state="translated">Индийский двор,двор (индийский)</target>
        </trans-unit>
        <trans-unit id="69785e2efdbe3fd9756a43b21d0ac286d349fbbb" translate="yes" xml:space="preserve">
          <source>Indicates how much information manage.py is printing on screen. See the &lt;a href=&quot;django-admin#cmdoption-verbosity&quot;&gt;&lt;code&gt;--verbosity&lt;/code&gt;&lt;/a&gt; flag for details.</source>
          <target state="translated">Указывает, сколько информации manage.py печатает на экране. Смотрите флаг &lt;a href=&quot;django-admin#cmdoption-verbosity&quot;&gt; &lt;code&gt;--verbosity&lt;/code&gt; &lt;/a&gt; для деталей.</target>
        </trans-unit>
        <trans-unit id="805970dc362427509e5d3cf95b1051c9914c44de" translate="yes" xml:space="preserve">
          <source>Indicates if the widget supports edition of 3D data (default is &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">Указывает, поддерживает ли виджет редактирование трехмерных данных (по умолчанию установлено значение &lt;code&gt;False&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="46cbd279a17918dbd83258a502286ca2bd179058" translate="yes" xml:space="preserve">
          <source>Indicates which side of the relation is updated (i.e., if it is the forward or reverse relation that is being modified).</source>
          <target state="translated">Указывает,какая сторона отношения обновляется (т.е.если изменяется прямое или обратное отношение).</target>
        </trans-unit>
        <trans-unit id="7dca5d33b20dad0ae7cbe0b7fa53af5a51dfd232" translate="yes" xml:space="preserve">
          <source>Inequality. Example:</source>
          <target state="translated">Неравенство.Пример:</target>
        </trans-unit>
        <trans-unit id="0eb5ed506e4923c28d7f4a8aa69efe99b3ad75d1" translate="yes" xml:space="preserve">
          <source>Information</source>
          <target state="translated">Information</target>
        </trans-unit>
        <trans-unit id="1816bd5301287d48b239d10b6147fb06b838101a" translate="yes" xml:space="preserve">
          <source>Information on handling HTTP requests in Django:</source>
          <target state="translated">Информация об обработке HTTP-запросов в Django:</target>
        </trans-unit>
        <trans-unit id="4cea99f6c762632c4e20ad0abdccb5ad2c714eda" translate="yes" xml:space="preserve">
          <source>Information on how to test custom management commands can be found in the &lt;a href=&quot;../topics/testing/tools#topics-testing-management-commands&quot;&gt;testing docs&lt;/a&gt;.</source>
          <target state="translated">Информацию о том, как тестировать пользовательские команды управления, можно найти в &lt;a href=&quot;../topics/testing/tools#topics-testing-management-commands&quot;&gt;документации&lt;/a&gt; по тестированию .</target>
        </trans-unit>
        <trans-unit id="2115a89831353cf02274f4bd272538f5346d1232" translate="yes" xml:space="preserve">
          <source>Informational messages for the user</source>
          <target state="translated">Информационные сообщения для пользователя</target>
        </trans-unit>
        <trans-unit id="46fa48661da126122dd9b3dfb56c3771a9fb032e" translate="yes" xml:space="preserve">
          <source>Informs all validators that the password has been changed. This can be used by validators such as one that prevents password reuse. This should be called once the password has been successfully changed.</source>
          <target state="translated">Сообщает всем валидаторам,что пароль был изменен.Это может быть использовано валидаторами,которые предотвращают повторное использование пароля.Он должен быть вызван после успешной смены пароля.</target>
        </trans-unit>
        <trans-unit id="263eb8fac3089407415b3cdb49c8a9493a73a913" translate="yes" xml:space="preserve">
          <source>Inheritance and reverse relations</source>
          <target state="translated">Наследство и обратные отношения</target>
        </trans-unit>
        <trans-unit id="6878b79ae6a11c71f7d933df7a428440301d2cb7" translate="yes" xml:space="preserve">
          <source>Inherited models</source>
          <target state="translated">Унаследованные модели</target>
        </trans-unit>
        <trans-unit id="6b7c24fac5cde31e70194fe1a4a3aa31f2b07c59" translate="yes" xml:space="preserve">
          <source>Inherits all attributes and methods from &lt;a href=&quot;#django.db.models.FileField&quot;&gt;&lt;code&gt;FileField&lt;/code&gt;&lt;/a&gt;, but also validates that the uploaded object is a valid image.</source>
          <target state="translated">Наследует все атрибуты и методы из &lt;a href=&quot;#django.db.models.FileField&quot;&gt; &lt;code&gt;FileField&lt;/code&gt; &lt;/a&gt; , но также проверяет, что загруженный объект является допустимым изображением.</target>
        </trans-unit>
        <trans-unit id="887fae0cd4b77c5cf1709af4daa6acafe51d7270" translate="yes" xml:space="preserve">
          <source>Initial GET (blank or prepopulated form)</source>
          <target state="translated">Начальная GET (пустая или предварительно заселенная форма)</target>
        </trans-unit>
        <trans-unit id="7721368c6a2dc340b98e95500c63c71237f0442f" translate="yes" xml:space="preserve">
          <source>Initial data is what drives the main usability of a formset. As shown above you can define the number of extra forms. What this means is that you are telling the formset how many additional forms to show in addition to the number of forms it generates from the initial data. Let&amp;rsquo;s take a look at an example:</source>
          <target state="translated">Исходные данные - это то, что определяет основное удобство использования набора форм. Как показано выше, вы можете определить количество дополнительных форм. Это означает, что вы сообщаете набору форм, сколько дополнительных форм нужно показать в дополнение к количеству форм, которые он генерирует из исходных данных. Давайте посмотрим на пример:</target>
        </trans-unit>
        <trans-unit id="b6c0a04d6df77feaf647ce05a50a0c853571c221" translate="yes" xml:space="preserve">
          <source>Initial migrations</source>
          <target state="translated">Первоначальные миграции</target>
        </trans-unit>
        <trans-unit id="4e03af3824bf96934c0a17f4b42352a2647e0dd2" translate="yes" xml:space="preserve">
          <source>Initial migrations are marked with an &lt;code&gt;initial = True&lt;/code&gt; class attribute on the migration class. If an &lt;code&gt;initial&lt;/code&gt; class attribute isn&amp;rsquo;t found, a migration will be considered &amp;ldquo;initial&amp;rdquo; if it is the first migration in the app (i.e. if it has no dependencies on any other migration in the same app).</source>
          <target state="translated">Начальные миграции помечаются атрибутом &lt;code&gt;initial = True&lt;/code&gt; класса в классе миграции. Если &lt;code&gt;initial&lt;/code&gt; атрибут класса не найден, миграция будет считаться &amp;laquo;начальной&amp;raquo;, если это первая миграция в приложении (т.е. если она не зависит от какой-либо другой миграции в том же приложении).</target>
        </trans-unit>
        <trans-unit id="68fa16ffd48f366e4fa8d57fea78ff03fcab0191" translate="yes" xml:space="preserve">
          <source>Initialization</source>
          <target state="translated">Initialization</target>
        </trans-unit>
        <trans-unit id="92d116105843bf9003a7b0e9c5d9103920d28ee2" translate="yes" xml:space="preserve">
          <source>Initialization process</source>
          <target state="translated">Процесс инициализации</target>
        </trans-unit>
        <trans-unit id="5b82e76b7fa3fb4fd6420171df7d0206986bbce2" translate="yes" xml:space="preserve">
          <source>Initialize the feed with the given dictionary of metadata, which applies to the entire feed.</source>
          <target state="translated">Инициализируйте ленту данным словарем метаданных,который применяется ко всей ленте.</target>
        </trans-unit>
        <trans-unit id="b9480d541cf0f3d79a2ff605d8ca16ab4f5519d5" translate="yes" xml:space="preserve">
          <source>Initialize the feed with the given dictionary of metadata, which applies to the entire feed. Required keyword arguments are:</source>
          <target state="translated">Инициализируйте ленту данным словарем метаданных,который применяется ко всей ленте.Требуются аргументы по ключевым словам:</target>
        </trans-unit>
        <trans-unit id="cbe2e11aaa3a8f997f74dd81ca8d4d6be58f2cd0" translate="yes" xml:space="preserve">
          <source>Initializes view instance attributes: &lt;code&gt;self.request&lt;/code&gt;, &lt;code&gt;self.args&lt;/code&gt;, and &lt;code&gt;self.kwargs&lt;/code&gt; prior to &lt;a href=&quot;#django.views.generic.base.View.dispatch&quot;&gt;&lt;code&gt;dispatch()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Инициализирует атрибуты экземпляра представления: &lt;code&gt;self.request&lt;/code&gt; , &lt;code&gt;self.args&lt;/code&gt; и &lt;code&gt;self.kwargs&lt;/code&gt; до &lt;a href=&quot;#django.views.generic.base.View.dispatch&quot;&gt; &lt;code&gt;dispatch()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="118f0c3c3c959f831d4cc1d8d61816419873fce8" translate="yes" xml:space="preserve">
          <source>Initializing the application registry.</source>
          <target state="translated">Инициализация реестра приложений.</target>
        </trans-unit>
        <trans-unit id="a5071690b6f4d6be0ab39c8e9e4f4eeece380821" translate="yes" xml:space="preserve">
          <source>Initializing your new field is a matter of separating out any arguments that are specific to your case from the common arguments and passing the latter to the &lt;code&gt;__init__()&lt;/code&gt; method of &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; (or your parent class).</source>
          <target state="translated">Инициализация вашего нового поля заключается в отделении любых аргументов, характерных для вашего случая, от общих аргументов и передаче последних в метод &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;__init__()&lt;/code&gt; (или ваш родительский класс).</target>
        </trans-unit>
        <trans-unit id="d886046c9901e1b4b70275cfb11b733f494e6dcb" translate="yes" xml:space="preserve">
          <source>Initially, &lt;code&gt;token.split_contents()&lt;/code&gt; will return three values:</source>
          <target state="translated">Изначально &lt;code&gt;token.split_contents()&lt;/code&gt; вернет три значения:</target>
        </trans-unit>
        <trans-unit id="529d4aa47626f4c94772e3b1b82467e2ef2eb6cd" translate="yes" xml:space="preserve">
          <source>Inline form events</source>
          <target state="translated">События онлайн-формы</target>
        </trans-unit>
        <trans-unit id="2bf3973978eed4752c6694e9f74358e333071d2a" translate="yes" xml:space="preserve">
          <source>Inline formsets</source>
          <target state="translated">Онлайн-формы</target>
        </trans-unit>
        <trans-unit id="5f0d302d7df51da277cf03650b8f23cfec69c26b" translate="yes" xml:space="preserve">
          <source>Inline formsets is a small abstraction layer on top of model formsets. These simplify the case of working with related objects via a foreign key. Suppose you have these two models:</source>
          <target state="translated">Inline наборы форм-это небольшой абстрактный слой поверх модельных наборов форм.Это упрощает работу со смежными объектами с помощью постороннего ключа.Предположим,что у вас есть эти две модели:</target>
        </trans-unit>
        <trans-unit id="630cbac3ad3755357bd8db01e781e15971700af2" translate="yes" xml:space="preserve">
          <source>Input Type</source>
          <target state="translated">Тип ввода</target>
        </trans-unit>
        <trans-unit id="3cf3025b06979938acb60abd72189ab0d9a5057f" translate="yes" xml:space="preserve">
          <source>Input provided as &lt;code&gt;bytes&lt;/code&gt; has to be a full binary representation of a file. For instance:</source>
          <target state="translated">Входные данные, представленные в &lt;code&gt;bytes&lt;/code&gt; , должны быть полным двоичным представлением файла. Например:</target>
        </trans-unit>
        <trans-unit id="82a1ada76fb843bfdb99e1335ae14865d2ac5754" translate="yes" xml:space="preserve">
          <source>Insert in bulk</source>
          <target state="translated">Вставлять навалом</target>
        </trans-unit>
        <trans-unit id="fd80c7060b33e0b1f9e0160fda71154e20942302" translate="yes" xml:space="preserve">
          <source>Inside a transaction, when a call to a PostgreSQL cursor raises an exception (typically &lt;code&gt;IntegrityError&lt;/code&gt;), all subsequent SQL in the same transaction will fail with the error &amp;ldquo;current transaction is aborted, queries ignored until end of transaction block&amp;rdquo;. While the basic use of &lt;code&gt;save()&lt;/code&gt; is unlikely to raise an exception in PostgreSQL, there are more advanced usage patterns which might, such as saving objects with unique fields, saving using the force_insert/force_update flag, or invoking custom SQL.</source>
          <target state="translated">Внутри транзакции, когда вызов курсора PostgreSQL вызывает исключение (обычно &lt;code&gt;IntegrityError&lt;/code&gt; ), весь последующий SQL в той же транзакции завершится с ошибкой &amp;laquo;текущая транзакция отменена, запросы игнорируются до конца блока транзакции&amp;raquo;. Хотя основное использование &lt;code&gt;save()&lt;/code&gt; вряд ли вызовет исключение в PostgreSQL, существуют более продвинутые шаблоны использования, такие как сохранение объектов с уникальными полями, сохранение с использованием флага force_insert / force_update или вызов пользовательского SQL.</target>
        </trans-unit>
        <trans-unit id="3fb0c4a6cb7cb3bb932f294d1a031cf85801a6f6" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;https://pip.pypa.io/&quot;&gt;pip&lt;/a&gt;. The easiest is to use the &lt;a href=&quot;https://pip.pypa.io/en/latest/installing/#installing-with-get-pip-py&quot;&gt;standalone pip installer&lt;/a&gt;. If your distribution already has &lt;code&gt;pip&lt;/code&gt; installed, you might need to update it if it&amp;rsquo;s outdated. If it&amp;rsquo;s outdated, you&amp;rsquo;ll know because installation won&amp;rsquo;t work.</source>
          <target state="translated">Установить &lt;a href=&quot;https://pip.pypa.io/&quot;&gt;пипс&lt;/a&gt; . Самый простой - использовать &lt;a href=&quot;https://pip.pypa.io/en/latest/installing/#installing-with-get-pip-py&quot;&gt;автономный установщик pip&lt;/a&gt; . Если в вашем дистрибутиве уже установлен &lt;code&gt;pip&lt;/code&gt; , возможно, вам придется обновить его, если он устарел. Если он устарел, вы будете знать, потому что установка не будет работать.</target>
        </trans-unit>
        <trans-unit id="bbc29c34df2441baed48edcc90ffcebae7fe04ea" translate="yes" xml:space="preserve">
          <source>Install &lt;code&gt;binutils&lt;/code&gt;</source>
          <target state="translated">Установите &lt;code&gt;binutils&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eac3c52fd90179ef647d10e226a176c33f103069" translate="yes" xml:space="preserve">
          <source>Install &lt;code&gt;virtualenv&lt;/code&gt; and &lt;code&gt;virtualenvwrapper&lt;/code&gt;</source>
          <target state="translated">Установите &lt;code&gt;virtualenv&lt;/code&gt; и &lt;code&gt;virtualenvwrapper&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bfb040b8cf2a6c6983deac2a0f9a6884c824aa78" translate="yes" xml:space="preserve">
          <source>Install Apache and &lt;code&gt;mod_wsgi&lt;/code&gt;</source>
          <target state="translated">Установите Apache и &lt;code&gt;mod_wsgi&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e5fc7c028097e404e54baa7df716c866ba3c3490" translate="yes" xml:space="preserve">
          <source>Install Django</source>
          <target state="translated">Установить Джанго</target>
        </trans-unit>
        <trans-unit id="7dde67d172e208f70974e16600e6965108e24dc5" translate="yes" xml:space="preserve">
          <source>Install Django and set up database</source>
          <target state="translated">Установите Django и настройте базу данных</target>
        </trans-unit>
        <trans-unit id="6a036bec2d3c0cc5544c8102734b803705b65558" translate="yes" xml:space="preserve">
          <source>Install Python</source>
          <target state="translated">Установить питон</target>
        </trans-unit>
        <trans-unit id="cf77b120c0a9fb034fd4d1bdf0132dbaea450adf" translate="yes" xml:space="preserve">
          <source>Install ReportLab</source>
          <target state="translated">Установить ReportLab</target>
        </trans-unit>
        <trans-unit id="8b71e7089fefe4efaea3b41d159cc3d5d4f07857" translate="yes" xml:space="preserve">
          <source>Install a 64 bit version of Python. See &lt;a href=&quot;../../../../howto/windows&quot;&gt;Install Python&lt;/a&gt; for further information.</source>
          <target state="translated">Установите 64-битную версию Python. См. &lt;a href=&quot;../../../../howto/windows&quot;&gt;Установка Python&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="deb1dca81cfa61308cf3a3e61fdb90b4533b0e8c" translate="yes" xml:space="preserve">
          <source>Install a version of Django &lt;a href=&quot;../topics/install#installing-distribution-package&quot;&gt;provided by your operating system distribution&lt;/a&gt;.</source>
          <target state="translated">Установите версию Django, &lt;a href=&quot;../topics/install#installing-distribution-package&quot;&gt;предоставляемую дистрибутивом операционной системы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="54f0f70c277d5e4aa7ee5a0a8452076bf3a2f640" translate="yes" xml:space="preserve">
          <source>Install gunicorn by running &lt;code&gt;python -m pip install gunicorn&lt;/code&gt;. For more details, see the &lt;a href=&quot;https://docs.gunicorn.org/en/latest/install.html&quot;&gt;gunicorn documentation&lt;/a&gt;.</source>
          <target state="translated">Установите gunicorn, запустив &lt;code&gt;python -m pip install gunicorn&lt;/code&gt; . Для получения более подробной информации смотрите &lt;a href=&quot;https://docs.gunicorn.org/en/latest/install.html&quot;&gt;документацию&lt;/a&gt; по оружейному мозгу .</target>
        </trans-unit>
        <trans-unit id="5d28aa5c3f5f864624758280797d60a6e8cc60fb" translate="yes" xml:space="preserve">
          <source>Install it</source>
          <target state="translated">Установить его</target>
        </trans-unit>
        <trans-unit id="e5e59b5b49091f6e3df772b3a0711c44291aac54" translate="yes" xml:space="preserve">
          <source>Install the &lt;a href=&quot;https://pypi.org/project/argon2_cffi/&quot;&gt;argon2-cffi library&lt;/a&gt;. This can be done by running &lt;code&gt;python -m pip install django[argon2]&lt;/code&gt;, which is equivalent to &lt;code&gt;python -m pip install argon2-cffi&lt;/code&gt; (along with any version requirement from Django&amp;rsquo;s &lt;code&gt;setup.cfg&lt;/code&gt;).</source>
          <target state="translated">Установите &lt;a href=&quot;https://pypi.org/project/argon2_cffi/&quot;&gt;библиотеку argon2-cffi&lt;/a&gt; . Это можно сделать, запустив &lt;code&gt;python -m pip install django[argon2]&lt;/code&gt; , что эквивалентно &lt;code&gt;python -m pip install argon2-cffi&lt;/code&gt; (вместе с любыми требованиями к версии из &lt;code&gt;setup.cfg&lt;/code&gt; Django ).</target>
        </trans-unit>
        <trans-unit id="bcaca3d75e252ac3de7f251d6d46620471c66363" translate="yes" xml:space="preserve">
          <source>Install the &lt;a href=&quot;https://pypi.org/project/argon2_cffi/&quot;&gt;argon2-cffi library&lt;/a&gt;. This can be done by running &lt;code&gt;python -m pip install django[argon2]&lt;/code&gt;, which is equivalent to &lt;code&gt;python -m pip install argon2-cffi&lt;/code&gt; (along with any version requirement from Django&amp;rsquo;s &lt;code&gt;setup.py&lt;/code&gt;).</source>
          <target state="translated">Установите &lt;a href=&quot;https://pypi.org/project/argon2_cffi/&quot;&gt;библиотеку argon2-cffi&lt;/a&gt; . Это можно сделать, запустив &lt;code&gt;python -m pip install django[argon2]&lt;/code&gt; , что эквивалентно &lt;code&gt;python -m pip install argon2-cffi&lt;/code&gt; (вместе с любым требованием к версии из &lt;code&gt;setup.py&lt;/code&gt; Джанго ).</target>
        </trans-unit>
        <trans-unit id="ab66b2f5e38a7cf480e9c023c360905d40bf321b" translate="yes" xml:space="preserve">
          <source>Install the &lt;a href=&quot;https://pypi.org/project/bcrypt/&quot;&gt;bcrypt library&lt;/a&gt;. This can be done by running &lt;code&gt;python -m pip install django[bcrypt]&lt;/code&gt;, which is equivalent to &lt;code&gt;python -m pip install bcrypt&lt;/code&gt; (along with any version requirement from Django&amp;rsquo;s &lt;code&gt;setup.cfg&lt;/code&gt;).</source>
          <target state="translated">Установите &lt;a href=&quot;https://pypi.org/project/bcrypt/&quot;&gt;библиотеку bcrypt&lt;/a&gt; . Это можно сделать, запустив &lt;code&gt;python -m pip install django[bcrypt]&lt;/code&gt; , что эквивалентно &lt;code&gt;python -m pip install bcrypt&lt;/code&gt; (вместе с любыми требованиями к версии из &lt;code&gt;setup.cfg&lt;/code&gt; Django ).</target>
        </trans-unit>
        <trans-unit id="e210902fd89fea327be285ade2968e15f65d75d5" translate="yes" xml:space="preserve">
          <source>Install the &lt;a href=&quot;https://pypi.org/project/bcrypt/&quot;&gt;bcrypt library&lt;/a&gt;. This can be done by running &lt;code&gt;python -m pip install django[bcrypt]&lt;/code&gt;, which is equivalent to &lt;code&gt;python -m pip install bcrypt&lt;/code&gt; (along with any version requirement from Django&amp;rsquo;s &lt;code&gt;setup.py&lt;/code&gt;).</source>
          <target state="translated">Установите &lt;a href=&quot;https://pypi.org/project/bcrypt/&quot;&gt;библиотеку bcrypt&lt;/a&gt; . Это можно сделать, запустив &lt;code&gt;python -m pip install django[bcrypt]&lt;/code&gt; , что эквивалентно &lt;code&gt;python -m pip install bcrypt&lt;/code&gt; (вместе с любым требованием к версии из &lt;code&gt;setup.py&lt;/code&gt; Джанго ).</target>
        </trans-unit>
        <trans-unit id="00d2af2e61a464edd9e548eb900abf871a875685" translate="yes" xml:space="preserve">
          <source>Install the &lt;a href=&quot;sites#module-django.contrib.sites&quot;&gt;&lt;code&gt;sites framework&lt;/code&gt;&lt;/a&gt; by adding &lt;code&gt;'django.contrib.sites'&lt;/code&gt; to your &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting, if it&amp;rsquo;s not already in there.</source>
          <target state="translated">Установите &lt;a href=&quot;sites#module-django.contrib.sites&quot;&gt; &lt;code&gt;sites framework&lt;/code&gt; &lt;/a&gt; , добавив &lt;code&gt;'django.contrib.sites'&lt;/code&gt; к вашему параметру &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; , если его там еще нет.</target>
        </trans-unit>
        <trans-unit id="1c4701e78d9d83a7d5493cab49cfea8bcd9ddd76" translate="yes" xml:space="preserve">
          <source>Install the &lt;code&gt;btree_gin&lt;/code&gt; extension.</source>
          <target state="translated">Установите расширение &lt;code&gt;btree_gin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="acd182d9015bfd8188202d1ecb60688d2939179f" translate="yes" xml:space="preserve">
          <source>Install the &lt;code&gt;btree_gist&lt;/code&gt; extension.</source>
          <target state="translated">Установите расширение &lt;code&gt;btree_gist&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a76f5145a32d184e1c7e9587ba465063c089609e" translate="yes" xml:space="preserve">
          <source>Install the Django code</source>
          <target state="translated">Установить код Django</target>
        </trans-unit>
        <trans-unit id="dc5ac4572b45ea1e5ec997132d5c1eedc83d7af8" translate="yes" xml:space="preserve">
          <source>Install the core Django tables</source>
          <target state="translated">Установить основные таблицы Django</target>
        </trans-unit>
        <trans-unit id="b80fff99394b213848b1958268f286bb48e71084" translate="yes" xml:space="preserve">
          <source>Install the docutils Python module (&lt;a href=&quot;https://docutils.sourceforge.io/&quot;&gt;https://docutils.sourceforge.io/&lt;/a&gt;).</source>
          <target state="translated">Установите модуль Python Docutils ( &lt;a href=&quot;https://docutils.sourceforge.io/&quot;&gt;https://docutils.sourceforge.io/&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f16648ab97c10387117506d2197c88daefa2c596" translate="yes" xml:space="preserve">
          <source>Install the packages in the order they are listed above, as the GDAL and SQLite packages require the packages listed before them.</source>
          <target state="translated">Установите пакеты в том порядке,в котором они перечислены выше,так как пакеты GDAL и SQLite требуют наличия перечисленных выше пакетов.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="ff4f4a940ff19aa2436e69196999c53946b31122" translate="yes" xml:space="preserve">
          <source>Installation instructions are slightly different depending on whether you&amp;rsquo;re installing a distribution-specific package, downloading the latest official release, or fetching the latest development version.</source>
          <target state="translated">Инструкции по установке немного отличаются в зависимости от того, устанавливаете ли вы пакет для конкретного дистрибутива, загружаете последний официальный выпуск или получаете последнюю версию для разработки.</target>
        </trans-unit>
        <trans-unit id="ad3e3dab4a190abbebf78c92247b626a4d65febb" translate="yes" xml:space="preserve">
          <source>Installing Daphne</source>
          <target state="translated">Пансионная Дафна</target>
        </trans-unit>
        <trans-unit id="f2bff20e97a1f081da9b80758818ca87edaadcdc" translate="yes" xml:space="preserve">
          <source>Installing Geospatial libraries</source>
          <target state="translated">Установка геопространственных библиотек</target>
        </trans-unit>
        <trans-unit id="08184aba9687051924cc110485a309cd3a9c8e10" translate="yes" xml:space="preserve">
          <source>Installing Git</source>
          <target state="translated">Установка Git</target>
        </trans-unit>
        <trans-unit id="832f4a5393100d982e65d355980b754d3648ec27" translate="yes" xml:space="preserve">
          <source>Installing Git.</source>
          <target state="translated">Установка Git.</target>
        </trans-unit>
        <trans-unit id="9b40ec12cc871a8d0e48f0c35c15978313555dda" translate="yes" xml:space="preserve">
          <source>Installing Gunicorn</source>
          <target state="translated">Установка Gunicorn</target>
        </trans-unit>
        <trans-unit id="eaeaa4aae87f13caa5fbef040077a281a1d15b42" translate="yes" xml:space="preserve">
          <source>Installing Hypercorn</source>
          <target state="translated">Установка Гиперкурн</target>
        </trans-unit>
        <trans-unit id="4f56c15f76a3602ff2fe3028129cae40805d2891" translate="yes" xml:space="preserve">
          <source>Installing PostGIS</source>
          <target state="translated">Установка PostGIS</target>
        </trans-unit>
        <trans-unit id="7261454ff42d55ac3cee9a48a9a7074d622c284f" translate="yes" xml:space="preserve">
          <source>Installing Python packages with a virtual environment</source>
          <target state="translated">Установка пакетов Python с виртуальной средой</target>
        </trans-unit>
        <trans-unit id="927da6c1c36a09548ee8a0b09892380aaf33ca8a" translate="yes" xml:space="preserve">
          <source>Installing Python packages with virtualenv</source>
          <target state="translated">Установка пакетов Python с помощью virtualenv</target>
        </trans-unit>
        <trans-unit id="961035f5074b37f06409829bca2e3c28cae1a5ad" translate="yes" xml:space="preserve">
          <source>Installing SpatiaLite</source>
          <target state="translated">Установка SpatiaLite</target>
        </trans-unit>
        <trans-unit id="8d11135f6e798b9505fe0f0f3c04f2d219d5a612" translate="yes" xml:space="preserve">
          <source>Installing Uvicorn</source>
          <target state="translated">Установка Увикорна</target>
        </trans-unit>
        <trans-unit id="f7a34c08b51e2419fa7dc61778c3f2ca278331e1" translate="yes" xml:space="preserve">
          <source>Installing a distribution-specific package</source>
          <target state="translated">Установка пакета для конкретного дистрибутива</target>
        </trans-unit>
        <trans-unit id="42cc33b9e752caf55863c3e0eb6e5deb696214b9" translate="yes" xml:space="preserve">
          <source>Installing a wrapper is done in a context manager &amp;ndash; so the wrappers are temporary and specific to some flow in your code.</source>
          <target state="translated">Установка оболочки выполняется в менеджере контекста - поэтому оболочки являются временными и специфичными для некоторого потока в вашем коде.</target>
        </trans-unit>
        <trans-unit id="1cdd21443d12c68fe7d176e7e1d37cacee632f0f" translate="yes" xml:space="preserve">
          <source>Installing an official release with &lt;code&gt;pip&lt;/code&gt;</source>
          <target state="translated">Установка официального релиза с помощью &lt;code&gt;pip&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8628a6e864a9e93f538b94578699641e3f734260" translate="yes" xml:space="preserve">
          <source>Installing as a user library</source>
          <target state="translated">Установка в качестве пользовательской библиотеки</target>
        </trans-unit>
        <trans-unit id="25698238529e36c36bbff9a1cf8864afeb7e862b" translate="yes" xml:space="preserve">
          <source>Installing from source</source>
          <target state="translated">Установка из источника</target>
        </trans-unit>
        <trans-unit id="22e127126b29a4052ed7dc43993b38a6393e1246" translate="yes" xml:space="preserve">
          <source>Installing some prerequisites</source>
          <target state="translated">Установка некоторых предварительных условий</target>
        </trans-unit>
        <trans-unit id="a9bda49ca5c84ac0371dfd0aa4aeead7cef32c9d" translate="yes" xml:space="preserve">
          <source>Installing the contenttypes framework</source>
          <target state="translated">Установка фреймворка типов контента</target>
        </trans-unit>
        <trans-unit id="c2880c0c7b9f92a492fcc9e1562593a3e93bb68d" translate="yes" xml:space="preserve">
          <source>Installing the development version</source>
          <target state="translated">Установка версии разработки</target>
        </trans-unit>
        <trans-unit id="182550e5b6132a0ff75322e4ed32c21cd0985415" translate="yes" xml:space="preserve">
          <source>Installs the &lt;code&gt;bloom&lt;/code&gt; extension.</source>
          <target state="translated">Устанавливает расширение &lt;code&gt;bloom&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e055356ef136469cf4b9451661e20b8562826ab" translate="yes" xml:space="preserve">
          <source>Installs the &lt;code&gt;btree_gin&lt;/code&gt; extension.</source>
          <target state="translated">Устанавливает расширение &lt;code&gt;btree_gin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c62c03b65b8b64207ce0849b4a7b74e6211dcd27" translate="yes" xml:space="preserve">
          <source>Installs the &lt;code&gt;btree_gist&lt;/code&gt; extension.</source>
          <target state="translated">Устанавливает расширение &lt;code&gt;btree_gist&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3bf6d32afe746a4fa058c7c5dce82e85a778691" translate="yes" xml:space="preserve">
          <source>Installs the &lt;code&gt;citext&lt;/code&gt; extension.</source>
          <target state="translated">Устанавливает расширение &lt;code&gt;citext&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a5b8eef62a1408d8cc79afa5af9584ec14a4b58" translate="yes" xml:space="preserve">
          <source>Installs the &lt;code&gt;hstore&lt;/code&gt; extension and also sets up the connection to interpret hstore data for possible use in subsequent migrations.</source>
          <target state="translated">Устанавливает расширение &lt;code&gt;hstore&lt;/code&gt; , а также настраивает соединение для интерпретации данных hstore для возможного использования в последующих миграциях.</target>
        </trans-unit>
        <trans-unit id="7101a42b2163ac751b481d457a5c8369b69d8e9e" translate="yes" xml:space="preserve">
          <source>Installs the &lt;code&gt;pg_trgm&lt;/code&gt; extension.</source>
          <target state="translated">Устанавливает расширение &lt;code&gt;pg_trgm&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e31cfb0fb6c711d0656d19a5574b5d7240e78753" translate="yes" xml:space="preserve">
          <source>Installs the &lt;code&gt;pgcrypto&lt;/code&gt; extension.</source>
          <target state="translated">Устанавливает расширение &lt;code&gt;pgcrypto&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8de17062b9cc6ceea7cfbe2b8e21f56dd155d43c" translate="yes" xml:space="preserve">
          <source>Installs the &lt;code&gt;unaccent&lt;/code&gt; extension.</source>
          <target state="translated">Устанавливает &lt;code&gt;unaccent&lt;/code&gt; расширение.</target>
        </trans-unit>
        <trans-unit id="3ba17ad27b23ed96d07cb286c9f28dee5d248c65" translate="yes" xml:space="preserve">
          <source>Instances can be assigned to the reverse relationship in the same way as you would assign the forward relationship:</source>
          <target state="translated">Обратные отношения могут быть назначены так же,как и прямые отношения:</target>
        </trans-unit>
        <trans-unit id="33a8466028f50993d00a3e49a884c73a7be30cbf" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; have methods for returning the model classes they represent and for querying objects from those models. &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; also has a &lt;a href=&quot;../../topics/db/managers#custom-managers&quot;&gt;custom manager&lt;/a&gt; that adds methods for working with &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; and for obtaining instances of &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; for a particular model.</source>
          <target state="translated">Экземпляры &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt; имеют методы для возврата классов моделей, которые они представляют, и для запроса объектов из этих моделей. &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt; также есть &lt;a href=&quot;../../topics/db/managers#custom-managers&quot;&gt;собственный менеджер,&lt;/a&gt; который добавляет методы для работы с &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt; и для получения экземпляров &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt; для конкретной модели.</target>
        </trans-unit>
        <trans-unit id="3ca2d03ef0213f868473b19d489c0a841c984cea" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt;&lt;code&gt;Feed&lt;/code&gt;&lt;/a&gt; classes are views which can be used in your &lt;a href=&quot;../../topics/http/urls&quot;&gt;URLconf&lt;/a&gt;.</source>
          <target state="translated">Экземпляры классов &lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt; &lt;code&gt;Feed&lt;/code&gt; &lt;/a&gt; - это представления, которые можно использовать в вашем &lt;a href=&quot;../../topics/http/urls&quot;&gt;URLconf&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="34051ba4426c5e025165ef265738387f13ceb9b3" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;OuterRef&lt;/code&gt; may be used in conjunction with nested instances of &lt;code&gt;Subquery&lt;/code&gt; to refer to a containing queryset that isn&amp;rsquo;t the immediate parent. For example, this queryset would need to be within a nested pair of &lt;code&gt;Subquery&lt;/code&gt; instances to resolve correctly:</source>
          <target state="translated">Экземпляры &lt;code&gt;OuterRef&lt;/code&gt; могут использоваться вместе с вложенными экземплярами &lt;code&gt;Subquery&lt;/code&gt; для ссылки на содержащий набор запросов, который не является непосредственным родителем. Например, этот набор запросов должен находиться во вложенной паре экземпляров &lt;code&gt;Subquery&lt;/code&gt; для правильного разрешения:</target>
        </trans-unit>
        <trans-unit id="965f5a03cce86b0170feb9ce452f784fa702bfa6" translate="yes" xml:space="preserve">
          <source>Instantiate an instance of &lt;code&gt;form_class&lt;/code&gt; using &lt;a href=&quot;#django.views.generic.edit.FormMixin.get_form_kwargs&quot;&gt;&lt;code&gt;get_form_kwargs()&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;form_class&lt;/code&gt; isn&amp;rsquo;t provided &lt;a href=&quot;#django.views.generic.edit.FormMixin.get_form_class&quot;&gt;&lt;code&gt;get_form_class()&lt;/code&gt;&lt;/a&gt; will be used.</source>
          <target state="translated">&lt;code&gt;form_class&lt;/code&gt; экземпляра класса form_class с помощью &lt;a href=&quot;#django.views.generic.edit.FormMixin.get_form_kwargs&quot;&gt; &lt;code&gt;get_form_kwargs()&lt;/code&gt; &lt;/a&gt; . Если &lt;code&gt;form_class&lt;/code&gt; не &lt;a href=&quot;#django.views.generic.edit.FormMixin.get_form_class&quot;&gt; &lt;code&gt;get_form_class()&lt;/code&gt; &lt;/a&gt; будет использоваться get_form_class () .</target>
        </trans-unit>
        <trans-unit id="bda3a125fe2fe7a55e269e5c944a131e88c730c7" translate="yes" xml:space="preserve">
          <source>Instantiates a &lt;a href=&quot;#django.template.response.SimpleTemplateResponse&quot;&gt;&lt;code&gt;SimpleTemplateResponse&lt;/code&gt;&lt;/a&gt; object with the given template, context, content type, HTTP status, and charset.</source>
          <target state="translated">Создает экземпляр &lt;a href=&quot;#django.template.response.SimpleTemplateResponse&quot;&gt; &lt;code&gt;SimpleTemplateResponse&lt;/code&gt; &lt;/a&gt; объекта с заданным шаблоном, контекстом, типа контента, HTTP статуса и кодировки.</target>
        </trans-unit>
        <trans-unit id="b812b7e4f2492d34300d293c78fa87ed20e859f6" translate="yes" xml:space="preserve">
          <source>Instantiates a &lt;a href=&quot;#django.template.response.TemplateResponse&quot;&gt;&lt;code&gt;TemplateResponse&lt;/code&gt;&lt;/a&gt; object with the given request, template, context, content type, HTTP status, and charset.</source>
          <target state="translated">Создает объект &lt;a href=&quot;#django.template.response.TemplateResponse&quot;&gt; &lt;code&gt;TemplateResponse&lt;/code&gt; &lt;/a&gt; с заданным запросом, шаблоном, контекстом, типом содержимого, статусом HTTP и набором символов.</target>
        </trans-unit>
        <trans-unit id="75e1e0c6a3602561b6ddda3e1aca0d8c160c34b0" translate="yes" xml:space="preserve">
          <source>Instantiates a &lt;code&gt;QueryDict&lt;/code&gt; object based on &lt;code&gt;query_string&lt;/code&gt;.</source>
          <target state="translated">Создает экземпляр &lt;code&gt;QueryDict&lt;/code&gt; объекта на основе &lt;code&gt;query_string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83733746f9ce2ff985b0d7b6dd35d2bfeeaab86f" translate="yes" xml:space="preserve">
          <source>Instantiates an &lt;code&gt;HttpResponse&lt;/code&gt; object with the given page content and content type.</source>
          <target state="translated">Создает объект &lt;code&gt;HttpResponse&lt;/code&gt; с заданным содержимым страницы и типом содержимого.</target>
        </trans-unit>
        <trans-unit id="fc3b8f3c6151107514c4bf4eeca907ec5482a39c" translate="yes" xml:space="preserve">
          <source>Instantiating</source>
          <target state="translated">Instantiating</target>
        </trans-unit>
        <trans-unit id="cffabffc243a86e5e4fd4008f1711530d0497620" translate="yes" xml:space="preserve">
          <source>Instantiating, processing, and rendering forms</source>
          <target state="translated">инстанцирование,обработка и формы рендеринга</target>
        </trans-unit>
        <trans-unit id="22aeabb7dc852022ced533d52ff737b2b3613349" translate="yes" xml:space="preserve">
          <source>Instead of a constant, you can also pass any callable:</source>
          <target state="translated">Вместо константы можно пропустить любой звонок:</target>
        </trans-unit>
        <trans-unit id="72257cae811c35080fe1f5b3607be554b2133268" translate="yes" xml:space="preserve">
          <source>Instead of hardcoding the secret key in your settings module, consider loading it from an environment variable:</source>
          <target state="translated">Вместо того,чтобы жестко закодировать секретный ключ в модуле настроек,подумайте о его загрузке из переменной окружения:</target>
        </trans-unit>
        <trans-unit id="fe3dc3e8adb7c023a6a4d986658465fea88d21ee" translate="yes" xml:space="preserve">
          <source>Instead of referring to &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; directly, you should reference the user model using &lt;code&gt;django.contrib.auth.get_user_model()&lt;/code&gt;. This method will return the currently active user model &amp;ndash; the custom user model if one is specified, or &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">Вместо того, чтобы ссылаться на &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt; напрямую, вы должны ссылаться на модель пользователя с помощью &lt;code&gt;django.contrib.auth.get_user_model()&lt;/code&gt; . Этот метод возвращает текущую активную пользовательскую модель - пользовательскую модель пользователя, если она указана, или &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; в&lt;/a&gt; противном случае.</target>
        </trans-unit>
        <trans-unit id="bba92e02d2c06f149da74f37d67460e937d8a168" translate="yes" xml:space="preserve">
          <source>Instead of sending out real emails the console backend just writes the emails that would be sent to the standard output. By default, the console backend writes to &lt;code&gt;stdout&lt;/code&gt;. You can use a different stream-like object by providing the &lt;code&gt;stream&lt;/code&gt; keyword argument when constructing the connection.</source>
          <target state="translated">Вместо того, чтобы отправлять реальные электронные письма, консольный бэкэнд просто пишет электронные письма, которые будут отправлены на стандартный вывод. По умолчанию консольный сервер пишет в стандартный &lt;code&gt;stdout&lt;/code&gt; . Вы можете использовать другой подобный потоку объект, предоставляя аргумент ключевого слова &lt;code&gt;stream&lt;/code&gt; при создании соединения.</target>
        </trans-unit>
        <trans-unit id="8a20d35e04abc263b2085bd01850ef1fa676b80f" translate="yes" xml:space="preserve">
          <source>Instead, Django uses the &lt;code&gt;F()&lt;/code&gt; object to generate an SQL expression that describes the required operation at the database level.</source>
          <target state="translated">Вместо этого Django использует объект &lt;code&gt;F()&lt;/code&gt; для генерации выражения SQL, которое описывает требуемую операцию на уровне базы данных.</target>
        </trans-unit>
        <trans-unit id="63739a1702388d926c53a0de1d6e622a2ad61b70" translate="yes" xml:space="preserve">
          <source>Instead, you must create a new custom field class and update your models to reference it:</source>
          <target state="translated">Вместо этого необходимо создать новый класс пользовательского поля и обновить свои модели для ссылки на него:</target>
        </trans-unit>
        <trans-unit id="91490210e1a90ded8db45f1dc59077e81e981701" translate="yes" xml:space="preserve">
          <source>Instructs the browser to always send the full URL as the referrer.</source>
          <target state="translated">Инструктирует браузер всегда посылать полный URL в качестве референта.</target>
        </trans-unit>
        <trans-unit id="cfd51c30985320dbadc1a598127335712c56106c" translate="yes" xml:space="preserve">
          <source>Instructs the browser to send a full URL as the referrer, but only when no protocol downgrade occurs.</source>
          <target state="translated">Инструктирует браузер посылать полный URL-адрес в качестве ссылающегося,но только в том случае,если не происходит понижения рейтинга протокола.</target>
        </trans-unit>
        <trans-unit id="b636598035ca4d6177e3e6c9c903dcc3d8c1ef76" translate="yes" xml:space="preserve">
          <source>Instructs the browser to send a full URL, but only for same-origin links. No referrer will be sent for cross-origin links.</source>
          <target state="translated">Инструктирует браузер посылать полный URL,но только для ссылок одинакового происхождения.Для перекрестных ссылок рефералы отправляться не будут.</target>
        </trans-unit>
        <trans-unit id="9c0fb8de2583c8c8bae50209d5c64150e59b7871" translate="yes" xml:space="preserve">
          <source>Instructs the browser to send no referrer for links clicked on this site.</source>
          <target state="translated">Инструктирует браузер не посылать рефералов для ссылок,перешедших по этому сайту.</target>
        </trans-unit>
        <trans-unit id="b7ecd1ffca0fc0e4b0053ac06d1820f83756efd8" translate="yes" xml:space="preserve">
          <source>Instructs the browser to send only the origin, not the full URL, and to send no referrer when a protocol downgrade occurs.</source>
          <target state="translated">Инструктирует браузер посылать только источник,а не полный URL,и не посылать ни одного ссылающегося,когда происходит понижение рейтинга протокола.</target>
        </trans-unit>
        <trans-unit id="637d99a5fb685a12c3c6e4098633e5db47b9ba49" translate="yes" xml:space="preserve">
          <source>Instructs the browser to send only the origin, not the full URL, as the referrer.</source>
          <target state="translated">Инструктирует браузер отправить только происхождение,а не полный URL,в качестве референта.</target>
        </trans-unit>
        <trans-unit id="18be72781eb1ccbaa5b15b5eddd01a77e00e6f66" translate="yes" xml:space="preserve">
          <source>Instructs the browser to send the full URL as the referrer for same-origin links, and only the origin for cross-origin links.</source>
          <target state="translated">Указание браузеру отправить полный URL-адрес в качестве ссылающегося на однородные ссылки,и только в качестве источника для перекрестных ссылок.</target>
        </trans-unit>
        <trans-unit id="192e4032c9433119a1b8f523f5783c3815f7a2f6" translate="yes" xml:space="preserve">
          <source>Instructs the browser to send the full URL when the link is same-origin and no protocol downgrade occurs; send only the origin when the link is cross-origin and no protocol downgrade occurs; and no referrer when a protocol downgrade occurs.</source>
          <target state="translated">Указывает браузеру посылать полный URL,когда ссылка имеет одинаковое происхождение и не происходит понижения рейтинга протокола;посылать только происхождение,когда ссылка имеет перекрестное происхождение и не происходит понижения рейтинга протокола;и не посылать referrer,когда происходит понижение рейтинга протокола.</target>
        </trans-unit>
        <trans-unit id="7b23bec4f6507d4cca8f5d60ec3bc51bc4831a7a" translate="yes" xml:space="preserve">
          <source>Integer representing the data type for all the bands. Defaults to &lt;code&gt;6&lt;/code&gt; (Float32). All bands of a new raster are required to have the same datatype. The value mapping is:</source>
          <target state="translated">Целое число, представляющее тип данных для всех полос. По умолчанию &lt;code&gt;6&lt;/code&gt; (Float32). Все группы нового растра должны иметь одинаковый тип данных. Соотношение значений:</target>
        </trans-unit>
        <trans-unit id="931c94c24a1258cda59704dd26701d5f538121be" translate="yes" xml:space="preserve">
          <source>Integer representing the number of bands of the raster. A raster can be created without passing band data upon creation. If the number of bands isn&amp;rsquo;t specified, it&amp;rsquo;s automatically calculated from the length of the &lt;code&gt;bands&lt;/code&gt; input. The number of bands can&amp;rsquo;t be changed after creation.</source>
          <target state="translated">Целое число, представляющее количество полос растра. Растр может быть создан без передачи данных полосы при создании. Если количество полос не указано, оно автоматически рассчитывается по длине входных &lt;code&gt;bands&lt;/code&gt; . Количество групп не может быть изменено после создания.</target>
        </trans-unit>
        <trans-unit id="eda8d701f2e10496740d2917dbe2843f2ce3cae9" translate="yes" xml:space="preserve">
          <source>Integrating Django with a legacy database</source>
          <target state="translated">Интеграция Django с унаследованной базой данных</target>
        </trans-unit>
        <trans-unit id="0b0ec2fc7e330a3d8a5e7db32ab4c2dc5da8dbb8" translate="yes" xml:space="preserve">
          <source>Integrating validation</source>
          <target state="translated">Интегрирующее валидирование</target>
        </trans-unit>
        <trans-unit id="01629819b333385e9c8b6238bf93b852412fec63" translate="yes" xml:space="preserve">
          <source>Integrating with django.contrib.sitemaps</source>
          <target state="translated">Интеграция с картами сайта django.contrib.sitemaps</target>
        </trans-unit>
        <trans-unit id="611f4acd53244dba4ed5abdac3bc6b3f444bd766" translate="yes" xml:space="preserve">
          <source>Integration with &lt;code&gt;coverage.py&lt;/code&gt;</source>
          <target state="translated">Интеграция с &lt;code&gt;coverage.py&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b71bc9a25badec542735b3baa9e3604b7bc84c68" translate="yes" xml:space="preserve">
          <source>Interaction with default ordering or &lt;code&gt;order_by()&lt;/code&gt;</source>
          <target state="translated">Взаимодействие с упорядочением по умолчанию или &lt;code&gt;order_by()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb6cfa8632d39cef2cb4c3ea3a83ee056e07d987" translate="yes" xml:space="preserve">
          <source>Interaction with model validation</source>
          <target state="translated">Взаимодействие с валидацией модели</target>
        </trans-unit>
        <trans-unit id="ce3b3216035a4a5417f816e3184e425f57e7634e" translate="yes" xml:space="preserve">
          <source>Interested in giving back to the community a little? Maybe you&amp;rsquo;ve found a bug in Django that you&amp;rsquo;d like to see fixed, or maybe there&amp;rsquo;s a small feature you want added.</source>
          <target state="translated">Заинтересованы в возвращении сообществу немного? Возможно, вы нашли ошибку в Django, которую вы хотели бы исправить, или, может быть, есть небольшая функция, которую вы хотите добавить.</target>
        </trans-unit>
        <trans-unit id="ff69045749030dbdd4e91ddd52a7fa05a707a735" translate="yes" xml:space="preserve">
          <source>Internally, &lt;code&gt;order_with_respect_to&lt;/code&gt; adds an additional field/database column named &lt;code&gt;_order&lt;/code&gt; and sets the model&amp;rsquo;s &lt;a href=&quot;#django.db.models.Options.ordering&quot;&gt;&lt;code&gt;ordering&lt;/code&gt;&lt;/a&gt; option to this field. Consequently, &lt;code&gt;order_with_respect_to&lt;/code&gt; and &lt;code&gt;ordering&lt;/code&gt; cannot be used together, and the ordering added by &lt;code&gt;order_with_respect_to&lt;/code&gt; will apply whenever you obtain a list of objects of this model.</source>
          <target state="translated">Внутри &lt;code&gt;order_with_respect_to&lt;/code&gt; добавляет дополнительное поле / столбец базы данных с именем &lt;code&gt;_order&lt;/code&gt; и задает опцию &lt;a href=&quot;#django.db.models.Options.ordering&quot;&gt; &lt;code&gt;ordering&lt;/code&gt; &lt;/a&gt; модели для этого поля. Следовательно, &lt;code&gt;order_with_respect_to&lt;/code&gt; и &lt;code&gt;ordering&lt;/code&gt; не могут использоваться вместе, и порядок, добавленный &lt;code&gt;order_with_respect_to&lt;/code&gt; , будет применяться всякий раз, когда вы получаете список объектов этой модели.</target>
        </trans-unit>
        <trans-unit id="a53f9038dcc32cdab6d7c6e27dab10759972255d" translate="yes" xml:space="preserve">
          <source>Internally, Django uses a &lt;a href=&quot;../ref/files/file#django.core.files.File&quot;&gt;&lt;code&gt;django.core.files.File&lt;/code&gt;&lt;/a&gt; instance any time it needs to represent a file.</source>
          <target state="translated">Внутри Django использует экземпляр &lt;a href=&quot;../ref/files/file#django.core.files.File&quot;&gt; &lt;code&gt;django.core.files.File&lt;/code&gt; &lt;/a&gt; каждый раз, когда ему нужно представить файл.</target>
        </trans-unit>
        <trans-unit id="7b010410ca6e72b4d0b168b164c7004c1438d2f5" translate="yes" xml:space="preserve">
          <source>Internally, a &lt;code&gt;QuerySet&lt;/code&gt; can be constructed, filtered, sliced, and generally passed around without actually hitting the database. No database activity actually occurs until you do something to evaluate the queryset.</source>
          <target state="translated">Внутри &lt;code&gt;QuerySet&lt;/code&gt; может быть сконструирован, отфильтрован, разрезан и, как правило, передан без фактического попадания в базу данных. На самом деле никаких действий с базой данных не происходит, пока вы не сделаете что-то для оценки набора запросов.</target>
        </trans-unit>
        <trans-unit id="e6dd13d4fd26757d4a2c67a0952cec4935e89742" translate="yes" xml:space="preserve">
          <source>Internally, inline translations use an &lt;a href=&quot;../../ref/utils#django.utils.translation.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">Внутренне, встроенные переводы используют вызов &lt;a href=&quot;../../ref/utils#django.utils.translation.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cc66677522f28534dcc0a16a7bab83d78d113263" translate="yes" xml:space="preserve">
          <source>Internally, these strings are of type &lt;a href=&quot;../ref/utils#django.utils.safestring.SafeString&quot;&gt;&lt;code&gt;SafeString&lt;/code&gt;&lt;/a&gt;. You can test for them using code like:</source>
          <target state="translated">Внутренне эти строки имеют тип &lt;a href=&quot;../ref/utils#django.utils.safestring.SafeString&quot;&gt; &lt;code&gt;SafeString&lt;/code&gt; &lt;/a&gt; . Вы можете проверить их, используя такой код:</target>
        </trans-unit>
        <trans-unit id="9840502f92536bda054c5b8b5b3b050903683be4" translate="yes" xml:space="preserve">
          <source>Internationalization and localization</source>
          <target state="translated">Интернационализация и локализация</target>
        </trans-unit>
        <trans-unit id="e609ab9b7fe6379c805dbcbfe129b8b31dec62eb" translate="yes" xml:space="preserve">
          <source>Internationalization tags and filters</source>
          <target state="translated">Метки и фильтры интернационализации</target>
        </trans-unit>
        <trans-unit id="d8fc92b491eced77c0cc45a1a5338ff73ae08d59" translate="yes" xml:space="preserve">
          <source>Internationalization: in JavaScript code</source>
          <target state="translated">Интернационализация:в коде JavaScript</target>
        </trans-unit>
        <trans-unit id="c75f43d03d9fa742d9fb2c7d7873a7d5bc0ebf9d" translate="yes" xml:space="preserve">
          <source>Internationalization: in Python code</source>
          <target state="translated">Интернационализация:в Python-коде</target>
        </trans-unit>
        <trans-unit id="8fc3c49e3bc6b80c15d9568df95ee12b2b4ec66b" translate="yes" xml:space="preserve">
          <source>Internationalization: in URL patterns</source>
          <target state="translated">Интернационализация:в шаблонах URL</target>
        </trans-unit>
        <trans-unit id="093d237356c453f731e7c6a8c57c6018a7b3c174" translate="yes" xml:space="preserve">
          <source>Internationalization: in template code</source>
          <target state="translated">Интернационализация:в коде шаблона</target>
        </trans-unit>
        <trans-unit id="23b1a5b17786a57e3a8fb5dfdf8cf77e5bfff51e" translate="yes" xml:space="preserve">
          <source>Internet Explorer 8+</source>
          <target state="translated">Internet Explorer 8+</target>
        </trans-unit>
        <trans-unit id="4d8f4358c79e6f7a5ea439bdcb9825fcc3a2e838" translate="yes" xml:space="preserve">
          <source>Interpolation of &lt;code&gt;'%(app_label)s'&lt;/code&gt; and &lt;code&gt;'%(class)s'&lt;/code&gt; was added.</source>
          <target state="translated">&lt;code&gt;'%(app_label)s'&lt;/code&gt; интерполяция &quot;% (app_label) s&quot; и &lt;code&gt;'%(class)s'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="670d4bcb5c48156aee896dbdd2af0b12b43400b5" translate="yes" xml:space="preserve">
          <source>Interpretation of naive datetime objects</source>
          <target state="translated">Интерпретация наивных объектов даты</target>
        </trans-unit>
        <trans-unit id="ad5e7d5ae08e5cb2ed9acbf41f656da0c395f4bb" translate="yes" xml:space="preserve">
          <source>Introduce new views based on Django&amp;rsquo;s generic views.</source>
          <target state="translated">Представьте новые взгляды, основанные на общих взглядах Джанго.</target>
        </trans-unit>
        <trans-unit id="142d034c2e0110437de3729fc1ce5c2b7c38c50e" translate="yes" xml:space="preserve">
          <source>Introducing automated testing</source>
          <target state="translated">Внедрение автоматизированного тестирования</target>
        </trans-unit>
        <trans-unit id="de87d094c22de1337720d7b33816998f9929c20c" translate="yes" xml:space="preserve">
          <source>Introducing the Django Admin</source>
          <target state="translated">Представляем вам администратора Django</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="2b73339f8aa842940195a89ffe993ba65c3d9dde" translate="yes" xml:space="preserve">
          <source>Introduction to class-based views</source>
          <target state="translated">Введение в классовые представления</target>
        </trans-unit>
        <trans-unit id="a82d8f28beb37bb1505deaf578ad2cbafb3ae7f0" translate="yes" xml:space="preserve">
          <source>Introductions to all the key parts of Django you&amp;rsquo;ll need to know:</source>
          <target state="translated">Знакомство со всеми ключевыми частями Django, которые вы должны знать:</target>
        </trans-unit>
        <trans-unit id="c10d2f178e3c219ba32583ff1ed75ce35061d066" translate="yes" xml:space="preserve">
          <source>Introspects the database tables in the database pointed-to by the &lt;a href=&quot;settings#std:setting-NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt; setting and outputs a Django model module (a &lt;code&gt;models.py&lt;/code&gt; file) to standard output.</source>
          <target state="translated">Анализирует таблицы базы данных в базе данных, на которую указывает параметр &lt;a href=&quot;settings#std:setting-NAME&quot;&gt; &lt;code&gt;NAME&lt;/code&gt; ,&lt;/a&gt; и выводит модуль модели Django ( файл &lt;code&gt;models.py&lt;/code&gt; ) в стандартный вывод.</target>
        </trans-unit>
        <trans-unit id="e558f12b2fea5ada2ae33560ebbbda69b6b36bad" translate="yes" xml:space="preserve">
          <source>Is it a problem that Django&amp;rsquo;s CSRF protection isn&amp;rsquo;t linked to a session by default?</source>
          <target state="translated">Является ли проблемой то, что защита CSRF от Django по умолчанию не связана с сеансом?</target>
        </trans-unit>
        <trans-unit id="689295ff3cb0af6e5ed4a1994a98fd53a5442ebe" translate="yes" xml:space="preserve">
          <source>Is posting an arbitrary CSRF token pair (cookie and POST data) a vulnerability?</source>
          <target state="translated">Является ли размещение произвольной пары CSRF-токенов (куки и POST-данные)уязвимостью?</target>
        </trans-unit>
        <trans-unit id="46c6d6a6205743736d71d9cc8062c3a735fdd329" translate="yes" xml:space="preserve">
          <source>Isolation level</source>
          <target state="translated">уровень изоляции</target>
        </trans-unit>
        <trans-unit id="9c193045b5c55b9e3ed8d3e3e8a7b0a1f8cfd3eb" translate="yes" xml:space="preserve">
          <source>Isolation when using &lt;code&gt;QuerySet.iterator()&lt;/code&gt;</source>
          <target state="translated">Изоляция при использовании &lt;code&gt;QuerySet.iterator()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a224f02cd37de1afa21b98fadb23b1f88a19283" translate="yes" xml:space="preserve">
          <source>Issues an SQL &lt;code&gt;DELETE&lt;/code&gt; for the object. This only deletes the object in the database; the Python instance will still exist and will still have data in its fields. This method returns the number of objects deleted and a dictionary with the number of deletions per object type.</source>
          <target state="translated">Выдает SQL-запрос &lt;code&gt;DELETE&lt;/code&gt; для объекта. Это только удаляет объект в базе данных; Экземпляр Python все еще будет существовать и все еще будет содержать данные в своих полях. Этот метод возвращает количество удаленных объектов и словарь с количеством удалений на тип объекта.</target>
        </trans-unit>
        <trans-unit id="7475fe4c0d244b8e0bfd059947833601ade2bebc" translate="yes" xml:space="preserve">
          <source>It accepts two lists of operations, and when asked to apply state will use the state list, and when asked to apply changes to the database will use the database list. Do not use this operation unless you&amp;rsquo;re very sure you know what you&amp;rsquo;re doing.</source>
          <target state="translated">Он принимает два списка операций, и при запросе применить состояние будет использовать список состояний, а при запросе применить изменения к базе данных будет использовать список базы данных. Не используйте эту операцию, если вы не уверены, что знаете, что делаете.</target>
        </trans-unit>
        <trans-unit id="41a4422a0925c7b4416e1d76c7cc32a51af230b3" translate="yes" xml:space="preserve">
          <source>It accepts two lists of operations. When asked to apply state, it will use the &lt;code&gt;state_operations&lt;/code&gt; list (this is a generalized version of &lt;a href=&quot;#django.db.migrations.operations.RunSQL&quot;&gt;&lt;code&gt;RunSQL&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;code&gt;state_operations&lt;/code&gt; argument). When asked to apply changes to the database, it will use the &lt;code&gt;database_operations&lt;/code&gt; list.</source>
          <target state="translated">Он принимает два списка операций. Когда его попросили применить состояние, он будет использовать &lt;code&gt;state_operations&lt;/code&gt; список (это обобщенная версия &lt;a href=&quot;#django.db.migrations.operations.RunSQL&quot;&gt; &lt;code&gt;RunSQL&lt;/code&gt; &lt;/a&gt; &amp;laquo;s &lt;code&gt;state_operations&lt;/code&gt; аргумента). Когда вас попросят применить изменения к базе данных, он будет использовать список &lt;code&gt;database_operations&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d336b8e808b2ce8e6bc0892a95ebcc857261a00" translate="yes" xml:space="preserve">
          <source>It allows developers and template authors to specify which parts of their apps should be translated or formatted for local languages and cultures.</source>
          <target state="translated">Это позволяет разработчикам и авторам шаблонов указывать,какие части их приложений должны быть переведены или отформатированы для местных языков и культур.</target>
        </trans-unit>
        <trans-unit id="7dfc09caa336e0bf633e02009b185c91abc12fe9" translate="yes" xml:space="preserve">
          <source>It also handles the default permissions model as defined for &lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../topics/auth/customizing#django.contrib.auth.models.PermissionsMixin&quot;&gt;&lt;code&gt;PermissionsMixin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Он также обрабатывает модель разрешений по умолчанию, определенную для &lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../../topics/auth/customizing#django.contrib.auth.models.PermissionsMixin&quot;&gt; &lt;code&gt;PermissionsMixin&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cdc1d84e127c6d08799ea2bc49fa76e2873146cb" translate="yes" xml:space="preserve">
          <source>It also has these methods:</source>
          <target state="translated">У него также есть эти методы:</target>
        </trans-unit>
        <trans-unit id="511ef7aa375efc4f8ed62f952d298be8e0b4f95c" translate="yes" xml:space="preserve">
          <source>It also lets you create multiple versions of a site, with different base templates, while reusing child templates. Django&amp;rsquo;s creators have used this technique to create strikingly different mobile versions of sites by only creating a new base template.</source>
          <target state="translated">Он также позволяет создавать несколько версий сайта с разными базовыми шаблонами, одновременно используя дочерние шаблоны. Создатели Django использовали эту технику для создания совершенно разных мобильных версий сайтов, создавая только новый базовый шаблон.</target>
        </trans-unit>
        <trans-unit id="34f7a089ecd79aa5a1bdbaa5daa9e3f24da1ed07" translate="yes" xml:space="preserve">
          <source>It also provides an additional method:</source>
          <target state="translated">Он также предоставляет дополнительный метод:</target>
        </trans-unit>
        <trans-unit id="1daa4ac3ccf52ec1ffd7ad17d03466c814d3d12f" translate="yes" xml:space="preserve">
          <source>It also supports domain-only links ending in one of the original top level domains (&lt;code&gt;.com&lt;/code&gt;, &lt;code&gt;.edu&lt;/code&gt;, &lt;code&gt;.gov&lt;/code&gt;, &lt;code&gt;.int&lt;/code&gt;, &lt;code&gt;.mil&lt;/code&gt;, &lt;code&gt;.net&lt;/code&gt;, and &lt;code&gt;.org&lt;/code&gt;). For example, &lt;code&gt;djangoproject.com&lt;/code&gt; gets converted.</source>
          <target state="translated">Он также поддерживает только доменные ссылки, оканчивающиеся на один из исходных доменов верхнего уровня ( &lt;code&gt;.com&lt;/code&gt; , &lt;code&gt;.edu&lt;/code&gt; , &lt;code&gt;.gov&lt;/code&gt; , &lt;code&gt;.int&lt;/code&gt; , &lt;code&gt;.mil&lt;/code&gt; , &lt;code&gt;.net&lt;/code&gt; и &lt;code&gt;.org&lt;/code&gt; ). Например, &lt;code&gt;djangoproject.com&lt;/code&gt; конвертируется.</target>
        </trans-unit>
        <trans-unit id="a096078e43f7fa4f663661c8b0fa7e65fb69edbb" translate="yes" xml:space="preserve">
          <source>It also tells the browser that the form data should be sent to the URL specified in the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&amp;rsquo;s &lt;code&gt;action&lt;/code&gt; attribute - &lt;code&gt;/admin/&lt;/code&gt; - and that it should be sent using the HTTP mechanism specified by the &lt;code&gt;method&lt;/code&gt; attribute - &lt;code&gt;post&lt;/code&gt;.</source>
          <target state="translated">Он также сообщает браузеру , что данные формы должны быть отправлены на URL , указанный в &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; &amp;laquo;s &lt;code&gt;action&lt;/code&gt; атрибута - &lt;code&gt;/admin/&lt;/code&gt; - и что он должен быть послан с использованием механизма HTTP , указанный &lt;code&gt;method&lt;/code&gt; атрибута - &lt;code&gt;post&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a2a327dddd892e286db3b065802898e942c35e8" translate="yes" xml:space="preserve">
          <source>It assumes an understanding of templates, contexts, variables, tags, and rendering. Start with the &lt;a href=&quot;../../topics/templates#template-language-intro&quot;&gt;introduction to the Django template language&lt;/a&gt; if you aren&amp;rsquo;t familiar with these concepts.</source>
          <target state="translated">Это предполагает понимание шаблонов, контекстов, переменных, тегов и рендеринга. Начните с &lt;a href=&quot;../../topics/templates#template-language-intro&quot;&gt;введения в язык шаблонов Django,&lt;/a&gt; если вы не знакомы с этими понятиями.</target>
        </trans-unit>
        <trans-unit id="690d1365bfbf3fb0fa4c118b89f89d5b8366bb2e" translate="yes" xml:space="preserve">
          <source>It assumes middleware that&amp;rsquo;s compatible with the old style of Django 1.9 and earlier (having methods like &lt;code&gt;process_request()&lt;/code&gt;, &lt;code&gt;process_exception()&lt;/code&gt;, and &lt;code&gt;process_response()&lt;/code&gt;).</source>
          <target state="translated">Предполагается, что промежуточное ПО совместимо со старым стилем Django 1.9 и более ранними &lt;code&gt;process_request()&lt;/code&gt; такими методами, как process_request () , &lt;code&gt;process_exception()&lt;/code&gt; и &lt;code&gt;process_response()&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1ad1839af85eeb8a94e119c33ec2f05a3545b5e7" translate="yes" xml:space="preserve">
          <source>It boils down to this: Use exactly one of either &lt;code&gt;configure()&lt;/code&gt; or &lt;a href=&quot;#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-8&quot;&gt;&lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;&lt;/a&gt;. Not both, and not neither.</source>
          <target state="translated">Это сводится к следующему: используйте только одно из &lt;code&gt;configure()&lt;/code&gt; или &lt;a href=&quot;#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-8&quot;&gt; &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; &lt;/a&gt; . Ни то, ни другое.</target>
        </trans-unit>
        <trans-unit id="adb59b85de0de778de68aecefe53c76f0de98f9c" translate="yes" xml:space="preserve">
          <source>It boils down to this: Use exactly one of either &lt;code&gt;configure()&lt;/code&gt; or &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;. Not both, and not neither.</source>
          <target state="translated">Это сводится к следующему: используйте только один из &lt;code&gt;configure()&lt;/code&gt; или &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; . Не то и другое.</target>
        </trans-unit>
        <trans-unit id="56cf6839db62a78b3bd293b603fd6fb8dfbb0eb3" translate="yes" xml:space="preserve">
          <source>It can also be registered as a transform as described in &lt;a href=&quot;#django.db.models.functions.Length&quot;&gt;&lt;code&gt;Length&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Он также может быть зарегистрирован как преобразование, как описано в &lt;a href=&quot;#django.db.models.functions.Length&quot;&gt; &lt;code&gt;Length&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="eb23c5c9e3231d62a5810bd6a50cdfe7b6a5920f" translate="yes" xml:space="preserve">
          <source>It can also be registered as a transform as described in &lt;a href=&quot;#django.db.models.functions.Length&quot;&gt;&lt;code&gt;Length&lt;/code&gt;&lt;/a&gt;. The default lookup name is &lt;code&gt;ord&lt;/code&gt;.</source>
          <target state="translated">Он также может быть зарегистрирован как преобразование, как описано в &lt;a href=&quot;#django.db.models.functions.Length&quot;&gt; &lt;code&gt;Length&lt;/code&gt; &lt;/a&gt; . Именем поиска по умолчанию является &lt;code&gt;ord&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ea67b801d1eaece4d265dba2ce2e38e5910e3a3" translate="yes" xml:space="preserve">
          <source>It can also be registered as a transform as described in &lt;a href=&quot;#django.db.models.functions.Length&quot;&gt;&lt;code&gt;Length&lt;/code&gt;&lt;/a&gt;. The default lookup name is &lt;code&gt;reverse&lt;/code&gt;.</source>
          <target state="translated">Он также может быть зарегистрирован как преобразование, как описано в &lt;a href=&quot;#django.db.models.functions.Length&quot;&gt; &lt;code&gt;Length&lt;/code&gt; &lt;/a&gt; . Имя поиска по умолчанию &lt;code&gt;reverse&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b83a041f76ddd9a3ab23ee010a83c03a9e951ed" translate="yes" xml:space="preserve">
          <source>It can also be registered as a transform. For example:</source>
          <target state="translated">Она также может быть зарегистрирована как трансформация.Например:</target>
        </trans-unit>
        <trans-unit id="7bd0768970c34a1a29a145ed1522c59cc494bcb5" translate="yes" xml:space="preserve">
          <source>It can also be used as a context manager, which will automatically call &lt;code&gt;open()&lt;/code&gt; and &lt;code&gt;close()&lt;/code&gt; as needed:</source>
          <target state="translated">Его также можно использовать в качестве диспетчера контекста, который будет автоматически вызывать &lt;code&gt;open()&lt;/code&gt; и &lt;code&gt;close()&lt;/code&gt; мере необходимости:</target>
        </trans-unit>
        <trans-unit id="ed3fc307f28897d761a0063f6cf900a66eaaebe1" translate="yes" xml:space="preserve">
          <source>It can assign settings dynamically using normal Python syntax. For example:</source>
          <target state="translated">Он может назначать настройки динамически,используя обычный синтаксис Python.Например:</target>
        </trans-unit>
        <trans-unit id="57a589b7f3ed91b9ee61b7886d257dffc5695c89" translate="yes" xml:space="preserve">
          <source>It can be used as a context manager, e.g. &lt;code&gt;with file.open() as f:&lt;/code&gt;.</source>
          <target state="translated">Он может быть использован в качестве менеджера контекста, например , &lt;code&gt;with file.open() as f:&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b2097031fa8fe10d38cffd390f98272e96a466e" translate="yes" xml:space="preserve">
          <source>It can be useful to include multiple versions of the content in an email; the classic example is to send both text and HTML versions of a message. With Django&amp;rsquo;s email library, you can do this using the &lt;code&gt;EmailMultiAlternatives&lt;/code&gt; class. This subclass of &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; has an &lt;code&gt;attach_alternative()&lt;/code&gt; method for including extra versions of the message body in the email. All the other methods (including the class initialization) are inherited directly from &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Может быть полезно включить несколько версий контента в электронное письмо; классический пример - отправка текстовой и HTML-версии сообщения. С библиотекой электронной почты Django вы можете сделать это с &lt;code&gt;EmailMultiAlternatives&lt;/code&gt; класса EmailMultiAlternatives . Этот подкласс &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt; имеет метод &lt;code&gt;attach_alternative()&lt;/code&gt; для включения дополнительных версий тела сообщения в электронное письмо. Все остальные методы (включая инициализацию класса) наследуются непосредственно от &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5c4198fb60ed49893bf1b7b15101a986fc314284" translate="yes" xml:space="preserve">
          <source>It can import values from other settings files.</source>
          <target state="translated">Он может импортировать значения из других файлов настроек.</target>
        </trans-unit>
        <trans-unit id="d14f9ff60b98c4d0c8826e092f3be2f126af5e32" translate="yes" xml:space="preserve">
          <source>It can prove unwieldy to redefine settings that contain a list of values. In practice, adding or removing values is often sufficient. Django provides the &lt;a href=&quot;#django.test.SimpleTestCase.modify_settings&quot;&gt;&lt;code&gt;modify_settings()&lt;/code&gt;&lt;/a&gt; context manager for easier settings changes:</source>
          <target state="translated">Это может оказаться неудобным для переопределения настроек, которые содержат список значений. На практике добавления или удаления значений часто бывает достаточно. Django предоставляет менеджер контекста &lt;a href=&quot;#django.test.SimpleTestCase.modify_settings&quot;&gt; &lt;code&gt;modify_settings()&lt;/code&gt; &lt;/a&gt; для более простых изменений настроек:</target>
        </trans-unit>
        <trans-unit id="097608e43f341dbd5fc60aa8b784590fa3776b10" translate="yes" xml:space="preserve">
          <source>It can sometimes be worth checking whether different and better-performing versions of the software that you&amp;rsquo;re using are available.</source>
          <target state="translated">Иногда стоит проверить, доступны ли разные и более эффективные версии используемого вами программного обеспечения.</target>
        </trans-unit>
        <trans-unit id="020494bf079569c48d07f0e339eeaba2144e3978" translate="yes" xml:space="preserve">
          <source>It casts &lt;code&gt;objs&lt;/code&gt; to a list, which fully evaluates &lt;code&gt;objs&lt;/code&gt; if it&amp;rsquo;s a generator. The cast allows inspecting all objects so that any objects with a manually set primary key can be inserted first. If you want to insert objects in batches without evaluating the entire generator at once, you can use this technique as long as the objects don&amp;rsquo;t have any manually set primary keys:</source>
          <target state="translated">Он бросает &lt;code&gt;objs&lt;/code&gt; в список, который полностью оценивает &lt;code&gt;objs&lt;/code&gt; , если это генератор. Приведение позволяет проверять все объекты, так что любые объекты с установленным вручную первичным ключом могут быть вставлены первыми. Если вы хотите вставить объекты в пакет без одновременной оценки всего генератора, вы можете использовать эту технику, если у объектов нет установленных первичных ключей вручную:</target>
        </trans-unit>
        <trans-unit id="ceb8f9445123da563549e25d61604338816d4379" translate="yes" xml:space="preserve">
          <source>It checks if the authentication backend stored in the session is present in &lt;a href=&quot;../settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt;&lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt;&lt;/a&gt;. If so, it uses the backend&amp;rsquo;s &lt;code&gt;get_user()&lt;/code&gt; method to retrieve the user model instance and then verifies the session by calling the user model&amp;rsquo;s &lt;a href=&quot;../../topics/auth/customizing#django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash&quot;&gt;&lt;code&gt;get_session_auth_hash()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Он проверяет, присутствует ли сервер аутентификации, сохраненный в сеансе, в &lt;a href=&quot;../settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt; &lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt; &lt;/a&gt; . Если это так, он использует метод &lt;code&gt;get_user()&lt;/code&gt; бэкэнда для получения экземпляра пользовательской модели, а затем проверяет сеанс, вызывая метод &lt;a href=&quot;../../topics/auth/customizing#django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash&quot;&gt; &lt;code&gt;get_session_auth_hash()&lt;/code&gt; &lt;/a&gt; пользовательской модели .</target>
        </trans-unit>
        <trans-unit id="3944a69b3b8d5e875b158cbb7605a1481e03f1ee" translate="yes" xml:space="preserve">
          <source>It defaults to &lt;code&gt;'utf-8'&lt;/code&gt;.</source>
          <target state="translated">По умолчанию используется &lt;code&gt;'utf-8'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="610e7c05ff132aa7c98f9f01ec8dcc655f337645" translate="yes" xml:space="preserve">
          <source>It defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">По умолчанию это &lt;code&gt;False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="623e5cad0209d1a8e190acf6c13089e4a56c233d" translate="yes" xml:space="preserve">
          <source>It defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">По умолчанию установлено значение &lt;code&gt;True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d209a528a103c486502ebe2e0181e7e90306575" translate="yes" xml:space="preserve">
          <source>It defaults to a list containing:</source>
          <target state="translated">По умолчанию он содержит список:</target>
        </trans-unit>
        <trans-unit id="3db0ca2305071d48e523540f02a1e4d4cdd92923" translate="yes" xml:space="preserve">
          <source>It defaults to an empty list.</source>
          <target state="translated">По умолчанию это пустой список.</target>
        </trans-unit>
        <trans-unit id="b54a841d858e6e9a9cdf3df9d4cd720e0e1979b8" translate="yes" xml:space="preserve">
          <source>It defaults to an empty string.</source>
          <target state="translated">По умолчанию это пустая строка.</target>
        </trans-unit>
        <trans-unit id="4086bf4e205c88779a9aaabba9fb09a7f47c9f8b" translate="yes" xml:space="preserve">
          <source>It defaults to the empty string.</source>
          <target state="translated">По умолчанию это пустая строка.</target>
        </trans-unit>
        <trans-unit id="28e917985102de2cb163734f6e066baeaa33a044" translate="yes" xml:space="preserve">
          <source>It defaults to the name of the module defining the engine class, i.e. the next to last piece of &lt;a href=&quot;#std:setting-TEMPLATES-BACKEND&quot;&gt;&lt;code&gt;BACKEND&lt;/code&gt;&lt;/a&gt;, when it isn&amp;rsquo;t provided. For example if the backend is &lt;code&gt;'mypackage.whatever.Backend'&lt;/code&gt; then its default name is &lt;code&gt;'whatever'&lt;/code&gt;.</source>
          <target state="translated">По умолчанию используется имя модуля, определяющего класс механизма, т. &lt;a href=&quot;#std:setting-TEMPLATES-BACKEND&quot;&gt; &lt;code&gt;BACKEND&lt;/code&gt; &lt;/a&gt; Следующий за последним фрагментом BACKEND , если он не указан . Например, если backend - &lt;code&gt;'mypackage.whatever.Backend'&lt;/code&gt; то его имя по умолчанию - &amp;laquo;what &lt;code&gt;'whatever'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f670820519da37f85de420992b3fd748290e4628" translate="yes" xml:space="preserve">
          <source>It defaults to the value of the &lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">По умолчанию используется значение параметра &lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d147afb5556d22db8ab3da32b2d02bdec93b0017" translate="yes" xml:space="preserve">
          <source>It deliberately ignores GET requests (and other requests that are defined as &amp;lsquo;safe&amp;rsquo; by &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-4.2.1&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 7231#section-4.2.1&lt;/strong&gt;&lt;/a&gt;). These requests ought never to have any potentially dangerous side effects, and so a CSRF attack with a GET request ought to be harmless. &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-4.2.1&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 7231#section-4.2.1&lt;/strong&gt;&lt;/a&gt; defines POST, PUT, and DELETE as &amp;lsquo;unsafe&amp;rsquo;, and all other methods are also assumed to be unsafe, for maximum protection.</source>
          <target state="translated">Он намеренно игнорирует запросы GET (и другие запросы, которые определены как &amp;laquo;безопасные&amp;raquo; в &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-4.2.1&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 7231 # section-4.2.1&lt;/strong&gt;&lt;/a&gt; ). Эти запросы никогда не должны иметь потенциально опасных побочных эффектов, поэтому атака CSRF с помощью запроса GET должна быть безвредной. &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-4.2.1&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 7231 # section-4.2.1&lt;/strong&gt;&lt;/a&gt; определяет POST, PUT и DELETE как &amp;laquo;небезопасные&amp;raquo;, и все другие методы также считаются небезопасными для максимальной защиты.</target>
        </trans-unit>
        <trans-unit id="c1df500b3fdcfe2bc743847338a819e8fc0de2b5" translate="yes" xml:space="preserve">
          <source>It does not support middleware. Session and authentication attributes must be supplied by the test itself if required for the view to function properly.</source>
          <target state="translated">Он не поддерживает промежуточное программное обеспечение.Атрибуты сеанса и аутентификации должны быть предоставлены самим тестом,если это необходимо для корректной работы вида.</target>
        </trans-unit>
        <trans-unit id="c47f33f421faaf0d62ce5c333284b1b924733727" translate="yes" xml:space="preserve">
          <source>It does not work with child models in a multi-table inheritance scenario.</source>
          <target state="translated">Он не работает с дочерними моделями в сценарии наследования с несколькими столами.</target>
        </trans-unit>
        <trans-unit id="8152d5b171a8766f9da5b542812132a92f7bc3a8" translate="yes" xml:space="preserve">
          <source>It does not work with many-to-many relationships.</source>
          <target state="translated">Это не работает с много-многочисленными отношениями.</target>
        </trans-unit>
        <trans-unit id="8fc51282cf5ef3da5ced5304bc564e431c925d3c" translate="yes" xml:space="preserve">
          <source>It doesn&amp;rsquo;t allow for Python syntax errors.</source>
          <target state="translated">Он не допускает синтаксических ошибок Python.</target>
        </trans-unit>
        <trans-unit id="067e9c9b65fffdb89e5ef4a000cf2df974c65535" translate="yes" xml:space="preserve">
          <source>It doesn&amp;rsquo;t matter which model has the &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt;, but you should only put it in one of the models &amp;ndash; not both.</source>
          <target state="translated">Неважно, какая модель имеет &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt; , но вы должны поместить ее только в одну из моделей, а не в обе.</target>
        </trans-unit>
        <trans-unit id="36f56311955ef1f67fee06986862dbe095296993" translate="yes" xml:space="preserve">
          <source>It doesn&amp;rsquo;t save you from generating the response, which may be expensive.</source>
          <target state="translated">Это не спасет вас от генерации ответа, который может быть дорогим.</target>
        </trans-unit>
        <trans-unit id="87a806c4922f40382d07fc0463c125f83ba7a5bc" translate="yes" xml:space="preserve">
          <source>It exposes all possible operations as methods, that should be called in the order you wish changes to be applied. Some possible operations or types of change are not possible on all databases - for example, MyISAM does not support foreign key constraints.</source>
          <target state="translated">Он раскрывает все возможные операции в качестве методов,которые следует вызывать в порядке,в котором вы хотите,чтобы изменения были применены.Некоторые возможные операции или типы изменений возможны не во всех базах данных-например,MyISAM не поддерживает ограничения по иностранным ключам.</target>
        </trans-unit>
        <trans-unit id="0c58c5a4e6116594807b291787a1f7990bcf8231" translate="yes" xml:space="preserve">
          <source>It has access to the following settings:</source>
          <target state="translated">Он имеет доступ к следующим настройкам:</target>
        </trans-unit>
        <trans-unit id="e0a3475069a9ec716d0910e37c46be9d681e15d1" translate="yes" xml:space="preserve">
          <source>It has no &lt;code&gt;content&lt;/code&gt; attribute. Instead, it has a &lt;a href=&quot;#django.http.StreamingHttpResponse.streaming_content&quot;&gt;&lt;code&gt;streaming_content&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">У него нет атрибута &lt;code&gt;content&lt;/code&gt; . Вместо этого он имеет атрибут &lt;a href=&quot;#django.http.StreamingHttpResponse.streaming_content&quot;&gt; &lt;code&gt;streaming_content&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aa0dc2f03765869baa63c35bfcea12543db464d7" translate="yes" xml:space="preserve">
          <source>It has three fields: &lt;code&gt;username&lt;/code&gt; (from the user model), &lt;code&gt;password1&lt;/code&gt;, and &lt;code&gt;password2&lt;/code&gt;. It verifies that &lt;code&gt;password1&lt;/code&gt; and &lt;code&gt;password2&lt;/code&gt; match, validates the password using &lt;a href=&quot;passwords#django.contrib.auth.password_validation.validate_password&quot;&gt;&lt;code&gt;validate_password()&lt;/code&gt;&lt;/a&gt;, and sets the user&amp;rsquo;s password using &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.set_password&quot;&gt;&lt;code&gt;set_password()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Он имеет три поля: &lt;code&gt;username&lt;/code&gt; (из модели пользователя), &lt;code&gt;password1&lt;/code&gt; и &lt;code&gt;password2&lt;/code&gt; . Он проверяет, совпадают ли &lt;code&gt;password1&lt;/code&gt; и &lt;code&gt;password2&lt;/code&gt; , проверяет пароль с помощью &lt;a href=&quot;passwords#django.contrib.auth.password_validation.validate_password&quot;&gt; &lt;code&gt;validate_password()&lt;/code&gt; &lt;/a&gt; и устанавливает пароль пользователя с помощью &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.set_password&quot;&gt; &lt;code&gt;set_password()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7d779021d49b2c90161c17c331456b5b3068c78f" translate="yes" xml:space="preserve">
          <source>It is &lt;em&gt;possible&lt;/em&gt; to write code that does all of this manually, but Django can take care of it all for you.</source>
          <target state="translated">Это &lt;em&gt;возможно&lt;/em&gt; для написания кода , который делает все это вручную, но Django может взять на себя все это для вас.</target>
        </trans-unit>
        <trans-unit id="076bb76ff5ce930dc8437ad0f408044a3c975e80" translate="yes" xml:space="preserve">
          <source>It is a good idea to limit the accessibility of your caching system and database using a firewall.</source>
          <target state="translated">Хорошей идеей является ограничение доступности вашей системы кэширования и базы данных с помощью брандмауэра.</target>
        </trans-unit>
        <trans-unit id="e4bd508268912d6165f52fe9e95d58ac3654cc3c" translate="yes" xml:space="preserve">
          <source>It is also able to consume standard context variables, e.g. assuming a &lt;code&gt;user_stylesheet&lt;/code&gt; variable is passed to the template:</source>
          <target state="translated">Он также может использовать стандартные контекстные переменные, например, предполагая, что переменная &lt;code&gt;user_stylesheet&lt;/code&gt; передается в шаблон:</target>
        </trans-unit>
        <trans-unit id="7275d5f0dbdce35d356cc0217bbaced47935d584" translate="yes" xml:space="preserve">
          <source>It is also important to be particularly careful when using &lt;code&gt;is_safe&lt;/code&gt; with custom template tags, the &lt;a href=&quot;../ref/templates/builtins#std:templatefilter-safe&quot;&gt;&lt;code&gt;safe&lt;/code&gt;&lt;/a&gt; template tag, &lt;a href=&quot;../ref/utils#module-django.utils.safestring&quot;&gt;&lt;code&gt;mark_safe&lt;/code&gt;&lt;/a&gt;, and when autoescape is turned off.</source>
          <target state="translated">Также важно быть особенно осторожным при использовании &lt;code&gt;is_safe&lt;/code&gt; с пользовательскими тегами шаблона, &lt;a href=&quot;../ref/templates/builtins#std:templatefilter-safe&quot;&gt; &lt;code&gt;safe&lt;/code&gt; &lt;/a&gt; тегом шаблона &lt;a href=&quot;../ref/utils#module-django.utils.safestring&quot;&gt; &lt;code&gt;mark_safe&lt;/code&gt; &lt;/a&gt; и при выключенном autoescape.</target>
        </trans-unit>
        <trans-unit id="d35cd2bb04a3095baf1f0156dad2be668729d17a" translate="yes" xml:space="preserve">
          <source>It is also important to remember that when running with &lt;a href=&quot;#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; turned on, Django will remember every SQL query it executes. This is useful when you&amp;rsquo;re debugging, but it&amp;rsquo;ll rapidly consume memory on a production server.</source>
          <target state="translated">Также важно помнить, что при работе с &lt;a href=&quot;#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt; Django запоминает каждый выполняемый SQL-запрос. Это полезно при отладке, но быстро потребляет память на рабочем сервере.</target>
        </trans-unit>
        <trans-unit id="ee9ff4e3c1dd0783a48894b88febf1b60c5ee412" translate="yes" xml:space="preserve">
          <source>It is also possible to make use of the &lt;a href=&quot;https://docs.python.org/3/library/enum.html#functional-api&quot;&gt;Enum Functional API&lt;/a&gt; with the caveat that labels are automatically generated as highlighted above:</source>
          <target state="translated">Также возможно использовать &lt;a href=&quot;https://docs.python.org/3/library/enum.html#functional-api&quot;&gt;функциональный API Enum&lt;/a&gt; с предупреждением о том, что метки генерируются автоматически, как выделено выше:</target>
        </trans-unit>
        <trans-unit id="44479df581713f225efd5b192e8fbdd6c0ac4474" translate="yes" xml:space="preserve">
          <source>It is always better for security to deploy your site behind HTTPS. Without this, it is possible for malicious network users to sniff authentication credentials or any other information transferred between client and server, and in some cases &amp;ndash; &lt;strong&gt;active&lt;/strong&gt; network attackers &amp;ndash; to alter data that is sent in either direction.</source>
          <target state="translated">Для безопасности всегда лучше развернуть свой сайт за HTTPS. Без этого злонамеренные пользователи сети могут прослушивать учетные данные аутентификации или любую другую информацию, передаваемую между клиентом и сервером, а в некоторых случаях - &lt;strong&gt;активные&lt;/strong&gt; злоумышленники сети - изменять данные, отправляемые в любом направлении.</target>
        </trans-unit>
        <trans-unit id="1b4af27d7dd9a152a61bf23559d3c0f63300fe1e" translate="yes" xml:space="preserve">
          <source>It is an error to pass both &lt;code&gt;db_constraint&lt;/code&gt; and &lt;code&gt;through&lt;/code&gt;.</source>
          <target state="translated">Ошибка пропускать как &lt;code&gt;db_constraint&lt;/code&gt; ,так и &lt;code&gt;through&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f706f2f8550bb586d727ba9bab956c8a2837633c" translate="yes" xml:space="preserve">
          <source>It is an error to pass in &lt;code&gt;flat&lt;/code&gt; when there is more than one field.</source>
          <target state="translated">Ошибочно передавать в &lt;code&gt;flat&lt;/code&gt; когда есть более одного поля.</target>
        </trans-unit>
        <trans-unit id="94e37286047bbf178a0b441757a7d81a744c2c81" translate="yes" xml:space="preserve">
          <source>It is best practice to provide a dedicated environment for each Django project you create. There are many options to manage environments and packages within the Python ecosystem, some of which are recommended in the &lt;a href=&quot;https://packaging.python.org/guides/tool-recommendations/&quot;&gt;Python documentation&lt;/a&gt;. Python itself comes with &lt;a href=&quot;https://docs.python.org/3/tutorial/venv.html&quot;&gt;venv&lt;/a&gt; for managing environments which we will use for this guide.</source>
          <target state="translated">Лучше всего предоставлять отдельную среду для каждого создаваемого вами проекта Django. Есть много вариантов управления средами и пакетами в экосистеме Python, некоторые из которых рекомендованы в &lt;a href=&quot;https://packaging.python.org/guides/tool-recommendations/&quot;&gt;документации Python&lt;/a&gt; . Сам Python поставляется с &lt;a href=&quot;https://docs.python.org/3/tutorial/venv.html&quot;&gt;venv&lt;/a&gt; для управления средами, которые мы будем использовать в этом руководстве.</target>
        </trans-unit>
        <trans-unit id="d92635fe6d3362308ab42d3856be4325b2da976c" translate="yes" xml:space="preserve">
          <source>It is considered an error to specify a cache name that is not configured.</source>
          <target state="translated">Ошибкой считается указание имени кэша,которое не настроено.</target>
        </trans-unit>
        <trans-unit id="db35e4ce1081482f04f069c13884b47498468f3e" translate="yes" xml:space="preserve">
          <source>It is for these reasons that Django provides &lt;em&gt;natural keys&lt;/em&gt;. A natural key is a tuple of values that can be used to uniquely identify an object instance without using the primary key value.</source>
          <target state="translated">Именно по этим причинам Django предоставляет &lt;em&gt;естественные ключи&lt;/em&gt; . Естественный ключ - это кортеж значений, который можно использовать для уникальной идентификации экземпляра объекта без использования значения первичного ключа.</target>
        </trans-unit>
        <trans-unit id="cdaad7896204a4ac78b076176cec9c1cbf93733e" translate="yes" xml:space="preserve">
          <source>It is important to understand that a Django application is a set of code that interacts with various parts of the framework. There&amp;rsquo;s no such thing as an &lt;code&gt;Application&lt;/code&gt; object. However, there&amp;rsquo;s a few places where Django needs to interact with installed applications, mainly for configuration and also for introspection. That&amp;rsquo;s why the application registry maintains metadata in an &lt;a href=&quot;#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; instance for each installed application.</source>
          <target state="translated">Важно понимать, что приложение Django - это набор кода, который взаимодействует с различными частями фреймворка. Там нет такого понятия, как объект &lt;code&gt;Application&lt;/code&gt; . Однако есть несколько мест, где Django необходимо взаимодействовать с установленными приложениями, в основном для настройки, а также для самоанализа. Вот почему реестр приложений поддерживает метаданные в экземпляре &lt;a href=&quot;#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt; для каждого установленного приложения.</target>
        </trans-unit>
        <trans-unit id="21713b029856dacee13a57247a95a54d57c7a08f" translate="yes" xml:space="preserve">
          <source>It is important you use a &lt;code&gt;ModelForm&lt;/code&gt; here otherwise things can break. See the &lt;a href=&quot;../../forms/index&quot;&gt;forms&lt;/a&gt; documentation on &lt;a href=&quot;../../forms/validation&quot;&gt;custom validation&lt;/a&gt; and, more specifically, the &lt;a href=&quot;../../../topics/forms/modelforms#overriding-modelform-clean-method&quot;&gt;model form validation notes&lt;/a&gt; for more information.</source>
          <target state="translated">Здесь важно использовать &lt;code&gt;ModelForm&lt;/code&gt; , иначе все может сломаться. Для получения дополнительной информации см. Документацию &lt;a href=&quot;../../forms/index&quot;&gt;форм&lt;/a&gt; по &lt;a href=&quot;../../forms/validation&quot;&gt;пользовательской проверке&lt;/a&gt; и, в частности, &lt;a href=&quot;../../../topics/forms/modelforms#overriding-modelform-clean-method&quot;&gt;примечания&lt;/a&gt; к проверке формы модели .</target>
        </trans-unit>
        <trans-unit id="9f47a7255f5d5f42baf7de03967064db62c559d6" translate="yes" xml:space="preserve">
          <source>It is internal to the HTTP handler modules and you are unlikely to see it elsewhere. If you are modifying HTTP handling code, you should raise this when you encounter an aborted request to make sure the socket is closed cleanly.</source>
          <target state="translated">Он является внутренним для модулей обработчиков HTTP,и вряд ли вы увидите его где-то еще.Если вы модифицируете код HTTP-обработчика,вы должны поднять этот вопрос,когда сталкиваетесь с прерванным запросом,чтобы убедиться,что сокет закрыт чисто.</target>
        </trans-unit>
        <trans-unit id="3ea3d5784be308197fa0ef8a916ca48b31fde3d2" translate="yes" xml:space="preserve">
          <source>It is necessary to adapt the calling style when calling sync code from an async context, or vice-versa. For this there are two adapter functions, from the &lt;code&gt;asgiref.sync&lt;/code&gt; module: &lt;a href=&quot;#asgiref.sync.async_to_sync&quot;&gt;&lt;code&gt;async_to_sync()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asgiref.sync.sync_to_async&quot;&gt;&lt;code&gt;sync_to_async()&lt;/code&gt;&lt;/a&gt;. They are used to transition between the calling styles while preserving compatibility.</source>
          <target state="translated">Необходимо адаптировать стиль вызова при вызове кода синхронизации из асинхронного контекста или наоборот. Для этого есть два адаптера функции, от &lt;code&gt;asgiref.sync&lt;/code&gt; модуля: &lt;a href=&quot;#asgiref.sync.async_to_sync&quot;&gt; &lt;code&gt;async_to_sync()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#asgiref.sync.sync_to_async&quot;&gt; &lt;code&gt;sync_to_async()&lt;/code&gt; &lt;/a&gt; . Они используются для перехода между стилями вызова при сохранении совместимости.</target>
        </trans-unit>
        <trans-unit id="5f34ac9cd66cf8fc8ae4b45ada16f5905bb668c2" translate="yes" xml:space="preserve">
          <source>It is not always necessary to define a custom model form. The &lt;code&gt;modelformset_factory&lt;/code&gt; function has several arguments which are passed through to &lt;code&gt;modelform_factory&lt;/code&gt;, which are described below.</source>
          <target state="translated">Не всегда необходимо определять пользовательскую форму модели. Функция &lt;code&gt;modelformset_factory&lt;/code&gt; имеет несколько аргументов, которые передаются в &lt;code&gt;modelform_factory&lt;/code&gt; , которые описаны ниже.</target>
        </trans-unit>
        <trans-unit id="9a8b2584d8949ae3aad5845125aff27c6dea3682" translate="yes" xml:space="preserve">
          <source>It is often useful to automatically prepopulate a SlugField based on the value of some other value. You can do this automatically in the admin using &lt;a href=&quot;../contrib/admin/index#django.contrib.admin.ModelAdmin.prepopulated_fields&quot;&gt;&lt;code&gt;prepopulated_fields&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Часто полезно автоматически заполнять поле SlugField на основе значения другого значения. Вы можете сделать это автоматически в администраторе используя &lt;a href=&quot;../contrib/admin/index#django.contrib.admin.ModelAdmin.prepopulated_fields&quot;&gt; &lt;code&gt;prepopulated_fields&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6b9f4db131ef38104458cc78f509f9b8e4f82a6f" translate="yes" xml:space="preserve">
          <source>It is optimal because:</source>
          <target state="translated">Это оптимально,потому что</target>
        </trans-unit>
        <trans-unit id="408d4a1ae07d6047f237c8763a2a0fa6bd869c5a" translate="yes" xml:space="preserve">
          <source>It is permissible to specify a multi-valued field to order the results by (for example, a &lt;a href=&quot;fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; field, or the reverse relation of a &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; field).</source>
          <target state="translated">&lt;a href=&quot;fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt; указывать многозначное поле для упорядочения результатов (например, поле ManyToManyField или обратное отношение поля &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="4de64c032c28609f6df579f2dfec13b9e5f4dc55" translate="yes" xml:space="preserve">
          <source>It is possible to also look permissions up by &lt;code&gt;{% if in %}&lt;/code&gt; statements. For example:</source>
          <target state="translated">Можно также посмотреть разрешения на &lt;code&gt;{% if in %}&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="621c5a5a4c8691aea320db24c5e909c90b4b8f41" translate="yes" xml:space="preserve">
          <source>It is possible to force the set of fields to be loaded by using the &lt;code&gt;fields&lt;/code&gt; argument.</source>
          <target state="translated">Можно принудительно загрузить набор полей, используя аргумент &lt;code&gt;fields&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="174fe92efe02e9e94a8eb86f6a7e7cb926b52c6f" translate="yes" xml:space="preserve">
          <source>It is possible to nest array fields - you can specify an instance of &lt;code&gt;ArrayField&lt;/code&gt; as the &lt;code&gt;base_field&lt;/code&gt;. For example:</source>
          <target state="translated">Возможно &lt;code&gt;ArrayField&lt;/code&gt; полей массива - вы можете указать экземпляр ArrayField в качестве &lt;code&gt;base_field&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="e6bcdc82a033bbb732e04f96956f57d7253284dc" translate="yes" xml:space="preserve">
          <source>It is possible to override the name of the package which contains the migrations on a per-app basis by modifying the &lt;a href=&quot;../ref/settings#std:setting-MIGRATION_MODULES&quot;&gt;&lt;code&gt;MIGRATION_MODULES&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">Можно переопределить имя пакета, который содержит миграции для каждого приложения, изменив параметр &lt;a href=&quot;../ref/settings#std:setting-MIGRATION_MODULES&quot;&gt; &lt;code&gt;MIGRATION_MODULES&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="50d0e398cc2ed04ea79dcc18f3912bf3c9a79141" translate="yes" xml:space="preserve">
          <source>It is possible to specify a custom template for rendering a list filter:</source>
          <target state="translated">Можно указать пользовательский шаблон для отрисовки фильтра списков:</target>
        </trans-unit>
        <trans-unit id="c4fa9dadf195abd5e2ec6597c4a03e19eae786f6" translate="yes" xml:space="preserve">
          <source>It is possible to use an inline with generically related objects. Let&amp;rsquo;s say you have the following models:</source>
          <target state="translated">Можно использовать inline с общими объектами. Допустим, у вас есть следующие модели:</target>
        </trans-unit>
        <trans-unit id="1d37ea5ca9ec311b0a77aeb96bb1d5e82b99086a" translate="yes" xml:space="preserve">
          <source>It is recommended to always provide explicit &lt;a href=&quot;../../ref/models/options#django.db.models.Options.verbose_name&quot;&gt;&lt;code&gt;verbose_name&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/models/options#django.db.models.Options.verbose_name_plural&quot;&gt;&lt;code&gt;verbose_name_plural&lt;/code&gt;&lt;/a&gt; options rather than relying on the fallback English-centric and somewhat na&amp;iuml;ve determination of verbose names Django performs by looking at the model&amp;rsquo;s class name:</source>
          <target state="translated">Рекомендуется всегда предоставлять явные параметры &lt;a href=&quot;../../ref/models/options#django.db.models.Options.verbose_name&quot;&gt; &lt;code&gt;verbose_name&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../../ref/models/options#django.db.models.Options.verbose_name_plural&quot;&gt; &lt;code&gt;verbose_name_plural&lt;/code&gt; &lt;/a&gt; , а не полагаться на запасное англо-ориентированное и несколько наивное определение подробных имен, которые Django выполняет, просматривая имя класса модели:</target>
        </trans-unit>
        <trans-unit id="1506ce35ebb7e326c976d49f03cd54b034d8b5cb" translate="yes" xml:space="preserve">
          <source>It is sometimes possible to have more than one foreign key to the same model. Take this model for instance:</source>
          <target state="translated">Иногда можно иметь несколько иностранных ключей к одной и той же модели.Возьмем,к примеру,эту модель:</target>
        </trans-unit>
        <trans-unit id="6e64ae5d4a907de96c1bace55146b1c430db4ac7" translate="yes" xml:space="preserve">
          <source>It is strongly advised that you use lowercase table names when you override the table name via &lt;code&gt;db_table&lt;/code&gt;, particularly if you are using the MySQL backend. See the &lt;a href=&quot;../databases#mysql-notes&quot;&gt;MySQL notes&lt;/a&gt; for more details.</source>
          <target state="translated">Настоятельно рекомендуется использовать имена таблиц в нижнем регистре при переопределении имени таблицы с помощью &lt;code&gt;db_table&lt;/code&gt; , особенно если вы используете бэкэнд MySQL. Смотрите &lt;a href=&quot;../databases#mysql-notes&quot;&gt;MySQL заметки&lt;/a&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="61ab72b6279f2c2143e6e86aebc9b5bfd16c3339" translate="yes" xml:space="preserve">
          <source>It is strongly desirable to avoid hard-coding these URLs (a laborious, non-scalable and error-prone strategy). Equally dangerous is devising ad-hoc mechanisms to generate URLs that are parallel to the design described by the URLconf, which can result in the production of URLs that become stale over time.</source>
          <target state="translated">Настоятельно желательно избегать жесткого кодирования этих URL (трудоемкая,не масштабируемая и склонная к ошибкам стратегия).Не менее опасной является разработка специальных механизмов для генерации URL,параллельных дизайну,описанному URLconf,что может привести к генерации URL,которые со временем становятся черствыми.</target>
        </trans-unit>
        <trans-unit id="3496c8823f46f96619f7c7234311315d48654dad" translate="yes" xml:space="preserve">
          <source>It is strongly recommended that you explicitly set all fields that should be edited in the form using the &lt;code&gt;fields&lt;/code&gt; attribute. Failure to do so can easily lead to security problems when a form unexpectedly allows a user to set certain fields, especially when new fields are added to a model. Depending on how the form is rendered, the problem may not even be visible on the web page.</source>
          <target state="translated">Настоятельно рекомендуется явно указать все поля, которые должны редактироваться в форме, используя атрибут &lt;code&gt;fields&lt;/code&gt; . Невыполнение этого требования может легко привести к проблемам с безопасностью, когда форма неожиданно позволяет пользователю устанавливать определенные поля, особенно когда новые поля добавляются в модель. В зависимости от способа отображения формы проблема может даже не отображаться на веб-странице.</target>
        </trans-unit>
        <trans-unit id="9c6c3e0f0685ccb020fe3695c8557e40f27f6ff9" translate="yes" xml:space="preserve">
          <source>It is used to keep track of how many form instances are being displayed. If you are adding new forms via JavaScript, you should increment the count fields in this form as well. On the other hand, if you are using JavaScript to allow deletion of existing objects, then you need to ensure the ones being removed are properly marked for deletion by including &lt;code&gt;form-#-DELETE&lt;/code&gt; in the &lt;code&gt;POST&lt;/code&gt; data. It is expected that all forms are present in the &lt;code&gt;POST&lt;/code&gt; data regardless.</source>
          <target state="translated">Он используется для отслеживания количества отображаемых экземпляров форм. Если вы добавляете новые формы с помощью JavaScript, вам также следует увеличить количество полей в этой форме. С другой стороны, если вы используете JavaScript, чтобы разрешить удаление существующих объектов, то вам необходимо убедиться, что удаляемые объекты правильно помечены для удаления, включив в данные &lt;code&gt;POST&lt;/code&gt; &lt;code&gt;form-#-DELETE&lt;/code&gt; . Ожидается, что все формы присутствуют в данных &lt;code&gt;POST&lt;/code&gt; независимо.</target>
        </trans-unit>
        <trans-unit id="0e81a6c17c3961960826357ce78ba7cbd1d1c2dc" translate="yes" xml:space="preserve">
          <source>It is useful for when you need to use a URL reversal before your project&amp;rsquo;s URLConf is loaded. Some common cases where this function is necessary are:</source>
          <target state="translated">Это полезно, когда вам нужно использовать реверс URL до загрузки URLConf вашего проекта. Некоторые общие случаи, когда эта функция необходима:</target>
        </trans-unit>
        <trans-unit id="7edadcc89ba3b1214228e34855c13c67e577d922" translate="yes" xml:space="preserve">
          <source>It is useful when you know you&amp;rsquo;re only going to need values from a small number of the available fields and you won&amp;rsquo;t need the functionality of a model instance object. It&amp;rsquo;s more efficient to select only the fields you need to use.</source>
          <target state="translated">Это полезно, когда вы знаете, что вам понадобятся значения только из небольшого числа доступных полей, и вам не понадобятся функциональные возможности объекта экземпляра модели. Более эффективно выбирать только те поля, которые вам нужны.</target>
        </trans-unit>
        <trans-unit id="206782144dabd31d72568733a87ec94d13293b68" translate="yes" xml:space="preserve">
          <source>It is worth noting that what your method returns is identical to what you return from a function-based view, namely some form of &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt;. This means that &lt;a href=&quot;../http/shortcuts&quot;&gt;http shortcuts&lt;/a&gt; or &lt;a href=&quot;../../ref/template-response#django.template.response.TemplateResponse&quot;&gt;&lt;code&gt;TemplateResponse&lt;/code&gt;&lt;/a&gt; objects are valid to use inside a class-based view.</source>
          <target state="translated">Стоит отметить, что то, что возвращает ваш метод, идентично тому, что вы возвращаете из функционально-ориентированного представления, а именно в некоторой форме &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; . Это означает, что &lt;a href=&quot;../http/shortcuts&quot;&gt;ярлыки http&lt;/a&gt; или объекты &lt;a href=&quot;../../ref/template-response#django.template.response.TemplateResponse&quot;&gt; &lt;code&gt;TemplateResponse&lt;/code&gt; &lt;/a&gt; допустимы для использования в представлении на основе классов.</target>
        </trans-unit>
        <trans-unit id="743aa8323dc10e1f9ece5cfaea879cb37ebc4b43" translate="yes" xml:space="preserve">
          <source>It isn&amp;rsquo;t enough to just put logging calls into your code. You also need to configure the loggers, handlers, filters, and formatters to ensure you can use the logging output.</source>
          <target state="translated">Недостаточно просто поместить в код вызовы логирования. Вам также необходимо настроить средства ведения журнала, обработчики, фильтры и средства форматирования, чтобы обеспечить возможность использования вывода журнала.</target>
        </trans-unit>
        <trans-unit id="39193d731385b7f76adf3109afc18b9fbf1b9c3d" translate="yes" xml:space="preserve">
          <source>It lets the site developers use the same Django view code for both sites. The view code that displays a given story checks to make sure the requested story is on the current site. It looks something like this:</source>
          <target state="translated">Это позволяет разработчикам сайтов использовать один и тот же код просмотра Django для обоих сайтов.Код просмотра,который отображает заданную историю,проверяет,находится ли запрашиваемая история на текущем сайте.Это выглядит примерно так:</target>
        </trans-unit>
        <trans-unit id="82d7859b62c014f37a7d006ce96504abe35f5a1a" translate="yes" xml:space="preserve">
          <source>It lets the site producers edit all content &amp;ndash; on both sites &amp;ndash; in a single interface (the Django admin).</source>
          <target state="translated">Это позволяет производителям сайтов редактировать весь контент - на обоих сайтах - в едином интерфейсе (администратор Django).</target>
        </trans-unit>
        <trans-unit id="dc346ea890ef3e267f17202b888b385aff5f57a5" translate="yes" xml:space="preserve">
          <source>It may be &lt;code&gt;None&lt;/code&gt; if the application doesn&amp;rsquo;t contain a &lt;code&gt;models&lt;/code&gt; module. Note that the database related signals such as &lt;a href=&quot;signals#django.db.models.signals.pre_migrate&quot;&gt;&lt;code&gt;pre_migrate&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;signals#django.db.models.signals.post_migrate&quot;&gt;&lt;code&gt;post_migrate&lt;/code&gt;&lt;/a&gt; are only emitted for applications that have a &lt;code&gt;models&lt;/code&gt; module.</source>
          <target state="translated">Может быть &lt;code&gt;None&lt;/code&gt; если приложение не содержит модуль &lt;code&gt;models&lt;/code&gt; . Обратите внимание, что сигналы, связанные с базой данных, такие как &lt;a href=&quot;signals#django.db.models.signals.pre_migrate&quot;&gt; &lt;code&gt;pre_migrate&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;signals#django.db.models.signals.post_migrate&quot;&gt; &lt;code&gt;post_migrate&lt;/code&gt; ,&lt;/a&gt; отправляются только для приложений с модулем &lt;code&gt;models&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="891f0948f1f96a7f49d3a00640d02aa7c1ed47f4" translate="yes" xml:space="preserve">
          <source>It may be helpful to test your local changes with a Django project. First you have to create a new virtual environment, &lt;a href=&quot;#intro-contributing-install-local-copy&quot;&gt;install the previously cloned local copy of Django in editable mode&lt;/a&gt;, and create a new Django project outside of your local copy of Django. You will immediately see any changes you make to Django in your new project, which is of great help when writing your first patch.</source>
          <target state="translated">Может быть полезно проверить ваши локальные изменения с помощью проекта Django. Сначала вам нужно создать новую виртуальную среду, &lt;a href=&quot;#intro-contributing-install-local-copy&quot;&gt;установить ранее клонированную локальную копию Django в редактируемом режиме&lt;/a&gt; и создать новый проект Django за пределами вашей локальной копии Django. Вы сразу увидите все изменения, внесенные в Django в своем новом проекте, что очень поможет при написании вашего первого патча.</target>
        </trans-unit>
        <trans-unit id="e290fe2b47b3268f5612298ab687d2e303b5359a" translate="yes" xml:space="preserve">
          <source>It may be used to specify the number of significant digits for the coordinates in the GeoJSON representation &amp;ndash; the default value is 8.</source>
          <target state="translated">Может использоваться для указания количества значащих цифр для координат в представлении GeoJSON - значение по умолчанию равно 8.</target>
        </trans-unit>
        <trans-unit id="68d22c0b42c12d91abf2d70f844470a5d9a67ccd" translate="yes" xml:space="preserve">
          <source>It may be used to specify the number of significant digits for the coordinates in the GeoJSON representation &amp;ndash; the default value is 8. Ignored on Oracle.</source>
          <target state="translated">Его можно использовать для указания количества значащих цифр для координат в представлении GeoJSON - значение по умолчанию - 8. Игнорируется в Oracle.</target>
        </trans-unit>
        <trans-unit id="fac47a07e868f886829abcc8990983fdbddac81a" translate="yes" xml:space="preserve">
          <source>It may be worth checking whether Python software you&amp;rsquo;re using has been provided in a different implementation that can execute the same code faster.</source>
          <target state="translated">Возможно, стоит проверить, предоставлено ли используемое вами программное обеспечение Python в другой реализации, которая может выполнять тот же код быстрее.</target>
        </trans-unit>
        <trans-unit id="74573669ba6fa17e012f8c9c7aeb042a5383ab68" translate="yes" xml:space="preserve">
          <source>It may return a string which will be printed to &lt;code&gt;stdout&lt;/code&gt; (wrapped by &lt;code&gt;BEGIN;&lt;/code&gt; and &lt;code&gt;COMMIT;&lt;/code&gt; if &lt;a href=&quot;#django.core.management.BaseCommand.output_transaction&quot;&gt;&lt;code&gt;output_transaction&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;).</source>
          <target state="translated">Он может вернуть строку, которая будет напечатана на стандартный &lt;code&gt;stdout&lt;/code&gt; (обернутый &lt;code&gt;BEGIN;&lt;/code&gt; и &lt;code&gt;COMMIT;&lt;/code&gt; если &lt;a href=&quot;#django.core.management.BaseCommand.output_transaction&quot;&gt; &lt;code&gt;output_transaction&lt;/code&gt; &lt;/a&gt; равен &lt;code&gt;True&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1c1c7b378d9968c5ceb99a8f842f7e7d0ca6e76c" translate="yes" xml:space="preserve">
          <source>It means the same story doesn&amp;rsquo;t have to be published twice in the database; it only has a single record in the database.</source>
          <target state="translated">Это означает, что одну и ту же историю не нужно публиковать дважды в базе данных; в базе данных есть только одна запись.</target>
        </trans-unit>
        <trans-unit id="6b46e8bda19fd3f445307b5f666c282a39b36528" translate="yes" xml:space="preserve">
          <source>It might look nicer to some people to try and chain the &lt;code&gt;etag&lt;/code&gt; and &lt;code&gt;last_modified&lt;/code&gt; decorators if you want to test both preconditions. However, this would lead to incorrect behavior.</source>
          <target state="translated">Некоторым людям может показаться приятнее попытаться &lt;code&gt;last_modified&lt;/code&gt; декораторы &lt;code&gt;etag&lt;/code&gt; и last_modified, если вы хотите протестировать оба предварительных условия. Однако это приведет к некорректному поведению.</target>
        </trans-unit>
        <trans-unit id="3f8695114b21a9b553118ffa2c5ddcd51f47b6ef" translate="yes" xml:space="preserve">
          <source>It might seem that our tests are growing out of control. At this rate there will soon be more code in our tests than in our application, and the repetition is unaesthetic, compared to the elegant conciseness of the rest of our code.</source>
          <target state="translated">Может показаться,что наши тесты выходят из-под контроля.При таком темпе скоро в наших тестах будет больше кода,чем в нашем приложении,и повторение неэстетично,по сравнению с элегантной лаконичностью остального кода.</target>
        </trans-unit>
        <trans-unit id="6c425b5d6b3879127f569ce1f50dd0ba0ba96b36" translate="yes" xml:space="preserve">
          <source>It must be called explicitly in other cases, for instance in plain Python scripts.</source>
          <target state="translated">Он должен вызываться явно в других случаях,например,в простых скриптах на языке Python.</target>
        </trans-unit>
        <trans-unit id="9e10351df97aa228da6872da0688f6abb34bb0e1" translate="yes" xml:space="preserve">
          <source>It must be unique across a Django project.</source>
          <target state="translated">Он должен быть уникальным в проекте &quot;Джанго&quot;.</target>
        </trans-unit>
        <trans-unit id="f6495b09178141d4640e90c3472993cdce9587c4" translate="yes" xml:space="preserve">
          <source>It must be used via the context manager as this allows it to manage things like transactions and deferred SQL (like creating &lt;code&gt;ForeignKey&lt;/code&gt; constraints).</source>
          <target state="translated">Он должен использоваться через менеджер контекста, поскольку это позволяет ему управлять такими вещами, как транзакции и отложенный SQL (например, создание ограничений &lt;code&gt;ForeignKey&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="56ee041848b140717d20c026aa533d96c5a8fbf4" translate="yes" xml:space="preserve">
          <source>It must end in a slash if set to a non-empty value.</source>
          <target state="translated">Если установлено непустое значение,оно должно заканчиваться косой чертой.</target>
        </trans-unit>
        <trans-unit id="139ea78feed883583a666b45b0b67d233b14e2e3" translate="yes" xml:space="preserve">
          <source>It must return a response object that implements a &lt;code&gt;render&lt;/code&gt; method. It could alter the given &lt;code&gt;response&lt;/code&gt; by changing &lt;code&gt;response.template_name&lt;/code&gt; and &lt;code&gt;response.context_data&lt;/code&gt;, or it could create and return a brand-new &lt;a href=&quot;../../ref/template-response#django.template.response.TemplateResponse&quot;&gt;&lt;code&gt;TemplateResponse&lt;/code&gt;&lt;/a&gt; or equivalent.</source>
          <target state="translated">Он должен возвращать объект ответа, который реализует метод &lt;code&gt;render&lt;/code&gt; . Он может изменить данный &lt;code&gt;response&lt;/code&gt; , изменив &lt;code&gt;response.template_name&lt;/code&gt; и &lt;code&gt;response.context_data&lt;/code&gt; , или он может создать и вернуть совершенно новый &lt;a href=&quot;../../ref/template-response#django.template.response.TemplateResponse&quot;&gt; &lt;code&gt;TemplateResponse&lt;/code&gt; &lt;/a&gt; или его эквивалент.</target>
        </trans-unit>
        <trans-unit id="f4b879dd92a89ae8af03090a22e5c88dd2ef0fa1" translate="yes" xml:space="preserve">
          <source>It only has access to the HTTP methods &lt;a href=&quot;tools#django.test.Client.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;tools#django.test.Client.post&quot;&gt;&lt;code&gt;post()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;tools#django.test.Client.put&quot;&gt;&lt;code&gt;put()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;tools#django.test.Client.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;tools#django.test.Client.head&quot;&gt;&lt;code&gt;head()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;tools#django.test.Client.options&quot;&gt;&lt;code&gt;options()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;tools#django.test.Client.trace&quot;&gt;&lt;code&gt;trace()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Он имеет доступ только к HTTP-методам &lt;a href=&quot;tools#django.test.Client.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;tools#django.test.Client.post&quot;&gt; &lt;code&gt;post()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;tools#django.test.Client.put&quot;&gt; &lt;code&gt;put()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;tools#django.test.Client.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;tools#django.test.Client.head&quot;&gt; &lt;code&gt;head()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;tools#django.test.Client.options&quot;&gt; &lt;code&gt;options()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;tools#django.test.Client.trace&quot;&gt; &lt;code&gt;trace()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2fee265c873ca29a4dfdc7e229dbc520d6e70061" translate="yes" xml:space="preserve">
          <source>It only works if it&amp;rsquo;s applied to the view itself.</source>
          <target state="translated">Это работает, только если оно применяется к самому представлению.</target>
        </trans-unit>
        <trans-unit id="56c6c1c177ac76f7caf56b39a0f02ef3aeec1cbc" translate="yes" xml:space="preserve">
          <source>It passes that template a single context variable, &lt;code&gt;flatpage&lt;/code&gt;, which is the flatpage object. It uses &lt;a href=&quot;../templates/api#django.template.RequestContext&quot;&gt;&lt;code&gt;RequestContext&lt;/code&gt;&lt;/a&gt; in rendering the template.</source>
          <target state="translated">Он передает этот шаблон одной контекстной переменной &lt;code&gt;flatpage&lt;/code&gt; , которая является объектом flatpage. Он использует &lt;a href=&quot;../templates/api#django.template.RequestContext&quot;&gt; &lt;code&gt;RequestContext&lt;/code&gt; &lt;/a&gt; при рендеринге шаблона.</target>
        </trans-unit>
        <trans-unit id="74322b670fac7c6c201108ca20a76c63ad2a8948" translate="yes" xml:space="preserve">
          <source>It provides some custom context:</source>
          <target state="translated">Он обеспечивает некоторый пользовательский контекст:</target>
        </trans-unit>
        <trans-unit id="8c03ba869af0beefc751707d92a55c518bcd4160" translate="yes" xml:space="preserve">
          <source>It requires no arguments at time of construction. However, you can use keywords arguments to specify some default headers. For example, this will send a &lt;code&gt;User-Agent&lt;/code&gt; HTTP header in each request:</source>
          <target state="translated">Это не требует никаких аргументов во время строительства. Тем не менее, вы можете использовать ключевые слова аргументы для указания некоторых заголовков по умолчанию. Например, это будет отправлять HTTP-заголовок &lt;code&gt;User-Agent&lt;/code&gt; в каждом запросе:</target>
        </trans-unit>
        <trans-unit id="8856f825df0ebb6ad43c3696cec72ae86ffd0ad1" translate="yes" xml:space="preserve">
          <source>It returns a dictionary with these contents:</source>
          <target state="translated">Он возвращает словарь с этим содержимым:</target>
        </trans-unit>
        <trans-unit id="10ed0dd1dad3c3e655c1ffc8d30de6f3770a90fa" translate="yes" xml:space="preserve">
          <source>It serves two purposes:</source>
          <target state="translated">Это служит двум целям:</target>
        </trans-unit>
        <trans-unit id="daac6ec735d9a03493f1120ae0b8f7b54d8ae574" translate="yes" xml:space="preserve">
          <source>It should be given an iterator that yields bytestrings as content.</source>
          <target state="translated">Нужно задать итератор,который будет выдавать байт-стринги в качестве содержимого.</target>
        </trans-unit>
        <trans-unit id="35f580f8b6a4cd9c3f9c3bf6693e3fc2866c0c68" translate="yes" xml:space="preserve">
          <source>It should be given an iterator that yields strings as content.</source>
          <target state="translated">Ему должен быть дан итератор,который выдает строки как содержимое.</target>
        </trans-unit>
        <trans-unit id="72d799dc88c16a6235c11695fa71cc19f535a7cb" translate="yes" xml:space="preserve">
          <source>It should be very rare that you&amp;rsquo;ll need to use these parameters. Django will almost always do the right thing and trying to override that will lead to errors that are difficult to track down. This feature is for advanced use only.</source>
          <target state="translated">Это должно быть очень редко, что вам нужно будет использовать эти параметры. Django почти всегда делает правильные вещи, и попытка переопределить это приведет к ошибкам, которые трудно отследить. Эта функция предназначена только для расширенного использования.</target>
        </trans-unit>
        <trans-unit id="32ebf580bfe057469268d0aab1f2ae9a8df7fd29" translate="yes" xml:space="preserve">
          <source>It should come after &lt;code&gt;SessionMiddleware&lt;/code&gt;, because &lt;code&gt;LocaleMiddleware&lt;/code&gt; makes use of session data. And it should come before &lt;code&gt;CommonMiddleware&lt;/code&gt; because &lt;code&gt;CommonMiddleware&lt;/code&gt; needs an activated language in order to resolve the requested URL.</source>
          <target state="translated">Это должно идти после &lt;code&gt;SessionMiddleware&lt;/code&gt; , потому что &lt;code&gt;LocaleMiddleware&lt;/code&gt; использует данные сеанса. И это должно предшествовать &lt;code&gt;CommonMiddleware&lt;/code&gt; , потому что &lt;code&gt;CommonMiddleware&lt;/code&gt; нужен активированный язык для разрешения запрошенного URL.</target>
        </trans-unit>
        <trans-unit id="d3417f5f5c578905b93f41a99bf7d9107d492449" translate="yes" xml:space="preserve">
          <source>It should go near the top of the list if you&amp;rsquo;re going to turn on the SSL redirect as that avoids running through a bunch of other unnecessary middleware.</source>
          <target state="translated">Он должен находиться в верхней части списка, если вы собираетесь включить перенаправление SSL, поскольку это позволяет избежать работы с кучей других ненужных промежуточных программ.</target>
        </trans-unit>
        <trans-unit id="20ae97a13ef76334051b1d6adb3f3e630733c512" translate="yes" xml:space="preserve">
          <source>It should return either &lt;code&gt;None&lt;/code&gt; or an &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; object. If it returns &lt;code&gt;None&lt;/code&gt;, Django will continue processing this request, executing any other &lt;code&gt;process_view()&lt;/code&gt; middleware and, then, the appropriate view. If it returns an &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; object, Django won&amp;rsquo;t bother calling the appropriate view; it&amp;rsquo;ll apply response middleware to that &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; and return the result.</source>
          <target state="translated">Он должен возвращать &lt;code&gt;None&lt;/code&gt; или объект &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; . Если он возвращает &lt;code&gt;None&lt;/code&gt; , Django продолжит обрабатывать этот запрос, выполняя любое другое промежуточное программное обеспечение &lt;code&gt;process_view()&lt;/code&gt; и затем соответствующее представление. Если он возвращает объект &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; , Django не потрудится вызвать соответствующее представление; он применяет промежуточное программное обеспечение ответа к этому &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; и возвращает результат.</target>
        </trans-unit>
        <trans-unit id="56a2c669a765e81e1b0b56ce17865b18f7711335" translate="yes" xml:space="preserve">
          <source>It should return the value of the appropriate attribute from &lt;code&gt;model_instance&lt;/code&gt; for this field. The attribute name is in &lt;code&gt;self.attname&lt;/code&gt; (this is set up by &lt;a href=&quot;#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Он должен вернуть значение соответствующего атрибута из &lt;code&gt;model_instance&lt;/code&gt; для этого поля. Имя атрибута находится в &lt;code&gt;self.attname&lt;/code&gt; (это устанавливается &lt;a href=&quot;#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1bcce886f189622a63ac65f122c49d0df7f36412" translate="yes" xml:space="preserve">
          <source>It specifies the underlying form field for the array. This is not used to render any HTML, but it is used to process the submitted data and validate it. For example:</source>
          <target state="translated">Оно задает базовое поле формы для массива.Оно не используется для рендеринга HTML,но используется для обработки представленных данных и их проверки.Например:</target>
        </trans-unit>
        <trans-unit id="f05cce6c98f6e4ace18c44a25c87ec03d8301899" translate="yes" xml:space="preserve">
          <source>It uses &lt;a href=&quot;../validators#django.core.validators.MinValueValidator&quot;&gt;&lt;code&gt;MinValueValidator&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../validators#django.core.validators.MaxValueValidator&quot;&gt;&lt;code&gt;MaxValueValidator&lt;/code&gt;&lt;/a&gt; to validate the input based on the values that the default database supports.</source>
          <target state="translated">Он использует &lt;a href=&quot;../validators#django.core.validators.MinValueValidator&quot;&gt; &lt;code&gt;MinValueValidator&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../validators#django.core.validators.MaxValueValidator&quot;&gt; &lt;code&gt;MaxValueValidator&lt;/code&gt; &lt;/a&gt; для проверки ввода на основе значений, которые поддерживает база данных по умолчанию.</target>
        </trans-unit>
        <trans-unit id="2e5b12b84e0f758abb110dc6f71e3c4bf5bf680f" translate="yes" xml:space="preserve">
          <source>It uses &lt;a href=&quot;../validators#django.core.validators.validate_slug&quot;&gt;&lt;code&gt;validate_slug&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../validators#django.core.validators.validate_unicode_slug&quot;&gt;&lt;code&gt;validate_unicode_slug&lt;/code&gt;&lt;/a&gt; for validation.</source>
          <target state="translated">Он использует &lt;a href=&quot;../validators#django.core.validators.validate_slug&quot;&gt; &lt;code&gt;validate_slug&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../validators#django.core.validators.validate_unicode_slug&quot;&gt; &lt;code&gt;validate_unicode_slug&lt;/code&gt; &lt;/a&gt; для проверки.</target>
        </trans-unit>
        <trans-unit id="69d6064034be012d34362fa98f55318c001776ff" translate="yes" xml:space="preserve">
          <source>It uses these hooks to localize Web apps for particular users according to their preferences.</source>
          <target state="translated">Он использует эти крючки для локализации веб-приложений для определенных пользователей в соответствии с их предпочтениями.</target>
        </trans-unit>
        <trans-unit id="2c5d75d3ebd51eebd293ed8c3115df3b47816a00" translate="yes" xml:space="preserve">
          <source>It will &lt;em&gt;not&lt;/em&gt; perform any permission checks, so it will be accessible to the general public.</source>
          <target state="translated">Он &lt;em&gt;не&lt;/em&gt; будет выполнять никаких проверок разрешений, поэтому он будет доступен для широкой публики.</target>
        </trans-unit>
        <trans-unit id="821786a5e1da87ecbbea2644ca4a4f5bcd23aca5" translate="yes" xml:space="preserve">
          <source>It will &lt;em&gt;not&lt;/em&gt; provide any header details to prevent caching. This means if the page retrieves data from the database, and caching middleware is active, the page could show outdated information.</source>
          <target state="translated">Он &lt;em&gt;не&lt;/em&gt; предоставит никаких деталей заголовка для предотвращения кэширования. Это означает, что если страница извлекает данные из базы данных и промежуточное программное обеспечение кэширования активно, на странице может отображаться устаревшая информация.</target>
        </trans-unit>
        <trans-unit id="644c8f988574018f7fada47bc384adca96d5faf0" translate="yes" xml:space="preserve">
          <source>It will NOT compress content if any of the following are true:</source>
          <target state="translated">Он НЕ будет сжимать содержимое,если одно из следующих утверждений верно:</target>
        </trans-unit>
        <trans-unit id="2c053e1a98707a94d9c800f51a24bc57417e353c" translate="yes" xml:space="preserve">
          <source>It works backwards, too. To refer to a &amp;ldquo;reverse&amp;rdquo; relationship, use the lowercase name of the model.</source>
          <target state="translated">Это работает и в обратном направлении. Чтобы сослаться на &amp;laquo;обратную&amp;raquo; связь, используйте строчное название модели.</target>
        </trans-unit>
        <trans-unit id="1ea2c97c7ae5d91b4cfe32fb4bf2aa453755b44e" translate="yes" xml:space="preserve">
          <source>It works backwards, too. Whilst it &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_query_name&quot;&gt;&lt;code&gt;can be customized&lt;/code&gt;&lt;/a&gt;, by default you refer to a &amp;ldquo;reverse&amp;rdquo; relationship in a lookup using the lowercase name of the model.</source>
          <target state="translated">Он работает и в обратном направлении. Хотя это &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_query_name&quot;&gt; &lt;code&gt;can be customized&lt;/code&gt; &lt;/a&gt; , по умолчанию вы ссылаетесь на &amp;laquo;обратную&amp;raquo; связь при поиске, используя имя модели в нижнем регистре.</target>
        </trans-unit>
        <trans-unit id="ba3052615bd21fcc198bfe01f9395aa24f32d1ee" translate="yes" xml:space="preserve">
          <source>It works like this. Before calling a view function, Django starts a transaction. If the response is produced without problems, Django commits the transaction. If the view produces an exception, Django rolls back the transaction.</source>
          <target state="translated">Это так работает.Перед вызовом функции просмотра Джанго начинает транзакцию.Если ответ получен без проблем,то Django совершает транзакцию.Если при просмотре создается исключение,Django откатывает транзакцию.</target>
        </trans-unit>
        <trans-unit id="314dada6f6b4efbe8278574634203c228e3dfd1b" translate="yes" xml:space="preserve">
          <source>It works like this: There are three slots for related Choices &amp;ndash; as specified by &lt;code&gt;extra&lt;/code&gt; &amp;ndash; and each time you come back to the &amp;ldquo;Change&amp;rdquo; page for an already-created object, you get another three extra slots.</source>
          <target state="translated">Это работает так: есть три слота для связанных вариантов - как указано &lt;code&gt;extra&lt;/code&gt; - и каждый раз, когда вы возвращаетесь на страницу &amp;laquo;Изменить&amp;raquo; для уже созданного объекта, вы получаете еще три дополнительных слота.</target>
        </trans-unit>
        <trans-unit id="fd652d964b8e8cbba1b0b82fa6fa4866bc842b4e" translate="yes" xml:space="preserve">
          <source>It works much like Django&amp;rsquo;s &lt;a href=&quot;syndication&quot;&gt;syndication framework&lt;/a&gt;. To create a sitemap, write a &lt;a href=&quot;#django.contrib.sitemaps.Sitemap&quot;&gt;&lt;code&gt;Sitemap&lt;/code&gt;&lt;/a&gt; class and point to it in your &lt;a href=&quot;../../topics/http/urls&quot;&gt;URLconf&lt;/a&gt;.</source>
          <target state="translated">Это работает во многом как &lt;a href=&quot;syndication&quot;&gt;структура синдикации&lt;/a&gt; Django . Чтобы создать карту сайта, напишите класс &lt;a href=&quot;#django.contrib.sitemaps.Sitemap&quot;&gt; &lt;code&gt;Sitemap&lt;/code&gt; &lt;/a&gt; и укажите его в своем &lt;a href=&quot;../../topics/http/urls&quot;&gt;URLconf&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="517efc2501dbd4f205ce9ac4a40724f67d48e4ba" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;d be inefficient and redundant to implement this sign up processing code twice, so the sites use the same code behind the scenes. But the &amp;ldquo;thank you for signing up&amp;rdquo; notice needs to be different for each site. By using &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; objects, we can abstract the &amp;ldquo;thank you&amp;rdquo; notice to use the values of the current site&amp;rsquo;s &lt;a href=&quot;#django.contrib.sites.models.Site.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.contrib.sites.models.Site.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Было бы неэффективно и избыточно реализовывать этот код обработки регистрации дважды, поэтому сайты используют один и тот же код за кулисами. Но уведомление &amp;laquo;спасибо за регистрацию&amp;raquo; должно быть разным для каждого сайта. Используя объекты &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt; , мы можем абстрагировать уведомление &amp;laquo;спасибо&amp;raquo;, чтобы использовать значения &lt;a href=&quot;#django.contrib.sites.models.Site.name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#django.contrib.sites.models.Site.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt; текущего сайта .</target>
        </trans-unit>
        <trans-unit id="5b07ba6619a8a9814858736f9737871f7ec3ee41" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;ll consist of two parts:</source>
          <target state="translated">Он будет состоять из двух частей:</target>
        </trans-unit>
        <trans-unit id="a9141677e2734b4ebcd76a1646f3a801a2b773b8" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a good idea to exploit the &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; objects as much as possible, to remove unneeded complexity and redundancy.</source>
          <target state="translated">Хорошей идеей является максимально возможное использование объектов &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt; для устранения ненужной сложности и избыточности.</target>
        </trans-unit>
        <trans-unit id="c820a5c6768751a8444aa072c6c6fa905ba2b39c" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a good idea to keep all your virtual environments in one place, for example in &lt;code&gt;.virtualenvs/&lt;/code&gt; in your home directory.</source>
          <target state="translated">Рекомендуется хранить все ваши виртуальные среды в одном месте, например, в &lt;code&gt;.virtualenvs/&lt;/code&gt; в вашем домашнем каталоге.</target>
        </trans-unit>
        <trans-unit id="e597b7a72c214db394d011a7d980017dfb96bbf0" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a good idea to run your tests with Python warnings enabled: &lt;code&gt;python -Wa manage.py test&lt;/code&gt;. The &lt;code&gt;-Wa&lt;/code&gt; flag tells Python to display deprecation warnings. Django, like many other Python libraries, uses these warnings to flag when features are going away. It also might flag areas in your code that aren&amp;rsquo;t strictly wrong but could benefit from a better implementation.</source>
          <target state="translated">Рекомендуется запускать тесты с включенными предупреждениями Python: &lt;code&gt;python -Wa manage.py test&lt;/code&gt; . &lt;code&gt;-Wa&lt;/code&gt; флаг указывает Python для отображения устаревания предупреждения. Django, как и многие другие библиотеки Python, использует эти предупреждения для отметки, когда функции исчезают. Это также может пометить области в вашем коде, которые не являются строго неправильными, но могут выиграть от лучшей реализации.</target>
        </trans-unit>
        <trans-unit id="5205bb3db42b1f9e1a07a61d0d189eb75f732f1a" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a lot of work to design, build, test and maintain a web application. Many Python and Django projects share common problems. Wouldn&amp;rsquo;t it be great if we could save some of this repeated work?</source>
          <target state="translated">Это большая работа по проектированию, созданию, тестированию и поддержке веб-приложения. Многие проекты Python и Django имеют общие проблемы. Разве не было бы здорово, если бы мы могли спасти часть этой повторяющейся работы?</target>
        </trans-unit>
        <trans-unit id="98892641f79e54717e27729e6b3e830b31327667" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a mistake to think of tests merely as a negative aspect of development.</source>
          <target state="translated">Ошибочно думать о тестах просто как о негативном аспекте развития.</target>
        </trans-unit>
        <trans-unit id="f3f1771f69342fc15b09588915f707913ee328d7" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a relatively common task to check whether a user has a particular permission. For that reason, Django provides a shortcut for that case: the &lt;a href=&quot;#django.contrib.auth.decorators.permission_required&quot;&gt;&lt;code&gt;permission_required()&lt;/code&gt;&lt;/a&gt; decorator.:</source>
          <target state="translated">Это довольно распространенная задача - проверить, имеет ли пользователь конкретное разрешение. По этой причине, Django предоставляет ярлык для этого случая: &lt;a href=&quot;#django.contrib.auth.decorators.permission_required&quot;&gt; &lt;code&gt;permission_required()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="d95c3e2c34569b1779186f9d0e9e6929e2596b80" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a sufficiently significant and powerful technique that Django includes a comprehensive caching framework, as well as other smaller pieces of caching functionality.</source>
          <target state="translated">Это достаточно значительный и мощный метод, который включает в себя Django всеобъемлющую инфраструктуру кеширования, а также другие мелкие функции кеширования.</target>
        </trans-unit>
        <trans-unit id="5d10c8c6b8bd3ff3bac051910da1ebe622e9680d" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a very common idiom to load a template, fill a context and return an &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; object with the result of the rendered template. Django provides a shortcut. Here&amp;rsquo;s the full &lt;code&gt;index()&lt;/code&gt; view, rewritten:</source>
          <target state="translated">Это очень распространенная идиома для загрузки шаблона, заполнения контекста и возврата объекта &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; с результатом визуализированного шаблона. Джанго предоставляет ярлык. Вот полное представление &lt;code&gt;index()&lt;/code&gt; , переписанное:</target>
        </trans-unit>
        <trans-unit id="be432822d72363028c0959e5520964f3225f08e1" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a very common idiom to use &lt;a href=&quot;../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; and raise &lt;a href=&quot;../topics/http/views#django.http.Http404&quot;&gt;&lt;code&gt;Http404&lt;/code&gt;&lt;/a&gt; if the object doesn&amp;rsquo;t exist. Django provides a shortcut. Here&amp;rsquo;s the &lt;code&gt;detail()&lt;/code&gt; view, rewritten:</source>
          <target state="translated">Это очень распространенная идиома: использовать &lt;a href=&quot;../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; и вызывать &lt;a href=&quot;../topics/http/views#django.http.Http404&quot;&gt; &lt;code&gt;Http404&lt;/code&gt; ,&lt;/a&gt; если объект не существует. Джанго предоставляет ярлык. Вот представление &lt;code&gt;detail()&lt;/code&gt; , переписанное:</target>
        </trans-unit>
        <trans-unit id="471a415cfc5575d8283f9728454d7c7ddf752a92" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s actually sent twice: when the new value is applied (&amp;ldquo;setup&amp;rdquo;) and when the original value is restored (&amp;ldquo;teardown&amp;rdquo;). Use the &lt;code&gt;enter&lt;/code&gt; argument to distinguish between the two.</source>
          <target state="translated">Фактически оно отправляется дважды: когда применяется новое значение (&amp;laquo;настройка&amp;raquo;) и когда восстанавливается исходное значение (&amp;laquo;разрыв&amp;raquo;). Используйте аргумент &lt;code&gt;enter&lt;/code&gt; чтобы различать их.</target>
        </trans-unit>
        <trans-unit id="1a89891994672cfaa504284d854c34b4a0ef5768" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s also important that you pass through the arguments that can be passed to the model method &amp;ndash; that&amp;rsquo;s what the &lt;code&gt;*args, **kwargs&lt;/code&gt; bit does. Django will, from time to time, extend the capabilities of built-in model methods, adding new arguments. If you use &lt;code&gt;*args,
**kwargs&lt;/code&gt; in your method definitions, you are guaranteed that your code will automatically support those arguments when they are added.</source>
          <target state="translated">Также важно, чтобы вы передавали аргументы, которые можно передать методу модели - это то, что &lt;code&gt;*args, **kwargs&lt;/code&gt; бит * args, ** kwargs . Django будет время от времени расширять возможности встроенных методов модели, добавляя новые аргументы. Если вы используете &lt;code&gt;*args, **kwargs&lt;/code&gt; в своих определениях методов, вы гарантированно, что ваш код будет автоматически поддерживать эти аргументы при их добавлении.</target>
        </trans-unit>
        <trans-unit id="3137205b835e3db1f5f498b9390d3b3493a1a6a3" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s also possible to execute parts of the migration inside a transaction using &lt;a href=&quot;db/transactions#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; or by passing &lt;code&gt;atomic=True&lt;/code&gt; to &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt;&lt;code&gt;RunPython&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;../howto/writing-migrations#non-atomic-migrations&quot;&gt;Non-atomic migrations&lt;/a&gt; for more details.</source>
          <target state="translated">Также возможно выполнить части миграции внутри транзакции, используя &lt;a href=&quot;db/transactions#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt; или передав &lt;code&gt;atomic=True&lt;/code&gt; в &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt; &lt;code&gt;RunPython&lt;/code&gt; &lt;/a&gt; . Подробнее см. &lt;a href=&quot;../howto/writing-migrations#non-atomic-migrations&quot;&gt;Неатомарные миграции&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9efc3514c2fdb71e437dd068004f9bbbd27d0bd7" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s applied globally to all views in your project.</source>
          <target state="translated">Он применяется глобально ко всем представлениям в вашем проекте.</target>
        </trans-unit>
        <trans-unit id="6c8809cf55ca136f973721940052ffe5caef0ffc" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s common to have to call a class instance&amp;rsquo;s method more than once. If that function is expensive, then doing so can be wasteful.</source>
          <target state="translated">Обычно приходится вызывать метод экземпляра класса более одного раза. Если эта функция дорогая, то это может быть расточительным.</target>
        </trans-unit>
        <trans-unit id="6a8a602e8f5da83ffdb845b5072b20d6cf4d49e9" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s difficult to intuit how the ORM will translate complex querysets into SQL queries so when in doubt, inspect the SQL with &lt;code&gt;str(queryset.query)&lt;/code&gt; and write plenty of tests.</source>
          <target state="translated">Сложно представить, как ORM преобразует сложные наборы запросов в запросы SQL, поэтому, если есть сомнения, проверьте SQL с помощью &lt;code&gt;str(queryset.query)&lt;/code&gt; и напишите множество тестов.</target>
        </trans-unit>
        <trans-unit id="d9c33de3147bcaef08378b87591ea35eac5018b5" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s fairly rare for a new release of well-maintained software to be less efficient, but the maintainers can&amp;rsquo;t anticipate every possible use-case - so while being aware that newer versions are likely to perform better, don&amp;rsquo;t assume that they always will.</source>
          <target state="translated">Редко бывает, что новый выпуск исправного программного обеспечения менее эффективен, но сопровождающие не могут предвидеть все возможные варианты использования - поэтому, зная, что более новые версии могут работать лучше, не думайте, что они всегда воля.</target>
        </trans-unit>
        <trans-unit id="053b90c54269318916dff65e1e856de6e82c3da7" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s fragile to hard-code the site IDs like that, in case they change. The cleaner way of accomplishing the same thing is to check the current site&amp;rsquo;s domain:</source>
          <target state="translated">Жестко запрограммировать такие идентификаторы сайтов на случай их изменения хрупко. Более чистый способ сделать то же самое - проверить домен текущего сайта:</target>
        </trans-unit>
        <trans-unit id="5824351282e0b44b78ffe29119839b3c3bb3ecc7" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s generally a good idea to have the contenttypes framework installed; several of Django&amp;rsquo;s other bundled applications require it:</source>
          <target state="translated">Как правило, хорошая идея - установить каркас содержимого типов; для некоторых других приложений Django это необходимо:</target>
        </trans-unit>
        <trans-unit id="014f23d80312be5d973dc29048745c41bfbff6a7" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s given one or more model classes to register with the &lt;code&gt;ModelAdmin&lt;/code&gt;. If you&amp;rsquo;re using a custom &lt;a href=&quot;#django.contrib.admin.AdminSite&quot;&gt;&lt;code&gt;AdminSite&lt;/code&gt;&lt;/a&gt;, pass it using the &lt;code&gt;site&lt;/code&gt; keyword argument:</source>
          <target state="translated">Ему дается один или несколько классов моделей для регистрации в &lt;code&gt;ModelAdmin&lt;/code&gt; . Если вы используете пользовательский &lt;a href=&quot;#django.contrib.admin.AdminSite&quot;&gt; &lt;code&gt;AdminSite&lt;/code&gt; &lt;/a&gt; , передайте его с помощью аргумента ключевого слова &lt;code&gt;site&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="504b56f9c369f081939669c1db1001528d39f792" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s good practice to use &lt;a href=&quot;#django.contrib.sessions.backends.base.SessionBase.delete_test_cookie&quot;&gt;&lt;code&gt;delete_test_cookie()&lt;/code&gt;&lt;/a&gt; to clean up after yourself. Do this after you&amp;rsquo;ve verified that the test cookie worked.</source>
          <target state="translated">Хорошей практикой является использование &lt;a href=&quot;#django.contrib.sessions.backends.base.SessionBase.delete_test_cookie&quot;&gt; &lt;code&gt;delete_test_cookie()&lt;/code&gt; &lt;/a&gt; для очистки после себя. Сделайте это после того, как убедитесь, что тестовый файл cookie работает.</target>
        </trans-unit>
        <trans-unit id="4304605a4bd63de40eceaad4bc60b970ac46f9b8" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s good practice to use &lt;code&gt;get_absolute_url()&lt;/code&gt; in templates, instead of hard-coding your objects&amp;rsquo; URLs. For example, this template code is bad:</source>
          <target state="translated">Хорошей практикой является использование &lt;code&gt;get_absolute_url()&lt;/code&gt; в шаблонах вместо жесткого кодирования URL-адресов ваших объектов. Например, этот код шаблона плох:</target>
        </trans-unit>
        <trans-unit id="edd2a229206e4806f892693c442f1827099d489d" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s important to add &lt;a href=&quot;../ref/models/instances#django.db.models.Model.__str__&quot;&gt;&lt;code&gt;__str__()&lt;/code&gt;&lt;/a&gt; methods to your models, not only for your own convenience when dealing with the interactive prompt, but also because objects&amp;rsquo; representations are used throughout Django&amp;rsquo;s automatically-generated admin.</source>
          <target state="translated">Важно добавлять &lt;a href=&quot;../ref/models/instances#django.db.models.Model.__str__&quot;&gt; &lt;code&gt;__str__()&lt;/code&gt; &lt;/a&gt; в ваши модели, не только для вашего удобства при работе с интерактивной подсказкой, но также потому, что представления объектов используются в автоматически сгенерированном администраторе Django.</target>
        </trans-unit>
        <trans-unit id="fc15190392d26afa387fe6602061f27607a7f9fc" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s important to have a clear idea what you mean by &amp;lsquo;performance&amp;rsquo;. There is not just one metric of it.</source>
          <target state="translated">Важно иметь четкое представление о том, что вы подразумеваете под &amp;laquo;производительностью&amp;raquo;. Существует не одна метрика этого.</target>
        </trans-unit>
        <trans-unit id="0be98169dae8591e0cc8439594e2dacf35c8c196" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s important to realize that a Django field class is not what is stored in your model attributes. The model attributes contain normal Python objects. The field classes you define in a model are actually stored in the &lt;code&gt;Meta&lt;/code&gt; class when the model class is created (the precise details of how this is done are unimportant here). This is because the field classes aren&amp;rsquo;t necessary when you&amp;rsquo;re just creating and modifying attributes. Instead, they provide the machinery for converting between the attribute value and what is stored in the database or sent to the &lt;a href=&quot;../topics/serialization&quot;&gt;serializer&lt;/a&gt;.</source>
          <target state="translated">Важно понимать, что класс поля Django - это не то, что хранится в атрибутах вашей модели. Атрибуты модели содержат обычные объекты Python. Классы полей, которые вы определяете в модели, фактически сохраняются в классе &lt;code&gt;Meta&lt;/code&gt; при создании класса модели (точные детали того, как это делается, здесь не важны). Это потому, что классы полей не нужны, когда вы просто создаете и изменяете атрибуты. Вместо этого они предоставляют механизм для преобразования между значением атрибута и тем, что хранится в базе данных или отправляется в &lt;a href=&quot;../topics/serialization&quot;&gt;сериализатор&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e5df77fc8d383ebc768de094e8b3eec9652afccd" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s important to remember to call the superclass method &amp;ndash; that&amp;rsquo;s that &lt;code&gt;super().save(*args, **kwargs)&lt;/code&gt; business &amp;ndash; to ensure that the object still gets saved into the database. If you forget to call the superclass method, the default behavior won&amp;rsquo;t happen and the database won&amp;rsquo;t get touched.</source>
          <target state="translated">Важно не забывать вызывать метод суперкласса - это бизнес &lt;code&gt;super().save(*args, **kwargs)&lt;/code&gt; - чтобы гарантировать, что объект все еще сохраняется в базе данных. Если вы забудете вызвать метод суперкласса, поведение по умолчанию не произойдет, и база данных не будет затронута.</target>
        </trans-unit>
        <trans-unit id="fbd5cb2de1d3cc3f6653c84e9c8b8ea45de47b43" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s impossible to use &lt;a href=&quot;#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; when autocommit is turned off.</source>
          <target state="translated">Невозможно использовать &lt;a href=&quot;#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt; когда автокоммит выключен.</target>
        </trans-unit>
        <trans-unit id="cb38c679f6a6c48fced09d83d829bb8f2faa2c58" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s meaningless to validate a form with no data, but, for the record, here&amp;rsquo;s what happens with unbound forms:</source>
          <target state="translated">Бессмысленно проверять форму без данных, но, к сведению, вот что происходит с несвязанными формами:</target>
        </trans-unit>
        <trans-unit id="8b0cafee32a148eda36617cd8291bb6e3405dff5" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s no good just guessing or assuming where the inefficiencies lie in your code.</source>
          <target state="translated">Бесполезно просто гадать или предполагать, в чем заключается неэффективность вашего кода.</target>
        </trans-unit>
        <trans-unit id="2e0fe6720c1815fea6705c7a7c635a5eef6a5b59" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s not possible to mix a template variable inside a string within &lt;code&gt;{% trans
%}&lt;/code&gt;. If your translations require strings with variables (placeholders), use &lt;a href=&quot;#std:templatetag-blocktrans&quot;&gt;&lt;code&gt;{% blocktrans %}&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Невозможно смешать переменную шаблона внутри строки внутри &lt;code&gt;{% trans %}&lt;/code&gt; . Если для ваших переводов требуются строки с переменными (заполнителями), используйте вместо этого &lt;a href=&quot;#std:templatetag-blocktrans&quot;&gt; &lt;code&gt;{% blocktrans %}&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f35f42245a120116256a64b95735e6e688d1027e" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s not possible to mix a template variable inside a string within &lt;code&gt;{% translate %}&lt;/code&gt;. If your translations require strings with variables (placeholders), use &lt;a href=&quot;#std:templatetag-blocktranslate&quot;&gt;&lt;code&gt;{% blocktranslate %}&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Невозможно смешать переменную шаблона внутри строки в &lt;code&gt;{% translate %}&lt;/code&gt; . Если для ваших переводов требуются строки с переменными (заполнители), используйте вместо них &lt;a href=&quot;#std:templatetag-blocktranslate&quot;&gt; &lt;code&gt;{% blocktranslate %}&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ffb12f4f7c51d654a37e1780fde3e22064747cba" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s not used by the development server (&lt;code&gt;runserver&lt;/code&gt;), but can be used by any ASGI server either in development or in production.</source>
          <target state="translated">Он не используется сервером разработки ( &lt;code&gt;runserver&lt;/code&gt; ), но может использоваться любым сервером ASGI как в разработке, так и в производстве.</target>
        </trans-unit>
        <trans-unit id="8c8f89a8b9a2f1613d09f12b03fc68f4a7741e89" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s often possible to avoid explicitly having to handle forward references by taking care with the ordering of objects within a fixture.</source>
          <target state="translated">Часто можно избежать явного обращения с прямыми ссылками, следя за упорядочением объектов внутри прибора.</target>
        </trans-unit>
        <trans-unit id="981625124dca80a0bf6ae3cbc3c96502e0fff8eb" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s only appropriate for HTTP &lt;code&gt;GET&lt;/code&gt; requests.</source>
          <target state="translated">Это подходит только для запросов HTTP &lt;code&gt;GET&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="656acfbc1ff6a2acf248e9bf74b5e097a84323ae" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s optional, but recommended, to include detailed documentation with your app. Create an empty directory &lt;code&gt;django-polls/docs&lt;/code&gt; for future documentation. Add an additional line to &lt;code&gt;django-polls/MANIFEST.in&lt;/code&gt;:</source>
          <target state="translated">Необязательно, но рекомендуется включать подробную документацию в ваше приложение. Создайте пустой каталог &lt;code&gt;django-polls/docs&lt;/code&gt; для будущей документации. Добавьте дополнительную строку в &lt;code&gt;django-polls/MANIFEST.in&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="dd909e3a15dcb8cd50eed3fdd5287a154cb90918" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s perfectly OK to relate a model to one from another app. To do this, import the related model at the top of the file where your model is defined. Then, refer to the other model class wherever needed. For example:</source>
          <target state="translated">Это нормально, чтобы связать модель с одним из другого приложения. Для этого импортируйте связанную модель вверху файла, где определена ваша модель. Затем обратитесь к другому классу модели, где это необходимо. Например:</target>
        </trans-unit>
        <trans-unit id="12343c40f18ca7655192d4ea8976d4b128d77726" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible &amp;ndash; and preferable &amp;ndash; to organize templates in subdirectories inside each directory containing templates. The convention is to make a subdirectory for each Django app, with subdirectories within those subdirectories as needed.</source>
          <target state="translated">Возможно - и предпочтительно - организовать шаблоны в подкаталогах внутри каждого каталога, содержащего шаблоны. Соглашение заключается в создании подкаталога для каждого приложения Django, с подкаталогами в этих подкаталогах по мере необходимости.</target>
        </trans-unit>
        <trans-unit id="25cfa1772c80752eed913282aa2ef519cdb812ab" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible that a request can come in via POST with an empty &lt;code&gt;POST&lt;/code&gt; dictionary &amp;ndash; if, say, a form is requested via the POST HTTP method but does not include form data. Therefore, you shouldn&amp;rsquo;t use &lt;code&gt;if request.POST&lt;/code&gt; to check for use of the POST method; instead, use &lt;code&gt;if request.method ==
&quot;POST&quot;&lt;/code&gt; (see &lt;a href=&quot;#django.http.HttpRequest.method&quot;&gt;&lt;code&gt;HttpRequest.method&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Возможно, что запрос может прийти через POST с пустым словарем &lt;code&gt;POST&lt;/code&gt; - если, скажем, форма запрашивается с помощью метода POST HTTP, но не включает данные формы. Следовательно, вы не должны использовать &lt;code&gt;if request.POST&lt;/code&gt; для проверки использования метода POST; вместо этого используйте &lt;code&gt;if request.method == &quot;POST&quot;&lt;/code&gt; (см. &lt;a href=&quot;#django.http.HttpRequest.method&quot;&gt; &lt;code&gt;HttpRequest.method&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="564f1c720851eec7a9b48849d7c849a75a7a8146" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to customize that character, or omit it entirely, using the &lt;code&gt;label_suffix&lt;/code&gt; parameter:</source>
          <target state="translated">Можно настроить этот символ или полностью его опустить, используя параметр &lt;code&gt;label_suffix&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5f802f1d2017858d35732da049be5ea421bca251" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to declaratively remove a &lt;code&gt;Field&lt;/code&gt; inherited from a parent class by setting the name of the field to &lt;code&gt;None&lt;/code&gt; on the subclass. For example:</source>
          <target state="translated">Можно декларативно удалить &lt;code&gt;Field&lt;/code&gt; унаследованное от родительского класса, установив для имени поля значение &lt;code&gt;None&lt;/code&gt; в подклассе. Например:</target>
        </trans-unit>
        <trans-unit id="f00faa120a59687d5cfacd633db612d462d80f79" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to declaratively remove a &lt;code&gt;Field&lt;/code&gt; inherited from a parent class by setting the name to be &lt;code&gt;None&lt;/code&gt; on the subclass.</source>
          <target state="translated">Можно декларативно удалить &lt;code&gt;Field&lt;/code&gt; унаследованное от родительского класса, установив имя &lt;code&gt;None&lt;/code&gt; в подклассе.</target>
        </trans-unit>
        <trans-unit id="c5ebde0ae552dfd952abe1bc7920a0a46d1d725d" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to have a URL pattern which captures named keyword arguments, and also passes arguments with the same names in its dictionary of extra arguments. When this happens, the arguments in the dictionary will be used instead of the arguments captured in the URL.</source>
          <target state="translated">Можно иметь шаблон URL, который захватывает аргументы именованных ключевых слов, а также передает аргументы с такими же именами в свой словарь дополнительных аргументов. Когда это происходит, аргументы в словаре будут использоваться вместо аргументов, захваченных в URL.</target>
        </trans-unit>
        <trans-unit id="154d81e5f92ae5b0cc201686b8eb92c861bf4cf0" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to inherit from both &lt;code&gt;Form&lt;/code&gt; and &lt;code&gt;ModelForm&lt;/code&gt; simultaneously, however, you must ensure that &lt;code&gt;ModelForm&lt;/code&gt; appears first in the MRO. This is because these classes rely on different metaclasses and a class can only have one metaclass.</source>
          <target state="translated">Можно наследовать как от &lt;code&gt;Form&lt;/code&gt; ,так и от &lt;code&gt;ModelForm&lt;/code&gt; одновременно, однако вы должны убедиться, что &lt;code&gt;ModelForm&lt;/code&gt; появляется первым в MRO. Это связано с тем, что эти классы зависят от разных метаклассов, и у класса может быть только один метакласс.</target>
        </trans-unit>
        <trans-unit id="2d6080acb5e2b0d1d1c50068f3b2d31e59ea47c2" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to load templates from additional sources using custom template loaders. Custom &lt;code&gt;Loader&lt;/code&gt; classes should inherit from &lt;code&gt;django.template.loaders.base.Loader&lt;/code&gt; and define the &lt;code&gt;get_contents()&lt;/code&gt; and &lt;code&gt;get_template_sources()&lt;/code&gt; methods.</source>
          <target state="translated">Можно загружать шаблоны из дополнительных источников с помощью пользовательских загрузчиков шаблонов. Пользовательские классы &lt;code&gt;Loader&lt;/code&gt; должны наследоваться от &lt;code&gt;django.template.loaders.base.Loader&lt;/code&gt; и определять &lt;code&gt;get_contents()&lt;/code&gt; и &lt;code&gt;get_template_sources()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="69453e3cfadab898688cde4346b7c3203c55d089" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to store the tag results in a template variable rather than directly outputting it. This is done by using the &lt;code&gt;as&lt;/code&gt; argument followed by the variable name. Doing so enables you to output the content yourself where you see fit:</source>
          <target state="translated">Можно сохранить результаты тега в переменной шаблона, а не выводить их напрямую. Это делается с помощью аргумента &lt;code&gt;as&lt;/code&gt; , за которым следует имя переменной. Это позволяет вам выводить контент самостоятельно, где вы считаете нужным:</target>
        </trans-unit>
        <trans-unit id="23d178eee9f824ef0def0504a80716cd71afb5a7" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to subclass multiple forms, treating forms as mixins. In this example, &lt;code&gt;BeatleForm&lt;/code&gt; subclasses both &lt;code&gt;PersonForm&lt;/code&gt; and &lt;code&gt;InstrumentForm&lt;/code&gt; (in that order), and its field list includes the fields from the parent classes:</source>
          <target state="translated">Можно подразделить несколько форм, рассматривая формы как миксины. В этом примере, &lt;code&gt;BeatleForm&lt;/code&gt; подклассы как &lt;code&gt;PersonForm&lt;/code&gt; и &lt;code&gt;InstrumentForm&lt;/code&gt; (в таком порядке), и его список полей включает поля из родительских классов:</target>
        </trans-unit>
        <trans-unit id="092b661ba6e72b73027d8e3675fba552c7999588" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s pretty common to style form rows and fields that are required or have errors. For example, you might want to present required form rows in bold and highlight errors in red.</source>
          <target state="translated">Довольно часто стилизуют строки и поля формы, которые являются обязательными или имеют ошибки. Например, вы можете представить требуемые строки формы жирным шрифтом и выделить ошибки красным цветом.</target>
        </trans-unit>
        <trans-unit id="116a53426c08ab9c723625b82855ecdb65d734a3" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s recommended to leave the &lt;a href=&quot;../../ref/settings#std:setting-SESSION_COOKIE_HTTPONLY&quot;&gt;&lt;code&gt;SESSION_COOKIE_HTTPONLY&lt;/code&gt;&lt;/a&gt; setting on &lt;code&gt;True&lt;/code&gt; to prevent access to the stored data from JavaScript.</source>
          <target state="translated">Рекомендуется оставить для параметра &lt;a href=&quot;../../ref/settings#std:setting-SESSION_COOKIE_HTTPONLY&quot;&gt; &lt;code&gt;SESSION_COOKIE_HTTPONLY&lt;/code&gt; &lt;/a&gt; значение &lt;code&gt;True&lt;/code&gt; , чтобы предотвратить доступ к хранимым данным из JavaScript.</target>
        </trans-unit>
        <trans-unit id="2f926096c05f4b08baaf98d68511f1fb871d7cc9" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s required for preserving APIs that rely on a globally available, implicitly configured engine. Any other use is strongly discouraged.</source>
          <target state="translated">Это требуется для сохранения API, которые полагаются на глобально доступный, неявно настроенный механизм. Любое другое использование настоятельно не рекомендуется.</target>
        </trans-unit>
        <trans-unit id="9c61e8f05c6a50e700712ba22de1bb672bbabc15" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s safe to use this filter on a string that has already gone through the &lt;a href=&quot;#std:templatefilter-urlencode&quot;&gt;&lt;code&gt;urlencode&lt;/code&gt;&lt;/a&gt; filter.</source>
          <target state="translated">Безопасно использовать этот фильтр для строки, которая уже прошла фильтр &lt;a href=&quot;#std:templatefilter-urlencode&quot;&gt; &lt;code&gt;urlencode&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="90004f94d411477597f8fcfc53e05fdd4c25bf29" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s sometimes useful to determine at startup time whether a piece of middleware should be used. In these cases, your middleware&amp;rsquo;s &lt;code&gt;__init__()&lt;/code&gt; method may raise &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.MiddlewareNotUsed&quot;&gt;&lt;code&gt;MiddlewareNotUsed&lt;/code&gt;&lt;/a&gt;. Django will then remove that middleware from the middleware process and log a debug message to the &lt;a href=&quot;../logging#django-request-logger&quot;&gt;django.request&lt;/a&gt; logger when &lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">Иногда полезно определить во время запуска, следует ли использовать часть промежуточного программного обеспечения. В этих случаях метод промежуточного программного обеспечения &lt;code&gt;__init__()&lt;/code&gt; может вызывать &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.MiddlewareNotUsed&quot;&gt; &lt;code&gt;MiddlewareNotUsed&lt;/code&gt; &lt;/a&gt; . Затем Django удалит это промежуточное ПО из процесса промежуточного ПО и &lt;a href=&quot;../logging#django-request-logger&quot;&gt;запишет&lt;/a&gt; сообщение об отладке в регистратор django.request, когда для параметра &lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt; установлено значение &lt;code&gt;True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="80aa528112e9e490aa5ed4ea2d9bc56ea614b01c" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s sometimes useful to pre-populate your database with hard-coded data when you&amp;rsquo;re first setting up an app. You can provide initial data with migrations or fixtures.</source>
          <target state="translated">Иногда полезно предварительно заполнить базу данных жестко закодированными данными при первой настройке приложения. Вы можете предоставить исходные данные с миграциями или приспособлениями.</target>
        </trans-unit>
        <trans-unit id="b5e2474881890462bed834b91681f711c82b24c9" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s suggested, but not required, that the name of a &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; field (&lt;code&gt;manufacturer&lt;/code&gt; in the example above) be the name of the model, lowercase. You can call the field whatever you want. For example:</source>
          <target state="translated">Предлагается, но не обязательно, чтобы имя поля &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;manufacturer&lt;/code&gt; в приведенном выше примере) было именем модели в нижнем регистре. Вы можете называть поле как хотите. Например:</target>
        </trans-unit>
        <trans-unit id="cabb5fa7a2f760c58a8cc5008d218d9760bd2a65" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s suggested, but not required, that the name of a &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; field (&lt;code&gt;manufacturer&lt;/code&gt; in the example above) be the name of the model, lowercase. You can, of course, call the field whatever you want. For example:</source>
          <target state="translated">Предполагается, но не обязательно, что имя поля &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;manufacturer&lt;/code&gt; в приведенном выше примере) будет именем модели в нижнем регистре. Вы можете, конечно, назвать поле как хотите. Например:</target>
        </trans-unit>
        <trans-unit id="22ccf51d0275c705c1c35c00156af244882b0ae3" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s suggested, but not required, that the name of a &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;toppings&lt;/code&gt; in the example above) be a plural describing the set of related model objects.</source>
          <target state="translated">Предполагается, но не обязательно, чтобы имя &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;toppings&lt;/code&gt; в приведенном выше примере) было множественным числом, описывающим набор связанных объектов модели.</target>
        </trans-unit>
        <trans-unit id="81b268cc70a442674129b98fc3845ba70970358f" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s tailored to the database you&amp;rsquo;re using, so database-specific field types such as &lt;code&gt;auto_increment&lt;/code&gt; (MySQL), &lt;code&gt;serial&lt;/code&gt; (PostgreSQL), or &lt;code&gt;integer
primary key autoincrement&lt;/code&gt; (SQLite) are handled for you automatically. Same goes for the quoting of field names &amp;ndash; e.g., using double quotes or single quotes.</source>
          <target state="translated">Он адаптирован к используемой вами базе данных, поэтому типы полей, специфичные для базы данных, такие как &lt;code&gt;auto_increment&lt;/code&gt; (MySQL), &lt;code&gt;serial&lt;/code&gt; (PostgreSQL) или &lt;code&gt;integer primary key autoincrement&lt;/code&gt; (SQLite), обрабатываются автоматически. То же самое касается цитирования имен полей - например, использование двойных или одинарных кавычек.</target>
        </trans-unit>
        <trans-unit id="36b04562da0b07d14aace68744d0353cd911e6bc" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s tempting to write the above query as:</source>
          <target state="translated">Соблазнительно написать вышеупомянутый запрос как:</target>
        </trans-unit>
        <trans-unit id="cfb033e6a7bb18748df2f3c0678baacc2715f25c" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s unlikely that you will want to interact directly with &lt;code&gt;SchemaEditor&lt;/code&gt; as a normal developer using Django, but if you want to write your own migration system, or have more advanced needs, it&amp;rsquo;s a lot nicer than writing SQL.</source>
          <target state="translated">Маловероятно, что вам захочется напрямую взаимодействовать со &lt;code&gt;SchemaEditor&lt;/code&gt; как обычным разработчиком, использующим Django, но если вы хотите написать собственную систему миграции или имеете более сложные потребности, это намного приятнее, чем написание SQL.</target>
        </trans-unit>
        <trans-unit id="6170244348e1c89e69f473c30e48d1cb65ebc165" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s unnecessary to force &lt;code&gt;Exists&lt;/code&gt; to refer to a single column, since the columns are discarded and a boolean result is returned. Similarly, since ordering is unimportant within an SQL &lt;code&gt;EXISTS&lt;/code&gt; subquery and would only degrade performance, it&amp;rsquo;s automatically removed.</source>
          <target state="translated">Нет необходимости заставлять &lt;code&gt;Exists&lt;/code&gt; ссылаться на один столбец, поскольку столбцы отбрасываются и возвращается логический результат. Точно так же, поскольку упорядочение не имеет значения в подзапросе SQL &lt;code&gt;EXISTS&lt;/code&gt; и будет только ухудшать производительность, оно автоматически удаляется.</target>
        </trans-unit>
        <trans-unit id="a28ef85bef282b391b1e7ce9e6a1cd15710ee46c" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s used both by Django&amp;rsquo;s development server and in production WSGI deployments.</source>
          <target state="translated">Он используется как сервером разработки Django, так и в рабочих развертываниях WSGI.</target>
        </trans-unit>
        <trans-unit id="20a9f7ce4d688ce13e435ce877c2781fa2a5fda9" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s used by the Django admin site, but you&amp;rsquo;re welcome to use it in your own code.</source>
          <target state="translated">Он используется сайтом администратора Django, но вы можете использовать его в своем собственном коде.</target>
        </trans-unit>
        <trans-unit id="453336f7b66590d003cde9e690939c83ac37a292" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s used to optimize Django&amp;rsquo;s own test suite, which contains hundreds of models but no relations between models in different applications.</source>
          <target state="translated">Он используется для оптимизации собственного набора тестов Django, который содержит сотни моделей, но не имеет отношения между моделями в различных приложениях.</target>
        </trans-unit>
        <trans-unit id="f92418ae3af49ec5210634e2bdaff7e544f90cc5" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s worth repeating: &lt;strong&gt;reaching for alternatives to software you&amp;rsquo;re already using is never the first answer to performance problems&lt;/strong&gt;. When you reach this level of optimization, you need a formal benchmarking solution.</source>
          <target state="translated">Стоит повторить: &lt;strong&gt;поиск альтернатив уже используемому программному обеспечению никогда не является первым решением проблем с производительностью&lt;/strong&gt; . Когда вы достигнете этого уровня оптимизации, вам понадобится формальное решение для сравнительного анализа.</target>
        </trans-unit>
        <trans-unit id="73248e57635e9c9598528380f77d494c9f3a9bef" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s your responsibility to provide the html for the login template , called &lt;code&gt;registration/login.html&lt;/code&gt; by default. This template gets passed four template context variables:</source>
          <target state="translated">Вы &lt;code&gt;registration/login.html&lt;/code&gt; ответственность за предоставление html для шаблона входа, по умолчанию называемого registration / login.html . Этот шаблон получает четыре переменные контекста шаблона:</target>
        </trans-unit>
        <trans-unit id="6194af17afc43140b30fc03efe1a42a49325f5b3" translate="yes" xml:space="preserve">
          <source>Iterate over the file yielding &amp;ldquo;chunks&amp;rdquo; of a given size. &lt;code&gt;chunk_size&lt;/code&gt; defaults to 64 KB.</source>
          <target state="translated">Перебирайте файл, получая &amp;laquo;куски&amp;raquo; заданного размера. &lt;code&gt;chunk_size&lt;/code&gt; по умолчанию составляет 64 КБ.</target>
        </trans-unit>
        <trans-unit id="0de333b2cbf5d70dfa378153240a6390f38e295c" translate="yes" xml:space="preserve">
          <source>Iterate over the file yielding one line at a time.</source>
          <target state="translated">Итерация по файлу,давая по одной строке за раз.</target>
        </trans-unit>
        <trans-unit id="64181e92073030143f46bbc584cc34cdb69c2178" translate="yes" xml:space="preserve">
          <source>Iterates over the points in a &lt;a href=&quot;#django.contrib.gis.gdal.LineString&quot;&gt;&lt;code&gt;LineString&lt;/code&gt;&lt;/a&gt;, the rings in a &lt;a href=&quot;#django.contrib.gis.gdal.Polygon&quot;&gt;&lt;code&gt;Polygon&lt;/code&gt;&lt;/a&gt;, or the geometries in a &lt;a href=&quot;#django.contrib.gis.gdal.GeometryCollection&quot;&gt;&lt;code&gt;GeometryCollection&lt;/code&gt;&lt;/a&gt;. Not applicable to other geometry types.</source>
          <target state="translated">Перебирает точки в &lt;a href=&quot;#django.contrib.gis.gdal.LineString&quot;&gt; &lt;code&gt;LineString&lt;/code&gt; &lt;/a&gt; , кольцах в &lt;a href=&quot;#django.contrib.gis.gdal.Polygon&quot;&gt; &lt;code&gt;Polygon&lt;/code&gt; &lt;/a&gt; или геометрии в &lt;a href=&quot;#django.contrib.gis.gdal.GeometryCollection&quot;&gt; &lt;code&gt;GeometryCollection&lt;/code&gt; &lt;/a&gt; . Не применимо к другим типам геометрии.</target>
        </trans-unit>
        <trans-unit id="3128c83b0869b9fd38f7441368e4805f2bc3963b" translate="yes" xml:space="preserve">
          <source>Iterating over a formset will render the forms in the order they were created. You can change this order by providing an alternate implementation for the &lt;code&gt;__iter__()&lt;/code&gt; method.</source>
          <target state="translated">Итерирование по набору форм будет отображать формы в порядке их создания. Вы можете изменить этот порядок, предоставив альтернативную реализацию для &lt;code&gt;__iter__()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f3c1b17abaffb29dddff6f5f30f721f95ee3092" translate="yes" xml:space="preserve">
          <source>Iterating relationship choices</source>
          <target state="translated">Итерационный выбор отношений</target>
        </trans-unit>
        <trans-unit id="6f479cac5e7c5d3ad5f478dcb761f931ee9c46cf" translate="yes" xml:space="preserve">
          <source>Its default &lt;code&gt;Content-Type&lt;/code&gt; header is set to &lt;code&gt;application/json&lt;/code&gt;.</source>
          <target state="translated">Его заголовок &lt;code&gt;Content-Type&lt;/code&gt; по умолчанию установлен на &lt;code&gt;application/json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ef72203a16f5dd6674a160c8f4b2342a36b91ae" translate="yes" xml:space="preserve">
          <source>Its default &lt;code&gt;Content-Type&lt;/code&gt; header is set to &lt;em&gt;application/json&lt;/em&gt;.</source>
          <target state="translated">Его заголовок &lt;code&gt;Content-Type&lt;/code&gt; по умолчанию установлен на &lt;em&gt;application / json&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="3c9c5647ed1e6b7f5146c076bc141e3b0a23011d" translate="yes" xml:space="preserve">
          <source>Its default implementation returns &lt;a href=&quot;#django.contrib.admin.ModelAdmin.sortable_by&quot;&gt;&lt;code&gt;sortable_by&lt;/code&gt;&lt;/a&gt; if it&amp;rsquo;s set, otherwise it defers to &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_list_display&quot;&gt;&lt;code&gt;get_list_display()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Его реализация по умолчанию возвращает &lt;a href=&quot;#django.contrib.admin.ModelAdmin.sortable_by&quot;&gt; &lt;code&gt;sortable_by&lt;/code&gt; ,&lt;/a&gt; если она установлена, в противном случае она откладывается до &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_list_display&quot;&gt; &lt;code&gt;get_list_display()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">JSON</target>
        </trans-unit>
        <trans-unit id="fcf29f6cad3232704b33e962ef5194fad3b6817b" translate="yes" xml:space="preserve">
          <source>Japan</source>
          <target state="translated">Japan</target>
        </trans-unit>
        <trans-unit id="3e794545b69f251b3029e4944b37bdd0893d7ebc" translate="yes" xml:space="preserve">
          <source>JavaScript code doesn&amp;rsquo;t have access to &lt;code&gt;.po&lt;/code&gt; or &lt;code&gt;.mo&lt;/code&gt; files; they need to be delivered by the server.</source>
          <target state="translated">Код JavaScript не имеет доступа к файлам &lt;code&gt;.po&lt;/code&gt; или &lt;code&gt;.mo&lt;/code&gt; ; они должны быть доставлены сервером.</target>
        </trans-unit>
        <trans-unit id="16a7b6649b485d9113794ac7d0b0b25e428c33aa" translate="yes" xml:space="preserve">
          <source>JavaScript code doesn&amp;rsquo;t have access to a &lt;code&gt;gettext&lt;/code&gt; implementation.</source>
          <target state="translated">Код JavaScript не имеет доступа к реализации &lt;code&gt;gettext&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09dc489aa0b5f5532a33d3276d7a485bd5f67e2d" translate="yes" xml:space="preserve">
          <source>JavaScript customizations in the admin</source>
          <target state="translated">Настройки JavaScript у администратора</target>
        </trans-unit>
        <trans-unit id="fce39e0711bfdc751337a274c52d094f106ca490" translate="yes" xml:space="preserve">
          <source>Join chains can be as deep as you require. For example, to extract the age of the youngest author of any book available for sale, you could issue the query:</source>
          <target state="translated">Присоединительные цепи могут быть настолько глубокими,насколько вам это необходимо.Например,чтобы узнать возраст самого молодого автора любой книги,доступной в продаже,вы можете сделать запрос:</target>
        </trans-unit>
        <trans-unit id="369d197d5e95511bed79dd647091cfb1ff0732bf" translate="yes" xml:space="preserve">
          <source>Join the &lt;code&gt;#geodjango&lt;/code&gt; IRC channel on Freenode. Please be patient and polite &amp;ndash; while you may not get an immediate response, someone will attempt to answer your question as soon as they see it.</source>
          <target state="translated">Присоединяйтесь к IRC каналу &lt;code&gt;#geodjango&lt;/code&gt; на Freenode. Пожалуйста, будьте терпеливы и вежливы - хотя вы не можете получить немедленный ответ, кто-то попытается ответить на ваш вопрос, как только он его увидит.</target>
        </trans-unit>
        <trans-unit id="09ad30957afcec67d4756a8b85b0dff0032054c3" translate="yes" xml:space="preserve">
          <source>Joins a list with a string, like Python&amp;rsquo;s &lt;code&gt;str.join(list)&lt;/code&gt;</source>
          <target state="translated">Объединяет список со строкой, например, в Python &lt;code&gt;str.join(list)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d9d2e961ad458e7666b83ecad02e5ba87d5f28bf" translate="yes" xml:space="preserve">
          <source>Joins and aggregates</source>
          <target state="translated">Присоединения и агрегаты</target>
        </trans-unit>
        <trans-unit id="4414f263334ff3637fe5ef567af2d40056a830d8" translate="yes" xml:space="preserve">
          <source>Jumps you from any page to the documentation for the view that generates that page.</source>
          <target state="translated">Перемещает вас с любой страницы на документацию для вида,который генерирует эту страницу.</target>
        </trans-unit>
        <trans-unit id="ddc4426c8e81f8c006f5531c90d6d6f6c895431d" translate="yes" xml:space="preserve">
          <source>Just as &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt;&lt;code&gt;GenericForeignKey&lt;/code&gt;&lt;/a&gt; accepts the names of the content-type and object-ID fields as arguments, so too does &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericRelation&quot;&gt;&lt;code&gt;GenericRelation&lt;/code&gt;&lt;/a&gt;; if the model which has the generic foreign key is using non-default names for those fields, you must pass the names of the fields when setting up a &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericRelation&quot;&gt;&lt;code&gt;GenericRelation&lt;/code&gt;&lt;/a&gt; to it. For example, if the &lt;code&gt;TaggedItem&lt;/code&gt; model referred to above used fields named &lt;code&gt;content_type_fk&lt;/code&gt; and &lt;code&gt;object_primary_key&lt;/code&gt; to create its generic foreign key, then a &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericRelation&quot;&gt;&lt;code&gt;GenericRelation&lt;/code&gt;&lt;/a&gt; back to it would need to be defined like so:</source>
          <target state="translated">Так же, как &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt; &lt;code&gt;GenericForeignKey&lt;/code&gt; &lt;/a&gt; принимает имена полей content-type и object-ID в качестве аргументов, также и &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericRelation&quot;&gt; &lt;code&gt;GenericRelation&lt;/code&gt; &lt;/a&gt; ; если модель, имеющая общий внешний ключ, использует для этих полей имена не по умолчанию, вы должны передать им имена полей при настройке &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericRelation&quot;&gt; &lt;code&gt;GenericRelation&lt;/code&gt; &lt;/a&gt; . Например, если модель &lt;code&gt;TaggedItem&lt;/code&gt; , упомянутая выше, использовала поля с именами &lt;code&gt;content_type_fk&lt;/code&gt; и &lt;code&gt;object_primary_key&lt;/code&gt; для создания своего общего внешнего ключа, тогда &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericRelation&quot;&gt; &lt;code&gt;GenericRelation&lt;/code&gt; &lt;/a&gt; для нее необходимо определить следующим образом:</target>
        </trans-unit>
        <trans-unit id="1e413dffa03320c671fc31e6cb89283fb49b6d92" translate="yes" xml:space="preserve">
          <source>Just as the &lt;code&gt;login_required&lt;/code&gt; decorator, this mixin does NOT check the &lt;code&gt;is_active&lt;/code&gt; flag on a user, but the default &lt;a href=&quot;../../ref/settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt;&lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt;&lt;/a&gt; reject inactive users.</source>
          <target state="translated">Как и декоратор &lt;code&gt;login_required&lt;/code&gt; , этот миксин НЕ проверяет флаг &lt;code&gt;is_active&lt;/code&gt; для пользователя, но по умолчанию &lt;a href=&quot;../../ref/settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt; &lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt; &lt;/a&gt; отклоняет неактивных пользователей.</target>
        </trans-unit>
        <trans-unit id="de70aed3380b12491dedb45769ad91fb49e553be" translate="yes" xml:space="preserve">
          <source>Just as with Python&amp;rsquo;s subclassing, it&amp;rsquo;s possible for a Django model to inherit from multiple parent models. Keep in mind that normal Python name resolution rules apply. The first base class that a particular name (e.g. &lt;a href=&quot;#meta-options&quot;&gt;Meta&lt;/a&gt;) appears in will be the one that is used; for example, this means that if multiple parents contain a &lt;a href=&quot;#meta-options&quot;&gt;Meta&lt;/a&gt; class, only the first one is going to be used, and all others will be ignored.</source>
          <target state="translated">Как и в случае с подклассами Python, модель Django может наследоваться от нескольких родительских моделей. Имейте в виду, что применяются обычные правила разрешения имен Python. Первый базовый класс, в котором появляется определенное имя (например, &lt;a href=&quot;#meta-options&quot;&gt;Meta&lt;/a&gt; ), будет тем, который используется; например, это означает, что если несколько родителей содержат &lt;a href=&quot;#meta-options&quot;&gt;мета-&lt;/a&gt; класс, будет использоваться только первый, а все остальные будут игнорироваться.</target>
        </trans-unit>
        <trans-unit id="c4940cb973e951c23fc5b25e3c6c874837d4c5a9" translate="yes" xml:space="preserve">
          <source>Just be aware that this logic will disable the signals whenever fixtures are deserialized, not just during &lt;code&gt;loaddata&lt;/code&gt;.</source>
          <target state="translated">Просто имейте в виду, что эта логика будет отключать сигналы при десериализации приборов, а не только во время &lt;code&gt;loaddata&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ddab42e3dcb6c903e2f4186535cb27873150c70a" translate="yes" xml:space="preserve">
          <source>Just for completeness, these are the corresponding fragments of the resulting &lt;code&gt;.po&lt;/code&gt; file:</source>
          <target state="translated">Просто для полноты, это соответствующие фрагменты полученного файла &lt;code&gt;.po&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="01310d24cc2563fbb23357235b729b519dca1534" translate="yes" xml:space="preserve">
          <source>Just for completeness, this is the corresponding fragment of the resulting &lt;code&gt;.po&lt;/code&gt; file:</source>
          <target state="translated">Просто для полноты, это соответствующий фрагмент полученного файла &lt;code&gt;.po&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e6cf235d242effb3cde80d1d3c4a76eb03cbc760" translate="yes" xml:space="preserve">
          <source>Just like &lt;a href=&quot;#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#django.contrib.admin.AdminSite&quot;&gt;&lt;code&gt;AdminSite&lt;/code&gt;&lt;/a&gt; provides a &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_urls&quot;&gt;&lt;code&gt;get_urls()&lt;/code&gt;&lt;/a&gt; method that can be overridden to define additional views for the site. To add a new view to your admin site, extend the base &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_urls&quot;&gt;&lt;code&gt;get_urls()&lt;/code&gt;&lt;/a&gt; method to include a pattern for your new view.</source>
          <target state="translated">Так же , как &lt;a href=&quot;#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#django.contrib.admin.AdminSite&quot;&gt; &lt;code&gt;AdminSite&lt;/code&gt; &lt;/a&gt; обеспечивает &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_urls&quot;&gt; &lt;code&gt;get_urls()&lt;/code&gt; &lt;/a&gt; метод , который может быть преодолен , чтобы определить дополнительные виды для сайта. Чтобы добавить новое представление на ваш сайт администратора, расширьте базовый &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_urls&quot;&gt; &lt;code&gt;get_urls()&lt;/code&gt; &lt;/a&gt; чтобы включить шаблон для вашего нового представления.</target>
        </trans-unit>
        <trans-unit id="1958cb9d96b5b5be5f6e75b1b2cd4481da5abfe0" translate="yes" xml:space="preserve">
          <source>Just like &lt;code&gt;remove()&lt;/code&gt;, &lt;code&gt;clear()&lt;/code&gt; is only available on &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;s where &lt;code&gt;null=True&lt;/code&gt; and it also accepts the &lt;code&gt;bulk&lt;/code&gt; keyword argument.</source>
          <target state="translated">Как и &lt;code&gt;remove()&lt;/code&gt; , &lt;code&gt;clear()&lt;/code&gt; доступна только для &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; ,&lt;/a&gt; где &lt;code&gt;null=True&lt;/code&gt; , и она также принимает аргумент &lt;code&gt;bulk&lt;/code&gt; ключевого слова.</target>
        </trans-unit>
        <trans-unit id="1e99592c259163ce6dbd69040fb145ee105a4073" translate="yes" xml:space="preserve">
          <source>Just like a &lt;a href=&quot;#django.forms.ChoiceField&quot;&gt;&lt;code&gt;ChoiceField&lt;/code&gt;&lt;/a&gt;, except &lt;a href=&quot;#django.forms.TypedChoiceField&quot;&gt;&lt;code&gt;TypedChoiceField&lt;/code&gt;&lt;/a&gt; takes two extra arguments, &lt;a href=&quot;#django.forms.TypedChoiceField.coerce&quot;&gt;&lt;code&gt;coerce&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.forms.TypedChoiceField.empty_value&quot;&gt;&lt;code&gt;empty_value&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Так же , как &lt;a href=&quot;#django.forms.ChoiceField&quot;&gt; &lt;code&gt;ChoiceField&lt;/code&gt; &lt;/a&gt; , за исключением &lt;a href=&quot;#django.forms.TypedChoiceField&quot;&gt; &lt;code&gt;TypedChoiceField&lt;/code&gt; &lt;/a&gt; принимает два дополнительных аргумента, &lt;a href=&quot;#django.forms.TypedChoiceField.coerce&quot;&gt; &lt;code&gt;coerce&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#django.forms.TypedChoiceField.empty_value&quot;&gt; &lt;code&gt;empty_value&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="22b0b87bee7c21e20da396fc1d6d1687daac3247" translate="yes" xml:space="preserve">
          <source>Just like a &lt;a href=&quot;#django.forms.MultipleChoiceField&quot;&gt;&lt;code&gt;MultipleChoiceField&lt;/code&gt;&lt;/a&gt;, except &lt;a href=&quot;#django.forms.TypedMultipleChoiceField&quot;&gt;&lt;code&gt;TypedMultipleChoiceField&lt;/code&gt;&lt;/a&gt; takes two extra arguments, &lt;code&gt;coerce&lt;/code&gt; and &lt;code&gt;empty_value&lt;/code&gt;.</source>
          <target state="translated">Так же , как &lt;a href=&quot;#django.forms.MultipleChoiceField&quot;&gt; &lt;code&gt;MultipleChoiceField&lt;/code&gt; &lt;/a&gt; , за исключением &lt;a href=&quot;#django.forms.TypedMultipleChoiceField&quot;&gt; &lt;code&gt;TypedMultipleChoiceField&lt;/code&gt; &lt;/a&gt; принимает два дополнительных аргумента, &lt;code&gt;coerce&lt;/code&gt; и &lt;code&gt;empty_value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ce399875d14fc7e29388d5d484a88d69f11646e" translate="yes" xml:space="preserve">
          <source>Just like its parent, you can use it to write tests that involve running the code under test and consuming it with testing tools through HTTP (e.g. Selenium, PhantomJS, etc.), because of which it&amp;rsquo;s needed that the static assets are also published.</source>
          <target state="translated">Как и его родитель, вы можете использовать его для написания тестов, которые включают запуск тестируемого кода и использование его инструментами тестирования через HTTP (например, Selenium, PhantomJS и т. Д.), Из-за чего необходимо, чтобы статические ресурсы также публиковались.</target>
        </trans-unit>
        <trans-unit id="c3f6a81f08cd9496daefb06e9bff0b819aed3764" translate="yes" xml:space="preserve">
          <source>Just like normal form validation, model form validation is triggered implicitly when calling &lt;a href=&quot;../../ref/forms/api#django.forms.Form.is_valid&quot;&gt;&lt;code&gt;is_valid()&lt;/code&gt;&lt;/a&gt; or accessing the &lt;a href=&quot;../../ref/forms/api#django.forms.Form.errors&quot;&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/a&gt; attribute and explicitly when calling &lt;code&gt;full_clean()&lt;/code&gt;, although you will typically not use the latter method in practice.</source>
          <target state="translated">Как и при обычной проверке формы, проверка формы модели запускается неявно при вызове &lt;a href=&quot;../../ref/forms/api#django.forms.Form.is_valid&quot;&gt; &lt;code&gt;is_valid()&lt;/code&gt; &lt;/a&gt; или при обращении к атрибуту &lt;a href=&quot;../../ref/forms/api#django.forms.Form.errors&quot;&gt; &lt;code&gt;errors&lt;/code&gt; &lt;/a&gt; а также явно при вызове &lt;code&gt;full_clean()&lt;/code&gt; , хотя обычно вы не будете использовать последний метод на практике.</target>
        </trans-unit>
        <trans-unit id="c06c66c76254d542b0c24ce243a1c9fe4392a7fb" translate="yes" xml:space="preserve">
          <source>Just like templates, we &lt;em&gt;might&lt;/em&gt; be able to get away with putting our static files directly in &lt;code&gt;polls/static&lt;/code&gt; (rather than creating another &lt;code&gt;polls&lt;/code&gt; subdirectory), but it would actually be a bad idea. Django will choose the first static file it finds whose name matches, and if you had a static file with the same name in a &lt;em&gt;different&lt;/em&gt; application, Django would be unable to distinguish between them. We need to be able to point Django at the right one, and the best way to ensure this is by &lt;em&gt;namespacing&lt;/em&gt; them. That is, by putting those static files inside &lt;em&gt;another&lt;/em&gt; directory named for the application itself.</source>
          <target state="translated">Как и шаблоны, мы &lt;em&gt;могли&lt;/em&gt; бы избежать размещения наших статических файлов непосредственно в &lt;code&gt;polls/static&lt;/code&gt; (вместо создания другого подкаталога &lt;code&gt;polls&lt;/code&gt; ), но на самом деле это была бы плохая идея. Django выберет первый найденный им статический файл, имя которого совпадает, и если бы у вас был статический файл с тем же именем в &lt;em&gt;другом&lt;/em&gt; приложении, Django не смог бы их различить. Мы должны быть в состоянии указать Django на правильный путь, и лучший способ убедиться в этом - использовать &lt;em&gt;пространство имен&lt;/em&gt; . То есть, поместив эти статические файлы в &lt;em&gt;другой&lt;/em&gt; каталог, названный для самого приложения.</target>
        </trans-unit>
        <trans-unit id="7505f9431a0039955176ba7cfd1b33e5b3abbe7f" translate="yes" xml:space="preserve">
          <source>Just like the &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.has_perm&quot;&gt;&lt;code&gt;has_perm()&lt;/code&gt;&lt;/a&gt; method, permission names take the form &lt;code&gt;&quot;&amp;lt;app label&amp;gt;.&amp;lt;permission codename&amp;gt;&quot;&lt;/code&gt; (i.e. &lt;code&gt;polls.add_choice&lt;/code&gt; for a permission on a model in the &lt;code&gt;polls&lt;/code&gt; application).</source>
          <target state="translated">Как и в &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.has_perm&quot;&gt; &lt;code&gt;has_perm()&lt;/code&gt; &lt;/a&gt; методом has_perm () , имена разрешений имеют форму &lt;code&gt;&quot;&amp;lt;app label&amp;gt;.&amp;lt;permission codename&amp;gt;&quot;&lt;/code&gt; (т. &lt;code&gt;polls.add_choice&lt;/code&gt; для разрешения модели в приложении для &lt;code&gt;polls&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9c7289d3c27d2fa895a412e9d11cd8822f7f37b6" translate="yes" xml:space="preserve">
          <source>Just like the &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.has_perm&quot;&gt;&lt;code&gt;has_perm()&lt;/code&gt;&lt;/a&gt; method, permission names take the form &lt;code&gt;&quot;&amp;lt;app label&amp;gt;.&amp;lt;permission codename&amp;gt;&quot;&lt;/code&gt; (i.e. &lt;code&gt;polls.can_vote&lt;/code&gt; for a permission on a model in the &lt;code&gt;polls&lt;/code&gt; application).</source>
          <target state="translated">Как и метод &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.has_perm&quot;&gt; &lt;code&gt;has_perm()&lt;/code&gt; &lt;/a&gt; , имена разрешений принимают форму &lt;code&gt;&quot;&amp;lt;app label&amp;gt;.&amp;lt;permission codename&amp;gt;&quot;&lt;/code&gt; (т. &lt;code&gt;polls.can_vote&lt;/code&gt; для разрешения модели в приложении &lt;code&gt;polls&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="83d2469802382e4391a866a9fb73e4fc396b25f5" translate="yes" xml:space="preserve">
          <source>Just like the static files, we &lt;em&gt;could&lt;/em&gt; have all our templates together, in one big templates directory, and it would work perfectly well. However, templates that belong to a particular application should be placed in that application&amp;rsquo;s template directory (e.g. &lt;code&gt;polls/templates&lt;/code&gt;) rather than the project&amp;rsquo;s (&lt;code&gt;templates&lt;/code&gt;). We&amp;rsquo;ll discuss in more detail in the &lt;a href=&quot;reusable-apps&quot;&gt;reusable apps tutorial&lt;/a&gt;&lt;em&gt;why&lt;/em&gt; we do this.</source>
          <target state="translated">Так же , как статические файлы, мы &lt;em&gt;могли бы&lt;/em&gt; иметь все наши шаблоны вместе, в одной директории больших шаблонов, и он будет работать отлично. Однако шаблоны, которые принадлежат конкретному приложению, должны быть помещены в каталог шаблонов этого приложения (например, &lt;code&gt;polls/templates&lt;/code&gt; ), а не в проекте ( &lt;code&gt;templates&lt;/code&gt; ). Мы обсудим более подробно в &lt;a href=&quot;reusable-apps&quot;&gt;учебнике&lt;/a&gt; по повторно используемым приложениям, &lt;em&gt;почему&lt;/em&gt; мы делаем это.</target>
        </trans-unit>
        <trans-unit id="d9eb249d0ce5416cf8a379b2da632734988f8a3a" translate="yes" xml:space="preserve">
          <source>Just like when using a normal &lt;code&gt;Form&lt;/code&gt;, each field in a formset&amp;rsquo;s forms may include HTML attributes such as &lt;code&gt;maxlength&lt;/code&gt; for browser validation. However, form fields of formsets won&amp;rsquo;t include the &lt;code&gt;required&lt;/code&gt; attribute as that validation may be incorrect when adding and deleting forms.</source>
          <target state="translated">Как и при использовании обычной &lt;code&gt;Form&lt;/code&gt; , каждое поле в формах набора форм может включать атрибуты HTML, такие как &lt;code&gt;maxlength&lt;/code&gt; для проверки браузера. Однако поля формы наборов форм не будут включать &lt;code&gt;required&lt;/code&gt; атрибут, поскольку эта проверка может быть неправильной при добавлении и удалении форм.</target>
        </trans-unit>
        <trans-unit id="d29395b2e5e9f3683720df2e4f68ed2605ac0624" translate="yes" xml:space="preserve">
          <source>Just like with &lt;a href=&quot;#translator-comments&quot;&gt;Python code&lt;/a&gt;, these notes for translators can be specified using comments, either with the &lt;a href=&quot;../../ref/templates/builtins#std:templatetag-comment&quot;&gt;&lt;code&gt;comment&lt;/code&gt;&lt;/a&gt; tag:</source>
          <target state="translated">Как и в &lt;a href=&quot;#translator-comments&quot;&gt;коде Python&lt;/a&gt; , эти примечания для переводчиков могут быть указаны с помощью комментариев, либо с тегом &lt;a href=&quot;../../ref/templates/builtins#std:templatetag-comment&quot;&gt; &lt;code&gt;comment&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="6840dc42a3514ed5409fad17eb45a2dde935b7fb" translate="yes" xml:space="preserve">
          <source>Just like with &lt;code&gt;ModelForms&lt;/code&gt;, by default the &lt;code&gt;clean()&lt;/code&gt; method of a &lt;code&gt;ModelFormSet&lt;/code&gt; will validate that none of the items in the formset violate the unique constraints on your model (either &lt;code&gt;unique&lt;/code&gt;, &lt;code&gt;unique_together&lt;/code&gt; or &lt;code&gt;unique_for_date|month|year&lt;/code&gt;). If you want to override the &lt;code&gt;clean()&lt;/code&gt; method on a &lt;code&gt;ModelFormSet&lt;/code&gt; and maintain this validation, you must call the parent class&amp;rsquo;s &lt;code&gt;clean&lt;/code&gt; method:</source>
          <target state="translated">Так же , как с &lt;code&gt;ModelForms&lt;/code&gt; , по умолчанию &lt;code&gt;clean()&lt;/code&gt; метод в &lt;code&gt;ModelFormSet&lt;/code&gt; не будет проверять , что ни один из элементов в formset нарушают уникальные ограничения на модели (либо &lt;code&gt;unique&lt;/code&gt; , &lt;code&gt;unique_together&lt;/code&gt; или &lt;code&gt;unique_for_date|month|year&lt;/code&gt; ). Если вы хотите переопределить метод &lt;code&gt;clean()&lt;/code&gt; в &lt;code&gt;ModelFormSet&lt;/code&gt; и сохранить эту проверку, вы должны вызвать метод &lt;code&gt;clean&lt;/code&gt; родительского класса :</target>
        </trans-unit>
        <trans-unit id="6abd3775005f0aef3b58a9511045767bf75536c1" translate="yes" xml:space="preserve">
          <source>Just like you would do in &lt;a href=&quot;../../ref/models/options#django.db.models.Options.verbose_name&quot;&gt;&lt;code&gt;verbose_name&lt;/code&gt;&lt;/a&gt; you should provide a lowercase verbose name text for the relation as Django will automatically titlecase it when required.</source>
          <target state="translated">Как и в случае с &lt;a href=&quot;../../ref/models/options#django.db.models.Options.verbose_name&quot;&gt; &lt;code&gt;verbose_name&lt;/code&gt; ,&lt;/a&gt; вы должны предоставить строчный подробный текст имени для отношения, так как Django будет автоматически указывать его в заголовке при необходимости.</target>
        </trans-unit>
        <trans-unit id="4552dc59351c35a92143d1798b6cb8566638b9ec" translate="yes" xml:space="preserve">
          <source>KML is an XML language focused on geographic visualization &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;. &lt;code&gt;KMLSitemap&lt;/code&gt; and its compressed counterpart &lt;code&gt;KMZSitemap&lt;/code&gt; allow you to present geolocated data in a machine-readable format.</source>
          <target state="translated">KML - это язык XML, ориентированный на географическую визуализацию &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; . &lt;code&gt;KMLSitemap&lt;/code&gt; и его сжатый аналог &lt;code&gt;KMZSitemap&lt;/code&gt; позволяют представлять геолокационные данные в машиночитаемом формате.</target>
        </trans-unit>
        <trans-unit id="b5d3425cd39c677fd086d00da0b180224309c02d" translate="yes" xml:space="preserve">
          <source>Keep and/or add any entries in this list if you need Django to &lt;a href=&quot;#password-upgrades&quot;&gt;upgrade passwords&lt;/a&gt;.</source>
          <target state="translated">Сохраните и / или добавьте любые записи в этом списке, если вам нужен Django для &lt;a href=&quot;#password-upgrades&quot;&gt;обновления паролей&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="742aa74832a6e4eeffec8dce24ca986cd98d8c09" translate="yes" xml:space="preserve">
          <source>Keep in mind that &lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt;&lt;code&gt;order_by()&lt;/code&gt;&lt;/a&gt; uses any default related model ordering that has been defined. You might have to explicitly order by the relation &lt;code&gt;_id&lt;/code&gt; or referenced field to make sure the &lt;code&gt;DISTINCT ON&lt;/code&gt; expressions match those at the beginning of the &lt;code&gt;ORDER BY&lt;/code&gt; clause. For example, if the &lt;code&gt;Blog&lt;/code&gt; model defined an &lt;a href=&quot;options#django.db.models.Options.ordering&quot;&gt;&lt;code&gt;ordering&lt;/code&gt;&lt;/a&gt; by &lt;code&gt;name&lt;/code&gt;:</source>
          <target state="translated">Имейте в виду, что &lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt; &lt;code&gt;order_by()&lt;/code&gt; &lt;/a&gt; использует любой связанный по умолчанию порядок модели, который был определен. Возможно, вам придется явно упорядочить по полю &lt;code&gt;_id&lt;/code&gt; или по указанному полю, чтобы убедиться, что выражения &lt;code&gt;DISTINCT ON&lt;/code&gt; совпадают с выражениями в начале предложения &lt;code&gt;ORDER BY&lt;/code&gt; . Например, если модель &lt;code&gt;Blog&lt;/code&gt; определила &lt;a href=&quot;options#django.db.models.Options.ordering&quot;&gt; &lt;code&gt;ordering&lt;/code&gt; &lt;/a&gt; по &lt;code&gt;name&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7459a01ee1258dd537399c8de7e686ccdee573bc" translate="yes" xml:space="preserve">
          <source>Keep in mind that each of these values can be an expression.</source>
          <target state="translated">Имейте в виду,что каждое из этих значений может быть выражением.</target>
        </trans-unit>
        <trans-unit id="16a533618d8eaf3b030222e4a118ed6bae06ff24" translate="yes" xml:space="preserve">
          <source>Keep in mind that for the dot operator, dictionary key lookup takes precedence over method lookup. Therefore if the &lt;code&gt;data&lt;/code&gt; dictionary contains a key named &lt;code&gt;'items'&lt;/code&gt;, &lt;code&gt;data.items&lt;/code&gt; will return &lt;code&gt;data['items']&lt;/code&gt; instead of &lt;code&gt;data.items()&lt;/code&gt;. Avoid adding keys that are named like dictionary methods if you want to use those methods in a template (&lt;code&gt;items&lt;/code&gt;, &lt;code&gt;values&lt;/code&gt;, &lt;code&gt;keys&lt;/code&gt;, etc.). Read more about the lookup order of the dot operator in the &lt;a href=&quot;language#template-variables&quot;&gt;documentation of template variables&lt;/a&gt;.</source>
          <target state="translated">Имейте в виду, что для оператора точки поиск по словарю имеет приоритет над поиском по методу. Поэтому, если словарь &lt;code&gt;data&lt;/code&gt; содержит ключ с именем &lt;code&gt;'items'&lt;/code&gt; , &lt;code&gt;data.items&lt;/code&gt; вернет &lt;code&gt;data['items']&lt;/code&gt; вместо &lt;code&gt;data.items()&lt;/code&gt; . Избегайте добавления ключей, которые называются как словарные методы, если вы хотите использовать эти методы в шаблоне ( &lt;code&gt;items&lt;/code&gt; , &lt;code&gt;values&lt;/code&gt; , &lt;code&gt;keys&lt;/code&gt; и т. Д.). Подробнее о порядке поиска оператора точки читайте в &lt;a href=&quot;language#template-variables&quot;&gt;документации по шаблонным переменным&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="77e9d273542c1bb70193eff1962287317d2800d3" translate="yes" xml:space="preserve">
          <source>Keep in mind that this will, whenever possible, be executed purely in SQL, and so the &lt;code&gt;delete()&lt;/code&gt; methods of individual object instances will not necessarily be called during the process. If you&amp;rsquo;ve provided a custom &lt;code&gt;delete()&lt;/code&gt; method on a model class and want to ensure that it is called, you will need to &amp;ldquo;manually&amp;rdquo; delete instances of that model (e.g., by iterating over a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; and calling &lt;code&gt;delete()&lt;/code&gt; on each object individually) rather than using the bulk &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; method of a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Имейте в виду, что это, по возможности, будет выполняться исключительно в SQL, и поэтому методы &lt;code&gt;delete()&lt;/code&gt; отдельных экземпляров объекта не обязательно будут вызываться во время процесса. Если вы предоставили пользовательский метод &lt;code&gt;delete()&lt;/code&gt; для класса модели и хотите, чтобы он вызывался, вам нужно будет &amp;laquo;вручную&amp;raquo; удалить экземпляры этой модели (например, путем итерации по &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; и вызова &lt;code&gt;delete()&lt;/code&gt; для каждый объект в отдельности) вместо использования метода массового &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt; объекта &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="83814bcad4f812320613b08460a501a47d3a6c5e" translate="yes" xml:space="preserve">
          <source>Keep this caching behavior in mind, because it may bite you if you don&amp;rsquo;t use your &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt;s correctly. For example, the following will create two &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt;s, evaluate them, and throw them away:</source>
          <target state="translated">Помните об этом поведении кэширования, потому что оно может вас укусить, если вы не правильно используете &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; . Например, следующее создаст два &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; , оценит их и выбросит:</target>
        </trans-unit>
        <trans-unit id="b24c7b24e7c1e67f6e64f8bbf3e3867d93a0e6c0" translate="yes" xml:space="preserve">
          <source>Keep this in mind when creating your own custom fields. The Django &lt;code&gt;Field&lt;/code&gt; subclass you write provides the machinery for converting between your Python instances and the database/serializer values in various ways (there are differences between storing a value and using a value for lookups, for example). If this sounds a bit tricky, don&amp;rsquo;t worry &amp;ndash; it will become clearer in the examples below. Just remember that you will often end up creating two classes when you want a custom field:</source>
          <target state="translated">Имейте это в виду при создании собственных полей. Подкласс Django &lt;code&gt;Field&lt;/code&gt; ,который вы пишете, предоставляет механизм для преобразования между вашими экземплярами Python и значениями базы данных / сериализатора различными способами (например, существуют различия между хранением значения и использованием значения для поиска). Если это звучит немного хитро, не волнуйтесь - это станет яснее в примерах ниже. Просто помните, что вы часто будете создавать два класса, когда захотите настраиваемое поле:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
